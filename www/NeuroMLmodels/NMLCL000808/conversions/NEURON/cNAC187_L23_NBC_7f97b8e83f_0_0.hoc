// Cell: cNAC187_L23_NBC_7f97b8e83f_0_0
/*
{
  "id" : "cNAC187_L23_NBC_7f97b8e83f_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-10.3022, -4.91444, 0.0966793, 4.52114", "-9.29583, -4.38505, 0.0928107, 5.29403", "-8.28943, -3.85565, 0.0889422, 6.87895", "-7.28303, -3.32626, 0.0850736, 8.2055", "-6.27664, -2.79687, 0.0812051, 9.69593", "-5.27024, -2.26748, 0.0773365, 11.1864", "-4.26385, -1.73809, 0.073468, 12.1576", "-3.25745, -1.20869, 0.0695994, 12.1028", "-2.25106, -0.679302, 0.0657309, 12.5691", "-1.24466, -0.14991, 0.0618623, 13.5271", "-0.238266, 0.379482, 0.0579938, 14.6432", "0.76813, 0.908874, 0.0541252, 15.6577", "1.77453, 1.43827, 0.0502567, 15.7754", "2.78092, 1.96766, 0.0463882, 15.433", "3.78732, 2.49705, 0.0425196, 14.9368", "4.79371, 3.02644, 0.0386511, 14.4352", "5.80011, 3.55583, 0.0347825, 13.7953", "6.8065, 4.08523, 0.030914, 12.9353", "7.8129, 4.61462, 0.0270454, 10.4207", "8.81929, 5.14401, 0.0231769, 6.43383", "9.82569, 5.6734, 0.0193083, 3.7421" ]
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "1.0327, 0.409899, 12.0695, 1.38", "2.1478, 2.95112, 7.28667, 1.38" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996128858968
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "4.5927, -1.17935, -10.1505, 1.66", "5.16845, -1.7774, -12.968, 1.66", "8.19321, -4.91929, -27.77, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996128858968
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-8.7473, 1.2094, 5.4595, 1.66", "-10.7646, 1.77659, 6.92507, 1.66", "-14.1027, 2.53445, 9.19291, 1.66", "-16.5858, 2.93199, 10.6197, 1.66", "-19.7043, 3.43125, 12.4114, 1.66", "-23.1473, 3.98245, 14.3896, 1.66", "-28.0077, 4.76059, 17.1822, 1.66", "-31.1642, 5.16539, 18.9961, 1.66", "-36.1362, 5.55987, 21.5777, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996128858968
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-10.3073, -5.8301, 1.9395, 2.77", "-13.5574, -6.69603, 0.789239, 2.77", "-18.968, -8.13758, -1.12565, 2.77", "-23.434, -9.3275, -2.70628, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996128858968
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-11.2873, -5.25485, 6.9695, 1.11", "-14.4176, -7.85054, 9.23542, 1.11", "-17.3195, -10.2321, 11.2551, 1.11", "-20.6595, -12.9778, 13.6001, 1.11", "-22.6418, -14.5762, 14.9692, 1.38", "-26.1224, -17.375, 17.5146, 0.83", "-28.9895, -19.7301, 19.7319, 1.11", "-30.1131, -20.7005, 20.6817, 1.11", "-32.7542, -22.9314, 22.9393, 1.11", "-33.9328, -23.9633, 24.0074, 1.11", "-36.3814, -26.2076, 26.4382, 1.11", "-37.7758, -27.5931, 27.8691, 1.11", "-38.6394, -28.5291, 28.797, 1.11", "-40.0563, -30.0617, 30.2668, 1.66", "-43.3942, -33.5445, 33.6505, 1.66", "-46.1348, -36.3886, 36.4318, 1.38", "-49.1129, -39.582, 39.3133, 1.38", "-51.2687, -41.9899, 41.4315, 1.38", "-53.8172, -45.0152, 44.1154, 1.11", "-55.9492, -47.6849, 46.49, 1.11", "-59.1455, -51.834, 50.2638, 1.11", "-62.5014, -56.3918, 54.4267, 0.83", "-64.5013, -59.2228, 57.0481, 0.83", "-67.4444, -63.5959, 60.9468, 1.38", "-69.0295, -66.1074, 63.0848, 1.38", "-70.7762, -68.9414, 65.3969, 0.83", "-72.4389, -71.5681, 67.5072, 0.83", "-73.6529, -73.4488, 69.0371, 1.11", "-75.1509, -75.7317, 70.799, 0.83", "-76.4728, -77.6984, 72.2446, 1.11", "-77.675, -79.496, 73.5791, 0.55", "-79.0162, -81.4849, 75.0376, 1.11", "-80.5611, -83.7242, 76.7505, 0.55", "-81.9897, -85.7252, 78.285, 1.94", "-83.9048, -88.3939, 80.373, 0.55", "-85.0908, -90.0686, 81.7013, 0.55", "-86.5245, -92.1876, 83.3595, 0.55", "-87.8464, -94.3304, 85.0113, 1.11", "-89.7779, -97.8239, 87.4547, 0.28", "-90.3688, -99.0947, 88.1929, 1.11", "-91.3319, -101.805, 89.7479, 0.28", "-91.6533, -103.034, 90.4747, 0.55", "-92.0962, -105.284, 91.909, 0.28", "-92.3143, -106.644, 92.749, 0.28", "-92.704, -109.696, 94.6187, 1.66", "-93.4784, -115.24, 97.9875, 0.28", "-93.7739, -117.256, 99.2126, 0.28", "-94.1225, -119.339, 100.601, 0.83", "-94.5817, -121.97, 102.556, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996128858968,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-3.7273, -6.1031, 11.6495, 2.77", "-4.11187, -7.33734, 11.6495, 2.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996128858968
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "8.6827, -2.66135, 1.6195, 2.49", "10.3356, -3.401, 1.86014, 2.22", "12.9654, -4.57773, 2.24299, 2.22", "14.6665, -5.339, 2.49066, 2.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996128858968
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "6.0827, 8.4244, -4.97829E-4, 2.22", "6.26121, 10.2258, -0.573618, 2.22", "6.4949, 12.5843, -1.32394, 2.22", "6.73511, 15.0086, -2.09517, 2.22", "7.10678, 18.7595, -3.28848, 2.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996128858968
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "9.82569, 5.6734, 0.0193083, 0.831076", "23.101, 12.6566, 0.0193083, 0.831076", "36.3764, 19.6398, 0.0193083, 0.831076" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "2.1478, 2.95112, 7.28667, 0.83", "0.42656, 8.77838, 5.64714, 0.83", "-0.428397, 11.6355, 4.91253, 0.83", "-1.06009, 13.7025, 4.39116, 0.83", "-1.50201, 15.0768, 4.05677, 1.38", "-2.65921, 18.5257, 3.39683, 0.83", "-3.48304, 20.9811, 2.92702, 1.38", "-4.81491, 24.5062, 2.56361, 0.83", "-6.19536, 28.027, 2.23267, 0.83", "-6.7898, 29.4679, 2.12664, 0.83", "-7.82266, 32.0997, 1.879, 1.94" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "2.1478, 2.95112, 7.28667, 1.38", "4.0014, 4.99385, 9.64641, 1.38", "6.38041, 7.6156, 12.6751, 1.38", "8.59375, 10.0547, 15.4928, 1.66" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "8.19321, -4.91929, -27.77, 0.83", "7.97142, -2.38703, -33.9026, 0.83", "7.82428, -0.707087, -37.971, 0.83", "7.63839, 1.41524, -43.1108, 0.83", "7.57939, 2.0889, -44.7422, 0.55", "7.40624, 4.06568, -49.5295, 0.55", "7.24991, 5.85054, -53.8521, 0.55", "6.61207, 9.89755, -63.9492, 0.55", "4.86544, 15.4549, -73.1068, 0.55", "4.17193, 20.6404, -82.6341, 0.55", "4.58908, 28.0395, -90.5034, 0.55", "6.8295, 36.8036, -96.3595, 0.55", "9.50495, 44.8201, -103.093, 0.55", "14.6158, 51.8308, -109.617, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "8.19321, -4.91929, -27.77, 1.66", "7.86372, -7.05184, -29.9624, 1.66", "7.57815, -8.90013, -31.8626, 1.11" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-36.1362, 5.55987, 21.5777, 0.55", "-37.6004, 5.07369, 21.8025, 0.55", "-41.499, 3.69691, 22.3436, 0.55", "-42.2039, 3.46571, 22.428, 0.55", "-44.1599, 2.86878, 22.6367, 0.55", "-44.7006, 2.70092, 22.6916, 0.83", "-46.7541, 2.03716, 22.9327, 0.55", "-48.9277, 1.29856, 23.1842, 1.11", "-51.3503, 0.457867, 23.4561, 0.55", "-52.9581, -0.110895, 23.5932, 1.94", "-54.4233, -0.609429, 23.6734, 1.94", "-56.188, -1.19699, 23.7278, 0.55", "-57.2592, -1.5821, 23.698, 0.55", "-58.9846, -2.20526, 23.5603, 0.28", "-60.7277, -2.83259, 23.3206, 1.94", "-63.2403, -3.64873, 22.8826, 0.55", "-64.0004, -3.87561, 22.739, 1.66", "-66.8158, -4.61921, 22.1266, 0.55", "-68.5773, -5.02479, 21.7839, 1.11", "-71.312, -5.5917, 21.2858, 0.55", "-72.5363, -5.82078, 21.1028, 0.55", "-73.8531, -6.04929, 20.9277, 1.38", "-77.9711, -6.69708, 20.4765, 0.28", "-82.0903, -7.25252, 20.1483, 0.28", "-83.1194, -7.39301, 20.0811, 1.38", "-86.6414, -7.88599, 19.9286, 0.28", "-88.6346, -8.16732, 19.8512, 0.83", "-89.9391, -8.3368, 19.8132, 0.28", "-91.7607, -8.59283, 19.8615, 0.55", "-92.9566, -8.76393, 19.908, 0.28", "-94.4928, -8.97232, 20.0048, 1.94" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-36.1362, 5.55987, 21.5777, 0.83", "-41.1856, 5.42844, 23.9668, 0.83", "-44.416, 5.40812, 25.2857, 1.66", "-47.3171, 5.46799, 26.3455, 1.11", "-50.3255, 5.61419, 27.3428, 1.11", "-53.5929, 5.94611, 28.3771, 1.11", "-56.3232, 6.29129, 29.2433, 1.11", "-58.6621, 6.68384, 29.8715, 0.83", "-61.3218, 7.2192, 30.5985, 1.11", "-63.9104, 7.79676, 31.4074, 1.38", "-68.7453, 8.92559, 33.2159, 0.55", "-70.8096, 9.40787, 34.0882, 0.55", "-73.4642, 9.96815, 35.2643, 0.55", "-76.1814, 10.4661, 36.5536, 1.66", "-79.0108, 10.8618, 37.9418, 1.66", "-82.7726, 11.2253, 39.781, 1.11", "-85.1003, 11.3374, 40.9211, 1.66", "-88.3784, 11.4808, 42.5746, 0.83", "-90.6371, 11.5289, 43.7111, 1.11", "-92.3036, 11.5273, 44.5514, 0.55", "-94.5237, 11.43, 45.5952, 0.83", "-96.8671, 11.1655, 46.6918, 1.38", "-99.5229, 10.6644, 48.1506, 0.55", "-101.053, 10.1889, 49.2681, 0.55", "-101.649, 9.93365, 49.75, 0.28", "-102.83, 9.29679, 50.8312, 0.55", "-105.249, 7.77104, 53.2755, 0.28", "-106.988, 6.59712, 55.1015, 1.66", "-110.544, 4.10672, 58.9947, 0.28", "-111.267, 3.65061, 59.8445, 1.11", "-113.054, 2.6475, 62.0116, 0.28", "-114.099, 2.17109, 63.3912, 0.83", "-115.703, 1.64336, 65.5434, 0.28", "-116.156, 1.54299, 66.1523, 0.83", "-118.734, 1.24025, 69.6861, 0.28", "-119.91, 1.19349, 71.3215, 1.66", "-123.285, 1.22153, 75.9638, 0.55", "-124.559, 1.25362, 77.6741, 0.28", "-126.049, 1.31745, 79.6005, 1.11", "-127.965, 1.36162, 81.9162, 0.55", "-129.936, 1.35087, 84.0748, 0.55", "-131.664, 1.28365, 85.784, 1.11", "-134.568, 1.05477, 88.3848, 0.28", "-135.363, 0.923396, 89.0934, 0.28", "-138.109, 0.168254, 91.5285, 1.38", "-141.024, -1.0203, 94.0934, 0.55", "-142.526, -1.8741, 95.4501, 0.28", "-143.586, -2.65627, 96.4109, 1.11", "-146.156, -4.94926, 98.6934, 0.28", "-147.756, -6.54207, 100.138, 1.38", "-149.273, -8.25166, 101.515, 0.55", "-150.543, -9.87023, 102.678, 1.11", "-152.297, -12.2223, 104.288, 0.28", "-153.711, -14.1575, 105.497, 0.28", "-155.105, -15.9921, 106.57, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-23.434, -9.3275, -2.70628, 1.38", "-27.389, -9.32218, -2.95695, 1.38", "-29.343, -9.24595, -3.29724, 1.38", "-34.769, -8.73824, -4.2565, 1.38", "-36.6629, -8.45743, -4.59046, 1.38", "-38.9048, -8.01112, -4.97148, 1.11", "-41.403, -7.4235, -5.30388, 1.11", "-47.0684, -5.72476, -6.0672, 1.11", "-50.1374, -4.60186, -6.42951, 1.11", "-53.7933, -3.0111, -6.82873, 0.83", "-56.902, -1.561, -7.1284, 0.83", "-59.9499, -0.0834551, -7.35734, 1.38", "-62.1128, 0.988886, -7.47723, 0.55", "-64.1651, 2.04822, -7.54466, 0.55", "-66.5947, 3.22184, -7.72154, 0.55", "-69.1371, 4.38395, -7.95827, 1.66", "-71.8687, 5.55781, -8.30966, 0.55", "-73.1035, 6.16608, -8.5837, 1.11", "-75.7973, 7.73082, -9.31907, 0.55", "-77.06, 8.65608, -9.76968, 0.83", "-78.2267, 9.63535, -10.2719, 0.28", "-79.4879, 10.825, -10.9105, 0.83", "-83.5269, 15.1211, -13.2996, 0.28", "-85.0941, 16.9504, -14.245, 1.11", "-87.4996, 20.0966, -15.6189, 0.55", "-89.1418, 22.4229, -16.4738, 2.22", "-90.3488, 24.2338, -17.0321, 0.55", "-92.2838, 27.2818, -17.9066, 0.28", "-93.5401, 29.2327, -18.3346, 0.83", "-95.813, 32.8349, -19.0009, 0.28", "-96.2278, 33.5325, -19.1004, 1.94", "-97.041, 35.1015, -19.2859, 0.55", "-99.0166, 39.154, -19.7292, 0.28", "-99.9238, 41.0066, -20.0037, 0.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-23.434, -9.3275, -2.70628, 1.66", "-25.1791, -13.8715, -1.11042, 1.66", "-27.8152, -20.7356, 1.3003, 1.66", "-31.4015, -30.0739, 4.57995, 1.66", "-33.4095, -35.3027, 6.41631, 1.66" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-4.11187, -7.33734, 11.6495, 0.83", "-3.32755, -6.84594, 14.7159, 0.83", "-2.06498, -5.82786, 19.8355, 0.83", "-1.23474, -5.15841, 23.202, 0.83", "-0.449856, -4.52551, 26.3846, 0.83", "0.59821, -3.68041, 30.6344, 0.83", "0.95089, -3.39602, 32.0645, 1.38", "0.99227, -3.31616, 32.3284, 1.38" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "14.6665, -5.339, 2.49066, 0.83", "19.7535, -6.93139, 2.59524, 0.83", "24.6616, -8.41954, 2.87191, 0.83", "31.0052, -10.4009, 3.17393, 0.83", "35.8138, -11.968, 3.36945, 0.83", "38.9035, -12.9734, 3.53944, 1.11", "41.2558, -13.751, 3.7127, 0.83", "44.3205, -14.7073, 4.1372, 1.11", "46.8438, -15.5206, 4.57067, 1.11", "50.6339, -17.0847, 5.33442, 0.83", "53.6727, -18.6435, 5.8877, 0.83", "55.208, -19.547, 6.1108, 0.83", "58.1918, -21.4508, 6.52199, 1.38", "60.3679, -22.9634, 6.84045, 0.83", "62.5445, -24.5343, 7.15846, 0.83", "64.548, -25.9767, 7.40764, 0.55", "66.265, -27.1642, 7.56075, 0.83", "68.5717, -28.6704, 7.73024, 0.83", "70.7269, -29.9858, 7.92798, 0.83", "73.425, -31.5403, 8.23131, 0.83", "78.4261, -34.323, 8.9083, 0.83", "80.8371, -35.6291, 9.26849, 1.11", "83.5551, -37.0199, 9.66449, 1.11", "86.0509, -38.2899, 9.87921, 0.55", "86.8331, -38.6821, 9.93773, 0.55", "89.3053, -40.055, 10.0547, 1.11", "91.2572, -41.2199, 9.9749, 0.55", "92.9738, -42.2433, 9.80984, 0.55", "96.7166, -44.2909, 9.03105, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "14.6665, -5.339, 2.49066, 0.83", "16.1124, -5.69735, 4.58282, 0.83", "19.5444, -6.54798, 9.54907, 0.83", "21.7409, -7.09233, 12.7272, 0.83", "22.9016, -7.38003, 14.4069, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "7.10678, 18.7595, -3.28848, 1.38", "5.08275, 20.8003, -3.05666, 1.38", "3.11506, 22.7843, -2.83129, 1.38" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "7.10678, 18.7595, -3.28848, 1.94", "10.2304, 21.5612, -4.78579, 1.94", "11.5014, 22.7013, -5.39507, 1.94" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "36.3764, 19.6398, 0.0193083, 0.55", "49.6517, 26.623, 0.0193083, 0.55", "62.9271, 33.6062, 0.0193083, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-7.82266, 32.0997, 1.879, 0.83", "-10.3183, 32.4879, 0.388696, 0.83", "-13.8119, 33.0313, -1.69753, 0.83" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-7.82266, 32.0997, 1.879, 0.55", "-7.65322, 34.7117, 1.80604, 0.55", "-7.50618, 35.9423, 1.79713, 0.55", "-7.28536, 37.496, 1.79841, 1.11", "-6.86336, 40.6162, 1.81151, 0.83", "-6.69249, 41.9393, 1.81203, 0.28", "-6.58827, 42.6555, 1.80495, 0.83", "-6.29883, 44.3964, 1.75046, 0.28", "-5.97418, 46.1262, 1.70234, 0.83", "-5.66086, 47.5861, 1.66853, 0.28", "-5.2305, 49.6472, 1.63931, 1.38", "-5.01581, 50.875, 1.61785, 0.28", "-4.9328, 51.4253, 1.59677, 0.83" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "8.59375, 10.0547, 15.4928, 0.83", "12.4209, 12.3045, 21.4874, 0.83", "14.3039, 13.5703, 24.4852, 0.83", "16.1017, 14.9354, 27.257, 1.38", "18.5038, 17.0552, 31.1313, 1.11", "19.8433, 18.3453, 33.2801, 1.11", "20.6173, 19.1395, 34.4972, 1.11", "22.5779, 21.4618, 37.6252, 0.83", "24.3316, 23.6305, 40.1707, 1.11", "26.0124, 25.732, 42.4173, 0.55", "26.868, 26.8766, 43.536, 1.11", "28.8755, 29.6403, 46.1794, 1.11", "31.4044, 32.9928, 49.4488, 1.66", "34.0975, 36.2467, 52.7623, 0.83", "35.5583, 37.893, 54.5319, 1.66" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "14.6158, 51.8308, -109.617, 0.28", "15.0647, 58.2287, -119.111, 0.28", "16.4895, 63.7536, -129.084, 0.28", "17.911, 69.6846, -138.811, 0.28", "17.1649, 76.5824, -147.891, 0.28", "15.8111, 82.2251, -157.762, 0.28", "15.892, 88.0839, -167.617, 0.28", "15.1768, 94.1003, -177.333, 0.28", "13.4331, 99.8859, -187.049, 0.28", "10.7354, 105.461, -196.66, 0.28", "9.95845, 110.671, -206.849, 0.28" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "14.6158, 51.8308, -109.617, 0.28", "15.1115, 56.3926, -116.182, 0.28", "15.0226, 60.1895, -123.256, 0.28", "15.5331, 63.503, -130.565, 0.28", "17.6502, 66.2663, -137.831, 0.28", "18.6339, 69.0568, -145.322, 0.28", "19.7565, 71.7869, -152.817, 0.28", "19.3184, 74.0936, -160.527, 0.28", "18.0086, 76.7715, -168.006, 0.28", "16.6022, 79.112, -175.587, 0.28", "15.7015, 80.0636, -183.556, 0.28" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "7.57815, -8.90013, -31.8626, 0.55", "9.0488, -10.3454, -40.5266, 0.55", "9.55625, -10.8441, -43.5159, 0.55", "9.96035, -11.2413, -45.8969, 0.55", "12.4094, -13.5686, -56.577, 0.55", "13.9187, -15.7095, -67.468, 0.55", "14.51, -17.3653, -78.5335, 0.55", "16.3211, -20.436, -89.1417, 0.55", "20.2433, -21.932, -99.5365, 0.55", "23.7955, -22.2445, -110.168, 0.55", "26.1479, -21.9622, -121.128, 0.55", "29.389, -23.7098, -131.714, 0.55", "33.5956, -28.0481, -141.119, 0.55", "37.1953, -33.0371, -150.436, 0.55", "42.5299, -38.3306, -158.695, 0.55", "47.535, -44.1783, -166.766, 0.55", "51.5308, -50.3905, -175.104, 0.55", "55.9925, -55.6792, -183.863, 0.55", "58.391, -63.1041, -191.75, 0.55", "61.8325, -72.2949, -196.813, 0.55", "65.5401, -80.9355, -202.645, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "7.57815, -8.90013, -31.8626, 0.55", "7.21958, -9.65297, -33.4333, 0.55", "5.74127, -12.7568, -39.9083, 0.55", "4.51504, -15.3313, -45.2794, 0.55", "3.20591, -20.6484, -56.8972, 0.55", "3.92605, -23.5056, -69.432, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-33.4095, -35.3027, 6.41631, 0.55", "-34.8223, -39.2351, 5.69525, 0.55", "-36.3872, -43.704, 5.04885, 0.28", "-37.0494, -45.879, 4.87636, 0.28", "-37.6096, -48.2563, 4.7094, 0.28", "-38.4267, -52.8124, 4.4235, 0.55", "-38.9492, -55.726, 4.24067, 0.55", "-39.5709, -60.0682, 4.25164, 0.55", "-40.0047, -63.7061, 4.40418, 0.55", "-40.2274, -67.3917, 4.52125, 0.55", "-40.1976, -69.1866, 4.5822, 0.28", "-41.1614, -79.2329, 5.63686, 0.28", "-40.4729, -89.2961, 6.77756, 0.28" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-33.4095, -35.3027, 6.41631, 1.11", "-33.891, -37.6202, 7.45266, 1.11", "-34.3597, -39.8757, 8.46121, 1.11", "-34.8274, -42.1268, 9.46783, 1.11", "-35.2341, -44.0832, 10.3427, 1.11" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "0.99227, -3.31616, 32.3284, 0.55", "1.63329, -3.98673, 34.8671, 0.55", "1.82349, -4.15744, 35.5554, 0.83", "4.1498, -5.90957, 43.1149, 0.28", "4.54752, -6.20504, 44.455, 0.83", "5.42605, -6.89775, 47.56, 0.55", "5.89263, -7.26149, 49.3404, 1.11", "7.05869, -8.11086, 53.923, 0.55", "7.80566, -8.61045, 56.8064, 1.38", "9.21765, -9.54065, 62.1592, 0.55", "9.96905, -10.0346, 64.9823, 1.38", "11.5123, -10.9759, 70.7575, 0.28", "11.966, -11.2378, 72.4097, 1.11", "12.544, -11.5898, 74.505, 0.55", "13.2959, -11.9927, 77.044, 1.66", "14.4058, -12.4085, 80.3432, 0.55", "15.2528, -12.6046, 82.7164, 0.83", "16.1961, -12.742, 85.2039, 0.28", "16.6871, -12.7874, 86.5388, 1.11", "17.7304, -12.8107, 89.4438, 0.55", "18.3508, -12.7544, 91.1719, 1.38", "20.392, -12.3548, 96.7993, 0.28", "21.2276, -12.1803, 99.0509, 1.11" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "0.99227, -3.31616, 32.3284, 1.38", "1.49945, -3.41048, 33.0685, 1.38", "3.09694, -3.70755, 35.3999, 1.66" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "96.7166, -44.2909, 9.03105, 0.28", "98.7727, -43.4519, 10.0836, 0.28", "100.342, -42.8116, 10.8866, 0.55", "101.645, -42.2798, 11.5537, 1.11" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "96.7166, -44.2909, 9.03105, 0.83", "98.2965, -45.1396, 8.97775, 0.83", "99.999, -46.0705, 8.913, 1.94", "101.336, -46.8138, 8.85698, 1.11", "104.89, -48.7736, 8.7122, 0.83", "107.727, -50.3089, 8.60669, 0.83", "109.661, -51.3283, 8.54433, 1.38", "111.584, -52.2722, 8.53688, 0.55", "113.453, -53.1416, 8.56917, 1.94", "115.441, -54.058, 8.627, 0.55", "116.821, -54.6924, 8.70971, 0.55", "118.402, -55.4116, 8.84875, 1.11", "121.836, -57.0634, 9.2308, 0.55", "122.528, -57.4171, 9.35206, 0.55", "124.789, -58.6738, 9.83998, 1.11", "126.286, -59.6384, 10.2353, 0.55", "127.34, -60.3757, 10.5444, 0.55", "129.558, -62.0689, 11.2985, 0.83", "131.671, -63.7994, 12.1349, 0.28", "132.755, -64.653, 12.603, 1.38", "134.598, -66.0019, 13.4305, 0.55", "136.29, -67.1308, 14.2418, 0.55", "137.299, -67.7681, 14.7463, 0.83", "138.947, -68.6952, 15.6091, 0.55", "140.259, -69.3713, 16.3088, 0.55", "141.869, -70.1354, 17.2388, 1.66", "144.603, -71.3572, 18.8772, 0.55", "146.003, -72.0524, 19.7558, 0.28", "147.447, -72.8218, 20.7018, 0.83", "149.188, -73.8936, 22.0629, 0.55", "151.051, -75.1577, 23.6965, 0.55", "151.798, -75.6973, 24.3878, 1.38", "154.158, -77.4923, 26.6217, 0.28", "155.665, -78.6982, 28.1434, 1.11", "158.834, -81.4244, 31.4979, 0.28", "159.321, -81.8755, 32.0592, 0.55" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "22.9016, -7.38003, 14.4069, 0.28", "24.616, -9.28461, 15.9125, 0.28", "24.7776, -9.45822, 16.0478, 0.83", "25.9981, -10.72, 16.9441, 0.83", "27.4771, -12.2102, 17.8925, 0.28", "28.3113, -12.9919, 18.3787, 0.83", "29.8998, -14.5183, 19.2767, 0.28", "30.4522, -15.0715, 19.5487, 0.55", "32.1967, -16.8935, 20.4281, 0.28", "33.2392, -18.0198, 20.936, 0.55", "35.2934, -20.2861, 21.9251, 0.28", "37.3548, -22.6711, 23.0324, 0.28", "39.0523, -24.6618, 23.9369, 1.11", "41.6701, -27.8544, 25.4198, 0.55", "42.9195, -29.4438, 26.1839, 1.66", "44.1135, -31.0351, 26.9698, 0.28", "45.084, -32.4305, 27.6445, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "22.9016, -7.38003, 14.4069, 0.55", "25.1115, -8.39011, 18.6172, 0.55", "29.1132, -10.2192, 26.2416, 0.55", "30.5581, -10.8797, 28.9942, 0.55", "31.8102, -11.452, 31.3799, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "3.11506, 22.7843, -2.83129, 0.55", "1.97262, 24.1457, -3.38373, 0.55", "-0.0613268, 26.5695, -4.36726, 0.55", "-1.4746, 28.2536, -5.05066, 0.55", "-2.61765, 29.6157, -5.6034, 1.11" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "3.11506, 22.7843, -2.83129, 0.83", "0.54474, 24.2825, -6.56823, 0.83", "-0.468595, 24.8766, -7.89033, 0.83", "-1.75626, 25.7358, -9.3889, 0.83", "-3.87343, 27.1745, -11.7928, 0.83", "-7.14563, 29.3512, -15.34, 0.83", "-8.2646, 30.0479, -16.5158, 1.38", "-10.2021, 31.2643, -18.3895, 0.83", "-12.5606, 32.8704, -20.8346, 0.83", "-14.5784, 34.3841, -23.1302, 0.83", "-15.6964, 35.2953, -24.5328, 1.38", "-17.5163, 37.0282, -27.2381, 0.55", "-18.7805, 38.4547, -29.621, 0.83", "-19.8456, 39.9181, -32.3079, 0.83", "-20.5489, 41.1703, -34.8561, 0.83", "-21.0702, 42.513, -37.4875, 1.38", "-21.6607, 44.7598, -41.8695, 0.55", "-21.7276, 45.105, -42.5377, 0.55", "-21.9265, 45.8795, -44.0439, 1.11", "-22.5391, 47.4977, -46.9271, 0.55", "-22.9741, 48.4609, -48.361, 0.55", "-23.7304, 49.8448, -50.0332, 1.11", "-24.6583, 51.2534, -51.3332, 0.55", "-25.9011, 53.0512, -52.7, 1.11", "-26.9135, 54.4595, -53.633, 0.28", "-27.9431, 55.8618, -54.4174, 0.83", "-29.4184, 57.862, -55.4755, 0.28", "-30.997, 60.0291, -56.4472, 0.28", "-32.5476, 62.2654, -57.3131, 1.11", "-36.1422, 65.9193, -64.8606, 1.11", "-38.9931, 69.5888, -72.712, 1.11" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "11.5014, 22.7013, -5.39507, 1.11", "13.111, 23.2446, -4.75672, 1.11", "16.3587, 24.33, -3.33319, 0.83", "19.5845, 25.3956, -1.85797, 0.83", "22.2817, 26.2413, -0.558605, 0.83", "23.5584, 26.6234, 0.0545498, 0.55", "26.1245, 27.3883, 1.3119, 1.11", "28.3358, 28.0544, 2.48161, 0.55", "30.0108, 28.532, 3.39687, 1.38", "31.9894, 29.1192, 4.52844, 0.55", "33.4225, 29.5756, 5.33127, 0.55", "35.9502, 30.4721, 6.75482, 0.83", "37.9351, 31.2642, 7.82487, 0.28", "38.6815, 31.5925, 8.23359, 0.83", "40.1982, 32.3487, 9.06984, 0.28", "42.3512, 33.4909, 10.2373, 1.11", "44.4436, 34.6262, 11.446, 0.28", "45.6255, 35.2606, 12.1709, 1.66", "48.2878, 36.6593, 13.9741, 0.55", "49.4509, 37.2424, 14.7933, 0.55", "50.4509, 37.7069, 15.4945, 0.55", "52.9562, 38.7773, 17.2281, 1.38", "54.7281, 39.4575, 18.3889, 0.28", "56.7037, 40.116, 19.7295, 0.83", "58.4136, 40.5915, 20.9445, 1.11", "59.4482, 40.8304, 21.6732, 1.11", "60.306, 41.0032, 22.2483, 0.28", "61.3772, 41.1677, 22.9445, 0.83", "66.0951, 41.7272, 26.0028, 0.28", "68.3119, 41.9068, 27.4913, 1.38", "69.3893, 41.9687, 28.2538, 0.28", "70.6413, 42.0646, 29.1905, 1.11", "72.972, 42.3208, 31.0882, 0.28", "73.2543, 42.3655, 31.329, 0.55", "75.2727, 42.8203, 33.0672, 0.28", "76.0083, 43.0686, 33.7785, 1.38", "79.0013, 44.393, 36.994, 0.28", "80.5087, 45.31, 38.9977, 0.83", "81.2639, 45.8568, 40.0887, 0.28", "81.7443, 46.2258, 40.8086, 1.11", "83.7118, 47.8338, 43.8282, 0.28", "84.3329, 48.3578, 44.7996, 1.11", "88.4276, 51.9337, 51.1942, 0.28", "89.0468, 52.49, 52.1431, 1.38", "90.7413, 54.0806, 54.717, 0.28", "91.1901, 54.5008, 55.3907, 1.38", "92.8413, 56.0397, 57.7868, 0.28", "93.1057, 56.2848, 58.1535, 0.83", "95.195, 58.3737, 60.5393, 0.55", "95.8711, 59.1515, 61.4275, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "11.5014, 22.7013, -5.39507, 1.38", "12.3255, 24.0912, -7.36014, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "35.5583, 37.893, 54.5319, 0.55", "36.7853, 37.6225, 55.1476, 0.55", "38.2028, 37.335, 55.8264, 0.55", "40.9577, 36.8337, 57.0394, 0.55", "42.6358, 36.5577, 57.7567, 1.11", "45.5958, 36.0493, 58.8125, 0.55", "47.7681, 35.684, 59.5198, 0.55", "49.0538, 35.4632, 59.9002, 0.28", "50.4165, 35.2735, 60.2702, 0.83", "52.6109, 34.9885, 60.7883, 0.55", "55.6083, 34.6116, 61.4886, 0.83", "58.0918, 34.3266, 62.0547, 0.28", "60.9538, 34.0319, 62.7884, 0.83", "63.6503, 33.7967, 63.5379, 0.28", "64.0688, 33.7686, 63.6701, 0.28", "65.4671, 33.7345, 64.1476, 0.83", "66.9928, 33.7922, 64.7431, 0.28", "68.1918, 33.8912, 65.2261, 0.83", "69.6115, 34.1013, 65.8854, 0.28", "70.7159, 34.2639, 66.3587, 0.83", "71.7139, 34.4298, 66.7894, 0.28", "73.0623, 34.69, 67.3654, 0.83", "75.1862, 35.1484, 68.3733, 0.28", "76.1969, 35.3875, 68.9111, 0.55", "78.2386, 36.0037, 70.1199, 0.28" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "35.5583, 37.893, 54.5319, 0.83", "36.8784, 39.6863, 56.7784, 0.83", "38.116, 41.3807, 59.1191, 0.83", "39.3786, 43.0949, 61.5722, 0.55", "39.8186, 43.6889, 62.6083, 0.55", "40.9635, 45.1787, 65.3683, 0.83", "41.9148, 46.4204, 67.7299, 0.55", "42.7942, 47.5141, 69.9489, 0.83", "43.2715, 48.124, 71.1094, 1.38", "46.0479, 51.9598, 77.9077, 0.55", "47.4216, 54.0255, 81.2858, 1.38", "48.8685, 56.5017, 84.7964, 0.55", "49.1363, 57.0417, 85.4305, 1.11", "50.1996, 59.6627, 87.9996, 0.55", "50.6866, 61.218, 89.2749, 0.83", "50.923, 62.2619, 89.9315, 0.83", "51.3702, 65.0739, 91.6279, 0.55", "51.7966, 68.4233, 93.5755, 0.83", "52.0848, 71.1796, 95.2552, 1.11", "52.2873, 73.6479, 96.8752, 0.55", "52.3247, 74.1665, 97.2296, 0.83", "52.4903, 76.2853, 98.7563, 0.28", "52.7039, 78.8005, 100.621, 0.83" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-40.4729, -89.2961, 6.77756, 0.28", "-41.8739, -99.5968, 7.80125, 0.28", "-41.7149, -109.731, 10.2773, 0.28", "-41.6166, -119.595, 13.6438, 0.28", "-40.6692, -129.752, 15.889, 0.28" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-40.4729, -89.2961, 6.77756, 0.28", "-41.2789, -95.847, 7.07066, 0.28", "-41.7935, -102.404, 7.64959, 0.28", "-41.3744, -108.837, 9.0413, 0.28", "-40.7067, -115.308, 10.1608, 0.28", "-39.4789, -121.658, 11.5028, 0.28" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-35.2341, -44.0832, 10.3427, 1.11", "-37.0326, -45.1542, 12.9186, 1.11", "-39.1004, -46.1541, 15.6606, 1.11", "-42.9804, -48.0301, 20.8054, 1.11", "-45.2161, -49.1111, 23.7702, 1.11", "-47.3226, -50.1296, 26.5633, 1.11", "-49.4756, -51.1706, 29.4181, 1.38", "-53.1912, -52.7644, 34.3331, 1.11" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-35.2341, -44.0832, 10.3427, 0.83", "-35.8025, -46.1936, 11.5345, 0.83", "-36.6096, -48.7919, 12.9113, 0.83", "-37.4569, -51.3615, 14.257, 0.83", "-39.3324, -56.8307, 17.0959, 0.83", "-40.6164, -60.6064, 19.0852, 0.83", "-41.6845, -63.6673, 20.696, 0.83", "-42.8004, -66.4973, 22.2532, 0.83", "-43.6416, -68.5729, 23.4973, 0.83", "-44.173, -69.907, 24.3177, 0.83", "-45.0122, -71.7445, 25.6385, 0.83", "-46.791, -75.7133, 28.7907, 0.83", "-48.1208, -78.4914, 31.1394, 0.55", "-48.9952, -80.4524, 33.0318, 0.28" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "3.09694, -3.70755, 35.3999, 0.55", "2.53038, -4.00039, 38.0613, 0.55", "1.70948, -4.36206, 42.1866, 1.11", "1.00512, -4.67027, 45.7582, 0.83", "0.32085, -4.92001, 48.9642, 1.66", "-1.0366, -5.28767, 55.0438, 1.11", "-1.52363, -5.38663, 57.1678, 1.38", "-2.89926, -5.48307, 62.5715, 0.83", "-3.49589, -5.51173, 64.7419, 1.66", "-4.71872, -5.57141, 68.6693, 0.83", "-5.33071, -5.62561, 70.3701, 0.83", "-6.12967, -5.78807, 72.1896, 1.38", "-6.91365, -5.9818, 73.6711, 1.38", "-8.3937, -6.31009, 75.8556, 0.83", "-10.2407, -6.69604, 78.1781, 0.55", "-10.665, -6.80586, 78.6811, 0.55", "-11.7596, -7.15333, 80.0301, 0.83", "-13.0264, -7.63118, 81.7056, 0.55", "-13.522, -7.8435, 82.4834, 0.55", "-14.8335, -8.44457, 84.7785, 1.11", "-16.4651, -9.24765, 87.8493, 0.55", "-17.4207, -9.7067, 89.6404, 0.83", "-18.6094, -10.279, 91.7664, 1.38", "-20.4951, -11.2883, 95.2831, 0.55", "-20.9513, -11.5526, 96.1606, 0.83", "-22.0222, -12.188, 98.1978, 0.83", "-23.0326, -12.6426, 99.7991, 0.55", "-23.9044, -12.9117, 100.981, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "3.09694, -3.70755, 35.3999, 0.83", "6.25467, -4.60232, 38.3502, 0.83", "9.31755, -5.5034, 41.3168, 0.83", "12.9746, -6.57925, 44.8587, 0.83", "15.8401, -7.42231, 47.6341, 0.83", "19.5215, -8.50536, 51.1997, 0.83", "23.8771, -9.78672, 55.4182, 1.66", "27.7255, -11.0012, 59.5873, 0.83" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-2.61765, 29.6157, -5.6034, 0.55", "-1.86667, 31.7386, -3.20089, 0.55", "-0.874878, 34.6099, -0.237776, 0.28", "-0.719397, 35.082, 0.223425, 0.83", "1.50675, 41.4023, 6.10037, 0.28", "1.91363, 42.4846, 7.06015, 1.38", "5.35088, 51.1617, 13.9925, 0.28", "5.95079, 52.6136, 15.0216, 1.66", "7.93093, 57.116, 17.8753, 0.28", "8.98285, 59.3331, 19.1717, 0.28", "9.83715, 60.9714, 19.9642, 1.66", "12.6758, 66.1598, 22.231, 0.28", "14.3008, 68.8766, 23.1624, 1.38", "15.9259, 71.5236, 24.073, 0.28", "16.7022, 72.758, 24.4438, 0.55", "18.2826, 75.5014, 25.3644, 0.28", "18.7941, 76.4198, 25.7141, 0.55" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-2.61765, 29.6157, -5.6034, 0.28", "-8.94082, 33.4343, -5.23439, 0.28", "-10.1924, 34.2191, -5.27267, 0.83", "-13.014, 36.0465, -5.39768, 0.28", "-14.6243, 37.2112, -5.30358, 0.83", "-17.5914, 39.4382, -5.03893, 0.28", "-18.7527, 40.3388, -4.91779, 0.83", "-24.1301, 44.9964, -4.27058, 0.28", "-25.3971, 46.1589, -4.09434, 0.83", "-36.643, 55.7073, -1.84092, 0.28", "-37.0443, 56.0302, -1.74452, 1.38", "-38.0541, 56.83, -1.44295, 1.38", "-40.3299, 58.586, -0.66781, 0.28", "-41.2104, 59.2923, -0.350506, 0.55", "-51.2414, 67.3952, 2.97225, 0.28", "-53.0405, 68.7797, 3.54353, 1.11", "-58.0145, 72.5203, 5.11658, 0.28", "-58.8415, 73.1228, 5.37583, 0.83", "-65.3027, 77.7217, 7.35554, 0.28", "-65.5938, 77.9503, 7.43804, 0.55", "-75.3637, 86.84, 8.9153, 0.55", "-84.1684, 96.1126, 12.4936, 0.55", "-91.886, 106.757, 13.9152, 0.55", "-98.2436, 118.3, 14.2709, 0.55", "-106.575, 128.471, 12.6951, 0.55" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "12.3255, 24.0912, -7.36014, 0.83", "15.7473, 23.6193, -9.20364, 0.83", "19.9816, 23.1469, -11.2907, 0.83", "21.9249, 23.0678, -12.1206, 0.83", "25.6861, 23.0212, -13.6469, 0.55", "27.2521, 23.102, -14.2062, 0.55", "30.2771, 23.3159, -15.2404, 0.83", "33.9352, 23.7488, -16.3091, 0.83", "37.6589, 24.3636, -17.3661, 0.83", "39.8899, 24.7479, -17.972, 1.11", "45.1428, 25.7043, -19.2054, 1.11", "48.2099, 26.3046, -19.9786, 0.55", "50.2719, 26.7218, -20.5054, 0.55", "52.0811, 27.0719, -21.0067, 1.11", "54.8647, 27.544, -21.7995, 0.55", "56.9913, 27.9181, -22.3741, 0.55", "59.7491, 28.3793, -23.0987, 1.11", "61.5342, 28.7157, -23.4787, 0.55", "63.712, 29.0897, -23.8767, 0.28", "66.5029, 29.5271, -24.2698, 0.83", "71.8255, 30.1626, -24.6879, 0.28", "73.6803, 30.2691, -24.7243, 0.55", "75.7632, 30.227, -24.6101, 0.28", "77.1396, 30.103, -24.4749, 0.28", "79.0395, 29.7604, -24.1812, 1.11", "82.2972, 28.957, -23.56, 0.55", "85.0934, 28.0426, -22.8872, 1.66", "88.6868, 26.7595, -22.01, 0.28", "90.2041, 26.1919, -21.65, 0.28", "92.8246, 25.2485, -20.9973, 0.83", "102.822, 25.1712, -21.428, 0.83", "112.699, 24.0481, -20.3159, 0.83", "122.58, 24.7962, -18.9315, 0.83", "132.165, 25.2322, -16.093, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "12.3255, 24.0912, -7.36014, 1.11", "12.4423, 26.1666, -8.08818, 1.11", "12.7201, 28.6033, -8.95878, 0.83", "13.1005, 30.5168, -9.60322, 0.83", "13.6325, 32.8311, -10.3986, 1.38", "14.678, 37.1827, -12.1252, 0.83", "15.2697, 39.5565, -13.1936, 0.83", "15.7004, 41.1085, -13.9725, 0.83", "16.874, 44.9147, -16.3498, 0.83", "17.3041, 46.2227, -17.2802, 0.83", "18.3162, 49.2584, -19.7608, 0.83", "18.924, 51.1612, -21.4718, 1.11", "19.2951, 52.4505, -22.646, 1.11", "20.2099, 55.846, -25.5808, 0.83", "20.7262, 57.7054, -27.1128, 0.83", "21.3852, 59.8412, -28.7223, 1.11", "21.7555, 61.0895, -29.5949, 0.28", "22.2337, 62.8255, -30.7876, 0.83", "22.9604, 67.2939, -33.6815, 0.83", "23.2034, 70.1118, -35.3105, 1.66", "23.3549, 73.7176, -37.3, 0.55", "23.3892, 76.2882, -38.6418, 0.55", "23.354, 79.0269, -40.0307, 0.55", "23.0548, 88.4511, -44.9697, 0.28", "22.9855, 90.1395, -45.8617, 1.66", "22.8946, 94.6327, -48.1157, 0.28", "22.8937, 95.187, -48.3693, 0.83", "22.9262, 96.6858, -49.0224, 0.28", "23.0349, 100.579, -50.6387, 1.66", "23.2792, 105.46, -52.6674, 0.28", "23.3189, 106.897, -53.2483, 1.38", "23.3261, 114.145, -55.9426, 0.28", "23.2326, 115.571, -56.4619, 1.66", "22.6975, 119.553, -57.8475, 0.28", "22.566, 120.171, -58.0984, 0.83", "21.3263, 124.819, -60.3237, 0.28", "21.0885, 125.643, -60.7542, 0.83", "18.9966, 132.392, -64.7635, 0.28", "18.414, 134.177, -65.9031, 1.11", "15.3457, 142.69, -71.9137, 0.28", "15.2537, 142.926, -72.0938, 0.83", "16.8022, 153.428, -74.9847, 0.83", "18.3885, 164.162, -76.7813, 0.83", "21.0475, 174.266, -80.287, 0.83", "24.4874, 184.581, -82.1029, 0.83", "28.688, 194.562, -84.2507, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "27.7255, -11.0012, 59.5873, 0.28", "28.8097, -12.3099, 60.6374, 0.28", "29.2861, -12.9067, 61.1916, 0.83", "30.3878, -14.1749, 62.5305, 0.28", "30.8419, -14.6527, 63.1385, 0.83", "32.459, -16.413, 65.5906, 0.28", "32.7201, -16.722, 66.041, 0.83", "33.7789, -18.064, 68.2628, 0.28", "34.7421, -19.2931, 70.4066, 0.83", "35.834, -20.743, 73.0397, 0.28", "36.7859, -22.1169, 75.5713, 1.38", "37.5498, -23.2928, 77.8047, 0.28", "38.063, -24.1047, 79.4181, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "27.7255, -11.0012, 59.5873, 0.55", "30.6934, -11.296, 62.4835, 0.55", "31.1418, -11.3314, 62.9544, 0.28", "32.721, -11.4743, 64.6385, 0.83", "35.8284, -11.7776, 67.9444, 0.83", "38.3378, -12.0046, 70.537, 0.83", "39.926, -12.1352, 72.1335, 1.38", "42.9365, -12.2929, 75.1362, 0.55", "43.8642, -12.3294, 76.0249, 0.55", "46.1872, -12.3936, 78.0927, 0.55", "48.4753, -12.4256, 79.929, 1.11", "50.8974, -12.4482, 81.6515, 0.55", "53.0297, -12.4353, 83.0555, 1.38", "55.3201, -12.4079, 84.4192, 1.11", "57.8061, -12.322, 85.8363, 0.55", "60.3661, -12.1646, 87.2548, 0.55", "61.7305, -12.054, 88.0266, 0.55", "62.8914, -11.9323, 88.7218, 0.83", "64.5363, -11.7169, 89.7735, 0.83", "65.5721, -11.5366, 90.5648, 0.83", "67.3436, -11.1211, 92.222, 0.55", "68.1324, -10.8852, 93.0941, 0.83", "69.44, -10.3747, 94.6288, 0.55", "69.8799, -10.1775, 95.1794, 0.83", "71.631, -9.29407, 97.4109, 0.55", "72.4035, -8.94462, 98.2991, 0.55", "73.5323, -8.44873, 99.5191, 0.55", "73.8448, -8.31486, 99.8284, 0.83", "75.6387, -7.6134, 101.508, 0.55", "77.6718, -6.89267, 103.319, 1.11", "80.8363, -5.83841, 106.003, 0.55", "82.3555, -5.36819, 107.251, 1.11", "84.8784, -4.62965, 109.282, 0.55", "86.3667, -4.22755, 110.459, 0.83", "88.1263, -3.79194, 111.792, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_46", "dend_39", "dend_36", "dend_27", "dend_26", "dend_18", "dend_11", "dend_0", "dend_51", "dend_47", "dend_43", "dend_40", "dend_38", "dend_37", "dend_35", "dend_28", "dend_19", "dend_15", "dend_12", "dend_6", "dend_1", "dend_53", "dend_52", "dend_48", "dend_45", "dend_44", "dend_42", "dend_41", "dend_32", "dend_29", "dend_25", "dend_20", "dend_17", "dend_16", "dend_14", "dend_13", "dend_8", "dend_7", "dend_5", "dend_2", "dend_50", "dend_49", "dend_34", "dend_33", "dend_31", "dend_30", "dend_24", "dend_21", "dend_10", "dend_9", "dend_4", "dend_3", "dend_23", "dend_22" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_46", "dend_39", "dend_36", "dend_27", "dend_26", "dend_18", "dend_11", "dend_0", "dend_51", "dend_47", "dend_43", "dend_40", "dend_38", "dend_37", "dend_35", "dend_28", "dend_19", "dend_15", "dend_12", "dend_6", "dend_1", "dend_53", "dend_52", "dend_48", "dend_45", "dend_44", "dend_42", "dend_41", "dend_32", "dend_29", "dend_25", "dend_20", "dend_17", "dend_16", "dend_14", "dend_13", "dend_8", "dend_7", "dend_5", "dend_2", "dend_50", "dend_49", "dend_34", "dend_33", "dend_31", "dend_30", "dend_24", "dend_21", "dend_10", "dend_9", "dend_4", "dend_3", "dend_23", "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_46", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_18", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_47", "dend_47", "dend_47", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_28", "dend_28", "dend_28", "dend_28", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_6", "dend_6", "dend_1", "dend_1", "axon_1", "axon_1", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L23_NBC_7f97b8e83f_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_46, id: dend_46, parent: soma_0
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: soma_0
create dend_36
public dend_36
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_51, id: dend_51, parent: dend_46
create dend_51
public dend_51
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_35, id: dend_35, parent: dend_27
create dend_35
public dend_35
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_25, id: dend_25, parent: dend_19
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_46, dend_39, dend_36, dend_27, dend_26, dend_18, dend_11, dend_0, dend_51, dend_47, dend_43, dend_40, dend_38, dend_37, dend_35, dend_28, dend_19, dend_15, dend_12, dend_6, dend_1, dend_53, dend_52, dend_48, dend_45, dend_44, dend_42, dend_41, dend_32, dend_29, dend_25, dend_20, dend_17, dend_16, dend_14, dend_13, dend_8, dend_7, dend_5, dend_2, dend_50, dend_49, dend_34, dend_33, dend_31, dend_30, dend_24, dend_21, dend_10, dend_9, dend_4, dend_3, dend_23, dend_22]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_46, dend_39, dend_36, dend_27, dend_26, dend_18, dend_11, dend_0, dend_51, dend_47, dend_43, dend_40, dend_38, dend_37, dend_35, dend_28, dend_19, dend_15, dend_12, dend_6, dend_1, dend_53, dend_52, dend_48, dend_45, dend_44, dend_42, dend_41, dend_32, dend_29, dend_25, dend_20, dend_17, dend_16, dend_14, dend_13, dend_8, dend_7, dend_5, dend_2, dend_50, dend_49, dend_34, dend_33, dend_31, dend_30, dend_24, dend_21, dend_10, dend_9, dend_4, dend_3, dend_23, dend_22]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_47
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_46, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_18, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_46(0), soma_0(0.4999996128858968)
    connect dend_39(0), soma_0(0.4999996128858968)
    connect dend_36(0), soma_0(0.4999996128858968)
    connect dend_27(0), soma_0(0.4999996128858968)
    connect dend_26(0), soma_0(0.4999996128858968)
    connect dend_18(0), soma_0(0.4999996128858968)
    connect dend_11(0), soma_0(0.4999996128858968)
    connect dend_0(0), soma_0(0.4999996128858968)
    connect axon_0(0), soma_0(1.0)
    connect dend_51(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_35(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_25(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -10.3022, -4.91444, 0.0966793, 4.52114 ) }
    soma_0 { pt3dadd( -9.29583, -4.38505, 0.0928107, 5.29403 ) }
    soma_0 { pt3dadd( -8.28943, -3.85565, 0.0889422, 6.87895 ) }
    soma_0 { pt3dadd( -7.28303, -3.32626, 0.0850736, 8.2055 ) }
    soma_0 { pt3dadd( -6.27664, -2.79687, 0.0812051, 9.69593 ) }
    soma_0 { pt3dadd( -5.27024, -2.26748, 0.0773365, 11.1864 ) }
    soma_0 { pt3dadd( -4.26385, -1.73809, 0.073468, 12.1576 ) }
    soma_0 { pt3dadd( -3.25745, -1.20869, 0.0695994, 12.1028 ) }
    soma_0 { pt3dadd( -2.25106, -0.679302, 0.0657309, 12.5691 ) }
    soma_0 { pt3dadd( -1.24466, -0.14991, 0.0618623, 13.5271 ) }
    soma_0 { pt3dadd( -0.238266, 0.379482, 0.0579938, 14.6432 ) }
    soma_0 { pt3dadd( 0.76813, 0.908874, 0.0541252, 15.6577 ) }
    soma_0 { pt3dadd( 1.77453, 1.43827, 0.0502567, 15.7754 ) }
    soma_0 { pt3dadd( 2.78092, 1.96766, 0.0463882, 15.433 ) }
    soma_0 { pt3dadd( 3.78732, 2.49705, 0.0425196, 14.9368 ) }
    soma_0 { pt3dadd( 4.79371, 3.02644, 0.0386511, 14.4352 ) }
    soma_0 { pt3dadd( 5.80011, 3.55583, 0.0347825, 13.7953 ) }
    soma_0 { pt3dadd( 6.8065, 4.08523, 0.030914, 12.9353 ) }
    soma_0 { pt3dadd( 7.8129, 4.61462, 0.0270454, 10.4207 ) }
    soma_0 { pt3dadd( 8.81929, 5.14401, 0.0231769, 6.43383 ) }
    soma_0 { pt3dadd( 9.82569, 5.6734, 0.0193083, 3.7421 ) }
    // Section: dend_46, id: dend_46, parent: soma_0 (entry count 21/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 1.0327, 0.409899, 12.0695, 1.38 ) }
    dend_46 { pt3dadd( 2.1478, 2.95112, 7.28667, 1.38 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 23/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 4.5927, -1.17935, -10.1505, 1.66 ) }
    dend_39 { pt3dadd( 5.16845, -1.7774, -12.968, 1.66 ) }
    dend_39 { pt3dadd( 8.19321, -4.91929, -27.77, 1.66 ) }
    // Section: dend_36, id: dend_36, parent: soma_0 (entry count 26/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -8.7473, 1.2094, 5.4595, 1.66 ) }
    dend_36 { pt3dadd( -10.7646, 1.77659, 6.92507, 1.66 ) }
    dend_36 { pt3dadd( -14.1027, 2.53445, 9.19291, 1.66 ) }
    dend_36 { pt3dadd( -16.5858, 2.93199, 10.6197, 1.66 ) }
    dend_36 { pt3dadd( -19.7043, 3.43125, 12.4114, 1.66 ) }
    dend_36 { pt3dadd( -23.1473, 3.98245, 14.3896, 1.66 ) }
    dend_36 { pt3dadd( -28.0077, 4.76059, 17.1822, 1.66 ) }
    dend_36 { pt3dadd( -31.1642, 5.16539, 18.9961, 1.66 ) }
    dend_36 { pt3dadd( -36.1362, 5.55987, 21.5777, 1.11 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 35/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -10.3073, -5.8301, 1.9395, 2.77 ) }
    dend_27 { pt3dadd( -13.5574, -6.69603, 0.789239, 2.77 ) }
    dend_27 { pt3dadd( -18.968, -8.13758, -1.12565, 2.77 ) }
    dend_27 { pt3dadd( -23.434, -9.3275, -2.70628, 2.49 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 39/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -11.2873, -5.25485, 6.9695, 1.11 ) }
    dend_26 { pt3dadd( -14.4176, -7.85054, 9.23542, 1.11 ) }
    dend_26 { pt3dadd( -17.3195, -10.2321, 11.2551, 1.11 ) }
    dend_26 { pt3dadd( -20.6595, -12.9778, 13.6001, 1.11 ) }
    dend_26 { pt3dadd( -22.6418, -14.5762, 14.9692, 1.38 ) }
    dend_26 { pt3dadd( -26.1224, -17.375, 17.5146, 0.83 ) }
    dend_26 { pt3dadd( -28.9895, -19.7301, 19.7319, 1.11 ) }
    dend_26 { pt3dadd( -30.1131, -20.7005, 20.6817, 1.11 ) }
    dend_26 { pt3dadd( -32.7542, -22.9314, 22.9393, 1.11 ) }
    dend_26 { pt3dadd( -33.9328, -23.9633, 24.0074, 1.11 ) }
    dend_26 { pt3dadd( -36.3814, -26.2076, 26.4382, 1.11 ) }
    dend_26 { pt3dadd( -37.7758, -27.5931, 27.8691, 1.11 ) }
    dend_26 { pt3dadd( -38.6394, -28.5291, 28.797, 1.11 ) }
    dend_26 { pt3dadd( -40.0563, -30.0617, 30.2668, 1.66 ) }
    dend_26 { pt3dadd( -43.3942, -33.5445, 33.6505, 1.66 ) }
    dend_26 { pt3dadd( -46.1348, -36.3886, 36.4318, 1.38 ) }
    dend_26 { pt3dadd( -49.1129, -39.582, 39.3133, 1.38 ) }
    dend_26 { pt3dadd( -51.2687, -41.9899, 41.4315, 1.38 ) }
    dend_26 { pt3dadd( -53.8172, -45.0152, 44.1154, 1.11 ) }
    dend_26 { pt3dadd( -55.9492, -47.6849, 46.49, 1.11 ) }
    dend_26 { pt3dadd( -59.1455, -51.834, 50.2638, 1.11 ) }
    dend_26 { pt3dadd( -62.5014, -56.3918, 54.4267, 0.83 ) }
    dend_26 { pt3dadd( -64.5013, -59.2228, 57.0481, 0.83 ) }
    dend_26 { pt3dadd( -67.4444, -63.5959, 60.9468, 1.38 ) }
    dend_26 { pt3dadd( -69.0295, -66.1074, 63.0848, 1.38 ) }
    dend_26 { pt3dadd( -70.7762, -68.9414, 65.3969, 0.83 ) }
    dend_26 { pt3dadd( -72.4389, -71.5681, 67.5072, 0.83 ) }
    dend_26 { pt3dadd( -73.6529, -73.4488, 69.0371, 1.11 ) }
    dend_26 { pt3dadd( -75.1509, -75.7317, 70.799, 0.83 ) }
    dend_26 { pt3dadd( -76.4728, -77.6984, 72.2446, 1.11 ) }
    dend_26 { pt3dadd( -77.675, -79.496, 73.5791, 0.55 ) }
    dend_26 { pt3dadd( -79.0162, -81.4849, 75.0376, 1.11 ) }
    dend_26 { pt3dadd( -80.5611, -83.7242, 76.7505, 0.55 ) }
    dend_26 { pt3dadd( -81.9897, -85.7252, 78.285, 1.94 ) }
    dend_26 { pt3dadd( -83.9048, -88.3939, 80.373, 0.55 ) }
    dend_26 { pt3dadd( -85.0908, -90.0686, 81.7013, 0.55 ) }
    dend_26 { pt3dadd( -86.5245, -92.1876, 83.3595, 0.55 ) }
    dend_26 { pt3dadd( -87.8464, -94.3304, 85.0113, 1.11 ) }
    dend_26 { pt3dadd( -89.7779, -97.8239, 87.4547, 0.28 ) }
    dend_26 { pt3dadd( -90.3688, -99.0947, 88.1929, 1.11 ) }
    dend_26 { pt3dadd( -91.3319, -101.805, 89.7479, 0.28 ) }
    dend_26 { pt3dadd( -91.6533, -103.034, 90.4747, 0.55 ) }
    dend_26 { pt3dadd( -92.0962, -105.284, 91.909, 0.28 ) }
    dend_26 { pt3dadd( -92.3143, -106.644, 92.749, 0.28 ) }
    dend_26 { pt3dadd( -92.704, -109.696, 94.6187, 1.66 ) }
    dend_26 { pt3dadd( -93.4784, -115.24, 97.9875, 0.28 ) }
    dend_26 { pt3dadd( -93.7739, -117.256, 99.2126, 0.28 ) }
    dend_26 { pt3dadd( -94.1225, -119.339, 100.601, 0.83 ) }
    dend_26 { pt3dadd( -94.5817, -121.97, 102.556, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 88/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -3.7273, -6.1031, 11.6495, 2.77 ) }
    dend_18 { pt3dadd( -4.11187, -7.33734, 11.6495, 2.77 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 90/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 8.6827, -2.66135, 1.6195, 2.49 ) }
    dend_11 { pt3dadd( 10.3356, -3.401, 1.86014, 2.22 ) }
    dend_11 { pt3dadd( 12.9654, -4.57773, 2.24299, 2.22 ) }
    dend_11 { pt3dadd( 14.6665, -5.339, 2.49066, 2.22 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 94/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 6.0827, 8.4244, -4.97829E-4, 2.22 ) }
    dend_0 { pt3dadd( 6.26121, 10.2258, -0.573618, 2.22 ) }
    dend_0 { pt3dadd( 6.4949, 12.5843, -1.32394, 2.22 ) }
    dend_0 { pt3dadd( 6.73511, 15.0086, -2.09517, 2.22 ) }
    dend_0 { pt3dadd( 7.10678, 18.7595, -3.28848, 2.77 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 99/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 9.82569, 5.6734, 0.0193083, 0.831076 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    axon_0 { pt3dadd( 23.101, 12.6566, 0.0193083, 0.831076 ) }
    axon_0 { pt3dadd( 36.3764, 19.6398, 0.0193083, 0.831076 ) }
    // Section: dend_51, id: dend_51, parent: dend_46 (entry count 2/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 2.1478, 2.95112, 7.28667, 0.83 ) }
    dend_51 { pt3dadd( 0.42656, 8.77838, 5.64714, 0.83 ) }
    dend_51 { pt3dadd( -0.428397, 11.6355, 4.91253, 0.83 ) }
    dend_51 { pt3dadd( -1.06009, 13.7025, 4.39116, 0.83 ) }
    dend_51 { pt3dadd( -1.50201, 15.0768, 4.05677, 1.38 ) }
    dend_51 { pt3dadd( -2.65921, 18.5257, 3.39683, 0.83 ) }
    dend_51 { pt3dadd( -3.48304, 20.9811, 2.92702, 1.38 ) }
    dend_51 { pt3dadd( -4.81491, 24.5062, 2.56361, 0.83 ) }
    dend_51 { pt3dadd( -6.19536, 28.027, 2.23267, 0.83 ) }
    dend_51 { pt3dadd( -6.7898, 29.4679, 2.12664, 0.83 ) }
    dend_51 { pt3dadd( -7.82266, 32.0997, 1.879, 1.94 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 13/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 2.1478, 2.95112, 7.28667, 1.38 ) }
    dend_47 { pt3dadd( 4.0014, 4.99385, 9.64641, 1.38 ) }
    dend_47 { pt3dadd( 6.38041, 7.6156, 12.6751, 1.38 ) }
    dend_47 { pt3dadd( 8.59375, 10.0547, 15.4928, 1.66 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 17/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 8.19321, -4.91929, -27.77, 0.83 ) }
    dend_43 { pt3dadd( 7.97142, -2.38703, -33.9026, 0.83 ) }
    dend_43 { pt3dadd( 7.82428, -0.707087, -37.971, 0.83 ) }
    dend_43 { pt3dadd( 7.63839, 1.41524, -43.1108, 0.83 ) }
    dend_43 { pt3dadd( 7.57939, 2.0889, -44.7422, 0.55 ) }
    dend_43 { pt3dadd( 7.40624, 4.06568, -49.5295, 0.55 ) }
    dend_43 { pt3dadd( 7.24991, 5.85054, -53.8521, 0.55 ) }
    dend_43 { pt3dadd( 6.61207, 9.89755, -63.9492, 0.55 ) }
    dend_43 { pt3dadd( 4.86544, 15.4549, -73.1068, 0.55 ) }
    dend_43 { pt3dadd( 4.17193, 20.6404, -82.6341, 0.55 ) }
    dend_43 { pt3dadd( 4.58908, 28.0395, -90.5034, 0.55 ) }
    dend_43 { pt3dadd( 6.8295, 36.8036, -96.3595, 0.55 ) }
    dend_43 { pt3dadd( 9.50495, 44.8201, -103.093, 0.55 ) }
    dend_43 { pt3dadd( 14.6158, 51.8308, -109.617, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 31/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 8.19321, -4.91929, -27.77, 1.66 ) }
    dend_40 { pt3dadd( 7.86372, -7.05184, -29.9624, 1.66 ) }
    dend_40 { pt3dadd( 7.57815, -8.90013, -31.8626, 1.11 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 34/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -36.1362, 5.55987, 21.5777, 0.55 ) }
    dend_38 { pt3dadd( -37.6004, 5.07369, 21.8025, 0.55 ) }
    dend_38 { pt3dadd( -41.499, 3.69691, 22.3436, 0.55 ) }
    dend_38 { pt3dadd( -42.2039, 3.46571, 22.428, 0.55 ) }
    dend_38 { pt3dadd( -44.1599, 2.86878, 22.6367, 0.55 ) }
    dend_38 { pt3dadd( -44.7006, 2.70092, 22.6916, 0.83 ) }
    dend_38 { pt3dadd( -46.7541, 2.03716, 22.9327, 0.55 ) }
    dend_38 { pt3dadd( -48.9277, 1.29856, 23.1842, 1.11 ) }
    dend_38 { pt3dadd( -51.3503, 0.457867, 23.4561, 0.55 ) }
    dend_38 { pt3dadd( -52.9581, -0.110895, 23.5932, 1.94 ) }
    dend_38 { pt3dadd( -54.4233, -0.609429, 23.6734, 1.94 ) }
    dend_38 { pt3dadd( -56.188, -1.19699, 23.7278, 0.55 ) }
    dend_38 { pt3dadd( -57.2592, -1.5821, 23.698, 0.55 ) }
    dend_38 { pt3dadd( -58.9846, -2.20526, 23.5603, 0.28 ) }
    dend_38 { pt3dadd( -60.7277, -2.83259, 23.3206, 1.94 ) }
    dend_38 { pt3dadd( -63.2403, -3.64873, 22.8826, 0.55 ) }
    dend_38 { pt3dadd( -64.0004, -3.87561, 22.739, 1.66 ) }
    dend_38 { pt3dadd( -66.8158, -4.61921, 22.1266, 0.55 ) }
    dend_38 { pt3dadd( -68.5773, -5.02479, 21.7839, 1.11 ) }
    dend_38 { pt3dadd( -71.312, -5.5917, 21.2858, 0.55 ) }
    dend_38 { pt3dadd( -72.5363, -5.82078, 21.1028, 0.55 ) }
    dend_38 { pt3dadd( -73.8531, -6.04929, 20.9277, 1.38 ) }
    dend_38 { pt3dadd( -77.9711, -6.69708, 20.4765, 0.28 ) }
    dend_38 { pt3dadd( -82.0903, -7.25252, 20.1483, 0.28 ) }
    dend_38 { pt3dadd( -83.1194, -7.39301, 20.0811, 1.38 ) }
    dend_38 { pt3dadd( -86.6414, -7.88599, 19.9286, 0.28 ) }
    dend_38 { pt3dadd( -88.6346, -8.16732, 19.8512, 0.83 ) }
    dend_38 { pt3dadd( -89.9391, -8.3368, 19.8132, 0.28 ) }
    dend_38 { pt3dadd( -91.7607, -8.59283, 19.8615, 0.55 ) }
    dend_38 { pt3dadd( -92.9566, -8.76393, 19.908, 0.28 ) }
    dend_38 { pt3dadd( -94.4928, -8.97232, 20.0048, 1.94 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 65/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -36.1362, 5.55987, 21.5777, 0.83 ) }
    dend_37 { pt3dadd( -41.1856, 5.42844, 23.9668, 0.83 ) }
    dend_37 { pt3dadd( -44.416, 5.40812, 25.2857, 1.66 ) }
    dend_37 { pt3dadd( -47.3171, 5.46799, 26.3455, 1.11 ) }
    dend_37 { pt3dadd( -50.3255, 5.61419, 27.3428, 1.11 ) }
    dend_37 { pt3dadd( -53.5929, 5.94611, 28.3771, 1.11 ) }
    dend_37 { pt3dadd( -56.3232, 6.29129, 29.2433, 1.11 ) }
    dend_37 { pt3dadd( -58.6621, 6.68384, 29.8715, 0.83 ) }
    dend_37 { pt3dadd( -61.3218, 7.2192, 30.5985, 1.11 ) }
    dend_37 { pt3dadd( -63.9104, 7.79676, 31.4074, 1.38 ) }
    dend_37 { pt3dadd( -68.7453, 8.92559, 33.2159, 0.55 ) }
    dend_37 { pt3dadd( -70.8096, 9.40787, 34.0882, 0.55 ) }
    dend_37 { pt3dadd( -73.4642, 9.96815, 35.2643, 0.55 ) }
    dend_37 { pt3dadd( -76.1814, 10.4661, 36.5536, 1.66 ) }
    dend_37 { pt3dadd( -79.0108, 10.8618, 37.9418, 1.66 ) }
    dend_37 { pt3dadd( -82.7726, 11.2253, 39.781, 1.11 ) }
    dend_37 { pt3dadd( -85.1003, 11.3374, 40.9211, 1.66 ) }
    dend_37 { pt3dadd( -88.3784, 11.4808, 42.5746, 0.83 ) }
    dend_37 { pt3dadd( -90.6371, 11.5289, 43.7111, 1.11 ) }
    dend_37 { pt3dadd( -92.3036, 11.5273, 44.5514, 0.55 ) }
    dend_37 { pt3dadd( -94.5237, 11.43, 45.5952, 0.83 ) }
    dend_37 { pt3dadd( -96.8671, 11.1655, 46.6918, 1.38 ) }
    dend_37 { pt3dadd( -99.5229, 10.6644, 48.1506, 0.55 ) }
    dend_37 { pt3dadd( -101.053, 10.1889, 49.2681, 0.55 ) }
    dend_37 { pt3dadd( -101.649, 9.93365, 49.75, 0.28 ) }
    dend_37 { pt3dadd( -102.83, 9.29679, 50.8312, 0.55 ) }
    dend_37 { pt3dadd( -105.249, 7.77104, 53.2755, 0.28 ) }
    dend_37 { pt3dadd( -106.988, 6.59712, 55.1015, 1.66 ) }
    dend_37 { pt3dadd( -110.544, 4.10672, 58.9947, 0.28 ) }
    dend_37 { pt3dadd( -111.267, 3.65061, 59.8445, 1.11 ) }
    dend_37 { pt3dadd( -113.054, 2.6475, 62.0116, 0.28 ) }
    dend_37 { pt3dadd( -114.099, 2.17109, 63.3912, 0.83 ) }
    dend_37 { pt3dadd( -115.703, 1.64336, 65.5434, 0.28 ) }
    dend_37 { pt3dadd( -116.156, 1.54299, 66.1523, 0.83 ) }
    dend_37 { pt3dadd( -118.734, 1.24025, 69.6861, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_37 { pt3dadd( -119.91, 1.19349, 71.3215, 1.66 ) }
    dend_37 { pt3dadd( -123.285, 1.22153, 75.9638, 0.55 ) }
    dend_37 { pt3dadd( -124.559, 1.25362, 77.6741, 0.28 ) }
    dend_37 { pt3dadd( -126.049, 1.31745, 79.6005, 1.11 ) }
    dend_37 { pt3dadd( -127.965, 1.36162, 81.9162, 0.55 ) }
    dend_37 { pt3dadd( -129.936, 1.35087, 84.0748, 0.55 ) }
    dend_37 { pt3dadd( -131.664, 1.28365, 85.784, 1.11 ) }
    dend_37 { pt3dadd( -134.568, 1.05477, 88.3848, 0.28 ) }
    dend_37 { pt3dadd( -135.363, 0.923396, 89.0934, 0.28 ) }
    dend_37 { pt3dadd( -138.109, 0.168254, 91.5285, 1.38 ) }
    dend_37 { pt3dadd( -141.024, -1.0203, 94.0934, 0.55 ) }
    dend_37 { pt3dadd( -142.526, -1.8741, 95.4501, 0.28 ) }
    dend_37 { pt3dadd( -143.586, -2.65627, 96.4109, 1.11 ) }
    dend_37 { pt3dadd( -146.156, -4.94926, 98.6934, 0.28 ) }
    dend_37 { pt3dadd( -147.756, -6.54207, 100.138, 1.38 ) }
    dend_37 { pt3dadd( -149.273, -8.25166, 101.515, 0.55 ) }
    dend_37 { pt3dadd( -150.543, -9.87023, 102.678, 1.11 ) }
    dend_37 { pt3dadd( -152.297, -12.2223, 104.288, 0.28 ) }
    dend_37 { pt3dadd( -153.711, -14.1575, 105.497, 0.28 ) }
    dend_37 { pt3dadd( -155.105, -15.9921, 106.57, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_27 (entry count 20/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -23.434, -9.3275, -2.70628, 1.38 ) }
    dend_35 { pt3dadd( -27.389, -9.32218, -2.95695, 1.38 ) }
    dend_35 { pt3dadd( -29.343, -9.24595, -3.29724, 1.38 ) }
    dend_35 { pt3dadd( -34.769, -8.73824, -4.2565, 1.38 ) }
    dend_35 { pt3dadd( -36.6629, -8.45743, -4.59046, 1.38 ) }
    dend_35 { pt3dadd( -38.9048, -8.01112, -4.97148, 1.11 ) }
    dend_35 { pt3dadd( -41.403, -7.4235, -5.30388, 1.11 ) }
    dend_35 { pt3dadd( -47.0684, -5.72476, -6.0672, 1.11 ) }
    dend_35 { pt3dadd( -50.1374, -4.60186, -6.42951, 1.11 ) }
    dend_35 { pt3dadd( -53.7933, -3.0111, -6.82873, 0.83 ) }
    dend_35 { pt3dadd( -56.902, -1.561, -7.1284, 0.83 ) }
    dend_35 { pt3dadd( -59.9499, -0.0834551, -7.35734, 1.38 ) }
    dend_35 { pt3dadd( -62.1128, 0.988886, -7.47723, 0.55 ) }
    dend_35 { pt3dadd( -64.1651, 2.04822, -7.54466, 0.55 ) }
    dend_35 { pt3dadd( -66.5947, 3.22184, -7.72154, 0.55 ) }
    dend_35 { pt3dadd( -69.1371, 4.38395, -7.95827, 1.66 ) }
    dend_35 { pt3dadd( -71.8687, 5.55781, -8.30966, 0.55 ) }
    dend_35 { pt3dadd( -73.1035, 6.16608, -8.5837, 1.11 ) }
    dend_35 { pt3dadd( -75.7973, 7.73082, -9.31907, 0.55 ) }
    dend_35 { pt3dadd( -77.06, 8.65608, -9.76968, 0.83 ) }
    dend_35 { pt3dadd( -78.2267, 9.63535, -10.2719, 0.28 ) }
    dend_35 { pt3dadd( -79.4879, 10.825, -10.9105, 0.83 ) }
    dend_35 { pt3dadd( -83.5269, 15.1211, -13.2996, 0.28 ) }
    dend_35 { pt3dadd( -85.0941, 16.9504, -14.245, 1.11 ) }
    dend_35 { pt3dadd( -87.4996, 20.0966, -15.6189, 0.55 ) }
    dend_35 { pt3dadd( -89.1418, 22.4229, -16.4738, 2.22 ) }
    dend_35 { pt3dadd( -90.3488, 24.2338, -17.0321, 0.55 ) }
    dend_35 { pt3dadd( -92.2838, 27.2818, -17.9066, 0.28 ) }
    dend_35 { pt3dadd( -93.5401, 29.2327, -18.3346, 0.83 ) }
    dend_35 { pt3dadd( -95.813, 32.8349, -19.0009, 0.28 ) }
    dend_35 { pt3dadd( -96.2278, 33.5325, -19.1004, 1.94 ) }
    dend_35 { pt3dadd( -97.041, 35.1015, -19.2859, 0.55 ) }
    dend_35 { pt3dadd( -99.0166, 39.154, -19.7292, 0.28 ) }
    dend_35 { pt3dadd( -99.9238, 41.0066, -20.0037, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 54/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -23.434, -9.3275, -2.70628, 1.66 ) }
    dend_28 { pt3dadd( -25.1791, -13.8715, -1.11042, 1.66 ) }
    dend_28 { pt3dadd( -27.8152, -20.7356, 1.3003, 1.66 ) }
    dend_28 { pt3dadd( -31.4015, -30.0739, 4.57995, 1.66 ) }
    dend_28 { pt3dadd( -33.4095, -35.3027, 6.41631, 1.66 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 59/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -4.11187, -7.33734, 11.6495, 0.83 ) }
    dend_19 { pt3dadd( -3.32755, -6.84594, 14.7159, 0.83 ) }
    dend_19 { pt3dadd( -2.06498, -5.82786, 19.8355, 0.83 ) }
    dend_19 { pt3dadd( -1.23474, -5.15841, 23.202, 0.83 ) }
    dend_19 { pt3dadd( -0.449856, -4.52551, 26.3846, 0.83 ) }
    dend_19 { pt3dadd( 0.59821, -3.68041, 30.6344, 0.83 ) }
    dend_19 { pt3dadd( 0.95089, -3.39602, 32.0645, 1.38 ) }
    dend_19 { pt3dadd( 0.99227, -3.31616, 32.3284, 1.38 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 67/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 14.6665, -5.339, 2.49066, 0.83 ) }
    dend_15 { pt3dadd( 19.7535, -6.93139, 2.59524, 0.83 ) }
    dend_15 { pt3dadd( 24.6616, -8.41954, 2.87191, 0.83 ) }
    dend_15 { pt3dadd( 31.0052, -10.4009, 3.17393, 0.83 ) }
    dend_15 { pt3dadd( 35.8138, -11.968, 3.36945, 0.83 ) }
    dend_15 { pt3dadd( 38.9035, -12.9734, 3.53944, 1.11 ) }
    dend_15 { pt3dadd( 41.2558, -13.751, 3.7127, 0.83 ) }
    dend_15 { pt3dadd( 44.3205, -14.7073, 4.1372, 1.11 ) }
    dend_15 { pt3dadd( 46.8438, -15.5206, 4.57067, 1.11 ) }
    dend_15 { pt3dadd( 50.6339, -17.0847, 5.33442, 0.83 ) }
    dend_15 { pt3dadd( 53.6727, -18.6435, 5.8877, 0.83 ) }
    dend_15 { pt3dadd( 55.208, -19.547, 6.1108, 0.83 ) }
    dend_15 { pt3dadd( 58.1918, -21.4508, 6.52199, 1.38 ) }
    dend_15 { pt3dadd( 60.3679, -22.9634, 6.84045, 0.83 ) }
    dend_15 { pt3dadd( 62.5445, -24.5343, 7.15846, 0.83 ) }
    dend_15 { pt3dadd( 64.548, -25.9767, 7.40764, 0.55 ) }
    dend_15 { pt3dadd( 66.265, -27.1642, 7.56075, 0.83 ) }
    dend_15 { pt3dadd( 68.5717, -28.6704, 7.73024, 0.83 ) }
    dend_15 { pt3dadd( 70.7269, -29.9858, 7.92798, 0.83 ) }
    dend_15 { pt3dadd( 73.425, -31.5403, 8.23131, 0.83 ) }
    dend_15 { pt3dadd( 78.4261, -34.323, 8.9083, 0.83 ) }
    dend_15 { pt3dadd( 80.8371, -35.6291, 9.26849, 1.11 ) }
    dend_15 { pt3dadd( 83.5551, -37.0199, 9.66449, 1.11 ) }
    dend_15 { pt3dadd( 86.0509, -38.2899, 9.87921, 0.55 ) }
    dend_15 { pt3dadd( 86.8331, -38.6821, 9.93773, 0.55 ) }
    dend_15 { pt3dadd( 89.3053, -40.055, 10.0547, 1.11 ) }
    dend_15 { pt3dadd( 91.2572, -41.2199, 9.9749, 0.55 ) }
    dend_15 { pt3dadd( 92.9738, -42.2433, 9.80984, 0.55 ) }
    dend_15 { pt3dadd( 96.7166, -44.2909, 9.03105, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 96/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 14.6665, -5.339, 2.49066, 0.83 ) }
    dend_12 { pt3dadd( 16.1124, -5.69735, 4.58282, 0.83 ) }
    dend_12 { pt3dadd( 19.5444, -6.54798, 9.54907, 0.83 ) }
    dend_12 { pt3dadd( 21.7409, -7.09233, 12.7272, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_12 { pt3dadd( 22.9016, -7.38003, 14.4069, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 1/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 7.10678, 18.7595, -3.28848, 1.38 ) }
    dend_6 { pt3dadd( 5.08275, 20.8003, -3.05666, 1.38 ) }
    dend_6 { pt3dadd( 3.11506, 22.7843, -2.83129, 1.38 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 4/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 7.10678, 18.7595, -3.28848, 1.94 ) }
    dend_1 { pt3dadd( 10.2304, 21.5612, -4.78579, 1.94 ) }
    dend_1 { pt3dadd( 11.5014, 22.7013, -5.39507, 1.94 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 7/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 36.3764, 19.6398, 0.0193083, 0.55 ) }
    axon_1 { pt3dadd( 49.6517, 26.623, 0.0193083, 0.55 ) }
    axon_1 { pt3dadd( 62.9271, 33.6062, 0.0193083, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 10/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -7.82266, 32.0997, 1.879, 0.83 ) }
    dend_53 { pt3dadd( -10.3183, 32.4879, 0.388696, 0.83 ) }
    dend_53 { pt3dadd( -13.8119, 33.0313, -1.69753, 0.83 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -7.82266, 32.0997, 1.879, 0.55 ) }
    dend_52 { pt3dadd( -7.65322, 34.7117, 1.80604, 0.55 ) }
    dend_52 { pt3dadd( -7.50618, 35.9423, 1.79713, 0.55 ) }
    dend_52 { pt3dadd( -7.28536, 37.496, 1.79841, 1.11 ) }
    dend_52 { pt3dadd( -6.86336, 40.6162, 1.81151, 0.83 ) }
    dend_52 { pt3dadd( -6.69249, 41.9393, 1.81203, 0.28 ) }
    dend_52 { pt3dadd( -6.58827, 42.6555, 1.80495, 0.83 ) }
    dend_52 { pt3dadd( -6.29883, 44.3964, 1.75046, 0.28 ) }
    dend_52 { pt3dadd( -5.97418, 46.1262, 1.70234, 0.83 ) }
    dend_52 { pt3dadd( -5.66086, 47.5861, 1.66853, 0.28 ) }
    dend_52 { pt3dadd( -5.2305, 49.6472, 1.63931, 1.38 ) }
    dend_52 { pt3dadd( -5.01581, 50.875, 1.61785, 0.28 ) }
    dend_52 { pt3dadd( -4.9328, 51.4253, 1.59677, 0.83 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 26/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 8.59375, 10.0547, 15.4928, 0.83 ) }
    dend_48 { pt3dadd( 12.4209, 12.3045, 21.4874, 0.83 ) }
    dend_48 { pt3dadd( 14.3039, 13.5703, 24.4852, 0.83 ) }
    dend_48 { pt3dadd( 16.1017, 14.9354, 27.257, 1.38 ) }
    dend_48 { pt3dadd( 18.5038, 17.0552, 31.1313, 1.11 ) }
    dend_48 { pt3dadd( 19.8433, 18.3453, 33.2801, 1.11 ) }
    dend_48 { pt3dadd( 20.6173, 19.1395, 34.4972, 1.11 ) }
    dend_48 { pt3dadd( 22.5779, 21.4618, 37.6252, 0.83 ) }
    dend_48 { pt3dadd( 24.3316, 23.6305, 40.1707, 1.11 ) }
    dend_48 { pt3dadd( 26.0124, 25.732, 42.4173, 0.55 ) }
    dend_48 { pt3dadd( 26.868, 26.8766, 43.536, 1.11 ) }
    dend_48 { pt3dadd( 28.8755, 29.6403, 46.1794, 1.11 ) }
    dend_48 { pt3dadd( 31.4044, 32.9928, 49.4488, 1.66 ) }
    dend_48 { pt3dadd( 34.0975, 36.2467, 52.7623, 0.83 ) }
    dend_48 { pt3dadd( 35.5583, 37.893, 54.5319, 1.66 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 41/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 14.6158, 51.8308, -109.617, 0.28 ) }
    dend_45 { pt3dadd( 15.0647, 58.2287, -119.111, 0.28 ) }
    dend_45 { pt3dadd( 16.4895, 63.7536, -129.084, 0.28 ) }
    dend_45 { pt3dadd( 17.911, 69.6846, -138.811, 0.28 ) }
    dend_45 { pt3dadd( 17.1649, 76.5824, -147.891, 0.28 ) }
    dend_45 { pt3dadd( 15.8111, 82.2251, -157.762, 0.28 ) }
    dend_45 { pt3dadd( 15.892, 88.0839, -167.617, 0.28 ) }
    dend_45 { pt3dadd( 15.1768, 94.1003, -177.333, 0.28 ) }
    dend_45 { pt3dadd( 13.4331, 99.8859, -187.049, 0.28 ) }
    dend_45 { pt3dadd( 10.7354, 105.461, -196.66, 0.28 ) }
    dend_45 { pt3dadd( 9.95845, 110.671, -206.849, 0.28 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 52/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 14.6158, 51.8308, -109.617, 0.28 ) }
    dend_44 { pt3dadd( 15.1115, 56.3926, -116.182, 0.28 ) }
    dend_44 { pt3dadd( 15.0226, 60.1895, -123.256, 0.28 ) }
    dend_44 { pt3dadd( 15.5331, 63.503, -130.565, 0.28 ) }
    dend_44 { pt3dadd( 17.6502, 66.2663, -137.831, 0.28 ) }
    dend_44 { pt3dadd( 18.6339, 69.0568, -145.322, 0.28 ) }
    dend_44 { pt3dadd( 19.7565, 71.7869, -152.817, 0.28 ) }
    dend_44 { pt3dadd( 19.3184, 74.0936, -160.527, 0.28 ) }
    dend_44 { pt3dadd( 18.0086, 76.7715, -168.006, 0.28 ) }
    dend_44 { pt3dadd( 16.6022, 79.112, -175.587, 0.28 ) }
    dend_44 { pt3dadd( 15.7015, 80.0636, -183.556, 0.28 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 63/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 7.57815, -8.90013, -31.8626, 0.55 ) }
    dend_42 { pt3dadd( 9.0488, -10.3454, -40.5266, 0.55 ) }
    dend_42 { pt3dadd( 9.55625, -10.8441, -43.5159, 0.55 ) }
    dend_42 { pt3dadd( 9.96035, -11.2413, -45.8969, 0.55 ) }
    dend_42 { pt3dadd( 12.4094, -13.5686, -56.577, 0.55 ) }
    dend_42 { pt3dadd( 13.9187, -15.7095, -67.468, 0.55 ) }
    dend_42 { pt3dadd( 14.51, -17.3653, -78.5335, 0.55 ) }
    dend_42 { pt3dadd( 16.3211, -20.436, -89.1417, 0.55 ) }
    dend_42 { pt3dadd( 20.2433, -21.932, -99.5365, 0.55 ) }
    dend_42 { pt3dadd( 23.7955, -22.2445, -110.168, 0.55 ) }
    dend_42 { pt3dadd( 26.1479, -21.9622, -121.128, 0.55 ) }
    dend_42 { pt3dadd( 29.389, -23.7098, -131.714, 0.55 ) }
    dend_42 { pt3dadd( 33.5956, -28.0481, -141.119, 0.55 ) }
    dend_42 { pt3dadd( 37.1953, -33.0371, -150.436, 0.55 ) }
    dend_42 { pt3dadd( 42.5299, -38.3306, -158.695, 0.55 ) }
    dend_42 { pt3dadd( 47.535, -44.1783, -166.766, 0.55 ) }
    dend_42 { pt3dadd( 51.5308, -50.3905, -175.104, 0.55 ) }
    dend_42 { pt3dadd( 55.9925, -55.6792, -183.863, 0.55 ) }
    dend_42 { pt3dadd( 58.391, -63.1041, -191.75, 0.55 ) }
    dend_42 { pt3dadd( 61.8325, -72.2949, -196.813, 0.55 ) }
    dend_42 { pt3dadd( 65.5401, -80.9355, -202.645, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 84/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 7.57815, -8.90013, -31.8626, 0.55 ) }
    dend_41 { pt3dadd( 7.21958, -9.65297, -33.4333, 0.55 ) }
    dend_41 { pt3dadd( 5.74127, -12.7568, -39.9083, 0.55 ) }
    dend_41 { pt3dadd( 4.51504, -15.3313, -45.2794, 0.55 ) }
    dend_41 { pt3dadd( 3.20591, -20.6484, -56.8972, 0.55 ) }
    dend_41 { pt3dadd( 3.92605, -23.5056, -69.432, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 90/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -33.4095, -35.3027, 6.41631, 0.55 ) }
    dend_32 { pt3dadd( -34.8223, -39.2351, 5.69525, 0.55 ) }
    dend_32 { pt3dadd( -36.3872, -43.704, 5.04885, 0.28 ) }
    dend_32 { pt3dadd( -37.0494, -45.879, 4.87636, 0.28 ) }
    dend_32 { pt3dadd( -37.6096, -48.2563, 4.7094, 0.28 ) }
    dend_32 { pt3dadd( -38.4267, -52.8124, 4.4235, 0.55 ) }
    dend_32 { pt3dadd( -38.9492, -55.726, 4.24067, 0.55 ) }
    dend_32 { pt3dadd( -39.5709, -60.0682, 4.25164, 0.55 ) }
    dend_32 { pt3dadd( -40.0047, -63.7061, 4.40418, 0.55 ) }
    dend_32 { pt3dadd( -40.2274, -67.3917, 4.52125, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_32 { pt3dadd( -40.1976, -69.1866, 4.5822, 0.28 ) }
    dend_32 { pt3dadd( -41.1614, -79.2329, 5.63686, 0.28 ) }
    dend_32 { pt3dadd( -40.4729, -89.2961, 6.77756, 0.28 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 3/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -33.4095, -35.3027, 6.41631, 1.11 ) }
    dend_29 { pt3dadd( -33.891, -37.6202, 7.45266, 1.11 ) }
    dend_29 { pt3dadd( -34.3597, -39.8757, 8.46121, 1.11 ) }
    dend_29 { pt3dadd( -34.8274, -42.1268, 9.46783, 1.11 ) }
    dend_29 { pt3dadd( -35.2341, -44.0832, 10.3427, 1.11 ) }
    // Section: dend_25, id: dend_25, parent: dend_19 (entry count 8/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 0.99227, -3.31616, 32.3284, 0.55 ) }
    dend_25 { pt3dadd( 1.63329, -3.98673, 34.8671, 0.55 ) }
    dend_25 { pt3dadd( 1.82349, -4.15744, 35.5554, 0.83 ) }
    dend_25 { pt3dadd( 4.1498, -5.90957, 43.1149, 0.28 ) }
    dend_25 { pt3dadd( 4.54752, -6.20504, 44.455, 0.83 ) }
    dend_25 { pt3dadd( 5.42605, -6.89775, 47.56, 0.55 ) }
    dend_25 { pt3dadd( 5.89263, -7.26149, 49.3404, 1.11 ) }
    dend_25 { pt3dadd( 7.05869, -8.11086, 53.923, 0.55 ) }
    dend_25 { pt3dadd( 7.80566, -8.61045, 56.8064, 1.38 ) }
    dend_25 { pt3dadd( 9.21765, -9.54065, 62.1592, 0.55 ) }
    dend_25 { pt3dadd( 9.96905, -10.0346, 64.9823, 1.38 ) }
    dend_25 { pt3dadd( 11.5123, -10.9759, 70.7575, 0.28 ) }
    dend_25 { pt3dadd( 11.966, -11.2378, 72.4097, 1.11 ) }
    dend_25 { pt3dadd( 12.544, -11.5898, 74.505, 0.55 ) }
    dend_25 { pt3dadd( 13.2959, -11.9927, 77.044, 1.66 ) }
    dend_25 { pt3dadd( 14.4058, -12.4085, 80.3432, 0.55 ) }
    dend_25 { pt3dadd( 15.2528, -12.6046, 82.7164, 0.83 ) }
    dend_25 { pt3dadd( 16.1961, -12.742, 85.2039, 0.28 ) }
    dend_25 { pt3dadd( 16.6871, -12.7874, 86.5388, 1.11 ) }
    dend_25 { pt3dadd( 17.7304, -12.8107, 89.4438, 0.55 ) }
    dend_25 { pt3dadd( 18.3508, -12.7544, 91.1719, 1.38 ) }
    dend_25 { pt3dadd( 20.392, -12.3548, 96.7993, 0.28 ) }
    dend_25 { pt3dadd( 21.2276, -12.1803, 99.0509, 1.11 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 31/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 0.99227, -3.31616, 32.3284, 1.38 ) }
    dend_20 { pt3dadd( 1.49945, -3.41048, 33.0685, 1.38 ) }
    dend_20 { pt3dadd( 3.09694, -3.70755, 35.3999, 1.66 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 34/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 96.7166, -44.2909, 9.03105, 0.28 ) }
    dend_17 { pt3dadd( 98.7727, -43.4519, 10.0836, 0.28 ) }
    dend_17 { pt3dadd( 100.342, -42.8116, 10.8866, 0.55 ) }
    dend_17 { pt3dadd( 101.645, -42.2798, 11.5537, 1.11 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 38/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 96.7166, -44.2909, 9.03105, 0.83 ) }
    dend_16 { pt3dadd( 98.2965, -45.1396, 8.97775, 0.83 ) }
    dend_16 { pt3dadd( 99.999, -46.0705, 8.913, 1.94 ) }
    dend_16 { pt3dadd( 101.336, -46.8138, 8.85698, 1.11 ) }
    dend_16 { pt3dadd( 104.89, -48.7736, 8.7122, 0.83 ) }
    dend_16 { pt3dadd( 107.727, -50.3089, 8.60669, 0.83 ) }
    dend_16 { pt3dadd( 109.661, -51.3283, 8.54433, 1.38 ) }
    dend_16 { pt3dadd( 111.584, -52.2722, 8.53688, 0.55 ) }
    dend_16 { pt3dadd( 113.453, -53.1416, 8.56917, 1.94 ) }
    dend_16 { pt3dadd( 115.441, -54.058, 8.627, 0.55 ) }
    dend_16 { pt3dadd( 116.821, -54.6924, 8.70971, 0.55 ) }
    dend_16 { pt3dadd( 118.402, -55.4116, 8.84875, 1.11 ) }
    dend_16 { pt3dadd( 121.836, -57.0634, 9.2308, 0.55 ) }
    dend_16 { pt3dadd( 122.528, -57.4171, 9.35206, 0.55 ) }
    dend_16 { pt3dadd( 124.789, -58.6738, 9.83998, 1.11 ) }
    dend_16 { pt3dadd( 126.286, -59.6384, 10.2353, 0.55 ) }
    dend_16 { pt3dadd( 127.34, -60.3757, 10.5444, 0.55 ) }
    dend_16 { pt3dadd( 129.558, -62.0689, 11.2985, 0.83 ) }
    dend_16 { pt3dadd( 131.671, -63.7994, 12.1349, 0.28 ) }
    dend_16 { pt3dadd( 132.755, -64.653, 12.603, 1.38 ) }
    dend_16 { pt3dadd( 134.598, -66.0019, 13.4305, 0.55 ) }
    dend_16 { pt3dadd( 136.29, -67.1308, 14.2418, 0.55 ) }
    dend_16 { pt3dadd( 137.299, -67.7681, 14.7463, 0.83 ) }
    dend_16 { pt3dadd( 138.947, -68.6952, 15.6091, 0.55 ) }
    dend_16 { pt3dadd( 140.259, -69.3713, 16.3088, 0.55 ) }
    dend_16 { pt3dadd( 141.869, -70.1354, 17.2388, 1.66 ) }
    dend_16 { pt3dadd( 144.603, -71.3572, 18.8772, 0.55 ) }
    dend_16 { pt3dadd( 146.003, -72.0524, 19.7558, 0.28 ) }
    dend_16 { pt3dadd( 147.447, -72.8218, 20.7018, 0.83 ) }
    dend_16 { pt3dadd( 149.188, -73.8936, 22.0629, 0.55 ) }
    dend_16 { pt3dadd( 151.051, -75.1577, 23.6965, 0.55 ) }
    dend_16 { pt3dadd( 151.798, -75.6973, 24.3878, 1.38 ) }
    dend_16 { pt3dadd( 154.158, -77.4923, 26.6217, 0.28 ) }
    dend_16 { pt3dadd( 155.665, -78.6982, 28.1434, 1.11 ) }
    dend_16 { pt3dadd( 158.834, -81.4244, 31.4979, 0.28 ) }
    dend_16 { pt3dadd( 159.321, -81.8755, 32.0592, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 74/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 22.9016, -7.38003, 14.4069, 0.28 ) }
    dend_14 { pt3dadd( 24.616, -9.28461, 15.9125, 0.28 ) }
    dend_14 { pt3dadd( 24.7776, -9.45822, 16.0478, 0.83 ) }
    dend_14 { pt3dadd( 25.9981, -10.72, 16.9441, 0.83 ) }
    dend_14 { pt3dadd( 27.4771, -12.2102, 17.8925, 0.28 ) }
    dend_14 { pt3dadd( 28.3113, -12.9919, 18.3787, 0.83 ) }
    dend_14 { pt3dadd( 29.8998, -14.5183, 19.2767, 0.28 ) }
    dend_14 { pt3dadd( 30.4522, -15.0715, 19.5487, 0.55 ) }
    dend_14 { pt3dadd( 32.1967, -16.8935, 20.4281, 0.28 ) }
    dend_14 { pt3dadd( 33.2392, -18.0198, 20.936, 0.55 ) }
    dend_14 { pt3dadd( 35.2934, -20.2861, 21.9251, 0.28 ) }
    dend_14 { pt3dadd( 37.3548, -22.6711, 23.0324, 0.28 ) }
    dend_14 { pt3dadd( 39.0523, -24.6618, 23.9369, 1.11 ) }
    dend_14 { pt3dadd( 41.6701, -27.8544, 25.4198, 0.55 ) }
    dend_14 { pt3dadd( 42.9195, -29.4438, 26.1839, 1.66 ) }
    dend_14 { pt3dadd( 44.1135, -31.0351, 26.9698, 0.28 ) }
    dend_14 { pt3dadd( 45.084, -32.4305, 27.6445, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 91/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 22.9016, -7.38003, 14.4069, 0.55 ) }
    dend_13 { pt3dadd( 25.1115, -8.39011, 18.6172, 0.55 ) }
    dend_13 { pt3dadd( 29.1132, -10.2192, 26.2416, 0.55 ) }
    dend_13 { pt3dadd( 30.5581, -10.8797, 28.9942, 0.55 ) }
    dend_13 { pt3dadd( 31.8102, -11.452, 31.3799, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 96/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 3.11506, 22.7843, -2.83129, 0.55 ) }
    dend_8 { pt3dadd( 1.97262, 24.1457, -3.38373, 0.55 ) }
    dend_8 { pt3dadd( -0.0613268, 26.5695, -4.36726, 0.55 ) }
    dend_8 { pt3dadd( -1.4746, 28.2536, -5.05066, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_8 { pt3dadd( -2.61765, 29.6157, -5.6034, 1.11 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 1/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 3.11506, 22.7843, -2.83129, 0.83 ) }
    dend_7 { pt3dadd( 0.54474, 24.2825, -6.56823, 0.83 ) }
    dend_7 { pt3dadd( -0.468595, 24.8766, -7.89033, 0.83 ) }
    dend_7 { pt3dadd( -1.75626, 25.7358, -9.3889, 0.83 ) }
    dend_7 { pt3dadd( -3.87343, 27.1745, -11.7928, 0.83 ) }
    dend_7 { pt3dadd( -7.14563, 29.3512, -15.34, 0.83 ) }
    dend_7 { pt3dadd( -8.2646, 30.0479, -16.5158, 1.38 ) }
    dend_7 { pt3dadd( -10.2021, 31.2643, -18.3895, 0.83 ) }
    dend_7 { pt3dadd( -12.5606, 32.8704, -20.8346, 0.83 ) }
    dend_7 { pt3dadd( -14.5784, 34.3841, -23.1302, 0.83 ) }
    dend_7 { pt3dadd( -15.6964, 35.2953, -24.5328, 1.38 ) }
    dend_7 { pt3dadd( -17.5163, 37.0282, -27.2381, 0.55 ) }
    dend_7 { pt3dadd( -18.7805, 38.4547, -29.621, 0.83 ) }
    dend_7 { pt3dadd( -19.8456, 39.9181, -32.3079, 0.83 ) }
    dend_7 { pt3dadd( -20.5489, 41.1703, -34.8561, 0.83 ) }
    dend_7 { pt3dadd( -21.0702, 42.513, -37.4875, 1.38 ) }
    dend_7 { pt3dadd( -21.6607, 44.7598, -41.8695, 0.55 ) }
    dend_7 { pt3dadd( -21.7276, 45.105, -42.5377, 0.55 ) }
    dend_7 { pt3dadd( -21.9265, 45.8795, -44.0439, 1.11 ) }
    dend_7 { pt3dadd( -22.5391, 47.4977, -46.9271, 0.55 ) }
    dend_7 { pt3dadd( -22.9741, 48.4609, -48.361, 0.55 ) }
    dend_7 { pt3dadd( -23.7304, 49.8448, -50.0332, 1.11 ) }
    dend_7 { pt3dadd( -24.6583, 51.2534, -51.3332, 0.55 ) }
    dend_7 { pt3dadd( -25.9011, 53.0512, -52.7, 1.11 ) }
    dend_7 { pt3dadd( -26.9135, 54.4595, -53.633, 0.28 ) }
    dend_7 { pt3dadd( -27.9431, 55.8618, -54.4174, 0.83 ) }
    dend_7 { pt3dadd( -29.4184, 57.862, -55.4755, 0.28 ) }
    dend_7 { pt3dadd( -30.997, 60.0291, -56.4472, 0.28 ) }
    dend_7 { pt3dadd( -32.5476, 62.2654, -57.3131, 1.11 ) }
    dend_7 { pt3dadd( -36.1422, 65.9193, -64.8606, 1.11 ) }
    dend_7 { pt3dadd( -38.9931, 69.5888, -72.712, 1.11 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 32/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 11.5014, 22.7013, -5.39507, 1.11 ) }
    dend_5 { pt3dadd( 13.111, 23.2446, -4.75672, 1.11 ) }
    dend_5 { pt3dadd( 16.3587, 24.33, -3.33319, 0.83 ) }
    dend_5 { pt3dadd( 19.5845, 25.3956, -1.85797, 0.83 ) }
    dend_5 { pt3dadd( 22.2817, 26.2413, -0.558605, 0.83 ) }
    dend_5 { pt3dadd( 23.5584, 26.6234, 0.0545498, 0.55 ) }
    dend_5 { pt3dadd( 26.1245, 27.3883, 1.3119, 1.11 ) }
    dend_5 { pt3dadd( 28.3358, 28.0544, 2.48161, 0.55 ) }
    dend_5 { pt3dadd( 30.0108, 28.532, 3.39687, 1.38 ) }
    dend_5 { pt3dadd( 31.9894, 29.1192, 4.52844, 0.55 ) }
    dend_5 { pt3dadd( 33.4225, 29.5756, 5.33127, 0.55 ) }
    dend_5 { pt3dadd( 35.9502, 30.4721, 6.75482, 0.83 ) }
    dend_5 { pt3dadd( 37.9351, 31.2642, 7.82487, 0.28 ) }
    dend_5 { pt3dadd( 38.6815, 31.5925, 8.23359, 0.83 ) }
    dend_5 { pt3dadd( 40.1982, 32.3487, 9.06984, 0.28 ) }
    dend_5 { pt3dadd( 42.3512, 33.4909, 10.2373, 1.11 ) }
    dend_5 { pt3dadd( 44.4436, 34.6262, 11.446, 0.28 ) }
    dend_5 { pt3dadd( 45.6255, 35.2606, 12.1709, 1.66 ) }
    dend_5 { pt3dadd( 48.2878, 36.6593, 13.9741, 0.55 ) }
    dend_5 { pt3dadd( 49.4509, 37.2424, 14.7933, 0.55 ) }
    dend_5 { pt3dadd( 50.4509, 37.7069, 15.4945, 0.55 ) }
    dend_5 { pt3dadd( 52.9562, 38.7773, 17.2281, 1.38 ) }
    dend_5 { pt3dadd( 54.7281, 39.4575, 18.3889, 0.28 ) }
    dend_5 { pt3dadd( 56.7037, 40.116, 19.7295, 0.83 ) }
    dend_5 { pt3dadd( 58.4136, 40.5915, 20.9445, 1.11 ) }
    dend_5 { pt3dadd( 59.4482, 40.8304, 21.6732, 1.11 ) }
    dend_5 { pt3dadd( 60.306, 41.0032, 22.2483, 0.28 ) }
    dend_5 { pt3dadd( 61.3772, 41.1677, 22.9445, 0.83 ) }
    dend_5 { pt3dadd( 66.0951, 41.7272, 26.0028, 0.28 ) }
    dend_5 { pt3dadd( 68.3119, 41.9068, 27.4913, 1.38 ) }
    dend_5 { pt3dadd( 69.3893, 41.9687, 28.2538, 0.28 ) }
    dend_5 { pt3dadd( 70.6413, 42.0646, 29.1905, 1.11 ) }
    dend_5 { pt3dadd( 72.972, 42.3208, 31.0882, 0.28 ) }
    dend_5 { pt3dadd( 73.2543, 42.3655, 31.329, 0.55 ) }
    dend_5 { pt3dadd( 75.2727, 42.8203, 33.0672, 0.28 ) }
    dend_5 { pt3dadd( 76.0083, 43.0686, 33.7785, 1.38 ) }
    dend_5 { pt3dadd( 79.0013, 44.393, 36.994, 0.28 ) }
    dend_5 { pt3dadd( 80.5087, 45.31, 38.9977, 0.83 ) }
    dend_5 { pt3dadd( 81.2639, 45.8568, 40.0887, 0.28 ) }
    dend_5 { pt3dadd( 81.7443, 46.2258, 40.8086, 1.11 ) }
    dend_5 { pt3dadd( 83.7118, 47.8338, 43.8282, 0.28 ) }
    dend_5 { pt3dadd( 84.3329, 48.3578, 44.7996, 1.11 ) }
    dend_5 { pt3dadd( 88.4276, 51.9337, 51.1942, 0.28 ) }
    dend_5 { pt3dadd( 89.0468, 52.49, 52.1431, 1.38 ) }
    dend_5 { pt3dadd( 90.7413, 54.0806, 54.717, 0.28 ) }
    dend_5 { pt3dadd( 91.1901, 54.5008, 55.3907, 1.38 ) }
    dend_5 { pt3dadd( 92.8413, 56.0397, 57.7868, 0.28 ) }
    dend_5 { pt3dadd( 93.1057, 56.2848, 58.1535, 0.83 ) }
    dend_5 { pt3dadd( 95.195, 58.3737, 60.5393, 0.55 ) }
    dend_5 { pt3dadd( 95.8711, 59.1515, 61.4275, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 82/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 11.5014, 22.7013, -5.39507, 1.38 ) }
    dend_2 { pt3dadd( 12.3255, 24.0912, -7.36014, 1.38 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 84/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 35.5583, 37.893, 54.5319, 0.55 ) }
    dend_50 { pt3dadd( 36.7853, 37.6225, 55.1476, 0.55 ) }
    dend_50 { pt3dadd( 38.2028, 37.335, 55.8264, 0.55 ) }
    dend_50 { pt3dadd( 40.9577, 36.8337, 57.0394, 0.55 ) }
    dend_50 { pt3dadd( 42.6358, 36.5577, 57.7567, 1.11 ) }
    dend_50 { pt3dadd( 45.5958, 36.0493, 58.8125, 0.55 ) }
    dend_50 { pt3dadd( 47.7681, 35.684, 59.5198, 0.55 ) }
    dend_50 { pt3dadd( 49.0538, 35.4632, 59.9002, 0.28 ) }
    dend_50 { pt3dadd( 50.4165, 35.2735, 60.2702, 0.83 ) }
    dend_50 { pt3dadd( 52.6109, 34.9885, 60.7883, 0.55 ) }
    dend_50 { pt3dadd( 55.6083, 34.6116, 61.4886, 0.83 ) }
    dend_50 { pt3dadd( 58.0918, 34.3266, 62.0547, 0.28 ) }
    dend_50 { pt3dadd( 60.9538, 34.0319, 62.7884, 0.83 ) }
    dend_50 { pt3dadd( 63.6503, 33.7967, 63.5379, 0.28 ) }
    dend_50 { pt3dadd( 64.0688, 33.7686, 63.6701, 0.28 ) }
    dend_50 { pt3dadd( 65.4671, 33.7345, 64.1476, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_50 { pt3dadd( 66.9928, 33.7922, 64.7431, 0.28 ) }
    dend_50 { pt3dadd( 68.1918, 33.8912, 65.2261, 0.83 ) }
    dend_50 { pt3dadd( 69.6115, 34.1013, 65.8854, 0.28 ) }
    dend_50 { pt3dadd( 70.7159, 34.2639, 66.3587, 0.83 ) }
    dend_50 { pt3dadd( 71.7139, 34.4298, 66.7894, 0.28 ) }
    dend_50 { pt3dadd( 73.0623, 34.69, 67.3654, 0.83 ) }
    dend_50 { pt3dadd( 75.1862, 35.1484, 68.3733, 0.28 ) }
    dend_50 { pt3dadd( 76.1969, 35.3875, 68.9111, 0.55 ) }
    dend_50 { pt3dadd( 78.2386, 36.0037, 70.1199, 0.28 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 9/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 35.5583, 37.893, 54.5319, 0.83 ) }
    dend_49 { pt3dadd( 36.8784, 39.6863, 56.7784, 0.83 ) }
    dend_49 { pt3dadd( 38.116, 41.3807, 59.1191, 0.83 ) }
    dend_49 { pt3dadd( 39.3786, 43.0949, 61.5722, 0.55 ) }
    dend_49 { pt3dadd( 39.8186, 43.6889, 62.6083, 0.55 ) }
    dend_49 { pt3dadd( 40.9635, 45.1787, 65.3683, 0.83 ) }
    dend_49 { pt3dadd( 41.9148, 46.4204, 67.7299, 0.55 ) }
    dend_49 { pt3dadd( 42.7942, 47.5141, 69.9489, 0.83 ) }
    dend_49 { pt3dadd( 43.2715, 48.124, 71.1094, 1.38 ) }
    dend_49 { pt3dadd( 46.0479, 51.9598, 77.9077, 0.55 ) }
    dend_49 { pt3dadd( 47.4216, 54.0255, 81.2858, 1.38 ) }
    dend_49 { pt3dadd( 48.8685, 56.5017, 84.7964, 0.55 ) }
    dend_49 { pt3dadd( 49.1363, 57.0417, 85.4305, 1.11 ) }
    dend_49 { pt3dadd( 50.1996, 59.6627, 87.9996, 0.55 ) }
    dend_49 { pt3dadd( 50.6866, 61.218, 89.2749, 0.83 ) }
    dend_49 { pt3dadd( 50.923, 62.2619, 89.9315, 0.83 ) }
    dend_49 { pt3dadd( 51.3702, 65.0739, 91.6279, 0.55 ) }
    dend_49 { pt3dadd( 51.7966, 68.4233, 93.5755, 0.83 ) }
    dend_49 { pt3dadd( 52.0848, 71.1796, 95.2552, 1.11 ) }
    dend_49 { pt3dadd( 52.2873, 73.6479, 96.8752, 0.55 ) }
    dend_49 { pt3dadd( 52.3247, 74.1665, 97.2296, 0.83 ) }
    dend_49 { pt3dadd( 52.4903, 76.2853, 98.7563, 0.28 ) }
    dend_49 { pt3dadd( 52.7039, 78.8005, 100.621, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 32/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -40.4729, -89.2961, 6.77756, 0.28 ) }
    dend_34 { pt3dadd( -41.8739, -99.5968, 7.80125, 0.28 ) }
    dend_34 { pt3dadd( -41.7149, -109.731, 10.2773, 0.28 ) }
    dend_34 { pt3dadd( -41.6166, -119.595, 13.6438, 0.28 ) }
    dend_34 { pt3dadd( -40.6692, -129.752, 15.889, 0.28 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 37/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -40.4729, -89.2961, 6.77756, 0.28 ) }
    dend_33 { pt3dadd( -41.2789, -95.847, 7.07066, 0.28 ) }
    dend_33 { pt3dadd( -41.7935, -102.404, 7.64959, 0.28 ) }
    dend_33 { pt3dadd( -41.3744, -108.837, 9.0413, 0.28 ) }
    dend_33 { pt3dadd( -40.7067, -115.308, 10.1608, 0.28 ) }
    dend_33 { pt3dadd( -39.4789, -121.658, 11.5028, 0.28 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 43/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -35.2341, -44.0832, 10.3427, 1.11 ) }
    dend_31 { pt3dadd( -37.0326, -45.1542, 12.9186, 1.11 ) }
    dend_31 { pt3dadd( -39.1004, -46.1541, 15.6606, 1.11 ) }
    dend_31 { pt3dadd( -42.9804, -48.0301, 20.8054, 1.11 ) }
    dend_31 { pt3dadd( -45.2161, -49.1111, 23.7702, 1.11 ) }
    dend_31 { pt3dadd( -47.3226, -50.1296, 26.5633, 1.11 ) }
    dend_31 { pt3dadd( -49.4756, -51.1706, 29.4181, 1.38 ) }
    dend_31 { pt3dadd( -53.1912, -52.7644, 34.3331, 1.11 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -35.2341, -44.0832, 10.3427, 0.83 ) }
    dend_30 { pt3dadd( -35.8025, -46.1936, 11.5345, 0.83 ) }
    dend_30 { pt3dadd( -36.6096, -48.7919, 12.9113, 0.83 ) }
    dend_30 { pt3dadd( -37.4569, -51.3615, 14.257, 0.83 ) }
    dend_30 { pt3dadd( -39.3324, -56.8307, 17.0959, 0.83 ) }
    dend_30 { pt3dadd( -40.6164, -60.6064, 19.0852, 0.83 ) }
    dend_30 { pt3dadd( -41.6845, -63.6673, 20.696, 0.83 ) }
    dend_30 { pt3dadd( -42.8004, -66.4973, 22.2532, 0.83 ) }
    dend_30 { pt3dadd( -43.6416, -68.5729, 23.4973, 0.83 ) }
    dend_30 { pt3dadd( -44.173, -69.907, 24.3177, 0.83 ) }
    dend_30 { pt3dadd( -45.0122, -71.7445, 25.6385, 0.83 ) }
    dend_30 { pt3dadd( -46.791, -75.7133, 28.7907, 0.83 ) }
    dend_30 { pt3dadd( -48.1208, -78.4914, 31.1394, 0.55 ) }
    dend_30 { pt3dadd( -48.9952, -80.4524, 33.0318, 0.28 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 65/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 3.09694, -3.70755, 35.3999, 0.55 ) }
    dend_24 { pt3dadd( 2.53038, -4.00039, 38.0613, 0.55 ) }
    dend_24 { pt3dadd( 1.70948, -4.36206, 42.1866, 1.11 ) }
    dend_24 { pt3dadd( 1.00512, -4.67027, 45.7582, 0.83 ) }
    dend_24 { pt3dadd( 0.32085, -4.92001, 48.9642, 1.66 ) }
    dend_24 { pt3dadd( -1.0366, -5.28767, 55.0438, 1.11 ) }
    dend_24 { pt3dadd( -1.52363, -5.38663, 57.1678, 1.38 ) }
    dend_24 { pt3dadd( -2.89926, -5.48307, 62.5715, 0.83 ) }
    dend_24 { pt3dadd( -3.49589, -5.51173, 64.7419, 1.66 ) }
    dend_24 { pt3dadd( -4.71872, -5.57141, 68.6693, 0.83 ) }
    dend_24 { pt3dadd( -5.33071, -5.62561, 70.3701, 0.83 ) }
    dend_24 { pt3dadd( -6.12967, -5.78807, 72.1896, 1.38 ) }
    dend_24 { pt3dadd( -6.91365, -5.9818, 73.6711, 1.38 ) }
    dend_24 { pt3dadd( -8.3937, -6.31009, 75.8556, 0.83 ) }
    dend_24 { pt3dadd( -10.2407, -6.69604, 78.1781, 0.55 ) }
    dend_24 { pt3dadd( -10.665, -6.80586, 78.6811, 0.55 ) }
    dend_24 { pt3dadd( -11.7596, -7.15333, 80.0301, 0.83 ) }
    dend_24 { pt3dadd( -13.0264, -7.63118, 81.7056, 0.55 ) }
    dend_24 { pt3dadd( -13.522, -7.8435, 82.4834, 0.55 ) }
    dend_24 { pt3dadd( -14.8335, -8.44457, 84.7785, 1.11 ) }
    dend_24 { pt3dadd( -16.4651, -9.24765, 87.8493, 0.55 ) }
    dend_24 { pt3dadd( -17.4207, -9.7067, 89.6404, 0.83 ) }
    dend_24 { pt3dadd( -18.6094, -10.279, 91.7664, 1.38 ) }
    dend_24 { pt3dadd( -20.4951, -11.2883, 95.2831, 0.55 ) }
    dend_24 { pt3dadd( -20.9513, -11.5526, 96.1606, 0.83 ) }
    dend_24 { pt3dadd( -22.0222, -12.188, 98.1978, 0.83 ) }
    dend_24 { pt3dadd( -23.0326, -12.6426, 99.7991, 0.55 ) }
    dend_24 { pt3dadd( -23.9044, -12.9117, 100.981, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 93/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 3.09694, -3.70755, 35.3999, 0.83 ) }
    dend_21 { pt3dadd( 6.25467, -4.60232, 38.3502, 0.83 ) }
    dend_21 { pt3dadd( 9.31755, -5.5034, 41.3168, 0.83 ) }
    dend_21 { pt3dadd( 12.9746, -6.57925, 44.8587, 0.83 ) }
    dend_21 { pt3dadd( 15.8401, -7.42231, 47.6341, 0.83 ) }
    dend_21 { pt3dadd( 19.5215, -8.50536, 51.1997, 0.83 ) }
    dend_21 { pt3dadd( 23.8771, -9.78672, 55.4182, 1.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_21 { pt3dadd( 27.7255, -11.0012, 59.5873, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 1/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -2.61765, 29.6157, -5.6034, 0.55 ) }
    dend_10 { pt3dadd( -1.86667, 31.7386, -3.20089, 0.55 ) }
    dend_10 { pt3dadd( -0.874878, 34.6099, -0.237776, 0.28 ) }
    dend_10 { pt3dadd( -0.719397, 35.082, 0.223425, 0.83 ) }
    dend_10 { pt3dadd( 1.50675, 41.4023, 6.10037, 0.28 ) }
    dend_10 { pt3dadd( 1.91363, 42.4846, 7.06015, 1.38 ) }
    dend_10 { pt3dadd( 5.35088, 51.1617, 13.9925, 0.28 ) }
    dend_10 { pt3dadd( 5.95079, 52.6136, 15.0216, 1.66 ) }
    dend_10 { pt3dadd( 7.93093, 57.116, 17.8753, 0.28 ) }
    dend_10 { pt3dadd( 8.98285, 59.3331, 19.1717, 0.28 ) }
    dend_10 { pt3dadd( 9.83715, 60.9714, 19.9642, 1.66 ) }
    dend_10 { pt3dadd( 12.6758, 66.1598, 22.231, 0.28 ) }
    dend_10 { pt3dadd( 14.3008, 68.8766, 23.1624, 1.38 ) }
    dend_10 { pt3dadd( 15.9259, 71.5236, 24.073, 0.28 ) }
    dend_10 { pt3dadd( 16.7022, 72.758, 24.4438, 0.55 ) }
    dend_10 { pt3dadd( 18.2826, 75.5014, 25.3644, 0.28 ) }
    dend_10 { pt3dadd( 18.7941, 76.4198, 25.7141, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 18/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -2.61765, 29.6157, -5.6034, 0.28 ) }
    dend_9 { pt3dadd( -8.94082, 33.4343, -5.23439, 0.28 ) }
    dend_9 { pt3dadd( -10.1924, 34.2191, -5.27267, 0.83 ) }
    dend_9 { pt3dadd( -13.014, 36.0465, -5.39768, 0.28 ) }
    dend_9 { pt3dadd( -14.6243, 37.2112, -5.30358, 0.83 ) }
    dend_9 { pt3dadd( -17.5914, 39.4382, -5.03893, 0.28 ) }
    dend_9 { pt3dadd( -18.7527, 40.3388, -4.91779, 0.83 ) }
    dend_9 { pt3dadd( -24.1301, 44.9964, -4.27058, 0.28 ) }
    dend_9 { pt3dadd( -25.3971, 46.1589, -4.09434, 0.83 ) }
    dend_9 { pt3dadd( -36.643, 55.7073, -1.84092, 0.28 ) }
    dend_9 { pt3dadd( -37.0443, 56.0302, -1.74452, 1.38 ) }
    dend_9 { pt3dadd( -38.0541, 56.83, -1.44295, 1.38 ) }
    dend_9 { pt3dadd( -40.3299, 58.586, -0.66781, 0.28 ) }
    dend_9 { pt3dadd( -41.2104, 59.2923, -0.350506, 0.55 ) }
    dend_9 { pt3dadd( -51.2414, 67.3952, 2.97225, 0.28 ) }
    dend_9 { pt3dadd( -53.0405, 68.7797, 3.54353, 1.11 ) }
    dend_9 { pt3dadd( -58.0145, 72.5203, 5.11658, 0.28 ) }
    dend_9 { pt3dadd( -58.8415, 73.1228, 5.37583, 0.83 ) }
    dend_9 { pt3dadd( -65.3027, 77.7217, 7.35554, 0.28 ) }
    dend_9 { pt3dadd( -65.5938, 77.9503, 7.43804, 0.55 ) }
    dend_9 { pt3dadd( -75.3637, 86.84, 8.9153, 0.55 ) }
    dend_9 { pt3dadd( -84.1684, 96.1126, 12.4936, 0.55 ) }
    dend_9 { pt3dadd( -91.886, 106.757, 13.9152, 0.55 ) }
    dend_9 { pt3dadd( -98.2436, 118.3, 14.2709, 0.55 ) }
    dend_9 { pt3dadd( -106.575, 128.471, 12.6951, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 43/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 12.3255, 24.0912, -7.36014, 0.83 ) }
    dend_4 { pt3dadd( 15.7473, 23.6193, -9.20364, 0.83 ) }
    dend_4 { pt3dadd( 19.9816, 23.1469, -11.2907, 0.83 ) }
    dend_4 { pt3dadd( 21.9249, 23.0678, -12.1206, 0.83 ) }
    dend_4 { pt3dadd( 25.6861, 23.0212, -13.6469, 0.55 ) }
    dend_4 { pt3dadd( 27.2521, 23.102, -14.2062, 0.55 ) }
    dend_4 { pt3dadd( 30.2771, 23.3159, -15.2404, 0.83 ) }
    dend_4 { pt3dadd( 33.9352, 23.7488, -16.3091, 0.83 ) }
    dend_4 { pt3dadd( 37.6589, 24.3636, -17.3661, 0.83 ) }
    dend_4 { pt3dadd( 39.8899, 24.7479, -17.972, 1.11 ) }
    dend_4 { pt3dadd( 45.1428, 25.7043, -19.2054, 1.11 ) }
    dend_4 { pt3dadd( 48.2099, 26.3046, -19.9786, 0.55 ) }
    dend_4 { pt3dadd( 50.2719, 26.7218, -20.5054, 0.55 ) }
    dend_4 { pt3dadd( 52.0811, 27.0719, -21.0067, 1.11 ) }
    dend_4 { pt3dadd( 54.8647, 27.544, -21.7995, 0.55 ) }
    dend_4 { pt3dadd( 56.9913, 27.9181, -22.3741, 0.55 ) }
    dend_4 { pt3dadd( 59.7491, 28.3793, -23.0987, 1.11 ) }
    dend_4 { pt3dadd( 61.5342, 28.7157, -23.4787, 0.55 ) }
    dend_4 { pt3dadd( 63.712, 29.0897, -23.8767, 0.28 ) }
    dend_4 { pt3dadd( 66.5029, 29.5271, -24.2698, 0.83 ) }
    dend_4 { pt3dadd( 71.8255, 30.1626, -24.6879, 0.28 ) }
    dend_4 { pt3dadd( 73.6803, 30.2691, -24.7243, 0.55 ) }
    dend_4 { pt3dadd( 75.7632, 30.227, -24.6101, 0.28 ) }
    dend_4 { pt3dadd( 77.1396, 30.103, -24.4749, 0.28 ) }
    dend_4 { pt3dadd( 79.0395, 29.7604, -24.1812, 1.11 ) }
    dend_4 { pt3dadd( 82.2972, 28.957, -23.56, 0.55 ) }
    dend_4 { pt3dadd( 85.0934, 28.0426, -22.8872, 1.66 ) }
    dend_4 { pt3dadd( 88.6868, 26.7595, -22.01, 0.28 ) }
    dend_4 { pt3dadd( 90.2041, 26.1919, -21.65, 0.28 ) }
    dend_4 { pt3dadd( 92.8246, 25.2485, -20.9973, 0.83 ) }
    dend_4 { pt3dadd( 102.822, 25.1712, -21.428, 0.83 ) }
    dend_4 { pt3dadd( 112.699, 24.0481, -20.3159, 0.83 ) }
    dend_4 { pt3dadd( 122.58, 24.7962, -18.9315, 0.83 ) }
    dend_4 { pt3dadd( 132.165, 25.2322, -16.093, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 77/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 12.3255, 24.0912, -7.36014, 1.11 ) }
    dend_3 { pt3dadd( 12.4423, 26.1666, -8.08818, 1.11 ) }
    dend_3 { pt3dadd( 12.7201, 28.6033, -8.95878, 0.83 ) }
    dend_3 { pt3dadd( 13.1005, 30.5168, -9.60322, 0.83 ) }
    dend_3 { pt3dadd( 13.6325, 32.8311, -10.3986, 1.38 ) }
    dend_3 { pt3dadd( 14.678, 37.1827, -12.1252, 0.83 ) }
    dend_3 { pt3dadd( 15.2697, 39.5565, -13.1936, 0.83 ) }
    dend_3 { pt3dadd( 15.7004, 41.1085, -13.9725, 0.83 ) }
    dend_3 { pt3dadd( 16.874, 44.9147, -16.3498, 0.83 ) }
    dend_3 { pt3dadd( 17.3041, 46.2227, -17.2802, 0.83 ) }
    dend_3 { pt3dadd( 18.3162, 49.2584, -19.7608, 0.83 ) }
    dend_3 { pt3dadd( 18.924, 51.1612, -21.4718, 1.11 ) }
    dend_3 { pt3dadd( 19.2951, 52.4505, -22.646, 1.11 ) }
    dend_3 { pt3dadd( 20.2099, 55.846, -25.5808, 0.83 ) }
    dend_3 { pt3dadd( 20.7262, 57.7054, -27.1128, 0.83 ) }
    dend_3 { pt3dadd( 21.3852, 59.8412, -28.7223, 1.11 ) }
    dend_3 { pt3dadd( 21.7555, 61.0895, -29.5949, 0.28 ) }
    dend_3 { pt3dadd( 22.2337, 62.8255, -30.7876, 0.83 ) }
    dend_3 { pt3dadd( 22.9604, 67.2939, -33.6815, 0.83 ) }
    dend_3 { pt3dadd( 23.2034, 70.1118, -35.3105, 1.66 ) }
    dend_3 { pt3dadd( 23.3549, 73.7176, -37.3, 0.55 ) }
    dend_3 { pt3dadd( 23.3892, 76.2882, -38.6418, 0.55 ) }
    dend_3 { pt3dadd( 23.354, 79.0269, -40.0307, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_3 { pt3dadd( 23.0548, 88.4511, -44.9697, 0.28 ) }
    dend_3 { pt3dadd( 22.9855, 90.1395, -45.8617, 1.66 ) }
    dend_3 { pt3dadd( 22.8946, 94.6327, -48.1157, 0.28 ) }
    dend_3 { pt3dadd( 22.8937, 95.187, -48.3693, 0.83 ) }
    dend_3 { pt3dadd( 22.9262, 96.6858, -49.0224, 0.28 ) }
    dend_3 { pt3dadd( 23.0349, 100.579, -50.6387, 1.66 ) }
    dend_3 { pt3dadd( 23.2792, 105.46, -52.6674, 0.28 ) }
    dend_3 { pt3dadd( 23.3189, 106.897, -53.2483, 1.38 ) }
    dend_3 { pt3dadd( 23.3261, 114.145, -55.9426, 0.28 ) }
    dend_3 { pt3dadd( 23.2326, 115.571, -56.4619, 1.66 ) }
    dend_3 { pt3dadd( 22.6975, 119.553, -57.8475, 0.28 ) }
    dend_3 { pt3dadd( 22.566, 120.171, -58.0984, 0.83 ) }
    dend_3 { pt3dadd( 21.3263, 124.819, -60.3237, 0.28 ) }
    dend_3 { pt3dadd( 21.0885, 125.643, -60.7542, 0.83 ) }
    dend_3 { pt3dadd( 18.9966, 132.392, -64.7635, 0.28 ) }
    dend_3 { pt3dadd( 18.414, 134.177, -65.9031, 1.11 ) }
    dend_3 { pt3dadd( 15.3457, 142.69, -71.9137, 0.28 ) }
    dend_3 { pt3dadd( 15.2537, 142.926, -72.0938, 0.83 ) }
    dend_3 { pt3dadd( 16.8022, 153.428, -74.9847, 0.83 ) }
    dend_3 { pt3dadd( 18.3885, 164.162, -76.7813, 0.83 ) }
    dend_3 { pt3dadd( 21.0475, 174.266, -80.287, 0.83 ) }
    dend_3 { pt3dadd( 24.4874, 184.581, -82.1029, 0.83 ) }
    dend_3 { pt3dadd( 28.688, 194.562, -84.2507, 0.83 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 23/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 27.7255, -11.0012, 59.5873, 0.28 ) }
    dend_23 { pt3dadd( 28.8097, -12.3099, 60.6374, 0.28 ) }
    dend_23 { pt3dadd( 29.2861, -12.9067, 61.1916, 0.83 ) }
    dend_23 { pt3dadd( 30.3878, -14.1749, 62.5305, 0.28 ) }
    dend_23 { pt3dadd( 30.8419, -14.6527, 63.1385, 0.83 ) }
    dend_23 { pt3dadd( 32.459, -16.413, 65.5906, 0.28 ) }
    dend_23 { pt3dadd( 32.7201, -16.722, 66.041, 0.83 ) }
    dend_23 { pt3dadd( 33.7789, -18.064, 68.2628, 0.28 ) }
    dend_23 { pt3dadd( 34.7421, -19.2931, 70.4066, 0.83 ) }
    dend_23 { pt3dadd( 35.834, -20.743, 73.0397, 0.28 ) }
    dend_23 { pt3dadd( 36.7859, -22.1169, 75.5713, 1.38 ) }
    dend_23 { pt3dadd( 37.5498, -23.2928, 77.8047, 0.28 ) }
    dend_23 { pt3dadd( 38.063, -24.1047, 79.4181, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 36/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 27.7255, -11.0012, 59.5873, 0.55 ) }
    dend_22 { pt3dadd( 30.6934, -11.296, 62.4835, 0.55 ) }
    dend_22 { pt3dadd( 31.1418, -11.3314, 62.9544, 0.28 ) }
    dend_22 { pt3dadd( 32.721, -11.4743, 64.6385, 0.83 ) }
    dend_22 { pt3dadd( 35.8284, -11.7776, 67.9444, 0.83 ) }
    dend_22 { pt3dadd( 38.3378, -12.0046, 70.537, 0.83 ) }
    dend_22 { pt3dadd( 39.926, -12.1352, 72.1335, 1.38 ) }
    dend_22 { pt3dadd( 42.9365, -12.2929, 75.1362, 0.55 ) }
    dend_22 { pt3dadd( 43.8642, -12.3294, 76.0249, 0.55 ) }
    dend_22 { pt3dadd( 46.1872, -12.3936, 78.0927, 0.55 ) }
    dend_22 { pt3dadd( 48.4753, -12.4256, 79.929, 1.11 ) }
    dend_22 { pt3dadd( 50.8974, -12.4482, 81.6515, 0.55 ) }
    dend_22 { pt3dadd( 53.0297, -12.4353, 83.0555, 1.38 ) }
    dend_22 { pt3dadd( 55.3201, -12.4079, 84.4192, 1.11 ) }
    dend_22 { pt3dadd( 57.8061, -12.322, 85.8363, 0.55 ) }
    dend_22 { pt3dadd( 60.3661, -12.1646, 87.2548, 0.55 ) }
    dend_22 { pt3dadd( 61.7305, -12.054, 88.0266, 0.55 ) }
    dend_22 { pt3dadd( 62.8914, -11.9323, 88.7218, 0.83 ) }
    dend_22 { pt3dadd( 64.5363, -11.7169, 89.7735, 0.83 ) }
    dend_22 { pt3dadd( 65.5721, -11.5366, 90.5648, 0.83 ) }
    dend_22 { pt3dadd( 67.3436, -11.1211, 92.222, 0.55 ) }
    dend_22 { pt3dadd( 68.1324, -10.8852, 93.0941, 0.83 ) }
    dend_22 { pt3dadd( 69.44, -10.3747, 94.6288, 0.55 ) }
    dend_22 { pt3dadd( 69.8799, -10.1775, 95.1794, 0.83 ) }
    dend_22 { pt3dadd( 71.631, -9.29407, 97.4109, 0.55 ) }
    dend_22 { pt3dadd( 72.4035, -8.94462, 98.2991, 0.55 ) }
    dend_22 { pt3dadd( 73.5323, -8.44873, 99.5191, 0.55 ) }
    dend_22 { pt3dadd( 73.8448, -8.31486, 99.8284, 0.83 ) }
    dend_22 { pt3dadd( 75.6387, -7.6134, 101.508, 0.55 ) }
    dend_22 { pt3dadd( 77.6718, -6.89267, 103.319, 1.11 ) }
    dend_22 { pt3dadd( 80.8363, -5.83841, 106.003, 0.55 ) }
    dend_22 { pt3dadd( 82.3555, -5.36819, 107.251, 1.11 ) }
    dend_22 { pt3dadd( 84.8784, -4.62965, 109.282, 0.55 ) }
    dend_22 { pt3dadd( 86.3667, -4.22755, 110.459, 0.83 ) }
    dend_22 { pt3dadd( 88.1263, -3.79194, 111.792, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_46, dend_39, dend_36, dend_27, dend_26, dend_18, dend_11, dend_0, dend_51, dend_47, dend_43, dend_40, dend_38, dend_37, dend_35, dend_28, dend_19, dend_15, dend_12, dend_6, dend_1, dend_53, dend_52, dend_48, dend_45, dend_44, dend_42, dend_41, dend_32, dend_29, dend_25, dend_20, dend_17, dend_16, dend_14, dend_13, dend_8, dend_7, dend_5, dend_2, dend_50, dend_49, dend_34, dend_33, dend_31, dend_30, dend_24, dend_21, dend_10, dend_9, dend_4, dend_3, dend_23, dend_22]}
    ModelViewParmSubset_2 = new SectionList()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_46, dend_39, dend_36, dend_27, dend_26, dend_18, dend_11, dend_0, dend_51, dend_47, dend_43, dend_40, dend_38, dend_37, dend_35, dend_28, dend_19, dend_15, dend_12, dend_6, dend_1, dend_53, dend_52, dend_48, dend_45, dend_44, dend_42, dend_41, dend_32, dend_29, dend_25, dend_20, dend_17, dend_16, dend_14, dend_13, dend_8, dend_7, dend_5, dend_2, dend_50, dend_49, dend_34, dend_33, dend_31, dend_30, dend_24, dend_21, dend_10, dend_9, dend_4, dend_3, dend_23, dend_22]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_26 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_43 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_38 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_37 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_35 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_15 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_48 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_45 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_44 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_42 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_41 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_32 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_25 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_16 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_7 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_5 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_50 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_49 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_34 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_30 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_24 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_10 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_9 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_4 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_3 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_22 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_18 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_46 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_11 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_27 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_6 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_1 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_47 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_39 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_2 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_12 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_19 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_40 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_8 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_20 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_36 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_51 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_13 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_28 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_53 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_29 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_52 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_14 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_21 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_31 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_23 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_33 OneSecGrp_SectionRef_47.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_46, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_18, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_29 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_26 nseg = 9
    dend_43 nseg = 5
    dend_38 nseg = 3
    dend_37 nseg = 7
    dend_35 nseg = 5
    dend_15 nseg = 5
    dend_48 nseg = 3
    dend_45 nseg = 5
    dend_44 nseg = 5
    dend_42 nseg = 11
    dend_41 nseg = 3
    dend_32 nseg = 3
    dend_25 nseg = 3
    dend_16 nseg = 3
    dend_7 nseg = 5
    dend_5 nseg = 5
    dend_50 nseg = 3
    dend_49 nseg = 3
    dend_34 nseg = 3
    dend_30 nseg = 3
    dend_24 nseg = 3
    dend_10 nseg = 3
    dend_9 nseg = 7
    dend_4 nseg = 7
    dend_3 nseg = 9
    dend_22 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L23_NBC_7f97b8e83f_0_0


