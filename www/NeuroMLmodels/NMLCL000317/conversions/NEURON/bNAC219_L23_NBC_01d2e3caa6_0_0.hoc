// Cell: bNAC219_L23_NBC_01d2e3caa6_0_0
/*
{
  "id" : "bNAC219_L23_NBC_01d2e3caa6_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "5.92192, -11.2965, 0.0, 4.1252", "5.48387, -10.1577, 0.0, 7.56306", "5.04582, -9.01896, 0.0, 9.52273", "4.60777, -7.88019, 0.0, 11.3302", "4.16972, -6.74142, 0.0, 12.5397", "3.73167, -5.60265, 0.0, 13.327", "3.29362, -4.46388, 0.0, 13.9262", "2.85557, -3.32511, 0.0, 14.1876", "2.41752, -2.18634, 0.0, 14.3783", "1.97947, -1.04758, 0.0, 14.56", "1.54142, 0.0911927, 0.0, 14.6653", "1.10336, 1.22996, 0.0, 14.6797", "0.665314, 2.36873, 0.0, 14.608", "0.227263, 3.5075, 0.0, 14.3574", "-0.210788, 4.64627, 0.0, 14.014", "-0.648838, 5.78504, 0.0, 13.4956", "-1.08689, 6.92381, 0.0, 12.6886", "-1.52494, 8.06257, 0.0, 11.823", "-1.96299, 9.20134, 0.0, 10.4799", "-2.40104, 10.3401, 0.0, 7.82679", "-2.83909, 11.4789, 0.0, 4.54061" ]
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-5.54737, 3.90452, -0.14, 1.44", "-7.1587, 4.33231, -1.38288, 1.44", "-8.41804, 4.62279, -2.26263, 1.08", "-9.36938, 4.84223, -2.92721, 0.84", "-10.9173, 5.19927, -4.00855, 1.32", "-11.6395, 5.36586, -4.51306, 1.32", "-12.497, 5.56365, -5.1121, 1.32", "-12.7211, 5.59437, -5.22754, 1.56" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996472297577
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-6.30737, 1.27302, -8.74, 1.2", "-7.59688, 0.95992, -8.3369, 1.2", "-10.1136, 0.214123, -7.44564, 0.84", "-11.5864, -0.295818, -6.83382, 0.6", "-14.2879, -1.2541, -5.90315, 1.08", "-15.6427, -1.73392, -5.51357, 1.08", "-16.5022, -2.02996, -5.3059, 0.72", "-17.8258, -2.51667, -5.03999, 1.32", "-19.2687, -3.10807, -4.89889, 1.68", "-22.0045, -4.22983, -4.88928, 0.6", "-23.0001, -4.599, -4.96099, 0.6", "-23.9406, -4.9134, -5.01358, 1.32", "-25.24, -5.36264, -5.04876, 1.32", "-27.2661, -6.09953, -5.00744, 0.84", "-29.1951, -6.84263, -4.81689, 0.84", "-30.6314, -7.47852, -4.45077, 0.84", "-31.7346, -8.03178, -4.08489, 1.2", "-33.0979, -8.78919, -3.56129, 0.48", "-34.3725, -9.55592, -3.02208, 1.08", "-35.9872, -10.6074, -2.32704, 1.08", "-38.1213, -12.1321, -1.51277, 0.72", "-39.1245, -12.9124, -1.19319, 0.72", "-40.0789, -13.6993, -0.964838, 0.72", "-40.8598, -14.3526, -0.83933, 0.72", "-41.9885, -15.3243, -0.776438, 1.44", "-42.9177, -16.1041, -0.797283, 1.44", "-44.1628, -16.974, -0.994649, 0.72", "-45.3749, -17.5705, -1.41142, 0.72", "-46.1262, -17.8395, -1.7608, 1.2", "-46.7729, -18.0279, -2.12013, 0.6", "-47.9035, -18.278, -2.81348, 0.96", "-50.1927, -18.6056, -4.3454, 0.48", "-53.6375, -18.8481, -6.94331, 1.08", "-54.1233, -18.8542, -7.35495, 1.08", "-55.2144, -18.8376, -8.39443, 1.08" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996472297577,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "0.882635, -8.76848, 0.15, 1.44", "-0.297741, -9.69477, -4.81043, 1.44", "-1.01885, -10.2607, -7.84082, 1.44", "-1.27286, -10.46, -8.90827, 1.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996472297577
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "4.62263, -9.49998, 2.28, 1.92", "4.50329, -10.364, 2.44047, 1.92", "4.19448, -12.5997, 2.85572, 1.68", "4.02061, -13.8585, 3.0895, 1.68", "3.9043, -14.7004, 3.24588, 1.44", "3.82049, -15.3072, 3.35859, 1.44" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996472297577
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "6.29263, -9.23398, -0.07, 1.92", "7.41257, -10.8535, -1.30366, 1.92", "8.17337, -11.9433, -2.11844, 1.32", "9.25321, -13.5854, -3.06181, 0.96", "10.1486, -14.9877, -3.68963, 1.44", "10.7531, -15.9675, -4.04595, 1.44", "11.474, -17.2099, -4.36735, 0.96", "12.1746, -18.5222, -4.47959, 0.96", "13.2685, -20.8407, -4.43091, 1.56", "13.9271, -22.3695, -4.30103, 1.56", "14.4501, -23.5953, -4.16411, 1.56", "15.6347, -26.3548, -3.80722, 0.84", "16.3512, -28.0618, -3.56505, 0.84", "17.3778, -30.5516, -3.23512, 0.6", "18.0994, -32.198, -3.08387, 1.2", "18.6221, -33.3247, -2.99369, 1.2", "19.115, -34.2928, -2.93563, 0.84", "19.6405, -35.2314, -2.91706, 0.6", "20.3177, -36.3649, -2.94989, 1.08", "21.153, -37.6711, -3.03239, 1.68", "21.7625, -38.64, -3.11316, 2.04", "22.6363, -40.0391, -3.24587, 1.2", "23.3423, -41.1619, -3.36092, 1.2", "23.7662, -41.8522, -3.43691, 0.84", "24.5533, -43.2744, -3.60092, 1.32", "24.969, -44.1388, -3.70893, 1.32", "25.2009, -44.6823, -3.77631, 1.32", "25.3693, -45.1229, -3.82982, 0.72", "25.6484, -46.0101, -3.92567, 0.72", "25.9348, -47.2904, -4.04676, 0.72", "26.0415, -48.1149, -4.13963, 1.32", "26.1217, -49.0163, -4.25123, 1.32", "26.1505, -49.4086, -4.30064, 1.32", "26.2425, -50.6963, -4.46251, 0.72", "26.3676, -51.9593, -4.64788, 0.72", "26.7374, -54.1616, -4.98434, 1.32", "26.9103, -54.9212, -5.10119, 1.32", "27.1519, -55.7985, -5.23512, 1.32", "27.3863, -56.5402, -5.34683, 0.84", "28.1607, -58.5911, -5.67167, 0.48", "28.961, -60.3433, -6.07013, 0.48", "29.3205, -61.0417, -6.26943, 1.56", "29.9048, -62.1693, -6.63533, 1.56", "30.1501, -62.6304, -6.79888, 2.04", "30.8532, -63.9117, -7.30995, 1.44", "31.9772, -65.8068, -8.17863, 0.72", "32.8037, -67.1786, -8.87529, 1.32", "33.3645, -68.0534, -9.29511, 1.56", "33.7179, -68.5741, -9.52731, 1.56", "34.4743, -69.6526, -9.92889, 1.08", "35.2224, -70.7056, -10.1953, 0.72", "35.9143, -71.6914, -10.3166, 0.72", "36.9153, -73.0667, -10.3961, 1.8", "37.1751, -73.4083, -10.3833, 1.8", "37.7975, -74.2297, -10.3575, 1.8", "38.7136, -75.4941, -10.3631, 1.2", "38.9568, -75.8465, -10.3888, 0.84", "39.4011, -76.5085, -10.502, 0.84", "40.1747, -77.7228, -10.8233, 0.84", "41.1354, -79.3593, -11.3166, 0.84", "41.8917, -80.753, -11.7896, 1.32", "42.2015, -81.3301, -11.9788, 1.32", "42.8529, -82.5789, -12.3396, 1.32", "43.0338, -82.9445, -12.4289, 1.68", "43.4896, -83.9104, -12.5927, 0.96", "43.7303, -84.3922, -12.6422, 0.96", "44.8322, -86.4992, -12.8281, 1.56", "45.4907, -87.7802, -13.0002, 0.72", "46.0105, -88.8426, -13.2015, 0.72", "46.8015, -90.5144, -13.5779, 1.32", "47.3922, -91.7552, -13.8996, 0.72", "48.0439, -93.1442, -14.2902, 1.92", "48.6953, -94.6212, -14.7858, 1.92", "49.2073, -95.7468, -15.1911, 0.84", "49.4848, -96.3207, -15.3996, 0.84", "50.1613, -97.5853, -15.8373, 1.56", "50.9291, -98.8301, -16.2008, 1.56", "51.8681, -100.149, -16.6015, 0.84", "52.4042, -100.856, -16.7999, 0.84", "53.1505, -101.787, -17.1215, 0.72", "53.7898, -102.609, -17.3515, 1.32", "54.6777, -103.719, -17.6386, 1.8", "56.1588, -105.466, -18.0311, 0.84", "57.3944, -106.876, -18.2917, 0.6", "58.882, -108.565, -18.5833, 1.68", "60.9341, -110.875, -18.9376, 1.68", "62.8235, -112.921, -19.2671, 0.84", "63.8442, -113.944, -19.4097, 0.72", "64.1635, -114.227, -19.4343, 1.08", "64.7464, -114.717, -19.4836, 0.48", "65.3443, -115.218, -19.5429, 0.48", "66.6797, -116.352, -19.8284, 1.2", "67.5727, -117.249, -19.9945, 0.6", "68.4417, -118.26, -20.179, 0.6", "69.3639, -119.465, -20.3609, 1.92", "69.6883, -119.955, -20.4227, 2.16", "70.5372, -121.462, -20.5764, 1.08", "71.3896, -123.261, -20.7187, 0.84", "71.7754, -124.231, -20.7875, 0.84", "72.5962, -126.781, -20.9585, 0.84", "73.0314, -128.425, -21.077, 2.28", "73.49, -130.477, -21.2285, 0.84", "73.7273, -131.829, -21.3475, 0.48", "74.085, -134.395, -21.6259, 1.44", "74.2419, -136.039, -21.8429, 1.44", "74.3142, -137.681, -22.1041, 0.84", "74.3478, -138.962, -22.3655, 0.84", "74.3543, -140.61, -22.7786, 1.2", "74.3324, -141.277, -22.9764, 1.2", "74.2735, -142.225, -23.3138, 0.6", "74.2207, -142.844, -23.5531, 0.6", "74.0165, -144.54, -24.1712, 0.6", "73.7268, -146.77, -24.9258, 1.56", "73.5224, -148.453, -25.5289, 0.6", "73.3796, -149.548, -25.9612, 0.6", "73.0667, -151.643, -26.8729, 1.32", "72.809, -152.971, -27.4822, 0.72", "72.4969, -154.25, -28.0816, 0.72", "71.7862, -156.786, -29.3875, 1.68", "71.0035, -159.349, -30.7494, 0.84", "70.7014, -160.325, -31.3269, 1.32", "70.2046, -161.973, -32.4109, 0.84", "69.8098, -163.312, -33.3831, 1.44", "69.4333, -164.84, -34.6019, 0.84", "69.2785, -165.81, -35.3942, 1.92", "69.1307, -168.018, -37.256, 0.72", "69.1286, -168.717, -37.8315, 0.72", "69.2292, -170.439, -39.219, 2.04", "69.4627, -173.039, -41.1648, 0.84", "69.5315, -173.835, -41.6927, 0.84", "69.5905, -175.086, -42.4078, 1.44", "69.5578, -176.435, -43.0183, 0.72", "69.4646, -177.57, -43.4613, 1.44", "69.3183, -178.805, -43.8659, 0.6", "68.9893, -180.712, -44.4233, 1.8", "68.6511, -182.695, -45.0162, 0.96", "68.46, -184.024, -45.4298, 1.32", "68.1009, -187.403, -46.545, 0.72", "68.0016, -188.676, -46.9062, 0.72", "67.8922, -190.256, -47.3427, 1.2", "67.8366, -191.587, -47.6811, 0.96", "67.8543, -193.494, -48.1518, 1.92", "68.0339, -196.347, -48.8157, 0.6", "68.3914, -199.093, -49.3564, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996472297577,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "8.61263, -6.60248, 0.5, 2.52", "9.48504, -6.76423, 0.482887, 2.28", "10.7686, -7.00529, 0.460647, 1.8", "11.95, -7.24198, 0.439724, 1.44", "13.434, -7.55401, 0.41353, 1.08", "15.3024, -7.97218, 0.381559, 1.08", "16.1177, -8.15465, 0.367609, 1.08", "16.8531, -8.31329, 0.35387, 1.68", "17.72, -8.51035, 0.335842, 2.28", "18.1244, -8.61183, 0.32683, 2.28", "18.9669, -8.86769, 0.309212, 2.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996472297577
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "8.93263, -5.85198, 0.64, 0.84", "9.6689, -5.87911, -0.239112, 0.84", "12.397, -5.97964, -3.49655, 0.84", "14.8207, -6.06895, -6.39048, 0.84", "16.0546, -6.11442, -7.8637, 1.44", "17.103, -6.15305, -9.11554, 1.32" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996472297577
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "8.39263, -4.11348, 2.06, 1.92", "8.61375, -3.99432, 2.59121, 1.92", "8.95875, -3.80839, 3.42, 1.92", "9.94243, -3.27828, 5.78309, 1.8", "11.3821, -2.50245, 9.24158, 1.44" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996472297577
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "4.42264, 5.04452, 0.86, 1.56", "4.64433, 5.56122, 1.81145, 1.56", "5.57214, 7.05023, 4.88856, 1.56", "6.24805, 7.78734, 6.70844, 1.56", "6.78605, 8.16642, 7.87047, 1.56", "7.82446, 8.72444, 9.71944, 1.08", "8.06254, 8.83755, 10.0904, 1.08", "8.63827, 9.00033, 10.767, 1.56", "9.52575, 9.14244, 11.456, 1.56", "10.6215, 9.36333, 12.1795, 0.96", "11.5714, 9.7531, 12.7709, 0.96", "12.0749, 10.1517, 13.077, 0.96", "12.9247, 11.1514, 13.6498, 1.32", "13.0974, 11.4321, 13.776, 1.32", "13.5592, 12.4772, 14.2759, 0.84", "13.9109, 13.5408, 14.814, 1.2", "14.3354, 14.9485, 15.499, 0.84", "14.5964, 15.7971, 15.8905, 1.2", "14.7935, 16.4007, 16.1454, 1.2", "15.7012, 18.8821, 17.0928, 0.96", "15.8663, 19.346, 17.2882, 0.96", "16.3849, 20.9427, 18.0355, 1.44", "16.5301, 21.4818, 18.2843, 0.84", "16.669, 22.17, 18.6047, 0.84", "16.8116, 23.168, 19.0203, 0.84", "17.0016, 25.2264, 19.7195, 1.32", "17.0108, 25.8522, 19.9879, 1.32", "16.9249, 26.9164, 20.5564, 0.72", "16.8488, 27.4475, 20.8465, 0.72", "16.7312, 28.0947, 21.2135, 0.72", "16.6924, 28.4942, 21.4221, 0.72", "18.4584, 35.3885, 27.7647, 0.72", "19.9715, 42.1, 34.3846, 0.72", "21.2738, 49.5239, 40.1505, 0.72", "20.6715, 57.098, 45.8163, 0.72", "20.9513, 64.0263, 52.3571, 0.72", "21.3102, 71.264, 58.5107, 0.72", "22.3934, 77.8586, 65.3425, 0.72", "23.431, 84.8351, 71.7477, 0.72", "24.6609, 91.8544, 78.066, 0.72", "27.2116, 99.508, 83.0178, 0.72", "28.2111, 108.078, 86.6893, 0.72", "30.2176, 117.015, 88.4472, 0.72", "31.5327, 125.91, 90.9659, 0.72", "31.5538, 134.693, 94.1809, 0.72", "32.0484, 142.849, 98.8739, 0.72", "31.1662, 150.538, 104.326, 0.72", "31.9741, 157.883, 110.293, 0.72" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996472297577,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.36263, 9.81354, -0.71, 2.4", "1.69942, 11.2952, -0.710239, 2.4", "2.04361, 12.8095, -0.710484, 2.4" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996472297577
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-2.83909, 11.4789, 0.0, 0.96", "-8.22444, 25.4788, 0.0, 0.96", "-13.6098, 39.4788, 0.0, 0.96" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-12.7211, 5.59437, -5.22754, 0.6", "-14.8008, 6.71413, -6.38809, 0.6", "-16.1913, 7.45656, -7.2986, 1.08", "-18.2124, 8.65955, -8.52335, 1.44", "-22.1185, 10.9087, -11.0722, 0.72", "-23.686, 11.748, -12.0913, 0.72", "-25.1173, 12.4979, -13.0122, 0.72", "-26.3434, 13.0847, -13.8723, 1.2", "-28.1727, 13.9402, -15.1343, 0.84", "-30.7451, 15.1879, -16.748, 0.6", "-32.8036, 16.3257, -17.75, 1.56", "-33.3449, 16.633, -18.006, 1.56", "-35.0525, 17.6077, -18.74, 0.6", "-36.3747, 18.3548, -19.3139, 0.96", "-37.9415, 19.2139, -20.0779, 0.48", "-40.0171, 20.4013, -21.06, 1.68", "-40.998, 20.9308, -21.5557, 1.68", "-42.5118, 21.6644, -22.3125, 0.72", "-44.2496, 22.44, -23.175, 0.72", "-45.6148, 22.9983, -23.8647, 0.72", "-46.3626, 23.2995, -24.2393, 0.72", "-48.0183, 23.9623, -24.9265, 1.92", "-49.6483, 24.6575, -25.5336, 1.92", "-51.5378, 25.5, -26.1265, 0.84", "-52.5346, 26.005, -26.3708, 0.84", "-53.7347, 26.6902, -26.6067, 1.32", "-55.44, 27.7255, -27.0414, 0.6", "-56.9092, 28.695, -27.4713, 1.8", "-59.6362, 30.6348, -28.2877, 1.08", "-61.641, 32.1861, -28.7819, 1.56", "-63.0855, 33.3299, -29.1371, 1.56", "-65.9137, 35.669, -29.9387, 0.84", "-67.1107, 36.7646, -30.3941, 0.84", "-68.1146, 37.7716, -30.8894, 1.44", "-69.919, 39.6904, -31.9906, 0.96", "-72.3317, 42.1065, -33.6754, 1.56", "-73.4512, 43.2191, -34.405, 1.56", "-75.4423, 45.1975, -35.4092, 1.08", "-77.3456, 47.0491, -36.2761, 0.6", "-78.9746, 48.6235, -37.0, 1.56", "-80.6497, 50.2532, -37.7253, 0.96", "-82.7083, 52.3112, -38.3565, 1.44", "-85.5465, 54.9802, -38.8866, 0.6", "-86.8465, 56.1338, -38.9515, 0.6", "-89.0247, 58.1859, -38.839, 1.32" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-12.7211, 5.59437, -5.22754, 0.72", "-13.9833, 6.57132, -3.36833, 0.72", "-15.0019, 7.40535, -1.61044, 0.48", "-15.3917, 7.73811, -0.834597, 1.32", "-15.7078, 8.01186, -0.151104, 1.32", "-16.5242, 8.76151, 1.84524, 0.84", "-16.9323, 9.11147, 2.85828, 0.84", "-17.3252, 9.43734, 3.90416, 0.72", "-18.053, 10.0461, 5.88536, 1.56", "-18.6762, 10.5166, 7.4401, 1.08", "-19.6509, 11.22, 9.60044, 0.84", "-20.2962, 11.6568, 10.8682, 0.6", "-21.1246, 12.2263, 12.3579, 1.08", "-21.5177, 12.5144, 12.9805, 0.6", "-21.9937, 12.8998, 13.6681, 0.6", "-23.2809, 13.9759, 15.3927, 1.56", "-24.6109, 15.143, 17.016, 0.84", "-25.0326, 15.5676, 17.5478, 0.84", "-25.6885, 16.2759, 18.4047, 0.72", "-26.1006, 16.7467, 18.9459, 0.96", "-30.238, 19.6386, 26.2968, 0.96", "-34.7542, 22.2046, 33.5349, 0.96", "-39.6623, 25.7191, 40.1271, 0.96", "-44.512, 30.024, 46.299, 0.96", "-50.3241, 35.1187, 50.8206, 0.96", "-55.8789, 40.8236, 54.8964, 0.96", "-61.1015, 47.1712, 58.3727, 0.96", "-65.4297, 54.399, 61.1848, 0.96", "-70.1203, 61.819, 62.0346, 0.96", "-75.0535, 68.9699, 63.7757, 0.96", "-82.0314, 74.2948, 65.3913, 0.96", "-88.601, 80.2021, 66.4388, 0.96", "-94.9094, 86.3856, 67.3831, 0.96", "-100.95, 92.4861, 69.7888, 0.96", "-107.162, 98.5067, 71.9418, 0.96", "-112.911, 104.369, 75.4709, 0.96", "-119.294, 110.394, 76.9531, 0.96" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-1.27286, -10.46, -8.90827, 0.72", "-3.54828, -12.2689, 5.02087, 0.72", "-3.99647, -12.5767, 6.9623, 0.72", "-4.29747, -12.7566, 7.88582, 0.72", "-5.02736, -13.1252, 9.17033, 1.56", "-6.28775, -13.6644, 10.3154, 1.8", "-7.56554, -14.1541, 10.9161, 1.8", "-8.90952, -14.5825, 10.6268, 0.96", "-9.99367, -14.9037, 10.2938, 0.96", "-11.7647, -15.3872, 9.63828, 0.96", "-12.744, -15.6284, 9.24639, 1.8", "-13.6799, -15.8128, 8.85318, 1.8", "-14.772, -16.0081, 8.36719, 1.2", "-17.1679, -16.4115, 7.24795, 0.72", "-18.7903, -16.6644, 6.46351, 1.56", "-20.2327, -16.8708, 5.74589, 0.84", "-21.539, -17.031, 5.10974, 1.2", "-23.0778, -17.197, 4.40813, 0.72", "-23.8218, -17.2622, 4.1062, 0.72", "-25.1906, -17.3811, 3.62662, 1.08", "-26.3675, -17.5009, 3.24533, 0.48", "-28.1349, -17.7324, 2.71116, 1.44", "-29.5419, -17.9708, 2.31692, 0.6", "-31.5791, -18.3273, 1.70572, 1.2", "-33.8988, -18.7301, 0.962705, 0.48", "-35.5999, -19.0272, 0.38333, 1.44", "-37.268, -19.3078, -0.203221, 0.84", "-39.0429, -19.5889, -0.850442, 1.08", "-41.3656, -19.9222, -1.61047, 0.84", "-42.7065, -20.0967, -2.08739, 1.56", "-44.1503, -20.2176, -2.62913, 0.96", "-44.5728, -20.2333, -2.79831, 0.96", "-45.6793, -20.1805, -3.2408, 0.96", "-49.0772, -19.7449, -4.30488, 0.72" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-1.27286, -10.46, -8.90827, 0.6", "-0.62645, -11.4302, -8.69264, 0.6", "-0.323443, -11.8784, -8.56554, 0.6", "0.450931, -13.0257, -8.23181, 1.56", "1.35136, -14.3397, -7.83104, 1.56", "1.89688, -15.1349, -7.5925, 0.84", "2.24941, -15.6489, -7.43835, 0.84", "2.73971, -16.3626, -7.15416, 1.32", "3.03444, -16.7845, -6.9571, 1.32", "3.54458, -17.4776, -6.58996, 0.84", "3.84012, -17.8932, -6.48215, 0.84" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "3.82049, -15.3072, 3.35859, 1.08", "1.91555, -16.5981, 3.66927, 1.08", "0.488088, -17.5654, 3.90208, 1.2", "-1.29745, -18.7754, 4.1933, 0.84", "-2.29068, -19.4485, 4.35529, 0.84", "-4.33628, -20.8347, 4.68891, 1.44", "-5.59914, -21.6905, 4.89488, 2.04" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "3.82049, -15.3072, 3.35859, 0.84", "3.44635, -17.6022, 4.43259, 0.84", "3.21459, -18.831, 5.06179, 0.84", "2.75635, -21.3925, 6.37081, 1.2", "2.51194, -23.0419, 7.17584, 1.68", "2.33683, -24.5404, 7.83713, 1.68", "1.95862, -27.1076, 8.92592, 0.96", "1.70246, -28.2914, 9.43188, 0.96", "1.29461, -30.1868, 10.1734, 2.16", "1.03254, -31.6416, 10.6577, 2.64", "0.723047, -33.8859, 11.3222, 1.08", "0.485759, -37.428, 12.2444, 1.08", "0.480255, -39.452, 12.7051, 1.08", "0.573596, -41.5769, 13.129, 1.68", "0.717505, -43.243, 13.4411, 1.32", "0.966695, -44.8864, 13.7447, 1.68", "1.53355, -47.1216, 14.1236, 1.08", "2.00159, -48.4277, 14.3041, 1.08", "2.5885, -50.0345, 14.5148, 1.08", "2.86283, -50.9722, 14.6397, 1.08", "3.37323, -53.1815, 14.9126, 1.56", "3.64432, -54.4206, 15.0527, 1.56", "3.99312, -55.9613, 15.1991, 0.72", "4.36681, -57.1245, 15.3351, 0.72", "5.23333, -59.223, 15.6041, 1.32", "5.76028, -60.3598, 15.7411, 1.32", "6.62935, -62.0798, 15.9235, 0.72", "7.38987, -63.431, 16.0667, 0.72", "9.0856, -66.1464, 16.3479, 1.68", "9.96177, -67.4542, 16.4854, 2.04", "11.5612, -69.9233, 16.7252, 0.72", "12.3543, -71.3463, 16.8404, 0.72", "12.976, -72.7935, 16.9235, 0.72", "13.2884, -73.7076, 16.9538, 0.72", "13.5866, -74.906, 17.0264, 1.08", "14.1089, -77.4399, 17.2971, 1.08", "14.2951, -78.5324, 17.451, 1.08", "14.566, -80.5875, 17.764, 1.44", "14.7481, -81.9577, 18.0011, 1.44", "15.132, -84.871, 18.5389, 0.72", "15.308, -86.1057, 18.7861, 0.72", "15.6927, -88.3313, 19.2758, 1.92", "16.4304, -92.0794, 20.1283, 1.44", "17.2466, -95.906, 20.9996, 1.92" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "18.9669, -8.86769, 0.309212, 0.72", "19.8364, -10.1206, 0.180389, 0.72", "20.2398, -10.6279, 0.0869486, 0.72", "20.5865, -11.0005, -0.00623144, 1.32", "21.0493, -11.4386, -0.149434, 1.32", "21.8649, -12.1374, -0.413725, 0.84", "22.7699, -12.8581, -0.713118, 0.84", "23.2148, -13.1456, -0.871781, 0.6", "23.9518, -13.5708, -1.12511, 0.6", "24.6474, -13.9416, -1.3568, 1.2", "25.0906, -14.1734, -1.4929, 1.2", "25.6788, -14.4751, -1.65303, 1.44", "26.0231, -14.6513, -1.72219, 1.44", "26.8254, -15.0553, -1.88431, 0.84", "27.3233, -15.298, -1.97992, 0.84", "28.3616, -15.8046, -2.17914, 0.6", "29.0105, -16.1402, -2.31262, 0.6", "29.7823, -16.5638, -2.47776, 1.2", "30.6072, -17.0533, -2.66581, 1.68", "30.9845, -17.3015, -2.7545, 1.68", "31.8592, -17.9202, -2.95015, 1.08", "32.4688, -18.381, -3.07456, 0.6", "32.9559, -18.7818, -3.15529, 0.6", "33.2666, -19.0716, -3.19757, 0.6", "33.9945, -19.8508, -3.32486, 0.6", "34.4125, -20.3483, -3.42902, 0.6", "34.9264, -20.9946, -3.60099, 1.2", "35.6376, -21.882, -3.87712, 1.92", "36.1921, -22.5645, -4.12651, 1.56", "36.9598, -23.5085, -4.50315, 0.84", "37.5649, -24.2879, -4.84582, 0.6", "38.182, -25.1034, -5.2177, 1.08", "38.7274, -25.8108, -5.57176, 1.08", "39.2415, -26.4462, -5.90999, 0.48", "39.6742, -26.9551, -6.17821, 0.48", "40.4389, -27.8506, -6.60336, 1.56", "40.9187, -28.4365, -6.86005, 1.56", "41.6091, -29.3153, -7.21219, 0.96", "41.9431, -29.7507, -7.38413, 0.6", "42.4357, -30.378, -7.63225, 0.6", "43.1212, -31.1868, -7.96819, 1.2", "43.522, -31.597, -8.1813, 1.2", "43.9145, -31.9616, -8.40316, 1.2", "44.53, -32.5163, -8.76891, 0.6", "45.1256, -33.0535, -9.15436, 1.8", "45.6068, -33.5167, -9.49132, 1.8", "46.5855, -34.6797, -10.3352, 0.6", "46.9084, -35.1819, -10.6666, 0.6", "47.32, -36.0558, -11.0396, 1.2", "47.5198, -36.5814, -11.2237, 0.6", "47.8409, -37.727, -11.5208, 1.32", "48.0748, -39.1277, -11.7418, 0.6", "48.1178, -40.0374, -11.7442, 0.6", "48.0684, -42.7473, -11.5739, 0.96" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "18.9669, -8.86769, 0.309212, 1.2", "20.1679, -8.82058, 0.448564, 1.2", "21.7829, -8.74401, 0.649273, 0.84", "22.7664, -8.69886, 0.780632, 0.84", "24.9445, -8.55371, 1.08442, 0.84", "26.191, -8.45584, 1.25968, 0.72", "28.6698, -8.25085, 1.67805, 1.08", "30.831, -8.07693, 2.09708, 0.72", "31.8146, -7.99613, 2.30926, 0.72", "33.9335, -7.8292, 2.82081, 1.2", "34.9744, -7.74696, 3.12475, 1.2", "36.6375, -7.60299, 3.67082, 0.6", "37.28, -7.55778, 3.92094, 0.6", "37.7772, -7.543, 4.13459, 0.6", "39.3516, -7.51789, 4.8023, 1.44", "40.6528, -7.51823, 5.33059, 0.6", "41.6746, -7.51021, 5.7041, 0.6", "43.8885, -7.48111, 6.3627, 1.56", "45.0737, -7.45989, 6.66435, 1.56", "46.7188, -7.41909, 6.9954, 0.6", "47.9333, -7.35667, 7.14859, 0.6", "48.7664, -7.31219, 7.19194, 0.6", "50.2301, -7.2962, 7.25234, 1.08", "50.9028, -7.32593, 7.28944, 0.48", "52.0324, -7.46762, 7.45184, 0.48", "53.7258, -7.76528, 7.84998, 1.68", "54.3872, -7.905, 8.05129, 1.68", "56.1382, -8.31004, 8.6589, 0.84", "57.4736, -8.60277, 9.19862, 0.6", "58.7928, -8.87015, 9.75942, 1.2", "59.8841, -9.07979, 10.236, 0.72", "60.9213, -9.28506, 10.7163, 0.72", "62.0228, -9.43377, 11.1961, 1.32", "63.3683, -9.49839, 11.6326, 0.6", "64.1962, -9.50177, 11.8278, 0.6", "65.248, -9.49408, 12.0202, 1.08", "66.996, -9.48947, 12.2677, 0.48", "68.4259, -9.46932, 12.3563, 0.48", "70.1856, -9.42119, 12.3534, 1.44", "71.2893, -9.38097, 12.2873, 1.08", "72.4366, -9.30241, 12.15, 0.6", "72.9865, -9.24256, 12.1006, 0.6", "73.9911, -9.14358, 12.0991, 1.08", "76.3561, -9.01589, 12.4918, 0.48", "77.7801, -8.96426, 12.9104, 0.48", "78.6418, -8.91288, 13.2335, 1.08", "81.0945, -8.73133, 14.376, 0.6", "83.03, -8.59512, 15.3653, 1.44", "84.6909, -8.49043, 16.3216, 0.6", "85.3892, -8.45501, 16.7701, 0.6", "87.006, -8.39753, 17.9096, 0.6", "88.1728, -8.37238, 18.7739, 1.08", "98.5452, -7.78362, 20.1444, 1.08", "108.656, -7.55335, 22.8918, 1.08", "118.491, -8.65113, 26.3399, 1.08", "128.168, -9.5097, 30.2734, 1.08", "138.185, -11.4296, 32.6345, 1.08", "147.846, -14.9172, 34.4325, 1.08", "157.924, -16.422, 36.8574, 1.08", "168.206, -17.69, 38.4125, 1.08", "178.651, -18.3144, 38.9859, 1.08", "188.803, -20.6391, 39.9222, 1.08", "198.797, -23.5189, 39.0808, 1.08" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "17.103, -6.15305, -9.11554, 0.6", "18.2272, -6.45195, -9.01442, 0.6", "18.7028, -6.59066, -8.98111, 0.6", "19.4204, -6.81488, -8.93914, 0.6", "20.2174, -7.11495, -8.89711, 0.6", "20.8536, -7.37293, -8.86709, 0.48", "21.3993, -7.58916, -8.84531, 0.48", "22.1626, -7.90218, -8.84299, 0.48", "22.6118, -8.09367, -8.85264, 0.48", "23.4926, -8.47062, -8.89232, 0.84", "23.9779, -8.66809, -8.92333, 0.84", "24.7639, -8.95744, -8.98944, 0.72", "25.6408, -9.22765, -9.07428, 0.72", "26.6884, -9.4624, -9.18267, 0.6", "27.1073, -9.51662, -9.23313, 0.6", "28.1112, -9.56564, -9.36316, 0.6", "28.8839, -9.57272, -9.46548, 0.6", "29.8491, -9.55746, -9.56715, 0.6", "30.9236, -9.51114, -9.6488, 0.6", "32.1731, -9.43881, -9.69973, 0.96", "32.8955, -9.4072, -9.71464, 0.96", "33.2754, -9.39751, -9.71532, 0.96", "34.3377, -9.39756, -9.69484, 0.48", "34.9206, -9.42145, -9.67448, 0.48", "35.6762, -9.48164, -9.63655, 0.48", "36.5872, -9.57022, -9.58053, 0.96", "37.0637, -9.62675, -9.56055, 0.96", "37.5586, -9.68552, -9.54759, 0.48", "38.3473, -9.75391, -9.54505, 0.48", "38.8211, -9.78906, -9.54132, 0.84", "39.4299, -9.8327, -9.53433, 0.84", "40.6059, -9.89474, -9.52048, 0.6", "42.1149, -9.96032, -9.43069, 0.6", "43.0686, -10.0109, -9.34048, 1.2", "43.6015, -10.0436, -9.27263, 1.2", "44.2344, -10.0913, -9.17844, 1.2", "45.171, -10.1733, -9.02823, 0.84", "47.1103, -10.3189, -8.68948, 0.6", "47.5628, -10.3572, -8.60689, 0.6", "47.9964, -10.3994, -8.527, 0.6", "49.1505, -10.5145, -8.31178, 0.36", "50.3542, -10.6484, -8.09993, 0.36", "51.3148, -10.7782, -7.95825, 0.96", "51.6916, -10.8232, -7.91732, 0.96", "52.1161, -10.8684, -7.87242, 0.6", "52.9322, -10.964, -7.78747, 0.6", "53.765, -11.0851, -7.69815, 0.96", "55.0228, -11.3009, -7.57419, 0.96", "56.0017, -11.5005, -7.49237, 1.44", "57.0242, -11.7036, -7.4206, 1.44", "57.618, -11.8125, -7.39003, 1.44", "58.2016, -11.8955, -7.37675, 0.84", "59.0905, -12.0056, -7.36793, 0.84", "59.4236, -12.0365, -7.37837, 0.84", "60.5065, -12.1333, -7.45197, 1.2", "61.4487, -12.2022, -7.53179, 1.2", "63.1293, -12.2995, -7.69287, 1.44", "64.0453, -12.3524, -7.78717, 1.44", "66.2855, -12.4941, -8.02294, 0.96", "66.8381, -12.5295, -8.08018, 0.96", "68.3368, -12.632, -8.22931, 1.32", "69.313, -12.6797, -8.32169, 1.32", "69.8212, -12.7004, -8.36451, 0.72", "70.7, -12.7313, -8.42227, 0.72", "71.91, -12.795, -8.46231, 0.72", "73.1479, -12.8534, -8.49169, 0.96", "74.241, -12.9187, -8.51652, 0.96", "75.0331, -12.9681, -8.53382, 0.96", "75.9474, -13.011, -8.5263, 1.32", "77.3239, -13.0706, -8.46957, 1.32", "78.282, -13.11, -8.39925, 0.72", "78.9357, -13.1448, -8.33294, 0.72", "80.146, -13.2424, -8.20414, 0.72", "81.4108, -13.3525, -8.07461, 0.72", "82.1614, -13.4237, -8.00711, 1.2", "82.9054, -13.5007, -7.95921, 1.2", "83.7394, -13.5724, -7.92588, 0.72", "84.5606, -13.6101, -7.92268, 0.72", "85.265, -13.6126, -7.94673, 0.72", "86.4244, -13.5825, -8.02837, 0.48", "88.107, -13.4457, -8.1493, 0.48", "88.9442, -13.3235, -8.20238, 0.96", "90.495, -12.9526, -8.27259, 0.96", "91.4203, -12.6553, -8.29646, 0.96", "92.0606, -12.4007, -8.31142, 0.36", "92.8431, -12.0295, -8.33271, 0.36", "94.0037, -11.4447, -8.40426, 0.36", "95.0683, -10.9329, -8.49895, 0.84", "95.7647, -10.5789, -8.58162, 0.84", "96.8621, -10.0454, -8.77396, 0.84", "97.6708, -9.66105, -8.95098, 1.08", "99.1909, -9.04885, -9.31957, 1.08", "100.023, -8.76512, -9.53605, 0.48", "100.577, -8.61569, -9.68446, 0.48", "101.965, -8.29196, -10.0434, 0.96", "102.795, -8.11924, -10.2483, 0.96", "104.496, -7.78536, -10.6087, 0.96", "104.968, -7.69905, -10.6723, 0.48", "105.687, -7.59888, -10.7904, 0.48", "106.5, -7.51533, -10.9592, 0.48", "107.683, -7.39238, -11.2381, 0.84", "109.179, -7.23274, -11.653, 0.6", "110.715, -7.05018, -12.1253, 0.96", "113.152, -6.75236, -12.8836, 0.84", "114.032, -6.6326, -13.1559, 0.36", "115.257, -6.46405, -13.5119, 0.36", "115.951, -6.36625, -13.6912, 0.36", "117.004, -6.233, -13.9428, 0.36", "118.393, -6.05, -14.2662, 0.96", "119.249, -5.92457, -14.4042, 0.96", "120.522, -5.74919, -14.5977, 0.72", "121.618, -5.60613, -14.7799, 0.72", "122.876, -5.43735, -15.0018, 0.48", "124.061, -5.26811, -15.2106, 0.48", "126.056, -5.01121, -15.5435, 0.96", "127.231, -4.8714, -15.7375, 0.96", "128.042, -4.75581, -15.8658, 0.36", "128.465, -4.68647, -15.9212, 0.36", "130.366, -4.36411, -16.0956, 0.84", "131.531, -4.20962, -16.167, 0.24", "132.188, -4.13863, -16.2189, 0.48", "133.417, -4.00093, -16.3334, 0.48", "134.722, -3.81968, -16.4701, 0.48", "135.815, -3.60555, -16.5968, 0.48", "136.529, -3.39245, -16.6878, 0.48", "137.507, -3.01468, -16.87, 0.84", "138.054, -2.77096, -16.9925, 0.84", "138.823, -2.37666, -17.1967, 0.48", "139.599, -1.93375, -17.4147, 0.48", "140.952, -1.12807, -17.7997, 0.48", "142.675, -0.116183, -18.3224, 0.84", "143.25, 0.209869, -18.5025, 0.84", "143.968, 0.598644, -18.7311, 0.48", "145.196, 1.21914, -19.1125, 0.48", "146.354, 1.75803, -19.4511, 0.48", "147.527, 2.28468, -19.7471, 0.48", "148.254, 2.62421, -19.9049, 0.48", "149.012, 2.98093, -20.1875, 1.32", "149.497, 3.23265, -20.4302, 0.48", "149.937, 3.51049, -20.717, 0.48", "150.86, 4.19087, -21.4749, 1.56", "151.634, 4.84382, -22.28, 0.72", "153.287, 6.44633, -24.5275, 0.72", "153.703, 6.97433, -25.3346, 0.72", "154.039, 7.56038, -26.1346, 0.72", "154.329, 8.40868, -27.1406, 0.72", "154.537, 9.33285, -28.2276, 1.08", "154.678, 10.7777, -29.77, 0.6", "154.596, 12.5034, -31.2535, 0.6", "154.277, 15.0943, -33.5155, 1.2", "153.977, 16.4893, -34.547, 1.2" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "17.103, -6.15305, -9.11554, 0.84", "17.883, -5.822, -8.75229, 0.84", "19.1555, -5.31839, -8.20387, 1.2", "19.624, -5.15406, -8.01389, 0.84", "20.5188, -4.84277, -7.68087, 0.84", "21.086, -4.64192, -7.4759, 0.84", "21.7976, -4.3836, -7.2317, 0.84", "22.1305, -4.27157, -7.1191, 0.84", "22.5473, -4.12839, -6.99634, 0.6", "23.0548, -3.94241, -6.83038, 0.6", "23.3693, -3.81057, -6.70604, 1.2", "23.8444, -3.59264, -6.48146, 1.2", "24.7373, -3.18175, -5.98326, 0.84", "25.1901, -2.98213, -5.72866, 1.32", "25.748, -2.74055, -5.40572, 1.32", "26.4956, -2.44166, -4.9455, 0.84", "26.9315, -2.27735, -4.67701, 0.72", "27.6255, -2.0102, -4.235, 0.72", "28.4084, -1.67862, -3.73452, 0.96", "28.6947, -1.53421, -3.55248, 0.96", "29.0424, -1.33212, -3.34935, 0.48", "29.3012, -1.18321, -3.22131, 0.48", "29.9579, -0.790051, -2.93937, 0.96", "30.4681, -0.452514, -2.7459, 0.96", "31.3213, 0.147214, -2.46571, 0.84", "32.0113, 0.651606, -2.28964, 0.72", "32.4068, 0.95866, -2.21684, 0.72", "32.8233, 1.31607, -2.16368, 1.2", "33.0465, 1.52842, -2.16702, 1.2", "33.2275, 1.73442, -2.19932, 0.72", "33.4255, 2.07955, -2.28931, 1.2", "33.4998, 2.28513, -2.34198, 1.2", "33.6208, 2.70215, -2.45517, 1.2", "33.7541, 3.16553, -2.5884, 0.72", "33.8497, 3.41242, -2.66633, 0.72", "34.0094, 3.74476, -2.75895, 1.08", "34.153, 3.9726, -2.8089, 1.08", "34.3151, 4.183, -2.83429, 1.08", "35.0257, 4.94569, -2.83385, 0.6", "35.3662, 5.26452, -2.79022, 0.6", "35.8879, 5.69449, -2.66224, 0.6", "36.3147, 6.01023, -2.52897, 1.08", "36.6367, 6.2616, -2.40593, 1.08", "36.9504, 6.51009, -2.26982, 1.08", "37.4684, 6.90391, -2.03568, 0.84", "38.1715, 7.42926, -1.74051, 0.84", "38.2875, 7.5158, -1.69816, 0.84", "38.906, 8.03202, -1.48617, 0.48", "39.2533, 8.34421, -1.36826, 0.48", "39.7306, 8.75808, -1.2055, 0.48", "40.3157, 9.24311, -1.00091, 0.84", "40.5917, 9.48273, -0.912373, 0.84", "40.995, 9.86644, -0.783235, 0.84", "41.1834, 10.063, -0.726339, 0.72", "41.9456, 10.969, -0.512055, 0.72", "42.1446, 11.2278, -0.469212, 0.72", "42.7017, 11.9817, -0.39942, 0.48", "43.0274, 12.3956, -0.388851, 0.48", "43.3231, 12.7327, -0.4043, 0.84", "43.6332, 13.0537, -0.440069, 0.36", "44.023, 13.4891, -0.513667, 0.36", "44.2009, 13.6598, -0.551401, 0.96", "44.6029, 13.9308, -0.623929, 0.6", "45.0947, 14.191, -0.699902, 0.6", "45.6016, 14.4257, -0.772202, 0.36", "50.7415, 17.6645, -0.214133, 0.36" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "11.3821, -2.50245, 9.24158, 0.48", "11.3411, -1.66421, 9.48134, 0.48", "11.3755, -1.21308, 9.6111, 0.48", "11.5409, -0.37492, 9.85225, 0.48", "11.9281, 0.77938, 10.1824, 0.48", "12.1952, 1.31327, 10.3291, 0.48", "12.6316, 2.00117, 10.5044, 0.48", "13.0244, 2.48318, 10.6342, 0.48", "13.2674, 2.74617, 10.6997, 0.48", "13.6016, 3.07194, 10.7675, 0.48", "14.0844, 3.55648, 10.8472, 0.48", "14.4919, 4.07192, 10.8794, 0.48", "14.9446, 4.83953, 10.8787, 0.84", "15.2296, 5.43498, 10.859, 1.32", "15.4593, 5.97164, 10.8267, 1.32", "15.6146, 6.36242, 10.7891, 1.32", "16.1682, 7.58525, 10.6379, 0.6", "16.4682, 8.12762, 10.5609, 0.6", "16.7175, 8.53782, 10.5346, 0.6", "17.0657, 9.11026, 10.4791, 0.6", "17.7124, 10.1863, 10.2734, 0.6", "18.1962, 10.9972, 10.0777, 1.44", "18.6871, 11.8025, 9.88757, 1.44", "19.5424, 13.1728, 9.51133, 0.84", "20.6499, 14.9457, 8.94117, 0.6", "21.4199, 16.2468, 8.44066, 1.56", "21.7076, 16.7882, 8.17525, 1.56" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "11.3821, -2.50245, 9.24158, 1.32", "12.409, -3.13378, 10.4835, 1.32", "13.7514, -4.25044, 12.2452, 1.32", "14.9593, -5.63566, 14.1059, 0.84", "15.3857, -6.35807, 14.9195, 0.6", "15.6599, -7.19929, 15.8038, 0.6", "15.7719, -7.95285, 16.657, 1.56", "15.6798, -8.47131, 17.2923, 1.56", "15.3278, -9.17833, 18.127, 1.56", "14.7467, -9.89656, 19.0388, 1.56", "13.3861, -11.1278, 20.9287, 1.56", "12.2236, -12.0074, 22.4539, 0.84", "11.5696, -12.4505, 23.3022, 0.84", "10.885, -12.8553, 24.1938, 0.36", "10.3094, -13.1381, 24.9191, 0.36", "9.79675, -13.3273, 25.5327, 0.36", "9.13457, -13.5015, 26.0422, 0.36", "8.53682, -13.7483, 26.3306, 0.36", "5.41722, -18.9842, 35.7081, 0.36", "1.66675, -22.7634, 45.6182, 0.36", "-2.95809, -25.1678, 55.6369, 0.36", "-8.68263, -28.9655, 64.5441, 0.36" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "2.04361, 12.8095, -0.710484, 1.44", "0.77986, 12.712, 0.562902, 1.44", "-1.46678, 12.5593, 2.9063, 1.44", "-3.7361, 12.4247, 5.3837, 0.6", "-4.30733, 12.369, 6.02335, 0.6", "-5.08554, 12.2526, 6.9264, 1.08", "-7.29117, 11.8172, 9.55354, 0.6", "-7.83097, 11.6576, 10.2386, 0.6", "-9.0234, 11.1851, 11.5989, 1.08", "-9.93187, 10.7829, 12.6666, 1.08", "-10.9906, 10.2967, 13.9559, 1.68", "-12.7455, 9.38561, 16.0962, 0.6", "-13.2012, 9.09721, 16.545, 0.6", "-15.8083, 7.22384, 19.0195, 1.32" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "2.04361, 12.8095, -0.710484, 1.8", "2.61553, 14.7628, -0.402748, 1.8", "3.17528, 16.6745, -0.10156, 1.8" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-13.6098, 39.4788, 0.0, 0.643146", "-18.9951, 53.4787, 0.0, 0.643146", "-24.3805, 67.4786, 0.0, 0.643146" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "3.84012, -17.8932, -6.48215, 0.6", "5.68015, -18.461, -5.99946, 0.6", "6.72526, -18.7712, -5.7628, 0.6", "9.89476, -19.6172, -5.05566, 1.08", "11.3785, -19.9516, -4.71147, 1.08", "13.055, -20.2912, -4.32609, 0.6", "14.1906, -20.514, -4.08205, 0.6", "15.7818, -20.7771, -3.70405, 1.2", "17.5351, -20.9937, -3.32554, 0.6", "18.7615, -21.1112, -3.11399, 0.6", "19.4793, -21.1873, -3.01206, 0.6", "21.9605, -21.4369, -2.66197, 1.92", "23.6759, -21.6228, -2.41032, 1.08", "25.419, -21.868, -2.15805, 1.08", "26.8954, -22.1151, -1.9998, 1.44", "28.2909, -22.3805, -1.93432, 1.44", "29.3588, -22.5786, -1.96934, 0.84", "30.5399, -22.8035, -2.11635, 0.84", "32.3339, -23.1667, -2.51341, 0.96", "33.1821, -23.3494, -2.76917, 0.96", "35.231, -23.7761, -3.50529, 2.04", "36.8724, -24.1218, -4.16921, 2.04", "37.4955, -24.2593, -4.4519, 2.04", "39.1361, -24.6265, -5.2253, 0.84", "40.2045, -24.895, -5.73657, 0.84", "41.1321, -25.179, -6.1375, 0.84", "41.9277, -25.4731, -6.44741, 0.84", "42.6804, -25.7938, -6.73078, 1.2", "43.2863, -26.0762, -6.96833, 1.2", "44.0064, -26.4467, -7.26, 0.72", "44.3565, -26.622, -7.40938, 0.72", "45.5497, -27.1564, -7.99184, 1.44", "47.2388, -27.6516, -8.43601, 0.84", "48.0401, -27.8099, -8.49632, 0.84", "49.1441, -27.9555, -8.45231, 0.84", "50.325, -28.0631, -8.31575, 1.56", "53.1942, -28.2471, -7.79287, 0.6", "58.6213, -28.4846, -6.51189, 1.8", "60.4109, -28.5639, -5.99645, 2.16", "62.1073, -28.6611, -5.46141, 0.96", "63.1395, -28.7447, -5.1402, 0.96", "64.6308, -28.9143, -4.70747, 0.96", "66.1739, -29.1883, -4.42088, 1.32", "67.9542, -29.6576, -4.42432, 0.72", "69.8408, -30.1964, -4.58925, 1.92", "72.5775, -31.0684, -5.0277, 0.6", "73.8797, -31.5193, -5.32177, 0.96", "76.6732, -32.4871, -6.01461, 0.72", "78.5534, -33.0866, -6.42864, 0.72", "81.2761, -33.8341, -6.86998, 1.8", "82.9473, -34.2197, -6.98811, 0.84", "84.4711, -34.4608, -6.87666, 0.84", "87.2187, -34.6204, -6.24299, 1.8", "89.6051, -34.414, -5.27857, 0.6", "91.7897, -34.0445, -4.1532, 0.6", "92.424, -33.8847, -3.73223, 0.6", "93.6728, -33.4651, -2.7681, 0.6", "94.6086, -33.067, -1.95521, 0.6", "95.9111, -32.3833, -0.774104, 0.84", "106.256, -36.0454, -0.762015, 0.84", "116.643, -39.5974, -0.590813, 0.84", "127.107, -42.8032, -1.63642, 0.84", "137.164, -47.1184, -1.60149, 0.84", "146.956, -51.747, -3.05901, 0.84", "157.077, -55.3253, -5.36097, 0.84", "167.66, -57.8845, -7.05003, 0.84", "177.742, -60.6905, -10.4727, 0.84", "187.514, -62.2306, -15.3969, 0.84", "197.395, -63.6163, -20.1567, 0.84", "206.782, -64.0784, -26.0102, 0.84" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "3.84012, -17.8932, -6.48215, 0.84", "3.98773, -18.0641, -6.65551, 0.84", "5.39534, -19.598, -8.22325, 1.44", "5.93582, -20.2644, -8.85232, 1.44", "6.60077, -21.2486, -9.72499, 0.72", "6.90351, -21.8188, -10.1879, 0.72", "7.77005, -23.8531, -11.7052, 2.04", "7.83829, -24.1175, -11.878, 2.04", "8.06232, -26.3009, -13.0834, 1.08", "8.01293, -27.5639, -13.7026, 0.72", "7.78276, -29.0638, -14.3223, 2.04", "7.56468, -29.9067, -14.6045, 2.04", "6.94226, -31.76, -15.1179, 0.96", "6.84003, -32.0569, -15.1902, 0.96", "6.31565, -33.6106, -15.4895, 1.68", "6.09703, -34.4245, -15.635, 1.68", "5.67861, -36.5116, -15.996, 0.84", "5.52201, -37.6457, -16.2611, 0.84", "5.37566, -39.0873, -16.7722, 1.68", "5.29342, -40.3057, -17.3198, 1.68", "5.25688, -41.6565, -18.0978, 0.84", "5.26629, -42.5318, -18.6909, 0.84", "5.38701, -44.7479, -20.3942, 2.04", "5.56273, -47.08, -22.2986, 0.96", "5.63995, -47.8253, -22.9306, 0.96", "5.8538, -49.6405, -24.439, 1.44", "5.99168, -50.6744, -25.2333, 0.6", "6.18147, -51.7272, -25.8271, 0.6", "6.66436, -52.8809, -24.6922, 1.08", "6.93474, -53.5494, -23.8845, 0.48", "7.24578, -54.3877, -22.7487, 0.96", "7.44489, -54.9884, -21.8721, 0.36", "9.5261, -62.9117, -9.8058, 1.08", "9.9783, -65.2007, -6.29332, 0.36", "10.0433, -65.6223, -5.6368, 0.36", "10.0896, -66.0588, -4.98129, 0.72", "10.1275, -66.8235, -3.89375, 0.72", "9.81168, -68.2239, -3.71276, 1.08", "9.39688, -69.8009, -4.44569, 0.72", "9.25651, -70.6725, -4.73974, 0.72", "9.1204, -71.7354, -5.14431, 0.96", "9.05318, -72.5129, -5.47757, 0.96", "9.02953, -74.3338, -6.36717, 0.6", "9.34331, -77.5358, -7.98581, 1.2" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-5.59914, -21.6905, 4.89488, 1.08", "-6.295, -23.4989, 5.71277, 1.08", "-6.80178, -25.0362, 6.41352, 0.6", "-7.19599, -26.6441, 7.16477, 1.08", "-7.51239, -28.3224, 7.92963, 1.08", "-7.82991, -30.4076, 8.8312, 0.72", "-8.17018, -32.4093, 9.70823, 1.56", "-8.4605, -34.1733, 10.5323, 1.56", "-8.77481, -36.5629, 11.6657, 0.84", "-8.91118, -37.547, 12.1536, 0.84", "-9.09155, -38.9213, 12.8292, 0.84", "-9.3607, -40.7809, 13.7305, 1.2", "-9.75432, -42.8261, 14.7132, 0.72", "-10.1795, -44.3389, 15.5325, 0.72", "-10.9048, -46.076, 16.5604, 1.2", "-11.3599, -56.1591, 20.4531, 1.2", "-12.485, -65.1589, 26.5297, 1.2" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-5.59914, -21.6905, 4.89488, 0.84", "-7.62823, -21.8422, 6.36358, 0.84", "-8.43715, -21.9465, 7.05939, 0.84", "-8.67265, -21.9702, 7.28942, 1.08", "-10.2265, -22.0653, 8.86424, 0.6", "-11.3409, -22.1334, 9.99368, 0.6", "-13.4346, -22.2615, 12.1156, 0.6", "-14.7606, -22.3859, 13.606, 1.08", "-16.1157, -22.5233, 15.2426, 1.56", "-16.7776, -22.5936, 16.106, 0.96", "-26.3429, -20.6495, 22.3919, 0.96", "-36.2949, -20.0927, 28.3517, 0.96", "-45.5836, -18.578, 35.1544, 0.96", "-54.1172, -17.6819, 42.9817, 0.96" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "17.2466, -95.906, 20.9996, 0.72", "18.5661, -97.2366, 21.415, 0.72", "19.2869, -97.9997, 21.6425, 0.72", "19.7808, -98.4958, 21.8033, 1.2", "20.2508, -98.9572, 21.9589, 1.2", "21.2606, -99.992, 22.2912, 0.48", "22.1132, -100.87, 22.5726, 0.48", "22.8083, -101.571, 22.8526, 0.48", "23.5801, -102.273, 23.2043, 0.96", "24.3282, -102.842, 23.5759, 0.96", "25.6804, -103.7, 24.2897, 0.36", "26.0928, -103.88, 24.5181, 0.36", "27.9271, -104.551, 25.5726, 1.56", "28.6127, -104.758, 25.9804, 1.56", "30.2445, -105.141, 26.9832, 0.72", "30.5817, -105.181, 27.1954, 0.72", "32.2604, -105.163, 28.2595, 1.08", "40.2763, -110.1, 33.3989, 1.08", "46.974, -116.073, 39.179, 1.08", "53.4213, -121.956, 45.3404, 1.08", "59.221, -126.245, 53.3475, 1.08", "64.9233, -131.28, 60.9301, 1.08", "68.94, -137.474, 68.6547, 1.08", "73.4793, -145.045, 74.4838, 1.08", "76.3453, -152.802, 81.0851, 1.08", "78.4503, -160.618, 87.9029, 1.08", "81.3503, -167.792, 95.1866, 1.08", "84.6922, -174.38, 102.879, 1.08", "86.5679, -181.255, 110.804, 1.08" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "17.2466, -95.906, 20.9996, 0.84", "17.1761, -97.8503, 20.7847, 0.84", "17.2207, -99.3489, 20.6621, 0.6", "17.3031, -100.372, 20.5333, 0.6", "17.3876, -101.962, 20.2336, 1.08", "17.4295, -102.752, 20.0848, 0.36", "17.4541, -103.214, 19.9976, 0.36", "17.6361, -104.895, 19.6872, 1.08", "17.8942, -106.533, 19.3282, 0.72", "18.1694, -108.534, 18.7912, 1.8", "17.0388, -117.084, 16.0577, 1.8", "16.3347, -125.529, 12.8865, 1.8", "15.402, -133.063, 7.822, 1.8", "14.9316, -141.182, 3.80451, 1.8", "14.077, -149.655, 0.745348, 1.8", "14.6979, -157.742, -3.28432, 1.8", "16.3133, -166.071, -6.34936, 1.8", "18.9946, -174.136, -9.39899, 1.8", "19.8303, -182.718, -12.021, 1.8", "19.3927, -191.582, -13.5873, 1.8", "19.016, -200.523, -14.6026, 1.8" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "21.7076, 16.7882, 8.17525, 0.84", "23.9089, 16.504, 9.50095, 0.84", "24.348, 16.4471, 9.69878, 0.84", "24.5206, 16.4253, 9.77204, 0.72", "25.1879, 16.3639, 10.0416, 1.32", "25.5641, 16.3418, 10.178, 1.32", "26.3087, 16.2748, 10.4683, 0.72", "27.2307, 16.1458, 10.8076, 0.72", "27.5536, 16.0727, 10.9791, 0.72", "27.9695, 15.9372, 11.2692, 0.72", "28.4672, 15.7396, 11.6757, 0.72", "29.2054, 15.4328, 12.3106, 0.72", "30.3321, 14.9456, 13.3236, 1.08", "30.6879, 14.7941, 13.6248, 1.08", "31.6464, 14.4124, 14.3852, 0.72", "31.9108, 14.3187, 14.5869, 0.72", "32.3792, 14.2, 14.9126, 0.72", "32.8107, 14.17, 15.1495, 0.72", "33.2536, 14.1983, 15.3388, 1.08", "33.8389, 14.2804, 15.5503, 1.08", "34.3097, 14.3643, 15.6935, 0.6", "34.9134, 14.4471, 15.8658, 0.96", "35.6527, 14.5086, 16.055, 0.96", "35.9529, 14.5114, 16.1149, 0.96", "36.6405, 14.4577, 16.2262, 0.96", "37.041, 14.3866, 16.2368, 0.48", "37.5516, 14.2627, 16.2184, 0.48", "38.0219, 14.1147, 16.1679, 0.96", "38.6378, 13.8645, 16.0563, 0.48", "38.9018, 13.7438, 15.998, 0.48", "39.8493, 13.2353, 15.7114, 0.84", "46.7319, 13.1866, 18.4592, 0.84" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "21.7076, 16.7882, 8.17525, 1.2", "21.9325, 17.2435, 10.5342, 1.2" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-15.8083, 7.22384, 19.0195, 0.84", "-16.9448, 8.04872, 15.8874, 0.84", "-17.2622, 8.27916, 15.0125, 0.84", "-18.6382, 9.27789, 11.2204, 0.84", "-19.1119, 9.62175, 9.91472, 0.48", "-19.4374, 9.85804, 9.0176, 0.48", "-19.9112, 10.2019, 7.71169, 1.32", "-21.9772, 10.9331, 0.960562, 1.32", "-23.7532, 12.6103, -5.67192, 1.32", "-24.5916, 13.1737, -12.7052, 1.32", "-26.2512, 12.3887, -19.5865, 1.32", "-27.1439, 11.9521, -26.6372, 1.32", "-29.5579, 10.3075, -33.1309, 1.32", "-31.0471, 7.43705, -39.447, 1.32", "-31.2801, 4.15503, -45.7121, 1.32", "-31.1498, 0.577336, -51.7993, 1.32", "-29.988, -1.99538, -58.3078, 1.32", "-28.7231, -4.32278, -64.896, 1.32", "-28.5857, -6.93096, -71.4957, 1.32", "-26.8549, -9.3385, -77.9431, 1.32", "-24.5549, -12.9057, -83.5674, 1.32", "-20.7848, -15.4247, -89.0052, 1.32", "-15.5276, -16.9613, -93.5237, 1.32", "-10.5105, -18.3599, -98.3568, 1.32", "-4.91217, -20.5311, -102.101, 1.32", "0.0641966, -22.6199, -106.692, 1.32", "4.35978, -25.1689, -111.702, 1.32", "8.98306, -28.2662, -116.023, 1.32", "13.5132, -30.1925, -121.132, 1.32", "18.2518, -32.8177, -125.67, 1.32", "23.3818, -35.0864, -129.986, 1.32" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-15.8083, 7.22384, 19.0195, 0.84", "-15.6041, 6.44732, 19.6363, 0.84", "-15.3114, 6.18585, 19.8609, 0.84", "-14.2552, 5.68543, 20.2525, 0.84", "-13.6787, 5.39265, 20.3778, 0.84", "-12.8396, 4.8599, 20.4789, 0.84", "-11.9098, 4.26465, 20.8201, 1.2", "-10.8456, 3.71523, 21.0319, 1.2", "-10.3624, 3.49174, 21.1035, 0.72", "-9.51216, 3.1381, 21.1624, 0.72", "-8.60937, 2.73574, 21.194, 1.2", "-6.09513, 1.32012, 21.1376, 0.72", "-3.93032, -0.299094, 21.3151, 0.72", "3.4097, -5.82731, 24.3946, 0.72" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "3.17528, 16.6745, -0.10156, 1.8", "3.04437, 16.7879, -0.306421, 1.8", "1.68615, 18.3946, -2.59691, 0.96", "0.225221, 20.5182, -5.01657, 0.96", "-0.849496, 22.2557, -6.61972, 0.96", "-1.29673, 22.958, -7.1828, 0.96", "-1.92509, 23.8401, -7.94248, 0.96", "-2.7426, 24.9441, -8.89999, 0.6", "-3.49407, 25.9566, -9.69424, 0.6", "-4.36639, 26.9953, -10.4746, 1.44", "-5.18459, 27.8787, -11.198, 1.44", "-8.15044, 30.7958, -13.8126, 0.84", "-9.1904, 31.723, -14.7071, 0.48", "-10.1214, 32.5142, -15.5518, 0.48", "-10.7269, 33.0625, -16.1343, 0.48", "-11.9182, 34.2836, -17.3412, 0.96", "-12.6932, 35.2911, -18.1313, 0.96", "-13.0427, 35.877, -18.4477, 0.96", "-14.3242, 38.4394, -19.7019, 0.48", "-14.8662, 39.5806, -20.2705, 0.48", "-15.3196, 40.5168, -20.721, 0.48", "-16.1625, 42.1664, -21.4645, 1.44", "-16.6339, 43.0923, -21.846, 1.44", "-17.5402, 44.7541, -22.4385, 0.84", "-18.175, 45.8067, -22.7301, 0.84", "-18.8981, 46.8581, -23.0095, 0.84", "-20.232, 48.5548, -23.4941, 1.68", "-20.9574, 49.3427, -23.732, 1.68", "-21.8665, 50.2806, -23.9964, 0.84", "-22.2242, 50.6511, -24.1023, 0.84", "-23.2942, 51.8158, -24.4488, 1.2", "-25.2629, 54.059, -25.1236, 0.6", "-26.3023, 55.2944, -25.699, 0.96", "-27.0057, 56.1439, -26.1912, 1.32", "-27.9875, 57.4333, -26.9843, 0.36", "-28.4086, 58.0462, -27.3454, 0.36", "-29.063, 59.1289, -27.9394, 0.72", "-31.2004, 63.1579, -30.1109, 0.72", "-31.7011, 64.2303, -30.6762, 0.72", "-32.5072, 66.1396, -31.6374, 0.72", "-33.1677, 68.0995, -32.6131, 0.6", "-33.4928, 69.3929, -33.221, 0.6", "-33.7929, 71.2973, -33.9988, 1.56", "-33.8765, 72.5292, -34.3456, 1.56", "-33.8853, 73.3059, -34.5887, 1.56", "-33.8084, 76.2163, -35.6008, 0.84", "-33.6921, 77.7331, -36.152, 0.84", "-33.5649, 78.9495, -36.5606, 0.84", "-33.338, 80.8105, -37.0228, 1.44", "-33.1464, 82.613, -37.4635, 1.08" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "3.17528, 16.6745, -0.10156, 1.44", "3.72784, 18.0887, -1.00675, 1.44", "4.02129, 18.7199, -1.41265, 1.44", "4.42651, 19.5075, -1.8881, 1.44", "4.80186, 20.1677, -2.26472, 1.2", "5.21202, 20.829, -2.62892, 1.2", "5.98458, 21.9549, -3.2209, 1.08", "6.828, 22.978, -3.69598, 0.96", "7.57979, 23.7595, -4.05179, 0.96", "8.18853, 24.3332, -4.29895, 0.96", "8.57802, 24.6955, -4.43819, 0.96", "9.42453, 25.5194, -4.68778, 1.32", "9.97388, 26.0756, -4.76977, 0.84", "10.2845, 26.4053, -4.77125, 0.84", "11.2923, 27.5485, -4.68807, 0.84", "12.1457, 28.5943, -4.55524, 0.84", "12.6535, 29.2605, -4.44338, 0.84", "13.5605, 30.5144, -4.18468, 1.44", "14.0958, 31.2656, -4.0072, 1.44", "14.3179, 31.5615, -3.92076, 1.44", "14.6499, 31.9528, -3.76061, 1.44", "14.9605, 32.2647, -3.62837, 1.44", "15.3445, 32.6241, -3.50186, 1.44", "15.4504, 32.7396, -3.4852, 1.44" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "21.9325, 17.2435, 10.5342, 0.6", "22.9392, 17.8274, 11.1489, 0.6", "24.1637, 18.4602, 11.7786, 0.6", "24.9782, 18.8699, 12.2104, 0.6", "25.5995, 19.198, 12.5424, 0.48", "26.3944, 19.6299, 12.9708, 1.08", "26.8835, 19.9087, 13.2534, 1.08", "27.2708, 20.131, 13.4738, 1.08", "28.1736, 20.686, 13.9324, 0.48", "28.6289, 21.0228, 14.1827, 0.48", "28.9418, 21.2894, 14.3689, 0.48", "29.5248, 21.8049, 14.7216, 0.48", "30.2114, 22.3677, 15.0868, 1.2", "30.4335, 22.5045, 15.177, 1.2", "30.9282, 22.7161, 15.3128, 0.72", "31.2923, 22.8384, 15.4353, 0.72", "31.8879, 23.0012, 15.6821, 0.72", "32.4532, 23.1259, 15.9433, 1.32", "33.6212, 23.3694, 16.5649, 0.6", "33.9729, 23.4436, 16.7702, 0.6", "35.5334, 23.7667, 17.7836, 0.6", "36.3411, 23.9441, 18.3517, 0.6", "36.75, 24.044, 18.6653, 0.6", "37.3317, 24.1959, 19.1511, 1.2", "37.6046, 24.2762, 19.3986, 1.2", "37.9251, 24.3656, 19.6878, 1.2", "38.7007, 24.47, 20.23, 0.72", "46.3817, 27.0935, 25.6068, 0.72" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "21.9325, 17.2435, 10.5342, 1.32", "21.792, 17.7725, 9.6488, 1.32", "21.4127, 18.6286, 8.10622, 1.32", "20.94, 19.51, 6.52786, 0.84", "20.3772, 20.4909, 4.83526, 0.6", "20.057, 21.0556, 3.9097, 0.6", "19.748, 21.6176, 3.00578, 0.6", "19.1891, 22.7429, 1.22224, 0.6", "19.0348, 23.0569, 0.774365, 1.08", "18.9048, 23.3796, 0.40346, 1.08", "18.7985, 23.8095, 0.0203749, 1.08", "18.7636, 24.3961, -0.42524, 0.48", "18.8246, 25.4421, -1.09859, 0.48", "18.8667, 25.8048, -1.30265, 0.48", "18.9529, 26.6324, -1.82841, 0.48", "18.9956, 27.2517, -2.25535, 0.48", "19.0205, 28.7655, -3.34043, 1.2", "18.9956, 29.1897, -3.64137, 1.2", "18.9484, 29.5108, -3.87855, 1.2", "18.6279, 30.9363, -4.98695, 0.6", "18.4284, 31.6282, -5.54512, 0.6", "18.2511, 32.1645, -5.96026, 0.6", "17.966, 32.8146, -6.37093, 0.84", "17.7543, 33.1711, -6.58049, 0.84", "17.1909, 33.846, -6.90874, 0.84", "16.6748, 34.1665, -6.99902, 0.84", "15.6492, 34.3759, -6.97506, 1.2", "14.1586, 34.3279, -7.0027, 0.84", "12.4668, 34.0187, -6.9464, 0.48", "11.1878, 33.7164, -6.88101, 0.48", "9.03084, 33.0825, -6.72763, 1.08", "7.27788, 32.4671, -6.60301, 0.48", "5.03522, 31.5052, -6.4615, 0.84", "3.20315, 30.5858, -6.40472, 0.36" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-33.1464, 82.613, -37.4635, 0.6", "-32.8715, 82.7523, -35.9306, 0.6", "-32.6909, 82.8319, -34.9645, 0.6", "-32.6107, 82.89, -34.3264, 1.08", "-32.5559, 82.9646, -33.6044, 0.48", "-32.462, 83.191, -31.6728, 0.72", "-32.4004, 83.3921, -29.9698, 0.72", "-32.375, 83.4467, -29.1333, 0.96", "-32.3229, 83.5292, -27.7315, 0.6", "-32.3156, 83.5548, -27.1941, 0.6", "-32.3686, 83.617, -25.7655, 0.6", "-32.3831, 83.6341, -25.5059, 0.6", "-32.4699, 83.7459, -23.7404, 0.6", "-32.4978, 83.7663, -22.9749, 0.84", "-32.4618, 83.7644, -20.6348, 1.2", "-32.4407, 83.7518, -19.8158, 1.2" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-33.1464, 82.613, -37.4635, 0.6", "-33.1328, 83.4598, -37.8779, 0.6", "-33.1299, 83.9168, -38.0095, 0.6", "-33.1201, 84.9527, -38.2266, 0.96", "-33.1157, 85.3923, -38.3893, 0.96", "-33.1095, 85.8455, -38.5889, 0.6", "-33.0928, 86.3506, -38.8298, 0.6", "-33.0511, 87.3661, -39.3402, 1.08", "-33.0428, 87.5368, -39.4588, 1.08", "-32.9395, 89.1115, -40.6327, 0.6", "-32.921, 89.3358, -40.8213, 0.6", "-32.8889, 89.6111, -41.0451, 0.6", "-32.7508, 90.5674, -41.7781, 1.44", "-32.4649, 92.385, -43.0541, 0.84", "-32.3276, 93.2972, -43.6195, 0.72", "-32.2378, 93.9317, -43.9377, 0.72", "-32.0676, 95.1791, -44.5278, 0.72", "-31.9845, 95.8005, -44.7893, 0.72", "-31.9251, 96.245, -44.9261, 0.96", "-31.7499, 97.755, -45.1882, 0.6", "-31.7298, 98.113, -45.2564, 0.6", "-31.71, 98.8477, -45.3965, 0.6", "-31.7075, 99.2529, -45.5015, 0.6", "-31.7078, 100.334, -45.7405, 1.2", "-31.706, 100.516, -45.7684, 1.44", "-31.7365, 101.128, -45.853, 1.44", "-31.7933, 101.64, -45.9447, 1.44", "-32.067, 103.037, -46.1673, 0.6", "-32.2001, 103.487, -46.2496, 0.6", "-32.6045, 104.514, -46.4559, 1.2", "-33.3999, 106.106, -46.9015, 0.6", "-33.6099, 106.44, -47.024, 0.6", "-34.3332, 107.341, -47.4291, 0.96", "-35.3024, 108.287, -47.9394, 1.44", "-35.6415, 108.572, -48.1193, 1.44", "-36.8933, 109.479, -48.7802, 0.72", "-37.3106, 109.763, -48.987, 0.72", "-37.7427, 110.057, -49.2037, 0.72", "-38.0928, 110.306, -49.4253, 0.72", "-38.3422, 110.489, -49.5717, 0.72", "-38.7803, 110.83, -49.8088, 0.72", "-39.4115, 111.38, -50.0862, 1.08", "-39.5834, 111.558, -50.1904, 0.6", "-40.3807, 112.622, -51.1066, 0.6", "-40.6176, 113.006, -51.5715, 0.6", "-40.8605, 113.444, -52.2667, 0.6", "-41.0729, 113.834, -53.0351, 1.56", "-41.3979, 114.482, -54.3731, 1.56", "-41.8912, 115.457, -56.4141, 1.56", "-42.2886, 116.303, -58.1506, 1.2", "-42.5501, 116.926, -59.3856, 1.2", "-42.7273, 117.413, -60.3032, 1.2", "-42.9299, 117.931, -61.3252, 0.6", "-43.0624, 118.209, -61.8054, 0.6", "-43.3227, 118.712, -62.2701, 0.72", "-43.5883, 119.575, -62.4319, 0.96", "-43.804, 120.566, -62.3814, 1.44" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "15.4504, 32.7396, -3.4852, 1.08", "15.9903, 33.2155, -3.53177, 1.08", "16.6309, 33.7335, -3.59474, 0.72", "17.1826, 34.1197, -3.65947, 0.72", "18.1563, 34.7283, -3.78751, 0.72", "19.6412, 35.5882, -3.99693, 1.2", "20.4954, 36.0592, -4.12253, 1.68", "21.1761, 36.3865, -4.25349, 1.32", "22.5696, 36.9737, -4.56217, 0.96", "23.6514, 37.3804, -4.82988, 0.96", "24.5281, 37.6563, -5.00625, 0.6", "25.03, 37.7941, -5.08579, 0.6", "26.9075, 38.2698, -5.29634, 1.8", "27.1828, 38.3463, -5.31522, 1.8", "27.8173, 38.5345, -5.33545, 1.8", "29.8955, 39.1859, -5.34067, 0.84", "30.779, 39.4903, -5.35042, 0.6", "31.6349, 39.8104, -5.33428, 0.6", "32.904, 40.3054, -5.17569, 1.8", "33.5027, 40.5492, -5.08287, 1.8", "34.034, 40.7768, -4.9956, 1.8", "35.3407, 41.3971, -4.78803, 0.96", "37.1206, 42.2597, -4.19902, 0.96", "38.8686, 43.1152, -3.40428, 2.16", "39.2381, 43.2898, -3.19915, 2.16", "39.824, 43.568, -2.84247, 2.16", "41.1169, 44.1772, -2.01617, 0.84", "43.3654, 45.2332, -0.516196, 0.84", "44.0219, 45.5446, -0.138944, 0.84", "44.6716, 45.8395, 0.142076, 0.84", "45.4182, 46.1417, 0.410681, 0.84", "46.0267, 46.3552, 0.545285, 0.84", "46.5317, 46.5093, 0.552655, 0.84", "47.6749, 46.8414, 0.418509, 1.44", "48.2856, 47.0017, 0.371416, 1.44", "48.5602, 47.0709, 0.364974, 1.44", "49.6057, 47.3136, 0.442315, 0.72", "50.2804, 47.4656, 0.573554, 0.72", "51.8688, 47.8045, 1.09835, 0.72", "52.5016, 47.9604, 1.367, 0.72", "53.0847, 48.139, 1.63908, 1.2", "53.7862, 48.4086, 1.95087, 1.2", "54.5289, 48.7496, 2.24971, 0.48", "55.2742, 49.1448, 2.4657, 0.48", "56.5667, 49.951, 2.63014, 1.68", "57.2468, 50.3805, 2.62778, 1.68", "58.3216, 51.0371, 2.41413, 0.96", "59.1152, 51.4823, 2.2862, 0.96", "59.6928, 51.7677, 2.2132, 0.96", "60.2187, 51.9783, 2.17666, 1.44", "61.0748, 52.2263, 2.18901, 1.44", "62.5364, 52.5405, 2.30922, 1.44", "65.5624, 53.0726, 2.71343, 0.72", "66.1424, 53.166, 2.79869, 0.72", "67.3889, 53.3688, 2.99044, 0.72", "67.7976, 53.4237, 3.03579, 1.2", "69.4275, 53.5734, 3.13735, 0.72", "69.9523, 53.5846, 3.13569, 0.72", "70.2094, 53.57, 3.09095, 0.72", "71.9709, 53.3422, 2.73162, 1.68", "73.2347, 53.0191, 2.37688, 0.48", "74.0141, 52.7105, 2.0745, 0.48", "74.5929, 52.3436, 1.75904, 0.48", "74.8403, 52.1367, 1.60629, 0.48", "75.1879, 51.7885, 1.37991, 0.48", "75.7235, 51.2105, 1.0332, 0.48", "75.9682, 51.0053, 0.909175, 0.48", "76.6644, 50.5424, 0.591109, 0.96", "77.5164, 50.0746, 0.318006, 0.96", "78.3769, 49.6532, 0.114029, 0.48", "79.445, 49.1591, -0.00750542, 0.48", "80.9835, 48.4489, -0.0600077, 0.84", "81.8154, 48.0568, -0.0513349, 0.36", "83.4286, 47.2819, 0.00647801, 1.08", "84.0822, 46.9559, 0.0414154, 1.08", "85.9365, 45.9563, 0.172312, 0.6", "86.5126, 45.6081, 0.219922, 0.6", "86.8736, 45.3594, 0.250013, 0.6", "88.1941, 44.388, 0.354482, 1.2", "88.5571, 44.1197, 0.367061, 1.2", "88.9168, 43.8604, 0.380198, 1.2", "89.8058, 43.2439, 0.389146, 0.6", "90.4299, 42.8407, 0.418164, 0.6", "91.7893, 41.978, 0.530138, 0.6", "93.1197, 41.1453, 0.664935, 1.2", "93.7991, 40.7214, 0.740959, 0.48", "94.8392, 40.085, 0.871398, 0.48", "95.7336, 39.5297, 0.979756, 1.08", "96.4165, 39.0983, 1.0505, 0.36", "97.3181, 38.5095, 1.11202, 0.36", "98.2748, 37.866, 1.17042, 1.2", "99.0745, 37.3085, 1.20646, 0.6", "99.9496, 36.6962, 1.20579, 0.6", "100.164, 36.5472, 1.19435, 0.6", "101.553, 35.5727, 1.06154, 0.48", "102.907, 34.6081, 0.884315, 0.48", "103.455, 34.236, 0.785346, 0.48", "104.81, 33.3512, 0.504463, 1.2", "105.259, 33.0881, 0.421883, 1.2", "106.233, 32.5338, 0.184646, 0.72", "107.214, 32.0067, -0.112813, 0.96", "108.241, 31.539, -0.473175, 0.72", "108.98, 31.2261, -0.760603, 0.6", "110.561, 30.6007, -1.37114, 0.6", "112.319, 29.9534, -2.03573, 1.08", "113.012, 29.7217, -2.29351, 1.08", "113.99, 29.3685, -2.72185, 0.48", "114.785, 29.0176, -3.11887, 0.48", "115.815, 28.5271, -3.81013, 0.48", "116.112, 28.3726, -4.03522, 0.48", "116.449, 28.1897, -4.26809, 0.48", "117.748, 27.3575, -5.33205, 1.08", "118.298, 26.9484, -5.90379, 1.08", "119.367, 26.1421, -7.45431, 0.48", "129.131, 24.2534, -6.70273, 0.48", "138.617, 21.6849, -5.08981, 0.48", "147.858, 18.083, -4.71655, 0.48", "156.953, 14.2732, -5.73278, 0.48", "165.106, 8.83767, -6.56449, 0.48", "174.39, 5.38917, -5.83436, 0.48", "183.948, 2.64726, -5.38488, 0.48", "193.511, -0.0977134, -5.60564, 0.48", "202.674, -3.83891, -4.93308, 0.48" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "15.4504, 32.7396, -3.4852, 1.32", "15.6812, 33.3014, -4.05869, 1.32", "15.8909, 33.8135, -4.5243, 1.32", "16.3498, 34.9512, -5.48525, 0.72", "16.6176, 35.5797, -5.99246, 0.72", "16.9139, 36.2387, -6.50531, 0.72", "17.4316, 37.3297, -7.30743, 1.8", "17.7313, 37.9249, -7.71269, 1.8", "17.8453, 38.1515, -7.8399, 1.8", "18.1335, 38.6914, -8.04444, 1.8", "18.2855, 38.9617, -8.12204, 1.8", "18.6612, 39.5745, -8.23431, 0.84", "18.9949, 40.0439, -8.30486, 0.84", "19.3119, 40.4785, -8.3747, 0.84", "19.5929, 40.838, -8.43776, 0.84", "20.0087, 41.3397, -8.53169, 0.84", "20.7805, 42.2084, -8.73327, 0.72", "21.1173, 42.564, -8.83683, 0.72", "21.4208, 42.8717, -8.93849, 0.72", "21.9066, 43.3617, -9.11671, 0.72", "22.2676, 43.7381, -9.2662, 0.72", "22.749, 44.271, -9.47778, 0.72", "23.4218, 45.044, -9.78343, 1.68", "23.7032, 45.3808, -9.90861, 1.68", "24.2028, 45.9889, -10.1232, 1.68", "24.4596, 46.3011, -10.2288, 2.04", "25.1389, 47.1416, -10.5162, 1.44", "25.3363, 47.3894, -10.5984, 0.96", "25.733, 47.9051, -10.7839, 0.96", "26.2928, 48.6115, -10.9746, 1.32", "26.8742, 49.3262, -11.1045, 1.32", "27.2592, 49.8048, -11.1552, 0.72", "27.4865, 50.0953, -11.1703, 0.72", "27.9751, 50.7464, -11.1709, 0.72", "29.0553, 52.2267, -11.1022, 1.8", "29.4339, 52.7476, -11.0541, 1.8", "29.8229, 53.2763, -10.9927, 1.8", "30.0608, 53.5991, -10.9539, 0.96", "30.3665, 54.0243, -10.9165, 0.96", "30.8756, 54.7764, -10.874, 0.96", "31.2429, 55.4063, -10.9332, 0.96", "31.4598, 55.8012, -10.9868, 0.96", "32.0142, 56.8613, -11.1677, 1.92", "32.2952, 57.4388, -11.2786, 1.92", "32.4875, 57.8697, -11.3672, 1.92", "32.9118, 58.9276, -11.5948, 0.6", "33.0236, 59.2315, -11.6618, 0.6", "33.2188, 59.7868, -11.7793, 0.6", "33.4239, 60.4053, -11.8926, 0.6", "33.6343, 61.0856, -11.9781, 1.56", "33.7532, 61.4677, -12.0029, 1.56", "33.8733, 61.8181, -12.0011, 1.56", "33.976, 62.1269, -12.0227, 1.56", "34.2364, 62.9253, -12.1292, 0.84", "34.3445, 63.2608, -12.187, 0.84", "34.581, 64.021, -12.3328, 1.2", "34.8046, 64.7495, -12.4932, 1.2", "35.0838, 65.6942, -12.7143, 0.6", "35.3975, 66.8011, -12.9489, 1.2", "35.6021, 67.5199, -13.0874, 1.2", "35.6984, 67.8669, -13.1453, 1.56", "36.051, 69.2166, -13.325, 0.84", "36.158, 69.6452, -13.3696, 0.84", "36.6125, 71.3974, -13.4662, 0.36", "36.7895, 72.0963, -13.5061, 0.36", "36.8765, 72.441, -13.5237, 0.36", "36.9887, 72.8809, -13.5372, 0.36" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "36.9887, 72.8809, -13.5372, 0.96", "37.0013, 73.8958, -13.9197, 0.96", "37.041, 74.382, -14.0829, 0.96", "37.1822, 76.1102, -14.6628, 0.6", "37.2596, 77.0577, -14.9807, 0.6", "37.3566, 78.2445, -15.379, 0.96", "37.407, 78.8615, -15.586, 0.48", "37.5112, 79.5969, -15.8481, 0.96" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "36.9887, 72.8809, -13.5372, 0.72", "37.9657, 73.708, -13.9178, 0.72", "38.3634, 74.0433, -14.1256, 0.72", "38.6941, 74.3358, -14.3533, 1.2", "38.6941, 74.3358, -14.3533, 0.72", "39.193, 74.7481, -14.4212, 0.72", "39.8058, 75.2707, -14.4328, 1.32", "40.4878, 75.9269, -14.3228, 0.72", "41.1669, 76.6582, -14.1067, 0.72", "42.6768, 78.373, -13.4691, 1.44", "43.3183, 79.0896, -13.1591, 0.96", "43.5182, 79.3013, -13.0512, 0.96", "44.4255, 80.2064, -12.545, 1.44", "44.9251, 80.6702, -12.3456, 0.72", "45.1932, 80.8928, -12.325, 0.72", "46.222, 81.6377, -12.6412, 1.56", "47.3405, 82.3382, -13.1246, 0.84", "47.8453, 82.6016, -13.3465, 0.84", "49.5348, 83.3191, -14.1258, 1.32", "51.3117, 83.9739, -14.9658, 0.72", "52.3562, 84.3021, -15.4465, 0.72", "52.7501, 84.3976, -15.6168, 0.72", "54.1674, 84.7019, -16.3491, 1.2", "54.68, 84.7991, -16.6264, 1.2", "55.7562, 84.9947, -17.1832, 0.48", "56.0757, 85.0602, -17.3575, 0.48", "56.8802, 85.2416, -17.9019, 0.48", "59.1529, 85.8638, -19.6532, 0.96", "60.2947, 86.2848, -20.6349, 0.48", "60.6475, 86.4307, -20.8993, 0.48", "61.1015, 86.6286, -21.1754, 0.48", "61.8639, 86.9724, -21.5317, 0.48", "62.5152, 87.2632, -21.7162, 0.48", "63.4336, 87.6473, -21.7867, 1.08", "64.7467, 88.2436, -21.8232, 0.6", "65.7737, 88.6864, -21.8503, 0.6", "66.2211, 88.8657, -21.8651, 0.24", "67.0445, 89.1707, -21.957, 0.84", "68.0389, 89.5237, -22.1617, 0.36", "68.3959, 89.6545, -22.301, 0.36", "69.1793, 89.9656, -22.7184, 0.84", "69.5399, 90.1068, -22.9407, 0.84", "70.6658, 90.5259, -23.7374, 0.36", "71.1652, 90.7287, -24.1847, 0.36", "71.9924, 91.0946, -25.1423, 1.32" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_41", "dend_40", "dend_35", "dend_28", "dend_27", "dend_24", "dend_21", "dend_14", "dend_13", "dend_0", "dend_43", "dend_42", "dend_39", "dend_36", "dend_32", "dend_29", "dend_26", "dend_25", "dend_23", "dend_22", "dend_16", "dend_15", "dend_10", "dend_1", "dend_38", "dend_37", "dend_34", "dend_33", "dend_31", "dend_30", "dend_20", "dend_17", "dend_12", "dend_11", "dend_7", "dend_2", "dend_19", "dend_18", "dend_9", "dend_8", "dend_6", "dend_3", "dend_5", "dend_4" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_41", "dend_40", "dend_35", "dend_28", "dend_27", "dend_24", "dend_21", "dend_14", "dend_13", "dend_0", "dend_43", "dend_42", "dend_39", "dend_36", "dend_32", "dend_29", "dend_26", "dend_25", "dend_23", "dend_22", "dend_16", "dend_15", "dend_10", "dend_1", "dend_38", "dend_37", "dend_34", "dend_33", "dend_31", "dend_30", "dend_20", "dend_17", "dend_12", "dend_11", "dend_7", "dend_2", "dend_19", "dend_18", "dend_9", "dend_8", "dend_6", "dend_3", "dend_5", "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_0", "dend_0", "axon_0", "axon_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "axon_1", "axon_1", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L23_NBC_01d2e3caa6_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_14, id: dend_14, parent: soma_0
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_20, id: dend_20, parent: dend_16
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_41, dend_40, dend_35, dend_28, dend_27, dend_24, dend_21, dend_14, dend_13, dend_0, dend_43, dend_42, dend_39, dend_36, dend_32, dend_29, dend_26, dend_25, dend_23, dend_22, dend_16, dend_15, dend_10, dend_1, dend_38, dend_37, dend_34, dend_33, dend_31, dend_30, dend_20, dend_17, dend_12, dend_11, dend_7, dend_2, dend_19, dend_18, dend_9, dend_8, dend_6, dend_3, dend_5, dend_4]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_41, dend_40, dend_35, dend_28, dend_27, dend_24, dend_21, dend_14, dend_13, dend_0, dend_43, dend_42, dend_39, dend_36, dend_32, dend_29, dend_26, dend_25, dend_23, dend_22, dend_16, dend_15, dend_10, dend_1, dend_38, dend_37, dend_34, dend_33, dend_31, dend_30, dend_20, dend_17, dend_12, dend_11, dend_7, dend_2, dend_19, dend_18, dend_9, dend_8, dend_6, dend_3, dend_5, dend_4]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_42
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, axon_0, axon_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, axon_1, axon_1, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_41(0), soma_0(0.4999996472297577)
    connect dend_40(0), soma_0(0.4999996472297577)
    connect dend_35(0), soma_0(0.4999996472297577)
    connect dend_28(0), soma_0(0.4999996472297577)
    connect dend_27(0), soma_0(0.4999996472297577)
    connect dend_24(0), soma_0(0.4999996472297577)
    connect dend_21(0), soma_0(0.4999996472297577)
    connect dend_14(0), soma_0(0.4999996472297577)
    connect dend_13(0), soma_0(0.4999996472297577)
    connect dend_0(0), soma_0(0.4999996472297577)
    connect axon_0(0), soma_0(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_20(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 5.92192, -11.2965, 0.0, 4.1252 ) }
    soma_0 { pt3dadd( 5.48387, -10.1577, 0.0, 7.56306 ) }
    soma_0 { pt3dadd( 5.04582, -9.01896, 0.0, 9.52273 ) }
    soma_0 { pt3dadd( 4.60777, -7.88019, 0.0, 11.3302 ) }
    soma_0 { pt3dadd( 4.16972, -6.74142, 0.0, 12.5397 ) }
    soma_0 { pt3dadd( 3.73167, -5.60265, 0.0, 13.327 ) }
    soma_0 { pt3dadd( 3.29362, -4.46388, 0.0, 13.9262 ) }
    soma_0 { pt3dadd( 2.85557, -3.32511, 0.0, 14.1876 ) }
    soma_0 { pt3dadd( 2.41752, -2.18634, 0.0, 14.3783 ) }
    soma_0 { pt3dadd( 1.97947, -1.04758, 0.0, 14.56 ) }
    soma_0 { pt3dadd( 1.54142, 0.0911927, 0.0, 14.6653 ) }
    soma_0 { pt3dadd( 1.10336, 1.22996, 0.0, 14.6797 ) }
    soma_0 { pt3dadd( 0.665314, 2.36873, 0.0, 14.608 ) }
    soma_0 { pt3dadd( 0.227263, 3.5075, 0.0, 14.3574 ) }
    soma_0 { pt3dadd( -0.210788, 4.64627, 0.0, 14.014 ) }
    soma_0 { pt3dadd( -0.648838, 5.78504, 0.0, 13.4956 ) }
    soma_0 { pt3dadd( -1.08689, 6.92381, 0.0, 12.6886 ) }
    soma_0 { pt3dadd( -1.52494, 8.06257, 0.0, 11.823 ) }
    soma_0 { pt3dadd( -1.96299, 9.20134, 0.0, 10.4799 ) }
    soma_0 { pt3dadd( -2.40104, 10.3401, 0.0, 7.82679 ) }
    soma_0 { pt3dadd( -2.83909, 11.4789, 0.0, 4.54061 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 21/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -5.54737, 3.90452, -0.14, 1.44 ) }
    dend_41 { pt3dadd( -7.1587, 4.33231, -1.38288, 1.44 ) }
    dend_41 { pt3dadd( -8.41804, 4.62279, -2.26263, 1.08 ) }
    dend_41 { pt3dadd( -9.36938, 4.84223, -2.92721, 0.84 ) }
    dend_41 { pt3dadd( -10.9173, 5.19927, -4.00855, 1.32 ) }
    dend_41 { pt3dadd( -11.6395, 5.36586, -4.51306, 1.32 ) }
    dend_41 { pt3dadd( -12.497, 5.56365, -5.1121, 1.32 ) }
    dend_41 { pt3dadd( -12.7211, 5.59437, -5.22754, 1.56 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 29/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -6.30737, 1.27302, -8.74, 1.2 ) }
    dend_40 { pt3dadd( -7.59688, 0.95992, -8.3369, 1.2 ) }
    dend_40 { pt3dadd( -10.1136, 0.214123, -7.44564, 0.84 ) }
    dend_40 { pt3dadd( -11.5864, -0.295818, -6.83382, 0.6 ) }
    dend_40 { pt3dadd( -14.2879, -1.2541, -5.90315, 1.08 ) }
    dend_40 { pt3dadd( -15.6427, -1.73392, -5.51357, 1.08 ) }
    dend_40 { pt3dadd( -16.5022, -2.02996, -5.3059, 0.72 ) }
    dend_40 { pt3dadd( -17.8258, -2.51667, -5.03999, 1.32 ) }
    dend_40 { pt3dadd( -19.2687, -3.10807, -4.89889, 1.68 ) }
    dend_40 { pt3dadd( -22.0045, -4.22983, -4.88928, 0.6 ) }
    dend_40 { pt3dadd( -23.0001, -4.599, -4.96099, 0.6 ) }
    dend_40 { pt3dadd( -23.9406, -4.9134, -5.01358, 1.32 ) }
    dend_40 { pt3dadd( -25.24, -5.36264, -5.04876, 1.32 ) }
    dend_40 { pt3dadd( -27.2661, -6.09953, -5.00744, 0.84 ) }
    dend_40 { pt3dadd( -29.1951, -6.84263, -4.81689, 0.84 ) }
    dend_40 { pt3dadd( -30.6314, -7.47852, -4.45077, 0.84 ) }
    dend_40 { pt3dadd( -31.7346, -8.03178, -4.08489, 1.2 ) }
    dend_40 { pt3dadd( -33.0979, -8.78919, -3.56129, 0.48 ) }
    dend_40 { pt3dadd( -34.3725, -9.55592, -3.02208, 1.08 ) }
    dend_40 { pt3dadd( -35.9872, -10.6074, -2.32704, 1.08 ) }
    dend_40 { pt3dadd( -38.1213, -12.1321, -1.51277, 0.72 ) }
    dend_40 { pt3dadd( -39.1245, -12.9124, -1.19319, 0.72 ) }
    dend_40 { pt3dadd( -40.0789, -13.6993, -0.964838, 0.72 ) }
    dend_40 { pt3dadd( -40.8598, -14.3526, -0.83933, 0.72 ) }
    dend_40 { pt3dadd( -41.9885, -15.3243, -0.776438, 1.44 ) }
    dend_40 { pt3dadd( -42.9177, -16.1041, -0.797283, 1.44 ) }
    dend_40 { pt3dadd( -44.1628, -16.974, -0.994649, 0.72 ) }
    dend_40 { pt3dadd( -45.3749, -17.5705, -1.41142, 0.72 ) }
    dend_40 { pt3dadd( -46.1262, -17.8395, -1.7608, 1.2 ) }
    dend_40 { pt3dadd( -46.7729, -18.0279, -2.12013, 0.6 ) }
    dend_40 { pt3dadd( -47.9035, -18.278, -2.81348, 0.96 ) }
    dend_40 { pt3dadd( -50.1927, -18.6056, -4.3454, 0.48 ) }
    dend_40 { pt3dadd( -53.6375, -18.8481, -6.94331, 1.08 ) }
    dend_40 { pt3dadd( -54.1233, -18.8542, -7.35495, 1.08 ) }
    dend_40 { pt3dadd( -55.2144, -18.8376, -8.39443, 1.08 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 64/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 0.882635, -8.76848, 0.15, 1.44 ) }
    dend_35 { pt3dadd( -0.297741, -9.69477, -4.81043, 1.44 ) }
    dend_35 { pt3dadd( -1.01885, -10.2607, -7.84082, 1.44 ) }
    dend_35 { pt3dadd( -1.27286, -10.46, -8.90827, 1.68 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 68/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 4.62263, -9.49998, 2.28, 1.92 ) }
    dend_28 { pt3dadd( 4.50329, -10.364, 2.44047, 1.92 ) }
    dend_28 { pt3dadd( 4.19448, -12.5997, 2.85572, 1.68 ) }
    dend_28 { pt3dadd( 4.02061, -13.8585, 3.0895, 1.68 ) }
    dend_28 { pt3dadd( 3.9043, -14.7004, 3.24588, 1.44 ) }
    dend_28 { pt3dadd( 3.82049, -15.3072, 3.35859, 1.44 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 74/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 6.29263, -9.23398, -0.07, 1.92 ) }
    dend_27 { pt3dadd( 7.41257, -10.8535, -1.30366, 1.92 ) }
    dend_27 { pt3dadd( 8.17337, -11.9433, -2.11844, 1.32 ) }
    dend_27 { pt3dadd( 9.25321, -13.5854, -3.06181, 0.96 ) }
    dend_27 { pt3dadd( 10.1486, -14.9877, -3.68963, 1.44 ) }
    dend_27 { pt3dadd( 10.7531, -15.9675, -4.04595, 1.44 ) }
    dend_27 { pt3dadd( 11.474, -17.2099, -4.36735, 0.96 ) }
    dend_27 { pt3dadd( 12.1746, -18.5222, -4.47959, 0.96 ) }
    dend_27 { pt3dadd( 13.2685, -20.8407, -4.43091, 1.56 ) }
    dend_27 { pt3dadd( 13.9271, -22.3695, -4.30103, 1.56 ) }
    dend_27 { pt3dadd( 14.4501, -23.5953, -4.16411, 1.56 ) }
    dend_27 { pt3dadd( 15.6347, -26.3548, -3.80722, 0.84 ) }
    dend_27 { pt3dadd( 16.3512, -28.0618, -3.56505, 0.84 ) }
    dend_27 { pt3dadd( 17.3778, -30.5516, -3.23512, 0.6 ) }
    dend_27 { pt3dadd( 18.0994, -32.198, -3.08387, 1.2 ) }
    dend_27 { pt3dadd( 18.6221, -33.3247, -2.99369, 1.2 ) }
    dend_27 { pt3dadd( 19.115, -34.2928, -2.93563, 0.84 ) }
    dend_27 { pt3dadd( 19.6405, -35.2314, -2.91706, 0.6 ) }
    dend_27 { pt3dadd( 20.3177, -36.3649, -2.94989, 1.08 ) }
    dend_27 { pt3dadd( 21.153, -37.6711, -3.03239, 1.68 ) }
    dend_27 { pt3dadd( 21.7625, -38.64, -3.11316, 2.04 ) }
    dend_27 { pt3dadd( 22.6363, -40.0391, -3.24587, 1.2 ) }
    dend_27 { pt3dadd( 23.3423, -41.1619, -3.36092, 1.2 ) }
    dend_27 { pt3dadd( 23.7662, -41.8522, -3.43691, 0.84 ) }
    dend_27 { pt3dadd( 24.5533, -43.2744, -3.60092, 1.32 ) }
    dend_27 { pt3dadd( 24.969, -44.1388, -3.70893, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_27 { pt3dadd( 25.2009, -44.6823, -3.77631, 1.32 ) }
    dend_27 { pt3dadd( 25.3693, -45.1229, -3.82982, 0.72 ) }
    dend_27 { pt3dadd( 25.6484, -46.0101, -3.92567, 0.72 ) }
    dend_27 { pt3dadd( 25.9348, -47.2904, -4.04676, 0.72 ) }
    dend_27 { pt3dadd( 26.0415, -48.1149, -4.13963, 1.32 ) }
    dend_27 { pt3dadd( 26.1217, -49.0163, -4.25123, 1.32 ) }
    dend_27 { pt3dadd( 26.1505, -49.4086, -4.30064, 1.32 ) }
    dend_27 { pt3dadd( 26.2425, -50.6963, -4.46251, 0.72 ) }
    dend_27 { pt3dadd( 26.3676, -51.9593, -4.64788, 0.72 ) }
    dend_27 { pt3dadd( 26.7374, -54.1616, -4.98434, 1.32 ) }
    dend_27 { pt3dadd( 26.9103, -54.9212, -5.10119, 1.32 ) }
    dend_27 { pt3dadd( 27.1519, -55.7985, -5.23512, 1.32 ) }
    dend_27 { pt3dadd( 27.3863, -56.5402, -5.34683, 0.84 ) }
    dend_27 { pt3dadd( 28.1607, -58.5911, -5.67167, 0.48 ) }
    dend_27 { pt3dadd( 28.961, -60.3433, -6.07013, 0.48 ) }
    dend_27 { pt3dadd( 29.3205, -61.0417, -6.26943, 1.56 ) }
    dend_27 { pt3dadd( 29.9048, -62.1693, -6.63533, 1.56 ) }
    dend_27 { pt3dadd( 30.1501, -62.6304, -6.79888, 2.04 ) }
    dend_27 { pt3dadd( 30.8532, -63.9117, -7.30995, 1.44 ) }
    dend_27 { pt3dadd( 31.9772, -65.8068, -8.17863, 0.72 ) }
    dend_27 { pt3dadd( 32.8037, -67.1786, -8.87529, 1.32 ) }
    dend_27 { pt3dadd( 33.3645, -68.0534, -9.29511, 1.56 ) }
    dend_27 { pt3dadd( 33.7179, -68.5741, -9.52731, 1.56 ) }
    dend_27 { pt3dadd( 34.4743, -69.6526, -9.92889, 1.08 ) }
    dend_27 { pt3dadd( 35.2224, -70.7056, -10.1953, 0.72 ) }
    dend_27 { pt3dadd( 35.9143, -71.6914, -10.3166, 0.72 ) }
    dend_27 { pt3dadd( 36.9153, -73.0667, -10.3961, 1.8 ) }
    dend_27 { pt3dadd( 37.1751, -73.4083, -10.3833, 1.8 ) }
    dend_27 { pt3dadd( 37.7975, -74.2297, -10.3575, 1.8 ) }
    dend_27 { pt3dadd( 38.7136, -75.4941, -10.3631, 1.2 ) }
    dend_27 { pt3dadd( 38.9568, -75.8465, -10.3888, 0.84 ) }
    dend_27 { pt3dadd( 39.4011, -76.5085, -10.502, 0.84 ) }
    dend_27 { pt3dadd( 40.1747, -77.7228, -10.8233, 0.84 ) }
    dend_27 { pt3dadd( 41.1354, -79.3593, -11.3166, 0.84 ) }
    dend_27 { pt3dadd( 41.8917, -80.753, -11.7896, 1.32 ) }
    dend_27 { pt3dadd( 42.2015, -81.3301, -11.9788, 1.32 ) }
    dend_27 { pt3dadd( 42.8529, -82.5789, -12.3396, 1.32 ) }
    dend_27 { pt3dadd( 43.0338, -82.9445, -12.4289, 1.68 ) }
    dend_27 { pt3dadd( 43.4896, -83.9104, -12.5927, 0.96 ) }
    dend_27 { pt3dadd( 43.7303, -84.3922, -12.6422, 0.96 ) }
    dend_27 { pt3dadd( 44.8322, -86.4992, -12.8281, 1.56 ) }
    dend_27 { pt3dadd( 45.4907, -87.7802, -13.0002, 0.72 ) }
    dend_27 { pt3dadd( 46.0105, -88.8426, -13.2015, 0.72 ) }
    dend_27 { pt3dadd( 46.8015, -90.5144, -13.5779, 1.32 ) }
    dend_27 { pt3dadd( 47.3922, -91.7552, -13.8996, 0.72 ) }
    dend_27 { pt3dadd( 48.0439, -93.1442, -14.2902, 1.92 ) }
    dend_27 { pt3dadd( 48.6953, -94.6212, -14.7858, 1.92 ) }
    dend_27 { pt3dadd( 49.2073, -95.7468, -15.1911, 0.84 ) }
    dend_27 { pt3dadd( 49.4848, -96.3207, -15.3996, 0.84 ) }
    dend_27 { pt3dadd( 50.1613, -97.5853, -15.8373, 1.56 ) }
    dend_27 { pt3dadd( 50.9291, -98.8301, -16.2008, 1.56 ) }
    dend_27 { pt3dadd( 51.8681, -100.149, -16.6015, 0.84 ) }
    dend_27 { pt3dadd( 52.4042, -100.856, -16.7999, 0.84 ) }
    dend_27 { pt3dadd( 53.1505, -101.787, -17.1215, 0.72 ) }
    dend_27 { pt3dadd( 53.7898, -102.609, -17.3515, 1.32 ) }
    dend_27 { pt3dadd( 54.6777, -103.719, -17.6386, 1.8 ) }
    dend_27 { pt3dadd( 56.1588, -105.466, -18.0311, 0.84 ) }
    dend_27 { pt3dadd( 57.3944, -106.876, -18.2917, 0.6 ) }
    dend_27 { pt3dadd( 58.882, -108.565, -18.5833, 1.68 ) }
    dend_27 { pt3dadd( 60.9341, -110.875, -18.9376, 1.68 ) }
    dend_27 { pt3dadd( 62.8235, -112.921, -19.2671, 0.84 ) }
    dend_27 { pt3dadd( 63.8442, -113.944, -19.4097, 0.72 ) }
    dend_27 { pt3dadd( 64.1635, -114.227, -19.4343, 1.08 ) }
    dend_27 { pt3dadd( 64.7464, -114.717, -19.4836, 0.48 ) }
    dend_27 { pt3dadd( 65.3443, -115.218, -19.5429, 0.48 ) }
    dend_27 { pt3dadd( 66.6797, -116.352, -19.8284, 1.2 ) }
    dend_27 { pt3dadd( 67.5727, -117.249, -19.9945, 0.6 ) }
    dend_27 { pt3dadd( 68.4417, -118.26, -20.179, 0.6 ) }
    dend_27 { pt3dadd( 69.3639, -119.465, -20.3609, 1.92 ) }
    dend_27 { pt3dadd( 69.6883, -119.955, -20.4227, 2.16 ) }
    dend_27 { pt3dadd( 70.5372, -121.462, -20.5764, 1.08 ) }
    dend_27 { pt3dadd( 71.3896, -123.261, -20.7187, 0.84 ) }
    dend_27 { pt3dadd( 71.7754, -124.231, -20.7875, 0.84 ) }
    dend_27 { pt3dadd( 72.5962, -126.781, -20.9585, 0.84 ) }
    dend_27 { pt3dadd( 73.0314, -128.425, -21.077, 2.28 ) }
    dend_27 { pt3dadd( 73.49, -130.477, -21.2285, 0.84 ) }
    dend_27 { pt3dadd( 73.7273, -131.829, -21.3475, 0.48 ) }
    dend_27 { pt3dadd( 74.085, -134.395, -21.6259, 1.44 ) }
    dend_27 { pt3dadd( 74.2419, -136.039, -21.8429, 1.44 ) }
    dend_27 { pt3dadd( 74.3142, -137.681, -22.1041, 0.84 ) }
    dend_27 { pt3dadd( 74.3478, -138.962, -22.3655, 0.84 ) }
    dend_27 { pt3dadd( 74.3543, -140.61, -22.7786, 1.2 ) }
    dend_27 { pt3dadd( 74.3324, -141.277, -22.9764, 1.2 ) }
    dend_27 { pt3dadd( 74.2735, -142.225, -23.3138, 0.6 ) }
    dend_27 { pt3dadd( 74.2207, -142.844, -23.5531, 0.6 ) }
    dend_27 { pt3dadd( 74.0165, -144.54, -24.1712, 0.6 ) }
    dend_27 { pt3dadd( 73.7268, -146.77, -24.9258, 1.56 ) }
    dend_27 { pt3dadd( 73.5224, -148.453, -25.5289, 0.6 ) }
    dend_27 { pt3dadd( 73.3796, -149.548, -25.9612, 0.6 ) }
    dend_27 { pt3dadd( 73.0667, -151.643, -26.8729, 1.32 ) }
    dend_27 { pt3dadd( 72.809, -152.971, -27.4822, 0.72 ) }
    dend_27 { pt3dadd( 72.4969, -154.25, -28.0816, 0.72 ) }
    dend_27 { pt3dadd( 71.7862, -156.786, -29.3875, 1.68 ) }
    dend_27 { pt3dadd( 71.0035, -159.349, -30.7494, 0.84 ) }
    dend_27 { pt3dadd( 70.7014, -160.325, -31.3269, 1.32 ) }
    dend_27 { pt3dadd( 70.2046, -161.973, -32.4109, 0.84 ) }
    dend_27 { pt3dadd( 69.8098, -163.312, -33.3831, 1.44 ) }
    dend_27 { pt3dadd( 69.4333, -164.84, -34.6019, 0.84 ) }
    dend_27 { pt3dadd( 69.2785, -165.81, -35.3942, 1.92 ) }
    dend_27 { pt3dadd( 69.1307, -168.018, -37.256, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_27 { pt3dadd( 69.1286, -168.717, -37.8315, 0.72 ) }
    dend_27 { pt3dadd( 69.2292, -170.439, -39.219, 2.04 ) }
    dend_27 { pt3dadd( 69.4627, -173.039, -41.1648, 0.84 ) }
    dend_27 { pt3dadd( 69.5315, -173.835, -41.6927, 0.84 ) }
    dend_27 { pt3dadd( 69.5905, -175.086, -42.4078, 1.44 ) }
    dend_27 { pt3dadd( 69.5578, -176.435, -43.0183, 0.72 ) }
    dend_27 { pt3dadd( 69.4646, -177.57, -43.4613, 1.44 ) }
    dend_27 { pt3dadd( 69.3183, -178.805, -43.8659, 0.6 ) }
    dend_27 { pt3dadd( 68.9893, -180.712, -44.4233, 1.8 ) }
    dend_27 { pt3dadd( 68.6511, -182.695, -45.0162, 0.96 ) }
    dend_27 { pt3dadd( 68.46, -184.024, -45.4298, 1.32 ) }
    dend_27 { pt3dadd( 68.1009, -187.403, -46.545, 0.72 ) }
    dend_27 { pt3dadd( 68.0016, -188.676, -46.9062, 0.72 ) }
    dend_27 { pt3dadd( 67.8922, -190.256, -47.3427, 1.2 ) }
    dend_27 { pt3dadd( 67.8366, -191.587, -47.6811, 0.96 ) }
    dend_27 { pt3dadd( 67.8543, -193.494, -48.1518, 1.92 ) }
    dend_27 { pt3dadd( 68.0339, -196.347, -48.8157, 0.6 ) }
    dend_27 { pt3dadd( 68.3914, -199.093, -49.3564, 1.92 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 18/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 8.61263, -6.60248, 0.5, 2.52 ) }
    dend_24 { pt3dadd( 9.48504, -6.76423, 0.482887, 2.28 ) }
    dend_24 { pt3dadd( 10.7686, -7.00529, 0.460647, 1.8 ) }
    dend_24 { pt3dadd( 11.95, -7.24198, 0.439724, 1.44 ) }
    dend_24 { pt3dadd( 13.434, -7.55401, 0.41353, 1.08 ) }
    dend_24 { pt3dadd( 15.3024, -7.97218, 0.381559, 1.08 ) }
    dend_24 { pt3dadd( 16.1177, -8.15465, 0.367609, 1.08 ) }
    dend_24 { pt3dadd( 16.8531, -8.31329, 0.35387, 1.68 ) }
    dend_24 { pt3dadd( 17.72, -8.51035, 0.335842, 2.28 ) }
    dend_24 { pt3dadd( 18.1244, -8.61183, 0.32683, 2.28 ) }
    dend_24 { pt3dadd( 18.9669, -8.86769, 0.309212, 2.28 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 29/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 8.93263, -5.85198, 0.64, 0.84 ) }
    dend_21 { pt3dadd( 9.6689, -5.87911, -0.239112, 0.84 ) }
    dend_21 { pt3dadd( 12.397, -5.97964, -3.49655, 0.84 ) }
    dend_21 { pt3dadd( 14.8207, -6.06895, -6.39048, 0.84 ) }
    dend_21 { pt3dadd( 16.0546, -6.11442, -7.8637, 1.44 ) }
    dend_21 { pt3dadd( 17.103, -6.15305, -9.11554, 1.32 ) }
    // Section: dend_14, id: dend_14, parent: soma_0 (entry count 35/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 8.39263, -4.11348, 2.06, 1.92 ) }
    dend_14 { pt3dadd( 8.61375, -3.99432, 2.59121, 1.92 ) }
    dend_14 { pt3dadd( 8.95875, -3.80839, 3.42, 1.92 ) }
    dend_14 { pt3dadd( 9.94243, -3.27828, 5.78309, 1.8 ) }
    dend_14 { pt3dadd( 11.3821, -2.50245, 9.24158, 1.44 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 40/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 4.42264, 5.04452, 0.86, 1.56 ) }
    dend_13 { pt3dadd( 4.64433, 5.56122, 1.81145, 1.56 ) }
    dend_13 { pt3dadd( 5.57214, 7.05023, 4.88856, 1.56 ) }
    dend_13 { pt3dadd( 6.24805, 7.78734, 6.70844, 1.56 ) }
    dend_13 { pt3dadd( 6.78605, 8.16642, 7.87047, 1.56 ) }
    dend_13 { pt3dadd( 7.82446, 8.72444, 9.71944, 1.08 ) }
    dend_13 { pt3dadd( 8.06254, 8.83755, 10.0904, 1.08 ) }
    dend_13 { pt3dadd( 8.63827, 9.00033, 10.767, 1.56 ) }
    dend_13 { pt3dadd( 9.52575, 9.14244, 11.456, 1.56 ) }
    dend_13 { pt3dadd( 10.6215, 9.36333, 12.1795, 0.96 ) }
    dend_13 { pt3dadd( 11.5714, 9.7531, 12.7709, 0.96 ) }
    dend_13 { pt3dadd( 12.0749, 10.1517, 13.077, 0.96 ) }
    dend_13 { pt3dadd( 12.9247, 11.1514, 13.6498, 1.32 ) }
    dend_13 { pt3dadd( 13.0974, 11.4321, 13.776, 1.32 ) }
    dend_13 { pt3dadd( 13.5592, 12.4772, 14.2759, 0.84 ) }
    dend_13 { pt3dadd( 13.9109, 13.5408, 14.814, 1.2 ) }
    dend_13 { pt3dadd( 14.3354, 14.9485, 15.499, 0.84 ) }
    dend_13 { pt3dadd( 14.5964, 15.7971, 15.8905, 1.2 ) }
    dend_13 { pt3dadd( 14.7935, 16.4007, 16.1454, 1.2 ) }
    dend_13 { pt3dadd( 15.7012, 18.8821, 17.0928, 0.96 ) }
    dend_13 { pt3dadd( 15.8663, 19.346, 17.2882, 0.96 ) }
    dend_13 { pt3dadd( 16.3849, 20.9427, 18.0355, 1.44 ) }
    dend_13 { pt3dadd( 16.5301, 21.4818, 18.2843, 0.84 ) }
    dend_13 { pt3dadd( 16.669, 22.17, 18.6047, 0.84 ) }
    dend_13 { pt3dadd( 16.8116, 23.168, 19.0203, 0.84 ) }
    dend_13 { pt3dadd( 17.0016, 25.2264, 19.7195, 1.32 ) }
    dend_13 { pt3dadd( 17.0108, 25.8522, 19.9879, 1.32 ) }
    dend_13 { pt3dadd( 16.9249, 26.9164, 20.5564, 0.72 ) }
    dend_13 { pt3dadd( 16.8488, 27.4475, 20.8465, 0.72 ) }
    dend_13 { pt3dadd( 16.7312, 28.0947, 21.2135, 0.72 ) }
    dend_13 { pt3dadd( 16.6924, 28.4942, 21.4221, 0.72 ) }
    dend_13 { pt3dadd( 18.4584, 35.3885, 27.7647, 0.72 ) }
    dend_13 { pt3dadd( 19.9715, 42.1, 34.3846, 0.72 ) }
    dend_13 { pt3dadd( 21.2738, 49.5239, 40.1505, 0.72 ) }
    dend_13 { pt3dadd( 20.6715, 57.098, 45.8163, 0.72 ) }
    dend_13 { pt3dadd( 20.9513, 64.0263, 52.3571, 0.72 ) }
    dend_13 { pt3dadd( 21.3102, 71.264, 58.5107, 0.72 ) }
    dend_13 { pt3dadd( 22.3934, 77.8586, 65.3425, 0.72 ) }
    dend_13 { pt3dadd( 23.431, 84.8351, 71.7477, 0.72 ) }
    dend_13 { pt3dadd( 24.6609, 91.8544, 78.066, 0.72 ) }
    dend_13 { pt3dadd( 27.2116, 99.508, 83.0178, 0.72 ) }
    dend_13 { pt3dadd( 28.2111, 108.078, 86.6893, 0.72 ) }
    dend_13 { pt3dadd( 30.2176, 117.015, 88.4472, 0.72 ) }
    dend_13 { pt3dadd( 31.5327, 125.91, 90.9659, 0.72 ) }
    dend_13 { pt3dadd( 31.5538, 134.693, 94.1809, 0.72 ) }
    dend_13 { pt3dadd( 32.0484, 142.849, 98.8739, 0.72 ) }
    dend_13 { pt3dadd( 31.1662, 150.538, 104.326, 0.72 ) }
    dend_13 { pt3dadd( 31.9741, 157.883, 110.293, 0.72 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 88/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.36263, 9.81354, -0.71, 2.4 ) }
    dend_0 { pt3dadd( 1.69942, 11.2952, -0.710239, 2.4 ) }
    dend_0 { pt3dadd( 2.04361, 12.8095, -0.710484, 2.4 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 91/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -2.83909, 11.4789, 0.0, 0.96 ) }
    axon_0 { pt3dadd( -8.22444, 25.4788, 0.0, 0.96 ) }
    axon_0 { pt3dadd( -13.6098, 39.4788, 0.0, 0.96 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 94/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -12.7211, 5.59437, -5.22754, 0.6 ) }
    dend_43 { pt3dadd( -14.8008, 6.71413, -6.38809, 0.6 ) }
    dend_43 { pt3dadd( -16.1913, 7.45656, -7.2986, 1.08 ) }
    dend_43 { pt3dadd( -18.2124, 8.65955, -8.52335, 1.44 ) }
    dend_43 { pt3dadd( -22.1185, 10.9087, -11.0722, 0.72 ) }
    dend_43 { pt3dadd( -23.686, 11.748, -12.0913, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_43 { pt3dadd( -25.1173, 12.4979, -13.0122, 0.72 ) }
    dend_43 { pt3dadd( -26.3434, 13.0847, -13.8723, 1.2 ) }
    dend_43 { pt3dadd( -28.1727, 13.9402, -15.1343, 0.84 ) }
    dend_43 { pt3dadd( -30.7451, 15.1879, -16.748, 0.6 ) }
    dend_43 { pt3dadd( -32.8036, 16.3257, -17.75, 1.56 ) }
    dend_43 { pt3dadd( -33.3449, 16.633, -18.006, 1.56 ) }
    dend_43 { pt3dadd( -35.0525, 17.6077, -18.74, 0.6 ) }
    dend_43 { pt3dadd( -36.3747, 18.3548, -19.3139, 0.96 ) }
    dend_43 { pt3dadd( -37.9415, 19.2139, -20.0779, 0.48 ) }
    dend_43 { pt3dadd( -40.0171, 20.4013, -21.06, 1.68 ) }
    dend_43 { pt3dadd( -40.998, 20.9308, -21.5557, 1.68 ) }
    dend_43 { pt3dadd( -42.5118, 21.6644, -22.3125, 0.72 ) }
    dend_43 { pt3dadd( -44.2496, 22.44, -23.175, 0.72 ) }
    dend_43 { pt3dadd( -45.6148, 22.9983, -23.8647, 0.72 ) }
    dend_43 { pt3dadd( -46.3626, 23.2995, -24.2393, 0.72 ) }
    dend_43 { pt3dadd( -48.0183, 23.9623, -24.9265, 1.92 ) }
    dend_43 { pt3dadd( -49.6483, 24.6575, -25.5336, 1.92 ) }
    dend_43 { pt3dadd( -51.5378, 25.5, -26.1265, 0.84 ) }
    dend_43 { pt3dadd( -52.5346, 26.005, -26.3708, 0.84 ) }
    dend_43 { pt3dadd( -53.7347, 26.6902, -26.6067, 1.32 ) }
    dend_43 { pt3dadd( -55.44, 27.7255, -27.0414, 0.6 ) }
    dend_43 { pt3dadd( -56.9092, 28.695, -27.4713, 1.8 ) }
    dend_43 { pt3dadd( -59.6362, 30.6348, -28.2877, 1.08 ) }
    dend_43 { pt3dadd( -61.641, 32.1861, -28.7819, 1.56 ) }
    dend_43 { pt3dadd( -63.0855, 33.3299, -29.1371, 1.56 ) }
    dend_43 { pt3dadd( -65.9137, 35.669, -29.9387, 0.84 ) }
    dend_43 { pt3dadd( -67.1107, 36.7646, -30.3941, 0.84 ) }
    dend_43 { pt3dadd( -68.1146, 37.7716, -30.8894, 1.44 ) }
    dend_43 { pt3dadd( -69.919, 39.6904, -31.9906, 0.96 ) }
    dend_43 { pt3dadd( -72.3317, 42.1065, -33.6754, 1.56 ) }
    dend_43 { pt3dadd( -73.4512, 43.2191, -34.405, 1.56 ) }
    dend_43 { pt3dadd( -75.4423, 45.1975, -35.4092, 1.08 ) }
    dend_43 { pt3dadd( -77.3456, 47.0491, -36.2761, 0.6 ) }
    dend_43 { pt3dadd( -78.9746, 48.6235, -37.0, 1.56 ) }
    dend_43 { pt3dadd( -80.6497, 50.2532, -37.7253, 0.96 ) }
    dend_43 { pt3dadd( -82.7083, 52.3112, -38.3565, 1.44 ) }
    dend_43 { pt3dadd( -85.5465, 54.9802, -38.8866, 0.6 ) }
    dend_43 { pt3dadd( -86.8465, 56.1338, -38.9515, 0.6 ) }
    dend_43 { pt3dadd( -89.0247, 58.1859, -38.839, 1.32 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 39/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -12.7211, 5.59437, -5.22754, 0.72 ) }
    dend_42 { pt3dadd( -13.9833, 6.57132, -3.36833, 0.72 ) }
    dend_42 { pt3dadd( -15.0019, 7.40535, -1.61044, 0.48 ) }
    dend_42 { pt3dadd( -15.3917, 7.73811, -0.834597, 1.32 ) }
    dend_42 { pt3dadd( -15.7078, 8.01186, -0.151104, 1.32 ) }
    dend_42 { pt3dadd( -16.5242, 8.76151, 1.84524, 0.84 ) }
    dend_42 { pt3dadd( -16.9323, 9.11147, 2.85828, 0.84 ) }
    dend_42 { pt3dadd( -17.3252, 9.43734, 3.90416, 0.72 ) }
    dend_42 { pt3dadd( -18.053, 10.0461, 5.88536, 1.56 ) }
    dend_42 { pt3dadd( -18.6762, 10.5166, 7.4401, 1.08 ) }
    dend_42 { pt3dadd( -19.6509, 11.22, 9.60044, 0.84 ) }
    dend_42 { pt3dadd( -20.2962, 11.6568, 10.8682, 0.6 ) }
    dend_42 { pt3dadd( -21.1246, 12.2263, 12.3579, 1.08 ) }
    dend_42 { pt3dadd( -21.5177, 12.5144, 12.9805, 0.6 ) }
    dend_42 { pt3dadd( -21.9937, 12.8998, 13.6681, 0.6 ) }
    dend_42 { pt3dadd( -23.2809, 13.9759, 15.3927, 1.56 ) }
    dend_42 { pt3dadd( -24.6109, 15.143, 17.016, 0.84 ) }
    dend_42 { pt3dadd( -25.0326, 15.5676, 17.5478, 0.84 ) }
    dend_42 { pt3dadd( -25.6885, 16.2759, 18.4047, 0.72 ) }
    dend_42 { pt3dadd( -26.1006, 16.7467, 18.9459, 0.96 ) }
    dend_42 { pt3dadd( -30.238, 19.6386, 26.2968, 0.96 ) }
    dend_42 { pt3dadd( -34.7542, 22.2046, 33.5349, 0.96 ) }
    dend_42 { pt3dadd( -39.6623, 25.7191, 40.1271, 0.96 ) }
    dend_42 { pt3dadd( -44.512, 30.024, 46.299, 0.96 ) }
    dend_42 { pt3dadd( -50.3241, 35.1187, 50.8206, 0.96 ) }
    dend_42 { pt3dadd( -55.8789, 40.8236, 54.8964, 0.96 ) }
    dend_42 { pt3dadd( -61.1015, 47.1712, 58.3727, 0.96 ) }
    dend_42 { pt3dadd( -65.4297, 54.399, 61.1848, 0.96 ) }
    dend_42 { pt3dadd( -70.1203, 61.819, 62.0346, 0.96 ) }
    dend_42 { pt3dadd( -75.0535, 68.9699, 63.7757, 0.96 ) }
    dend_42 { pt3dadd( -82.0314, 74.2948, 65.3913, 0.96 ) }
    dend_42 { pt3dadd( -88.601, 80.2021, 66.4388, 0.96 ) }
    dend_42 { pt3dadd( -94.9094, 86.3856, 67.3831, 0.96 ) }
    dend_42 { pt3dadd( -100.95, 92.4861, 69.7888, 0.96 ) }
    dend_42 { pt3dadd( -107.162, 98.5067, 71.9418, 0.96 ) }
    dend_42 { pt3dadd( -112.911, 104.369, 75.4709, 0.96 ) }
    dend_42 { pt3dadd( -119.294, 110.394, 76.9531, 0.96 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 76/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -1.27286, -10.46, -8.90827, 0.72 ) }
    dend_39 { pt3dadd( -3.54828, -12.2689, 5.02087, 0.72 ) }
    dend_39 { pt3dadd( -3.99647, -12.5767, 6.9623, 0.72 ) }
    dend_39 { pt3dadd( -4.29747, -12.7566, 7.88582, 0.72 ) }
    dend_39 { pt3dadd( -5.02736, -13.1252, 9.17033, 1.56 ) }
    dend_39 { pt3dadd( -6.28775, -13.6644, 10.3154, 1.8 ) }
    dend_39 { pt3dadd( -7.56554, -14.1541, 10.9161, 1.8 ) }
    dend_39 { pt3dadd( -8.90952, -14.5825, 10.6268, 0.96 ) }
    dend_39 { pt3dadd( -9.99367, -14.9037, 10.2938, 0.96 ) }
    dend_39 { pt3dadd( -11.7647, -15.3872, 9.63828, 0.96 ) }
    dend_39 { pt3dadd( -12.744, -15.6284, 9.24639, 1.8 ) }
    dend_39 { pt3dadd( -13.6799, -15.8128, 8.85318, 1.8 ) }
    dend_39 { pt3dadd( -14.772, -16.0081, 8.36719, 1.2 ) }
    dend_39 { pt3dadd( -17.1679, -16.4115, 7.24795, 0.72 ) }
    dend_39 { pt3dadd( -18.7903, -16.6644, 6.46351, 1.56 ) }
    dend_39 { pt3dadd( -20.2327, -16.8708, 5.74589, 0.84 ) }
    dend_39 { pt3dadd( -21.539, -17.031, 5.10974, 1.2 ) }
    dend_39 { pt3dadd( -23.0778, -17.197, 4.40813, 0.72 ) }
    dend_39 { pt3dadd( -23.8218, -17.2622, 4.1062, 0.72 ) }
    dend_39 { pt3dadd( -25.1906, -17.3811, 3.62662, 1.08 ) }
    dend_39 { pt3dadd( -26.3675, -17.5009, 3.24533, 0.48 ) }
    dend_39 { pt3dadd( -28.1349, -17.7324, 2.71116, 1.44 ) }
    dend_39 { pt3dadd( -29.5419, -17.9708, 2.31692, 0.6 ) }
    dend_39 { pt3dadd( -31.5791, -18.3273, 1.70572, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_39 { pt3dadd( -33.8988, -18.7301, 0.962705, 0.48 ) }
    dend_39 { pt3dadd( -35.5999, -19.0272, 0.38333, 1.44 ) }
    dend_39 { pt3dadd( -37.268, -19.3078, -0.203221, 0.84 ) }
    dend_39 { pt3dadd( -39.0429, -19.5889, -0.850442, 1.08 ) }
    dend_39 { pt3dadd( -41.3656, -19.9222, -1.61047, 0.84 ) }
    dend_39 { pt3dadd( -42.7065, -20.0967, -2.08739, 1.56 ) }
    dend_39 { pt3dadd( -44.1503, -20.2176, -2.62913, 0.96 ) }
    dend_39 { pt3dadd( -44.5728, -20.2333, -2.79831, 0.96 ) }
    dend_39 { pt3dadd( -45.6793, -20.1805, -3.2408, 0.96 ) }
    dend_39 { pt3dadd( -49.0772, -19.7449, -4.30488, 0.72 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 10/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -1.27286, -10.46, -8.90827, 0.6 ) }
    dend_36 { pt3dadd( -0.62645, -11.4302, -8.69264, 0.6 ) }
    dend_36 { pt3dadd( -0.323443, -11.8784, -8.56554, 0.6 ) }
    dend_36 { pt3dadd( 0.450931, -13.0257, -8.23181, 1.56 ) }
    dend_36 { pt3dadd( 1.35136, -14.3397, -7.83104, 1.56 ) }
    dend_36 { pt3dadd( 1.89688, -15.1349, -7.5925, 0.84 ) }
    dend_36 { pt3dadd( 2.24941, -15.6489, -7.43835, 0.84 ) }
    dend_36 { pt3dadd( 2.73971, -16.3626, -7.15416, 1.32 ) }
    dend_36 { pt3dadd( 3.03444, -16.7845, -6.9571, 1.32 ) }
    dend_36 { pt3dadd( 3.54458, -17.4776, -6.58996, 0.84 ) }
    dend_36 { pt3dadd( 3.84012, -17.8932, -6.48215, 0.84 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 21/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 3.82049, -15.3072, 3.35859, 1.08 ) }
    dend_32 { pt3dadd( 1.91555, -16.5981, 3.66927, 1.08 ) }
    dend_32 { pt3dadd( 0.488088, -17.5654, 3.90208, 1.2 ) }
    dend_32 { pt3dadd( -1.29745, -18.7754, 4.1933, 0.84 ) }
    dend_32 { pt3dadd( -2.29068, -19.4485, 4.35529, 0.84 ) }
    dend_32 { pt3dadd( -4.33628, -20.8347, 4.68891, 1.44 ) }
    dend_32 { pt3dadd( -5.59914, -21.6905, 4.89488, 2.04 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 28/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 3.82049, -15.3072, 3.35859, 0.84 ) }
    dend_29 { pt3dadd( 3.44635, -17.6022, 4.43259, 0.84 ) }
    dend_29 { pt3dadd( 3.21459, -18.831, 5.06179, 0.84 ) }
    dend_29 { pt3dadd( 2.75635, -21.3925, 6.37081, 1.2 ) }
    dend_29 { pt3dadd( 2.51194, -23.0419, 7.17584, 1.68 ) }
    dend_29 { pt3dadd( 2.33683, -24.5404, 7.83713, 1.68 ) }
    dend_29 { pt3dadd( 1.95862, -27.1076, 8.92592, 0.96 ) }
    dend_29 { pt3dadd( 1.70246, -28.2914, 9.43188, 0.96 ) }
    dend_29 { pt3dadd( 1.29461, -30.1868, 10.1734, 2.16 ) }
    dend_29 { pt3dadd( 1.03254, -31.6416, 10.6577, 2.64 ) }
    dend_29 { pt3dadd( 0.723047, -33.8859, 11.3222, 1.08 ) }
    dend_29 { pt3dadd( 0.485759, -37.428, 12.2444, 1.08 ) }
    dend_29 { pt3dadd( 0.480255, -39.452, 12.7051, 1.08 ) }
    dend_29 { pt3dadd( 0.573596, -41.5769, 13.129, 1.68 ) }
    dend_29 { pt3dadd( 0.717505, -43.243, 13.4411, 1.32 ) }
    dend_29 { pt3dadd( 0.966695, -44.8864, 13.7447, 1.68 ) }
    dend_29 { pt3dadd( 1.53355, -47.1216, 14.1236, 1.08 ) }
    dend_29 { pt3dadd( 2.00159, -48.4277, 14.3041, 1.08 ) }
    dend_29 { pt3dadd( 2.5885, -50.0345, 14.5148, 1.08 ) }
    dend_29 { pt3dadd( 2.86283, -50.9722, 14.6397, 1.08 ) }
    dend_29 { pt3dadd( 3.37323, -53.1815, 14.9126, 1.56 ) }
    dend_29 { pt3dadd( 3.64432, -54.4206, 15.0527, 1.56 ) }
    dend_29 { pt3dadd( 3.99312, -55.9613, 15.1991, 0.72 ) }
    dend_29 { pt3dadd( 4.36681, -57.1245, 15.3351, 0.72 ) }
    dend_29 { pt3dadd( 5.23333, -59.223, 15.6041, 1.32 ) }
    dend_29 { pt3dadd( 5.76028, -60.3598, 15.7411, 1.32 ) }
    dend_29 { pt3dadd( 6.62935, -62.0798, 15.9235, 0.72 ) }
    dend_29 { pt3dadd( 7.38987, -63.431, 16.0667, 0.72 ) }
    dend_29 { pt3dadd( 9.0856, -66.1464, 16.3479, 1.68 ) }
    dend_29 { pt3dadd( 9.96177, -67.4542, 16.4854, 2.04 ) }
    dend_29 { pt3dadd( 11.5612, -69.9233, 16.7252, 0.72 ) }
    dend_29 { pt3dadd( 12.3543, -71.3463, 16.8404, 0.72 ) }
    dend_29 { pt3dadd( 12.976, -72.7935, 16.9235, 0.72 ) }
    dend_29 { pt3dadd( 13.2884, -73.7076, 16.9538, 0.72 ) }
    dend_29 { pt3dadd( 13.5866, -74.906, 17.0264, 1.08 ) }
    dend_29 { pt3dadd( 14.1089, -77.4399, 17.2971, 1.08 ) }
    dend_29 { pt3dadd( 14.2951, -78.5324, 17.451, 1.08 ) }
    dend_29 { pt3dadd( 14.566, -80.5875, 17.764, 1.44 ) }
    dend_29 { pt3dadd( 14.7481, -81.9577, 18.0011, 1.44 ) }
    dend_29 { pt3dadd( 15.132, -84.871, 18.5389, 0.72 ) }
    dend_29 { pt3dadd( 15.308, -86.1057, 18.7861, 0.72 ) }
    dend_29 { pt3dadd( 15.6927, -88.3313, 19.2758, 1.92 ) }
    dend_29 { pt3dadd( 16.4304, -92.0794, 20.1283, 1.44 ) }
    dend_29 { pt3dadd( 17.2466, -95.906, 20.9996, 1.92 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 72/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 18.9669, -8.86769, 0.309212, 0.72 ) }
    dend_26 { pt3dadd( 19.8364, -10.1206, 0.180389, 0.72 ) }
    dend_26 { pt3dadd( 20.2398, -10.6279, 0.0869486, 0.72 ) }
    dend_26 { pt3dadd( 20.5865, -11.0005, -0.00623144, 1.32 ) }
    dend_26 { pt3dadd( 21.0493, -11.4386, -0.149434, 1.32 ) }
    dend_26 { pt3dadd( 21.8649, -12.1374, -0.413725, 0.84 ) }
    dend_26 { pt3dadd( 22.7699, -12.8581, -0.713118, 0.84 ) }
    dend_26 { pt3dadd( 23.2148, -13.1456, -0.871781, 0.6 ) }
    dend_26 { pt3dadd( 23.9518, -13.5708, -1.12511, 0.6 ) }
    dend_26 { pt3dadd( 24.6474, -13.9416, -1.3568, 1.2 ) }
    dend_26 { pt3dadd( 25.0906, -14.1734, -1.4929, 1.2 ) }
    dend_26 { pt3dadd( 25.6788, -14.4751, -1.65303, 1.44 ) }
    dend_26 { pt3dadd( 26.0231, -14.6513, -1.72219, 1.44 ) }
    dend_26 { pt3dadd( 26.8254, -15.0553, -1.88431, 0.84 ) }
    dend_26 { pt3dadd( 27.3233, -15.298, -1.97992, 0.84 ) }
    dend_26 { pt3dadd( 28.3616, -15.8046, -2.17914, 0.6 ) }
    dend_26 { pt3dadd( 29.0105, -16.1402, -2.31262, 0.6 ) }
    dend_26 { pt3dadd( 29.7823, -16.5638, -2.47776, 1.2 ) }
    dend_26 { pt3dadd( 30.6072, -17.0533, -2.66581, 1.68 ) }
    dend_26 { pt3dadd( 30.9845, -17.3015, -2.7545, 1.68 ) }
    dend_26 { pt3dadd( 31.8592, -17.9202, -2.95015, 1.08 ) }
    dend_26 { pt3dadd( 32.4688, -18.381, -3.07456, 0.6 ) }
    dend_26 { pt3dadd( 32.9559, -18.7818, -3.15529, 0.6 ) }
    dend_26 { pt3dadd( 33.2666, -19.0716, -3.19757, 0.6 ) }
    dend_26 { pt3dadd( 33.9945, -19.8508, -3.32486, 0.6 ) }
    dend_26 { pt3dadd( 34.4125, -20.3483, -3.42902, 0.6 ) }
    dend_26 { pt3dadd( 34.9264, -20.9946, -3.60099, 1.2 ) }
    dend_26 { pt3dadd( 35.6376, -21.882, -3.87712, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_26 { pt3dadd( 36.1921, -22.5645, -4.12651, 1.56 ) }
    dend_26 { pt3dadd( 36.9598, -23.5085, -4.50315, 0.84 ) }
    dend_26 { pt3dadd( 37.5649, -24.2879, -4.84582, 0.6 ) }
    dend_26 { pt3dadd( 38.182, -25.1034, -5.2177, 1.08 ) }
    dend_26 { pt3dadd( 38.7274, -25.8108, -5.57176, 1.08 ) }
    dend_26 { pt3dadd( 39.2415, -26.4462, -5.90999, 0.48 ) }
    dend_26 { pt3dadd( 39.6742, -26.9551, -6.17821, 0.48 ) }
    dend_26 { pt3dadd( 40.4389, -27.8506, -6.60336, 1.56 ) }
    dend_26 { pt3dadd( 40.9187, -28.4365, -6.86005, 1.56 ) }
    dend_26 { pt3dadd( 41.6091, -29.3153, -7.21219, 0.96 ) }
    dend_26 { pt3dadd( 41.9431, -29.7507, -7.38413, 0.6 ) }
    dend_26 { pt3dadd( 42.4357, -30.378, -7.63225, 0.6 ) }
    dend_26 { pt3dadd( 43.1212, -31.1868, -7.96819, 1.2 ) }
    dend_26 { pt3dadd( 43.522, -31.597, -8.1813, 1.2 ) }
    dend_26 { pt3dadd( 43.9145, -31.9616, -8.40316, 1.2 ) }
    dend_26 { pt3dadd( 44.53, -32.5163, -8.76891, 0.6 ) }
    dend_26 { pt3dadd( 45.1256, -33.0535, -9.15436, 1.8 ) }
    dend_26 { pt3dadd( 45.6068, -33.5167, -9.49132, 1.8 ) }
    dend_26 { pt3dadd( 46.5855, -34.6797, -10.3352, 0.6 ) }
    dend_26 { pt3dadd( 46.9084, -35.1819, -10.6666, 0.6 ) }
    dend_26 { pt3dadd( 47.32, -36.0558, -11.0396, 1.2 ) }
    dend_26 { pt3dadd( 47.5198, -36.5814, -11.2237, 0.6 ) }
    dend_26 { pt3dadd( 47.8409, -37.727, -11.5208, 1.32 ) }
    dend_26 { pt3dadd( 48.0748, -39.1277, -11.7418, 0.6 ) }
    dend_26 { pt3dadd( 48.1178, -40.0374, -11.7442, 0.6 ) }
    dend_26 { pt3dadd( 48.0684, -42.7473, -11.5739, 0.96 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 26/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 18.9669, -8.86769, 0.309212, 1.2 ) }
    dend_25 { pt3dadd( 20.1679, -8.82058, 0.448564, 1.2 ) }
    dend_25 { pt3dadd( 21.7829, -8.74401, 0.649273, 0.84 ) }
    dend_25 { pt3dadd( 22.7664, -8.69886, 0.780632, 0.84 ) }
    dend_25 { pt3dadd( 24.9445, -8.55371, 1.08442, 0.84 ) }
    dend_25 { pt3dadd( 26.191, -8.45584, 1.25968, 0.72 ) }
    dend_25 { pt3dadd( 28.6698, -8.25085, 1.67805, 1.08 ) }
    dend_25 { pt3dadd( 30.831, -8.07693, 2.09708, 0.72 ) }
    dend_25 { pt3dadd( 31.8146, -7.99613, 2.30926, 0.72 ) }
    dend_25 { pt3dadd( 33.9335, -7.8292, 2.82081, 1.2 ) }
    dend_25 { pt3dadd( 34.9744, -7.74696, 3.12475, 1.2 ) }
    dend_25 { pt3dadd( 36.6375, -7.60299, 3.67082, 0.6 ) }
    dend_25 { pt3dadd( 37.28, -7.55778, 3.92094, 0.6 ) }
    dend_25 { pt3dadd( 37.7772, -7.543, 4.13459, 0.6 ) }
    dend_25 { pt3dadd( 39.3516, -7.51789, 4.8023, 1.44 ) }
    dend_25 { pt3dadd( 40.6528, -7.51823, 5.33059, 0.6 ) }
    dend_25 { pt3dadd( 41.6746, -7.51021, 5.7041, 0.6 ) }
    dend_25 { pt3dadd( 43.8885, -7.48111, 6.3627, 1.56 ) }
    dend_25 { pt3dadd( 45.0737, -7.45989, 6.66435, 1.56 ) }
    dend_25 { pt3dadd( 46.7188, -7.41909, 6.9954, 0.6 ) }
    dend_25 { pt3dadd( 47.9333, -7.35667, 7.14859, 0.6 ) }
    dend_25 { pt3dadd( 48.7664, -7.31219, 7.19194, 0.6 ) }
    dend_25 { pt3dadd( 50.2301, -7.2962, 7.25234, 1.08 ) }
    dend_25 { pt3dadd( 50.9028, -7.32593, 7.28944, 0.48 ) }
    dend_25 { pt3dadd( 52.0324, -7.46762, 7.45184, 0.48 ) }
    dend_25 { pt3dadd( 53.7258, -7.76528, 7.84998, 1.68 ) }
    dend_25 { pt3dadd( 54.3872, -7.905, 8.05129, 1.68 ) }
    dend_25 { pt3dadd( 56.1382, -8.31004, 8.6589, 0.84 ) }
    dend_25 { pt3dadd( 57.4736, -8.60277, 9.19862, 0.6 ) }
    dend_25 { pt3dadd( 58.7928, -8.87015, 9.75942, 1.2 ) }
    dend_25 { pt3dadd( 59.8841, -9.07979, 10.236, 0.72 ) }
    dend_25 { pt3dadd( 60.9213, -9.28506, 10.7163, 0.72 ) }
    dend_25 { pt3dadd( 62.0228, -9.43377, 11.1961, 1.32 ) }
    dend_25 { pt3dadd( 63.3683, -9.49839, 11.6326, 0.6 ) }
    dend_25 { pt3dadd( 64.1962, -9.50177, 11.8278, 0.6 ) }
    dend_25 { pt3dadd( 65.248, -9.49408, 12.0202, 1.08 ) }
    dend_25 { pt3dadd( 66.996, -9.48947, 12.2677, 0.48 ) }
    dend_25 { pt3dadd( 68.4259, -9.46932, 12.3563, 0.48 ) }
    dend_25 { pt3dadd( 70.1856, -9.42119, 12.3534, 1.44 ) }
    dend_25 { pt3dadd( 71.2893, -9.38097, 12.2873, 1.08 ) }
    dend_25 { pt3dadd( 72.4366, -9.30241, 12.15, 0.6 ) }
    dend_25 { pt3dadd( 72.9865, -9.24256, 12.1006, 0.6 ) }
    dend_25 { pt3dadd( 73.9911, -9.14358, 12.0991, 1.08 ) }
    dend_25 { pt3dadd( 76.3561, -9.01589, 12.4918, 0.48 ) }
    dend_25 { pt3dadd( 77.7801, -8.96426, 12.9104, 0.48 ) }
    dend_25 { pt3dadd( 78.6418, -8.91288, 13.2335, 1.08 ) }
    dend_25 { pt3dadd( 81.0945, -8.73133, 14.376, 0.6 ) }
    dend_25 { pt3dadd( 83.03, -8.59512, 15.3653, 1.44 ) }
    dend_25 { pt3dadd( 84.6909, -8.49043, 16.3216, 0.6 ) }
    dend_25 { pt3dadd( 85.3892, -8.45501, 16.7701, 0.6 ) }
    dend_25 { pt3dadd( 87.006, -8.39753, 17.9096, 0.6 ) }
    dend_25 { pt3dadd( 88.1728, -8.37238, 18.7739, 1.08 ) }
    dend_25 { pt3dadd( 98.5452, -7.78362, 20.1444, 1.08 ) }
    dend_25 { pt3dadd( 108.656, -7.55335, 22.8918, 1.08 ) }
    dend_25 { pt3dadd( 118.491, -8.65113, 26.3399, 1.08 ) }
    dend_25 { pt3dadd( 128.168, -9.5097, 30.2734, 1.08 ) }
    dend_25 { pt3dadd( 138.185, -11.4296, 32.6345, 1.08 ) }
    dend_25 { pt3dadd( 147.846, -14.9172, 34.4325, 1.08 ) }
    dend_25 { pt3dadd( 157.924, -16.422, 36.8574, 1.08 ) }
    dend_25 { pt3dadd( 168.206, -17.69, 38.4125, 1.08 ) }
    dend_25 { pt3dadd( 178.651, -18.3144, 38.9859, 1.08 ) }
    dend_25 { pt3dadd( 188.803, -20.6391, 39.9222, 1.08 ) }
    dend_25 { pt3dadd( 198.797, -23.5189, 39.0808, 1.08 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 89/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 17.103, -6.15305, -9.11554, 0.6 ) }
    dend_23 { pt3dadd( 18.2272, -6.45195, -9.01442, 0.6 ) }
    dend_23 { pt3dadd( 18.7028, -6.59066, -8.98111, 0.6 ) }
    dend_23 { pt3dadd( 19.4204, -6.81488, -8.93914, 0.6 ) }
    dend_23 { pt3dadd( 20.2174, -7.11495, -8.89711, 0.6 ) }
    dend_23 { pt3dadd( 20.8536, -7.37293, -8.86709, 0.48 ) }
    dend_23 { pt3dadd( 21.3993, -7.58916, -8.84531, 0.48 ) }
    dend_23 { pt3dadd( 22.1626, -7.90218, -8.84299, 0.48 ) }
    dend_23 { pt3dadd( 22.6118, -8.09367, -8.85264, 0.48 ) }
    dend_23 { pt3dadd( 23.4926, -8.47062, -8.89232, 0.84 ) }
    dend_23 { pt3dadd( 23.9779, -8.66809, -8.92333, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_23 { pt3dadd( 24.7639, -8.95744, -8.98944, 0.72 ) }
    dend_23 { pt3dadd( 25.6408, -9.22765, -9.07428, 0.72 ) }
    dend_23 { pt3dadd( 26.6884, -9.4624, -9.18267, 0.6 ) }
    dend_23 { pt3dadd( 27.1073, -9.51662, -9.23313, 0.6 ) }
    dend_23 { pt3dadd( 28.1112, -9.56564, -9.36316, 0.6 ) }
    dend_23 { pt3dadd( 28.8839, -9.57272, -9.46548, 0.6 ) }
    dend_23 { pt3dadd( 29.8491, -9.55746, -9.56715, 0.6 ) }
    dend_23 { pt3dadd( 30.9236, -9.51114, -9.6488, 0.6 ) }
    dend_23 { pt3dadd( 32.1731, -9.43881, -9.69973, 0.96 ) }
    dend_23 { pt3dadd( 32.8955, -9.4072, -9.71464, 0.96 ) }
    dend_23 { pt3dadd( 33.2754, -9.39751, -9.71532, 0.96 ) }
    dend_23 { pt3dadd( 34.3377, -9.39756, -9.69484, 0.48 ) }
    dend_23 { pt3dadd( 34.9206, -9.42145, -9.67448, 0.48 ) }
    dend_23 { pt3dadd( 35.6762, -9.48164, -9.63655, 0.48 ) }
    dend_23 { pt3dadd( 36.5872, -9.57022, -9.58053, 0.96 ) }
    dend_23 { pt3dadd( 37.0637, -9.62675, -9.56055, 0.96 ) }
    dend_23 { pt3dadd( 37.5586, -9.68552, -9.54759, 0.48 ) }
    dend_23 { pt3dadd( 38.3473, -9.75391, -9.54505, 0.48 ) }
    dend_23 { pt3dadd( 38.8211, -9.78906, -9.54132, 0.84 ) }
    dend_23 { pt3dadd( 39.4299, -9.8327, -9.53433, 0.84 ) }
    dend_23 { pt3dadd( 40.6059, -9.89474, -9.52048, 0.6 ) }
    dend_23 { pt3dadd( 42.1149, -9.96032, -9.43069, 0.6 ) }
    dend_23 { pt3dadd( 43.0686, -10.0109, -9.34048, 1.2 ) }
    dend_23 { pt3dadd( 43.6015, -10.0436, -9.27263, 1.2 ) }
    dend_23 { pt3dadd( 44.2344, -10.0913, -9.17844, 1.2 ) }
    dend_23 { pt3dadd( 45.171, -10.1733, -9.02823, 0.84 ) }
    dend_23 { pt3dadd( 47.1103, -10.3189, -8.68948, 0.6 ) }
    dend_23 { pt3dadd( 47.5628, -10.3572, -8.60689, 0.6 ) }
    dend_23 { pt3dadd( 47.9964, -10.3994, -8.527, 0.6 ) }
    dend_23 { pt3dadd( 49.1505, -10.5145, -8.31178, 0.36 ) }
    dend_23 { pt3dadd( 50.3542, -10.6484, -8.09993, 0.36 ) }
    dend_23 { pt3dadd( 51.3148, -10.7782, -7.95825, 0.96 ) }
    dend_23 { pt3dadd( 51.6916, -10.8232, -7.91732, 0.96 ) }
    dend_23 { pt3dadd( 52.1161, -10.8684, -7.87242, 0.6 ) }
    dend_23 { pt3dadd( 52.9322, -10.964, -7.78747, 0.6 ) }
    dend_23 { pt3dadd( 53.765, -11.0851, -7.69815, 0.96 ) }
    dend_23 { pt3dadd( 55.0228, -11.3009, -7.57419, 0.96 ) }
    dend_23 { pt3dadd( 56.0017, -11.5005, -7.49237, 1.44 ) }
    dend_23 { pt3dadd( 57.0242, -11.7036, -7.4206, 1.44 ) }
    dend_23 { pt3dadd( 57.618, -11.8125, -7.39003, 1.44 ) }
    dend_23 { pt3dadd( 58.2016, -11.8955, -7.37675, 0.84 ) }
    dend_23 { pt3dadd( 59.0905, -12.0056, -7.36793, 0.84 ) }
    dend_23 { pt3dadd( 59.4236, -12.0365, -7.37837, 0.84 ) }
    dend_23 { pt3dadd( 60.5065, -12.1333, -7.45197, 1.2 ) }
    dend_23 { pt3dadd( 61.4487, -12.2022, -7.53179, 1.2 ) }
    dend_23 { pt3dadd( 63.1293, -12.2995, -7.69287, 1.44 ) }
    dend_23 { pt3dadd( 64.0453, -12.3524, -7.78717, 1.44 ) }
    dend_23 { pt3dadd( 66.2855, -12.4941, -8.02294, 0.96 ) }
    dend_23 { pt3dadd( 66.8381, -12.5295, -8.08018, 0.96 ) }
    dend_23 { pt3dadd( 68.3368, -12.632, -8.22931, 1.32 ) }
    dend_23 { pt3dadd( 69.313, -12.6797, -8.32169, 1.32 ) }
    dend_23 { pt3dadd( 69.8212, -12.7004, -8.36451, 0.72 ) }
    dend_23 { pt3dadd( 70.7, -12.7313, -8.42227, 0.72 ) }
    dend_23 { pt3dadd( 71.91, -12.795, -8.46231, 0.72 ) }
    dend_23 { pt3dadd( 73.1479, -12.8534, -8.49169, 0.96 ) }
    dend_23 { pt3dadd( 74.241, -12.9187, -8.51652, 0.96 ) }
    dend_23 { pt3dadd( 75.0331, -12.9681, -8.53382, 0.96 ) }
    dend_23 { pt3dadd( 75.9474, -13.011, -8.5263, 1.32 ) }
    dend_23 { pt3dadd( 77.3239, -13.0706, -8.46957, 1.32 ) }
    dend_23 { pt3dadd( 78.282, -13.11, -8.39925, 0.72 ) }
    dend_23 { pt3dadd( 78.9357, -13.1448, -8.33294, 0.72 ) }
    dend_23 { pt3dadd( 80.146, -13.2424, -8.20414, 0.72 ) }
    dend_23 { pt3dadd( 81.4108, -13.3525, -8.07461, 0.72 ) }
    dend_23 { pt3dadd( 82.1614, -13.4237, -8.00711, 1.2 ) }
    dend_23 { pt3dadd( 82.9054, -13.5007, -7.95921, 1.2 ) }
    dend_23 { pt3dadd( 83.7394, -13.5724, -7.92588, 0.72 ) }
    dend_23 { pt3dadd( 84.5606, -13.6101, -7.92268, 0.72 ) }
    dend_23 { pt3dadd( 85.265, -13.6126, -7.94673, 0.72 ) }
    dend_23 { pt3dadd( 86.4244, -13.5825, -8.02837, 0.48 ) }
    dend_23 { pt3dadd( 88.107, -13.4457, -8.1493, 0.48 ) }
    dend_23 { pt3dadd( 88.9442, -13.3235, -8.20238, 0.96 ) }
    dend_23 { pt3dadd( 90.495, -12.9526, -8.27259, 0.96 ) }
    dend_23 { pt3dadd( 91.4203, -12.6553, -8.29646, 0.96 ) }
    dend_23 { pt3dadd( 92.0606, -12.4007, -8.31142, 0.36 ) }
    dend_23 { pt3dadd( 92.8431, -12.0295, -8.33271, 0.36 ) }
    dend_23 { pt3dadd( 94.0037, -11.4447, -8.40426, 0.36 ) }
    dend_23 { pt3dadd( 95.0683, -10.9329, -8.49895, 0.84 ) }
    dend_23 { pt3dadd( 95.7647, -10.5789, -8.58162, 0.84 ) }
    dend_23 { pt3dadd( 96.8621, -10.0454, -8.77396, 0.84 ) }
    dend_23 { pt3dadd( 97.6708, -9.66105, -8.95098, 1.08 ) }
    dend_23 { pt3dadd( 99.1909, -9.04885, -9.31957, 1.08 ) }
    dend_23 { pt3dadd( 100.023, -8.76512, -9.53605, 0.48 ) }
    dend_23 { pt3dadd( 100.577, -8.61569, -9.68446, 0.48 ) }
    dend_23 { pt3dadd( 101.965, -8.29196, -10.0434, 0.96 ) }
    dend_23 { pt3dadd( 102.795, -8.11924, -10.2483, 0.96 ) }
    dend_23 { pt3dadd( 104.496, -7.78536, -10.6087, 0.96 ) }
    dend_23 { pt3dadd( 104.968, -7.69905, -10.6723, 0.48 ) }
    dend_23 { pt3dadd( 105.687, -7.59888, -10.7904, 0.48 ) }
    dend_23 { pt3dadd( 106.5, -7.51533, -10.9592, 0.48 ) }
    dend_23 { pt3dadd( 107.683, -7.39238, -11.2381, 0.84 ) }
    dend_23 { pt3dadd( 109.179, -7.23274, -11.653, 0.6 ) }
    dend_23 { pt3dadd( 110.715, -7.05018, -12.1253, 0.96 ) }
    dend_23 { pt3dadd( 113.152, -6.75236, -12.8836, 0.84 ) }
    dend_23 { pt3dadd( 114.032, -6.6326, -13.1559, 0.36 ) }
    dend_23 { pt3dadd( 115.257, -6.46405, -13.5119, 0.36 ) }
    dend_23 { pt3dadd( 115.951, -6.36625, -13.6912, 0.36 ) }
    dend_23 { pt3dadd( 117.004, -6.233, -13.9428, 0.36 ) }
    dend_23 { pt3dadd( 118.393, -6.05, -14.2662, 0.96 ) }
    dend_23 { pt3dadd( 119.249, -5.92457, -14.4042, 0.96 ) }
    dend_23 { pt3dadd( 120.522, -5.74919, -14.5977, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_23 { pt3dadd( 121.618, -5.60613, -14.7799, 0.72 ) }
    dend_23 { pt3dadd( 122.876, -5.43735, -15.0018, 0.48 ) }
    dend_23 { pt3dadd( 124.061, -5.26811, -15.2106, 0.48 ) }
    dend_23 { pt3dadd( 126.056, -5.01121, -15.5435, 0.96 ) }
    dend_23 { pt3dadd( 127.231, -4.8714, -15.7375, 0.96 ) }
    dend_23 { pt3dadd( 128.042, -4.75581, -15.8658, 0.36 ) }
    dend_23 { pt3dadd( 128.465, -4.68647, -15.9212, 0.36 ) }
    dend_23 { pt3dadd( 130.366, -4.36411, -16.0956, 0.84 ) }
    dend_23 { pt3dadd( 131.531, -4.20962, -16.167, 0.24 ) }
    dend_23 { pt3dadd( 132.188, -4.13863, -16.2189, 0.48 ) }
    dend_23 { pt3dadd( 133.417, -4.00093, -16.3334, 0.48 ) }
    dend_23 { pt3dadd( 134.722, -3.81968, -16.4701, 0.48 ) }
    dend_23 { pt3dadd( 135.815, -3.60555, -16.5968, 0.48 ) }
    dend_23 { pt3dadd( 136.529, -3.39245, -16.6878, 0.48 ) }
    dend_23 { pt3dadd( 137.507, -3.01468, -16.87, 0.84 ) }
    dend_23 { pt3dadd( 138.054, -2.77096, -16.9925, 0.84 ) }
    dend_23 { pt3dadd( 138.823, -2.37666, -17.1967, 0.48 ) }
    dend_23 { pt3dadd( 139.599, -1.93375, -17.4147, 0.48 ) }
    dend_23 { pt3dadd( 140.952, -1.12807, -17.7997, 0.48 ) }
    dend_23 { pt3dadd( 142.675, -0.116183, -18.3224, 0.84 ) }
    dend_23 { pt3dadd( 143.25, 0.209869, -18.5025, 0.84 ) }
    dend_23 { pt3dadd( 143.968, 0.598644, -18.7311, 0.48 ) }
    dend_23 { pt3dadd( 145.196, 1.21914, -19.1125, 0.48 ) }
    dend_23 { pt3dadd( 146.354, 1.75803, -19.4511, 0.48 ) }
    dend_23 { pt3dadd( 147.527, 2.28468, -19.7471, 0.48 ) }
    dend_23 { pt3dadd( 148.254, 2.62421, -19.9049, 0.48 ) }
    dend_23 { pt3dadd( 149.012, 2.98093, -20.1875, 1.32 ) }
    dend_23 { pt3dadd( 149.497, 3.23265, -20.4302, 0.48 ) }
    dend_23 { pt3dadd( 149.937, 3.51049, -20.717, 0.48 ) }
    dend_23 { pt3dadd( 150.86, 4.19087, -21.4749, 1.56 ) }
    dend_23 { pt3dadd( 151.634, 4.84382, -22.28, 0.72 ) }
    dend_23 { pt3dadd( 153.287, 6.44633, -24.5275, 0.72 ) }
    dend_23 { pt3dadd( 153.703, 6.97433, -25.3346, 0.72 ) }
    dend_23 { pt3dadd( 154.039, 7.56038, -26.1346, 0.72 ) }
    dend_23 { pt3dadd( 154.329, 8.40868, -27.1406, 0.72 ) }
    dend_23 { pt3dadd( 154.537, 9.33285, -28.2276, 1.08 ) }
    dend_23 { pt3dadd( 154.678, 10.7777, -29.77, 0.6 ) }
    dend_23 { pt3dadd( 154.596, 12.5034, -31.2535, 0.6 ) }
    dend_23 { pt3dadd( 154.277, 15.0943, -33.5155, 1.2 ) }
    dend_23 { pt3dadd( 153.977, 16.4893, -34.547, 1.2 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 40/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 17.103, -6.15305, -9.11554, 0.84 ) }
    dend_22 { pt3dadd( 17.883, -5.822, -8.75229, 0.84 ) }
    dend_22 { pt3dadd( 19.1555, -5.31839, -8.20387, 1.2 ) }
    dend_22 { pt3dadd( 19.624, -5.15406, -8.01389, 0.84 ) }
    dend_22 { pt3dadd( 20.5188, -4.84277, -7.68087, 0.84 ) }
    dend_22 { pt3dadd( 21.086, -4.64192, -7.4759, 0.84 ) }
    dend_22 { pt3dadd( 21.7976, -4.3836, -7.2317, 0.84 ) }
    dend_22 { pt3dadd( 22.1305, -4.27157, -7.1191, 0.84 ) }
    dend_22 { pt3dadd( 22.5473, -4.12839, -6.99634, 0.6 ) }
    dend_22 { pt3dadd( 23.0548, -3.94241, -6.83038, 0.6 ) }
    dend_22 { pt3dadd( 23.3693, -3.81057, -6.70604, 1.2 ) }
    dend_22 { pt3dadd( 23.8444, -3.59264, -6.48146, 1.2 ) }
    dend_22 { pt3dadd( 24.7373, -3.18175, -5.98326, 0.84 ) }
    dend_22 { pt3dadd( 25.1901, -2.98213, -5.72866, 1.32 ) }
    dend_22 { pt3dadd( 25.748, -2.74055, -5.40572, 1.32 ) }
    dend_22 { pt3dadd( 26.4956, -2.44166, -4.9455, 0.84 ) }
    dend_22 { pt3dadd( 26.9315, -2.27735, -4.67701, 0.72 ) }
    dend_22 { pt3dadd( 27.6255, -2.0102, -4.235, 0.72 ) }
    dend_22 { pt3dadd( 28.4084, -1.67862, -3.73452, 0.96 ) }
    dend_22 { pt3dadd( 28.6947, -1.53421, -3.55248, 0.96 ) }
    dend_22 { pt3dadd( 29.0424, -1.33212, -3.34935, 0.48 ) }
    dend_22 { pt3dadd( 29.3012, -1.18321, -3.22131, 0.48 ) }
    dend_22 { pt3dadd( 29.9579, -0.790051, -2.93937, 0.96 ) }
    dend_22 { pt3dadd( 30.4681, -0.452514, -2.7459, 0.96 ) }
    dend_22 { pt3dadd( 31.3213, 0.147214, -2.46571, 0.84 ) }
    dend_22 { pt3dadd( 32.0113, 0.651606, -2.28964, 0.72 ) }
    dend_22 { pt3dadd( 32.4068, 0.95866, -2.21684, 0.72 ) }
    dend_22 { pt3dadd( 32.8233, 1.31607, -2.16368, 1.2 ) }
    dend_22 { pt3dadd( 33.0465, 1.52842, -2.16702, 1.2 ) }
    dend_22 { pt3dadd( 33.2275, 1.73442, -2.19932, 0.72 ) }
    dend_22 { pt3dadd( 33.4255, 2.07955, -2.28931, 1.2 ) }
    dend_22 { pt3dadd( 33.4998, 2.28513, -2.34198, 1.2 ) }
    dend_22 { pt3dadd( 33.6208, 2.70215, -2.45517, 1.2 ) }
    dend_22 { pt3dadd( 33.7541, 3.16553, -2.5884, 0.72 ) }
    dend_22 { pt3dadd( 33.8497, 3.41242, -2.66633, 0.72 ) }
    dend_22 { pt3dadd( 34.0094, 3.74476, -2.75895, 1.08 ) }
    dend_22 { pt3dadd( 34.153, 3.9726, -2.8089, 1.08 ) }
    dend_22 { pt3dadd( 34.3151, 4.183, -2.83429, 1.08 ) }
    dend_22 { pt3dadd( 35.0257, 4.94569, -2.83385, 0.6 ) }
    dend_22 { pt3dadd( 35.3662, 5.26452, -2.79022, 0.6 ) }
    dend_22 { pt3dadd( 35.8879, 5.69449, -2.66224, 0.6 ) }
    dend_22 { pt3dadd( 36.3147, 6.01023, -2.52897, 1.08 ) }
    dend_22 { pt3dadd( 36.6367, 6.2616, -2.40593, 1.08 ) }
    dend_22 { pt3dadd( 36.9504, 6.51009, -2.26982, 1.08 ) }
    dend_22 { pt3dadd( 37.4684, 6.90391, -2.03568, 0.84 ) }
    dend_22 { pt3dadd( 38.1715, 7.42926, -1.74051, 0.84 ) }
    dend_22 { pt3dadd( 38.2875, 7.5158, -1.69816, 0.84 ) }
    dend_22 { pt3dadd( 38.906, 8.03202, -1.48617, 0.48 ) }
    dend_22 { pt3dadd( 39.2533, 8.34421, -1.36826, 0.48 ) }
    dend_22 { pt3dadd( 39.7306, 8.75808, -1.2055, 0.48 ) }
    dend_22 { pt3dadd( 40.3157, 9.24311, -1.00091, 0.84 ) }
    dend_22 { pt3dadd( 40.5917, 9.48273, -0.912373, 0.84 ) }
    dend_22 { pt3dadd( 40.995, 9.86644, -0.783235, 0.84 ) }
    dend_22 { pt3dadd( 41.1834, 10.063, -0.726339, 0.72 ) }
    dend_22 { pt3dadd( 41.9456, 10.969, -0.512055, 0.72 ) }
    dend_22 { pt3dadd( 42.1446, 11.2278, -0.469212, 0.72 ) }
    dend_22 { pt3dadd( 42.7017, 11.9817, -0.39942, 0.48 ) }
    dend_22 { pt3dadd( 43.0274, 12.3956, -0.388851, 0.48 ) }
    dend_22 { pt3dadd( 43.3231, 12.7327, -0.4043, 0.84 ) }
    dend_22 { pt3dadd( 43.6332, 13.0537, -0.440069, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_22 { pt3dadd( 44.023, 13.4891, -0.513667, 0.36 ) }
    dend_22 { pt3dadd( 44.2009, 13.6598, -0.551401, 0.96 ) }
    dend_22 { pt3dadd( 44.6029, 13.9308, -0.623929, 0.6 ) }
    dend_22 { pt3dadd( 45.0947, 14.191, -0.699902, 0.6 ) }
    dend_22 { pt3dadd( 45.6016, 14.4257, -0.772202, 0.36 ) }
    dend_22 { pt3dadd( 50.7415, 17.6645, -0.214133, 0.36 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 6/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 11.3821, -2.50245, 9.24158, 0.48 ) }
    dend_16 { pt3dadd( 11.3411, -1.66421, 9.48134, 0.48 ) }
    dend_16 { pt3dadd( 11.3755, -1.21308, 9.6111, 0.48 ) }
    dend_16 { pt3dadd( 11.5409, -0.37492, 9.85225, 0.48 ) }
    dend_16 { pt3dadd( 11.9281, 0.77938, 10.1824, 0.48 ) }
    dend_16 { pt3dadd( 12.1952, 1.31327, 10.3291, 0.48 ) }
    dend_16 { pt3dadd( 12.6316, 2.00117, 10.5044, 0.48 ) }
    dend_16 { pt3dadd( 13.0244, 2.48318, 10.6342, 0.48 ) }
    dend_16 { pt3dadd( 13.2674, 2.74617, 10.6997, 0.48 ) }
    dend_16 { pt3dadd( 13.6016, 3.07194, 10.7675, 0.48 ) }
    dend_16 { pt3dadd( 14.0844, 3.55648, 10.8472, 0.48 ) }
    dend_16 { pt3dadd( 14.4919, 4.07192, 10.8794, 0.48 ) }
    dend_16 { pt3dadd( 14.9446, 4.83953, 10.8787, 0.84 ) }
    dend_16 { pt3dadd( 15.2296, 5.43498, 10.859, 1.32 ) }
    dend_16 { pt3dadd( 15.4593, 5.97164, 10.8267, 1.32 ) }
    dend_16 { pt3dadd( 15.6146, 6.36242, 10.7891, 1.32 ) }
    dend_16 { pt3dadd( 16.1682, 7.58525, 10.6379, 0.6 ) }
    dend_16 { pt3dadd( 16.4682, 8.12762, 10.5609, 0.6 ) }
    dend_16 { pt3dadd( 16.7175, 8.53782, 10.5346, 0.6 ) }
    dend_16 { pt3dadd( 17.0657, 9.11026, 10.4791, 0.6 ) }
    dend_16 { pt3dadd( 17.7124, 10.1863, 10.2734, 0.6 ) }
    dend_16 { pt3dadd( 18.1962, 10.9972, 10.0777, 1.44 ) }
    dend_16 { pt3dadd( 18.6871, 11.8025, 9.88757, 1.44 ) }
    dend_16 { pt3dadd( 19.5424, 13.1728, 9.51133, 0.84 ) }
    dend_16 { pt3dadd( 20.6499, 14.9457, 8.94117, 0.6 ) }
    dend_16 { pt3dadd( 21.4199, 16.2468, 8.44066, 1.56 ) }
    dend_16 { pt3dadd( 21.7076, 16.7882, 8.17525, 1.56 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 33/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 11.3821, -2.50245, 9.24158, 1.32 ) }
    dend_15 { pt3dadd( 12.409, -3.13378, 10.4835, 1.32 ) }
    dend_15 { pt3dadd( 13.7514, -4.25044, 12.2452, 1.32 ) }
    dend_15 { pt3dadd( 14.9593, -5.63566, 14.1059, 0.84 ) }
    dend_15 { pt3dadd( 15.3857, -6.35807, 14.9195, 0.6 ) }
    dend_15 { pt3dadd( 15.6599, -7.19929, 15.8038, 0.6 ) }
    dend_15 { pt3dadd( 15.7719, -7.95285, 16.657, 1.56 ) }
    dend_15 { pt3dadd( 15.6798, -8.47131, 17.2923, 1.56 ) }
    dend_15 { pt3dadd( 15.3278, -9.17833, 18.127, 1.56 ) }
    dend_15 { pt3dadd( 14.7467, -9.89656, 19.0388, 1.56 ) }
    dend_15 { pt3dadd( 13.3861, -11.1278, 20.9287, 1.56 ) }
    dend_15 { pt3dadd( 12.2236, -12.0074, 22.4539, 0.84 ) }
    dend_15 { pt3dadd( 11.5696, -12.4505, 23.3022, 0.84 ) }
    dend_15 { pt3dadd( 10.885, -12.8553, 24.1938, 0.36 ) }
    dend_15 { pt3dadd( 10.3094, -13.1381, 24.9191, 0.36 ) }
    dend_15 { pt3dadd( 9.79675, -13.3273, 25.5327, 0.36 ) }
    dend_15 { pt3dadd( 9.13457, -13.5015, 26.0422, 0.36 ) }
    dend_15 { pt3dadd( 8.53682, -13.7483, 26.3306, 0.36 ) }
    dend_15 { pt3dadd( 5.41722, -18.9842, 35.7081, 0.36 ) }
    dend_15 { pt3dadd( 1.66675, -22.7634, 45.6182, 0.36 ) }
    dend_15 { pt3dadd( -2.95809, -25.1678, 55.6369, 0.36 ) }
    dend_15 { pt3dadd( -8.68263, -28.9655, 64.5441, 0.36 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 55/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 2.04361, 12.8095, -0.710484, 1.44 ) }
    dend_10 { pt3dadd( 0.77986, 12.712, 0.562902, 1.44 ) }
    dend_10 { pt3dadd( -1.46678, 12.5593, 2.9063, 1.44 ) }
    dend_10 { pt3dadd( -3.7361, 12.4247, 5.3837, 0.6 ) }
    dend_10 { pt3dadd( -4.30733, 12.369, 6.02335, 0.6 ) }
    dend_10 { pt3dadd( -5.08554, 12.2526, 6.9264, 1.08 ) }
    dend_10 { pt3dadd( -7.29117, 11.8172, 9.55354, 0.6 ) }
    dend_10 { pt3dadd( -7.83097, 11.6576, 10.2386, 0.6 ) }
    dend_10 { pt3dadd( -9.0234, 11.1851, 11.5989, 1.08 ) }
    dend_10 { pt3dadd( -9.93187, 10.7829, 12.6666, 1.08 ) }
    dend_10 { pt3dadd( -10.9906, 10.2967, 13.9559, 1.68 ) }
    dend_10 { pt3dadd( -12.7455, 9.38561, 16.0962, 0.6 ) }
    dend_10 { pt3dadd( -13.2012, 9.09721, 16.545, 0.6 ) }
    dend_10 { pt3dadd( -15.8083, 7.22384, 19.0195, 1.32 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 69/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 2.04361, 12.8095, -0.710484, 1.8 ) }
    dend_1 { pt3dadd( 2.61553, 14.7628, -0.402748, 1.8 ) }
    dend_1 { pt3dadd( 3.17528, 16.6745, -0.10156, 1.8 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 72/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -13.6098, 39.4788, 0.0, 0.643146 ) }
    axon_1 { pt3dadd( -18.9951, 53.4787, 0.0, 0.643146 ) }
    axon_1 { pt3dadd( -24.3805, 67.4786, 0.0, 0.643146 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 75/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 3.84012, -17.8932, -6.48215, 0.6 ) }
    dend_38 { pt3dadd( 5.68015, -18.461, -5.99946, 0.6 ) }
    dend_38 { pt3dadd( 6.72526, -18.7712, -5.7628, 0.6 ) }
    dend_38 { pt3dadd( 9.89476, -19.6172, -5.05566, 1.08 ) }
    dend_38 { pt3dadd( 11.3785, -19.9516, -4.71147, 1.08 ) }
    dend_38 { pt3dadd( 13.055, -20.2912, -4.32609, 0.6 ) }
    dend_38 { pt3dadd( 14.1906, -20.514, -4.08205, 0.6 ) }
    dend_38 { pt3dadd( 15.7818, -20.7771, -3.70405, 1.2 ) }
    dend_38 { pt3dadd( 17.5351, -20.9937, -3.32554, 0.6 ) }
    dend_38 { pt3dadd( 18.7615, -21.1112, -3.11399, 0.6 ) }
    dend_38 { pt3dadd( 19.4793, -21.1873, -3.01206, 0.6 ) }
    dend_38 { pt3dadd( 21.9605, -21.4369, -2.66197, 1.92 ) }
    dend_38 { pt3dadd( 23.6759, -21.6228, -2.41032, 1.08 ) }
    dend_38 { pt3dadd( 25.419, -21.868, -2.15805, 1.08 ) }
    dend_38 { pt3dadd( 26.8954, -22.1151, -1.9998, 1.44 ) }
    dend_38 { pt3dadd( 28.2909, -22.3805, -1.93432, 1.44 ) }
    dend_38 { pt3dadd( 29.3588, -22.5786, -1.96934, 0.84 ) }
    dend_38 { pt3dadd( 30.5399, -22.8035, -2.11635, 0.84 ) }
    dend_38 { pt3dadd( 32.3339, -23.1667, -2.51341, 0.96 ) }
    dend_38 { pt3dadd( 33.1821, -23.3494, -2.76917, 0.96 ) }
    dend_38 { pt3dadd( 35.231, -23.7761, -3.50529, 2.04 ) }
    dend_38 { pt3dadd( 36.8724, -24.1218, -4.16921, 2.04 ) }
    dend_38 { pt3dadd( 37.4955, -24.2593, -4.4519, 2.04 ) }
    dend_38 { pt3dadd( 39.1361, -24.6265, -5.2253, 0.84 ) }
    dend_38 { pt3dadd( 40.2045, -24.895, -5.73657, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_38 { pt3dadd( 41.1321, -25.179, -6.1375, 0.84 ) }
    dend_38 { pt3dadd( 41.9277, -25.4731, -6.44741, 0.84 ) }
    dend_38 { pt3dadd( 42.6804, -25.7938, -6.73078, 1.2 ) }
    dend_38 { pt3dadd( 43.2863, -26.0762, -6.96833, 1.2 ) }
    dend_38 { pt3dadd( 44.0064, -26.4467, -7.26, 0.72 ) }
    dend_38 { pt3dadd( 44.3565, -26.622, -7.40938, 0.72 ) }
    dend_38 { pt3dadd( 45.5497, -27.1564, -7.99184, 1.44 ) }
    dend_38 { pt3dadd( 47.2388, -27.6516, -8.43601, 0.84 ) }
    dend_38 { pt3dadd( 48.0401, -27.8099, -8.49632, 0.84 ) }
    dend_38 { pt3dadd( 49.1441, -27.9555, -8.45231, 0.84 ) }
    dend_38 { pt3dadd( 50.325, -28.0631, -8.31575, 1.56 ) }
    dend_38 { pt3dadd( 53.1942, -28.2471, -7.79287, 0.6 ) }
    dend_38 { pt3dadd( 58.6213, -28.4846, -6.51189, 1.8 ) }
    dend_38 { pt3dadd( 60.4109, -28.5639, -5.99645, 2.16 ) }
    dend_38 { pt3dadd( 62.1073, -28.6611, -5.46141, 0.96 ) }
    dend_38 { pt3dadd( 63.1395, -28.7447, -5.1402, 0.96 ) }
    dend_38 { pt3dadd( 64.6308, -28.9143, -4.70747, 0.96 ) }
    dend_38 { pt3dadd( 66.1739, -29.1883, -4.42088, 1.32 ) }
    dend_38 { pt3dadd( 67.9542, -29.6576, -4.42432, 0.72 ) }
    dend_38 { pt3dadd( 69.8408, -30.1964, -4.58925, 1.92 ) }
    dend_38 { pt3dadd( 72.5775, -31.0684, -5.0277, 0.6 ) }
    dend_38 { pt3dadd( 73.8797, -31.5193, -5.32177, 0.96 ) }
    dend_38 { pt3dadd( 76.6732, -32.4871, -6.01461, 0.72 ) }
    dend_38 { pt3dadd( 78.5534, -33.0866, -6.42864, 0.72 ) }
    dend_38 { pt3dadd( 81.2761, -33.8341, -6.86998, 1.8 ) }
    dend_38 { pt3dadd( 82.9473, -34.2197, -6.98811, 0.84 ) }
    dend_38 { pt3dadd( 84.4711, -34.4608, -6.87666, 0.84 ) }
    dend_38 { pt3dadd( 87.2187, -34.6204, -6.24299, 1.8 ) }
    dend_38 { pt3dadd( 89.6051, -34.414, -5.27857, 0.6 ) }
    dend_38 { pt3dadd( 91.7897, -34.0445, -4.1532, 0.6 ) }
    dend_38 { pt3dadd( 92.424, -33.8847, -3.73223, 0.6 ) }
    dend_38 { pt3dadd( 93.6728, -33.4651, -2.7681, 0.6 ) }
    dend_38 { pt3dadd( 94.6086, -33.067, -1.95521, 0.6 ) }
    dend_38 { pt3dadd( 95.9111, -32.3833, -0.774104, 0.84 ) }
    dend_38 { pt3dadd( 106.256, -36.0454, -0.762015, 0.84 ) }
    dend_38 { pt3dadd( 116.643, -39.5974, -0.590813, 0.84 ) }
    dend_38 { pt3dadd( 127.107, -42.8032, -1.63642, 0.84 ) }
    dend_38 { pt3dadd( 137.164, -47.1184, -1.60149, 0.84 ) }
    dend_38 { pt3dadd( 146.956, -51.747, -3.05901, 0.84 ) }
    dend_38 { pt3dadd( 157.077, -55.3253, -5.36097, 0.84 ) }
    dend_38 { pt3dadd( 167.66, -57.8845, -7.05003, 0.84 ) }
    dend_38 { pt3dadd( 177.742, -60.6905, -10.4727, 0.84 ) }
    dend_38 { pt3dadd( 187.514, -62.2306, -15.3969, 0.84 ) }
    dend_38 { pt3dadd( 197.395, -63.6163, -20.1567, 0.84 ) }
    dend_38 { pt3dadd( 206.782, -64.0784, -26.0102, 0.84 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 45/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 3.84012, -17.8932, -6.48215, 0.84 ) }
    dend_37 { pt3dadd( 3.98773, -18.0641, -6.65551, 0.84 ) }
    dend_37 { pt3dadd( 5.39534, -19.598, -8.22325, 1.44 ) }
    dend_37 { pt3dadd( 5.93582, -20.2644, -8.85232, 1.44 ) }
    dend_37 { pt3dadd( 6.60077, -21.2486, -9.72499, 0.72 ) }
    dend_37 { pt3dadd( 6.90351, -21.8188, -10.1879, 0.72 ) }
    dend_37 { pt3dadd( 7.77005, -23.8531, -11.7052, 2.04 ) }
    dend_37 { pt3dadd( 7.83829, -24.1175, -11.878, 2.04 ) }
    dend_37 { pt3dadd( 8.06232, -26.3009, -13.0834, 1.08 ) }
    dend_37 { pt3dadd( 8.01293, -27.5639, -13.7026, 0.72 ) }
    dend_37 { pt3dadd( 7.78276, -29.0638, -14.3223, 2.04 ) }
    dend_37 { pt3dadd( 7.56468, -29.9067, -14.6045, 2.04 ) }
    dend_37 { pt3dadd( 6.94226, -31.76, -15.1179, 0.96 ) }
    dend_37 { pt3dadd( 6.84003, -32.0569, -15.1902, 0.96 ) }
    dend_37 { pt3dadd( 6.31565, -33.6106, -15.4895, 1.68 ) }
    dend_37 { pt3dadd( 6.09703, -34.4245, -15.635, 1.68 ) }
    dend_37 { pt3dadd( 5.67861, -36.5116, -15.996, 0.84 ) }
    dend_37 { pt3dadd( 5.52201, -37.6457, -16.2611, 0.84 ) }
    dend_37 { pt3dadd( 5.37566, -39.0873, -16.7722, 1.68 ) }
    dend_37 { pt3dadd( 5.29342, -40.3057, -17.3198, 1.68 ) }
    dend_37 { pt3dadd( 5.25688, -41.6565, -18.0978, 0.84 ) }
    dend_37 { pt3dadd( 5.26629, -42.5318, -18.6909, 0.84 ) }
    dend_37 { pt3dadd( 5.38701, -44.7479, -20.3942, 2.04 ) }
    dend_37 { pt3dadd( 5.56273, -47.08, -22.2986, 0.96 ) }
    dend_37 { pt3dadd( 5.63995, -47.8253, -22.9306, 0.96 ) }
    dend_37 { pt3dadd( 5.8538, -49.6405, -24.439, 1.44 ) }
    dend_37 { pt3dadd( 5.99168, -50.6744, -25.2333, 0.6 ) }
    dend_37 { pt3dadd( 6.18147, -51.7272, -25.8271, 0.6 ) }
    dend_37 { pt3dadd( 6.66436, -52.8809, -24.6922, 1.08 ) }
    dend_37 { pt3dadd( 6.93474, -53.5494, -23.8845, 0.48 ) }
    dend_37 { pt3dadd( 7.24578, -54.3877, -22.7487, 0.96 ) }
    dend_37 { pt3dadd( 7.44489, -54.9884, -21.8721, 0.36 ) }
    dend_37 { pt3dadd( 9.5261, -62.9117, -9.8058, 1.08 ) }
    dend_37 { pt3dadd( 9.9783, -65.2007, -6.29332, 0.36 ) }
    dend_37 { pt3dadd( 10.0433, -65.6223, -5.6368, 0.36 ) }
    dend_37 { pt3dadd( 10.0896, -66.0588, -4.98129, 0.72 ) }
    dend_37 { pt3dadd( 10.1275, -66.8235, -3.89375, 0.72 ) }
    dend_37 { pt3dadd( 9.81168, -68.2239, -3.71276, 1.08 ) }
    dend_37 { pt3dadd( 9.39688, -69.8009, -4.44569, 0.72 ) }
    dend_37 { pt3dadd( 9.25651, -70.6725, -4.73974, 0.72 ) }
    dend_37 { pt3dadd( 9.1204, -71.7354, -5.14431, 0.96 ) }
    dend_37 { pt3dadd( 9.05318, -72.5129, -5.47757, 0.96 ) }
    dend_37 { pt3dadd( 9.02953, -74.3338, -6.36717, 0.6 ) }
    dend_37 { pt3dadd( 9.34331, -77.5358, -7.98581, 1.2 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 89/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -5.59914, -21.6905, 4.89488, 1.08 ) }
    dend_34 { pt3dadd( -6.295, -23.4989, 5.71277, 1.08 ) }
    dend_34 { pt3dadd( -6.80178, -25.0362, 6.41352, 0.6 ) }
    dend_34 { pt3dadd( -7.19599, -26.6441, 7.16477, 1.08 ) }
    dend_34 { pt3dadd( -7.51239, -28.3224, 7.92963, 1.08 ) }
    dend_34 { pt3dadd( -7.82991, -30.4076, 8.8312, 0.72 ) }
    dend_34 { pt3dadd( -8.17018, -32.4093, 9.70823, 1.56 ) }
    dend_34 { pt3dadd( -8.4605, -34.1733, 10.5323, 1.56 ) }
    dend_34 { pt3dadd( -8.77481, -36.5629, 11.6657, 0.84 ) }
    dend_34 { pt3dadd( -8.91118, -37.547, 12.1536, 0.84 ) }
    dend_34 { pt3dadd( -9.09155, -38.9213, 12.8292, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_34 { pt3dadd( -9.3607, -40.7809, 13.7305, 1.2 ) }
    dend_34 { pt3dadd( -9.75432, -42.8261, 14.7132, 0.72 ) }
    dend_34 { pt3dadd( -10.1795, -44.3389, 15.5325, 0.72 ) }
    dend_34 { pt3dadd( -10.9048, -46.076, 16.5604, 1.2 ) }
    dend_34 { pt3dadd( -11.3599, -56.1591, 20.4531, 1.2 ) }
    dend_34 { pt3dadd( -12.485, -65.1589, 26.5297, 1.2 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 6/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -5.59914, -21.6905, 4.89488, 0.84 ) }
    dend_33 { pt3dadd( -7.62823, -21.8422, 6.36358, 0.84 ) }
    dend_33 { pt3dadd( -8.43715, -21.9465, 7.05939, 0.84 ) }
    dend_33 { pt3dadd( -8.67265, -21.9702, 7.28942, 1.08 ) }
    dend_33 { pt3dadd( -10.2265, -22.0653, 8.86424, 0.6 ) }
    dend_33 { pt3dadd( -11.3409, -22.1334, 9.99368, 0.6 ) }
    dend_33 { pt3dadd( -13.4346, -22.2615, 12.1156, 0.6 ) }
    dend_33 { pt3dadd( -14.7606, -22.3859, 13.606, 1.08 ) }
    dend_33 { pt3dadd( -16.1157, -22.5233, 15.2426, 1.56 ) }
    dend_33 { pt3dadd( -16.7776, -22.5936, 16.106, 0.96 ) }
    dend_33 { pt3dadd( -26.3429, -20.6495, 22.3919, 0.96 ) }
    dend_33 { pt3dadd( -36.2949, -20.0927, 28.3517, 0.96 ) }
    dend_33 { pt3dadd( -45.5836, -18.578, 35.1544, 0.96 ) }
    dend_33 { pt3dadd( -54.1172, -17.6819, 42.9817, 0.96 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 20/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 17.2466, -95.906, 20.9996, 0.72 ) }
    dend_31 { pt3dadd( 18.5661, -97.2366, 21.415, 0.72 ) }
    dend_31 { pt3dadd( 19.2869, -97.9997, 21.6425, 0.72 ) }
    dend_31 { pt3dadd( 19.7808, -98.4958, 21.8033, 1.2 ) }
    dend_31 { pt3dadd( 20.2508, -98.9572, 21.9589, 1.2 ) }
    dend_31 { pt3dadd( 21.2606, -99.992, 22.2912, 0.48 ) }
    dend_31 { pt3dadd( 22.1132, -100.87, 22.5726, 0.48 ) }
    dend_31 { pt3dadd( 22.8083, -101.571, 22.8526, 0.48 ) }
    dend_31 { pt3dadd( 23.5801, -102.273, 23.2043, 0.96 ) }
    dend_31 { pt3dadd( 24.3282, -102.842, 23.5759, 0.96 ) }
    dend_31 { pt3dadd( 25.6804, -103.7, 24.2897, 0.36 ) }
    dend_31 { pt3dadd( 26.0928, -103.88, 24.5181, 0.36 ) }
    dend_31 { pt3dadd( 27.9271, -104.551, 25.5726, 1.56 ) }
    dend_31 { pt3dadd( 28.6127, -104.758, 25.9804, 1.56 ) }
    dend_31 { pt3dadd( 30.2445, -105.141, 26.9832, 0.72 ) }
    dend_31 { pt3dadd( 30.5817, -105.181, 27.1954, 0.72 ) }
    dend_31 { pt3dadd( 32.2604, -105.163, 28.2595, 1.08 ) }
    dend_31 { pt3dadd( 40.2763, -110.1, 33.3989, 1.08 ) }
    dend_31 { pt3dadd( 46.974, -116.073, 39.179, 1.08 ) }
    dend_31 { pt3dadd( 53.4213, -121.956, 45.3404, 1.08 ) }
    dend_31 { pt3dadd( 59.221, -126.245, 53.3475, 1.08 ) }
    dend_31 { pt3dadd( 64.9233, -131.28, 60.9301, 1.08 ) }
    dend_31 { pt3dadd( 68.94, -137.474, 68.6547, 1.08 ) }
    dend_31 { pt3dadd( 73.4793, -145.045, 74.4838, 1.08 ) }
    dend_31 { pt3dadd( 76.3453, -152.802, 81.0851, 1.08 ) }
    dend_31 { pt3dadd( 78.4503, -160.618, 87.9029, 1.08 ) }
    dend_31 { pt3dadd( 81.3503, -167.792, 95.1866, 1.08 ) }
    dend_31 { pt3dadd( 84.6922, -174.38, 102.879, 1.08 ) }
    dend_31 { pt3dadd( 86.5679, -181.255, 110.804, 1.08 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 49/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 17.2466, -95.906, 20.9996, 0.84 ) }
    dend_30 { pt3dadd( 17.1761, -97.8503, 20.7847, 0.84 ) }
    dend_30 { pt3dadd( 17.2207, -99.3489, 20.6621, 0.6 ) }
    dend_30 { pt3dadd( 17.3031, -100.372, 20.5333, 0.6 ) }
    dend_30 { pt3dadd( 17.3876, -101.962, 20.2336, 1.08 ) }
    dend_30 { pt3dadd( 17.4295, -102.752, 20.0848, 0.36 ) }
    dend_30 { pt3dadd( 17.4541, -103.214, 19.9976, 0.36 ) }
    dend_30 { pt3dadd( 17.6361, -104.895, 19.6872, 1.08 ) }
    dend_30 { pt3dadd( 17.8942, -106.533, 19.3282, 0.72 ) }
    dend_30 { pt3dadd( 18.1694, -108.534, 18.7912, 1.8 ) }
    dend_30 { pt3dadd( 17.0388, -117.084, 16.0577, 1.8 ) }
    dend_30 { pt3dadd( 16.3347, -125.529, 12.8865, 1.8 ) }
    dend_30 { pt3dadd( 15.402, -133.063, 7.822, 1.8 ) }
    dend_30 { pt3dadd( 14.9316, -141.182, 3.80451, 1.8 ) }
    dend_30 { pt3dadd( 14.077, -149.655, 0.745348, 1.8 ) }
    dend_30 { pt3dadd( 14.6979, -157.742, -3.28432, 1.8 ) }
    dend_30 { pt3dadd( 16.3133, -166.071, -6.34936, 1.8 ) }
    dend_30 { pt3dadd( 18.9946, -174.136, -9.39899, 1.8 ) }
    dend_30 { pt3dadd( 19.8303, -182.718, -12.021, 1.8 ) }
    dend_30 { pt3dadd( 19.3927, -191.582, -13.5873, 1.8 ) }
    dend_30 { pt3dadd( 19.016, -200.523, -14.6026, 1.8 ) }
    // Section: dend_20, id: dend_20, parent: dend_16 (entry count 70/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 21.7076, 16.7882, 8.17525, 0.84 ) }
    dend_20 { pt3dadd( 23.9089, 16.504, 9.50095, 0.84 ) }
    dend_20 { pt3dadd( 24.348, 16.4471, 9.69878, 0.84 ) }
    dend_20 { pt3dadd( 24.5206, 16.4253, 9.77204, 0.72 ) }
    dend_20 { pt3dadd( 25.1879, 16.3639, 10.0416, 1.32 ) }
    dend_20 { pt3dadd( 25.5641, 16.3418, 10.178, 1.32 ) }
    dend_20 { pt3dadd( 26.3087, 16.2748, 10.4683, 0.72 ) }
    dend_20 { pt3dadd( 27.2307, 16.1458, 10.8076, 0.72 ) }
    dend_20 { pt3dadd( 27.5536, 16.0727, 10.9791, 0.72 ) }
    dend_20 { pt3dadd( 27.9695, 15.9372, 11.2692, 0.72 ) }
    dend_20 { pt3dadd( 28.4672, 15.7396, 11.6757, 0.72 ) }
    dend_20 { pt3dadd( 29.2054, 15.4328, 12.3106, 0.72 ) }
    dend_20 { pt3dadd( 30.3321, 14.9456, 13.3236, 1.08 ) }
    dend_20 { pt3dadd( 30.6879, 14.7941, 13.6248, 1.08 ) }
    dend_20 { pt3dadd( 31.6464, 14.4124, 14.3852, 0.72 ) }
    dend_20 { pt3dadd( 31.9108, 14.3187, 14.5869, 0.72 ) }
    dend_20 { pt3dadd( 32.3792, 14.2, 14.9126, 0.72 ) }
    dend_20 { pt3dadd( 32.8107, 14.17, 15.1495, 0.72 ) }
    dend_20 { pt3dadd( 33.2536, 14.1983, 15.3388, 1.08 ) }
    dend_20 { pt3dadd( 33.8389, 14.2804, 15.5503, 1.08 ) }
    dend_20 { pt3dadd( 34.3097, 14.3643, 15.6935, 0.6 ) }
    dend_20 { pt3dadd( 34.9134, 14.4471, 15.8658, 0.96 ) }
    dend_20 { pt3dadd( 35.6527, 14.5086, 16.055, 0.96 ) }
    dend_20 { pt3dadd( 35.9529, 14.5114, 16.1149, 0.96 ) }
    dend_20 { pt3dadd( 36.6405, 14.4577, 16.2262, 0.96 ) }
    dend_20 { pt3dadd( 37.041, 14.3866, 16.2368, 0.48 ) }
    dend_20 { pt3dadd( 37.5516, 14.2627, 16.2184, 0.48 ) }
    dend_20 { pt3dadd( 38.0219, 14.1147, 16.1679, 0.96 ) }
    dend_20 { pt3dadd( 38.6378, 13.8645, 16.0563, 0.48 ) }
    dend_20 { pt3dadd( 38.9018, 13.7438, 15.998, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_20 { pt3dadd( 39.8493, 13.2353, 15.7114, 0.84 ) }
    dend_20 { pt3dadd( 46.7319, 13.1866, 18.4592, 0.84 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 2/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 21.7076, 16.7882, 8.17525, 1.2 ) }
    dend_17 { pt3dadd( 21.9325, 17.2435, 10.5342, 1.2 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 4/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -15.8083, 7.22384, 19.0195, 0.84 ) }
    dend_12 { pt3dadd( -16.9448, 8.04872, 15.8874, 0.84 ) }
    dend_12 { pt3dadd( -17.2622, 8.27916, 15.0125, 0.84 ) }
    dend_12 { pt3dadd( -18.6382, 9.27789, 11.2204, 0.84 ) }
    dend_12 { pt3dadd( -19.1119, 9.62175, 9.91472, 0.48 ) }
    dend_12 { pt3dadd( -19.4374, 9.85804, 9.0176, 0.48 ) }
    dend_12 { pt3dadd( -19.9112, 10.2019, 7.71169, 1.32 ) }
    dend_12 { pt3dadd( -21.9772, 10.9331, 0.960562, 1.32 ) }
    dend_12 { pt3dadd( -23.7532, 12.6103, -5.67192, 1.32 ) }
    dend_12 { pt3dadd( -24.5916, 13.1737, -12.7052, 1.32 ) }
    dend_12 { pt3dadd( -26.2512, 12.3887, -19.5865, 1.32 ) }
    dend_12 { pt3dadd( -27.1439, 11.9521, -26.6372, 1.32 ) }
    dend_12 { pt3dadd( -29.5579, 10.3075, -33.1309, 1.32 ) }
    dend_12 { pt3dadd( -31.0471, 7.43705, -39.447, 1.32 ) }
    dend_12 { pt3dadd( -31.2801, 4.15503, -45.7121, 1.32 ) }
    dend_12 { pt3dadd( -31.1498, 0.577336, -51.7993, 1.32 ) }
    dend_12 { pt3dadd( -29.988, -1.99538, -58.3078, 1.32 ) }
    dend_12 { pt3dadd( -28.7231, -4.32278, -64.896, 1.32 ) }
    dend_12 { pt3dadd( -28.5857, -6.93096, -71.4957, 1.32 ) }
    dend_12 { pt3dadd( -26.8549, -9.3385, -77.9431, 1.32 ) }
    dend_12 { pt3dadd( -24.5549, -12.9057, -83.5674, 1.32 ) }
    dend_12 { pt3dadd( -20.7848, -15.4247, -89.0052, 1.32 ) }
    dend_12 { pt3dadd( -15.5276, -16.9613, -93.5237, 1.32 ) }
    dend_12 { pt3dadd( -10.5105, -18.3599, -98.3568, 1.32 ) }
    dend_12 { pt3dadd( -4.91217, -20.5311, -102.101, 1.32 ) }
    dend_12 { pt3dadd( 0.0641966, -22.6199, -106.692, 1.32 ) }
    dend_12 { pt3dadd( 4.35978, -25.1689, -111.702, 1.32 ) }
    dend_12 { pt3dadd( 8.98306, -28.2662, -116.023, 1.32 ) }
    dend_12 { pt3dadd( 13.5132, -30.1925, -121.132, 1.32 ) }
    dend_12 { pt3dadd( 18.2518, -32.8177, -125.67, 1.32 ) }
    dend_12 { pt3dadd( 23.3818, -35.0864, -129.986, 1.32 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 35/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -15.8083, 7.22384, 19.0195, 0.84 ) }
    dend_11 { pt3dadd( -15.6041, 6.44732, 19.6363, 0.84 ) }
    dend_11 { pt3dadd( -15.3114, 6.18585, 19.8609, 0.84 ) }
    dend_11 { pt3dadd( -14.2552, 5.68543, 20.2525, 0.84 ) }
    dend_11 { pt3dadd( -13.6787, 5.39265, 20.3778, 0.84 ) }
    dend_11 { pt3dadd( -12.8396, 4.8599, 20.4789, 0.84 ) }
    dend_11 { pt3dadd( -11.9098, 4.26465, 20.8201, 1.2 ) }
    dend_11 { pt3dadd( -10.8456, 3.71523, 21.0319, 1.2 ) }
    dend_11 { pt3dadd( -10.3624, 3.49174, 21.1035, 0.72 ) }
    dend_11 { pt3dadd( -9.51216, 3.1381, 21.1624, 0.72 ) }
    dend_11 { pt3dadd( -8.60937, 2.73574, 21.194, 1.2 ) }
    dend_11 { pt3dadd( -6.09513, 1.32012, 21.1376, 0.72 ) }
    dend_11 { pt3dadd( -3.93032, -0.299094, 21.3151, 0.72 ) }
    dend_11 { pt3dadd( 3.4097, -5.82731, 24.3946, 0.72 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 49/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 3.17528, 16.6745, -0.10156, 1.8 ) }
    dend_7 { pt3dadd( 3.04437, 16.7879, -0.306421, 1.8 ) }
    dend_7 { pt3dadd( 1.68615, 18.3946, -2.59691, 0.96 ) }
    dend_7 { pt3dadd( 0.225221, 20.5182, -5.01657, 0.96 ) }
    dend_7 { pt3dadd( -0.849496, 22.2557, -6.61972, 0.96 ) }
    dend_7 { pt3dadd( -1.29673, 22.958, -7.1828, 0.96 ) }
    dend_7 { pt3dadd( -1.92509, 23.8401, -7.94248, 0.96 ) }
    dend_7 { pt3dadd( -2.7426, 24.9441, -8.89999, 0.6 ) }
    dend_7 { pt3dadd( -3.49407, 25.9566, -9.69424, 0.6 ) }
    dend_7 { pt3dadd( -4.36639, 26.9953, -10.4746, 1.44 ) }
    dend_7 { pt3dadd( -5.18459, 27.8787, -11.198, 1.44 ) }
    dend_7 { pt3dadd( -8.15044, 30.7958, -13.8126, 0.84 ) }
    dend_7 { pt3dadd( -9.1904, 31.723, -14.7071, 0.48 ) }
    dend_7 { pt3dadd( -10.1214, 32.5142, -15.5518, 0.48 ) }
    dend_7 { pt3dadd( -10.7269, 33.0625, -16.1343, 0.48 ) }
    dend_7 { pt3dadd( -11.9182, 34.2836, -17.3412, 0.96 ) }
    dend_7 { pt3dadd( -12.6932, 35.2911, -18.1313, 0.96 ) }
    dend_7 { pt3dadd( -13.0427, 35.877, -18.4477, 0.96 ) }
    dend_7 { pt3dadd( -14.3242, 38.4394, -19.7019, 0.48 ) }
    dend_7 { pt3dadd( -14.8662, 39.5806, -20.2705, 0.48 ) }
    dend_7 { pt3dadd( -15.3196, 40.5168, -20.721, 0.48 ) }
    dend_7 { pt3dadd( -16.1625, 42.1664, -21.4645, 1.44 ) }
    dend_7 { pt3dadd( -16.6339, 43.0923, -21.846, 1.44 ) }
    dend_7 { pt3dadd( -17.5402, 44.7541, -22.4385, 0.84 ) }
    dend_7 { pt3dadd( -18.175, 45.8067, -22.7301, 0.84 ) }
    dend_7 { pt3dadd( -18.8981, 46.8581, -23.0095, 0.84 ) }
    dend_7 { pt3dadd( -20.232, 48.5548, -23.4941, 1.68 ) }
    dend_7 { pt3dadd( -20.9574, 49.3427, -23.732, 1.68 ) }
    dend_7 { pt3dadd( -21.8665, 50.2806, -23.9964, 0.84 ) }
    dend_7 { pt3dadd( -22.2242, 50.6511, -24.1023, 0.84 ) }
    dend_7 { pt3dadd( -23.2942, 51.8158, -24.4488, 1.2 ) }
    dend_7 { pt3dadd( -25.2629, 54.059, -25.1236, 0.6 ) }
    dend_7 { pt3dadd( -26.3023, 55.2944, -25.699, 0.96 ) }
    dend_7 { pt3dadd( -27.0057, 56.1439, -26.1912, 1.32 ) }
    dend_7 { pt3dadd( -27.9875, 57.4333, -26.9843, 0.36 ) }
    dend_7 { pt3dadd( -28.4086, 58.0462, -27.3454, 0.36 ) }
    dend_7 { pt3dadd( -29.063, 59.1289, -27.9394, 0.72 ) }
    dend_7 { pt3dadd( -31.2004, 63.1579, -30.1109, 0.72 ) }
    dend_7 { pt3dadd( -31.7011, 64.2303, -30.6762, 0.72 ) }
    dend_7 { pt3dadd( -32.5072, 66.1396, -31.6374, 0.72 ) }
    dend_7 { pt3dadd( -33.1677, 68.0995, -32.6131, 0.6 ) }
    dend_7 { pt3dadd( -33.4928, 69.3929, -33.221, 0.6 ) }
    dend_7 { pt3dadd( -33.7929, 71.2973, -33.9988, 1.56 ) }
    dend_7 { pt3dadd( -33.8765, 72.5292, -34.3456, 1.56 ) }
    dend_7 { pt3dadd( -33.8853, 73.3059, -34.5887, 1.56 ) }
    dend_7 { pt3dadd( -33.8084, 76.2163, -35.6008, 0.84 ) }
    dend_7 { pt3dadd( -33.6921, 77.7331, -36.152, 0.84 ) }
    dend_7 { pt3dadd( -33.5649, 78.9495, -36.5606, 0.84 ) }
    dend_7 { pt3dadd( -33.338, 80.8105, -37.0228, 1.44 ) }
    dend_7 { pt3dadd( -33.1464, 82.613, -37.4635, 1.08 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 99/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 3.17528, 16.6745, -0.10156, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_2 { pt3dadd( 3.72784, 18.0887, -1.00675, 1.44 ) }
    dend_2 { pt3dadd( 4.02129, 18.7199, -1.41265, 1.44 ) }
    dend_2 { pt3dadd( 4.42651, 19.5075, -1.8881, 1.44 ) }
    dend_2 { pt3dadd( 4.80186, 20.1677, -2.26472, 1.2 ) }
    dend_2 { pt3dadd( 5.21202, 20.829, -2.62892, 1.2 ) }
    dend_2 { pt3dadd( 5.98458, 21.9549, -3.2209, 1.08 ) }
    dend_2 { pt3dadd( 6.828, 22.978, -3.69598, 0.96 ) }
    dend_2 { pt3dadd( 7.57979, 23.7595, -4.05179, 0.96 ) }
    dend_2 { pt3dadd( 8.18853, 24.3332, -4.29895, 0.96 ) }
    dend_2 { pt3dadd( 8.57802, 24.6955, -4.43819, 0.96 ) }
    dend_2 { pt3dadd( 9.42453, 25.5194, -4.68778, 1.32 ) }
    dend_2 { pt3dadd( 9.97388, 26.0756, -4.76977, 0.84 ) }
    dend_2 { pt3dadd( 10.2845, 26.4053, -4.77125, 0.84 ) }
    dend_2 { pt3dadd( 11.2923, 27.5485, -4.68807, 0.84 ) }
    dend_2 { pt3dadd( 12.1457, 28.5943, -4.55524, 0.84 ) }
    dend_2 { pt3dadd( 12.6535, 29.2605, -4.44338, 0.84 ) }
    dend_2 { pt3dadd( 13.5605, 30.5144, -4.18468, 1.44 ) }
    dend_2 { pt3dadd( 14.0958, 31.2656, -4.0072, 1.44 ) }
    dend_2 { pt3dadd( 14.3179, 31.5615, -3.92076, 1.44 ) }
    dend_2 { pt3dadd( 14.6499, 31.9528, -3.76061, 1.44 ) }
    dend_2 { pt3dadd( 14.9605, 32.2647, -3.62837, 1.44 ) }
    dend_2 { pt3dadd( 15.3445, 32.6241, -3.50186, 1.44 ) }
    dend_2 { pt3dadd( 15.4504, 32.7396, -3.4852, 1.44 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 23/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 21.9325, 17.2435, 10.5342, 0.6 ) }
    dend_19 { pt3dadd( 22.9392, 17.8274, 11.1489, 0.6 ) }
    dend_19 { pt3dadd( 24.1637, 18.4602, 11.7786, 0.6 ) }
    dend_19 { pt3dadd( 24.9782, 18.8699, 12.2104, 0.6 ) }
    dend_19 { pt3dadd( 25.5995, 19.198, 12.5424, 0.48 ) }
    dend_19 { pt3dadd( 26.3944, 19.6299, 12.9708, 1.08 ) }
    dend_19 { pt3dadd( 26.8835, 19.9087, 13.2534, 1.08 ) }
    dend_19 { pt3dadd( 27.2708, 20.131, 13.4738, 1.08 ) }
    dend_19 { pt3dadd( 28.1736, 20.686, 13.9324, 0.48 ) }
    dend_19 { pt3dadd( 28.6289, 21.0228, 14.1827, 0.48 ) }
    dend_19 { pt3dadd( 28.9418, 21.2894, 14.3689, 0.48 ) }
    dend_19 { pt3dadd( 29.5248, 21.8049, 14.7216, 0.48 ) }
    dend_19 { pt3dadd( 30.2114, 22.3677, 15.0868, 1.2 ) }
    dend_19 { pt3dadd( 30.4335, 22.5045, 15.177, 1.2 ) }
    dend_19 { pt3dadd( 30.9282, 22.7161, 15.3128, 0.72 ) }
    dend_19 { pt3dadd( 31.2923, 22.8384, 15.4353, 0.72 ) }
    dend_19 { pt3dadd( 31.8879, 23.0012, 15.6821, 0.72 ) }
    dend_19 { pt3dadd( 32.4532, 23.1259, 15.9433, 1.32 ) }
    dend_19 { pt3dadd( 33.6212, 23.3694, 16.5649, 0.6 ) }
    dend_19 { pt3dadd( 33.9729, 23.4436, 16.7702, 0.6 ) }
    dend_19 { pt3dadd( 35.5334, 23.7667, 17.7836, 0.6 ) }
    dend_19 { pt3dadd( 36.3411, 23.9441, 18.3517, 0.6 ) }
    dend_19 { pt3dadd( 36.75, 24.044, 18.6653, 0.6 ) }
    dend_19 { pt3dadd( 37.3317, 24.1959, 19.1511, 1.2 ) }
    dend_19 { pt3dadd( 37.6046, 24.2762, 19.3986, 1.2 ) }
    dend_19 { pt3dadd( 37.9251, 24.3656, 19.6878, 1.2 ) }
    dend_19 { pt3dadd( 38.7007, 24.47, 20.23, 0.72 ) }
    dend_19 { pt3dadd( 46.3817, 27.0935, 25.6068, 0.72 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 51/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 21.9325, 17.2435, 10.5342, 1.32 ) }
    dend_18 { pt3dadd( 21.792, 17.7725, 9.6488, 1.32 ) }
    dend_18 { pt3dadd( 21.4127, 18.6286, 8.10622, 1.32 ) }
    dend_18 { pt3dadd( 20.94, 19.51, 6.52786, 0.84 ) }
    dend_18 { pt3dadd( 20.3772, 20.4909, 4.83526, 0.6 ) }
    dend_18 { pt3dadd( 20.057, 21.0556, 3.9097, 0.6 ) }
    dend_18 { pt3dadd( 19.748, 21.6176, 3.00578, 0.6 ) }
    dend_18 { pt3dadd( 19.1891, 22.7429, 1.22224, 0.6 ) }
    dend_18 { pt3dadd( 19.0348, 23.0569, 0.774365, 1.08 ) }
    dend_18 { pt3dadd( 18.9048, 23.3796, 0.40346, 1.08 ) }
    dend_18 { pt3dadd( 18.7985, 23.8095, 0.0203749, 1.08 ) }
    dend_18 { pt3dadd( 18.7636, 24.3961, -0.42524, 0.48 ) }
    dend_18 { pt3dadd( 18.8246, 25.4421, -1.09859, 0.48 ) }
    dend_18 { pt3dadd( 18.8667, 25.8048, -1.30265, 0.48 ) }
    dend_18 { pt3dadd( 18.9529, 26.6324, -1.82841, 0.48 ) }
    dend_18 { pt3dadd( 18.9956, 27.2517, -2.25535, 0.48 ) }
    dend_18 { pt3dadd( 19.0205, 28.7655, -3.34043, 1.2 ) }
    dend_18 { pt3dadd( 18.9956, 29.1897, -3.64137, 1.2 ) }
    dend_18 { pt3dadd( 18.9484, 29.5108, -3.87855, 1.2 ) }
    dend_18 { pt3dadd( 18.6279, 30.9363, -4.98695, 0.6 ) }
    dend_18 { pt3dadd( 18.4284, 31.6282, -5.54512, 0.6 ) }
    dend_18 { pt3dadd( 18.2511, 32.1645, -5.96026, 0.6 ) }
    dend_18 { pt3dadd( 17.966, 32.8146, -6.37093, 0.84 ) }
    dend_18 { pt3dadd( 17.7543, 33.1711, -6.58049, 0.84 ) }
    dend_18 { pt3dadd( 17.1909, 33.846, -6.90874, 0.84 ) }
    dend_18 { pt3dadd( 16.6748, 34.1665, -6.99902, 0.84 ) }
    dend_18 { pt3dadd( 15.6492, 34.3759, -6.97506, 1.2 ) }
    dend_18 { pt3dadd( 14.1586, 34.3279, -7.0027, 0.84 ) }
    dend_18 { pt3dadd( 12.4668, 34.0187, -6.9464, 0.48 ) }
    dend_18 { pt3dadd( 11.1878, 33.7164, -6.88101, 0.48 ) }
    dend_18 { pt3dadd( 9.03084, 33.0825, -6.72763, 1.08 ) }
    dend_18 { pt3dadd( 7.27788, 32.4671, -6.60301, 0.48 ) }
    dend_18 { pt3dadd( 5.03522, 31.5052, -6.4615, 0.84 ) }
    dend_18 { pt3dadd( 3.20315, 30.5858, -6.40472, 0.36 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 85/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -33.1464, 82.613, -37.4635, 0.6 ) }
    dend_9 { pt3dadd( -32.8715, 82.7523, -35.9306, 0.6 ) }
    dend_9 { pt3dadd( -32.6909, 82.8319, -34.9645, 0.6 ) }
    dend_9 { pt3dadd( -32.6107, 82.89, -34.3264, 1.08 ) }
    dend_9 { pt3dadd( -32.5559, 82.9646, -33.6044, 0.48 ) }
    dend_9 { pt3dadd( -32.462, 83.191, -31.6728, 0.72 ) }
    dend_9 { pt3dadd( -32.4004, 83.3921, -29.9698, 0.72 ) }
    dend_9 { pt3dadd( -32.375, 83.4467, -29.1333, 0.96 ) }
    dend_9 { pt3dadd( -32.3229, 83.5292, -27.7315, 0.6 ) }
    dend_9 { pt3dadd( -32.3156, 83.5548, -27.1941, 0.6 ) }
    dend_9 { pt3dadd( -32.3686, 83.617, -25.7655, 0.6 ) }
    dend_9 { pt3dadd( -32.3831, 83.6341, -25.5059, 0.6 ) }
    dend_9 { pt3dadd( -32.4699, 83.7459, -23.7404, 0.6 ) }
    dend_9 { pt3dadd( -32.4978, 83.7663, -22.9749, 0.84 ) }
    dend_9 { pt3dadd( -32.4618, 83.7644, -20.6348, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_9 { pt3dadd( -32.4407, 83.7518, -19.8158, 1.2 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 1/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -33.1464, 82.613, -37.4635, 0.6 ) }
    dend_8 { pt3dadd( -33.1328, 83.4598, -37.8779, 0.6 ) }
    dend_8 { pt3dadd( -33.1299, 83.9168, -38.0095, 0.6 ) }
    dend_8 { pt3dadd( -33.1201, 84.9527, -38.2266, 0.96 ) }
    dend_8 { pt3dadd( -33.1157, 85.3923, -38.3893, 0.96 ) }
    dend_8 { pt3dadd( -33.1095, 85.8455, -38.5889, 0.6 ) }
    dend_8 { pt3dadd( -33.0928, 86.3506, -38.8298, 0.6 ) }
    dend_8 { pt3dadd( -33.0511, 87.3661, -39.3402, 1.08 ) }
    dend_8 { pt3dadd( -33.0428, 87.5368, -39.4588, 1.08 ) }
    dend_8 { pt3dadd( -32.9395, 89.1115, -40.6327, 0.6 ) }
    dend_8 { pt3dadd( -32.921, 89.3358, -40.8213, 0.6 ) }
    dend_8 { pt3dadd( -32.8889, 89.6111, -41.0451, 0.6 ) }
    dend_8 { pt3dadd( -32.7508, 90.5674, -41.7781, 1.44 ) }
    dend_8 { pt3dadd( -32.4649, 92.385, -43.0541, 0.84 ) }
    dend_8 { pt3dadd( -32.3276, 93.2972, -43.6195, 0.72 ) }
    dend_8 { pt3dadd( -32.2378, 93.9317, -43.9377, 0.72 ) }
    dend_8 { pt3dadd( -32.0676, 95.1791, -44.5278, 0.72 ) }
    dend_8 { pt3dadd( -31.9845, 95.8005, -44.7893, 0.72 ) }
    dend_8 { pt3dadd( -31.9251, 96.245, -44.9261, 0.96 ) }
    dend_8 { pt3dadd( -31.7499, 97.755, -45.1882, 0.6 ) }
    dend_8 { pt3dadd( -31.7298, 98.113, -45.2564, 0.6 ) }
    dend_8 { pt3dadd( -31.71, 98.8477, -45.3965, 0.6 ) }
    dend_8 { pt3dadd( -31.7075, 99.2529, -45.5015, 0.6 ) }
    dend_8 { pt3dadd( -31.7078, 100.334, -45.7405, 1.2 ) }
    dend_8 { pt3dadd( -31.706, 100.516, -45.7684, 1.44 ) }
    dend_8 { pt3dadd( -31.7365, 101.128, -45.853, 1.44 ) }
    dend_8 { pt3dadd( -31.7933, 101.64, -45.9447, 1.44 ) }
    dend_8 { pt3dadd( -32.067, 103.037, -46.1673, 0.6 ) }
    dend_8 { pt3dadd( -32.2001, 103.487, -46.2496, 0.6 ) }
    dend_8 { pt3dadd( -32.6045, 104.514, -46.4559, 1.2 ) }
    dend_8 { pt3dadd( -33.3999, 106.106, -46.9015, 0.6 ) }
    dend_8 { pt3dadd( -33.6099, 106.44, -47.024, 0.6 ) }
    dend_8 { pt3dadd( -34.3332, 107.341, -47.4291, 0.96 ) }
    dend_8 { pt3dadd( -35.3024, 108.287, -47.9394, 1.44 ) }
    dend_8 { pt3dadd( -35.6415, 108.572, -48.1193, 1.44 ) }
    dend_8 { pt3dadd( -36.8933, 109.479, -48.7802, 0.72 ) }
    dend_8 { pt3dadd( -37.3106, 109.763, -48.987, 0.72 ) }
    dend_8 { pt3dadd( -37.7427, 110.057, -49.2037, 0.72 ) }
    dend_8 { pt3dadd( -38.0928, 110.306, -49.4253, 0.72 ) }
    dend_8 { pt3dadd( -38.3422, 110.489, -49.5717, 0.72 ) }
    dend_8 { pt3dadd( -38.7803, 110.83, -49.8088, 0.72 ) }
    dend_8 { pt3dadd( -39.4115, 111.38, -50.0862, 1.08 ) }
    dend_8 { pt3dadd( -39.5834, 111.558, -50.1904, 0.6 ) }
    dend_8 { pt3dadd( -40.3807, 112.622, -51.1066, 0.6 ) }
    dend_8 { pt3dadd( -40.6176, 113.006, -51.5715, 0.6 ) }
    dend_8 { pt3dadd( -40.8605, 113.444, -52.2667, 0.6 ) }
    dend_8 { pt3dadd( -41.0729, 113.834, -53.0351, 1.56 ) }
    dend_8 { pt3dadd( -41.3979, 114.482, -54.3731, 1.56 ) }
    dend_8 { pt3dadd( -41.8912, 115.457, -56.4141, 1.56 ) }
    dend_8 { pt3dadd( -42.2886, 116.303, -58.1506, 1.2 ) }
    dend_8 { pt3dadd( -42.5501, 116.926, -59.3856, 1.2 ) }
    dend_8 { pt3dadd( -42.7273, 117.413, -60.3032, 1.2 ) }
    dend_8 { pt3dadd( -42.9299, 117.931, -61.3252, 0.6 ) }
    dend_8 { pt3dadd( -43.0624, 118.209, -61.8054, 0.6 ) }
    dend_8 { pt3dadd( -43.3227, 118.712, -62.2701, 0.72 ) }
    dend_8 { pt3dadd( -43.5883, 119.575, -62.4319, 0.96 ) }
    dend_8 { pt3dadd( -43.804, 120.566, -62.3814, 1.44 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 58/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 15.4504, 32.7396, -3.4852, 1.08 ) }
    dend_6 { pt3dadd( 15.9903, 33.2155, -3.53177, 1.08 ) }
    dend_6 { pt3dadd( 16.6309, 33.7335, -3.59474, 0.72 ) }
    dend_6 { pt3dadd( 17.1826, 34.1197, -3.65947, 0.72 ) }
    dend_6 { pt3dadd( 18.1563, 34.7283, -3.78751, 0.72 ) }
    dend_6 { pt3dadd( 19.6412, 35.5882, -3.99693, 1.2 ) }
    dend_6 { pt3dadd( 20.4954, 36.0592, -4.12253, 1.68 ) }
    dend_6 { pt3dadd( 21.1761, 36.3865, -4.25349, 1.32 ) }
    dend_6 { pt3dadd( 22.5696, 36.9737, -4.56217, 0.96 ) }
    dend_6 { pt3dadd( 23.6514, 37.3804, -4.82988, 0.96 ) }
    dend_6 { pt3dadd( 24.5281, 37.6563, -5.00625, 0.6 ) }
    dend_6 { pt3dadd( 25.03, 37.7941, -5.08579, 0.6 ) }
    dend_6 { pt3dadd( 26.9075, 38.2698, -5.29634, 1.8 ) }
    dend_6 { pt3dadd( 27.1828, 38.3463, -5.31522, 1.8 ) }
    dend_6 { pt3dadd( 27.8173, 38.5345, -5.33545, 1.8 ) }
    dend_6 { pt3dadd( 29.8955, 39.1859, -5.34067, 0.84 ) }
    dend_6 { pt3dadd( 30.779, 39.4903, -5.35042, 0.6 ) }
    dend_6 { pt3dadd( 31.6349, 39.8104, -5.33428, 0.6 ) }
    dend_6 { pt3dadd( 32.904, 40.3054, -5.17569, 1.8 ) }
    dend_6 { pt3dadd( 33.5027, 40.5492, -5.08287, 1.8 ) }
    dend_6 { pt3dadd( 34.034, 40.7768, -4.9956, 1.8 ) }
    dend_6 { pt3dadd( 35.3407, 41.3971, -4.78803, 0.96 ) }
    dend_6 { pt3dadd( 37.1206, 42.2597, -4.19902, 0.96 ) }
    dend_6 { pt3dadd( 38.8686, 43.1152, -3.40428, 2.16 ) }
    dend_6 { pt3dadd( 39.2381, 43.2898, -3.19915, 2.16 ) }
    dend_6 { pt3dadd( 39.824, 43.568, -2.84247, 2.16 ) }
    dend_6 { pt3dadd( 41.1169, 44.1772, -2.01617, 0.84 ) }
    dend_6 { pt3dadd( 43.3654, 45.2332, -0.516196, 0.84 ) }
    dend_6 { pt3dadd( 44.0219, 45.5446, -0.138944, 0.84 ) }
    dend_6 { pt3dadd( 44.6716, 45.8395, 0.142076, 0.84 ) }
    dend_6 { pt3dadd( 45.4182, 46.1417, 0.410681, 0.84 ) }
    dend_6 { pt3dadd( 46.0267, 46.3552, 0.545285, 0.84 ) }
    dend_6 { pt3dadd( 46.5317, 46.5093, 0.552655, 0.84 ) }
    dend_6 { pt3dadd( 47.6749, 46.8414, 0.418509, 1.44 ) }
    dend_6 { pt3dadd( 48.2856, 47.0017, 0.371416, 1.44 ) }
    dend_6 { pt3dadd( 48.5602, 47.0709, 0.364974, 1.44 ) }
    dend_6 { pt3dadd( 49.6057, 47.3136, 0.442315, 0.72 ) }
    dend_6 { pt3dadd( 50.2804, 47.4656, 0.573554, 0.72 ) }
    dend_6 { pt3dadd( 51.8688, 47.8045, 1.09835, 0.72 ) }
    dend_6 { pt3dadd( 52.5016, 47.9604, 1.367, 0.72 ) }
    dend_6 { pt3dadd( 53.0847, 48.139, 1.63908, 1.2 ) }
    dend_6 { pt3dadd( 53.7862, 48.4086, 1.95087, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_6 { pt3dadd( 54.5289, 48.7496, 2.24971, 0.48 ) }
    dend_6 { pt3dadd( 55.2742, 49.1448, 2.4657, 0.48 ) }
    dend_6 { pt3dadd( 56.5667, 49.951, 2.63014, 1.68 ) }
    dend_6 { pt3dadd( 57.2468, 50.3805, 2.62778, 1.68 ) }
    dend_6 { pt3dadd( 58.3216, 51.0371, 2.41413, 0.96 ) }
    dend_6 { pt3dadd( 59.1152, 51.4823, 2.2862, 0.96 ) }
    dend_6 { pt3dadd( 59.6928, 51.7677, 2.2132, 0.96 ) }
    dend_6 { pt3dadd( 60.2187, 51.9783, 2.17666, 1.44 ) }
    dend_6 { pt3dadd( 61.0748, 52.2263, 2.18901, 1.44 ) }
    dend_6 { pt3dadd( 62.5364, 52.5405, 2.30922, 1.44 ) }
    dend_6 { pt3dadd( 65.5624, 53.0726, 2.71343, 0.72 ) }
    dend_6 { pt3dadd( 66.1424, 53.166, 2.79869, 0.72 ) }
    dend_6 { pt3dadd( 67.3889, 53.3688, 2.99044, 0.72 ) }
    dend_6 { pt3dadd( 67.7976, 53.4237, 3.03579, 1.2 ) }
    dend_6 { pt3dadd( 69.4275, 53.5734, 3.13735, 0.72 ) }
    dend_6 { pt3dadd( 69.9523, 53.5846, 3.13569, 0.72 ) }
    dend_6 { pt3dadd( 70.2094, 53.57, 3.09095, 0.72 ) }
    dend_6 { pt3dadd( 71.9709, 53.3422, 2.73162, 1.68 ) }
    dend_6 { pt3dadd( 73.2347, 53.0191, 2.37688, 0.48 ) }
    dend_6 { pt3dadd( 74.0141, 52.7105, 2.0745, 0.48 ) }
    dend_6 { pt3dadd( 74.5929, 52.3436, 1.75904, 0.48 ) }
    dend_6 { pt3dadd( 74.8403, 52.1367, 1.60629, 0.48 ) }
    dend_6 { pt3dadd( 75.1879, 51.7885, 1.37991, 0.48 ) }
    dend_6 { pt3dadd( 75.7235, 51.2105, 1.0332, 0.48 ) }
    dend_6 { pt3dadd( 75.9682, 51.0053, 0.909175, 0.48 ) }
    dend_6 { pt3dadd( 76.6644, 50.5424, 0.591109, 0.96 ) }
    dend_6 { pt3dadd( 77.5164, 50.0746, 0.318006, 0.96 ) }
    dend_6 { pt3dadd( 78.3769, 49.6532, 0.114029, 0.48 ) }
    dend_6 { pt3dadd( 79.445, 49.1591, -0.00750542, 0.48 ) }
    dend_6 { pt3dadd( 80.9835, 48.4489, -0.0600077, 0.84 ) }
    dend_6 { pt3dadd( 81.8154, 48.0568, -0.0513349, 0.36 ) }
    dend_6 { pt3dadd( 83.4286, 47.2819, 0.00647801, 1.08 ) }
    dend_6 { pt3dadd( 84.0822, 46.9559, 0.0414154, 1.08 ) }
    dend_6 { pt3dadd( 85.9365, 45.9563, 0.172312, 0.6 ) }
    dend_6 { pt3dadd( 86.5126, 45.6081, 0.219922, 0.6 ) }
    dend_6 { pt3dadd( 86.8736, 45.3594, 0.250013, 0.6 ) }
    dend_6 { pt3dadd( 88.1941, 44.388, 0.354482, 1.2 ) }
    dend_6 { pt3dadd( 88.5571, 44.1197, 0.367061, 1.2 ) }
    dend_6 { pt3dadd( 88.9168, 43.8604, 0.380198, 1.2 ) }
    dend_6 { pt3dadd( 89.8058, 43.2439, 0.389146, 0.6 ) }
    dend_6 { pt3dadd( 90.4299, 42.8407, 0.418164, 0.6 ) }
    dend_6 { pt3dadd( 91.7893, 41.978, 0.530138, 0.6 ) }
    dend_6 { pt3dadd( 93.1197, 41.1453, 0.664935, 1.2 ) }
    dend_6 { pt3dadd( 93.7991, 40.7214, 0.740959, 0.48 ) }
    dend_6 { pt3dadd( 94.8392, 40.085, 0.871398, 0.48 ) }
    dend_6 { pt3dadd( 95.7336, 39.5297, 0.979756, 1.08 ) }
    dend_6 { pt3dadd( 96.4165, 39.0983, 1.0505, 0.36 ) }
    dend_6 { pt3dadd( 97.3181, 38.5095, 1.11202, 0.36 ) }
    dend_6 { pt3dadd( 98.2748, 37.866, 1.17042, 1.2 ) }
    dend_6 { pt3dadd( 99.0745, 37.3085, 1.20646, 0.6 ) }
    dend_6 { pt3dadd( 99.9496, 36.6962, 1.20579, 0.6 ) }
    dend_6 { pt3dadd( 100.164, 36.5472, 1.19435, 0.6 ) }
    dend_6 { pt3dadd( 101.553, 35.5727, 1.06154, 0.48 ) }
    dend_6 { pt3dadd( 102.907, 34.6081, 0.884315, 0.48 ) }
    dend_6 { pt3dadd( 103.455, 34.236, 0.785346, 0.48 ) }
    dend_6 { pt3dadd( 104.81, 33.3512, 0.504463, 1.2 ) }
    dend_6 { pt3dadd( 105.259, 33.0881, 0.421883, 1.2 ) }
    dend_6 { pt3dadd( 106.233, 32.5338, 0.184646, 0.72 ) }
    dend_6 { pt3dadd( 107.214, 32.0067, -0.112813, 0.96 ) }
    dend_6 { pt3dadd( 108.241, 31.539, -0.473175, 0.72 ) }
    dend_6 { pt3dadd( 108.98, 31.2261, -0.760603, 0.6 ) }
    dend_6 { pt3dadd( 110.561, 30.6007, -1.37114, 0.6 ) }
    dend_6 { pt3dadd( 112.319, 29.9534, -2.03573, 1.08 ) }
    dend_6 { pt3dadd( 113.012, 29.7217, -2.29351, 1.08 ) }
    dend_6 { pt3dadd( 113.99, 29.3685, -2.72185, 0.48 ) }
    dend_6 { pt3dadd( 114.785, 29.0176, -3.11887, 0.48 ) }
    dend_6 { pt3dadd( 115.815, 28.5271, -3.81013, 0.48 ) }
    dend_6 { pt3dadd( 116.112, 28.3726, -4.03522, 0.48 ) }
    dend_6 { pt3dadd( 116.449, 28.1897, -4.26809, 0.48 ) }
    dend_6 { pt3dadd( 117.748, 27.3575, -5.33205, 1.08 ) }
    dend_6 { pt3dadd( 118.298, 26.9484, -5.90379, 1.08 ) }
    dend_6 { pt3dadd( 119.367, 26.1421, -7.45431, 0.48 ) }
    dend_6 { pt3dadd( 129.131, 24.2534, -6.70273, 0.48 ) }
    dend_6 { pt3dadd( 138.617, 21.6849, -5.08981, 0.48 ) }
    dend_6 { pt3dadd( 147.858, 18.083, -4.71655, 0.48 ) }
    dend_6 { pt3dadd( 156.953, 14.2732, -5.73278, 0.48 ) }
    dend_6 { pt3dadd( 165.106, 8.83767, -6.56449, 0.48 ) }
    dend_6 { pt3dadd( 174.39, 5.38917, -5.83436, 0.48 ) }
    dend_6 { pt3dadd( 183.948, 2.64726, -5.38488, 0.48 ) }
    dend_6 { pt3dadd( 193.511, -0.0977134, -5.60564, 0.48 ) }
    dend_6 { pt3dadd( 202.674, -3.83891, -4.93308, 0.48 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 81/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 15.4504, 32.7396, -3.4852, 1.32 ) }
    dend_3 { pt3dadd( 15.6812, 33.3014, -4.05869, 1.32 ) }
    dend_3 { pt3dadd( 15.8909, 33.8135, -4.5243, 1.32 ) }
    dend_3 { pt3dadd( 16.3498, 34.9512, -5.48525, 0.72 ) }
    dend_3 { pt3dadd( 16.6176, 35.5797, -5.99246, 0.72 ) }
    dend_3 { pt3dadd( 16.9139, 36.2387, -6.50531, 0.72 ) }
    dend_3 { pt3dadd( 17.4316, 37.3297, -7.30743, 1.8 ) }
    dend_3 { pt3dadd( 17.7313, 37.9249, -7.71269, 1.8 ) }
    dend_3 { pt3dadd( 17.8453, 38.1515, -7.8399, 1.8 ) }
    dend_3 { pt3dadd( 18.1335, 38.6914, -8.04444, 1.8 ) }
    dend_3 { pt3dadd( 18.2855, 38.9617, -8.12204, 1.8 ) }
    dend_3 { pt3dadd( 18.6612, 39.5745, -8.23431, 0.84 ) }
    dend_3 { pt3dadd( 18.9949, 40.0439, -8.30486, 0.84 ) }
    dend_3 { pt3dadd( 19.3119, 40.4785, -8.3747, 0.84 ) }
    dend_3 { pt3dadd( 19.5929, 40.838, -8.43776, 0.84 ) }
    dend_3 { pt3dadd( 20.0087, 41.3397, -8.53169, 0.84 ) }
    dend_3 { pt3dadd( 20.7805, 42.2084, -8.73327, 0.72 ) }
    dend_3 { pt3dadd( 21.1173, 42.564, -8.83683, 0.72 ) }
    dend_3 { pt3dadd( 21.4208, 42.8717, -8.93849, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_3 { pt3dadd( 21.9066, 43.3617, -9.11671, 0.72 ) }
    dend_3 { pt3dadd( 22.2676, 43.7381, -9.2662, 0.72 ) }
    dend_3 { pt3dadd( 22.749, 44.271, -9.47778, 0.72 ) }
    dend_3 { pt3dadd( 23.4218, 45.044, -9.78343, 1.68 ) }
    dend_3 { pt3dadd( 23.7032, 45.3808, -9.90861, 1.68 ) }
    dend_3 { pt3dadd( 24.2028, 45.9889, -10.1232, 1.68 ) }
    dend_3 { pt3dadd( 24.4596, 46.3011, -10.2288, 2.04 ) }
    dend_3 { pt3dadd( 25.1389, 47.1416, -10.5162, 1.44 ) }
    dend_3 { pt3dadd( 25.3363, 47.3894, -10.5984, 0.96 ) }
    dend_3 { pt3dadd( 25.733, 47.9051, -10.7839, 0.96 ) }
    dend_3 { pt3dadd( 26.2928, 48.6115, -10.9746, 1.32 ) }
    dend_3 { pt3dadd( 26.8742, 49.3262, -11.1045, 1.32 ) }
    dend_3 { pt3dadd( 27.2592, 49.8048, -11.1552, 0.72 ) }
    dend_3 { pt3dadd( 27.4865, 50.0953, -11.1703, 0.72 ) }
    dend_3 { pt3dadd( 27.9751, 50.7464, -11.1709, 0.72 ) }
    dend_3 { pt3dadd( 29.0553, 52.2267, -11.1022, 1.8 ) }
    dend_3 { pt3dadd( 29.4339, 52.7476, -11.0541, 1.8 ) }
    dend_3 { pt3dadd( 29.8229, 53.2763, -10.9927, 1.8 ) }
    dend_3 { pt3dadd( 30.0608, 53.5991, -10.9539, 0.96 ) }
    dend_3 { pt3dadd( 30.3665, 54.0243, -10.9165, 0.96 ) }
    dend_3 { pt3dadd( 30.8756, 54.7764, -10.874, 0.96 ) }
    dend_3 { pt3dadd( 31.2429, 55.4063, -10.9332, 0.96 ) }
    dend_3 { pt3dadd( 31.4598, 55.8012, -10.9868, 0.96 ) }
    dend_3 { pt3dadd( 32.0142, 56.8613, -11.1677, 1.92 ) }
    dend_3 { pt3dadd( 32.2952, 57.4388, -11.2786, 1.92 ) }
    dend_3 { pt3dadd( 32.4875, 57.8697, -11.3672, 1.92 ) }
    dend_3 { pt3dadd( 32.9118, 58.9276, -11.5948, 0.6 ) }
    dend_3 { pt3dadd( 33.0236, 59.2315, -11.6618, 0.6 ) }
    dend_3 { pt3dadd( 33.2188, 59.7868, -11.7793, 0.6 ) }
    dend_3 { pt3dadd( 33.4239, 60.4053, -11.8926, 0.6 ) }
    dend_3 { pt3dadd( 33.6343, 61.0856, -11.9781, 1.56 ) }
    dend_3 { pt3dadd( 33.7532, 61.4677, -12.0029, 1.56 ) }
    dend_3 { pt3dadd( 33.8733, 61.8181, -12.0011, 1.56 ) }
    dend_3 { pt3dadd( 33.976, 62.1269, -12.0227, 1.56 ) }
    dend_3 { pt3dadd( 34.2364, 62.9253, -12.1292, 0.84 ) }
    dend_3 { pt3dadd( 34.3445, 63.2608, -12.187, 0.84 ) }
    dend_3 { pt3dadd( 34.581, 64.021, -12.3328, 1.2 ) }
    dend_3 { pt3dadd( 34.8046, 64.7495, -12.4932, 1.2 ) }
    dend_3 { pt3dadd( 35.0838, 65.6942, -12.7143, 0.6 ) }
    dend_3 { pt3dadd( 35.3975, 66.8011, -12.9489, 1.2 ) }
    dend_3 { pt3dadd( 35.6021, 67.5199, -13.0874, 1.2 ) }
    dend_3 { pt3dadd( 35.6984, 67.8669, -13.1453, 1.56 ) }
    dend_3 { pt3dadd( 36.051, 69.2166, -13.325, 0.84 ) }
    dend_3 { pt3dadd( 36.158, 69.6452, -13.3696, 0.84 ) }
    dend_3 { pt3dadd( 36.6125, 71.3974, -13.4662, 0.36 ) }
    dend_3 { pt3dadd( 36.7895, 72.0963, -13.5061, 0.36 ) }
    dend_3 { pt3dadd( 36.8765, 72.441, -13.5237, 0.36 ) }
    dend_3 { pt3dadd( 36.9887, 72.8809, -13.5372, 0.36 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 48/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 36.9887, 72.8809, -13.5372, 0.96 ) }
    dend_5 { pt3dadd( 37.0013, 73.8958, -13.9197, 0.96 ) }
    dend_5 { pt3dadd( 37.041, 74.382, -14.0829, 0.96 ) }
    dend_5 { pt3dadd( 37.1822, 76.1102, -14.6628, 0.6 ) }
    dend_5 { pt3dadd( 37.2596, 77.0577, -14.9807, 0.6 ) }
    dend_5 { pt3dadd( 37.3566, 78.2445, -15.379, 0.96 ) }
    dend_5 { pt3dadd( 37.407, 78.8615, -15.586, 0.48 ) }
    dend_5 { pt3dadd( 37.5112, 79.5969, -15.8481, 0.96 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 56/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 36.9887, 72.8809, -13.5372, 0.72 ) }
    dend_4 { pt3dadd( 37.9657, 73.708, -13.9178, 0.72 ) }
    dend_4 { pt3dadd( 38.3634, 74.0433, -14.1256, 0.72 ) }
    dend_4 { pt3dadd( 38.6941, 74.3358, -14.3533, 1.2 ) }
    dend_4 { pt3dadd( 38.6941, 74.3358, -14.3533, 0.72 ) }
    dend_4 { pt3dadd( 39.193, 74.7481, -14.4212, 0.72 ) }
    dend_4 { pt3dadd( 39.8058, 75.2707, -14.4328, 1.32 ) }
    dend_4 { pt3dadd( 40.4878, 75.9269, -14.3228, 0.72 ) }
    dend_4 { pt3dadd( 41.1669, 76.6582, -14.1067, 0.72 ) }
    dend_4 { pt3dadd( 42.6768, 78.373, -13.4691, 1.44 ) }
    dend_4 { pt3dadd( 43.3183, 79.0896, -13.1591, 0.96 ) }
    dend_4 { pt3dadd( 43.5182, 79.3013, -13.0512, 0.96 ) }
    dend_4 { pt3dadd( 44.4255, 80.2064, -12.545, 1.44 ) }
    dend_4 { pt3dadd( 44.9251, 80.6702, -12.3456, 0.72 ) }
    dend_4 { pt3dadd( 45.1932, 80.8928, -12.325, 0.72 ) }
    dend_4 { pt3dadd( 46.222, 81.6377, -12.6412, 1.56 ) }
    dend_4 { pt3dadd( 47.3405, 82.3382, -13.1246, 0.84 ) }
    dend_4 { pt3dadd( 47.8453, 82.6016, -13.3465, 0.84 ) }
    dend_4 { pt3dadd( 49.5348, 83.3191, -14.1258, 1.32 ) }
    dend_4 { pt3dadd( 51.3117, 83.9739, -14.9658, 0.72 ) }
    dend_4 { pt3dadd( 52.3562, 84.3021, -15.4465, 0.72 ) }
    dend_4 { pt3dadd( 52.7501, 84.3976, -15.6168, 0.72 ) }
    dend_4 { pt3dadd( 54.1674, 84.7019, -16.3491, 1.2 ) }
    dend_4 { pt3dadd( 54.68, 84.7991, -16.6264, 1.2 ) }
    dend_4 { pt3dadd( 55.7562, 84.9947, -17.1832, 0.48 ) }
    dend_4 { pt3dadd( 56.0757, 85.0602, -17.3575, 0.48 ) }
    dend_4 { pt3dadd( 56.8802, 85.2416, -17.9019, 0.48 ) }
    dend_4 { pt3dadd( 59.1529, 85.8638, -19.6532, 0.96 ) }
    dend_4 { pt3dadd( 60.2947, 86.2848, -20.6349, 0.48 ) }
    dend_4 { pt3dadd( 60.6475, 86.4307, -20.8993, 0.48 ) }
    dend_4 { pt3dadd( 61.1015, 86.6286, -21.1754, 0.48 ) }
    dend_4 { pt3dadd( 61.8639, 86.9724, -21.5317, 0.48 ) }
    dend_4 { pt3dadd( 62.5152, 87.2632, -21.7162, 0.48 ) }
    dend_4 { pt3dadd( 63.4336, 87.6473, -21.7867, 1.08 ) }
    dend_4 { pt3dadd( 64.7467, 88.2436, -21.8232, 0.6 ) }
    dend_4 { pt3dadd( 65.7737, 88.6864, -21.8503, 0.6 ) }
    dend_4 { pt3dadd( 66.2211, 88.8657, -21.8651, 0.24 ) }
    dend_4 { pt3dadd( 67.0445, 89.1707, -21.957, 0.84 ) }
    dend_4 { pt3dadd( 68.0389, 89.5237, -22.1617, 0.36 ) }
    dend_4 { pt3dadd( 68.3959, 89.6545, -22.301, 0.36 ) }
    dend_4 { pt3dadd( 69.1793, 89.9656, -22.7184, 0.84 ) }
    dend_4 { pt3dadd( 69.5399, 90.1068, -22.9407, 0.84 ) }
    dend_4 { pt3dadd( 70.6658, 90.5259, -23.7374, 0.36 ) }
    dend_4 { pt3dadd( 71.1652, 90.7287, -24.1847, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_4 { pt3dadd( 71.9924, 91.0946, -25.1423, 1.32 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_41, dend_40, dend_35, dend_28, dend_27, dend_24, dend_21, dend_14, dend_13, dend_0, dend_43, dend_42, dend_39, dend_36, dend_32, dend_29, dend_26, dend_25, dend_23, dend_22, dend_16, dend_15, dend_10, dend_1, dend_38, dend_37, dend_34, dend_33, dend_31, dend_30, dend_20, dend_17, dend_12, dend_11, dend_7, dend_2, dend_19, dend_18, dend_9, dend_8, dend_6, dend_3, dend_5, dend_4]}
    ModelViewParmSubset_2 = new SectionList()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_41, dend_40, dend_35, dend_28, dend_27, dend_24, dend_21, dend_14, dend_13, dend_0, dend_43, dend_42, dend_39, dend_36, dend_32, dend_29, dend_26, dend_25, dend_23, dend_22, dend_16, dend_15, dend_10, dend_1, dend_38, dend_37, dend_34, dend_33, dend_31, dend_30, dend_20, dend_17, dend_12, dend_11, dend_7, dend_2, dend_19, dend_18, dend_9, dend_8, dend_6, dend_3, dend_5, dend_4]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_40 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_27 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_13 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_43 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_42 OneSecGrp_SectionRef_14.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_39 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_29 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_26 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_25 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_23 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_22 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_15 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_38 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_37 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_34 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_33 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_31 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_30 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_12 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_18 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_8 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_6 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_3 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_4 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_0 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_28 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_1 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_14 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_41 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_35 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_24 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_21 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_32 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_36 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_2 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_10 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_16 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_17 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_11 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_20 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_19 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_5 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_9 OneSecGrp_SectionRef_42.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, axon_0, axon_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, axon_1, axon_1, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_40 nseg = 3
    dend_27 nseg = 11
    dend_13 nseg = 9
    dend_43 nseg = 5
    dend_42 nseg = 9
    dend_39 nseg = 3
    dend_29 nseg = 5
    dend_26 nseg = 3
    dend_25 nseg = 9
    dend_23 nseg = 7
    dend_22 nseg = 3
    dend_15 nseg = 3
    dend_38 nseg = 11
    dend_37 nseg = 3
    dend_34 nseg = 3
    dend_33 nseg = 3
    dend_31 nseg = 7
    dend_30 nseg = 5
    dend_12 nseg = 9
    dend_7 nseg = 5
    dend_18 nseg = 3
    dend_8 nseg = 3
    dend_6 nseg = 11
    dend_3 nseg = 3
    dend_4 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L23_NBC_01d2e3caa6_0_0


