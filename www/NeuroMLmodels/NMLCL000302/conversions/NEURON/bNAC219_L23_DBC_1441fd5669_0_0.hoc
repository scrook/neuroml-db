// Cell: bNAC219_L23_DBC_1441fd5669_0_0
/*
{
  "id" : "bNAC219_L23_DBC_1441fd5669_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.667779, -8.61462, 0.0, 1.82374", "0.649013, -7.62864, 0.0, 3.14268", "0.630248, -6.64266, 0.0, 3.90944", "0.611482, -5.65668, 0.0, 4.60231", "0.592716, -4.67069, 0.0, 5.57951", "0.57395, -3.68471, 0.0, 6.64563", "0.555185, -2.69873, 0.0, 7.55969", "0.536419, -1.71275, 0.0, 7.78617", "0.517653, -0.726767, 0.0, 7.99436", "0.498888, 0.259215, 0.0, 8.35249", "0.480122, 1.2452, 0.0, 8.72844", "0.461356, 2.23118, 0.0, 9.06354", "0.44259, 3.21716, 0.0, 8.84862", "0.423825, 4.20314, 0.0, 8.54462", "0.405059, 5.18912, 0.0, 8.13269", "0.386293, 6.17511, 0.0, 7.35702", "0.367527, 7.16109, 0.0, 6.25172", "0.348762, 8.14707, 0.0, 5.0691", "0.329996, 9.13305, 0.0, 3.84217", "0.31123, 10.119, 0.0, 2.61525", "0.292465, 11.105, 0.0, 1.57474" ]
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.620263, -8.26922, 17.51, 1.94", "-0.690266, -12.5063, 16.9, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000030386586765
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.570264, 10.8162, -5.02, 1.38", "-0.773287, 13.0481, -5.02, 1.38", "-1.22784, 16.9751, -4.88557, 1.94", "-1.45042, 18.802, -4.75425, 1.11", "-1.70785, 21.3827, -4.57062, 0.55", "-1.90409, 23.7818, -4.29563, 1.11", "-2.11546, 26.9331, -3.87435, 0.83", "-2.35782, 30.8464, -3.26764, 1.38", "-2.5907, 34.6802, -2.5631, 1.11", "-2.76637, 38.3559, -1.89163, 0.83", "-2.78091, 42.3288, -1.11513, 1.11", "-2.71551, 45.1931, -0.636343, 0.55", "-2.61878, 48.0078, -0.280107, 0.55", "-2.44599, 51.427, -0.0126706, 0.55", "-2.27073, 54.084, 0.0905773, 1.11", "-2.0454, 57.7271, 0.123988, 0.83", "-1.72251, 62.5816, 0.05972, 0.83", "-1.26592, 67.3107, 0.0436182, 0.83", "-0.892538, 70.805, -0.00804142, 0.83", "-0.646656, 73.2198, -0.0296511, 0.83", "-0.395599, 75.8003, -0.00138127, 0.83", "0.035648, 80.474, 0.071884, 0.83", "0.592397, 85.4423, 0.288363, 0.83", "1.07225, 89.3686, 0.471386, 1.11", "1.40992, 92.5704, 0.6218, 0.83", "1.75618, 95.9839, 0.770767, 0.83", "2.27819, 100.434, 0.91731, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000030386586765,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.292465, 11.105, 0.0, 0.55", "0.00702837, 26.1023, 0.0, 0.55", "-0.278408, 41.0996, 0.0, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-0.690266, -12.5063, 16.9, 0.55", "-2.2988, -17.5573, 16.5998, 0.55", "-3.05984, -20.1268, 16.357, 0.55", "-3.6762, -22.2238, 16.1271, 0.83", "-4.44525, -24.7511, 15.8897, 0.55", "-5.66964, -28.4727, 15.4788, 0.83", "-6.45269, -30.6677, 15.2213, 0.55", "-7.15678, -32.6625, 15.0902, 0.83", "-7.5805, -34.0129, 15.0747, 0.28", "-8.27438, -36.3444, 15.0328, 0.83", "-9.34307, -40.1979, 14.9075, 0.83", "-10.5304, -44.4635, 14.7993, 0.83", "-11.4456, -47.7094, 14.9062, 0.55", "-12.4952, -51.4935, 15.2341, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-0.690266, -12.5063, 16.9, 1.11", "1.14325, -16.1972, 19.6876, 1.11", "2.30772, -18.5413, 21.4581, 0.83", "4.21188, -22.3743, 24.3531, 1.66" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "2.27819, 100.434, 0.91731, 0.83", "3.74312, 102.64, 1.91638, 0.83", "4.39429, 103.9, 2.56226, 0.83", "5.11385, 105.989, 3.66097, 0.55", "5.61921, 107.993, 4.65227, 0.55", "6.36312, 111.299, 6.24904, 0.55", "6.65484, 112.731, 6.93268, 0.83", "6.95709, 115.685, 8.37751, 0.55", "7.15611, 119.052, 10.043, 0.55", "7.18508, 121.02, 11.0045, 0.55", "7.21708, 123.802, 12.3108, 0.55", "7.2819, 125.437, 13.0185, 0.55", "7.47195, 128.07, 14.141, 0.55", "7.94756, 132.062, 15.8368, 0.55", "8.70177, 135.678, 17.4067, 0.55", "9.1899, 137.673, 18.3754, 0.55", "9.56371, 138.758, 18.9279, 0.83", "10.1956, 140.023, 19.5652, 0.55", "11.1094, 141.365, 20.2692, 0.83", "12.6285, 143.226, 21.2154, 0.83", "14.4325, 145.079, 22.2271, 0.55", "17.0764, 148.18, 23.4288, 0.28", "19.0635, 150.894, 24.393, 0.28", "20.3579, 152.691, 25.0094, 0.83", "21.1103, 153.767, 25.3065, 0.28", "21.8012, 154.779, 25.5171, 0.83", "25.5377, 160.478, 26.1943, 0.28", "26.9133, 163.711, 26.4456, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "2.27819, 100.434, 0.91731, 0.83", "2.60388, 103.761, 1.37504, 0.83", "2.81229, 107.724, 1.81408, 0.83", "2.8825, 111.359, 2.11705, 0.83", "2.92733, 114.654, 2.32522, 0.55", "2.9892, 118.709, 2.5311, 0.55", "3.03383, 121.904, 2.66519, 0.55", "3.06795, 126.098, 2.71922, 0.55", "3.22114, 132.247, 2.75244, 0.55", "3.35657, 138.297, 2.79627, 0.55", "3.59954, 142.78, 2.74852, 0.55", "3.99509, 147.564, 2.71236, 0.55", "4.65039, 154.344, 2.68885, 0.55", "5.66839, 162.033, 2.72123, 0.55", "6.0182, 164.239, 2.73848, 0.28", "6.79252, 168.46, 2.7991, 0.55", "7.5939, 172.044, 2.89369, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-0.278408, 41.0996, 0.0, 0.28", "-0.563845, 56.0969, 0.0, 0.28", "-0.849281, 71.0941, 0.0, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-12.4952, -51.4935, 15.2341, 0.55", "-14.5372, -55.3122, 14.9617, 0.55", "-15.2236, -56.5576, 14.9708, 0.28", "-15.584, -57.2228, 15.0559, 0.55", "-16.6693, -59.2262, 15.3119, 0.55", "-17.3001, -60.3906, 15.4607, 0.55", "-18.5499, -62.6978, 15.7556, 0.55", "-19.4967, -64.534, 16.2995, 0.55", "-20.5955, -66.5792, 16.8763, 0.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-12.4952, -51.4935, 15.2341, 0.55", "-11.6923, -53.9691, 15.8372, 0.55", "-11.6567, -54.0787, 15.864, 0.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "4.21188, -22.3743, 24.3531, 0.83", "3.15074, -25.4639, 24.1018, 0.83", "2.56788, -27.327, 23.9669, 1.11", "1.32855, -31.1308, 23.8767, 0.55", "0.680618, -33.1437, 23.9112, 0.55", "-0.288692, -36.3354, 24.2122, 0.55", "-1.13374, -39.5086, 24.7013, 0.55", "-1.5488, -41.4092, 25.1475, 0.55", "-1.99385, -43.9632, 25.9786, 0.55", "-2.43016, -46.6732, 27.0606, 0.83", "-2.96268, -50.2196, 28.5735, 0.83", "-3.33828, -52.3422, 29.5629, 0.83", "-3.80004, -55.0603, 30.8751, 0.83", "-4.24978, -57.7162, 32.2465, 0.83", "-4.69022, -60.3281, 33.5902, 0.55", "-5.38697, -64.1299, 35.4969, 0.55", "-5.90051, -66.8148, 36.7899, 0.55", "-6.48605, -70.0877, 38.3388, 0.55", "-6.94711, -73.2822, 39.7613, 0.55", "-7.22064, -75.7089, 40.6601, 0.83", "-7.31979, -77.783, 41.2857, 0.55", "-7.32613, -79.8184, 41.6786, 0.28", "-7.24521, -81.5005, 41.8151, 0.55", "-7.04664, -84.0901, 41.7978, 0.28", "-6.85722, -85.6206, 41.6573, 0.28", "-6.53174, -87.7467, 41.3302, 0.28", "-6.2443, -89.6739, 40.9709, 0.55", "-5.982, -91.9721, 40.3859, 1.11" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "4.21188, -22.3743, 24.3531, 0.83", "6.30669, -26.2936, 24.0741, 0.83", "7.92281, -29.5347, 23.8724, 0.83", "12.1028, -37.9529, 23.4123, 0.83", "13.4332, -40.6531, 23.2497, 0.83", "14.7518, -43.1382, 23.0948, 0.83", "15.9094, -45.2174, 22.9663, 0.83", "16.8432, -46.8459, 22.8426, 0.83", "18.2988, -49.0762, 22.7252, 0.83", "20.4073, -51.522, 22.6781, 0.83", "22.8038, -54.2772, 22.7247, 0.83", "24.643, -56.2441, 22.9011, 0.83", "26.7295, -58.532, 23.2006, 0.55", "27.9605, -59.9894, 23.4422, 0.83", "30.4545, -63.0416, 24.0421, 0.55", "32.4367, -65.5698, 24.6424, 0.55", "34.8428, -69.0162, 25.533, 0.55", "37.0881, -72.4971, 26.5018, 0.83", "38.6811, -75.4082, 27.3306, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "7.5939, 172.044, 2.89369, 0.83", "10.3339, 175.407, 2.72369, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "7.5939, 172.044, 2.89369, 0.55", "8.72055, 174.216, 3.25541, 0.55", "10.0994, 177.217, 3.85548, 0.55", "11.8075, 181.177, 4.69715, 0.55", "13.2856, 184.533, 5.50802, 0.55", "14.1445, 186.786, 6.1013, 0.55", "15.0481, 189.708, 6.8697, 0.55", "15.373, 191.552, 7.39794, 0.28", "15.4425, 192.919, 7.80114, 0.28", "15.3487, 194.675, 8.32682, 0.83", "14.971, 198.65, 9.50006, 0.55", "14.5265, 202.497, 10.5224, 0.55", "13.9499, 207.467, 11.4738, 0.55", "13.6026, 210.721, 11.9565, 0.55", "13.4302, 212.829, 12.1736, 0.28", "13.3163, 214.659, 12.3218, 0.28", "13.2676, 216.823, 12.4559, 0.83", "13.1695, 220.064, 12.5954, 0.28", "13.1048, 223.317, 12.6256, 0.55", "12.9919, 226.647, 12.6428, 0.55", "12.902, 229.722, 12.6895, 0.55", "12.8645, 230.538, 12.7091, 0.55", "12.7312, 232.529, 12.8217, 0.55", "12.6098, 234.181, 12.969, 0.55", "12.28, 236.272, 13.1026, 0.55", "11.7122, 238.21, 13.1966, 0.55", "10.6713, 240.771, 13.3551, 0.55", "10.1295, 241.814, 13.4607, 0.55", "8.12482, 245.247, 13.9257, 0.83", "6.41664, 247.933, 14.5357, 0.55", "4.37022, 250.853, 15.2989, 0.83", "2.69443, 253.05, 15.9654, 0.55", "1.39449, 254.597, 16.5319, 0.83", "-0.1435, 256.344, 17.2847, 0.55", "-2.76006, 258.835, 18.7474, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-20.5955, -66.5792, 16.8763, 0.55", "-22.571, -71.975, 8.31588, 0.55", "-22.8633, -72.7733, 7.04937, 0.55", "-23.4613, -74.4068, 4.45785, 0.28", "-23.811, -75.3621, 2.9424, 0.28" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-20.5955, -66.5792, 16.8763, 0.55", "-22.8889, -68.2643, 16.6896, 0.55", "-25.4079, -70.1222, 16.5348, 0.28", "-27.5375, -71.6531, 16.4602, 0.55", "-29.9127, -73.3189, 16.3748, 0.28", "-31.3726, -74.3016, 16.335, 0.55", "-32.5648, -75.075, 16.2884, 0.28", "-34.0942, -76.032, 16.2752, 0.55", "-36.1693, -77.1797, 16.3534, 0.28", "-38.1256, -78.1655, 16.4762, 0.55", "-40.1119, -79.1376, 16.7481, 0.28", "-41.693, -79.8964, 16.9889, 0.55", "-44.7648, -81.3498, 17.6266, 0.28", "-46.5202, -82.2288, 18.0721, 0.55", "-48.4957, -83.3404, 18.6272, 0.55", "-51.2444, -85.0229, 19.3893, 0.28", "-52.2469, -85.6793, 19.6231, 0.28", "-55.0327, -87.6455, 20.1723, 0.55", "-57.2864, -89.3781, 20.5569, 0.28", "-59.8187, -91.4739, 21.0466, 0.55", "-62.5854, -93.8528, 21.663, 0.28", "-64.0098, -95.1055, 22.0023, 0.55", "-67.0258, -97.8907, 22.7887, 0.28", "-68.9114, -99.7062, 22.7569, 0.83", "-71.2075, -101.94, 22.1401, 0.28", "-71.9161, -102.632, 21.744, 0.28", "-72.8867, -103.603, 20.9594, 0.28", "-74.5699, -105.278, 19.3806, 0.55", "-81.9451, -112.215, 11.5374, 0.28", "-82.7402, -112.94, 10.7007, 0.55", "-84.09, -114.133, 9.34028, 0.28", "-85.2139, -115.13, 8.35704, 0.55", "-86.8212, -116.523, 7.27132, 0.28", "-88.8166, -118.139, 6.92819, 0.55", "-90.5452, -119.57, 7.62434, 0.28", "-91.4803, -120.341, 7.98912, 0.55", "-92.5921, -121.318, 8.54076, 0.28", "-93.191, -121.819, 8.87511, 0.55", "-95.5494, -123.643, 10.3006, 0.28", "-96.5782, -124.419, 10.9428, 0.55", "-98.5395, -125.865, 12.1939, 0.28", "-101.385, -127.952, 14.1106, 0.55", "-104.283, -130.079, 16.1243, 0.55", "-106.041, -131.38, 17.3292, 0.28", "-106.659, -131.829, 17.7253, 0.55", "-108.348, -133.059, 18.8783, 0.28", "-110.201, -134.458, 20.327, 0.55", "-111.025, -135.058, 20.9039, 0.28", "-112.576, -136.418, 22.0593, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-11.6567, -54.0787, 15.864, 0.28", "-9.26767, -58.1802, 12.035, 0.28", "-8.63564, -59.3542, 11.0475, 0.28", "-7.6186, -61.4039, 9.4765, 0.28", "-6.26716, -64.3697, 7.24305, 0.55", "-4.68044, -68.1935, 4.26264, 0.28", "-3.96644, -70.1138, 2.82206, 0.55", "-3.06172, -73.2225, 0.656606, 0.28", "-2.80519, -74.3283, -0.0917971, 0.55", "-2.22462, -78.2447, -2.75738, 0.28", "-2.20204, -80.7211, -4.66737, 0.28", "-2.30373, -82.3733, -6.23467, 0.55", "-2.37902, -83.7066, -7.80157, 0.55", "-2.39052, -83.9723, -8.14598, 0.55", "-2.32244, -86.1343, -11.0025, 0.28", "-2.20395, -88.686, -14.5739, 0.28", "-2.04068, -90.0765, -16.6393, 0.55", "-1.68189, -91.9324, -19.6593, 0.28", "-1.48615, -92.6516, -20.8108, 0.28", "-0.982374, -93.8829, -22.7962, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-11.6567, -54.0787, 15.864, 0.55", "-12.2674, -56.8998, 15.6599, 0.55", "-12.8007, -59.864, 15.4479, 0.55", "-13.303, -63.0125, 15.2429, 0.55", "-13.7282, -66.0331, 15.0992, 0.55", "-14.023, -68.6002, 14.9624, 0.28", "-14.1683, -70.2586, 14.9131, 0.55", "-14.3267, -73.4464, 14.9758, 0.55", "-14.3396, -76.085, 14.9768, 0.55", "-14.1701, -79.265, 14.9212, 0.55", "-13.9478, -81.3854, 14.9421, 0.28", "-13.6803, -83.8217, 15.0206, 0.55", "-13.5018, -85.9263, 15.0576, 0.28", "-13.2479, -88.2869, 15.0729, 0.55", "-12.955, -90.74, 15.113, 0.28", "-12.8078, -92.0483, 15.1666, 0.55", "-12.6768, -93.804, 15.2803, 0.55", "-12.5241, -96.486, 15.4178, 0.28", "-12.3831, -99.9128, 15.6677, 0.55", "-12.3431, -101.777, 15.9309, 0.28", "-12.3499, -103.807, 16.3056, 0.28", "-12.3563, -105.466, 16.6327, 0.28" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "38.6811, -75.4082, 27.3306, 0.83", "38.5171, -78.1966, 27.6371, 0.83", "38.3545, -80.3568, 28.0273, 0.55", "38.1631, -82.0959, 28.241, 0.28", "37.9255, -83.7984, 28.233, 0.55", "37.622, -85.6409, 28.1739, 0.28", "37.3561, -87.5443, 27.9724, 0.55", "37.1614, -89.4352, 27.8, 0.28", "36.9803, -91.9369, 27.5139, 0.55", "36.7069, -94.8528, 27.0845, 0.28", "36.495, -97.0413, 26.6475, 0.55", "36.2908, -99.9469, 25.9421, 0.28", "36.1543, -102.858, 25.2367, 0.55", "36.0768, -104.946, 24.859, 0.83", "35.9962, -108.093, 24.5904, 0.55", "35.9453, -109.989, 24.5192, 0.83", "35.8372, -112.094, 24.4278, 0.55", "35.6792, -113.669, 24.464, 0.55", "35.4857, -116.154, 24.5035, 0.28", "35.4204, -117.491, 24.5981, 0.55", "35.3868, -118.347, 24.7392, 0.28", "35.2766, -120.449, 25.155, 0.55", "35.166, -122.913, 25.5836, 0.28", "35.1135, -125.334, 25.8878, 0.28", "35.1561, -127.443, 26.034, 0.55", "35.25, -129.423, 26.1334, 0.28", "35.3851, -131.422, 26.1799, 0.55", "35.6, -133.384, 26.1743, 0.28", "35.8392, -135.549, 26.1019, 0.55", "36.0239, -137.803, 26.0549, 0.55", "36.1669, -139.402, 26.0066, 0.28", "36.4109, -142.305, 25.8814, 0.55", "36.4592, -144.039, 25.8977, 0.55", "36.3871, -147.227, 26.0279, 0.28", "36.2529, -149.174, 26.1501, 0.55", "36.1149, -150.539, 26.2465, 0.28", "36.0417, -151.37, 26.3208, 0.55", "35.8577, -154.372, 26.6711, 0.28", "35.8153, -155.176, 26.7727, 0.55", "35.8066, -156.336, 26.9443, 0.28", "35.8289, -157.416, 27.0916, 0.55", "35.9047, -159.512, 27.3766, 0.28", "36.0267, -161.044, 27.4869, 0.55", "36.2134, -162.7, 27.4925, 0.28", "36.276, -163.743, 27.5257, 0.55", "36.2542, -164.832, 27.5383, 0.28", "36.1682, -165.648, 27.56, 0.83", "35.7102, -168.013, 27.5354, 0.28", "35.3808, -169.307, 27.4904, 0.28", "34.5891, -172.008, 27.3446, 0.55", "33.7675, -174.431, 27.1858, 0.28", "33.1704, -175.974, 27.1016, 0.55", "32.4229, -177.804, 26.9853, 0.28", "32.001, -178.843, 26.9303, 0.55", "31.7265, -179.627, 26.8664, 0.28", "31.3771, -181.16, 26.6972, 0.55", "31.176, -182.85, 26.5969, 0.28", "31.1014, -184.055, 26.528, 0.55", "31.0037, -185.95, 26.5088, 0.28", "30.9631, -186.773, 26.5068, 0.55", "30.8356, -188.939, 26.4497, 0.28", "30.7843, -189.874, 26.3978, 0.55", "30.6999, -191.271, 26.29, 0.28", "30.6279, -192.216, 26.2343, 0.55", "30.5743, -193.044, 26.158, 0.55", "30.5084, -194.758, 25.9985, 0.55", "30.4659, -196.513, 25.7479, 0.28", "30.4502, -197.826, 25.5687, 0.28", "30.4006, -199.192, 25.3553, 0.55", "30.2229, -201.478, 24.9732, 0.28", "30.0504, -202.884, 24.7468, 0.28", "29.7874, -204.608, 24.4894, 0.28", "28.9915, -208.777, 23.891, 0.28", "28.1681, -212.735, 23.2814, 0.28", "27.7405, -214.579, 23.0216, 0.55", "27.2088, -216.905, 22.739, 0.28", "27.0407, -217.718, 22.6768, 0.28", "26.7746, -219.3, 22.6619, 0.55", "26.3738, -222.429, 22.7581, 0.28", "26.2627, -223.638, 22.8769, 0.55", "26.0126, -226.157, 23.1565, 0.28", "25.6773, -228.492, 23.35, 0.55", "25.3559, -230.079, 23.4509, 0.28", "25.0386, -231.466, 23.552, 0.55", "24.2771, -234.112, 23.7742, 0.28", "23.8399, -235.362, 23.7982, 0.83", "22.9177, -237.211, 23.7283, 0.28", "22.6202, -237.712, 23.628, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "38.6811, -75.4082, 27.3306, 0.55", "41.7841, -77.9739, 29.1597, 0.55", "45.2163, -80.8959, 31.3293, 0.55", "46.3834, -81.9199, 32.0761, 0.55", "47.6174, -83.0027, 32.8657, 0.55", "49.9966, -85.0901, 34.3881, 0.55", "51.097, -86.0556, 35.0922, 0.55", "52.8162, -87.8493, 36.4346, 0.28", "53.8352, -88.8332, 37.0841, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "10.3339, 175.407, 2.72369, 0.55", "10.8342, 176.096, 2.73864, 0.55", "13.2155, 179.238, 2.47523, 0.55", "14.7433, 181.136, 2.23385, 0.28", "16.8266, 183.681, 1.85991, 0.55", "18.5926, 185.834, 1.43715, 0.55", "20.6246, 188.339, 0.881484, 0.55", "23.1069, 191.422, 0.0738814, 0.55", "23.7336, 192.255, -0.191445, 0.55", "24.7562, 193.826, -0.718224, 0.55", "26.0595, 196.159, -1.552, 0.83", "26.6135, 197.315, -2.0012, 0.28", "27.4295, 199.302, -2.77334, 0.55", "28.606, 202.809, -4.03308, 0.28", "29.4524, 205.553, -5.01383, 0.28", "30.4811, 209.2, -6.39071, 0.55", "31.0589, 211.335, -7.23225, 0.55", "31.292, 212.188, -7.59463, 0.55", "32.3684, 216.311, -9.53556, 0.55", "32.7007, 217.699, -10.2267, 0.28", "33.1455, 220.039, -11.435, 0.55", "33.378, 221.926, -12.3987, 0.55", "33.4609, 223.161, -13.1057, 0.28", "33.4544, 224.803, -14.1554, 0.55", "33.3939, 225.983, -14.9803, 0.55", "32.9898, 229.594, -17.5415, 0.55", "32.6771, 232.058, -19.2715, 0.55", "32.2528, 234.608, -21.0215, 0.55", "31.8937, 236.745, -22.411, 0.55", "31.6914, 238.037, -23.252, 0.28", "31.4067, 239.751, -24.383, 0.55", "31.1118, 241.082, -25.293, 0.28", "30.5381, 243.281, -26.7786, 0.55", "29.9765, 245.74, -28.4043, 0.55", "29.3152, 248.782, -30.4479, 0.28", "28.953, 250.257, -31.4753, 0.55", "28.3141, 252.557, -33.15, 0.28", "27.824, 254.087, -34.2491, 0.28", "27.2704, 255.632, -35.439, 0.28", "26.8475, 256.608, -36.2114, 0.28", "26.2332, 257.962, -37.198, 0.28", "25.6808, 259.281, -38.2004, 0.55", "24.9269, 261.374, -39.7811, 0.55", "24.1596, 263.768, -41.6488, 0.28", "23.5945, 265.895, -43.3185, 1.11", "23.3338, 267.313, -44.3797, 0.83", "23.0968, 269.486, -45.9617, 0.55", "22.9318, 272.137, -47.8935, 1.11", "22.8833, 274.227, -49.4247, 0.55", "22.9315, 275.35, -50.152, 0.55", "23.0855, 277.068, -51.2352, 0.55", "23.3003, 279.593, -52.793, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "10.3339, 175.407, 2.72369, 0.55", "13.0465, 177.426, 2.50015, 0.55", "17.7679, 181.095, 1.75451, 0.55", "20.2575, 183.087, 1.26394, 0.55", "22.4078, 184.879, 0.788264, 0.55", "24.1441, 186.381, 0.377877, 0.55", "25.9727, 187.994, -0.0982125, 0.55", "27.7018, 189.718, -0.751193, 0.28", "28.056, 190.155, -0.946746, 0.55", "28.6254, 190.922, -1.43553, 0.28", "29.052, 191.519, -1.87297, 0.55", "29.663, 192.497, -2.56818, 0.28", "29.7895, 192.7, -2.7025, 0.55", "30.9979, 194.68, -3.8053, 0.28", "31.5726, 195.575, -4.30319, 0.55", "32.4845, 196.959, -5.0464, 0.28", "33.0773, 197.897, -5.49826, 0.55", "33.7146, 199.065, -5.89993, 0.28", "34.3578, 200.384, -6.32319, 0.28", "34.861, 201.488, -6.61315, 0.28", "35.1695, 202.234, -6.76477, 0.55", "35.9084, 204.116, -7.20962, 0.28", "36.6976, 206.111, -7.6672, 0.55", "37.8868, 209.075, -8.34327, 0.28", "38.5207, 210.613, -8.70826, 0.55", "39.2486, 212.43, -9.12187, 0.55", "40.0675, 214.482, -9.60412, 0.28", "40.5452, 215.709, -9.94915, 0.55", "41.0756, 217.103, -10.3561, 0.28", "41.5854, 218.576, -10.7789, 0.83", "42.2834, 220.647, -11.4026, 0.28", "42.8019, 222.385, -11.9404, 0.55", "43.3371, 224.235, -12.3921, 0.28", "43.9874, 226.483, -12.8674, 0.55", "44.5446, 228.496, -13.1924, 0.28", "45.1179, 230.519, -13.5417, 0.55", "45.5546, 232.024, -13.8138, 0.28", "46.1096, 233.96, -14.1829, 0.28", "46.6129, 235.711, -14.5171, 0.55", "47.2445, 237.956, -15.0823, 0.55", "48.0494, 240.834, -15.766, 0.28", "48.2422, 241.564, -15.969, 0.55", "48.508, 242.553, -16.247, 0.55", "49.2988, 245.595, -17.0145, 0.28", "49.6206, 246.794, -17.2677, 0.55", "50.4621, 249.662, -17.7165, 0.55", "51.2432, 252.404, -18.0041, 0.28", "51.6494, 253.805, -18.1542, 0.55", "52.4428, 256.333, -18.3819, 0.28", "52.8646, 257.674, -18.5008, 0.55", "53.3017, 259.11, -18.6109, 0.28", "53.9014, 260.954, -18.7363, 0.55", "54.5691, 262.853, -18.7945, 0.28", "55.3857, 265.049, -18.944, 0.28", "56.0801, 266.859, -19.1114, 0.55", "56.7795, 268.62, -19.2599, 0.28", "57.5018, 270.36, -19.4446, 0.28", "57.9831, 271.339, -19.564, 0.28", "58.8618, 273.05, -19.7979, 0.83", "60.0114, 275.203, -20.2014, 0.28", "60.5107, 276.042, -20.3699, 0.55", "61.4668, 277.578, -20.7938, 0.28", "62.9576, 280.161, -21.7013, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-23.811, -75.3621, 2.9424, 0.28", "-22.681, -77.11, 3.6324, 0.28" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-23.811, -75.3621, 2.9424, 0.55", "-24.8693, -78.0253, 2.42695, 0.55", "-25.7264, -80.155, 1.96525, 0.28", "-26.153, -81.2459, 1.74518, 0.55", "-27.7307, -85.3268, 1.15817, 0.28", "-28.4708, -87.369, 0.871611, 0.55", "-29.15, -89.3671, 0.735761, 0.28", "-29.4277, -90.2905, 0.641896, 0.55", "-30.0444, -92.5984, 0.519586, 0.28", "-30.3885, -94.1453, 0.465225, 0.55", "-30.9445, -97.2729, 0.485916, 0.28", "-31.5284, -100.794, 0.482701, 0.28", "-31.9865, -103.597, 0.565632, 0.55", "-32.38, -105.736, 0.614635, 0.55", "-32.9531, -108.072, 0.614741, 0.28", "-33.2139, -108.895, 0.634644, 0.55", "-34.0483, -110.999, 0.79127, 0.28", "-34.6207, -112.196, 0.870332, 0.55", "-36.0856, -114.798, 1.21565, 0.28", "-37.7387, -117.443, 1.57676, 0.55", "-39.1784, -119.596, 1.90533, 0.28", "-39.3372, -119.828, 1.93377, 0.55", "-40.5334, -121.585, 2.06458, 0.28", "-41.9322, -123.757, 2.20643, 0.28", "-42.5177, -124.705, 2.24164, 0.55", "-43.4982, -126.406, 2.12909, 0.28", "-44.3784, -128.021, 1.9114, 0.28", "-45.1291, -129.434, 1.707, 0.28", "-45.748, -130.648, 1.54607, 0.28", "-46.1974, -131.608, 1.33776, 0.28", "-47.04, -133.579, 0.881597, 0.28", "-47.5912, -135.083, 0.545544, 0.55", "-47.9887, -136.233, 0.336719, 0.28", "-48.3518, -137.314, 0.158298, 0.55", "-49.1867, -139.957, -0.152428, 0.28", "-49.7127, -141.46, -0.244055, 0.28", "-50.1332, -142.463, -0.331316, 0.55", "-50.787, -143.83, -0.488622, 0.28", "-51.2691, -144.77, -0.592401, 0.55", "-52.6928, -147.35, -0.868775, 0.28", "-53.6393, -148.996, -0.93452, 0.28", "-54.8563, -151.065, -1.05873, 0.55", "-56.2096, -153.422, -1.23804, 0.28", "-57.3768, -155.599, -1.47044, 0.28", "-57.6622, -156.125, -1.52857, 0.55", "-58.937, -158.446, -1.72984, 0.28", "-59.4297, -159.353, -1.78322, 0.55", "-61.0891, -162.194, -1.89973, 0.28", "-61.7584, -163.215, -1.95972, 0.55", "-62.5382, -164.312, -1.96106, 0.28", "-63.4373, -165.565, -1.93218, 0.55", "-64.9948, -167.662, -1.93756, 0.28", "-66.1676, -169.197, -1.95109, 0.55", "-67.8116, -171.393, -1.94883, 0.28", "-69.0835, -173.143, -1.94791, 0.28", "-70.6136, -175.438, -1.97907, 0.55", "-72.0447, -177.772, -2.04239, 0.28", "-73.4242, -180.725, -2.11365, 0.28", "-74.1172, -182.771, -2.12808, 0.28", "-74.1899, -183.121, -2.16811, 0.55", "-74.2431, -184.211, -2.39848, 0.28", "-74.1648, -184.974, -2.58381, 0.55", "-73.3003, -189.247, -3.72404, 0.28", "-72.9253, -190.676, -4.14676, 0.55", "-71.6841, -195.393, -5.76928, 0.28", "-71.0603, -197.781, -6.61613, 0.28", "-70.7844, -198.888, -7.03984, 0.55", "-70.3002, -200.844, -7.8661, 0.28", "-69.908, -202.629, -8.76334, 0.28", "-69.6299, -203.89, -9.4016, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-0.982374, -93.8829, -22.7962, 0.28", "-10.0866, -95.4452, -10.6959, 0.28", "-11.8193, -95.5975, -8.77753, 0.83", "-12.9381, -95.5411, -7.98354, 0.28", "-13.3037, -95.4858, -7.83204, 0.55", "-17.3287, -94.2402, -7.54235, 0.28", "-18.8591, -93.6355, -7.60675, 0.55", "-20.1627, -92.8994, -8.08913, 0.55", "-22.1998, -91.6199, -8.75327, 0.28", "-22.8049, -91.1232, -9.00125, 0.55", "-26.3268, -87.7132, -10.6663, 0.28", "-26.9984, -86.8919, -11.0877, 0.83", "-28.2614, -85.1955, -11.9745, 0.28", "-28.5378, -84.7831, -12.1806, 0.55", "-32.345, -77.9967, -15.7039, 0.28", "-32.7428, -77.1948, -16.1309, 0.55", "-34.2314, -73.5517, -18.2526, 0.28", "-34.5778, -72.6263, -18.8301, 0.28", "-35.0263, -71.2375, -19.6749, 0.55", "-35.8856, -68.4404, -21.2866, 0.28", "-36.1072, -67.6026, -21.7005, 0.55", "-36.7286, -65.5071, -22.5984, 0.28", "-36.891, -65.0164, -22.7621, 0.55", "-38.8747, -59.4724, -24.4453, 0.28", "-39.1132, -58.9338, -24.6006, 0.55", "-39.973, -57.4028, -24.9314, 0.28", "-40.2358, -56.9825, -24.9984, 0.55", "-41.4217, -55.3288, -25.1954, 0.28", "-41.9382, -54.6582, -25.2545, 0.55", "-43.4751, -52.7491, -25.4384, 0.28", "-44.3192, -51.7174, -25.5417, 0.55", "-45.8425, -49.8741, -25.7398, 0.28", "-46.6107, -48.9119, -25.844, 0.55", "-49.3097, -45.4425, -26.1442, 0.28", "-50.1374, -44.2091, -26.1904, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-0.982374, -93.8829, -22.7962, 0.28", "-0.680391, -96.2734, -25.0373, 0.28", "-0.467882, -97.9556, -26.6143, 0.55", "0.127683, -102.67, -31.034, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-12.3563, -105.466, 16.6327, 0.28", "-12.4887, -105.89, 16.6761, 0.28", "-13.2043, -108.129, 16.9062, 0.55", "-14.0717, -111.003, 17.184, 0.28", "-14.5046, -112.958, 17.3714, 0.55", "-14.8844, -114.755, 17.5687, 0.55", "-15.1466, -116.072, 17.6984, 0.28", "-15.3479, -117.188, 17.803, 0.55", "-15.5784, -118.774, 17.9468, 0.55", "-15.9369, -121.803, 18.3669, 0.55", "-16.2175, -125.263, 18.8752, 0.55", "-16.2866, -126.519, 19.0659, 0.28", "-16.2909, -128.044, 19.2267, 0.55", "-16.265, -129.238, 19.291, 0.28", "-16.1705, -132.216, 19.3267, 0.55", "-16.1282, -133.241, 19.2968, 0.28", "-15.9111, -135.396, 19.075, 0.55", "-15.4844, -139.179, 18.5769, 0.55", "-15.2967, -140.792, 18.3015, 0.55", "-15.165, -141.822, 18.0999, 0.28", "-15.0893, -142.384, 17.9941, 0.55", "-14.7964, -145.038, 17.5359, 0.28", "-14.6918, -146.079, 17.3706, 0.55", "-14.6232, -146.999, 17.3177, 0.28", "-14.5025, -147.948, 17.3025, 0.55", "-14.2569, -149.672, 17.3278, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "53.8352, -88.8332, 37.0841, 0.55", "55.4851, -92.7486, 35.335, 0.55", "56.3865, -94.7099, 34.5922, 0.55", "56.9071, -95.8722, 34.1163, 0.55", "57.3568, -97.0651, 33.6521, 0.83", "58.6032, -100.446, 32.6731, 0.55", "59.3556, -102.569, 32.3419, 0.28", "59.8125, -103.99, 32.3156, 0.55", "60.6272, -106.743, 32.4499, 0.28", "61.4455, -109.517, 32.7895, 0.55", "62.4132, -113.252, 33.4033, 0.83", "63.1331, -116.693, 34.1383, 0.55", "63.5794, -119.288, 34.7021, 0.83", "63.9061, -121.439, 35.1618, 0.55", "64.1207, -123.187, 35.5924, 0.83", "64.4406, -126.159, 36.2284, 0.55", "64.6062, -128.539, 36.7975, 0.83", "64.7402, -130.996, 37.356, 0.55", "64.786, -132.105, 37.66, 0.83", "64.8737, -134.781, 38.3982, 0.55", "65.0252, -137.455, 39.2465, 0.55", "65.5138, -141.938, 41.223, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "53.8352, -88.8332, 37.0841, 0.28", "56.4872, -89.1038, 34.9578, 0.28", "59.8533, -89.5121, 32.7352, 0.28", "62.9283, -89.859, 31.2884, 0.28", "65.8099, -90.1577, 30.369, 0.28", "68.741, -90.5023, 29.8635, 0.55", "71.0203, -90.8304, 29.7196, 0.28", "74.8747, -91.4358, 30.21, 0.55", "79.2327, -92.1292, 31.4144, 0.55", "81.3095, -92.4871, 32.1623, 0.28", "84.9431, -93.131, 33.64, 0.28", "88.204, -93.7328, 35.0292, 0.28", "90.5826, -94.1682, 35.9726, 0.28", "93.1721, -94.6201, 36.7936, 0.28", "94.2675, -94.8102, 37.0661, 0.55", "96.4002, -95.1311, 37.5386, 0.55", "97.6032, -95.2679, 37.7884, 0.55", "101.592, -95.619, 38.6152, 0.55", "102.941, -95.7289, 38.8737, 0.55", "105.284, -95.914, 39.4268, 0.55", "107.978, -96.1966, 40.0547, 0.55", "108.772, -96.3111, 40.2132, 0.83", "110.804, -96.6421, 40.5281, 0.28", "113.818, -97.3142, 40.8036, 0.28", "115.695, -97.8148, 40.9183, 0.55", "118.295, -98.5553, 40.9732, 0.28", "120.567, -99.2692, 40.9997, 0.55", "122.834, -99.9837, 41.0315, 0.55", "126.018, -100.942, 41.1144, 0.28", "126.639, -101.108, 41.1336, 0.55", "128.543, -101.448, 41.1627, 0.28", "131.429, -101.713, 41.3153, 0.55", "132.904, -101.732, 41.3994, 0.28", "134.69, -101.661, 41.3689, 0.55", "136.516, -101.443, 41.3814, 0.28", "138.747, -101.056, 41.4496, 0.28", "141.091, -100.562, 41.5596, 0.55", "143.995, -99.93, 41.7523, 0.55", "148.797, -98.9087, 42.0677, 0.28", "152.705, -98.0778, 42.3556, 0.55", "157.046, -97.1246, 42.8063, 0.28", "159.266, -96.6511, 43.0923, 0.28", "161.772, -96.0696, 43.4407, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "23.3003, 279.593, -52.793, 0.28", "21.9104, 280.135, -54.2103, 0.28", "20.4145, 280.717, -55.7356, 0.83", "16.2048, 282.356, -60.0282, 0.28" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "23.3003, 279.593, -52.793, 0.55", "26.5289, 279.86, -52.4586, 0.55", "28.7703, 279.967, -52.5641, 0.83", "31.0093, 279.993, -52.8187, 0.55", "35.1817, 279.886, -53.5922, 0.55", "37.5652, 279.835, -54.101, 1.11", "41.035, 279.804, -54.9512, 0.55", "44.03, 279.665, -55.9319, 0.83", "47.2055, 279.601, -57.0045, 0.83", "49.7328, 279.57, -58.0138, 0.55", "51.3536, 279.633, -58.7555, 0.55", "53.1704, 279.751, -59.6131, 0.28", "55.1183, 280.022, -60.2745, 0.55", "59.0056, 280.738, -61.1361, 0.28" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "0.127683, -102.67, -31.034, 0.28", "4.19934, -107.316, -26.7196, 0.28", "5.07777, -108.39, -26.1097, 0.55", "6.35982, -110.017, -25.6222, 0.28", "7.41258, -111.353, -25.2219, 0.55", "8.84539, -113.171, -24.6771, 0.28", "9.55126, -114.067, -24.4087, 0.55", "11.5908, -116.867, -25.3595, 0.28", "12.3026, -117.921, -25.8084, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "0.127683, -102.67, -31.034, 0.28", "-0.448061, -105.523, -31.336, 0.28", "-0.879301, -107.795, -31.4989, 0.55", "-1.73144, -112.584, -31.8139, 0.28", "-2.91638, -119.326, -32.1793, 0.28", "-3.18196, -120.888, -32.226, 0.55", "-3.87261, -125.038, -32.2876, 0.28", "-4.52413, -128.776, -32.3261, 0.83", "-5.34021, -133.563, -32.3673, 0.28", "-5.56821, -135.197, -32.5337, 0.55", "-5.83353, -137.141, -32.7701, 0.28", "-5.94725, -137.924, -32.8687, 0.55", "-6.15784, -139.215, -33.0247, 0.28", "-6.33935, -140.188, -33.5004, 0.55", "-7.58955, -145.754, -40.2681, 0.28" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-14.2569, -149.672, 17.3278, 0.55", "-15.707, -152.861, 14.2909, 0.55", "-16.1511, -153.779, 13.4933, 0.55", "-16.578, -154.661, 12.7938, 0.28", "-17.2632, -156.142, 11.8318, 0.28", "-18.2469, -158.523, 10.4107, 0.55", "-18.8575, -160.126, 9.52489, 0.28", "-19.2678, -161.359, 8.94223, 0.55", "-19.7571, -162.897, 8.25818, 0.28", "-20.2991, -164.76, 7.50552, 0.55", "-20.9396, -167.579, 6.57169, 0.28", "-21.0309, -168.612, 6.36277, 0.28", "-21.0729, -170.657, 6.10495, 0.28", "-20.9137, -172.89, 5.68921, 0.55", "-20.7058, -174.729, 5.29225, 0.28", "-20.4732, -176.473, 4.90127, 0.55", "-20.0858, -179.065, 4.40143, 0.28", "-19.8162, -180.718, 4.04109, 0.55", "-19.3076, -183.898, 3.24447, 0.28", "-19.0715, -185.423, 2.77904, 0.55", "-18.8866, -186.801, 2.34314, 0.28", "-18.7278, -188.326, 1.85645, 0.55", "-18.6462, -190.336, 1.26277, 0.28", "-18.6204, -191.652, 0.993981, 0.28", "-18.6219, -194.555, 0.579839, 0.55", "-18.6319, -197.381, 0.183544, 0.28", "-18.7039, -198.899, -0.00170427, 0.55", "-19.0, -201.976, -0.268346, 0.28", "-19.305, -204.265, -0.414216, 0.55", "-19.6763, -206.518, -0.51297, 0.28", "-20.1635, -208.97, -0.599823, 0.28", "-20.6145, -211.017, -0.616986, 0.55", "-21.0191, -212.853, -0.667198, 0.55", "-21.5809, -215.461, -0.78493, 0.28", "-21.912, -217.087, -0.993411, 0.55", "-22.2722, -218.881, -1.25086, 0.28", "-22.4989, -220.14, -1.48956, 0.55", "-22.7433, -221.947, -2.00351, 0.28", "-22.9001, -223.144, -2.39346, 0.55", "-23.2628, -225.606, -3.48835, 0.28", "-23.307, -225.939, -3.66257, 0.55", "-23.5346, -227.828, -4.64641, 0.28", "-23.6607, -229.292, -5.40687, 0.55", "-23.768, -230.663, -6.03652, 0.28", "-23.8992, -232.765, -6.76664, 0.55", "-23.9675, -235.184, -7.40945, 0.28", "-23.9043, -237.069, -7.91292, 0.55", "-23.632, -240.132, -8.51758, 0.28", "-23.5075, -241.078, -8.65959, 0.55", "-23.1344, -243.287, -8.91762, 0.28", "-22.8654, -244.803, -9.00744, 0.55", "-22.3808, -247.293, -9.0727, 0.28", "-21.8216, -250.047, -9.01219, 0.55", "-21.2795, -252.717, -8.9091, 0.28", "-20.916, -254.477, -8.93301, 0.28", "-20.7044, -255.777, -8.97194, 0.28", "-20.4086, -257.828, -8.89903, 0.28", "-20.1502, -259.968, -8.77206, 0.28", "-19.9014, -262.026, -8.75063, 0.55", "-19.7068, -263.578, -8.69056, 0.83", "-19.4321, -265.847, -8.64786, 0.55", "-19.1172, -268.417, -8.61564, 0.28", "-18.8797, -270.46, -8.65836, 0.55", "-18.7136, -271.984, -8.7194, 0.28", "-18.6021, -272.973, -8.76985, 0.55", "-18.5003, -274.075, -8.85409, 0.28", "-18.3236, -275.925, -9.07183, 0.55", "-18.2441, -276.883, -9.19903, 0.28", "-18.0489, -278.766, -9.34931, 0.55", "-17.7472, -281.181, -9.62407, 0.28", "-17.6032, -282.304, -9.82924, 0.55", "-17.4043, -283.804, -10.2173, 0.28", "-17.2626, -284.796, -10.6141, 0.55", "-17.0797, -286.5, -11.4249, 0.28", "-16.8794, -288.102, -12.2838, 0.55", "-16.5799, -290.691, -13.8582, 0.28", "-16.4788, -291.568, -14.465, 0.83", "-16.3394, -293.741, -16.1498, 0.28", "-16.3157, -295.453, -17.5438, 0.28" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-14.2569, -149.672, 17.3278, 0.28", "-13.3698, -151.724, 16.8377, 0.28", "-12.623, -153.746, 16.4869, 0.28", "-11.0615, -158.63, 15.865, 0.28", "-10.1163, -162.042, 15.447, 0.55", "-9.2436, -165.591, 15.029, 0.28", "-8.70663, -168.027, 14.7533, 0.55", "-8.17085, -171.407, 14.4344, 0.28", "-8.03204, -172.833, 14.3126, 0.55", "-8.00746, -175.321, 14.1753, 0.28", "-8.03342, -176.375, 14.1513, 0.55", "-8.07395, -177.418, 14.0497, 0.28", "-8.09117, -178.532, 13.8115, 0.55", "-8.01819, -180.489, 13.2721, 0.28", "-7.99059, -181.218, 13.1456, 0.55", "-7.96293, -182.422, 13.027, 0.28", "-7.9356, -183.363, 12.9762, 0.55", "-7.90119, -185.087, 12.9151, 0.28", "-7.87805, -188.659, 12.7891, 0.55", "-7.94979, -192.983, 12.6288, 0.83", "-8.08746, -195.721, 12.4742, 0.28", "-8.16867, -196.732, 12.4396, 0.55", "-8.30777, -198.293, 12.4261, 0.28", "-8.41278, -199.555, 12.5142, 0.55", "-8.48899, -200.916, 12.6548, 0.28", "-8.39948, -202.763, 12.903, 0.55", "-8.14214, -204.656, 13.3399, 0.28", "-7.86489, -205.944, 13.6406, 0.55", "-7.20814, -208.142, 14.1385, 0.28", "-6.84416, -209.133, 14.3028, 0.55", "-5.84155, -211.467, 14.5392, 0.28", "-5.16787, -212.925, 14.5242, 0.55", "-4.0653, -215.2, 14.2235, 0.28", "-3.18144, -217.002, 13.8377, 0.55", "-1.90808, -219.611, 13.2057, 0.28", "-1.44658, -220.623, 12.954, 0.55", "-0.74043, -222.323, 12.4435, 0.28", "-0.115454, -223.895, 11.9665, 0.55", "0.635548, -225.85, 11.424, 0.28", "1.36123, -227.801, 10.9281, 0.55", "2.27644, -230.431, 10.292, 0.28", "2.7721, -231.933, 9.94617, 0.55", "3.18625, -233.213, 9.69536, 0.28", "3.61245, -234.689, 9.42195, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "59.0056, 280.738, -61.1361, 0.55", "60.0576, 278.635, -61.1361, 0.55", "60.664, 277.424, -61.1361, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "59.0056, 280.738, -61.1361, 0.55", "60.4354, 281.464, -61.9376, 0.55", "61.3194, 281.913, -62.4332, 0.83", "62.9058, 282.719, -63.3224, 0.55", "64.4258, 283.491, -64.1745, 0.55", "65.9001, 284.24, -65.0009, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-7.58955, -145.754, -40.2681, 0.28", "-6.00214, -148.43, -42.2103, 0.28", "-5.16518, -149.841, -43.2344, 0.55", "-0.510613, -157.687, -48.9294, 0.28", "1.49874, -161.074, -51.3879, 0.28", "3.14377, -163.846, -53.4007, 0.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-7.58955, -145.754, -40.2681, 0.28", "-8.76943, -147.378, -35.4955, 0.28", "-9.18003, -148.068, -33.8371, 0.55", "-12.1917, -153.129, -21.6725, 0.28", "-12.5326, -153.702, -20.2958, 0.55", "-13.2041, -154.831, -17.5834, 0.28", "-13.8642, -155.94, -14.9171, 0.55", "-14.6322, -157.502, -10.8146, 0.28" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "3.14377, -163.846, -53.4007, 0.28", "2.25246, -167.919, -50.9982, 0.28", "1.86411, -169.694, -49.9514, 0.55", "0.397093, -176.398, -45.997, 0.28", "0.0818764, -177.839, -45.1474, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "3.14377, -163.846, -53.4007, 0.28", "5.0223, -167.174, -57.386, 0.28", "5.57104, -168.213, -58.4763, 0.55", "6.99276, -171.079, -61.0443, 0.28", "7.25322, -171.773, -61.6065, 0.55", "8.52536, -175.814, -64.8345, 0.28", "8.87157, -177.028, -65.7608, 0.55", "9.26807, -179.011, -67.2025, 0.28", "9.51183, -180.367, -68.1556, 0.55", "10.2601, -185.581, -71.3234, 0.28", "10.3306, -186.441, -71.8353, 0.55", "10.3986, -188.953, -73.1879, 0.28", "10.2941, -190.738, -74.2452, 0.55", "9.84234, -194.193, -76.5186, 0.28", "9.42585, -196.024, -77.7007, 0.55", "7.98334, -199.633, -79.8968, 0.28", "7.58041, -200.394, -80.4083, 0.55", "6.1106, -202.356, -81.8788, 0.28", "5.83411, -202.674, -82.1546, 0.55", "4.09122, -204.847, -84.9179, 0.28", "3.31114, -206.724, -87.77, 0.55", "3.04643, -208.517, -90.5132, 0.28", "3.05947, -209.161, -91.5275, 0.55", "3.43394, -211.052, -94.5004, 0.55", "4.06603, -213.364, -98.2028, 0.28", "4.5135, -214.531, -100.108, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-14.6322, -157.502, -10.8146, 0.28", "-14.086, -161.531, -11.2485, 0.28", "-13.6896, -163.507, -11.649, 0.55", "-13.6474, -165.873, -11.9594, 0.28", "-13.7284, -167.548, -12.1656, 0.55", "-13.8321, -170.264, -12.1663, 0.28", "-13.8961, -172.066, -12.0528, 0.55", "-14.0429, -174.912, -11.7292, 0.55", "-14.1847, -180.02, -10.944, 0.28", "-14.2112, -181.59, -10.6155, 0.55", "-13.8514, -185.656, -8.85981, 0.28", "-13.672, -186.549, -8.29166, 0.55", "-12.8422, -189.202, -6.30186, 0.28", "-12.1737, -190.674, -5.0679, 0.55", "-11.623, -191.571, -4.18599, 0.55", "-7.67804, -197.687, 2.4668, 0.28", "-7.32679, -198.202, 3.0657, 0.55", "-6.46039, -199.421, 4.57212, 0.28", "-5.57654, -200.641, 6.15355, 1.11", "-3.29673, -204.126, 10.5278, 0.28", "-3.01634, -204.619, 11.1121, 0.55", "-2.07843, -206.898, 13.3381, 0.28", "-1.83688, -207.573, 14.0088, 0.55", "-1.59621, -208.34, 14.7716, 0.28", "-1.09598, -210.092, 16.3947, 0.55", "-0.545166, -213.454, 18.6379, 0.28", "-0.515515, -214.178, 19.085, 0.55", "-0.655098, -215.231, 19.6305, 0.55", "-0.879589, -216.192, 20.0962, 0.28", "-1.30861, -217.359, 20.5938, 0.55", "-3.0583, -220.802, 21.461, 0.28", "-3.63892, -221.68, 21.5848, 0.55", "-4.87687, -223.437, 21.7283, 0.28", "-5.2348, -223.894, 21.7536, 0.55", "-6.36771, -225.159, 21.8068, 0.28", "-8.70546, -227.475, 21.9622, 0.28", "-9.34864, -228.046, 21.9914, 0.28", "-10.0181, -228.587, 22.0231, 0.55", "-12.0528, -230.1, 22.1859, 0.28", "-13.0623, -230.738, 22.2144, 0.55", "-20.0189, -234.153, 22.0786, 0.28", "-21.3395, -234.639, 22.0185, 0.55", "-22.9957, -235.123, 21.8636, 0.28", "-24.1331, -235.349, 21.7079, 0.55", "-28.7501, -235.864, 20.7112, 0.28", "-32.1271, -235.891, 19.8161, 0.28", "-32.972, -235.794, 19.5743, 0.55", "-33.6869, -235.691, 19.375, 0.55", "-37.1074, -235.073, 18.4745, 0.28", "-38.7646, -234.639, 18.0863, 0.55", "-41.9391, -233.603, 17.5725, 0.28", "-43.1331, -233.125, 17.4082, 0.55", "-46.0602, -231.791, 17.0433, 0.28", "-46.9675, -231.361, 16.8855, 0.55", "-49.9055, -229.959, 16.2867, 0.28", "-50.6775, -229.614, 16.1436, 0.55", "-54.2461, -228.283, 15.3047, 0.28", "-55.5322, -227.879, 14.9994, 0.55", "-60.2555, -226.655, 13.8327, 0.28", "-62.0999, -226.235, 13.338, 0.28", "-63.7609, -225.89, 12.9609, 0.55", "-68.5812, -224.78, 12.1008, 0.28", "-70.4251, -224.3, 11.8756, 0.55", "-72.8157, -223.523, 11.8271, 0.28", "-73.6556, -223.141, 11.9221, 0.55", "-77.1641, -221.214, 12.4576, 0.28", "-78.0048, -220.723, 12.6152, 0.55", "-81.6737, -218.515, 13.5029, 0.28", "-83.5984, -217.503, 13.8083, 0.55", "-85.4068, -216.707, 14.0168, 0.28", "-86.1999, -216.462, 13.9402, 0.55", "-88.0033, -216.148, 13.6551, 0.28", "-89.8255, -215.952, 13.425, 0.55", "-91.9307, -215.852, 13.2792, 0.28", "-93.584, -215.811, 13.1935, 0.55", "-98.4025, -215.837, 13.1155, 0.28", "-103.485, -215.894, 13.1986, 0.28", "-105.162, -215.902, 13.2918, 0.55", "-108.672, -216.029, 13.6228, 0.28", "-109.508, -216.092, 13.7168, 0.55", "-112.242, -216.385, 14.0876, 0.28", "-116.365, -217.056, 14.8218, 0.28", "-117.225, -217.242, 14.9297, 0.55", "-120.473, -218.086, 15.3236, 0.28", "-121.296, -218.334, 15.4037, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-14.6322, -157.502, -10.8146, 0.28", "-17.726, -159.883, -12.7752, 0.28", "-19.8223, -161.36, -13.9162, 0.55", "-23.5353, -163.829, -15.6205, 0.28", "-25.5739, -165.207, -16.5659, 0.55", "-27.4971, -166.568, -17.7572, 0.28", "-30.0814, -168.439, -19.4254, 0.55", "-31.9106, -169.879, -20.6988, 0.28", "-32.685, -170.503, -21.2792, 0.55", "-35.7201, -172.907, -23.4353, 0.28", "-38.7925, -175.362, -25.7849, 0.28", "-40.0358, -176.347, -26.5848, 0.55", "-44.543, -179.828, -29.124, 0.28", "-46.2049, -181.046, -30.0298, 0.55", "-47.2767, -181.788, -30.5222, 0.28", "-49.5836, -183.218, -31.2447, 0.55", "-55.0298, -186.391, -32.2454, 0.28", "-55.9815, -186.892, -32.4184, 0.55", "-56.7803, -187.242, -32.5136, 0.28", "-57.7231, -187.692, -32.6737, 0.55", "-59.2289, -188.484, -32.9975, 0.28", "-60.5351, -189.229, -33.26, 0.55", "-63.5668, -191.207, -34.1272, 0.28", "-66.3958, -193.238, -35.3086, 0.28", "-69.8144, -195.789, -37.0537, 0.28", "-71.1522, -196.857, -37.8341, 0.55", "-72.5766, -198.114, -38.7713, 0.28", "-74.0959, -199.531, -39.8661, 0.55", "-76.6573, -202.386, -41.8745, 0.28", "-77.4111, -203.363, -42.6491, 0.55", "-78.1311, -204.23, -43.5308, 0.28", "-78.4333, -204.562, -43.9487, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-121.296, -218.334, 15.4037, 0.28", "-121.734, -220.792, 14.5841, 0.28", "-121.443, -221.316, 14.5837, 0.55", "-120.123, -223.172, 14.8821, 0.28", "-119.159, -224.372, 15.1492, 0.55", "-118.433, -225.189, 15.3536, 0.28", "-117.269, -226.469, 15.6453, 0.55", "-114.168, -229.509, 16.7333, 0.28", "-113.402, -230.182, 16.9945, 0.55", "-112.731, -230.683, 17.2104, 0.28", "-111.842, -231.296, 17.5184, 0.55", "-110.804, -232.044, 17.872, 0.28", "-109.756, -232.833, 18.1358, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-121.296, -218.334, 15.4037, 0.28", "-124.631, -217.909, 14.2442, 0.28", "-126.027, -217.775, 13.7382, 0.55", "-131.13, -217.356, 11.9941, 0.28", "-132.275, -217.258, 11.5591, 0.55", "-138.809, -216.651, 9.10143, 0.28", "-140.279, -216.499, 8.45768, 0.55", "-142.589, -216.26, 7.14788, 0.28", "-143.758, -216.12, 6.38033, 0.55", "-146.744, -215.752, 4.08535, 0.28", "-147.851, -215.552, 2.99905, 0.55", "-151.03, -214.619, -0.937307, 0.28", "-151.861, -214.396, -2.16261, 0.55", "-152.769, -214.229, -3.63231, 0.28", "-153.365, -214.138, -4.67297, 0.55", "-154.76, -214.031, -7.19773, 0.28", "-155.346, -214.025, -8.31164, 0.83", "-157.607, -214.332, -12.1604, 0.28", "-158.386, -214.525, -13.4266, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-78.4333, -204.562, -43.9487, 0.28", "-81.2231, -206.049, -48.4577, 0.28", "-83.6079, -207.321, -52.3121, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-78.4333, -204.562, -43.9487, 0.28", "-77.0637, -208.027, -42.4735, 0.28", "-76.4557, -210.045, -41.4733, 0.55", "-76.3295, -210.562, -41.2188, 0.28", "-76.1682, -211.22, -40.8747, 0.55", "-75.7619, -212.877, -40.0082, 0.28", "-75.2514, -214.959, -38.9194, 0.55", "-75.0352, -216.808, -37.8365, 0.28", "-74.973, -217.802, -37.3641, 0.55", "-74.8853, -219.509, -36.501, 0.28" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-83.6079, -207.321, -52.3121, 0.28", "-84.2158, -208.629, -51.3674, 0.28", "-84.5846, -209.178, -50.8359, 0.55", "-85.4432, -210.457, -49.5982, 0.28", "-85.5629, -210.636, -49.4257, 0.55", "-86.9343, -212.678, -47.449, 0.28", "-87.8002, -213.968, -46.201, 0.55", "-88.3152, -214.994, -44.759, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-83.6079, -207.321, -52.3121, 0.28", "-83.2138, -209.482, -52.313, 0.28", "-82.991, -210.705, -52.3135, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-74.8853, -219.509, -36.501, 0.28", "-70.5239, -220.403, -38.3987, 0.28", "-68.5007, -220.818, -39.279, 0.83" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-74.8853, -219.509, -36.501, 0.28", "-77.7559, -227.488, -51.7623, 0.28", "-78.0251, -228.269, -53.1439, 0.55", "-78.2727, -229.213, -54.5716, 0.28", "-78.6063, -230.718, -56.5652, 0.55", "-78.8422, -232.148, -58.1879, 0.28", "-78.9309, -234.435, -60.1737, 0.55", "-77.9425, -238.132, -59.6027, 0.28", "-76.3248, -242.449, -58.9833, 0.55", "-74.708, -246.189, -58.9749, 0.28", "-74.1192, -247.663, -58.7207, 0.55", "-72.5845, -251.777, -57.5328, 0.28", "-71.6945, -254.148, -56.578, 0.55", "-70.6777, -256.914, -55.451, 0.28", "-69.6651, -259.878, -53.9713, 0.55", "-66.9312, -268.309, -49.7394, 0.28", "-66.7854, -268.796, -49.4356, 0.55", "-66.4331, -270.116, -48.384, 0.28", "-66.1874, -271.156, -47.5627, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_11", "dend_0", "dend_19", "dend_12", "dend_10", "dend_1", "dend_44", "dend_20", "dend_18", "dend_13", "dend_3", "dend_2", "dend_46", "dend_45", "dend_25", "dend_21", "dend_17", "dend_14", "dend_5", "dend_4", "dend_48", "dend_47", "dend_43", "dend_26", "dend_22", "dend_16", "dend_15", "dend_9", "dend_6", "dend_42", "dend_27", "dend_24", "dend_23", "dend_8", "dend_7", "dend_39", "dend_28", "dend_41", "dend_40", "dend_36", "dend_29", "dend_38", "dend_37", "dend_33", "dend_30", "dend_35", "dend_34", "dend_32", "dend_31" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_11", "dend_0", "dend_19", "dend_12", "dend_10", "dend_1", "dend_44", "dend_20", "dend_18", "dend_13", "dend_3", "dend_2", "dend_46", "dend_45", "dend_25", "dend_21", "dend_17", "dend_14", "dend_5", "dend_4", "dend_48", "dend_47", "dend_43", "dend_26", "dend_22", "dend_16", "dend_15", "dend_9", "dend_6", "dend_42", "dend_27", "dend_24", "dend_23", "dend_8", "dend_7", "dend_39", "dend_28", "dend_41", "dend_40", "dend_36", "dend_29", "dend_38", "dend_37", "dend_33", "dend_30", "dend_35", "dend_34", "dend_32", "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_20", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_26", "dend_26", "dend_26", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L23_DBC_1441fd5669_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_19, id: dend_19, parent: dend_11
create dend_19
public dend_19
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_44, id: dend_44, parent: dend_19
create dend_44
public dend_44
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_12
create dend_18
public dend_18
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_25, id: dend_25, parent: dend_20
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_43, id: dend_43, parent: dend_25
create dend_43
public dend_43
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_42, id: dend_42, parent: dend_26
create dend_42
public dend_42
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_39, id: dend_39, parent: dend_27
create dend_39
public dend_39
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_28
create dend_36
public dend_36
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_33, id: dend_33, parent: dend_29
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_11, dend_0, dend_19, dend_12, dend_10, dend_1, dend_44, dend_20, dend_18, dend_13, dend_3, dend_2, dend_46, dend_45, dend_25, dend_21, dend_17, dend_14, dend_5, dend_4, dend_48, dend_47, dend_43, dend_26, dend_22, dend_16, dend_15, dend_9, dend_6, dend_42, dend_27, dend_24, dend_23, dend_8, dend_7, dend_39, dend_28, dend_41, dend_40, dend_36, dend_29, dend_38, dend_37, dend_33, dend_30, dend_35, dend_34, dend_32, dend_31]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_11, dend_0, dend_19, dend_12, dend_10, dend_1, dend_44, dend_20, dend_18, dend_13, dend_3, dend_2, dend_46, dend_45, dend_25, dend_21, dend_17, dend_14, dend_5, dend_4, dend_48, dend_47, dend_43, dend_26, dend_22, dend_16, dend_15, dend_9, dend_6, dend_42, dend_27, dend_24, dend_23, dend_8, dend_7, dend_39, dend_28, dend_41, dend_40, dend_36, dend_29, dend_38, dend_37, dend_33, dend_30, dend_35, dend_34, dend_32, dend_31]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_45
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_39, dend_39, dend_39, dend_39, dend_39, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_11(0), soma_0(0.45000030386586765)
    connect dend_0(0), soma_0(0.45000030386586765)
    connect axon_0(0), soma_0(1.0)
    connect dend_19(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_44(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_25(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_43(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_42(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_39(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_33(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.667779, -8.61462, 0.0, 1.82374 ) }
    soma_0 { pt3dadd( 0.649013, -7.62864, 0.0, 3.14268 ) }
    soma_0 { pt3dadd( 0.630248, -6.64266, 0.0, 3.90944 ) }
    soma_0 { pt3dadd( 0.611482, -5.65668, 0.0, 4.60231 ) }
    soma_0 { pt3dadd( 0.592716, -4.67069, 0.0, 5.57951 ) }
    soma_0 { pt3dadd( 0.57395, -3.68471, 0.0, 6.64563 ) }
    soma_0 { pt3dadd( 0.555185, -2.69873, 0.0, 7.55969 ) }
    soma_0 { pt3dadd( 0.536419, -1.71275, 0.0, 7.78617 ) }
    soma_0 { pt3dadd( 0.517653, -0.726767, 0.0, 7.99436 ) }
    soma_0 { pt3dadd( 0.498888, 0.259215, 0.0, 8.35249 ) }
    soma_0 { pt3dadd( 0.480122, 1.2452, 0.0, 8.72844 ) }
    soma_0 { pt3dadd( 0.461356, 2.23118, 0.0, 9.06354 ) }
    soma_0 { pt3dadd( 0.44259, 3.21716, 0.0, 8.84862 ) }
    soma_0 { pt3dadd( 0.423825, 4.20314, 0.0, 8.54462 ) }
    soma_0 { pt3dadd( 0.405059, 5.18912, 0.0, 8.13269 ) }
    soma_0 { pt3dadd( 0.386293, 6.17511, 0.0, 7.35702 ) }
    soma_0 { pt3dadd( 0.367527, 7.16109, 0.0, 6.25172 ) }
    soma_0 { pt3dadd( 0.348762, 8.14707, 0.0, 5.0691 ) }
    soma_0 { pt3dadd( 0.329996, 9.13305, 0.0, 3.84217 ) }
    soma_0 { pt3dadd( 0.31123, 10.119, 0.0, 2.61525 ) }
    soma_0 { pt3dadd( 0.292465, 11.105, 0.0, 1.57474 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 21/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.620263, -8.26922, 17.51, 1.94 ) }
    dend_11 { pt3dadd( -0.690266, -12.5063, 16.9, 1.94 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 23/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.570264, 10.8162, -5.02, 1.38 ) }
    dend_0 { pt3dadd( -0.773287, 13.0481, -5.02, 1.38 ) }
    dend_0 { pt3dadd( -1.22784, 16.9751, -4.88557, 1.94 ) }
    dend_0 { pt3dadd( -1.45042, 18.802, -4.75425, 1.11 ) }
    dend_0 { pt3dadd( -1.70785, 21.3827, -4.57062, 0.55 ) }
    dend_0 { pt3dadd( -1.90409, 23.7818, -4.29563, 1.11 ) }
    dend_0 { pt3dadd( -2.11546, 26.9331, -3.87435, 0.83 ) }
    dend_0 { pt3dadd( -2.35782, 30.8464, -3.26764, 1.38 ) }
    dend_0 { pt3dadd( -2.5907, 34.6802, -2.5631, 1.11 ) }
    dend_0 { pt3dadd( -2.76637, 38.3559, -1.89163, 0.83 ) }
    dend_0 { pt3dadd( -2.78091, 42.3288, -1.11513, 1.11 ) }
    dend_0 { pt3dadd( -2.71551, 45.1931, -0.636343, 0.55 ) }
    dend_0 { pt3dadd( -2.61878, 48.0078, -0.280107, 0.55 ) }
    dend_0 { pt3dadd( -2.44599, 51.427, -0.0126706, 0.55 ) }
    dend_0 { pt3dadd( -2.27073, 54.084, 0.0905773, 1.11 ) }
    dend_0 { pt3dadd( -2.0454, 57.7271, 0.123988, 0.83 ) }
    dend_0 { pt3dadd( -1.72251, 62.5816, 0.05972, 0.83 ) }
    dend_0 { pt3dadd( -1.26592, 67.3107, 0.0436182, 0.83 ) }
    dend_0 { pt3dadd( -0.892538, 70.805, -0.00804142, 0.83 ) }
    dend_0 { pt3dadd( -0.646656, 73.2198, -0.0296511, 0.83 ) }
    dend_0 { pt3dadd( -0.395599, 75.8003, -0.00138127, 0.83 ) }
    dend_0 { pt3dadd( 0.035648, 80.474, 0.071884, 0.83 ) }
    dend_0 { pt3dadd( 0.592397, 85.4423, 0.288363, 0.83 ) }
    dend_0 { pt3dadd( 1.07225, 89.3686, 0.471386, 1.11 ) }
    dend_0 { pt3dadd( 1.40992, 92.5704, 0.6218, 0.83 ) }
    dend_0 { pt3dadd( 1.75618, 95.9839, 0.770767, 0.83 ) }
    dend_0 { pt3dadd( 2.27819, 100.434, 0.91731, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 50/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.292465, 11.105, 0.0, 0.55 ) }
    axon_0 { pt3dadd( 0.00702837, 26.1023, 0.0, 0.55 ) }
    axon_0 { pt3dadd( -0.278408, 41.0996, 0.0, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_11 (entry count 53/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -0.690266, -12.5063, 16.9, 0.55 ) }
    dend_19 { pt3dadd( -2.2988, -17.5573, 16.5998, 0.55 ) }
    dend_19 { pt3dadd( -3.05984, -20.1268, 16.357, 0.55 ) }
    dend_19 { pt3dadd( -3.6762, -22.2238, 16.1271, 0.83 ) }
    dend_19 { pt3dadd( -4.44525, -24.7511, 15.8897, 0.55 ) }
    dend_19 { pt3dadd( -5.66964, -28.4727, 15.4788, 0.83 ) }
    dend_19 { pt3dadd( -6.45269, -30.6677, 15.2213, 0.55 ) }
    dend_19 { pt3dadd( -7.15678, -32.6625, 15.0902, 0.83 ) }
    dend_19 { pt3dadd( -7.5805, -34.0129, 15.0747, 0.28 ) }
    dend_19 { pt3dadd( -8.27438, -36.3444, 15.0328, 0.83 ) }
    dend_19 { pt3dadd( -9.34307, -40.1979, 14.9075, 0.83 ) }
    dend_19 { pt3dadd( -10.5304, -44.4635, 14.7993, 0.83 ) }
    dend_19 { pt3dadd( -11.4456, -47.7094, 14.9062, 0.55 ) }
    dend_19 { pt3dadd( -12.4952, -51.4935, 15.2341, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 67/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -0.690266, -12.5063, 16.9, 1.11 ) }
    dend_12 { pt3dadd( 1.14325, -16.1972, 19.6876, 1.11 ) }
    dend_12 { pt3dadd( 2.30772, -18.5413, 21.4581, 0.83 ) }
    dend_12 { pt3dadd( 4.21188, -22.3743, 24.3531, 1.66 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 71/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 2.27819, 100.434, 0.91731, 0.83 ) }
    dend_10 { pt3dadd( 3.74312, 102.64, 1.91638, 0.83 ) }
    dend_10 { pt3dadd( 4.39429, 103.9, 2.56226, 0.83 ) }
    dend_10 { pt3dadd( 5.11385, 105.989, 3.66097, 0.55 ) }
    dend_10 { pt3dadd( 5.61921, 107.993, 4.65227, 0.55 ) }
    dend_10 { pt3dadd( 6.36312, 111.299, 6.24904, 0.55 ) }
    dend_10 { pt3dadd( 6.65484, 112.731, 6.93268, 0.83 ) }
    dend_10 { pt3dadd( 6.95709, 115.685, 8.37751, 0.55 ) }
    dend_10 { pt3dadd( 7.15611, 119.052, 10.043, 0.55 ) }
    dend_10 { pt3dadd( 7.18508, 121.02, 11.0045, 0.55 ) }
    dend_10 { pt3dadd( 7.21708, 123.802, 12.3108, 0.55 ) }
    dend_10 { pt3dadd( 7.2819, 125.437, 13.0185, 0.55 ) }
    dend_10 { pt3dadd( 7.47195, 128.07, 14.141, 0.55 ) }
    dend_10 { pt3dadd( 7.94756, 132.062, 15.8368, 0.55 ) }
    dend_10 { pt3dadd( 8.70177, 135.678, 17.4067, 0.55 ) }
    dend_10 { pt3dadd( 9.1899, 137.673, 18.3754, 0.55 ) }
    dend_10 { pt3dadd( 9.56371, 138.758, 18.9279, 0.83 ) }
    dend_10 { pt3dadd( 10.1956, 140.023, 19.5652, 0.55 ) }
    dend_10 { pt3dadd( 11.1094, 141.365, 20.2692, 0.83 ) }
    dend_10 { pt3dadd( 12.6285, 143.226, 21.2154, 0.83 ) }
    dend_10 { pt3dadd( 14.4325, 145.079, 22.2271, 0.55 ) }
    dend_10 { pt3dadd( 17.0764, 148.18, 23.4288, 0.28 ) }
    dend_10 { pt3dadd( 19.0635, 150.894, 24.393, 0.28 ) }
    dend_10 { pt3dadd( 20.3579, 152.691, 25.0094, 0.83 ) }
    dend_10 { pt3dadd( 21.1103, 153.767, 25.3065, 0.28 ) }
    dend_10 { pt3dadd( 21.8012, 154.779, 25.5171, 0.83 ) }
    dend_10 { pt3dadd( 25.5377, 160.478, 26.1943, 0.28 ) }
    dend_10 { pt3dadd( 26.9133, 163.711, 26.4456, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 99/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 2.27819, 100.434, 0.91731, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 2.60388, 103.761, 1.37504, 0.83 ) }
    dend_1 { pt3dadd( 2.81229, 107.724, 1.81408, 0.83 ) }
    dend_1 { pt3dadd( 2.8825, 111.359, 2.11705, 0.83 ) }
    dend_1 { pt3dadd( 2.92733, 114.654, 2.32522, 0.55 ) }
    dend_1 { pt3dadd( 2.9892, 118.709, 2.5311, 0.55 ) }
    dend_1 { pt3dadd( 3.03383, 121.904, 2.66519, 0.55 ) }
    dend_1 { pt3dadd( 3.06795, 126.098, 2.71922, 0.55 ) }
    dend_1 { pt3dadd( 3.22114, 132.247, 2.75244, 0.55 ) }
    dend_1 { pt3dadd( 3.35657, 138.297, 2.79627, 0.55 ) }
    dend_1 { pt3dadd( 3.59954, 142.78, 2.74852, 0.55 ) }
    dend_1 { pt3dadd( 3.99509, 147.564, 2.71236, 0.55 ) }
    dend_1 { pt3dadd( 4.65039, 154.344, 2.68885, 0.55 ) }
    dend_1 { pt3dadd( 5.66839, 162.033, 2.72123, 0.55 ) }
    dend_1 { pt3dadd( 6.0182, 164.239, 2.73848, 0.28 ) }
    dend_1 { pt3dadd( 6.79252, 168.46, 2.7991, 0.55 ) }
    dend_1 { pt3dadd( 7.5939, 172.044, 2.89369, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 16/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -0.278408, 41.0996, 0.0, 0.28 ) }
    axon_1 { pt3dadd( -0.563845, 56.0969, 0.0, 0.28 ) }
    axon_1 { pt3dadd( -0.849281, 71.0941, 0.0, 0.28 ) }
    // Section: dend_44, id: dend_44, parent: dend_19 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -12.4952, -51.4935, 15.2341, 0.55 ) }
    dend_44 { pt3dadd( -14.5372, -55.3122, 14.9617, 0.55 ) }
    dend_44 { pt3dadd( -15.2236, -56.5576, 14.9708, 0.28 ) }
    dend_44 { pt3dadd( -15.584, -57.2228, 15.0559, 0.55 ) }
    dend_44 { pt3dadd( -16.6693, -59.2262, 15.3119, 0.55 ) }
    dend_44 { pt3dadd( -17.3001, -60.3906, 15.4607, 0.55 ) }
    dend_44 { pt3dadd( -18.5499, -62.6978, 15.7556, 0.55 ) }
    dend_44 { pt3dadd( -19.4967, -64.534, 16.2995, 0.55 ) }
    dend_44 { pt3dadd( -20.5955, -66.5792, 16.8763, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 28/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -12.4952, -51.4935, 15.2341, 0.55 ) }
    dend_20 { pt3dadd( -11.6923, -53.9691, 15.8372, 0.55 ) }
    dend_20 { pt3dadd( -11.6567, -54.0787, 15.864, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_12 (entry count 31/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 4.21188, -22.3743, 24.3531, 0.83 ) }
    dend_18 { pt3dadd( 3.15074, -25.4639, 24.1018, 0.83 ) }
    dend_18 { pt3dadd( 2.56788, -27.327, 23.9669, 1.11 ) }
    dend_18 { pt3dadd( 1.32855, -31.1308, 23.8767, 0.55 ) }
    dend_18 { pt3dadd( 0.680618, -33.1437, 23.9112, 0.55 ) }
    dend_18 { pt3dadd( -0.288692, -36.3354, 24.2122, 0.55 ) }
    dend_18 { pt3dadd( -1.13374, -39.5086, 24.7013, 0.55 ) }
    dend_18 { pt3dadd( -1.5488, -41.4092, 25.1475, 0.55 ) }
    dend_18 { pt3dadd( -1.99385, -43.9632, 25.9786, 0.55 ) }
    dend_18 { pt3dadd( -2.43016, -46.6732, 27.0606, 0.83 ) }
    dend_18 { pt3dadd( -2.96268, -50.2196, 28.5735, 0.83 ) }
    dend_18 { pt3dadd( -3.33828, -52.3422, 29.5629, 0.83 ) }
    dend_18 { pt3dadd( -3.80004, -55.0603, 30.8751, 0.83 ) }
    dend_18 { pt3dadd( -4.24978, -57.7162, 32.2465, 0.83 ) }
    dend_18 { pt3dadd( -4.69022, -60.3281, 33.5902, 0.55 ) }
    dend_18 { pt3dadd( -5.38697, -64.1299, 35.4969, 0.55 ) }
    dend_18 { pt3dadd( -5.90051, -66.8148, 36.7899, 0.55 ) }
    dend_18 { pt3dadd( -6.48605, -70.0877, 38.3388, 0.55 ) }
    dend_18 { pt3dadd( -6.94711, -73.2822, 39.7613, 0.55 ) }
    dend_18 { pt3dadd( -7.22064, -75.7089, 40.6601, 0.83 ) }
    dend_18 { pt3dadd( -7.31979, -77.783, 41.2857, 0.55 ) }
    dend_18 { pt3dadd( -7.32613, -79.8184, 41.6786, 0.28 ) }
    dend_18 { pt3dadd( -7.24521, -81.5005, 41.8151, 0.55 ) }
    dend_18 { pt3dadd( -7.04664, -84.0901, 41.7978, 0.28 ) }
    dend_18 { pt3dadd( -6.85722, -85.6206, 41.6573, 0.28 ) }
    dend_18 { pt3dadd( -6.53174, -87.7467, 41.3302, 0.28 ) }
    dend_18 { pt3dadd( -6.2443, -89.6739, 40.9709, 0.55 ) }
    dend_18 { pt3dadd( -5.982, -91.9721, 40.3859, 1.11 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 59/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 4.21188, -22.3743, 24.3531, 0.83 ) }
    dend_13 { pt3dadd( 6.30669, -26.2936, 24.0741, 0.83 ) }
    dend_13 { pt3dadd( 7.92281, -29.5347, 23.8724, 0.83 ) }
    dend_13 { pt3dadd( 12.1028, -37.9529, 23.4123, 0.83 ) }
    dend_13 { pt3dadd( 13.4332, -40.6531, 23.2497, 0.83 ) }
    dend_13 { pt3dadd( 14.7518, -43.1382, 23.0948, 0.83 ) }
    dend_13 { pt3dadd( 15.9094, -45.2174, 22.9663, 0.83 ) }
    dend_13 { pt3dadd( 16.8432, -46.8459, 22.8426, 0.83 ) }
    dend_13 { pt3dadd( 18.2988, -49.0762, 22.7252, 0.83 ) }
    dend_13 { pt3dadd( 20.4073, -51.522, 22.6781, 0.83 ) }
    dend_13 { pt3dadd( 22.8038, -54.2772, 22.7247, 0.83 ) }
    dend_13 { pt3dadd( 24.643, -56.2441, 22.9011, 0.83 ) }
    dend_13 { pt3dadd( 26.7295, -58.532, 23.2006, 0.55 ) }
    dend_13 { pt3dadd( 27.9605, -59.9894, 23.4422, 0.83 ) }
    dend_13 { pt3dadd( 30.4545, -63.0416, 24.0421, 0.55 ) }
    dend_13 { pt3dadd( 32.4367, -65.5698, 24.6424, 0.55 ) }
    dend_13 { pt3dadd( 34.8428, -69.0162, 25.533, 0.55 ) }
    dend_13 { pt3dadd( 37.0881, -72.4971, 26.5018, 0.83 ) }
    dend_13 { pt3dadd( 38.6811, -75.4082, 27.3306, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 78/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 7.5939, 172.044, 2.89369, 0.83 ) }
    dend_3 { pt3dadd( 10.3339, 175.407, 2.72369, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 7.5939, 172.044, 2.89369, 0.55 ) }
    dend_2 { pt3dadd( 8.72055, 174.216, 3.25541, 0.55 ) }
    dend_2 { pt3dadd( 10.0994, 177.217, 3.85548, 0.55 ) }
    dend_2 { pt3dadd( 11.8075, 181.177, 4.69715, 0.55 ) }
    dend_2 { pt3dadd( 13.2856, 184.533, 5.50802, 0.55 ) }
    dend_2 { pt3dadd( 14.1445, 186.786, 6.1013, 0.55 ) }
    dend_2 { pt3dadd( 15.0481, 189.708, 6.8697, 0.55 ) }
    dend_2 { pt3dadd( 15.373, 191.552, 7.39794, 0.28 ) }
    dend_2 { pt3dadd( 15.4425, 192.919, 7.80114, 0.28 ) }
    dend_2 { pt3dadd( 15.3487, 194.675, 8.32682, 0.83 ) }
    dend_2 { pt3dadd( 14.971, 198.65, 9.50006, 0.55 ) }
    dend_2 { pt3dadd( 14.5265, 202.497, 10.5224, 0.55 ) }
    dend_2 { pt3dadd( 13.9499, 207.467, 11.4738, 0.55 ) }
    dend_2 { pt3dadd( 13.6026, 210.721, 11.9565, 0.55 ) }
    dend_2 { pt3dadd( 13.4302, 212.829, 12.1736, 0.28 ) }
    dend_2 { pt3dadd( 13.3163, 214.659, 12.3218, 0.28 ) }
    dend_2 { pt3dadd( 13.2676, 216.823, 12.4559, 0.83 ) }
    dend_2 { pt3dadd( 13.1695, 220.064, 12.5954, 0.28 ) }
    dend_2 { pt3dadd( 13.1048, 223.317, 12.6256, 0.55 ) }
    dend_2 { pt3dadd( 12.9919, 226.647, 12.6428, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_2 { pt3dadd( 12.902, 229.722, 12.6895, 0.55 ) }
    dend_2 { pt3dadd( 12.8645, 230.538, 12.7091, 0.55 ) }
    dend_2 { pt3dadd( 12.7312, 232.529, 12.8217, 0.55 ) }
    dend_2 { pt3dadd( 12.6098, 234.181, 12.969, 0.55 ) }
    dend_2 { pt3dadd( 12.28, 236.272, 13.1026, 0.55 ) }
    dend_2 { pt3dadd( 11.7122, 238.21, 13.1966, 0.55 ) }
    dend_2 { pt3dadd( 10.6713, 240.771, 13.3551, 0.55 ) }
    dend_2 { pt3dadd( 10.1295, 241.814, 13.4607, 0.55 ) }
    dend_2 { pt3dadd( 8.12482, 245.247, 13.9257, 0.83 ) }
    dend_2 { pt3dadd( 6.41664, 247.933, 14.5357, 0.55 ) }
    dend_2 { pt3dadd( 4.37022, 250.853, 15.2989, 0.83 ) }
    dend_2 { pt3dadd( 2.69443, 253.05, 15.9654, 0.55 ) }
    dend_2 { pt3dadd( 1.39449, 254.597, 16.5319, 0.83 ) }
    dend_2 { pt3dadd( -0.1435, 256.344, 17.2847, 0.55 ) }
    dend_2 { pt3dadd( -2.76006, 258.835, 18.7474, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 15/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -20.5955, -66.5792, 16.8763, 0.55 ) }
    dend_46 { pt3dadd( -22.571, -71.975, 8.31588, 0.55 ) }
    dend_46 { pt3dadd( -22.8633, -72.7733, 7.04937, 0.55 ) }
    dend_46 { pt3dadd( -23.4613, -74.4068, 4.45785, 0.28 ) }
    dend_46 { pt3dadd( -23.811, -75.3621, 2.9424, 0.28 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 20/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -20.5955, -66.5792, 16.8763, 0.55 ) }
    dend_45 { pt3dadd( -22.8889, -68.2643, 16.6896, 0.55 ) }
    dend_45 { pt3dadd( -25.4079, -70.1222, 16.5348, 0.28 ) }
    dend_45 { pt3dadd( -27.5375, -71.6531, 16.4602, 0.55 ) }
    dend_45 { pt3dadd( -29.9127, -73.3189, 16.3748, 0.28 ) }
    dend_45 { pt3dadd( -31.3726, -74.3016, 16.335, 0.55 ) }
    dend_45 { pt3dadd( -32.5648, -75.075, 16.2884, 0.28 ) }
    dend_45 { pt3dadd( -34.0942, -76.032, 16.2752, 0.55 ) }
    dend_45 { pt3dadd( -36.1693, -77.1797, 16.3534, 0.28 ) }
    dend_45 { pt3dadd( -38.1256, -78.1655, 16.4762, 0.55 ) }
    dend_45 { pt3dadd( -40.1119, -79.1376, 16.7481, 0.28 ) }
    dend_45 { pt3dadd( -41.693, -79.8964, 16.9889, 0.55 ) }
    dend_45 { pt3dadd( -44.7648, -81.3498, 17.6266, 0.28 ) }
    dend_45 { pt3dadd( -46.5202, -82.2288, 18.0721, 0.55 ) }
    dend_45 { pt3dadd( -48.4957, -83.3404, 18.6272, 0.55 ) }
    dend_45 { pt3dadd( -51.2444, -85.0229, 19.3893, 0.28 ) }
    dend_45 { pt3dadd( -52.2469, -85.6793, 19.6231, 0.28 ) }
    dend_45 { pt3dadd( -55.0327, -87.6455, 20.1723, 0.55 ) }
    dend_45 { pt3dadd( -57.2864, -89.3781, 20.5569, 0.28 ) }
    dend_45 { pt3dadd( -59.8187, -91.4739, 21.0466, 0.55 ) }
    dend_45 { pt3dadd( -62.5854, -93.8528, 21.663, 0.28 ) }
    dend_45 { pt3dadd( -64.0098, -95.1055, 22.0023, 0.55 ) }
    dend_45 { pt3dadd( -67.0258, -97.8907, 22.7887, 0.28 ) }
    dend_45 { pt3dadd( -68.9114, -99.7062, 22.7569, 0.83 ) }
    dend_45 { pt3dadd( -71.2075, -101.94, 22.1401, 0.28 ) }
    dend_45 { pt3dadd( -71.9161, -102.632, 21.744, 0.28 ) }
    dend_45 { pt3dadd( -72.8867, -103.603, 20.9594, 0.28 ) }
    dend_45 { pt3dadd( -74.5699, -105.278, 19.3806, 0.55 ) }
    dend_45 { pt3dadd( -81.9451, -112.215, 11.5374, 0.28 ) }
    dend_45 { pt3dadd( -82.7402, -112.94, 10.7007, 0.55 ) }
    dend_45 { pt3dadd( -84.09, -114.133, 9.34028, 0.28 ) }
    dend_45 { pt3dadd( -85.2139, -115.13, 8.35704, 0.55 ) }
    dend_45 { pt3dadd( -86.8212, -116.523, 7.27132, 0.28 ) }
    dend_45 { pt3dadd( -88.8166, -118.139, 6.92819, 0.55 ) }
    dend_45 { pt3dadd( -90.5452, -119.57, 7.62434, 0.28 ) }
    dend_45 { pt3dadd( -91.4803, -120.341, 7.98912, 0.55 ) }
    dend_45 { pt3dadd( -92.5921, -121.318, 8.54076, 0.28 ) }
    dend_45 { pt3dadd( -93.191, -121.819, 8.87511, 0.55 ) }
    dend_45 { pt3dadd( -95.5494, -123.643, 10.3006, 0.28 ) }
    dend_45 { pt3dadd( -96.5782, -124.419, 10.9428, 0.55 ) }
    dend_45 { pt3dadd( -98.5395, -125.865, 12.1939, 0.28 ) }
    dend_45 { pt3dadd( -101.385, -127.952, 14.1106, 0.55 ) }
    dend_45 { pt3dadd( -104.283, -130.079, 16.1243, 0.55 ) }
    dend_45 { pt3dadd( -106.041, -131.38, 17.3292, 0.28 ) }
    dend_45 { pt3dadd( -106.659, -131.829, 17.7253, 0.55 ) }
    dend_45 { pt3dadd( -108.348, -133.059, 18.8783, 0.28 ) }
    dend_45 { pt3dadd( -110.201, -134.458, 20.327, 0.55 ) }
    dend_45 { pt3dadd( -111.025, -135.058, 20.9039, 0.28 ) }
    dend_45 { pt3dadd( -112.576, -136.418, 22.0593, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_20 (entry count 69/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -11.6567, -54.0787, 15.864, 0.28 ) }
    dend_25 { pt3dadd( -9.26767, -58.1802, 12.035, 0.28 ) }
    dend_25 { pt3dadd( -8.63564, -59.3542, 11.0475, 0.28 ) }
    dend_25 { pt3dadd( -7.6186, -61.4039, 9.4765, 0.28 ) }
    dend_25 { pt3dadd( -6.26716, -64.3697, 7.24305, 0.55 ) }
    dend_25 { pt3dadd( -4.68044, -68.1935, 4.26264, 0.28 ) }
    dend_25 { pt3dadd( -3.96644, -70.1138, 2.82206, 0.55 ) }
    dend_25 { pt3dadd( -3.06172, -73.2225, 0.656606, 0.28 ) }
    dend_25 { pt3dadd( -2.80519, -74.3283, -0.0917971, 0.55 ) }
    dend_25 { pt3dadd( -2.22462, -78.2447, -2.75738, 0.28 ) }
    dend_25 { pt3dadd( -2.20204, -80.7211, -4.66737, 0.28 ) }
    dend_25 { pt3dadd( -2.30373, -82.3733, -6.23467, 0.55 ) }
    dend_25 { pt3dadd( -2.37902, -83.7066, -7.80157, 0.55 ) }
    dend_25 { pt3dadd( -2.39052, -83.9723, -8.14598, 0.55 ) }
    dend_25 { pt3dadd( -2.32244, -86.1343, -11.0025, 0.28 ) }
    dend_25 { pt3dadd( -2.20395, -88.686, -14.5739, 0.28 ) }
    dend_25 { pt3dadd( -2.04068, -90.0765, -16.6393, 0.55 ) }
    dend_25 { pt3dadd( -1.68189, -91.9324, -19.6593, 0.28 ) }
    dend_25 { pt3dadd( -1.48615, -92.6516, -20.8108, 0.28 ) }
    dend_25 { pt3dadd( -0.982374, -93.8829, -22.7962, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 89/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -11.6567, -54.0787, 15.864, 0.55 ) }
    dend_21 { pt3dadd( -12.2674, -56.8998, 15.6599, 0.55 ) }
    dend_21 { pt3dadd( -12.8007, -59.864, 15.4479, 0.55 ) }
    dend_21 { pt3dadd( -13.303, -63.0125, 15.2429, 0.55 ) }
    dend_21 { pt3dadd( -13.7282, -66.0331, 15.0992, 0.55 ) }
    dend_21 { pt3dadd( -14.023, -68.6002, 14.9624, 0.28 ) }
    dend_21 { pt3dadd( -14.1683, -70.2586, 14.9131, 0.55 ) }
    dend_21 { pt3dadd( -14.3267, -73.4464, 14.9758, 0.55 ) }
    dend_21 { pt3dadd( -14.3396, -76.085, 14.9768, 0.55 ) }
    dend_21 { pt3dadd( -14.1701, -79.265, 14.9212, 0.55 ) }
    dend_21 { pt3dadd( -13.9478, -81.3854, 14.9421, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_21 { pt3dadd( -13.6803, -83.8217, 15.0206, 0.55 ) }
    dend_21 { pt3dadd( -13.5018, -85.9263, 15.0576, 0.28 ) }
    dend_21 { pt3dadd( -13.2479, -88.2869, 15.0729, 0.55 ) }
    dend_21 { pt3dadd( -12.955, -90.74, 15.113, 0.28 ) }
    dend_21 { pt3dadd( -12.8078, -92.0483, 15.1666, 0.55 ) }
    dend_21 { pt3dadd( -12.6768, -93.804, 15.2803, 0.55 ) }
    dend_21 { pt3dadd( -12.5241, -96.486, 15.4178, 0.28 ) }
    dend_21 { pt3dadd( -12.3831, -99.9128, 15.6677, 0.55 ) }
    dend_21 { pt3dadd( -12.3431, -101.777, 15.9309, 0.28 ) }
    dend_21 { pt3dadd( -12.3499, -103.807, 16.3056, 0.28 ) }
    dend_21 { pt3dadd( -12.3563, -105.466, 16.6327, 0.28 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 11/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 38.6811, -75.4082, 27.3306, 0.83 ) }
    dend_17 { pt3dadd( 38.5171, -78.1966, 27.6371, 0.83 ) }
    dend_17 { pt3dadd( 38.3545, -80.3568, 28.0273, 0.55 ) }
    dend_17 { pt3dadd( 38.1631, -82.0959, 28.241, 0.28 ) }
    dend_17 { pt3dadd( 37.9255, -83.7984, 28.233, 0.55 ) }
    dend_17 { pt3dadd( 37.622, -85.6409, 28.1739, 0.28 ) }
    dend_17 { pt3dadd( 37.3561, -87.5443, 27.9724, 0.55 ) }
    dend_17 { pt3dadd( 37.1614, -89.4352, 27.8, 0.28 ) }
    dend_17 { pt3dadd( 36.9803, -91.9369, 27.5139, 0.55 ) }
    dend_17 { pt3dadd( 36.7069, -94.8528, 27.0845, 0.28 ) }
    dend_17 { pt3dadd( 36.495, -97.0413, 26.6475, 0.55 ) }
    dend_17 { pt3dadd( 36.2908, -99.9469, 25.9421, 0.28 ) }
    dend_17 { pt3dadd( 36.1543, -102.858, 25.2367, 0.55 ) }
    dend_17 { pt3dadd( 36.0768, -104.946, 24.859, 0.83 ) }
    dend_17 { pt3dadd( 35.9962, -108.093, 24.5904, 0.55 ) }
    dend_17 { pt3dadd( 35.9453, -109.989, 24.5192, 0.83 ) }
    dend_17 { pt3dadd( 35.8372, -112.094, 24.4278, 0.55 ) }
    dend_17 { pt3dadd( 35.6792, -113.669, 24.464, 0.55 ) }
    dend_17 { pt3dadd( 35.4857, -116.154, 24.5035, 0.28 ) }
    dend_17 { pt3dadd( 35.4204, -117.491, 24.5981, 0.55 ) }
    dend_17 { pt3dadd( 35.3868, -118.347, 24.7392, 0.28 ) }
    dend_17 { pt3dadd( 35.2766, -120.449, 25.155, 0.55 ) }
    dend_17 { pt3dadd( 35.166, -122.913, 25.5836, 0.28 ) }
    dend_17 { pt3dadd( 35.1135, -125.334, 25.8878, 0.28 ) }
    dend_17 { pt3dadd( 35.1561, -127.443, 26.034, 0.55 ) }
    dend_17 { pt3dadd( 35.25, -129.423, 26.1334, 0.28 ) }
    dend_17 { pt3dadd( 35.3851, -131.422, 26.1799, 0.55 ) }
    dend_17 { pt3dadd( 35.6, -133.384, 26.1743, 0.28 ) }
    dend_17 { pt3dadd( 35.8392, -135.549, 26.1019, 0.55 ) }
    dend_17 { pt3dadd( 36.0239, -137.803, 26.0549, 0.55 ) }
    dend_17 { pt3dadd( 36.1669, -139.402, 26.0066, 0.28 ) }
    dend_17 { pt3dadd( 36.4109, -142.305, 25.8814, 0.55 ) }
    dend_17 { pt3dadd( 36.4592, -144.039, 25.8977, 0.55 ) }
    dend_17 { pt3dadd( 36.3871, -147.227, 26.0279, 0.28 ) }
    dend_17 { pt3dadd( 36.2529, -149.174, 26.1501, 0.55 ) }
    dend_17 { pt3dadd( 36.1149, -150.539, 26.2465, 0.28 ) }
    dend_17 { pt3dadd( 36.0417, -151.37, 26.3208, 0.55 ) }
    dend_17 { pt3dadd( 35.8577, -154.372, 26.6711, 0.28 ) }
    dend_17 { pt3dadd( 35.8153, -155.176, 26.7727, 0.55 ) }
    dend_17 { pt3dadd( 35.8066, -156.336, 26.9443, 0.28 ) }
    dend_17 { pt3dadd( 35.8289, -157.416, 27.0916, 0.55 ) }
    dend_17 { pt3dadd( 35.9047, -159.512, 27.3766, 0.28 ) }
    dend_17 { pt3dadd( 36.0267, -161.044, 27.4869, 0.55 ) }
    dend_17 { pt3dadd( 36.2134, -162.7, 27.4925, 0.28 ) }
    dend_17 { pt3dadd( 36.276, -163.743, 27.5257, 0.55 ) }
    dend_17 { pt3dadd( 36.2542, -164.832, 27.5383, 0.28 ) }
    dend_17 { pt3dadd( 36.1682, -165.648, 27.56, 0.83 ) }
    dend_17 { pt3dadd( 35.7102, -168.013, 27.5354, 0.28 ) }
    dend_17 { pt3dadd( 35.3808, -169.307, 27.4904, 0.28 ) }
    dend_17 { pt3dadd( 34.5891, -172.008, 27.3446, 0.55 ) }
    dend_17 { pt3dadd( 33.7675, -174.431, 27.1858, 0.28 ) }
    dend_17 { pt3dadd( 33.1704, -175.974, 27.1016, 0.55 ) }
    dend_17 { pt3dadd( 32.4229, -177.804, 26.9853, 0.28 ) }
    dend_17 { pt3dadd( 32.001, -178.843, 26.9303, 0.55 ) }
    dend_17 { pt3dadd( 31.7265, -179.627, 26.8664, 0.28 ) }
    dend_17 { pt3dadd( 31.3771, -181.16, 26.6972, 0.55 ) }
    dend_17 { pt3dadd( 31.176, -182.85, 26.5969, 0.28 ) }
    dend_17 { pt3dadd( 31.1014, -184.055, 26.528, 0.55 ) }
    dend_17 { pt3dadd( 31.0037, -185.95, 26.5088, 0.28 ) }
    dend_17 { pt3dadd( 30.9631, -186.773, 26.5068, 0.55 ) }
    dend_17 { pt3dadd( 30.8356, -188.939, 26.4497, 0.28 ) }
    dend_17 { pt3dadd( 30.7843, -189.874, 26.3978, 0.55 ) }
    dend_17 { pt3dadd( 30.6999, -191.271, 26.29, 0.28 ) }
    dend_17 { pt3dadd( 30.6279, -192.216, 26.2343, 0.55 ) }
    dend_17 { pt3dadd( 30.5743, -193.044, 26.158, 0.55 ) }
    dend_17 { pt3dadd( 30.5084, -194.758, 25.9985, 0.55 ) }
    dend_17 { pt3dadd( 30.4659, -196.513, 25.7479, 0.28 ) }
    dend_17 { pt3dadd( 30.4502, -197.826, 25.5687, 0.28 ) }
    dend_17 { pt3dadd( 30.4006, -199.192, 25.3553, 0.55 ) }
    dend_17 { pt3dadd( 30.2229, -201.478, 24.9732, 0.28 ) }
    dend_17 { pt3dadd( 30.0504, -202.884, 24.7468, 0.28 ) }
    dend_17 { pt3dadd( 29.7874, -204.608, 24.4894, 0.28 ) }
    dend_17 { pt3dadd( 28.9915, -208.777, 23.891, 0.28 ) }
    dend_17 { pt3dadd( 28.1681, -212.735, 23.2814, 0.28 ) }
    dend_17 { pt3dadd( 27.7405, -214.579, 23.0216, 0.55 ) }
    dend_17 { pt3dadd( 27.2088, -216.905, 22.739, 0.28 ) }
    dend_17 { pt3dadd( 27.0407, -217.718, 22.6768, 0.28 ) }
    dend_17 { pt3dadd( 26.7746, -219.3, 22.6619, 0.55 ) }
    dend_17 { pt3dadd( 26.3738, -222.429, 22.7581, 0.28 ) }
    dend_17 { pt3dadd( 26.2627, -223.638, 22.8769, 0.55 ) }
    dend_17 { pt3dadd( 26.0126, -226.157, 23.1565, 0.28 ) }
    dend_17 { pt3dadd( 25.6773, -228.492, 23.35, 0.55 ) }
    dend_17 { pt3dadd( 25.3559, -230.079, 23.4509, 0.28 ) }
    dend_17 { pt3dadd( 25.0386, -231.466, 23.552, 0.55 ) }
    dend_17 { pt3dadd( 24.2771, -234.112, 23.7742, 0.28 ) }
    dend_17 { pt3dadd( 23.8399, -235.362, 23.7982, 0.83 ) }
    dend_17 { pt3dadd( 22.9177, -237.211, 23.7283, 0.28 ) }
    dend_17 { pt3dadd( 22.6202, -237.712, 23.628, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 99/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 38.6811, -75.4082, 27.3306, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_14 { pt3dadd( 41.7841, -77.9739, 29.1597, 0.55 ) }
    dend_14 { pt3dadd( 45.2163, -80.8959, 31.3293, 0.55 ) }
    dend_14 { pt3dadd( 46.3834, -81.9199, 32.0761, 0.55 ) }
    dend_14 { pt3dadd( 47.6174, -83.0027, 32.8657, 0.55 ) }
    dend_14 { pt3dadd( 49.9966, -85.0901, 34.3881, 0.55 ) }
    dend_14 { pt3dadd( 51.097, -86.0556, 35.0922, 0.55 ) }
    dend_14 { pt3dadd( 52.8162, -87.8493, 36.4346, 0.28 ) }
    dend_14 { pt3dadd( 53.8352, -88.8332, 37.0841, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 8/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 10.3339, 175.407, 2.72369, 0.55 ) }
    dend_5 { pt3dadd( 10.8342, 176.096, 2.73864, 0.55 ) }
    dend_5 { pt3dadd( 13.2155, 179.238, 2.47523, 0.55 ) }
    dend_5 { pt3dadd( 14.7433, 181.136, 2.23385, 0.28 ) }
    dend_5 { pt3dadd( 16.8266, 183.681, 1.85991, 0.55 ) }
    dend_5 { pt3dadd( 18.5926, 185.834, 1.43715, 0.55 ) }
    dend_5 { pt3dadd( 20.6246, 188.339, 0.881484, 0.55 ) }
    dend_5 { pt3dadd( 23.1069, 191.422, 0.0738814, 0.55 ) }
    dend_5 { pt3dadd( 23.7336, 192.255, -0.191445, 0.55 ) }
    dend_5 { pt3dadd( 24.7562, 193.826, -0.718224, 0.55 ) }
    dend_5 { pt3dadd( 26.0595, 196.159, -1.552, 0.83 ) }
    dend_5 { pt3dadd( 26.6135, 197.315, -2.0012, 0.28 ) }
    dend_5 { pt3dadd( 27.4295, 199.302, -2.77334, 0.55 ) }
    dend_5 { pt3dadd( 28.606, 202.809, -4.03308, 0.28 ) }
    dend_5 { pt3dadd( 29.4524, 205.553, -5.01383, 0.28 ) }
    dend_5 { pt3dadd( 30.4811, 209.2, -6.39071, 0.55 ) }
    dend_5 { pt3dadd( 31.0589, 211.335, -7.23225, 0.55 ) }
    dend_5 { pt3dadd( 31.292, 212.188, -7.59463, 0.55 ) }
    dend_5 { pt3dadd( 32.3684, 216.311, -9.53556, 0.55 ) }
    dend_5 { pt3dadd( 32.7007, 217.699, -10.2267, 0.28 ) }
    dend_5 { pt3dadd( 33.1455, 220.039, -11.435, 0.55 ) }
    dend_5 { pt3dadd( 33.378, 221.926, -12.3987, 0.55 ) }
    dend_5 { pt3dadd( 33.4609, 223.161, -13.1057, 0.28 ) }
    dend_5 { pt3dadd( 33.4544, 224.803, -14.1554, 0.55 ) }
    dend_5 { pt3dadd( 33.3939, 225.983, -14.9803, 0.55 ) }
    dend_5 { pt3dadd( 32.9898, 229.594, -17.5415, 0.55 ) }
    dend_5 { pt3dadd( 32.6771, 232.058, -19.2715, 0.55 ) }
    dend_5 { pt3dadd( 32.2528, 234.608, -21.0215, 0.55 ) }
    dend_5 { pt3dadd( 31.8937, 236.745, -22.411, 0.55 ) }
    dend_5 { pt3dadd( 31.6914, 238.037, -23.252, 0.28 ) }
    dend_5 { pt3dadd( 31.4067, 239.751, -24.383, 0.55 ) }
    dend_5 { pt3dadd( 31.1118, 241.082, -25.293, 0.28 ) }
    dend_5 { pt3dadd( 30.5381, 243.281, -26.7786, 0.55 ) }
    dend_5 { pt3dadd( 29.9765, 245.74, -28.4043, 0.55 ) }
    dend_5 { pt3dadd( 29.3152, 248.782, -30.4479, 0.28 ) }
    dend_5 { pt3dadd( 28.953, 250.257, -31.4753, 0.55 ) }
    dend_5 { pt3dadd( 28.3141, 252.557, -33.15, 0.28 ) }
    dend_5 { pt3dadd( 27.824, 254.087, -34.2491, 0.28 ) }
    dend_5 { pt3dadd( 27.2704, 255.632, -35.439, 0.28 ) }
    dend_5 { pt3dadd( 26.8475, 256.608, -36.2114, 0.28 ) }
    dend_5 { pt3dadd( 26.2332, 257.962, -37.198, 0.28 ) }
    dend_5 { pt3dadd( 25.6808, 259.281, -38.2004, 0.55 ) }
    dend_5 { pt3dadd( 24.9269, 261.374, -39.7811, 0.55 ) }
    dend_5 { pt3dadd( 24.1596, 263.768, -41.6488, 0.28 ) }
    dend_5 { pt3dadd( 23.5945, 265.895, -43.3185, 1.11 ) }
    dend_5 { pt3dadd( 23.3338, 267.313, -44.3797, 0.83 ) }
    dend_5 { pt3dadd( 23.0968, 269.486, -45.9617, 0.55 ) }
    dend_5 { pt3dadd( 22.9318, 272.137, -47.8935, 1.11 ) }
    dend_5 { pt3dadd( 22.8833, 274.227, -49.4247, 0.55 ) }
    dend_5 { pt3dadd( 22.9315, 275.35, -50.152, 0.55 ) }
    dend_5 { pt3dadd( 23.0855, 277.068, -51.2352, 0.55 ) }
    dend_5 { pt3dadd( 23.3003, 279.593, -52.793, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 60/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 10.3339, 175.407, 2.72369, 0.55 ) }
    dend_4 { pt3dadd( 13.0465, 177.426, 2.50015, 0.55 ) }
    dend_4 { pt3dadd( 17.7679, 181.095, 1.75451, 0.55 ) }
    dend_4 { pt3dadd( 20.2575, 183.087, 1.26394, 0.55 ) }
    dend_4 { pt3dadd( 22.4078, 184.879, 0.788264, 0.55 ) }
    dend_4 { pt3dadd( 24.1441, 186.381, 0.377877, 0.55 ) }
    dend_4 { pt3dadd( 25.9727, 187.994, -0.0982125, 0.55 ) }
    dend_4 { pt3dadd( 27.7018, 189.718, -0.751193, 0.28 ) }
    dend_4 { pt3dadd( 28.056, 190.155, -0.946746, 0.55 ) }
    dend_4 { pt3dadd( 28.6254, 190.922, -1.43553, 0.28 ) }
    dend_4 { pt3dadd( 29.052, 191.519, -1.87297, 0.55 ) }
    dend_4 { pt3dadd( 29.663, 192.497, -2.56818, 0.28 ) }
    dend_4 { pt3dadd( 29.7895, 192.7, -2.7025, 0.55 ) }
    dend_4 { pt3dadd( 30.9979, 194.68, -3.8053, 0.28 ) }
    dend_4 { pt3dadd( 31.5726, 195.575, -4.30319, 0.55 ) }
    dend_4 { pt3dadd( 32.4845, 196.959, -5.0464, 0.28 ) }
    dend_4 { pt3dadd( 33.0773, 197.897, -5.49826, 0.55 ) }
    dend_4 { pt3dadd( 33.7146, 199.065, -5.89993, 0.28 ) }
    dend_4 { pt3dadd( 34.3578, 200.384, -6.32319, 0.28 ) }
    dend_4 { pt3dadd( 34.861, 201.488, -6.61315, 0.28 ) }
    dend_4 { pt3dadd( 35.1695, 202.234, -6.76477, 0.55 ) }
    dend_4 { pt3dadd( 35.9084, 204.116, -7.20962, 0.28 ) }
    dend_4 { pt3dadd( 36.6976, 206.111, -7.6672, 0.55 ) }
    dend_4 { pt3dadd( 37.8868, 209.075, -8.34327, 0.28 ) }
    dend_4 { pt3dadd( 38.5207, 210.613, -8.70826, 0.55 ) }
    dend_4 { pt3dadd( 39.2486, 212.43, -9.12187, 0.55 ) }
    dend_4 { pt3dadd( 40.0675, 214.482, -9.60412, 0.28 ) }
    dend_4 { pt3dadd( 40.5452, 215.709, -9.94915, 0.55 ) }
    dend_4 { pt3dadd( 41.0756, 217.103, -10.3561, 0.28 ) }
    dend_4 { pt3dadd( 41.5854, 218.576, -10.7789, 0.83 ) }
    dend_4 { pt3dadd( 42.2834, 220.647, -11.4026, 0.28 ) }
    dend_4 { pt3dadd( 42.8019, 222.385, -11.9404, 0.55 ) }
    dend_4 { pt3dadd( 43.3371, 224.235, -12.3921, 0.28 ) }
    dend_4 { pt3dadd( 43.9874, 226.483, -12.8674, 0.55 ) }
    dend_4 { pt3dadd( 44.5446, 228.496, -13.1924, 0.28 ) }
    dend_4 { pt3dadd( 45.1179, 230.519, -13.5417, 0.55 ) }
    dend_4 { pt3dadd( 45.5546, 232.024, -13.8138, 0.28 ) }
    dend_4 { pt3dadd( 46.1096, 233.96, -14.1829, 0.28 ) }
    dend_4 { pt3dadd( 46.6129, 235.711, -14.5171, 0.55 ) }
    dend_4 { pt3dadd( 47.2445, 237.956, -15.0823, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_4 { pt3dadd( 48.0494, 240.834, -15.766, 0.28 ) }
    dend_4 { pt3dadd( 48.2422, 241.564, -15.969, 0.55 ) }
    dend_4 { pt3dadd( 48.508, 242.553, -16.247, 0.55 ) }
    dend_4 { pt3dadd( 49.2988, 245.595, -17.0145, 0.28 ) }
    dend_4 { pt3dadd( 49.6206, 246.794, -17.2677, 0.55 ) }
    dend_4 { pt3dadd( 50.4621, 249.662, -17.7165, 0.55 ) }
    dend_4 { pt3dadd( 51.2432, 252.404, -18.0041, 0.28 ) }
    dend_4 { pt3dadd( 51.6494, 253.805, -18.1542, 0.55 ) }
    dend_4 { pt3dadd( 52.4428, 256.333, -18.3819, 0.28 ) }
    dend_4 { pt3dadd( 52.8646, 257.674, -18.5008, 0.55 ) }
    dend_4 { pt3dadd( 53.3017, 259.11, -18.6109, 0.28 ) }
    dend_4 { pt3dadd( 53.9014, 260.954, -18.7363, 0.55 ) }
    dend_4 { pt3dadd( 54.5691, 262.853, -18.7945, 0.28 ) }
    dend_4 { pt3dadd( 55.3857, 265.049, -18.944, 0.28 ) }
    dend_4 { pt3dadd( 56.0801, 266.859, -19.1114, 0.55 ) }
    dend_4 { pt3dadd( 56.7795, 268.62, -19.2599, 0.28 ) }
    dend_4 { pt3dadd( 57.5018, 270.36, -19.4446, 0.28 ) }
    dend_4 { pt3dadd( 57.9831, 271.339, -19.564, 0.28 ) }
    dend_4 { pt3dadd( 58.8618, 273.05, -19.7979, 0.83 ) }
    dend_4 { pt3dadd( 60.0114, 275.203, -20.2014, 0.28 ) }
    dend_4 { pt3dadd( 60.5107, 276.042, -20.3699, 0.55 ) }
    dend_4 { pt3dadd( 61.4668, 277.578, -20.7938, 0.28 ) }
    dend_4 { pt3dadd( 62.9576, 280.161, -21.7013, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 23/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -23.811, -75.3621, 2.9424, 0.28 ) }
    dend_48 { pt3dadd( -22.681, -77.11, 3.6324, 0.28 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 25/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -23.811, -75.3621, 2.9424, 0.55 ) }
    dend_47 { pt3dadd( -24.8693, -78.0253, 2.42695, 0.55 ) }
    dend_47 { pt3dadd( -25.7264, -80.155, 1.96525, 0.28 ) }
    dend_47 { pt3dadd( -26.153, -81.2459, 1.74518, 0.55 ) }
    dend_47 { pt3dadd( -27.7307, -85.3268, 1.15817, 0.28 ) }
    dend_47 { pt3dadd( -28.4708, -87.369, 0.871611, 0.55 ) }
    dend_47 { pt3dadd( -29.15, -89.3671, 0.735761, 0.28 ) }
    dend_47 { pt3dadd( -29.4277, -90.2905, 0.641896, 0.55 ) }
    dend_47 { pt3dadd( -30.0444, -92.5984, 0.519586, 0.28 ) }
    dend_47 { pt3dadd( -30.3885, -94.1453, 0.465225, 0.55 ) }
    dend_47 { pt3dadd( -30.9445, -97.2729, 0.485916, 0.28 ) }
    dend_47 { pt3dadd( -31.5284, -100.794, 0.482701, 0.28 ) }
    dend_47 { pt3dadd( -31.9865, -103.597, 0.565632, 0.55 ) }
    dend_47 { pt3dadd( -32.38, -105.736, 0.614635, 0.55 ) }
    dend_47 { pt3dadd( -32.9531, -108.072, 0.614741, 0.28 ) }
    dend_47 { pt3dadd( -33.2139, -108.895, 0.634644, 0.55 ) }
    dend_47 { pt3dadd( -34.0483, -110.999, 0.79127, 0.28 ) }
    dend_47 { pt3dadd( -34.6207, -112.196, 0.870332, 0.55 ) }
    dend_47 { pt3dadd( -36.0856, -114.798, 1.21565, 0.28 ) }
    dend_47 { pt3dadd( -37.7387, -117.443, 1.57676, 0.55 ) }
    dend_47 { pt3dadd( -39.1784, -119.596, 1.90533, 0.28 ) }
    dend_47 { pt3dadd( -39.3372, -119.828, 1.93377, 0.55 ) }
    dend_47 { pt3dadd( -40.5334, -121.585, 2.06458, 0.28 ) }
    dend_47 { pt3dadd( -41.9322, -123.757, 2.20643, 0.28 ) }
    dend_47 { pt3dadd( -42.5177, -124.705, 2.24164, 0.55 ) }
    dend_47 { pt3dadd( -43.4982, -126.406, 2.12909, 0.28 ) }
    dend_47 { pt3dadd( -44.3784, -128.021, 1.9114, 0.28 ) }
    dend_47 { pt3dadd( -45.1291, -129.434, 1.707, 0.28 ) }
    dend_47 { pt3dadd( -45.748, -130.648, 1.54607, 0.28 ) }
    dend_47 { pt3dadd( -46.1974, -131.608, 1.33776, 0.28 ) }
    dend_47 { pt3dadd( -47.04, -133.579, 0.881597, 0.28 ) }
    dend_47 { pt3dadd( -47.5912, -135.083, 0.545544, 0.55 ) }
    dend_47 { pt3dadd( -47.9887, -136.233, 0.336719, 0.28 ) }
    dend_47 { pt3dadd( -48.3518, -137.314, 0.158298, 0.55 ) }
    dend_47 { pt3dadd( -49.1867, -139.957, -0.152428, 0.28 ) }
    dend_47 { pt3dadd( -49.7127, -141.46, -0.244055, 0.28 ) }
    dend_47 { pt3dadd( -50.1332, -142.463, -0.331316, 0.55 ) }
    dend_47 { pt3dadd( -50.787, -143.83, -0.488622, 0.28 ) }
    dend_47 { pt3dadd( -51.2691, -144.77, -0.592401, 0.55 ) }
    dend_47 { pt3dadd( -52.6928, -147.35, -0.868775, 0.28 ) }
    dend_47 { pt3dadd( -53.6393, -148.996, -0.93452, 0.28 ) }
    dend_47 { pt3dadd( -54.8563, -151.065, -1.05873, 0.55 ) }
    dend_47 { pt3dadd( -56.2096, -153.422, -1.23804, 0.28 ) }
    dend_47 { pt3dadd( -57.3768, -155.599, -1.47044, 0.28 ) }
    dend_47 { pt3dadd( -57.6622, -156.125, -1.52857, 0.55 ) }
    dend_47 { pt3dadd( -58.937, -158.446, -1.72984, 0.28 ) }
    dend_47 { pt3dadd( -59.4297, -159.353, -1.78322, 0.55 ) }
    dend_47 { pt3dadd( -61.0891, -162.194, -1.89973, 0.28 ) }
    dend_47 { pt3dadd( -61.7584, -163.215, -1.95972, 0.55 ) }
    dend_47 { pt3dadd( -62.5382, -164.312, -1.96106, 0.28 ) }
    dend_47 { pt3dadd( -63.4373, -165.565, -1.93218, 0.55 ) }
    dend_47 { pt3dadd( -64.9948, -167.662, -1.93756, 0.28 ) }
    dend_47 { pt3dadd( -66.1676, -169.197, -1.95109, 0.55 ) }
    dend_47 { pt3dadd( -67.8116, -171.393, -1.94883, 0.28 ) }
    dend_47 { pt3dadd( -69.0835, -173.143, -1.94791, 0.28 ) }
    dend_47 { pt3dadd( -70.6136, -175.438, -1.97907, 0.55 ) }
    dend_47 { pt3dadd( -72.0447, -177.772, -2.04239, 0.28 ) }
    dend_47 { pt3dadd( -73.4242, -180.725, -2.11365, 0.28 ) }
    dend_47 { pt3dadd( -74.1172, -182.771, -2.12808, 0.28 ) }
    dend_47 { pt3dadd( -74.1899, -183.121, -2.16811, 0.55 ) }
    dend_47 { pt3dadd( -74.2431, -184.211, -2.39848, 0.28 ) }
    dend_47 { pt3dadd( -74.1648, -184.974, -2.58381, 0.55 ) }
    dend_47 { pt3dadd( -73.3003, -189.247, -3.72404, 0.28 ) }
    dend_47 { pt3dadd( -72.9253, -190.676, -4.14676, 0.55 ) }
    dend_47 { pt3dadd( -71.6841, -195.393, -5.76928, 0.28 ) }
    dend_47 { pt3dadd( -71.0603, -197.781, -6.61613, 0.28 ) }
    dend_47 { pt3dadd( -70.7844, -198.888, -7.03984, 0.55 ) }
    dend_47 { pt3dadd( -70.3002, -200.844, -7.8661, 0.28 ) }
    dend_47 { pt3dadd( -69.908, -202.629, -8.76334, 0.28 ) }
    dend_47 { pt3dadd( -69.6299, -203.89, -9.4016, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_25 (entry count 95/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -0.982374, -93.8829, -22.7962, 0.28 ) }
    dend_43 { pt3dadd( -10.0866, -95.4452, -10.6959, 0.28 ) }
    dend_43 { pt3dadd( -11.8193, -95.5975, -8.77753, 0.83 ) }
    dend_43 { pt3dadd( -12.9381, -95.5411, -7.98354, 0.28 ) }
    dend_43 { pt3dadd( -13.3037, -95.4858, -7.83204, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_43 { pt3dadd( -17.3287, -94.2402, -7.54235, 0.28 ) }
    dend_43 { pt3dadd( -18.8591, -93.6355, -7.60675, 0.55 ) }
    dend_43 { pt3dadd( -20.1627, -92.8994, -8.08913, 0.55 ) }
    dend_43 { pt3dadd( -22.1998, -91.6199, -8.75327, 0.28 ) }
    dend_43 { pt3dadd( -22.8049, -91.1232, -9.00125, 0.55 ) }
    dend_43 { pt3dadd( -26.3268, -87.7132, -10.6663, 0.28 ) }
    dend_43 { pt3dadd( -26.9984, -86.8919, -11.0877, 0.83 ) }
    dend_43 { pt3dadd( -28.2614, -85.1955, -11.9745, 0.28 ) }
    dend_43 { pt3dadd( -28.5378, -84.7831, -12.1806, 0.55 ) }
    dend_43 { pt3dadd( -32.345, -77.9967, -15.7039, 0.28 ) }
    dend_43 { pt3dadd( -32.7428, -77.1948, -16.1309, 0.55 ) }
    dend_43 { pt3dadd( -34.2314, -73.5517, -18.2526, 0.28 ) }
    dend_43 { pt3dadd( -34.5778, -72.6263, -18.8301, 0.28 ) }
    dend_43 { pt3dadd( -35.0263, -71.2375, -19.6749, 0.55 ) }
    dend_43 { pt3dadd( -35.8856, -68.4404, -21.2866, 0.28 ) }
    dend_43 { pt3dadd( -36.1072, -67.6026, -21.7005, 0.55 ) }
    dend_43 { pt3dadd( -36.7286, -65.5071, -22.5984, 0.28 ) }
    dend_43 { pt3dadd( -36.891, -65.0164, -22.7621, 0.55 ) }
    dend_43 { pt3dadd( -38.8747, -59.4724, -24.4453, 0.28 ) }
    dend_43 { pt3dadd( -39.1132, -58.9338, -24.6006, 0.55 ) }
    dend_43 { pt3dadd( -39.973, -57.4028, -24.9314, 0.28 ) }
    dend_43 { pt3dadd( -40.2358, -56.9825, -24.9984, 0.55 ) }
    dend_43 { pt3dadd( -41.4217, -55.3288, -25.1954, 0.28 ) }
    dend_43 { pt3dadd( -41.9382, -54.6582, -25.2545, 0.55 ) }
    dend_43 { pt3dadd( -43.4751, -52.7491, -25.4384, 0.28 ) }
    dend_43 { pt3dadd( -44.3192, -51.7174, -25.5417, 0.55 ) }
    dend_43 { pt3dadd( -45.8425, -49.8741, -25.7398, 0.28 ) }
    dend_43 { pt3dadd( -46.6107, -48.9119, -25.844, 0.55 ) }
    dend_43 { pt3dadd( -49.3097, -45.4425, -26.1442, 0.28 ) }
    dend_43 { pt3dadd( -50.1374, -44.2091, -26.1904, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 30/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -0.982374, -93.8829, -22.7962, 0.28 ) }
    dend_26 { pt3dadd( -0.680391, -96.2734, -25.0373, 0.28 ) }
    dend_26 { pt3dadd( -0.467882, -97.9556, -26.6143, 0.55 ) }
    dend_26 { pt3dadd( 0.127683, -102.67, -31.034, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 34/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -12.3563, -105.466, 16.6327, 0.28 ) }
    dend_22 { pt3dadd( -12.4887, -105.89, 16.6761, 0.28 ) }
    dend_22 { pt3dadd( -13.2043, -108.129, 16.9062, 0.55 ) }
    dend_22 { pt3dadd( -14.0717, -111.003, 17.184, 0.28 ) }
    dend_22 { pt3dadd( -14.5046, -112.958, 17.3714, 0.55 ) }
    dend_22 { pt3dadd( -14.8844, -114.755, 17.5687, 0.55 ) }
    dend_22 { pt3dadd( -15.1466, -116.072, 17.6984, 0.28 ) }
    dend_22 { pt3dadd( -15.3479, -117.188, 17.803, 0.55 ) }
    dend_22 { pt3dadd( -15.5784, -118.774, 17.9468, 0.55 ) }
    dend_22 { pt3dadd( -15.9369, -121.803, 18.3669, 0.55 ) }
    dend_22 { pt3dadd( -16.2175, -125.263, 18.8752, 0.55 ) }
    dend_22 { pt3dadd( -16.2866, -126.519, 19.0659, 0.28 ) }
    dend_22 { pt3dadd( -16.2909, -128.044, 19.2267, 0.55 ) }
    dend_22 { pt3dadd( -16.265, -129.238, 19.291, 0.28 ) }
    dend_22 { pt3dadd( -16.1705, -132.216, 19.3267, 0.55 ) }
    dend_22 { pt3dadd( -16.1282, -133.241, 19.2968, 0.28 ) }
    dend_22 { pt3dadd( -15.9111, -135.396, 19.075, 0.55 ) }
    dend_22 { pt3dadd( -15.4844, -139.179, 18.5769, 0.55 ) }
    dend_22 { pt3dadd( -15.2967, -140.792, 18.3015, 0.55 ) }
    dend_22 { pt3dadd( -15.165, -141.822, 18.0999, 0.28 ) }
    dend_22 { pt3dadd( -15.0893, -142.384, 17.9941, 0.55 ) }
    dend_22 { pt3dadd( -14.7964, -145.038, 17.5359, 0.28 ) }
    dend_22 { pt3dadd( -14.6918, -146.079, 17.3706, 0.55 ) }
    dend_22 { pt3dadd( -14.6232, -146.999, 17.3177, 0.28 ) }
    dend_22 { pt3dadd( -14.5025, -147.948, 17.3025, 0.55 ) }
    dend_22 { pt3dadd( -14.2569, -149.672, 17.3278, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 60/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 53.8352, -88.8332, 37.0841, 0.55 ) }
    dend_16 { pt3dadd( 55.4851, -92.7486, 35.335, 0.55 ) }
    dend_16 { pt3dadd( 56.3865, -94.7099, 34.5922, 0.55 ) }
    dend_16 { pt3dadd( 56.9071, -95.8722, 34.1163, 0.55 ) }
    dend_16 { pt3dadd( 57.3568, -97.0651, 33.6521, 0.83 ) }
    dend_16 { pt3dadd( 58.6032, -100.446, 32.6731, 0.55 ) }
    dend_16 { pt3dadd( 59.3556, -102.569, 32.3419, 0.28 ) }
    dend_16 { pt3dadd( 59.8125, -103.99, 32.3156, 0.55 ) }
    dend_16 { pt3dadd( 60.6272, -106.743, 32.4499, 0.28 ) }
    dend_16 { pt3dadd( 61.4455, -109.517, 32.7895, 0.55 ) }
    dend_16 { pt3dadd( 62.4132, -113.252, 33.4033, 0.83 ) }
    dend_16 { pt3dadd( 63.1331, -116.693, 34.1383, 0.55 ) }
    dend_16 { pt3dadd( 63.5794, -119.288, 34.7021, 0.83 ) }
    dend_16 { pt3dadd( 63.9061, -121.439, 35.1618, 0.55 ) }
    dend_16 { pt3dadd( 64.1207, -123.187, 35.5924, 0.83 ) }
    dend_16 { pt3dadd( 64.4406, -126.159, 36.2284, 0.55 ) }
    dend_16 { pt3dadd( 64.6062, -128.539, 36.7975, 0.83 ) }
    dend_16 { pt3dadd( 64.7402, -130.996, 37.356, 0.55 ) }
    dend_16 { pt3dadd( 64.786, -132.105, 37.66, 0.83 ) }
    dend_16 { pt3dadd( 64.8737, -134.781, 38.3982, 0.55 ) }
    dend_16 { pt3dadd( 65.0252, -137.455, 39.2465, 0.55 ) }
    dend_16 { pt3dadd( 65.5138, -141.938, 41.223, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 82/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 53.8352, -88.8332, 37.0841, 0.28 ) }
    dend_15 { pt3dadd( 56.4872, -89.1038, 34.9578, 0.28 ) }
    dend_15 { pt3dadd( 59.8533, -89.5121, 32.7352, 0.28 ) }
    dend_15 { pt3dadd( 62.9283, -89.859, 31.2884, 0.28 ) }
    dend_15 { pt3dadd( 65.8099, -90.1577, 30.369, 0.28 ) }
    dend_15 { pt3dadd( 68.741, -90.5023, 29.8635, 0.55 ) }
    dend_15 { pt3dadd( 71.0203, -90.8304, 29.7196, 0.28 ) }
    dend_15 { pt3dadd( 74.8747, -91.4358, 30.21, 0.55 ) }
    dend_15 { pt3dadd( 79.2327, -92.1292, 31.4144, 0.55 ) }
    dend_15 { pt3dadd( 81.3095, -92.4871, 32.1623, 0.28 ) }
    dend_15 { pt3dadd( 84.9431, -93.131, 33.64, 0.28 ) }
    dend_15 { pt3dadd( 88.204, -93.7328, 35.0292, 0.28 ) }
    dend_15 { pt3dadd( 90.5826, -94.1682, 35.9726, 0.28 ) }
    dend_15 { pt3dadd( 93.1721, -94.6201, 36.7936, 0.28 ) }
    dend_15 { pt3dadd( 94.2675, -94.8102, 37.0661, 0.55 ) }
    dend_15 { pt3dadd( 96.4002, -95.1311, 37.5386, 0.55 ) }
    dend_15 { pt3dadd( 97.6032, -95.2679, 37.7884, 0.55 ) }
    dend_15 { pt3dadd( 101.592, -95.619, 38.6152, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_15 { pt3dadd( 102.941, -95.7289, 38.8737, 0.55 ) }
    dend_15 { pt3dadd( 105.284, -95.914, 39.4268, 0.55 ) }
    dend_15 { pt3dadd( 107.978, -96.1966, 40.0547, 0.55 ) }
    dend_15 { pt3dadd( 108.772, -96.3111, 40.2132, 0.83 ) }
    dend_15 { pt3dadd( 110.804, -96.6421, 40.5281, 0.28 ) }
    dend_15 { pt3dadd( 113.818, -97.3142, 40.8036, 0.28 ) }
    dend_15 { pt3dadd( 115.695, -97.8148, 40.9183, 0.55 ) }
    dend_15 { pt3dadd( 118.295, -98.5553, 40.9732, 0.28 ) }
    dend_15 { pt3dadd( 120.567, -99.2692, 40.9997, 0.55 ) }
    dend_15 { pt3dadd( 122.834, -99.9837, 41.0315, 0.55 ) }
    dend_15 { pt3dadd( 126.018, -100.942, 41.1144, 0.28 ) }
    dend_15 { pt3dadd( 126.639, -101.108, 41.1336, 0.55 ) }
    dend_15 { pt3dadd( 128.543, -101.448, 41.1627, 0.28 ) }
    dend_15 { pt3dadd( 131.429, -101.713, 41.3153, 0.55 ) }
    dend_15 { pt3dadd( 132.904, -101.732, 41.3994, 0.28 ) }
    dend_15 { pt3dadd( 134.69, -101.661, 41.3689, 0.55 ) }
    dend_15 { pt3dadd( 136.516, -101.443, 41.3814, 0.28 ) }
    dend_15 { pt3dadd( 138.747, -101.056, 41.4496, 0.28 ) }
    dend_15 { pt3dadd( 141.091, -100.562, 41.5596, 0.55 ) }
    dend_15 { pt3dadd( 143.995, -99.93, 41.7523, 0.55 ) }
    dend_15 { pt3dadd( 148.797, -98.9087, 42.0677, 0.28 ) }
    dend_15 { pt3dadd( 152.705, -98.0778, 42.3556, 0.55 ) }
    dend_15 { pt3dadd( 157.046, -97.1246, 42.8063, 0.28 ) }
    dend_15 { pt3dadd( 159.266, -96.6511, 43.0923, 0.28 ) }
    dend_15 { pt3dadd( 161.772, -96.0696, 43.4407, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 25/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 23.3003, 279.593, -52.793, 0.28 ) }
    dend_9 { pt3dadd( 21.9104, 280.135, -54.2103, 0.28 ) }
    dend_9 { pt3dadd( 20.4145, 280.717, -55.7356, 0.83 ) }
    dend_9 { pt3dadd( 16.2048, 282.356, -60.0282, 0.28 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 29/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 23.3003, 279.593, -52.793, 0.55 ) }
    dend_6 { pt3dadd( 26.5289, 279.86, -52.4586, 0.55 ) }
    dend_6 { pt3dadd( 28.7703, 279.967, -52.5641, 0.83 ) }
    dend_6 { pt3dadd( 31.0093, 279.993, -52.8187, 0.55 ) }
    dend_6 { pt3dadd( 35.1817, 279.886, -53.5922, 0.55 ) }
    dend_6 { pt3dadd( 37.5652, 279.835, -54.101, 1.11 ) }
    dend_6 { pt3dadd( 41.035, 279.804, -54.9512, 0.55 ) }
    dend_6 { pt3dadd( 44.03, 279.665, -55.9319, 0.83 ) }
    dend_6 { pt3dadd( 47.2055, 279.601, -57.0045, 0.83 ) }
    dend_6 { pt3dadd( 49.7328, 279.57, -58.0138, 0.55 ) }
    dend_6 { pt3dadd( 51.3536, 279.633, -58.7555, 0.55 ) }
    dend_6 { pt3dadd( 53.1704, 279.751, -59.6131, 0.28 ) }
    dend_6 { pt3dadd( 55.1183, 280.022, -60.2745, 0.55 ) }
    dend_6 { pt3dadd( 59.0056, 280.738, -61.1361, 0.28 ) }
    // Section: dend_42, id: dend_42, parent: dend_26 (entry count 43/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 0.127683, -102.67, -31.034, 0.28 ) }
    dend_42 { pt3dadd( 4.19934, -107.316, -26.7196, 0.28 ) }
    dend_42 { pt3dadd( 5.07777, -108.39, -26.1097, 0.55 ) }
    dend_42 { pt3dadd( 6.35982, -110.017, -25.6222, 0.28 ) }
    dend_42 { pt3dadd( 7.41258, -111.353, -25.2219, 0.55 ) }
    dend_42 { pt3dadd( 8.84539, -113.171, -24.6771, 0.28 ) }
    dend_42 { pt3dadd( 9.55126, -114.067, -24.4087, 0.55 ) }
    dend_42 { pt3dadd( 11.5908, -116.867, -25.3595, 0.28 ) }
    dend_42 { pt3dadd( 12.3026, -117.921, -25.8084, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 52/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 0.127683, -102.67, -31.034, 0.28 ) }
    dend_27 { pt3dadd( -0.448061, -105.523, -31.336, 0.28 ) }
    dend_27 { pt3dadd( -0.879301, -107.795, -31.4989, 0.55 ) }
    dend_27 { pt3dadd( -1.73144, -112.584, -31.8139, 0.28 ) }
    dend_27 { pt3dadd( -2.91638, -119.326, -32.1793, 0.28 ) }
    dend_27 { pt3dadd( -3.18196, -120.888, -32.226, 0.55 ) }
    dend_27 { pt3dadd( -3.87261, -125.038, -32.2876, 0.28 ) }
    dend_27 { pt3dadd( -4.52413, -128.776, -32.3261, 0.83 ) }
    dend_27 { pt3dadd( -5.34021, -133.563, -32.3673, 0.28 ) }
    dend_27 { pt3dadd( -5.56821, -135.197, -32.5337, 0.55 ) }
    dend_27 { pt3dadd( -5.83353, -137.141, -32.7701, 0.28 ) }
    dend_27 { pt3dadd( -5.94725, -137.924, -32.8687, 0.55 ) }
    dend_27 { pt3dadd( -6.15784, -139.215, -33.0247, 0.28 ) }
    dend_27 { pt3dadd( -6.33935, -140.188, -33.5004, 0.55 ) }
    dend_27 { pt3dadd( -7.58955, -145.754, -40.2681, 0.28 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 67/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -14.2569, -149.672, 17.3278, 0.55 ) }
    dend_24 { pt3dadd( -15.707, -152.861, 14.2909, 0.55 ) }
    dend_24 { pt3dadd( -16.1511, -153.779, 13.4933, 0.55 ) }
    dend_24 { pt3dadd( -16.578, -154.661, 12.7938, 0.28 ) }
    dend_24 { pt3dadd( -17.2632, -156.142, 11.8318, 0.28 ) }
    dend_24 { pt3dadd( -18.2469, -158.523, 10.4107, 0.55 ) }
    dend_24 { pt3dadd( -18.8575, -160.126, 9.52489, 0.28 ) }
    dend_24 { pt3dadd( -19.2678, -161.359, 8.94223, 0.55 ) }
    dend_24 { pt3dadd( -19.7571, -162.897, 8.25818, 0.28 ) }
    dend_24 { pt3dadd( -20.2991, -164.76, 7.50552, 0.55 ) }
    dend_24 { pt3dadd( -20.9396, -167.579, 6.57169, 0.28 ) }
    dend_24 { pt3dadd( -21.0309, -168.612, 6.36277, 0.28 ) }
    dend_24 { pt3dadd( -21.0729, -170.657, 6.10495, 0.28 ) }
    dend_24 { pt3dadd( -20.9137, -172.89, 5.68921, 0.55 ) }
    dend_24 { pt3dadd( -20.7058, -174.729, 5.29225, 0.28 ) }
    dend_24 { pt3dadd( -20.4732, -176.473, 4.90127, 0.55 ) }
    dend_24 { pt3dadd( -20.0858, -179.065, 4.40143, 0.28 ) }
    dend_24 { pt3dadd( -19.8162, -180.718, 4.04109, 0.55 ) }
    dend_24 { pt3dadd( -19.3076, -183.898, 3.24447, 0.28 ) }
    dend_24 { pt3dadd( -19.0715, -185.423, 2.77904, 0.55 ) }
    dend_24 { pt3dadd( -18.8866, -186.801, 2.34314, 0.28 ) }
    dend_24 { pt3dadd( -18.7278, -188.326, 1.85645, 0.55 ) }
    dend_24 { pt3dadd( -18.6462, -190.336, 1.26277, 0.28 ) }
    dend_24 { pt3dadd( -18.6204, -191.652, 0.993981, 0.28 ) }
    dend_24 { pt3dadd( -18.6219, -194.555, 0.579839, 0.55 ) }
    dend_24 { pt3dadd( -18.6319, -197.381, 0.183544, 0.28 ) }
    dend_24 { pt3dadd( -18.7039, -198.899, -0.00170427, 0.55 ) }
    dend_24 { pt3dadd( -19.0, -201.976, -0.268346, 0.28 ) }
    dend_24 { pt3dadd( -19.305, -204.265, -0.414216, 0.55 ) }
    dend_24 { pt3dadd( -19.6763, -206.518, -0.51297, 0.28 ) }
    dend_24 { pt3dadd( -20.1635, -208.97, -0.599823, 0.28 ) }
    dend_24 { pt3dadd( -20.6145, -211.017, -0.616986, 0.55 ) }
    dend_24 { pt3dadd( -21.0191, -212.853, -0.667198, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_24 { pt3dadd( -21.5809, -215.461, -0.78493, 0.28 ) }
    dend_24 { pt3dadd( -21.912, -217.087, -0.993411, 0.55 ) }
    dend_24 { pt3dadd( -22.2722, -218.881, -1.25086, 0.28 ) }
    dend_24 { pt3dadd( -22.4989, -220.14, -1.48956, 0.55 ) }
    dend_24 { pt3dadd( -22.7433, -221.947, -2.00351, 0.28 ) }
    dend_24 { pt3dadd( -22.9001, -223.144, -2.39346, 0.55 ) }
    dend_24 { pt3dadd( -23.2628, -225.606, -3.48835, 0.28 ) }
    dend_24 { pt3dadd( -23.307, -225.939, -3.66257, 0.55 ) }
    dend_24 { pt3dadd( -23.5346, -227.828, -4.64641, 0.28 ) }
    dend_24 { pt3dadd( -23.6607, -229.292, -5.40687, 0.55 ) }
    dend_24 { pt3dadd( -23.768, -230.663, -6.03652, 0.28 ) }
    dend_24 { pt3dadd( -23.8992, -232.765, -6.76664, 0.55 ) }
    dend_24 { pt3dadd( -23.9675, -235.184, -7.40945, 0.28 ) }
    dend_24 { pt3dadd( -23.9043, -237.069, -7.91292, 0.55 ) }
    dend_24 { pt3dadd( -23.632, -240.132, -8.51758, 0.28 ) }
    dend_24 { pt3dadd( -23.5075, -241.078, -8.65959, 0.55 ) }
    dend_24 { pt3dadd( -23.1344, -243.287, -8.91762, 0.28 ) }
    dend_24 { pt3dadd( -22.8654, -244.803, -9.00744, 0.55 ) }
    dend_24 { pt3dadd( -22.3808, -247.293, -9.0727, 0.28 ) }
    dend_24 { pt3dadd( -21.8216, -250.047, -9.01219, 0.55 ) }
    dend_24 { pt3dadd( -21.2795, -252.717, -8.9091, 0.28 ) }
    dend_24 { pt3dadd( -20.916, -254.477, -8.93301, 0.28 ) }
    dend_24 { pt3dadd( -20.7044, -255.777, -8.97194, 0.28 ) }
    dend_24 { pt3dadd( -20.4086, -257.828, -8.89903, 0.28 ) }
    dend_24 { pt3dadd( -20.1502, -259.968, -8.77206, 0.28 ) }
    dend_24 { pt3dadd( -19.9014, -262.026, -8.75063, 0.55 ) }
    dend_24 { pt3dadd( -19.7068, -263.578, -8.69056, 0.83 ) }
    dend_24 { pt3dadd( -19.4321, -265.847, -8.64786, 0.55 ) }
    dend_24 { pt3dadd( -19.1172, -268.417, -8.61564, 0.28 ) }
    dend_24 { pt3dadd( -18.8797, -270.46, -8.65836, 0.55 ) }
    dend_24 { pt3dadd( -18.7136, -271.984, -8.7194, 0.28 ) }
    dend_24 { pt3dadd( -18.6021, -272.973, -8.76985, 0.55 ) }
    dend_24 { pt3dadd( -18.5003, -274.075, -8.85409, 0.28 ) }
    dend_24 { pt3dadd( -18.3236, -275.925, -9.07183, 0.55 ) }
    dend_24 { pt3dadd( -18.2441, -276.883, -9.19903, 0.28 ) }
    dend_24 { pt3dadd( -18.0489, -278.766, -9.34931, 0.55 ) }
    dend_24 { pt3dadd( -17.7472, -281.181, -9.62407, 0.28 ) }
    dend_24 { pt3dadd( -17.6032, -282.304, -9.82924, 0.55 ) }
    dend_24 { pt3dadd( -17.4043, -283.804, -10.2173, 0.28 ) }
    dend_24 { pt3dadd( -17.2626, -284.796, -10.6141, 0.55 ) }
    dend_24 { pt3dadd( -17.0797, -286.5, -11.4249, 0.28 ) }
    dend_24 { pt3dadd( -16.8794, -288.102, -12.2838, 0.55 ) }
    dend_24 { pt3dadd( -16.5799, -290.691, -13.8582, 0.28 ) }
    dend_24 { pt3dadd( -16.4788, -291.568, -14.465, 0.83 ) }
    dend_24 { pt3dadd( -16.3394, -293.741, -16.1498, 0.28 ) }
    dend_24 { pt3dadd( -16.3157, -295.453, -17.5438, 0.28 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 46/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -14.2569, -149.672, 17.3278, 0.28 ) }
    dend_23 { pt3dadd( -13.3698, -151.724, 16.8377, 0.28 ) }
    dend_23 { pt3dadd( -12.623, -153.746, 16.4869, 0.28 ) }
    dend_23 { pt3dadd( -11.0615, -158.63, 15.865, 0.28 ) }
    dend_23 { pt3dadd( -10.1163, -162.042, 15.447, 0.55 ) }
    dend_23 { pt3dadd( -9.2436, -165.591, 15.029, 0.28 ) }
    dend_23 { pt3dadd( -8.70663, -168.027, 14.7533, 0.55 ) }
    dend_23 { pt3dadd( -8.17085, -171.407, 14.4344, 0.28 ) }
    dend_23 { pt3dadd( -8.03204, -172.833, 14.3126, 0.55 ) }
    dend_23 { pt3dadd( -8.00746, -175.321, 14.1753, 0.28 ) }
    dend_23 { pt3dadd( -8.03342, -176.375, 14.1513, 0.55 ) }
    dend_23 { pt3dadd( -8.07395, -177.418, 14.0497, 0.28 ) }
    dend_23 { pt3dadd( -8.09117, -178.532, 13.8115, 0.55 ) }
    dend_23 { pt3dadd( -8.01819, -180.489, 13.2721, 0.28 ) }
    dend_23 { pt3dadd( -7.99059, -181.218, 13.1456, 0.55 ) }
    dend_23 { pt3dadd( -7.96293, -182.422, 13.027, 0.28 ) }
    dend_23 { pt3dadd( -7.9356, -183.363, 12.9762, 0.55 ) }
    dend_23 { pt3dadd( -7.90119, -185.087, 12.9151, 0.28 ) }
    dend_23 { pt3dadd( -7.87805, -188.659, 12.7891, 0.55 ) }
    dend_23 { pt3dadd( -7.94979, -192.983, 12.6288, 0.83 ) }
    dend_23 { pt3dadd( -8.08746, -195.721, 12.4742, 0.28 ) }
    dend_23 { pt3dadd( -8.16867, -196.732, 12.4396, 0.55 ) }
    dend_23 { pt3dadd( -8.30777, -198.293, 12.4261, 0.28 ) }
    dend_23 { pt3dadd( -8.41278, -199.555, 12.5142, 0.55 ) }
    dend_23 { pt3dadd( -8.48899, -200.916, 12.6548, 0.28 ) }
    dend_23 { pt3dadd( -8.39948, -202.763, 12.903, 0.55 ) }
    dend_23 { pt3dadd( -8.14214, -204.656, 13.3399, 0.28 ) }
    dend_23 { pt3dadd( -7.86489, -205.944, 13.6406, 0.55 ) }
    dend_23 { pt3dadd( -7.20814, -208.142, 14.1385, 0.28 ) }
    dend_23 { pt3dadd( -6.84416, -209.133, 14.3028, 0.55 ) }
    dend_23 { pt3dadd( -5.84155, -211.467, 14.5392, 0.28 ) }
    dend_23 { pt3dadd( -5.16787, -212.925, 14.5242, 0.55 ) }
    dend_23 { pt3dadd( -4.0653, -215.2, 14.2235, 0.28 ) }
    dend_23 { pt3dadd( -3.18144, -217.002, 13.8377, 0.55 ) }
    dend_23 { pt3dadd( -1.90808, -219.611, 13.2057, 0.28 ) }
    dend_23 { pt3dadd( -1.44658, -220.623, 12.954, 0.55 ) }
    dend_23 { pt3dadd( -0.74043, -222.323, 12.4435, 0.28 ) }
    dend_23 { pt3dadd( -0.115454, -223.895, 11.9665, 0.55 ) }
    dend_23 { pt3dadd( 0.635548, -225.85, 11.424, 0.28 ) }
    dend_23 { pt3dadd( 1.36123, -227.801, 10.9281, 0.55 ) }
    dend_23 { pt3dadd( 2.27644, -230.431, 10.292, 0.28 ) }
    dend_23 { pt3dadd( 2.7721, -231.933, 9.94617, 0.55 ) }
    dend_23 { pt3dadd( 3.18625, -233.213, 9.69536, 0.28 ) }
    dend_23 { pt3dadd( 3.61245, -234.689, 9.42195, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 90/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 59.0056, 280.738, -61.1361, 0.55 ) }
    dend_8 { pt3dadd( 60.0576, 278.635, -61.1361, 0.55 ) }
    dend_8 { pt3dadd( 60.664, 277.424, -61.1361, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 93/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 59.0056, 280.738, -61.1361, 0.55 ) }
    dend_7 { pt3dadd( 60.4354, 281.464, -61.9376, 0.55 ) }
    dend_7 { pt3dadd( 61.3194, 281.913, -62.4332, 0.83 ) }
    dend_7 { pt3dadd( 62.9058, 282.719, -63.3224, 0.55 ) }
    dend_7 { pt3dadd( 64.4258, 283.491, -64.1745, 0.55 ) }
    dend_7 { pt3dadd( 65.9001, 284.24, -65.0009, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_27 (entry count 99/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -7.58955, -145.754, -40.2681, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_39 { pt3dadd( -6.00214, -148.43, -42.2103, 0.28 ) }
    dend_39 { pt3dadd( -5.16518, -149.841, -43.2344, 0.55 ) }
    dend_39 { pt3dadd( -0.510613, -157.687, -48.9294, 0.28 ) }
    dend_39 { pt3dadd( 1.49874, -161.074, -51.3879, 0.28 ) }
    dend_39 { pt3dadd( 3.14377, -163.846, -53.4007, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 5/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -7.58955, -145.754, -40.2681, 0.28 ) }
    dend_28 { pt3dadd( -8.76943, -147.378, -35.4955, 0.28 ) }
    dend_28 { pt3dadd( -9.18003, -148.068, -33.8371, 0.55 ) }
    dend_28 { pt3dadd( -12.1917, -153.129, -21.6725, 0.28 ) }
    dend_28 { pt3dadd( -12.5326, -153.702, -20.2958, 0.55 ) }
    dend_28 { pt3dadd( -13.2041, -154.831, -17.5834, 0.28 ) }
    dend_28 { pt3dadd( -13.8642, -155.94, -14.9171, 0.55 ) }
    dend_28 { pt3dadd( -14.6322, -157.502, -10.8146, 0.28 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 13/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 3.14377, -163.846, -53.4007, 0.28 ) }
    dend_41 { pt3dadd( 2.25246, -167.919, -50.9982, 0.28 ) }
    dend_41 { pt3dadd( 1.86411, -169.694, -49.9514, 0.55 ) }
    dend_41 { pt3dadd( 0.397093, -176.398, -45.997, 0.28 ) }
    dend_41 { pt3dadd( 0.0818764, -177.839, -45.1474, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 18/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 3.14377, -163.846, -53.4007, 0.28 ) }
    dend_40 { pt3dadd( 5.0223, -167.174, -57.386, 0.28 ) }
    dend_40 { pt3dadd( 5.57104, -168.213, -58.4763, 0.55 ) }
    dend_40 { pt3dadd( 6.99276, -171.079, -61.0443, 0.28 ) }
    dend_40 { pt3dadd( 7.25322, -171.773, -61.6065, 0.55 ) }
    dend_40 { pt3dadd( 8.52536, -175.814, -64.8345, 0.28 ) }
    dend_40 { pt3dadd( 8.87157, -177.028, -65.7608, 0.55 ) }
    dend_40 { pt3dadd( 9.26807, -179.011, -67.2025, 0.28 ) }
    dend_40 { pt3dadd( 9.51183, -180.367, -68.1556, 0.55 ) }
    dend_40 { pt3dadd( 10.2601, -185.581, -71.3234, 0.28 ) }
    dend_40 { pt3dadd( 10.3306, -186.441, -71.8353, 0.55 ) }
    dend_40 { pt3dadd( 10.3986, -188.953, -73.1879, 0.28 ) }
    dend_40 { pt3dadd( 10.2941, -190.738, -74.2452, 0.55 ) }
    dend_40 { pt3dadd( 9.84234, -194.193, -76.5186, 0.28 ) }
    dend_40 { pt3dadd( 9.42585, -196.024, -77.7007, 0.55 ) }
    dend_40 { pt3dadd( 7.98334, -199.633, -79.8968, 0.28 ) }
    dend_40 { pt3dadd( 7.58041, -200.394, -80.4083, 0.55 ) }
    dend_40 { pt3dadd( 6.1106, -202.356, -81.8788, 0.28 ) }
    dend_40 { pt3dadd( 5.83411, -202.674, -82.1546, 0.55 ) }
    dend_40 { pt3dadd( 4.09122, -204.847, -84.9179, 0.28 ) }
    dend_40 { pt3dadd( 3.31114, -206.724, -87.77, 0.55 ) }
    dend_40 { pt3dadd( 3.04643, -208.517, -90.5132, 0.28 ) }
    dend_40 { pt3dadd( 3.05947, -209.161, -91.5275, 0.55 ) }
    dend_40 { pt3dadd( 3.43394, -211.052, -94.5004, 0.55 ) }
    dend_40 { pt3dadd( 4.06603, -213.364, -98.2028, 0.28 ) }
    dend_40 { pt3dadd( 4.5135, -214.531, -100.108, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_28 (entry count 44/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -14.6322, -157.502, -10.8146, 0.28 ) }
    dend_36 { pt3dadd( -14.086, -161.531, -11.2485, 0.28 ) }
    dend_36 { pt3dadd( -13.6896, -163.507, -11.649, 0.55 ) }
    dend_36 { pt3dadd( -13.6474, -165.873, -11.9594, 0.28 ) }
    dend_36 { pt3dadd( -13.7284, -167.548, -12.1656, 0.55 ) }
    dend_36 { pt3dadd( -13.8321, -170.264, -12.1663, 0.28 ) }
    dend_36 { pt3dadd( -13.8961, -172.066, -12.0528, 0.55 ) }
    dend_36 { pt3dadd( -14.0429, -174.912, -11.7292, 0.55 ) }
    dend_36 { pt3dadd( -14.1847, -180.02, -10.944, 0.28 ) }
    dend_36 { pt3dadd( -14.2112, -181.59, -10.6155, 0.55 ) }
    dend_36 { pt3dadd( -13.8514, -185.656, -8.85981, 0.28 ) }
    dend_36 { pt3dadd( -13.672, -186.549, -8.29166, 0.55 ) }
    dend_36 { pt3dadd( -12.8422, -189.202, -6.30186, 0.28 ) }
    dend_36 { pt3dadd( -12.1737, -190.674, -5.0679, 0.55 ) }
    dend_36 { pt3dadd( -11.623, -191.571, -4.18599, 0.55 ) }
    dend_36 { pt3dadd( -7.67804, -197.687, 2.4668, 0.28 ) }
    dend_36 { pt3dadd( -7.32679, -198.202, 3.0657, 0.55 ) }
    dend_36 { pt3dadd( -6.46039, -199.421, 4.57212, 0.28 ) }
    dend_36 { pt3dadd( -5.57654, -200.641, 6.15355, 1.11 ) }
    dend_36 { pt3dadd( -3.29673, -204.126, 10.5278, 0.28 ) }
    dend_36 { pt3dadd( -3.01634, -204.619, 11.1121, 0.55 ) }
    dend_36 { pt3dadd( -2.07843, -206.898, 13.3381, 0.28 ) }
    dend_36 { pt3dadd( -1.83688, -207.573, 14.0088, 0.55 ) }
    dend_36 { pt3dadd( -1.59621, -208.34, 14.7716, 0.28 ) }
    dend_36 { pt3dadd( -1.09598, -210.092, 16.3947, 0.55 ) }
    dend_36 { pt3dadd( -0.545166, -213.454, 18.6379, 0.28 ) }
    dend_36 { pt3dadd( -0.515515, -214.178, 19.085, 0.55 ) }
    dend_36 { pt3dadd( -0.655098, -215.231, 19.6305, 0.55 ) }
    dend_36 { pt3dadd( -0.879589, -216.192, 20.0962, 0.28 ) }
    dend_36 { pt3dadd( -1.30861, -217.359, 20.5938, 0.55 ) }
    dend_36 { pt3dadd( -3.0583, -220.802, 21.461, 0.28 ) }
    dend_36 { pt3dadd( -3.63892, -221.68, 21.5848, 0.55 ) }
    dend_36 { pt3dadd( -4.87687, -223.437, 21.7283, 0.28 ) }
    dend_36 { pt3dadd( -5.2348, -223.894, 21.7536, 0.55 ) }
    dend_36 { pt3dadd( -6.36771, -225.159, 21.8068, 0.28 ) }
    dend_36 { pt3dadd( -8.70546, -227.475, 21.9622, 0.28 ) }
    dend_36 { pt3dadd( -9.34864, -228.046, 21.9914, 0.28 ) }
    dend_36 { pt3dadd( -10.0181, -228.587, 22.0231, 0.55 ) }
    dend_36 { pt3dadd( -12.0528, -230.1, 22.1859, 0.28 ) }
    dend_36 { pt3dadd( -13.0623, -230.738, 22.2144, 0.55 ) }
    dend_36 { pt3dadd( -20.0189, -234.153, 22.0786, 0.28 ) }
    dend_36 { pt3dadd( -21.3395, -234.639, 22.0185, 0.55 ) }
    dend_36 { pt3dadd( -22.9957, -235.123, 21.8636, 0.28 ) }
    dend_36 { pt3dadd( -24.1331, -235.349, 21.7079, 0.55 ) }
    dend_36 { pt3dadd( -28.7501, -235.864, 20.7112, 0.28 ) }
    dend_36 { pt3dadd( -32.1271, -235.891, 19.8161, 0.28 ) }
    dend_36 { pt3dadd( -32.972, -235.794, 19.5743, 0.55 ) }
    dend_36 { pt3dadd( -33.6869, -235.691, 19.375, 0.55 ) }
    dend_36 { pt3dadd( -37.1074, -235.073, 18.4745, 0.28 ) }
    dend_36 { pt3dadd( -38.7646, -234.639, 18.0863, 0.55 ) }
    dend_36 { pt3dadd( -41.9391, -233.603, 17.5725, 0.28 ) }
    dend_36 { pt3dadd( -43.1331, -233.125, 17.4082, 0.55 ) }
    dend_36 { pt3dadd( -46.0602, -231.791, 17.0433, 0.28 ) }
    dend_36 { pt3dadd( -46.9675, -231.361, 16.8855, 0.55 ) }
    dend_36 { pt3dadd( -49.9055, -229.959, 16.2867, 0.28 ) }
    dend_36 { pt3dadd( -50.6775, -229.614, 16.1436, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_36 { pt3dadd( -54.2461, -228.283, 15.3047, 0.28 ) }
    dend_36 { pt3dadd( -55.5322, -227.879, 14.9994, 0.55 ) }
    dend_36 { pt3dadd( -60.2555, -226.655, 13.8327, 0.28 ) }
    dend_36 { pt3dadd( -62.0999, -226.235, 13.338, 0.28 ) }
    dend_36 { pt3dadd( -63.7609, -225.89, 12.9609, 0.55 ) }
    dend_36 { pt3dadd( -68.5812, -224.78, 12.1008, 0.28 ) }
    dend_36 { pt3dadd( -70.4251, -224.3, 11.8756, 0.55 ) }
    dend_36 { pt3dadd( -72.8157, -223.523, 11.8271, 0.28 ) }
    dend_36 { pt3dadd( -73.6556, -223.141, 11.9221, 0.55 ) }
    dend_36 { pt3dadd( -77.1641, -221.214, 12.4576, 0.28 ) }
    dend_36 { pt3dadd( -78.0048, -220.723, 12.6152, 0.55 ) }
    dend_36 { pt3dadd( -81.6737, -218.515, 13.5029, 0.28 ) }
    dend_36 { pt3dadd( -83.5984, -217.503, 13.8083, 0.55 ) }
    dend_36 { pt3dadd( -85.4068, -216.707, 14.0168, 0.28 ) }
    dend_36 { pt3dadd( -86.1999, -216.462, 13.9402, 0.55 ) }
    dend_36 { pt3dadd( -88.0033, -216.148, 13.6551, 0.28 ) }
    dend_36 { pt3dadd( -89.8255, -215.952, 13.425, 0.55 ) }
    dend_36 { pt3dadd( -91.9307, -215.852, 13.2792, 0.28 ) }
    dend_36 { pt3dadd( -93.584, -215.811, 13.1935, 0.55 ) }
    dend_36 { pt3dadd( -98.4025, -215.837, 13.1155, 0.28 ) }
    dend_36 { pt3dadd( -103.485, -215.894, 13.1986, 0.28 ) }
    dend_36 { pt3dadd( -105.162, -215.902, 13.2918, 0.55 ) }
    dend_36 { pt3dadd( -108.672, -216.029, 13.6228, 0.28 ) }
    dend_36 { pt3dadd( -109.508, -216.092, 13.7168, 0.55 ) }
    dend_36 { pt3dadd( -112.242, -216.385, 14.0876, 0.28 ) }
    dend_36 { pt3dadd( -116.365, -217.056, 14.8218, 0.28 ) }
    dend_36 { pt3dadd( -117.225, -217.242, 14.9297, 0.55 ) }
    dend_36 { pt3dadd( -120.473, -218.086, 15.3236, 0.28 ) }
    dend_36 { pt3dadd( -121.296, -218.334, 15.4037, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 29/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -14.6322, -157.502, -10.8146, 0.28 ) }
    dend_29 { pt3dadd( -17.726, -159.883, -12.7752, 0.28 ) }
    dend_29 { pt3dadd( -19.8223, -161.36, -13.9162, 0.55 ) }
    dend_29 { pt3dadd( -23.5353, -163.829, -15.6205, 0.28 ) }
    dend_29 { pt3dadd( -25.5739, -165.207, -16.5659, 0.55 ) }
    dend_29 { pt3dadd( -27.4971, -166.568, -17.7572, 0.28 ) }
    dend_29 { pt3dadd( -30.0814, -168.439, -19.4254, 0.55 ) }
    dend_29 { pt3dadd( -31.9106, -169.879, -20.6988, 0.28 ) }
    dend_29 { pt3dadd( -32.685, -170.503, -21.2792, 0.55 ) }
    dend_29 { pt3dadd( -35.7201, -172.907, -23.4353, 0.28 ) }
    dend_29 { pt3dadd( -38.7925, -175.362, -25.7849, 0.28 ) }
    dend_29 { pt3dadd( -40.0358, -176.347, -26.5848, 0.55 ) }
    dend_29 { pt3dadd( -44.543, -179.828, -29.124, 0.28 ) }
    dend_29 { pt3dadd( -46.2049, -181.046, -30.0298, 0.55 ) }
    dend_29 { pt3dadd( -47.2767, -181.788, -30.5222, 0.28 ) }
    dend_29 { pt3dadd( -49.5836, -183.218, -31.2447, 0.55 ) }
    dend_29 { pt3dadd( -55.0298, -186.391, -32.2454, 0.28 ) }
    dend_29 { pt3dadd( -55.9815, -186.892, -32.4184, 0.55 ) }
    dend_29 { pt3dadd( -56.7803, -187.242, -32.5136, 0.28 ) }
    dend_29 { pt3dadd( -57.7231, -187.692, -32.6737, 0.55 ) }
    dend_29 { pt3dadd( -59.2289, -188.484, -32.9975, 0.28 ) }
    dend_29 { pt3dadd( -60.5351, -189.229, -33.26, 0.55 ) }
    dend_29 { pt3dadd( -63.5668, -191.207, -34.1272, 0.28 ) }
    dend_29 { pt3dadd( -66.3958, -193.238, -35.3086, 0.28 ) }
    dend_29 { pt3dadd( -69.8144, -195.789, -37.0537, 0.28 ) }
    dend_29 { pt3dadd( -71.1522, -196.857, -37.8341, 0.55 ) }
    dend_29 { pt3dadd( -72.5766, -198.114, -38.7713, 0.28 ) }
    dend_29 { pt3dadd( -74.0959, -199.531, -39.8661, 0.55 ) }
    dend_29 { pt3dadd( -76.6573, -202.386, -41.8745, 0.28 ) }
    dend_29 { pt3dadd( -77.4111, -203.363, -42.6491, 0.55 ) }
    dend_29 { pt3dadd( -78.1311, -204.23, -43.5308, 0.28 ) }
    dend_29 { pt3dadd( -78.4333, -204.562, -43.9487, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 61/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -121.296, -218.334, 15.4037, 0.28 ) }
    dend_38 { pt3dadd( -121.734, -220.792, 14.5841, 0.28 ) }
    dend_38 { pt3dadd( -121.443, -221.316, 14.5837, 0.55 ) }
    dend_38 { pt3dadd( -120.123, -223.172, 14.8821, 0.28 ) }
    dend_38 { pt3dadd( -119.159, -224.372, 15.1492, 0.55 ) }
    dend_38 { pt3dadd( -118.433, -225.189, 15.3536, 0.28 ) }
    dend_38 { pt3dadd( -117.269, -226.469, 15.6453, 0.55 ) }
    dend_38 { pt3dadd( -114.168, -229.509, 16.7333, 0.28 ) }
    dend_38 { pt3dadd( -113.402, -230.182, 16.9945, 0.55 ) }
    dend_38 { pt3dadd( -112.731, -230.683, 17.2104, 0.28 ) }
    dend_38 { pt3dadd( -111.842, -231.296, 17.5184, 0.55 ) }
    dend_38 { pt3dadd( -110.804, -232.044, 17.872, 0.28 ) }
    dend_38 { pt3dadd( -109.756, -232.833, 18.1358, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 74/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -121.296, -218.334, 15.4037, 0.28 ) }
    dend_37 { pt3dadd( -124.631, -217.909, 14.2442, 0.28 ) }
    dend_37 { pt3dadd( -126.027, -217.775, 13.7382, 0.55 ) }
    dend_37 { pt3dadd( -131.13, -217.356, 11.9941, 0.28 ) }
    dend_37 { pt3dadd( -132.275, -217.258, 11.5591, 0.55 ) }
    dend_37 { pt3dadd( -138.809, -216.651, 9.10143, 0.28 ) }
    dend_37 { pt3dadd( -140.279, -216.499, 8.45768, 0.55 ) }
    dend_37 { pt3dadd( -142.589, -216.26, 7.14788, 0.28 ) }
    dend_37 { pt3dadd( -143.758, -216.12, 6.38033, 0.55 ) }
    dend_37 { pt3dadd( -146.744, -215.752, 4.08535, 0.28 ) }
    dend_37 { pt3dadd( -147.851, -215.552, 2.99905, 0.55 ) }
    dend_37 { pt3dadd( -151.03, -214.619, -0.937307, 0.28 ) }
    dend_37 { pt3dadd( -151.861, -214.396, -2.16261, 0.55 ) }
    dend_37 { pt3dadd( -152.769, -214.229, -3.63231, 0.28 ) }
    dend_37 { pt3dadd( -153.365, -214.138, -4.67297, 0.55 ) }
    dend_37 { pt3dadd( -154.76, -214.031, -7.19773, 0.28 ) }
    dend_37 { pt3dadd( -155.346, -214.025, -8.31164, 0.83 ) }
    dend_37 { pt3dadd( -157.607, -214.332, -12.1604, 0.28 ) }
    dend_37 { pt3dadd( -158.386, -214.525, -13.4266, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_29 (entry count 93/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -78.4333, -204.562, -43.9487, 0.28 ) }
    dend_33 { pt3dadd( -81.2231, -206.049, -48.4577, 0.28 ) }
    dend_33 { pt3dadd( -83.6079, -207.321, -52.3121, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 96/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -78.4333, -204.562, -43.9487, 0.28 ) }
    dend_30 { pt3dadd( -77.0637, -208.027, -42.4735, 0.28 ) }
    dend_30 { pt3dadd( -76.4557, -210.045, -41.4733, 0.55 ) }
    dend_30 { pt3dadd( -76.3295, -210.562, -41.2188, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_30 { pt3dadd( -76.1682, -211.22, -40.8747, 0.55 ) }
    dend_30 { pt3dadd( -75.7619, -212.877, -40.0082, 0.28 ) }
    dend_30 { pt3dadd( -75.2514, -214.959, -38.9194, 0.55 ) }
    dend_30 { pt3dadd( -75.0352, -216.808, -37.8365, 0.28 ) }
    dend_30 { pt3dadd( -74.973, -217.802, -37.3641, 0.55 ) }
    dend_30 { pt3dadd( -74.8853, -219.509, -36.501, 0.28 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 6/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -83.6079, -207.321, -52.3121, 0.28 ) }
    dend_35 { pt3dadd( -84.2158, -208.629, -51.3674, 0.28 ) }
    dend_35 { pt3dadd( -84.5846, -209.178, -50.8359, 0.55 ) }
    dend_35 { pt3dadd( -85.4432, -210.457, -49.5982, 0.28 ) }
    dend_35 { pt3dadd( -85.5629, -210.636, -49.4257, 0.55 ) }
    dend_35 { pt3dadd( -86.9343, -212.678, -47.449, 0.28 ) }
    dend_35 { pt3dadd( -87.8002, -213.968, -46.201, 0.55 ) }
    dend_35 { pt3dadd( -88.3152, -214.994, -44.759, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 14/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -83.6079, -207.321, -52.3121, 0.28 ) }
    dend_34 { pt3dadd( -83.2138, -209.482, -52.313, 0.28 ) }
    dend_34 { pt3dadd( -82.991, -210.705, -52.3135, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 17/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -74.8853, -219.509, -36.501, 0.28 ) }
    dend_32 { pt3dadd( -70.5239, -220.403, -38.3987, 0.28 ) }
    dend_32 { pt3dadd( -68.5007, -220.818, -39.279, 0.83 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 20/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -74.8853, -219.509, -36.501, 0.28 ) }
    dend_31 { pt3dadd( -77.7559, -227.488, -51.7623, 0.28 ) }
    dend_31 { pt3dadd( -78.0251, -228.269, -53.1439, 0.55 ) }
    dend_31 { pt3dadd( -78.2727, -229.213, -54.5716, 0.28 ) }
    dend_31 { pt3dadd( -78.6063, -230.718, -56.5652, 0.55 ) }
    dend_31 { pt3dadd( -78.8422, -232.148, -58.1879, 0.28 ) }
    dend_31 { pt3dadd( -78.9309, -234.435, -60.1737, 0.55 ) }
    dend_31 { pt3dadd( -77.9425, -238.132, -59.6027, 0.28 ) }
    dend_31 { pt3dadd( -76.3248, -242.449, -58.9833, 0.55 ) }
    dend_31 { pt3dadd( -74.708, -246.189, -58.9749, 0.28 ) }
    dend_31 { pt3dadd( -74.1192, -247.663, -58.7207, 0.55 ) }
    dend_31 { pt3dadd( -72.5845, -251.777, -57.5328, 0.28 ) }
    dend_31 { pt3dadd( -71.6945, -254.148, -56.578, 0.55 ) }
    dend_31 { pt3dadd( -70.6777, -256.914, -55.451, 0.28 ) }
    dend_31 { pt3dadd( -69.6651, -259.878, -53.9713, 0.55 ) }
    dend_31 { pt3dadd( -66.9312, -268.309, -49.7394, 0.28 ) }
    dend_31 { pt3dadd( -66.7854, -268.796, -49.4356, 0.55 ) }
    dend_31 { pt3dadd( -66.4331, -270.116, -48.384, 0.28 ) }
    dend_31 { pt3dadd( -66.1874, -271.156, -47.5627, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_11, dend_0, dend_19, dend_12, dend_10, dend_1, dend_44, dend_20, dend_18, dend_13, dend_3, dend_2, dend_46, dend_45, dend_25, dend_21, dend_17, dend_14, dend_5, dend_4, dend_48, dend_47, dend_43, dend_26, dend_22, dend_16, dend_15, dend_9, dend_6, dend_42, dend_27, dend_24, dend_23, dend_8, dend_7, dend_39, dend_28, dend_41, dend_40, dend_36, dend_29, dend_38, dend_37, dend_33, dend_30, dend_35, dend_34, dend_32, dend_31]}
    ModelViewParmSubset_2 = new SectionList()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_11, dend_0, dend_19, dend_12, dend_10, dend_1, dend_44, dend_20, dend_18, dend_13, dend_3, dend_2, dend_46, dend_45, dend_25, dend_21, dend_17, dend_14, dend_5, dend_4, dend_48, dend_47, dend_43, dend_26, dend_22, dend_16, dend_15, dend_9, dend_6, dend_42, dend_27, dend_24, dend_23, dend_8, dend_7, dend_39, dend_28, dend_41, dend_40, dend_36, dend_29, dend_38, dend_37, dend_33, dend_30, dend_35, dend_34, dend_32, dend_31]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_19 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_10 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_18 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_13 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_2 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_25 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_21 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_17 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_5 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_4 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_47 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_43 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_22 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_16 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_15 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_27 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_24 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_23 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_40 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_36 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_29 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_37 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_31 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_11 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_12 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_20 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_44 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_46 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_48 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_14 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_26 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_42 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_3 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_39 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_28 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_41 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_33 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_34 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_30 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_9 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_35 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_32 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_6 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_8 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_38 OneSecGrp_SectionRef_45.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_39, dend_39, dend_39, dend_39, dend_39, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 5
    dend_19 nseg = 3
    dend_10 nseg = 3
    dend_1 nseg = 3
    dend_18 nseg = 3
    dend_13 nseg = 3
    dend_2 nseg = 5
    dend_45 nseg = 7
    dend_25 nseg = 3
    dend_21 nseg = 3
    dend_17 nseg = 9
    dend_5 nseg = 7
    dend_4 nseg = 7
    dend_47 nseg = 7
    dend_43 nseg = 5
    dend_22 nseg = 3
    dend_16 nseg = 3
    dend_15 nseg = 5
    dend_27 nseg = 3
    dend_24 nseg = 7
    dend_23 nseg = 5
    dend_40 nseg = 3
    dend_36 nseg = 11
    dend_29 nseg = 5
    dend_37 nseg = 3
    dend_31 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L23_DBC_1441fd5669_0_0


