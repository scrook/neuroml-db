// Cell: cACint209_L1_SLAC_0a908934ff_0_0
/*
{
  "id" : "cACint209_L1_SLAC_0a908934ff_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.46314, -8.22038, 0.0, 2.04534", "1.32967, -7.4749, 0.0, 3.60308", "1.19619, -6.72941, 0.0, 5.21049", "1.06272, -5.98393, 0.0, 6.43144", "0.929251, -5.23845, 0.0, 7.35581", "0.795779, -4.49297, 0.0, 7.78696", "0.662307, -3.74749, 0.0, 8.07589", "0.528835, -3.002, 0.0, 8.38005", "0.395363, -2.25652, 0.0, 9.12311", "0.261891, -1.51104, 0.0, 9.73493", "0.128419, -0.765557, 0.0, 9.91525", "-0.00505256, -0.0200745, 0.0, 10.0215", "-0.138524, 0.725408, 0.0, 10.1998", "-0.271996, 1.47089, 0.0, 9.91892", "-0.405468, 2.21637, 0.0, 9.57563", "-0.53894, 2.96185, 0.0, 9.20844", "-0.672412, 3.70734, 0.0, 8.49462", "-0.805884, 4.45282, 0.0, 6.50822", "-0.939356, 5.1983, 0.0, 4.56774", "-1.07283, 5.94378, 0.0, 2.78306", "-1.2063, 6.68927, 0.0, 1.74547" ]
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-3.62531, 4.06396, 3.17, 0.49", "-4.31497, 6.58498, 3.25997, 0.49", "-4.97017, 9.41198, 3.36116, 0.49", "-5.3932, 11.4238, 3.43612, 0.49", "-5.40328, 11.4814, 3.43819, 0.49", "-5.72857, 14.3842, 3.53564, 0.49", "-5.73251, 14.4327, 3.53727, 0.49", "-5.79881, 16.9442, 3.5242, 0.49", "-5.79456, 17.1839, 3.5151, 0.49", "-5.74178, 19.1059, 3.37231, 0.49", "-5.63364, 22.0156, 2.96365, 0.49", "-5.63094, 22.0634, 2.95417, 0.49", "-5.39204, 26.4086, 1.93349, 0.49", "-5.32772, 28.134, 1.4435, 0.49", "-5.3158, 28.6555, 1.27808, 0.49", "-5.34543, 31.9654, 0.0761127, 0.49", "-5.43825, 34.2411, -0.805211, 0.49", "-5.44388, 34.3396, -0.848338, 0.49", "-5.70169, 36.43, -1.89354, 0.49", "-5.70956, 36.4721, -1.91751, 0.49", "-6.13631, 38.3288, -3.03447, 0.49", "-6.63741, 40.0015, -4.14603, 0.49", "-7.41364, 42.3724, -6.09371, 0.49", "-8.13245, 44.5393, -7.93342, 0.49", "-8.94218, 46.9253, -10.0851, 0.49", "-8.95424, 46.9601, -10.118, 0.49", "-9.61176, 48.776, -12.0125, 0.49", "-10.9369, 52.1997, -15.9741, 0.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999988166134957,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "1.14469, 6.25771, -0.53, 1.48", "0.63469, 9.52396, -11.93, 1.48" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999988166134957
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-5.41531, 2.41621, 0.06, 1.35", "-7.44627, 3.57838, -0.868222, 1.35", "-9.14987, 4.55321, -1.64682, 1.35", "-9.35062, 4.66808, -1.73857, 1.35", "-11.2454, 5.7523, -2.60454, 1.35" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999988166134957
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.2063, 6.68927, 0.0, 2.53255", "-3.84988, 21.4545, 0.0, 2.53255", "-6.49346, 36.2197, 0.0, 2.53255" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-10.9369, 52.1997, -15.9741, 0.49", "-7.78228, 51.8292, -14.053, 0.49", "-7.7398, 51.8242, -14.0271, 0.49", "-1.80825, 51.1277, -10.4148, 0.49", "0.640982, 50.8401, -8.92326, 0.49", "0.956368, 50.803, -8.73119, 0.49" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-10.9369, 52.1997, -15.9741, 0.49", "-12.0425, 54.384, -17.7119, 0.49", "-13.393, 57.4813, -20.3546, 0.49", "-13.8802, 58.6701, -21.3993, 0.49", "-13.9499, 58.8294, -21.5892, 0.49", "-14.6433, 60.3527, -23.6264, 0.49", "-14.6744, 60.4078, -23.7028, 0.49", "-16.1229, 62.6721, -27.3279, 0.49", "-16.1554, 62.7185, -27.4097, 0.49", "-18.5697, 65.8761, -33.2871, 0.49", "-18.6131, 65.9274, -33.3864, 0.49", "-20.1648, 67.4254, -36.6043, 0.49", "-20.1858, 67.4431, -36.6458, 0.49" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "0.63469, 9.52396, -11.93, 1.23", "-0.156888, 10.0935, -17.7052, 1.23", "-0.432161, 10.2916, -19.7135, 1.23", "-0.448376, 10.3033, -19.8318, 1.23", "-0.794456, 10.5523, -22.3568, 1.23", "-1.25108, 10.8809, -25.6882, 1.23", "-2.53254, 11.803, -35.0375, 1.23" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "0.63469, 9.52396, -11.93, 0.86", "2.58379, 11.7104, -12.1678, 0.86", "4.15397, 13.1106, -12.3094, 0.86", "6.15542, 14.4441, -12.3342, 0.86", "7.7334, 15.4318, -12.302, 0.86", "7.84311, 15.5004, -12.2997, 0.86", "10.1524, 16.9459, -12.2525, 0.86", "11.7025, 17.6683, -12.1703, 0.86", "14.4286, 18.6109, -11.8986, 0.86", "16.0042, 19.0164, -11.7076, 0.86" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-11.2454, 5.7523, -2.60454, 0.61", "-13.3356, 4.22361, -3.26581, 0.61", "-15.3704, 2.79637, -3.82181, 0.61", "-16.9138, 1.71384, -4.24352, 0.61", "-18.4809, 0.61466, -4.67172, 0.61", "-20.09, -0.513979, -5.11139, 0.61", "-21.5336, -1.52653, -5.50584, 0.61", "-21.9206, -1.79809, -5.56088, 0.61" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-11.2454, 5.7523, -2.60454, 0.86", "-13.0721, 6.7578, -2.8349, 0.86", "-14.202, 7.18275, -2.94432, 0.86", "-15.6901, 7.67621, -3.11549, 0.61", "-17.4325, 8.2964, -3.32606, 0.61", "-18.9374, 8.90827, -3.50914, 0.61", "-19.8148, 9.33244, -3.58765, 0.61", "-21.4762, 10.0863, -3.67562, 0.61", "-22.8889, 10.8295, -3.73459, 0.61", "-23.7884, 11.4364, -3.73798, 0.61", "-24.6707, 12.3276, -3.74483, 0.61", "-25.7059, 13.7687, -3.8004, 0.61", "-25.7682, 13.8801, -3.80774, 0.61", "-26.2888, 15.1812, -3.92025, 0.61", "-26.3688, 15.4118, -3.94459, 0.61", "-26.9118, 16.9695, -4.20574, 0.61", "-26.9965, 17.1785, -4.27568, 0.61", "-27.4736, 18.0723, -4.73638, 0.61", "-28.2832, 19.4044, -5.48682, 0.61", "-28.8667, 20.2572, -6.01086, 0.61", "-28.9673, 20.4034, -6.09698, 0.61", "-30.0771, 22.1648, -7.20004, 0.61", "-30.6473, 23.1705, -7.96958, 0.61", "-31.1028, 24.1952, -8.84214, 0.61", "-31.1225, 24.2446, -8.88626, 0.61", "-31.4003, 25.0324, -9.6074, 0.61", "-31.9211, 26.6548, -11.068, 0.61", "-32.3905, 28.387, -12.5502, 0.61", "-32.8075, 30.0568, -13.9654, 0.61", "-33.406, 32.3538, -15.9721, 0.61", "-34.0105, 34.5263, -17.8704, 0.61", "-34.0398, 34.6201, -17.9527, 0.61", "-34.6228, 36.3157, -19.3287, 0.61", "-34.651, 36.4065, -19.3996, 0.61" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-6.49346, 36.2197, 0.0, 0.61", "-9.13704, 50.9849, 0.0, 0.61", "-11.7806, 65.7501, 0.0, 0.61" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-20.1858, 67.4431, -36.6458, 0.49", "-18.146, 67.8373, -36.0137, 0.49", "-15.1445, 68.4173, -35.0836, 0.49" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-20.1858, 67.4431, -36.6458, 0.49", "-21.2231, 67.3058, -36.7658, 0.49", "-21.4704, 67.2759, -36.7942, 0.49", "-23.8197, 67.0384, -37.0363, 0.49", "-25.8157, 66.8597, -37.2285, 0.49", "-28.4301, 66.69, -37.4602, 0.49", "-31.3884, 66.5752, -37.705, 0.49", "-31.5084, 66.5741, -37.7145, 0.49", "-34.0893, 66.6777, -37.9136, 0.49", "-34.5671, 66.7267, -37.9481, 0.49", "-36.2081, 67.0407, -38.1164, 0.49", "-37.0561, 67.259, -38.2272, 0.49", "-37.1025, 67.2731, -38.2391, 0.49", "-39.1731, 67.9122, -38.9681, 0.49", "-39.2171, 67.9259, -38.9872, 0.49", "-40.8851, 68.3398, -39.7062, 0.49", "-41.1059, 68.3833, -39.8035, 0.49", "-44.1764, 68.7118, -41.0346, 0.49", "-44.2231, 68.7147, -41.0521, 0.49", "-46.0895, 68.7373, -41.7033, 0.49", "-47.9132, 68.6813, -42.2009, 0.49", "-47.9628, 68.6773, -42.2059, 0.49", "-50.262, 68.4312, -42.1876, 0.49", "-51.7659, 68.2713, -41.9836, 0.49", "-51.893, 68.2592, -41.9595, 0.49", "-55.4574, 67.9971, -41.0318, 0.49", "-58.7717, 67.8754, -39.9283, 0.49", "-58.8183, 67.8765, -39.9103, 0.49", "-60.7966, 68.0582, -38.9894, 0.49", "-60.9286, 68.0785, -38.9212, 0.49", "-61.7681, 68.291, -38.4769, 0.49", "-62.0651, 68.455, -38.3337, 0.49", "-63.5339, 69.7347, -38.0328, 0.49", "-63.5672, 69.7709, -38.0297, 0.49", "-64.4449, 70.8293, -38.0623, 0.49", "-64.5059, 70.9063, -38.0681, 0.49", "-65.851, 72.7457, -38.3192, 0.49", "-66.6498, 73.9351, -38.5396, 0.49", "-67.1126, 74.7427, -38.733, 0.49", "-68.1749, 76.589, -39.204, 0.49" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-2.53254, 11.803, -35.0375, 0.98", "-4.80726, 13.4356, -42.0669, 0.98", "-6.46769, 14.4175, -46.1777, 0.98", "-7.00906, 14.7052, -47.3607, 0.98", "-7.06422, 14.7269, -47.4538, 0.98", "-8.1486, 15.0466, -48.9577, 0.98", "-10.189, 15.5384, -51.4397, 0.74", "-11.2679, 15.6653, -52.3733, 0.74", "-11.4562, 15.6808, -52.5226, 0.74", "-14.1288, 15.6981, -54.9338, 0.74", "-16.6106, 15.6991, -57.7921, 0.74", "-18.8466, 15.8078, -60.9968, 0.49", "-20.271, 16.0045, -63.5496, 0.49", "-20.4709, 16.0451, -63.9968, 0.49", "-23.0899, 16.805, -70.7651, 0.49", "-25.6255, 17.6836, -77.6576, 0.49", "-27.1884, 18.2252, -81.8611, 0.49", "-29.464, 19.0113, -88.1122, 0.49", "-32.0687, 20.0968, -95.2057, 0.49", "-34.2721, 21.3434, -101.41, 0.49", "-36.3094, 22.991, -107.407, 0.49", "-37.9997, 24.327, -112.118, 0.49", "-40.4002, 26.2586, -118.706, 0.49", "-42.0355, 27.7818, -123.251, 0.49", "-44.461, 30.7631, -130.426, 0.49", "-45.3903, 32.6038, -134.084, 0.49" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-2.53254, 11.803, -35.0375, 0.74", "-1.29254, 13.6457, -43.4975, 0.74" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "16.0042, 19.0164, -11.7076, 0.49", "15.5742, 20.1182, 0.332409, 0.49" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "16.0042, 19.0164, -11.7076, 0.86", "16.1583, 19.3702, -12.134, 0.86", "16.2273, 19.5286, -12.3249, 0.86", "17.2775, 21.9388, -15.2299, 0.74", "17.8338, 23.2158, -16.769, 0.74" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-21.9206, -1.79809, -5.56088, 0.49", "-22.6429, -2.22585, -4.76516, 0.49", "-24.619, -3.26746, -2.9336, 0.49", "-25.8728, -3.82059, -1.97229, 0.49", "-25.9281, -3.83717, -1.93287, 0.49", "-27.6503, -4.12042, -0.688676, 0.49", "-27.7471, -4.13633, -0.618813, 0.49", "-29.2071, -4.28169, 0.385691, 0.49", "-31.5665, -4.39037, 1.81592, 0.49", "-33.5326, -4.36076, 3.0044, 0.49", "-36.3261, -4.18975, 4.70176, 0.49" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-21.9206, -1.79809, -5.56088, 0.61", "-22.7801, -1.74624, -5.65588, 0.61", "-22.9095, -1.73844, -5.67018, 0.61", "-25.1189, -1.60517, -5.91438, 0.61" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-1.29254, 13.6457, -43.4975, 0.61", "-0.48675, 13.0287, -44.7288, 0.61", "0.365718, 12.3284, -46.0603, 0.61", "3.52294, 9.87735, -50.8238, 0.61", "6.2439, 7.95005, -54.8055, 0.61", "8.69617, 6.35286, -58.2929, 0.61", "12.3347, 4.15525, -63.3063, 0.61", "14.8552, 2.77344, -66.7454, 0.61", "18.5172, 1.03333, -71.6218, 0.61", "22.9952, -0.651657, -77.0123, 0.61", "27.1422, -1.80191, -81.5853, 0.61", "30.6123, -2.58471, -85.2517, 0.61", "35.0552, -3.38358, -89.6882, 0.61", "39.5, -4.00437, -94.0117, 0.61", "44.4671, -4.53514, -98.6399, 0.61", "47.7037, -4.75598, -101.435, 0.61" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-1.29254, 13.6457, -43.4975, 0.61", "-0.963782, 14.9339, -43.4797, 0.61", "-0.221687, 17.0841, -43.4575, 0.61", "0.501161, 18.8903, -43.4425, 0.61", "0.723592, 19.317, -43.4412, 0.61", "1.61047, 20.5788, -43.4472, 0.61", "1.69886, 20.6717, -43.437, 0.61", "2.85901, 21.5802, -43.2885, 0.61", "3.0075, 21.6585, -43.266, 0.61", "4.88793, 22.3635, -42.9354, 0.61", "6.90882, 22.98, -42.535, 0.61", "10.3461, 23.7297, -41.7069, 0.61" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "15.5742, 20.1182, 0.332409, 0.49", "15.7892, 18.4409, 4.18254, 0.49", "15.9936, 16.8467, 7.84188, 0.49", "16.0157, 16.6742, 8.23776, 0.49" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "15.5742, 20.1182, 0.332409, 0.49", "16.2679, 22.6942, -0.499522, 0.49", "16.3917, 23.2526, -0.680795, 0.49", "16.4372, 23.4826, -0.752894, 0.49", "16.8959, 26.0307, -1.51908, 0.49", "17.2702, 28.2194, -2.16983, 0.49", "17.6494, 30.5696, -2.87303, 0.49", "17.8384, 31.676, -3.28689, 0.49", "17.941, 32.3526, -3.52772, 0.49", "18.0668, 33.3771, -3.87716, 0.49", "18.0727, 33.4704, -3.90575, 0.49", "18.115, 34.6909, -4.32704, 0.49", "18.1369, 34.92, -4.41023, 0.49", "18.2189, 36.0465, -4.8802, 0.49", "18.2226, 36.6284, -5.13765, 0.49", "18.1863, 37.517, -5.55149, 0.49", "18.0608, 38.3896, -5.94013, 0.49", "17.9952, 38.7514, -6.10171, 0.49", "17.6591, 40.3254, -6.80429, 0.49", "17.3295, 41.5651, -7.34541, 0.49", "17.2645, 41.785, -7.43139, 0.49", "16.4766, 44.0017, -8.27772, 0.49" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "17.8338, 23.2158, -16.769, 0.61", "18.0345, 20.836, -14.0612, 0.61", "17.9542, 19.0186, -11.5366, 0.61", "17.7647, 16.8754, -8.63711, 0.61", "17.7611, 16.8343, -8.5814, 0.61", "17.4827, 13.6853, -4.32101, 0.61", "17.1637, 10.0777, 0.559871, 0.61", "16.668, 7.59108, 4.42306, 0.61", "16.2145, 5.89378, 7.37844, 0.61" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "17.8338, 23.2158, -16.769, 0.61", "19.2884, 24.4397, -17.6968, 0.61", "20.513, 25.3852, -18.4797, 0.61", "21.6591, 26.1222, -19.414, 0.61", "22.5674, 26.6209, -20.1814, 0.61", "25.4498, 27.8982, -22.5144, 0.61", "29.2161, 29.0901, -25.5351, 0.61", "29.3168, 29.1033, -25.6169, 0.61", "33.485, 29.0543, -28.8805, 0.61", "34.8413, 28.9494, -29.949, 0.61", "36.7941, 28.6547, -31.4618, 0.61", "40.7406, 27.6689, -34.3659, 0.61", "43.5475, 26.7394, -36.4095, 0.61", "46.4395, 25.7591, -38.3673, 0.61" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-25.1189, -1.60517, -5.91438, 0.49", "-25.7844, 0.261226, -6.05913, 0.49", "-26.3555, 1.83186, -6.19089, 0.49", "-27.1596, 4.04326, -6.3764, 0.49", "-27.5389, 5.08637, -6.4639, 0.49", "-27.6299, 5.33662, -6.4849, 0.49", "-28.2209, 6.96199, -6.62124, 0.49", "-28.2865, 7.13017, -6.62777, 0.49" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-25.1189, -1.60517, -5.91438, 0.61", "-25.8065, -3.47242, -6.12308, 0.61", "-26.2416, -4.69647, -6.23247, 0.61", "-26.4922, -5.37665, -6.28773, 0.61", "-26.8945, -6.51011, -6.36515, 0.61", "-26.9336, -6.62095, -6.372, 0.61", "-27.451, -8.0411, -6.45121, 0.61", "-27.9953, -9.3935, -6.50402, 0.61", "-28.1161, -9.60777, -6.50778, 0.61", "-28.9542, -10.9439, -6.53348, 0.61", "-29.0501, -11.0811, -6.53638, 0.61", "-29.5787, -11.7889, -6.55192, 0.61", "-30.9344, -13.3657, -6.5892, 0.61", "-31.7633, -14.1525, -6.6061, 0.61" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "16.0157, 16.6742, 8.23776, 0.49", "15.6448, 15.9153, 8.28583, 0.49", "15.2434, 15.0938, 8.33786, 0.49", "14.5223, 13.6182, 8.43133, 0.49", "14.07, 12.6927, 8.48995, 0.49", "14.0183, 12.5869, 8.49666, 0.49", "13.5658, 11.6609, 8.55531, 0.49" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "16.0157, 16.6742, 8.23776, 0.49", "17.9641, 17.4851, 7.55034, 0.49", "18.0078, 17.5033, 7.53491, 0.49", "19.1126, 17.9631, 7.14512, 0.49", "19.3313, 18.0541, 7.06796, 0.49", "21.86, 19.1065, 6.17582, 0.49" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-31.7633, -14.1525, -6.6061, 0.49", "-32.7604, -16.5941, -7.73677, 0.49", "-33.4898, -18.0014, -8.4231, 0.49", "-34.202, -19.0619, -8.95245, 0.49", "-34.2425, -19.1103, -8.98071, 0.49", "-36.3448, -21.3886, -10.4955, 0.49", "-38.5334, -23.7604, -12.0725, 0.49", "-41.0149, -26.205, -13.7915, 0.49", "-43.2122, -28.2518, -15.3365, 0.49", "-46.3819, -31.0862, -17.5765, 0.49", "-48.2428, -32.6314, -18.8573, 0.49" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-31.7633, -14.1525, -6.6061, 0.61", "-33.4919, -14.3231, -6.86639, 0.61", "-35.4981, -14.6663, -7.39554, 0.61", "-37.2651, -15.0503, -8.17959, 0.61", "-38.8657, -15.4373, -9.03985, 0.61", "-39.7489, -15.6453, -9.70087, 0.61", "-41.5969, -16.0635, -11.4215, 0.61", "-43.3226, -16.4843, -13.5011, 0.61", "-45.0058, -16.8604, -15.8117, 0.61", "-45.07, -16.8746, -15.9125, 0.61", "-47.1959, -17.3782, -19.6921, 0.61", "-48.3083, -17.6361, -21.8309, 0.61", "-48.4339, -17.6621, -22.0823, 0.61", "-49.555, -17.6698, -24.0504, 0.61" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "13.5658, 11.6609, 8.55531, 0.49", "14.7921, 10.5282, 8.06243, 0.49", "16.5523, 8.90231, 7.35497, 0.49", "16.622, 8.83794, 7.32696, 0.49", "18.9186, 6.71647, 6.40389, 0.49" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "13.5658, 11.6609, 8.55531, 0.49", "11.8358, 11.5342, 8.6053, 0.49" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-49.555, -17.6698, -24.0504, 0.49", "-50.6022, -19.6179, -26.2903, 0.49", "-51.7985, -21.7554, -28.453, 0.49", "-52.9537, -23.8195, -30.5414, 0.49", "-53.8091, -25.3477, -32.0877, 0.49", "-53.8525, -25.4254, -32.1663, 0.49", "-54.9007, -27.2982, -34.0611, 0.49", "-56.0155, -29.4572, -36.2335, 0.49" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-49.555, -17.6698, -24.0504, 0.61", "-53.5904, -17.5571, -25.0376, 0.61", "-54.5558, -17.5242, -25.2422, 0.61", "-59.5262, -17.4217, -26.0355, 0.49", "-63.5558, -17.3337, -26.521, 0.49", "-64.1656, -17.3129, -26.5577, 0.49", "-65.805, -17.2409, -26.6052, 0.49", "-67.8977, -17.0699, -26.5164, 0.49", "-70.961, -16.7218, -26.2526, 0.49", "-73.5071, -16.3554, -25.8393, 0.49", "-76.6113, -15.8361, -25.2389, 0.49", "-76.8705, -15.7887, -25.1846, 0.49", "-78.9661, -15.389, -24.7097, 0.49", "-80.3887, -15.0828, -24.3661, 0.49", "-80.6936, -15.0201, -24.2898, 0.49", "-82.4112, -14.8892, -23.8525, 0.49", "-82.4692, -14.8942, -23.838, 0.49", "-85.7805, -15.5278, -22.9319, 0.49", "-85.842, -15.5521, -22.9096, 0.49", "-87.4688, -16.4216, -22.1856, 0.49", "-89.4272, -17.6379, -21.2679, 0.49", "-90.9333, -18.6699, -20.5233, 0.49", "-91.0293, -18.7408, -20.4734, 0.49", "-94.1331, -21.3568, -18.6918, 0.49", "-96.6612, -23.5128, -17.2065, 0.49", "-98.1401, -24.8062, -16.2861, 0.49" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "18.9186, 6.71647, 6.40389, 0.49", "19.6021, 7.94678, 4.7447, 0.49", "20.3269, 9.25156, 2.98507, 0.49", "21.7253, 11.7687, -0.409604, 0.49", "22.8147, 13.7298, -3.05437, 0.49" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "11.8358, 11.5342, 8.6053, 0.49", "10.2358, 9.84745, 8.6053, 0.49" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "11.8358, 11.5342, 8.6053, 0.49", "9.96582, 12.9869, 7.8953, 0.49" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "22.8147, 13.7298, -3.05437, 0.49", "24.0147, 11.6043, -3.10437, 0.49" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "22.8147, 13.7298, -3.05437, 0.49", "22.4224, 15.9793, -5.84623, 0.49", "22.0395, 18.1745, -8.5708, 0.49", "21.3451, 22.1561, -13.5124, 0.49" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_33", "dend_11", "dend_0", "dend_37", "dend_34", "dend_28", "dend_12", "dend_2", "dend_1", "dend_36", "dend_35", "dend_32", "dend_29", "dend_16", "dend_13", "dend_10", "dend_3", "dend_31", "dend_30", "dend_18", "dend_17", "dend_15", "dend_14", "dend_9", "dend_4", "dend_20", "dend_19", "dend_8", "dend_5", "dend_24", "dend_21", "dend_7", "dend_6", "dend_25", "dend_23", "dend_22", "dend_27", "dend_26" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_33", "dend_11", "dend_0", "dend_37", "dend_34", "dend_28", "dend_12", "dend_2", "dend_1", "dend_36", "dend_35", "dend_32", "dend_29", "dend_16", "dend_13", "dend_10", "dend_3", "dend_31", "dend_30", "dend_18", "dend_17", "dend_15", "dend_14", "dend_9", "dend_4", "dend_20", "dend_19", "dend_8", "dend_5", "dend_24", "dend_21", "dend_7", "dend_6", "dend_25", "dend_23", "dend_22", "dend_27", "dend_26" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_33", "dend_11", "dend_0", "axon_0", "dend_37", "dend_34", "dend_28", "dend_12", "dend_2", "dend_1", "axon_1", "dend_36", "dend_35", "dend_32", "dend_29", "dend_16", "dend_13", "dend_10", "dend_3", "dend_31", "dend_30", "dend_18", "dend_17", "dend_15", "dend_14", "dend_9", "dend_4", "dend_20", "dend_19", "dend_8", "dend_5", "dend_24", "dend_21", "dend_7", "dend_6", "dend_25", "dend_23", "dend_22", "dend_27", "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_22", "dend_27", "dend_26", "dend_26", "dend_26" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L1_SLAC_0a908934ff_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_33, id: dend_33, parent: soma_0
create dend_33
public dend_33
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_28, id: dend_28, parent: dend_11
create dend_28
public dend_28
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_8, id: dend_8, parent: dend_4
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_33, dend_11, dend_0, dend_37, dend_34, dend_28, dend_12, dend_2, dend_1, dend_36, dend_35, dend_32, dend_29, dend_16, dend_13, dend_10, dend_3, dend_31, dend_30, dend_18, dend_17, dend_15, dend_14, dend_9, dend_4, dend_20, dend_19, dend_8, dend_5, dend_24, dend_21, dend_7, dend_6, dend_25, dend_23, dend_22, dend_27, dend_26]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_33, dend_11, dend_0, dend_37, dend_34, dend_28, dend_12, dend_2, dend_1, dend_36, dend_35, dend_32, dend_29, dend_16, dend_13, dend_10, dend_3, dend_31, dend_30, dend_18, dend_17, dend_15, dend_14, dend_9, dend_4, dend_20, dend_19, dend_8, dend_5, dend_24, dend_21, dend_7, dend_6, dend_25, dend_23, dend_22, dend_27, dend_26]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_33, dend_11, dend_0, axon_0, dend_37, dend_34, dend_28, dend_12, dend_2, dend_1, axon_1, dend_36, dend_35, dend_32, dend_29, dend_16, dend_13, dend_10, dend_3, dend_31, dend_30, dend_18, dend_17, dend_15, dend_14, dend_9, dend_4, dend_20, dend_19, dend_8, dend_5, dend_24, dend_21, dend_7, dend_6, dend_25, dend_23, dend_22, dend_27, dend_26]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_41
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_11, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_16, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_24, dend_24, dend_24, dend_24, dend_21, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_25, dend_25, dend_25, dend_25, dend_23, dend_22, dend_27, dend_26, dend_26, dend_26]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_33(0), soma_0(0.49999988166134957)
    connect dend_11(0), soma_0(0.49999988166134957)
    connect dend_0(0), soma_0(0.49999988166134957)
    connect axon_0(0), soma_0(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_28(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_8(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.46314, -8.22038, 0.0, 2.04534 ) }
    soma_0 { pt3dadd( 1.32967, -7.4749, 0.0, 3.60308 ) }
    soma_0 { pt3dadd( 1.19619, -6.72941, 0.0, 5.21049 ) }
    soma_0 { pt3dadd( 1.06272, -5.98393, 0.0, 6.43144 ) }
    soma_0 { pt3dadd( 0.929251, -5.23845, 0.0, 7.35581 ) }
    soma_0 { pt3dadd( 0.795779, -4.49297, 0.0, 7.78696 ) }
    soma_0 { pt3dadd( 0.662307, -3.74749, 0.0, 8.07589 ) }
    soma_0 { pt3dadd( 0.528835, -3.002, 0.0, 8.38005 ) }
    soma_0 { pt3dadd( 0.395363, -2.25652, 0.0, 9.12311 ) }
    soma_0 { pt3dadd( 0.261891, -1.51104, 0.0, 9.73493 ) }
    soma_0 { pt3dadd( 0.128419, -0.765557, 0.0, 9.91525 ) }
    soma_0 { pt3dadd( -0.00505256, -0.0200745, 0.0, 10.0215 ) }
    soma_0 { pt3dadd( -0.138524, 0.725408, 0.0, 10.1998 ) }
    soma_0 { pt3dadd( -0.271996, 1.47089, 0.0, 9.91892 ) }
    soma_0 { pt3dadd( -0.405468, 2.21637, 0.0, 9.57563 ) }
    soma_0 { pt3dadd( -0.53894, 2.96185, 0.0, 9.20844 ) }
    soma_0 { pt3dadd( -0.672412, 3.70734, 0.0, 8.49462 ) }
    soma_0 { pt3dadd( -0.805884, 4.45282, 0.0, 6.50822 ) }
    soma_0 { pt3dadd( -0.939356, 5.1983, 0.0, 4.56774 ) }
    soma_0 { pt3dadd( -1.07283, 5.94378, 0.0, 2.78306 ) }
    soma_0 { pt3dadd( -1.2063, 6.68927, 0.0, 1.74547 ) }
    // Section: dend_33, id: dend_33, parent: soma_0 (entry count 21/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -3.62531, 4.06396, 3.17, 0.49 ) }
    dend_33 { pt3dadd( -4.31497, 6.58498, 3.25997, 0.49 ) }
    dend_33 { pt3dadd( -4.97017, 9.41198, 3.36116, 0.49 ) }
    dend_33 { pt3dadd( -5.3932, 11.4238, 3.43612, 0.49 ) }
    dend_33 { pt3dadd( -5.40328, 11.4814, 3.43819, 0.49 ) }
    dend_33 { pt3dadd( -5.72857, 14.3842, 3.53564, 0.49 ) }
    dend_33 { pt3dadd( -5.73251, 14.4327, 3.53727, 0.49 ) }
    dend_33 { pt3dadd( -5.79881, 16.9442, 3.5242, 0.49 ) }
    dend_33 { pt3dadd( -5.79456, 17.1839, 3.5151, 0.49 ) }
    dend_33 { pt3dadd( -5.74178, 19.1059, 3.37231, 0.49 ) }
    dend_33 { pt3dadd( -5.63364, 22.0156, 2.96365, 0.49 ) }
    dend_33 { pt3dadd( -5.63094, 22.0634, 2.95417, 0.49 ) }
    dend_33 { pt3dadd( -5.39204, 26.4086, 1.93349, 0.49 ) }
    dend_33 { pt3dadd( -5.32772, 28.134, 1.4435, 0.49 ) }
    dend_33 { pt3dadd( -5.3158, 28.6555, 1.27808, 0.49 ) }
    dend_33 { pt3dadd( -5.34543, 31.9654, 0.0761127, 0.49 ) }
    dend_33 { pt3dadd( -5.43825, 34.2411, -0.805211, 0.49 ) }
    dend_33 { pt3dadd( -5.44388, 34.3396, -0.848338, 0.49 ) }
    dend_33 { pt3dadd( -5.70169, 36.43, -1.89354, 0.49 ) }
    dend_33 { pt3dadd( -5.70956, 36.4721, -1.91751, 0.49 ) }
    dend_33 { pt3dadd( -6.13631, 38.3288, -3.03447, 0.49 ) }
    dend_33 { pt3dadd( -6.63741, 40.0015, -4.14603, 0.49 ) }
    dend_33 { pt3dadd( -7.41364, 42.3724, -6.09371, 0.49 ) }
    dend_33 { pt3dadd( -8.13245, 44.5393, -7.93342, 0.49 ) }
    dend_33 { pt3dadd( -8.94218, 46.9253, -10.0851, 0.49 ) }
    dend_33 { pt3dadd( -8.95424, 46.9601, -10.118, 0.49 ) }
    dend_33 { pt3dadd( -9.61176, 48.776, -12.0125, 0.49 ) }
    dend_33 { pt3dadd( -10.9369, 52.1997, -15.9741, 0.49 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 49/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 1.14469, 6.25771, -0.53, 1.48 ) }
    dend_11 { pt3dadd( 0.63469, 9.52396, -11.93, 1.48 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 51/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -5.41531, 2.41621, 0.06, 1.35 ) }
    dend_0 { pt3dadd( -7.44627, 3.57838, -0.868222, 1.35 ) }
    dend_0 { pt3dadd( -9.14987, 4.55321, -1.64682, 1.35 ) }
    dend_0 { pt3dadd( -9.35062, 4.66808, -1.73857, 1.35 ) }
    dend_0 { pt3dadd( -11.2454, 5.7523, -2.60454, 1.35 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 56/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.2063, 6.68927, 0.0, 2.53255 ) }
    axon_0 { pt3dadd( -3.84988, 21.4545, 0.0, 2.53255 ) }
    axon_0 { pt3dadd( -6.49346, 36.2197, 0.0, 2.53255 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 59/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -10.9369, 52.1997, -15.9741, 0.49 ) }
    dend_37 { pt3dadd( -7.78228, 51.8292, -14.053, 0.49 ) }
    dend_37 { pt3dadd( -7.7398, 51.8242, -14.0271, 0.49 ) }
    dend_37 { pt3dadd( -1.80825, 51.1277, -10.4148, 0.49 ) }
    dend_37 { pt3dadd( 0.640982, 50.8401, -8.92326, 0.49 ) }
    dend_37 { pt3dadd( 0.956368, 50.803, -8.73119, 0.49 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 65/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -10.9369, 52.1997, -15.9741, 0.49 ) }
    dend_34 { pt3dadd( -12.0425, 54.384, -17.7119, 0.49 ) }
    dend_34 { pt3dadd( -13.393, 57.4813, -20.3546, 0.49 ) }
    dend_34 { pt3dadd( -13.8802, 58.6701, -21.3993, 0.49 ) }
    dend_34 { pt3dadd( -13.9499, 58.8294, -21.5892, 0.49 ) }
    dend_34 { pt3dadd( -14.6433, 60.3527, -23.6264, 0.49 ) }
    dend_34 { pt3dadd( -14.6744, 60.4078, -23.7028, 0.49 ) }
    dend_34 { pt3dadd( -16.1229, 62.6721, -27.3279, 0.49 ) }
    dend_34 { pt3dadd( -16.1554, 62.7185, -27.4097, 0.49 ) }
    dend_34 { pt3dadd( -18.5697, 65.8761, -33.2871, 0.49 ) }
    dend_34 { pt3dadd( -18.6131, 65.9274, -33.3864, 0.49 ) }
    dend_34 { pt3dadd( -20.1648, 67.4254, -36.6043, 0.49 ) }
    dend_34 { pt3dadd( -20.1858, 67.4431, -36.6458, 0.49 ) }
    // Section: dend_28, id: dend_28, parent: dend_11 (entry count 78/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 0.63469, 9.52396, -11.93, 1.23 ) }
    dend_28 { pt3dadd( -0.156888, 10.0935, -17.7052, 1.23 ) }
    dend_28 { pt3dadd( -0.432161, 10.2916, -19.7135, 1.23 ) }
    dend_28 { pt3dadd( -0.448376, 10.3033, -19.8318, 1.23 ) }
    dend_28 { pt3dadd( -0.794456, 10.5523, -22.3568, 1.23 ) }
    dend_28 { pt3dadd( -1.25108, 10.8809, -25.6882, 1.23 ) }
    dend_28 { pt3dadd( -2.53254, 11.803, -35.0375, 1.23 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 85/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 0.63469, 9.52396, -11.93, 0.86 ) }
    dend_12 { pt3dadd( 2.58379, 11.7104, -12.1678, 0.86 ) }
    dend_12 { pt3dadd( 4.15397, 13.1106, -12.3094, 0.86 ) }
    dend_12 { pt3dadd( 6.15542, 14.4441, -12.3342, 0.86 ) }
    dend_12 { pt3dadd( 7.7334, 15.4318, -12.302, 0.86 ) }
    dend_12 { pt3dadd( 7.84311, 15.5004, -12.2997, 0.86 ) }
    dend_12 { pt3dadd( 10.1524, 16.9459, -12.2525, 0.86 ) }
    dend_12 { pt3dadd( 11.7025, 17.6683, -12.1703, 0.86 ) }
    dend_12 { pt3dadd( 14.4286, 18.6109, -11.8986, 0.86 ) }
    dend_12 { pt3dadd( 16.0042, 19.0164, -11.7076, 0.86 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 95/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -11.2454, 5.7523, -2.60454, 0.61 ) }
    dend_2 { pt3dadd( -13.3356, 4.22361, -3.26581, 0.61 ) }
    dend_2 { pt3dadd( -15.3704, 2.79637, -3.82181, 0.61 ) }
    dend_2 { pt3dadd( -16.9138, 1.71384, -4.24352, 0.61 ) }
    dend_2 { pt3dadd( -18.4809, 0.61466, -4.67172, 0.61 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_2 { pt3dadd( -20.09, -0.513979, -5.11139, 0.61 ) }
    dend_2 { pt3dadd( -21.5336, -1.52653, -5.50584, 0.61 ) }
    dend_2 { pt3dadd( -21.9206, -1.79809, -5.56088, 0.61 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 3/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -11.2454, 5.7523, -2.60454, 0.86 ) }
    dend_1 { pt3dadd( -13.0721, 6.7578, -2.8349, 0.86 ) }
    dend_1 { pt3dadd( -14.202, 7.18275, -2.94432, 0.86 ) }
    dend_1 { pt3dadd( -15.6901, 7.67621, -3.11549, 0.61 ) }
    dend_1 { pt3dadd( -17.4325, 8.2964, -3.32606, 0.61 ) }
    dend_1 { pt3dadd( -18.9374, 8.90827, -3.50914, 0.61 ) }
    dend_1 { pt3dadd( -19.8148, 9.33244, -3.58765, 0.61 ) }
    dend_1 { pt3dadd( -21.4762, 10.0863, -3.67562, 0.61 ) }
    dend_1 { pt3dadd( -22.8889, 10.8295, -3.73459, 0.61 ) }
    dend_1 { pt3dadd( -23.7884, 11.4364, -3.73798, 0.61 ) }
    dend_1 { pt3dadd( -24.6707, 12.3276, -3.74483, 0.61 ) }
    dend_1 { pt3dadd( -25.7059, 13.7687, -3.8004, 0.61 ) }
    dend_1 { pt3dadd( -25.7682, 13.8801, -3.80774, 0.61 ) }
    dend_1 { pt3dadd( -26.2888, 15.1812, -3.92025, 0.61 ) }
    dend_1 { pt3dadd( -26.3688, 15.4118, -3.94459, 0.61 ) }
    dend_1 { pt3dadd( -26.9118, 16.9695, -4.20574, 0.61 ) }
    dend_1 { pt3dadd( -26.9965, 17.1785, -4.27568, 0.61 ) }
    dend_1 { pt3dadd( -27.4736, 18.0723, -4.73638, 0.61 ) }
    dend_1 { pt3dadd( -28.2832, 19.4044, -5.48682, 0.61 ) }
    dend_1 { pt3dadd( -28.8667, 20.2572, -6.01086, 0.61 ) }
    dend_1 { pt3dadd( -28.9673, 20.4034, -6.09698, 0.61 ) }
    dend_1 { pt3dadd( -30.0771, 22.1648, -7.20004, 0.61 ) }
    dend_1 { pt3dadd( -30.6473, 23.1705, -7.96958, 0.61 ) }
    dend_1 { pt3dadd( -31.1028, 24.1952, -8.84214, 0.61 ) }
    dend_1 { pt3dadd( -31.1225, 24.2446, -8.88626, 0.61 ) }
    dend_1 { pt3dadd( -31.4003, 25.0324, -9.6074, 0.61 ) }
    dend_1 { pt3dadd( -31.9211, 26.6548, -11.068, 0.61 ) }
    dend_1 { pt3dadd( -32.3905, 28.387, -12.5502, 0.61 ) }
    dend_1 { pt3dadd( -32.8075, 30.0568, -13.9654, 0.61 ) }
    dend_1 { pt3dadd( -33.406, 32.3538, -15.9721, 0.61 ) }
    dend_1 { pt3dadd( -34.0105, 34.5263, -17.8704, 0.61 ) }
    dend_1 { pt3dadd( -34.0398, 34.6201, -17.9527, 0.61 ) }
    dend_1 { pt3dadd( -34.6228, 36.3157, -19.3287, 0.61 ) }
    dend_1 { pt3dadd( -34.651, 36.4065, -19.3996, 0.61 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 37/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -6.49346, 36.2197, 0.0, 0.61 ) }
    axon_1 { pt3dadd( -9.13704, 50.9849, 0.0, 0.61 ) }
    axon_1 { pt3dadd( -11.7806, 65.7501, 0.0, 0.61 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 40/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -20.1858, 67.4431, -36.6458, 0.49 ) }
    dend_36 { pt3dadd( -18.146, 67.8373, -36.0137, 0.49 ) }
    dend_36 { pt3dadd( -15.1445, 68.4173, -35.0836, 0.49 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 43/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -20.1858, 67.4431, -36.6458, 0.49 ) }
    dend_35 { pt3dadd( -21.2231, 67.3058, -36.7658, 0.49 ) }
    dend_35 { pt3dadd( -21.4704, 67.2759, -36.7942, 0.49 ) }
    dend_35 { pt3dadd( -23.8197, 67.0384, -37.0363, 0.49 ) }
    dend_35 { pt3dadd( -25.8157, 66.8597, -37.2285, 0.49 ) }
    dend_35 { pt3dadd( -28.4301, 66.69, -37.4602, 0.49 ) }
    dend_35 { pt3dadd( -31.3884, 66.5752, -37.705, 0.49 ) }
    dend_35 { pt3dadd( -31.5084, 66.5741, -37.7145, 0.49 ) }
    dend_35 { pt3dadd( -34.0893, 66.6777, -37.9136, 0.49 ) }
    dend_35 { pt3dadd( -34.5671, 66.7267, -37.9481, 0.49 ) }
    dend_35 { pt3dadd( -36.2081, 67.0407, -38.1164, 0.49 ) }
    dend_35 { pt3dadd( -37.0561, 67.259, -38.2272, 0.49 ) }
    dend_35 { pt3dadd( -37.1025, 67.2731, -38.2391, 0.49 ) }
    dend_35 { pt3dadd( -39.1731, 67.9122, -38.9681, 0.49 ) }
    dend_35 { pt3dadd( -39.2171, 67.9259, -38.9872, 0.49 ) }
    dend_35 { pt3dadd( -40.8851, 68.3398, -39.7062, 0.49 ) }
    dend_35 { pt3dadd( -41.1059, 68.3833, -39.8035, 0.49 ) }
    dend_35 { pt3dadd( -44.1764, 68.7118, -41.0346, 0.49 ) }
    dend_35 { pt3dadd( -44.2231, 68.7147, -41.0521, 0.49 ) }
    dend_35 { pt3dadd( -46.0895, 68.7373, -41.7033, 0.49 ) }
    dend_35 { pt3dadd( -47.9132, 68.6813, -42.2009, 0.49 ) }
    dend_35 { pt3dadd( -47.9628, 68.6773, -42.2059, 0.49 ) }
    dend_35 { pt3dadd( -50.262, 68.4312, -42.1876, 0.49 ) }
    dend_35 { pt3dadd( -51.7659, 68.2713, -41.9836, 0.49 ) }
    dend_35 { pt3dadd( -51.893, 68.2592, -41.9595, 0.49 ) }
    dend_35 { pt3dadd( -55.4574, 67.9971, -41.0318, 0.49 ) }
    dend_35 { pt3dadd( -58.7717, 67.8754, -39.9283, 0.49 ) }
    dend_35 { pt3dadd( -58.8183, 67.8765, -39.9103, 0.49 ) }
    dend_35 { pt3dadd( -60.7966, 68.0582, -38.9894, 0.49 ) }
    dend_35 { pt3dadd( -60.9286, 68.0785, -38.9212, 0.49 ) }
    dend_35 { pt3dadd( -61.7681, 68.291, -38.4769, 0.49 ) }
    dend_35 { pt3dadd( -62.0651, 68.455, -38.3337, 0.49 ) }
    dend_35 { pt3dadd( -63.5339, 69.7347, -38.0328, 0.49 ) }
    dend_35 { pt3dadd( -63.5672, 69.7709, -38.0297, 0.49 ) }
    dend_35 { pt3dadd( -64.4449, 70.8293, -38.0623, 0.49 ) }
    dend_35 { pt3dadd( -64.5059, 70.9063, -38.0681, 0.49 ) }
    dend_35 { pt3dadd( -65.851, 72.7457, -38.3192, 0.49 ) }
    dend_35 { pt3dadd( -66.6498, 73.9351, -38.5396, 0.49 ) }
    dend_35 { pt3dadd( -67.1126, 74.7427, -38.733, 0.49 ) }
    dend_35 { pt3dadd( -68.1749, 76.589, -39.204, 0.49 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 83/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -2.53254, 11.803, -35.0375, 0.98 ) }
    dend_32 { pt3dadd( -4.80726, 13.4356, -42.0669, 0.98 ) }
    dend_32 { pt3dadd( -6.46769, 14.4175, -46.1777, 0.98 ) }
    dend_32 { pt3dadd( -7.00906, 14.7052, -47.3607, 0.98 ) }
    dend_32 { pt3dadd( -7.06422, 14.7269, -47.4538, 0.98 ) }
    dend_32 { pt3dadd( -8.1486, 15.0466, -48.9577, 0.98 ) }
    dend_32 { pt3dadd( -10.189, 15.5384, -51.4397, 0.74 ) }
    dend_32 { pt3dadd( -11.2679, 15.6653, -52.3733, 0.74 ) }
    dend_32 { pt3dadd( -11.4562, 15.6808, -52.5226, 0.74 ) }
    dend_32 { pt3dadd( -14.1288, 15.6981, -54.9338, 0.74 ) }
    dend_32 { pt3dadd( -16.6106, 15.6991, -57.7921, 0.74 ) }
    dend_32 { pt3dadd( -18.8466, 15.8078, -60.9968, 0.49 ) }
    dend_32 { pt3dadd( -20.271, 16.0045, -63.5496, 0.49 ) }
    dend_32 { pt3dadd( -20.4709, 16.0451, -63.9968, 0.49 ) }
    dend_32 { pt3dadd( -23.0899, 16.805, -70.7651, 0.49 ) }
    dend_32 { pt3dadd( -25.6255, 17.6836, -77.6576, 0.49 ) }
    dend_32 { pt3dadd( -27.1884, 18.2252, -81.8611, 0.49 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_32 { pt3dadd( -29.464, 19.0113, -88.1122, 0.49 ) }
    dend_32 { pt3dadd( -32.0687, 20.0968, -95.2057, 0.49 ) }
    dend_32 { pt3dadd( -34.2721, 21.3434, -101.41, 0.49 ) }
    dend_32 { pt3dadd( -36.3094, 22.991, -107.407, 0.49 ) }
    dend_32 { pt3dadd( -37.9997, 24.327, -112.118, 0.49 ) }
    dend_32 { pt3dadd( -40.4002, 26.2586, -118.706, 0.49 ) }
    dend_32 { pt3dadd( -42.0355, 27.7818, -123.251, 0.49 ) }
    dend_32 { pt3dadd( -44.461, 30.7631, -130.426, 0.49 ) }
    dend_32 { pt3dadd( -45.3903, 32.6038, -134.084, 0.49 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 9/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -2.53254, 11.803, -35.0375, 0.74 ) }
    dend_29 { pt3dadd( -1.29254, 13.6457, -43.4975, 0.74 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 11/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 16.0042, 19.0164, -11.7076, 0.49 ) }
    dend_16 { pt3dadd( 15.5742, 20.1182, 0.332409, 0.49 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 13/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 16.0042, 19.0164, -11.7076, 0.86 ) }
    dend_13 { pt3dadd( 16.1583, 19.3702, -12.134, 0.86 ) }
    dend_13 { pt3dadd( 16.2273, 19.5286, -12.3249, 0.86 ) }
    dend_13 { pt3dadd( 17.2775, 21.9388, -15.2299, 0.74 ) }
    dend_13 { pt3dadd( 17.8338, 23.2158, -16.769, 0.74 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 18/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -21.9206, -1.79809, -5.56088, 0.49 ) }
    dend_10 { pt3dadd( -22.6429, -2.22585, -4.76516, 0.49 ) }
    dend_10 { pt3dadd( -24.619, -3.26746, -2.9336, 0.49 ) }
    dend_10 { pt3dadd( -25.8728, -3.82059, -1.97229, 0.49 ) }
    dend_10 { pt3dadd( -25.9281, -3.83717, -1.93287, 0.49 ) }
    dend_10 { pt3dadd( -27.6503, -4.12042, -0.688676, 0.49 ) }
    dend_10 { pt3dadd( -27.7471, -4.13633, -0.618813, 0.49 ) }
    dend_10 { pt3dadd( -29.2071, -4.28169, 0.385691, 0.49 ) }
    dend_10 { pt3dadd( -31.5665, -4.39037, 1.81592, 0.49 ) }
    dend_10 { pt3dadd( -33.5326, -4.36076, 3.0044, 0.49 ) }
    dend_10 { pt3dadd( -36.3261, -4.18975, 4.70176, 0.49 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 29/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -21.9206, -1.79809, -5.56088, 0.61 ) }
    dend_3 { pt3dadd( -22.7801, -1.74624, -5.65588, 0.61 ) }
    dend_3 { pt3dadd( -22.9095, -1.73844, -5.67018, 0.61 ) }
    dend_3 { pt3dadd( -25.1189, -1.60517, -5.91438, 0.61 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 33/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -1.29254, 13.6457, -43.4975, 0.61 ) }
    dend_31 { pt3dadd( -0.48675, 13.0287, -44.7288, 0.61 ) }
    dend_31 { pt3dadd( 0.365718, 12.3284, -46.0603, 0.61 ) }
    dend_31 { pt3dadd( 3.52294, 9.87735, -50.8238, 0.61 ) }
    dend_31 { pt3dadd( 6.2439, 7.95005, -54.8055, 0.61 ) }
    dend_31 { pt3dadd( 8.69617, 6.35286, -58.2929, 0.61 ) }
    dend_31 { pt3dadd( 12.3347, 4.15525, -63.3063, 0.61 ) }
    dend_31 { pt3dadd( 14.8552, 2.77344, -66.7454, 0.61 ) }
    dend_31 { pt3dadd( 18.5172, 1.03333, -71.6218, 0.61 ) }
    dend_31 { pt3dadd( 22.9952, -0.651657, -77.0123, 0.61 ) }
    dend_31 { pt3dadd( 27.1422, -1.80191, -81.5853, 0.61 ) }
    dend_31 { pt3dadd( 30.6123, -2.58471, -85.2517, 0.61 ) }
    dend_31 { pt3dadd( 35.0552, -3.38358, -89.6882, 0.61 ) }
    dend_31 { pt3dadd( 39.5, -4.00437, -94.0117, 0.61 ) }
    dend_31 { pt3dadd( 44.4671, -4.53514, -98.6399, 0.61 ) }
    dend_31 { pt3dadd( 47.7037, -4.75598, -101.435, 0.61 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 49/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -1.29254, 13.6457, -43.4975, 0.61 ) }
    dend_30 { pt3dadd( -0.963782, 14.9339, -43.4797, 0.61 ) }
    dend_30 { pt3dadd( -0.221687, 17.0841, -43.4575, 0.61 ) }
    dend_30 { pt3dadd( 0.501161, 18.8903, -43.4425, 0.61 ) }
    dend_30 { pt3dadd( 0.723592, 19.317, -43.4412, 0.61 ) }
    dend_30 { pt3dadd( 1.61047, 20.5788, -43.4472, 0.61 ) }
    dend_30 { pt3dadd( 1.69886, 20.6717, -43.437, 0.61 ) }
    dend_30 { pt3dadd( 2.85901, 21.5802, -43.2885, 0.61 ) }
    dend_30 { pt3dadd( 3.0075, 21.6585, -43.266, 0.61 ) }
    dend_30 { pt3dadd( 4.88793, 22.3635, -42.9354, 0.61 ) }
    dend_30 { pt3dadd( 6.90882, 22.98, -42.535, 0.61 ) }
    dend_30 { pt3dadd( 10.3461, 23.7297, -41.7069, 0.61 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 61/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 15.5742, 20.1182, 0.332409, 0.49 ) }
    dend_18 { pt3dadd( 15.7892, 18.4409, 4.18254, 0.49 ) }
    dend_18 { pt3dadd( 15.9936, 16.8467, 7.84188, 0.49 ) }
    dend_18 { pt3dadd( 16.0157, 16.6742, 8.23776, 0.49 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 65/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 15.5742, 20.1182, 0.332409, 0.49 ) }
    dend_17 { pt3dadd( 16.2679, 22.6942, -0.499522, 0.49 ) }
    dend_17 { pt3dadd( 16.3917, 23.2526, -0.680795, 0.49 ) }
    dend_17 { pt3dadd( 16.4372, 23.4826, -0.752894, 0.49 ) }
    dend_17 { pt3dadd( 16.8959, 26.0307, -1.51908, 0.49 ) }
    dend_17 { pt3dadd( 17.2702, 28.2194, -2.16983, 0.49 ) }
    dend_17 { pt3dadd( 17.6494, 30.5696, -2.87303, 0.49 ) }
    dend_17 { pt3dadd( 17.8384, 31.676, -3.28689, 0.49 ) }
    dend_17 { pt3dadd( 17.941, 32.3526, -3.52772, 0.49 ) }
    dend_17 { pt3dadd( 18.0668, 33.3771, -3.87716, 0.49 ) }
    dend_17 { pt3dadd( 18.0727, 33.4704, -3.90575, 0.49 ) }
    dend_17 { pt3dadd( 18.115, 34.6909, -4.32704, 0.49 ) }
    dend_17 { pt3dadd( 18.1369, 34.92, -4.41023, 0.49 ) }
    dend_17 { pt3dadd( 18.2189, 36.0465, -4.8802, 0.49 ) }
    dend_17 { pt3dadd( 18.2226, 36.6284, -5.13765, 0.49 ) }
    dend_17 { pt3dadd( 18.1863, 37.517, -5.55149, 0.49 ) }
    dend_17 { pt3dadd( 18.0608, 38.3896, -5.94013, 0.49 ) }
    dend_17 { pt3dadd( 17.9952, 38.7514, -6.10171, 0.49 ) }
    dend_17 { pt3dadd( 17.6591, 40.3254, -6.80429, 0.49 ) }
    dend_17 { pt3dadd( 17.3295, 41.5651, -7.34541, 0.49 ) }
    dend_17 { pt3dadd( 17.2645, 41.785, -7.43139, 0.49 ) }
    dend_17 { pt3dadd( 16.4766, 44.0017, -8.27772, 0.49 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 87/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 17.8338, 23.2158, -16.769, 0.61 ) }
    dend_15 { pt3dadd( 18.0345, 20.836, -14.0612, 0.61 ) }
    dend_15 { pt3dadd( 17.9542, 19.0186, -11.5366, 0.61 ) }
    dend_15 { pt3dadd( 17.7647, 16.8754, -8.63711, 0.61 ) }
    dend_15 { pt3dadd( 17.7611, 16.8343, -8.5814, 0.61 ) }
    dend_15 { pt3dadd( 17.4827, 13.6853, -4.32101, 0.61 ) }
    dend_15 { pt3dadd( 17.1637, 10.0777, 0.559871, 0.61 ) }
    dend_15 { pt3dadd( 16.668, 7.59108, 4.42306, 0.61 ) }
    dend_15 { pt3dadd( 16.2145, 5.89378, 7.37844, 0.61 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 96/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 17.8338, 23.2158, -16.769, 0.61 ) }
    dend_14 { pt3dadd( 19.2884, 24.4397, -17.6968, 0.61 ) }
    dend_14 { pt3dadd( 20.513, 25.3852, -18.4797, 0.61 ) }
    dend_14 { pt3dadd( 21.6591, 26.1222, -19.414, 0.61 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_14 { pt3dadd( 22.5674, 26.6209, -20.1814, 0.61 ) }
    dend_14 { pt3dadd( 25.4498, 27.8982, -22.5144, 0.61 ) }
    dend_14 { pt3dadd( 29.2161, 29.0901, -25.5351, 0.61 ) }
    dend_14 { pt3dadd( 29.3168, 29.1033, -25.6169, 0.61 ) }
    dend_14 { pt3dadd( 33.485, 29.0543, -28.8805, 0.61 ) }
    dend_14 { pt3dadd( 34.8413, 28.9494, -29.949, 0.61 ) }
    dend_14 { pt3dadd( 36.7941, 28.6547, -31.4618, 0.61 ) }
    dend_14 { pt3dadd( 40.7406, 27.6689, -34.3659, 0.61 ) }
    dend_14 { pt3dadd( 43.5475, 26.7394, -36.4095, 0.61 ) }
    dend_14 { pt3dadd( 46.4395, 25.7591, -38.3673, 0.61 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 10/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -25.1189, -1.60517, -5.91438, 0.49 ) }
    dend_9 { pt3dadd( -25.7844, 0.261226, -6.05913, 0.49 ) }
    dend_9 { pt3dadd( -26.3555, 1.83186, -6.19089, 0.49 ) }
    dend_9 { pt3dadd( -27.1596, 4.04326, -6.3764, 0.49 ) }
    dend_9 { pt3dadd( -27.5389, 5.08637, -6.4639, 0.49 ) }
    dend_9 { pt3dadd( -27.6299, 5.33662, -6.4849, 0.49 ) }
    dend_9 { pt3dadd( -28.2209, 6.96199, -6.62124, 0.49 ) }
    dend_9 { pt3dadd( -28.2865, 7.13017, -6.62777, 0.49 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 18/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -25.1189, -1.60517, -5.91438, 0.61 ) }
    dend_4 { pt3dadd( -25.8065, -3.47242, -6.12308, 0.61 ) }
    dend_4 { pt3dadd( -26.2416, -4.69647, -6.23247, 0.61 ) }
    dend_4 { pt3dadd( -26.4922, -5.37665, -6.28773, 0.61 ) }
    dend_4 { pt3dadd( -26.8945, -6.51011, -6.36515, 0.61 ) }
    dend_4 { pt3dadd( -26.9336, -6.62095, -6.372, 0.61 ) }
    dend_4 { pt3dadd( -27.451, -8.0411, -6.45121, 0.61 ) }
    dend_4 { pt3dadd( -27.9953, -9.3935, -6.50402, 0.61 ) }
    dend_4 { pt3dadd( -28.1161, -9.60777, -6.50778, 0.61 ) }
    dend_4 { pt3dadd( -28.9542, -10.9439, -6.53348, 0.61 ) }
    dend_4 { pt3dadd( -29.0501, -11.0811, -6.53638, 0.61 ) }
    dend_4 { pt3dadd( -29.5787, -11.7889, -6.55192, 0.61 ) }
    dend_4 { pt3dadd( -30.9344, -13.3657, -6.5892, 0.61 ) }
    dend_4 { pt3dadd( -31.7633, -14.1525, -6.6061, 0.61 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 32/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 16.0157, 16.6742, 8.23776, 0.49 ) }
    dend_20 { pt3dadd( 15.6448, 15.9153, 8.28583, 0.49 ) }
    dend_20 { pt3dadd( 15.2434, 15.0938, 8.33786, 0.49 ) }
    dend_20 { pt3dadd( 14.5223, 13.6182, 8.43133, 0.49 ) }
    dend_20 { pt3dadd( 14.07, 12.6927, 8.48995, 0.49 ) }
    dend_20 { pt3dadd( 14.0183, 12.5869, 8.49666, 0.49 ) }
    dend_20 { pt3dadd( 13.5658, 11.6609, 8.55531, 0.49 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 39/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 16.0157, 16.6742, 8.23776, 0.49 ) }
    dend_19 { pt3dadd( 17.9641, 17.4851, 7.55034, 0.49 ) }
    dend_19 { pt3dadd( 18.0078, 17.5033, 7.53491, 0.49 ) }
    dend_19 { pt3dadd( 19.1126, 17.9631, 7.14512, 0.49 ) }
    dend_19 { pt3dadd( 19.3313, 18.0541, 7.06796, 0.49 ) }
    dend_19 { pt3dadd( 21.86, 19.1065, 6.17582, 0.49 ) }
    // Section: dend_8, id: dend_8, parent: dend_4 (entry count 45/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -31.7633, -14.1525, -6.6061, 0.49 ) }
    dend_8 { pt3dadd( -32.7604, -16.5941, -7.73677, 0.49 ) }
    dend_8 { pt3dadd( -33.4898, -18.0014, -8.4231, 0.49 ) }
    dend_8 { pt3dadd( -34.202, -19.0619, -8.95245, 0.49 ) }
    dend_8 { pt3dadd( -34.2425, -19.1103, -8.98071, 0.49 ) }
    dend_8 { pt3dadd( -36.3448, -21.3886, -10.4955, 0.49 ) }
    dend_8 { pt3dadd( -38.5334, -23.7604, -12.0725, 0.49 ) }
    dend_8 { pt3dadd( -41.0149, -26.205, -13.7915, 0.49 ) }
    dend_8 { pt3dadd( -43.2122, -28.2518, -15.3365, 0.49 ) }
    dend_8 { pt3dadd( -46.3819, -31.0862, -17.5765, 0.49 ) }
    dend_8 { pt3dadd( -48.2428, -32.6314, -18.8573, 0.49 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 56/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -31.7633, -14.1525, -6.6061, 0.61 ) }
    dend_5 { pt3dadd( -33.4919, -14.3231, -6.86639, 0.61 ) }
    dend_5 { pt3dadd( -35.4981, -14.6663, -7.39554, 0.61 ) }
    dend_5 { pt3dadd( -37.2651, -15.0503, -8.17959, 0.61 ) }
    dend_5 { pt3dadd( -38.8657, -15.4373, -9.03985, 0.61 ) }
    dend_5 { pt3dadd( -39.7489, -15.6453, -9.70087, 0.61 ) }
    dend_5 { pt3dadd( -41.5969, -16.0635, -11.4215, 0.61 ) }
    dend_5 { pt3dadd( -43.3226, -16.4843, -13.5011, 0.61 ) }
    dend_5 { pt3dadd( -45.0058, -16.8604, -15.8117, 0.61 ) }
    dend_5 { pt3dadd( -45.07, -16.8746, -15.9125, 0.61 ) }
    dend_5 { pt3dadd( -47.1959, -17.3782, -19.6921, 0.61 ) }
    dend_5 { pt3dadd( -48.3083, -17.6361, -21.8309, 0.61 ) }
    dend_5 { pt3dadd( -48.4339, -17.6621, -22.0823, 0.61 ) }
    dend_5 { pt3dadd( -49.555, -17.6698, -24.0504, 0.61 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 70/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 13.5658, 11.6609, 8.55531, 0.49 ) }
    dend_24 { pt3dadd( 14.7921, 10.5282, 8.06243, 0.49 ) }
    dend_24 { pt3dadd( 16.5523, 8.90231, 7.35497, 0.49 ) }
    dend_24 { pt3dadd( 16.622, 8.83794, 7.32696, 0.49 ) }
    dend_24 { pt3dadd( 18.9186, 6.71647, 6.40389, 0.49 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 75/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 13.5658, 11.6609, 8.55531, 0.49 ) }
    dend_21 { pt3dadd( 11.8358, 11.5342, 8.6053, 0.49 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 77/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -49.555, -17.6698, -24.0504, 0.49 ) }
    dend_7 { pt3dadd( -50.6022, -19.6179, -26.2903, 0.49 ) }
    dend_7 { pt3dadd( -51.7985, -21.7554, -28.453, 0.49 ) }
    dend_7 { pt3dadd( -52.9537, -23.8195, -30.5414, 0.49 ) }
    dend_7 { pt3dadd( -53.8091, -25.3477, -32.0877, 0.49 ) }
    dend_7 { pt3dadd( -53.8525, -25.4254, -32.1663, 0.49 ) }
    dend_7 { pt3dadd( -54.9007, -27.2982, -34.0611, 0.49 ) }
    dend_7 { pt3dadd( -56.0155, -29.4572, -36.2335, 0.49 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 85/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -49.555, -17.6698, -24.0504, 0.61 ) }
    dend_6 { pt3dadd( -53.5904, -17.5571, -25.0376, 0.61 ) }
    dend_6 { pt3dadd( -54.5558, -17.5242, -25.2422, 0.61 ) }
    dend_6 { pt3dadd( -59.5262, -17.4217, -26.0355, 0.49 ) }
    dend_6 { pt3dadd( -63.5558, -17.3337, -26.521, 0.49 ) }
    dend_6 { pt3dadd( -64.1656, -17.3129, -26.5577, 0.49 ) }
    dend_6 { pt3dadd( -65.805, -17.2409, -26.6052, 0.49 ) }
    dend_6 { pt3dadd( -67.8977, -17.0699, -26.5164, 0.49 ) }
    dend_6 { pt3dadd( -70.961, -16.7218, -26.2526, 0.49 ) }
    dend_6 { pt3dadd( -73.5071, -16.3554, -25.8393, 0.49 ) }
    dend_6 { pt3dadd( -76.6113, -15.8361, -25.2389, 0.49 ) }
    dend_6 { pt3dadd( -76.8705, -15.7887, -25.1846, 0.49 ) }
    dend_6 { pt3dadd( -78.9661, -15.389, -24.7097, 0.49 ) }
    dend_6 { pt3dadd( -80.3887, -15.0828, -24.3661, 0.49 ) }
    dend_6 { pt3dadd( -80.6936, -15.0201, -24.2898, 0.49 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_6 { pt3dadd( -82.4112, -14.8892, -23.8525, 0.49 ) }
    dend_6 { pt3dadd( -82.4692, -14.8942, -23.838, 0.49 ) }
    dend_6 { pt3dadd( -85.7805, -15.5278, -22.9319, 0.49 ) }
    dend_6 { pt3dadd( -85.842, -15.5521, -22.9096, 0.49 ) }
    dend_6 { pt3dadd( -87.4688, -16.4216, -22.1856, 0.49 ) }
    dend_6 { pt3dadd( -89.4272, -17.6379, -21.2679, 0.49 ) }
    dend_6 { pt3dadd( -90.9333, -18.6699, -20.5233, 0.49 ) }
    dend_6 { pt3dadd( -91.0293, -18.7408, -20.4734, 0.49 ) }
    dend_6 { pt3dadd( -94.1331, -21.3568, -18.6918, 0.49 ) }
    dend_6 { pt3dadd( -96.6612, -23.5128, -17.2065, 0.49 ) }
    dend_6 { pt3dadd( -98.1401, -24.8062, -16.2861, 0.49 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 11/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 18.9186, 6.71647, 6.40389, 0.49 ) }
    dend_25 { pt3dadd( 19.6021, 7.94678, 4.7447, 0.49 ) }
    dend_25 { pt3dadd( 20.3269, 9.25156, 2.98507, 0.49 ) }
    dend_25 { pt3dadd( 21.7253, 11.7687, -0.409604, 0.49 ) }
    dend_25 { pt3dadd( 22.8147, 13.7298, -3.05437, 0.49 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 16/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 11.8358, 11.5342, 8.6053, 0.49 ) }
    dend_23 { pt3dadd( 10.2358, 9.84745, 8.6053, 0.49 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 18/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 11.8358, 11.5342, 8.6053, 0.49 ) }
    dend_22 { pt3dadd( 9.96582, 12.9869, 7.8953, 0.49 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 20/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 22.8147, 13.7298, -3.05437, 0.49 ) }
    dend_27 { pt3dadd( 24.0147, 11.6043, -3.10437, 0.49 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 22/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 22.8147, 13.7298, -3.05437, 0.49 ) }
    dend_26 { pt3dadd( 22.4224, 15.9793, -5.84623, 0.49 ) }
    dend_26 { pt3dadd( 22.0395, 18.1745, -8.5708, 0.49 ) }
    dend_26 { pt3dadd( 21.3451, 22.1561, -13.5124, 0.49 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_33, dend_11, dend_0, dend_37, dend_34, dend_28, dend_12, dend_2, dend_1, dend_36, dend_35, dend_32, dend_29, dend_16, dend_13, dend_10, dend_3, dend_31, dend_30, dend_18, dend_17, dend_15, dend_14, dend_9, dend_4, dend_20, dend_19, dend_8, dend_5, dend_24, dend_21, dend_7, dend_6, dend_25, dend_23, dend_22, dend_27, dend_26]}
    ModelViewParmSubset_2 = new SectionList()
    dend_33 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_33, dend_11, dend_0, dend_37, dend_34, dend_28, dend_12, dend_2, dend_1, dend_36, dend_35, dend_32, dend_29, dend_16, dend_13, dend_10, dend_3, dend_31, dend_30, dend_18, dend_17, dend_15, dend_14, dend_9, dend_4, dend_20, dend_19, dend_8, dend_5, dend_24, dend_21, dend_7, dend_6, dend_25, dend_23, dend_22, dend_27, dend_26]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_33, dend_11, dend_0, axon_0, dend_37, dend_34, dend_28, dend_12, dend_2, dend_1, axon_1, dend_36, dend_35, dend_32, dend_29, dend_16, dend_13, dend_10, dend_3, dend_31, dend_30, dend_18, dend_17, dend_15, dend_14, dend_9, dend_4, dend_20, dend_19, dend_8, dend_5, dend_24, dend_21, dend_7, dend_6, dend_25, dend_23, dend_22, dend_27, dend_26]}
    ModelViewParmSubset_5 = new SectionList()
    dend_33 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_3 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_33 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_35 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_32 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_31 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_6 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_11 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_2 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_3 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_12 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_9 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_28 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_13 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_4 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_10 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_16 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_29 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_18 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_20 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_19 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_21 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_23 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_22 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_30 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_24 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_5 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_8 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_15 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_17 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_37 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_14 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_25 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_27 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_7 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_34 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_36 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_26 OneSecGrp_SectionRef_41.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_11, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_16, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_24, dend_24, dend_24, dend_24, dend_21, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_25, dend_25, dend_25, dend_25, dend_23, dend_22, dend_27, dend_26, dend_26, dend_26]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_33 nseg = 3
    dend_1 nseg = 3
    dend_35 nseg = 3
    dend_32 nseg = 5
    dend_31 nseg = 3
    dend_6 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L1_SLAC_0a908934ff_0_0


