// Cell: Cell_485611914
/*
{
  "id" : "Cell_485611914",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "382.159, 331.531, 54.32, 12.2282", "388.274, 331.531, 54.32, 12.2282", "394.388, 331.531, 54.32, 12.2282" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "388.273, 331.531, 54.32, 1.0", "394.115, 345.347, 54.32, 1.0", "399.956, 359.163, 54.32, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000408864175334
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "393.363, 329.997, 52.3527, 0.3558", "394.285, 330.613, 51.3223, 0.4764", "395.174, 331.022, 50.794, 0.4008", "396.273, 330.815, 50.2396, 0.3394", "397.383, 331.064, 49.7328, 0.3016" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000408864175334
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "386.952, 336.79, 58.2492, 0.2892", "386.686, 337.854, 58.7107, 0.3014", "386.418, 338.918, 58.9669, 0.325" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000408864175334
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "383.357, 331.75, 54.5821, 0.295", "382.224, 331.897, 54.682, 0.3136", "381.302, 332.57, 54.6972, 0.3416", "380.523, 333.395, 54.5986, 0.425", "379.548, 333.908, 54.353, 0.4264", "378.614, 334.496, 54.0047, 0.4866" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000408864175334
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "385.185, 335.96, 50.9662, 0.2784", "384.799, 336.975, 50.0368, 0.2816", "385.137, 338.049, 49.6782, 0.2874", "385.527, 339.122, 49.3055, 0.2994", "385.848, 340.1, 48.7698, 0.3154", "385.499, 341.256, 48.2222, 0.3384", "385.766, 342.351, 47.7856, 0.3086", "385.901, 343.485, 47.3766, 0.2902", "385.717, 344.55, 46.8583, 0.3046", "385.29, 345.395, 46.184, 0.325", "384.566, 345.804, 45.3639, 0.3934", "384.471, 346.184, 44.5934, 0.3718" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000408864175334
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "390.083, 326.16, 54.8335, 0.3814", "389.922, 325.116, 55.8888, 0.4588", "390.519, 324.264, 56.3153, 0.6832", "391.438, 323.926, 56.9134, 0.706", "392.378, 323.439, 57.5481, 0.5986", "393.315, 322.828, 58.0692, 0.4404", "393.915, 321.872, 58.4436, 0.405", "394.181, 320.762, 58.6852, 0.4616", "394.354, 319.631, 58.826, 0.6586", "394.535, 318.803, 58.8958, 0.8048" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000408864175334
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "399.956, 359.163, 54.32, 1.0", "405.797, 372.979, 54.32, 1.0", "411.639, 386.795, 54.32, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "397.383, 331.064, 49.7328, 0.3016", "397.986, 330.517, 49.2632, 0.3194", "398.283, 329.605, 48.7393, 0.3834", "397.868, 328.627, 48.2717, 0.352", "397.638, 327.622, 48.0936, 0.3346", "397.922, 326.572, 48.0754, 0.3338", "398.056, 325.506, 47.9329, 0.4094", "398.292, 324.411, 47.7366, 0.4024", "398.877, 323.428, 47.572, 0.4178", "399.596, 322.539, 47.3964, 0.5382", "400.346, 321.713, 47.1352, 0.5432", "400.66, 320.622, 46.8745, 0.469", "400.941, 319.516, 46.6875, 0.5074", "401.484, 318.509, 46.5542, 0.4112", "402.01, 317.493, 46.4537, 0.3582", "402.49, 316.456, 46.3786, 0.3378", "402.768, 315.354, 46.3218, 0.3808", "402.552, 314.23, 46.2627, 0.5246", "402.29, 313.122, 46.1748, 0.4798", "402.315, 311.992, 46.02, 0.537", "402.449, 310.866, 45.8377, 0.4188", "402.456, 309.733, 45.7232, 0.3738", "402.461, 308.601, 45.5944, 0.36", "402.685, 307.555, 45.3552, 0.4542", "403.385, 306.658, 45.1052, 0.505", "403.951, 305.69, 44.8146, 0.5136", "404.247, 304.606, 44.5049, 0.487", "404.348, 303.467, 44.233, 0.415", "404.566, 302.353, 44.0003, 0.3928", "405.081, 301.347, 43.7732, 0.4976", "405.795, 300.491, 43.5005, 0.4408", "406.697, 299.797, 43.2457, 0.4094", "407.665, 299.19, 43.0245, 0.4516", "408.604, 298.542, 42.812, 0.5", "409.426, 297.766, 42.5715, 0.5042", "410.092, 296.861, 42.2999, 0.4704", "410.633, 295.859, 42.0417, 0.3818", "411.17, 294.865, 41.7917, 0.3428", "411.936, 294.049, 41.5195, 0.3486", "412.829, 293.347, 41.2765, 0.4378", "413.674, 292.585, 41.1029, 0.4512", "414.243, 291.623, 40.9903, 0.5272", "414.536, 290.518, 40.922, 0.6482", "414.923, 289.442, 40.887, 0.5118", "415.371, 288.39, 40.8755, 0.4084", "415.706, 287.302, 40.8722, 0.4068", "415.974, 286.194, 40.8694, 0.3966", "416.457, 285.164, 40.8649, 0.4118", "417.053, 284.189, 40.8587, 0.504", "417.578, 283.173, 40.8503, 0.593", "418.008, 282.115, 40.84, 0.6988", "418.315, 281.014, 40.8248, 0.723", "418.478, 279.887, 40.7938, 0.6876", "418.611, 278.756, 40.7568, 0.5548", "418.844, 277.636, 40.7417, 0.4064", "419.103, 276.524, 40.7456, 0.3412", "419.523, 275.47, 40.7739, 0.3468", "420.03, 274.448, 40.8061, 0.4288", "420.47, 273.427, 40.7887, 0.462", "420.773, 272.407, 40.7476, 0.414", "420.818, 271.28, 40.8254, 0.3984", "421.085, 270.215, 41.0113, 0.4718", "421.657, 269.253, 41.2824, 0.5682", "422.367, 268.373, 41.5705, 0.4824", "423.172, 267.562, 41.8314, 0.4638", "423.77, 266.649, 42.1098, 0.4328", "423.954, 265.566, 42.394, 0.3594", "423.961, 264.424, 42.6101, 0.3", "423.961, 263.28, 42.7599, 0.2748", "424.104, 262.155, 42.8638, 0.2748", "424.685, 261.23, 42.9335, 0.2752", "425.344, 260.33, 42.9766, 0.2756", "425.926, 259.354, 43.0108, 0.2766", "426.627, 258.45, 43.0534, 0.2782", "427.371, 257.582, 43.1077, 0.2812", "428.133, 256.731, 43.1872, 0.287", "428.867, 255.873, 43.3266, 0.2976", "429.51, 254.947, 43.5072, 0.318", "430.023, 253.93, 43.6716, 0.3508", "430.548, 252.915, 43.7965, 0.4372", "431.184, 251.967, 43.8774, 0.4722", "431.945, 251.117, 43.9132, 0.4582", "432.835, 250.404, 43.9068, 0.3594", "433.629, 249.601, 43.8687, 0.3", "433.975, 248.553, 43.8094, 0.2746", "434.029, 247.412, 43.7338, 0.2746", "434.35, 246.36, 43.594, 0.2746", "434.904, 245.387, 43.3773, 0.2746", "435.512, 244.429, 43.1595, 0.2746", "436.14, 243.472, 42.9778, 0.2746", "436.747, 242.504, 42.8288, 0.2748", "437.342, 241.526, 42.7084, 0.2748", "437.815, 240.507, 42.5645, 0.275", "438.217, 239.46, 42.3847, 0.2756", "438.635, 238.402, 42.2324, 0.2764", "439.061, 237.34, 42.1392, 0.278", "439.71, 236.42, 42.1109, 0.2808", "440.491, 235.585, 42.149, 0.2862", "441.277, 234.756, 42.2562, 0.2958", "442.082, 233.954, 42.4351, 0.3148", "442.902, 233.178, 42.6712, 0.3452", "443.699, 232.389, 42.9461, 0.4256", "444.465, 231.564, 43.2284, 0.4572", "445.087, 230.622, 43.4252, 0.3994", "445.591, 229.598, 43.5238, 0.4", "446.032, 228.545, 43.563, 0.3362", "446.433, 227.474, 43.54, 0.3042", "446.806, 226.394, 43.4386, 0.2822", "447.155, 225.311, 43.2575, 0.289", "447.473, 224.231, 42.9929, 0.3008", "447.77, 223.146, 42.6628, 0.3252", "448.043, 222.048, 42.3021, 0.358", "448.359, 220.957, 41.9401, 0.4802", "448.84, 219.926, 41.6097, 0.4078", "449.411, 218.938, 41.3036, 0.3536", "450.047, 218.013, 40.9674, 0.3216", "450.618, 217.058, 40.5916, 0.3874", "451.036, 216.018, 40.201, 0.3594", "451.4, 214.954, 39.8166, 0.3494", "451.763, 213.889, 39.4587, 0.3554", "452.073, 212.81, 39.1532, 0.4756", "452.314, 211.714, 38.9225, 0.3996", "452.49, 210.591, 38.8402, 0.337", "452.589, 209.465, 38.9547, 0.2966", "452.5, 208.374, 39.2736, 0.3136", "452.374, 207.437, 39.8387, 0.356", "452.309, 206.427, 40.5174, 0.3814", "451.432, 206.1, 41.7743, 0.6864" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "397.383, 331.064, 49.7328, 0.3016", "397.762, 331.162, 49.0146, 0.6864", "398.443, 331.88, 48.1852, 0.4888" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "386.418, 338.918, 58.9669, 0.325", "386.418, 340.169, 59.078, 0.4574", "386.418, 341.297, 59.0862, 0.5408", "386.418, 342.439, 59.0663, 0.4358", "386.418, 343.583, 59.0486, 0.3568", "386.375, 344.727, 59.0355, 0.335", "386.109, 345.833, 59.0822, 0.3758", "385.377, 346.634, 59.2785, 0.5146", "384.691, 347.548, 59.4392, 0.4658", "384.001, 348.461, 59.5476, 0.4876", "383.206, 349.283, 59.5991, 0.4418", "382.42, 350.116, 59.5969, 0.5458", "381.85, 351.107, 59.5451, 0.5078", "381.28, 352.099, 59.4563, 0.4138" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "386.418, 338.918, 58.9669, 0.325", "386.514, 338.535, 60.3117, 0.2288", "386.762, 337.537, 61.4676, 0.2854", "387.624, 337.342, 61.9615, 0.2944", "388.711, 337.64, 62.4576, 0.3124", "389.793, 337.966, 62.942, 0.3404", "390.733, 338.6, 63.3623, 0.417", "391.621, 339.322, 63.723, 0.4402", "392.584, 339.935, 64.0506, 0.3732", "393.506, 340.579, 64.3308, 0.3258", "394.226, 341.135, 64.9048, 0.3222", "394.979, 341.597, 65.7336, 0.3646", "395.536, 342.404, 66.7002, 0.4326", "396.117, 343.29, 67.6886, 0.6104", "396.952, 344.056, 68.5586, 0.6898", "398.034, 344.418, 69.2709, 0.6794", "399.108, 344.676, 69.9191, 0.5096", "399.966, 345.192, 70.6398, 0.4672", "400.771, 345.917, 71.3605, 0.439", "401.431, 346.847, 71.9981, 0.371", "402.021, 347.781, 72.6418, 0.3216", "402.609, 348.644, 73.3653, 0.3144", "403.071, 349.675, 74.0555, 0.35", "403.609, 350.637, 74.7376, 0.4062", "404.395, 351.393, 75.4835, 0.5592", "405.23, 352.102, 76.2824, 0.6056", "406.078, 352.75, 77.1333, 0.4712", "406.983, 353.084, 78.0584, 0.3754", "407.931, 352.794, 79.0266, 0.3688", "408.842, 352.23, 79.9708, 0.442", "409.812, 351.722, 80.8436, 0.62", "410.785, 351.126, 81.5805, 0.746", "411.682, 350.499, 82.2704, 0.5968", "412.465, 349.823, 83.0208, 0.5754", "413.329, 349.184, 83.7866, 0.4424", "414.316, 348.689, 84.5379, 0.4196", "415.398, 348.456, 85.29, 0.4346", "416.52, 348.442, 86.0196, 0.6424", "417.656, 348.414, 86.6846, 0.6122", "418.608, 348.205, 87.4311, 0.5134", "419.403, 348.088, 88.4005, 0.5372", "420.406, 348.139, 89.4127, 0.492", "421.53, 348.289, 90.351, 0.3848", "422.546, 348.714, 91.254, 0.3", "423.329, 349.397, 92.206, 0.2746", "424.121, 349.965, 93.221, 0.2746", "424.415, 350.551, 94.3625, 0.2744", "424.672, 351.429, 95.5198, 0.2744", "425.491, 352.116, 96.434, 0.2742", "426.199, 352.972, 97.2126, 0.274", "426.814, 353.882, 97.9378, 0.2736", "427.444, 354.815, 98.5715, 0.2728", "428.167, 355.647, 99.197, 0.2712", "428.989, 356.279, 99.8956, 0.2684", "429.915, 356.744, 100.648, 0.2626", "431.042, 356.825, 101.261, 0.2542", "432.091, 357.222, 101.78, 0.2288", "432.66, 358.154, 102.742, 0.2288" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "378.614, 334.496, 54.0047, 0.4866", "378.37, 335.379, 52.4692, 0.4576", "377.958, 336.393, 51.4248, 0.5002", "377.489, 337.398, 50.9928, 0.463", "377.057, 338.402, 50.4756, 0.3682", "376.484, 339.305, 49.9005, 0.3164", "375.635, 339.947, 49.2948, 0.305", "374.928, 340.675, 48.8634, 0.3316", "374.769, 341.724, 48.6402, 0.377", "374.609, 342.764, 48.3176, 0.4806", "374.19, 343.795, 47.9405, 0.5784", "373.678, 344.815, 47.5936, 0.5306", "373.156, 345.684, 47.068, 0.4102", "372.591, 346.434, 46.3509, 0.3418", "372.595, 347.272, 45.4924, 0.3786", "372.953, 348.325, 44.7826, 0.339", "372.997, 349.439, 44.3806, 0.3304", "372.258, 350.293, 44.24, 0.2288" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "378.614, 334.496, 54.0047, 0.4866", "377.505, 334.529, 53.6903, 0.5472", "376.376, 334.359, 53.4587, 0.4488" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "384.471, 346.184, 44.5934, 0.3718", "385.331, 345.362, 43.12, 0.3664", "386.059, 344.49, 43.0326, 0.46", "386.213, 343.364, 43.0016, 0.5452", "386.036, 342.237, 42.9607, 0.445", "386.1, 341.105, 42.8658, 0.369", "386.065, 339.967, 42.7619, 0.3814", "385.871, 338.853, 42.6812, 0.3474", "385.871, 337.709, 42.6227, 0.3304", "385.871, 336.565, 42.5844, 0.305", "385.871, 335.421, 42.56, 0.4576" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "384.471, 346.184, 44.5934, 0.3718", "383.747, 347.232, 44.03, 0.4176", "382.987, 348.08, 43.6705, 0.4412", "382.035, 348.713, 43.4991, 0.3748", "381.029, 349.251, 43.4893, 0.3298", "379.98, 349.63, 43.6234, 0.3248", "378.854, 349.593, 43.8281, 0.393", "377.721, 349.627, 44.0003, 0.371", "376.651, 350.013, 44.1269, 0.3646", "375.699, 350.633, 44.1963, 0.4148", "374.826, 351.368, 44.2602, 0.4362", "373.928, 352.065, 44.366, 0.3656", "373.029, 352.759, 44.5102, 0.3118", "372.126, 353.428, 44.7118, 0.2964", "371.107, 353.915, 44.919, 0.316", "370.007, 354.225, 45.0638, 0.347", "368.924, 354.573, 45.138, 0.4292", "367.893, 355.042, 45.2046, 0.4638", "366.979, 355.727, 45.2497, 0.4114", "366.118, 356.478, 45.2668, 0.4224", "365.348, 357.322, 45.2682, 0.377", "364.648, 358.228, 45.2584, 0.3832", "363.973, 359.151, 45.2334, 0.4128", "363.333, 360.098, 45.1917, 0.6084", "362.719, 361.06, 45.1318, 0.5172", "362.046, 361.971, 45.0192, 0.4912", "361.335, 362.838, 44.8501, 0.4364", "360.565, 363.662, 44.681, 0.3662", "359.693, 364.388, 44.6054, 0.3124", "359.023, 365.223, 44.6569, 0.2988", "358.625, 366.277, 44.758, 0.3142", "357.96, 367.198, 44.8496, 0.3734", "357.168, 368.024, 44.9128, 0.3338", "356.413, 368.882, 44.9308, 0.3", "355.687, 369.766, 44.8938, 0.2746", "354.885, 370.577, 44.8042, 0.2746", "354.005, 371.301, 44.6614, 0.2746", "353.193, 372.071, 44.4357, 0.2746", "352.51, 372.96, 44.1616, 0.2746", "351.674, 373.596, 43.871, 0.2746", "350.635, 373.999, 43.5537, 0.2746", "349.697, 374.634, 43.2704, 0.2746", "348.892, 375.44, 43.0483, 0.2746", "348.078, 376.239, 42.8859, 0.2746", "347.156, 376.911, 42.7624, 0.2746", "346.125, 377.388, 42.6583, 0.2746", "345.042, 377.745, 42.5463, 0.2746", "344.026, 378.191, 42.364, 0.2746", "343.492, 379.102, 42.1733, 0.2746", "342.634, 379.708, 42.0274, 0.2746", "341.502, 379.842, 41.9278, 0.2746", "340.372, 380.018, 41.8718, 0.2746", "339.336, 380.49, 41.8558, 0.2746", "338.297, 380.97, 41.8746, 0.2746", "337.605, 381.87, 41.9152, 0.2746", "337.114, 382.901, 41.9717, 0.2744", "336.444, 383.827, 42.0456, 0.2744", "335.758, 384.742, 42.1386, 0.2742", "334.865, 385.419, 42.3256, 0.274", "333.976, 386.113, 42.576, 0.2736", "333.215, 386.965, 42.8095, 0.2728", "332.539, 387.886, 43.036, 0.2712", "332.198, 388.957, 43.2956, 0.2684", "331.777, 390.007, 43.5526, 0.2626", "331.082, 390.914, 43.743, 0.2542", "330.465, 391.877, 43.8796, 0.2288", "330.103, 392.963, 44.0322, 0.2288" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "394.535, 318.803, 58.8958, 0.8048", "395.146, 318.587, 59.3866, 0.6864", "396.164, 318.244, 60.9249, 0.5416", "397.249, 318.127, 61.556, 0.5272", "398.299, 318.348, 62.3185, 0.5472", "399.207, 318.654, 63.2394, 0.5862", "399.91, 319.35, 64.2418, 0.65", "400.742, 319.944, 65.2014, 0.581", "401.768, 319.844, 66.1097, 0.6742", "402.772, 319.465, 66.936, 0.69", "403.794, 319.075, 67.6304, 0.7952", "404.816, 318.572, 68.1307, 0.8502", "405.73, 317.928, 68.4676, 0.9464", "406.434, 317.024, 68.6675, 0.922", "407.195, 316.183, 68.7638, 0.9472", "408.103, 315.487, 68.7926, 0.8806", "409.074, 314.905, 68.7831, 0.8494", "410.153, 314.523, 68.7532, 0.8006", "411.237, 314.161, 68.7072, 0.8964", "412.326, 313.808, 68.6454, 1.0834", "413.41, 313.45, 68.5549, 1.1566", "414.476, 313.069, 68.4088, 1.0186", "415.522, 312.643, 68.2298, 0.9464", "416.437, 312.024, 68.1243, 0.8378", "417.134, 311.232, 68.0417, 0.7412", "417.859, 310.48, 67.8821, 0.7414", "418.734, 309.817, 67.7715, 0.7858", "419.77, 309.386, 67.8023, 0.6542", "420.848, 309.181, 68.0985, 0.5334", "421.747, 309.272, 68.7515, 0.3992", "422.544, 309.502, 69.746, 0.3994", "423.471, 309.602, 70.9363, 0.3348", "424.557, 309.606, 72.0966, 0.3016", "425.654, 309.447, 73.1886, 0.2776", "426.646, 309.219, 74.3008, 0.2802", "427.585, 309.153, 75.4594, 0.285", "428.54, 309.173, 76.6464, 0.2938", "429.479, 309.304, 77.8599, 0.3112", "430.404, 309.736, 79.0269, 0.3382", "431.467, 309.716, 80.0195, 0.413", "432.503, 309.427, 80.922, 0.4328", "433.536, 309.191, 81.7788, 0.3594", "434.605, 309.149, 82.5972, 0.3", "434.194, 309.01, 83.155, 0.2746", "434.492, 308.658, 83.7169, 0.2746", "435.453, 308.211, 84.4052, 0.2746", "436.025, 307.452, 85.2337, 0.2746", "436.362, 306.552, 86.1829, 0.2746", "436.669, 305.64, 87.2161, 0.2746", "437.259, 304.765, 88.2199, 0.2746", "438.152, 304.069, 89.0182, 0.2746", "439.131, 303.491, 89.6647, 0.2744", "440.156, 303.073, 90.258, 0.2744", "441.172, 302.626, 90.8258, 0.2742", "441.931, 301.786, 91.3133, 0.274", "442.781, 301.025, 91.7935, 0.2736", "443.833, 300.673, 92.3569, 0.2728", "444.897, 300.342, 92.9992, 0.2712", "445.848, 300.035, 93.7874, 0.2684", "446.694, 299.75, 94.7223, 0.2626", "447.647, 299.4, 95.6687, 0.2542", "448.693, 298.975, 96.4566, 0.2288", "449.738, 298.552, 97.7004, 0.2288" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "394.535, 318.803, 58.8958, 0.8048", "394.959, 317.744, 58.9425, 0.7684", "395.183, 316.623, 59.0005, 0.5898", "395.379, 315.497, 59.0814, 0.5708", "395.372, 314.358, 59.1895, 0.622", "395.186, 313.234, 59.3342, 0.7538", "395.245, 312.116, 59.563, 0.8204", "395.48, 311.072, 59.9189, 0.8908", "395.561, 309.963, 60.3042, 0.822", "395.428, 308.836, 60.6046, 0.7454", "394.988, 307.8, 60.7858, 0.5864", "394.364, 306.856, 60.9025, 0.6014", "393.814, 305.88, 61.0873, 0.7282", "393.645, 304.787, 61.3561, 0.7114", "393.894, 303.682, 61.6885, 0.5304", "394.207, 302.796, 62.0651, 0.4648" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "398.443, 331.88, 48.1852, 0.4888", "399.154, 332.249, 47.8335, 0.4028", "400.178, 332.007, 47.6588, 0.4456", "400.911, 331.137, 47.5222, 0.458", "401.514, 330.254, 47.2419, 0.577", "402.269, 329.486, 46.8776, 0.5606", "403.228, 328.9, 46.536, 0.537", "404.365, 328.787, 46.251, 0.46", "405.508, 328.776, 46.0345, 0.4792", "406.622, 328.724, 45.9542, 0.643", "407.706, 328.363, 45.8884, 0.7822", "408.617, 327.672, 45.7954, 0.6956", "409.461, 326.904, 45.6313, 0.6056", "410.387, 326.267, 45.3401, 0.5536", "411.397, 325.887, 44.8787, 0.5872", "412.43, 325.542, 44.3094, 0.4754", "413.461, 325.201, 43.6881, 0.4262", "414.51, 325.164, 43.024, 0.4824", "415.575, 324.887, 42.53, 0.558", "416.217, 323.951, 42.1005, 0.6084", "417.141, 323.291, 41.72, 0.6798", "418.226, 322.964, 41.3633, 0.6916", "419.301, 322.8, 40.9478, 0.6112", "420.353, 322.491, 40.5031, 0.5006", "421.18, 321.705, 40.119, 0.5678", "422.152, 321.123, 39.8213, 0.5134", "423.293, 321.099, 39.5906, 0.5954", "424.406, 321.285, 39.3856, 0.5474", "425.463, 320.983, 39.1412, 0.5126", "426.408, 320.343, 38.948, 0.414", "427.234, 319.552, 38.8018, 0.3972", "428.016, 318.718, 38.6952, 0.4748", "428.729, 317.824, 38.6226, 0.5498", "429.523, 317.014, 38.5781, 0.5638", "430.583, 316.632, 38.5501, 0.7398", "431.703, 316.752, 38.5165, 0.796", "432.758, 316.31, 38.4594, 0.61", "433.812, 315.87, 38.381, 0.5288", "434.913, 315.565, 38.2945, 0.4708", "436.031, 315.322, 38.2052, 0.6016", "437.161, 315.163, 38.0912, 0.602", "438.289, 315.125, 37.9285, 0.6342", "439.415, 315.104, 37.7395, 0.5404", "440.547, 315.102, 37.557, 0.4266", "441.68, 315.102, 37.4256, 0.3808", "442.809, 315.259, 37.4147, 0.4096", "443.893, 315.562, 37.5679, 0.596", "444.987, 315.878, 37.807, 0.5254", "446.096, 316.011, 38.148, 0.356", "446.853, 316.476, 39.5161, 0.2288" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "398.443, 331.88, 48.1852, 0.4888", "398.698, 332.29, 47.56, 0.4576", "399.303, 333.259, 47.3298, 0.3634", "399.915, 334.222, 47.2167, 0.3078", "400.479, 335.167, 47.08, 0.289", "400.428, 336.225, 47.0529, 0.301", "400.295, 337.296, 46.8992, 0.3248", "400.871, 338.192, 46.6035, 0.362", "401.626, 338.973, 46.2342, 0.4652", "402.06, 340.023, 45.8335, 0.4894", "402.397, 341.103, 45.3998, 0.6596", "402.753, 342.173, 44.9599, 0.5958", "403.432, 342.921, 44.5024, 0.4882", "404.312, 343.371, 43.9362, 0.465", "404.903, 344.275, 43.4115, 0.4826", "405.073, 345.384, 42.9937, 0.4486", "404.962, 346.488, 42.5961, 0.4804", "405.049, 347.572, 42.2072, 0.5362", "405.333, 348.65, 41.9569, 0.4272", "405.915, 349.561, 41.734, 0.3412", "406.59, 350.471, 41.4562, 0.305", "406.841, 351.539, 41.2126, 0.3248", "406.671, 352.517, 40.8022, 0.3982", "407.115, 353.435, 40.2741, 0.356", "407.479, 354.033, 38.3872, 0.4576" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "381.28, 352.099, 59.4563, 0.4138", "380.809, 353.209, 60.2493, 0.3952", "380.266, 354.202, 60.6225, 0.3684", "379.57, 355.101, 60.7835, 0.392", "378.864, 355.998, 60.9535, 0.5376", "378.217, 356.941, 61.1139, 0.542", "377.502, 357.82, 61.2945, 0.467", "376.686, 358.587, 61.5294, 0.5034", "375.969, 359.449, 61.7602, 0.4038", "375.354, 360.414, 61.9461, 0.345", "374.74, 361.379, 62.0917, 0.3116", "374.113, 362.336, 62.207, 0.3392", "373.363, 363.189, 62.3092, 0.4146", "372.453, 363.856, 62.4453, 0.436", "371.743, 364.7, 62.5383, 0.3652", "371.379, 365.763, 62.6497, 0.311", "371.309, 366.882, 62.8491, 0.2948", "370.928, 367.923, 63.0207, 0.3128", "369.946, 368.297, 63.2948, 0.3414", "368.927, 368.762, 63.6404, 0.4186", "367.946, 369.324, 64.0304, 0.4434", "367.035, 370.007, 64.4238, 0.3788", "366.213, 370.801, 64.7881, 0.337", "365.206, 371.333, 65.1574, 0.3388", "364.178, 371.6, 65.6614, 0.414", "363.62, 372.505, 66.264, 0.4348", "363.047, 373.487, 66.848, 0.363", "362.346, 374.343, 67.4909, 0.3068", "361.734, 375.195, 68.2368, 0.287", "360.878, 375.926, 68.9508, 0.2988", "359.907, 376.465, 69.6268, 0.3142", "359.423, 377.378, 70.3783, 0.3734", "359.017, 378.344, 71.1665, 0.3338", "358.699, 379.385, 71.9169, 0.3", "358.27, 380.423, 72.5724, 0.2746", "357.698, 381.399, 73.136, 0.2746", "356.894, 382.213, 73.584, 0.2746", "356.022, 382.953, 73.9511, 0.2746", "355.165, 383.677, 74.2851, 0.2746", "354.907, 384.698, 74.6822, 0.2746", "354.603, 385.438, 75.3612, 0.2746", "353.842, 386.121, 76.1519, 0.2746", "352.846, 386.658, 76.8662, 0.2746", "351.922, 387.284, 77.5606, 0.2744", "351.321, 388.028, 78.3507, 0.2744", "350.753, 388.781, 79.184, 0.2742", "350.764, 389.88, 79.8403, 0.274", "350.872, 391.019, 80.3065, 0.2736", "350.566, 392.12, 80.621, 0.2728", "350.253, 393.22, 80.8007, 0.2712", "349.939, 394.32, 80.8732, 0.2684", "349.625, 395.42, 80.8875, 0.2626", "349.068, 396.418, 80.8898, 0.2542", "348.333, 397.295, 80.8917, 0.2288", "347.599, 398.173, 80.8976, 0.2288" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "381.28, 352.099, 59.4563, 0.4138", "381.713, 352.589, 59.1856, 0.3548", "382.135, 353.581, 58.9347, 0.3716", "382.161, 354.699, 58.7712, 0.4768", "381.953, 355.823, 58.644, 0.5418", "381.721, 356.944, 58.543, 0.6072", "381.51, 358.067, 58.4623, 0.5372", "381.208, 359.166, 58.38, 0.422", "380.779, 360.216, 58.2439, 0.3648", "380.206, 361.188, 58.0563, 0.4152", "379.513, 362.081, 57.8421, 0.4368", "378.872, 363.016, 57.6657, 0.3666", "378.324, 364.018, 57.5624, 0.3138", "377.841, 365.054, 57.5061, 0.2996", "377.359, 366.091, 57.4739, 0.323", "376.663, 366.978, 57.4521, 0.354", "375.866, 367.797, 57.4263, 0.4728", "375.271, 368.757, 57.3731, 0.3942", "374.769, 369.782, 57.2891, 0.3274", "374.103, 370.689, 57.1743, 0.2782", "373.329, 371.521, 57.0522, 0.2814", "372.514, 372.319, 56.9758, 0.287", "371.69, 373.109, 56.9786, 0.2988", "370.898, 373.912, 57.0864, 0.3142", "370.153, 374.763, 57.2583, 0.3734", "369.45, 375.663, 57.433, 0.3338", "368.704, 376.529, 57.5887, 0.3", "367.915, 377.358, 57.72, 0.2746", "367.377, 378.342, 57.8284, 0.2746", "366.812, 379.31, 57.9709, 0.2746", "366.16, 380.223, 58.1689, 0.2746", "365.371, 381.04, 58.3596, 0.2746", "364.509, 381.792, 58.5099, 0.2746", "363.872, 382.73, 58.6183, 0.2746", "363.372, 383.758, 58.6886, 0.2746", "362.793, 384.743, 58.7252, 0.2746", "362.146, 385.686, 58.7423, 0.2746", "361.471, 386.61, 58.7563, 0.2746", "360.788, 387.528, 58.7751, 0.2746", "360.193, 388.504, 58.8014, 0.2746", "359.67, 389.521, 58.8386, 0.2746", "359.225, 390.574, 58.8896, 0.2746", "358.845, 391.653, 58.9557, 0.2746", "358.333, 392.672, 59.0554, 0.2746", "357.56, 393.49, 59.2183, 0.2746", "356.865, 394.387, 59.4202, 0.2746", "356.306, 395.38, 59.6319, 0.2746", "355.706, 396.354, 59.831, 0.2746", "355.055, 397.294, 60.0026, 0.2746", "354.375, 398.203, 60.1916, 0.2746", "353.681, 399.078, 60.4307, 0.2746", "353.191, 400.101, 60.643, 0.2746", "352.786, 401.171, 60.8062, 0.2746", "352.191, 402.145, 60.9283, 0.2746", "351.461, 403.023, 61.0176, 0.2746", "350.717, 403.894, 61.0828, 0.2746", "349.976, 404.764, 61.1383, 0.2746", "349.203, 405.608, 61.2035, 0.2746", "348.409, 406.431, 61.2833, 0.2744", "347.688, 407.303, 61.4331, 0.2744", "347.019, 408.195, 61.6678, 0.2742", "346.221, 409.012, 61.887, 0.274", "345.402, 409.808, 62.0746, 0.2736", "344.603, 410.626, 62.2322, 0.2728", "343.806, 411.449, 62.3641, 0.2712", "343.017, 412.241, 62.5503, 0.2684", "342.197, 413.008, 62.7712, 0.2626", "341.278, 413.686, 62.9482, 0.2542", "340.673, 414.65, 63.0795, 0.2288", "340.589, 415.79, 63.2257, 0.2288" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "376.376, 334.359, 53.4587, 0.4488", "375.515, 334.695, 54.3077, 0.2288", "374.62, 335.398, 54.7403, 0.4352", "373.585, 335.783, 54.9752, 0.445", "372.479, 336.073, 55.2034, 0.522", "371.337, 336.114, 55.4016, 0.6092", "370.206, 336.158, 55.5346, 0.5824", "369.105, 336.432, 55.6399, 0.5326", "368.089, 336.829, 55.9087, 0.4398", "367.286, 337.591, 56.2901, 0.5004" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "376.376, 334.359, 53.4587, 0.4488", "375.59, 334.636, 53.2263, 0.376", "374.578, 335.1, 52.9656, 0.3938", "373.441, 335.189, 52.7948, 0.3728", "372.324, 335.192, 52.586, 0.3666", "371.182, 335.192, 52.4068, 0.4246", "370.077, 335.192, 52.383, 0.4244", "368.941, 335.192, 52.4261, 0.4888", "367.837, 335.191, 52.3544, 0.522", "366.697, 335.179, 52.255, 0.5446", "365.555, 335.111, 52.1735, 0.548", "364.484, 334.713, 52.1063, 0.5114", "363.603, 333.991, 52.0778, 0.653", "363.056, 333.157, 51.8708, 0.584", "362.232, 332.367, 51.7465, 0.4652", "361.275, 331.741, 51.718, 0.4274" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "394.207, 302.796, 62.0651, 0.4648", "394.654, 302.064, 59.9875, 0.2288", "394.909, 301.089, 59.5829, 0.3256", "394.838, 299.962, 59.4695, 0.3646", "394.918, 298.845, 59.4135, 0.4638", "395.105, 297.731, 59.3149, 0.5166", "395.325, 296.624, 59.1601, 0.5658", "395.797, 295.604, 59.0052, 0.4348", "396.618, 294.843, 58.8781, 0.3564", "397.605, 294.268, 58.758, 0.3268", "398.427, 293.51, 58.6726, 0.397", "399.122, 292.612, 58.5676, 0.3784", "399.795, 291.69, 58.4198, 0.3782", "400.438, 290.745, 58.2271, 0.4408", "400.959, 289.752, 57.9398, 0.4792", "401.45, 288.746, 57.5646, 0.4708", "401.978, 287.767, 57.1127, 0.3838", "402.407, 286.757, 56.5995, 0.34", "402.785, 285.706, 56.0776, 0.3744", "402.996, 284.599, 55.6478, 0.3356", "403.139, 283.471, 55.3266, 0.3032", "403.316, 282.448, 54.9156, 0.2804", "403.405, 281.429, 54.3788, 0.2854", "403.695, 280.36, 53.8975, 0.2944", "404.118, 279.332, 53.4148, 0.3126", "404.44, 278.285, 52.9007, 0.3394", "405.004, 277.324, 52.4423, 0.4226", "405.745, 276.466, 52.0635, 0.4144", "406.527, 275.646, 51.816, 0.5002", "407.234, 274.752, 51.6334, 0.398", "407.893, 273.822, 51.4478, 0.3342", "408.53, 272.879, 51.2316, 0.2908", "409.036, 271.872, 50.9569, 0.3058", "409.25, 270.788, 50.6019, 0.3272", "409.157, 269.672, 50.2082, 0.3974", "409.022, 268.539, 49.838, 0.3792", "409.193, 267.428, 49.4763, 0.3798", "409.605, 266.38, 49.1067, 0.4424", "410.022, 265.319, 48.795, 0.4896", "410.209, 264.202, 48.4949, 0.4538", "410.249, 263.105, 48.1317, 0.5274", "410.309, 262.016, 47.7182, 0.443", "410.599, 260.934, 47.3388, 0.443", "411.125, 259.924, 47.0565, 0.3696", "411.89, 259.081, 46.8756, 0.3612", "412.674, 258.253, 46.809, 0.4132", "413.502, 257.504, 46.8779, 0.4094", "414.414, 256.825, 46.9736, 0.4318", "415.321, 256.128, 47.0218, 0.5594", "416.158, 255.349, 46.9963, 0.6056", "416.926, 254.524, 46.8415, 0.4724", "417.439, 253.526, 46.5752, 0.3726", "417.658, 252.41, 46.2655, 0.3878", "417.975, 251.317, 45.9166, 0.3604", "418.325, 250.229, 45.5834, 0.3496", "418.509, 249.171, 45.131, 0.3636", "418.919, 248.171, 44.5976, 0.4546", "419.647, 247.309, 44.0821, 0.5352", "420.41, 246.502, 43.542, 0.4256", "421.12, 245.613, 43.0601, 0.338", "421.724, 244.678, 42.5771, 0.2988", "422.06, 243.601, 42.1453, 0.3144", "421.898, 242.499, 41.7306, 0.374", "422.376, 241.503, 41.3246, 0.335", "422.883, 240.489, 41.0164, 0.302", "423.039, 239.373, 40.7932, 0.2782", "423.197, 238.244, 40.6417, 0.2814", "424.043, 237.76, 40.5359, 0.287", "425.174, 237.59, 40.4561, 0.2988", "425.816, 236.79, 40.3822, 0.314", "426.336, 235.774, 40.2707, 0.3734", "427.029, 234.889, 40.0952, 0.3338", "427.786, 234.051, 39.879, 0.2998", "428.621, 233.279, 39.6673, 0.2742", "429.29, 232.362, 39.4775, 0.274", "429.764, 231.325, 39.3106, 0.2736", "430.089, 230.335, 39.3134, 0.2728", "431.001, 229.753, 39.2944, 0.2712", "432.002, 229.287, 39.1247, 0.2684", "432.676, 228.44, 38.8228, 0.2626", "433.073, 227.43, 38.4171, 0.2542", "433.547, 226.414, 37.9963, 0.2288", "434.491, 225.792, 37.2582, 0.2288" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "394.207, 302.796, 62.0651, 0.4648", "393.991, 301.717, 62.54, 0.4048", "393.517, 300.721, 63.0717, 0.4516", "393.004, 299.781, 63.6493, 0.4574", "392.598, 298.808, 64.2586, 0.4046", "392.165, 297.781, 64.8066, 0.3858", "391.747, 296.727, 65.2448, 0.425", "391.374, 295.659, 65.5127, 0.5952", "391.118, 294.567, 65.6037, 0.6664", "390.917, 293.484, 65.5575, 0.6116", "390.709, 292.441, 65.5124, 0.5026", "390.566, 291.411, 65.7048, 0.564", "390.56, 290.347, 66.0643, 0.5428", "390.553, 289.214, 66.4608, 0.474", "390.544, 288.522, 66.8354, 0.488" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "367.286, 337.591, 56.2901, 0.5004", "367.134, 337.777, 56.7266, 0.398", "366.427, 338.408, 57.3597, 0.3344", "365.359, 338.813, 57.92, 0.2914", "364.242, 338.913, 58.441, 0.3052" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "367.286, 337.591, 56.2901, 0.5004", "366.802, 336.684, 56.387, 0.5438", "366.053, 335.913, 57.0262, 0.5628", "365.53, 334.912, 57.318, 0.4612", "365.104, 333.863, 57.6089, 0.4776", "364.367, 333.084, 57.9877, 0.4298", "363.348, 332.812, 58.515, 0.4926", "362.319, 333.001, 59.1604, 0.56", "361.237, 333.247, 59.8248, 0.466", "360.408, 332.529, 60.4786, 0.4384", "359.645, 331.677, 61.0464, 0.3612", "358.836, 331.104, 61.7288, 0.3456", "357.822, 330.605, 62.3361, 0.3846", "356.702, 330.546, 62.8939, 0.3544", "355.702, 330.998, 63.5104, 0.3392", "354.913, 331.678, 64.2457, 0.3416", "354.165, 332.486, 65.0194, 0.4266", "353.28, 333.076, 65.8428, 0.4218", "352.232, 333.252, 66.7066, 0.5142", "351.125, 333.081, 67.5329, 0.4234", "350.125, 332.874, 68.418, 0.3836", "349.241, 332.659, 69.4025, 0.3718", "348.34, 332.183, 70.3847, 0.507", "347.334, 331.925, 71.2678, 0.452", "346.329, 332.378, 72.0185, 0.461", "345.368, 332.97, 72.6482, 0.3978", "344.32, 333.275, 73.232, 0.4386", "343.236, 333.258, 73.8066, 0.4332", "342.153, 332.983, 74.3422, 0.3602", "341.108, 332.555, 74.8451, 0.3014", "340.047, 332.199, 75.341, 0.2774", "338.945, 332.134, 75.8321, 0.2798", "337.829, 332.086, 76.298, 0.2842", "336.81, 331.634, 76.694, 0.2924", "335.739, 331.296, 77.0356, 0.3074", "334.645, 331.442, 77.4004, 0.3374", "333.523, 331.509, 77.7773, 0.3814", "332.438, 331.199, 78.1301, 0.5186", "331.368, 330.815, 78.5011, 0.5046", "330.26, 330.645, 78.9298, 0.409", "329.188, 330.355, 79.413, 0.3396", "328.165, 329.918, 79.9266, 0.3736", "327.273, 329.377, 80.5207, 0.3344", "326.454, 328.738, 81.1686, 0.3008", "325.49, 328.148, 81.6911, 0.276", "324.445, 327.732, 82.0142, 0.2774", "323.342, 327.534, 82.1834, 0.2798", "322.234, 327.778, 82.341, 0.2842", "321.255, 328.224, 82.6378, 0.2924", "320.163, 328.043, 82.9514, 0.3086", "319.802, 327.044, 83.4299, 0.3322", "318.941, 326.362, 84.0014, 0.4082", "317.93, 325.878, 84.5888, 0.3928", "316.966, 325.293, 85.1514, 0.4358", "316.04, 324.647, 85.6716, 0.3982", "315.019, 324.181, 86.1806, 0.4396", "313.962, 323.818, 86.672, 0.4348", "312.99, 323.262, 87.1508, 0.3632", "312.072, 322.618, 87.614, 0.3074", "311.108, 322.034, 88.0474, 0.2882", "310.247, 321.376, 88.4912, 0.2996", "309.449, 320.617, 88.7435, 0.3222", "308.85, 319.682, 88.9426, 0.3574", "308.29, 318.762, 89.2629, 0.4552", "307.565, 317.912, 89.6398, 0.4772", "306.979, 316.996, 90.0645, 0.6062", "306.685, 315.897, 90.4613, 0.6464", "306.384, 314.849, 90.9143, 0.5422", "305.717, 314.067, 91.4068, 0.53", "304.726, 313.546, 91.7843, 0.5446", "303.669, 313.191, 91.9976, 0.6198", "302.562, 312.982, 92.1757, 0.5256", "301.46, 312.758, 92.4081, 0.5698", "300.364, 312.476, 92.6464, 0.505", "299.272, 312.134, 92.8684, 0.4098", "298.161, 311.929, 93.1336, 0.3412", "297.03, 311.897, 93.4777, 0.3764", "295.906, 311.814, 93.8759, 0.3396", "294.819, 311.513, 94.3006, 0.3104", "293.771, 311.107, 94.778, 0.2938", "292.782, 310.775, 95.38, 0.3112", "291.76, 310.577, 96.0604, 0.3382", "290.654, 310.523, 96.7193, 0.413", "289.542, 310.395, 97.3221, 0.4328", "288.458, 310.061, 97.8376, 0.3594", "287.392, 309.651, 98.2576, 0.3", "286.334, 309.237, 98.6202, 0.2746", "285.295, 308.82, 98.987, 0.2746", "284.263, 308.397, 99.3726, 0.2746", "283.225, 307.956, 99.7441, 0.2746", "282.18, 307.507, 100.085, 0.2746", "281.116, 307.098, 100.366, 0.2746", "280.038, 306.714, 100.577, 0.2746", "278.96, 306.331, 100.735, 0.2746", "277.901, 305.915, 100.891, 0.2746", "276.854, 305.474, 101.076, 0.2746", "275.807, 305.034, 101.291, 0.2746", "274.799, 304.508, 101.508, 0.2746", "273.821, 303.915, 101.712, 0.2746", "272.829, 303.342, 101.905, 0.2746", "271.771, 302.934, 102.099, 0.2746", "270.65, 302.725, 102.28, 0.2746", "269.729, 302.589, 102.628, 0.2746", "268.766, 302.14, 103.039, 0.2744", "267.741, 301.633, 103.356, 0.2744", "266.665, 301.24, 103.59, 0.2742", "265.591, 300.849, 103.747, 0.274", "264.516, 300.458, 103.838, 0.2736", "263.436, 300.082, 103.868, 0.2728", "262.316, 299.844, 103.876, 0.2712", "261.197, 299.607, 103.882, 0.2684", "260.078, 299.369, 103.888, 0.2626", "258.962, 299.123, 103.893, 0.2542", "257.848, 298.855, 103.899, 0.2288", "256.737, 298.589, 103.91, 0.2288" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "361.275, 331.741, 51.718, 0.4274", "360.268, 332.14, 50.1931, 0.4622", "359.226, 332.354, 49.154, 0.36", "358.108, 332.321, 48.7376, 0.3336", "357.07, 331.88, 48.3224, 0.409", "356.134, 331.37, 47.8117, 0.4018", "355.092, 331.372, 47.2388, 0.4166", "354.03, 331.66, 46.6889, 0.5364", "352.948, 332.015, 46.2616, 0.5384", "351.882, 332.343, 46.0345, 0.4666", "350.747, 332.441, 45.8878, 0.4716", "349.634, 332.45, 45.7078, 0.496", "348.497, 332.469, 45.5342, 0.4672", "347.361, 332.6, 45.3793, 0.546", "346.321, 333.064, 45.2236, 0.5082", "345.228, 333.401, 45.0598, 0.4158", "344.151, 333.778, 44.9064, 0.352", "343.051, 334.07, 44.6872, 0.3976", "341.935, 334.095, 44.3461, 0.3736", "341.045, 333.439, 43.9032, 0.399", "340.029, 332.996, 43.3678, 0.3342", "339.019, 333.073, 42.688, 0.3006", "338.095, 333.706, 42.0302, 0.2758", "337.423, 334.572, 41.3823, 0.2768", "336.728, 335.476, 40.8296, 0.2788", "335.961, 336.265, 40.2934, 0.2824", "335.173, 337.091, 39.8812, 0.2882", "334.456, 337.983, 39.5822, 0.305", "333.508, 338.617, 39.3338, 0.305", "332.446, 338.853, 38.64, 0.4576" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "361.275, 331.741, 51.718, 0.4274", "360.557, 331.556, 51.8073, 0.3878", "359.451, 331.37, 52.0274, 0.3958", "358.334, 331.139, 52.2945, 0.4734", "357.201, 331.076, 52.631, 0.54", "356.091, 331.067, 53.0312, 0.5804", "354.973, 331.03, 53.4517, 0.6028", "353.864, 330.844, 53.8698, 0.6692", "352.796, 330.442, 54.2181, 0.6722", "351.724, 330.043, 54.5056, 0.5742", "350.612, 329.787, 54.7263, 0.4372", "349.484, 329.757, 54.9856, 0.424", "348.553, 330.031, 55.4372, 0.3754", "347.509, 330.393, 55.9138, 0.4024", "346.371, 330.41, 56.3441, 0.3404", "345.273, 330.679, 56.6773, 0.312", "344.284, 331.187, 56.8758, 0.2966", "343.232, 331.583, 57.1032, 0.3168", "342.276, 332.069, 57.4308, 0.347", "341.474, 332.834, 57.8071, 0.4368", "340.881, 333.786, 58.2193, 0.4406", "340.258, 334.725, 58.6354, 0.5496", "339.522, 335.579, 59.0307, 0.4852", "338.638, 336.284, 59.3412, 0.5168", "337.653, 336.858, 59.5378, 0.528", "336.669, 337.433, 59.7092, 0.551", "335.734, 338.086, 59.8693, 0.5822", "334.877, 338.839, 60.0034, 0.4674", "334.032, 339.594, 60.1336, 0.4052", "333.022, 340.061, 60.3011, 0.4738", "331.906, 340.207, 60.4881, 0.396", "330.768, 340.282, 60.6248, 0.3304", "329.665, 340.547, 60.6942, 0.284", "328.635, 341.04, 60.7012, 0.2918", "327.592, 341.484, 60.6455, 0.3074", "326.491, 341.778, 60.5133, 0.3302", "325.45, 342.202, 60.2843, 0.4042", "324.466, 342.754, 59.9864, 0.3858", "323.437, 343.237, 59.6739, 0.4216", "322.368, 343.595, 59.3228, 0.377", "321.342, 344.028, 58.9291, 0.3746", "320.365, 344.589, 58.5329, 0.4392", "319.383, 345.131, 58.1361, 0.4524", "318.35, 345.577, 57.7601, 0.5356", "317.288, 345.946, 57.4087, 0.6354", "316.21, 346.299, 57.1278, 0.6256", "315.094, 346.506, 56.9495, 0.6382", "313.954, 346.473, 56.8638, 0.5118", "312.835, 346.452, 56.8921, 0.5486", "311.725, 346.432, 57.0002, 0.4426", "310.648, 346.478, 57.0478, 0.4066", "309.629, 346.926, 57.0212, 0.4762", "308.57, 347.34, 57.013, 0.4004", "307.448, 347.53, 57.0385, 0.3388", "306.305, 347.565, 57.1071, 0.299", "305.188, 347.404, 57.2552, 0.321", "304.105, 347.045, 57.5148, 0.3548", "303.062, 346.764, 57.9415, 0.4522", "302.049, 346.461, 58.525, 0.4642", "301.184, 345.805, 59.1657, 0.6184", "300.382, 345.179, 59.9102, 0.4926", "299.393, 344.925, 60.732, 0.4274", "298.292, 344.756, 61.4491, 0.4064", "297.306, 344.534, 62.167, 0.5672", "296.406, 344.918, 62.8813, 0.584", "295.395, 345.187, 63.5678, 0.6072", "294.303, 345.04, 64.1598, 0.4592", "293.171, 345.053, 64.5781, 0.4262", "292.062, 345.328, 64.8586, 0.3374", "290.951, 345.559, 64.997, 0.3066", "289.844, 345.775, 65.1515, 0.287", "288.749, 346.03, 65.3366, 0.2974", "287.717, 346.414, 65.5897, 0.3178", "286.608, 346.646, 65.8255, 0.3504", "285.516, 346.735, 65.8776, 0.4354", "284.609, 347.391, 65.8566, 0.4752", "283.641, 347.856, 65.9008, 0.4338", "282.546, 348.078, 65.8185, 0.4586", "281.41, 348.099, 65.6883, 0.4698", "280.273, 348.218, 65.585, 0.43", "279.144, 348.402, 65.518, 0.4214", "278.01, 348.53, 65.455, 0.5468", "276.877, 348.507, 65.3607, 0.5514", "275.759, 348.419, 65.2999, 0.5212", "274.689, 348.206, 65.3587, 0.4246", "273.585, 348.194, 65.4254, 0.4416", "272.596, 347.636, 65.4828, 0.4386", "271.645, 347.04, 65.5214, 0.37", "270.572, 346.939, 65.6169, 0.3196", "269.62, 347.499, 65.7756, 0.312", "268.738, 348.154, 66.0117, 0.3398", "267.75, 348.673, 66.2393, 0.4156", "266.936, 349.434, 66.4258, 0.4378", "266.182, 350.28, 66.6291, 0.3686", "265.326, 350.997, 66.8671, 0.317", "264.402, 351.647, 67.0606, 0.3072", "263.463, 352.27, 67.142, 0.3298", "262.446, 352.715, 67.2372, 0.4034", "261.378, 353.052, 67.4064, 0.3844", "260.289, 353.376, 67.5752, 0.419", "259.189, 353.69, 67.7163, 0.3722", "258.146, 354.143, 67.8471, 0.3668", "257.159, 354.722, 67.9706, 0.4186", "256.208, 355.339, 68.1184, 0.4434", "255.284, 355.968, 68.3211, 0.379", "254.576, 356.82, 68.5185, 0.336", "254.002, 357.811, 68.672, 0.3434", "253.204, 358.596, 68.7837, 0.3926", "252.257, 359.237, 68.8579, 0.5404", "251.291, 359.849, 68.8996, 0.5398", "250.318, 360.449, 68.9212, 0.4986", "249.301, 360.97, 68.9408, 0.3882", "248.254, 361.431, 68.9676, 0.3484", "247.287, 362.029, 69.0091, 0.3896", "246.406, 362.758, 69.0696, 0.365", "245.469, 363.405, 69.1376, 0.3522", "244.483, 363.984, 69.2205, 0.398", "243.546, 364.611, 69.3672, 0.3742", "242.604, 365.236, 69.5596, 0.4004", "241.615, 365.805, 69.7418, 0.3368", "240.643, 366.406, 69.8939, 0.3052", "239.729, 367.092, 70.0129, 0.2844", "238.755, 367.682, 70.119, 0.2926", "237.682, 368.029, 70.2436, 0.3092", "236.61, 368.389, 70.3161, 0.3334", "235.686, 369.031, 70.345, 0.41", "234.984, 369.924, 70.3802, 0.3976", "234.462, 370.906, 70.5015, 0.4384", "233.779, 371.794, 70.6692, 0.433", "233.33, 372.828, 70.8095, 0.3596", "232.972, 373.914, 70.9162, 0.3006", "232.587, 374.992, 70.9853, 0.2756", "232.005, 375.968, 70.9965, 0.2766", "231.368, 376.916, 70.961, 0.2784", "230.717, 377.855, 70.9218, 0.2818", "229.918, 378.667, 70.91, 0.2876", "228.99, 379.329, 70.9341, 0.2998", "228.079, 380.02, 70.971, 0.316", "227.203, 380.754, 71.0021, 0.377", "226.189, 381.267, 71.0178, 0.3408", "225.091, 381.583, 71.0116, 0.3124", "223.983, 381.864, 70.9825, 0.2988", "222.87, 382.129, 70.9341, 0.3142", "221.758, 382.395, 70.8716, 0.3734", "220.727, 382.828, 70.73, 0.334", "219.681, 383.24, 70.5356, 0.3002", "218.552, 383.34, 70.3819, 0.275", "217.423, 383.512, 70.2831, 0.2754", "217.06, 384.493, 70.2352, 0.2762", "216.714, 385.582, 70.2363, 0.2776", "215.953, 386.411, 70.3144, 0.2802", "215.12, 387.164, 70.4914, 0.2852", "214.288, 387.942, 70.6418, 0.2942", "213.48, 388.719, 70.7073, 0.3118", "212.688, 389.507, 70.8618, 0.3394", "211.891, 390.29, 71.1057, 0.415", "211.054, 391.05, 71.3905, 0.4364", "210.169, 391.772, 71.6696, 0.3662", "209.235, 392.415, 71.8953, 0.3128", "208.236, 392.956, 72.1669, 0.2992", "207.222, 393.439, 72.5032, 0.3152", "206.398, 394.221, 72.835, 0.3754", "205.686, 394.689, 73.3986, 0.3374", "204.815, 394.567, 74.0678, 0.3066", "204.23, 395.473, 74.5609, 0.2868", "204.018, 396.538, 74.8261, 0.2972", "203.285, 397.381, 75.0103, 0.3162", "202.554, 398.217, 75.0912, 0.3538", "201.783, 399.031, 75.0574, 0.4116", "200.999, 399.846, 74.9484, 0.5764", "200.357, 400.781, 74.7648, 0.6026", "199.824, 401.769, 74.4968, 0.6352", "199.349, 402.782, 74.1493, 0.543", "198.824, 403.72, 73.7254, 0.4268", "198.644, 404.687, 73.2312, 0.4036", "197.946, 405.351, 73.0444, 0.3428", "197.62, 406.428, 72.8412, 0.3162", "197.437, 407.512, 72.7373, 0.3058", "197.062, 408.363, 72.662, 0.3268", "196.475, 409.203, 72.4228, 0.3982", "195.797, 410.098, 72.1829, 0.3744", "195.173, 410.945, 71.8306, 0.4008", "194.242, 411.515, 71.6201, 0.3376", "193.562, 412.136, 71.3597, 0.3068", "193.196, 413.199, 71.192, 0.287", "192.581, 414.134, 71.0886, 0.2988", "192.146, 415.162, 71.0676, 0.3142", "191.544, 416.119, 71.1348, 0.3734", "190.608, 416.301, 71.3759, 0.3338", "189.947, 417.19, 71.5515, 0.3", "189.642, 418.265, 71.7573, 0.2746", "189.459, 419.365, 71.8878, 0.2746", "189.19, 420.45, 72.088, 0.2746", "188.986, 421.523, 72.3727, 0.2746", "188.765, 422.606, 72.6874, 0.2744", "188.441, 423.702, 72.9187, 0.2744", "188.114, 424.798, 73.0615, 0.2742", "187.788, 425.894, 73.1217, 0.274", "187.463, 426.981, 73.071, 0.2736", "187.139, 428.069, 72.9464, 0.2728", "186.788, 429.157, 72.8386, 0.2712", "186.416, 430.224, 72.816, 0.2684", "186.025, 431.29, 72.8395, 0.2626", "185.583, 432.346, 72.8465, 0.2542", "185.131, 433.396, 72.8218, 0.2288", "184.621, 434.346, 72.3178, 0.2288" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "390.544, 288.522, 66.8354, 0.488", "390.698, 287.038, 66.4238, 0.4944", "390.864, 285.948, 66.0761, 0.4208", "390.635, 284.835, 65.9296, 0.441", "390.564, 283.695, 65.826, 0.4062", "390.559, 282.551, 65.763, 0.4618", "390.549, 281.409, 65.7507, 0.4398", "390.478, 280.287, 65.8294, 0.5482", "390.232, 279.188, 65.9557, 0.4826", "390.057, 278.072, 65.9812, 0.5122", "389.816, 276.99, 65.9193, 0.518", "389.331, 275.957, 65.8596, 0.5386", "389.001, 274.871, 65.8403, 0.5298", "388.818, 273.757, 65.8708, 0.5124", "388.638, 272.634, 65.8658, 0.4848", "388.475, 271.52, 65.8241, 0.4108", "388.366, 270.389, 65.823, 0.385", "388.013, 269.31, 65.8501, 0.4834", "387.59, 268.26, 65.861, 0.4136", "387.528, 267.143, 65.8669, 0.364", "387.885, 266.068, 65.9182, 0.342", "388.454, 265.077, 66.0181, 0.4198", "389.012, 264.089, 66.1839, 0.4456", "389.451, 263.062, 66.4432, 0.3828", "389.812, 262.001, 66.7719, 0.3446", "390.257, 260.961, 67.081, 0.3516", "390.794, 259.957, 67.3176, 0.445", "391.219, 258.916, 67.5634, 0.4572", "391.542, 257.879, 67.914, 0.5752", "391.82, 256.823, 68.322, 0.5582", "392.076, 255.714, 68.698, 0.5278", "392.422, 254.632, 69.0483, 0.4668", "392.894, 253.596, 69.3921, 0.3754", "393.401, 252.575, 69.6844, 0.3294", "393.9, 251.564, 69.9594, 0.3314", "394.31, 250.555, 70.327, 0.369", "394.663, 249.504, 70.7367, 0.502", "395.023, 248.421, 71.1094, 0.443", "395.441, 247.357, 71.4445, 0.443", "395.988, 246.364, 71.7858, 0.3696", "396.492, 245.372, 72.1694, 0.3608", "396.691, 244.316, 72.6144, 0.4138", "396.935, 243.288, 73.1231, 0.4046", "397.42, 242.29, 73.61, 0.4516", "397.913, 241.263, 74.0051, 0.4568", "398.211, 240.182, 74.242, 0.405", "398.257, 239.061, 74.34, 0.3802", "398.315, 237.939, 74.4514, 0.4446", "398.495, 236.822, 74.6085, 0.486", "398.792, 235.72, 74.7933, 0.4848", "399.228, 234.666, 75.0257, 0.4034", "399.779, 233.696, 75.3684, 0.4072", "400.227, 232.666, 75.7691, 0.3496", "400.512, 231.57, 76.1872, 0.3288", "400.579, 230.53, 76.7166, 0.33", "400.471, 229.504, 77.3438, 0.3666", "400.721, 228.448, 77.8733, 0.4976", "401.29, 227.465, 78.2558, 0.4348", "401.768, 226.471, 78.6397, 0.428", "401.96, 225.39, 79.037, 0.3408", "401.987, 224.261, 79.3859, 0.3128", "401.986, 223.124, 79.6883, 0.298", "402.01, 221.997, 79.9856, 0.319", "402.028, 220.861, 80.2399, 0.3528", "402.01, 219.723, 80.3594, 0.4398", "401.971, 218.585, 80.3706, 0.4832", "401.749, 217.467, 80.3594, 0.4486", "401.515, 216.348, 80.3261, 0.4866", "401.349, 215.238, 80.2158, 0.518", "401.116, 214.122, 80.1209, 0.5374", "400.74, 213.046, 80.1027, 0.5336", "400.334, 212.019, 80.0125, 0.4908", "399.686, 211.38, 80.1954, 0.5844", "398.891, 210.586, 80.404, 0.6052", "398.112, 209.749, 80.5442, 0.47", "397.508, 208.785, 80.5868, 0.3758", "397.395, 207.675, 80.4768, 0.3576", "397.085, 206.628, 80.2323, 0.4796", "396.668, 205.605, 79.9047, 0.4068", "396.212, 204.56, 79.6488, 0.35", "395.754, 203.513, 79.5155, 0.3224", "395.258, 202.521, 79.5852, 0.3526", "394.648, 201.58, 79.7698, 0.4704", "394.529, 200.494, 80.0887, 0.3898", "394.504, 199.352, 80.3813, 0.3192", "394.504, 198.208, 80.5988, 0.2626", "394.504, 197.064, 80.7419, 0.2542", "394.504, 195.92, 80.8184, 0.2288", "394.504, 194.776, 80.8556, 0.2288" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "390.544, 288.522, 66.8354, 0.488", "390.321, 287.468, 67.2678, 0.5142", "389.909, 286.457, 67.702, 0.5616", "389.484, 285.457, 68.003, 0.427", "388.927, 284.583, 68.0361, 0.341", "388.358, 283.678, 67.9876, 0.3032", "387.865, 282.662, 68.0159, 0.3286", "387.252, 281.739, 68.1276, 0.3702", "386.56, 280.852, 68.29, 0.4742", "385.941, 279.897, 68.4552, 0.5368", "385.438, 278.872, 68.6014, 0.5982", "385.125, 277.779, 68.6871, 0.5204", "384.885, 276.682, 68.6624, 0.3902", "384.633, 275.58, 68.5986, 0.3102", "384.307, 274.579, 68.6748, 0.2934", "384.0, 273.543, 68.801, 0.3106", "383.831, 272.416, 68.8705, 0.3358", "383.719, 271.279, 68.892, 0.415", "383.515, 270.165, 68.8752, 0.4052", "383.079, 269.107, 68.8288, 0.4596", "382.622, 268.059, 68.7487, 0.4372", "382.237, 266.983, 68.647, 0.5374", "381.915, 265.891, 68.5345, 0.4922", "381.704, 264.775, 68.4048, 0.385", "381.568, 263.647, 68.2735, 0.3006", "381.473, 262.509, 68.1814, 0.2756", "381.385, 261.368, 68.1556, 0.2766", "381.245, 260.235, 68.2122, 0.2784", "381.14, 259.105, 68.348, 0.2816", "381.224, 257.965, 68.5322, 0.2874", "381.327, 256.83, 68.7742, 0.2996", "381.245, 255.721, 69.1132, 0.3156", "380.776, 254.749, 69.5607, 0.3762", "380.003, 253.959, 70.0655, 0.339", "379.243, 253.152, 70.5919, 0.3094", "378.648, 252.277, 71.206, 0.292", "378.146, 251.315, 71.8192, 0.3064", "377.695, 250.266, 72.3327, 0.3356", "377.172, 249.26, 72.7773, 0.3782", "376.54, 248.322, 73.1898, 0.5126", "375.875, 247.407, 73.5778, 0.4934", "375.234, 246.478, 73.9438, 0.3872", "374.834, 245.436, 74.298, 0.3048", "374.703, 244.314, 74.6494, 0.2834", "374.939, 243.261, 75.0089, 0.2906", "374.963, 242.239, 75.327, 0.3056", "374.459, 241.215, 75.5698, 0.3266", "373.859, 240.241, 75.7599, 0.3976", "373.092, 239.405, 75.9178, 0.3734", "372.257, 238.624, 76.0735, 0.3988", "371.456, 237.819, 76.2686, 0.3338", "370.678, 237.004, 76.5282, 0.3", "369.915, 236.189, 76.8508, 0.2746", "369.176, 235.338, 77.1806, 0.2746", "368.449, 234.458, 77.474, 0.2746", "367.78, 233.534, 77.7053, 0.2746", "367.147, 232.581, 77.87, 0.2746", "366.549, 231.605, 77.9836, 0.2746", "365.977, 230.615, 78.071, 0.2746", "365.26, 229.735, 78.1595, 0.2746", "364.43, 228.948, 78.2664, 0.2746", "363.531, 228.242, 78.4008, 0.2746", "362.571, 227.622, 78.575, 0.2746", "361.832, 226.919, 78.9188, 0.2746", "361.32, 225.997, 79.382, 0.2746", "360.712, 225.046, 79.805, 0.2746", "360.058, 224.107, 80.1564, 0.2746", "359.493, 223.138, 80.5042, 0.2746", "358.948, 222.156, 80.8405, 0.2746", "358.363, 221.179, 81.0958, 0.2746", "357.746, 220.214, 81.286, 0.2746", "357.055, 219.305, 81.4484, 0.2746", "356.348, 218.404, 81.5984, 0.2746", "355.68, 217.477, 81.7474, 0.2746", "354.987, 216.567, 81.9286, 0.2746", "354.157, 215.822, 82.2147, 0.2746", "353.297, 215.117, 82.598, 0.2746", "352.45, 214.394, 83.0424, 0.2746", "351.74, 213.583, 83.547, 0.2746", "351.144, 212.713, 84.0924, 0.2746" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "364.242, 338.913, 58.441, 0.3052", "363.426, 339.329, 58.87, 0.3336", "362.72, 340.197, 59.1587, 0.373", "362.339, 341.268, 59.3664, 0.5094", "362.003, 342.336, 59.5854, 0.4566", "361.421, 343.248, 59.9029, 0.4694", "360.614, 343.994, 60.2661, 0.4134", "359.773, 344.751, 60.5914, 0.4686", "359.096, 345.67, 60.853, 0.4836", "358.467, 346.623, 61.0515, 0.479", "357.799, 347.552, 61.1946, 0.3986", "357.186, 348.517, 61.304, 0.3688", "356.685, 349.541, 61.4146, 0.4222", "356.372, 350.625, 61.5796, 0.45", "356.216, 351.738, 61.8145, 0.3912", "355.971, 352.837, 62.0659, 0.3598", "355.44, 353.826, 62.3302, 0.382", "354.794, 354.753, 62.5747, 0.4898", "354.213, 355.729, 62.7698, 0.5964", "353.667, 356.727, 62.9454, 0.5592", "353.182, 357.759, 63.0736, 0.4874", "352.758, 358.821, 63.1543, 0.3666", "352.322, 359.878, 63.1957, 0.3132", "351.882, 360.934, 63.2094, 0.3002", "351.345, 361.94, 63.2033, 0.3166", "350.721, 362.9, 63.1806, 0.3782", "350.34, 363.944, 63.1383, 0.3426", "350.267, 365.082, 63.0672, 0.316", "350.15, 366.215, 62.9866, 0.3056", "349.866, 367.32, 62.9224, 0.3266", "349.39, 368.351, 62.8648, 0.3976", "348.809, 369.337, 62.7953, 0.3734", "348.364, 370.372, 62.6772, 0.3988", "348.015, 371.444, 62.4943, 0.3338", "347.528, 372.462, 62.3003, 0.3", "346.932, 373.439, 62.1303, 0.2746", "346.393, 374.447, 61.9836, 0.2746", "345.901, 375.48, 61.8596, 0.2746", "345.376, 376.478, 61.7084, 0.2746", "344.822, 377.447, 61.4964, 0.2746", "344.544, 378.534, 61.3032, 0.2746", "344.377, 379.665, 61.154, 0.2746", "344.273, 380.803, 61.0464, 0.2746", "344.241, 381.947, 60.9759, 0.2746", "344.148, 383.086, 60.9378, 0.2746", "343.682, 384.109, 60.9185, 0.2746", "343.06, 385.07, 60.8986, 0.2746", "342.419, 386.017, 60.8714, 0.2746", "341.786, 386.971, 60.8331, 0.2746", "341.296, 388.0, 60.779, 0.2746", "340.888, 389.069, 60.7026, 0.2746", "340.365, 390.083, 60.5984, 0.2746", "339.73, 391.033, 60.4618, 0.2746", "338.939, 391.841, 60.2476, 0.2746", "338.038, 392.501, 59.9304, 0.2746", "337.076, 393.051, 59.5283, 0.2746", "336.094, 393.565, 59.0733, 0.2746", "335.133, 394.138, 58.6124, 0.2746", "334.148, 394.688, 58.1854, 0.2746", "333.078, 395.07, 57.857, 0.2746", "331.984, 395.411, 57.6246, 0.2746", "331.03, 396.022, 57.4633, 0.2746", "330.114, 396.707, 57.3482, 0.2746", "329.074, 397.119, 57.202, 0.2746", "327.999, 397.453, 57.0125, 0.2746", "326.957, 397.913, 56.8417, 0.2746", "325.924, 398.405, 56.707, 0.2746", "324.977, 399.04, 56.6163, 0.2746", "324.06, 399.723, 56.5715, 0.2746", "323.195, 400.471, 56.5715, 0.2746", "322.346, 401.24, 56.6054, 0.2746", "321.483, 401.989, 56.6588, 0.2746", "320.613, 402.732, 56.7269, 0.2746", "319.566, 403.1, 56.8655, 0.2748", "318.475, 403.354, 57.0702, 0.275", "317.341, 403.421, 57.2566, 0.2754", "316.197, 403.426, 57.3997, 0.276", "315.053, 403.426, 57.5014, 0.2772", "313.909, 403.426, 57.5652, 0.2794", "312.765, 403.426, 57.5963, 0.2836", "311.621, 403.426, 57.6092, 0.291", "310.477, 403.426, 57.6209, 0.3062", "309.333, 403.426, 57.6366, 0.3276", "308.203, 403.59, 57.6596, 0.3996", "307.121, 403.952, 57.692, 0.377", "306.064, 404.388, 57.736, 0.4056", "305.048, 404.912, 57.7917, 0.3464", "304.017, 405.406, 57.8735, 0.3242", "302.941, 405.74, 58.021, 0.3142", "301.859, 406.069, 58.2078, 0.3734", "300.797, 406.486, 58.371, 0.3338", "299.749, 406.945, 58.4976, 0.3", "298.814, 407.597, 58.5805, 0.2746", "297.885, 408.267, 58.6208, 0.2746", "296.898, 408.843, 58.6236, 0.2746", "296.113, 409.662, 58.6001, 0.2746", "295.729, 410.728, 58.5581, 0.2746", "295.316, 411.794, 58.497, 0.2746", "294.825, 412.827, 58.4161, 0.2746", "294.367, 413.876, 58.3139, 0.2746", "293.816, 414.861, 58.128, 0.2746", "293.22, 415.805, 57.8472, 0.2746", "292.91, 416.9, 57.5725, 0.2746", "292.646, 418.013, 57.3154, 0.2748", "292.405, 419.124, 57.0273, 0.2748", "292.185, 420.225, 56.686, 0.2752", "291.966, 421.328, 56.3172, 0.2756", "291.75, 422.435, 55.937, 0.2766", "291.588, 423.549, 55.547, 0.2782", "291.516, 424.668, 55.1614, 0.2814", "291.394, 425.788, 54.8111, 0.287", "290.901, 426.815, 54.5728, 0.2988", "290.4, 427.843, 54.43, 0.314", "290.125, 428.953, 54.3654, 0.3734", "289.863, 430.066, 54.3617, 0.3338", "289.505, 431.152, 54.4079, 0.2998", "289.103, 432.223, 54.4863, 0.2744", "288.784, 433.315, 54.6123, 0.2742", "288.536, 434.415, 54.7957, 0.274", "288.329, 435.534, 54.9816, 0.2736", "288.163, 436.666, 55.1239, 0.2728", "288.001, 437.798, 55.2236, 0.2712", "287.978, 438.943, 55.2854, 0.2684", "287.96, 440.086, 55.3148, 0.2626", "287.945, 441.23, 55.3224, 0.2542", "288.181, 442.348, 55.3227, 0.2288", "288.859, 443.266, 55.3227, 0.2288" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "364.242, 338.913, 58.441, 0.3052", "363.775, 338.202, 58.5906, 0.2288", "364.001, 337.534, 59.8727, 0.3142", "365.058, 337.466, 60.4223, 0.3736", "365.879, 338.083, 61.0131, 0.334", "366.141, 339.15, 61.6288, 0.3004", "366.28, 340.264, 62.2779, 0.2752", "366.542, 341.365, 62.9314, 0.2756", "366.855, 342.412, 63.635, 0.2766", "366.725, 343.421, 64.4258, 0.2784", "366.808, 344.196, 65.3932, 0.2818", "367.122, 344.847, 66.5109, 0.2878", "367.663, 345.736, 67.4268, 0.3002", "368.234, 346.71, 68.1797, 0.3166", "368.709, 347.745, 68.7498, 0.3782", "368.996, 348.846, 69.1449, 0.3428", "369.148, 349.962, 69.461, 0.3162", "369.424, 351.018, 69.8468, 0.3056", "369.783, 352.055, 70.3276, 0.3268", "369.947, 353.151, 70.8551, 0.398", "369.965, 354.266, 71.412, 0.374", "369.941, 355.358, 72.011, 0.4", "369.79, 356.451, 72.569, 0.336", "369.483, 357.552, 73.017, 0.3038", "369.028, 358.582, 73.4247, 0.2818", "368.48, 359.541, 73.8634, 0.2878", "368.103, 360.567, 74.3296, 0.3002", "367.646, 361.584, 74.7438, 0.3168", "366.984, 362.491, 75.1484, 0.3784", "366.483, 363.478, 75.5524, 0.3432", "366.367, 364.588, 75.9304, 0.3174", "366.462, 365.714, 76.3101, 0.3062", "366.657, 366.824, 76.697, 0.3354", "367.134, 367.83, 77.0963, 0.3778", "367.849, 368.701, 77.5065, 0.5118", "368.655, 369.501, 77.9055, 0.492", "369.243, 370.451, 78.2695, 0.3848", "369.202, 371.53, 78.6218, 0.3", "369.236, 372.53, 79.0997, 0.2746", "369.221, 373.571, 79.6804, 0.2746", "369.495, 374.634, 80.2276, 0.2746", "370.364, 375.302, 80.7503, 0.2746", "371.284, 375.862, 81.352, 0.2746", "372.158, 376.463, 82.0224, 0.2746", "372.962, 377.212, 82.677, 0.2746", "373.824, 377.914, 83.3048, 0.2746", "374.798, 378.449, 83.9098, 0.2746", "375.699, 379.132, 84.441, 0.2746", "376.464, 379.977, 84.8624, 0.2746", "377.172, 380.865, 85.2522, 0.2746", "377.842, 381.759, 85.6806, 0.2746", "378.629, 382.578, 86.1025, 0.2746", "379.1, 383.605, 86.5264, 0.2746", "379.535, 384.652, 86.9971, 0.2746", "380.014, 385.55, 87.6333, 0.2746", "380.553, 386.464, 88.3501, 0.2746", "381.148, 387.401, 89.059, 0.2744", "381.627, 388.356, 89.7966, 0.2744", "382.506, 388.941, 90.5307, 0.2742", "383.293, 389.759, 91.1184, 0.274", "383.613, 390.853, 91.5544, 0.2736", "384.001, 391.913, 91.9489, 0.2728", "384.433, 392.942, 92.337, 0.2712", "385.252, 393.704, 92.7088, 0.2684", "386.108, 394.434, 93.0569, 0.2626", "386.917, 395.243, 93.3257, 0.2542", "387.687, 396.088, 93.5203, 0.2288", "388.25, 397.085, 93.7096, 0.2288" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "351.144, 212.713, 84.0924, 0.2746", "351.115, 212.373, 86.0328, 0.2288", "350.977, 211.416, 87.6579, 0.2746", "350.589, 210.358, 88.2963, 0.2746", "350.143, 209.329, 89.0372, 0.2746", "349.427, 208.631, 89.9769, 0.2744", "348.698, 207.949, 91.0686, 0.2744", "347.969, 207.268, 92.2625, 0.2742", "347.592, 206.319, 93.4962, 0.274", "347.311, 205.322, 94.7554, 0.2736", "347.031, 204.323, 96.019, 0.2728", "346.752, 203.324, 97.302, 0.2712", "346.426, 202.353, 98.5838, 0.2684", "345.507, 202.344, 99.8976, 0.2626", "344.59, 202.336, 101.2, 0.2542", "343.671, 202.327, 102.452, 0.2288", "342.753, 202.319, 105.0, 0.2288" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "351.144, 212.713, 84.0924, 0.2746", "350.475, 212.236, 84.5292, 0.2746", "349.598, 211.525, 84.7731, 0.2746", "348.772, 210.741, 84.8347, 0.2746", "347.948, 209.956, 84.7529, 0.2746", "347.122, 209.172, 84.5659, 0.2746", "346.297, 208.388, 84.3136, 0.2746", "345.471, 207.604, 84.0367, 0.2746", "344.646, 206.82, 83.7542, 0.2746", "343.82, 206.036, 83.4686, 0.2746", "342.995, 205.252, 83.1796, 0.2746", "342.169, 204.468, 82.8853, 0.2746", "341.344, 203.684, 82.5838, 0.2746", "340.518, 202.9, 82.2718, 0.2746", "339.694, 202.116, 81.9451, 0.2746", "338.868, 201.331, 81.599, 0.2746", "338.043, 200.548, 81.2291, 0.2746", "337.236, 199.749, 80.8198, 0.2746", "336.502, 198.914, 80.3345, 0.2746", "335.792, 198.068, 79.777, 0.2746", "335.079, 197.221, 79.1669, 0.2746", "334.368, 196.374, 78.524, 0.2746", "333.657, 195.528, 77.8677, 0.2746", "332.946, 194.681, 77.2187, 0.2746", "332.234, 193.835, 76.5937, 0.2746", "331.523, 192.987, 76.0021, 0.2746", "330.812, 192.141, 75.4488, 0.2746", "329.89, 191.51, 74.9988, 0.2746", "328.859, 191.014, 74.6679, 0.2746", "327.819, 190.538, 74.4274, 0.2746", "326.779, 190.061, 74.2409, 0.2746", "325.739, 189.584, 74.0695, 0.2746", "324.699, 189.108, 73.8741, 0.2746", "323.659, 188.631, 73.6198, 0.2746", "322.618, 188.154, 73.2914, 0.2746", "321.827, 187.433, 72.7804, 0.2746", "321.663, 186.548, 71.9933, 0.2746", "321.552, 185.654, 71.0032, 0.2748", "321.285, 184.746, 69.9129, 0.275", "320.454, 184.0, 68.9352, 0.2752", "319.604, 183.261, 68.0814, 0.2758", "318.754, 182.522, 67.352, 0.2768", "317.903, 181.783, 66.7131, 0.2788", "317.28, 180.859, 66.1167, 0.2824", "316.933, 179.814, 65.5284, 0.2882", "316.585, 178.768, 64.9418, 0.305", "316.236, 177.723, 64.3762, 0.305", "315.888, 176.677, 63.2257, 0.4576" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_28", "dend_23", "dend_12", "dend_9", "dend_0", "dend_32", "dend_29", "dend_25", "dend_24", "dend_22", "dend_13", "dend_11", "dend_10", "dend_8", "dend_1", "dend_31", "dend_30", "dend_27", "dend_26", "dend_17", "dend_14", "dend_7", "dend_2", "dend_19", "dend_18", "dend_16", "dend_15", "dend_6", "dend_3", "dend_21", "dend_20", "dend_5", "dend_4" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24537",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_28", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "2.4057493"
  }, {
    "group" : "axon",
    "value" : "2.4057493"
  }, {
    "group" : "dend",
    "value" : "2.4057493"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "151.70613"
  } ],
  "channelDensity" : [ {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "1.4240509E-4",
    "erev" : "-45.0"
  }, {
    "id" : "NaV_soma",
    "ionChannel" : "NaV",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.04914884",
    "erev" : "53.0"
  }, {
    "id" : "Kd_soma",
    "ionChannel" : "Kd",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "7.9377147E-4",
    "erev" : "-107.0"
  }, {
    "id" : "Kv2like_soma",
    "ionChannel" : "Kv2like",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.22561772",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.2562811",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.020525401",
    "erev" : "-107.0"
  }, {
    "id" : "Im_v2_soma",
    "ionChannel" : "Im_v2",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "8.7854295E-4",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "6.319329E-9",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "1.02170404E-7",
    "erev" : "-89.617325"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "4.71987E-4",
    "erev" : "-89.617325"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "1.3029885E-6",
    "erev" : "-89.617325"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "9.997466E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "1.1684379E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_485611914",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_485611914

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_12, id: dend_12, parent: soma_0
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_12
create dend_22
public dend_22
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_0
create dend_8
public dend_8
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=dend, groups=[], sections=[dend_28, dend_23, dend_12, dend_9, dend_0, dend_32, dend_29, dend_25, dend_24, dend_22, dend_13, dend_11, dend_10, dend_8, dend_1, dend_31, dend_30, dend_27, dend_26, dend_17, dend_14, dend_7, dend_2, dend_19, dend_18, dend_16, dend_15, dend_6, dend_3, dend_21, dend_20, dend_5, dend_4]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_24537, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_24537
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_485611914
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5000408864175334)
    connect dend_28(0), soma_0(0.5000408864175334)
    connect dend_23(0), soma_0(0.5000408864175334)
    connect dend_12(0), soma_0(0.5000408864175334)
    connect dend_9(0), soma_0(0.5000408864175334)
    connect dend_0(0), soma_0(0.5000408864175334)
    connect axon_1(0), axon_0(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 382.159, 331.531, 54.32, 12.2282 ) }
    soma_0 { pt3dadd( 388.274, 331.531, 54.32, 12.2282 ) }
    soma_0 { pt3dadd( 394.388, 331.531, 54.32, 12.2282 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 388.273, 331.531, 54.32, 1.0 ) }
    axon_0 { pt3dadd( 394.115, 345.347, 54.32, 1.0 ) }
    axon_0 { pt3dadd( 399.956, 359.163, 54.32, 1.0 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 6/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 393.363, 329.997, 52.3527, 0.3558 ) }
    dend_28 { pt3dadd( 394.285, 330.613, 51.3223, 0.4764 ) }
    dend_28 { pt3dadd( 395.174, 331.022, 50.794, 0.4008 ) }
    dend_28 { pt3dadd( 396.273, 330.815, 50.2396, 0.3394 ) }
    dend_28 { pt3dadd( 397.383, 331.064, 49.7328, 0.3016 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 11/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 386.952, 336.79, 58.2492, 0.2892 ) }
    dend_23 { pt3dadd( 386.686, 337.854, 58.7107, 0.3014 ) }
    dend_23 { pt3dadd( 386.418, 338.918, 58.9669, 0.325 ) }
    // Section: dend_12, id: dend_12, parent: soma_0 (entry count 14/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 383.357, 331.75, 54.5821, 0.295 ) }
    dend_12 { pt3dadd( 382.224, 331.897, 54.682, 0.3136 ) }
    dend_12 { pt3dadd( 381.302, 332.57, 54.6972, 0.3416 ) }
    dend_12 { pt3dadd( 380.523, 333.395, 54.5986, 0.425 ) }
    dend_12 { pt3dadd( 379.548, 333.908, 54.353, 0.4264 ) }
    dend_12 { pt3dadd( 378.614, 334.496, 54.0047, 0.4866 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 20/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 385.185, 335.96, 50.9662, 0.2784 ) }
    dend_9 { pt3dadd( 384.799, 336.975, 50.0368, 0.2816 ) }
    dend_9 { pt3dadd( 385.137, 338.049, 49.6782, 0.2874 ) }
    dend_9 { pt3dadd( 385.527, 339.122, 49.3055, 0.2994 ) }
    dend_9 { pt3dadd( 385.848, 340.1, 48.7698, 0.3154 ) }
    dend_9 { pt3dadd( 385.499, 341.256, 48.2222, 0.3384 ) }
    dend_9 { pt3dadd( 385.766, 342.351, 47.7856, 0.3086 ) }
    dend_9 { pt3dadd( 385.901, 343.485, 47.3766, 0.2902 ) }
    dend_9 { pt3dadd( 385.717, 344.55, 46.8583, 0.3046 ) }
    dend_9 { pt3dadd( 385.29, 345.395, 46.184, 0.325 ) }
    dend_9 { pt3dadd( 384.566, 345.804, 45.3639, 0.3934 ) }
    dend_9 { pt3dadd( 384.471, 346.184, 44.5934, 0.3718 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 32/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 390.083, 326.16, 54.8335, 0.3814 ) }
    dend_0 { pt3dadd( 389.922, 325.116, 55.8888, 0.4588 ) }
    dend_0 { pt3dadd( 390.519, 324.264, 56.3153, 0.6832 ) }
    dend_0 { pt3dadd( 391.438, 323.926, 56.9134, 0.706 ) }
    dend_0 { pt3dadd( 392.378, 323.439, 57.5481, 0.5986 ) }
    dend_0 { pt3dadd( 393.315, 322.828, 58.0692, 0.4404 ) }
    dend_0 { pt3dadd( 393.915, 321.872, 58.4436, 0.405 ) }
    dend_0 { pt3dadd( 394.181, 320.762, 58.6852, 0.4616 ) }
    dend_0 { pt3dadd( 394.354, 319.631, 58.826, 0.6586 ) }
    dend_0 { pt3dadd( 394.535, 318.803, 58.8958, 0.8048 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 42/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 399.956, 359.163, 54.32, 1.0 ) }
    axon_1 { pt3dadd( 405.797, 372.979, 54.32, 1.0 ) }
    axon_1 { pt3dadd( 411.639, 386.795, 54.32, 1.0 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 45/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 397.383, 331.064, 49.7328, 0.3016 ) }
    dend_32 { pt3dadd( 397.986, 330.517, 49.2632, 0.3194 ) }
    dend_32 { pt3dadd( 398.283, 329.605, 48.7393, 0.3834 ) }
    dend_32 { pt3dadd( 397.868, 328.627, 48.2717, 0.352 ) }
    dend_32 { pt3dadd( 397.638, 327.622, 48.0936, 0.3346 ) }
    dend_32 { pt3dadd( 397.922, 326.572, 48.0754, 0.3338 ) }
    dend_32 { pt3dadd( 398.056, 325.506, 47.9329, 0.4094 ) }
    dend_32 { pt3dadd( 398.292, 324.411, 47.7366, 0.4024 ) }
    dend_32 { pt3dadd( 398.877, 323.428, 47.572, 0.4178 ) }
    dend_32 { pt3dadd( 399.596, 322.539, 47.3964, 0.5382 ) }
    dend_32 { pt3dadd( 400.346, 321.713, 47.1352, 0.5432 ) }
    dend_32 { pt3dadd( 400.66, 320.622, 46.8745, 0.469 ) }
    dend_32 { pt3dadd( 400.941, 319.516, 46.6875, 0.5074 ) }
    dend_32 { pt3dadd( 401.484, 318.509, 46.5542, 0.4112 ) }
    dend_32 { pt3dadd( 402.01, 317.493, 46.4537, 0.3582 ) }
    dend_32 { pt3dadd( 402.49, 316.456, 46.3786, 0.3378 ) }
    dend_32 { pt3dadd( 402.768, 315.354, 46.3218, 0.3808 ) }
    dend_32 { pt3dadd( 402.552, 314.23, 46.2627, 0.5246 ) }
    dend_32 { pt3dadd( 402.29, 313.122, 46.1748, 0.4798 ) }
    dend_32 { pt3dadd( 402.315, 311.992, 46.02, 0.537 ) }
    dend_32 { pt3dadd( 402.449, 310.866, 45.8377, 0.4188 ) }
    dend_32 { pt3dadd( 402.456, 309.733, 45.7232, 0.3738 ) }
    dend_32 { pt3dadd( 402.461, 308.601, 45.5944, 0.36 ) }
    dend_32 { pt3dadd( 402.685, 307.555, 45.3552, 0.4542 ) }
    dend_32 { pt3dadd( 403.385, 306.658, 45.1052, 0.505 ) }
    dend_32 { pt3dadd( 403.951, 305.69, 44.8146, 0.5136 ) }
    dend_32 { pt3dadd( 404.247, 304.606, 44.5049, 0.487 ) }
    dend_32 { pt3dadd( 404.348, 303.467, 44.233, 0.415 ) }
    dend_32 { pt3dadd( 404.566, 302.353, 44.0003, 0.3928 ) }
    dend_32 { pt3dadd( 405.081, 301.347, 43.7732, 0.4976 ) }
    dend_32 { pt3dadd( 405.795, 300.491, 43.5005, 0.4408 ) }
    dend_32 { pt3dadd( 406.697, 299.797, 43.2457, 0.4094 ) }
    dend_32 { pt3dadd( 407.665, 299.19, 43.0245, 0.4516 ) }
    dend_32 { pt3dadd( 408.604, 298.542, 42.812, 0.5 ) }
    dend_32 { pt3dadd( 409.426, 297.766, 42.5715, 0.5042 ) }
    dend_32 { pt3dadd( 410.092, 296.861, 42.2999, 0.4704 ) }
    dend_32 { pt3dadd( 410.633, 295.859, 42.0417, 0.3818 ) }
    dend_32 { pt3dadd( 411.17, 294.865, 41.7917, 0.3428 ) }
    dend_32 { pt3dadd( 411.936, 294.049, 41.5195, 0.3486 ) }
    dend_32 { pt3dadd( 412.829, 293.347, 41.2765, 0.4378 ) }
    dend_32 { pt3dadd( 413.674, 292.585, 41.1029, 0.4512 ) }
    dend_32 { pt3dadd( 414.243, 291.623, 40.9903, 0.5272 ) }
    dend_32 { pt3dadd( 414.536, 290.518, 40.922, 0.6482 ) }
    dend_32 { pt3dadd( 414.923, 289.442, 40.887, 0.5118 ) }
    dend_32 { pt3dadd( 415.371, 288.39, 40.8755, 0.4084 ) }
    dend_32 { pt3dadd( 415.706, 287.302, 40.8722, 0.4068 ) }
    dend_32 { pt3dadd( 415.974, 286.194, 40.8694, 0.3966 ) }
    dend_32 { pt3dadd( 416.457, 285.164, 40.8649, 0.4118 ) }
    dend_32 { pt3dadd( 417.053, 284.189, 40.8587, 0.504 ) }
    dend_32 { pt3dadd( 417.578, 283.173, 40.8503, 0.593 ) }
    dend_32 { pt3dadd( 418.008, 282.115, 40.84, 0.6988 ) }
    dend_32 { pt3dadd( 418.315, 281.014, 40.8248, 0.723 ) }
    dend_32 { pt3dadd( 418.478, 279.887, 40.7938, 0.6876 ) }
    dend_32 { pt3dadd( 418.611, 278.756, 40.7568, 0.5548 ) }
    dend_32 { pt3dadd( 418.844, 277.636, 40.7417, 0.4064 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_32 { pt3dadd( 419.103, 276.524, 40.7456, 0.3412 ) }
    dend_32 { pt3dadd( 419.523, 275.47, 40.7739, 0.3468 ) }
    dend_32 { pt3dadd( 420.03, 274.448, 40.8061, 0.4288 ) }
    dend_32 { pt3dadd( 420.47, 273.427, 40.7887, 0.462 ) }
    dend_32 { pt3dadd( 420.773, 272.407, 40.7476, 0.414 ) }
    dend_32 { pt3dadd( 420.818, 271.28, 40.8254, 0.3984 ) }
    dend_32 { pt3dadd( 421.085, 270.215, 41.0113, 0.4718 ) }
    dend_32 { pt3dadd( 421.657, 269.253, 41.2824, 0.5682 ) }
    dend_32 { pt3dadd( 422.367, 268.373, 41.5705, 0.4824 ) }
    dend_32 { pt3dadd( 423.172, 267.562, 41.8314, 0.4638 ) }
    dend_32 { pt3dadd( 423.77, 266.649, 42.1098, 0.4328 ) }
    dend_32 { pt3dadd( 423.954, 265.566, 42.394, 0.3594 ) }
    dend_32 { pt3dadd( 423.961, 264.424, 42.6101, 0.3 ) }
    dend_32 { pt3dadd( 423.961, 263.28, 42.7599, 0.2748 ) }
    dend_32 { pt3dadd( 424.104, 262.155, 42.8638, 0.2748 ) }
    dend_32 { pt3dadd( 424.685, 261.23, 42.9335, 0.2752 ) }
    dend_32 { pt3dadd( 425.344, 260.33, 42.9766, 0.2756 ) }
    dend_32 { pt3dadd( 425.926, 259.354, 43.0108, 0.2766 ) }
    dend_32 { pt3dadd( 426.627, 258.45, 43.0534, 0.2782 ) }
    dend_32 { pt3dadd( 427.371, 257.582, 43.1077, 0.2812 ) }
    dend_32 { pt3dadd( 428.133, 256.731, 43.1872, 0.287 ) }
    dend_32 { pt3dadd( 428.867, 255.873, 43.3266, 0.2976 ) }
    dend_32 { pt3dadd( 429.51, 254.947, 43.5072, 0.318 ) }
    dend_32 { pt3dadd( 430.023, 253.93, 43.6716, 0.3508 ) }
    dend_32 { pt3dadd( 430.548, 252.915, 43.7965, 0.4372 ) }
    dend_32 { pt3dadd( 431.184, 251.967, 43.8774, 0.4722 ) }
    dend_32 { pt3dadd( 431.945, 251.117, 43.9132, 0.4582 ) }
    dend_32 { pt3dadd( 432.835, 250.404, 43.9068, 0.3594 ) }
    dend_32 { pt3dadd( 433.629, 249.601, 43.8687, 0.3 ) }
    dend_32 { pt3dadd( 433.975, 248.553, 43.8094, 0.2746 ) }
    dend_32 { pt3dadd( 434.029, 247.412, 43.7338, 0.2746 ) }
    dend_32 { pt3dadd( 434.35, 246.36, 43.594, 0.2746 ) }
    dend_32 { pt3dadd( 434.904, 245.387, 43.3773, 0.2746 ) }
    dend_32 { pt3dadd( 435.512, 244.429, 43.1595, 0.2746 ) }
    dend_32 { pt3dadd( 436.14, 243.472, 42.9778, 0.2746 ) }
    dend_32 { pt3dadd( 436.747, 242.504, 42.8288, 0.2748 ) }
    dend_32 { pt3dadd( 437.342, 241.526, 42.7084, 0.2748 ) }
    dend_32 { pt3dadd( 437.815, 240.507, 42.5645, 0.275 ) }
    dend_32 { pt3dadd( 438.217, 239.46, 42.3847, 0.2756 ) }
    dend_32 { pt3dadd( 438.635, 238.402, 42.2324, 0.2764 ) }
    dend_32 { pt3dadd( 439.061, 237.34, 42.1392, 0.278 ) }
    dend_32 { pt3dadd( 439.71, 236.42, 42.1109, 0.2808 ) }
    dend_32 { pt3dadd( 440.491, 235.585, 42.149, 0.2862 ) }
    dend_32 { pt3dadd( 441.277, 234.756, 42.2562, 0.2958 ) }
    dend_32 { pt3dadd( 442.082, 233.954, 42.4351, 0.3148 ) }
    dend_32 { pt3dadd( 442.902, 233.178, 42.6712, 0.3452 ) }
    dend_32 { pt3dadd( 443.699, 232.389, 42.9461, 0.4256 ) }
    dend_32 { pt3dadd( 444.465, 231.564, 43.2284, 0.4572 ) }
    dend_32 { pt3dadd( 445.087, 230.622, 43.4252, 0.3994 ) }
    dend_32 { pt3dadd( 445.591, 229.598, 43.5238, 0.4 ) }
    dend_32 { pt3dadd( 446.032, 228.545, 43.563, 0.3362 ) }
    dend_32 { pt3dadd( 446.433, 227.474, 43.54, 0.3042 ) }
    dend_32 { pt3dadd( 446.806, 226.394, 43.4386, 0.2822 ) }
    dend_32 { pt3dadd( 447.155, 225.311, 43.2575, 0.289 ) }
    dend_32 { pt3dadd( 447.473, 224.231, 42.9929, 0.3008 ) }
    dend_32 { pt3dadd( 447.77, 223.146, 42.6628, 0.3252 ) }
    dend_32 { pt3dadd( 448.043, 222.048, 42.3021, 0.358 ) }
    dend_32 { pt3dadd( 448.359, 220.957, 41.9401, 0.4802 ) }
    dend_32 { pt3dadd( 448.84, 219.926, 41.6097, 0.4078 ) }
    dend_32 { pt3dadd( 449.411, 218.938, 41.3036, 0.3536 ) }
    dend_32 { pt3dadd( 450.047, 218.013, 40.9674, 0.3216 ) }
    dend_32 { pt3dadd( 450.618, 217.058, 40.5916, 0.3874 ) }
    dend_32 { pt3dadd( 451.036, 216.018, 40.201, 0.3594 ) }
    dend_32 { pt3dadd( 451.4, 214.954, 39.8166, 0.3494 ) }
    dend_32 { pt3dadd( 451.763, 213.889, 39.4587, 0.3554 ) }
    dend_32 { pt3dadd( 452.073, 212.81, 39.1532, 0.4756 ) }
    dend_32 { pt3dadd( 452.314, 211.714, 38.9225, 0.3996 ) }
    dend_32 { pt3dadd( 452.49, 210.591, 38.8402, 0.337 ) }
    dend_32 { pt3dadd( 452.589, 209.465, 38.9547, 0.2966 ) }
    dend_32 { pt3dadd( 452.5, 208.374, 39.2736, 0.3136 ) }
    dend_32 { pt3dadd( 452.374, 207.437, 39.8387, 0.356 ) }
    dend_32 { pt3dadd( 452.309, 206.427, 40.5174, 0.3814 ) }
    dend_32 { pt3dadd( 451.432, 206.1, 41.7743, 0.6864 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 73/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 397.383, 331.064, 49.7328, 0.3016 ) }
    dend_29 { pt3dadd( 397.762, 331.162, 49.0146, 0.6864 ) }
    dend_29 { pt3dadd( 398.443, 331.88, 48.1852, 0.4888 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 76/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 386.418, 338.918, 58.9669, 0.325 ) }
    dend_25 { pt3dadd( 386.418, 340.169, 59.078, 0.4574 ) }
    dend_25 { pt3dadd( 386.418, 341.297, 59.0862, 0.5408 ) }
    dend_25 { pt3dadd( 386.418, 342.439, 59.0663, 0.4358 ) }
    dend_25 { pt3dadd( 386.418, 343.583, 59.0486, 0.3568 ) }
    dend_25 { pt3dadd( 386.375, 344.727, 59.0355, 0.335 ) }
    dend_25 { pt3dadd( 386.109, 345.833, 59.0822, 0.3758 ) }
    dend_25 { pt3dadd( 385.377, 346.634, 59.2785, 0.5146 ) }
    dend_25 { pt3dadd( 384.691, 347.548, 59.4392, 0.4658 ) }
    dend_25 { pt3dadd( 384.001, 348.461, 59.5476, 0.4876 ) }
    dend_25 { pt3dadd( 383.206, 349.283, 59.5991, 0.4418 ) }
    dend_25 { pt3dadd( 382.42, 350.116, 59.5969, 0.5458 ) }
    dend_25 { pt3dadd( 381.85, 351.107, 59.5451, 0.5078 ) }
    dend_25 { pt3dadd( 381.28, 352.099, 59.4563, 0.4138 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 90/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 386.418, 338.918, 58.9669, 0.325 ) }
    dend_24 { pt3dadd( 386.514, 338.535, 60.3117, 0.2288 ) }
    dend_24 { pt3dadd( 386.762, 337.537, 61.4676, 0.2854 ) }
    dend_24 { pt3dadd( 387.624, 337.342, 61.9615, 0.2944 ) }
    dend_24 { pt3dadd( 388.711, 337.64, 62.4576, 0.3124 ) }
    dend_24 { pt3dadd( 389.793, 337.966, 62.942, 0.3404 ) }
    dend_24 { pt3dadd( 390.733, 338.6, 63.3623, 0.417 ) }
    dend_24 { pt3dadd( 391.621, 339.322, 63.723, 0.4402 ) }
    dend_24 { pt3dadd( 392.584, 339.935, 64.0506, 0.3732 ) }
    dend_24 { pt3dadd( 393.506, 340.579, 64.3308, 0.3258 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_24 { pt3dadd( 394.226, 341.135, 64.9048, 0.3222 ) }
    dend_24 { pt3dadd( 394.979, 341.597, 65.7336, 0.3646 ) }
    dend_24 { pt3dadd( 395.536, 342.404, 66.7002, 0.4326 ) }
    dend_24 { pt3dadd( 396.117, 343.29, 67.6886, 0.6104 ) }
    dend_24 { pt3dadd( 396.952, 344.056, 68.5586, 0.6898 ) }
    dend_24 { pt3dadd( 398.034, 344.418, 69.2709, 0.6794 ) }
    dend_24 { pt3dadd( 399.108, 344.676, 69.9191, 0.5096 ) }
    dend_24 { pt3dadd( 399.966, 345.192, 70.6398, 0.4672 ) }
    dend_24 { pt3dadd( 400.771, 345.917, 71.3605, 0.439 ) }
    dend_24 { pt3dadd( 401.431, 346.847, 71.9981, 0.371 ) }
    dend_24 { pt3dadd( 402.021, 347.781, 72.6418, 0.3216 ) }
    dend_24 { pt3dadd( 402.609, 348.644, 73.3653, 0.3144 ) }
    dend_24 { pt3dadd( 403.071, 349.675, 74.0555, 0.35 ) }
    dend_24 { pt3dadd( 403.609, 350.637, 74.7376, 0.4062 ) }
    dend_24 { pt3dadd( 404.395, 351.393, 75.4835, 0.5592 ) }
    dend_24 { pt3dadd( 405.23, 352.102, 76.2824, 0.6056 ) }
    dend_24 { pt3dadd( 406.078, 352.75, 77.1333, 0.4712 ) }
    dend_24 { pt3dadd( 406.983, 353.084, 78.0584, 0.3754 ) }
    dend_24 { pt3dadd( 407.931, 352.794, 79.0266, 0.3688 ) }
    dend_24 { pt3dadd( 408.842, 352.23, 79.9708, 0.442 ) }
    dend_24 { pt3dadd( 409.812, 351.722, 80.8436, 0.62 ) }
    dend_24 { pt3dadd( 410.785, 351.126, 81.5805, 0.746 ) }
    dend_24 { pt3dadd( 411.682, 350.499, 82.2704, 0.5968 ) }
    dend_24 { pt3dadd( 412.465, 349.823, 83.0208, 0.5754 ) }
    dend_24 { pt3dadd( 413.329, 349.184, 83.7866, 0.4424 ) }
    dend_24 { pt3dadd( 414.316, 348.689, 84.5379, 0.4196 ) }
    dend_24 { pt3dadd( 415.398, 348.456, 85.29, 0.4346 ) }
    dend_24 { pt3dadd( 416.52, 348.442, 86.0196, 0.6424 ) }
    dend_24 { pt3dadd( 417.656, 348.414, 86.6846, 0.6122 ) }
    dend_24 { pt3dadd( 418.608, 348.205, 87.4311, 0.5134 ) }
    dend_24 { pt3dadd( 419.403, 348.088, 88.4005, 0.5372 ) }
    dend_24 { pt3dadd( 420.406, 348.139, 89.4127, 0.492 ) }
    dend_24 { pt3dadd( 421.53, 348.289, 90.351, 0.3848 ) }
    dend_24 { pt3dadd( 422.546, 348.714, 91.254, 0.3 ) }
    dend_24 { pt3dadd( 423.329, 349.397, 92.206, 0.2746 ) }
    dend_24 { pt3dadd( 424.121, 349.965, 93.221, 0.2746 ) }
    dend_24 { pt3dadd( 424.415, 350.551, 94.3625, 0.2744 ) }
    dend_24 { pt3dadd( 424.672, 351.429, 95.5198, 0.2744 ) }
    dend_24 { pt3dadd( 425.491, 352.116, 96.434, 0.2742 ) }
    dend_24 { pt3dadd( 426.199, 352.972, 97.2126, 0.274 ) }
    dend_24 { pt3dadd( 426.814, 353.882, 97.9378, 0.2736 ) }
    dend_24 { pt3dadd( 427.444, 354.815, 98.5715, 0.2728 ) }
    dend_24 { pt3dadd( 428.167, 355.647, 99.197, 0.2712 ) }
    dend_24 { pt3dadd( 428.989, 356.279, 99.8956, 0.2684 ) }
    dend_24 { pt3dadd( 429.915, 356.744, 100.648, 0.2626 ) }
    dend_24 { pt3dadd( 431.042, 356.825, 101.261, 0.2542 ) }
    dend_24 { pt3dadd( 432.091, 357.222, 101.78, 0.2288 ) }
    dend_24 { pt3dadd( 432.66, 358.154, 102.742, 0.2288 ) }
    // Section: dend_22, id: dend_22, parent: dend_12 (entry count 48/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 378.614, 334.496, 54.0047, 0.4866 ) }
    dend_22 { pt3dadd( 378.37, 335.379, 52.4692, 0.4576 ) }
    dend_22 { pt3dadd( 377.958, 336.393, 51.4248, 0.5002 ) }
    dend_22 { pt3dadd( 377.489, 337.398, 50.9928, 0.463 ) }
    dend_22 { pt3dadd( 377.057, 338.402, 50.4756, 0.3682 ) }
    dend_22 { pt3dadd( 376.484, 339.305, 49.9005, 0.3164 ) }
    dend_22 { pt3dadd( 375.635, 339.947, 49.2948, 0.305 ) }
    dend_22 { pt3dadd( 374.928, 340.675, 48.8634, 0.3316 ) }
    dend_22 { pt3dadd( 374.769, 341.724, 48.6402, 0.377 ) }
    dend_22 { pt3dadd( 374.609, 342.764, 48.3176, 0.4806 ) }
    dend_22 { pt3dadd( 374.19, 343.795, 47.9405, 0.5784 ) }
    dend_22 { pt3dadd( 373.678, 344.815, 47.5936, 0.5306 ) }
    dend_22 { pt3dadd( 373.156, 345.684, 47.068, 0.4102 ) }
    dend_22 { pt3dadd( 372.591, 346.434, 46.3509, 0.3418 ) }
    dend_22 { pt3dadd( 372.595, 347.272, 45.4924, 0.3786 ) }
    dend_22 { pt3dadd( 372.953, 348.325, 44.7826, 0.339 ) }
    dend_22 { pt3dadd( 372.997, 349.439, 44.3806, 0.3304 ) }
    dend_22 { pt3dadd( 372.258, 350.293, 44.24, 0.2288 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 66/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 378.614, 334.496, 54.0047, 0.4866 ) }
    dend_13 { pt3dadd( 377.505, 334.529, 53.6903, 0.5472 ) }
    dend_13 { pt3dadd( 376.376, 334.359, 53.4587, 0.4488 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 69/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 384.471, 346.184, 44.5934, 0.3718 ) }
    dend_11 { pt3dadd( 385.331, 345.362, 43.12, 0.3664 ) }
    dend_11 { pt3dadd( 386.059, 344.49, 43.0326, 0.46 ) }
    dend_11 { pt3dadd( 386.213, 343.364, 43.0016, 0.5452 ) }
    dend_11 { pt3dadd( 386.036, 342.237, 42.9607, 0.445 ) }
    dend_11 { pt3dadd( 386.1, 341.105, 42.8658, 0.369 ) }
    dend_11 { pt3dadd( 386.065, 339.967, 42.7619, 0.3814 ) }
    dend_11 { pt3dadd( 385.871, 338.853, 42.6812, 0.3474 ) }
    dend_11 { pt3dadd( 385.871, 337.709, 42.6227, 0.3304 ) }
    dend_11 { pt3dadd( 385.871, 336.565, 42.5844, 0.305 ) }
    dend_11 { pt3dadd( 385.871, 335.421, 42.56, 0.4576 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 80/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 384.471, 346.184, 44.5934, 0.3718 ) }
    dend_10 { pt3dadd( 383.747, 347.232, 44.03, 0.4176 ) }
    dend_10 { pt3dadd( 382.987, 348.08, 43.6705, 0.4412 ) }
    dend_10 { pt3dadd( 382.035, 348.713, 43.4991, 0.3748 ) }
    dend_10 { pt3dadd( 381.029, 349.251, 43.4893, 0.3298 ) }
    dend_10 { pt3dadd( 379.98, 349.63, 43.6234, 0.3248 ) }
    dend_10 { pt3dadd( 378.854, 349.593, 43.8281, 0.393 ) }
    dend_10 { pt3dadd( 377.721, 349.627, 44.0003, 0.371 ) }
    dend_10 { pt3dadd( 376.651, 350.013, 44.1269, 0.3646 ) }
    dend_10 { pt3dadd( 375.699, 350.633, 44.1963, 0.4148 ) }
    dend_10 { pt3dadd( 374.826, 351.368, 44.2602, 0.4362 ) }
    dend_10 { pt3dadd( 373.928, 352.065, 44.366, 0.3656 ) }
    dend_10 { pt3dadd( 373.029, 352.759, 44.5102, 0.3118 ) }
    dend_10 { pt3dadd( 372.126, 353.428, 44.7118, 0.2964 ) }
    dend_10 { pt3dadd( 371.107, 353.915, 44.919, 0.316 ) }
    dend_10 { pt3dadd( 370.007, 354.225, 45.0638, 0.347 ) }
    dend_10 { pt3dadd( 368.924, 354.573, 45.138, 0.4292 ) }
    dend_10 { pt3dadd( 367.893, 355.042, 45.2046, 0.4638 ) }
    dend_10 { pt3dadd( 366.979, 355.727, 45.2497, 0.4114 ) }
    dend_10 { pt3dadd( 366.118, 356.478, 45.2668, 0.4224 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_10 { pt3dadd( 365.348, 357.322, 45.2682, 0.377 ) }
    dend_10 { pt3dadd( 364.648, 358.228, 45.2584, 0.3832 ) }
    dend_10 { pt3dadd( 363.973, 359.151, 45.2334, 0.4128 ) }
    dend_10 { pt3dadd( 363.333, 360.098, 45.1917, 0.6084 ) }
    dend_10 { pt3dadd( 362.719, 361.06, 45.1318, 0.5172 ) }
    dend_10 { pt3dadd( 362.046, 361.971, 45.0192, 0.4912 ) }
    dend_10 { pt3dadd( 361.335, 362.838, 44.8501, 0.4364 ) }
    dend_10 { pt3dadd( 360.565, 363.662, 44.681, 0.3662 ) }
    dend_10 { pt3dadd( 359.693, 364.388, 44.6054, 0.3124 ) }
    dend_10 { pt3dadd( 359.023, 365.223, 44.6569, 0.2988 ) }
    dend_10 { pt3dadd( 358.625, 366.277, 44.758, 0.3142 ) }
    dend_10 { pt3dadd( 357.96, 367.198, 44.8496, 0.3734 ) }
    dend_10 { pt3dadd( 357.168, 368.024, 44.9128, 0.3338 ) }
    dend_10 { pt3dadd( 356.413, 368.882, 44.9308, 0.3 ) }
    dend_10 { pt3dadd( 355.687, 369.766, 44.8938, 0.2746 ) }
    dend_10 { pt3dadd( 354.885, 370.577, 44.8042, 0.2746 ) }
    dend_10 { pt3dadd( 354.005, 371.301, 44.6614, 0.2746 ) }
    dend_10 { pt3dadd( 353.193, 372.071, 44.4357, 0.2746 ) }
    dend_10 { pt3dadd( 352.51, 372.96, 44.1616, 0.2746 ) }
    dend_10 { pt3dadd( 351.674, 373.596, 43.871, 0.2746 ) }
    dend_10 { pt3dadd( 350.635, 373.999, 43.5537, 0.2746 ) }
    dend_10 { pt3dadd( 349.697, 374.634, 43.2704, 0.2746 ) }
    dend_10 { pt3dadd( 348.892, 375.44, 43.0483, 0.2746 ) }
    dend_10 { pt3dadd( 348.078, 376.239, 42.8859, 0.2746 ) }
    dend_10 { pt3dadd( 347.156, 376.911, 42.7624, 0.2746 ) }
    dend_10 { pt3dadd( 346.125, 377.388, 42.6583, 0.2746 ) }
    dend_10 { pt3dadd( 345.042, 377.745, 42.5463, 0.2746 ) }
    dend_10 { pt3dadd( 344.026, 378.191, 42.364, 0.2746 ) }
    dend_10 { pt3dadd( 343.492, 379.102, 42.1733, 0.2746 ) }
    dend_10 { pt3dadd( 342.634, 379.708, 42.0274, 0.2746 ) }
    dend_10 { pt3dadd( 341.502, 379.842, 41.9278, 0.2746 ) }
    dend_10 { pt3dadd( 340.372, 380.018, 41.8718, 0.2746 ) }
    dend_10 { pt3dadd( 339.336, 380.49, 41.8558, 0.2746 ) }
    dend_10 { pt3dadd( 338.297, 380.97, 41.8746, 0.2746 ) }
    dend_10 { pt3dadd( 337.605, 381.87, 41.9152, 0.2746 ) }
    dend_10 { pt3dadd( 337.114, 382.901, 41.9717, 0.2744 ) }
    dend_10 { pt3dadd( 336.444, 383.827, 42.0456, 0.2744 ) }
    dend_10 { pt3dadd( 335.758, 384.742, 42.1386, 0.2742 ) }
    dend_10 { pt3dadd( 334.865, 385.419, 42.3256, 0.274 ) }
    dend_10 { pt3dadd( 333.976, 386.113, 42.576, 0.2736 ) }
    dend_10 { pt3dadd( 333.215, 386.965, 42.8095, 0.2728 ) }
    dend_10 { pt3dadd( 332.539, 387.886, 43.036, 0.2712 ) }
    dend_10 { pt3dadd( 332.198, 388.957, 43.2956, 0.2684 ) }
    dend_10 { pt3dadd( 331.777, 390.007, 43.5526, 0.2626 ) }
    dend_10 { pt3dadd( 331.082, 390.914, 43.743, 0.2542 ) }
    dend_10 { pt3dadd( 330.465, 391.877, 43.8796, 0.2288 ) }
    dend_10 { pt3dadd( 330.103, 392.963, 44.0322, 0.2288 ) }
    // Section: dend_8, id: dend_8, parent: dend_0 (entry count 47/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 394.535, 318.803, 58.8958, 0.8048 ) }
    dend_8 { pt3dadd( 395.146, 318.587, 59.3866, 0.6864 ) }
    dend_8 { pt3dadd( 396.164, 318.244, 60.9249, 0.5416 ) }
    dend_8 { pt3dadd( 397.249, 318.127, 61.556, 0.5272 ) }
    dend_8 { pt3dadd( 398.299, 318.348, 62.3185, 0.5472 ) }
    dend_8 { pt3dadd( 399.207, 318.654, 63.2394, 0.5862 ) }
    dend_8 { pt3dadd( 399.91, 319.35, 64.2418, 0.65 ) }
    dend_8 { pt3dadd( 400.742, 319.944, 65.2014, 0.581 ) }
    dend_8 { pt3dadd( 401.768, 319.844, 66.1097, 0.6742 ) }
    dend_8 { pt3dadd( 402.772, 319.465, 66.936, 0.69 ) }
    dend_8 { pt3dadd( 403.794, 319.075, 67.6304, 0.7952 ) }
    dend_8 { pt3dadd( 404.816, 318.572, 68.1307, 0.8502 ) }
    dend_8 { pt3dadd( 405.73, 317.928, 68.4676, 0.9464 ) }
    dend_8 { pt3dadd( 406.434, 317.024, 68.6675, 0.922 ) }
    dend_8 { pt3dadd( 407.195, 316.183, 68.7638, 0.9472 ) }
    dend_8 { pt3dadd( 408.103, 315.487, 68.7926, 0.8806 ) }
    dend_8 { pt3dadd( 409.074, 314.905, 68.7831, 0.8494 ) }
    dend_8 { pt3dadd( 410.153, 314.523, 68.7532, 0.8006 ) }
    dend_8 { pt3dadd( 411.237, 314.161, 68.7072, 0.8964 ) }
    dend_8 { pt3dadd( 412.326, 313.808, 68.6454, 1.0834 ) }
    dend_8 { pt3dadd( 413.41, 313.45, 68.5549, 1.1566 ) }
    dend_8 { pt3dadd( 414.476, 313.069, 68.4088, 1.0186 ) }
    dend_8 { pt3dadd( 415.522, 312.643, 68.2298, 0.9464 ) }
    dend_8 { pt3dadd( 416.437, 312.024, 68.1243, 0.8378 ) }
    dend_8 { pt3dadd( 417.134, 311.232, 68.0417, 0.7412 ) }
    dend_8 { pt3dadd( 417.859, 310.48, 67.8821, 0.7414 ) }
    dend_8 { pt3dadd( 418.734, 309.817, 67.7715, 0.7858 ) }
    dend_8 { pt3dadd( 419.77, 309.386, 67.8023, 0.6542 ) }
    dend_8 { pt3dadd( 420.848, 309.181, 68.0985, 0.5334 ) }
    dend_8 { pt3dadd( 421.747, 309.272, 68.7515, 0.3992 ) }
    dend_8 { pt3dadd( 422.544, 309.502, 69.746, 0.3994 ) }
    dend_8 { pt3dadd( 423.471, 309.602, 70.9363, 0.3348 ) }
    dend_8 { pt3dadd( 424.557, 309.606, 72.0966, 0.3016 ) }
    dend_8 { pt3dadd( 425.654, 309.447, 73.1886, 0.2776 ) }
    dend_8 { pt3dadd( 426.646, 309.219, 74.3008, 0.2802 ) }
    dend_8 { pt3dadd( 427.585, 309.153, 75.4594, 0.285 ) }
    dend_8 { pt3dadd( 428.54, 309.173, 76.6464, 0.2938 ) }
    dend_8 { pt3dadd( 429.479, 309.304, 77.8599, 0.3112 ) }
    dend_8 { pt3dadd( 430.404, 309.736, 79.0269, 0.3382 ) }
    dend_8 { pt3dadd( 431.467, 309.716, 80.0195, 0.413 ) }
    dend_8 { pt3dadd( 432.503, 309.427, 80.922, 0.4328 ) }
    dend_8 { pt3dadd( 433.536, 309.191, 81.7788, 0.3594 ) }
    dend_8 { pt3dadd( 434.605, 309.149, 82.5972, 0.3 ) }
    dend_8 { pt3dadd( 434.194, 309.01, 83.155, 0.2746 ) }
    dend_8 { pt3dadd( 434.492, 308.658, 83.7169, 0.2746 ) }
    dend_8 { pt3dadd( 435.453, 308.211, 84.4052, 0.2746 ) }
    dend_8 { pt3dadd( 436.025, 307.452, 85.2337, 0.2746 ) }
    dend_8 { pt3dadd( 436.362, 306.552, 86.1829, 0.2746 ) }
    dend_8 { pt3dadd( 436.669, 305.64, 87.2161, 0.2746 ) }
    dend_8 { pt3dadd( 437.259, 304.765, 88.2199, 0.2746 ) }
    dend_8 { pt3dadd( 438.152, 304.069, 89.0182, 0.2746 ) }
    dend_8 { pt3dadd( 439.131, 303.491, 89.6647, 0.2744 ) }
    dend_8 { pt3dadd( 440.156, 303.073, 90.258, 0.2744 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_8 { pt3dadd( 441.172, 302.626, 90.8258, 0.2742 ) }
    dend_8 { pt3dadd( 441.931, 301.786, 91.3133, 0.274 ) }
    dend_8 { pt3dadd( 442.781, 301.025, 91.7935, 0.2736 ) }
    dend_8 { pt3dadd( 443.833, 300.673, 92.3569, 0.2728 ) }
    dend_8 { pt3dadd( 444.897, 300.342, 92.9992, 0.2712 ) }
    dend_8 { pt3dadd( 445.848, 300.035, 93.7874, 0.2684 ) }
    dend_8 { pt3dadd( 446.694, 299.75, 94.7223, 0.2626 ) }
    dend_8 { pt3dadd( 447.647, 299.4, 95.6687, 0.2542 ) }
    dend_8 { pt3dadd( 448.693, 298.975, 96.4566, 0.2288 ) }
    dend_8 { pt3dadd( 449.738, 298.552, 97.7004, 0.2288 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 10/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 394.535, 318.803, 58.8958, 0.8048 ) }
    dend_1 { pt3dadd( 394.959, 317.744, 58.9425, 0.7684 ) }
    dend_1 { pt3dadd( 395.183, 316.623, 59.0005, 0.5898 ) }
    dend_1 { pt3dadd( 395.379, 315.497, 59.0814, 0.5708 ) }
    dend_1 { pt3dadd( 395.372, 314.358, 59.1895, 0.622 ) }
    dend_1 { pt3dadd( 395.186, 313.234, 59.3342, 0.7538 ) }
    dend_1 { pt3dadd( 395.245, 312.116, 59.563, 0.8204 ) }
    dend_1 { pt3dadd( 395.48, 311.072, 59.9189, 0.8908 ) }
    dend_1 { pt3dadd( 395.561, 309.963, 60.3042, 0.822 ) }
    dend_1 { pt3dadd( 395.428, 308.836, 60.6046, 0.7454 ) }
    dend_1 { pt3dadd( 394.988, 307.8, 60.7858, 0.5864 ) }
    dend_1 { pt3dadd( 394.364, 306.856, 60.9025, 0.6014 ) }
    dend_1 { pt3dadd( 393.814, 305.88, 61.0873, 0.7282 ) }
    dend_1 { pt3dadd( 393.645, 304.787, 61.3561, 0.7114 ) }
    dend_1 { pt3dadd( 393.894, 303.682, 61.6885, 0.5304 ) }
    dend_1 { pt3dadd( 394.207, 302.796, 62.0651, 0.4648 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 26/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 398.443, 331.88, 48.1852, 0.4888 ) }
    dend_31 { pt3dadd( 399.154, 332.249, 47.8335, 0.4028 ) }
    dend_31 { pt3dadd( 400.178, 332.007, 47.6588, 0.4456 ) }
    dend_31 { pt3dadd( 400.911, 331.137, 47.5222, 0.458 ) }
    dend_31 { pt3dadd( 401.514, 330.254, 47.2419, 0.577 ) }
    dend_31 { pt3dadd( 402.269, 329.486, 46.8776, 0.5606 ) }
    dend_31 { pt3dadd( 403.228, 328.9, 46.536, 0.537 ) }
    dend_31 { pt3dadd( 404.365, 328.787, 46.251, 0.46 ) }
    dend_31 { pt3dadd( 405.508, 328.776, 46.0345, 0.4792 ) }
    dend_31 { pt3dadd( 406.622, 328.724, 45.9542, 0.643 ) }
    dend_31 { pt3dadd( 407.706, 328.363, 45.8884, 0.7822 ) }
    dend_31 { pt3dadd( 408.617, 327.672, 45.7954, 0.6956 ) }
    dend_31 { pt3dadd( 409.461, 326.904, 45.6313, 0.6056 ) }
    dend_31 { pt3dadd( 410.387, 326.267, 45.3401, 0.5536 ) }
    dend_31 { pt3dadd( 411.397, 325.887, 44.8787, 0.5872 ) }
    dend_31 { pt3dadd( 412.43, 325.542, 44.3094, 0.4754 ) }
    dend_31 { pt3dadd( 413.461, 325.201, 43.6881, 0.4262 ) }
    dend_31 { pt3dadd( 414.51, 325.164, 43.024, 0.4824 ) }
    dend_31 { pt3dadd( 415.575, 324.887, 42.53, 0.558 ) }
    dend_31 { pt3dadd( 416.217, 323.951, 42.1005, 0.6084 ) }
    dend_31 { pt3dadd( 417.141, 323.291, 41.72, 0.6798 ) }
    dend_31 { pt3dadd( 418.226, 322.964, 41.3633, 0.6916 ) }
    dend_31 { pt3dadd( 419.301, 322.8, 40.9478, 0.6112 ) }
    dend_31 { pt3dadd( 420.353, 322.491, 40.5031, 0.5006 ) }
    dend_31 { pt3dadd( 421.18, 321.705, 40.119, 0.5678 ) }
    dend_31 { pt3dadd( 422.152, 321.123, 39.8213, 0.5134 ) }
    dend_31 { pt3dadd( 423.293, 321.099, 39.5906, 0.5954 ) }
    dend_31 { pt3dadd( 424.406, 321.285, 39.3856, 0.5474 ) }
    dend_31 { pt3dadd( 425.463, 320.983, 39.1412, 0.5126 ) }
    dend_31 { pt3dadd( 426.408, 320.343, 38.948, 0.414 ) }
    dend_31 { pt3dadd( 427.234, 319.552, 38.8018, 0.3972 ) }
    dend_31 { pt3dadd( 428.016, 318.718, 38.6952, 0.4748 ) }
    dend_31 { pt3dadd( 428.729, 317.824, 38.6226, 0.5498 ) }
    dend_31 { pt3dadd( 429.523, 317.014, 38.5781, 0.5638 ) }
    dend_31 { pt3dadd( 430.583, 316.632, 38.5501, 0.7398 ) }
    dend_31 { pt3dadd( 431.703, 316.752, 38.5165, 0.796 ) }
    dend_31 { pt3dadd( 432.758, 316.31, 38.4594, 0.61 ) }
    dend_31 { pt3dadd( 433.812, 315.87, 38.381, 0.5288 ) }
    dend_31 { pt3dadd( 434.913, 315.565, 38.2945, 0.4708 ) }
    dend_31 { pt3dadd( 436.031, 315.322, 38.2052, 0.6016 ) }
    dend_31 { pt3dadd( 437.161, 315.163, 38.0912, 0.602 ) }
    dend_31 { pt3dadd( 438.289, 315.125, 37.9285, 0.6342 ) }
    dend_31 { pt3dadd( 439.415, 315.104, 37.7395, 0.5404 ) }
    dend_31 { pt3dadd( 440.547, 315.102, 37.557, 0.4266 ) }
    dend_31 { pt3dadd( 441.68, 315.102, 37.4256, 0.3808 ) }
    dend_31 { pt3dadd( 442.809, 315.259, 37.4147, 0.4096 ) }
    dend_31 { pt3dadd( 443.893, 315.562, 37.5679, 0.596 ) }
    dend_31 { pt3dadd( 444.987, 315.878, 37.807, 0.5254 ) }
    dend_31 { pt3dadd( 446.096, 316.011, 38.148, 0.356 ) }
    dend_31 { pt3dadd( 446.853, 316.476, 39.5161, 0.2288 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 76/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 398.443, 331.88, 48.1852, 0.4888 ) }
    dend_30 { pt3dadd( 398.698, 332.29, 47.56, 0.4576 ) }
    dend_30 { pt3dadd( 399.303, 333.259, 47.3298, 0.3634 ) }
    dend_30 { pt3dadd( 399.915, 334.222, 47.2167, 0.3078 ) }
    dend_30 { pt3dadd( 400.479, 335.167, 47.08, 0.289 ) }
    dend_30 { pt3dadd( 400.428, 336.225, 47.0529, 0.301 ) }
    dend_30 { pt3dadd( 400.295, 337.296, 46.8992, 0.3248 ) }
    dend_30 { pt3dadd( 400.871, 338.192, 46.6035, 0.362 ) }
    dend_30 { pt3dadd( 401.626, 338.973, 46.2342, 0.4652 ) }
    dend_30 { pt3dadd( 402.06, 340.023, 45.8335, 0.4894 ) }
    dend_30 { pt3dadd( 402.397, 341.103, 45.3998, 0.6596 ) }
    dend_30 { pt3dadd( 402.753, 342.173, 44.9599, 0.5958 ) }
    dend_30 { pt3dadd( 403.432, 342.921, 44.5024, 0.4882 ) }
    dend_30 { pt3dadd( 404.312, 343.371, 43.9362, 0.465 ) }
    dend_30 { pt3dadd( 404.903, 344.275, 43.4115, 0.4826 ) }
    dend_30 { pt3dadd( 405.073, 345.384, 42.9937, 0.4486 ) }
    dend_30 { pt3dadd( 404.962, 346.488, 42.5961, 0.4804 ) }
    dend_30 { pt3dadd( 405.049, 347.572, 42.2072, 0.5362 ) }
    dend_30 { pt3dadd( 405.333, 348.65, 41.9569, 0.4272 ) }
    dend_30 { pt3dadd( 405.915, 349.561, 41.734, 0.3412 ) }
    dend_30 { pt3dadd( 406.59, 350.471, 41.4562, 0.305 ) }
    dend_30 { pt3dadd( 406.841, 351.539, 41.2126, 0.3248 ) }
    dend_30 { pt3dadd( 406.671, 352.517, 40.8022, 0.3982 ) }
    dend_30 { pt3dadd( 407.115, 353.435, 40.2741, 0.356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_30 { pt3dadd( 407.479, 354.033, 38.3872, 0.4576 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 1/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 381.28, 352.099, 59.4563, 0.4138 ) }
    dend_27 { pt3dadd( 380.809, 353.209, 60.2493, 0.3952 ) }
    dend_27 { pt3dadd( 380.266, 354.202, 60.6225, 0.3684 ) }
    dend_27 { pt3dadd( 379.57, 355.101, 60.7835, 0.392 ) }
    dend_27 { pt3dadd( 378.864, 355.998, 60.9535, 0.5376 ) }
    dend_27 { pt3dadd( 378.217, 356.941, 61.1139, 0.542 ) }
    dend_27 { pt3dadd( 377.502, 357.82, 61.2945, 0.467 ) }
    dend_27 { pt3dadd( 376.686, 358.587, 61.5294, 0.5034 ) }
    dend_27 { pt3dadd( 375.969, 359.449, 61.7602, 0.4038 ) }
    dend_27 { pt3dadd( 375.354, 360.414, 61.9461, 0.345 ) }
    dend_27 { pt3dadd( 374.74, 361.379, 62.0917, 0.3116 ) }
    dend_27 { pt3dadd( 374.113, 362.336, 62.207, 0.3392 ) }
    dend_27 { pt3dadd( 373.363, 363.189, 62.3092, 0.4146 ) }
    dend_27 { pt3dadd( 372.453, 363.856, 62.4453, 0.436 ) }
    dend_27 { pt3dadd( 371.743, 364.7, 62.5383, 0.3652 ) }
    dend_27 { pt3dadd( 371.379, 365.763, 62.6497, 0.311 ) }
    dend_27 { pt3dadd( 371.309, 366.882, 62.8491, 0.2948 ) }
    dend_27 { pt3dadd( 370.928, 367.923, 63.0207, 0.3128 ) }
    dend_27 { pt3dadd( 369.946, 368.297, 63.2948, 0.3414 ) }
    dend_27 { pt3dadd( 368.927, 368.762, 63.6404, 0.4186 ) }
    dend_27 { pt3dadd( 367.946, 369.324, 64.0304, 0.4434 ) }
    dend_27 { pt3dadd( 367.035, 370.007, 64.4238, 0.3788 ) }
    dend_27 { pt3dadd( 366.213, 370.801, 64.7881, 0.337 ) }
    dend_27 { pt3dadd( 365.206, 371.333, 65.1574, 0.3388 ) }
    dend_27 { pt3dadd( 364.178, 371.6, 65.6614, 0.414 ) }
    dend_27 { pt3dadd( 363.62, 372.505, 66.264, 0.4348 ) }
    dend_27 { pt3dadd( 363.047, 373.487, 66.848, 0.363 ) }
    dend_27 { pt3dadd( 362.346, 374.343, 67.4909, 0.3068 ) }
    dend_27 { pt3dadd( 361.734, 375.195, 68.2368, 0.287 ) }
    dend_27 { pt3dadd( 360.878, 375.926, 68.9508, 0.2988 ) }
    dend_27 { pt3dadd( 359.907, 376.465, 69.6268, 0.3142 ) }
    dend_27 { pt3dadd( 359.423, 377.378, 70.3783, 0.3734 ) }
    dend_27 { pt3dadd( 359.017, 378.344, 71.1665, 0.3338 ) }
    dend_27 { pt3dadd( 358.699, 379.385, 71.9169, 0.3 ) }
    dend_27 { pt3dadd( 358.27, 380.423, 72.5724, 0.2746 ) }
    dend_27 { pt3dadd( 357.698, 381.399, 73.136, 0.2746 ) }
    dend_27 { pt3dadd( 356.894, 382.213, 73.584, 0.2746 ) }
    dend_27 { pt3dadd( 356.022, 382.953, 73.9511, 0.2746 ) }
    dend_27 { pt3dadd( 355.165, 383.677, 74.2851, 0.2746 ) }
    dend_27 { pt3dadd( 354.907, 384.698, 74.6822, 0.2746 ) }
    dend_27 { pt3dadd( 354.603, 385.438, 75.3612, 0.2746 ) }
    dend_27 { pt3dadd( 353.842, 386.121, 76.1519, 0.2746 ) }
    dend_27 { pt3dadd( 352.846, 386.658, 76.8662, 0.2746 ) }
    dend_27 { pt3dadd( 351.922, 387.284, 77.5606, 0.2744 ) }
    dend_27 { pt3dadd( 351.321, 388.028, 78.3507, 0.2744 ) }
    dend_27 { pt3dadd( 350.753, 388.781, 79.184, 0.2742 ) }
    dend_27 { pt3dadd( 350.764, 389.88, 79.8403, 0.274 ) }
    dend_27 { pt3dadd( 350.872, 391.019, 80.3065, 0.2736 ) }
    dend_27 { pt3dadd( 350.566, 392.12, 80.621, 0.2728 ) }
    dend_27 { pt3dadd( 350.253, 393.22, 80.8007, 0.2712 ) }
    dend_27 { pt3dadd( 349.939, 394.32, 80.8732, 0.2684 ) }
    dend_27 { pt3dadd( 349.625, 395.42, 80.8875, 0.2626 ) }
    dend_27 { pt3dadd( 349.068, 396.418, 80.8898, 0.2542 ) }
    dend_27 { pt3dadd( 348.333, 397.295, 80.8917, 0.2288 ) }
    dend_27 { pt3dadd( 347.599, 398.173, 80.8976, 0.2288 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 56/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 381.28, 352.099, 59.4563, 0.4138 ) }
    dend_26 { pt3dadd( 381.713, 352.589, 59.1856, 0.3548 ) }
    dend_26 { pt3dadd( 382.135, 353.581, 58.9347, 0.3716 ) }
    dend_26 { pt3dadd( 382.161, 354.699, 58.7712, 0.4768 ) }
    dend_26 { pt3dadd( 381.953, 355.823, 58.644, 0.5418 ) }
    dend_26 { pt3dadd( 381.721, 356.944, 58.543, 0.6072 ) }
    dend_26 { pt3dadd( 381.51, 358.067, 58.4623, 0.5372 ) }
    dend_26 { pt3dadd( 381.208, 359.166, 58.38, 0.422 ) }
    dend_26 { pt3dadd( 380.779, 360.216, 58.2439, 0.3648 ) }
    dend_26 { pt3dadd( 380.206, 361.188, 58.0563, 0.4152 ) }
    dend_26 { pt3dadd( 379.513, 362.081, 57.8421, 0.4368 ) }
    dend_26 { pt3dadd( 378.872, 363.016, 57.6657, 0.3666 ) }
    dend_26 { pt3dadd( 378.324, 364.018, 57.5624, 0.3138 ) }
    dend_26 { pt3dadd( 377.841, 365.054, 57.5061, 0.2996 ) }
    dend_26 { pt3dadd( 377.359, 366.091, 57.4739, 0.323 ) }
    dend_26 { pt3dadd( 376.663, 366.978, 57.4521, 0.354 ) }
    dend_26 { pt3dadd( 375.866, 367.797, 57.4263, 0.4728 ) }
    dend_26 { pt3dadd( 375.271, 368.757, 57.3731, 0.3942 ) }
    dend_26 { pt3dadd( 374.769, 369.782, 57.2891, 0.3274 ) }
    dend_26 { pt3dadd( 374.103, 370.689, 57.1743, 0.2782 ) }
    dend_26 { pt3dadd( 373.329, 371.521, 57.0522, 0.2814 ) }
    dend_26 { pt3dadd( 372.514, 372.319, 56.9758, 0.287 ) }
    dend_26 { pt3dadd( 371.69, 373.109, 56.9786, 0.2988 ) }
    dend_26 { pt3dadd( 370.898, 373.912, 57.0864, 0.3142 ) }
    dend_26 { pt3dadd( 370.153, 374.763, 57.2583, 0.3734 ) }
    dend_26 { pt3dadd( 369.45, 375.663, 57.433, 0.3338 ) }
    dend_26 { pt3dadd( 368.704, 376.529, 57.5887, 0.3 ) }
    dend_26 { pt3dadd( 367.915, 377.358, 57.72, 0.2746 ) }
    dend_26 { pt3dadd( 367.377, 378.342, 57.8284, 0.2746 ) }
    dend_26 { pt3dadd( 366.812, 379.31, 57.9709, 0.2746 ) }
    dend_26 { pt3dadd( 366.16, 380.223, 58.1689, 0.2746 ) }
    dend_26 { pt3dadd( 365.371, 381.04, 58.3596, 0.2746 ) }
    dend_26 { pt3dadd( 364.509, 381.792, 58.5099, 0.2746 ) }
    dend_26 { pt3dadd( 363.872, 382.73, 58.6183, 0.2746 ) }
    dend_26 { pt3dadd( 363.372, 383.758, 58.6886, 0.2746 ) }
    dend_26 { pt3dadd( 362.793, 384.743, 58.7252, 0.2746 ) }
    dend_26 { pt3dadd( 362.146, 385.686, 58.7423, 0.2746 ) }
    dend_26 { pt3dadd( 361.471, 386.61, 58.7563, 0.2746 ) }
    dend_26 { pt3dadd( 360.788, 387.528, 58.7751, 0.2746 ) }
    dend_26 { pt3dadd( 360.193, 388.504, 58.8014, 0.2746 ) }
    dend_26 { pt3dadd( 359.67, 389.521, 58.8386, 0.2746 ) }
    dend_26 { pt3dadd( 359.225, 390.574, 58.8896, 0.2746 ) }
    dend_26 { pt3dadd( 358.845, 391.653, 58.9557, 0.2746 ) }
    dend_26 { pt3dadd( 358.333, 392.672, 59.0554, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_26 { pt3dadd( 357.56, 393.49, 59.2183, 0.2746 ) }
    dend_26 { pt3dadd( 356.865, 394.387, 59.4202, 0.2746 ) }
    dend_26 { pt3dadd( 356.306, 395.38, 59.6319, 0.2746 ) }
    dend_26 { pt3dadd( 355.706, 396.354, 59.831, 0.2746 ) }
    dend_26 { pt3dadd( 355.055, 397.294, 60.0026, 0.2746 ) }
    dend_26 { pt3dadd( 354.375, 398.203, 60.1916, 0.2746 ) }
    dend_26 { pt3dadd( 353.681, 399.078, 60.4307, 0.2746 ) }
    dend_26 { pt3dadd( 353.191, 400.101, 60.643, 0.2746 ) }
    dend_26 { pt3dadd( 352.786, 401.171, 60.8062, 0.2746 ) }
    dend_26 { pt3dadd( 352.191, 402.145, 60.9283, 0.2746 ) }
    dend_26 { pt3dadd( 351.461, 403.023, 61.0176, 0.2746 ) }
    dend_26 { pt3dadd( 350.717, 403.894, 61.0828, 0.2746 ) }
    dend_26 { pt3dadd( 349.976, 404.764, 61.1383, 0.2746 ) }
    dend_26 { pt3dadd( 349.203, 405.608, 61.2035, 0.2746 ) }
    dend_26 { pt3dadd( 348.409, 406.431, 61.2833, 0.2744 ) }
    dend_26 { pt3dadd( 347.688, 407.303, 61.4331, 0.2744 ) }
    dend_26 { pt3dadd( 347.019, 408.195, 61.6678, 0.2742 ) }
    dend_26 { pt3dadd( 346.221, 409.012, 61.887, 0.274 ) }
    dend_26 { pt3dadd( 345.402, 409.808, 62.0746, 0.2736 ) }
    dend_26 { pt3dadd( 344.603, 410.626, 62.2322, 0.2728 ) }
    dend_26 { pt3dadd( 343.806, 411.449, 62.3641, 0.2712 ) }
    dend_26 { pt3dadd( 343.017, 412.241, 62.5503, 0.2684 ) }
    dend_26 { pt3dadd( 342.197, 413.008, 62.7712, 0.2626 ) }
    dend_26 { pt3dadd( 341.278, 413.686, 62.9482, 0.2542 ) }
    dend_26 { pt3dadd( 340.673, 414.65, 63.0795, 0.2288 ) }
    dend_26 { pt3dadd( 340.589, 415.79, 63.2257, 0.2288 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 26/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 376.376, 334.359, 53.4587, 0.4488 ) }
    dend_17 { pt3dadd( 375.515, 334.695, 54.3077, 0.2288 ) }
    dend_17 { pt3dadd( 374.62, 335.398, 54.7403, 0.4352 ) }
    dend_17 { pt3dadd( 373.585, 335.783, 54.9752, 0.445 ) }
    dend_17 { pt3dadd( 372.479, 336.073, 55.2034, 0.522 ) }
    dend_17 { pt3dadd( 371.337, 336.114, 55.4016, 0.6092 ) }
    dend_17 { pt3dadd( 370.206, 336.158, 55.5346, 0.5824 ) }
    dend_17 { pt3dadd( 369.105, 336.432, 55.6399, 0.5326 ) }
    dend_17 { pt3dadd( 368.089, 336.829, 55.9087, 0.4398 ) }
    dend_17 { pt3dadd( 367.286, 337.591, 56.2901, 0.5004 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 36/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 376.376, 334.359, 53.4587, 0.4488 ) }
    dend_14 { pt3dadd( 375.59, 334.636, 53.2263, 0.376 ) }
    dend_14 { pt3dadd( 374.578, 335.1, 52.9656, 0.3938 ) }
    dend_14 { pt3dadd( 373.441, 335.189, 52.7948, 0.3728 ) }
    dend_14 { pt3dadd( 372.324, 335.192, 52.586, 0.3666 ) }
    dend_14 { pt3dadd( 371.182, 335.192, 52.4068, 0.4246 ) }
    dend_14 { pt3dadd( 370.077, 335.192, 52.383, 0.4244 ) }
    dend_14 { pt3dadd( 368.941, 335.192, 52.4261, 0.4888 ) }
    dend_14 { pt3dadd( 367.837, 335.191, 52.3544, 0.522 ) }
    dend_14 { pt3dadd( 366.697, 335.179, 52.255, 0.5446 ) }
    dend_14 { pt3dadd( 365.555, 335.111, 52.1735, 0.548 ) }
    dend_14 { pt3dadd( 364.484, 334.713, 52.1063, 0.5114 ) }
    dend_14 { pt3dadd( 363.603, 333.991, 52.0778, 0.653 ) }
    dend_14 { pt3dadd( 363.056, 333.157, 51.8708, 0.584 ) }
    dend_14 { pt3dadd( 362.232, 332.367, 51.7465, 0.4652 ) }
    dend_14 { pt3dadd( 361.275, 331.741, 51.718, 0.4274 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 52/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 394.207, 302.796, 62.0651, 0.4648 ) }
    dend_7 { pt3dadd( 394.654, 302.064, 59.9875, 0.2288 ) }
    dend_7 { pt3dadd( 394.909, 301.089, 59.5829, 0.3256 ) }
    dend_7 { pt3dadd( 394.838, 299.962, 59.4695, 0.3646 ) }
    dend_7 { pt3dadd( 394.918, 298.845, 59.4135, 0.4638 ) }
    dend_7 { pt3dadd( 395.105, 297.731, 59.3149, 0.5166 ) }
    dend_7 { pt3dadd( 395.325, 296.624, 59.1601, 0.5658 ) }
    dend_7 { pt3dadd( 395.797, 295.604, 59.0052, 0.4348 ) }
    dend_7 { pt3dadd( 396.618, 294.843, 58.8781, 0.3564 ) }
    dend_7 { pt3dadd( 397.605, 294.268, 58.758, 0.3268 ) }
    dend_7 { pt3dadd( 398.427, 293.51, 58.6726, 0.397 ) }
    dend_7 { pt3dadd( 399.122, 292.612, 58.5676, 0.3784 ) }
    dend_7 { pt3dadd( 399.795, 291.69, 58.4198, 0.3782 ) }
    dend_7 { pt3dadd( 400.438, 290.745, 58.2271, 0.4408 ) }
    dend_7 { pt3dadd( 400.959, 289.752, 57.9398, 0.4792 ) }
    dend_7 { pt3dadd( 401.45, 288.746, 57.5646, 0.4708 ) }
    dend_7 { pt3dadd( 401.978, 287.767, 57.1127, 0.3838 ) }
    dend_7 { pt3dadd( 402.407, 286.757, 56.5995, 0.34 ) }
    dend_7 { pt3dadd( 402.785, 285.706, 56.0776, 0.3744 ) }
    dend_7 { pt3dadd( 402.996, 284.599, 55.6478, 0.3356 ) }
    dend_7 { pt3dadd( 403.139, 283.471, 55.3266, 0.3032 ) }
    dend_7 { pt3dadd( 403.316, 282.448, 54.9156, 0.2804 ) }
    dend_7 { pt3dadd( 403.405, 281.429, 54.3788, 0.2854 ) }
    dend_7 { pt3dadd( 403.695, 280.36, 53.8975, 0.2944 ) }
    dend_7 { pt3dadd( 404.118, 279.332, 53.4148, 0.3126 ) }
    dend_7 { pt3dadd( 404.44, 278.285, 52.9007, 0.3394 ) }
    dend_7 { pt3dadd( 405.004, 277.324, 52.4423, 0.4226 ) }
    dend_7 { pt3dadd( 405.745, 276.466, 52.0635, 0.4144 ) }
    dend_7 { pt3dadd( 406.527, 275.646, 51.816, 0.5002 ) }
    dend_7 { pt3dadd( 407.234, 274.752, 51.6334, 0.398 ) }
    dend_7 { pt3dadd( 407.893, 273.822, 51.4478, 0.3342 ) }
    dend_7 { pt3dadd( 408.53, 272.879, 51.2316, 0.2908 ) }
    dend_7 { pt3dadd( 409.036, 271.872, 50.9569, 0.3058 ) }
    dend_7 { pt3dadd( 409.25, 270.788, 50.6019, 0.3272 ) }
    dend_7 { pt3dadd( 409.157, 269.672, 50.2082, 0.3974 ) }
    dend_7 { pt3dadd( 409.022, 268.539, 49.838, 0.3792 ) }
    dend_7 { pt3dadd( 409.193, 267.428, 49.4763, 0.3798 ) }
    dend_7 { pt3dadd( 409.605, 266.38, 49.1067, 0.4424 ) }
    dend_7 { pt3dadd( 410.022, 265.319, 48.795, 0.4896 ) }
    dend_7 { pt3dadd( 410.209, 264.202, 48.4949, 0.4538 ) }
    dend_7 { pt3dadd( 410.249, 263.105, 48.1317, 0.5274 ) }
    dend_7 { pt3dadd( 410.309, 262.016, 47.7182, 0.443 ) }
    dend_7 { pt3dadd( 410.599, 260.934, 47.3388, 0.443 ) }
    dend_7 { pt3dadd( 411.125, 259.924, 47.0565, 0.3696 ) }
    dend_7 { pt3dadd( 411.89, 259.081, 46.8756, 0.3612 ) }
    dend_7 { pt3dadd( 412.674, 258.253, 46.809, 0.4132 ) }
    dend_7 { pt3dadd( 413.502, 257.504, 46.8779, 0.4094 ) }
    dend_7 { pt3dadd( 414.414, 256.825, 46.9736, 0.4318 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_7 { pt3dadd( 415.321, 256.128, 47.0218, 0.5594 ) }
    dend_7 { pt3dadd( 416.158, 255.349, 46.9963, 0.6056 ) }
    dend_7 { pt3dadd( 416.926, 254.524, 46.8415, 0.4724 ) }
    dend_7 { pt3dadd( 417.439, 253.526, 46.5752, 0.3726 ) }
    dend_7 { pt3dadd( 417.658, 252.41, 46.2655, 0.3878 ) }
    dend_7 { pt3dadd( 417.975, 251.317, 45.9166, 0.3604 ) }
    dend_7 { pt3dadd( 418.325, 250.229, 45.5834, 0.3496 ) }
    dend_7 { pt3dadd( 418.509, 249.171, 45.131, 0.3636 ) }
    dend_7 { pt3dadd( 418.919, 248.171, 44.5976, 0.4546 ) }
    dend_7 { pt3dadd( 419.647, 247.309, 44.0821, 0.5352 ) }
    dend_7 { pt3dadd( 420.41, 246.502, 43.542, 0.4256 ) }
    dend_7 { pt3dadd( 421.12, 245.613, 43.0601, 0.338 ) }
    dend_7 { pt3dadd( 421.724, 244.678, 42.5771, 0.2988 ) }
    dend_7 { pt3dadd( 422.06, 243.601, 42.1453, 0.3144 ) }
    dend_7 { pt3dadd( 421.898, 242.499, 41.7306, 0.374 ) }
    dend_7 { pt3dadd( 422.376, 241.503, 41.3246, 0.335 ) }
    dend_7 { pt3dadd( 422.883, 240.489, 41.0164, 0.302 ) }
    dend_7 { pt3dadd( 423.039, 239.373, 40.7932, 0.2782 ) }
    dend_7 { pt3dadd( 423.197, 238.244, 40.6417, 0.2814 ) }
    dend_7 { pt3dadd( 424.043, 237.76, 40.5359, 0.287 ) }
    dend_7 { pt3dadd( 425.174, 237.59, 40.4561, 0.2988 ) }
    dend_7 { pt3dadd( 425.816, 236.79, 40.3822, 0.314 ) }
    dend_7 { pt3dadd( 426.336, 235.774, 40.2707, 0.3734 ) }
    dend_7 { pt3dadd( 427.029, 234.889, 40.0952, 0.3338 ) }
    dend_7 { pt3dadd( 427.786, 234.051, 39.879, 0.2998 ) }
    dend_7 { pt3dadd( 428.621, 233.279, 39.6673, 0.2742 ) }
    dend_7 { pt3dadd( 429.29, 232.362, 39.4775, 0.274 ) }
    dend_7 { pt3dadd( 429.764, 231.325, 39.3106, 0.2736 ) }
    dend_7 { pt3dadd( 430.089, 230.335, 39.3134, 0.2728 ) }
    dend_7 { pt3dadd( 431.001, 229.753, 39.2944, 0.2712 ) }
    dend_7 { pt3dadd( 432.002, 229.287, 39.1247, 0.2684 ) }
    dend_7 { pt3dadd( 432.676, 228.44, 38.8228, 0.2626 ) }
    dend_7 { pt3dadd( 433.073, 227.43, 38.4171, 0.2542 ) }
    dend_7 { pt3dadd( 433.547, 226.414, 37.9963, 0.2288 ) }
    dend_7 { pt3dadd( 434.491, 225.792, 37.2582, 0.2288 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 35/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 394.207, 302.796, 62.0651, 0.4648 ) }
    dend_2 { pt3dadd( 393.991, 301.717, 62.54, 0.4048 ) }
    dend_2 { pt3dadd( 393.517, 300.721, 63.0717, 0.4516 ) }
    dend_2 { pt3dadd( 393.004, 299.781, 63.6493, 0.4574 ) }
    dend_2 { pt3dadd( 392.598, 298.808, 64.2586, 0.4046 ) }
    dend_2 { pt3dadd( 392.165, 297.781, 64.8066, 0.3858 ) }
    dend_2 { pt3dadd( 391.747, 296.727, 65.2448, 0.425 ) }
    dend_2 { pt3dadd( 391.374, 295.659, 65.5127, 0.5952 ) }
    dend_2 { pt3dadd( 391.118, 294.567, 65.6037, 0.6664 ) }
    dend_2 { pt3dadd( 390.917, 293.484, 65.5575, 0.6116 ) }
    dend_2 { pt3dadd( 390.709, 292.441, 65.5124, 0.5026 ) }
    dend_2 { pt3dadd( 390.566, 291.411, 65.7048, 0.564 ) }
    dend_2 { pt3dadd( 390.56, 290.347, 66.0643, 0.5428 ) }
    dend_2 { pt3dadd( 390.553, 289.214, 66.4608, 0.474 ) }
    dend_2 { pt3dadd( 390.544, 288.522, 66.8354, 0.488 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 50/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 367.286, 337.591, 56.2901, 0.5004 ) }
    dend_19 { pt3dadd( 367.134, 337.777, 56.7266, 0.398 ) }
    dend_19 { pt3dadd( 366.427, 338.408, 57.3597, 0.3344 ) }
    dend_19 { pt3dadd( 365.359, 338.813, 57.92, 0.2914 ) }
    dend_19 { pt3dadd( 364.242, 338.913, 58.441, 0.3052 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 55/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 367.286, 337.591, 56.2901, 0.5004 ) }
    dend_18 { pt3dadd( 366.802, 336.684, 56.387, 0.5438 ) }
    dend_18 { pt3dadd( 366.053, 335.913, 57.0262, 0.5628 ) }
    dend_18 { pt3dadd( 365.53, 334.912, 57.318, 0.4612 ) }
    dend_18 { pt3dadd( 365.104, 333.863, 57.6089, 0.4776 ) }
    dend_18 { pt3dadd( 364.367, 333.084, 57.9877, 0.4298 ) }
    dend_18 { pt3dadd( 363.348, 332.812, 58.515, 0.4926 ) }
    dend_18 { pt3dadd( 362.319, 333.001, 59.1604, 0.56 ) }
    dend_18 { pt3dadd( 361.237, 333.247, 59.8248, 0.466 ) }
    dend_18 { pt3dadd( 360.408, 332.529, 60.4786, 0.4384 ) }
    dend_18 { pt3dadd( 359.645, 331.677, 61.0464, 0.3612 ) }
    dend_18 { pt3dadd( 358.836, 331.104, 61.7288, 0.3456 ) }
    dend_18 { pt3dadd( 357.822, 330.605, 62.3361, 0.3846 ) }
    dend_18 { pt3dadd( 356.702, 330.546, 62.8939, 0.3544 ) }
    dend_18 { pt3dadd( 355.702, 330.998, 63.5104, 0.3392 ) }
    dend_18 { pt3dadd( 354.913, 331.678, 64.2457, 0.3416 ) }
    dend_18 { pt3dadd( 354.165, 332.486, 65.0194, 0.4266 ) }
    dend_18 { pt3dadd( 353.28, 333.076, 65.8428, 0.4218 ) }
    dend_18 { pt3dadd( 352.232, 333.252, 66.7066, 0.5142 ) }
    dend_18 { pt3dadd( 351.125, 333.081, 67.5329, 0.4234 ) }
    dend_18 { pt3dadd( 350.125, 332.874, 68.418, 0.3836 ) }
    dend_18 { pt3dadd( 349.241, 332.659, 69.4025, 0.3718 ) }
    dend_18 { pt3dadd( 348.34, 332.183, 70.3847, 0.507 ) }
    dend_18 { pt3dadd( 347.334, 331.925, 71.2678, 0.452 ) }
    dend_18 { pt3dadd( 346.329, 332.378, 72.0185, 0.461 ) }
    dend_18 { pt3dadd( 345.368, 332.97, 72.6482, 0.3978 ) }
    dend_18 { pt3dadd( 344.32, 333.275, 73.232, 0.4386 ) }
    dend_18 { pt3dadd( 343.236, 333.258, 73.8066, 0.4332 ) }
    dend_18 { pt3dadd( 342.153, 332.983, 74.3422, 0.3602 ) }
    dend_18 { pt3dadd( 341.108, 332.555, 74.8451, 0.3014 ) }
    dend_18 { pt3dadd( 340.047, 332.199, 75.341, 0.2774 ) }
    dend_18 { pt3dadd( 338.945, 332.134, 75.8321, 0.2798 ) }
    dend_18 { pt3dadd( 337.829, 332.086, 76.298, 0.2842 ) }
    dend_18 { pt3dadd( 336.81, 331.634, 76.694, 0.2924 ) }
    dend_18 { pt3dadd( 335.739, 331.296, 77.0356, 0.3074 ) }
    dend_18 { pt3dadd( 334.645, 331.442, 77.4004, 0.3374 ) }
    dend_18 { pt3dadd( 333.523, 331.509, 77.7773, 0.3814 ) }
    dend_18 { pt3dadd( 332.438, 331.199, 78.1301, 0.5186 ) }
    dend_18 { pt3dadd( 331.368, 330.815, 78.5011, 0.5046 ) }
    dend_18 { pt3dadd( 330.26, 330.645, 78.9298, 0.409 ) }
    dend_18 { pt3dadd( 329.188, 330.355, 79.413, 0.3396 ) }
    dend_18 { pt3dadd( 328.165, 329.918, 79.9266, 0.3736 ) }
    dend_18 { pt3dadd( 327.273, 329.377, 80.5207, 0.3344 ) }
    dend_18 { pt3dadd( 326.454, 328.738, 81.1686, 0.3008 ) }
    dend_18 { pt3dadd( 325.49, 328.148, 81.6911, 0.276 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_18 { pt3dadd( 324.445, 327.732, 82.0142, 0.2774 ) }
    dend_18 { pt3dadd( 323.342, 327.534, 82.1834, 0.2798 ) }
    dend_18 { pt3dadd( 322.234, 327.778, 82.341, 0.2842 ) }
    dend_18 { pt3dadd( 321.255, 328.224, 82.6378, 0.2924 ) }
    dend_18 { pt3dadd( 320.163, 328.043, 82.9514, 0.3086 ) }
    dend_18 { pt3dadd( 319.802, 327.044, 83.4299, 0.3322 ) }
    dend_18 { pt3dadd( 318.941, 326.362, 84.0014, 0.4082 ) }
    dend_18 { pt3dadd( 317.93, 325.878, 84.5888, 0.3928 ) }
    dend_18 { pt3dadd( 316.966, 325.293, 85.1514, 0.4358 ) }
    dend_18 { pt3dadd( 316.04, 324.647, 85.6716, 0.3982 ) }
    dend_18 { pt3dadd( 315.019, 324.181, 86.1806, 0.4396 ) }
    dend_18 { pt3dadd( 313.962, 323.818, 86.672, 0.4348 ) }
    dend_18 { pt3dadd( 312.99, 323.262, 87.1508, 0.3632 ) }
    dend_18 { pt3dadd( 312.072, 322.618, 87.614, 0.3074 ) }
    dend_18 { pt3dadd( 311.108, 322.034, 88.0474, 0.2882 ) }
    dend_18 { pt3dadd( 310.247, 321.376, 88.4912, 0.2996 ) }
    dend_18 { pt3dadd( 309.449, 320.617, 88.7435, 0.3222 ) }
    dend_18 { pt3dadd( 308.85, 319.682, 88.9426, 0.3574 ) }
    dend_18 { pt3dadd( 308.29, 318.762, 89.2629, 0.4552 ) }
    dend_18 { pt3dadd( 307.565, 317.912, 89.6398, 0.4772 ) }
    dend_18 { pt3dadd( 306.979, 316.996, 90.0645, 0.6062 ) }
    dend_18 { pt3dadd( 306.685, 315.897, 90.4613, 0.6464 ) }
    dend_18 { pt3dadd( 306.384, 314.849, 90.9143, 0.5422 ) }
    dend_18 { pt3dadd( 305.717, 314.067, 91.4068, 0.53 ) }
    dend_18 { pt3dadd( 304.726, 313.546, 91.7843, 0.5446 ) }
    dend_18 { pt3dadd( 303.669, 313.191, 91.9976, 0.6198 ) }
    dend_18 { pt3dadd( 302.562, 312.982, 92.1757, 0.5256 ) }
    dend_18 { pt3dadd( 301.46, 312.758, 92.4081, 0.5698 ) }
    dend_18 { pt3dadd( 300.364, 312.476, 92.6464, 0.505 ) }
    dend_18 { pt3dadd( 299.272, 312.134, 92.8684, 0.4098 ) }
    dend_18 { pt3dadd( 298.161, 311.929, 93.1336, 0.3412 ) }
    dend_18 { pt3dadd( 297.03, 311.897, 93.4777, 0.3764 ) }
    dend_18 { pt3dadd( 295.906, 311.814, 93.8759, 0.3396 ) }
    dend_18 { pt3dadd( 294.819, 311.513, 94.3006, 0.3104 ) }
    dend_18 { pt3dadd( 293.771, 311.107, 94.778, 0.2938 ) }
    dend_18 { pt3dadd( 292.782, 310.775, 95.38, 0.3112 ) }
    dend_18 { pt3dadd( 291.76, 310.577, 96.0604, 0.3382 ) }
    dend_18 { pt3dadd( 290.654, 310.523, 96.7193, 0.413 ) }
    dend_18 { pt3dadd( 289.542, 310.395, 97.3221, 0.4328 ) }
    dend_18 { pt3dadd( 288.458, 310.061, 97.8376, 0.3594 ) }
    dend_18 { pt3dadd( 287.392, 309.651, 98.2576, 0.3 ) }
    dend_18 { pt3dadd( 286.334, 309.237, 98.6202, 0.2746 ) }
    dend_18 { pt3dadd( 285.295, 308.82, 98.987, 0.2746 ) }
    dend_18 { pt3dadd( 284.263, 308.397, 99.3726, 0.2746 ) }
    dend_18 { pt3dadd( 283.225, 307.956, 99.7441, 0.2746 ) }
    dend_18 { pt3dadd( 282.18, 307.507, 100.085, 0.2746 ) }
    dend_18 { pt3dadd( 281.116, 307.098, 100.366, 0.2746 ) }
    dend_18 { pt3dadd( 280.038, 306.714, 100.577, 0.2746 ) }
    dend_18 { pt3dadd( 278.96, 306.331, 100.735, 0.2746 ) }
    dend_18 { pt3dadd( 277.901, 305.915, 100.891, 0.2746 ) }
    dend_18 { pt3dadd( 276.854, 305.474, 101.076, 0.2746 ) }
    dend_18 { pt3dadd( 275.807, 305.034, 101.291, 0.2746 ) }
    dend_18 { pt3dadd( 274.799, 304.508, 101.508, 0.2746 ) }
    dend_18 { pt3dadd( 273.821, 303.915, 101.712, 0.2746 ) }
    dend_18 { pt3dadd( 272.829, 303.342, 101.905, 0.2746 ) }
    dend_18 { pt3dadd( 271.771, 302.934, 102.099, 0.2746 ) }
    dend_18 { pt3dadd( 270.65, 302.725, 102.28, 0.2746 ) }
    dend_18 { pt3dadd( 269.729, 302.589, 102.628, 0.2746 ) }
    dend_18 { pt3dadd( 268.766, 302.14, 103.039, 0.2744 ) }
    dend_18 { pt3dadd( 267.741, 301.633, 103.356, 0.2744 ) }
    dend_18 { pt3dadd( 266.665, 301.24, 103.59, 0.2742 ) }
    dend_18 { pt3dadd( 265.591, 300.849, 103.747, 0.274 ) }
    dend_18 { pt3dadd( 264.516, 300.458, 103.838, 0.2736 ) }
    dend_18 { pt3dadd( 263.436, 300.082, 103.868, 0.2728 ) }
    dend_18 { pt3dadd( 262.316, 299.844, 103.876, 0.2712 ) }
    dend_18 { pt3dadd( 261.197, 299.607, 103.882, 0.2684 ) }
    dend_18 { pt3dadd( 260.078, 299.369, 103.888, 0.2626 ) }
    dend_18 { pt3dadd( 258.962, 299.123, 103.893, 0.2542 ) }
    dend_18 { pt3dadd( 257.848, 298.855, 103.899, 0.2288 ) }
    dend_18 { pt3dadd( 256.737, 298.589, 103.91, 0.2288 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 70/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 361.275, 331.741, 51.718, 0.4274 ) }
    dend_16 { pt3dadd( 360.268, 332.14, 50.1931, 0.4622 ) }
    dend_16 { pt3dadd( 359.226, 332.354, 49.154, 0.36 ) }
    dend_16 { pt3dadd( 358.108, 332.321, 48.7376, 0.3336 ) }
    dend_16 { pt3dadd( 357.07, 331.88, 48.3224, 0.409 ) }
    dend_16 { pt3dadd( 356.134, 331.37, 47.8117, 0.4018 ) }
    dend_16 { pt3dadd( 355.092, 331.372, 47.2388, 0.4166 ) }
    dend_16 { pt3dadd( 354.03, 331.66, 46.6889, 0.5364 ) }
    dend_16 { pt3dadd( 352.948, 332.015, 46.2616, 0.5384 ) }
    dend_16 { pt3dadd( 351.882, 332.343, 46.0345, 0.4666 ) }
    dend_16 { pt3dadd( 350.747, 332.441, 45.8878, 0.4716 ) }
    dend_16 { pt3dadd( 349.634, 332.45, 45.7078, 0.496 ) }
    dend_16 { pt3dadd( 348.497, 332.469, 45.5342, 0.4672 ) }
    dend_16 { pt3dadd( 347.361, 332.6, 45.3793, 0.546 ) }
    dend_16 { pt3dadd( 346.321, 333.064, 45.2236, 0.5082 ) }
    dend_16 { pt3dadd( 345.228, 333.401, 45.0598, 0.4158 ) }
    dend_16 { pt3dadd( 344.151, 333.778, 44.9064, 0.352 ) }
    dend_16 { pt3dadd( 343.051, 334.07, 44.6872, 0.3976 ) }
    dend_16 { pt3dadd( 341.935, 334.095, 44.3461, 0.3736 ) }
    dend_16 { pt3dadd( 341.045, 333.439, 43.9032, 0.399 ) }
    dend_16 { pt3dadd( 340.029, 332.996, 43.3678, 0.3342 ) }
    dend_16 { pt3dadd( 339.019, 333.073, 42.688, 0.3006 ) }
    dend_16 { pt3dadd( 338.095, 333.706, 42.0302, 0.2758 ) }
    dend_16 { pt3dadd( 337.423, 334.572, 41.3823, 0.2768 ) }
    dend_16 { pt3dadd( 336.728, 335.476, 40.8296, 0.2788 ) }
    dend_16 { pt3dadd( 335.961, 336.265, 40.2934, 0.2824 ) }
    dend_16 { pt3dadd( 335.173, 337.091, 39.8812, 0.2882 ) }
    dend_16 { pt3dadd( 334.456, 337.983, 39.5822, 0.305 ) }
    dend_16 { pt3dadd( 333.508, 338.617, 39.3338, 0.305 ) }
    dend_16 { pt3dadd( 332.446, 338.853, 38.64, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 0/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 361.275, 331.741, 51.718, 0.4274 ) }
    dend_15 { pt3dadd( 360.557, 331.556, 51.8073, 0.3878 ) }
    dend_15 { pt3dadd( 359.451, 331.37, 52.0274, 0.3958 ) }
    dend_15 { pt3dadd( 358.334, 331.139, 52.2945, 0.4734 ) }
    dend_15 { pt3dadd( 357.201, 331.076, 52.631, 0.54 ) }
    dend_15 { pt3dadd( 356.091, 331.067, 53.0312, 0.5804 ) }
    dend_15 { pt3dadd( 354.973, 331.03, 53.4517, 0.6028 ) }
    dend_15 { pt3dadd( 353.864, 330.844, 53.8698, 0.6692 ) }
    dend_15 { pt3dadd( 352.796, 330.442, 54.2181, 0.6722 ) }
    dend_15 { pt3dadd( 351.724, 330.043, 54.5056, 0.5742 ) }
    dend_15 { pt3dadd( 350.612, 329.787, 54.7263, 0.4372 ) }
    dend_15 { pt3dadd( 349.484, 329.757, 54.9856, 0.424 ) }
    dend_15 { pt3dadd( 348.553, 330.031, 55.4372, 0.3754 ) }
    dend_15 { pt3dadd( 347.509, 330.393, 55.9138, 0.4024 ) }
    dend_15 { pt3dadd( 346.371, 330.41, 56.3441, 0.3404 ) }
    dend_15 { pt3dadd( 345.273, 330.679, 56.6773, 0.312 ) }
    dend_15 { pt3dadd( 344.284, 331.187, 56.8758, 0.2966 ) }
    dend_15 { pt3dadd( 343.232, 331.583, 57.1032, 0.3168 ) }
    dend_15 { pt3dadd( 342.276, 332.069, 57.4308, 0.347 ) }
    dend_15 { pt3dadd( 341.474, 332.834, 57.8071, 0.4368 ) }
    dend_15 { pt3dadd( 340.881, 333.786, 58.2193, 0.4406 ) }
    dend_15 { pt3dadd( 340.258, 334.725, 58.6354, 0.5496 ) }
    dend_15 { pt3dadd( 339.522, 335.579, 59.0307, 0.4852 ) }
    dend_15 { pt3dadd( 338.638, 336.284, 59.3412, 0.5168 ) }
    dend_15 { pt3dadd( 337.653, 336.858, 59.5378, 0.528 ) }
    dend_15 { pt3dadd( 336.669, 337.433, 59.7092, 0.551 ) }
    dend_15 { pt3dadd( 335.734, 338.086, 59.8693, 0.5822 ) }
    dend_15 { pt3dadd( 334.877, 338.839, 60.0034, 0.4674 ) }
    dend_15 { pt3dadd( 334.032, 339.594, 60.1336, 0.4052 ) }
    dend_15 { pt3dadd( 333.022, 340.061, 60.3011, 0.4738 ) }
    dend_15 { pt3dadd( 331.906, 340.207, 60.4881, 0.396 ) }
    dend_15 { pt3dadd( 330.768, 340.282, 60.6248, 0.3304 ) }
    dend_15 { pt3dadd( 329.665, 340.547, 60.6942, 0.284 ) }
    dend_15 { pt3dadd( 328.635, 341.04, 60.7012, 0.2918 ) }
    dend_15 { pt3dadd( 327.592, 341.484, 60.6455, 0.3074 ) }
    dend_15 { pt3dadd( 326.491, 341.778, 60.5133, 0.3302 ) }
    dend_15 { pt3dadd( 325.45, 342.202, 60.2843, 0.4042 ) }
    dend_15 { pt3dadd( 324.466, 342.754, 59.9864, 0.3858 ) }
    dend_15 { pt3dadd( 323.437, 343.237, 59.6739, 0.4216 ) }
    dend_15 { pt3dadd( 322.368, 343.595, 59.3228, 0.377 ) }
    dend_15 { pt3dadd( 321.342, 344.028, 58.9291, 0.3746 ) }
    dend_15 { pt3dadd( 320.365, 344.589, 58.5329, 0.4392 ) }
    dend_15 { pt3dadd( 319.383, 345.131, 58.1361, 0.4524 ) }
    dend_15 { pt3dadd( 318.35, 345.577, 57.7601, 0.5356 ) }
    dend_15 { pt3dadd( 317.288, 345.946, 57.4087, 0.6354 ) }
    dend_15 { pt3dadd( 316.21, 346.299, 57.1278, 0.6256 ) }
    dend_15 { pt3dadd( 315.094, 346.506, 56.9495, 0.6382 ) }
    dend_15 { pt3dadd( 313.954, 346.473, 56.8638, 0.5118 ) }
    dend_15 { pt3dadd( 312.835, 346.452, 56.8921, 0.5486 ) }
    dend_15 { pt3dadd( 311.725, 346.432, 57.0002, 0.4426 ) }
    dend_15 { pt3dadd( 310.648, 346.478, 57.0478, 0.4066 ) }
    dend_15 { pt3dadd( 309.629, 346.926, 57.0212, 0.4762 ) }
    dend_15 { pt3dadd( 308.57, 347.34, 57.013, 0.4004 ) }
    dend_15 { pt3dadd( 307.448, 347.53, 57.0385, 0.3388 ) }
    dend_15 { pt3dadd( 306.305, 347.565, 57.1071, 0.299 ) }
    dend_15 { pt3dadd( 305.188, 347.404, 57.2552, 0.321 ) }
    dend_15 { pt3dadd( 304.105, 347.045, 57.5148, 0.3548 ) }
    dend_15 { pt3dadd( 303.062, 346.764, 57.9415, 0.4522 ) }
    dend_15 { pt3dadd( 302.049, 346.461, 58.525, 0.4642 ) }
    dend_15 { pt3dadd( 301.184, 345.805, 59.1657, 0.6184 ) }
    dend_15 { pt3dadd( 300.382, 345.179, 59.9102, 0.4926 ) }
    dend_15 { pt3dadd( 299.393, 344.925, 60.732, 0.4274 ) }
    dend_15 { pt3dadd( 298.292, 344.756, 61.4491, 0.4064 ) }
    dend_15 { pt3dadd( 297.306, 344.534, 62.167, 0.5672 ) }
    dend_15 { pt3dadd( 296.406, 344.918, 62.8813, 0.584 ) }
    dend_15 { pt3dadd( 295.395, 345.187, 63.5678, 0.6072 ) }
    dend_15 { pt3dadd( 294.303, 345.04, 64.1598, 0.4592 ) }
    dend_15 { pt3dadd( 293.171, 345.053, 64.5781, 0.4262 ) }
    dend_15 { pt3dadd( 292.062, 345.328, 64.8586, 0.3374 ) }
    dend_15 { pt3dadd( 290.951, 345.559, 64.997, 0.3066 ) }
    dend_15 { pt3dadd( 289.844, 345.775, 65.1515, 0.287 ) }
    dend_15 { pt3dadd( 288.749, 346.03, 65.3366, 0.2974 ) }
    dend_15 { pt3dadd( 287.717, 346.414, 65.5897, 0.3178 ) }
    dend_15 { pt3dadd( 286.608, 346.646, 65.8255, 0.3504 ) }
    dend_15 { pt3dadd( 285.516, 346.735, 65.8776, 0.4354 ) }
    dend_15 { pt3dadd( 284.609, 347.391, 65.8566, 0.4752 ) }
    dend_15 { pt3dadd( 283.641, 347.856, 65.9008, 0.4338 ) }
    dend_15 { pt3dadd( 282.546, 348.078, 65.8185, 0.4586 ) }
    dend_15 { pt3dadd( 281.41, 348.099, 65.6883, 0.4698 ) }
    dend_15 { pt3dadd( 280.273, 348.218, 65.585, 0.43 ) }
    dend_15 { pt3dadd( 279.144, 348.402, 65.518, 0.4214 ) }
    dend_15 { pt3dadd( 278.01, 348.53, 65.455, 0.5468 ) }
    dend_15 { pt3dadd( 276.877, 348.507, 65.3607, 0.5514 ) }
    dend_15 { pt3dadd( 275.759, 348.419, 65.2999, 0.5212 ) }
    dend_15 { pt3dadd( 274.689, 348.206, 65.3587, 0.4246 ) }
    dend_15 { pt3dadd( 273.585, 348.194, 65.4254, 0.4416 ) }
    dend_15 { pt3dadd( 272.596, 347.636, 65.4828, 0.4386 ) }
    dend_15 { pt3dadd( 271.645, 347.04, 65.5214, 0.37 ) }
    dend_15 { pt3dadd( 270.572, 346.939, 65.6169, 0.3196 ) }
    dend_15 { pt3dadd( 269.62, 347.499, 65.7756, 0.312 ) }
    dend_15 { pt3dadd( 268.738, 348.154, 66.0117, 0.3398 ) }
    dend_15 { pt3dadd( 267.75, 348.673, 66.2393, 0.4156 ) }
    dend_15 { pt3dadd( 266.936, 349.434, 66.4258, 0.4378 ) }
    dend_15 { pt3dadd( 266.182, 350.28, 66.6291, 0.3686 ) }
    dend_15 { pt3dadd( 265.326, 350.997, 66.8671, 0.317 ) }
    dend_15 { pt3dadd( 264.402, 351.647, 67.0606, 0.3072 ) }
    dend_15 { pt3dadd( 263.463, 352.27, 67.142, 0.3298 ) }
    dend_15 { pt3dadd( 262.446, 352.715, 67.2372, 0.4034 ) }
    dend_15 { pt3dadd( 261.378, 353.052, 67.4064, 0.3844 ) }
    dend_15 { pt3dadd( 260.289, 353.376, 67.5752, 0.419 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_15 { pt3dadd( 259.189, 353.69, 67.7163, 0.3722 ) }
    dend_15 { pt3dadd( 258.146, 354.143, 67.8471, 0.3668 ) }
    dend_15 { pt3dadd( 257.159, 354.722, 67.9706, 0.4186 ) }
    dend_15 { pt3dadd( 256.208, 355.339, 68.1184, 0.4434 ) }
    dend_15 { pt3dadd( 255.284, 355.968, 68.3211, 0.379 ) }
    dend_15 { pt3dadd( 254.576, 356.82, 68.5185, 0.336 ) }
    dend_15 { pt3dadd( 254.002, 357.811, 68.672, 0.3434 ) }
    dend_15 { pt3dadd( 253.204, 358.596, 68.7837, 0.3926 ) }
    dend_15 { pt3dadd( 252.257, 359.237, 68.8579, 0.5404 ) }
    dend_15 { pt3dadd( 251.291, 359.849, 68.8996, 0.5398 ) }
    dend_15 { pt3dadd( 250.318, 360.449, 68.9212, 0.4986 ) }
    dend_15 { pt3dadd( 249.301, 360.97, 68.9408, 0.3882 ) }
    dend_15 { pt3dadd( 248.254, 361.431, 68.9676, 0.3484 ) }
    dend_15 { pt3dadd( 247.287, 362.029, 69.0091, 0.3896 ) }
    dend_15 { pt3dadd( 246.406, 362.758, 69.0696, 0.365 ) }
    dend_15 { pt3dadd( 245.469, 363.405, 69.1376, 0.3522 ) }
    dend_15 { pt3dadd( 244.483, 363.984, 69.2205, 0.398 ) }
    dend_15 { pt3dadd( 243.546, 364.611, 69.3672, 0.3742 ) }
    dend_15 { pt3dadd( 242.604, 365.236, 69.5596, 0.4004 ) }
    dend_15 { pt3dadd( 241.615, 365.805, 69.7418, 0.3368 ) }
    dend_15 { pt3dadd( 240.643, 366.406, 69.8939, 0.3052 ) }
    dend_15 { pt3dadd( 239.729, 367.092, 70.0129, 0.2844 ) }
    dend_15 { pt3dadd( 238.755, 367.682, 70.119, 0.2926 ) }
    dend_15 { pt3dadd( 237.682, 368.029, 70.2436, 0.3092 ) }
    dend_15 { pt3dadd( 236.61, 368.389, 70.3161, 0.3334 ) }
    dend_15 { pt3dadd( 235.686, 369.031, 70.345, 0.41 ) }
    dend_15 { pt3dadd( 234.984, 369.924, 70.3802, 0.3976 ) }
    dend_15 { pt3dadd( 234.462, 370.906, 70.5015, 0.4384 ) }
    dend_15 { pt3dadd( 233.779, 371.794, 70.6692, 0.433 ) }
    dend_15 { pt3dadd( 233.33, 372.828, 70.8095, 0.3596 ) }
    dend_15 { pt3dadd( 232.972, 373.914, 70.9162, 0.3006 ) }
    dend_15 { pt3dadd( 232.587, 374.992, 70.9853, 0.2756 ) }
    dend_15 { pt3dadd( 232.005, 375.968, 70.9965, 0.2766 ) }
    dend_15 { pt3dadd( 231.368, 376.916, 70.961, 0.2784 ) }
    dend_15 { pt3dadd( 230.717, 377.855, 70.9218, 0.2818 ) }
    dend_15 { pt3dadd( 229.918, 378.667, 70.91, 0.2876 ) }
    dend_15 { pt3dadd( 228.99, 379.329, 70.9341, 0.2998 ) }
    dend_15 { pt3dadd( 228.079, 380.02, 70.971, 0.316 ) }
    dend_15 { pt3dadd( 227.203, 380.754, 71.0021, 0.377 ) }
    dend_15 { pt3dadd( 226.189, 381.267, 71.0178, 0.3408 ) }
    dend_15 { pt3dadd( 225.091, 381.583, 71.0116, 0.3124 ) }
    dend_15 { pt3dadd( 223.983, 381.864, 70.9825, 0.2988 ) }
    dend_15 { pt3dadd( 222.87, 382.129, 70.9341, 0.3142 ) }
    dend_15 { pt3dadd( 221.758, 382.395, 70.8716, 0.3734 ) }
    dend_15 { pt3dadd( 220.727, 382.828, 70.73, 0.334 ) }
    dend_15 { pt3dadd( 219.681, 383.24, 70.5356, 0.3002 ) }
    dend_15 { pt3dadd( 218.552, 383.34, 70.3819, 0.275 ) }
    dend_15 { pt3dadd( 217.423, 383.512, 70.2831, 0.2754 ) }
    dend_15 { pt3dadd( 217.06, 384.493, 70.2352, 0.2762 ) }
    dend_15 { pt3dadd( 216.714, 385.582, 70.2363, 0.2776 ) }
    dend_15 { pt3dadd( 215.953, 386.411, 70.3144, 0.2802 ) }
    dend_15 { pt3dadd( 215.12, 387.164, 70.4914, 0.2852 ) }
    dend_15 { pt3dadd( 214.288, 387.942, 70.6418, 0.2942 ) }
    dend_15 { pt3dadd( 213.48, 388.719, 70.7073, 0.3118 ) }
    dend_15 { pt3dadd( 212.688, 389.507, 70.8618, 0.3394 ) }
    dend_15 { pt3dadd( 211.891, 390.29, 71.1057, 0.415 ) }
    dend_15 { pt3dadd( 211.054, 391.05, 71.3905, 0.4364 ) }
    dend_15 { pt3dadd( 210.169, 391.772, 71.6696, 0.3662 ) }
    dend_15 { pt3dadd( 209.235, 392.415, 71.8953, 0.3128 ) }
    dend_15 { pt3dadd( 208.236, 392.956, 72.1669, 0.2992 ) }
    dend_15 { pt3dadd( 207.222, 393.439, 72.5032, 0.3152 ) }
    dend_15 { pt3dadd( 206.398, 394.221, 72.835, 0.3754 ) }
    dend_15 { pt3dadd( 205.686, 394.689, 73.3986, 0.3374 ) }
    dend_15 { pt3dadd( 204.815, 394.567, 74.0678, 0.3066 ) }
    dend_15 { pt3dadd( 204.23, 395.473, 74.5609, 0.2868 ) }
    dend_15 { pt3dadd( 204.018, 396.538, 74.8261, 0.2972 ) }
    dend_15 { pt3dadd( 203.285, 397.381, 75.0103, 0.3162 ) }
    dend_15 { pt3dadd( 202.554, 398.217, 75.0912, 0.3538 ) }
    dend_15 { pt3dadd( 201.783, 399.031, 75.0574, 0.4116 ) }
    dend_15 { pt3dadd( 200.999, 399.846, 74.9484, 0.5764 ) }
    dend_15 { pt3dadd( 200.357, 400.781, 74.7648, 0.6026 ) }
    dend_15 { pt3dadd( 199.824, 401.769, 74.4968, 0.6352 ) }
    dend_15 { pt3dadd( 199.349, 402.782, 74.1493, 0.543 ) }
    dend_15 { pt3dadd( 198.824, 403.72, 73.7254, 0.4268 ) }
    dend_15 { pt3dadd( 198.644, 404.687, 73.2312, 0.4036 ) }
    dend_15 { pt3dadd( 197.946, 405.351, 73.0444, 0.3428 ) }
    dend_15 { pt3dadd( 197.62, 406.428, 72.8412, 0.3162 ) }
    dend_15 { pt3dadd( 197.437, 407.512, 72.7373, 0.3058 ) }
    dend_15 { pt3dadd( 197.062, 408.363, 72.662, 0.3268 ) }
    dend_15 { pt3dadd( 196.475, 409.203, 72.4228, 0.3982 ) }
    dend_15 { pt3dadd( 195.797, 410.098, 72.1829, 0.3744 ) }
    dend_15 { pt3dadd( 195.173, 410.945, 71.8306, 0.4008 ) }
    dend_15 { pt3dadd( 194.242, 411.515, 71.6201, 0.3376 ) }
    dend_15 { pt3dadd( 193.562, 412.136, 71.3597, 0.3068 ) }
    dend_15 { pt3dadd( 193.196, 413.199, 71.192, 0.287 ) }
    dend_15 { pt3dadd( 192.581, 414.134, 71.0886, 0.2988 ) }
    dend_15 { pt3dadd( 192.146, 415.162, 71.0676, 0.3142 ) }
    dend_15 { pt3dadd( 191.544, 416.119, 71.1348, 0.3734 ) }
    dend_15 { pt3dadd( 190.608, 416.301, 71.3759, 0.3338 ) }
    dend_15 { pt3dadd( 189.947, 417.19, 71.5515, 0.3 ) }
    dend_15 { pt3dadd( 189.642, 418.265, 71.7573, 0.2746 ) }
    dend_15 { pt3dadd( 189.459, 419.365, 71.8878, 0.2746 ) }
    dend_15 { pt3dadd( 189.19, 420.45, 72.088, 0.2746 ) }
    dend_15 { pt3dadd( 188.986, 421.523, 72.3727, 0.2746 ) }
    dend_15 { pt3dadd( 188.765, 422.606, 72.6874, 0.2744 ) }
    dend_15 { pt3dadd( 188.441, 423.702, 72.9187, 0.2744 ) }
    dend_15 { pt3dadd( 188.114, 424.798, 73.0615, 0.2742 ) }
    dend_15 { pt3dadd( 187.788, 425.894, 73.1217, 0.274 ) }
    dend_15 { pt3dadd( 187.463, 426.981, 73.071, 0.2736 ) }
    dend_15 { pt3dadd( 187.139, 428.069, 72.9464, 0.2728 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_15 { pt3dadd( 186.788, 429.157, 72.8386, 0.2712 ) }
    dend_15 { pt3dadd( 186.416, 430.224, 72.816, 0.2684 ) }
    dend_15 { pt3dadd( 186.025, 431.29, 72.8395, 0.2626 ) }
    dend_15 { pt3dadd( 185.583, 432.346, 72.8465, 0.2542 ) }
    dend_15 { pt3dadd( 185.131, 433.396, 72.8218, 0.2288 ) }
    dend_15 { pt3dadd( 184.621, 434.346, 72.3178, 0.2288 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 6/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 390.544, 288.522, 66.8354, 0.488 ) }
    dend_6 { pt3dadd( 390.698, 287.038, 66.4238, 0.4944 ) }
    dend_6 { pt3dadd( 390.864, 285.948, 66.0761, 0.4208 ) }
    dend_6 { pt3dadd( 390.635, 284.835, 65.9296, 0.441 ) }
    dend_6 { pt3dadd( 390.564, 283.695, 65.826, 0.4062 ) }
    dend_6 { pt3dadd( 390.559, 282.551, 65.763, 0.4618 ) }
    dend_6 { pt3dadd( 390.549, 281.409, 65.7507, 0.4398 ) }
    dend_6 { pt3dadd( 390.478, 280.287, 65.8294, 0.5482 ) }
    dend_6 { pt3dadd( 390.232, 279.188, 65.9557, 0.4826 ) }
    dend_6 { pt3dadd( 390.057, 278.072, 65.9812, 0.5122 ) }
    dend_6 { pt3dadd( 389.816, 276.99, 65.9193, 0.518 ) }
    dend_6 { pt3dadd( 389.331, 275.957, 65.8596, 0.5386 ) }
    dend_6 { pt3dadd( 389.001, 274.871, 65.8403, 0.5298 ) }
    dend_6 { pt3dadd( 388.818, 273.757, 65.8708, 0.5124 ) }
    dend_6 { pt3dadd( 388.638, 272.634, 65.8658, 0.4848 ) }
    dend_6 { pt3dadd( 388.475, 271.52, 65.8241, 0.4108 ) }
    dend_6 { pt3dadd( 388.366, 270.389, 65.823, 0.385 ) }
    dend_6 { pt3dadd( 388.013, 269.31, 65.8501, 0.4834 ) }
    dend_6 { pt3dadd( 387.59, 268.26, 65.861, 0.4136 ) }
    dend_6 { pt3dadd( 387.528, 267.143, 65.8669, 0.364 ) }
    dend_6 { pt3dadd( 387.885, 266.068, 65.9182, 0.342 ) }
    dend_6 { pt3dadd( 388.454, 265.077, 66.0181, 0.4198 ) }
    dend_6 { pt3dadd( 389.012, 264.089, 66.1839, 0.4456 ) }
    dend_6 { pt3dadd( 389.451, 263.062, 66.4432, 0.3828 ) }
    dend_6 { pt3dadd( 389.812, 262.001, 66.7719, 0.3446 ) }
    dend_6 { pt3dadd( 390.257, 260.961, 67.081, 0.3516 ) }
    dend_6 { pt3dadd( 390.794, 259.957, 67.3176, 0.445 ) }
    dend_6 { pt3dadd( 391.219, 258.916, 67.5634, 0.4572 ) }
    dend_6 { pt3dadd( 391.542, 257.879, 67.914, 0.5752 ) }
    dend_6 { pt3dadd( 391.82, 256.823, 68.322, 0.5582 ) }
    dend_6 { pt3dadd( 392.076, 255.714, 68.698, 0.5278 ) }
    dend_6 { pt3dadd( 392.422, 254.632, 69.0483, 0.4668 ) }
    dend_6 { pt3dadd( 392.894, 253.596, 69.3921, 0.3754 ) }
    dend_6 { pt3dadd( 393.401, 252.575, 69.6844, 0.3294 ) }
    dend_6 { pt3dadd( 393.9, 251.564, 69.9594, 0.3314 ) }
    dend_6 { pt3dadd( 394.31, 250.555, 70.327, 0.369 ) }
    dend_6 { pt3dadd( 394.663, 249.504, 70.7367, 0.502 ) }
    dend_6 { pt3dadd( 395.023, 248.421, 71.1094, 0.443 ) }
    dend_6 { pt3dadd( 395.441, 247.357, 71.4445, 0.443 ) }
    dend_6 { pt3dadd( 395.988, 246.364, 71.7858, 0.3696 ) }
    dend_6 { pt3dadd( 396.492, 245.372, 72.1694, 0.3608 ) }
    dend_6 { pt3dadd( 396.691, 244.316, 72.6144, 0.4138 ) }
    dend_6 { pt3dadd( 396.935, 243.288, 73.1231, 0.4046 ) }
    dend_6 { pt3dadd( 397.42, 242.29, 73.61, 0.4516 ) }
    dend_6 { pt3dadd( 397.913, 241.263, 74.0051, 0.4568 ) }
    dend_6 { pt3dadd( 398.211, 240.182, 74.242, 0.405 ) }
    dend_6 { pt3dadd( 398.257, 239.061, 74.34, 0.3802 ) }
    dend_6 { pt3dadd( 398.315, 237.939, 74.4514, 0.4446 ) }
    dend_6 { pt3dadd( 398.495, 236.822, 74.6085, 0.486 ) }
    dend_6 { pt3dadd( 398.792, 235.72, 74.7933, 0.4848 ) }
    dend_6 { pt3dadd( 399.228, 234.666, 75.0257, 0.4034 ) }
    dend_6 { pt3dadd( 399.779, 233.696, 75.3684, 0.4072 ) }
    dend_6 { pt3dadd( 400.227, 232.666, 75.7691, 0.3496 ) }
    dend_6 { pt3dadd( 400.512, 231.57, 76.1872, 0.3288 ) }
    dend_6 { pt3dadd( 400.579, 230.53, 76.7166, 0.33 ) }
    dend_6 { pt3dadd( 400.471, 229.504, 77.3438, 0.3666 ) }
    dend_6 { pt3dadd( 400.721, 228.448, 77.8733, 0.4976 ) }
    dend_6 { pt3dadd( 401.29, 227.465, 78.2558, 0.4348 ) }
    dend_6 { pt3dadd( 401.768, 226.471, 78.6397, 0.428 ) }
    dend_6 { pt3dadd( 401.96, 225.39, 79.037, 0.3408 ) }
    dend_6 { pt3dadd( 401.987, 224.261, 79.3859, 0.3128 ) }
    dend_6 { pt3dadd( 401.986, 223.124, 79.6883, 0.298 ) }
    dend_6 { pt3dadd( 402.01, 221.997, 79.9856, 0.319 ) }
    dend_6 { pt3dadd( 402.028, 220.861, 80.2399, 0.3528 ) }
    dend_6 { pt3dadd( 402.01, 219.723, 80.3594, 0.4398 ) }
    dend_6 { pt3dadd( 401.971, 218.585, 80.3706, 0.4832 ) }
    dend_6 { pt3dadd( 401.749, 217.467, 80.3594, 0.4486 ) }
    dend_6 { pt3dadd( 401.515, 216.348, 80.3261, 0.4866 ) }
    dend_6 { pt3dadd( 401.349, 215.238, 80.2158, 0.518 ) }
    dend_6 { pt3dadd( 401.116, 214.122, 80.1209, 0.5374 ) }
    dend_6 { pt3dadd( 400.74, 213.046, 80.1027, 0.5336 ) }
    dend_6 { pt3dadd( 400.334, 212.019, 80.0125, 0.4908 ) }
    dend_6 { pt3dadd( 399.686, 211.38, 80.1954, 0.5844 ) }
    dend_6 { pt3dadd( 398.891, 210.586, 80.404, 0.6052 ) }
    dend_6 { pt3dadd( 398.112, 209.749, 80.5442, 0.47 ) }
    dend_6 { pt3dadd( 397.508, 208.785, 80.5868, 0.3758 ) }
    dend_6 { pt3dadd( 397.395, 207.675, 80.4768, 0.3576 ) }
    dend_6 { pt3dadd( 397.085, 206.628, 80.2323, 0.4796 ) }
    dend_6 { pt3dadd( 396.668, 205.605, 79.9047, 0.4068 ) }
    dend_6 { pt3dadd( 396.212, 204.56, 79.6488, 0.35 ) }
    dend_6 { pt3dadd( 395.754, 203.513, 79.5155, 0.3224 ) }
    dend_6 { pt3dadd( 395.258, 202.521, 79.5852, 0.3526 ) }
    dend_6 { pt3dadd( 394.648, 201.58, 79.7698, 0.4704 ) }
    dend_6 { pt3dadd( 394.529, 200.494, 80.0887, 0.3898 ) }
    dend_6 { pt3dadd( 394.504, 199.352, 80.3813, 0.3192 ) }
    dend_6 { pt3dadd( 394.504, 198.208, 80.5988, 0.2626 ) }
    dend_6 { pt3dadd( 394.504, 197.064, 80.7419, 0.2542 ) }
    dend_6 { pt3dadd( 394.504, 195.92, 80.8184, 0.2288 ) }
    dend_6 { pt3dadd( 394.504, 194.776, 80.8556, 0.2288 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 95/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 390.544, 288.522, 66.8354, 0.488 ) }
    dend_3 { pt3dadd( 390.321, 287.468, 67.2678, 0.5142 ) }
    dend_3 { pt3dadd( 389.909, 286.457, 67.702, 0.5616 ) }
    dend_3 { pt3dadd( 389.484, 285.457, 68.003, 0.427 ) }
    dend_3 { pt3dadd( 388.927, 284.583, 68.0361, 0.341 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_3 { pt3dadd( 388.358, 283.678, 67.9876, 0.3032 ) }
    dend_3 { pt3dadd( 387.865, 282.662, 68.0159, 0.3286 ) }
    dend_3 { pt3dadd( 387.252, 281.739, 68.1276, 0.3702 ) }
    dend_3 { pt3dadd( 386.56, 280.852, 68.29, 0.4742 ) }
    dend_3 { pt3dadd( 385.941, 279.897, 68.4552, 0.5368 ) }
    dend_3 { pt3dadd( 385.438, 278.872, 68.6014, 0.5982 ) }
    dend_3 { pt3dadd( 385.125, 277.779, 68.6871, 0.5204 ) }
    dend_3 { pt3dadd( 384.885, 276.682, 68.6624, 0.3902 ) }
    dend_3 { pt3dadd( 384.633, 275.58, 68.5986, 0.3102 ) }
    dend_3 { pt3dadd( 384.307, 274.579, 68.6748, 0.2934 ) }
    dend_3 { pt3dadd( 384.0, 273.543, 68.801, 0.3106 ) }
    dend_3 { pt3dadd( 383.831, 272.416, 68.8705, 0.3358 ) }
    dend_3 { pt3dadd( 383.719, 271.279, 68.892, 0.415 ) }
    dend_3 { pt3dadd( 383.515, 270.165, 68.8752, 0.4052 ) }
    dend_3 { pt3dadd( 383.079, 269.107, 68.8288, 0.4596 ) }
    dend_3 { pt3dadd( 382.622, 268.059, 68.7487, 0.4372 ) }
    dend_3 { pt3dadd( 382.237, 266.983, 68.647, 0.5374 ) }
    dend_3 { pt3dadd( 381.915, 265.891, 68.5345, 0.4922 ) }
    dend_3 { pt3dadd( 381.704, 264.775, 68.4048, 0.385 ) }
    dend_3 { pt3dadd( 381.568, 263.647, 68.2735, 0.3006 ) }
    dend_3 { pt3dadd( 381.473, 262.509, 68.1814, 0.2756 ) }
    dend_3 { pt3dadd( 381.385, 261.368, 68.1556, 0.2766 ) }
    dend_3 { pt3dadd( 381.245, 260.235, 68.2122, 0.2784 ) }
    dend_3 { pt3dadd( 381.14, 259.105, 68.348, 0.2816 ) }
    dend_3 { pt3dadd( 381.224, 257.965, 68.5322, 0.2874 ) }
    dend_3 { pt3dadd( 381.327, 256.83, 68.7742, 0.2996 ) }
    dend_3 { pt3dadd( 381.245, 255.721, 69.1132, 0.3156 ) }
    dend_3 { pt3dadd( 380.776, 254.749, 69.5607, 0.3762 ) }
    dend_3 { pt3dadd( 380.003, 253.959, 70.0655, 0.339 ) }
    dend_3 { pt3dadd( 379.243, 253.152, 70.5919, 0.3094 ) }
    dend_3 { pt3dadd( 378.648, 252.277, 71.206, 0.292 ) }
    dend_3 { pt3dadd( 378.146, 251.315, 71.8192, 0.3064 ) }
    dend_3 { pt3dadd( 377.695, 250.266, 72.3327, 0.3356 ) }
    dend_3 { pt3dadd( 377.172, 249.26, 72.7773, 0.3782 ) }
    dend_3 { pt3dadd( 376.54, 248.322, 73.1898, 0.5126 ) }
    dend_3 { pt3dadd( 375.875, 247.407, 73.5778, 0.4934 ) }
    dend_3 { pt3dadd( 375.234, 246.478, 73.9438, 0.3872 ) }
    dend_3 { pt3dadd( 374.834, 245.436, 74.298, 0.3048 ) }
    dend_3 { pt3dadd( 374.703, 244.314, 74.6494, 0.2834 ) }
    dend_3 { pt3dadd( 374.939, 243.261, 75.0089, 0.2906 ) }
    dend_3 { pt3dadd( 374.963, 242.239, 75.327, 0.3056 ) }
    dend_3 { pt3dadd( 374.459, 241.215, 75.5698, 0.3266 ) }
    dend_3 { pt3dadd( 373.859, 240.241, 75.7599, 0.3976 ) }
    dend_3 { pt3dadd( 373.092, 239.405, 75.9178, 0.3734 ) }
    dend_3 { pt3dadd( 372.257, 238.624, 76.0735, 0.3988 ) }
    dend_3 { pt3dadd( 371.456, 237.819, 76.2686, 0.3338 ) }
    dend_3 { pt3dadd( 370.678, 237.004, 76.5282, 0.3 ) }
    dend_3 { pt3dadd( 369.915, 236.189, 76.8508, 0.2746 ) }
    dend_3 { pt3dadd( 369.176, 235.338, 77.1806, 0.2746 ) }
    dend_3 { pt3dadd( 368.449, 234.458, 77.474, 0.2746 ) }
    dend_3 { pt3dadd( 367.78, 233.534, 77.7053, 0.2746 ) }
    dend_3 { pt3dadd( 367.147, 232.581, 77.87, 0.2746 ) }
    dend_3 { pt3dadd( 366.549, 231.605, 77.9836, 0.2746 ) }
    dend_3 { pt3dadd( 365.977, 230.615, 78.071, 0.2746 ) }
    dend_3 { pt3dadd( 365.26, 229.735, 78.1595, 0.2746 ) }
    dend_3 { pt3dadd( 364.43, 228.948, 78.2664, 0.2746 ) }
    dend_3 { pt3dadd( 363.531, 228.242, 78.4008, 0.2746 ) }
    dend_3 { pt3dadd( 362.571, 227.622, 78.575, 0.2746 ) }
    dend_3 { pt3dadd( 361.832, 226.919, 78.9188, 0.2746 ) }
    dend_3 { pt3dadd( 361.32, 225.997, 79.382, 0.2746 ) }
    dend_3 { pt3dadd( 360.712, 225.046, 79.805, 0.2746 ) }
    dend_3 { pt3dadd( 360.058, 224.107, 80.1564, 0.2746 ) }
    dend_3 { pt3dadd( 359.493, 223.138, 80.5042, 0.2746 ) }
    dend_3 { pt3dadd( 358.948, 222.156, 80.8405, 0.2746 ) }
    dend_3 { pt3dadd( 358.363, 221.179, 81.0958, 0.2746 ) }
    dend_3 { pt3dadd( 357.746, 220.214, 81.286, 0.2746 ) }
    dend_3 { pt3dadd( 357.055, 219.305, 81.4484, 0.2746 ) }
    dend_3 { pt3dadd( 356.348, 218.404, 81.5984, 0.2746 ) }
    dend_3 { pt3dadd( 355.68, 217.477, 81.7474, 0.2746 ) }
    dend_3 { pt3dadd( 354.987, 216.567, 81.9286, 0.2746 ) }
    dend_3 { pt3dadd( 354.157, 215.822, 82.2147, 0.2746 ) }
    dend_3 { pt3dadd( 353.297, 215.117, 82.598, 0.2746 ) }
    dend_3 { pt3dadd( 352.45, 214.394, 83.0424, 0.2746 ) }
    dend_3 { pt3dadd( 351.74, 213.583, 83.547, 0.2746 ) }
    dend_3 { pt3dadd( 351.144, 212.713, 84.0924, 0.2746 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 75/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 364.242, 338.913, 58.441, 0.3052 ) }
    dend_21 { pt3dadd( 363.426, 339.329, 58.87, 0.3336 ) }
    dend_21 { pt3dadd( 362.72, 340.197, 59.1587, 0.373 ) }
    dend_21 { pt3dadd( 362.339, 341.268, 59.3664, 0.5094 ) }
    dend_21 { pt3dadd( 362.003, 342.336, 59.5854, 0.4566 ) }
    dend_21 { pt3dadd( 361.421, 343.248, 59.9029, 0.4694 ) }
    dend_21 { pt3dadd( 360.614, 343.994, 60.2661, 0.4134 ) }
    dend_21 { pt3dadd( 359.773, 344.751, 60.5914, 0.4686 ) }
    dend_21 { pt3dadd( 359.096, 345.67, 60.853, 0.4836 ) }
    dend_21 { pt3dadd( 358.467, 346.623, 61.0515, 0.479 ) }
    dend_21 { pt3dadd( 357.799, 347.552, 61.1946, 0.3986 ) }
    dend_21 { pt3dadd( 357.186, 348.517, 61.304, 0.3688 ) }
    dend_21 { pt3dadd( 356.685, 349.541, 61.4146, 0.4222 ) }
    dend_21 { pt3dadd( 356.372, 350.625, 61.5796, 0.45 ) }
    dend_21 { pt3dadd( 356.216, 351.738, 61.8145, 0.3912 ) }
    dend_21 { pt3dadd( 355.971, 352.837, 62.0659, 0.3598 ) }
    dend_21 { pt3dadd( 355.44, 353.826, 62.3302, 0.382 ) }
    dend_21 { pt3dadd( 354.794, 354.753, 62.5747, 0.4898 ) }
    dend_21 { pt3dadd( 354.213, 355.729, 62.7698, 0.5964 ) }
    dend_21 { pt3dadd( 353.667, 356.727, 62.9454, 0.5592 ) }
    dend_21 { pt3dadd( 353.182, 357.759, 63.0736, 0.4874 ) }
    dend_21 { pt3dadd( 352.758, 358.821, 63.1543, 0.3666 ) }
    dend_21 { pt3dadd( 352.322, 359.878, 63.1957, 0.3132 ) }
    dend_21 { pt3dadd( 351.882, 360.934, 63.2094, 0.3002 ) }
    dend_21 { pt3dadd( 351.345, 361.94, 63.2033, 0.3166 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_21 { pt3dadd( 350.721, 362.9, 63.1806, 0.3782 ) }
    dend_21 { pt3dadd( 350.34, 363.944, 63.1383, 0.3426 ) }
    dend_21 { pt3dadd( 350.267, 365.082, 63.0672, 0.316 ) }
    dend_21 { pt3dadd( 350.15, 366.215, 62.9866, 0.3056 ) }
    dend_21 { pt3dadd( 349.866, 367.32, 62.9224, 0.3266 ) }
    dend_21 { pt3dadd( 349.39, 368.351, 62.8648, 0.3976 ) }
    dend_21 { pt3dadd( 348.809, 369.337, 62.7953, 0.3734 ) }
    dend_21 { pt3dadd( 348.364, 370.372, 62.6772, 0.3988 ) }
    dend_21 { pt3dadd( 348.015, 371.444, 62.4943, 0.3338 ) }
    dend_21 { pt3dadd( 347.528, 372.462, 62.3003, 0.3 ) }
    dend_21 { pt3dadd( 346.932, 373.439, 62.1303, 0.2746 ) }
    dend_21 { pt3dadd( 346.393, 374.447, 61.9836, 0.2746 ) }
    dend_21 { pt3dadd( 345.901, 375.48, 61.8596, 0.2746 ) }
    dend_21 { pt3dadd( 345.376, 376.478, 61.7084, 0.2746 ) }
    dend_21 { pt3dadd( 344.822, 377.447, 61.4964, 0.2746 ) }
    dend_21 { pt3dadd( 344.544, 378.534, 61.3032, 0.2746 ) }
    dend_21 { pt3dadd( 344.377, 379.665, 61.154, 0.2746 ) }
    dend_21 { pt3dadd( 344.273, 380.803, 61.0464, 0.2746 ) }
    dend_21 { pt3dadd( 344.241, 381.947, 60.9759, 0.2746 ) }
    dend_21 { pt3dadd( 344.148, 383.086, 60.9378, 0.2746 ) }
    dend_21 { pt3dadd( 343.682, 384.109, 60.9185, 0.2746 ) }
    dend_21 { pt3dadd( 343.06, 385.07, 60.8986, 0.2746 ) }
    dend_21 { pt3dadd( 342.419, 386.017, 60.8714, 0.2746 ) }
    dend_21 { pt3dadd( 341.786, 386.971, 60.8331, 0.2746 ) }
    dend_21 { pt3dadd( 341.296, 388.0, 60.779, 0.2746 ) }
    dend_21 { pt3dadd( 340.888, 389.069, 60.7026, 0.2746 ) }
    dend_21 { pt3dadd( 340.365, 390.083, 60.5984, 0.2746 ) }
    dend_21 { pt3dadd( 339.73, 391.033, 60.4618, 0.2746 ) }
    dend_21 { pt3dadd( 338.939, 391.841, 60.2476, 0.2746 ) }
    dend_21 { pt3dadd( 338.038, 392.501, 59.9304, 0.2746 ) }
    dend_21 { pt3dadd( 337.076, 393.051, 59.5283, 0.2746 ) }
    dend_21 { pt3dadd( 336.094, 393.565, 59.0733, 0.2746 ) }
    dend_21 { pt3dadd( 335.133, 394.138, 58.6124, 0.2746 ) }
    dend_21 { pt3dadd( 334.148, 394.688, 58.1854, 0.2746 ) }
    dend_21 { pt3dadd( 333.078, 395.07, 57.857, 0.2746 ) }
    dend_21 { pt3dadd( 331.984, 395.411, 57.6246, 0.2746 ) }
    dend_21 { pt3dadd( 331.03, 396.022, 57.4633, 0.2746 ) }
    dend_21 { pt3dadd( 330.114, 396.707, 57.3482, 0.2746 ) }
    dend_21 { pt3dadd( 329.074, 397.119, 57.202, 0.2746 ) }
    dend_21 { pt3dadd( 327.999, 397.453, 57.0125, 0.2746 ) }
    dend_21 { pt3dadd( 326.957, 397.913, 56.8417, 0.2746 ) }
    dend_21 { pt3dadd( 325.924, 398.405, 56.707, 0.2746 ) }
    dend_21 { pt3dadd( 324.977, 399.04, 56.6163, 0.2746 ) }
    dend_21 { pt3dadd( 324.06, 399.723, 56.5715, 0.2746 ) }
    dend_21 { pt3dadd( 323.195, 400.471, 56.5715, 0.2746 ) }
    dend_21 { pt3dadd( 322.346, 401.24, 56.6054, 0.2746 ) }
    dend_21 { pt3dadd( 321.483, 401.989, 56.6588, 0.2746 ) }
    dend_21 { pt3dadd( 320.613, 402.732, 56.7269, 0.2746 ) }
    dend_21 { pt3dadd( 319.566, 403.1, 56.8655, 0.2748 ) }
    dend_21 { pt3dadd( 318.475, 403.354, 57.0702, 0.275 ) }
    dend_21 { pt3dadd( 317.341, 403.421, 57.2566, 0.2754 ) }
    dend_21 { pt3dadd( 316.197, 403.426, 57.3997, 0.276 ) }
    dend_21 { pt3dadd( 315.053, 403.426, 57.5014, 0.2772 ) }
    dend_21 { pt3dadd( 313.909, 403.426, 57.5652, 0.2794 ) }
    dend_21 { pt3dadd( 312.765, 403.426, 57.5963, 0.2836 ) }
    dend_21 { pt3dadd( 311.621, 403.426, 57.6092, 0.291 ) }
    dend_21 { pt3dadd( 310.477, 403.426, 57.6209, 0.3062 ) }
    dend_21 { pt3dadd( 309.333, 403.426, 57.6366, 0.3276 ) }
    dend_21 { pt3dadd( 308.203, 403.59, 57.6596, 0.3996 ) }
    dend_21 { pt3dadd( 307.121, 403.952, 57.692, 0.377 ) }
    dend_21 { pt3dadd( 306.064, 404.388, 57.736, 0.4056 ) }
    dend_21 { pt3dadd( 305.048, 404.912, 57.7917, 0.3464 ) }
    dend_21 { pt3dadd( 304.017, 405.406, 57.8735, 0.3242 ) }
    dend_21 { pt3dadd( 302.941, 405.74, 58.021, 0.3142 ) }
    dend_21 { pt3dadd( 301.859, 406.069, 58.2078, 0.3734 ) }
    dend_21 { pt3dadd( 300.797, 406.486, 58.371, 0.3338 ) }
    dend_21 { pt3dadd( 299.749, 406.945, 58.4976, 0.3 ) }
    dend_21 { pt3dadd( 298.814, 407.597, 58.5805, 0.2746 ) }
    dend_21 { pt3dadd( 297.885, 408.267, 58.6208, 0.2746 ) }
    dend_21 { pt3dadd( 296.898, 408.843, 58.6236, 0.2746 ) }
    dend_21 { pt3dadd( 296.113, 409.662, 58.6001, 0.2746 ) }
    dend_21 { pt3dadd( 295.729, 410.728, 58.5581, 0.2746 ) }
    dend_21 { pt3dadd( 295.316, 411.794, 58.497, 0.2746 ) }
    dend_21 { pt3dadd( 294.825, 412.827, 58.4161, 0.2746 ) }
    dend_21 { pt3dadd( 294.367, 413.876, 58.3139, 0.2746 ) }
    dend_21 { pt3dadd( 293.816, 414.861, 58.128, 0.2746 ) }
    dend_21 { pt3dadd( 293.22, 415.805, 57.8472, 0.2746 ) }
    dend_21 { pt3dadd( 292.91, 416.9, 57.5725, 0.2746 ) }
    dend_21 { pt3dadd( 292.646, 418.013, 57.3154, 0.2748 ) }
    dend_21 { pt3dadd( 292.405, 419.124, 57.0273, 0.2748 ) }
    dend_21 { pt3dadd( 292.185, 420.225, 56.686, 0.2752 ) }
    dend_21 { pt3dadd( 291.966, 421.328, 56.3172, 0.2756 ) }
    dend_21 { pt3dadd( 291.75, 422.435, 55.937, 0.2766 ) }
    dend_21 { pt3dadd( 291.588, 423.549, 55.547, 0.2782 ) }
    dend_21 { pt3dadd( 291.516, 424.668, 55.1614, 0.2814 ) }
    dend_21 { pt3dadd( 291.394, 425.788, 54.8111, 0.287 ) }
    dend_21 { pt3dadd( 290.901, 426.815, 54.5728, 0.2988 ) }
    dend_21 { pt3dadd( 290.4, 427.843, 54.43, 0.314 ) }
    dend_21 { pt3dadd( 290.125, 428.953, 54.3654, 0.3734 ) }
    dend_21 { pt3dadd( 289.863, 430.066, 54.3617, 0.3338 ) }
    dend_21 { pt3dadd( 289.505, 431.152, 54.4079, 0.2998 ) }
    dend_21 { pt3dadd( 289.103, 432.223, 54.4863, 0.2744 ) }
    dend_21 { pt3dadd( 288.784, 433.315, 54.6123, 0.2742 ) }
    dend_21 { pt3dadd( 288.536, 434.415, 54.7957, 0.274 ) }
    dend_21 { pt3dadd( 288.329, 435.534, 54.9816, 0.2736 ) }
    dend_21 { pt3dadd( 288.163, 436.666, 55.1239, 0.2728 ) }
    dend_21 { pt3dadd( 288.001, 437.798, 55.2236, 0.2712 ) }
    dend_21 { pt3dadd( 287.978, 438.943, 55.2854, 0.2684 ) }
    dend_21 { pt3dadd( 287.96, 440.086, 55.3148, 0.2626 ) }
    dend_21 { pt3dadd( 287.945, 441.23, 55.3224, 0.2542 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_21 { pt3dadd( 288.181, 442.348, 55.3227, 0.2288 ) }
    dend_21 { pt3dadd( 288.859, 443.266, 55.3227, 0.2288 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 2/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 364.242, 338.913, 58.441, 0.3052 ) }
    dend_20 { pt3dadd( 363.775, 338.202, 58.5906, 0.2288 ) }
    dend_20 { pt3dadd( 364.001, 337.534, 59.8727, 0.3142 ) }
    dend_20 { pt3dadd( 365.058, 337.466, 60.4223, 0.3736 ) }
    dend_20 { pt3dadd( 365.879, 338.083, 61.0131, 0.334 ) }
    dend_20 { pt3dadd( 366.141, 339.15, 61.6288, 0.3004 ) }
    dend_20 { pt3dadd( 366.28, 340.264, 62.2779, 0.2752 ) }
    dend_20 { pt3dadd( 366.542, 341.365, 62.9314, 0.2756 ) }
    dend_20 { pt3dadd( 366.855, 342.412, 63.635, 0.2766 ) }
    dend_20 { pt3dadd( 366.725, 343.421, 64.4258, 0.2784 ) }
    dend_20 { pt3dadd( 366.808, 344.196, 65.3932, 0.2818 ) }
    dend_20 { pt3dadd( 367.122, 344.847, 66.5109, 0.2878 ) }
    dend_20 { pt3dadd( 367.663, 345.736, 67.4268, 0.3002 ) }
    dend_20 { pt3dadd( 368.234, 346.71, 68.1797, 0.3166 ) }
    dend_20 { pt3dadd( 368.709, 347.745, 68.7498, 0.3782 ) }
    dend_20 { pt3dadd( 368.996, 348.846, 69.1449, 0.3428 ) }
    dend_20 { pt3dadd( 369.148, 349.962, 69.461, 0.3162 ) }
    dend_20 { pt3dadd( 369.424, 351.018, 69.8468, 0.3056 ) }
    dend_20 { pt3dadd( 369.783, 352.055, 70.3276, 0.3268 ) }
    dend_20 { pt3dadd( 369.947, 353.151, 70.8551, 0.398 ) }
    dend_20 { pt3dadd( 369.965, 354.266, 71.412, 0.374 ) }
    dend_20 { pt3dadd( 369.941, 355.358, 72.011, 0.4 ) }
    dend_20 { pt3dadd( 369.79, 356.451, 72.569, 0.336 ) }
    dend_20 { pt3dadd( 369.483, 357.552, 73.017, 0.3038 ) }
    dend_20 { pt3dadd( 369.028, 358.582, 73.4247, 0.2818 ) }
    dend_20 { pt3dadd( 368.48, 359.541, 73.8634, 0.2878 ) }
    dend_20 { pt3dadd( 368.103, 360.567, 74.3296, 0.3002 ) }
    dend_20 { pt3dadd( 367.646, 361.584, 74.7438, 0.3168 ) }
    dend_20 { pt3dadd( 366.984, 362.491, 75.1484, 0.3784 ) }
    dend_20 { pt3dadd( 366.483, 363.478, 75.5524, 0.3432 ) }
    dend_20 { pt3dadd( 366.367, 364.588, 75.9304, 0.3174 ) }
    dend_20 { pt3dadd( 366.462, 365.714, 76.3101, 0.3062 ) }
    dend_20 { pt3dadd( 366.657, 366.824, 76.697, 0.3354 ) }
    dend_20 { pt3dadd( 367.134, 367.83, 77.0963, 0.3778 ) }
    dend_20 { pt3dadd( 367.849, 368.701, 77.5065, 0.5118 ) }
    dend_20 { pt3dadd( 368.655, 369.501, 77.9055, 0.492 ) }
    dend_20 { pt3dadd( 369.243, 370.451, 78.2695, 0.3848 ) }
    dend_20 { pt3dadd( 369.202, 371.53, 78.6218, 0.3 ) }
    dend_20 { pt3dadd( 369.236, 372.53, 79.0997, 0.2746 ) }
    dend_20 { pt3dadd( 369.221, 373.571, 79.6804, 0.2746 ) }
    dend_20 { pt3dadd( 369.495, 374.634, 80.2276, 0.2746 ) }
    dend_20 { pt3dadd( 370.364, 375.302, 80.7503, 0.2746 ) }
    dend_20 { pt3dadd( 371.284, 375.862, 81.352, 0.2746 ) }
    dend_20 { pt3dadd( 372.158, 376.463, 82.0224, 0.2746 ) }
    dend_20 { pt3dadd( 372.962, 377.212, 82.677, 0.2746 ) }
    dend_20 { pt3dadd( 373.824, 377.914, 83.3048, 0.2746 ) }
    dend_20 { pt3dadd( 374.798, 378.449, 83.9098, 0.2746 ) }
    dend_20 { pt3dadd( 375.699, 379.132, 84.441, 0.2746 ) }
    dend_20 { pt3dadd( 376.464, 379.977, 84.8624, 0.2746 ) }
    dend_20 { pt3dadd( 377.172, 380.865, 85.2522, 0.2746 ) }
    dend_20 { pt3dadd( 377.842, 381.759, 85.6806, 0.2746 ) }
    dend_20 { pt3dadd( 378.629, 382.578, 86.1025, 0.2746 ) }
    dend_20 { pt3dadd( 379.1, 383.605, 86.5264, 0.2746 ) }
    dend_20 { pt3dadd( 379.535, 384.652, 86.9971, 0.2746 ) }
    dend_20 { pt3dadd( 380.014, 385.55, 87.6333, 0.2746 ) }
    dend_20 { pt3dadd( 380.553, 386.464, 88.3501, 0.2746 ) }
    dend_20 { pt3dadd( 381.148, 387.401, 89.059, 0.2744 ) }
    dend_20 { pt3dadd( 381.627, 388.356, 89.7966, 0.2744 ) }
    dend_20 { pt3dadd( 382.506, 388.941, 90.5307, 0.2742 ) }
    dend_20 { pt3dadd( 383.293, 389.759, 91.1184, 0.274 ) }
    dend_20 { pt3dadd( 383.613, 390.853, 91.5544, 0.2736 ) }
    dend_20 { pt3dadd( 384.001, 391.913, 91.9489, 0.2728 ) }
    dend_20 { pt3dadd( 384.433, 392.942, 92.337, 0.2712 ) }
    dend_20 { pt3dadd( 385.252, 393.704, 92.7088, 0.2684 ) }
    dend_20 { pt3dadd( 386.108, 394.434, 93.0569, 0.2626 ) }
    dend_20 { pt3dadd( 386.917, 395.243, 93.3257, 0.2542 ) }
    dend_20 { pt3dadd( 387.687, 396.088, 93.5203, 0.2288 ) }
    dend_20 { pt3dadd( 388.25, 397.085, 93.7096, 0.2288 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 70/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 351.144, 212.713, 84.0924, 0.2746 ) }
    dend_5 { pt3dadd( 351.115, 212.373, 86.0328, 0.2288 ) }
    dend_5 { pt3dadd( 350.977, 211.416, 87.6579, 0.2746 ) }
    dend_5 { pt3dadd( 350.589, 210.358, 88.2963, 0.2746 ) }
    dend_5 { pt3dadd( 350.143, 209.329, 89.0372, 0.2746 ) }
    dend_5 { pt3dadd( 349.427, 208.631, 89.9769, 0.2744 ) }
    dend_5 { pt3dadd( 348.698, 207.949, 91.0686, 0.2744 ) }
    dend_5 { pt3dadd( 347.969, 207.268, 92.2625, 0.2742 ) }
    dend_5 { pt3dadd( 347.592, 206.319, 93.4962, 0.274 ) }
    dend_5 { pt3dadd( 347.311, 205.322, 94.7554, 0.2736 ) }
    dend_5 { pt3dadd( 347.031, 204.323, 96.019, 0.2728 ) }
    dend_5 { pt3dadd( 346.752, 203.324, 97.302, 0.2712 ) }
    dend_5 { pt3dadd( 346.426, 202.353, 98.5838, 0.2684 ) }
    dend_5 { pt3dadd( 345.507, 202.344, 99.8976, 0.2626 ) }
    dend_5 { pt3dadd( 344.59, 202.336, 101.2, 0.2542 ) }
    dend_5 { pt3dadd( 343.671, 202.327, 102.452, 0.2288 ) }
    dend_5 { pt3dadd( 342.753, 202.319, 105.0, 0.2288 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 87/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 351.144, 212.713, 84.0924, 0.2746 ) }
    dend_4 { pt3dadd( 350.475, 212.236, 84.5292, 0.2746 ) }
    dend_4 { pt3dadd( 349.598, 211.525, 84.7731, 0.2746 ) }
    dend_4 { pt3dadd( 348.772, 210.741, 84.8347, 0.2746 ) }
    dend_4 { pt3dadd( 347.948, 209.956, 84.7529, 0.2746 ) }
    dend_4 { pt3dadd( 347.122, 209.172, 84.5659, 0.2746 ) }
    dend_4 { pt3dadd( 346.297, 208.388, 84.3136, 0.2746 ) }
    dend_4 { pt3dadd( 345.471, 207.604, 84.0367, 0.2746 ) }
    dend_4 { pt3dadd( 344.646, 206.82, 83.7542, 0.2746 ) }
    dend_4 { pt3dadd( 343.82, 206.036, 83.4686, 0.2746 ) }
    dend_4 { pt3dadd( 342.995, 205.252, 83.1796, 0.2746 ) }
    dend_4 { pt3dadd( 342.169, 204.468, 82.8853, 0.2746 ) }
    dend_4 { pt3dadd( 341.344, 203.684, 82.5838, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_4 { pt3dadd( 340.518, 202.9, 82.2718, 0.2746 ) }
    dend_4 { pt3dadd( 339.694, 202.116, 81.9451, 0.2746 ) }
    dend_4 { pt3dadd( 338.868, 201.331, 81.599, 0.2746 ) }
    dend_4 { pt3dadd( 338.043, 200.548, 81.2291, 0.2746 ) }
    dend_4 { pt3dadd( 337.236, 199.749, 80.8198, 0.2746 ) }
    dend_4 { pt3dadd( 336.502, 198.914, 80.3345, 0.2746 ) }
    dend_4 { pt3dadd( 335.792, 198.068, 79.777, 0.2746 ) }
    dend_4 { pt3dadd( 335.079, 197.221, 79.1669, 0.2746 ) }
    dend_4 { pt3dadd( 334.368, 196.374, 78.524, 0.2746 ) }
    dend_4 { pt3dadd( 333.657, 195.528, 77.8677, 0.2746 ) }
    dend_4 { pt3dadd( 332.946, 194.681, 77.2187, 0.2746 ) }
    dend_4 { pt3dadd( 332.234, 193.835, 76.5937, 0.2746 ) }
    dend_4 { pt3dadd( 331.523, 192.987, 76.0021, 0.2746 ) }
    dend_4 { pt3dadd( 330.812, 192.141, 75.4488, 0.2746 ) }
    dend_4 { pt3dadd( 329.89, 191.51, 74.9988, 0.2746 ) }
    dend_4 { pt3dadd( 328.859, 191.014, 74.6679, 0.2746 ) }
    dend_4 { pt3dadd( 327.819, 190.538, 74.4274, 0.2746 ) }
    dend_4 { pt3dadd( 326.779, 190.061, 74.2409, 0.2746 ) }
    dend_4 { pt3dadd( 325.739, 189.584, 74.0695, 0.2746 ) }
    dend_4 { pt3dadd( 324.699, 189.108, 73.8741, 0.2746 ) }
    dend_4 { pt3dadd( 323.659, 188.631, 73.6198, 0.2746 ) }
    dend_4 { pt3dadd( 322.618, 188.154, 73.2914, 0.2746 ) }
    dend_4 { pt3dadd( 321.827, 187.433, 72.7804, 0.2746 ) }
    dend_4 { pt3dadd( 321.663, 186.548, 71.9933, 0.2746 ) }
    dend_4 { pt3dadd( 321.552, 185.654, 71.0032, 0.2748 ) }
    dend_4 { pt3dadd( 321.285, 184.746, 69.9129, 0.275 ) }
    dend_4 { pt3dadd( 320.454, 184.0, 68.9352, 0.2752 ) }
    dend_4 { pt3dadd( 319.604, 183.261, 68.0814, 0.2758 ) }
    dend_4 { pt3dadd( 318.754, 182.522, 67.352, 0.2768 ) }
    dend_4 { pt3dadd( 317.903, 181.783, 66.7131, 0.2788 ) }
    dend_4 { pt3dadd( 317.28, 180.859, 66.1167, 0.2824 ) }
    dend_4 { pt3dadd( 316.933, 179.814, 65.5284, 0.2882 ) }
    dend_4 { pt3dadd( 316.585, 178.768, 64.9418, 0.305 ) }
    dend_4 { pt3dadd( 316.236, 177.723, 64.3762, 0.305 ) }
    dend_4 { pt3dadd( 315.888, 176.677, 63.2257, 0.4576 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=dend, groups=[], sections=[dend_28, dend_23, dend_12, dend_9, dend_0, dend_32, dend_29, dend_25, dend_24, dend_22, dend_13, dend_11, dend_10, dend_8, dend_1, dend_31, dend_30, dend_27, dend_26, dend_17, dend_14, dend_7, dend_2, dend_19, dend_18, dend_16, dend_15, dend_6, dend_3, dend_21, dend_20, dend_5, dend_4]}
    dend = new SectionList()
    dend_28 dend.append()
    dend_23 dend.append()
    dend_12 dend.append()
    dend_9 dend.append()
    dend_0 dend.append()
    dend_32 dend.append()
    dend_29 dend.append()
    dend_25 dend.append()
    dend_24 dend.append()
    dend_22 dend.append()
    dend_13 dend.append()
    dend_11 dend.append()
    dend_10 dend.append()
    dend_8 dend.append()
    dend_1 dend.append()
    dend_31 dend.append()
    dend_30 dend.append()
    dend_27 dend.append()
    dend_26 dend.append()
    dend_17 dend.append()
    dend_14 dend.append()
    dend_7 dend.append()
    dend_2 dend.append()
    dend_19 dend.append()
    dend_18 dend.append()
    dend_16 dend.append()
    dend_15 dend.append()
    dend_6 dend.append()
    dend_3 dend.append()
    dend_21 dend.append()
    dend_20 dend.append()
    dend_5 dend.append()
    dend_4 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_24537, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_24537 = new SectionList()
    soma_0 OneSecGrp_SectionRef_24537.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 2.4057493  // units: uF/cm2
    forsec axon cm = 2.4057493  // units: uF/cm2
    forsec dend cm = 2.4057493  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 151.70613  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Ih
        gmax_Ih = 1.4240509E-4  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaV
        gmax_NaV = 0.04914884  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Kd
        gmax_Kd = 7.9377147E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv2like
        gmax_Kv2like = 0.22561772  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 1.2562811  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.020525401  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Im_v2
        gmax_Im_v2 = 8.7854295E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 6.319329E-9  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 1.02170404E-7  // units: S cm-2
        e_pas_nml2 = -89.617325  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 4.71987E-4  // units: S cm-2
        e_pas_nml2 = -89.617325  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 1.3029885E-6  // units: S cm-2
        e_pas_nml2 = -89.617325  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 9.997466E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 1.1684379E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_485611914
    forsec soma {
        insert CaDynamics_485611914
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_32 nseg = 7
    dend_24 nseg = 3
    dend_10 nseg = 3
    dend_8 nseg = 3
    dend_31 nseg = 3
    dend_27 nseg = 3
    dend_26 nseg = 3
    dend_7 nseg = 5
    dend_18 nseg = 7
    dend_15 nseg = 11
    dend_6 nseg = 5
    dend_3 nseg = 5
    dend_21 nseg = 7
    dend_20 nseg = 5
    dend_4 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_485611914


