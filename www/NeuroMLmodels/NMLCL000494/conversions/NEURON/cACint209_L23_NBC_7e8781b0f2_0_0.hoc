// Cell: cACint209_L23_NBC_7e8781b0f2_0_0
/*
{
  "id" : "cACint209_L23_NBC_7e8781b0f2_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-4.72306, 5.30436, 4.20388, 2.54287", "-4.25223, 4.78627, 3.78879, 4.68725", "-3.7814, 4.26817, 3.37371, 6.22673", "-3.31057, 3.75008, 2.95862, 7.64701", "-2.83974, 3.23199, 2.54353, 8.55761", "-2.36891, 2.7139, 2.12844, 8.96549", "-1.89808, 2.19581, 1.71335, 9.2975", "-1.42725, 1.67772, 1.29826, 9.48549", "-0.956417, 1.15963, 0.883172, 9.67333", "-0.485586, 0.641536, 0.468083, 9.75336", "-0.0147564, 0.123445, 0.0529936, 9.80295", "0.456074, -0.394646, -0.362095, 9.88568", "0.926904, -0.912738, -0.777184, 9.94624", "1.39773, -1.43083, -1.19227, 9.39229", "1.86856, -1.94892, -1.60736, 8.64644", "2.33939, -2.46701, -2.02245, 7.85208", "2.81022, -2.9851, -2.43754, 7.02739", "3.28105, -3.50319, -2.85263, 6.08715", "3.75188, -4.02128, -3.26772, 4.76023", "4.22271, -4.53938, -3.68281, 3.42054", "4.69354, -5.05747, -4.0979, 1.96741" ]
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-2.10822, -3.24373, -18.4649, 1.11", "-4.25845, -4.52245, -31.8024, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000363863218
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "2.32178, -5.00673, -18.1149, 1.11", "3.28752, -6.1379, -18.1077, 1.11", "5.80609, -9.04414, -18.4695, 1.11", "7.02592, -10.4388, -18.9719, 1.11", "10.0252, -13.6869, -20.5207, 0.83", "12.6303, -16.3939, -21.9631, 0.83", "14.9481, -18.6442, -23.1905, 0.83", "18.0861, -21.5254, -25.1938, 0.83", "22.3337, -25.266, -28.2002, 0.83", "24.1659, -26.8382, -29.6307, 0.83", "25.8351, -28.1677, -31.0963, 0.83", "29.2859, -30.6073, -34.2816, 0.83", "32.833, -32.8037, -37.4125, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000363863218,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "2.98178, 0.405271, -16.4649, 1.11", "4.33552, 0.028641, -16.4641, 1.11", "6.30823, -0.520197, -16.4629, 0.83", "8.28914, -1.07132, -16.4617, 0.55", "10.2141, -1.60686, -16.4606, 0.55", "12.0545, -2.1189, -16.4595, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000363863218
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-0.808223, 8.26702, 4.65513, 1.11", "-1.71767, 10.9911, 4.6969, 1.11", "-2.49344, 13.3147, 4.73253, 0.55", "-3.01979, 14.8913, 4.75671, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000363863218
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "1.24177, -5.81648, 2.24513, 1.11", "2.42409, -8.08959, 2.95707, 1.11", "3.15549, -9.5077, 3.09584, 1.11", "3.74587, -10.5134, 3.08695, 0.83", "4.5427, -11.8115, 2.98375, 0.55", "5.435, -13.1492, 2.83224, 0.28", "6.21688, -14.3105, 2.69734, 1.11", "8.17695, -17.1539, 2.28308, 0.55", "9.16226, -18.5688, 1.88107, 0.55", "10.3626, -20.5228, 0.988161, 0.83", "11.0649, -21.8648, 0.206652, 0.55", "11.7206, -23.0971, -0.696921, 0.83", "12.4764, -24.4889, -1.82937, 0.83", "14.0609, -27.4192, -4.19577, 0.55", "15.4732, -30.0812, -6.42634, 0.55", "16.0486, -31.2042, -7.38403, 0.55", "17.2591, -33.7858, -9.41498, 0.83", "17.5614, -34.4379, -9.8526, 0.55", "18.3373, -36.1583, -10.6701, 0.83", "18.9543, -37.7088, -10.9864, 0.55", "19.5945, -39.2677, -11.1913, 0.55", "20.2015, -41.0248, -11.4129, 1.11", "20.6987, -42.8867, -11.6271, 1.11", "21.0616, -44.3226, -11.8395, 0.83", "21.5218, -46.1821, -12.1674, 0.83", "22.2883, -48.8163, -12.6681, 0.55", "23.0045, -50.8118, -13.0431, 0.55", "23.4624, -51.9829, -13.2628, 0.28", "23.6551, -52.4604, -13.3519, 0.83", "24.3109, -53.9565, -13.6211, 0.55", "24.8201, -55.0216, -13.8703, 0.55", "25.4528, -56.3926, -14.2605, 0.28", "25.9528, -57.3944, -14.662, 1.11", "26.4749, -58.4163, -15.1487, 0.28", "26.8406, -59.1306, -15.5223, 0.55", "27.9042, -61.2656, -16.6851, 0.28", "28.2291, -61.97, -17.0673, 0.83", "28.9791, -63.6092, -17.9794, 0.83", "29.5781, -64.8756, -18.6461, 0.28", "29.751, -65.271, -18.8169, 0.55", "30.1135, -66.1832, -19.1035, 0.28", "30.2967, -66.65, -19.1843, 0.55", "30.7451, -67.8759, -19.336, 0.28", "30.8437, -68.1822, -19.3758, 0.55", "31.3365, -69.7661, -19.5701, 0.28", "31.6127, -70.5547, -19.6696, 0.55", "31.9525, -71.4562, -19.7797, 0.28", "32.5543, -72.9855, -19.9278, 0.83", "33.2076, -74.6252, -20.0578, 0.28", "33.6834, -75.793, -20.164, 0.55", "34.1519, -76.9123, -20.2757, 0.28", "34.577, -78.0206, -20.3918, 0.83", "35.075, -79.4007, -20.5296, 0.28", "35.44, -80.4223, -20.6132, 0.55", "36.073, -82.2866, -20.7226, 0.28", "36.2769, -82.9588, -20.7571, 0.83", "36.608, -84.1732, -20.8091, 0.83", "37.0603, -85.8183, -20.8661, 0.83", "37.558, -87.6468, -20.9091, 0.28", "37.8605, -88.5275, -20.9512, 0.83", "38.4567, -89.8174, -21.0244, 0.28", "38.7252, -90.1946, -21.086, 0.55", "39.5203, -91.027, -21.3008, 0.28", "40.1944, -91.5706, -21.6361, 0.55", "42.0388, -92.8665, -22.7769, 0.28", "43.2186, -93.6557, -23.7212, 0.83", "45.5538, -95.1949, -25.8545, 0.28", "46.0558, -95.5621, -26.3934, 0.55", "48.7864, -97.8262, -29.7463, 0.28", "49.0053, -98.0546, -30.079, 0.55", "50.4807, -100.13, -32.9703, 0.28", "50.7056, -100.573, -33.5048, 0.55", "51.1772, -101.902, -34.8385, 0.28", "51.4599, -102.858, -35.6247, 0.83", "52.2105, -105.92, -37.4965, 0.28", "52.2613, -106.119, -37.5959, 0.55", "53.2136, -109.88, -39.0085, 0.28", "53.3294, -110.314, -39.1636, 0.83", "53.8604, -112.107, -39.7203, 0.28", "54.0657, -112.801, -39.9038, 0.83", "54.7912, -115.114, -40.206, 0.28", "55.0144, -115.818, -40.291, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000363863218,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "3.45178, 1.14327, -6.46487, 0.83", "6.3899, 1.46413, -6.41032, 0.83", "9.57362, 1.81182, -6.35121, 0.83", "13.0424, 2.19063, -6.28681, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000363863218
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-4.64822, 0.231021, 13.8451, 0.83", "-5.82091, -1.74122, 13.8451, 0.83", "-7.30525, -4.23761, 13.8451, 0.83", "-8.31779, -5.94049, 13.8451, 0.83", "-10.6642, -9.88678, 13.8451, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000363863218
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-2.04822, -6.79023, -6.38487, 2.49", "-3.58155, -12.1788, -6.38487, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000363863218
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "4.69354, -5.05747, -4.0979, 0.583599", "14.7817, -16.1583, -4.0979, 0.583599", "24.8699, -27.2591, -4.0979, 0.583599" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-4.25845, -4.52245, -31.8024, 1.11", "-4.92662, 3.11618, -17.2172, 1.11", "-4.95996, 4.4866, -15.4097, 0.55", "-4.95096, 5.64884, -14.3276, 0.83", "-4.88582, 7.52602, -14.0342, 0.55", "-4.87505, 9.9718, -14.6462, 0.55", "-4.97273, 13.2516, -15.7643, 1.11", "-5.03899, 16.3589, -17.6419, 0.83", "-4.6813, 21.7949, -21.874, 0.55", "-4.42905, 23.0067, -23.2983, 0.55", "-4.16045, 23.7186, -24.5165, 0.55", "-3.7166, 24.6165, -26.3621, 0.55", "-2.92394, 25.9413, -29.2307, 0.55", "-1.6403, 27.8424, -33.1576, 0.55", "0.432877, 30.8242, -38.9307, 0.83", "2.33771, 33.6785, -44.2132, 0.28", "3.03303, 34.7648, -46.1253, 0.83", "4.53886, 37.3926, -50.5589, 0.55", "4.7753, 37.9551, -51.4079, 0.55", "5.41342, 40.5092, -55.0679, 1.11", "5.88012, 42.7076, -58.1941, 0.28", "6.08509, 43.7076, -59.7653, 0.55", "6.25264, 44.4853, -61.0725, 0.28", "6.6021, 45.8206, -63.5765, 0.55", "7.91851, 49.9712, -71.2734, 0.28", "8.65255, 51.9538, -74.8757, 0.83", "9.53391, 54.123, -78.7195, 0.28", "10.0471, 55.3743, -80.7833, 0.83", "11.9493, 60.0228, -87.7312, 0.28", "12.703, 61.968, -90.1592, 0.28", "13.5207, 64.5604, -92.6674, 1.38", "14.2933, 67.7773, -95.396, 0.55", "14.7343, 70.0337, -97.1405, 0.28", "15.0345, 72.1409, -98.5963, 0.55", "15.3646, 75.8948, -100.569, 0.28", "15.556, 78.076, -101.565, 0.83", "15.8307, 80.9129, -102.579, 0.28", "15.9512, 81.9229, -102.856, 0.55", "16.2347, 83.7215, -103.282, 0.28", "16.475, 84.8373, -103.49, 0.83", "17.8442, 90.0802, -104.311, 0.28", "18.178, 91.0802, -104.437, 0.83", "19.5159, 94.344, -104.799, 0.28", "20.129, 95.6095, -104.982, 0.55", "21.3285, 97.8521, -105.412, 0.28", "21.7135, 98.5576, -105.57, 0.55", "23.1788, 101.242, -106.163, 0.28", "23.8303, 102.381, -106.433, 0.55", "24.5766, 103.613, -106.753, 0.28", "25.6255, 105.43, -107.222, 0.55", "27.6306, 109.498, -108.177, 0.28", "28.3845, 111.311, -108.548, 0.83" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-4.25845, -4.52245, -31.8024, 0.55", "-6.76565, -3.83999, -34.0953, 0.55", "-11.159, -3.0538, -37.5747, 0.55", "-12.7565, -2.83342, -38.7434, 0.83", "-14.3785, -2.61884, -39.8461, 0.28", "-15.2364, -2.4879, -40.3987, 0.55", "-18.177, -2.01501, -42.2031, 0.28", "-19.9132, -1.73608, -43.1475, 0.55", "-22.2581, -1.49447, -44.1814, 0.28", "-23.6511, -1.30802, -44.7477, 0.55", "-26.0756, -0.862189, -45.7432, 0.28", "-26.9344, -0.658357, -46.0896, 0.55", "-28.2683, -0.246323, -46.6003, 0.28", "-29.8757, 0.190437, -47.1845, 0.55", "-32.5267, 0.808822, -48.027, 0.28", "-33.4497, 0.981484, -48.3656, 0.55", "-35.4016, 1.3032, -49.1016, 0.28", "-36.2036, 1.43691, -49.4153, 0.55", "-40.4122, 2.07158, -51.2205, 0.28", "-41.7745, 2.25851, -51.8484, 0.55", "-45.5453, 2.6755, -53.858, 0.28", "-47.6041, 2.83753, -55.0718, 0.28", "-48.6016, 2.88662, -55.8045, 0.55", "-51.498, 3.0546, -58.168, 0.28", "-52.212, 3.09997, -58.795, 0.55", "-55.5252, 3.2877, -61.9637, 0.28", "-56.9028, 3.35499, -63.3056, 0.55", "-60.8476, 3.51275, -67.3268, 0.28", "-62.7687, 3.59571, -69.3082, 0.28", "-63.818, 3.64857, -70.3744, 0.55", "-67.9207, 3.8982, -74.7454, 0.28", "-69.119, 3.98007, -76.0041, 0.28", "-69.5396, 3.99309, -76.423, 0.55", "-71.0624, 3.94896, -77.8085, 0.28", "-72.0771, 3.88699, -78.7355, 0.55", "-76.886, 3.50427, -82.9003, 0.28", "-78.4084, 3.30469, -84.1043, 0.55", "-82.4816, 2.74279, -87.1038, 0.28", "-83.8309, 2.54472, -88.0154, 0.55", "-86.9162, 2.03565, -89.9562, 0.28", "-88.1957, 1.7862, -90.7047, 0.55", "-91.2396, 1.11299, -92.1957, 0.28", "-93.6774, 0.56928, -93.4102, 0.28", "-94.6672, 0.366702, -93.9015, 0.55", "-96.3873, -0.0405249, -94.7463, 0.28", "-97.6475, -0.411819, -95.2795, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "32.833, -32.8037, -37.4125, 0.55", "33.6532, -33.4306, -38.6898, 0.55", "34.3672, -33.9397, -39.6066, 0.55", "36.9674, -35.7729, -43.4386, 0.55", "39.2602, -37.5179, -46.6507, 0.55", "40.2374, -38.2957, -48.098, 0.55", "41.1704, -39.0828, -49.4644, 0.55", "43.3098, -40.9762, -52.7023, 0.55", "45.7346, -43.312, -56.4177, 0.28", "47.8383, -45.5207, -59.4448, 0.83", "51.0457, -49.1397, -63.743, 0.55", "52.2327, -50.5324, -65.2288, 0.55", "54.0791, -53.0237, -67.3939, 0.83", "54.9727, -54.3558, -68.2833, 0.83", "55.7861, -55.6235, -68.9432, 0.55", "57.5911, -58.4829, -70.369, 1.11", "59.2751, -61.3712, -71.3212, 0.55", "60.4115, -63.33, -71.868, 0.83", "60.9532, -64.2654, -72.079, 0.83", "62.3899, -66.7323, -72.7233, 0.55", "63.5699, -68.6946, -73.3263, 0.28", "64.674, -70.316, -73.8755, 0.83", "65.6712, -71.6693, -74.3356, 0.28", "66.6437, -72.8354, -74.7347, 0.55", "69.0012, -75.4951, -75.5269, 0.28", "69.8646, -76.4251, -75.7222, 0.83", "71.4982, -78.2181, -75.9978, 0.28", "72.3841, -79.1722, -76.1147, 0.55", "73.8638, -80.7531, -76.2444, 0.28", "75.2145, -82.1358, -76.2392, 1.38", "77.3665, -84.2441, -76.0731, 0.55", "78.3248, -85.1923, -75.9644, 0.55", "79.3083, -86.159, -75.8206, 0.83", "80.4718, -87.2886, -75.609, 0.83", "81.1602, -87.9994, -75.428, 0.28", "82.1674, -89.0768, -75.1289, 0.55", "83.3555, -90.4824, -74.7611, 0.28", "83.7699, -91.0201, -74.6342, 0.28", "84.3861, -91.902, -74.4926, 0.55", "85.4691, -93.4923, -74.3551, 0.28", "86.4141, -94.7831, -74.3735, 0.83", "87.3981, -95.9769, -74.4774, 0.28", "88.0446, -96.6541, -74.6228, 0.83", "89.3699, -97.9116, -74.9372, 0.28", "89.8863, -98.3438, -75.0524, 0.83", "91.7544, -99.7731, -75.4418, 0.28", "93.2801, -100.905, -75.7205, 0.83", "95.1384, -102.194, -76.0355, 0.55", "97.1447, -103.559, -76.3513, 0.83", "98.768, -104.721, -76.5929, 0.83", "99.6191, -105.384, -76.7086, 0.83", "101.932, -107.254, -77.0602, 0.28", "103.103, -108.18, -77.239, 0.28", "103.869, -108.741, -77.3653, 0.83", "105.949, -110.012, -78.1778, 0.28", "107.029, -110.608, -78.7984, 0.83", "108.678, -111.444, -79.995, 0.55", "110.111, -112.122, -81.2291, 0.55", "111.709, -112.897, -82.7288, 0.83", "115.421, -114.651, -86.1439, 0.28", "116.633, -115.173, -87.1154, 0.55", "116.969, -115.328, -87.34, 0.55", "117.638, -115.729, -87.6863, 0.55", "118.802, -116.553, -88.2045, 0.83", "120.591, -117.859, -88.7986, 0.55", "122.81, -119.458, -89.2914, 0.55", "124.79, -120.785, -89.7371, 0.28", "126.804, -122.064, -90.1759, 1.11", "129.796, -123.865, -90.8934, 0.28", "130.367, -124.194, -91.0409, 0.28", "131.438, -124.832, -91.3466, 0.55", "133.032, -125.822, -91.8197, 0.28", "134.543, -126.762, -92.2022, 0.83", "136.888, -128.085, -92.6302, 0.28", "137.464, -128.424, -92.688, 0.55", "138.238, -128.891, -92.7614, 0.28", "139.124, -129.481, -92.8348, 0.55", "140.724, -130.713, -92.94, 0.28", "142.305, -132.167, -92.9832, 0.83", "143.221, -133.064, -92.9622, 0.28", "144.21, -134.085, -92.9201, 0.83", "145.975, -135.974, -92.8203, 0.28", "146.673, -136.83, -92.7721, 0.83", "148.586, -139.467, -92.6104, 0.28", "148.958, -140.032, -92.5822, 0.55", "150.641, -142.552, -92.4511, 0.28", "151.132, -143.246, -92.5231, 0.55", "152.243, -144.667, -92.9844, 0.28", "152.808, -145.375, -93.2896, 0.55", "153.947, -146.774, -94.1692, 0.28", "154.686, -147.684, -94.8792, 0.55", "157.531, -150.85, -98.5556, 0.28", "158.046, -151.36, -99.3025, 0.55" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "32.833, -32.8037, -37.4125, 0.55", "35.0152, -33.1235, -40.5458, 0.55", "36.1672, -33.552, -42.3741, 0.55", "36.9072, -33.8182, -43.5585, 0.55", "38.3971, -34.2494, -45.9114, 0.55", "39.5303, -34.4372, -47.5845, 0.83", "43.8735, -34.7148, -54.9132, 0.55", "44.9509, -34.6191, -56.9813, 0.55", "45.6826, -34.4926, -58.4757, 0.55", "46.2795, -34.3613, -59.7296, 0.55", "47.3868, -34.08, -61.987, 0.55", "50.3084, -33.1667, -67.4296, 1.11", "51.5503, -32.6525, -69.4628, 0.55", "52.4255, -32.2515, -71.0955, 1.11", "53.7138, -31.6814, -73.6246, 0.55", "54.4126, -31.3856, -75.1274, 0.55", "56.009, -30.749, -78.7098, 1.11", "57.8142, -29.9706, -83.763, 0.55", "59.0767, -29.3313, -88.0007, 0.28", "59.3682, -29.1379, -89.1434, 1.11", "60.7964, -27.9877, -95.3222, 0.55", "61.3245, -27.4165, -98.0178, 0.83", "63.3619, -24.4751, -110.102, 0.28", "63.5534, -24.1078, -111.51, 0.83", "63.9129, -23.2312, -114.504, 0.28", "64.0895, -22.6346, -116.247, 0.83", "64.2927, -21.4635, -118.891, 0.28", "64.347, -20.9651, -119.803, 0.55", "64.8631, -15.831, -126.459, 0.28", "64.8965, -15.2065, -127.319, 0.55", "64.9061, -14.1996, -128.711, 0.28", "64.8501, -13.8201, -129.283, 0.55", "64.7159, -13.2006, -130.194, 0.28", "64.4764, -12.3445, -131.456, 0.55", "63.4485, -9.43632, -135.651, 0.28", "63.0881, -8.5413, -137.066, 1.11", "61.0041, -3.91356, -145.099, 0.28", "60.6238, -3.10533, -146.595, 0.55" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "12.0545, -2.1189, -16.4595, 0.55", "12.9637, -1.46542, -18.8581, 0.55", "17.0432, 0.753786, -29.5929, 0.55", "18.4191, 1.31923, -33.1745, 0.55", "19.0845, 1.45884, -35.2469, 0.55", "21.1295, 1.6358, -42.0409, 0.83", "22.9515, 1.55556, -49.3586, 0.55", "23.96, 1.27096, -53.8832, 0.28", "24.435, 1.04571, -56.3811, 1.11", "26.7924, -0.297916, -69.9095, 0.28", "27.2275, -0.542872, -72.4372, 0.83", "30.1447, -1.99137, -89.0162, 0.55", "31.1927, -2.44627, -94.5899, 0.83", "33.5599, -3.16998, -106.678, 0.28", "34.1871, -3.29441, -109.587, 1.38", "36.0043, -3.44721, -116.645, 0.28", "36.3425, -3.46129, -117.808, 0.55", "37.9859, -3.41503, -121.956, 0.28", "38.2709, -3.40716, -122.548, 0.28", "39.3276, -3.52222, -124.201, 0.28", "39.6827, -3.65413, -124.843, 0.55", "40.2944, -3.99511, -126.026, 0.28", "40.6377, -4.20635, -126.662, 0.55", "43.0121, -5.73715, -130.929, 0.28", "43.9019, -6.31191, -132.548, 1.11", "49.5281, -9.94168, -143.107, 0.28", "49.9139, -10.1912, -143.847, 0.55", "53.7005, -12.6364, -151.205, 0.28", "54.0159, -12.8508, -151.834, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "12.0545, -2.1189, -16.4595, 1.38", "12.2546, -0.747504, -17.4682, 1.38", "13.0959, 5.01968, -21.7103, 0.83", "13.569, 8.26253, -24.0956, 0.83", "13.9839, 11.1061, -26.1873, 0.83", "14.3767, 13.7987, -28.1679, 0.83" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-3.01979, 14.8913, 4.75671, 0.55", "-2.66895, 16.5834, 6.06887, 0.55", "-2.50167, 17.3901, 6.69448, 0.55", "-2.27678, 18.4748, 7.53561, 0.55", "-1.87985, 20.3891, 9.02012, 0.55", "-1.3726, 22.8354, 10.9172, 0.83" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-3.01979, 14.8913, 4.75671, 0.55", "-3.69543, 16.8954, 4.83725, 0.55", "-3.94859, 17.5756, 4.86453, 0.83", "-4.77244, 19.6306, 4.95595, 0.55", "-5.49107, 21.3727, 5.03626, 0.83", "-6.20047, 23.0863, 5.15801, 0.55", "-7.05972, 25.2256, 5.33071, 0.55", "-7.53797, 26.4003, 5.43949, 0.83", "-8.33118, 28.4572, 5.73093, 0.55", "-8.69386, 29.4393, 5.91522, 0.83", "-9.31952, 31.1172, 6.32171, 0.55", "-9.64495, 32.0879, 6.58882, 0.55", "-10.279, 34.1422, 7.17135, 0.55", "-10.7692, 35.837, 7.59252, 0.83", "-11.1243, 37.0695, 7.86925, 0.55", "-11.4996, 38.3147, 8.10653, 0.83", "-12.3002, 40.7733, 8.48313, 0.83", "-12.9811, 42.6572, 8.76242, 0.55", "-13.8917, 45.0573, 9.06846, 0.83", "-14.5257, 46.6115, 9.21047, 0.55", "-15.2654, 48.3307, 9.36782, 0.28", "-15.9527, 49.9085, 9.50978, 0.55", "-16.5116, 51.2099, 9.61611, 0.28", "-16.8108, 51.9218, 9.67483, 0.55", "-17.1843, 52.7628, 9.7474, 0.28", "-17.6601, 53.9729, 9.79949, 0.55", "-18.0786, 55.327, 9.82021, 0.28", "-18.2301, 55.8926, 9.82051, 0.55", "-18.6349, 57.6791, 9.81495, 0.28", "-18.9482, 59.2391, 9.82435, 0.55", "-19.424, 61.7988, 9.86381, 0.55", "-19.7688, 63.6642, 9.88714, 0.28", "-20.0585, 65.3803, 9.89891, 0.28", "-20.4055, 67.9795, 9.90077, 1.11", "-20.5802, 69.7951, 9.92241, 0.55", "-20.6673, 70.8645, 9.9553, 0.55", "-20.7567, 71.9187, 10.0583, 0.83", "-20.9248, 73.5311, 10.2784, 0.28", "-20.9983, 74.32, 10.4428, 0.55", "-21.1076, 75.4465, 10.7747, 0.55", "-21.2303, 76.676, 11.1975, 0.55", "-21.4873, 79.3878, 12.2375, 0.28", "-21.6178, 80.6501, 12.7826, 0.55", "-21.8654, 82.4362, 13.6616, 0.28", "-22.0049, 83.3324, 14.1267, 0.55", "-25.7174, 91.885, 14.2946, 0.55", "-28.2189, 100.883, 14.0855, 0.55", "-31.0638, 109.734, 14.9064, 0.55" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "13.0424, 2.19063, -6.28681, 0.55", "15.094, 4.26689, -4.96097, 0.55", "16.9118, 5.9548, -3.92815, 0.55", "17.9977, 6.848, -3.41832, 0.83", "20.6517, 8.77518, -2.42228, 0.55", "22.9591, 10.4007, -1.91132, 0.83", "25.7488, 12.4386, -1.56671, 0.55", "27.1246, 13.4517, -1.5409, 0.55", "29.6596, 15.2621, -1.75603, 0.55", "33.0911, 17.8168, -2.2779, 0.55", "37.375, 21.2327, -3.21291, 0.55", "39.2049, 22.8414, -3.65904, 0.83", "41.5591, 25.0407, -4.18758, 0.55", "43.5796, 26.9611, -4.54128, 0.83", "45.6511, 29.0348, -4.86658, 0.55", "46.5297, 29.899, -4.96037, 0.55", "48.3698, 31.552, -5.05195, 0.83", "49.9879, 32.9233, -5.29777, 0.28", "51.0161, 33.8813, -5.61557, 0.55", "52.8456, 35.7572, -6.38833, 0.28", "54.0119, 37.0575, -6.98646, 0.55", "55.5221, 38.8095, -7.83551, 0.28", "56.4073, 39.8642, -8.3266, 0.55", "58.674, 42.6346, -9.56337, 0.28", "59.3044, 43.4345, -9.8809, 0.83", "61.533, 46.257, -10.8145, 0.28", "62.0403, 46.9149, -11.018, 0.55", "64.5917, 50.0933, -11.8849, 0.28", "65.3016, 50.875, -12.092, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "13.0424, 2.19063, -6.28681, 0.55", "15.3141, 0.950644, -4.76097, 0.55", "16.4689, 0.320344, -3.98537, 0.83", "17.8116, -0.41259, -3.08348, 0.83", "20.7485, -2.01566, -1.11086, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-10.6642, -9.88678, 13.8451, 0.83", "-13.99, -7.715, 14.2865, 0.83", "-16.9353, -5.75934, 14.7186, 0.83", "-18.5172, -4.73441, 14.9722, 0.83", "-22.7387, -2.1612, 15.7132, 0.55", "-26.1966, -0.0800649, 16.3442, 0.83", "-29.0267, 1.70223, 16.8992, 0.55", "-31.9593, 3.45862, 17.5928, 0.55", "-34.2711, 4.88807, 18.2648, 0.83", "-36.4116, 6.43032, 19.0365, 0.55", "-37.7364, 7.58905, 19.6634, 0.55", "-39.9227, 9.77612, 20.9031, 0.55", "-42.4206, 12.4566, 22.4321, 0.55", "-45.4244, 15.459, 24.3364, 0.83", "-47.7458, 17.537, 26.0075, 0.83", "-50.021, 19.4279, 27.7716, 0.55", "-50.6051, 19.859, 28.2409, 0.55", "-53.2737, 21.6617, 30.4024, 0.55", "-56.569, 23.7925, 33.0275, 0.55", "-60.8722, 26.0245, 36.3756, 0.83", "-62.9808, 26.8218, 37.9416, 0.28", "-64.078, 27.0889, 38.7162, 0.55", "-66.5794, 27.2908, 40.475, 0.28", "-67.9622, 27.0174, 41.408, 0.55", "-70.4873, 25.8526, 42.8177, 0.28", "-73.1018, 24.0794, 43.987, 0.55", "-75.0013, 22.5301, 44.8238, 0.55", "-77.3888, 20.4626, 45.795, 0.55", "-79.9261, 18.0904, 46.7644, 0.28", "-80.8595, 17.1422, 47.0968, 0.55", "-84.3237, 13.3542, 48.2069, 0.28", "-86.2009, 11.1751, 48.7813, 0.55", "-88.3553, 8.36529, 49.4161, 0.55", "-90.432, 5.42086, 49.9726, 0.55", "-92.7386, 1.87552, 50.5274, 0.55", "-93.9592, -0.0725829, 50.7868, 0.83", "-96.6589, -4.28487, 51.2714, 0.55", "-99.2131, -7.90648, 51.7186, 0.28", "-101.9, -11.2735, 52.2047, 0.55", "-104.912, -14.3441, 52.7192, 0.55", "-107.196, -16.1665, 53.1084, 0.55", "-111.345, -19.0547, 53.7913, 0.28", "-113.004, -20.0126, 54.0466, 0.83", "-115.86, -21.3193, 54.4624, 0.55", "-118.526, -22.2999, 54.8884, 0.55", "-121.518, -23.0484, 55.4285, 0.83", "-134.416, -23.04, 59.4068, 0.83", "-147.668, -24.4299, 61.6011, 0.83" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-10.6642, -9.88678, 13.8451, 0.55", "-11.5699, -11.6742, 13.8477, 0.55", "-12.7275, -13.8971, 13.9269, 0.55", "-14.1252, -16.4349, 14.0707, 0.55", "-15.2545, -18.2566, 14.1985, 0.83", "-16.3708, -19.923, 14.3385, 0.83", "-18.3485, -22.7315, 14.5954, 0.83", "-19.5628, -24.2303, 14.7758, 0.83", "-20.91, -25.584, 15.0082, 0.55", "-22.5208, -27.1248, 15.32, 0.55", "-23.8207, -28.2731, 15.5924, 0.55", "-24.9025, -29.0693, 15.8141, 0.83", "-26.4231, -29.9296, 16.1289, 0.55", "-28.6355, -31.0158, 16.5268, 0.83" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-3.58155, -12.1788, -6.38487, 0.83", "-6.30894, -14.4686, -6.57403, 0.83", "-8.31321, -16.1512, -6.71304, 0.83", "-11.0361, -18.4373, -6.9019, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-3.58155, -12.1788, -6.38487, 1.66", "-2.9367, -15.3841, -6.53103, 1.66", "-2.28124, -18.6422, -6.6796, 1.66", "-1.62507, -21.9037, -6.82832, 1.94" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "24.8699, -27.2591, -4.0979, 0.55", "34.9581, -38.36, -4.0979, 0.55", "45.0463, -49.4608, -4.0979, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "14.3767, 13.7987, -28.1679, 0.55", "16.7182, 13.1168, -28.4639, 0.55", "17.2709, 12.9269, -28.5958, 0.83", "18.3482, 12.5162, -28.9059, 0.28", "19.3158, 12.1189, -29.1841, 0.55", "22.248, 10.8952, -29.9207, 0.28", "23.2469, 10.4497, -30.1116, 0.55", "24.9974, 9.5256, -30.4457, 0.28", "25.8998, 8.9512, -30.6287, 0.55", "27.6433, 7.64328, -31.0063, 0.28", "28.6101, 6.82266, -31.2221, 0.55", "29.9792, 5.43191, -31.5819, 0.55", "31.3736, 3.8804, -31.9804, 0.28", "33.1861, 1.74474, -32.4873, 0.28", "33.9269, 0.829938, -32.7475, 0.28", "34.277, 0.381038, -32.8926, 0.55", "35.6751, -1.47114, -33.581, 0.28", "35.8968, -1.76057, -33.6998, 0.55", "37.2024, -3.38897, -34.2557, 0.28", "37.9432, -4.12337, -34.4974, 0.28", "38.6, -4.72609, -34.6815, 0.55" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "14.3767, 13.7987, -28.1679, 0.55", "15.6688, 15.6744, -27.8325, 0.55", "16.5866, 16.9569, -27.811, 0.28", "17.2375, 17.8288, -27.8444, 0.55", "18.2649, 19.2072, -27.9062, 0.28", "19.0001, 20.2456, -27.9864, 0.55", "20.5463, 22.7491, -28.4485, 0.55", "21.2597, 24.0724, -28.8446, 0.55", "21.3862, 24.3342, -28.9605, 0.83", "21.8725, 25.4031, -29.4957, 0.55", "22.5954, 26.9898, -30.3404, 1.11", "23.9896, 30.033, -31.9215, 0.28", "24.3916, 30.9028, -32.3487, 0.83", "26.143, 34.5776, -34.1768, 0.28", "26.7207, 35.7176, -34.7212, 0.83", "28.1714, 38.288, -35.9054, 0.28", "28.3591, 38.5698, -36.0121, 0.55", "29.297, 39.7655, -36.3164, 0.28", "29.7782, 40.3474, -36.3982, 0.55", "30.4885, 41.1765, -36.3792, 0.28", "31.0914, 41.8715, -36.3328, 0.83", "33.2891, 44.3721, -36.0064, 0.28", "33.9658, 45.1583, -35.9146, 0.83", "34.8582, 46.2094, -35.82, 0.28", "35.5911, 47.0937, -35.7678, 0.55" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-1.3726, 22.8354, 10.9172, 0.55", "0.621633, 23.3027, 11.6155, 0.55", "2.42315, 23.6021, 12.1713, 0.83", "4.94001, 24.1003, 12.9954, 0.55", "7.32022, 24.7407, 13.7891, 0.55", "10.2583, 25.6328, 14.8472, 0.55", "13.0807, 26.6259, 15.8629, 0.55", "15.9843, 27.7954, 16.9001, 0.55", "18.4163, 28.848, 17.7833, 0.55", "21.0923, 30.0427, 18.7288, 0.83", "24.2899, 31.647, 19.7804, 0.55", "26.9946, 33.2045, 20.7101, 0.55", "27.9111, 33.7961, 21.0596, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-1.3726, 22.8354, 10.9172, 0.55", "-1.27175, 24.4497, 10.9479, 0.55", "-1.24035, 25.5993, 10.966, 0.55", "-1.26219, 27.3173, 10.9937, 0.55", "-1.24298, 28.4603, 11.0184, 0.83", "-1.23286, 29.4227, 11.0492, 0.83", "-1.15637, 31.5105, 10.9804, 0.55", "-1.12892, 32.1048, 10.9273, 0.83", "-1.03077, 33.6549, 10.7319, 0.55", "-0.825879, 35.9959, 10.3938, 0.55", "-0.685191, 37.28, 10.196, 0.83", "-0.355588, 40.0965, 9.76211, 0.55", "-0.241503, 41.2151, 9.61902, 0.55", "-0.190954, 41.8476, 9.56202, 0.83", "-0.169245, 42.8048, 9.51283, 0.55", "-0.223679, 43.5811, 9.52134, 0.55", "-0.336042, 44.7394, 9.62318, 0.83", "-0.77077, 47.21, 9.99492, 0.28", "-0.905668, 47.8085, 10.0726, 0.83", "-1.13638, 48.6218, 10.1287, 0.55", "-1.4089, 49.3877, 10.1378, 0.83", "-2.09893, 51.1679, 10.1022, 0.55", "-2.63233, 52.428, 9.98301, 0.55", "-3.03021, 53.2748, 9.83604, 0.83", "-3.64018, 54.5454, 9.49663, 0.55", "-3.97971, 55.2308, 9.26046, 0.55", "-4.48273, 56.1845, 8.81552, 0.83", "-5.06433, 57.1841, 8.25984, 0.28", "-5.24425, 57.5149, 8.07238, 0.55", "-5.90768, 58.6591, 7.46915, 0.28", "-6.24011, 59.2124, 7.23631, 0.55", "-6.98504, 60.3654, 6.82504, 0.28", "-7.52334, 61.1422, 6.58403, 0.55", "-8.56038, 62.5792, 6.30662, 0.28", "-9.42888, 63.7119, 6.22735, 0.83", "-10.3545, 64.8445, 6.31219, 0.28", "-10.7298, 65.2871, 6.47875, 0.55", "-11.4764, 66.1346, 7.04043, 0.28", "-12.0949, 66.8983, 7.6711, 0.55", "-12.9473, 68.0507, 8.76927, 0.28", "-13.2084, 68.4177, 9.1538, 0.55", "-14.8292, 70.6954, 11.8051, 0.28", "-14.9004, 70.8004, 11.9347, 0.55", "-15.6402, 71.9644, 13.4862, 0.28", "-15.8703, 72.4102, 14.03, 0.55", "-17.5075, 78.9746, 14.8106, 0.55", "-19.595, 85.4517, 14.8071, 0.55", "-22.0996, 91.7638, 14.5238, 0.55", "-23.8287, 98.2364, 13.328, 0.55", "-24.8018, 104.985, 13.515, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "20.7485, -2.01566, -1.11086, 0.55", "25.6821, -4.34655, 0.715329, 0.55", "29.2084, -6.01258, 2.02061, 0.55", "32.0222, -7.34196, 3.06214, 0.55", "33.5008, -8.04055, 3.60947, 0.55", "37.8047, -10.0739, 5.20256, 0.83" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "20.7485, -2.01566, -1.11086, 0.55", "23.2048, -2.69207, -0.984617, 0.55", "25.5015, -3.22049, -0.830197, 0.55", "27.0969, -3.59588, -0.682558, 0.83", "30.305, -4.3532, -0.319855, 0.55", "32.5796, -4.92678, -0.0509533, 0.83", "35.3344, -5.53865, 0.295483, 0.28", "36.8979, -5.79487, 0.38183, 0.55", "40.6184, -6.26585, 0.365019, 0.28", "43.4244, -6.38776, -0.0888622, 0.55", "45.7908, -6.37872, -0.76698, 0.55", "49.2585, -6.30591, -2.01502, 0.55", "54.7245, -6.01499, -4.25795, 0.28", "57.6326, -5.76621, -5.5022, 0.83", "65.0843, -4.71371, -8.736, 0.55", "67.8353, -4.20755, -9.8317, 0.55", "70.9018, -3.52294, -10.8629, 0.83", "72.4504, -3.15878, -11.2302, 0.83", "75.8357, -2.23636, -11.4719, 0.28", "78.321, -1.43583, -11.4817, 0.83", "81.1515, -0.401931, -11.1743, 0.28", "82.7442, 0.301735, -11.0849, 0.55", "85.2122, 1.45146, -11.1091, 0.28", "86.7827, 2.17533, -11.2936, 0.83", "89.7944, 3.60406, -11.9824, 0.28", "90.7579, 4.05014, -12.3663, 0.55", "93.2813, 5.2277, -13.6356, 0.28", "94.6592, 5.8982, -14.4471, 0.83", "97.9819, 7.58962, -16.5637, 0.28", "99.3619, 8.29032, -17.4642, 0.83", "104.537, 10.932, -20.8084, 0.28", "104.956, 11.1432, -21.0857, 0.55", "110.551, 14.0223, -24.8822, 0.28", "111.255, 14.4078, -25.3907, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-28.6355, -31.0158, 16.5268, 0.55", "-32.2322, -31.5243, 17.701, 0.55", "-34.5359, -31.8541, 18.4748, 0.55", "-35.5569, -32.0261, 18.8207, 0.55", "-39.2878, -32.6133, 20.0381, 0.55", "-40.6221, -32.8599, 20.4472, 0.55", "-42.245, -33.2071, 20.9277, 0.83", "-44.879, -33.8915, 21.613, 0.55", "-45.9262, -34.2115, 21.8778, 0.55", "-47.8664, -34.8666, 22.3761, 0.55", "-49.7409, -35.4886, 22.8122, 0.55", "-51.4583, -35.9786, 23.1299, 0.55", "-52.857, -36.3613, 23.3275, 0.55", "-54.8942, -36.8204, 23.558, 0.55", "-56.5516, -37.1411, 23.6988, 0.83", "-59.6881, -37.6546, 24.0627, 0.55", "-62.1828, -37.9851, 24.361, 0.55", "-63.7279, -38.1444, 24.5437, 0.55", "-65.9454, -38.3245, 24.7339, 0.55", "-69.0662, -38.4922, 24.9236, 0.83", "-72.0209, -38.5663, 25.0289, 0.55", "-74.3898, -38.6077, 25.0963, 0.55", "-77.6291, -38.5865, 25.1485, 0.55", "-80.3604, -38.4177, 25.127, 0.55", "-81.9738, -38.2258, 25.0781, 0.83", "-83.8969, -37.8446, 24.9978, 0.55", "-84.9611, -37.5884, 24.9278, 0.55", "-86.6535, -37.0263, 24.9552, 0.83", "-88.135, -36.506, 25.1092, 0.83", "-89.9056, -35.8302, 25.4394, 0.28", "-90.5705, -35.5619, 25.5897, 0.28", "-91.8994, -35.0317, 25.95, 0.55", "-94.7203, -33.7973, 26.8004, 0.28", "-95.8096, -33.3137, 27.1916, 0.83", "-104.512, -34.7452, 27.9052, 0.83" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-28.6355, -31.0158, 16.5268, 0.83", "-30.6789, -34.4047, 17.2277, 0.83", "-32.0455, -36.5092, 17.6446, 0.83", "-34.3339, -40.1392, 18.1818, 0.55", "-35.1054, -41.4949, 18.3039, 0.55", "-35.3717, -42.0087, 18.3319, 0.83", "-36.4848, -44.2326, 18.419, 0.55", "-37.598, -46.6337, 18.3664, 0.55", "-38.8557, -49.5013, 18.2383, 0.55", "-39.8229, -51.9943, 18.014, 0.55", "-40.7145, -54.4266, 17.7243, 0.83", "-41.4968, -56.547, 17.3023, 0.83", "-41.9898, -57.714, 16.978, 0.83", "-42.9329, -59.6781, 16.3149, 0.83", "-43.4274, -60.5076, 15.9897, 0.55", "-44.1292, -61.4889, 15.5779, 0.83", "-46.5898, -64.7575, 14.0324, 0.55", "-48.3163, -67.0069, 12.9253, 0.55", "-49.3837, -68.4169, 12.2195, 0.83", "-50.4967, -69.9094, 11.513, 0.83", "-52.6696, -72.9361, 10.2416, 0.83", "-54.5447, -75.6302, 9.23561, 0.55", "-55.2949, -76.7778, 8.88599, 1.11", "-56.4962, -78.8198, 8.31447, 0.83", "-58.4728, -82.2832, 7.48116, 0.55", "-59.5822, -84.3168, 7.11424, 0.55", "-59.9892, -85.0931, 7.03877, 0.55", "-60.7238, -86.4635, 7.04975, 0.83", "-61.3007, -87.5974, 7.25298, 0.83", "-62.4477, -89.8996, 8.05369, 0.55", "-62.9307, -90.9592, 8.55136, 0.83", "-63.5116, -92.2983, 9.26394, 0.55", "-63.7524, -92.9382, 9.59857, 0.83", "-65.2623, -97.299, 11.7612, 0.55", "-65.885, -99.1501, 12.5869, 0.28", "-66.1533, -99.9241, 12.8477, 0.55", "-66.805, -101.594, 13.1952, 0.28", "-67.679, -103.649, 13.3836, 0.28", "-68.5389, -105.433, 13.2978, 0.83", "-70.2544, -108.42, 12.6973, 0.28", "-71.9309, -111.206, 12.0069, 0.55", "-73.2802, -113.453, 11.3825, 0.28", "-73.4742, -113.803, 11.2945, 0.55", "-75.0498, -116.956, 10.657, 0.28", "-76.5157, -120.105, 10.0494, 0.55", "-77.3693, -122.154, 9.6911, 0.28", "-78.0398, -124.015, 9.45403, 0.55", "-79.6197, -129.048, 8.74986, 0.28", "-80.6106, -132.434, 8.2948, 0.83", "-87.7805, -141.104, 8.68421, 0.83", "-95.2485, -149.522, 8.72641, 0.83", "-104.123, -156.273, 7.52381, 0.83", "-113.863, -161.559, 8.81834, 0.83", "-124.01, -166.032, 9.86183, 0.83", "-134.311, -170.001, 11.2383, 0.83", "-144.399, -172.67, 14.9801, 0.83", "-154.341, -174.174, 19.6008, 0.83" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-11.0361, -18.4373, -6.9019, 1.11", "-11.5981, -21.8143, -10.047, 1.11", "-12.3494, -26.3287, -14.2514, 1.11", "-12.6547, -28.1633, -15.9601, 1.38" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-11.0361, -18.4373, -6.9019, 0.55", "-12.8792, -18.5243, -7.02081, 0.55", "-14.0294, -18.598, -7.04328, 0.55", "-15.5458, -18.7256, -7.03875, 0.83", "-17.9378, -18.9558, -6.98412, 0.55", "-20.6203, -19.2788, -6.88487, 0.83", "-21.6269, -19.3988, -6.80906, 0.83", "-23.7196, -19.6722, -6.67782, 0.55", "-24.5892, -19.7738, -6.63446, 0.83", "-25.9885, -19.8781, -6.57067, 0.28", "-27.5089, -19.98, -6.4722, 1.11", "-30.0156, -20.1854, -6.38365, 0.55", "-32.0342, -20.3137, -6.51549, 0.83", "-33.855, -20.3715, -6.78014, 0.28", "-34.6881, -20.4284, -6.89735, 0.55", "-36.1899, -20.6058, -7.14127, 0.28", "-37.9722, -20.9449, -7.45835, 0.55", "-41.3121, -22.1915, -8.23225, 0.28", "-41.5556, -22.331, -8.28841, 0.55", "-44.2185, -24.3854, -9.04103, 0.55", "-45.2513, -25.3053, -9.35461, 0.28", "-46.0632, -26.0975, -9.61564, 0.83", "-48.5474, -28.7014, -10.4073, 0.28", "-49.573, -29.7886, -10.7287, 0.83", "-51.1616, -31.2954, -11.3232, 0.55", "-52.1871, -32.0927, -11.9443, 0.55", "-53.362, -32.8584, -12.6562, 0.83", "-54.68, -33.5799, -13.466, 0.28", "-55.5828, -33.9584, -14.0294, 0.55", "-57.2914, -34.5757, -15.2025, 0.55", "-61.8029, -36.1056, -18.7629, 0.28", "-63.4058, -36.6772, -20.2571, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-1.62507, -21.9037, -6.82832, 1.11", "-0.873842, -25.3919, -6.27961, 1.11", "-0.39991, -27.5924, -5.93344, 1.11", "0.373653, -31.1843, -5.36842, 1.11", "1.64428, -37.0841, -4.44034, 1.11", "2.61227, -41.5787, -3.7333, 1.11" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-1.62507, -21.9037, -6.82832, 0.83", "-0.306822, -23.6383, -7.71393, 0.83", "0.862955, -25.1775, -8.4998, 0.83", "1.618, -26.171, -9.00704, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "27.9111, 33.7961, 21.0596, 0.55", "27.5423, 36.0385, 21.9358, 0.55", "27.1109, 38.2072, 22.7956, 0.55", "26.9187, 39.204, 23.1778, 0.83", "26.3911, 41.8805, 24.2584, 0.55", "25.9326, 44.2072, 25.1928, 0.83", "25.5222, 46.9028, 26.3691, 0.55", "25.2481, 48.7271, 27.2349, 0.55", "25.0514, 50.0004, 27.8592, 0.55", "24.8403, 51.7973, 28.7502, 0.55", "24.6392, 53.9596, 29.8155, 0.55", "24.2758, 57.509, 31.4257, 0.55", "24.0948, 59.2539, 32.2415, 0.55", "23.9281, 60.6249, 32.6092, 0.83", "23.4564, 63.3712, 32.8594, 0.55", "23.1646, 65.0558, 32.8372, 0.55", "22.8468, 66.8633, 32.6977, 0.55", "22.479, 68.8012, 32.4592, 0.55", "20.9551, 77.4051, 31.365, 0.83", "20.456, 80.1444, 31.0449, 0.55", "19.9355, 82.8671, 30.7373, 0.55", "19.5622, 85.5202, 30.5322, 0.55", "19.3679, 87.4719, 30.4714, 0.55", "19.3286, 88.3179, 30.5316, 0.83", "19.3862, 89.9138, 30.9482, 0.28", "19.4594, 90.7606, 31.1387, 0.55", "19.771, 94.3085, 31.8076, 0.28", "19.8012, 94.5951, 31.866, 0.55", "20.1196, 97.4106, 32.3904, 0.28", "20.2701, 98.6062, 32.6143, 0.55", "20.4137, 99.7583, 32.836, 0.28", "20.4537, 100.284, 32.953, 0.55", "20.3887, 102.423, 33.4598, 0.28", "20.285, 103.778, 33.776, 0.55", "20.6921, 113.415, 34.6096, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "27.9111, 33.7961, 21.0596, 0.55", "30.2986, 34.9437, 21.3541, 0.55", "33.0586, 36.3292, 21.7906, 0.55", "34.852, 37.2971, 22.0934, 0.55", "36.5746, 38.3504, 22.426, 0.55", "38.0165, 39.3271, 22.7167, 0.55", "40.1867, 40.8585, 23.1457, 0.55", "41.4467, 41.8793, 23.4222, 0.55", "42.6325, 42.9007, 23.7035, 0.55", "44.0534, 44.0564, 24.0161, 0.55", "45.8936, 45.4506, 24.378, 0.55", "46.696, 46.0409, 24.5159, 0.55", "47.904, 46.8345, 24.6447, 0.55", "49.3021, 47.7356, 24.7792, 0.55", "50.3841, 48.3023, 24.8696, 0.55", "52.0288, 48.9222, 24.9419, 0.55", "59.2563, 54.1374, 25.7941, 0.55", "66.6234, 59.0646, 27.0275, 0.55", "74.807, 62.6102, 26.9665, 0.55", "83.3796, 64.8578, 26.0844, 0.55", "91.1743, 69.0202, 24.8326, 0.55", "98.7336, 73.3453, 22.8793, 0.55", "106.707, 77.3389, 22.5222, 0.55", "114.84, 80.9835, 22.9188, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "37.8047, -10.0739, 5.20256, 0.55", "39.8325, -11.352, 5.70846, 0.55", "41.6717, -12.4899, 6.14317, 0.55", "43.3535, -13.5253, 6.48172, 0.55", "45.8293, -15.0356, 6.91482, 0.83", "48.4377, -16.6071, 7.33285, 0.55", "50.5125, -17.9029, 7.6804, 0.55", "51.5198, -18.5501, 7.84237, 0.83", "53.1725, -19.6457, 8.09042, 0.55", "55.5241, -21.1875, 8.40519, 0.55", "57.8999, -22.7273, 8.53827, 0.55", "59.9611, -24.0638, 8.52767, 0.55", "61.3792, -24.9529, 8.47153, 1.11", "63.3583, -26.0883, 8.3572, 0.55", "64.4119, -26.6675, 8.28823, 0.55", "67.4281, -28.2692, 7.9544, 0.55", "69.5589, -29.3777, 7.66258, 0.83", "72.4155, -30.62, 7.29571, 0.83", "74.2287, -31.3318, 7.17158, 0.55", "75.2908, -31.7148, 7.16092, 0.55", "77.2786, -32.4137, 7.07002, 0.55", "78.6116, -32.8497, 7.00327, 0.83", "81.2843, -33.7498, 6.56358, 0.55", "83.1896, -34.4702, 6.08004, 0.55", "85.0037, -35.1854, 5.51013, 0.83", "88.7491, -36.6811, 4.17387, 0.28", "89.9415, -37.2207, 3.71608, 0.55", "91.8339, -38.2868, 2.85815, 0.28", "93.4019, -39.334, 2.07468, 0.28", "95.2412, -40.6254, 1.13727, 0.83", "96.6776, -41.7062, 0.449768, 0.55", "97.7631, -42.5388, 0.00103875, 0.55", "100.221, -44.4332, -1.04835, 0.55", "101.284, -45.2549, -1.48296, 0.83", "103.275, -46.9447, -2.37036, 0.55", "103.995, -47.5674, -2.6805, 0.28", "104.218, -47.7399, -2.77341, 0.55", "104.886, -48.1223, -3.02253, 0.28", "105.444, -48.3739, -3.18019, 0.55", "106.66, -48.8429, -3.50238, 0.28", "107.491, -49.092, -3.69584, 0.83", "110.035, -49.7603, -4.1334, 0.28", "112.217, -50.3249, -4.41359, 0.83", "113.175, -50.6307, -4.44614, 0.28", "113.918, -50.941, -4.39051, 0.28", "115.451, -51.6973, -4.03704, 0.55", "117.401, -52.8109, -3.33328, 0.28", "118.032, -53.2169, -3.0228, 0.55", "120.367, -54.8373, -1.74565, 0.28", "121.926, -55.8503, -0.876037, 0.28", "123.211, -56.6512, -0.148935, 0.28", "123.555, -56.832, 0.0399227, 0.55", "125.134, -57.4445, 0.947898, 0.28", "125.37, -57.4947, 1.07598, 1.11", "127.732, -57.7206, 2.26307, 0.28", "128.229, -57.7464, 2.51705, 0.55", "131.262, -57.9085, 4.04794, 0.28", "133.7, -58.0211, 5.3435, 0.83", "136.702, -58.0851, 7.04283, 0.28", "137.237, -58.089, 7.34998, 0.28", "137.376, -58.0847, 7.43231, 0.55", "139.02, -58.0079, 8.40959, 0.55" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "37.8047, -10.0739, 5.20256, 0.55", "44.2844, -6.02457, 6.87103, 0.55", "48.1962, -4.14193, 8.78515, 0.55", "50.1633, -3.64752, 10.2354, 0.55", "51.489, -3.45848, 11.2882, 0.55", "53.267, -3.36019, 12.8008, 0.55", "55.2978, -3.26157, 14.5815, 0.55", "58.1385, -3.30304, 17.4434, 0.83", "61.3919, -3.37042, 20.6309, 0.55", "62.987, -3.47506, 22.2356, 0.55", "65.3342, -3.62206, 24.5239, 0.55", "66.6863, -3.72785, 25.7647, 0.28", "68.884, -3.76847, 27.6517, 0.55", "70.9851, -3.54877, 29.2097, 0.28", "72.2319, -3.26191, 30.0406, 0.55", "73.6002, -2.92442, 30.9591, 0.28", "74.3165, -2.73063, 31.3974, 0.28", "74.7985, -2.59318, 31.7641, 0.55", "76.2716, -2.25562, 33.0639, 0.28", "76.6786, -2.14708, 33.4394, 0.55", "77.8436, -1.78048, 34.6658, 0.28", "78.2775, -1.65006, 35.1767, 0.83", "80.3458, -0.960839, 37.6874, 0.55", "82.2554, -0.427664, 40.0472, 0.55", "89.4595, -0.187924, 47.3244, 0.55", "96.8517, 0.376182, 54.3935, 0.55", "103.875, 2.72077, 61.4952, 0.55", "110.588, 6.49756, 68.3062, 0.55", "117.769, 11.9091, 73.3413, 0.55" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-12.6547, -28.1633, -15.9601, 0.55", "-14.0362, -29.4149, -15.9471, 0.55", "-15.9469, -31.0673, -15.8411, 0.55", "-17.7968, -32.5198, -15.7101, 0.55", "-19.233, -33.6392, -15.582, 0.83", "-21.9708, -35.8331, -15.3763, 0.83", "-23.0927, -36.7329, -15.3041, 0.83", "-25.3869, -38.5989, -15.1851, 1.94", "-27.8652, -40.6683, -15.0696, 0.55", "-30.0116, -42.5323, -14.8913, 0.83", "-31.6354, -44.0957, -14.7307, 0.55", "-32.4268, -44.9199, -14.642, 0.83", "-33.6015, -46.2108, -14.5116, 0.83", "-35.5111, -48.4775, -14.3293, 0.83", "-37.7789, -51.5104, -14.0407, 0.83", "-38.5985, -52.6273, -13.9028, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-12.6547, -28.1633, -15.9601, 0.55", "-14.6031, -28.1554, -17.933, 0.55", "-16.7653, -28.2249, -20.2567, 0.55", "-20.009, -28.5366, -24.069, 0.83", "-22.2333, -28.9202, -26.7583, 1.11", "-25.9275, -29.7131, -31.0907, 0.55", "-27.519, -30.1499, -32.8338, 0.55", "-31.0428, -31.4381, -36.6841, 0.55", "-33.1745, -32.4107, -38.9205, 1.11", "-34.7074, -33.1831, -40.406, 0.55", "-35.9581, -33.852, -41.4538, 0.55", "-38.3136, -35.2174, -43.0194, 0.55", "-40.7221, -36.5536, -44.4978, 1.11", "-43.6681, -38.0085, -46.0494, 0.55", "-44.5473, -38.3779, -46.4788, 0.83", "-47.2979, -39.3973, -47.8882, 0.55", "-48.7864, -39.9287, -48.6827, 0.55", "-51.0862, -40.6405, -49.852, 0.83", "-54.1712, -41.5663, -51.1542, 0.55", "-55.5594, -42.0235, -51.6554, 0.83", "-57.2523, -42.6605, -52.3041, 0.28", "-58.5526, -43.1746, -52.7407, 0.55", "-60.0716, -43.7765, -53.1872, 0.28", "-62.0143, -44.5, -53.8801, 0.55", "-62.9589, -44.8798, -54.3725, 0.55", "-65.3613, -45.8895, -55.9556, 0.28", "-67.068, -46.6412, -57.3947, 0.55", "-68.6984, -47.4083, -59.0464, 1.66", "-72.4227, -49.4762, -63.9069, 0.83", "-74.0437, -50.4662, -66.4187, 0.55", "-74.9093, -51.0448, -67.9202, 0.55", "-76.4002, -52.2382, -70.9305, 0.28", "-76.586, -52.4447, -71.4082, 0.83", "-77.9882, -54.7415, -76.0997, 0.28", "-78.044, -54.8582, -76.311, 0.55", "-78.412, -55.4138, -77.3871, 0.28", "-78.6677, -55.7169, -78.0355, 0.55", "-80.1307, -56.7141, -80.2659, 0.28", "-81.8804, -57.4628, -82.1754, 0.83", "-83.4802, -57.859, -83.4465, 0.83", "-85.6882, -58.2714, -85.0075, 0.28", "-86.5876, -58.3612, -85.5337, 0.55", "-91.0468, -58.4444, -87.766, 0.28", "-91.7902, -58.3863, -88.0273, 0.83", "-95.4011, -57.705, -88.869, 0.28", "-96.1174, -57.4939, -89.0056, 0.55", "-98.8086, -56.4711, -89.4577, 0.28", "-101.527, -55.1207, -89.6682, 0.55", "-104.228, -53.3792, -89.6057, 0.28", "-106.029, -52.1289, -89.5025, 0.28", "-109.173, -49.7277, -89.1051, 0.28", "-109.577, -49.4223, -89.0645, 0.83", "-112.615, -47.3092, -88.8971, 0.28", "-113.605, -46.6472, -88.7244, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-63.4058, -36.6772, -20.2571, 0.28", "-64.6539, -36.4591, -23.5491, 0.28", "-65.2549, -36.354, -25.1344, 0.55", "-67.6104, -35.9423, -31.3476, 0.28", "-70.132, -35.5016, -37.9988, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-63.4058, -36.6772, -20.2571, 0.28", "-63.8375, -38.4221, -20.2991, 0.28", "-63.9718, -38.965, -20.3122, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "2.61227, -41.5787, -3.7333, 0.83", "2.07254, -44.3238, -4.2219, 0.83", "1.66829, -46.4319, -4.63749, 0.83", "0.901995, -50.6415, -5.46696, 0.83", "0.532991, -52.9562, -5.92294, 0.83", "0.132599, -55.8309, -6.44977, 0.83", "-0.237746, -58.9151, -6.97886, 0.83", "-0.474446, -61.1994, -7.34424, 0.83", "-0.717353, -64.0286, -7.6757, 1.38", "-0.989549, -66.8683, -7.76708, 0.83", "-1.35168, -70.7087, -7.73579, 0.83", "-1.42502, -71.6499, -7.70699, 0.83", "-1.66697, -75.0082, -7.58415, 0.83", "-1.86632, -77.0531, -7.36209, 0.83", "-2.41743, -81.3831, -6.64269, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "2.61227, -41.5787, -3.7333, 0.83", "4.13106, -43.4853, -3.80084, 0.83", "5.52061, -45.6775, -3.80028, 0.55", "6.17875, -46.9446, -3.75927, 0.55", "7.04785, -49.2962, -3.92823, 0.55", "8.35348, -52.8289, -4.18205, 0.83", "9.25328, -55.2636, -4.35698, 0.55", "9.99517, -57.8655, -4.56321, 0.55", "10.5645, -60.4277, -4.80128, 0.55", "11.6254, -67.1422, -5.54322, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "1.618, -26.171, -9.00704, 0.83", "1.32044, -25.2496, -10.1471, 0.83", "1.25161, -24.3254, -11.7053, 0.83", "1.62603, -23.469, -14.6424, 0.55", "1.84543, -23.2032, -16.0442, 0.55", "2.00745, -23.0459, -16.9887, 0.55", "2.32001, -22.7925, -18.754, 0.55", "2.71327, -22.5658, -20.7816, 0.55", "3.71754, -22.1122, -25.2805, 0.55", "5.31799, -21.4955, -31.4909, 0.83", "6.47885, -21.0811, -35.7801, 0.28", "7.23447, -20.8217, -38.5222, 0.55", "7.78887, -20.6159, -40.4538, 0.28", "8.22696, -20.4346, -41.8856, 1.11", "9.45646, -19.8758, -45.3145, 0.28", "9.55436, -19.8382, -45.554, 0.55", "10.0164, -19.6727, -46.6284, 0.28", "10.2004, -19.595, -47.0883, 0.55", "10.4802, -19.4894, -47.8101, 0.28", "10.6393, -19.4419, -48.2077, 0.83", "13.1544, -18.6919, -54.3171, 0.28", "13.6211, -18.5635, -55.4495, 0.55", "14.5228, -18.3114, -57.5618, 0.28", "15.1335, -18.16, -58.9046, 0.55", "15.6602, -18.0574, -59.9767, 0.55", "16.9589, -17.8439, -62.3285, 0.28", "17.339, -17.8159, -62.9574, 0.55", "18.1494, -17.8571, -64.5191, 0.28", "18.4096, -17.9291, -65.126, 0.55", "19.0251, -18.2921, -67.1275, 0.28", "19.2208, -18.4876, -68.2045, 1.11", "19.8252, -19.2909, -72.4475, 0.28", "19.9704, -19.468, -73.6513, 1.11", "20.2357, -19.7762, -76.2124, 0.28", "20.4319, -19.9678, -78.1014, 1.38", "21.3063, -20.7666, -86.5642, 0.28", "21.4134, -20.8476, -87.6121, 1.11", "22.0706, -21.142, -93.3272, 0.28", "22.2599, -21.1875, -94.7615, 0.55", "22.658, -21.1766, -97.2342, 0.28", "22.8466, -21.1546, -98.1898, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "1.618, -26.171, -9.00704, 0.55", "2.4367, -27.037, -9.65091, 0.55", "3.89227, -28.5768, -10.7957, 1.11", "5.88862, -30.6887, -12.3657, 0.83", "7.93872, -32.8575, -13.978, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-38.5985, -52.6273, -13.9028, 0.55", "-42.1701, -52.4391, -14.7355, 0.55", "-46.0674, -52.3468, -15.7644, 0.55", "-49.2502, -52.3628, -16.645, 0.55", "-51.5756, -52.4772, -17.3362, 0.83", "-53.6201, -52.6495, -17.9815, 0.28", "-54.7023, -52.768, -18.3278, 0.83", "-57.1009, -53.324, -19.3582, 0.55", "-57.9284, -53.5959, -19.7809, 0.55", "-59.2922, -54.096, -20.7472, 0.55", "-60.4981, -54.5284, -21.844, 0.55", "-61.7909, -54.9905, -23.1602, 0.83", "-64.02, -55.7311, -25.7148, 0.55", "-65.0248, -56.0146, -26.9325, 0.55", "-68.1261, -56.7126, -30.6814, 0.55", "-69.0098, -56.8509, -31.7093, 0.55", "-69.9457, -56.9454, -32.724, 0.55", "-72.7045, -57.0543, -35.5033, 0.28", "-73.6124, -57.0486, -36.3084, 0.55", "-74.6459, -57.0366, -37.1705, 0.28", "-75.7954, -57.0083, -37.9265, 1.11", "-79.1997, -57.0158, -40.1897, 0.55", "-80.5561, -56.9607, -41.0803, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-38.5985, -52.6273, -13.9028, 0.55", "-40.319, -54.8451, -13.5582, 0.55", "-41.4891, -56.2451, -13.3049, 0.55", "-43.1275, -58.1145, -13.002, 0.83", "-44.8721, -59.8975, -12.7628, 0.55", "-47.3127, -62.2796, -12.5053, 0.83", "-49.1461, -63.9871, -12.3433, 0.28", "-49.984, -64.6905, -12.2912, 0.55", "-51.2412, -65.6846, -12.3032, 0.28", "-53.1557, -67.1916, -12.422, 0.83", "-55.0261, -68.6944, -12.7842, 0.28", "-56.0749, -69.5735, -13.0392, 0.55", "-57.8429, -71.1623, -13.5308, 0.55", "-59.7326, -73.0715, -14.0852, 0.55", "-61.7773, -75.2922, -14.5522, 0.28", "-63.2329, -77.0043, -14.8082, 0.28", "-64.293, -78.1632, -14.895, 0.55", "-65.2363, -79.1452, -14.8706, 0.55", "-67.0936, -80.8187, -14.3832, 0.28", "-68.961, -82.2576, -13.5393, 0.28", "-69.4548, -82.6649, -13.2834, 0.55", "-70.9438, -84.0301, -12.3879, 0.28", "-71.4944, -84.6264, -12.0645, 0.55", "-73.2064, -86.7924, -10.8363, 0.28", "-73.8465, -87.7304, -10.3048, 0.55", "-75.1786, -90.1099, -9.08584, 0.28", "-75.9103, -91.5306, -8.35303, 0.55", "-76.8806, -93.3557, -7.52818, 0.55", "-78.3771, -96.189, -6.26277, 0.28", "-78.6463, -96.6948, -6.04587, 0.55", "-80.1426, -99.2877, -4.83382, 0.28", "-81.7617, -101.797, -3.51721, 0.28", "-84.6544, -106.123, -1.43382, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-2.41743, -81.3831, -6.64269, 0.55", "-2.88444, -84.16, -7.0256, 0.55", "-3.30764, -86.6794, -7.37151, 0.55", "-4.21159, -90.2654, -7.90866, 0.55", "-5.22847, -93.6004, -8.54641, 0.83", "-6.06472, -96.1491, -9.07566, 0.83", "-6.74925, -97.9624, -9.44478, 0.83", "-7.48449, -99.4516, -9.8211, 0.55", "-9.16579, -102.376, -10.5574, 0.55", "-10.5246, -104.672, -11.2006, 0.55", "-11.1224, -105.533, -11.4704, 0.55", "-12.5388, -107.412, -12.0718, 0.55", "-14.0335, -109.426, -12.6785, 0.55", "-14.8489, -110.559, -12.977, 0.83", "-15.5615, -111.647, -13.1785, 1.11", "-16.6409, -113.317, -13.3684, 0.83", "-16.9332, -113.76, -13.3979, 0.83", "-17.6936, -114.907, -13.4044, 0.55", "-19.2781, -117.141, -13.1182, 0.83", "-20.3443, -118.517, -12.8494, 0.83", "-21.0372, -119.334, -12.6739, 0.55", "-22.745, -121.23, -12.2308, 0.83", "-23.9808, -122.635, -11.9226, 0.83", "-25.4176, -124.349, -11.6969, 0.55", "-26.8386, -126.114, -11.6068, 0.83", "-28.5574, -128.073, -11.7206, 0.55", "-29.5564, -129.23, -11.8428, 0.55", "-30.7379, -130.724, -12.0994, 1.11", "-32.7684, -133.503, -12.6488, 0.55", "-33.653, -134.72, -12.948, 0.55", "-35.4404, -137.23, -13.5811, 0.55", "-37.1287, -139.751, -14.1599, 1.11", "-38.6359, -142.06, -14.6751, 0.55", "-40.3127, -144.6, -15.1136, 1.66" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-2.41743, -81.3831, -6.64269, 0.55", "-2.04827, -83.7497, -5.86875, 0.55", "-1.69431, -85.5666, -5.05262, 0.55", "-1.06992, -89.2228, -3.29921, 0.55", "-0.593, -92.0796, -1.98068, 0.55", "-0.118257, -94.9941, -0.60224, 0.55", "0.255985, -97.4465, 0.529141, 0.83", "0.873235, -101.691, 2.40941, 0.83", "1.16513, -103.795, 3.3183, 0.83", "1.48339, -106.563, 4.33437, 0.83", "1.69596, -108.419, 4.89526, 0.83", "1.84646, -110.61, 5.49368, 0.83", "2.11459, -114.922, 6.67237, 0.83", "2.41463, -118.714, 7.66719, 0.83", "2.78637, -122.718, 8.81177, 0.83", "3.03209, -126.598, 9.94462, 0.83", "3.20823, -130.462, 11.0131, 0.55", "3.33255, -133.524, 11.8683, 0.83", "3.36893, -136.147, 12.5689, 0.55", "3.40442, -137.257, 12.8673, 0.55", "3.52707, -140.79, 13.8484, 0.55", "3.58352, -143.272, 14.496, 0.55", "3.61081, -145.096, 14.9442, 0.55", "3.64692, -150.531, 16.3055, 0.55", "3.8555, -154.197, 17.3494, 0.55", "4.16418, -156.936, 18.2495, 0.55", "4.49539, -159.035, 19.0272, 0.55", "4.92333, -161.75, 20.147, 0.55", "5.18017, -163.354, 20.8407, 0.55", "5.99438, -167.539, 22.5165, 0.55", "6.22107, -168.966, 23.0595, 0.55", "6.41496, -170.321, 23.5807, 0.83", "6.78604, -172.503, 24.3575, 0.55", "7.06342, -173.741, 24.759, 0.55", "7.62648, -176.561, 25.4112, 0.55", "8.25903, -180.072, 25.8451, 0.55", "8.81549, -182.667, 25.9933, 0.55", "9.42274, -185.396, 26.0553, 0.55", "9.74299, -186.705, 26.0314, 0.55", "10.5584, -189.81, 25.8919, 0.55", "11.3519, -193.075, 25.8429, 0.55", "11.7375, -195.297, 25.8732, 0.55", "11.8341, -197.169, 26.0299, 0.55", "11.7637, -198.771, 26.2184, 0.55", "11.5658, -200.99, 26.6254, 0.55", "11.029, -205.026, 27.501, 0.83", "10.1593, -208.79, 28.3339, 0.55", "9.04852, -211.967, 29.1711, 0.55", "8.35039, -213.763, 29.6534, 0.83", "6.89204, -217.041, 30.5689, 0.55", "5.61159, -219.576, 31.2948, 0.55", "3.83364, -222.797, 32.0733, 0.55", "1.38926, -226.761, 33.0684, 0.83", "3.09135, -237.479, 37.098, 0.83" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "11.6254, -67.1422, -5.54322, 0.55", "11.5396, -69.2412, -4.41987, 0.55", "11.3963, -71.1193, -3.36479, 0.55", "11.1411, -73.6199, -1.8234, 0.83", "10.9665, -75.1548, -0.807561, 0.55", "10.7901, -76.7832, 0.285671, 0.83", "10.5885, -79.0361, 1.86194, 0.83", "10.5461, -80.5723, 3.02199, 0.55", "10.5683, -82.4474, 4.51888, 0.83", "10.6122, -84.2267, 5.92646, 0.55", "10.6566, -85.0623, 6.54684, 0.55", "10.7876, -86.8104, 7.90113, 0.83", "10.9536, -88.6093, 9.26268, 0.83", "11.2338, -90.5261, 10.7453, 0.55", "11.3104, -91.0378, 11.1289, 0.55", "11.5264, -92.6455, 12.283, 0.83", "11.8524, -95.5754, 14.2742, 0.55", "11.9102, -96.5639, 14.8671, 0.55", "11.9344, -98.1442, 15.7085, 0.55", "11.9617, -99.0634, 16.1547, 0.55", "12.0305, -100.306, 16.8475, 0.55", "12.1136, -101.189, 17.3794, 0.55", "12.3851, -102.422, 18.3268, 0.55", "12.7908, -103.765, 19.5826, 0.28", "13.3302, -105.328, 21.189, 0.83", "14.0292, -107.086, 23.2285, 0.28", "14.2425, -107.563, 23.8318, 0.55", "15.6701, -110.326, 27.5776, 0.28", "15.8591, -110.672, 28.0345, 0.83", "16.5353, -111.97, 29.6773, 0.28", "16.8604, -112.694, 30.4536, 0.55", "17.2112, -113.633, 31.3078, 0.55", "17.6484, -114.934, 32.2659, 0.55", "18.275, -116.889, 33.2573, 0.28", "18.4427, -117.408, 33.5138, 0.55", "19.04, -119.302, 34.3421, 0.28", "19.2229, -119.93, 34.5556, 0.55", "19.6571, -121.523, 34.9522, 0.28", "19.8146, -122.159, 35.0327, 0.83", "19.9185, -127.833, 39.6408, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "11.6254, -67.1422, -5.54322, 0.55", "11.9679, -67.6875, -5.41863, 0.55", "12.579, -68.5742, -5.1883, 0.28", "13.2266, -69.5729, -4.95816, 0.83", "13.7433, -70.3948, -4.75266, 0.28", "14.0148, -70.8476, -4.65152, 0.55", "14.3396, -71.4124, -4.5341, 0.28", "14.5464, -71.831, -4.4558, 0.55", "14.9404, -72.7342, -4.32056, 0.28", "15.1236, -73.2664, -4.29717, 0.55", "15.3994, -74.0923, -4.30626, 0.28", "15.4443, -74.2387, -4.3088, 0.55", "15.7537, -75.2475, -4.34691, 0.28", "15.8666, -75.5788, -4.35701, 0.55", "16.3126, -76.757, -4.46917, 0.55", "16.5939, -77.5463, -4.57736, 0.28", "16.7112, -77.8737, -4.6464, 0.55", "16.8582, -78.2837, -4.76605, 0.28", "16.9987, -78.6664, -4.89467, 0.55", "17.4921, -79.7543, -5.53941, 0.28", "17.7051, -80.1308, -5.85792, 0.55", "18.1311, -80.9382, -6.67928, 0.28", "18.3341, -81.3411, -7.0994, 0.55", "18.6767, -82.0464, -7.81219, 0.55", "19.5967, -83.9116, -9.62687, 0.55", "20.0449, -84.7829, -10.4422, 0.83", "20.5987, -85.872, -11.3964, 0.55", "21.0982, -86.9607, -12.2592, 0.28", "21.3576, -87.6038, -12.6776, 0.28", "21.5153, -88.0619, -12.9187, 0.55", "21.8867, -89.2514, -13.327, 0.28", "22.2811, -90.4534, -13.6063, 0.83", "22.6994, -91.5984, -13.8101, 0.55", "23.4338, -93.4916, -14.0764, 0.28", "23.9446, -94.7102, -14.1805, 0.83", "24.3275, -95.5221, -14.2356, 0.55", "25.0906, -96.9797, -14.2751, 0.28", "25.4861, -97.6043, -14.2891, 0.55", "26.0937, -98.4466, -14.2234, 0.28", "26.7717, -99.3192, -14.1004, 0.55", "27.7215, -100.609, -13.2711, 0.28", "28.0054, -101.011, -12.8829, 0.55", "28.5929, -101.825, -11.8999, 0.55", "29.3919, -102.938, -10.5268, 0.28", "29.7008, -103.376, -9.9823, 0.55", "31.7657, -106.234, -6.34702, 0.28", "31.9836, -106.527, -5.96007, 0.55", "32.7301, -107.46, -4.77093, 0.28", "33.5021, -108.371, -3.69809, 0.28", "33.7283, -108.604, -3.47857, 0.55", "35.1712, -110.009, -2.4972, 0.28", "35.6548, -110.459, -2.37717, 0.55", "36.7969, -111.505, -2.18687, 0.28", "37.2849, -111.948, -2.15505, 0.83", "38.0496, -112.626, -2.17114, 0.28", "38.742, -113.208, -2.27385, 0.28", "39.4727, -113.795, -2.46125, 0.28", "40.0574, -114.265, -2.60839, 0.55", "40.5544, -114.67, -2.77356, 0.28", "40.9898, -115.023, -2.89392, 0.55", "41.9763, -115.748, -3.11918, 0.28", "42.8287, -116.254, -3.32697, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "7.93872, -32.8575, -13.978, 0.83", "12.2548, -31.6112, -18.7988, 0.83", "15.9256, -30.5513, -22.8988, 0.83", "20.3652, -29.2693, -27.8575, 0.55", "22.5158, -28.6483, -30.2596, 0.55", "25.3609, -27.8268, -33.4374, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "7.93872, -32.8575, -13.978, 0.55", "8.09047, -34.0154, -14.2891, 0.55", "8.32788, -35.4438, -14.6445, 0.55", "8.47988, -36.4309, -14.8558, 0.83", "8.58549, -37.4405, -15.1265, 0.55", "8.64705, -38.0245, -15.2832, 0.28", "8.75212, -38.7791, -15.475, 0.55", "8.86505, -39.7329, -15.6871, 0.55", "9.00508, -40.8606, -15.9278, 0.55", "9.23467, -42.9473, -16.4456, 0.28", "9.3718, -44.2919, -16.7699, 0.55", "9.54675, -45.9575, -17.1297, 0.55", "9.86897, -48.7348, -17.6755, 0.55", "10.0201, -50.0275, -17.9032, 0.55", "10.2905, -52.4649, -18.2679, 0.28", "10.4545, -54.1286, -18.4693, 0.55", "10.5565, -55.5481, -18.6408, 0.28", "10.5783, -56.1318, -18.7736, 0.55", "10.6312, -57.2417, -19.1417, 0.28", "10.6597, -57.9986, -19.4407, 0.55", "10.7324, -59.1324, -20.0446, 0.28", "10.8431, -60.1015, -20.6665, 0.83", "11.2941, -63.2487, -22.9651, 0.55", "11.3487, -63.5904, -23.2092, 0.55", "11.4612, -64.1715, -23.5953, 0.83", "11.7747, -65.6941, -24.5239, 0.28", "12.075, -67.3861, -25.4659, 0.55", "12.3338, -69.1105, -26.3625, 0.28", "12.4906, -70.2747, -26.8806, 0.55", "12.7236, -72.1075, -27.6367, 0.28", "12.7739, -72.5271, -27.815, 0.28", "12.9768, -73.9116, -28.4325, 0.55", "13.3583, -75.9678, -29.4013, 0.28", "13.5062, -76.6191, -29.7079, 0.55", "13.9728, -78.4186, -30.5775, 0.28", "14.4426, -80.2325, -31.5143, 0.83", "14.8362, -81.8402, -32.2444, 0.28", "15.0214, -82.7136, -32.6021, 0.55", "15.2143, -84.1027, -33.2489, 0.28", "15.311, -85.5306, -34.0129, 0.28", "15.3005, -87.6842, -35.3644, 0.55", "15.2019, -89.5634, -36.5494, 0.28", "15.1234, -90.3093, -37.0603, 0.55", "14.8491, -92.3161, -38.5733, 0.28", "14.7806, -92.667, -38.8523, 0.55", "14.5663, -93.4642, -39.5804, 0.28", "14.4897, -93.7662, -39.8736, 0.55", "14.33, -94.3254, -40.6723, 0.28", "14.2941, -94.599, -40.9982, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-40.3127, -144.6, -15.1136, 0.55", "-40.014, -148.084, -13.4843, 0.55", "-39.6784, -151.256, -12.0152, 0.83", "-39.3546, -154.784, -10.4416, 0.28", "-39.277, -156.048, -9.9175, 0.55", "-39.2277, -157.986, -9.174, 0.28", "-39.3214, -161.166, -8.13209, 0.28", "-39.4029, -161.843, -7.97484, 0.28", "-39.6733, -162.965, -7.85385, 0.55", "-40.1232, -164.3, -7.90719, 0.28", "-40.8233, -166.215, -8.11943, 0.83", "-41.929, -168.801, -8.46482, 0.28", "-42.7146, -170.486, -8.76712, 0.28", "-43.0504, -171.23, -8.88821, 0.55", "-44.3622, -174.314, -9.31674, 0.28", "-44.7216, -175.189, -9.448, 0.83", "-45.4375, -176.938, -9.69672, 0.28", "-45.6269, -177.414, -9.75642, 0.55", "-46.4043, -179.376, -9.9834, 0.28", "-46.8356, -180.455, -10.0854, 0.55", "-47.6608, -182.435, -10.06, 0.28", "-48.3965, -184.188, -10.1177, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-40.3127, -144.6, -15.1136, 0.28", "-40.1903, -147.432, -16.4302, 0.28", "-40.1965, -147.711, -16.5558, 0.83", "-40.3266, -150.088, -17.575, 0.28", "-40.3897, -151.24, -18.0692, 0.83", "-40.5501, -154.171, -19.3259, 0.28", "-40.5998, -155.078, -19.7146, 0.55", "-40.9395, -157.307, -20.7805, 0.28", "-41.0395, -157.93, -21.0591, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "25.3609, -27.8268, -33.4374, 0.55", "26.1151, -28.1276, -34.8267, 0.55", "27.5128, -28.8245, -37.4804, 0.55", "28.8523, -29.5825, -39.9783, 0.83", "30.3297, -30.5059, -42.6053, 0.83", "31.1384, -31.0594, -44.0097, 0.55", "31.4464, -31.2763, -44.4847, 0.28", "31.934, -31.6079, -45.1979, 0.55", "32.3895, -31.921, -45.7679, 0.28", "32.9802, -32.2514, -46.3982, 0.55", "33.8003, -32.7906, -47.4402, 0.55", "35.4132, -33.6629, -49.5411, 0.55", "36.6368, -34.2678, -51.2212, 0.83", "37.4999, -34.65, -52.4033, 0.55", "38.7364, -35.2087, -54.316, 1.11", "40.8664, -36.1314, -57.9793, 0.55", "41.9796, -36.5509, -60.0415, 0.55", "42.7237, -36.7964, -61.507, 0.28", "43.2745, -36.9889, -62.6085, 1.11", "45.0386, -37.4801, -65.9909, 0.55", "45.6408, -37.6123, -67.1611, 0.55", "46.8237, -37.8329, -69.3625, 0.55", "48.0694, -38.1815, -71.8388, 0.83", "49.4483, -38.585, -74.5785, 0.28", "50.4567, -38.9251, -76.5425, 0.83", "51.8684, -39.4735, -79.0065, 0.28", "52.4258, -39.7535, -79.9841, 0.83", "53.4483, -40.4142, -81.8122, 0.28", "53.6738, -40.5795, -82.2097, 0.28", "54.1006, -40.8973, -82.8098, 0.55", "54.9193, -41.5933, -83.76, 0.28", "55.409, -41.9609, -84.0898, 0.55", "56.6132, -42.7725, -84.6208, 0.28", "57.1765, -43.0963, -84.7566, 0.55", "59.0333, -44.1291, -85.0849, 0.28", "59.9733, -44.6763, -85.2998, 0.83", "60.8232, -45.1783, -85.5165, 0.28", "61.2224, -45.4419, -85.6904, 0.55", "61.7838, -45.8497, -86.0639, 0.28", "62.9853, -46.878, -87.2586, 0.83", "64.0798, -47.8629, -88.5545, 0.55", "64.4236, -48.1963, -88.9721, 0.83", "65.8003, -49.5792, -90.7142, 0.28", "66.3966, -50.1882, -91.4764, 1.11", "67.8819, -51.6546, -93.3474, 0.55", "68.7453, -52.4802, -94.4011, 1.11", "70.7141, -54.2151, -96.4046, 0.55", "71.0008, -54.4481, -96.6567, 0.83", "72.7976, -55.7503, -97.9132, 0.28", "73.5024, -56.2307, -98.3069, 0.55", "74.8234, -57.0568, -98.9067, 0.28", "76.4652, -58.0504, -99.5572, 0.83", "79.6271, -59.8039, -100.709, 0.28", "80.8967, -60.4972, -101.178, 0.83", "83.658, -61.9738, -102.172, 0.28", "84.85, -62.619, -102.636, 0.55", "86.1536, -63.3286, -103.248, 0.28", "87.1509, -63.8741, -103.855, 0.55", "87.9859, -64.3391, -104.47, 0.28", "88.1945, -64.4613, -104.672, 0.55", "89.1263, -64.9941, -105.806, 0.28", "90.2502, -65.5702, -107.154, 0.55", "91.3566, -66.1424, -108.541, 0.28", "91.83, -66.4174, -109.1, 0.55", "92.3843, -66.7552, -109.735, 0.28", "92.5224, -66.8439, -109.897, 0.55", "94.1179, -67.9357, -111.695, 0.28", "94.9344, -68.4288, -112.284, 0.55", "95.7519, -68.9149, -112.694, 0.28", "96.0237, -69.0529, -112.759, 0.55", "97.2212, -69.6382, -112.907, 0.28", "98.024, -70.106, -112.974, 0.55", "100.557, -71.5781, -112.712, 0.28", "101.349, -72.0655, -112.647, 0.83", "102.647, -72.892, -112.524, 0.28", "103.74, -73.6386, -112.454, 0.55", "105.668, -75.0567, -112.372, 0.28", "108.169, -76.8394, -112.275, 0.83", "111.402, -79.1443, -112.277, 0.28", "112.415, -79.8296, -112.261, 0.83", "113.632, -80.5829, -112.221, 0.28", "114.498, -81.0621, -112.158, 0.55", "117.676, -82.4578, -111.876, 0.28", "118.06, -82.6112, -111.854, 0.55", "118.818, -82.8463, -111.78, 0.28", "119.371, -83.0518, -111.788, 0.28", "119.578, -83.1262, -111.788, 0.55", "120.977, -83.8237, -112.028, 0.28", "121.409, -84.2666, -112.348, 0.55", "122.916, -85.9943, -113.653, 0.28", "123.167, -86.3498, -113.946, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "25.3609, -27.8268, -33.4374, 0.55", "25.8951, -27.3677, -34.3699, 0.55", "26.6049, -26.6603, -35.5488, 0.55", "27.2187, -25.9622, -36.5076, 0.28", "28.8334, -23.9939, -39.0755, 0.83", "30.3857, -22.2471, -41.3739, 0.55", "31.9913, -20.5779, -43.5993, 0.55", "33.3301, -19.1777, -45.3826, 0.55", "34.3255, -18.1448, -46.7275, 0.55", "35.4686, -16.9945, -48.2214, 0.55", "36.8527, -15.6618, -49.8618, 0.55", "37.9547, -14.6766, -51.1006, 0.55", "38.8669, -13.8352, -52.2832, 0.83", "40.0121, -12.6844, -54.1106, 0.55", "40.4741, -11.9948, -55.2304, 0.55", "40.9301, -10.921, -56.8052, 0.55", "41.0819, -10.3127, -57.6779, 0.55", "41.2563, -9.14352, -59.3551, 0.55", "41.4733, -7.07152, -62.1334, 0.55", "41.5981, -5.19104, -64.4121, 1.11", "41.6212, -3.8418, -65.9529, 0.55", "41.6275, -2.57498, -67.2387, 0.83", "41.6273, -1.50857, -68.2102, 0.28", "41.6945, -0.00525391, -69.4179, 0.55", "41.918, 2.95275, -71.4719, 0.28", "41.963, 3.57377, -71.8304, 0.83", "42.044, 6.03079, -73.1334, 0.83", "42.0637, 9.22773, -74.672, 0.55", "42.0258, 10.8385, -75.3476, 0.55", "41.9281, 11.7209, -75.7279, 0.55", "41.5204, 14.1458, -76.6831, 0.28", "41.364, 14.8577, -76.9618, 0.55", "41.0478, 16.0251, -77.406, 0.28", "40.4191, 18.4511, -78.286, 0.55", "39.2971, 23.1136, -80.0341, 0.28", "39.1661, 23.7142, -80.2628, 0.55", "38.7081, 26.2283, -81.2301, 0.28", "38.5811, 27.2311, -81.6017, 0.55", "38.4586, 29.0694, -82.2383, 0.55", "38.4119, 30.3568, -82.6391, 0.55", "38.4038, 31.7156, -82.916, 0.55", "38.3632, 34.4677, -83.5038, 0.28", "38.3307, 35.7269, -83.7898, 0.55", "38.2517, 37.6959, -84.3764, 0.28", "38.1496, 38.786, -84.9039, 0.28", "38.0403, 39.7432, -85.5189, 0.55", "37.7218, 41.3085, -86.9168, 0.28", "37.2883, 42.738, -88.4525, 0.83", "36.4237, 44.5789, -90.8144, 0.55", "34.9932, 47.0993, -94.3954, 0.55", "34.6352, 47.6848, -95.2641, 0.83", "33.0186, 50.1176, -98.9284, 0.28", "32.6413, 50.6758, -99.7181, 0.55", "30.6292, 53.8003, -103.741, 0.28", "30.2744, 54.4448, -104.424, 0.55", "29.7331, 55.795, -105.597, 0.28", "29.5484, 56.4415, -106.117, 0.55", "29.3676, 58.4046, -107.34, 0.28", "29.365, 59.3864, -107.873, 0.28", "29.6295, 61.9362, -108.97, 0.55", "29.8161, 63.7034, -109.73, 0.28", "29.8763, 64.2031, -109.935, 0.55", "30.2592, 67.0267, -111.132, 0.28", "30.3135, 67.3645, -111.279, 0.55", "30.6986, 69.3251, -111.997, 0.28" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "14.2941, -94.599, -40.9982, 0.28", "13.8758, -96.2825, -41.8257, 0.28", "13.7516, -96.8575, -42.0778, 0.55", "13.4629, -98.2652, -42.6994, 0.28", "13.1325, -100.064, -43.3372, 0.55", "12.8172, -101.799, -43.9765, 0.28", "12.6317, -102.97, -44.3394, 0.55", "12.4506, -104.379, -44.7619, 0.28", "12.3719, -105.139, -44.9389, 0.55", "12.1372, -107.661, -45.3222, 0.28", "11.9757, -109.44, -45.4579, 0.55", "11.5839, -113.344, -45.6125, 0.28", "11.5454, -113.836, -45.6141, 0.55", "11.3072, -117.752, -45.5791, 0.28", "11.3014, -119.324, -45.5398, 0.55", "11.35, -120.898, -45.4834, 0.28", "11.3994, -121.636, -45.4507, 0.55", "11.6839, -124.618, -45.3572, 0.28", "11.7776, -125.444, -45.3421, 0.55", "12.548, -130.795, -45.3831, 0.28", "12.6907, -131.727, -45.4003, 0.83", "13.0423, -134.029, -45.4382, 0.28", "13.2012, -135.141, -45.4535, 0.55", "13.5345, -137.784, -45.4977, 0.28", "13.7918, -139.905, -45.5241, 0.28", "13.8769, -140.729, -45.5168, 0.55", "14.0189, -141.999, -45.5069, 0.28", "14.1218, -143.207, -45.4708, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "14.2941, -94.599, -40.9982, 0.28", "14.9468, -98.0031, -41.0199, 0.28", "15.0346, -98.6392, -40.8976, 0.55", "15.1571, -100.068, -40.5349, 0.28", "15.2084, -100.751, -40.355, 0.55", "15.2867, -102.074, -40.0843, 0.28", "15.3033, -102.426, -40.0338, 0.55", "15.2548, -106.161, -39.6932, 0.28", "15.2328, -106.84, -39.6345, 0.83", "15.1634, -108.429, -39.5843, 0.83", "14.9922, -111.606, -39.6984, 0.28", "14.9001, -113.081, -39.8501, 0.55", "14.7361, -115.275, -40.4001, 0.28", "14.6248, -116.87, -40.9622, 0.28", "14.5732, -118.008, -41.3464, 0.55", "14.4864, -119.608, -41.8968, 0.28", "14.457, -120.267, -42.1171, 0.55", "14.3455, -124.106, -43.3073, 0.28", "14.3049, -127.335, -44.4102, 0.28", "14.2969, -128.533, -44.8392, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_57", "dend_54", "dend_49", "dend_42", "dend_41", "dend_34", "dend_29", "dend_0", "dend_59", "dend_58", "dend_56", "dend_55", "dend_53", "dend_50", "dend_44", "dend_43", "dend_40", "dend_35", "dend_33", "dend_30", "dend_20", "dend_1", "dend_52", "dend_51", "dend_46", "dend_45", "dend_37", "dend_36", "dend_32", "dend_31", "dend_24", "dend_21", "dend_11", "dend_2", "dend_48", "dend_47", "dend_39", "dend_38", "dend_26", "dend_25", "dend_23", "dend_22", "dend_15", "dend_12", "dend_10", "dend_3", "dend_28", "dend_27", "dend_17", "dend_16", "dend_14", "dend_13", "dend_7", "dend_4", "dend_19", "dend_18", "dend_9", "dend_8", "dend_6", "dend_5" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_57", "dend_54", "dend_49", "dend_42", "dend_41", "dend_34", "dend_29", "dend_0", "dend_59", "dend_58", "dend_56", "dend_55", "dend_53", "dend_50", "dend_44", "dend_43", "dend_40", "dend_35", "dend_33", "dend_30", "dend_20", "dend_1", "dend_52", "dend_51", "dend_46", "dend_45", "dend_37", "dend_36", "dend_32", "dend_31", "dend_24", "dend_21", "dend_11", "dend_2", "dend_48", "dend_47", "dend_39", "dend_38", "dend_26", "dend_25", "dend_23", "dend_22", "dend_15", "dend_12", "dend_10", "dend_3", "dend_28", "dend_27", "dend_17", "dend_16", "dend_14", "dend_13", "dend_7", "dend_4", "dend_19", "dend_18", "dend_9", "dend_8", "dend_6", "dend_5" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_57", "dend_54", "dend_49", "dend_42", "dend_41", "dend_34", "dend_29", "dend_0", "axon_0", "dend_59", "dend_58", "dend_56", "dend_55", "dend_53", "dend_50", "dend_44", "dend_43", "dend_40", "dend_35", "dend_33", "dend_30", "dend_20", "dend_1", "axon_1", "dend_52", "dend_51", "dend_46", "dend_45", "dend_37", "dend_36", "dend_32", "dend_31", "dend_24", "dend_21", "dend_11", "dend_2", "dend_48", "dend_47", "dend_39", "dend_38", "dend_26", "dend_25", "dend_23", "dend_22", "dend_15", "dend_12", "dend_10", "dend_3", "dend_28", "dend_27", "dend_17", "dend_16", "dend_14", "dend_13", "dend_7", "dend_4", "dend_19", "dend_18", "dend_9", "dend_8", "dend_6", "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_57", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_0", "axon_0", "axon_0", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_20", "dend_20", "dend_20", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L23_NBC_7e8781b0f2_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_57, id: dend_57, parent: soma_0
create dend_57
public dend_57
// Section: dend_54, id: dend_54, parent: soma_0
create dend_54
public dend_54
// Section: dend_49, id: dend_49, parent: soma_0
create dend_49
public dend_49
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_53, id: dend_53, parent: dend_49
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_29
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_20, id: dend_20, parent: dend_0
create dend_20
public dend_20
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_57, dend_54, dend_49, dend_42, dend_41, dend_34, dend_29, dend_0, dend_59, dend_58, dend_56, dend_55, dend_53, dend_50, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_1, dend_52, dend_51, dend_46, dend_45, dend_37, dend_36, dend_32, dend_31, dend_24, dend_21, dend_11, dend_2, dend_48, dend_47, dend_39, dend_38, dend_26, dend_25, dend_23, dend_22, dend_15, dend_12, dend_10, dend_3, dend_28, dend_27, dend_17, dend_16, dend_14, dend_13, dend_7, dend_4, dend_19, dend_18, dend_9, dend_8, dend_6, dend_5]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_57, dend_54, dend_49, dend_42, dend_41, dend_34, dend_29, dend_0, dend_59, dend_58, dend_56, dend_55, dend_53, dend_50, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_1, dend_52, dend_51, dend_46, dend_45, dend_37, dend_36, dend_32, dend_31, dend_24, dend_21, dend_11, dend_2, dend_48, dend_47, dend_39, dend_38, dend_26, dend_25, dend_23, dend_22, dend_15, dend_12, dend_10, dend_3, dend_28, dend_27, dend_17, dend_16, dend_14, dend_13, dend_7, dend_4, dend_19, dend_18, dend_9, dend_8, dend_6, dend_5]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_57, dend_54, dend_49, dend_42, dend_41, dend_34, dend_29, dend_0, axon_0, dend_59, dend_58, dend_56, dend_55, dend_53, dend_50, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_1, axon_1, dend_52, dend_51, dend_46, dend_45, dend_37, dend_36, dend_32, dend_31, dend_24, dend_21, dend_11, dend_2, dend_48, dend_47, dend_39, dend_38, dend_26, dend_25, dend_23, dend_22, dend_15, dend_12, dend_10, dend_3, dend_28, dend_27, dend_17, dend_16, dend_14, dend_13, dend_7, dend_4, dend_19, dend_18, dend_9, dend_8, dend_6, dend_5]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_59
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_0, axon_0, axon_0, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_1, dend_1, dend_1, axon_1, axon_1, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_57(0), soma_0(0.4500000363863218)
    connect dend_54(0), soma_0(0.4500000363863218)
    connect dend_49(0), soma_0(0.4500000363863218)
    connect dend_42(0), soma_0(0.4500000363863218)
    connect dend_41(0), soma_0(0.4500000363863218)
    connect dend_34(0), soma_0(0.4500000363863218)
    connect dend_29(0), soma_0(0.4500000363863218)
    connect dend_0(0), soma_0(0.4500000363863218)
    connect axon_0(0), soma_0(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_53(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_20(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -4.72306, 5.30436, 4.20388, 2.54287 ) }
    soma_0 { pt3dadd( -4.25223, 4.78627, 3.78879, 4.68725 ) }
    soma_0 { pt3dadd( -3.7814, 4.26817, 3.37371, 6.22673 ) }
    soma_0 { pt3dadd( -3.31057, 3.75008, 2.95862, 7.64701 ) }
    soma_0 { pt3dadd( -2.83974, 3.23199, 2.54353, 8.55761 ) }
    soma_0 { pt3dadd( -2.36891, 2.7139, 2.12844, 8.96549 ) }
    soma_0 { pt3dadd( -1.89808, 2.19581, 1.71335, 9.2975 ) }
    soma_0 { pt3dadd( -1.42725, 1.67772, 1.29826, 9.48549 ) }
    soma_0 { pt3dadd( -0.956417, 1.15963, 0.883172, 9.67333 ) }
    soma_0 { pt3dadd( -0.485586, 0.641536, 0.468083, 9.75336 ) }
    soma_0 { pt3dadd( -0.0147564, 0.123445, 0.0529936, 9.80295 ) }
    soma_0 { pt3dadd( 0.456074, -0.394646, -0.362095, 9.88568 ) }
    soma_0 { pt3dadd( 0.926904, -0.912738, -0.777184, 9.94624 ) }
    soma_0 { pt3dadd( 1.39773, -1.43083, -1.19227, 9.39229 ) }
    soma_0 { pt3dadd( 1.86856, -1.94892, -1.60736, 8.64644 ) }
    soma_0 { pt3dadd( 2.33939, -2.46701, -2.02245, 7.85208 ) }
    soma_0 { pt3dadd( 2.81022, -2.9851, -2.43754, 7.02739 ) }
    soma_0 { pt3dadd( 3.28105, -3.50319, -2.85263, 6.08715 ) }
    soma_0 { pt3dadd( 3.75188, -4.02128, -3.26772, 4.76023 ) }
    soma_0 { pt3dadd( 4.22271, -4.53938, -3.68281, 3.42054 ) }
    soma_0 { pt3dadd( 4.69354, -5.05747, -4.0979, 1.96741 ) }
    // Section: dend_57, id: dend_57, parent: soma_0 (entry count 21/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -2.10822, -3.24373, -18.4649, 1.11 ) }
    dend_57 { pt3dadd( -4.25845, -4.52245, -31.8024, 1.11 ) }
    // Section: dend_54, id: dend_54, parent: soma_0 (entry count 23/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 2.32178, -5.00673, -18.1149, 1.11 ) }
    dend_54 { pt3dadd( 3.28752, -6.1379, -18.1077, 1.11 ) }
    dend_54 { pt3dadd( 5.80609, -9.04414, -18.4695, 1.11 ) }
    dend_54 { pt3dadd( 7.02592, -10.4388, -18.9719, 1.11 ) }
    dend_54 { pt3dadd( 10.0252, -13.6869, -20.5207, 0.83 ) }
    dend_54 { pt3dadd( 12.6303, -16.3939, -21.9631, 0.83 ) }
    dend_54 { pt3dadd( 14.9481, -18.6442, -23.1905, 0.83 ) }
    dend_54 { pt3dadd( 18.0861, -21.5254, -25.1938, 0.83 ) }
    dend_54 { pt3dadd( 22.3337, -25.266, -28.2002, 0.83 ) }
    dend_54 { pt3dadd( 24.1659, -26.8382, -29.6307, 0.83 ) }
    dend_54 { pt3dadd( 25.8351, -28.1677, -31.0963, 0.83 ) }
    dend_54 { pt3dadd( 29.2859, -30.6073, -34.2816, 0.83 ) }
    dend_54 { pt3dadd( 32.833, -32.8037, -37.4125, 0.83 ) }
    // Section: dend_49, id: dend_49, parent: soma_0 (entry count 36/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 2.98178, 0.405271, -16.4649, 1.11 ) }
    dend_49 { pt3dadd( 4.33552, 0.028641, -16.4641, 1.11 ) }
    dend_49 { pt3dadd( 6.30823, -0.520197, -16.4629, 0.83 ) }
    dend_49 { pt3dadd( 8.28914, -1.07132, -16.4617, 0.55 ) }
    dend_49 { pt3dadd( 10.2141, -1.60686, -16.4606, 0.55 ) }
    dend_49 { pt3dadd( 12.0545, -2.1189, -16.4595, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 42/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -0.808223, 8.26702, 4.65513, 1.11 ) }
    dend_42 { pt3dadd( -1.71767, 10.9911, 4.6969, 1.11 ) }
    dend_42 { pt3dadd( -2.49344, 13.3147, 4.73253, 0.55 ) }
    dend_42 { pt3dadd( -3.01979, 14.8913, 4.75671, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 46/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 1.24177, -5.81648, 2.24513, 1.11 ) }
    dend_41 { pt3dadd( 2.42409, -8.08959, 2.95707, 1.11 ) }
    dend_41 { pt3dadd( 3.15549, -9.5077, 3.09584, 1.11 ) }
    dend_41 { pt3dadd( 3.74587, -10.5134, 3.08695, 0.83 ) }
    dend_41 { pt3dadd( 4.5427, -11.8115, 2.98375, 0.55 ) }
    dend_41 { pt3dadd( 5.435, -13.1492, 2.83224, 0.28 ) }
    dend_41 { pt3dadd( 6.21688, -14.3105, 2.69734, 1.11 ) }
    dend_41 { pt3dadd( 8.17695, -17.1539, 2.28308, 0.55 ) }
    dend_41 { pt3dadd( 9.16226, -18.5688, 1.88107, 0.55 ) }
    dend_41 { pt3dadd( 10.3626, -20.5228, 0.988161, 0.83 ) }
    dend_41 { pt3dadd( 11.0649, -21.8648, 0.206652, 0.55 ) }
    dend_41 { pt3dadd( 11.7206, -23.0971, -0.696921, 0.83 ) }
    dend_41 { pt3dadd( 12.4764, -24.4889, -1.82937, 0.83 ) }
    dend_41 { pt3dadd( 14.0609, -27.4192, -4.19577, 0.55 ) }
    dend_41 { pt3dadd( 15.4732, -30.0812, -6.42634, 0.55 ) }
    dend_41 { pt3dadd( 16.0486, -31.2042, -7.38403, 0.55 ) }
    dend_41 { pt3dadd( 17.2591, -33.7858, -9.41498, 0.83 ) }
    dend_41 { pt3dadd( 17.5614, -34.4379, -9.8526, 0.55 ) }
    dend_41 { pt3dadd( 18.3373, -36.1583, -10.6701, 0.83 ) }
    dend_41 { pt3dadd( 18.9543, -37.7088, -10.9864, 0.55 ) }
    dend_41 { pt3dadd( 19.5945, -39.2677, -11.1913, 0.55 ) }
    dend_41 { pt3dadd( 20.2015, -41.0248, -11.4129, 1.11 ) }
    dend_41 { pt3dadd( 20.6987, -42.8867, -11.6271, 1.11 ) }
    dend_41 { pt3dadd( 21.0616, -44.3226, -11.8395, 0.83 ) }
    dend_41 { pt3dadd( 21.5218, -46.1821, -12.1674, 0.83 ) }
    dend_41 { pt3dadd( 22.2883, -48.8163, -12.6681, 0.55 ) }
    dend_41 { pt3dadd( 23.0045, -50.8118, -13.0431, 0.55 ) }
    dend_41 { pt3dadd( 23.4624, -51.9829, -13.2628, 0.28 ) }
    dend_41 { pt3dadd( 23.6551, -52.4604, -13.3519, 0.83 ) }
    dend_41 { pt3dadd( 24.3109, -53.9565, -13.6211, 0.55 ) }
    dend_41 { pt3dadd( 24.8201, -55.0216, -13.8703, 0.55 ) }
    dend_41 { pt3dadd( 25.4528, -56.3926, -14.2605, 0.28 ) }
    dend_41 { pt3dadd( 25.9528, -57.3944, -14.662, 1.11 ) }
    dend_41 { pt3dadd( 26.4749, -58.4163, -15.1487, 0.28 ) }
    dend_41 { pt3dadd( 26.8406, -59.1306, -15.5223, 0.55 ) }
    dend_41 { pt3dadd( 27.9042, -61.2656, -16.6851, 0.28 ) }
    dend_41 { pt3dadd( 28.2291, -61.97, -17.0673, 0.83 ) }
    dend_41 { pt3dadd( 28.9791, -63.6092, -17.9794, 0.83 ) }
    dend_41 { pt3dadd( 29.5781, -64.8756, -18.6461, 0.28 ) }
    dend_41 { pt3dadd( 29.751, -65.271, -18.8169, 0.55 ) }
    dend_41 { pt3dadd( 30.1135, -66.1832, -19.1035, 0.28 ) }
    dend_41 { pt3dadd( 30.2967, -66.65, -19.1843, 0.55 ) }
    dend_41 { pt3dadd( 30.7451, -67.8759, -19.336, 0.28 ) }
    dend_41 { pt3dadd( 30.8437, -68.1822, -19.3758, 0.55 ) }
    dend_41 { pt3dadd( 31.3365, -69.7661, -19.5701, 0.28 ) }
    dend_41 { pt3dadd( 31.6127, -70.5547, -19.6696, 0.55 ) }
    dend_41 { pt3dadd( 31.9525, -71.4562, -19.7797, 0.28 ) }
    dend_41 { pt3dadd( 32.5543, -72.9855, -19.9278, 0.83 ) }
    dend_41 { pt3dadd( 33.2076, -74.6252, -20.0578, 0.28 ) }
    dend_41 { pt3dadd( 33.6834, -75.793, -20.164, 0.55 ) }
    dend_41 { pt3dadd( 34.1519, -76.9123, -20.2757, 0.28 ) }
    dend_41 { pt3dadd( 34.577, -78.0206, -20.3918, 0.83 ) }
    dend_41 { pt3dadd( 35.075, -79.4007, -20.5296, 0.28 ) }
    dend_41 { pt3dadd( 35.44, -80.4223, -20.6132, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_41 { pt3dadd( 36.073, -82.2866, -20.7226, 0.28 ) }
    dend_41 { pt3dadd( 36.2769, -82.9588, -20.7571, 0.83 ) }
    dend_41 { pt3dadd( 36.608, -84.1732, -20.8091, 0.83 ) }
    dend_41 { pt3dadd( 37.0603, -85.8183, -20.8661, 0.83 ) }
    dend_41 { pt3dadd( 37.558, -87.6468, -20.9091, 0.28 ) }
    dend_41 { pt3dadd( 37.8605, -88.5275, -20.9512, 0.83 ) }
    dend_41 { pt3dadd( 38.4567, -89.8174, -21.0244, 0.28 ) }
    dend_41 { pt3dadd( 38.7252, -90.1946, -21.086, 0.55 ) }
    dend_41 { pt3dadd( 39.5203, -91.027, -21.3008, 0.28 ) }
    dend_41 { pt3dadd( 40.1944, -91.5706, -21.6361, 0.55 ) }
    dend_41 { pt3dadd( 42.0388, -92.8665, -22.7769, 0.28 ) }
    dend_41 { pt3dadd( 43.2186, -93.6557, -23.7212, 0.83 ) }
    dend_41 { pt3dadd( 45.5538, -95.1949, -25.8545, 0.28 ) }
    dend_41 { pt3dadd( 46.0558, -95.5621, -26.3934, 0.55 ) }
    dend_41 { pt3dadd( 48.7864, -97.8262, -29.7463, 0.28 ) }
    dend_41 { pt3dadd( 49.0053, -98.0546, -30.079, 0.55 ) }
    dend_41 { pt3dadd( 50.4807, -100.13, -32.9703, 0.28 ) }
    dend_41 { pt3dadd( 50.7056, -100.573, -33.5048, 0.55 ) }
    dend_41 { pt3dadd( 51.1772, -101.902, -34.8385, 0.28 ) }
    dend_41 { pt3dadd( 51.4599, -102.858, -35.6247, 0.83 ) }
    dend_41 { pt3dadd( 52.2105, -105.92, -37.4965, 0.28 ) }
    dend_41 { pt3dadd( 52.2613, -106.119, -37.5959, 0.55 ) }
    dend_41 { pt3dadd( 53.2136, -109.88, -39.0085, 0.28 ) }
    dend_41 { pt3dadd( 53.3294, -110.314, -39.1636, 0.83 ) }
    dend_41 { pt3dadd( 53.8604, -112.107, -39.7203, 0.28 ) }
    dend_41 { pt3dadd( 54.0657, -112.801, -39.9038, 0.83 ) }
    dend_41 { pt3dadd( 54.7912, -115.114, -40.206, 0.28 ) }
    dend_41 { pt3dadd( 55.0144, -115.818, -40.291, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 28/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 3.45178, 1.14327, -6.46487, 0.83 ) }
    dend_34 { pt3dadd( 6.3899, 1.46413, -6.41032, 0.83 ) }
    dend_34 { pt3dadd( 9.57362, 1.81182, -6.35121, 0.83 ) }
    dend_34 { pt3dadd( 13.0424, 2.19063, -6.28681, 1.11 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 32/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -4.64822, 0.231021, 13.8451, 0.83 ) }
    dend_29 { pt3dadd( -5.82091, -1.74122, 13.8451, 0.83 ) }
    dend_29 { pt3dadd( -7.30525, -4.23761, 13.8451, 0.83 ) }
    dend_29 { pt3dadd( -8.31779, -5.94049, 13.8451, 0.83 ) }
    dend_29 { pt3dadd( -10.6642, -9.88678, 13.8451, 0.83 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 37/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -2.04822, -6.79023, -6.38487, 2.49 ) }
    dend_0 { pt3dadd( -3.58155, -12.1788, -6.38487, 2.49 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 39/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 4.69354, -5.05747, -4.0979, 0.583599 ) }
    axon_0 { pt3dadd( 14.7817, -16.1583, -4.0979, 0.583599 ) }
    axon_0 { pt3dadd( 24.8699, -27.2591, -4.0979, 0.583599 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 42/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -4.25845, -4.52245, -31.8024, 1.11 ) }
    dend_59 { pt3dadd( -4.92662, 3.11618, -17.2172, 1.11 ) }
    dend_59 { pt3dadd( -4.95996, 4.4866, -15.4097, 0.55 ) }
    dend_59 { pt3dadd( -4.95096, 5.64884, -14.3276, 0.83 ) }
    dend_59 { pt3dadd( -4.88582, 7.52602, -14.0342, 0.55 ) }
    dend_59 { pt3dadd( -4.87505, 9.9718, -14.6462, 0.55 ) }
    dend_59 { pt3dadd( -4.97273, 13.2516, -15.7643, 1.11 ) }
    dend_59 { pt3dadd( -5.03899, 16.3589, -17.6419, 0.83 ) }
    dend_59 { pt3dadd( -4.6813, 21.7949, -21.874, 0.55 ) }
    dend_59 { pt3dadd( -4.42905, 23.0067, -23.2983, 0.55 ) }
    dend_59 { pt3dadd( -4.16045, 23.7186, -24.5165, 0.55 ) }
    dend_59 { pt3dadd( -3.7166, 24.6165, -26.3621, 0.55 ) }
    dend_59 { pt3dadd( -2.92394, 25.9413, -29.2307, 0.55 ) }
    dend_59 { pt3dadd( -1.6403, 27.8424, -33.1576, 0.55 ) }
    dend_59 { pt3dadd( 0.432877, 30.8242, -38.9307, 0.83 ) }
    dend_59 { pt3dadd( 2.33771, 33.6785, -44.2132, 0.28 ) }
    dend_59 { pt3dadd( 3.03303, 34.7648, -46.1253, 0.83 ) }
    dend_59 { pt3dadd( 4.53886, 37.3926, -50.5589, 0.55 ) }
    dend_59 { pt3dadd( 4.7753, 37.9551, -51.4079, 0.55 ) }
    dend_59 { pt3dadd( 5.41342, 40.5092, -55.0679, 1.11 ) }
    dend_59 { pt3dadd( 5.88012, 42.7076, -58.1941, 0.28 ) }
    dend_59 { pt3dadd( 6.08509, 43.7076, -59.7653, 0.55 ) }
    dend_59 { pt3dadd( 6.25264, 44.4853, -61.0725, 0.28 ) }
    dend_59 { pt3dadd( 6.6021, 45.8206, -63.5765, 0.55 ) }
    dend_59 { pt3dadd( 7.91851, 49.9712, -71.2734, 0.28 ) }
    dend_59 { pt3dadd( 8.65255, 51.9538, -74.8757, 0.83 ) }
    dend_59 { pt3dadd( 9.53391, 54.123, -78.7195, 0.28 ) }
    dend_59 { pt3dadd( 10.0471, 55.3743, -80.7833, 0.83 ) }
    dend_59 { pt3dadd( 11.9493, 60.0228, -87.7312, 0.28 ) }
    dend_59 { pt3dadd( 12.703, 61.968, -90.1592, 0.28 ) }
    dend_59 { pt3dadd( 13.5207, 64.5604, -92.6674, 1.38 ) }
    dend_59 { pt3dadd( 14.2933, 67.7773, -95.396, 0.55 ) }
    dend_59 { pt3dadd( 14.7343, 70.0337, -97.1405, 0.28 ) }
    dend_59 { pt3dadd( 15.0345, 72.1409, -98.5963, 0.55 ) }
    dend_59 { pt3dadd( 15.3646, 75.8948, -100.569, 0.28 ) }
    dend_59 { pt3dadd( 15.556, 78.076, -101.565, 0.83 ) }
    dend_59 { pt3dadd( 15.8307, 80.9129, -102.579, 0.28 ) }
    dend_59 { pt3dadd( 15.9512, 81.9229, -102.856, 0.55 ) }
    dend_59 { pt3dadd( 16.2347, 83.7215, -103.282, 0.28 ) }
    dend_59 { pt3dadd( 16.475, 84.8373, -103.49, 0.83 ) }
    dend_59 { pt3dadd( 17.8442, 90.0802, -104.311, 0.28 ) }
    dend_59 { pt3dadd( 18.178, 91.0802, -104.437, 0.83 ) }
    dend_59 { pt3dadd( 19.5159, 94.344, -104.799, 0.28 ) }
    dend_59 { pt3dadd( 20.129, 95.6095, -104.982, 0.55 ) }
    dend_59 { pt3dadd( 21.3285, 97.8521, -105.412, 0.28 ) }
    dend_59 { pt3dadd( 21.7135, 98.5576, -105.57, 0.55 ) }
    dend_59 { pt3dadd( 23.1788, 101.242, -106.163, 0.28 ) }
    dend_59 { pt3dadd( 23.8303, 102.381, -106.433, 0.55 ) }
    dend_59 { pt3dadd( 24.5766, 103.613, -106.753, 0.28 ) }
    dend_59 { pt3dadd( 25.6255, 105.43, -107.222, 0.55 ) }
    dend_59 { pt3dadd( 27.6306, 109.498, -108.177, 0.28 ) }
    dend_59 { pt3dadd( 28.3845, 111.311, -108.548, 0.83 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 94/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -4.25845, -4.52245, -31.8024, 0.55 ) }
    dend_58 { pt3dadd( -6.76565, -3.83999, -34.0953, 0.55 ) }
    dend_58 { pt3dadd( -11.159, -3.0538, -37.5747, 0.55 ) }
    dend_58 { pt3dadd( -12.7565, -2.83342, -38.7434, 0.83 ) }
    dend_58 { pt3dadd( -14.3785, -2.61884, -39.8461, 0.28 ) }
    dend_58 { pt3dadd( -15.2364, -2.4879, -40.3987, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_58 { pt3dadd( -18.177, -2.01501, -42.2031, 0.28 ) }
    dend_58 { pt3dadd( -19.9132, -1.73608, -43.1475, 0.55 ) }
    dend_58 { pt3dadd( -22.2581, -1.49447, -44.1814, 0.28 ) }
    dend_58 { pt3dadd( -23.6511, -1.30802, -44.7477, 0.55 ) }
    dend_58 { pt3dadd( -26.0756, -0.862189, -45.7432, 0.28 ) }
    dend_58 { pt3dadd( -26.9344, -0.658357, -46.0896, 0.55 ) }
    dend_58 { pt3dadd( -28.2683, -0.246323, -46.6003, 0.28 ) }
    dend_58 { pt3dadd( -29.8757, 0.190437, -47.1845, 0.55 ) }
    dend_58 { pt3dadd( -32.5267, 0.808822, -48.027, 0.28 ) }
    dend_58 { pt3dadd( -33.4497, 0.981484, -48.3656, 0.55 ) }
    dend_58 { pt3dadd( -35.4016, 1.3032, -49.1016, 0.28 ) }
    dend_58 { pt3dadd( -36.2036, 1.43691, -49.4153, 0.55 ) }
    dend_58 { pt3dadd( -40.4122, 2.07158, -51.2205, 0.28 ) }
    dend_58 { pt3dadd( -41.7745, 2.25851, -51.8484, 0.55 ) }
    dend_58 { pt3dadd( -45.5453, 2.6755, -53.858, 0.28 ) }
    dend_58 { pt3dadd( -47.6041, 2.83753, -55.0718, 0.28 ) }
    dend_58 { pt3dadd( -48.6016, 2.88662, -55.8045, 0.55 ) }
    dend_58 { pt3dadd( -51.498, 3.0546, -58.168, 0.28 ) }
    dend_58 { pt3dadd( -52.212, 3.09997, -58.795, 0.55 ) }
    dend_58 { pt3dadd( -55.5252, 3.2877, -61.9637, 0.28 ) }
    dend_58 { pt3dadd( -56.9028, 3.35499, -63.3056, 0.55 ) }
    dend_58 { pt3dadd( -60.8476, 3.51275, -67.3268, 0.28 ) }
    dend_58 { pt3dadd( -62.7687, 3.59571, -69.3082, 0.28 ) }
    dend_58 { pt3dadd( -63.818, 3.64857, -70.3744, 0.55 ) }
    dend_58 { pt3dadd( -67.9207, 3.8982, -74.7454, 0.28 ) }
    dend_58 { pt3dadd( -69.119, 3.98007, -76.0041, 0.28 ) }
    dend_58 { pt3dadd( -69.5396, 3.99309, -76.423, 0.55 ) }
    dend_58 { pt3dadd( -71.0624, 3.94896, -77.8085, 0.28 ) }
    dend_58 { pt3dadd( -72.0771, 3.88699, -78.7355, 0.55 ) }
    dend_58 { pt3dadd( -76.886, 3.50427, -82.9003, 0.28 ) }
    dend_58 { pt3dadd( -78.4084, 3.30469, -84.1043, 0.55 ) }
    dend_58 { pt3dadd( -82.4816, 2.74279, -87.1038, 0.28 ) }
    dend_58 { pt3dadd( -83.8309, 2.54472, -88.0154, 0.55 ) }
    dend_58 { pt3dadd( -86.9162, 2.03565, -89.9562, 0.28 ) }
    dend_58 { pt3dadd( -88.1957, 1.7862, -90.7047, 0.55 ) }
    dend_58 { pt3dadd( -91.2396, 1.11299, -92.1957, 0.28 ) }
    dend_58 { pt3dadd( -93.6774, 0.56928, -93.4102, 0.28 ) }
    dend_58 { pt3dadd( -94.6672, 0.366702, -93.9015, 0.55 ) }
    dend_58 { pt3dadd( -96.3873, -0.0405249, -94.7463, 0.28 ) }
    dend_58 { pt3dadd( -97.6475, -0.411819, -95.2795, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 40/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 32.833, -32.8037, -37.4125, 0.55 ) }
    dend_56 { pt3dadd( 33.6532, -33.4306, -38.6898, 0.55 ) }
    dend_56 { pt3dadd( 34.3672, -33.9397, -39.6066, 0.55 ) }
    dend_56 { pt3dadd( 36.9674, -35.7729, -43.4386, 0.55 ) }
    dend_56 { pt3dadd( 39.2602, -37.5179, -46.6507, 0.55 ) }
    dend_56 { pt3dadd( 40.2374, -38.2957, -48.098, 0.55 ) }
    dend_56 { pt3dadd( 41.1704, -39.0828, -49.4644, 0.55 ) }
    dend_56 { pt3dadd( 43.3098, -40.9762, -52.7023, 0.55 ) }
    dend_56 { pt3dadd( 45.7346, -43.312, -56.4177, 0.28 ) }
    dend_56 { pt3dadd( 47.8383, -45.5207, -59.4448, 0.83 ) }
    dend_56 { pt3dadd( 51.0457, -49.1397, -63.743, 0.55 ) }
    dend_56 { pt3dadd( 52.2327, -50.5324, -65.2288, 0.55 ) }
    dend_56 { pt3dadd( 54.0791, -53.0237, -67.3939, 0.83 ) }
    dend_56 { pt3dadd( 54.9727, -54.3558, -68.2833, 0.83 ) }
    dend_56 { pt3dadd( 55.7861, -55.6235, -68.9432, 0.55 ) }
    dend_56 { pt3dadd( 57.5911, -58.4829, -70.369, 1.11 ) }
    dend_56 { pt3dadd( 59.2751, -61.3712, -71.3212, 0.55 ) }
    dend_56 { pt3dadd( 60.4115, -63.33, -71.868, 0.83 ) }
    dend_56 { pt3dadd( 60.9532, -64.2654, -72.079, 0.83 ) }
    dend_56 { pt3dadd( 62.3899, -66.7323, -72.7233, 0.55 ) }
    dend_56 { pt3dadd( 63.5699, -68.6946, -73.3263, 0.28 ) }
    dend_56 { pt3dadd( 64.674, -70.316, -73.8755, 0.83 ) }
    dend_56 { pt3dadd( 65.6712, -71.6693, -74.3356, 0.28 ) }
    dend_56 { pt3dadd( 66.6437, -72.8354, -74.7347, 0.55 ) }
    dend_56 { pt3dadd( 69.0012, -75.4951, -75.5269, 0.28 ) }
    dend_56 { pt3dadd( 69.8646, -76.4251, -75.7222, 0.83 ) }
    dend_56 { pt3dadd( 71.4982, -78.2181, -75.9978, 0.28 ) }
    dend_56 { pt3dadd( 72.3841, -79.1722, -76.1147, 0.55 ) }
    dend_56 { pt3dadd( 73.8638, -80.7531, -76.2444, 0.28 ) }
    dend_56 { pt3dadd( 75.2145, -82.1358, -76.2392, 1.38 ) }
    dend_56 { pt3dadd( 77.3665, -84.2441, -76.0731, 0.55 ) }
    dend_56 { pt3dadd( 78.3248, -85.1923, -75.9644, 0.55 ) }
    dend_56 { pt3dadd( 79.3083, -86.159, -75.8206, 0.83 ) }
    dend_56 { pt3dadd( 80.4718, -87.2886, -75.609, 0.83 ) }
    dend_56 { pt3dadd( 81.1602, -87.9994, -75.428, 0.28 ) }
    dend_56 { pt3dadd( 82.1674, -89.0768, -75.1289, 0.55 ) }
    dend_56 { pt3dadd( 83.3555, -90.4824, -74.7611, 0.28 ) }
    dend_56 { pt3dadd( 83.7699, -91.0201, -74.6342, 0.28 ) }
    dend_56 { pt3dadd( 84.3861, -91.902, -74.4926, 0.55 ) }
    dend_56 { pt3dadd( 85.4691, -93.4923, -74.3551, 0.28 ) }
    dend_56 { pt3dadd( 86.4141, -94.7831, -74.3735, 0.83 ) }
    dend_56 { pt3dadd( 87.3981, -95.9769, -74.4774, 0.28 ) }
    dend_56 { pt3dadd( 88.0446, -96.6541, -74.6228, 0.83 ) }
    dend_56 { pt3dadd( 89.3699, -97.9116, -74.9372, 0.28 ) }
    dend_56 { pt3dadd( 89.8863, -98.3438, -75.0524, 0.83 ) }
    dend_56 { pt3dadd( 91.7544, -99.7731, -75.4418, 0.28 ) }
    dend_56 { pt3dadd( 93.2801, -100.905, -75.7205, 0.83 ) }
    dend_56 { pt3dadd( 95.1384, -102.194, -76.0355, 0.55 ) }
    dend_56 { pt3dadd( 97.1447, -103.559, -76.3513, 0.83 ) }
    dend_56 { pt3dadd( 98.768, -104.721, -76.5929, 0.83 ) }
    dend_56 { pt3dadd( 99.6191, -105.384, -76.7086, 0.83 ) }
    dend_56 { pt3dadd( 101.932, -107.254, -77.0602, 0.28 ) }
    dend_56 { pt3dadd( 103.103, -108.18, -77.239, 0.28 ) }
    dend_56 { pt3dadd( 103.869, -108.741, -77.3653, 0.83 ) }
    dend_56 { pt3dadd( 105.949, -110.012, -78.1778, 0.28 ) }
    dend_56 { pt3dadd( 107.029, -110.608, -78.7984, 0.83 ) }
    dend_56 { pt3dadd( 108.678, -111.444, -79.995, 0.55 ) }
    dend_56 { pt3dadd( 110.111, -112.122, -81.2291, 0.55 ) }
    dend_56 { pt3dadd( 111.709, -112.897, -82.7288, 0.83 ) }
    dend_56 { pt3dadd( 115.421, -114.651, -86.1439, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_56 { pt3dadd( 116.633, -115.173, -87.1154, 0.55 ) }
    dend_56 { pt3dadd( 116.969, -115.328, -87.34, 0.55 ) }
    dend_56 { pt3dadd( 117.638, -115.729, -87.6863, 0.55 ) }
    dend_56 { pt3dadd( 118.802, -116.553, -88.2045, 0.83 ) }
    dend_56 { pt3dadd( 120.591, -117.859, -88.7986, 0.55 ) }
    dend_56 { pt3dadd( 122.81, -119.458, -89.2914, 0.55 ) }
    dend_56 { pt3dadd( 124.79, -120.785, -89.7371, 0.28 ) }
    dend_56 { pt3dadd( 126.804, -122.064, -90.1759, 1.11 ) }
    dend_56 { pt3dadd( 129.796, -123.865, -90.8934, 0.28 ) }
    dend_56 { pt3dadd( 130.367, -124.194, -91.0409, 0.28 ) }
    dend_56 { pt3dadd( 131.438, -124.832, -91.3466, 0.55 ) }
    dend_56 { pt3dadd( 133.032, -125.822, -91.8197, 0.28 ) }
    dend_56 { pt3dadd( 134.543, -126.762, -92.2022, 0.83 ) }
    dend_56 { pt3dadd( 136.888, -128.085, -92.6302, 0.28 ) }
    dend_56 { pt3dadd( 137.464, -128.424, -92.688, 0.55 ) }
    dend_56 { pt3dadd( 138.238, -128.891, -92.7614, 0.28 ) }
    dend_56 { pt3dadd( 139.124, -129.481, -92.8348, 0.55 ) }
    dend_56 { pt3dadd( 140.724, -130.713, -92.94, 0.28 ) }
    dend_56 { pt3dadd( 142.305, -132.167, -92.9832, 0.83 ) }
    dend_56 { pt3dadd( 143.221, -133.064, -92.9622, 0.28 ) }
    dend_56 { pt3dadd( 144.21, -134.085, -92.9201, 0.83 ) }
    dend_56 { pt3dadd( 145.975, -135.974, -92.8203, 0.28 ) }
    dend_56 { pt3dadd( 146.673, -136.83, -92.7721, 0.83 ) }
    dend_56 { pt3dadd( 148.586, -139.467, -92.6104, 0.28 ) }
    dend_56 { pt3dadd( 148.958, -140.032, -92.5822, 0.55 ) }
    dend_56 { pt3dadd( 150.641, -142.552, -92.4511, 0.28 ) }
    dend_56 { pt3dadd( 151.132, -143.246, -92.5231, 0.55 ) }
    dend_56 { pt3dadd( 152.243, -144.667, -92.9844, 0.28 ) }
    dend_56 { pt3dadd( 152.808, -145.375, -93.2896, 0.55 ) }
    dend_56 { pt3dadd( 153.947, -146.774, -94.1692, 0.28 ) }
    dend_56 { pt3dadd( 154.686, -147.684, -94.8792, 0.55 ) }
    dend_56 { pt3dadd( 157.531, -150.85, -98.5556, 0.28 ) }
    dend_56 { pt3dadd( 158.046, -151.36, -99.3025, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 33/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 32.833, -32.8037, -37.4125, 0.55 ) }
    dend_55 { pt3dadd( 35.0152, -33.1235, -40.5458, 0.55 ) }
    dend_55 { pt3dadd( 36.1672, -33.552, -42.3741, 0.55 ) }
    dend_55 { pt3dadd( 36.9072, -33.8182, -43.5585, 0.55 ) }
    dend_55 { pt3dadd( 38.3971, -34.2494, -45.9114, 0.55 ) }
    dend_55 { pt3dadd( 39.5303, -34.4372, -47.5845, 0.83 ) }
    dend_55 { pt3dadd( 43.8735, -34.7148, -54.9132, 0.55 ) }
    dend_55 { pt3dadd( 44.9509, -34.6191, -56.9813, 0.55 ) }
    dend_55 { pt3dadd( 45.6826, -34.4926, -58.4757, 0.55 ) }
    dend_55 { pt3dadd( 46.2795, -34.3613, -59.7296, 0.55 ) }
    dend_55 { pt3dadd( 47.3868, -34.08, -61.987, 0.55 ) }
    dend_55 { pt3dadd( 50.3084, -33.1667, -67.4296, 1.11 ) }
    dend_55 { pt3dadd( 51.5503, -32.6525, -69.4628, 0.55 ) }
    dend_55 { pt3dadd( 52.4255, -32.2515, -71.0955, 1.11 ) }
    dend_55 { pt3dadd( 53.7138, -31.6814, -73.6246, 0.55 ) }
    dend_55 { pt3dadd( 54.4126, -31.3856, -75.1274, 0.55 ) }
    dend_55 { pt3dadd( 56.009, -30.749, -78.7098, 1.11 ) }
    dend_55 { pt3dadd( 57.8142, -29.9706, -83.763, 0.55 ) }
    dend_55 { pt3dadd( 59.0767, -29.3313, -88.0007, 0.28 ) }
    dend_55 { pt3dadd( 59.3682, -29.1379, -89.1434, 1.11 ) }
    dend_55 { pt3dadd( 60.7964, -27.9877, -95.3222, 0.55 ) }
    dend_55 { pt3dadd( 61.3245, -27.4165, -98.0178, 0.83 ) }
    dend_55 { pt3dadd( 63.3619, -24.4751, -110.102, 0.28 ) }
    dend_55 { pt3dadd( 63.5534, -24.1078, -111.51, 0.83 ) }
    dend_55 { pt3dadd( 63.9129, -23.2312, -114.504, 0.28 ) }
    dend_55 { pt3dadd( 64.0895, -22.6346, -116.247, 0.83 ) }
    dend_55 { pt3dadd( 64.2927, -21.4635, -118.891, 0.28 ) }
    dend_55 { pt3dadd( 64.347, -20.9651, -119.803, 0.55 ) }
    dend_55 { pt3dadd( 64.8631, -15.831, -126.459, 0.28 ) }
    dend_55 { pt3dadd( 64.8965, -15.2065, -127.319, 0.55 ) }
    dend_55 { pt3dadd( 64.9061, -14.1996, -128.711, 0.28 ) }
    dend_55 { pt3dadd( 64.8501, -13.8201, -129.283, 0.55 ) }
    dend_55 { pt3dadd( 64.7159, -13.2006, -130.194, 0.28 ) }
    dend_55 { pt3dadd( 64.4764, -12.3445, -131.456, 0.55 ) }
    dend_55 { pt3dadd( 63.4485, -9.43632, -135.651, 0.28 ) }
    dend_55 { pt3dadd( 63.0881, -8.5413, -137.066, 1.11 ) }
    dend_55 { pt3dadd( 61.0041, -3.91356, -145.099, 0.28 ) }
    dend_55 { pt3dadd( 60.6238, -3.10533, -146.595, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_49 (entry count 71/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 12.0545, -2.1189, -16.4595, 0.55 ) }
    dend_53 { pt3dadd( 12.9637, -1.46542, -18.8581, 0.55 ) }
    dend_53 { pt3dadd( 17.0432, 0.753786, -29.5929, 0.55 ) }
    dend_53 { pt3dadd( 18.4191, 1.31923, -33.1745, 0.55 ) }
    dend_53 { pt3dadd( 19.0845, 1.45884, -35.2469, 0.55 ) }
    dend_53 { pt3dadd( 21.1295, 1.6358, -42.0409, 0.83 ) }
    dend_53 { pt3dadd( 22.9515, 1.55556, -49.3586, 0.55 ) }
    dend_53 { pt3dadd( 23.96, 1.27096, -53.8832, 0.28 ) }
    dend_53 { pt3dadd( 24.435, 1.04571, -56.3811, 1.11 ) }
    dend_53 { pt3dadd( 26.7924, -0.297916, -69.9095, 0.28 ) }
    dend_53 { pt3dadd( 27.2275, -0.542872, -72.4372, 0.83 ) }
    dend_53 { pt3dadd( 30.1447, -1.99137, -89.0162, 0.55 ) }
    dend_53 { pt3dadd( 31.1927, -2.44627, -94.5899, 0.83 ) }
    dend_53 { pt3dadd( 33.5599, -3.16998, -106.678, 0.28 ) }
    dend_53 { pt3dadd( 34.1871, -3.29441, -109.587, 1.38 ) }
    dend_53 { pt3dadd( 36.0043, -3.44721, -116.645, 0.28 ) }
    dend_53 { pt3dadd( 36.3425, -3.46129, -117.808, 0.55 ) }
    dend_53 { pt3dadd( 37.9859, -3.41503, -121.956, 0.28 ) }
    dend_53 { pt3dadd( 38.2709, -3.40716, -122.548, 0.28 ) }
    dend_53 { pt3dadd( 39.3276, -3.52222, -124.201, 0.28 ) }
    dend_53 { pt3dadd( 39.6827, -3.65413, -124.843, 0.55 ) }
    dend_53 { pt3dadd( 40.2944, -3.99511, -126.026, 0.28 ) }
    dend_53 { pt3dadd( 40.6377, -4.20635, -126.662, 0.55 ) }
    dend_53 { pt3dadd( 43.0121, -5.73715, -130.929, 0.28 ) }
    dend_53 { pt3dadd( 43.9019, -6.31191, -132.548, 1.11 ) }
    dend_53 { pt3dadd( 49.5281, -9.94168, -143.107, 0.28 ) }
    dend_53 { pt3dadd( 49.9139, -10.1912, -143.847, 0.55 ) }
    dend_53 { pt3dadd( 53.7005, -12.6364, -151.205, 0.28 ) }
    dend_53 { pt3dadd( 54.0159, -12.8508, -151.834, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 0/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 12.0545, -2.1189, -16.4595, 1.38 ) }
    dend_50 { pt3dadd( 12.2546, -0.747504, -17.4682, 1.38 ) }
    dend_50 { pt3dadd( 13.0959, 5.01968, -21.7103, 0.83 ) }
    dend_50 { pt3dadd( 13.569, 8.26253, -24.0956, 0.83 ) }
    dend_50 { pt3dadd( 13.9839, 11.1061, -26.1873, 0.83 ) }
    dend_50 { pt3dadd( 14.3767, 13.7987, -28.1679, 0.83 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 6/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -3.01979, 14.8913, 4.75671, 0.55 ) }
    dend_44 { pt3dadd( -2.66895, 16.5834, 6.06887, 0.55 ) }
    dend_44 { pt3dadd( -2.50167, 17.3901, 6.69448, 0.55 ) }
    dend_44 { pt3dadd( -2.27678, 18.4748, 7.53561, 0.55 ) }
    dend_44 { pt3dadd( -1.87985, 20.3891, 9.02012, 0.55 ) }
    dend_44 { pt3dadd( -1.3726, 22.8354, 10.9172, 0.83 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 12/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -3.01979, 14.8913, 4.75671, 0.55 ) }
    dend_43 { pt3dadd( -3.69543, 16.8954, 4.83725, 0.55 ) }
    dend_43 { pt3dadd( -3.94859, 17.5756, 4.86453, 0.83 ) }
    dend_43 { pt3dadd( -4.77244, 19.6306, 4.95595, 0.55 ) }
    dend_43 { pt3dadd( -5.49107, 21.3727, 5.03626, 0.83 ) }
    dend_43 { pt3dadd( -6.20047, 23.0863, 5.15801, 0.55 ) }
    dend_43 { pt3dadd( -7.05972, 25.2256, 5.33071, 0.55 ) }
    dend_43 { pt3dadd( -7.53797, 26.4003, 5.43949, 0.83 ) }
    dend_43 { pt3dadd( -8.33118, 28.4572, 5.73093, 0.55 ) }
    dend_43 { pt3dadd( -8.69386, 29.4393, 5.91522, 0.83 ) }
    dend_43 { pt3dadd( -9.31952, 31.1172, 6.32171, 0.55 ) }
    dend_43 { pt3dadd( -9.64495, 32.0879, 6.58882, 0.55 ) }
    dend_43 { pt3dadd( -10.279, 34.1422, 7.17135, 0.55 ) }
    dend_43 { pt3dadd( -10.7692, 35.837, 7.59252, 0.83 ) }
    dend_43 { pt3dadd( -11.1243, 37.0695, 7.86925, 0.55 ) }
    dend_43 { pt3dadd( -11.4996, 38.3147, 8.10653, 0.83 ) }
    dend_43 { pt3dadd( -12.3002, 40.7733, 8.48313, 0.83 ) }
    dend_43 { pt3dadd( -12.9811, 42.6572, 8.76242, 0.55 ) }
    dend_43 { pt3dadd( -13.8917, 45.0573, 9.06846, 0.83 ) }
    dend_43 { pt3dadd( -14.5257, 46.6115, 9.21047, 0.55 ) }
    dend_43 { pt3dadd( -15.2654, 48.3307, 9.36782, 0.28 ) }
    dend_43 { pt3dadd( -15.9527, 49.9085, 9.50978, 0.55 ) }
    dend_43 { pt3dadd( -16.5116, 51.2099, 9.61611, 0.28 ) }
    dend_43 { pt3dadd( -16.8108, 51.9218, 9.67483, 0.55 ) }
    dend_43 { pt3dadd( -17.1843, 52.7628, 9.7474, 0.28 ) }
    dend_43 { pt3dadd( -17.6601, 53.9729, 9.79949, 0.55 ) }
    dend_43 { pt3dadd( -18.0786, 55.327, 9.82021, 0.28 ) }
    dend_43 { pt3dadd( -18.2301, 55.8926, 9.82051, 0.55 ) }
    dend_43 { pt3dadd( -18.6349, 57.6791, 9.81495, 0.28 ) }
    dend_43 { pt3dadd( -18.9482, 59.2391, 9.82435, 0.55 ) }
    dend_43 { pt3dadd( -19.424, 61.7988, 9.86381, 0.55 ) }
    dend_43 { pt3dadd( -19.7688, 63.6642, 9.88714, 0.28 ) }
    dend_43 { pt3dadd( -20.0585, 65.3803, 9.89891, 0.28 ) }
    dend_43 { pt3dadd( -20.4055, 67.9795, 9.90077, 1.11 ) }
    dend_43 { pt3dadd( -20.5802, 69.7951, 9.92241, 0.55 ) }
    dend_43 { pt3dadd( -20.6673, 70.8645, 9.9553, 0.55 ) }
    dend_43 { pt3dadd( -20.7567, 71.9187, 10.0583, 0.83 ) }
    dend_43 { pt3dadd( -20.9248, 73.5311, 10.2784, 0.28 ) }
    dend_43 { pt3dadd( -20.9983, 74.32, 10.4428, 0.55 ) }
    dend_43 { pt3dadd( -21.1076, 75.4465, 10.7747, 0.55 ) }
    dend_43 { pt3dadd( -21.2303, 76.676, 11.1975, 0.55 ) }
    dend_43 { pt3dadd( -21.4873, 79.3878, 12.2375, 0.28 ) }
    dend_43 { pt3dadd( -21.6178, 80.6501, 12.7826, 0.55 ) }
    dend_43 { pt3dadd( -21.8654, 82.4362, 13.6616, 0.28 ) }
    dend_43 { pt3dadd( -22.0049, 83.3324, 14.1267, 0.55 ) }
    dend_43 { pt3dadd( -25.7174, 91.885, 14.2946, 0.55 ) }
    dend_43 { pt3dadd( -28.2189, 100.883, 14.0855, 0.55 ) }
    dend_43 { pt3dadd( -31.0638, 109.734, 14.9064, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 60/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 13.0424, 2.19063, -6.28681, 0.55 ) }
    dend_40 { pt3dadd( 15.094, 4.26689, -4.96097, 0.55 ) }
    dend_40 { pt3dadd( 16.9118, 5.9548, -3.92815, 0.55 ) }
    dend_40 { pt3dadd( 17.9977, 6.848, -3.41832, 0.83 ) }
    dend_40 { pt3dadd( 20.6517, 8.77518, -2.42228, 0.55 ) }
    dend_40 { pt3dadd( 22.9591, 10.4007, -1.91132, 0.83 ) }
    dend_40 { pt3dadd( 25.7488, 12.4386, -1.56671, 0.55 ) }
    dend_40 { pt3dadd( 27.1246, 13.4517, -1.5409, 0.55 ) }
    dend_40 { pt3dadd( 29.6596, 15.2621, -1.75603, 0.55 ) }
    dend_40 { pt3dadd( 33.0911, 17.8168, -2.2779, 0.55 ) }
    dend_40 { pt3dadd( 37.375, 21.2327, -3.21291, 0.55 ) }
    dend_40 { pt3dadd( 39.2049, 22.8414, -3.65904, 0.83 ) }
    dend_40 { pt3dadd( 41.5591, 25.0407, -4.18758, 0.55 ) }
    dend_40 { pt3dadd( 43.5796, 26.9611, -4.54128, 0.83 ) }
    dend_40 { pt3dadd( 45.6511, 29.0348, -4.86658, 0.55 ) }
    dend_40 { pt3dadd( 46.5297, 29.899, -4.96037, 0.55 ) }
    dend_40 { pt3dadd( 48.3698, 31.552, -5.05195, 0.83 ) }
    dend_40 { pt3dadd( 49.9879, 32.9233, -5.29777, 0.28 ) }
    dend_40 { pt3dadd( 51.0161, 33.8813, -5.61557, 0.55 ) }
    dend_40 { pt3dadd( 52.8456, 35.7572, -6.38833, 0.28 ) }
    dend_40 { pt3dadd( 54.0119, 37.0575, -6.98646, 0.55 ) }
    dend_40 { pt3dadd( 55.5221, 38.8095, -7.83551, 0.28 ) }
    dend_40 { pt3dadd( 56.4073, 39.8642, -8.3266, 0.55 ) }
    dend_40 { pt3dadd( 58.674, 42.6346, -9.56337, 0.28 ) }
    dend_40 { pt3dadd( 59.3044, 43.4345, -9.8809, 0.83 ) }
    dend_40 { pt3dadd( 61.533, 46.257, -10.8145, 0.28 ) }
    dend_40 { pt3dadd( 62.0403, 46.9149, -11.018, 0.55 ) }
    dend_40 { pt3dadd( 64.5917, 50.0933, -11.8849, 0.28 ) }
    dend_40 { pt3dadd( 65.3016, 50.875, -12.092, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 89/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 13.0424, 2.19063, -6.28681, 0.55 ) }
    dend_35 { pt3dadd( 15.3141, 0.950644, -4.76097, 0.55 ) }
    dend_35 { pt3dadd( 16.4689, 0.320344, -3.98537, 0.83 ) }
    dend_35 { pt3dadd( 17.8116, -0.41259, -3.08348, 0.83 ) }
    dend_35 { pt3dadd( 20.7485, -2.01566, -1.11086, 0.83 ) }
    // Section: dend_33, id: dend_33, parent: dend_29 (entry count 94/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -10.6642, -9.88678, 13.8451, 0.83 ) }
    dend_33 { pt3dadd( -13.99, -7.715, 14.2865, 0.83 ) }
    dend_33 { pt3dadd( -16.9353, -5.75934, 14.7186, 0.83 ) }
    dend_33 { pt3dadd( -18.5172, -4.73441, 14.9722, 0.83 ) }
    dend_33 { pt3dadd( -22.7387, -2.1612, 15.7132, 0.55 ) }
    dend_33 { pt3dadd( -26.1966, -0.0800649, 16.3442, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_33 { pt3dadd( -29.0267, 1.70223, 16.8992, 0.55 ) }
    dend_33 { pt3dadd( -31.9593, 3.45862, 17.5928, 0.55 ) }
    dend_33 { pt3dadd( -34.2711, 4.88807, 18.2648, 0.83 ) }
    dend_33 { pt3dadd( -36.4116, 6.43032, 19.0365, 0.55 ) }
    dend_33 { pt3dadd( -37.7364, 7.58905, 19.6634, 0.55 ) }
    dend_33 { pt3dadd( -39.9227, 9.77612, 20.9031, 0.55 ) }
    dend_33 { pt3dadd( -42.4206, 12.4566, 22.4321, 0.55 ) }
    dend_33 { pt3dadd( -45.4244, 15.459, 24.3364, 0.83 ) }
    dend_33 { pt3dadd( -47.7458, 17.537, 26.0075, 0.83 ) }
    dend_33 { pt3dadd( -50.021, 19.4279, 27.7716, 0.55 ) }
    dend_33 { pt3dadd( -50.6051, 19.859, 28.2409, 0.55 ) }
    dend_33 { pt3dadd( -53.2737, 21.6617, 30.4024, 0.55 ) }
    dend_33 { pt3dadd( -56.569, 23.7925, 33.0275, 0.55 ) }
    dend_33 { pt3dadd( -60.8722, 26.0245, 36.3756, 0.83 ) }
    dend_33 { pt3dadd( -62.9808, 26.8218, 37.9416, 0.28 ) }
    dend_33 { pt3dadd( -64.078, 27.0889, 38.7162, 0.55 ) }
    dend_33 { pt3dadd( -66.5794, 27.2908, 40.475, 0.28 ) }
    dend_33 { pt3dadd( -67.9622, 27.0174, 41.408, 0.55 ) }
    dend_33 { pt3dadd( -70.4873, 25.8526, 42.8177, 0.28 ) }
    dend_33 { pt3dadd( -73.1018, 24.0794, 43.987, 0.55 ) }
    dend_33 { pt3dadd( -75.0013, 22.5301, 44.8238, 0.55 ) }
    dend_33 { pt3dadd( -77.3888, 20.4626, 45.795, 0.55 ) }
    dend_33 { pt3dadd( -79.9261, 18.0904, 46.7644, 0.28 ) }
    dend_33 { pt3dadd( -80.8595, 17.1422, 47.0968, 0.55 ) }
    dend_33 { pt3dadd( -84.3237, 13.3542, 48.2069, 0.28 ) }
    dend_33 { pt3dadd( -86.2009, 11.1751, 48.7813, 0.55 ) }
    dend_33 { pt3dadd( -88.3553, 8.36529, 49.4161, 0.55 ) }
    dend_33 { pt3dadd( -90.432, 5.42086, 49.9726, 0.55 ) }
    dend_33 { pt3dadd( -92.7386, 1.87552, 50.5274, 0.55 ) }
    dend_33 { pt3dadd( -93.9592, -0.0725829, 50.7868, 0.83 ) }
    dend_33 { pt3dadd( -96.6589, -4.28487, 51.2714, 0.55 ) }
    dend_33 { pt3dadd( -99.2131, -7.90648, 51.7186, 0.28 ) }
    dend_33 { pt3dadd( -101.9, -11.2735, 52.2047, 0.55 ) }
    dend_33 { pt3dadd( -104.912, -14.3441, 52.7192, 0.55 ) }
    dend_33 { pt3dadd( -107.196, -16.1665, 53.1084, 0.55 ) }
    dend_33 { pt3dadd( -111.345, -19.0547, 53.7913, 0.28 ) }
    dend_33 { pt3dadd( -113.004, -20.0126, 54.0466, 0.83 ) }
    dend_33 { pt3dadd( -115.86, -21.3193, 54.4624, 0.55 ) }
    dend_33 { pt3dadd( -118.526, -22.2999, 54.8884, 0.55 ) }
    dend_33 { pt3dadd( -121.518, -23.0484, 55.4285, 0.83 ) }
    dend_33 { pt3dadd( -134.416, -23.04, 59.4068, 0.83 ) }
    dend_33 { pt3dadd( -147.668, -24.4299, 61.6011, 0.83 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 42/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -10.6642, -9.88678, 13.8451, 0.55 ) }
    dend_30 { pt3dadd( -11.5699, -11.6742, 13.8477, 0.55 ) }
    dend_30 { pt3dadd( -12.7275, -13.8971, 13.9269, 0.55 ) }
    dend_30 { pt3dadd( -14.1252, -16.4349, 14.0707, 0.55 ) }
    dend_30 { pt3dadd( -15.2545, -18.2566, 14.1985, 0.83 ) }
    dend_30 { pt3dadd( -16.3708, -19.923, 14.3385, 0.83 ) }
    dend_30 { pt3dadd( -18.3485, -22.7315, 14.5954, 0.83 ) }
    dend_30 { pt3dadd( -19.5628, -24.2303, 14.7758, 0.83 ) }
    dend_30 { pt3dadd( -20.91, -25.584, 15.0082, 0.55 ) }
    dend_30 { pt3dadd( -22.5208, -27.1248, 15.32, 0.55 ) }
    dend_30 { pt3dadd( -23.8207, -28.2731, 15.5924, 0.55 ) }
    dend_30 { pt3dadd( -24.9025, -29.0693, 15.8141, 0.83 ) }
    dend_30 { pt3dadd( -26.4231, -29.9296, 16.1289, 0.55 ) }
    dend_30 { pt3dadd( -28.6355, -31.0158, 16.5268, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_0 (entry count 56/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -3.58155, -12.1788, -6.38487, 0.83 ) }
    dend_20 { pt3dadd( -6.30894, -14.4686, -6.57403, 0.83 ) }
    dend_20 { pt3dadd( -8.31321, -16.1512, -6.71304, 0.83 ) }
    dend_20 { pt3dadd( -11.0361, -18.4373, -6.9019, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 60/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -3.58155, -12.1788, -6.38487, 1.66 ) }
    dend_1 { pt3dadd( -2.9367, -15.3841, -6.53103, 1.66 ) }
    dend_1 { pt3dadd( -2.28124, -18.6422, -6.6796, 1.66 ) }
    dend_1 { pt3dadd( -1.62507, -21.9037, -6.82832, 1.94 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 64/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 24.8699, -27.2591, -4.0979, 0.55 ) }
    axon_1 { pt3dadd( 34.9581, -38.36, -4.0979, 0.55 ) }
    axon_1 { pt3dadd( 45.0463, -49.4608, -4.0979, 0.55 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 67/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 14.3767, 13.7987, -28.1679, 0.55 ) }
    dend_52 { pt3dadd( 16.7182, 13.1168, -28.4639, 0.55 ) }
    dend_52 { pt3dadd( 17.2709, 12.9269, -28.5958, 0.83 ) }
    dend_52 { pt3dadd( 18.3482, 12.5162, -28.9059, 0.28 ) }
    dend_52 { pt3dadd( 19.3158, 12.1189, -29.1841, 0.55 ) }
    dend_52 { pt3dadd( 22.248, 10.8952, -29.9207, 0.28 ) }
    dend_52 { pt3dadd( 23.2469, 10.4497, -30.1116, 0.55 ) }
    dend_52 { pt3dadd( 24.9974, 9.5256, -30.4457, 0.28 ) }
    dend_52 { pt3dadd( 25.8998, 8.9512, -30.6287, 0.55 ) }
    dend_52 { pt3dadd( 27.6433, 7.64328, -31.0063, 0.28 ) }
    dend_52 { pt3dadd( 28.6101, 6.82266, -31.2221, 0.55 ) }
    dend_52 { pt3dadd( 29.9792, 5.43191, -31.5819, 0.55 ) }
    dend_52 { pt3dadd( 31.3736, 3.8804, -31.9804, 0.28 ) }
    dend_52 { pt3dadd( 33.1861, 1.74474, -32.4873, 0.28 ) }
    dend_52 { pt3dadd( 33.9269, 0.829938, -32.7475, 0.28 ) }
    dend_52 { pt3dadd( 34.277, 0.381038, -32.8926, 0.55 ) }
    dend_52 { pt3dadd( 35.6751, -1.47114, -33.581, 0.28 ) }
    dend_52 { pt3dadd( 35.8968, -1.76057, -33.6998, 0.55 ) }
    dend_52 { pt3dadd( 37.2024, -3.38897, -34.2557, 0.28 ) }
    dend_52 { pt3dadd( 37.9432, -4.12337, -34.4974, 0.28 ) }
    dend_52 { pt3dadd( 38.6, -4.72609, -34.6815, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 88/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 14.3767, 13.7987, -28.1679, 0.55 ) }
    dend_51 { pt3dadd( 15.6688, 15.6744, -27.8325, 0.55 ) }
    dend_51 { pt3dadd( 16.5866, 16.9569, -27.811, 0.28 ) }
    dend_51 { pt3dadd( 17.2375, 17.8288, -27.8444, 0.55 ) }
    dend_51 { pt3dadd( 18.2649, 19.2072, -27.9062, 0.28 ) }
    dend_51 { pt3dadd( 19.0001, 20.2456, -27.9864, 0.55 ) }
    dend_51 { pt3dadd( 20.5463, 22.7491, -28.4485, 0.55 ) }
    dend_51 { pt3dadd( 21.2597, 24.0724, -28.8446, 0.55 ) }
    dend_51 { pt3dadd( 21.3862, 24.3342, -28.9605, 0.83 ) }
    dend_51 { pt3dadd( 21.8725, 25.4031, -29.4957, 0.55 ) }
    dend_51 { pt3dadd( 22.5954, 26.9898, -30.3404, 1.11 ) }
    dend_51 { pt3dadd( 23.9896, 30.033, -31.9215, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_51 { pt3dadd( 24.3916, 30.9028, -32.3487, 0.83 ) }
    dend_51 { pt3dadd( 26.143, 34.5776, -34.1768, 0.28 ) }
    dend_51 { pt3dadd( 26.7207, 35.7176, -34.7212, 0.83 ) }
    dend_51 { pt3dadd( 28.1714, 38.288, -35.9054, 0.28 ) }
    dend_51 { pt3dadd( 28.3591, 38.5698, -36.0121, 0.55 ) }
    dend_51 { pt3dadd( 29.297, 39.7655, -36.3164, 0.28 ) }
    dend_51 { pt3dadd( 29.7782, 40.3474, -36.3982, 0.55 ) }
    dend_51 { pt3dadd( 30.4885, 41.1765, -36.3792, 0.28 ) }
    dend_51 { pt3dadd( 31.0914, 41.8715, -36.3328, 0.83 ) }
    dend_51 { pt3dadd( 33.2891, 44.3721, -36.0064, 0.28 ) }
    dend_51 { pt3dadd( 33.9658, 45.1583, -35.9146, 0.83 ) }
    dend_51 { pt3dadd( 34.8582, 46.2094, -35.82, 0.28 ) }
    dend_51 { pt3dadd( 35.5911, 47.0937, -35.7678, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 13/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -1.3726, 22.8354, 10.9172, 0.55 ) }
    dend_46 { pt3dadd( 0.621633, 23.3027, 11.6155, 0.55 ) }
    dend_46 { pt3dadd( 2.42315, 23.6021, 12.1713, 0.83 ) }
    dend_46 { pt3dadd( 4.94001, 24.1003, 12.9954, 0.55 ) }
    dend_46 { pt3dadd( 7.32022, 24.7407, 13.7891, 0.55 ) }
    dend_46 { pt3dadd( 10.2583, 25.6328, 14.8472, 0.55 ) }
    dend_46 { pt3dadd( 13.0807, 26.6259, 15.8629, 0.55 ) }
    dend_46 { pt3dadd( 15.9843, 27.7954, 16.9001, 0.55 ) }
    dend_46 { pt3dadd( 18.4163, 28.848, 17.7833, 0.55 ) }
    dend_46 { pt3dadd( 21.0923, 30.0427, 18.7288, 0.83 ) }
    dend_46 { pt3dadd( 24.2899, 31.647, 19.7804, 0.55 ) }
    dend_46 { pt3dadd( 26.9946, 33.2045, 20.7101, 0.55 ) }
    dend_46 { pt3dadd( 27.9111, 33.7961, 21.0596, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 26/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -1.3726, 22.8354, 10.9172, 0.55 ) }
    dend_45 { pt3dadd( -1.27175, 24.4497, 10.9479, 0.55 ) }
    dend_45 { pt3dadd( -1.24035, 25.5993, 10.966, 0.55 ) }
    dend_45 { pt3dadd( -1.26219, 27.3173, 10.9937, 0.55 ) }
    dend_45 { pt3dadd( -1.24298, 28.4603, 11.0184, 0.83 ) }
    dend_45 { pt3dadd( -1.23286, 29.4227, 11.0492, 0.83 ) }
    dend_45 { pt3dadd( -1.15637, 31.5105, 10.9804, 0.55 ) }
    dend_45 { pt3dadd( -1.12892, 32.1048, 10.9273, 0.83 ) }
    dend_45 { pt3dadd( -1.03077, 33.6549, 10.7319, 0.55 ) }
    dend_45 { pt3dadd( -0.825879, 35.9959, 10.3938, 0.55 ) }
    dend_45 { pt3dadd( -0.685191, 37.28, 10.196, 0.83 ) }
    dend_45 { pt3dadd( -0.355588, 40.0965, 9.76211, 0.55 ) }
    dend_45 { pt3dadd( -0.241503, 41.2151, 9.61902, 0.55 ) }
    dend_45 { pt3dadd( -0.190954, 41.8476, 9.56202, 0.83 ) }
    dend_45 { pt3dadd( -0.169245, 42.8048, 9.51283, 0.55 ) }
    dend_45 { pt3dadd( -0.223679, 43.5811, 9.52134, 0.55 ) }
    dend_45 { pt3dadd( -0.336042, 44.7394, 9.62318, 0.83 ) }
    dend_45 { pt3dadd( -0.77077, 47.21, 9.99492, 0.28 ) }
    dend_45 { pt3dadd( -0.905668, 47.8085, 10.0726, 0.83 ) }
    dend_45 { pt3dadd( -1.13638, 48.6218, 10.1287, 0.55 ) }
    dend_45 { pt3dadd( -1.4089, 49.3877, 10.1378, 0.83 ) }
    dend_45 { pt3dadd( -2.09893, 51.1679, 10.1022, 0.55 ) }
    dend_45 { pt3dadd( -2.63233, 52.428, 9.98301, 0.55 ) }
    dend_45 { pt3dadd( -3.03021, 53.2748, 9.83604, 0.83 ) }
    dend_45 { pt3dadd( -3.64018, 54.5454, 9.49663, 0.55 ) }
    dend_45 { pt3dadd( -3.97971, 55.2308, 9.26046, 0.55 ) }
    dend_45 { pt3dadd( -4.48273, 56.1845, 8.81552, 0.83 ) }
    dend_45 { pt3dadd( -5.06433, 57.1841, 8.25984, 0.28 ) }
    dend_45 { pt3dadd( -5.24425, 57.5149, 8.07238, 0.55 ) }
    dend_45 { pt3dadd( -5.90768, 58.6591, 7.46915, 0.28 ) }
    dend_45 { pt3dadd( -6.24011, 59.2124, 7.23631, 0.55 ) }
    dend_45 { pt3dadd( -6.98504, 60.3654, 6.82504, 0.28 ) }
    dend_45 { pt3dadd( -7.52334, 61.1422, 6.58403, 0.55 ) }
    dend_45 { pt3dadd( -8.56038, 62.5792, 6.30662, 0.28 ) }
    dend_45 { pt3dadd( -9.42888, 63.7119, 6.22735, 0.83 ) }
    dend_45 { pt3dadd( -10.3545, 64.8445, 6.31219, 0.28 ) }
    dend_45 { pt3dadd( -10.7298, 65.2871, 6.47875, 0.55 ) }
    dend_45 { pt3dadd( -11.4764, 66.1346, 7.04043, 0.28 ) }
    dend_45 { pt3dadd( -12.0949, 66.8983, 7.6711, 0.55 ) }
    dend_45 { pt3dadd( -12.9473, 68.0507, 8.76927, 0.28 ) }
    dend_45 { pt3dadd( -13.2084, 68.4177, 9.1538, 0.55 ) }
    dend_45 { pt3dadd( -14.8292, 70.6954, 11.8051, 0.28 ) }
    dend_45 { pt3dadd( -14.9004, 70.8004, 11.9347, 0.55 ) }
    dend_45 { pt3dadd( -15.6402, 71.9644, 13.4862, 0.28 ) }
    dend_45 { pt3dadd( -15.8703, 72.4102, 14.03, 0.55 ) }
    dend_45 { pt3dadd( -17.5075, 78.9746, 14.8106, 0.55 ) }
    dend_45 { pt3dadd( -19.595, 85.4517, 14.8071, 0.55 ) }
    dend_45 { pt3dadd( -22.0996, 91.7638, 14.5238, 0.55 ) }
    dend_45 { pt3dadd( -23.8287, 98.2364, 13.328, 0.55 ) }
    dend_45 { pt3dadd( -24.8018, 104.985, 13.515, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 76/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 20.7485, -2.01566, -1.11086, 0.55 ) }
    dend_37 { pt3dadd( 25.6821, -4.34655, 0.715329, 0.55 ) }
    dend_37 { pt3dadd( 29.2084, -6.01258, 2.02061, 0.55 ) }
    dend_37 { pt3dadd( 32.0222, -7.34196, 3.06214, 0.55 ) }
    dend_37 { pt3dadd( 33.5008, -8.04055, 3.60947, 0.55 ) }
    dend_37 { pt3dadd( 37.8047, -10.0739, 5.20256, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 82/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 20.7485, -2.01566, -1.11086, 0.55 ) }
    dend_36 { pt3dadd( 23.2048, -2.69207, -0.984617, 0.55 ) }
    dend_36 { pt3dadd( 25.5015, -3.22049, -0.830197, 0.55 ) }
    dend_36 { pt3dadd( 27.0969, -3.59588, -0.682558, 0.83 ) }
    dend_36 { pt3dadd( 30.305, -4.3532, -0.319855, 0.55 ) }
    dend_36 { pt3dadd( 32.5796, -4.92678, -0.0509533, 0.83 ) }
    dend_36 { pt3dadd( 35.3344, -5.53865, 0.295483, 0.28 ) }
    dend_36 { pt3dadd( 36.8979, -5.79487, 0.38183, 0.55 ) }
    dend_36 { pt3dadd( 40.6184, -6.26585, 0.365019, 0.28 ) }
    dend_36 { pt3dadd( 43.4244, -6.38776, -0.0888622, 0.55 ) }
    dend_36 { pt3dadd( 45.7908, -6.37872, -0.76698, 0.55 ) }
    dend_36 { pt3dadd( 49.2585, -6.30591, -2.01502, 0.55 ) }
    dend_36 { pt3dadd( 54.7245, -6.01499, -4.25795, 0.28 ) }
    dend_36 { pt3dadd( 57.6326, -5.76621, -5.5022, 0.83 ) }
    dend_36 { pt3dadd( 65.0843, -4.71371, -8.736, 0.55 ) }
    dend_36 { pt3dadd( 67.8353, -4.20755, -9.8317, 0.55 ) }
    dend_36 { pt3dadd( 70.9018, -3.52294, -10.8629, 0.83 ) }
    dend_36 { pt3dadd( 72.4504, -3.15878, -11.2302, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_36 { pt3dadd( 75.8357, -2.23636, -11.4719, 0.28 ) }
    dend_36 { pt3dadd( 78.321, -1.43583, -11.4817, 0.83 ) }
    dend_36 { pt3dadd( 81.1515, -0.401931, -11.1743, 0.28 ) }
    dend_36 { pt3dadd( 82.7442, 0.301735, -11.0849, 0.55 ) }
    dend_36 { pt3dadd( 85.2122, 1.45146, -11.1091, 0.28 ) }
    dend_36 { pt3dadd( 86.7827, 2.17533, -11.2936, 0.83 ) }
    dend_36 { pt3dadd( 89.7944, 3.60406, -11.9824, 0.28 ) }
    dend_36 { pt3dadd( 90.7579, 4.05014, -12.3663, 0.55 ) }
    dend_36 { pt3dadd( 93.2813, 5.2277, -13.6356, 0.28 ) }
    dend_36 { pt3dadd( 94.6592, 5.8982, -14.4471, 0.83 ) }
    dend_36 { pt3dadd( 97.9819, 7.58962, -16.5637, 0.28 ) }
    dend_36 { pt3dadd( 99.3619, 8.29032, -17.4642, 0.83 ) }
    dend_36 { pt3dadd( 104.537, 10.932, -20.8084, 0.28 ) }
    dend_36 { pt3dadd( 104.956, 11.1432, -21.0857, 0.55 ) }
    dend_36 { pt3dadd( 110.551, 14.0223, -24.8822, 0.28 ) }
    dend_36 { pt3dadd( 111.255, 14.4078, -25.3907, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 16/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -28.6355, -31.0158, 16.5268, 0.55 ) }
    dend_32 { pt3dadd( -32.2322, -31.5243, 17.701, 0.55 ) }
    dend_32 { pt3dadd( -34.5359, -31.8541, 18.4748, 0.55 ) }
    dend_32 { pt3dadd( -35.5569, -32.0261, 18.8207, 0.55 ) }
    dend_32 { pt3dadd( -39.2878, -32.6133, 20.0381, 0.55 ) }
    dend_32 { pt3dadd( -40.6221, -32.8599, 20.4472, 0.55 ) }
    dend_32 { pt3dadd( -42.245, -33.2071, 20.9277, 0.83 ) }
    dend_32 { pt3dadd( -44.879, -33.8915, 21.613, 0.55 ) }
    dend_32 { pt3dadd( -45.9262, -34.2115, 21.8778, 0.55 ) }
    dend_32 { pt3dadd( -47.8664, -34.8666, 22.3761, 0.55 ) }
    dend_32 { pt3dadd( -49.7409, -35.4886, 22.8122, 0.55 ) }
    dend_32 { pt3dadd( -51.4583, -35.9786, 23.1299, 0.55 ) }
    dend_32 { pt3dadd( -52.857, -36.3613, 23.3275, 0.55 ) }
    dend_32 { pt3dadd( -54.8942, -36.8204, 23.558, 0.55 ) }
    dend_32 { pt3dadd( -56.5516, -37.1411, 23.6988, 0.83 ) }
    dend_32 { pt3dadd( -59.6881, -37.6546, 24.0627, 0.55 ) }
    dend_32 { pt3dadd( -62.1828, -37.9851, 24.361, 0.55 ) }
    dend_32 { pt3dadd( -63.7279, -38.1444, 24.5437, 0.55 ) }
    dend_32 { pt3dadd( -65.9454, -38.3245, 24.7339, 0.55 ) }
    dend_32 { pt3dadd( -69.0662, -38.4922, 24.9236, 0.83 ) }
    dend_32 { pt3dadd( -72.0209, -38.5663, 25.0289, 0.55 ) }
    dend_32 { pt3dadd( -74.3898, -38.6077, 25.0963, 0.55 ) }
    dend_32 { pt3dadd( -77.6291, -38.5865, 25.1485, 0.55 ) }
    dend_32 { pt3dadd( -80.3604, -38.4177, 25.127, 0.55 ) }
    dend_32 { pt3dadd( -81.9738, -38.2258, 25.0781, 0.83 ) }
    dend_32 { pt3dadd( -83.8969, -37.8446, 24.9978, 0.55 ) }
    dend_32 { pt3dadd( -84.9611, -37.5884, 24.9278, 0.55 ) }
    dend_32 { pt3dadd( -86.6535, -37.0263, 24.9552, 0.83 ) }
    dend_32 { pt3dadd( -88.135, -36.506, 25.1092, 0.83 ) }
    dend_32 { pt3dadd( -89.9056, -35.8302, 25.4394, 0.28 ) }
    dend_32 { pt3dadd( -90.5705, -35.5619, 25.5897, 0.28 ) }
    dend_32 { pt3dadd( -91.8994, -35.0317, 25.95, 0.55 ) }
    dend_32 { pt3dadd( -94.7203, -33.7973, 26.8004, 0.28 ) }
    dend_32 { pt3dadd( -95.8096, -33.3137, 27.1916, 0.83 ) }
    dend_32 { pt3dadd( -104.512, -34.7452, 27.9052, 0.83 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 51/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -28.6355, -31.0158, 16.5268, 0.83 ) }
    dend_31 { pt3dadd( -30.6789, -34.4047, 17.2277, 0.83 ) }
    dend_31 { pt3dadd( -32.0455, -36.5092, 17.6446, 0.83 ) }
    dend_31 { pt3dadd( -34.3339, -40.1392, 18.1818, 0.55 ) }
    dend_31 { pt3dadd( -35.1054, -41.4949, 18.3039, 0.55 ) }
    dend_31 { pt3dadd( -35.3717, -42.0087, 18.3319, 0.83 ) }
    dend_31 { pt3dadd( -36.4848, -44.2326, 18.419, 0.55 ) }
    dend_31 { pt3dadd( -37.598, -46.6337, 18.3664, 0.55 ) }
    dend_31 { pt3dadd( -38.8557, -49.5013, 18.2383, 0.55 ) }
    dend_31 { pt3dadd( -39.8229, -51.9943, 18.014, 0.55 ) }
    dend_31 { pt3dadd( -40.7145, -54.4266, 17.7243, 0.83 ) }
    dend_31 { pt3dadd( -41.4968, -56.547, 17.3023, 0.83 ) }
    dend_31 { pt3dadd( -41.9898, -57.714, 16.978, 0.83 ) }
    dend_31 { pt3dadd( -42.9329, -59.6781, 16.3149, 0.83 ) }
    dend_31 { pt3dadd( -43.4274, -60.5076, 15.9897, 0.55 ) }
    dend_31 { pt3dadd( -44.1292, -61.4889, 15.5779, 0.83 ) }
    dend_31 { pt3dadd( -46.5898, -64.7575, 14.0324, 0.55 ) }
    dend_31 { pt3dadd( -48.3163, -67.0069, 12.9253, 0.55 ) }
    dend_31 { pt3dadd( -49.3837, -68.4169, 12.2195, 0.83 ) }
    dend_31 { pt3dadd( -50.4967, -69.9094, 11.513, 0.83 ) }
    dend_31 { pt3dadd( -52.6696, -72.9361, 10.2416, 0.83 ) }
    dend_31 { pt3dadd( -54.5447, -75.6302, 9.23561, 0.55 ) }
    dend_31 { pt3dadd( -55.2949, -76.7778, 8.88599, 1.11 ) }
    dend_31 { pt3dadd( -56.4962, -78.8198, 8.31447, 0.83 ) }
    dend_31 { pt3dadd( -58.4728, -82.2832, 7.48116, 0.55 ) }
    dend_31 { pt3dadd( -59.5822, -84.3168, 7.11424, 0.55 ) }
    dend_31 { pt3dadd( -59.9892, -85.0931, 7.03877, 0.55 ) }
    dend_31 { pt3dadd( -60.7238, -86.4635, 7.04975, 0.83 ) }
    dend_31 { pt3dadd( -61.3007, -87.5974, 7.25298, 0.83 ) }
    dend_31 { pt3dadd( -62.4477, -89.8996, 8.05369, 0.55 ) }
    dend_31 { pt3dadd( -62.9307, -90.9592, 8.55136, 0.83 ) }
    dend_31 { pt3dadd( -63.5116, -92.2983, 9.26394, 0.55 ) }
    dend_31 { pt3dadd( -63.7524, -92.9382, 9.59857, 0.83 ) }
    dend_31 { pt3dadd( -65.2623, -97.299, 11.7612, 0.55 ) }
    dend_31 { pt3dadd( -65.885, -99.1501, 12.5869, 0.28 ) }
    dend_31 { pt3dadd( -66.1533, -99.9241, 12.8477, 0.55 ) }
    dend_31 { pt3dadd( -66.805, -101.594, 13.1952, 0.28 ) }
    dend_31 { pt3dadd( -67.679, -103.649, 13.3836, 0.28 ) }
    dend_31 { pt3dadd( -68.5389, -105.433, 13.2978, 0.83 ) }
    dend_31 { pt3dadd( -70.2544, -108.42, 12.6973, 0.28 ) }
    dend_31 { pt3dadd( -71.9309, -111.206, 12.0069, 0.55 ) }
    dend_31 { pt3dadd( -73.2802, -113.453, 11.3825, 0.28 ) }
    dend_31 { pt3dadd( -73.4742, -113.803, 11.2945, 0.55 ) }
    dend_31 { pt3dadd( -75.0498, -116.956, 10.657, 0.28 ) }
    dend_31 { pt3dadd( -76.5157, -120.105, 10.0494, 0.55 ) }
    dend_31 { pt3dadd( -77.3693, -122.154, 9.6911, 0.28 ) }
    dend_31 { pt3dadd( -78.0398, -124.015, 9.45403, 0.55 ) }
    dend_31 { pt3dadd( -79.6197, -129.048, 8.74986, 0.28 ) }
    dend_31 { pt3dadd( -80.6106, -132.434, 8.2948, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_31 { pt3dadd( -87.7805, -141.104, 8.68421, 0.83 ) }
    dend_31 { pt3dadd( -95.2485, -149.522, 8.72641, 0.83 ) }
    dend_31 { pt3dadd( -104.123, -156.273, 7.52381, 0.83 ) }
    dend_31 { pt3dadd( -113.863, -161.559, 8.81834, 0.83 ) }
    dend_31 { pt3dadd( -124.01, -166.032, 9.86183, 0.83 ) }
    dend_31 { pt3dadd( -134.311, -170.001, 11.2383, 0.83 ) }
    dend_31 { pt3dadd( -144.399, -172.67, 14.9801, 0.83 ) }
    dend_31 { pt3dadd( -154.341, -174.174, 19.6008, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 8/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -11.0361, -18.4373, -6.9019, 1.11 ) }
    dend_24 { pt3dadd( -11.5981, -21.8143, -10.047, 1.11 ) }
    dend_24 { pt3dadd( -12.3494, -26.3287, -14.2514, 1.11 ) }
    dend_24 { pt3dadd( -12.6547, -28.1633, -15.9601, 1.38 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 12/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -11.0361, -18.4373, -6.9019, 0.55 ) }
    dend_21 { pt3dadd( -12.8792, -18.5243, -7.02081, 0.55 ) }
    dend_21 { pt3dadd( -14.0294, -18.598, -7.04328, 0.55 ) }
    dend_21 { pt3dadd( -15.5458, -18.7256, -7.03875, 0.83 ) }
    dend_21 { pt3dadd( -17.9378, -18.9558, -6.98412, 0.55 ) }
    dend_21 { pt3dadd( -20.6203, -19.2788, -6.88487, 0.83 ) }
    dend_21 { pt3dadd( -21.6269, -19.3988, -6.80906, 0.83 ) }
    dend_21 { pt3dadd( -23.7196, -19.6722, -6.67782, 0.55 ) }
    dend_21 { pt3dadd( -24.5892, -19.7738, -6.63446, 0.83 ) }
    dend_21 { pt3dadd( -25.9885, -19.8781, -6.57067, 0.28 ) }
    dend_21 { pt3dadd( -27.5089, -19.98, -6.4722, 1.11 ) }
    dend_21 { pt3dadd( -30.0156, -20.1854, -6.38365, 0.55 ) }
    dend_21 { pt3dadd( -32.0342, -20.3137, -6.51549, 0.83 ) }
    dend_21 { pt3dadd( -33.855, -20.3715, -6.78014, 0.28 ) }
    dend_21 { pt3dadd( -34.6881, -20.4284, -6.89735, 0.55 ) }
    dend_21 { pt3dadd( -36.1899, -20.6058, -7.14127, 0.28 ) }
    dend_21 { pt3dadd( -37.9722, -20.9449, -7.45835, 0.55 ) }
    dend_21 { pt3dadd( -41.3121, -22.1915, -8.23225, 0.28 ) }
    dend_21 { pt3dadd( -41.5556, -22.331, -8.28841, 0.55 ) }
    dend_21 { pt3dadd( -44.2185, -24.3854, -9.04103, 0.55 ) }
    dend_21 { pt3dadd( -45.2513, -25.3053, -9.35461, 0.28 ) }
    dend_21 { pt3dadd( -46.0632, -26.0975, -9.61564, 0.83 ) }
    dend_21 { pt3dadd( -48.5474, -28.7014, -10.4073, 0.28 ) }
    dend_21 { pt3dadd( -49.573, -29.7886, -10.7287, 0.83 ) }
    dend_21 { pt3dadd( -51.1616, -31.2954, -11.3232, 0.55 ) }
    dend_21 { pt3dadd( -52.1871, -32.0927, -11.9443, 0.55 ) }
    dend_21 { pt3dadd( -53.362, -32.8584, -12.6562, 0.83 ) }
    dend_21 { pt3dadd( -54.68, -33.5799, -13.466, 0.28 ) }
    dend_21 { pt3dadd( -55.5828, -33.9584, -14.0294, 0.55 ) }
    dend_21 { pt3dadd( -57.2914, -34.5757, -15.2025, 0.55 ) }
    dend_21 { pt3dadd( -61.8029, -36.1056, -18.7629, 0.28 ) }
    dend_21 { pt3dadd( -63.4058, -36.6772, -20.2571, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 44/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -1.62507, -21.9037, -6.82832, 1.11 ) }
    dend_11 { pt3dadd( -0.873842, -25.3919, -6.27961, 1.11 ) }
    dend_11 { pt3dadd( -0.39991, -27.5924, -5.93344, 1.11 ) }
    dend_11 { pt3dadd( 0.373653, -31.1843, -5.36842, 1.11 ) }
    dend_11 { pt3dadd( 1.64428, -37.0841, -4.44034, 1.11 ) }
    dend_11 { pt3dadd( 2.61227, -41.5787, -3.7333, 1.11 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 50/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -1.62507, -21.9037, -6.82832, 0.83 ) }
    dend_2 { pt3dadd( -0.306822, -23.6383, -7.71393, 0.83 ) }
    dend_2 { pt3dadd( 0.862955, -25.1775, -8.4998, 0.83 ) }
    dend_2 { pt3dadd( 1.618, -26.171, -9.00704, 0.83 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 54/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 27.9111, 33.7961, 21.0596, 0.55 ) }
    dend_48 { pt3dadd( 27.5423, 36.0385, 21.9358, 0.55 ) }
    dend_48 { pt3dadd( 27.1109, 38.2072, 22.7956, 0.55 ) }
    dend_48 { pt3dadd( 26.9187, 39.204, 23.1778, 0.83 ) }
    dend_48 { pt3dadd( 26.3911, 41.8805, 24.2584, 0.55 ) }
    dend_48 { pt3dadd( 25.9326, 44.2072, 25.1928, 0.83 ) }
    dend_48 { pt3dadd( 25.5222, 46.9028, 26.3691, 0.55 ) }
    dend_48 { pt3dadd( 25.2481, 48.7271, 27.2349, 0.55 ) }
    dend_48 { pt3dadd( 25.0514, 50.0004, 27.8592, 0.55 ) }
    dend_48 { pt3dadd( 24.8403, 51.7973, 28.7502, 0.55 ) }
    dend_48 { pt3dadd( 24.6392, 53.9596, 29.8155, 0.55 ) }
    dend_48 { pt3dadd( 24.2758, 57.509, 31.4257, 0.55 ) }
    dend_48 { pt3dadd( 24.0948, 59.2539, 32.2415, 0.55 ) }
    dend_48 { pt3dadd( 23.9281, 60.6249, 32.6092, 0.83 ) }
    dend_48 { pt3dadd( 23.4564, 63.3712, 32.8594, 0.55 ) }
    dend_48 { pt3dadd( 23.1646, 65.0558, 32.8372, 0.55 ) }
    dend_48 { pt3dadd( 22.8468, 66.8633, 32.6977, 0.55 ) }
    dend_48 { pt3dadd( 22.479, 68.8012, 32.4592, 0.55 ) }
    dend_48 { pt3dadd( 20.9551, 77.4051, 31.365, 0.83 ) }
    dend_48 { pt3dadd( 20.456, 80.1444, 31.0449, 0.55 ) }
    dend_48 { pt3dadd( 19.9355, 82.8671, 30.7373, 0.55 ) }
    dend_48 { pt3dadd( 19.5622, 85.5202, 30.5322, 0.55 ) }
    dend_48 { pt3dadd( 19.3679, 87.4719, 30.4714, 0.55 ) }
    dend_48 { pt3dadd( 19.3286, 88.3179, 30.5316, 0.83 ) }
    dend_48 { pt3dadd( 19.3862, 89.9138, 30.9482, 0.28 ) }
    dend_48 { pt3dadd( 19.4594, 90.7606, 31.1387, 0.55 ) }
    dend_48 { pt3dadd( 19.771, 94.3085, 31.8076, 0.28 ) }
    dend_48 { pt3dadd( 19.8012, 94.5951, 31.866, 0.55 ) }
    dend_48 { pt3dadd( 20.1196, 97.4106, 32.3904, 0.28 ) }
    dend_48 { pt3dadd( 20.2701, 98.6062, 32.6143, 0.55 ) }
    dend_48 { pt3dadd( 20.4137, 99.7583, 32.836, 0.28 ) }
    dend_48 { pt3dadd( 20.4537, 100.284, 32.953, 0.55 ) }
    dend_48 { pt3dadd( 20.3887, 102.423, 33.4598, 0.28 ) }
    dend_48 { pt3dadd( 20.285, 103.778, 33.776, 0.55 ) }
    dend_48 { pt3dadd( 20.6921, 113.415, 34.6096, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 89/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 27.9111, 33.7961, 21.0596, 0.55 ) }
    dend_47 { pt3dadd( 30.2986, 34.9437, 21.3541, 0.55 ) }
    dend_47 { pt3dadd( 33.0586, 36.3292, 21.7906, 0.55 ) }
    dend_47 { pt3dadd( 34.852, 37.2971, 22.0934, 0.55 ) }
    dend_47 { pt3dadd( 36.5746, 38.3504, 22.426, 0.55 ) }
    dend_47 { pt3dadd( 38.0165, 39.3271, 22.7167, 0.55 ) }
    dend_47 { pt3dadd( 40.1867, 40.8585, 23.1457, 0.55 ) }
    dend_47 { pt3dadd( 41.4467, 41.8793, 23.4222, 0.55 ) }
    dend_47 { pt3dadd( 42.6325, 42.9007, 23.7035, 0.55 ) }
    dend_47 { pt3dadd( 44.0534, 44.0564, 24.0161, 0.55 ) }
    dend_47 { pt3dadd( 45.8936, 45.4506, 24.378, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_47 { pt3dadd( 46.696, 46.0409, 24.5159, 0.55 ) }
    dend_47 { pt3dadd( 47.904, 46.8345, 24.6447, 0.55 ) }
    dend_47 { pt3dadd( 49.3021, 47.7356, 24.7792, 0.55 ) }
    dend_47 { pt3dadd( 50.3841, 48.3023, 24.8696, 0.55 ) }
    dend_47 { pt3dadd( 52.0288, 48.9222, 24.9419, 0.55 ) }
    dend_47 { pt3dadd( 59.2563, 54.1374, 25.7941, 0.55 ) }
    dend_47 { pt3dadd( 66.6234, 59.0646, 27.0275, 0.55 ) }
    dend_47 { pt3dadd( 74.807, 62.6102, 26.9665, 0.55 ) }
    dend_47 { pt3dadd( 83.3796, 64.8578, 26.0844, 0.55 ) }
    dend_47 { pt3dadd( 91.1743, 69.0202, 24.8326, 0.55 ) }
    dend_47 { pt3dadd( 98.7336, 73.3453, 22.8793, 0.55 ) }
    dend_47 { pt3dadd( 106.707, 77.3389, 22.5222, 0.55 ) }
    dend_47 { pt3dadd( 114.84, 80.9835, 22.9188, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 13/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 37.8047, -10.0739, 5.20256, 0.55 ) }
    dend_39 { pt3dadd( 39.8325, -11.352, 5.70846, 0.55 ) }
    dend_39 { pt3dadd( 41.6717, -12.4899, 6.14317, 0.55 ) }
    dend_39 { pt3dadd( 43.3535, -13.5253, 6.48172, 0.55 ) }
    dend_39 { pt3dadd( 45.8293, -15.0356, 6.91482, 0.83 ) }
    dend_39 { pt3dadd( 48.4377, -16.6071, 7.33285, 0.55 ) }
    dend_39 { pt3dadd( 50.5125, -17.9029, 7.6804, 0.55 ) }
    dend_39 { pt3dadd( 51.5198, -18.5501, 7.84237, 0.83 ) }
    dend_39 { pt3dadd( 53.1725, -19.6457, 8.09042, 0.55 ) }
    dend_39 { pt3dadd( 55.5241, -21.1875, 8.40519, 0.55 ) }
    dend_39 { pt3dadd( 57.8999, -22.7273, 8.53827, 0.55 ) }
    dend_39 { pt3dadd( 59.9611, -24.0638, 8.52767, 0.55 ) }
    dend_39 { pt3dadd( 61.3792, -24.9529, 8.47153, 1.11 ) }
    dend_39 { pt3dadd( 63.3583, -26.0883, 8.3572, 0.55 ) }
    dend_39 { pt3dadd( 64.4119, -26.6675, 8.28823, 0.55 ) }
    dend_39 { pt3dadd( 67.4281, -28.2692, 7.9544, 0.55 ) }
    dend_39 { pt3dadd( 69.5589, -29.3777, 7.66258, 0.83 ) }
    dend_39 { pt3dadd( 72.4155, -30.62, 7.29571, 0.83 ) }
    dend_39 { pt3dadd( 74.2287, -31.3318, 7.17158, 0.55 ) }
    dend_39 { pt3dadd( 75.2908, -31.7148, 7.16092, 0.55 ) }
    dend_39 { pt3dadd( 77.2786, -32.4137, 7.07002, 0.55 ) }
    dend_39 { pt3dadd( 78.6116, -32.8497, 7.00327, 0.83 ) }
    dend_39 { pt3dadd( 81.2843, -33.7498, 6.56358, 0.55 ) }
    dend_39 { pt3dadd( 83.1896, -34.4702, 6.08004, 0.55 ) }
    dend_39 { pt3dadd( 85.0037, -35.1854, 5.51013, 0.83 ) }
    dend_39 { pt3dadd( 88.7491, -36.6811, 4.17387, 0.28 ) }
    dend_39 { pt3dadd( 89.9415, -37.2207, 3.71608, 0.55 ) }
    dend_39 { pt3dadd( 91.8339, -38.2868, 2.85815, 0.28 ) }
    dend_39 { pt3dadd( 93.4019, -39.334, 2.07468, 0.28 ) }
    dend_39 { pt3dadd( 95.2412, -40.6254, 1.13727, 0.83 ) }
    dend_39 { pt3dadd( 96.6776, -41.7062, 0.449768, 0.55 ) }
    dend_39 { pt3dadd( 97.7631, -42.5388, 0.00103875, 0.55 ) }
    dend_39 { pt3dadd( 100.221, -44.4332, -1.04835, 0.55 ) }
    dend_39 { pt3dadd( 101.284, -45.2549, -1.48296, 0.83 ) }
    dend_39 { pt3dadd( 103.275, -46.9447, -2.37036, 0.55 ) }
    dend_39 { pt3dadd( 103.995, -47.5674, -2.6805, 0.28 ) }
    dend_39 { pt3dadd( 104.218, -47.7399, -2.77341, 0.55 ) }
    dend_39 { pt3dadd( 104.886, -48.1223, -3.02253, 0.28 ) }
    dend_39 { pt3dadd( 105.444, -48.3739, -3.18019, 0.55 ) }
    dend_39 { pt3dadd( 106.66, -48.8429, -3.50238, 0.28 ) }
    dend_39 { pt3dadd( 107.491, -49.092, -3.69584, 0.83 ) }
    dend_39 { pt3dadd( 110.035, -49.7603, -4.1334, 0.28 ) }
    dend_39 { pt3dadd( 112.217, -50.3249, -4.41359, 0.83 ) }
    dend_39 { pt3dadd( 113.175, -50.6307, -4.44614, 0.28 ) }
    dend_39 { pt3dadd( 113.918, -50.941, -4.39051, 0.28 ) }
    dend_39 { pt3dadd( 115.451, -51.6973, -4.03704, 0.55 ) }
    dend_39 { pt3dadd( 117.401, -52.8109, -3.33328, 0.28 ) }
    dend_39 { pt3dadd( 118.032, -53.2169, -3.0228, 0.55 ) }
    dend_39 { pt3dadd( 120.367, -54.8373, -1.74565, 0.28 ) }
    dend_39 { pt3dadd( 121.926, -55.8503, -0.876037, 0.28 ) }
    dend_39 { pt3dadd( 123.211, -56.6512, -0.148935, 0.28 ) }
    dend_39 { pt3dadd( 123.555, -56.832, 0.0399227, 0.55 ) }
    dend_39 { pt3dadd( 125.134, -57.4445, 0.947898, 0.28 ) }
    dend_39 { pt3dadd( 125.37, -57.4947, 1.07598, 1.11 ) }
    dend_39 { pt3dadd( 127.732, -57.7206, 2.26307, 0.28 ) }
    dend_39 { pt3dadd( 128.229, -57.7464, 2.51705, 0.55 ) }
    dend_39 { pt3dadd( 131.262, -57.9085, 4.04794, 0.28 ) }
    dend_39 { pt3dadd( 133.7, -58.0211, 5.3435, 0.83 ) }
    dend_39 { pt3dadd( 136.702, -58.0851, 7.04283, 0.28 ) }
    dend_39 { pt3dadd( 137.237, -58.089, 7.34998, 0.28 ) }
    dend_39 { pt3dadd( 137.376, -58.0847, 7.43231, 0.55 ) }
    dend_39 { pt3dadd( 139.02, -58.0079, 8.40959, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 75/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 37.8047, -10.0739, 5.20256, 0.55 ) }
    dend_38 { pt3dadd( 44.2844, -6.02457, 6.87103, 0.55 ) }
    dend_38 { pt3dadd( 48.1962, -4.14193, 8.78515, 0.55 ) }
    dend_38 { pt3dadd( 50.1633, -3.64752, 10.2354, 0.55 ) }
    dend_38 { pt3dadd( 51.489, -3.45848, 11.2882, 0.55 ) }
    dend_38 { pt3dadd( 53.267, -3.36019, 12.8008, 0.55 ) }
    dend_38 { pt3dadd( 55.2978, -3.26157, 14.5815, 0.55 ) }
    dend_38 { pt3dadd( 58.1385, -3.30304, 17.4434, 0.83 ) }
    dend_38 { pt3dadd( 61.3919, -3.37042, 20.6309, 0.55 ) }
    dend_38 { pt3dadd( 62.987, -3.47506, 22.2356, 0.55 ) }
    dend_38 { pt3dadd( 65.3342, -3.62206, 24.5239, 0.55 ) }
    dend_38 { pt3dadd( 66.6863, -3.72785, 25.7647, 0.28 ) }
    dend_38 { pt3dadd( 68.884, -3.76847, 27.6517, 0.55 ) }
    dend_38 { pt3dadd( 70.9851, -3.54877, 29.2097, 0.28 ) }
    dend_38 { pt3dadd( 72.2319, -3.26191, 30.0406, 0.55 ) }
    dend_38 { pt3dadd( 73.6002, -2.92442, 30.9591, 0.28 ) }
    dend_38 { pt3dadd( 74.3165, -2.73063, 31.3974, 0.28 ) }
    dend_38 { pt3dadd( 74.7985, -2.59318, 31.7641, 0.55 ) }
    dend_38 { pt3dadd( 76.2716, -2.25562, 33.0639, 0.28 ) }
    dend_38 { pt3dadd( 76.6786, -2.14708, 33.4394, 0.55 ) }
    dend_38 { pt3dadd( 77.8436, -1.78048, 34.6658, 0.28 ) }
    dend_38 { pt3dadd( 78.2775, -1.65006, 35.1767, 0.83 ) }
    dend_38 { pt3dadd( 80.3458, -0.960839, 37.6874, 0.55 ) }
    dend_38 { pt3dadd( 82.2554, -0.427664, 40.0472, 0.55 ) }
    dend_38 { pt3dadd( 89.4595, -0.187924, 47.3244, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_38 { pt3dadd( 96.8517, 0.376182, 54.3935, 0.55 ) }
    dend_38 { pt3dadd( 103.875, 2.72077, 61.4952, 0.55 ) }
    dend_38 { pt3dadd( 110.588, 6.49756, 68.3062, 0.55 ) }
    dend_38 { pt3dadd( 117.769, 11.9091, 73.3413, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 4/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -12.6547, -28.1633, -15.9601, 0.55 ) }
    dend_26 { pt3dadd( -14.0362, -29.4149, -15.9471, 0.55 ) }
    dend_26 { pt3dadd( -15.9469, -31.0673, -15.8411, 0.55 ) }
    dend_26 { pt3dadd( -17.7968, -32.5198, -15.7101, 0.55 ) }
    dend_26 { pt3dadd( -19.233, -33.6392, -15.582, 0.83 ) }
    dend_26 { pt3dadd( -21.9708, -35.8331, -15.3763, 0.83 ) }
    dend_26 { pt3dadd( -23.0927, -36.7329, -15.3041, 0.83 ) }
    dend_26 { pt3dadd( -25.3869, -38.5989, -15.1851, 1.94 ) }
    dend_26 { pt3dadd( -27.8652, -40.6683, -15.0696, 0.55 ) }
    dend_26 { pt3dadd( -30.0116, -42.5323, -14.8913, 0.83 ) }
    dend_26 { pt3dadd( -31.6354, -44.0957, -14.7307, 0.55 ) }
    dend_26 { pt3dadd( -32.4268, -44.9199, -14.642, 0.83 ) }
    dend_26 { pt3dadd( -33.6015, -46.2108, -14.5116, 0.83 ) }
    dend_26 { pt3dadd( -35.5111, -48.4775, -14.3293, 0.83 ) }
    dend_26 { pt3dadd( -37.7789, -51.5104, -14.0407, 0.83 ) }
    dend_26 { pt3dadd( -38.5985, -52.6273, -13.9028, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 20/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -12.6547, -28.1633, -15.9601, 0.55 ) }
    dend_25 { pt3dadd( -14.6031, -28.1554, -17.933, 0.55 ) }
    dend_25 { pt3dadd( -16.7653, -28.2249, -20.2567, 0.55 ) }
    dend_25 { pt3dadd( -20.009, -28.5366, -24.069, 0.83 ) }
    dend_25 { pt3dadd( -22.2333, -28.9202, -26.7583, 1.11 ) }
    dend_25 { pt3dadd( -25.9275, -29.7131, -31.0907, 0.55 ) }
    dend_25 { pt3dadd( -27.519, -30.1499, -32.8338, 0.55 ) }
    dend_25 { pt3dadd( -31.0428, -31.4381, -36.6841, 0.55 ) }
    dend_25 { pt3dadd( -33.1745, -32.4107, -38.9205, 1.11 ) }
    dend_25 { pt3dadd( -34.7074, -33.1831, -40.406, 0.55 ) }
    dend_25 { pt3dadd( -35.9581, -33.852, -41.4538, 0.55 ) }
    dend_25 { pt3dadd( -38.3136, -35.2174, -43.0194, 0.55 ) }
    dend_25 { pt3dadd( -40.7221, -36.5536, -44.4978, 1.11 ) }
    dend_25 { pt3dadd( -43.6681, -38.0085, -46.0494, 0.55 ) }
    dend_25 { pt3dadd( -44.5473, -38.3779, -46.4788, 0.83 ) }
    dend_25 { pt3dadd( -47.2979, -39.3973, -47.8882, 0.55 ) }
    dend_25 { pt3dadd( -48.7864, -39.9287, -48.6827, 0.55 ) }
    dend_25 { pt3dadd( -51.0862, -40.6405, -49.852, 0.83 ) }
    dend_25 { pt3dadd( -54.1712, -41.5663, -51.1542, 0.55 ) }
    dend_25 { pt3dadd( -55.5594, -42.0235, -51.6554, 0.83 ) }
    dend_25 { pt3dadd( -57.2523, -42.6605, -52.3041, 0.28 ) }
    dend_25 { pt3dadd( -58.5526, -43.1746, -52.7407, 0.55 ) }
    dend_25 { pt3dadd( -60.0716, -43.7765, -53.1872, 0.28 ) }
    dend_25 { pt3dadd( -62.0143, -44.5, -53.8801, 0.55 ) }
    dend_25 { pt3dadd( -62.9589, -44.8798, -54.3725, 0.55 ) }
    dend_25 { pt3dadd( -65.3613, -45.8895, -55.9556, 0.28 ) }
    dend_25 { pt3dadd( -67.068, -46.6412, -57.3947, 0.55 ) }
    dend_25 { pt3dadd( -68.6984, -47.4083, -59.0464, 1.66 ) }
    dend_25 { pt3dadd( -72.4227, -49.4762, -63.9069, 0.83 ) }
    dend_25 { pt3dadd( -74.0437, -50.4662, -66.4187, 0.55 ) }
    dend_25 { pt3dadd( -74.9093, -51.0448, -67.9202, 0.55 ) }
    dend_25 { pt3dadd( -76.4002, -52.2382, -70.9305, 0.28 ) }
    dend_25 { pt3dadd( -76.586, -52.4447, -71.4082, 0.83 ) }
    dend_25 { pt3dadd( -77.9882, -54.7415, -76.0997, 0.28 ) }
    dend_25 { pt3dadd( -78.044, -54.8582, -76.311, 0.55 ) }
    dend_25 { pt3dadd( -78.412, -55.4138, -77.3871, 0.28 ) }
    dend_25 { pt3dadd( -78.6677, -55.7169, -78.0355, 0.55 ) }
    dend_25 { pt3dadd( -80.1307, -56.7141, -80.2659, 0.28 ) }
    dend_25 { pt3dadd( -81.8804, -57.4628, -82.1754, 0.83 ) }
    dend_25 { pt3dadd( -83.4802, -57.859, -83.4465, 0.83 ) }
    dend_25 { pt3dadd( -85.6882, -58.2714, -85.0075, 0.28 ) }
    dend_25 { pt3dadd( -86.5876, -58.3612, -85.5337, 0.55 ) }
    dend_25 { pt3dadd( -91.0468, -58.4444, -87.766, 0.28 ) }
    dend_25 { pt3dadd( -91.7902, -58.3863, -88.0273, 0.83 ) }
    dend_25 { pt3dadd( -95.4011, -57.705, -88.869, 0.28 ) }
    dend_25 { pt3dadd( -96.1174, -57.4939, -89.0056, 0.55 ) }
    dend_25 { pt3dadd( -98.8086, -56.4711, -89.4577, 0.28 ) }
    dend_25 { pt3dadd( -101.527, -55.1207, -89.6682, 0.55 ) }
    dend_25 { pt3dadd( -104.228, -53.3792, -89.6057, 0.28 ) }
    dend_25 { pt3dadd( -106.029, -52.1289, -89.5025, 0.28 ) }
    dend_25 { pt3dadd( -109.173, -49.7277, -89.1051, 0.28 ) }
    dend_25 { pt3dadd( -109.577, -49.4223, -89.0645, 0.83 ) }
    dend_25 { pt3dadd( -112.615, -47.3092, -88.8971, 0.28 ) }
    dend_25 { pt3dadd( -113.605, -46.6472, -88.7244, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 74/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -63.4058, -36.6772, -20.2571, 0.28 ) }
    dend_23 { pt3dadd( -64.6539, -36.4591, -23.5491, 0.28 ) }
    dend_23 { pt3dadd( -65.2549, -36.354, -25.1344, 0.55 ) }
    dend_23 { pt3dadd( -67.6104, -35.9423, -31.3476, 0.28 ) }
    dend_23 { pt3dadd( -70.132, -35.5016, -37.9988, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 79/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -63.4058, -36.6772, -20.2571, 0.28 ) }
    dend_22 { pt3dadd( -63.8375, -38.4221, -20.2991, 0.28 ) }
    dend_22 { pt3dadd( -63.9718, -38.965, -20.3122, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 82/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 2.61227, -41.5787, -3.7333, 0.83 ) }
    dend_15 { pt3dadd( 2.07254, -44.3238, -4.2219, 0.83 ) }
    dend_15 { pt3dadd( 1.66829, -46.4319, -4.63749, 0.83 ) }
    dend_15 { pt3dadd( 0.901995, -50.6415, -5.46696, 0.83 ) }
    dend_15 { pt3dadd( 0.532991, -52.9562, -5.92294, 0.83 ) }
    dend_15 { pt3dadd( 0.132599, -55.8309, -6.44977, 0.83 ) }
    dend_15 { pt3dadd( -0.237746, -58.9151, -6.97886, 0.83 ) }
    dend_15 { pt3dadd( -0.474446, -61.1994, -7.34424, 0.83 ) }
    dend_15 { pt3dadd( -0.717353, -64.0286, -7.6757, 1.38 ) }
    dend_15 { pt3dadd( -0.989549, -66.8683, -7.76708, 0.83 ) }
    dend_15 { pt3dadd( -1.35168, -70.7087, -7.73579, 0.83 ) }
    dend_15 { pt3dadd( -1.42502, -71.6499, -7.70699, 0.83 ) }
    dend_15 { pt3dadd( -1.66697, -75.0082, -7.58415, 0.83 ) }
    dend_15 { pt3dadd( -1.86632, -77.0531, -7.36209, 0.83 ) }
    dend_15 { pt3dadd( -2.41743, -81.3831, -6.64269, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 97/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 2.61227, -41.5787, -3.7333, 0.83 ) }
    dend_12 { pt3dadd( 4.13106, -43.4853, -3.80084, 0.83 ) }
    dend_12 { pt3dadd( 5.52061, -45.6775, -3.80028, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_12 { pt3dadd( 6.17875, -46.9446, -3.75927, 0.55 ) }
    dend_12 { pt3dadd( 7.04785, -49.2962, -3.92823, 0.55 ) }
    dend_12 { pt3dadd( 8.35348, -52.8289, -4.18205, 0.83 ) }
    dend_12 { pt3dadd( 9.25328, -55.2636, -4.35698, 0.55 ) }
    dend_12 { pt3dadd( 9.99517, -57.8655, -4.56321, 0.55 ) }
    dend_12 { pt3dadd( 10.5645, -60.4277, -4.80128, 0.55 ) }
    dend_12 { pt3dadd( 11.6254, -67.1422, -5.54322, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 7/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 1.618, -26.171, -9.00704, 0.83 ) }
    dend_10 { pt3dadd( 1.32044, -25.2496, -10.1471, 0.83 ) }
    dend_10 { pt3dadd( 1.25161, -24.3254, -11.7053, 0.83 ) }
    dend_10 { pt3dadd( 1.62603, -23.469, -14.6424, 0.55 ) }
    dend_10 { pt3dadd( 1.84543, -23.2032, -16.0442, 0.55 ) }
    dend_10 { pt3dadd( 2.00745, -23.0459, -16.9887, 0.55 ) }
    dend_10 { pt3dadd( 2.32001, -22.7925, -18.754, 0.55 ) }
    dend_10 { pt3dadd( 2.71327, -22.5658, -20.7816, 0.55 ) }
    dend_10 { pt3dadd( 3.71754, -22.1122, -25.2805, 0.55 ) }
    dend_10 { pt3dadd( 5.31799, -21.4955, -31.4909, 0.83 ) }
    dend_10 { pt3dadd( 6.47885, -21.0811, -35.7801, 0.28 ) }
    dend_10 { pt3dadd( 7.23447, -20.8217, -38.5222, 0.55 ) }
    dend_10 { pt3dadd( 7.78887, -20.6159, -40.4538, 0.28 ) }
    dend_10 { pt3dadd( 8.22696, -20.4346, -41.8856, 1.11 ) }
    dend_10 { pt3dadd( 9.45646, -19.8758, -45.3145, 0.28 ) }
    dend_10 { pt3dadd( 9.55436, -19.8382, -45.554, 0.55 ) }
    dend_10 { pt3dadd( 10.0164, -19.6727, -46.6284, 0.28 ) }
    dend_10 { pt3dadd( 10.2004, -19.595, -47.0883, 0.55 ) }
    dend_10 { pt3dadd( 10.4802, -19.4894, -47.8101, 0.28 ) }
    dend_10 { pt3dadd( 10.6393, -19.4419, -48.2077, 0.83 ) }
    dend_10 { pt3dadd( 13.1544, -18.6919, -54.3171, 0.28 ) }
    dend_10 { pt3dadd( 13.6211, -18.5635, -55.4495, 0.55 ) }
    dend_10 { pt3dadd( 14.5228, -18.3114, -57.5618, 0.28 ) }
    dend_10 { pt3dadd( 15.1335, -18.16, -58.9046, 0.55 ) }
    dend_10 { pt3dadd( 15.6602, -18.0574, -59.9767, 0.55 ) }
    dend_10 { pt3dadd( 16.9589, -17.8439, -62.3285, 0.28 ) }
    dend_10 { pt3dadd( 17.339, -17.8159, -62.9574, 0.55 ) }
    dend_10 { pt3dadd( 18.1494, -17.8571, -64.5191, 0.28 ) }
    dend_10 { pt3dadd( 18.4096, -17.9291, -65.126, 0.55 ) }
    dend_10 { pt3dadd( 19.0251, -18.2921, -67.1275, 0.28 ) }
    dend_10 { pt3dadd( 19.2208, -18.4876, -68.2045, 1.11 ) }
    dend_10 { pt3dadd( 19.8252, -19.2909, -72.4475, 0.28 ) }
    dend_10 { pt3dadd( 19.9704, -19.468, -73.6513, 1.11 ) }
    dend_10 { pt3dadd( 20.2357, -19.7762, -76.2124, 0.28 ) }
    dend_10 { pt3dadd( 20.4319, -19.9678, -78.1014, 1.38 ) }
    dend_10 { pt3dadd( 21.3063, -20.7666, -86.5642, 0.28 ) }
    dend_10 { pt3dadd( 21.4134, -20.8476, -87.6121, 1.11 ) }
    dend_10 { pt3dadd( 22.0706, -21.142, -93.3272, 0.28 ) }
    dend_10 { pt3dadd( 22.2599, -21.1875, -94.7615, 0.55 ) }
    dend_10 { pt3dadd( 22.658, -21.1766, -97.2342, 0.28 ) }
    dend_10 { pt3dadd( 22.8466, -21.1546, -98.1898, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 48/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 1.618, -26.171, -9.00704, 0.55 ) }
    dend_3 { pt3dadd( 2.4367, -27.037, -9.65091, 0.55 ) }
    dend_3 { pt3dadd( 3.89227, -28.5768, -10.7957, 1.11 ) }
    dend_3 { pt3dadd( 5.88862, -30.6887, -12.3657, 0.83 ) }
    dend_3 { pt3dadd( 7.93872, -32.8575, -13.978, 0.83 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 53/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -38.5985, -52.6273, -13.9028, 0.55 ) }
    dend_28 { pt3dadd( -42.1701, -52.4391, -14.7355, 0.55 ) }
    dend_28 { pt3dadd( -46.0674, -52.3468, -15.7644, 0.55 ) }
    dend_28 { pt3dadd( -49.2502, -52.3628, -16.645, 0.55 ) }
    dend_28 { pt3dadd( -51.5756, -52.4772, -17.3362, 0.83 ) }
    dend_28 { pt3dadd( -53.6201, -52.6495, -17.9815, 0.28 ) }
    dend_28 { pt3dadd( -54.7023, -52.768, -18.3278, 0.83 ) }
    dend_28 { pt3dadd( -57.1009, -53.324, -19.3582, 0.55 ) }
    dend_28 { pt3dadd( -57.9284, -53.5959, -19.7809, 0.55 ) }
    dend_28 { pt3dadd( -59.2922, -54.096, -20.7472, 0.55 ) }
    dend_28 { pt3dadd( -60.4981, -54.5284, -21.844, 0.55 ) }
    dend_28 { pt3dadd( -61.7909, -54.9905, -23.1602, 0.83 ) }
    dend_28 { pt3dadd( -64.02, -55.7311, -25.7148, 0.55 ) }
    dend_28 { pt3dadd( -65.0248, -56.0146, -26.9325, 0.55 ) }
    dend_28 { pt3dadd( -68.1261, -56.7126, -30.6814, 0.55 ) }
    dend_28 { pt3dadd( -69.0098, -56.8509, -31.7093, 0.55 ) }
    dend_28 { pt3dadd( -69.9457, -56.9454, -32.724, 0.55 ) }
    dend_28 { pt3dadd( -72.7045, -57.0543, -35.5033, 0.28 ) }
    dend_28 { pt3dadd( -73.6124, -57.0486, -36.3084, 0.55 ) }
    dend_28 { pt3dadd( -74.6459, -57.0366, -37.1705, 0.28 ) }
    dend_28 { pt3dadd( -75.7954, -57.0083, -37.9265, 1.11 ) }
    dend_28 { pt3dadd( -79.1997, -57.0158, -40.1897, 0.55 ) }
    dend_28 { pt3dadd( -80.5561, -56.9607, -41.0803, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 76/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -38.5985, -52.6273, -13.9028, 0.55 ) }
    dend_27 { pt3dadd( -40.319, -54.8451, -13.5582, 0.55 ) }
    dend_27 { pt3dadd( -41.4891, -56.2451, -13.3049, 0.55 ) }
    dend_27 { pt3dadd( -43.1275, -58.1145, -13.002, 0.83 ) }
    dend_27 { pt3dadd( -44.8721, -59.8975, -12.7628, 0.55 ) }
    dend_27 { pt3dadd( -47.3127, -62.2796, -12.5053, 0.83 ) }
    dend_27 { pt3dadd( -49.1461, -63.9871, -12.3433, 0.28 ) }
    dend_27 { pt3dadd( -49.984, -64.6905, -12.2912, 0.55 ) }
    dend_27 { pt3dadd( -51.2412, -65.6846, -12.3032, 0.28 ) }
    dend_27 { pt3dadd( -53.1557, -67.1916, -12.422, 0.83 ) }
    dend_27 { pt3dadd( -55.0261, -68.6944, -12.7842, 0.28 ) }
    dend_27 { pt3dadd( -56.0749, -69.5735, -13.0392, 0.55 ) }
    dend_27 { pt3dadd( -57.8429, -71.1623, -13.5308, 0.55 ) }
    dend_27 { pt3dadd( -59.7326, -73.0715, -14.0852, 0.55 ) }
    dend_27 { pt3dadd( -61.7773, -75.2922, -14.5522, 0.28 ) }
    dend_27 { pt3dadd( -63.2329, -77.0043, -14.8082, 0.28 ) }
    dend_27 { pt3dadd( -64.293, -78.1632, -14.895, 0.55 ) }
    dend_27 { pt3dadd( -65.2363, -79.1452, -14.8706, 0.55 ) }
    dend_27 { pt3dadd( -67.0936, -80.8187, -14.3832, 0.28 ) }
    dend_27 { pt3dadd( -68.961, -82.2576, -13.5393, 0.28 ) }
    dend_27 { pt3dadd( -69.4548, -82.6649, -13.2834, 0.55 ) }
    dend_27 { pt3dadd( -70.9438, -84.0301, -12.3879, 0.28 ) }
    dend_27 { pt3dadd( -71.4944, -84.6264, -12.0645, 0.55 ) }
    dend_27 { pt3dadd( -73.2064, -86.7924, -10.8363, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_27 { pt3dadd( -73.8465, -87.7304, -10.3048, 0.55 ) }
    dend_27 { pt3dadd( -75.1786, -90.1099, -9.08584, 0.28 ) }
    dend_27 { pt3dadd( -75.9103, -91.5306, -8.35303, 0.55 ) }
    dend_27 { pt3dadd( -76.8806, -93.3557, -7.52818, 0.55 ) }
    dend_27 { pt3dadd( -78.3771, -96.189, -6.26277, 0.28 ) }
    dend_27 { pt3dadd( -78.6463, -96.6948, -6.04587, 0.55 ) }
    dend_27 { pt3dadd( -80.1426, -99.2877, -4.83382, 0.28 ) }
    dend_27 { pt3dadd( -81.7617, -101.797, -3.51721, 0.28 ) }
    dend_27 { pt3dadd( -84.6544, -106.123, -1.43382, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 9/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -2.41743, -81.3831, -6.64269, 0.55 ) }
    dend_17 { pt3dadd( -2.88444, -84.16, -7.0256, 0.55 ) }
    dend_17 { pt3dadd( -3.30764, -86.6794, -7.37151, 0.55 ) }
    dend_17 { pt3dadd( -4.21159, -90.2654, -7.90866, 0.55 ) }
    dend_17 { pt3dadd( -5.22847, -93.6004, -8.54641, 0.83 ) }
    dend_17 { pt3dadd( -6.06472, -96.1491, -9.07566, 0.83 ) }
    dend_17 { pt3dadd( -6.74925, -97.9624, -9.44478, 0.83 ) }
    dend_17 { pt3dadd( -7.48449, -99.4516, -9.8211, 0.55 ) }
    dend_17 { pt3dadd( -9.16579, -102.376, -10.5574, 0.55 ) }
    dend_17 { pt3dadd( -10.5246, -104.672, -11.2006, 0.55 ) }
    dend_17 { pt3dadd( -11.1224, -105.533, -11.4704, 0.55 ) }
    dend_17 { pt3dadd( -12.5388, -107.412, -12.0718, 0.55 ) }
    dend_17 { pt3dadd( -14.0335, -109.426, -12.6785, 0.55 ) }
    dend_17 { pt3dadd( -14.8489, -110.559, -12.977, 0.83 ) }
    dend_17 { pt3dadd( -15.5615, -111.647, -13.1785, 1.11 ) }
    dend_17 { pt3dadd( -16.6409, -113.317, -13.3684, 0.83 ) }
    dend_17 { pt3dadd( -16.9332, -113.76, -13.3979, 0.83 ) }
    dend_17 { pt3dadd( -17.6936, -114.907, -13.4044, 0.55 ) }
    dend_17 { pt3dadd( -19.2781, -117.141, -13.1182, 0.83 ) }
    dend_17 { pt3dadd( -20.3443, -118.517, -12.8494, 0.83 ) }
    dend_17 { pt3dadd( -21.0372, -119.334, -12.6739, 0.55 ) }
    dend_17 { pt3dadd( -22.745, -121.23, -12.2308, 0.83 ) }
    dend_17 { pt3dadd( -23.9808, -122.635, -11.9226, 0.83 ) }
    dend_17 { pt3dadd( -25.4176, -124.349, -11.6969, 0.55 ) }
    dend_17 { pt3dadd( -26.8386, -126.114, -11.6068, 0.83 ) }
    dend_17 { pt3dadd( -28.5574, -128.073, -11.7206, 0.55 ) }
    dend_17 { pt3dadd( -29.5564, -129.23, -11.8428, 0.55 ) }
    dend_17 { pt3dadd( -30.7379, -130.724, -12.0994, 1.11 ) }
    dend_17 { pt3dadd( -32.7684, -133.503, -12.6488, 0.55 ) }
    dend_17 { pt3dadd( -33.653, -134.72, -12.948, 0.55 ) }
    dend_17 { pt3dadd( -35.4404, -137.23, -13.5811, 0.55 ) }
    dend_17 { pt3dadd( -37.1287, -139.751, -14.1599, 1.11 ) }
    dend_17 { pt3dadd( -38.6359, -142.06, -14.6751, 0.55 ) }
    dend_17 { pt3dadd( -40.3127, -144.6, -15.1136, 1.66 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 43/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -2.41743, -81.3831, -6.64269, 0.55 ) }
    dend_16 { pt3dadd( -2.04827, -83.7497, -5.86875, 0.55 ) }
    dend_16 { pt3dadd( -1.69431, -85.5666, -5.05262, 0.55 ) }
    dend_16 { pt3dadd( -1.06992, -89.2228, -3.29921, 0.55 ) }
    dend_16 { pt3dadd( -0.593, -92.0796, -1.98068, 0.55 ) }
    dend_16 { pt3dadd( -0.118257, -94.9941, -0.60224, 0.55 ) }
    dend_16 { pt3dadd( 0.255985, -97.4465, 0.529141, 0.83 ) }
    dend_16 { pt3dadd( 0.873235, -101.691, 2.40941, 0.83 ) }
    dend_16 { pt3dadd( 1.16513, -103.795, 3.3183, 0.83 ) }
    dend_16 { pt3dadd( 1.48339, -106.563, 4.33437, 0.83 ) }
    dend_16 { pt3dadd( 1.69596, -108.419, 4.89526, 0.83 ) }
    dend_16 { pt3dadd( 1.84646, -110.61, 5.49368, 0.83 ) }
    dend_16 { pt3dadd( 2.11459, -114.922, 6.67237, 0.83 ) }
    dend_16 { pt3dadd( 2.41463, -118.714, 7.66719, 0.83 ) }
    dend_16 { pt3dadd( 2.78637, -122.718, 8.81177, 0.83 ) }
    dend_16 { pt3dadd( 3.03209, -126.598, 9.94462, 0.83 ) }
    dend_16 { pt3dadd( 3.20823, -130.462, 11.0131, 0.55 ) }
    dend_16 { pt3dadd( 3.33255, -133.524, 11.8683, 0.83 ) }
    dend_16 { pt3dadd( 3.36893, -136.147, 12.5689, 0.55 ) }
    dend_16 { pt3dadd( 3.40442, -137.257, 12.8673, 0.55 ) }
    dend_16 { pt3dadd( 3.52707, -140.79, 13.8484, 0.55 ) }
    dend_16 { pt3dadd( 3.58352, -143.272, 14.496, 0.55 ) }
    dend_16 { pt3dadd( 3.61081, -145.096, 14.9442, 0.55 ) }
    dend_16 { pt3dadd( 3.64692, -150.531, 16.3055, 0.55 ) }
    dend_16 { pt3dadd( 3.8555, -154.197, 17.3494, 0.55 ) }
    dend_16 { pt3dadd( 4.16418, -156.936, 18.2495, 0.55 ) }
    dend_16 { pt3dadd( 4.49539, -159.035, 19.0272, 0.55 ) }
    dend_16 { pt3dadd( 4.92333, -161.75, 20.147, 0.55 ) }
    dend_16 { pt3dadd( 5.18017, -163.354, 20.8407, 0.55 ) }
    dend_16 { pt3dadd( 5.99438, -167.539, 22.5165, 0.55 ) }
    dend_16 { pt3dadd( 6.22107, -168.966, 23.0595, 0.55 ) }
    dend_16 { pt3dadd( 6.41496, -170.321, 23.5807, 0.83 ) }
    dend_16 { pt3dadd( 6.78604, -172.503, 24.3575, 0.55 ) }
    dend_16 { pt3dadd( 7.06342, -173.741, 24.759, 0.55 ) }
    dend_16 { pt3dadd( 7.62648, -176.561, 25.4112, 0.55 ) }
    dend_16 { pt3dadd( 8.25903, -180.072, 25.8451, 0.55 ) }
    dend_16 { pt3dadd( 8.81549, -182.667, 25.9933, 0.55 ) }
    dend_16 { pt3dadd( 9.42274, -185.396, 26.0553, 0.55 ) }
    dend_16 { pt3dadd( 9.74299, -186.705, 26.0314, 0.55 ) }
    dend_16 { pt3dadd( 10.5584, -189.81, 25.8919, 0.55 ) }
    dend_16 { pt3dadd( 11.3519, -193.075, 25.8429, 0.55 ) }
    dend_16 { pt3dadd( 11.7375, -195.297, 25.8732, 0.55 ) }
    dend_16 { pt3dadd( 11.8341, -197.169, 26.0299, 0.55 ) }
    dend_16 { pt3dadd( 11.7637, -198.771, 26.2184, 0.55 ) }
    dend_16 { pt3dadd( 11.5658, -200.99, 26.6254, 0.55 ) }
    dend_16 { pt3dadd( 11.029, -205.026, 27.501, 0.83 ) }
    dend_16 { pt3dadd( 10.1593, -208.79, 28.3339, 0.55 ) }
    dend_16 { pt3dadd( 9.04852, -211.967, 29.1711, 0.55 ) }
    dend_16 { pt3dadd( 8.35039, -213.763, 29.6534, 0.83 ) }
    dend_16 { pt3dadd( 6.89204, -217.041, 30.5689, 0.55 ) }
    dend_16 { pt3dadd( 5.61159, -219.576, 31.2948, 0.55 ) }
    dend_16 { pt3dadd( 3.83364, -222.797, 32.0733, 0.55 ) }
    dend_16 { pt3dadd( 1.38926, -226.761, 33.0684, 0.83 ) }
    dend_16 { pt3dadd( 3.09135, -237.479, 37.098, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 97/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 11.6254, -67.1422, -5.54322, 0.55 ) }
    dend_14 { pt3dadd( 11.5396, -69.2412, -4.41987, 0.55 ) }
    dend_14 { pt3dadd( 11.3963, -71.1193, -3.36479, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_14 { pt3dadd( 11.1411, -73.6199, -1.8234, 0.83 ) }
    dend_14 { pt3dadd( 10.9665, -75.1548, -0.807561, 0.55 ) }
    dend_14 { pt3dadd( 10.7901, -76.7832, 0.285671, 0.83 ) }
    dend_14 { pt3dadd( 10.5885, -79.0361, 1.86194, 0.83 ) }
    dend_14 { pt3dadd( 10.5461, -80.5723, 3.02199, 0.55 ) }
    dend_14 { pt3dadd( 10.5683, -82.4474, 4.51888, 0.83 ) }
    dend_14 { pt3dadd( 10.6122, -84.2267, 5.92646, 0.55 ) }
    dend_14 { pt3dadd( 10.6566, -85.0623, 6.54684, 0.55 ) }
    dend_14 { pt3dadd( 10.7876, -86.8104, 7.90113, 0.83 ) }
    dend_14 { pt3dadd( 10.9536, -88.6093, 9.26268, 0.83 ) }
    dend_14 { pt3dadd( 11.2338, -90.5261, 10.7453, 0.55 ) }
    dend_14 { pt3dadd( 11.3104, -91.0378, 11.1289, 0.55 ) }
    dend_14 { pt3dadd( 11.5264, -92.6455, 12.283, 0.83 ) }
    dend_14 { pt3dadd( 11.8524, -95.5754, 14.2742, 0.55 ) }
    dend_14 { pt3dadd( 11.9102, -96.5639, 14.8671, 0.55 ) }
    dend_14 { pt3dadd( 11.9344, -98.1442, 15.7085, 0.55 ) }
    dend_14 { pt3dadd( 11.9617, -99.0634, 16.1547, 0.55 ) }
    dend_14 { pt3dadd( 12.0305, -100.306, 16.8475, 0.55 ) }
    dend_14 { pt3dadd( 12.1136, -101.189, 17.3794, 0.55 ) }
    dend_14 { pt3dadd( 12.3851, -102.422, 18.3268, 0.55 ) }
    dend_14 { pt3dadd( 12.7908, -103.765, 19.5826, 0.28 ) }
    dend_14 { pt3dadd( 13.3302, -105.328, 21.189, 0.83 ) }
    dend_14 { pt3dadd( 14.0292, -107.086, 23.2285, 0.28 ) }
    dend_14 { pt3dadd( 14.2425, -107.563, 23.8318, 0.55 ) }
    dend_14 { pt3dadd( 15.6701, -110.326, 27.5776, 0.28 ) }
    dend_14 { pt3dadd( 15.8591, -110.672, 28.0345, 0.83 ) }
    dend_14 { pt3dadd( 16.5353, -111.97, 29.6773, 0.28 ) }
    dend_14 { pt3dadd( 16.8604, -112.694, 30.4536, 0.55 ) }
    dend_14 { pt3dadd( 17.2112, -113.633, 31.3078, 0.55 ) }
    dend_14 { pt3dadd( 17.6484, -114.934, 32.2659, 0.55 ) }
    dend_14 { pt3dadd( 18.275, -116.889, 33.2573, 0.28 ) }
    dend_14 { pt3dadd( 18.4427, -117.408, 33.5138, 0.55 ) }
    dend_14 { pt3dadd( 19.04, -119.302, 34.3421, 0.28 ) }
    dend_14 { pt3dadd( 19.2229, -119.93, 34.5556, 0.55 ) }
    dend_14 { pt3dadd( 19.6571, -121.523, 34.9522, 0.28 ) }
    dend_14 { pt3dadd( 19.8146, -122.159, 35.0327, 0.83 ) }
    dend_14 { pt3dadd( 19.9185, -127.833, 39.6408, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 37/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 11.6254, -67.1422, -5.54322, 0.55 ) }
    dend_13 { pt3dadd( 11.9679, -67.6875, -5.41863, 0.55 ) }
    dend_13 { pt3dadd( 12.579, -68.5742, -5.1883, 0.28 ) }
    dend_13 { pt3dadd( 13.2266, -69.5729, -4.95816, 0.83 ) }
    dend_13 { pt3dadd( 13.7433, -70.3948, -4.75266, 0.28 ) }
    dend_13 { pt3dadd( 14.0148, -70.8476, -4.65152, 0.55 ) }
    dend_13 { pt3dadd( 14.3396, -71.4124, -4.5341, 0.28 ) }
    dend_13 { pt3dadd( 14.5464, -71.831, -4.4558, 0.55 ) }
    dend_13 { pt3dadd( 14.9404, -72.7342, -4.32056, 0.28 ) }
    dend_13 { pt3dadd( 15.1236, -73.2664, -4.29717, 0.55 ) }
    dend_13 { pt3dadd( 15.3994, -74.0923, -4.30626, 0.28 ) }
    dend_13 { pt3dadd( 15.4443, -74.2387, -4.3088, 0.55 ) }
    dend_13 { pt3dadd( 15.7537, -75.2475, -4.34691, 0.28 ) }
    dend_13 { pt3dadd( 15.8666, -75.5788, -4.35701, 0.55 ) }
    dend_13 { pt3dadd( 16.3126, -76.757, -4.46917, 0.55 ) }
    dend_13 { pt3dadd( 16.5939, -77.5463, -4.57736, 0.28 ) }
    dend_13 { pt3dadd( 16.7112, -77.8737, -4.6464, 0.55 ) }
    dend_13 { pt3dadd( 16.8582, -78.2837, -4.76605, 0.28 ) }
    dend_13 { pt3dadd( 16.9987, -78.6664, -4.89467, 0.55 ) }
    dend_13 { pt3dadd( 17.4921, -79.7543, -5.53941, 0.28 ) }
    dend_13 { pt3dadd( 17.7051, -80.1308, -5.85792, 0.55 ) }
    dend_13 { pt3dadd( 18.1311, -80.9382, -6.67928, 0.28 ) }
    dend_13 { pt3dadd( 18.3341, -81.3411, -7.0994, 0.55 ) }
    dend_13 { pt3dadd( 18.6767, -82.0464, -7.81219, 0.55 ) }
    dend_13 { pt3dadd( 19.5967, -83.9116, -9.62687, 0.55 ) }
    dend_13 { pt3dadd( 20.0449, -84.7829, -10.4422, 0.83 ) }
    dend_13 { pt3dadd( 20.5987, -85.872, -11.3964, 0.55 ) }
    dend_13 { pt3dadd( 21.0982, -86.9607, -12.2592, 0.28 ) }
    dend_13 { pt3dadd( 21.3576, -87.6038, -12.6776, 0.28 ) }
    dend_13 { pt3dadd( 21.5153, -88.0619, -12.9187, 0.55 ) }
    dend_13 { pt3dadd( 21.8867, -89.2514, -13.327, 0.28 ) }
    dend_13 { pt3dadd( 22.2811, -90.4534, -13.6063, 0.83 ) }
    dend_13 { pt3dadd( 22.6994, -91.5984, -13.8101, 0.55 ) }
    dend_13 { pt3dadd( 23.4338, -93.4916, -14.0764, 0.28 ) }
    dend_13 { pt3dadd( 23.9446, -94.7102, -14.1805, 0.83 ) }
    dend_13 { pt3dadd( 24.3275, -95.5221, -14.2356, 0.55 ) }
    dend_13 { pt3dadd( 25.0906, -96.9797, -14.2751, 0.28 ) }
    dend_13 { pt3dadd( 25.4861, -97.6043, -14.2891, 0.55 ) }
    dend_13 { pt3dadd( 26.0937, -98.4466, -14.2234, 0.28 ) }
    dend_13 { pt3dadd( 26.7717, -99.3192, -14.1004, 0.55 ) }
    dend_13 { pt3dadd( 27.7215, -100.609, -13.2711, 0.28 ) }
    dend_13 { pt3dadd( 28.0054, -101.011, -12.8829, 0.55 ) }
    dend_13 { pt3dadd( 28.5929, -101.825, -11.8999, 0.55 ) }
    dend_13 { pt3dadd( 29.3919, -102.938, -10.5268, 0.28 ) }
    dend_13 { pt3dadd( 29.7008, -103.376, -9.9823, 0.55 ) }
    dend_13 { pt3dadd( 31.7657, -106.234, -6.34702, 0.28 ) }
    dend_13 { pt3dadd( 31.9836, -106.527, -5.96007, 0.55 ) }
    dend_13 { pt3dadd( 32.7301, -107.46, -4.77093, 0.28 ) }
    dend_13 { pt3dadd( 33.5021, -108.371, -3.69809, 0.28 ) }
    dend_13 { pt3dadd( 33.7283, -108.604, -3.47857, 0.55 ) }
    dend_13 { pt3dadd( 35.1712, -110.009, -2.4972, 0.28 ) }
    dend_13 { pt3dadd( 35.6548, -110.459, -2.37717, 0.55 ) }
    dend_13 { pt3dadd( 36.7969, -111.505, -2.18687, 0.28 ) }
    dend_13 { pt3dadd( 37.2849, -111.948, -2.15505, 0.83 ) }
    dend_13 { pt3dadd( 38.0496, -112.626, -2.17114, 0.28 ) }
    dend_13 { pt3dadd( 38.742, -113.208, -2.27385, 0.28 ) }
    dend_13 { pt3dadd( 39.4727, -113.795, -2.46125, 0.28 ) }
    dend_13 { pt3dadd( 40.0574, -114.265, -2.60839, 0.55 ) }
    dend_13 { pt3dadd( 40.5544, -114.67, -2.77356, 0.28 ) }
    dend_13 { pt3dadd( 40.9898, -115.023, -2.89392, 0.55 ) }
    dend_13 { pt3dadd( 41.9763, -115.748, -3.11918, 0.28 ) }
    dend_13 { pt3dadd( 42.8287, -116.254, -3.32697, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 99/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 7.93872, -32.8575, -13.978, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_7 { pt3dadd( 12.2548, -31.6112, -18.7988, 0.83 ) }
    dend_7 { pt3dadd( 15.9256, -30.5513, -22.8988, 0.83 ) }
    dend_7 { pt3dadd( 20.3652, -29.2693, -27.8575, 0.55 ) }
    dend_7 { pt3dadd( 22.5158, -28.6483, -30.2596, 0.55 ) }
    dend_7 { pt3dadd( 25.3609, -27.8268, -33.4374, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 5/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 7.93872, -32.8575, -13.978, 0.55 ) }
    dend_4 { pt3dadd( 8.09047, -34.0154, -14.2891, 0.55 ) }
    dend_4 { pt3dadd( 8.32788, -35.4438, -14.6445, 0.55 ) }
    dend_4 { pt3dadd( 8.47988, -36.4309, -14.8558, 0.83 ) }
    dend_4 { pt3dadd( 8.58549, -37.4405, -15.1265, 0.55 ) }
    dend_4 { pt3dadd( 8.64705, -38.0245, -15.2832, 0.28 ) }
    dend_4 { pt3dadd( 8.75212, -38.7791, -15.475, 0.55 ) }
    dend_4 { pt3dadd( 8.86505, -39.7329, -15.6871, 0.55 ) }
    dend_4 { pt3dadd( 9.00508, -40.8606, -15.9278, 0.55 ) }
    dend_4 { pt3dadd( 9.23467, -42.9473, -16.4456, 0.28 ) }
    dend_4 { pt3dadd( 9.3718, -44.2919, -16.7699, 0.55 ) }
    dend_4 { pt3dadd( 9.54675, -45.9575, -17.1297, 0.55 ) }
    dend_4 { pt3dadd( 9.86897, -48.7348, -17.6755, 0.55 ) }
    dend_4 { pt3dadd( 10.0201, -50.0275, -17.9032, 0.55 ) }
    dend_4 { pt3dadd( 10.2905, -52.4649, -18.2679, 0.28 ) }
    dend_4 { pt3dadd( 10.4545, -54.1286, -18.4693, 0.55 ) }
    dend_4 { pt3dadd( 10.5565, -55.5481, -18.6408, 0.28 ) }
    dend_4 { pt3dadd( 10.5783, -56.1318, -18.7736, 0.55 ) }
    dend_4 { pt3dadd( 10.6312, -57.2417, -19.1417, 0.28 ) }
    dend_4 { pt3dadd( 10.6597, -57.9986, -19.4407, 0.55 ) }
    dend_4 { pt3dadd( 10.7324, -59.1324, -20.0446, 0.28 ) }
    dend_4 { pt3dadd( 10.8431, -60.1015, -20.6665, 0.83 ) }
    dend_4 { pt3dadd( 11.2941, -63.2487, -22.9651, 0.55 ) }
    dend_4 { pt3dadd( 11.3487, -63.5904, -23.2092, 0.55 ) }
    dend_4 { pt3dadd( 11.4612, -64.1715, -23.5953, 0.83 ) }
    dend_4 { pt3dadd( 11.7747, -65.6941, -24.5239, 0.28 ) }
    dend_4 { pt3dadd( 12.075, -67.3861, -25.4659, 0.55 ) }
    dend_4 { pt3dadd( 12.3338, -69.1105, -26.3625, 0.28 ) }
    dend_4 { pt3dadd( 12.4906, -70.2747, -26.8806, 0.55 ) }
    dend_4 { pt3dadd( 12.7236, -72.1075, -27.6367, 0.28 ) }
    dend_4 { pt3dadd( 12.7739, -72.5271, -27.815, 0.28 ) }
    dend_4 { pt3dadd( 12.9768, -73.9116, -28.4325, 0.55 ) }
    dend_4 { pt3dadd( 13.3583, -75.9678, -29.4013, 0.28 ) }
    dend_4 { pt3dadd( 13.5062, -76.6191, -29.7079, 0.55 ) }
    dend_4 { pt3dadd( 13.9728, -78.4186, -30.5775, 0.28 ) }
    dend_4 { pt3dadd( 14.4426, -80.2325, -31.5143, 0.83 ) }
    dend_4 { pt3dadd( 14.8362, -81.8402, -32.2444, 0.28 ) }
    dend_4 { pt3dadd( 15.0214, -82.7136, -32.6021, 0.55 ) }
    dend_4 { pt3dadd( 15.2143, -84.1027, -33.2489, 0.28 ) }
    dend_4 { pt3dadd( 15.311, -85.5306, -34.0129, 0.28 ) }
    dend_4 { pt3dadd( 15.3005, -87.6842, -35.3644, 0.55 ) }
    dend_4 { pt3dadd( 15.2019, -89.5634, -36.5494, 0.28 ) }
    dend_4 { pt3dadd( 15.1234, -90.3093, -37.0603, 0.55 ) }
    dend_4 { pt3dadd( 14.8491, -92.3161, -38.5733, 0.28 ) }
    dend_4 { pt3dadd( 14.7806, -92.667, -38.8523, 0.55 ) }
    dend_4 { pt3dadd( 14.5663, -93.4642, -39.5804, 0.28 ) }
    dend_4 { pt3dadd( 14.4897, -93.7662, -39.8736, 0.55 ) }
    dend_4 { pt3dadd( 14.33, -94.3254, -40.6723, 0.28 ) }
    dend_4 { pt3dadd( 14.2941, -94.599, -40.9982, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 54/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -40.3127, -144.6, -15.1136, 0.55 ) }
    dend_19 { pt3dadd( -40.014, -148.084, -13.4843, 0.55 ) }
    dend_19 { pt3dadd( -39.6784, -151.256, -12.0152, 0.83 ) }
    dend_19 { pt3dadd( -39.3546, -154.784, -10.4416, 0.28 ) }
    dend_19 { pt3dadd( -39.277, -156.048, -9.9175, 0.55 ) }
    dend_19 { pt3dadd( -39.2277, -157.986, -9.174, 0.28 ) }
    dend_19 { pt3dadd( -39.3214, -161.166, -8.13209, 0.28 ) }
    dend_19 { pt3dadd( -39.4029, -161.843, -7.97484, 0.28 ) }
    dend_19 { pt3dadd( -39.6733, -162.965, -7.85385, 0.55 ) }
    dend_19 { pt3dadd( -40.1232, -164.3, -7.90719, 0.28 ) }
    dend_19 { pt3dadd( -40.8233, -166.215, -8.11943, 0.83 ) }
    dend_19 { pt3dadd( -41.929, -168.801, -8.46482, 0.28 ) }
    dend_19 { pt3dadd( -42.7146, -170.486, -8.76712, 0.28 ) }
    dend_19 { pt3dadd( -43.0504, -171.23, -8.88821, 0.55 ) }
    dend_19 { pt3dadd( -44.3622, -174.314, -9.31674, 0.28 ) }
    dend_19 { pt3dadd( -44.7216, -175.189, -9.448, 0.83 ) }
    dend_19 { pt3dadd( -45.4375, -176.938, -9.69672, 0.28 ) }
    dend_19 { pt3dadd( -45.6269, -177.414, -9.75642, 0.55 ) }
    dend_19 { pt3dadd( -46.4043, -179.376, -9.9834, 0.28 ) }
    dend_19 { pt3dadd( -46.8356, -180.455, -10.0854, 0.55 ) }
    dend_19 { pt3dadd( -47.6608, -182.435, -10.06, 0.28 ) }
    dend_19 { pt3dadd( -48.3965, -184.188, -10.1177, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 76/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -40.3127, -144.6, -15.1136, 0.28 ) }
    dend_18 { pt3dadd( -40.1903, -147.432, -16.4302, 0.28 ) }
    dend_18 { pt3dadd( -40.1965, -147.711, -16.5558, 0.83 ) }
    dend_18 { pt3dadd( -40.3266, -150.088, -17.575, 0.28 ) }
    dend_18 { pt3dadd( -40.3897, -151.24, -18.0692, 0.83 ) }
    dend_18 { pt3dadd( -40.5501, -154.171, -19.3259, 0.28 ) }
    dend_18 { pt3dadd( -40.5998, -155.078, -19.7146, 0.55 ) }
    dend_18 { pt3dadd( -40.9395, -157.307, -20.7805, 0.28 ) }
    dend_18 { pt3dadd( -41.0395, -157.93, -21.0591, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 85/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 25.3609, -27.8268, -33.4374, 0.55 ) }
    dend_9 { pt3dadd( 26.1151, -28.1276, -34.8267, 0.55 ) }
    dend_9 { pt3dadd( 27.5128, -28.8245, -37.4804, 0.55 ) }
    dend_9 { pt3dadd( 28.8523, -29.5825, -39.9783, 0.83 ) }
    dend_9 { pt3dadd( 30.3297, -30.5059, -42.6053, 0.83 ) }
    dend_9 { pt3dadd( 31.1384, -31.0594, -44.0097, 0.55 ) }
    dend_9 { pt3dadd( 31.4464, -31.2763, -44.4847, 0.28 ) }
    dend_9 { pt3dadd( 31.934, -31.6079, -45.1979, 0.55 ) }
    dend_9 { pt3dadd( 32.3895, -31.921, -45.7679, 0.28 ) }
    dend_9 { pt3dadd( 32.9802, -32.2514, -46.3982, 0.55 ) }
    dend_9 { pt3dadd( 33.8003, -32.7906, -47.4402, 0.55 ) }
    dend_9 { pt3dadd( 35.4132, -33.6629, -49.5411, 0.55 ) }
    dend_9 { pt3dadd( 36.6368, -34.2678, -51.2212, 0.83 ) }
    dend_9 { pt3dadd( 37.4999, -34.65, -52.4033, 0.55 ) }
    dend_9 { pt3dadd( 38.7364, -35.2087, -54.316, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_9 { pt3dadd( 40.8664, -36.1314, -57.9793, 0.55 ) }
    dend_9 { pt3dadd( 41.9796, -36.5509, -60.0415, 0.55 ) }
    dend_9 { pt3dadd( 42.7237, -36.7964, -61.507, 0.28 ) }
    dend_9 { pt3dadd( 43.2745, -36.9889, -62.6085, 1.11 ) }
    dend_9 { pt3dadd( 45.0386, -37.4801, -65.9909, 0.55 ) }
    dend_9 { pt3dadd( 45.6408, -37.6123, -67.1611, 0.55 ) }
    dend_9 { pt3dadd( 46.8237, -37.8329, -69.3625, 0.55 ) }
    dend_9 { pt3dadd( 48.0694, -38.1815, -71.8388, 0.83 ) }
    dend_9 { pt3dadd( 49.4483, -38.585, -74.5785, 0.28 ) }
    dend_9 { pt3dadd( 50.4567, -38.9251, -76.5425, 0.83 ) }
    dend_9 { pt3dadd( 51.8684, -39.4735, -79.0065, 0.28 ) }
    dend_9 { pt3dadd( 52.4258, -39.7535, -79.9841, 0.83 ) }
    dend_9 { pt3dadd( 53.4483, -40.4142, -81.8122, 0.28 ) }
    dend_9 { pt3dadd( 53.6738, -40.5795, -82.2097, 0.28 ) }
    dend_9 { pt3dadd( 54.1006, -40.8973, -82.8098, 0.55 ) }
    dend_9 { pt3dadd( 54.9193, -41.5933, -83.76, 0.28 ) }
    dend_9 { pt3dadd( 55.409, -41.9609, -84.0898, 0.55 ) }
    dend_9 { pt3dadd( 56.6132, -42.7725, -84.6208, 0.28 ) }
    dend_9 { pt3dadd( 57.1765, -43.0963, -84.7566, 0.55 ) }
    dend_9 { pt3dadd( 59.0333, -44.1291, -85.0849, 0.28 ) }
    dend_9 { pt3dadd( 59.9733, -44.6763, -85.2998, 0.83 ) }
    dend_9 { pt3dadd( 60.8232, -45.1783, -85.5165, 0.28 ) }
    dend_9 { pt3dadd( 61.2224, -45.4419, -85.6904, 0.55 ) }
    dend_9 { pt3dadd( 61.7838, -45.8497, -86.0639, 0.28 ) }
    dend_9 { pt3dadd( 62.9853, -46.878, -87.2586, 0.83 ) }
    dend_9 { pt3dadd( 64.0798, -47.8629, -88.5545, 0.55 ) }
    dend_9 { pt3dadd( 64.4236, -48.1963, -88.9721, 0.83 ) }
    dend_9 { pt3dadd( 65.8003, -49.5792, -90.7142, 0.28 ) }
    dend_9 { pt3dadd( 66.3966, -50.1882, -91.4764, 1.11 ) }
    dend_9 { pt3dadd( 67.8819, -51.6546, -93.3474, 0.55 ) }
    dend_9 { pt3dadd( 68.7453, -52.4802, -94.4011, 1.11 ) }
    dend_9 { pt3dadd( 70.7141, -54.2151, -96.4046, 0.55 ) }
    dend_9 { pt3dadd( 71.0008, -54.4481, -96.6567, 0.83 ) }
    dend_9 { pt3dadd( 72.7976, -55.7503, -97.9132, 0.28 ) }
    dend_9 { pt3dadd( 73.5024, -56.2307, -98.3069, 0.55 ) }
    dend_9 { pt3dadd( 74.8234, -57.0568, -98.9067, 0.28 ) }
    dend_9 { pt3dadd( 76.4652, -58.0504, -99.5572, 0.83 ) }
    dend_9 { pt3dadd( 79.6271, -59.8039, -100.709, 0.28 ) }
    dend_9 { pt3dadd( 80.8967, -60.4972, -101.178, 0.83 ) }
    dend_9 { pt3dadd( 83.658, -61.9738, -102.172, 0.28 ) }
    dend_9 { pt3dadd( 84.85, -62.619, -102.636, 0.55 ) }
    dend_9 { pt3dadd( 86.1536, -63.3286, -103.248, 0.28 ) }
    dend_9 { pt3dadd( 87.1509, -63.8741, -103.855, 0.55 ) }
    dend_9 { pt3dadd( 87.9859, -64.3391, -104.47, 0.28 ) }
    dend_9 { pt3dadd( 88.1945, -64.4613, -104.672, 0.55 ) }
    dend_9 { pt3dadd( 89.1263, -64.9941, -105.806, 0.28 ) }
    dend_9 { pt3dadd( 90.2502, -65.5702, -107.154, 0.55 ) }
    dend_9 { pt3dadd( 91.3566, -66.1424, -108.541, 0.28 ) }
    dend_9 { pt3dadd( 91.83, -66.4174, -109.1, 0.55 ) }
    dend_9 { pt3dadd( 92.3843, -66.7552, -109.735, 0.28 ) }
    dend_9 { pt3dadd( 92.5224, -66.8439, -109.897, 0.55 ) }
    dend_9 { pt3dadd( 94.1179, -67.9357, -111.695, 0.28 ) }
    dend_9 { pt3dadd( 94.9344, -68.4288, -112.284, 0.55 ) }
    dend_9 { pt3dadd( 95.7519, -68.9149, -112.694, 0.28 ) }
    dend_9 { pt3dadd( 96.0237, -69.0529, -112.759, 0.55 ) }
    dend_9 { pt3dadd( 97.2212, -69.6382, -112.907, 0.28 ) }
    dend_9 { pt3dadd( 98.024, -70.106, -112.974, 0.55 ) }
    dend_9 { pt3dadd( 100.557, -71.5781, -112.712, 0.28 ) }
    dend_9 { pt3dadd( 101.349, -72.0655, -112.647, 0.83 ) }
    dend_9 { pt3dadd( 102.647, -72.892, -112.524, 0.28 ) }
    dend_9 { pt3dadd( 103.74, -73.6386, -112.454, 0.55 ) }
    dend_9 { pt3dadd( 105.668, -75.0567, -112.372, 0.28 ) }
    dend_9 { pt3dadd( 108.169, -76.8394, -112.275, 0.83 ) }
    dend_9 { pt3dadd( 111.402, -79.1443, -112.277, 0.28 ) }
    dend_9 { pt3dadd( 112.415, -79.8296, -112.261, 0.83 ) }
    dend_9 { pt3dadd( 113.632, -80.5829, -112.221, 0.28 ) }
    dend_9 { pt3dadd( 114.498, -81.0621, -112.158, 0.55 ) }
    dend_9 { pt3dadd( 117.676, -82.4578, -111.876, 0.28 ) }
    dend_9 { pt3dadd( 118.06, -82.6112, -111.854, 0.55 ) }
    dend_9 { pt3dadd( 118.818, -82.8463, -111.78, 0.28 ) }
    dend_9 { pt3dadd( 119.371, -83.0518, -111.788, 0.28 ) }
    dend_9 { pt3dadd( 119.578, -83.1262, -111.788, 0.55 ) }
    dend_9 { pt3dadd( 120.977, -83.8237, -112.028, 0.28 ) }
    dend_9 { pt3dadd( 121.409, -84.2666, -112.348, 0.55 ) }
    dend_9 { pt3dadd( 122.916, -85.9943, -113.653, 0.28 ) }
    dend_9 { pt3dadd( 123.167, -86.3498, -113.946, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 76/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 25.3609, -27.8268, -33.4374, 0.55 ) }
    dend_8 { pt3dadd( 25.8951, -27.3677, -34.3699, 0.55 ) }
    dend_8 { pt3dadd( 26.6049, -26.6603, -35.5488, 0.55 ) }
    dend_8 { pt3dadd( 27.2187, -25.9622, -36.5076, 0.28 ) }
    dend_8 { pt3dadd( 28.8334, -23.9939, -39.0755, 0.83 ) }
    dend_8 { pt3dadd( 30.3857, -22.2471, -41.3739, 0.55 ) }
    dend_8 { pt3dadd( 31.9913, -20.5779, -43.5993, 0.55 ) }
    dend_8 { pt3dadd( 33.3301, -19.1777, -45.3826, 0.55 ) }
    dend_8 { pt3dadd( 34.3255, -18.1448, -46.7275, 0.55 ) }
    dend_8 { pt3dadd( 35.4686, -16.9945, -48.2214, 0.55 ) }
    dend_8 { pt3dadd( 36.8527, -15.6618, -49.8618, 0.55 ) }
    dend_8 { pt3dadd( 37.9547, -14.6766, -51.1006, 0.55 ) }
    dend_8 { pt3dadd( 38.8669, -13.8352, -52.2832, 0.83 ) }
    dend_8 { pt3dadd( 40.0121, -12.6844, -54.1106, 0.55 ) }
    dend_8 { pt3dadd( 40.4741, -11.9948, -55.2304, 0.55 ) }
    dend_8 { pt3dadd( 40.9301, -10.921, -56.8052, 0.55 ) }
    dend_8 { pt3dadd( 41.0819, -10.3127, -57.6779, 0.55 ) }
    dend_8 { pt3dadd( 41.2563, -9.14352, -59.3551, 0.55 ) }
    dend_8 { pt3dadd( 41.4733, -7.07152, -62.1334, 0.55 ) }
    dend_8 { pt3dadd( 41.5981, -5.19104, -64.4121, 1.11 ) }
    dend_8 { pt3dadd( 41.6212, -3.8418, -65.9529, 0.55 ) }
    dend_8 { pt3dadd( 41.6275, -2.57498, -67.2387, 0.83 ) }
    dend_8 { pt3dadd( 41.6273, -1.50857, -68.2102, 0.28 ) }
    dend_8 { pt3dadd( 41.6945, -0.00525391, -69.4179, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_8 { pt3dadd( 41.918, 2.95275, -71.4719, 0.28 ) }
    dend_8 { pt3dadd( 41.963, 3.57377, -71.8304, 0.83 ) }
    dend_8 { pt3dadd( 42.044, 6.03079, -73.1334, 0.83 ) }
    dend_8 { pt3dadd( 42.0637, 9.22773, -74.672, 0.55 ) }
    dend_8 { pt3dadd( 42.0258, 10.8385, -75.3476, 0.55 ) }
    dend_8 { pt3dadd( 41.9281, 11.7209, -75.7279, 0.55 ) }
    dend_8 { pt3dadd( 41.5204, 14.1458, -76.6831, 0.28 ) }
    dend_8 { pt3dadd( 41.364, 14.8577, -76.9618, 0.55 ) }
    dend_8 { pt3dadd( 41.0478, 16.0251, -77.406, 0.28 ) }
    dend_8 { pt3dadd( 40.4191, 18.4511, -78.286, 0.55 ) }
    dend_8 { pt3dadd( 39.2971, 23.1136, -80.0341, 0.28 ) }
    dend_8 { pt3dadd( 39.1661, 23.7142, -80.2628, 0.55 ) }
    dend_8 { pt3dadd( 38.7081, 26.2283, -81.2301, 0.28 ) }
    dend_8 { pt3dadd( 38.5811, 27.2311, -81.6017, 0.55 ) }
    dend_8 { pt3dadd( 38.4586, 29.0694, -82.2383, 0.55 ) }
    dend_8 { pt3dadd( 38.4119, 30.3568, -82.6391, 0.55 ) }
    dend_8 { pt3dadd( 38.4038, 31.7156, -82.916, 0.55 ) }
    dend_8 { pt3dadd( 38.3632, 34.4677, -83.5038, 0.28 ) }
    dend_8 { pt3dadd( 38.3307, 35.7269, -83.7898, 0.55 ) }
    dend_8 { pt3dadd( 38.2517, 37.6959, -84.3764, 0.28 ) }
    dend_8 { pt3dadd( 38.1496, 38.786, -84.9039, 0.28 ) }
    dend_8 { pt3dadd( 38.0403, 39.7432, -85.5189, 0.55 ) }
    dend_8 { pt3dadd( 37.7218, 41.3085, -86.9168, 0.28 ) }
    dend_8 { pt3dadd( 37.2883, 42.738, -88.4525, 0.83 ) }
    dend_8 { pt3dadd( 36.4237, 44.5789, -90.8144, 0.55 ) }
    dend_8 { pt3dadd( 34.9932, 47.0993, -94.3954, 0.55 ) }
    dend_8 { pt3dadd( 34.6352, 47.6848, -95.2641, 0.83 ) }
    dend_8 { pt3dadd( 33.0186, 50.1176, -98.9284, 0.28 ) }
    dend_8 { pt3dadd( 32.6413, 50.6758, -99.7181, 0.55 ) }
    dend_8 { pt3dadd( 30.6292, 53.8003, -103.741, 0.28 ) }
    dend_8 { pt3dadd( 30.2744, 54.4448, -104.424, 0.55 ) }
    dend_8 { pt3dadd( 29.7331, 55.795, -105.597, 0.28 ) }
    dend_8 { pt3dadd( 29.5484, 56.4415, -106.117, 0.55 ) }
    dend_8 { pt3dadd( 29.3676, 58.4046, -107.34, 0.28 ) }
    dend_8 { pt3dadd( 29.365, 59.3864, -107.873, 0.28 ) }
    dend_8 { pt3dadd( 29.6295, 61.9362, -108.97, 0.55 ) }
    dend_8 { pt3dadd( 29.8161, 63.7034, -109.73, 0.28 ) }
    dend_8 { pt3dadd( 29.8763, 64.2031, -109.935, 0.55 ) }
    dend_8 { pt3dadd( 30.2592, 67.0267, -111.132, 0.28 ) }
    dend_8 { pt3dadd( 30.3135, 67.3645, -111.279, 0.55 ) }
    dend_8 { pt3dadd( 30.6986, 69.3251, -111.997, 0.28 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 41/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 14.2941, -94.599, -40.9982, 0.28 ) }
    dend_6 { pt3dadd( 13.8758, -96.2825, -41.8257, 0.28 ) }
    dend_6 { pt3dadd( 13.7516, -96.8575, -42.0778, 0.55 ) }
    dend_6 { pt3dadd( 13.4629, -98.2652, -42.6994, 0.28 ) }
    dend_6 { pt3dadd( 13.1325, -100.064, -43.3372, 0.55 ) }
    dend_6 { pt3dadd( 12.8172, -101.799, -43.9765, 0.28 ) }
    dend_6 { pt3dadd( 12.6317, -102.97, -44.3394, 0.55 ) }
    dend_6 { pt3dadd( 12.4506, -104.379, -44.7619, 0.28 ) }
    dend_6 { pt3dadd( 12.3719, -105.139, -44.9389, 0.55 ) }
    dend_6 { pt3dadd( 12.1372, -107.661, -45.3222, 0.28 ) }
    dend_6 { pt3dadd( 11.9757, -109.44, -45.4579, 0.55 ) }
    dend_6 { pt3dadd( 11.5839, -113.344, -45.6125, 0.28 ) }
    dend_6 { pt3dadd( 11.5454, -113.836, -45.6141, 0.55 ) }
    dend_6 { pt3dadd( 11.3072, -117.752, -45.5791, 0.28 ) }
    dend_6 { pt3dadd( 11.3014, -119.324, -45.5398, 0.55 ) }
    dend_6 { pt3dadd( 11.35, -120.898, -45.4834, 0.28 ) }
    dend_6 { pt3dadd( 11.3994, -121.636, -45.4507, 0.55 ) }
    dend_6 { pt3dadd( 11.6839, -124.618, -45.3572, 0.28 ) }
    dend_6 { pt3dadd( 11.7776, -125.444, -45.3421, 0.55 ) }
    dend_6 { pt3dadd( 12.548, -130.795, -45.3831, 0.28 ) }
    dend_6 { pt3dadd( 12.6907, -131.727, -45.4003, 0.83 ) }
    dend_6 { pt3dadd( 13.0423, -134.029, -45.4382, 0.28 ) }
    dend_6 { pt3dadd( 13.2012, -135.141, -45.4535, 0.55 ) }
    dend_6 { pt3dadd( 13.5345, -137.784, -45.4977, 0.28 ) }
    dend_6 { pt3dadd( 13.7918, -139.905, -45.5241, 0.28 ) }
    dend_6 { pt3dadd( 13.8769, -140.729, -45.5168, 0.55 ) }
    dend_6 { pt3dadd( 14.0189, -141.999, -45.5069, 0.28 ) }
    dend_6 { pt3dadd( 14.1218, -143.207, -45.4708, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 69/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 14.2941, -94.599, -40.9982, 0.28 ) }
    dend_5 { pt3dadd( 14.9468, -98.0031, -41.0199, 0.28 ) }
    dend_5 { pt3dadd( 15.0346, -98.6392, -40.8976, 0.55 ) }
    dend_5 { pt3dadd( 15.1571, -100.068, -40.5349, 0.28 ) }
    dend_5 { pt3dadd( 15.2084, -100.751, -40.355, 0.55 ) }
    dend_5 { pt3dadd( 15.2867, -102.074, -40.0843, 0.28 ) }
    dend_5 { pt3dadd( 15.3033, -102.426, -40.0338, 0.55 ) }
    dend_5 { pt3dadd( 15.2548, -106.161, -39.6932, 0.28 ) }
    dend_5 { pt3dadd( 15.2328, -106.84, -39.6345, 0.83 ) }
    dend_5 { pt3dadd( 15.1634, -108.429, -39.5843, 0.83 ) }
    dend_5 { pt3dadd( 14.9922, -111.606, -39.6984, 0.28 ) }
    dend_5 { pt3dadd( 14.9001, -113.081, -39.8501, 0.55 ) }
    dend_5 { pt3dadd( 14.7361, -115.275, -40.4001, 0.28 ) }
    dend_5 { pt3dadd( 14.6248, -116.87, -40.9622, 0.28 ) }
    dend_5 { pt3dadd( 14.5732, -118.008, -41.3464, 0.55 ) }
    dend_5 { pt3dadd( 14.4864, -119.608, -41.8968, 0.28 ) }
    dend_5 { pt3dadd( 14.457, -120.267, -42.1171, 0.55 ) }
    dend_5 { pt3dadd( 14.3455, -124.106, -43.3073, 0.28 ) }
    dend_5 { pt3dadd( 14.3049, -127.335, -44.4102, 0.28 ) }
    dend_5 { pt3dadd( 14.2969, -128.533, -44.8392, 0.83 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_57, dend_54, dend_49, dend_42, dend_41, dend_34, dend_29, dend_0, dend_59, dend_58, dend_56, dend_55, dend_53, dend_50, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_1, dend_52, dend_51, dend_46, dend_45, dend_37, dend_36, dend_32, dend_31, dend_24, dend_21, dend_11, dend_2, dend_48, dend_47, dend_39, dend_38, dend_26, dend_25, dend_23, dend_22, dend_15, dend_12, dend_10, dend_3, dend_28, dend_27, dend_17, dend_16, dend_14, dend_13, dend_7, dend_4, dend_19, dend_18, dend_9, dend_8, dend_6, dend_5]}
    ModelViewParmSubset_2 = new SectionList()
    dend_57 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_57, dend_54, dend_49, dend_42, dend_41, dend_34, dend_29, dend_0, dend_59, dend_58, dend_56, dend_55, dend_53, dend_50, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_1, dend_52, dend_51, dend_46, dend_45, dend_37, dend_36, dend_32, dend_31, dend_24, dend_21, dend_11, dend_2, dend_48, dend_47, dend_39, dend_38, dend_26, dend_25, dend_23, dend_22, dend_15, dend_12, dend_10, dend_3, dend_28, dend_27, dend_17, dend_16, dend_14, dend_13, dend_7, dend_4, dend_19, dend_18, dend_9, dend_8, dend_6, dend_5]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_57, dend_54, dend_49, dend_42, dend_41, dend_34, dend_29, dend_0, axon_0, dend_59, dend_58, dend_56, dend_55, dend_53, dend_50, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_1, axon_1, dend_52, dend_51, dend_46, dend_45, dend_37, dend_36, dend_32, dend_31, dend_24, dend_21, dend_11, dend_2, dend_48, dend_47, dend_39, dend_38, dend_26, dend_25, dend_23, dend_22, dend_15, dend_12, dend_10, dend_3, dend_28, dend_27, dend_17, dend_16, dend_14, dend_13, dend_7, dend_4, dend_19, dend_18, dend_9, dend_8, dend_6, dend_5]}
    ModelViewParmSubset_5 = new SectionList()
    dend_57 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_54 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_41 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_59 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_58 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_56 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_55 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_53 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_43 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_40 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_33 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_51 OneSecGrp_SectionRef_27.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_45 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_36 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_32 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_31 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_21 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_48 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_47 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_39 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_38 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_25 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_15 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_10 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_28 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_27 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_17 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_16 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_14 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_13 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_4 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_19 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_9 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_8 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_6 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_42 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_49 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_34 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_29 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_57 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_20 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_1 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_44 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_35 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_2 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_24 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_50 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_3 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_11 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_37 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_30 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_46 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_7 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_52 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_12 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_26 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_22 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_23 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_5 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_18 OneSecGrp_SectionRef_59.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_0, axon_0, axon_0, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_1, dend_1, dend_1, axon_1, axon_1, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_57 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_50 all.append()
    dend_50 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_54 nseg = 3
    dend_41 nseg = 7
    dend_59 nseg = 9
    dend_58 nseg = 5
    dend_56 nseg = 9
    dend_55 nseg = 7
    dend_53 nseg = 7
    dend_43 nseg = 5
    dend_40 nseg = 3
    dend_33 nseg = 9
    dend_51 nseg = 3
    dend_45 nseg = 5
    dend_36 nseg = 5
    dend_32 nseg = 3
    dend_31 nseg = 11
    dend_21 nseg = 3
    dend_48 nseg = 5
    dend_47 nseg = 5
    dend_39 nseg = 5
    dend_38 nseg = 5
    dend_25 nseg = 7
    dend_15 nseg = 3
    dend_10 nseg = 5
    dend_28 nseg = 3
    dend_27 nseg = 3
    dend_17 nseg = 3
    dend_16 nseg = 9
    dend_14 nseg = 3
    dend_13 nseg = 3
    dend_4 nseg = 3
    dend_19 nseg = 3
    dend_9 nseg = 7
    dend_8 nseg = 7
    dend_6 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L23_NBC_7e8781b0f2_0_0


