// Cell: cACint209_L6_BP_ce89d46a17_0_0
/*
{
  "id" : "cACint209_L6_BP_ce89d46a17_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.52847, 2.40803, 0.83", "-3.45834, 9.08519, 2.92137, 0.83", "-6.82402, 11.8243, 3.42896, 1.11", "-8.80845, 13.4382, 3.693, 0.83", "-10.7364, 14.9926, 3.92958, 0.83", "-11.8779, 15.879, 4.05921, 1.11", "-15.4525, 18.6487, 4.4747, 1.11", "-21.8461, 23.3905, 5.20917, 0.83", "-24.1495, 25.0337, 5.4517, 0.83", "-25.9735, 26.2962, 5.60235, 0.83", "-27.7522, 27.5475, 5.73275, 0.83", "-29.2001, 28.5788, 5.80311, 0.55", "-30.2884, 29.2771, 5.87452, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.70947, -5.68197, 0.55", "5.04328, 6.74201, -6.35396, 0.55", "8.35409, 7.49402, -7.09332, 0.55", "10.2752, 7.68385, -8.07166, 0.83", "13.3158, 7.88588, -9.88898, 0.55", "14.7835, 7.9834, -10.7662, 1.38", "18.3924, 8.22317, -12.9232, 0.55", "19.9294, 8.14198, -13.9524, 0.83", "27.8803, 6.65289, -19.735, 0.55", "28.6495, 6.45265, -20.3712, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.66503, 2.42803, 1.11", "-0.683444, -10.9585, 3.21108, 1.11", "-0.730487, -15.3167, 4.69909, 1.11", "-0.749646, -17.0916, 5.30509, 0.83", "-0.7751, -19.4497, 6.11021, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.96697, -1.26197, 1.11", "0.756658, 9.9738, -1.35259, 1.11", "0.715038, 11.7387, -1.3505, 1.11", "0.610568, 14.6178, -1.25361, 1.38", "0.606459, 14.7783, -1.24482, 1.38", "0.658464, 16.7712, -1.08414, 0.83", "0.759103, 18.8833, -0.788314, 0.83", "0.975636, 21.2794, -0.136729, 0.83", "1.12755, 22.1945, 0.242267, 0.83", "1.29836, 22.8622, 0.600952, 1.11", "1.84721, 24.4978, 1.55968, 0.55", "2.49043, 26.2114, 2.70127, 0.83", "3.4083, 27.992, 4.05394, 0.55", "3.90354, 28.7395, 4.69091, 0.83", "4.57567, 29.7537, 5.65463, 0.55", "5.38187, 31.0417, 6.92855, 0.55", "6.46206, 32.9719, 8.82976, 0.55", "7.64686, 35.174, 10.9267, 0.55", "8.33519, 36.6008, 12.4348, 0.55", "9.1078, 38.402, 14.5047, 0.55", "9.25934, 38.7638, 14.9673, 0.83", "9.63845, 39.7199, 16.2579, 0.55", "9.97958, 40.4682, 17.284, 0.83", "10.7285, 42.4954, 19.6994, 0.55", "11.0637, 43.237, 20.4395, 0.83", "11.4321, 43.7906, 20.9836, 0.55", "11.8292, 44.2716, 21.435, 0.83", "12.7572, 45.1778, 22.3151, 0.83", "14.0241, 46.4087, 23.3409, 0.83", "14.8291, 47.218, 23.8669, 0.55", "15.4369, 47.9122, 24.2707, 0.55", "17.0404, 49.7076, 25.3012, 0.83", "18.0913, 50.8596, 25.9177, 0.55", "19.7129, 52.5512, 26.7792, 0.55", "21.2266, 53.9786, 27.5029, 0.55", "22.5965, 55.1927, 28.1104, 0.55", "24.3599, 56.624, 28.7931, 0.55", "25.4587, 57.3399, 29.1751, 0.55", "26.2414, 57.7511, 29.3419, 0.55", "27.3202, 58.0876, 29.4781, 0.55", "28.9853, 58.3113, 29.5577, 0.55", "30.043, 58.3154, 29.5719, 0.55", "31.5616, 58.2791, 29.6937, 0.55", "34.3767, 58.3043, 30.1672, 0.55", "36.5342, 58.4316, 30.6888, 0.55", "38.7738, 58.6841, 31.3748, 0.55", "40.1726, 58.9001, 31.9282, 0.55", "43.7109, 59.8335, 33.6077, 0.55", "45.7432, 60.5732, 34.7663, 0.55", "47.2135, 61.2475, 35.7896, 0.55", "48.084, 61.8415, 36.4478, 0.55", "49.0839, 62.7038, 37.202, 0.55", "50.8156, 64.3831, 38.2964, 0.55", "51.2305, 64.7861, 38.4837, 0.55", "52.4507, 65.8693, 38.9356, 0.55", "53.5644, 67.0108, 39.3437, 0.83", "54.1746, 67.6434, 39.5558, 0.55", "55.0921, 68.72, 39.8321, 0.83", "59.5141, 74.4641, 42.656, 0.83", "63.3726, 80.9609, 44.7275, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-30.2884, 29.2771, 5.87452, 0.55", "-32.2505, 30.5538, 4.75499, 0.55", "-34.384, 31.9421, 3.53762, 0.55", "-36.9588, 33.6176, 2.06852, 0.55", "-39.0848, 35.001, 0.855444, 0.83", "-40.8664, 36.1603, -0.161113, 0.55", "-44.1733, 38.3121, -2.04799, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-30.2884, 29.2771, 5.87452, 0.55", "-33.3866, 29.9047, 5.44959, 0.55", "-36.6911, 30.454, 5.32439, 0.55", "-40.4403, 31.0678, 5.27394, 0.55", "-45.8816, 31.88, 5.69904, 0.55", "-50.4424, 32.411, 6.37515, 0.55", "-55.2307, 32.8845, 7.28664, 0.55", "-59.8713, 32.9987, 8.65802, 0.55", "-63.8758, 32.6782, 10.214, 0.55", "-68.8785, 31.8977, 12.6768, 0.55", "-71.0607, 31.3829, 14.0453, 0.55", "-73.4203, 30.7975, 15.6238, 0.55", "-77.5791, 29.4428, 18.2116, 0.55", "-79.7848, 28.7392, 19.2426, 0.55", "-82.0951, 27.9287, 20.307, 0.55", "-84.8363, 27.0092, 21.2961, 0.55", "-87.8134, 26.0774, 22.2913, 0.55", "-92.0602, 24.7393, 23.6188, 0.55", "-97.7202, 23.3643, 24.8938, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "28.6495, 6.45265, -20.3712, 0.55", "34.9221, 8.27984, -21.7216, 0.55", "38.5441, 9.10668, -23.012, 0.55", "42.1223, 9.75283, -24.3373, 0.55", "44.5691, 10.0912, -25.2416, 0.55", "48.1466, 10.4981, -26.5355, 0.55", "55.5721, 11.1902, -29.452, 0.55", "63.9996, 11.9176, -33.3246, 0.55", "68.0925, 12.0003, -35.4859, 0.55", "70.2863, 11.9874, -36.7875, 0.55", "72.692, 11.9853, -38.3127, 0.55", "76.9873, 11.8553, -41.017, 0.55", "78.5491, 11.7115, -42.0509, 0.55", "85.1605, 11.2751, -46.9394, 0.55", "89.8403, 11.0441, -50.7469, 0.55", "92.5339, 10.9661, -53.0133, 0.55", "95.221, 10.8633, -55.2717, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "28.6495, 6.45265, -20.3712, 0.83", "31.2094, 8.13758, -20.3994, 0.83", "32.6728, 9.09945, -20.4831, 0.55", "34.827, 10.5661, -20.7912, 0.83", "36.2752, 11.5917, -21.0423, 0.55", "38.2721, 13.0626, -21.3586, 0.83", "40.673, 14.8811, -21.6489, 0.55", "41.8814, 15.7012, -21.7451, 0.55", "44.6643, 17.1872, -21.7705, 0.83", "47.1918, 18.213, -21.4638, 0.55", "48.6043, 18.7705, -21.1557, 0.83", "50.7227, 19.656, -20.4676, 0.55", "53.7639, 20.9849, -19.085, 0.55", "57.9878, 22.5987, -16.9469, 0.55", "62.0153, 23.9836, -14.6269, 0.55", "65.2061, 25.0445, -12.7311, 0.55", "70.4663, 26.8195, -9.57739, 0.55", "74.3136, 28.2354, -7.18352, 0.55", "76.6344, 29.2969, -5.6502, 0.55", "80.9044, 31.7175, -2.783, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.7751, -19.4497, 6.11021, 0.83", "-1.07622, -22.5842, 5.99599, 0.83", "-1.36959, -25.6381, 5.8847, 0.83", "-1.69714, -29.0477, 5.76045, 0.83", "-1.86818, -30.8282, 5.69557, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.7751, -19.4497, 6.11021, 0.55", "-0.300486, -20.8847, 7.09535, 0.55", "0.108315, -22.6448, 8.36675, 0.55", "0.301368, -24.9577, 10.1047, 0.55", "0.314883, -25.8578, 10.8005, 0.83", "0.135091, -28.1584, 12.8175, 0.55", "-0.0520169, -29.3481, 13.8762, 0.55", "-0.467358, -31.6623, 16.0264, 0.83", "-0.875681, -33.3825, 17.7226, 0.55", "-1.33186, -34.8036, 19.095, 0.55", "-2.25127, -37.4961, 21.6447, 0.55", "-2.98077, -39.6422, 23.653, 0.55", "-3.53348, -41.362, 25.2876, 0.55", "-4.02166, -43.1863, 26.9729, 0.28", "-4.16266, -43.9451, 27.6501, 0.55", "-4.38452, -45.3461, 28.8265, 0.28", "-4.43033, -47.5284, 30.3525, 0.55", "-6.27517, -54.8187, 35.7228, 0.55", "-8.33723, -61.5593, 41.6379, 0.55", "-10.0753, -67.0951, 48.6842, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-44.1733, 38.3121, -2.04799, 0.55", "-46.8219, 38.3097, -1.17981, 0.55", "-47.9566, 38.2222, -0.704671, 0.83", "-49.3095, 38.0217, -0.00784195, 0.55", "-50.3591, 37.8488, 0.606392, 0.83", "-53.108, 37.4892, 2.21535, 0.55", "-54.1505, 37.3671, 2.83514, 0.28", "-55.9111, 37.1516, 3.99761, 0.55", "-58.2721, 36.8771, 5.5509, 0.55", "-60.0527, 36.6854, 6.66103, 0.55", "-62.42, 36.4441, 8.07947, 0.28", "-63.0241, 36.4004, 8.38567, 0.55", "-64.2676, 36.3333, 8.98149, 0.28", "-65.1004, 36.3244, 9.32153, 0.55", "-66.7774, 36.3256, 9.88255, 0.28", "-67.7525, 36.2853, 10.1542, 0.55", "-69.4725, 36.0904, 10.6187, 0.28", "-70.6211, 35.9607, 10.8923, 0.55", "-78.1023, 33.9644, 15.272, 0.55", "-85.0755, 31.0058, 19.9609, 0.55", "-91.7908, 27.2011, 24.4511, 0.55", "-98.3678, 22.4618, 28.278, 0.55", "-104.167, 17.8465, 33.2974, 0.55", "-110.554, 13.6546, 37.9405, 0.55", "-117.14, 10.8543, 43.2371, 0.55", "-123.656, 7.37247, 48.2332, 0.55", "-130.074, 4.42382, 53.6581, 0.55", "-136.137, 1.27492, 59.3758, 0.55", "-141.368, -2.96763, 65.2453, 0.55", "-146.734, -6.41586, 71.4706, 0.55", "-152.134, -10.6865, 77.1677, 0.55", "-156.582, -15.4446, 83.3047, 0.55", "-159.716, -19.7733, 90.4595, 0.55", "-162.642, -25.6057, 96.6462, 0.55", "-164.335, -31.6513, 103.095, 0.55", "-166.526, -37.3469, 109.686, 0.55", "-169.683, -42.4006, 116.373, 0.55", "-174.637, -45.9597, 122.873, 0.55", "-178.823, -50.5444, 129.308, 0.55", "-181.561, -53.8497, 137.11, 0.55", "-185.656, -56.3992, 144.584, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-44.1733, 38.3121, -2.04799, 0.55", "-44.9314, 39.2802, -3.46681, 0.55", "-45.3915, 40.336, -4.94195, 0.55", "-45.7754, 41.5521, -6.44295, 0.55", "-46.0158, 42.3135, -7.38285, 0.55", "-46.4543, 43.7026, -9.09736, 0.83", "-46.775, 44.7188, -10.3517, 0.55", "-47.0267, 46.1392, -12.1524, 0.83", "-47.0213, 47.0249, -13.0944, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-97.7202, 23.3643, 24.8938, 0.28", "-98.951, 20.6414, 25.0103, 0.28", "-99.551, 19.4487, 24.9757, 0.28", "-100.328, 17.7549, 24.8687, 0.55", "-100.965, 16.2706, 24.7835, 0.28", "-101.9, 14.0166, 24.6768, 0.55", "-104.48, 7.4204, 24.4499, 0.28", "-105.324, 5.07689, 24.2044, 0.55", "-106.606, 1.44683, 23.7193, 0.28", "-107.344, -0.740402, 23.343, 0.55", "-107.856, -2.25436, 23.0526, 0.28", "-108.439, -3.98919, 22.7313, 0.55", "-110.172, -9.74211, 21.7697, 0.28", "-110.723, -11.4948, 21.4272, 0.55", "-111.714, -14.232, 20.674, 0.28", "-112.551, -16.0224, 20.0737, 0.28", "-113.316, -17.2368, 19.6454, 0.55", "-115.995, -20.6574, 18.5435, 0.28", "-117.245, -22.0459, 18.128, 0.55", "-120.316, -25.2531, 17.0326, 0.28", "-123.4, -28.1225, 16.023, 0.28", "-126.77, -30.9056, 14.9658, 0.28", "-128.318, -31.9707, 14.5707, 0.55", "-135.505, -42.7282, 12.3931, 0.55", "-143.407, -53.2014, 12.5745, 0.55", "-151.269, -63.5219, 10.8237, 0.55", "-159.448, -73.2466, 7.89214, 0.55", "-167.85, -82.2414, 3.74802, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-97.7202, 23.3643, 24.8938, 0.55", "-98.2921, 23.3221, 24.9439, 0.55", "-99.9133, 23.1896, 25.2931, 0.55", "-100.524, 23.1212, 25.4551, 0.55", "-101.962, 22.9138, 25.8542, 0.55", "-104.17, 22.6259, 26.3646, 0.55", "-105.315, 22.5143, 26.6127, 0.28", "-107.098, 22.3029, 26.961, 0.55", "-108.42, 22.1212, 27.1704, 0.55", "-108.978, 22.0406, 27.2596, 0.28", "-112.329, 21.5553, 27.7907, 0.55", "-113.893, 21.2606, 27.9382, 0.28", "-115.997, 20.8637, 28.014, 0.28", "-117.807, 20.5571, 27.9762, 0.55", "-124.904, 20.3273, 29.4416, 0.55", "-131.794, 19.8465, 31.6503, 0.55", "-138.336, 18.5354, 34.507, 0.55", "-144.68, 18.4521, 38.0166, 0.55", "-150.17, 18.0075, 42.7305, 0.55", "-154.639, 17.887, 48.4406, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "95.221, 10.8633, -55.2717, 0.55", "100.699, 11.9491, -60.3006, 0.55", "102.466, 12.1714, -61.9515, 0.55", "104.694, 12.3957, -63.9573, 0.55", "108.774, 12.6627, -67.7922, 0.55", "113.094, 12.7373, -71.8011, 0.55", "115.246, 12.6485, -73.6317, 0.83", "117.065, 12.4111, -75.195, 0.55", "118.47, 12.0798, -76.4268, 0.83", "122.001, 10.7956, -79.3711, 0.55", "124.977, 9.51611, -81.6925, 0.55", "128.389, 8.09236, -84.2233, 0.55", "132.169, 6.56117, -87.1473, 0.55", "134.725, 5.46278, -89.1314, 0.55", "137.621, 4.18096, -91.4363, 0.55", "140.119, 3.07345, -93.5993, 0.55", "141.678, 2.40603, -95.1814, 0.55", "143.84, 0.84786, -98.3874, 0.55", "145.082, -0.230136, -100.354, 0.55", "146.355, -1.90439, -102.893, 0.55", "148.307, -4.94767, -107.1, 0.55", "148.737, -5.68038, -108.026, 0.28", "154.174, -14.6844, -119.202, 0.28", "155.884, -17.2655, -122.499, 0.83", "162.39, -26.553, -134.062, 0.83", "165.67, -31.0637, -139.294, 0.83", "167.173, -32.9514, -141.355, 0.55", "168.799, -34.7562, -143.361, 0.55", "172.796, -37.9318, -147.025, 0.55", "176.875, -40.6018, -150.226, 0.28", "177.925, -40.7321, -150.312, 0.55", "180.106, -40.5364, -149.895, 0.28", "181.407, -40.2439, -149.514, 0.55", "182.753, -39.9019, -149.003, 0.28", "184.338, -39.3829, -148.363, 0.55", "186.706, -38.6096, -147.707, 0.28", "188.631, -38.0731, -147.207, 0.55", "190.743, -37.4287, -146.883, 0.28", "193.644, -36.6646, -146.683, 0.55", "196.899, -35.8303, -146.677, 0.55", "199.776, -35.1546, -146.864, 0.28", "203.774, -34.2887, -147.341, 0.55", "210.724, -32.96, -148.931, 0.55", "213.796, -32.4005, -150.049, 0.55", "215.117, -32.1757, -150.686, 0.83", "217.659, -31.8381, -152.115, 0.55", "219.417, -31.5903, -153.243, 0.83", "224.118, -30.8361, -156.386, 0.55", "227.052, -30.5894, -158.273, 0.28", "228.292, -30.4908, -158.906, 0.55", "231.728, -30.3284, -160.153, 0.28", "232.952, -30.3326, -160.467, 0.55", "235.471, -30.3063, -160.705, 0.28", "238.048, -30.2986, -160.447, 0.55", "243.223, -30.122, -159.016, 0.28", "245.607, -30.0193, -158.088, 0.55", "249.184, -29.9584, -156.448, 0.28", "253.679, -29.7952, -154.246, 0.55", "256.913, -29.6165, -152.631, 0.55", "262.458, -29.1151, -149.839, 0.28", "264.727, -28.9015, -148.907, 0.55", "268.631, -28.5302, -147.783, 0.28", "272.474, -28.0215, -147.045, 0.55", "274.552, -27.6646, -147.018, 0.28", "276.379, -27.1832, -147.252, 0.55", "281.508, -25.771, -148.519, 0.28", "285.108, -24.5557, -149.611, 0.28", "288.178, -23.306, -150.724, 0.55", "291.561, -21.9205, -152.17, 0.28", "292.394, -21.5057, -152.536, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "95.221, 10.8633, -55.2717, 0.55", "95.8774, 9.54124, -55.614, 0.55", "96.3412, 8.42041, -55.8338, 0.28", "96.7598, 7.41682, -55.9595, 0.55", "97.746, 5.30981, -56.2456, 0.28", "97.806, 5.17116, -56.2803, 0.55", "98.1408, 4.43358, -56.513, 0.28", "98.376, 3.7857, -56.7858, 0.55", "98.5948, 3.08229, -57.1312, 0.28", "98.8741, 2.10664, -57.6358, 0.55", "99.5716, -0.332803, -58.8679, 0.55", "100.19, -2.57057, -60.0203, 0.55", "100.671, -4.36326, -60.9429, 0.55", "101.118, -6.12458, -61.8259, 0.55", "101.232, -6.57546, -62.0396, 0.28", "101.361, -7.04496, -62.2377, 0.55", "101.585, -7.66843, -62.4665, 0.28", "102.072, -8.7364, -62.7961, 0.55", "103.135, -10.6583, -63.1578, 0.55", "103.709, -11.664, -63.2696, 0.28", "104.24, -12.7134, -63.4232, 0.55", "104.89, -14.2237, -63.6859, 0.28", "105.349, -15.4681, -63.9213, 0.55", "105.966, -17.3475, -64.2751, 0.28", "106.613, -19.2731, -64.5907, 0.55", "107.522, -22.0837, -65.0693, 0.28", "107.979, -23.5905, -65.3279, 0.55", "108.428, -25.1467, -65.6227, 0.28", "108.815, -26.5424, -65.9528, 0.28", "109.358, -28.3139, -66.4897, 0.55", "109.952, -29.9219, -66.9561, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "80.9044, 31.7175, -2.783, 0.55", "83.5956, 31.1941, -2.73082, 0.55", "85.5278, 30.8006, -2.89225, 0.55", "89.7243, 29.9651, -3.47117, 0.55", "91.5856, 29.6073, -3.9051, 0.55", "93.6048, 29.2965, -4.46221, 0.55", "96.2915, 28.9948, -5.37861, 0.55", "99.0818, 28.6929, -6.63572, 0.55", "100.521, 28.5739, -7.4687, 0.55", "103.384, 28.4758, -9.56512, 0.55", "104.697, 28.4581, -10.5696, 0.55", "107.756, 28.3813, -13.0293, 0.55", "109.825, 28.2304, -14.7106, 0.55", "111.358, 28.0827, -15.8792, 0.83", "113.806, 27.7354, -17.7535, 0.55", "116.209, 27.2309, -19.5386, 0.83", "118.253, 26.6719, -21.0149, 0.55", "120.089, 26.1682, -22.2193, 0.55", "121.146, 25.9104, -22.827, 0.83", "123.633, 25.2694, -24.1105, 0.28", "124.886, 24.977, -24.65, 0.28", "126.083, 24.6351, -25.2635, 0.28", "127.379, 24.3047, -25.9193, 0.28", "129.449, 23.8332, -26.9969, 0.28", "130.286, 23.6455, -27.4015, 0.55", "132.32, 23.1478, -28.1648, 0.55", "136.007, 22.1495, -29.3702, 0.55", "137.032, 21.8293, -29.6701, 0.55", "137.952, 21.4987, -29.9107, 0.83", "139.977, 20.7877, -30.2539, 0.55", "141.743, 20.1634, -30.5239, 0.55", "143.413, 19.5781, -30.7691, 0.55", "144.699, 19.1145, -31.0021, 0.55", "146.713, 18.2688, -31.52, 0.55", "149.052, 17.102, -32.3364, 0.55", "152.618, 14.9502, -34.0129, 0.55", "154.533, 13.5054, -35.171, 0.55", "156.156, 11.973, -36.3745, 0.28", "156.627, 11.4073, -36.8067, 0.55", "157.631, 9.81428, -37.9537, 0.28", "158.451, 8.01138, -39.1561, 0.55", "159.189, 5.69393, -40.4288, 0.55", "159.702, 4.14554, -41.1969, 0.28", "159.896, 3.58942, -41.4438, 0.55", "160.406, 2.20185, -42.0429, 0.28", "161.116, 0.382396, -42.7872, 0.55", "163.009, -4.03602, -44.5033, 0.55", "164.007, -6.27768, -45.3304, 0.55", "164.939, -8.33796, -46.0734, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "80.9044, 31.7175, -2.783, 0.55", "82.6425, 32.2741, -1.28467, 0.55", "83.203, 32.4451, -0.836269, 0.55", "85.3037, 32.9556, 0.754699, 0.55", "87.644, 33.5823, 2.56035, 0.55", "90.6361, 34.3915, 4.95937, 0.55", "91.463, 34.6152, 5.61604, 0.55", "92.9502, 34.9506, 6.78737, 0.55", "94.5851, 35.3498, 8.00108, 0.55", "96.4922, 35.8584, 9.31476, 0.55", "98.2877, 36.3667, 10.5557, 0.55", "99.2755, 36.6874, 11.182, 0.55", "100.434, 37.1003, 11.9105, 0.55", "101.868, 37.6525, 12.7786, 0.83", "104.241, 38.5109, 13.9453, 0.55", "105.821, 38.9996, 14.649, 0.83", "108.026, 39.5572, 15.5632, 0.55", "108.706, 39.6872, 15.8393, 0.55", "110.822, 39.9713, 16.666, 0.55", "114.63, 40.2115, 18.0245, 0.55", "117.431, 40.2129, 18.9767, 0.55", "119.647, 40.1133, 19.7971, 0.55", "121.903, 39.8982, 20.7278, 0.55", "122.378, 39.8398, 20.9278, 0.28", "123.343, 39.6802, 21.3364, 0.83", "127.304, 38.9674, 23.0454, 0.55", "130.08, 38.4637, 24.1864, 0.55", "132.351, 38.1202, 25.1724, 0.55", "133.707, 37.9127, 25.7753, 0.83", "134.773, 37.7661, 26.2496, 0.28", "135.742, 37.6333, 26.6705, 0.55", "143.123, 38.7206, 30.7915, 0.55", "151.126, 38.2602, 33.658, 0.55", "159.026, 38.9281, 36.7742, 0.55", "165.953, 38.5826, 41.7119, 0.55", "172.379, 37.0873, 47.1067, 0.55", "179.661, 34.0104, 50.3825, 0.55", "186.956, 29.9074, 52.34, 0.55", "194.986, 27.3066, 53.6666, 0.55", "202.884, 24.6521, 55.5609, 0.55", "211.127, 22.8829, 56.8331, 0.55", "219.238, 21.6587, 59.1326, 0.55", "226.831, 18.9906, 62.0048, 0.55", "234.521, 17.9961, 65.528, 0.55", "241.738, 18.4551, 70.0254, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-1.86818, -30.8282, 5.69557, 1.38", "-0.404942, -32.366, 5.48939, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-1.86818, -30.8282, 5.69557, 0.55", "-2.89719, -32.49, 5.25727, 0.55", "-4.01773, -34.6059, 4.78586, 0.55", "-4.91028, -36.0173, 4.41924, 0.55", "-5.60035, -37.1995, 3.98008, 0.55", "-7.03107, -39.6577, 2.84508, 0.55", "-8.02239, -41.3045, 2.01032, 0.55", "-8.88243, -42.7809, 1.22585, 0.55", "-11.1053, -46.3863, -0.795207, 0.55", "-13.799, -50.5701, -3.20255, 0.55", "-15.8668, -53.7441, -5.1167, 0.55", "-17.1709, -55.8249, -6.36087, 0.55", "-18.6636, -58.3143, -7.77783, 0.55", "-20.5485, -61.859, -9.52522, 0.55", "-21.6397, -64.3492, -10.4981, 0.55", "-23.0316, -67.9061, -11.5179, 0.55", "-24.1388, -71.2193, -12.2529, 0.55", "-25.2221, -75.3283, -12.9375, 0.55", "-26.214, -80.1268, -13.4834, 0.55", "-26.7065, -83.7712, -13.6801, 0.55", "-26.8963, -85.5754, -13.6272, 0.55", "-27.2217, -89.7958, -13.2015, 0.55", "-27.509, -93.7388, -12.6859, 0.55", "-27.7462, -97.6938, -11.8304, 0.55", "-27.9541, -99.9622, -11.2431, 0.55", "-28.6678, -106.971, -9.1882, 0.55", "-28.7271, -107.487, -9.03054, 0.55", "-29.0713, -110.643, -7.97358, 0.55", "-29.9684, -116.302, -6.07919, 0.55", "-30.231, -118.197, -5.54681, 0.55", "-30.493, -121.17, -5.18035, 0.55", "-30.4612, -122.277, -5.24829, 0.55", "-29.922, -126.02, -6.00941, 0.55", "-29.246, -128.444, -6.88255, 0.55", "-27.7546, -132.309, -8.89917, 0.55", "-25.6159, -137.031, -11.599, 0.28", "-25.0062, -138.199, -12.3935, 0.55", "-24.0123, -139.972, -13.729, 0.28", "-23.8588, -140.239, -13.9434, 0.55", "-23.0777, -141.703, -15.0141, 0.28", "-22.8887, -142.2, -15.2942, 0.55", "-22.1621, -144.784, -16.349, 0.28", "-21.9485, -145.665, -16.7124, 0.55", "-21.4174, -148.214, -17.6534, 0.28", "-21.2484, -149.015, -17.9457, 0.55", "-20.703, -151.783, -18.9251, 0.28", "-20.4438, -153.056, -19.3785, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-10.0753, -67.0951, 48.6842, 0.55", "-14.1973, -75.104, 55.0073, 0.55", "-19.5154, -82.2858, 61.3324, 0.55", "-24.3562, -90.1612, 67.2806, 0.55", "-29.3338, -98.1034, 73.03, 0.55", "-32.9079, -107.145, 78.342, 0.55", "-36.5395, -115.808, 84.1648, 0.55", "-38.3283, -126.057, 88.2681, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-10.0753, -67.0951, 48.6842, 0.55", "-9.88563, -74.1621, 55.6771, 0.55", "-8.86255, -82.2938, 61.4504, 0.55", "-9.32767, -90.7285, 66.865, 0.55", "-10.07, -99.7374, 71.3132, 0.55", "-10.4725, -108.649, 75.9866, 0.55", "-10.9853, -117.184, 81.2506, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-47.0213, 47.0249, -13.0944, 0.83", "-46.4042, 48.9461, -13.5736, 0.83", "-45.0982, 53.473, -14.5551, 0.55", "-44.5818, 55.3742, -14.8801, 0.83", "-44.0669, 57.363, -15.1396, 0.55", "-43.6287, 59.3128, -15.2239, 0.55", "-43.4444, 60.2484, -15.1802, 0.28", "-43.4055, 60.812, -15.0576, 0.55", "-43.3787, 62.5325, -14.3207, 0.28", "-43.3656, 63.2522, -13.9668, 0.55", "-43.3911, 65.7089, -12.6638, 0.28", "-43.4873, 67.626, -11.5972, 0.55", "-43.8163, 70.5777, -9.91593, 0.28", "-44.2165, 73.1492, -8.43616, 0.28", "-44.5352, 74.5755, -7.62196, 0.55", "-45.0174, 76.2663, -6.70518, 0.28", "-45.3054, 77.0676, -6.28271, 0.55", "-46.0487, 78.9932, -5.41585, 0.28", "-46.5989, 80.308, -4.93792, 0.28", "-47.1491, 81.6172, -4.51532, 0.28", "-47.4136, 82.3103, -4.2824, 0.55", "-48.3153, 85.1456, -3.32835, 0.28", "-49.2542, 88.5325, -2.20037, 0.55", "-49.5609, 89.7045, -1.80701, 0.55", "-49.8959, 90.8681, -1.39982, 0.55", "-50.7124, 93.3567, -0.627477, 0.55", "-51.3309, 95.0048, -0.197033, 0.28", "-51.6276, 95.6313, -0.0731191, 0.55", "-52.5539, 97.3104, 0.239327, 0.28", "-53.5782, 99.128, 0.479996, 0.55", "-55.2297, 101.782, 0.635129, 0.28", "-56.0115, 102.903, 0.618654, 0.28", "-57.2136, 104.524, 0.384736, 0.55", "-58.5277, 106.248, 0.0256952, 0.28", "-58.7626, 106.524, -0.0573981, 0.55", "-59.5992, 107.413, -0.398445, 0.28", "-62.4848, 110.268, -1.61153, 0.55", "-66.3828, 113.929, -3.61532, 0.28", "-67.0771, 114.576, -4.05018, 0.55", "-68.9575, 116.285, -5.31491, 0.28", "-69.7353, 117.001, -5.8734, 0.28", "-70.3933, 117.621, -6.40139, 0.55", "-72.2101, 119.234, -8.23169, 0.28", "-73.4975, 120.175, -9.54546, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-47.0213, 47.0249, -13.0944, 0.55", "-47.1614, 47.8382, -12.9585, 0.55", "-47.268, 48.3043, -12.8431, 0.28", "-47.4309, 48.6116, -12.7081, 0.55", "-47.8048, 49.3173, -12.3983, 0.28", "-48.0675, 49.813, -12.1807, 0.55", "-48.5517, 50.7267, -11.7795, 0.28", "-48.889, 51.1868, -11.4984, 0.55", "-50.1798, 52.138, -10.5441, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-167.85, -82.2414, 3.74802, 0.55", "-174.201, -91.4851, 0.981103, 0.55", "-178.853, -101.459, -2.75273, 0.55", "-182.937, -110.47, -8.75083, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-167.85, -82.2414, 3.74802, 0.55", "-174.194, -89.75, -0.108125, 0.55", "-179.669, -97.214, -5.20614, 0.55", "-184.752, -104.789, -10.5613, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-154.639, 17.887, 48.4406, 0.55", "-161.271, 17.8094, 52.6656, 0.55", "-168.258, 18.7791, 56.1601, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-154.639, 17.887, 48.4406, 0.55", "-164.41, 16.7623, 50.631, 0.55", "-174.024, 17.1978, 53.5959, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "109.952, -29.9219, -66.9561, 0.28", "118.733, -36.4601, -76.1154, 0.28", "119.605, -37.1153, -76.8879, 0.55", "121.078, -38.2215, -78.1923, 0.28", "122.317, -39.1529, -79.2905, 0.28", "123.959, -40.3859, -80.7443, 0.55", "126.122, -42.0115, -82.6611, 0.55", "128.9, -43.751, -83.0744, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "109.952, -29.9219, -66.9561, 0.55", "111.363, -31.8275, -67.9915, 0.55", "111.859, -32.712, -68.4535, 0.28", "112.644, -34.2518, -69.2737, 0.55", "114.373, -37.6437, -71.0805, 0.28", "115.571, -39.9944, -72.3326, 0.55", "117.6, -43.977, -74.4541, 0.28", "119.994, -48.9662, -77.364, 0.28", "121.018, -51.2899, -78.7412, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "164.939, -8.33796, -46.0734, 0.28", "167.114, -11.3171, -46.01, 0.28", "169.909, -15.2954, -45.5909, 0.28", "171.693, -17.8907, -45.2117, 0.55", "172.774, -19.3265, -44.9424, 0.28", "173.35, -20.1006, -44.7893, 0.28", "176.199, -23.9162, -44.0928, 0.55", "176.869, -24.7749, -43.8313, 0.28", "178.484, -27.0626, -42.976, 0.55", "179.853, -29.0446, -42.3096, 0.28", "181.038, -30.6492, -41.8058, 0.55", "182.414, -32.558, -41.3168, 0.55", "184.555, -35.5521, -40.9128, 0.55", "185.068, -36.2847, -40.8389, 0.55", "186.902, -39.021, -40.5855, 0.28", "187.609, -40.1381, -40.5073, 0.55", "188.594, -41.5602, -40.4208, 0.28", "189.973, -43.5705, -40.3887, 0.55", "192.197, -46.6879, -40.8071, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "164.939, -8.33796, -46.0734, 0.55", "163.023, -8.20852, -45.8848, 0.55", "161.468, -8.10339, -45.7315, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-0.404942, -32.366, 5.48939, 0.83", "-0.279762, -32.6237, 5.47975, 0.83", "1.1444, -34.895, 5.55553, 0.83", "2.40211, -36.8851, 5.49324, 0.55", "3.40549, -38.4727, 5.44354, 0.55", "5.53822, -41.8472, 5.33791, 0.83", "8.12508, -45.9402, 5.20978, 0.55", "9.53091, -48.0811, 5.18816, 0.83", "12.0008, -51.4801, 5.32021, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-0.404942, -32.366, 5.48939, 0.55", "-1.94512, -33.5847, 2.42544, 0.55", "-3.59831, -34.8928, -0.86334, 0.55", "-5.54992, -36.437, -4.74577, 0.55", "-7.9198, -38.3122, -9.4603, 0.55", "-9.26462, -39.3763, -12.1356, 0.55", "-9.53478, -39.59, -12.6731, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-10.9853, -117.184, 81.2506, 0.55", "-10.9083, -122.915, 85.2518, 0.55", "-9.88158, -128.993, 88.6038, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-10.9853, -117.184, 81.2506, 0.55", "-11.2698, -127.581, 87.2294, 0.55", "-12.1912, -137.837, 93.3442, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-50.1798, 52.138, -10.5441, 0.28", "-51.6394, 53.4903, -8.92952, 0.28", "-52.1974, 53.9899, -8.24501, 0.55", "-53.7982, 55.431, -6.22176, 0.28", "-54.5847, 56.1613, -5.31153, 0.55", "-56.724, 58.1534, -2.9362, 0.28", "-58.8982, 60.178, -0.522001, 0.55", "-62.5027, 63.3053, 3.47438, 0.28", "-63.27, 63.9782, 4.32738, 0.55", "-64.9495, 65.5889, 6.15688, 0.28", "-65.6038, 66.264, 6.88287, 0.55", "-72.8824, 70.5131, 12.6675, 0.55", "-80.5883, 76.2669, 16.3117, 0.55", "-87.4015, 82.0787, 21.3915, 0.55", "-92.8753, 89.1826, 26.6114, 0.55", "-99.315, 96.0006, 30.994, 0.55", "-106.698, 101.074, 35.9877, 0.55", "-113.597, 105.11, 42.3501, 0.55", "-119.728, 107.877, 49.9848, 0.55", "-125.84, 111.291, 57.398, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-50.1798, 52.138, -10.5441, 0.55", "-51.3196, 51.623, -10.6463, 0.55", "-51.9094, 51.3367, -10.7071, 0.28", "-52.3484, 51.1237, -10.7524, 0.55", "-52.7142, 50.9462, -10.7901, 0.28", "-52.9704, 50.8218, -10.8165, 0.55", "-53.677, 50.4789, -10.8894, 0.28", "-54.1239, 50.2328, -11.0032, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-182.937, -110.47, -8.75083, 0.55", "-188.277, -122.609, -13.8349, 0.55", "-192.823, -135.488, -17.8146, 0.55", "-197.272, -147.393, -24.2148, 0.55", "-202.368, -159.931, -28.5433, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-182.937, -110.47, -8.75083, 0.55", "-189.762, -115.47, -16.9309, 0.55", "-196.42, -118.678, -26.0002, 0.55", "-203.624, -123.522, -33.9299, 0.55", "-212.919, -126.878, -40.1539, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-184.752, -104.789, -10.5613, 0.55", "-190.296, -109.344, -17.5114, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-184.752, -104.789, -10.5613, 0.55", "-188.615, -115.494, -13.9496, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "128.9, -43.751, -83.0744, 0.28", "130.972, -44.6063, -83.6116, 0.28", "131.935, -45.0036, -83.8611, 0.55", "133.77, -45.7613, -84.3369, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "128.9, -43.751, -83.0744, 0.55", "128.838, -45.1279, -83.8885, 0.55", "128.713, -47.8822, -85.5168, 0.28", "128.673, -48.7793, -86.0472, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "121.018, -51.2899, -78.7412, 0.28", "122.908, -55.0595, -80.9038, 0.28", "123.844, -56.9261, -81.9746, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "121.018, -51.2899, -78.7412, 0.55", "119.566, -52.037, -77.7734, 0.55", "115.518, -54.1203, -75.0748, 0.28", "114.557, -54.6152, -74.4337, 0.55", "111.926, -55.969, -72.6799, 0.28", "110.23, -56.8417, -71.5495, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "12.0008, -51.4801, 5.32021, 0.83", "12.0336, -51.7611, 5.29766, 0.83", "12.5234, -55.4319, 5.09532, 0.83", "12.6764, -58.1779, 5.12756, 0.83", "12.6669, -60.8183, 5.43256, 0.83", "12.5547, -64.3207, 6.10071, 0.83", "12.3293, -68.3499, 7.02141, 0.83", "12.1132, -72.836, 8.2744, 0.83", "11.9191, -77.1829, 9.68508, 0.83", "11.3356, -82.532, 11.3233, 0.83", "10.927, -84.9991, 11.9513, 0.83", "10.6043, -86.8609, 12.3116, 0.83", "9.90687, -90.4381, 12.9361, 0.83", "9.34146, -93.6504, 13.3206, 0.83", "8.43586, -100.536, 13.3837, 0.83", "7.94687, -104.327, 12.9487, 0.83", "7.47589, -107.834, 12.3073, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "12.0008, -51.4801, 5.32021, 0.55", "10.7719, -54.5441, 5.42448, 0.55", "9.83486, -56.7642, 5.65488, 0.55", "9.25864, -58.1785, 5.94049, 0.55", "8.43743, -60.3827, 6.60116, 0.55", "6.89423, -64.7353, 8.18732, 0.55", "5.66752, -68.0197, 9.7321, 0.55", "4.66138, -70.6436, 11.2401, 0.55", "3.56616, -73.2899, 12.9383, 0.55", "2.62985, -75.4815, 14.4556, 0.28", "1.81627, -77.2647, 15.9463, 0.55", "0.221828, -80.4974, 19.0945, 0.55", "-0.88062, -82.4751, 21.2232, 0.55", "-1.50921, -83.5837, 22.4038, 0.55", "-2.30903, -84.8953, 23.7233, 0.83", "-4.69107, -88.7939, 27.3788, 0.28", "-5.47497, -90.0852, 28.5543, 0.55", "-6.81254, -92.4171, 30.6091, 0.28", "-7.22896, -93.1341, 31.2936, 0.55", "-8.11203, -94.8165, 32.8771, 0.28", "-8.60154, -95.7754, 33.7093, 0.55", "-10.3075, -98.9282, 35.5802, 0.55", "-13.1445, -107.263, 44.0218, 0.55", "-15.4726, -115.164, 52.9831, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-9.53478, -39.59, -12.6731, 0.55", "-11.7972, -40.6278, -15.1459, 0.55", "-12.4689, -40.8745, -15.8412, 0.55", "-14.1589, -41.4963, -17.5204, 0.55", "-17.8705, -42.74, -21.0313, 0.28", "-18.4252, -42.9122, -21.5179, 0.55", "-20.7395, -43.7025, -23.4568, 0.55", "-23.9204, -44.7954, -25.8021, 0.55", "-25.1403, -45.1741, -26.6689, 0.28", "-26.2147, -45.4315, -27.366, 0.28", "-28.0575, -45.8401, -28.3118, 0.55", "-30.3098, -46.2284, -29.5455, 0.28", "-32.399, -46.4042, -30.727, 0.55", "-34.0216, -46.4054, -31.6077, 0.55", "-35.1433, -46.3109, -32.2464, 0.55", "-38.4458, -45.8812, -34.215, 0.55", "-41.9352, -45.1936, -36.219, 0.55", "-43.3814, -44.8311, -37.0111, 0.28", "-44.7541, -44.5076, -37.7883, 0.55", "-47.5313, -44.0319, -39.3414, 0.28", "-48.4648, -43.8989, -39.8555, 0.83", "-50.2113, -43.6334, -40.7017, 0.28", "-51.4671, -43.5412, -41.1565, 0.55", "-53.2881, -43.4724, -41.7829, 0.28", "-54.014, -43.4362, -42.0093, 0.55", "-55.3583, -43.3967, -42.3599, 0.55", "-57.3988, -43.1355, -42.8112, 0.55", "-58.7351, -42.8849, -43.0327, 0.28", "-59.8172, -42.5528, -43.1269, 0.55", "-61.0994, -42.0069, -43.2404, 0.28", "-61.3113, -41.9004, -43.2655, 0.55", "-63.2767, -40.8658, -43.8139, 0.28", "-64.7078, -40.0832, -44.3532, 0.55", "-66.6066, -38.9232, -45.3048, 0.83", "-68.1756, -37.9286, -46.2507, 0.28", "-68.5814, -37.6735, -46.5322, 0.55", "-71.6948, -35.7562, -48.8527, 0.28", "-72.2399, -35.428, -49.3089, 0.55", "-73.8539, -34.3516, -50.7469, 0.28", "-74.2705, -34.0746, -51.121, 0.55", "-75.3397, -33.3555, -52.0124, 0.28", "-76.0972, -32.839, -52.5991, 0.55", "-77.7881, -31.6925, -53.6711, 0.28", "-78.7902, -31.0822, -54.2727, 0.55", "-80.9247, -29.9142, -55.4515, 0.28", "-81.5596, -29.6009, -55.7938, 0.55", "-82.5531, -29.1865, -56.2976, 0.28", "-83.3943, -28.8389, -56.6855, 0.55", "-85.1397, -28.1432, -57.3918, 0.28", "-85.6649, -27.946, -57.5884, 0.55", "-89.5661, -26.4095, -58.8745, 0.28", "-90.9341, -25.7779, -59.2099, 0.55", "-93.3728, -24.5393, -59.6567, 0.28", "-94.4719, -23.9387, -59.825, 0.55", "-96.9856, -22.5836, -60.0732, 0.28", "-97.9055, -22.1282, -60.1266, 0.55", "-101.217, -20.7847, -60.153, 0.28", "-102.593, -20.3992, -60.1548, 0.55", "-104.547, -20.1761, -60.141, 0.55", "-105.745, -20.1172, -60.1057, 0.55", "-108.173, -20.0671, -59.8505, 0.28", "-110.548, -20.0463, -59.451, 0.28", "-112.52, -20.0229, -59.0608, 0.55", "-114.906, -19.7832, -58.3165, 0.28", "-116.069, -19.5128, -57.7856, 0.55", "-118.798, -18.3962, -56.2307, 0.28", "-120.142, -17.5251, -55.0779, 0.55", "-120.965, -16.8094, -54.1242, 0.28", "-121.822, -16.006, -52.7964, 0.55", "-122.847, -14.9511, -50.9719, 0.28", "-123.24, -14.5824, -50.2865, 0.55", "-125.379, -12.9537, -47.0584, 0.28", "-126.105, -12.4449, -45.9797, 0.55", "-127.813, -11.3299, -43.3615, 0.28", "-128.742, -10.7403, -41.9398, 0.55", "-129.507, -10.2576, -40.773, 0.55", "-130.433, -9.69053, -39.4096, 0.28", "-130.953, -9.40217, -38.8006, 0.55", "-132.742, -8.35917, -36.8829, 0.28", "-133.67, -7.67484, -35.8544, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-9.53478, -39.59, -12.6731, 0.55", "-9.14014, -39.6981, -13.7609, 0.55", "-8.71253, -39.6744, -14.8405, 0.55", "-8.11307, -39.5412, -16.1544, 0.55", "-7.58056, -39.3366, -17.1996, 0.55", "-3.6133, -37.1905, -23.7395, 0.55", "-2.73205, -36.5153, -25.222, 0.55", "-1.46504, -35.3376, -27.4383, 0.55", "-0.575904, -34.445, -29.0119, 0.55", "0.314548, -33.4751, -30.5153, 0.28", "1.76796, -31.834, -32.7352, 0.55", "4.07108, -29.2712, -35.8859, 0.28", "4.22142, -29.1154, -36.2248, 0.55", "4.66844, -28.5887, -38.7341, 0.28", "4.68809, -28.3558, -40.4816, 0.55", "4.5367, -28.2505, -42.3837, 0.55", "4.22279, -28.2445, -45.8056, 0.55", "3.62683, -28.2813, -52.5242, 0.55", "3.30822, -28.3513, -57.0437, 0.55", "3.24028, -28.388, -58.6064, 0.55", "3.0335, -28.5329, -68.8799, 0.55", "3.0932, -28.5244, -71.6607, 0.55", "3.24395, -28.5142, -73.2177, 0.55", "3.91533, -28.5684, -76.8187, 0.55", "6.05047, -29.1314, -85.3796, 0.55", "6.7285, -29.3769, -87.6643, 0.28", "7.21571, -29.573, -88.9379, 0.55", "7.97715, -29.9449, -90.8148, 0.28", "8.35139, -30.1785, -91.5651, 0.55", "10.0042, -31.2212, -93.4748, 0.28", "11.7086, -32.6594, -94.0064, 0.55", "12.7508, -33.6889, -94.2574, 0.28", "13.7363, -34.8302, -94.3688, 0.55", "14.621, -36.0786, -94.3906, 0.28", "15.0031, -36.7235, -94.4145, 0.55", "15.907, -38.4161, -94.3968, 0.28", "16.1276, -38.9213, -94.4635, 0.55", "17.3527, -41.8149, -95.0023, 0.28", "17.9274, -43.1487, -95.4261, 0.55", "19.2018, -45.9874, -96.6628, 0.28", "19.6943, -47.0287, -97.2405, 0.55", "21.4094, -50.4372, -99.3683, 0.28", "21.8255, -51.2649, -99.9218, 0.55", "23.0539, -53.8875, -101.756, 0.28", "23.3144, -54.5047, -102.133, 0.55", "23.9514, -56.1385, -103.104, 0.28", "24.3137, -57.0842, -103.76, 0.55", "24.6886, -58.0098, -104.483, 0.55", "25.4399, -59.8567, -105.912, 0.28", "25.9875, -60.9915, -106.947, 0.55", "27.7995, -63.7845, -110.288, 0.28", "28.5086, -64.6775, -111.635, 0.55", "29.0145, -65.2401, -112.552, 0.28", "29.5439, -65.7481, -113.47, 0.55", "31.2299, -67.1549, -116.261, 0.28", "32.5331, -68.2495, -118.328, 0.55", "34.8663, -70.3565, -121.628, 0.28", "35.6045, -71.0113, -122.663, 0.55", "37.1006, -72.2117, -124.491, 0.28", "37.6221, -72.6055, -125.051, 0.55", "38.545, -73.2369, -125.781, 0.28", "39.3896, -73.7685, -126.35, 0.55", "41.7734, -75.0786, -127.639, 0.28", "44.5284, -76.4586, -129.07, 0.28", "45.9581, -77.0896, -129.693, 0.28", "47.3739, -77.6754, -130.407, 0.55", "49.4436, -78.426, -131.459, 0.28", "50.3712, -78.7451, -131.906, 0.83", "52.7649, -79.5949, -132.957, 0.28", "53.7843, -79.9877, -133.47, 0.55", "58.1907, -81.897, -135.942, 0.28", "60.3323, -82.8771, -137.36, 0.28", "61.8521, -83.5873, -138.498, 0.55", "62.6976, -84.0211, -139.268, 0.55", "64.8636, -85.2065, -141.51, 0.28", "66.8455, -86.431, -143.702, 0.55", "68.6469, -87.6201, -145.699, 0.28", "70.2332, -88.7249, -147.607, 0.55", "71.5496, -89.6169, -149.174, 0.28", "72.6614, -90.2434, -150.386, 0.55", "75.4134, -91.5577, -153.166, 0.28", "76.8361, -92.2223, -154.509, 0.55", "79.0091, -93.2295, -156.439, 0.28", "80.8088, -93.9908, -157.973, 0.55", "85.028, -95.546, -161.567, 0.28", "86.6996, -96.0578, -163.155, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-9.88158, -128.993, 88.6038, 0.55", "-9.75716, -138.754, 93.0361, 0.55", "-8.81321, -149.29, 95.0998, 0.55", "-8.37144, -159.45, 98.5902, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-9.88158, -128.993, 88.6038, 0.55", "-8.90247, -136.605, 93.9595, 0.55", "-9.10694, -143.115, 100.583, 0.55", "-9.25023, -148.057, 108.342, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-12.1912, -137.837, 93.3442, 0.55", "-11.6816, -147.526, 101.11, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-12.1912, -137.837, 93.3442, 0.55", "-13.5411, -150.214, 100.153, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "7.47589, -107.834, 12.3073, 0.83", "8.29186, -111.02, 12.8769, 0.83", "9.11027, -113.691, 13.5389, 0.83", "9.92378, -116.345, 14.197, 0.83", "10.6963, -118.866, 14.822, 0.83", "11.8869, -122.751, 15.7852, 0.83", "13.0689, -126.608, 16.7414, 0.83", "14.0697, -129.136, 17.6782, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "7.47589, -107.834, 12.3073, 0.55", "9.13447, -110.165, 12.288, 0.55", "10.3784, -112.003, 11.9731, 0.55", "11.2263, -113.371, 11.6188, 0.55", "11.9707, -114.992, 11.0362, 0.83", "12.6811, -116.847, 10.1769, 0.55", "13.3759, -118.662, 9.33639, 0.83", "14.0087, -120.642, 8.26607, 0.55", "14.3635, -121.797, 7.5465, 0.83", "15.3395, -125.553, 4.96475, 0.55", "15.865, -128.516, 2.79177, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-15.4726, -115.164, 52.9831, 0.55", "-18.6639, -122.094, 57.8096, 0.55", "-23.0123, -128.112, 62.8326, 0.55", "-27.928, -133.252, 68.2042, 0.55", "-33.5526, -137.307, 73.7192, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-15.4726, -115.164, 52.9831, 0.55", "-18.5862, -123.096, 59.6531, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "14.0697, -129.136, 17.6782, 0.55", "14.2588, -131.31, 18.3473, 0.55", "14.5712, -134.079, 19.2718, 0.55", "14.8675, -136.695, 20.1306, 0.55", "15.0583, -138.556, 20.7128, 0.55", "15.3645, -141.882, 21.7007, 0.55", "16.3716, -151.24, 24.2511, 0.55", "16.7926, -154.421, 24.9868, 0.55", "17.1017, -156.67, 25.3967, 0.55", "17.4821, -159.25, 25.6666, 0.55", "17.7496, -161.254, 25.7042, 0.55", "18.5142, -165.944, 25.611, 0.55", "18.976, -169.51, 25.5322, 0.55", "19.3372, -171.846, 25.5481, 0.55", "20.2442, -177.886, 25.8856, 0.55", "20.8239, -181.938, 26.2846, 0.55", "21.5867, -187.147, 27.0824, 0.55", "22.5135, -193.029, 28.4283, 0.55", "23.2971, -196.936, 29.5667, 0.55", "23.8129, -199.239, 30.3009, 0.55", "24.2501, -201.364, 30.9709, 0.55", "24.8517, -204.06, 31.6965, 0.55", "26.2385, -210.586, 33.0149, 0.55", "26.8606, -213.113, 33.436, 0.55", "27.4887, -215.93, 33.8849, 0.55", "28.3986, -220.164, 34.5369, 0.55", "28.9505, -223.424, 35.0651, 0.55", "29.3024, -226.532, 35.5244, 0.55", "29.5106, -229.5, 35.9601, 0.55", "29.665, -232.396, 36.4247, 0.55", "29.7876, -234.459, 36.7359, 0.55", "30.0115, -237.837, 37.1332, 0.55", "30.2346, -241.913, 37.3116, 0.55", "30.3966, -243.898, 37.2564, 0.55", "30.5609, -245.647, 37.082, 0.55", "31.0215, -248.95, 36.569, 0.55", "31.2949, -251.048, 36.1876, 0.55", "31.6568, -253.628, 35.8114, 0.55", "31.8423, -255.438, 35.6505, 0.55", "32.2381, -260.14, 35.4068, 0.55", "32.4437, -263.651, 35.4641, 0.55", "32.661, -269.068, 35.978, 0.55", "32.8634, -272.543, 36.6288, 0.55", "33.0449, -276.186, 37.4263, 0.28", "33.0806, -277.649, 37.8044, 0.28", "33.1406, -281.184, 39.0346, 0.28", "33.1578, -284.437, 40.423, 0.28", "33.5531, -288.696, 42.7028, 0.28", "35.7616, -298.349, 45.4455, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "14.0697, -129.136, 17.6782, 0.55", "15.154, -129.497, 18.162, 0.55", "17.3491, -130.432, 19.3312, 0.55", "19.2271, -131.36, 20.4295, 0.28", "21.2283, -132.417, 21.6735, 0.55", "22.3956, -133.082, 22.5941, 0.28", "24.3697, -134.27, 24.3925, 0.55", "25.1268, -134.897, 25.4108, 0.28", "25.3831, -135.12, 25.8393, 0.28", "25.8235, -135.426, 26.5819, 0.55", "27.6058, -136.405, 29.2798, 0.28", "28.3799, -136.782, 30.3853, 0.55", "30.8537, -137.888, 33.3778, 0.28", "32.2423, -138.429, 34.8801, 0.28", "34.0186, -139.138, 36.6336, 0.55", "36.7587, -140.268, 38.9817, 0.28", "37.1449, -140.42, 39.255, 0.55", "39.0906, -141.172, 40.4629, 0.28", "39.2734, -141.244, 40.5525, 0.55", "40.8741, -142.114, 41.41, 0.28", "41.6227, -142.59, 41.8702, 0.55", "47.7586, -146.077, 45.6808, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-33.5526, -137.307, 73.7192, 0.55", "-36.2524, -139.679, 78.0732, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-33.5526, -137.307, 73.7192, 0.55", "-38.1312, -143.288, 77.7224, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "axon_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "axon_1", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L6_BP_ce89d46a17_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, axon_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, axon_1, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.52847, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -3.45834, 9.08519, 2.92137, 0.83 ) }
    dend_43 { pt3dadd( -6.82402, 11.8243, 3.42896, 1.11 ) }
    dend_43 { pt3dadd( -8.80845, 13.4382, 3.693, 0.83 ) }
    dend_43 { pt3dadd( -10.7364, 14.9926, 3.92958, 0.83 ) }
    dend_43 { pt3dadd( -11.8779, 15.879, 4.05921, 1.11 ) }
    dend_43 { pt3dadd( -15.4525, 18.6487, 4.4747, 1.11 ) }
    dend_43 { pt3dadd( -21.8461, 23.3905, 5.20917, 0.83 ) }
    dend_43 { pt3dadd( -24.1495, 25.0337, 5.4517, 0.83 ) }
    dend_43 { pt3dadd( -25.9735, 26.2962, 5.60235, 0.83 ) }
    dend_43 { pt3dadd( -27.7522, 27.5475, 5.73275, 0.83 ) }
    dend_43 { pt3dadd( -29.2001, 28.5788, 5.80311, 0.55 ) }
    dend_43 { pt3dadd( -30.2884, 29.2771, 5.87452, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.70947, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 5.04328, 6.74201, -6.35396, 0.55 ) }
    dend_28 { pt3dadd( 8.35409, 7.49402, -7.09332, 0.55 ) }
    dend_28 { pt3dadd( 10.2752, 7.68385, -8.07166, 0.83 ) }
    dend_28 { pt3dadd( 13.3158, 7.88588, -9.88898, 0.55 ) }
    dend_28 { pt3dadd( 14.7835, 7.9834, -10.7662, 1.38 ) }
    dend_28 { pt3dadd( 18.3924, 8.22317, -12.9232, 0.55 ) }
    dend_28 { pt3dadd( 19.9294, 8.14198, -13.9524, 0.83 ) }
    dend_28 { pt3dadd( 27.8803, 6.65289, -19.735, 0.55 ) }
    dend_28 { pt3dadd( 28.6495, 6.45265, -20.3712, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.66503, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.683444, -10.9585, 3.21108, 1.11 ) }
    dend_1 { pt3dadd( -0.730487, -15.3167, 4.69909, 1.11 ) }
    dend_1 { pt3dadd( -0.749646, -17.0916, 5.30509, 0.83 ) }
    dend_1 { pt3dadd( -0.7751, -19.4497, 6.11021, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.96697, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.756658, 9.9738, -1.35259, 1.11 ) }
    dend_0 { pt3dadd( 0.715038, 11.7387, -1.3505, 1.11 ) }
    dend_0 { pt3dadd( 0.610568, 14.6178, -1.25361, 1.38 ) }
    dend_0 { pt3dadd( 0.606459, 14.7783, -1.24482, 1.38 ) }
    dend_0 { pt3dadd( 0.658464, 16.7712, -1.08414, 0.83 ) }
    dend_0 { pt3dadd( 0.759103, 18.8833, -0.788314, 0.83 ) }
    dend_0 { pt3dadd( 0.975636, 21.2794, -0.136729, 0.83 ) }
    dend_0 { pt3dadd( 1.12755, 22.1945, 0.242267, 0.83 ) }
    dend_0 { pt3dadd( 1.29836, 22.8622, 0.600952, 1.11 ) }
    dend_0 { pt3dadd( 1.84721, 24.4978, 1.55968, 0.55 ) }
    dend_0 { pt3dadd( 2.49043, 26.2114, 2.70127, 0.83 ) }
    dend_0 { pt3dadd( 3.4083, 27.992, 4.05394, 0.55 ) }
    dend_0 { pt3dadd( 3.90354, 28.7395, 4.69091, 0.83 ) }
    dend_0 { pt3dadd( 4.57567, 29.7537, 5.65463, 0.55 ) }
    dend_0 { pt3dadd( 5.38187, 31.0417, 6.92855, 0.55 ) }
    dend_0 { pt3dadd( 6.46206, 32.9719, 8.82976, 0.55 ) }
    dend_0 { pt3dadd( 7.64686, 35.174, 10.9267, 0.55 ) }
    dend_0 { pt3dadd( 8.33519, 36.6008, 12.4348, 0.55 ) }
    dend_0 { pt3dadd( 9.1078, 38.402, 14.5047, 0.55 ) }
    dend_0 { pt3dadd( 9.25934, 38.7638, 14.9673, 0.83 ) }
    dend_0 { pt3dadd( 9.63845, 39.7199, 16.2579, 0.55 ) }
    dend_0 { pt3dadd( 9.97958, 40.4682, 17.284, 0.83 ) }
    dend_0 { pt3dadd( 10.7285, 42.4954, 19.6994, 0.55 ) }
    dend_0 { pt3dadd( 11.0637, 43.237, 20.4395, 0.83 ) }
    dend_0 { pt3dadd( 11.4321, 43.7906, 20.9836, 0.55 ) }
    dend_0 { pt3dadd( 11.8292, 44.2716, 21.435, 0.83 ) }
    dend_0 { pt3dadd( 12.7572, 45.1778, 22.3151, 0.83 ) }
    dend_0 { pt3dadd( 14.0241, 46.4087, 23.3409, 0.83 ) }
    dend_0 { pt3dadd( 14.8291, 47.218, 23.8669, 0.55 ) }
    dend_0 { pt3dadd( 15.4369, 47.9122, 24.2707, 0.55 ) }
    dend_0 { pt3dadd( 17.0404, 49.7076, 25.3012, 0.83 ) }
    dend_0 { pt3dadd( 18.0913, 50.8596, 25.9177, 0.55 ) }
    dend_0 { pt3dadd( 19.7129, 52.5512, 26.7792, 0.55 ) }
    dend_0 { pt3dadd( 21.2266, 53.9786, 27.5029, 0.55 ) }
    dend_0 { pt3dadd( 22.5965, 55.1927, 28.1104, 0.55 ) }
    dend_0 { pt3dadd( 24.3599, 56.624, 28.7931, 0.55 ) }
    dend_0 { pt3dadd( 25.4587, 57.3399, 29.1751, 0.55 ) }
    dend_0 { pt3dadd( 26.2414, 57.7511, 29.3419, 0.55 ) }
    dend_0 { pt3dadd( 27.3202, 58.0876, 29.4781, 0.55 ) }
    dend_0 { pt3dadd( 28.9853, 58.3113, 29.5577, 0.55 ) }
    dend_0 { pt3dadd( 30.043, 58.3154, 29.5719, 0.55 ) }
    dend_0 { pt3dadd( 31.5616, 58.2791, 29.6937, 0.55 ) }
    dend_0 { pt3dadd( 34.3767, 58.3043, 30.1672, 0.55 ) }
    dend_0 { pt3dadd( 36.5342, 58.4316, 30.6888, 0.55 ) }
    dend_0 { pt3dadd( 38.7738, 58.6841, 31.3748, 0.55 ) }
    dend_0 { pt3dadd( 40.1726, 58.9001, 31.9282, 0.55 ) }
    dend_0 { pt3dadd( 43.7109, 59.8335, 33.6077, 0.55 ) }
    dend_0 { pt3dadd( 45.7432, 60.5732, 34.7663, 0.55 ) }
    dend_0 { pt3dadd( 47.2135, 61.2475, 35.7896, 0.55 ) }
    dend_0 { pt3dadd( 48.084, 61.8415, 36.4478, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 49.0839, 62.7038, 37.202, 0.55 ) }
    dend_0 { pt3dadd( 50.8156, 64.3831, 38.2964, 0.55 ) }
    dend_0 { pt3dadd( 51.2305, 64.7861, 38.4837, 0.55 ) }
    dend_0 { pt3dadd( 52.4507, 65.8693, 38.9356, 0.55 ) }
    dend_0 { pt3dadd( 53.5644, 67.0108, 39.3437, 0.83 ) }
    dend_0 { pt3dadd( 54.1746, 67.6434, 39.5558, 0.55 ) }
    dend_0 { pt3dadd( 55.0921, 68.72, 39.8321, 0.83 ) }
    dend_0 { pt3dadd( 59.5141, 74.4641, 42.656, 0.83 ) }
    dend_0 { pt3dadd( 63.3726, 80.9609, 44.7275, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -30.2884, 29.2771, 5.87452, 0.55 ) }
    dend_55 { pt3dadd( -32.2505, 30.5538, 4.75499, 0.55 ) }
    dend_55 { pt3dadd( -34.384, 31.9421, 3.53762, 0.55 ) }
    dend_55 { pt3dadd( -36.9588, 33.6176, 2.06852, 0.55 ) }
    dend_55 { pt3dadd( -39.0848, 35.001, 0.855444, 0.83 ) }
    dend_55 { pt3dadd( -40.8664, 36.1603, -0.161113, 0.55 ) }
    dend_55 { pt3dadd( -44.1733, 38.3121, -2.04799, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -30.2884, 29.2771, 5.87452, 0.55 ) }
    dend_44 { pt3dadd( -33.3866, 29.9047, 5.44959, 0.55 ) }
    dend_44 { pt3dadd( -36.6911, 30.454, 5.32439, 0.55 ) }
    dend_44 { pt3dadd( -40.4403, 31.0678, 5.27394, 0.55 ) }
    dend_44 { pt3dadd( -45.8816, 31.88, 5.69904, 0.55 ) }
    dend_44 { pt3dadd( -50.4424, 32.411, 6.37515, 0.55 ) }
    dend_44 { pt3dadd( -55.2307, 32.8845, 7.28664, 0.55 ) }
    dend_44 { pt3dadd( -59.8713, 32.9987, 8.65802, 0.55 ) }
    dend_44 { pt3dadd( -63.8758, 32.6782, 10.214, 0.55 ) }
    dend_44 { pt3dadd( -68.8785, 31.8977, 12.6768, 0.55 ) }
    dend_44 { pt3dadd( -71.0607, 31.3829, 14.0453, 0.55 ) }
    dend_44 { pt3dadd( -73.4203, 30.7975, 15.6238, 0.55 ) }
    dend_44 { pt3dadd( -77.5791, 29.4428, 18.2116, 0.55 ) }
    dend_44 { pt3dadd( -79.7848, 28.7392, 19.2426, 0.55 ) }
    dend_44 { pt3dadd( -82.0951, 27.9287, 20.307, 0.55 ) }
    dend_44 { pt3dadd( -84.8363, 27.0092, 21.2961, 0.55 ) }
    dend_44 { pt3dadd( -87.8134, 26.0774, 22.2913, 0.55 ) }
    dend_44 { pt3dadd( -92.0602, 24.7393, 23.6188, 0.55 ) }
    dend_44 { pt3dadd( -97.7202, 23.3643, 24.8938, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 28.6495, 6.45265, -20.3712, 0.55 ) }
    dend_34 { pt3dadd( 34.9221, 8.27984, -21.7216, 0.55 ) }
    dend_34 { pt3dadd( 38.5441, 9.10668, -23.012, 0.55 ) }
    dend_34 { pt3dadd( 42.1223, 9.75283, -24.3373, 0.55 ) }
    dend_34 { pt3dadd( 44.5691, 10.0912, -25.2416, 0.55 ) }
    dend_34 { pt3dadd( 48.1466, 10.4981, -26.5355, 0.55 ) }
    dend_34 { pt3dadd( 55.5721, 11.1902, -29.452, 0.55 ) }
    dend_34 { pt3dadd( 63.9996, 11.9176, -33.3246, 0.55 ) }
    dend_34 { pt3dadd( 68.0925, 12.0003, -35.4859, 0.55 ) }
    dend_34 { pt3dadd( 70.2863, 11.9874, -36.7875, 0.55 ) }
    dend_34 { pt3dadd( 72.692, 11.9853, -38.3127, 0.55 ) }
    dend_34 { pt3dadd( 76.9873, 11.8553, -41.017, 0.55 ) }
    dend_34 { pt3dadd( 78.5491, 11.7115, -42.0509, 0.55 ) }
    dend_34 { pt3dadd( 85.1605, 11.2751, -46.9394, 0.55 ) }
    dend_34 { pt3dadd( 89.8403, 11.0441, -50.7469, 0.55 ) }
    dend_34 { pt3dadd( 92.5339, 10.9661, -53.0133, 0.55 ) }
    dend_34 { pt3dadd( 95.221, 10.8633, -55.2717, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 28.6495, 6.45265, -20.3712, 0.83 ) }
    dend_29 { pt3dadd( 31.2094, 8.13758, -20.3994, 0.83 ) }
    dend_29 { pt3dadd( 32.6728, 9.09945, -20.4831, 0.55 ) }
    dend_29 { pt3dadd( 34.827, 10.5661, -20.7912, 0.83 ) }
    dend_29 { pt3dadd( 36.2752, 11.5917, -21.0423, 0.55 ) }
    dend_29 { pt3dadd( 38.2721, 13.0626, -21.3586, 0.83 ) }
    dend_29 { pt3dadd( 40.673, 14.8811, -21.6489, 0.55 ) }
    dend_29 { pt3dadd( 41.8814, 15.7012, -21.7451, 0.55 ) }
    dend_29 { pt3dadd( 44.6643, 17.1872, -21.7705, 0.83 ) }
    dend_29 { pt3dadd( 47.1918, 18.213, -21.4638, 0.55 ) }
    dend_29 { pt3dadd( 48.6043, 18.7705, -21.1557, 0.83 ) }
    dend_29 { pt3dadd( 50.7227, 19.656, -20.4676, 0.55 ) }
    dend_29 { pt3dadd( 53.7639, 20.9849, -19.085, 0.55 ) }
    dend_29 { pt3dadd( 57.9878, 22.5987, -16.9469, 0.55 ) }
    dend_29 { pt3dadd( 62.0153, 23.9836, -14.6269, 0.55 ) }
    dend_29 { pt3dadd( 65.2061, 25.0445, -12.7311, 0.55 ) }
    dend_29 { pt3dadd( 70.4663, 26.8195, -9.57739, 0.55 ) }
    dend_29 { pt3dadd( 74.3136, 28.2354, -7.18352, 0.55 ) }
    dend_29 { pt3dadd( 76.6344, 29.2969, -5.6502, 0.55 ) }
    dend_29 { pt3dadd( 80.9044, 31.7175, -2.783, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.7751, -19.4497, 6.11021, 0.83 ) }
    dend_11 { pt3dadd( -1.07622, -22.5842, 5.99599, 0.83 ) }
    dend_11 { pt3dadd( -1.36959, -25.6381, 5.8847, 0.83 ) }
    dend_11 { pt3dadd( -1.69714, -29.0477, 5.76045, 0.83 ) }
    dend_11 { pt3dadd( -1.86818, -30.8282, 5.69557, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.7751, -19.4497, 6.11021, 0.55 ) }
    dend_2 { pt3dadd( -0.300486, -20.8847, 7.09535, 0.55 ) }
    dend_2 { pt3dadd( 0.108315, -22.6448, 8.36675, 0.55 ) }
    dend_2 { pt3dadd( 0.301368, -24.9577, 10.1047, 0.55 ) }
    dend_2 { pt3dadd( 0.314883, -25.8578, 10.8005, 0.83 ) }
    dend_2 { pt3dadd( 0.135091, -28.1584, 12.8175, 0.55 ) }
    dend_2 { pt3dadd( -0.0520169, -29.3481, 13.8762, 0.55 ) }
    dend_2 { pt3dadd( -0.467358, -31.6623, 16.0264, 0.83 ) }
    dend_2 { pt3dadd( -0.875681, -33.3825, 17.7226, 0.55 ) }
    dend_2 { pt3dadd( -1.33186, -34.8036, 19.095, 0.55 ) }
    dend_2 { pt3dadd( -2.25127, -37.4961, 21.6447, 0.55 ) }
    dend_2 { pt3dadd( -2.98077, -39.6422, 23.653, 0.55 ) }
    dend_2 { pt3dadd( -3.53348, -41.362, 25.2876, 0.55 ) }
    dend_2 { pt3dadd( -4.02166, -43.1863, 26.9729, 0.28 ) }
    dend_2 { pt3dadd( -4.16266, -43.9451, 27.6501, 0.55 ) }
    dend_2 { pt3dadd( -4.38452, -45.3461, 28.8265, 0.28 ) }
    dend_2 { pt3dadd( -4.43033, -47.5284, 30.3525, 0.55 ) }
    dend_2 { pt3dadd( -6.27517, -54.8187, 35.7228, 0.55 ) }
    dend_2 { pt3dadd( -8.33723, -61.5593, 41.6379, 0.55 ) }
    dend_2 { pt3dadd( -10.0753, -67.0951, 48.6842, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -44.1733, 38.3121, -2.04799, 0.55 ) }
    dend_61 { pt3dadd( -46.8219, 38.3097, -1.17981, 0.55 ) }
    dend_61 { pt3dadd( -47.9566, 38.2222, -0.704671, 0.83 ) }
    dend_61 { pt3dadd( -49.3095, 38.0217, -0.00784195, 0.55 ) }
    dend_61 { pt3dadd( -50.3591, 37.8488, 0.606392, 0.83 ) }
    dend_61 { pt3dadd( -53.108, 37.4892, 2.21535, 0.55 ) }
    dend_61 { pt3dadd( -54.1505, 37.3671, 2.83514, 0.28 ) }
    dend_61 { pt3dadd( -55.9111, 37.1516, 3.99761, 0.55 ) }
    dend_61 { pt3dadd( -58.2721, 36.8771, 5.5509, 0.55 ) }
    dend_61 { pt3dadd( -60.0527, 36.6854, 6.66103, 0.55 ) }
    dend_61 { pt3dadd( -62.42, 36.4441, 8.07947, 0.28 ) }
    dend_61 { pt3dadd( -63.0241, 36.4004, 8.38567, 0.55 ) }
    dend_61 { pt3dadd( -64.2676, 36.3333, 8.98149, 0.28 ) }
    dend_61 { pt3dadd( -65.1004, 36.3244, 9.32153, 0.55 ) }
    dend_61 { pt3dadd( -66.7774, 36.3256, 9.88255, 0.28 ) }
    dend_61 { pt3dadd( -67.7525, 36.2853, 10.1542, 0.55 ) }
    dend_61 { pt3dadd( -69.4725, 36.0904, 10.6187, 0.28 ) }
    dend_61 { pt3dadd( -70.6211, 35.9607, 10.8923, 0.55 ) }
    dend_61 { pt3dadd( -78.1023, 33.9644, 15.272, 0.55 ) }
    dend_61 { pt3dadd( -85.0755, 31.0058, 19.9609, 0.55 ) }
    dend_61 { pt3dadd( -91.7908, 27.2011, 24.4511, 0.55 ) }
    dend_61 { pt3dadd( -98.3678, 22.4618, 28.278, 0.55 ) }
    dend_61 { pt3dadd( -104.167, 17.8465, 33.2974, 0.55 ) }
    dend_61 { pt3dadd( -110.554, 13.6546, 37.9405, 0.55 ) }
    dend_61 { pt3dadd( -117.14, 10.8543, 43.2371, 0.55 ) }
    dend_61 { pt3dadd( -123.656, 7.37247, 48.2332, 0.55 ) }
    dend_61 { pt3dadd( -130.074, 4.42382, 53.6581, 0.55 ) }
    dend_61 { pt3dadd( -136.137, 1.27492, 59.3758, 0.55 ) }
    dend_61 { pt3dadd( -141.368, -2.96763, 65.2453, 0.55 ) }
    dend_61 { pt3dadd( -146.734, -6.41586, 71.4706, 0.55 ) }
    dend_61 { pt3dadd( -152.134, -10.6865, 77.1677, 0.55 ) }
    dend_61 { pt3dadd( -156.582, -15.4446, 83.3047, 0.55 ) }
    dend_61 { pt3dadd( -159.716, -19.7733, 90.4595, 0.55 ) }
    dend_61 { pt3dadd( -162.642, -25.6057, 96.6462, 0.55 ) }
    dend_61 { pt3dadd( -164.335, -31.6513, 103.095, 0.55 ) }
    dend_61 { pt3dadd( -166.526, -37.3469, 109.686, 0.55 ) }
    dend_61 { pt3dadd( -169.683, -42.4006, 116.373, 0.55 ) }
    dend_61 { pt3dadd( -174.637, -45.9597, 122.873, 0.55 ) }
    dend_61 { pt3dadd( -178.823, -50.5444, 129.308, 0.55 ) }
    dend_61 { pt3dadd( -181.561, -53.8497, 137.11, 0.55 ) }
    dend_61 { pt3dadd( -185.656, -56.3992, 144.584, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -44.1733, 38.3121, -2.04799, 0.55 ) }
    dend_56 { pt3dadd( -44.9314, 39.2802, -3.46681, 0.55 ) }
    dend_56 { pt3dadd( -45.3915, 40.336, -4.94195, 0.55 ) }
    dend_56 { pt3dadd( -45.7754, 41.5521, -6.44295, 0.55 ) }
    dend_56 { pt3dadd( -46.0158, 42.3135, -7.38285, 0.55 ) }
    dend_56 { pt3dadd( -46.4543, 43.7026, -9.09736, 0.83 ) }
    dend_56 { pt3dadd( -46.775, 44.7188, -10.3517, 0.55 ) }
    dend_56 { pt3dadd( -47.0267, 46.1392, -12.1524, 0.83 ) }
    dend_56 { pt3dadd( -47.0213, 47.0249, -13.0944, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -97.7202, 23.3643, 24.8938, 0.28 ) }
    dend_48 { pt3dadd( -98.951, 20.6414, 25.0103, 0.28 ) }
    dend_48 { pt3dadd( -99.551, 19.4487, 24.9757, 0.28 ) }
    dend_48 { pt3dadd( -100.328, 17.7549, 24.8687, 0.55 ) }
    dend_48 { pt3dadd( -100.965, 16.2706, 24.7835, 0.28 ) }
    dend_48 { pt3dadd( -101.9, 14.0166, 24.6768, 0.55 ) }
    dend_48 { pt3dadd( -104.48, 7.4204, 24.4499, 0.28 ) }
    dend_48 { pt3dadd( -105.324, 5.07689, 24.2044, 0.55 ) }
    dend_48 { pt3dadd( -106.606, 1.44683, 23.7193, 0.28 ) }
    dend_48 { pt3dadd( -107.344, -0.740402, 23.343, 0.55 ) }
    dend_48 { pt3dadd( -107.856, -2.25436, 23.0526, 0.28 ) }
    dend_48 { pt3dadd( -108.439, -3.98919, 22.7313, 0.55 ) }
    dend_48 { pt3dadd( -110.172, -9.74211, 21.7697, 0.28 ) }
    dend_48 { pt3dadd( -110.723, -11.4948, 21.4272, 0.55 ) }
    dend_48 { pt3dadd( -111.714, -14.232, 20.674, 0.28 ) }
    dend_48 { pt3dadd( -112.551, -16.0224, 20.0737, 0.28 ) }
    dend_48 { pt3dadd( -113.316, -17.2368, 19.6454, 0.55 ) }
    dend_48 { pt3dadd( -115.995, -20.6574, 18.5435, 0.28 ) }
    dend_48 { pt3dadd( -117.245, -22.0459, 18.128, 0.55 ) }
    dend_48 { pt3dadd( -120.316, -25.2531, 17.0326, 0.28 ) }
    dend_48 { pt3dadd( -123.4, -28.1225, 16.023, 0.28 ) }
    dend_48 { pt3dadd( -126.77, -30.9056, 14.9658, 0.28 ) }
    dend_48 { pt3dadd( -128.318, -31.9707, 14.5707, 0.55 ) }
    dend_48 { pt3dadd( -135.505, -42.7282, 12.3931, 0.55 ) }
    dend_48 { pt3dadd( -143.407, -53.2014, 12.5745, 0.55 ) }
    dend_48 { pt3dadd( -151.269, -63.5219, 10.8237, 0.55 ) }
    dend_48 { pt3dadd( -159.448, -73.2466, 7.89214, 0.55 ) }
    dend_48 { pt3dadd( -167.85, -82.2414, 3.74802, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -97.7202, 23.3643, 24.8938, 0.55 ) }
    dend_45 { pt3dadd( -98.2921, 23.3221, 24.9439, 0.55 ) }
    dend_45 { pt3dadd( -99.9133, 23.1896, 25.2931, 0.55 ) }
    dend_45 { pt3dadd( -100.524, 23.1212, 25.4551, 0.55 ) }
    dend_45 { pt3dadd( -101.962, 22.9138, 25.8542, 0.55 ) }
    dend_45 { pt3dadd( -104.17, 22.6259, 26.3646, 0.55 ) }
    dend_45 { pt3dadd( -105.315, 22.5143, 26.6127, 0.28 ) }
    dend_45 { pt3dadd( -107.098, 22.3029, 26.961, 0.55 ) }
    dend_45 { pt3dadd( -108.42, 22.1212, 27.1704, 0.55 ) }
    dend_45 { pt3dadd( -108.978, 22.0406, 27.2596, 0.28 ) }
    dend_45 { pt3dadd( -112.329, 21.5553, 27.7907, 0.55 ) }
    dend_45 { pt3dadd( -113.893, 21.2606, 27.9382, 0.28 ) }
    dend_45 { pt3dadd( -115.997, 20.8637, 28.014, 0.28 ) }
    dend_45 { pt3dadd( -117.807, 20.5571, 27.9762, 0.55 ) }
    dend_45 { pt3dadd( -124.904, 20.3273, 29.4416, 0.55 ) }
    dend_45 { pt3dadd( -131.794, 19.8465, 31.6503, 0.55 ) }
    dend_45 { pt3dadd( -138.336, 18.5354, 34.507, 0.55 ) }
    dend_45 { pt3dadd( -144.68, 18.4521, 38.0166, 0.55 ) }
    dend_45 { pt3dadd( -150.17, 18.0075, 42.7305, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -154.639, 17.887, 48.4406, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 95.221, 10.8633, -55.2717, 0.55 ) }
    dend_42 { pt3dadd( 100.699, 11.9491, -60.3006, 0.55 ) }
    dend_42 { pt3dadd( 102.466, 12.1714, -61.9515, 0.55 ) }
    dend_42 { pt3dadd( 104.694, 12.3957, -63.9573, 0.55 ) }
    dend_42 { pt3dadd( 108.774, 12.6627, -67.7922, 0.55 ) }
    dend_42 { pt3dadd( 113.094, 12.7373, -71.8011, 0.55 ) }
    dend_42 { pt3dadd( 115.246, 12.6485, -73.6317, 0.83 ) }
    dend_42 { pt3dadd( 117.065, 12.4111, -75.195, 0.55 ) }
    dend_42 { pt3dadd( 118.47, 12.0798, -76.4268, 0.83 ) }
    dend_42 { pt3dadd( 122.001, 10.7956, -79.3711, 0.55 ) }
    dend_42 { pt3dadd( 124.977, 9.51611, -81.6925, 0.55 ) }
    dend_42 { pt3dadd( 128.389, 8.09236, -84.2233, 0.55 ) }
    dend_42 { pt3dadd( 132.169, 6.56117, -87.1473, 0.55 ) }
    dend_42 { pt3dadd( 134.725, 5.46278, -89.1314, 0.55 ) }
    dend_42 { pt3dadd( 137.621, 4.18096, -91.4363, 0.55 ) }
    dend_42 { pt3dadd( 140.119, 3.07345, -93.5993, 0.55 ) }
    dend_42 { pt3dadd( 141.678, 2.40603, -95.1814, 0.55 ) }
    dend_42 { pt3dadd( 143.84, 0.84786, -98.3874, 0.55 ) }
    dend_42 { pt3dadd( 145.082, -0.230136, -100.354, 0.55 ) }
    dend_42 { pt3dadd( 146.355, -1.90439, -102.893, 0.55 ) }
    dend_42 { pt3dadd( 148.307, -4.94767, -107.1, 0.55 ) }
    dend_42 { pt3dadd( 148.737, -5.68038, -108.026, 0.28 ) }
    dend_42 { pt3dadd( 154.174, -14.6844, -119.202, 0.28 ) }
    dend_42 { pt3dadd( 155.884, -17.2655, -122.499, 0.83 ) }
    dend_42 { pt3dadd( 162.39, -26.553, -134.062, 0.83 ) }
    dend_42 { pt3dadd( 165.67, -31.0637, -139.294, 0.83 ) }
    dend_42 { pt3dadd( 167.173, -32.9514, -141.355, 0.55 ) }
    dend_42 { pt3dadd( 168.799, -34.7562, -143.361, 0.55 ) }
    dend_42 { pt3dadd( 172.796, -37.9318, -147.025, 0.55 ) }
    dend_42 { pt3dadd( 176.875, -40.6018, -150.226, 0.28 ) }
    dend_42 { pt3dadd( 177.925, -40.7321, -150.312, 0.55 ) }
    dend_42 { pt3dadd( 180.106, -40.5364, -149.895, 0.28 ) }
    dend_42 { pt3dadd( 181.407, -40.2439, -149.514, 0.55 ) }
    dend_42 { pt3dadd( 182.753, -39.9019, -149.003, 0.28 ) }
    dend_42 { pt3dadd( 184.338, -39.3829, -148.363, 0.55 ) }
    dend_42 { pt3dadd( 186.706, -38.6096, -147.707, 0.28 ) }
    dend_42 { pt3dadd( 188.631, -38.0731, -147.207, 0.55 ) }
    dend_42 { pt3dadd( 190.743, -37.4287, -146.883, 0.28 ) }
    dend_42 { pt3dadd( 193.644, -36.6646, -146.683, 0.55 ) }
    dend_42 { pt3dadd( 196.899, -35.8303, -146.677, 0.55 ) }
    dend_42 { pt3dadd( 199.776, -35.1546, -146.864, 0.28 ) }
    dend_42 { pt3dadd( 203.774, -34.2887, -147.341, 0.55 ) }
    dend_42 { pt3dadd( 210.724, -32.96, -148.931, 0.55 ) }
    dend_42 { pt3dadd( 213.796, -32.4005, -150.049, 0.55 ) }
    dend_42 { pt3dadd( 215.117, -32.1757, -150.686, 0.83 ) }
    dend_42 { pt3dadd( 217.659, -31.8381, -152.115, 0.55 ) }
    dend_42 { pt3dadd( 219.417, -31.5903, -153.243, 0.83 ) }
    dend_42 { pt3dadd( 224.118, -30.8361, -156.386, 0.55 ) }
    dend_42 { pt3dadd( 227.052, -30.5894, -158.273, 0.28 ) }
    dend_42 { pt3dadd( 228.292, -30.4908, -158.906, 0.55 ) }
    dend_42 { pt3dadd( 231.728, -30.3284, -160.153, 0.28 ) }
    dend_42 { pt3dadd( 232.952, -30.3326, -160.467, 0.55 ) }
    dend_42 { pt3dadd( 235.471, -30.3063, -160.705, 0.28 ) }
    dend_42 { pt3dadd( 238.048, -30.2986, -160.447, 0.55 ) }
    dend_42 { pt3dadd( 243.223, -30.122, -159.016, 0.28 ) }
    dend_42 { pt3dadd( 245.607, -30.0193, -158.088, 0.55 ) }
    dend_42 { pt3dadd( 249.184, -29.9584, -156.448, 0.28 ) }
    dend_42 { pt3dadd( 253.679, -29.7952, -154.246, 0.55 ) }
    dend_42 { pt3dadd( 256.913, -29.6165, -152.631, 0.55 ) }
    dend_42 { pt3dadd( 262.458, -29.1151, -149.839, 0.28 ) }
    dend_42 { pt3dadd( 264.727, -28.9015, -148.907, 0.55 ) }
    dend_42 { pt3dadd( 268.631, -28.5302, -147.783, 0.28 ) }
    dend_42 { pt3dadd( 272.474, -28.0215, -147.045, 0.55 ) }
    dend_42 { pt3dadd( 274.552, -27.6646, -147.018, 0.28 ) }
    dend_42 { pt3dadd( 276.379, -27.1832, -147.252, 0.55 ) }
    dend_42 { pt3dadd( 281.508, -25.771, -148.519, 0.28 ) }
    dend_42 { pt3dadd( 285.108, -24.5557, -149.611, 0.28 ) }
    dend_42 { pt3dadd( 288.178, -23.306, -150.724, 0.55 ) }
    dend_42 { pt3dadd( 291.561, -21.9205, -152.17, 0.28 ) }
    dend_42 { pt3dadd( 292.394, -21.5057, -152.536, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 95.221, 10.8633, -55.2717, 0.55 ) }
    dend_35 { pt3dadd( 95.8774, 9.54124, -55.614, 0.55 ) }
    dend_35 { pt3dadd( 96.3412, 8.42041, -55.8338, 0.28 ) }
    dend_35 { pt3dadd( 96.7598, 7.41682, -55.9595, 0.55 ) }
    dend_35 { pt3dadd( 97.746, 5.30981, -56.2456, 0.28 ) }
    dend_35 { pt3dadd( 97.806, 5.17116, -56.2803, 0.55 ) }
    dend_35 { pt3dadd( 98.1408, 4.43358, -56.513, 0.28 ) }
    dend_35 { pt3dadd( 98.376, 3.7857, -56.7858, 0.55 ) }
    dend_35 { pt3dadd( 98.5948, 3.08229, -57.1312, 0.28 ) }
    dend_35 { pt3dadd( 98.8741, 2.10664, -57.6358, 0.55 ) }
    dend_35 { pt3dadd( 99.5716, -0.332803, -58.8679, 0.55 ) }
    dend_35 { pt3dadd( 100.19, -2.57057, -60.0203, 0.55 ) }
    dend_35 { pt3dadd( 100.671, -4.36326, -60.9429, 0.55 ) }
    dend_35 { pt3dadd( 101.118, -6.12458, -61.8259, 0.55 ) }
    dend_35 { pt3dadd( 101.232, -6.57546, -62.0396, 0.28 ) }
    dend_35 { pt3dadd( 101.361, -7.04496, -62.2377, 0.55 ) }
    dend_35 { pt3dadd( 101.585, -7.66843, -62.4665, 0.28 ) }
    dend_35 { pt3dadd( 102.072, -8.7364, -62.7961, 0.55 ) }
    dend_35 { pt3dadd( 103.135, -10.6583, -63.1578, 0.55 ) }
    dend_35 { pt3dadd( 103.709, -11.664, -63.2696, 0.28 ) }
    dend_35 { pt3dadd( 104.24, -12.7134, -63.4232, 0.55 ) }
    dend_35 { pt3dadd( 104.89, -14.2237, -63.6859, 0.28 ) }
    dend_35 { pt3dadd( 105.349, -15.4681, -63.9213, 0.55 ) }
    dend_35 { pt3dadd( 105.966, -17.3475, -64.2751, 0.28 ) }
    dend_35 { pt3dadd( 106.613, -19.2731, -64.5907, 0.55 ) }
    dend_35 { pt3dadd( 107.522, -22.0837, -65.0693, 0.28 ) }
    dend_35 { pt3dadd( 107.979, -23.5905, -65.3279, 0.55 ) }
    dend_35 { pt3dadd( 108.428, -25.1467, -65.6227, 0.28 ) }
    dend_35 { pt3dadd( 108.815, -26.5424, -65.9528, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 109.358, -28.3139, -66.4897, 0.55 ) }
    dend_35 { pt3dadd( 109.952, -29.9219, -66.9561, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 80.9044, 31.7175, -2.783, 0.55 ) }
    dend_31 { pt3dadd( 83.5956, 31.1941, -2.73082, 0.55 ) }
    dend_31 { pt3dadd( 85.5278, 30.8006, -2.89225, 0.55 ) }
    dend_31 { pt3dadd( 89.7243, 29.9651, -3.47117, 0.55 ) }
    dend_31 { pt3dadd( 91.5856, 29.6073, -3.9051, 0.55 ) }
    dend_31 { pt3dadd( 93.6048, 29.2965, -4.46221, 0.55 ) }
    dend_31 { pt3dadd( 96.2915, 28.9948, -5.37861, 0.55 ) }
    dend_31 { pt3dadd( 99.0818, 28.6929, -6.63572, 0.55 ) }
    dend_31 { pt3dadd( 100.521, 28.5739, -7.4687, 0.55 ) }
    dend_31 { pt3dadd( 103.384, 28.4758, -9.56512, 0.55 ) }
    dend_31 { pt3dadd( 104.697, 28.4581, -10.5696, 0.55 ) }
    dend_31 { pt3dadd( 107.756, 28.3813, -13.0293, 0.55 ) }
    dend_31 { pt3dadd( 109.825, 28.2304, -14.7106, 0.55 ) }
    dend_31 { pt3dadd( 111.358, 28.0827, -15.8792, 0.83 ) }
    dend_31 { pt3dadd( 113.806, 27.7354, -17.7535, 0.55 ) }
    dend_31 { pt3dadd( 116.209, 27.2309, -19.5386, 0.83 ) }
    dend_31 { pt3dadd( 118.253, 26.6719, -21.0149, 0.55 ) }
    dend_31 { pt3dadd( 120.089, 26.1682, -22.2193, 0.55 ) }
    dend_31 { pt3dadd( 121.146, 25.9104, -22.827, 0.83 ) }
    dend_31 { pt3dadd( 123.633, 25.2694, -24.1105, 0.28 ) }
    dend_31 { pt3dadd( 124.886, 24.977, -24.65, 0.28 ) }
    dend_31 { pt3dadd( 126.083, 24.6351, -25.2635, 0.28 ) }
    dend_31 { pt3dadd( 127.379, 24.3047, -25.9193, 0.28 ) }
    dend_31 { pt3dadd( 129.449, 23.8332, -26.9969, 0.28 ) }
    dend_31 { pt3dadd( 130.286, 23.6455, -27.4015, 0.55 ) }
    dend_31 { pt3dadd( 132.32, 23.1478, -28.1648, 0.55 ) }
    dend_31 { pt3dadd( 136.007, 22.1495, -29.3702, 0.55 ) }
    dend_31 { pt3dadd( 137.032, 21.8293, -29.6701, 0.55 ) }
    dend_31 { pt3dadd( 137.952, 21.4987, -29.9107, 0.83 ) }
    dend_31 { pt3dadd( 139.977, 20.7877, -30.2539, 0.55 ) }
    dend_31 { pt3dadd( 141.743, 20.1634, -30.5239, 0.55 ) }
    dend_31 { pt3dadd( 143.413, 19.5781, -30.7691, 0.55 ) }
    dend_31 { pt3dadd( 144.699, 19.1145, -31.0021, 0.55 ) }
    dend_31 { pt3dadd( 146.713, 18.2688, -31.52, 0.55 ) }
    dend_31 { pt3dadd( 149.052, 17.102, -32.3364, 0.55 ) }
    dend_31 { pt3dadd( 152.618, 14.9502, -34.0129, 0.55 ) }
    dend_31 { pt3dadd( 154.533, 13.5054, -35.171, 0.55 ) }
    dend_31 { pt3dadd( 156.156, 11.973, -36.3745, 0.28 ) }
    dend_31 { pt3dadd( 156.627, 11.4073, -36.8067, 0.55 ) }
    dend_31 { pt3dadd( 157.631, 9.81428, -37.9537, 0.28 ) }
    dend_31 { pt3dadd( 158.451, 8.01138, -39.1561, 0.55 ) }
    dend_31 { pt3dadd( 159.189, 5.69393, -40.4288, 0.55 ) }
    dend_31 { pt3dadd( 159.702, 4.14554, -41.1969, 0.28 ) }
    dend_31 { pt3dadd( 159.896, 3.58942, -41.4438, 0.55 ) }
    dend_31 { pt3dadd( 160.406, 2.20185, -42.0429, 0.28 ) }
    dend_31 { pt3dadd( 161.116, 0.382396, -42.7872, 0.55 ) }
    dend_31 { pt3dadd( 163.009, -4.03602, -44.5033, 0.55 ) }
    dend_31 { pt3dadd( 164.007, -6.27768, -45.3304, 0.55 ) }
    dend_31 { pt3dadd( 164.939, -8.33796, -46.0734, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 80.9044, 31.7175, -2.783, 0.55 ) }
    dend_30 { pt3dadd( 82.6425, 32.2741, -1.28467, 0.55 ) }
    dend_30 { pt3dadd( 83.203, 32.4451, -0.836269, 0.55 ) }
    dend_30 { pt3dadd( 85.3037, 32.9556, 0.754699, 0.55 ) }
    dend_30 { pt3dadd( 87.644, 33.5823, 2.56035, 0.55 ) }
    dend_30 { pt3dadd( 90.6361, 34.3915, 4.95937, 0.55 ) }
    dend_30 { pt3dadd( 91.463, 34.6152, 5.61604, 0.55 ) }
    dend_30 { pt3dadd( 92.9502, 34.9506, 6.78737, 0.55 ) }
    dend_30 { pt3dadd( 94.5851, 35.3498, 8.00108, 0.55 ) }
    dend_30 { pt3dadd( 96.4922, 35.8584, 9.31476, 0.55 ) }
    dend_30 { pt3dadd( 98.2877, 36.3667, 10.5557, 0.55 ) }
    dend_30 { pt3dadd( 99.2755, 36.6874, 11.182, 0.55 ) }
    dend_30 { pt3dadd( 100.434, 37.1003, 11.9105, 0.55 ) }
    dend_30 { pt3dadd( 101.868, 37.6525, 12.7786, 0.83 ) }
    dend_30 { pt3dadd( 104.241, 38.5109, 13.9453, 0.55 ) }
    dend_30 { pt3dadd( 105.821, 38.9996, 14.649, 0.83 ) }
    dend_30 { pt3dadd( 108.026, 39.5572, 15.5632, 0.55 ) }
    dend_30 { pt3dadd( 108.706, 39.6872, 15.8393, 0.55 ) }
    dend_30 { pt3dadd( 110.822, 39.9713, 16.666, 0.55 ) }
    dend_30 { pt3dadd( 114.63, 40.2115, 18.0245, 0.55 ) }
    dend_30 { pt3dadd( 117.431, 40.2129, 18.9767, 0.55 ) }
    dend_30 { pt3dadd( 119.647, 40.1133, 19.7971, 0.55 ) }
    dend_30 { pt3dadd( 121.903, 39.8982, 20.7278, 0.55 ) }
    dend_30 { pt3dadd( 122.378, 39.8398, 20.9278, 0.28 ) }
    dend_30 { pt3dadd( 123.343, 39.6802, 21.3364, 0.83 ) }
    dend_30 { pt3dadd( 127.304, 38.9674, 23.0454, 0.55 ) }
    dend_30 { pt3dadd( 130.08, 38.4637, 24.1864, 0.55 ) }
    dend_30 { pt3dadd( 132.351, 38.1202, 25.1724, 0.55 ) }
    dend_30 { pt3dadd( 133.707, 37.9127, 25.7753, 0.83 ) }
    dend_30 { pt3dadd( 134.773, 37.7661, 26.2496, 0.28 ) }
    dend_30 { pt3dadd( 135.742, 37.6333, 26.6705, 0.55 ) }
    dend_30 { pt3dadd( 143.123, 38.7206, 30.7915, 0.55 ) }
    dend_30 { pt3dadd( 151.126, 38.2602, 33.658, 0.55 ) }
    dend_30 { pt3dadd( 159.026, 38.9281, 36.7742, 0.55 ) }
    dend_30 { pt3dadd( 165.953, 38.5826, 41.7119, 0.55 ) }
    dend_30 { pt3dadd( 172.379, 37.0873, 47.1067, 0.55 ) }
    dend_30 { pt3dadd( 179.661, 34.0104, 50.3825, 0.55 ) }
    dend_30 { pt3dadd( 186.956, 29.9074, 52.34, 0.55 ) }
    dend_30 { pt3dadd( 194.986, 27.3066, 53.6666, 0.55 ) }
    dend_30 { pt3dadd( 202.884, 24.6521, 55.5609, 0.55 ) }
    dend_30 { pt3dadd( 211.127, 22.8829, 56.8331, 0.55 ) }
    dend_30 { pt3dadd( 219.238, 21.6587, 59.1326, 0.55 ) }
    dend_30 { pt3dadd( 226.831, 18.9906, 62.0048, 0.55 ) }
    dend_30 { pt3dadd( 234.521, 17.9961, 65.528, 0.55 ) }
    dend_30 { pt3dadd( 241.738, 18.4551, 70.0254, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -1.86818, -30.8282, 5.69557, 1.38 ) }
    dend_13 { pt3dadd( -0.404942, -32.366, 5.48939, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -1.86818, -30.8282, 5.69557, 0.55 ) }
    dend_12 { pt3dadd( -2.89719, -32.49, 5.25727, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -4.01773, -34.6059, 4.78586, 0.55 ) }
    dend_12 { pt3dadd( -4.91028, -36.0173, 4.41924, 0.55 ) }
    dend_12 { pt3dadd( -5.60035, -37.1995, 3.98008, 0.55 ) }
    dend_12 { pt3dadd( -7.03107, -39.6577, 2.84508, 0.55 ) }
    dend_12 { pt3dadd( -8.02239, -41.3045, 2.01032, 0.55 ) }
    dend_12 { pt3dadd( -8.88243, -42.7809, 1.22585, 0.55 ) }
    dend_12 { pt3dadd( -11.1053, -46.3863, -0.795207, 0.55 ) }
    dend_12 { pt3dadd( -13.799, -50.5701, -3.20255, 0.55 ) }
    dend_12 { pt3dadd( -15.8668, -53.7441, -5.1167, 0.55 ) }
    dend_12 { pt3dadd( -17.1709, -55.8249, -6.36087, 0.55 ) }
    dend_12 { pt3dadd( -18.6636, -58.3143, -7.77783, 0.55 ) }
    dend_12 { pt3dadd( -20.5485, -61.859, -9.52522, 0.55 ) }
    dend_12 { pt3dadd( -21.6397, -64.3492, -10.4981, 0.55 ) }
    dend_12 { pt3dadd( -23.0316, -67.9061, -11.5179, 0.55 ) }
    dend_12 { pt3dadd( -24.1388, -71.2193, -12.2529, 0.55 ) }
    dend_12 { pt3dadd( -25.2221, -75.3283, -12.9375, 0.55 ) }
    dend_12 { pt3dadd( -26.214, -80.1268, -13.4834, 0.55 ) }
    dend_12 { pt3dadd( -26.7065, -83.7712, -13.6801, 0.55 ) }
    dend_12 { pt3dadd( -26.8963, -85.5754, -13.6272, 0.55 ) }
    dend_12 { pt3dadd( -27.2217, -89.7958, -13.2015, 0.55 ) }
    dend_12 { pt3dadd( -27.509, -93.7388, -12.6859, 0.55 ) }
    dend_12 { pt3dadd( -27.7462, -97.6938, -11.8304, 0.55 ) }
    dend_12 { pt3dadd( -27.9541, -99.9622, -11.2431, 0.55 ) }
    dend_12 { pt3dadd( -28.6678, -106.971, -9.1882, 0.55 ) }
    dend_12 { pt3dadd( -28.7271, -107.487, -9.03054, 0.55 ) }
    dend_12 { pt3dadd( -29.0713, -110.643, -7.97358, 0.55 ) }
    dend_12 { pt3dadd( -29.9684, -116.302, -6.07919, 0.55 ) }
    dend_12 { pt3dadd( -30.231, -118.197, -5.54681, 0.55 ) }
    dend_12 { pt3dadd( -30.493, -121.17, -5.18035, 0.55 ) }
    dend_12 { pt3dadd( -30.4612, -122.277, -5.24829, 0.55 ) }
    dend_12 { pt3dadd( -29.922, -126.02, -6.00941, 0.55 ) }
    dend_12 { pt3dadd( -29.246, -128.444, -6.88255, 0.55 ) }
    dend_12 { pt3dadd( -27.7546, -132.309, -8.89917, 0.55 ) }
    dend_12 { pt3dadd( -25.6159, -137.031, -11.599, 0.28 ) }
    dend_12 { pt3dadd( -25.0062, -138.199, -12.3935, 0.55 ) }
    dend_12 { pt3dadd( -24.0123, -139.972, -13.729, 0.28 ) }
    dend_12 { pt3dadd( -23.8588, -140.239, -13.9434, 0.55 ) }
    dend_12 { pt3dadd( -23.0777, -141.703, -15.0141, 0.28 ) }
    dend_12 { pt3dadd( -22.8887, -142.2, -15.2942, 0.55 ) }
    dend_12 { pt3dadd( -22.1621, -144.784, -16.349, 0.28 ) }
    dend_12 { pt3dadd( -21.9485, -145.665, -16.7124, 0.55 ) }
    dend_12 { pt3dadd( -21.4174, -148.214, -17.6534, 0.28 ) }
    dend_12 { pt3dadd( -21.2484, -149.015, -17.9457, 0.55 ) }
    dend_12 { pt3dadd( -20.703, -151.783, -18.9251, 0.28 ) }
    dend_12 { pt3dadd( -20.4438, -153.056, -19.3785, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -10.0753, -67.0951, 48.6842, 0.55 ) }
    dend_10 { pt3dadd( -14.1973, -75.104, 55.0073, 0.55 ) }
    dend_10 { pt3dadd( -19.5154, -82.2858, 61.3324, 0.55 ) }
    dend_10 { pt3dadd( -24.3562, -90.1612, 67.2806, 0.55 ) }
    dend_10 { pt3dadd( -29.3338, -98.1034, 73.03, 0.55 ) }
    dend_10 { pt3dadd( -32.9079, -107.145, 78.342, 0.55 ) }
    dend_10 { pt3dadd( -36.5395, -115.808, 84.1648, 0.55 ) }
    dend_10 { pt3dadd( -38.3283, -126.057, 88.2681, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -10.0753, -67.0951, 48.6842, 0.55 ) }
    dend_3 { pt3dadd( -9.88563, -74.1621, 55.6771, 0.55 ) }
    dend_3 { pt3dadd( -8.86255, -82.2938, 61.4504, 0.55 ) }
    dend_3 { pt3dadd( -9.32767, -90.7285, 66.865, 0.55 ) }
    dend_3 { pt3dadd( -10.07, -99.7374, 71.3132, 0.55 ) }
    dend_3 { pt3dadd( -10.4725, -108.649, 75.9866, 0.55 ) }
    dend_3 { pt3dadd( -10.9853, -117.184, 81.2506, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -47.0213, 47.0249, -13.0944, 0.83 ) }
    dend_60 { pt3dadd( -46.4042, 48.9461, -13.5736, 0.83 ) }
    dend_60 { pt3dadd( -45.0982, 53.473, -14.5551, 0.55 ) }
    dend_60 { pt3dadd( -44.5818, 55.3742, -14.8801, 0.83 ) }
    dend_60 { pt3dadd( -44.0669, 57.363, -15.1396, 0.55 ) }
    dend_60 { pt3dadd( -43.6287, 59.3128, -15.2239, 0.55 ) }
    dend_60 { pt3dadd( -43.4444, 60.2484, -15.1802, 0.28 ) }
    dend_60 { pt3dadd( -43.4055, 60.812, -15.0576, 0.55 ) }
    dend_60 { pt3dadd( -43.3787, 62.5325, -14.3207, 0.28 ) }
    dend_60 { pt3dadd( -43.3656, 63.2522, -13.9668, 0.55 ) }
    dend_60 { pt3dadd( -43.3911, 65.7089, -12.6638, 0.28 ) }
    dend_60 { pt3dadd( -43.4873, 67.626, -11.5972, 0.55 ) }
    dend_60 { pt3dadd( -43.8163, 70.5777, -9.91593, 0.28 ) }
    dend_60 { pt3dadd( -44.2165, 73.1492, -8.43616, 0.28 ) }
    dend_60 { pt3dadd( -44.5352, 74.5755, -7.62196, 0.55 ) }
    dend_60 { pt3dadd( -45.0174, 76.2663, -6.70518, 0.28 ) }
    dend_60 { pt3dadd( -45.3054, 77.0676, -6.28271, 0.55 ) }
    dend_60 { pt3dadd( -46.0487, 78.9932, -5.41585, 0.28 ) }
    dend_60 { pt3dadd( -46.5989, 80.308, -4.93792, 0.28 ) }
    dend_60 { pt3dadd( -47.1491, 81.6172, -4.51532, 0.28 ) }
    dend_60 { pt3dadd( -47.4136, 82.3103, -4.2824, 0.55 ) }
    dend_60 { pt3dadd( -48.3153, 85.1456, -3.32835, 0.28 ) }
    dend_60 { pt3dadd( -49.2542, 88.5325, -2.20037, 0.55 ) }
    dend_60 { pt3dadd( -49.5609, 89.7045, -1.80701, 0.55 ) }
    dend_60 { pt3dadd( -49.8959, 90.8681, -1.39982, 0.55 ) }
    dend_60 { pt3dadd( -50.7124, 93.3567, -0.627477, 0.55 ) }
    dend_60 { pt3dadd( -51.3309, 95.0048, -0.197033, 0.28 ) }
    dend_60 { pt3dadd( -51.6276, 95.6313, -0.0731191, 0.55 ) }
    dend_60 { pt3dadd( -52.5539, 97.3104, 0.239327, 0.28 ) }
    dend_60 { pt3dadd( -53.5782, 99.128, 0.479996, 0.55 ) }
    dend_60 { pt3dadd( -55.2297, 101.782, 0.635129, 0.28 ) }
    dend_60 { pt3dadd( -56.0115, 102.903, 0.618654, 0.28 ) }
    dend_60 { pt3dadd( -57.2136, 104.524, 0.384736, 0.55 ) }
    dend_60 { pt3dadd( -58.5277, 106.248, 0.0256952, 0.28 ) }
    dend_60 { pt3dadd( -58.7626, 106.524, -0.0573981, 0.55 ) }
    dend_60 { pt3dadd( -59.5992, 107.413, -0.398445, 0.28 ) }
    dend_60 { pt3dadd( -62.4848, 110.268, -1.61153, 0.55 ) }
    dend_60 { pt3dadd( -66.3828, 113.929, -3.61532, 0.28 ) }
    dend_60 { pt3dadd( -67.0771, 114.576, -4.05018, 0.55 ) }
    dend_60 { pt3dadd( -68.9575, 116.285, -5.31491, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -69.7353, 117.001, -5.8734, 0.28 ) }
    dend_60 { pt3dadd( -70.3933, 117.621, -6.40139, 0.55 ) }
    dend_60 { pt3dadd( -72.2101, 119.234, -8.23169, 0.28 ) }
    dend_60 { pt3dadd( -73.4975, 120.175, -9.54546, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -47.0213, 47.0249, -13.0944, 0.55 ) }
    dend_57 { pt3dadd( -47.1614, 47.8382, -12.9585, 0.55 ) }
    dend_57 { pt3dadd( -47.268, 48.3043, -12.8431, 0.28 ) }
    dend_57 { pt3dadd( -47.4309, 48.6116, -12.7081, 0.55 ) }
    dend_57 { pt3dadd( -47.8048, 49.3173, -12.3983, 0.28 ) }
    dend_57 { pt3dadd( -48.0675, 49.813, -12.1807, 0.55 ) }
    dend_57 { pt3dadd( -48.5517, 50.7267, -11.7795, 0.28 ) }
    dend_57 { pt3dadd( -48.889, 51.1868, -11.4984, 0.55 ) }
    dend_57 { pt3dadd( -50.1798, 52.138, -10.5441, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -167.85, -82.2414, 3.74802, 0.55 ) }
    dend_52 { pt3dadd( -174.201, -91.4851, 0.981103, 0.55 ) }
    dend_52 { pt3dadd( -178.853, -101.459, -2.75273, 0.55 ) }
    dend_52 { pt3dadd( -182.937, -110.47, -8.75083, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -167.85, -82.2414, 3.74802, 0.55 ) }
    dend_49 { pt3dadd( -174.194, -89.75, -0.108125, 0.55 ) }
    dend_49 { pt3dadd( -179.669, -97.214, -5.20614, 0.55 ) }
    dend_49 { pt3dadd( -184.752, -104.789, -10.5613, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -154.639, 17.887, 48.4406, 0.55 ) }
    dend_47 { pt3dadd( -161.271, 17.8094, 52.6656, 0.55 ) }
    dend_47 { pt3dadd( -168.258, 18.7791, 56.1601, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -154.639, 17.887, 48.4406, 0.55 ) }
    dend_46 { pt3dadd( -164.41, 16.7623, 50.631, 0.55 ) }
    dend_46 { pt3dadd( -174.024, 17.1978, 53.5959, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 109.952, -29.9219, -66.9561, 0.28 ) }
    dend_39 { pt3dadd( 118.733, -36.4601, -76.1154, 0.28 ) }
    dend_39 { pt3dadd( 119.605, -37.1153, -76.8879, 0.55 ) }
    dend_39 { pt3dadd( 121.078, -38.2215, -78.1923, 0.28 ) }
    dend_39 { pt3dadd( 122.317, -39.1529, -79.2905, 0.28 ) }
    dend_39 { pt3dadd( 123.959, -40.3859, -80.7443, 0.55 ) }
    dend_39 { pt3dadd( 126.122, -42.0115, -82.6611, 0.55 ) }
    dend_39 { pt3dadd( 128.9, -43.751, -83.0744, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 109.952, -29.9219, -66.9561, 0.55 ) }
    dend_36 { pt3dadd( 111.363, -31.8275, -67.9915, 0.55 ) }
    dend_36 { pt3dadd( 111.859, -32.712, -68.4535, 0.28 ) }
    dend_36 { pt3dadd( 112.644, -34.2518, -69.2737, 0.55 ) }
    dend_36 { pt3dadd( 114.373, -37.6437, -71.0805, 0.28 ) }
    dend_36 { pt3dadd( 115.571, -39.9944, -72.3326, 0.55 ) }
    dend_36 { pt3dadd( 117.6, -43.977, -74.4541, 0.28 ) }
    dend_36 { pt3dadd( 119.994, -48.9662, -77.364, 0.28 ) }
    dend_36 { pt3dadd( 121.018, -51.2899, -78.7412, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 164.939, -8.33796, -46.0734, 0.28 ) }
    dend_33 { pt3dadd( 167.114, -11.3171, -46.01, 0.28 ) }
    dend_33 { pt3dadd( 169.909, -15.2954, -45.5909, 0.28 ) }
    dend_33 { pt3dadd( 171.693, -17.8907, -45.2117, 0.55 ) }
    dend_33 { pt3dadd( 172.774, -19.3265, -44.9424, 0.28 ) }
    dend_33 { pt3dadd( 173.35, -20.1006, -44.7893, 0.28 ) }
    dend_33 { pt3dadd( 176.199, -23.9162, -44.0928, 0.55 ) }
    dend_33 { pt3dadd( 176.869, -24.7749, -43.8313, 0.28 ) }
    dend_33 { pt3dadd( 178.484, -27.0626, -42.976, 0.55 ) }
    dend_33 { pt3dadd( 179.853, -29.0446, -42.3096, 0.28 ) }
    dend_33 { pt3dadd( 181.038, -30.6492, -41.8058, 0.55 ) }
    dend_33 { pt3dadd( 182.414, -32.558, -41.3168, 0.55 ) }
    dend_33 { pt3dadd( 184.555, -35.5521, -40.9128, 0.55 ) }
    dend_33 { pt3dadd( 185.068, -36.2847, -40.8389, 0.55 ) }
    dend_33 { pt3dadd( 186.902, -39.021, -40.5855, 0.28 ) }
    dend_33 { pt3dadd( 187.609, -40.1381, -40.5073, 0.55 ) }
    dend_33 { pt3dadd( 188.594, -41.5602, -40.4208, 0.28 ) }
    dend_33 { pt3dadd( 189.973, -43.5705, -40.3887, 0.55 ) }
    dend_33 { pt3dadd( 192.197, -46.6879, -40.8071, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 164.939, -8.33796, -46.0734, 0.55 ) }
    dend_32 { pt3dadd( 163.023, -8.20852, -45.8848, 0.55 ) }
    dend_32 { pt3dadd( 161.468, -8.10339, -45.7315, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -0.404942, -32.366, 5.48939, 0.83 ) }
    dend_17 { pt3dadd( -0.279762, -32.6237, 5.47975, 0.83 ) }
    dend_17 { pt3dadd( 1.1444, -34.895, 5.55553, 0.83 ) }
    dend_17 { pt3dadd( 2.40211, -36.8851, 5.49324, 0.55 ) }
    dend_17 { pt3dadd( 3.40549, -38.4727, 5.44354, 0.55 ) }
    dend_17 { pt3dadd( 5.53822, -41.8472, 5.33791, 0.83 ) }
    dend_17 { pt3dadd( 8.12508, -45.9402, 5.20978, 0.55 ) }
    dend_17 { pt3dadd( 9.53091, -48.0811, 5.18816, 0.83 ) }
    dend_17 { pt3dadd( 12.0008, -51.4801, 5.32021, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -0.404942, -32.366, 5.48939, 0.55 ) }
    dend_14 { pt3dadd( -1.94512, -33.5847, 2.42544, 0.55 ) }
    dend_14 { pt3dadd( -3.59831, -34.8928, -0.86334, 0.55 ) }
    dend_14 { pt3dadd( -5.54992, -36.437, -4.74577, 0.55 ) }
    dend_14 { pt3dadd( -7.9198, -38.3122, -9.4603, 0.55 ) }
    dend_14 { pt3dadd( -9.26462, -39.3763, -12.1356, 0.55 ) }
    dend_14 { pt3dadd( -9.53478, -39.59, -12.6731, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -10.9853, -117.184, 81.2506, 0.55 ) }
    dend_7 { pt3dadd( -10.9083, -122.915, 85.2518, 0.55 ) }
    dend_7 { pt3dadd( -9.88158, -128.993, 88.6038, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -10.9853, -117.184, 81.2506, 0.55 ) }
    dend_4 { pt3dadd( -11.2698, -127.581, 87.2294, 0.55 ) }
    dend_4 { pt3dadd( -12.1912, -137.837, 93.3442, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -50.1798, 52.138, -10.5441, 0.28 ) }
    dend_59 { pt3dadd( -51.6394, 53.4903, -8.92952, 0.28 ) }
    dend_59 { pt3dadd( -52.1974, 53.9899, -8.24501, 0.55 ) }
    dend_59 { pt3dadd( -53.7982, 55.431, -6.22176, 0.28 ) }
    dend_59 { pt3dadd( -54.5847, 56.1613, -5.31153, 0.55 ) }
    dend_59 { pt3dadd( -56.724, 58.1534, -2.9362, 0.28 ) }
    dend_59 { pt3dadd( -58.8982, 60.178, -0.522001, 0.55 ) }
    dend_59 { pt3dadd( -62.5027, 63.3053, 3.47438, 0.28 ) }
    dend_59 { pt3dadd( -63.27, 63.9782, 4.32738, 0.55 ) }
    dend_59 { pt3dadd( -64.9495, 65.5889, 6.15688, 0.28 ) }
    dend_59 { pt3dadd( -65.6038, 66.264, 6.88287, 0.55 ) }
    dend_59 { pt3dadd( -72.8824, 70.5131, 12.6675, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -80.5883, 76.2669, 16.3117, 0.55 ) }
    dend_59 { pt3dadd( -87.4015, 82.0787, 21.3915, 0.55 ) }
    dend_59 { pt3dadd( -92.8753, 89.1826, 26.6114, 0.55 ) }
    dend_59 { pt3dadd( -99.315, 96.0006, 30.994, 0.55 ) }
    dend_59 { pt3dadd( -106.698, 101.074, 35.9877, 0.55 ) }
    dend_59 { pt3dadd( -113.597, 105.11, 42.3501, 0.55 ) }
    dend_59 { pt3dadd( -119.728, 107.877, 49.9848, 0.55 ) }
    dend_59 { pt3dadd( -125.84, 111.291, 57.398, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -50.1798, 52.138, -10.5441, 0.55 ) }
    dend_58 { pt3dadd( -51.3196, 51.623, -10.6463, 0.55 ) }
    dend_58 { pt3dadd( -51.9094, 51.3367, -10.7071, 0.28 ) }
    dend_58 { pt3dadd( -52.3484, 51.1237, -10.7524, 0.55 ) }
    dend_58 { pt3dadd( -52.7142, 50.9462, -10.7901, 0.28 ) }
    dend_58 { pt3dadd( -52.9704, 50.8218, -10.8165, 0.55 ) }
    dend_58 { pt3dadd( -53.677, 50.4789, -10.8894, 0.28 ) }
    dend_58 { pt3dadd( -54.1239, 50.2328, -11.0032, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -182.937, -110.47, -8.75083, 0.55 ) }
    dend_54 { pt3dadd( -188.277, -122.609, -13.8349, 0.55 ) }
    dend_54 { pt3dadd( -192.823, -135.488, -17.8146, 0.55 ) }
    dend_54 { pt3dadd( -197.272, -147.393, -24.2148, 0.55 ) }
    dend_54 { pt3dadd( -202.368, -159.931, -28.5433, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -182.937, -110.47, -8.75083, 0.55 ) }
    dend_53 { pt3dadd( -189.762, -115.47, -16.9309, 0.55 ) }
    dend_53 { pt3dadd( -196.42, -118.678, -26.0002, 0.55 ) }
    dend_53 { pt3dadd( -203.624, -123.522, -33.9299, 0.55 ) }
    dend_53 { pt3dadd( -212.919, -126.878, -40.1539, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -184.752, -104.789, -10.5613, 0.55 ) }
    dend_51 { pt3dadd( -190.296, -109.344, -17.5114, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -184.752, -104.789, -10.5613, 0.55 ) }
    dend_50 { pt3dadd( -188.615, -115.494, -13.9496, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 128.9, -43.751, -83.0744, 0.28 ) }
    dend_41 { pt3dadd( 130.972, -44.6063, -83.6116, 0.28 ) }
    dend_41 { pt3dadd( 131.935, -45.0036, -83.8611, 0.55 ) }
    dend_41 { pt3dadd( 133.77, -45.7613, -84.3369, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 128.9, -43.751, -83.0744, 0.55 ) }
    dend_40 { pt3dadd( 128.838, -45.1279, -83.8885, 0.55 ) }
    dend_40 { pt3dadd( 128.713, -47.8822, -85.5168, 0.28 ) }
    dend_40 { pt3dadd( 128.673, -48.7793, -86.0472, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 121.018, -51.2899, -78.7412, 0.28 ) }
    dend_38 { pt3dadd( 122.908, -55.0595, -80.9038, 0.28 ) }
    dend_38 { pt3dadd( 123.844, -56.9261, -81.9746, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 121.018, -51.2899, -78.7412, 0.55 ) }
    dend_37 { pt3dadd( 119.566, -52.037, -77.7734, 0.55 ) }
    dend_37 { pt3dadd( 115.518, -54.1203, -75.0748, 0.28 ) }
    dend_37 { pt3dadd( 114.557, -54.6152, -74.4337, 0.55 ) }
    dend_37 { pt3dadd( 111.926, -55.969, -72.6799, 0.28 ) }
    dend_37 { pt3dadd( 110.23, -56.8417, -71.5495, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 12.0008, -51.4801, 5.32021, 0.83 ) }
    dend_23 { pt3dadd( 12.0336, -51.7611, 5.29766, 0.83 ) }
    dend_23 { pt3dadd( 12.5234, -55.4319, 5.09532, 0.83 ) }
    dend_23 { pt3dadd( 12.6764, -58.1779, 5.12756, 0.83 ) }
    dend_23 { pt3dadd( 12.6669, -60.8183, 5.43256, 0.83 ) }
    dend_23 { pt3dadd( 12.5547, -64.3207, 6.10071, 0.83 ) }
    dend_23 { pt3dadd( 12.3293, -68.3499, 7.02141, 0.83 ) }
    dend_23 { pt3dadd( 12.1132, -72.836, 8.2744, 0.83 ) }
    dend_23 { pt3dadd( 11.9191, -77.1829, 9.68508, 0.83 ) }
    dend_23 { pt3dadd( 11.3356, -82.532, 11.3233, 0.83 ) }
    dend_23 { pt3dadd( 10.927, -84.9991, 11.9513, 0.83 ) }
    dend_23 { pt3dadd( 10.6043, -86.8609, 12.3116, 0.83 ) }
    dend_23 { pt3dadd( 9.90687, -90.4381, 12.9361, 0.83 ) }
    dend_23 { pt3dadd( 9.34146, -93.6504, 13.3206, 0.83 ) }
    dend_23 { pt3dadd( 8.43586, -100.536, 13.3837, 0.83 ) }
    dend_23 { pt3dadd( 7.94687, -104.327, 12.9487, 0.83 ) }
    dend_23 { pt3dadd( 7.47589, -107.834, 12.3073, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 12.0008, -51.4801, 5.32021, 0.55 ) }
    dend_18 { pt3dadd( 10.7719, -54.5441, 5.42448, 0.55 ) }
    dend_18 { pt3dadd( 9.83486, -56.7642, 5.65488, 0.55 ) }
    dend_18 { pt3dadd( 9.25864, -58.1785, 5.94049, 0.55 ) }
    dend_18 { pt3dadd( 8.43743, -60.3827, 6.60116, 0.55 ) }
    dend_18 { pt3dadd( 6.89423, -64.7353, 8.18732, 0.55 ) }
    dend_18 { pt3dadd( 5.66752, -68.0197, 9.7321, 0.55 ) }
    dend_18 { pt3dadd( 4.66138, -70.6436, 11.2401, 0.55 ) }
    dend_18 { pt3dadd( 3.56616, -73.2899, 12.9383, 0.55 ) }
    dend_18 { pt3dadd( 2.62985, -75.4815, 14.4556, 0.28 ) }
    dend_18 { pt3dadd( 1.81627, -77.2647, 15.9463, 0.55 ) }
    dend_18 { pt3dadd( 0.221828, -80.4974, 19.0945, 0.55 ) }
    dend_18 { pt3dadd( -0.88062, -82.4751, 21.2232, 0.55 ) }
    dend_18 { pt3dadd( -1.50921, -83.5837, 22.4038, 0.55 ) }
    dend_18 { pt3dadd( -2.30903, -84.8953, 23.7233, 0.83 ) }
    dend_18 { pt3dadd( -4.69107, -88.7939, 27.3788, 0.28 ) }
    dend_18 { pt3dadd( -5.47497, -90.0852, 28.5543, 0.55 ) }
    dend_18 { pt3dadd( -6.81254, -92.4171, 30.6091, 0.28 ) }
    dend_18 { pt3dadd( -7.22896, -93.1341, 31.2936, 0.55 ) }
    dend_18 { pt3dadd( -8.11203, -94.8165, 32.8771, 0.28 ) }
    dend_18 { pt3dadd( -8.60154, -95.7754, 33.7093, 0.55 ) }
    dend_18 { pt3dadd( -10.3075, -98.9282, 35.5802, 0.55 ) }
    dend_18 { pt3dadd( -13.1445, -107.263, 44.0218, 0.55 ) }
    dend_18 { pt3dadd( -15.4726, -115.164, 52.9831, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -9.53478, -39.59, -12.6731, 0.55 ) }
    dend_16 { pt3dadd( -11.7972, -40.6278, -15.1459, 0.55 ) }
    dend_16 { pt3dadd( -12.4689, -40.8745, -15.8412, 0.55 ) }
    dend_16 { pt3dadd( -14.1589, -41.4963, -17.5204, 0.55 ) }
    dend_16 { pt3dadd( -17.8705, -42.74, -21.0313, 0.28 ) }
    dend_16 { pt3dadd( -18.4252, -42.9122, -21.5179, 0.55 ) }
    dend_16 { pt3dadd( -20.7395, -43.7025, -23.4568, 0.55 ) }
    dend_16 { pt3dadd( -23.9204, -44.7954, -25.8021, 0.55 ) }
    dend_16 { pt3dadd( -25.1403, -45.1741, -26.6689, 0.28 ) }
    dend_16 { pt3dadd( -26.2147, -45.4315, -27.366, 0.28 ) }
    dend_16 { pt3dadd( -28.0575, -45.8401, -28.3118, 0.55 ) }
    dend_16 { pt3dadd( -30.3098, -46.2284, -29.5455, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -32.399, -46.4042, -30.727, 0.55 ) }
    dend_16 { pt3dadd( -34.0216, -46.4054, -31.6077, 0.55 ) }
    dend_16 { pt3dadd( -35.1433, -46.3109, -32.2464, 0.55 ) }
    dend_16 { pt3dadd( -38.4458, -45.8812, -34.215, 0.55 ) }
    dend_16 { pt3dadd( -41.9352, -45.1936, -36.219, 0.55 ) }
    dend_16 { pt3dadd( -43.3814, -44.8311, -37.0111, 0.28 ) }
    dend_16 { pt3dadd( -44.7541, -44.5076, -37.7883, 0.55 ) }
    dend_16 { pt3dadd( -47.5313, -44.0319, -39.3414, 0.28 ) }
    dend_16 { pt3dadd( -48.4648, -43.8989, -39.8555, 0.83 ) }
    dend_16 { pt3dadd( -50.2113, -43.6334, -40.7017, 0.28 ) }
    dend_16 { pt3dadd( -51.4671, -43.5412, -41.1565, 0.55 ) }
    dend_16 { pt3dadd( -53.2881, -43.4724, -41.7829, 0.28 ) }
    dend_16 { pt3dadd( -54.014, -43.4362, -42.0093, 0.55 ) }
    dend_16 { pt3dadd( -55.3583, -43.3967, -42.3599, 0.55 ) }
    dend_16 { pt3dadd( -57.3988, -43.1355, -42.8112, 0.55 ) }
    dend_16 { pt3dadd( -58.7351, -42.8849, -43.0327, 0.28 ) }
    dend_16 { pt3dadd( -59.8172, -42.5528, -43.1269, 0.55 ) }
    dend_16 { pt3dadd( -61.0994, -42.0069, -43.2404, 0.28 ) }
    dend_16 { pt3dadd( -61.3113, -41.9004, -43.2655, 0.55 ) }
    dend_16 { pt3dadd( -63.2767, -40.8658, -43.8139, 0.28 ) }
    dend_16 { pt3dadd( -64.7078, -40.0832, -44.3532, 0.55 ) }
    dend_16 { pt3dadd( -66.6066, -38.9232, -45.3048, 0.83 ) }
    dend_16 { pt3dadd( -68.1756, -37.9286, -46.2507, 0.28 ) }
    dend_16 { pt3dadd( -68.5814, -37.6735, -46.5322, 0.55 ) }
    dend_16 { pt3dadd( -71.6948, -35.7562, -48.8527, 0.28 ) }
    dend_16 { pt3dadd( -72.2399, -35.428, -49.3089, 0.55 ) }
    dend_16 { pt3dadd( -73.8539, -34.3516, -50.7469, 0.28 ) }
    dend_16 { pt3dadd( -74.2705, -34.0746, -51.121, 0.55 ) }
    dend_16 { pt3dadd( -75.3397, -33.3555, -52.0124, 0.28 ) }
    dend_16 { pt3dadd( -76.0972, -32.839, -52.5991, 0.55 ) }
    dend_16 { pt3dadd( -77.7881, -31.6925, -53.6711, 0.28 ) }
    dend_16 { pt3dadd( -78.7902, -31.0822, -54.2727, 0.55 ) }
    dend_16 { pt3dadd( -80.9247, -29.9142, -55.4515, 0.28 ) }
    dend_16 { pt3dadd( -81.5596, -29.6009, -55.7938, 0.55 ) }
    dend_16 { pt3dadd( -82.5531, -29.1865, -56.2976, 0.28 ) }
    dend_16 { pt3dadd( -83.3943, -28.8389, -56.6855, 0.55 ) }
    dend_16 { pt3dadd( -85.1397, -28.1432, -57.3918, 0.28 ) }
    dend_16 { pt3dadd( -85.6649, -27.946, -57.5884, 0.55 ) }
    dend_16 { pt3dadd( -89.5661, -26.4095, -58.8745, 0.28 ) }
    dend_16 { pt3dadd( -90.9341, -25.7779, -59.2099, 0.55 ) }
    dend_16 { pt3dadd( -93.3728, -24.5393, -59.6567, 0.28 ) }
    dend_16 { pt3dadd( -94.4719, -23.9387, -59.825, 0.55 ) }
    dend_16 { pt3dadd( -96.9856, -22.5836, -60.0732, 0.28 ) }
    dend_16 { pt3dadd( -97.9055, -22.1282, -60.1266, 0.55 ) }
    dend_16 { pt3dadd( -101.217, -20.7847, -60.153, 0.28 ) }
    dend_16 { pt3dadd( -102.593, -20.3992, -60.1548, 0.55 ) }
    dend_16 { pt3dadd( -104.547, -20.1761, -60.141, 0.55 ) }
    dend_16 { pt3dadd( -105.745, -20.1172, -60.1057, 0.55 ) }
    dend_16 { pt3dadd( -108.173, -20.0671, -59.8505, 0.28 ) }
    dend_16 { pt3dadd( -110.548, -20.0463, -59.451, 0.28 ) }
    dend_16 { pt3dadd( -112.52, -20.0229, -59.0608, 0.55 ) }
    dend_16 { pt3dadd( -114.906, -19.7832, -58.3165, 0.28 ) }
    dend_16 { pt3dadd( -116.069, -19.5128, -57.7856, 0.55 ) }
    dend_16 { pt3dadd( -118.798, -18.3962, -56.2307, 0.28 ) }
    dend_16 { pt3dadd( -120.142, -17.5251, -55.0779, 0.55 ) }
    dend_16 { pt3dadd( -120.965, -16.8094, -54.1242, 0.28 ) }
    dend_16 { pt3dadd( -121.822, -16.006, -52.7964, 0.55 ) }
    dend_16 { pt3dadd( -122.847, -14.9511, -50.9719, 0.28 ) }
    dend_16 { pt3dadd( -123.24, -14.5824, -50.2865, 0.55 ) }
    dend_16 { pt3dadd( -125.379, -12.9537, -47.0584, 0.28 ) }
    dend_16 { pt3dadd( -126.105, -12.4449, -45.9797, 0.55 ) }
    dend_16 { pt3dadd( -127.813, -11.3299, -43.3615, 0.28 ) }
    dend_16 { pt3dadd( -128.742, -10.7403, -41.9398, 0.55 ) }
    dend_16 { pt3dadd( -129.507, -10.2576, -40.773, 0.55 ) }
    dend_16 { pt3dadd( -130.433, -9.69053, -39.4096, 0.28 ) }
    dend_16 { pt3dadd( -130.953, -9.40217, -38.8006, 0.55 ) }
    dend_16 { pt3dadd( -132.742, -8.35917, -36.8829, 0.28 ) }
    dend_16 { pt3dadd( -133.67, -7.67484, -35.8544, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -9.53478, -39.59, -12.6731, 0.55 ) }
    dend_15 { pt3dadd( -9.14014, -39.6981, -13.7609, 0.55 ) }
    dend_15 { pt3dadd( -8.71253, -39.6744, -14.8405, 0.55 ) }
    dend_15 { pt3dadd( -8.11307, -39.5412, -16.1544, 0.55 ) }
    dend_15 { pt3dadd( -7.58056, -39.3366, -17.1996, 0.55 ) }
    dend_15 { pt3dadd( -3.6133, -37.1905, -23.7395, 0.55 ) }
    dend_15 { pt3dadd( -2.73205, -36.5153, -25.222, 0.55 ) }
    dend_15 { pt3dadd( -1.46504, -35.3376, -27.4383, 0.55 ) }
    dend_15 { pt3dadd( -0.575904, -34.445, -29.0119, 0.55 ) }
    dend_15 { pt3dadd( 0.314548, -33.4751, -30.5153, 0.28 ) }
    dend_15 { pt3dadd( 1.76796, -31.834, -32.7352, 0.55 ) }
    dend_15 { pt3dadd( 4.07108, -29.2712, -35.8859, 0.28 ) }
    dend_15 { pt3dadd( 4.22142, -29.1154, -36.2248, 0.55 ) }
    dend_15 { pt3dadd( 4.66844, -28.5887, -38.7341, 0.28 ) }
    dend_15 { pt3dadd( 4.68809, -28.3558, -40.4816, 0.55 ) }
    dend_15 { pt3dadd( 4.5367, -28.2505, -42.3837, 0.55 ) }
    dend_15 { pt3dadd( 4.22279, -28.2445, -45.8056, 0.55 ) }
    dend_15 { pt3dadd( 3.62683, -28.2813, -52.5242, 0.55 ) }
    dend_15 { pt3dadd( 3.30822, -28.3513, -57.0437, 0.55 ) }
    dend_15 { pt3dadd( 3.24028, -28.388, -58.6064, 0.55 ) }
    dend_15 { pt3dadd( 3.0335, -28.5329, -68.8799, 0.55 ) }
    dend_15 { pt3dadd( 3.0932, -28.5244, -71.6607, 0.55 ) }
    dend_15 { pt3dadd( 3.24395, -28.5142, -73.2177, 0.55 ) }
    dend_15 { pt3dadd( 3.91533, -28.5684, -76.8187, 0.55 ) }
    dend_15 { pt3dadd( 6.05047, -29.1314, -85.3796, 0.55 ) }
    dend_15 { pt3dadd( 6.7285, -29.3769, -87.6643, 0.28 ) }
    dend_15 { pt3dadd( 7.21571, -29.573, -88.9379, 0.55 ) }
    dend_15 { pt3dadd( 7.97715, -29.9449, -90.8148, 0.28 ) }
    dend_15 { pt3dadd( 8.35139, -30.1785, -91.5651, 0.55 ) }
    dend_15 { pt3dadd( 10.0042, -31.2212, -93.4748, 0.28 ) }
    dend_15 { pt3dadd( 11.7086, -32.6594, -94.0064, 0.55 ) }
    dend_15 { pt3dadd( 12.7508, -33.6889, -94.2574, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 13.7363, -34.8302, -94.3688, 0.55 ) }
    dend_15 { pt3dadd( 14.621, -36.0786, -94.3906, 0.28 ) }
    dend_15 { pt3dadd( 15.0031, -36.7235, -94.4145, 0.55 ) }
    dend_15 { pt3dadd( 15.907, -38.4161, -94.3968, 0.28 ) }
    dend_15 { pt3dadd( 16.1276, -38.9213, -94.4635, 0.55 ) }
    dend_15 { pt3dadd( 17.3527, -41.8149, -95.0023, 0.28 ) }
    dend_15 { pt3dadd( 17.9274, -43.1487, -95.4261, 0.55 ) }
    dend_15 { pt3dadd( 19.2018, -45.9874, -96.6628, 0.28 ) }
    dend_15 { pt3dadd( 19.6943, -47.0287, -97.2405, 0.55 ) }
    dend_15 { pt3dadd( 21.4094, -50.4372, -99.3683, 0.28 ) }
    dend_15 { pt3dadd( 21.8255, -51.2649, -99.9218, 0.55 ) }
    dend_15 { pt3dadd( 23.0539, -53.8875, -101.756, 0.28 ) }
    dend_15 { pt3dadd( 23.3144, -54.5047, -102.133, 0.55 ) }
    dend_15 { pt3dadd( 23.9514, -56.1385, -103.104, 0.28 ) }
    dend_15 { pt3dadd( 24.3137, -57.0842, -103.76, 0.55 ) }
    dend_15 { pt3dadd( 24.6886, -58.0098, -104.483, 0.55 ) }
    dend_15 { pt3dadd( 25.4399, -59.8567, -105.912, 0.28 ) }
    dend_15 { pt3dadd( 25.9875, -60.9915, -106.947, 0.55 ) }
    dend_15 { pt3dadd( 27.7995, -63.7845, -110.288, 0.28 ) }
    dend_15 { pt3dadd( 28.5086, -64.6775, -111.635, 0.55 ) }
    dend_15 { pt3dadd( 29.0145, -65.2401, -112.552, 0.28 ) }
    dend_15 { pt3dadd( 29.5439, -65.7481, -113.47, 0.55 ) }
    dend_15 { pt3dadd( 31.2299, -67.1549, -116.261, 0.28 ) }
    dend_15 { pt3dadd( 32.5331, -68.2495, -118.328, 0.55 ) }
    dend_15 { pt3dadd( 34.8663, -70.3565, -121.628, 0.28 ) }
    dend_15 { pt3dadd( 35.6045, -71.0113, -122.663, 0.55 ) }
    dend_15 { pt3dadd( 37.1006, -72.2117, -124.491, 0.28 ) }
    dend_15 { pt3dadd( 37.6221, -72.6055, -125.051, 0.55 ) }
    dend_15 { pt3dadd( 38.545, -73.2369, -125.781, 0.28 ) }
    dend_15 { pt3dadd( 39.3896, -73.7685, -126.35, 0.55 ) }
    dend_15 { pt3dadd( 41.7734, -75.0786, -127.639, 0.28 ) }
    dend_15 { pt3dadd( 44.5284, -76.4586, -129.07, 0.28 ) }
    dend_15 { pt3dadd( 45.9581, -77.0896, -129.693, 0.28 ) }
    dend_15 { pt3dadd( 47.3739, -77.6754, -130.407, 0.55 ) }
    dend_15 { pt3dadd( 49.4436, -78.426, -131.459, 0.28 ) }
    dend_15 { pt3dadd( 50.3712, -78.7451, -131.906, 0.83 ) }
    dend_15 { pt3dadd( 52.7649, -79.5949, -132.957, 0.28 ) }
    dend_15 { pt3dadd( 53.7843, -79.9877, -133.47, 0.55 ) }
    dend_15 { pt3dadd( 58.1907, -81.897, -135.942, 0.28 ) }
    dend_15 { pt3dadd( 60.3323, -82.8771, -137.36, 0.28 ) }
    dend_15 { pt3dadd( 61.8521, -83.5873, -138.498, 0.55 ) }
    dend_15 { pt3dadd( 62.6976, -84.0211, -139.268, 0.55 ) }
    dend_15 { pt3dadd( 64.8636, -85.2065, -141.51, 0.28 ) }
    dend_15 { pt3dadd( 66.8455, -86.431, -143.702, 0.55 ) }
    dend_15 { pt3dadd( 68.6469, -87.6201, -145.699, 0.28 ) }
    dend_15 { pt3dadd( 70.2332, -88.7249, -147.607, 0.55 ) }
    dend_15 { pt3dadd( 71.5496, -89.6169, -149.174, 0.28 ) }
    dend_15 { pt3dadd( 72.6614, -90.2434, -150.386, 0.55 ) }
    dend_15 { pt3dadd( 75.4134, -91.5577, -153.166, 0.28 ) }
    dend_15 { pt3dadd( 76.8361, -92.2223, -154.509, 0.55 ) }
    dend_15 { pt3dadd( 79.0091, -93.2295, -156.439, 0.28 ) }
    dend_15 { pt3dadd( 80.8088, -93.9908, -157.973, 0.55 ) }
    dend_15 { pt3dadd( 85.028, -95.546, -161.567, 0.28 ) }
    dend_15 { pt3dadd( 86.6996, -96.0578, -163.155, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -9.88158, -128.993, 88.6038, 0.55 ) }
    dend_9 { pt3dadd( -9.75716, -138.754, 93.0361, 0.55 ) }
    dend_9 { pt3dadd( -8.81321, -149.29, 95.0998, 0.55 ) }
    dend_9 { pt3dadd( -8.37144, -159.45, 98.5902, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -9.88158, -128.993, 88.6038, 0.55 ) }
    dend_8 { pt3dadd( -8.90247, -136.605, 93.9595, 0.55 ) }
    dend_8 { pt3dadd( -9.10694, -143.115, 100.583, 0.55 ) }
    dend_8 { pt3dadd( -9.25023, -148.057, 108.342, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -12.1912, -137.837, 93.3442, 0.55 ) }
    dend_6 { pt3dadd( -11.6816, -147.526, 101.11, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -12.1912, -137.837, 93.3442, 0.55 ) }
    dend_5 { pt3dadd( -13.5411, -150.214, 100.153, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 7.47589, -107.834, 12.3073, 0.83 ) }
    dend_25 { pt3dadd( 8.29186, -111.02, 12.8769, 0.83 ) }
    dend_25 { pt3dadd( 9.11027, -113.691, 13.5389, 0.83 ) }
    dend_25 { pt3dadd( 9.92378, -116.345, 14.197, 0.83 ) }
    dend_25 { pt3dadd( 10.6963, -118.866, 14.822, 0.83 ) }
    dend_25 { pt3dadd( 11.8869, -122.751, 15.7852, 0.83 ) }
    dend_25 { pt3dadd( 13.0689, -126.608, 16.7414, 0.83 ) }
    dend_25 { pt3dadd( 14.0697, -129.136, 17.6782, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 7.47589, -107.834, 12.3073, 0.55 ) }
    dend_24 { pt3dadd( 9.13447, -110.165, 12.288, 0.55 ) }
    dend_24 { pt3dadd( 10.3784, -112.003, 11.9731, 0.55 ) }
    dend_24 { pt3dadd( 11.2263, -113.371, 11.6188, 0.55 ) }
    dend_24 { pt3dadd( 11.9707, -114.992, 11.0362, 0.83 ) }
    dend_24 { pt3dadd( 12.6811, -116.847, 10.1769, 0.55 ) }
    dend_24 { pt3dadd( 13.3759, -118.662, 9.33639, 0.83 ) }
    dend_24 { pt3dadd( 14.0087, -120.642, 8.26607, 0.55 ) }
    dend_24 { pt3dadd( 14.3635, -121.797, 7.5465, 0.83 ) }
    dend_24 { pt3dadd( 15.3395, -125.553, 4.96475, 0.55 ) }
    dend_24 { pt3dadd( 15.865, -128.516, 2.79177, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -15.4726, -115.164, 52.9831, 0.55 ) }
    dend_20 { pt3dadd( -18.6639, -122.094, 57.8096, 0.55 ) }
    dend_20 { pt3dadd( -23.0123, -128.112, 62.8326, 0.55 ) }
    dend_20 { pt3dadd( -27.928, -133.252, 68.2042, 0.55 ) }
    dend_20 { pt3dadd( -33.5526, -137.307, 73.7192, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -15.4726, -115.164, 52.9831, 0.55 ) }
    dend_19 { pt3dadd( -18.5862, -123.096, 59.6531, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 14.0697, -129.136, 17.6782, 0.55 ) }
    dend_27 { pt3dadd( 14.2588, -131.31, 18.3473, 0.55 ) }
    dend_27 { pt3dadd( 14.5712, -134.079, 19.2718, 0.55 ) }
    dend_27 { pt3dadd( 14.8675, -136.695, 20.1306, 0.55 ) }
    dend_27 { pt3dadd( 15.0583, -138.556, 20.7128, 0.55 ) }
    dend_27 { pt3dadd( 15.3645, -141.882, 21.7007, 0.55 ) }
    dend_27 { pt3dadd( 16.3716, -151.24, 24.2511, 0.55 ) }
    dend_27 { pt3dadd( 16.7926, -154.421, 24.9868, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 17.1017, -156.67, 25.3967, 0.55 ) }
    dend_27 { pt3dadd( 17.4821, -159.25, 25.6666, 0.55 ) }
    dend_27 { pt3dadd( 17.7496, -161.254, 25.7042, 0.55 ) }
    dend_27 { pt3dadd( 18.5142, -165.944, 25.611, 0.55 ) }
    dend_27 { pt3dadd( 18.976, -169.51, 25.5322, 0.55 ) }
    dend_27 { pt3dadd( 19.3372, -171.846, 25.5481, 0.55 ) }
    dend_27 { pt3dadd( 20.2442, -177.886, 25.8856, 0.55 ) }
    dend_27 { pt3dadd( 20.8239, -181.938, 26.2846, 0.55 ) }
    dend_27 { pt3dadd( 21.5867, -187.147, 27.0824, 0.55 ) }
    dend_27 { pt3dadd( 22.5135, -193.029, 28.4283, 0.55 ) }
    dend_27 { pt3dadd( 23.2971, -196.936, 29.5667, 0.55 ) }
    dend_27 { pt3dadd( 23.8129, -199.239, 30.3009, 0.55 ) }
    dend_27 { pt3dadd( 24.2501, -201.364, 30.9709, 0.55 ) }
    dend_27 { pt3dadd( 24.8517, -204.06, 31.6965, 0.55 ) }
    dend_27 { pt3dadd( 26.2385, -210.586, 33.0149, 0.55 ) }
    dend_27 { pt3dadd( 26.8606, -213.113, 33.436, 0.55 ) }
    dend_27 { pt3dadd( 27.4887, -215.93, 33.8849, 0.55 ) }
    dend_27 { pt3dadd( 28.3986, -220.164, 34.5369, 0.55 ) }
    dend_27 { pt3dadd( 28.9505, -223.424, 35.0651, 0.55 ) }
    dend_27 { pt3dadd( 29.3024, -226.532, 35.5244, 0.55 ) }
    dend_27 { pt3dadd( 29.5106, -229.5, 35.9601, 0.55 ) }
    dend_27 { pt3dadd( 29.665, -232.396, 36.4247, 0.55 ) }
    dend_27 { pt3dadd( 29.7876, -234.459, 36.7359, 0.55 ) }
    dend_27 { pt3dadd( 30.0115, -237.837, 37.1332, 0.55 ) }
    dend_27 { pt3dadd( 30.2346, -241.913, 37.3116, 0.55 ) }
    dend_27 { pt3dadd( 30.3966, -243.898, 37.2564, 0.55 ) }
    dend_27 { pt3dadd( 30.5609, -245.647, 37.082, 0.55 ) }
    dend_27 { pt3dadd( 31.0215, -248.95, 36.569, 0.55 ) }
    dend_27 { pt3dadd( 31.2949, -251.048, 36.1876, 0.55 ) }
    dend_27 { pt3dadd( 31.6568, -253.628, 35.8114, 0.55 ) }
    dend_27 { pt3dadd( 31.8423, -255.438, 35.6505, 0.55 ) }
    dend_27 { pt3dadd( 32.2381, -260.14, 35.4068, 0.55 ) }
    dend_27 { pt3dadd( 32.4437, -263.651, 35.4641, 0.55 ) }
    dend_27 { pt3dadd( 32.661, -269.068, 35.978, 0.55 ) }
    dend_27 { pt3dadd( 32.8634, -272.543, 36.6288, 0.55 ) }
    dend_27 { pt3dadd( 33.0449, -276.186, 37.4263, 0.28 ) }
    dend_27 { pt3dadd( 33.0806, -277.649, 37.8044, 0.28 ) }
    dend_27 { pt3dadd( 33.1406, -281.184, 39.0346, 0.28 ) }
    dend_27 { pt3dadd( 33.1578, -284.437, 40.423, 0.28 ) }
    dend_27 { pt3dadd( 33.5531, -288.696, 42.7028, 0.28 ) }
    dend_27 { pt3dadd( 35.7616, -298.349, 45.4455, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 14.0697, -129.136, 17.6782, 0.55 ) }
    dend_26 { pt3dadd( 15.154, -129.497, 18.162, 0.55 ) }
    dend_26 { pt3dadd( 17.3491, -130.432, 19.3312, 0.55 ) }
    dend_26 { pt3dadd( 19.2271, -131.36, 20.4295, 0.28 ) }
    dend_26 { pt3dadd( 21.2283, -132.417, 21.6735, 0.55 ) }
    dend_26 { pt3dadd( 22.3956, -133.082, 22.5941, 0.28 ) }
    dend_26 { pt3dadd( 24.3697, -134.27, 24.3925, 0.55 ) }
    dend_26 { pt3dadd( 25.1268, -134.897, 25.4108, 0.28 ) }
    dend_26 { pt3dadd( 25.3831, -135.12, 25.8393, 0.28 ) }
    dend_26 { pt3dadd( 25.8235, -135.426, 26.5819, 0.55 ) }
    dend_26 { pt3dadd( 27.6058, -136.405, 29.2798, 0.28 ) }
    dend_26 { pt3dadd( 28.3799, -136.782, 30.3853, 0.55 ) }
    dend_26 { pt3dadd( 30.8537, -137.888, 33.3778, 0.28 ) }
    dend_26 { pt3dadd( 32.2423, -138.429, 34.8801, 0.28 ) }
    dend_26 { pt3dadd( 34.0186, -139.138, 36.6336, 0.55 ) }
    dend_26 { pt3dadd( 36.7587, -140.268, 38.9817, 0.28 ) }
    dend_26 { pt3dadd( 37.1449, -140.42, 39.255, 0.55 ) }
    dend_26 { pt3dadd( 39.0906, -141.172, 40.4629, 0.28 ) }
    dend_26 { pt3dadd( 39.2734, -141.244, 40.5525, 0.55 ) }
    dend_26 { pt3dadd( 40.8741, -142.114, 41.41, 0.28 ) }
    dend_26 { pt3dadd( 41.6227, -142.59, 41.8702, 0.55 ) }
    dend_26 { pt3dadd( 47.7586, -146.077, 45.6808, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -33.5526, -137.307, 73.7192, 0.55 ) }
    dend_22 { pt3dadd( -36.2524, -139.679, 78.0732, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -33.5526, -137.307, 73.7192, 0.55 ) }
    dend_21 { pt3dadd( -38.1312, -143.288, 77.7224, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, axon_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, axon_1, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_5 = new SectionList()
    dend_43 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 5
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 3
    dend_61 nseg = 11
    dend_48 nseg = 7
    dend_45 nseg = 3
    dend_42 nseg = 13
    dend_35 nseg = 3
    dend_31 nseg = 5
    dend_30 nseg = 9
    dend_12 nseg = 7
    dend_10 nseg = 3
    dend_3 nseg = 3
    dend_60 nseg = 5
    dend_33 nseg = 3
    dend_59 nseg = 5
    dend_54 nseg = 3
    dend_53 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 5
    dend_16 nseg = 7
    dend_15 nseg = 11
    dend_27 nseg = 9
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L6_BP_ce89d46a17_0_0


