// Cell: Cell_473871773
/*
{
  "id" : "Cell_473871773",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "430.613, 639.382, 34.16, 17.8232", "439.525, 639.382, 34.16, 17.8232", "448.436, 639.382, 34.16, 17.8232" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "439.525, 639.382, 34.16, 1.0", "445.366, 653.198, 34.16, 1.0", "451.207, 667.014, 34.16, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000280536385563
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "443.062, 637.6, 52.4157, 0.2288", "443.551, 637.344, 54.8691, 0.2288", "444.039, 637.088, 57.3224, 0.2288", "444.527, 636.833, 59.7758, 0.2288", "445.015, 636.576, 62.2292, 0.2288", "445.503, 636.321, 64.6825, 0.2288", "446.154, 635.867, 66.1598, 0.2288", "447.032, 635.135, 66.2626, 0.2288", "447.91, 634.403, 66.365, 0.2288", "448.788, 633.671, 66.4678, 0.2288", "449.665, 632.939, 66.5703, 0.2288", "450.544, 632.206, 66.673, 0.2542" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000280536385563
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "432.979, 644.809, 28.8915, 0.356", "431.941, 645.282, 28.8702, 0.4576", "430.943, 645.809, 28.4091, 0.5084", "430.001, 646.451, 28.336, 0.5338", "428.943, 646.317, 28.336, 0.5338", "428.032, 645.632, 28.336, 0.5338", "426.98, 645.337, 28.336, 0.5338", "426.083, 645.857, 28.1355, 0.5338", "425.488, 646.814, 27.6679, 0.483", "424.934, 647.791, 27.1345, 0.4322", "424.307, 648.669, 26.6692, 0.3814", "423.178, 648.855, 26.6692, 0.3814", "422.153, 649.22, 26.6692, 0.356", "421.345, 650.03, 26.6692, 0.356", "420.76, 650.953, 26.4211, 0.3814", "420.492, 652.038, 25.816, 0.4576", "420.02, 652.991, 24.9505, 0.4576", "419.395, 653.845, 23.891, 0.4068" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000280536385563
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "434.91, 642.089, 50.5604, 0.2288", "433.905, 642.639, 50.5604, 0.2288", "432.902, 643.188, 50.5604, 0.2542", "431.898, 643.737, 50.5604, 0.2796", "430.904, 644.3, 50.5604, 0.3304", "429.957, 644.943, 50.5604, 0.3304", "429.01, 645.586, 50.5604, 0.356", "428.055, 646.214, 50.5604, 0.3814", "427.082, 646.813, 50.5604, 0.483", "426.134, 647.435, 50.6724, 0.5592", "425.382, 648.213, 51.5763, 0.5848", "424.768, 649.086, 52.227, 0.5084", "424.533, 650.204, 52.227, 0.4068", "424.169, 651.13, 52.227, 0.305", "423.104, 651.378, 52.227, 0.2796", "421.978, 651.187, 52.227, 0.305", "420.977, 650.655, 52.227, 0.356", "419.87, 650.529, 52.227, 0.356", "418.81, 650.954, 52.227, 0.356", "417.889, 651.611, 52.227, 0.4322", "417.146, 652.451, 52.4922, 0.5338", "416.545, 653.392, 53.0914, 0.5848", "415.945, 654.335, 53.6906, 0.5084", "415.342, 655.276, 54.2898, 0.4322", "414.622, 656.121, 54.9324, 0.356", "413.859, 656.929, 55.5906, 0.305", "413.096, 657.738, 56.2489, 0.2542", "412.348, 658.575, 56.672, 0.2542", "411.625, 659.461, 56.672, 0.305", "410.577, 659.573, 56.672, 0.3814", "409.473, 659.804, 56.672, 0.4322", "408.681, 660.58, 56.672, 0.4576", "407.93, 661.4, 57.2432, 0.483", "407.165, 662.199, 57.9695, 0.483", "406.401, 662.996, 58.6958, 0.4576", "405.677, 663.847, 59.2791, 0.4068", "404.969, 664.719, 59.8083, 0.4068", "404.26, 665.589, 60.3375, 0.4576", "403.551, 666.461, 60.867, 0.4576", "402.841, 667.332, 61.3962, 0.4068", "402.114, 668.188, 61.9298, 0.3304", "401.366, 669.025, 62.468, 0.305", "400.617, 669.862, 63.0062, 0.305", "399.87, 670.7, 63.5443, 0.2796", "399.022, 671.415, 63.8949, 0.2542", "397.986, 671.9, 63.8949, 0.2288", "397.415, 672.801, 63.8949, 0.2288", "396.328, 673.111, 63.8949, 0.2288", "396.008, 674.04, 64.3978, 0.2796", "395.908, 675.149, 65.0415, 0.3814", "395.853, 676.263, 65.5617, 0.5084", "395.991, 677.398, 65.5617, 0.5338", "396.053, 678.532, 65.6712, 0.483", "395.94, 679.661, 66.0341, 0.3814", "395.265, 680.518, 66.1172, 0.3304", "394.959, 681.583, 66.1172, 0.305", "394.802, 682.705, 66.124, 0.305", "394.293, 683.714, 66.5594, 0.3304", "393.784, 684.723, 66.995, 0.356", "393.275, 685.732, 67.4304, 0.3814", "392.714, 686.705, 67.7841, 0.356", "391.919, 687.53, 67.7841, 0.305", "391.126, 688.353, 67.7841, 0.2542", "390.294, 689.139, 67.7841, 0.2288", "389.463, 689.926, 67.7841, 0.2542", "388.596, 690.672, 67.7841, 0.2796", "387.713, 691.398, 67.7841, 0.305", "386.829, 692.123, 67.7841, 0.2796", "385.944, 692.85, 67.7841, 0.2542", "385.06, 693.575, 67.7841, 0.2288", "384.176, 694.302, 67.7841, 0.2288", "383.247, 694.969, 67.7841, 0.2288", "382.344, 695.666, 67.7841, 0.2288", "381.562, 696.502, 67.7841, 0.2288", "380.783, 697.338, 67.7841, 0.2288", "380.001, 698.174, 67.7841, 0.2288", "379.185, 698.963, 67.8793, 0.2288", "378.245, 699.591, 68.3082, 0.2288", "377.305, 700.221, 68.7372, 0.2288", "376.366, 700.849, 69.1659, 0.2288", "375.384, 701.406, 69.4509, 0.2288", "374.319, 701.823, 69.4509, 0.2288", "373.253, 702.241, 69.4509, 0.2288", "372.152, 702.527, 69.4509, 0.2288", "371.023, 702.717, 69.4509, 0.2288", "369.895, 702.908, 69.4509, 0.2288", "368.789, 703.192, 69.4509, 0.2288", "367.686, 703.497, 69.4509, 0.2288", "366.583, 703.804, 69.4509, 0.2288", "365.482, 704.109, 69.4509, 0.2288", "364.379, 704.415, 69.4509, 0.2288", "363.278, 704.723, 69.4436, 0.2288", "362.217, 705.14, 69.2056, 0.2288", "361.155, 705.555, 68.9679, 0.2288", "360.092, 705.97, 68.7299, 0.2542", "359.032, 706.387, 68.4919, 0.2796", "357.97, 706.804, 68.3399, 0.305", "356.907, 707.227, 68.3399, 0.2796", "355.844, 707.65, 68.3399, 0.2542", "354.802, 708.113, 68.3637, 0.2288", "353.832, 708.719, 68.469, 0.2288", "352.863, 709.325, 68.5742, 0.2288", "351.894, 709.931, 68.6795, 0.2288", "350.924, 710.537, 68.7848, 0.2288", "349.954, 711.142, 68.8901, 0.2288", "349.078, 711.876, 68.8954, 0.2288", "348.204, 712.615, 68.8954, 0.2288", "347.332, 713.355, 68.8954, 0.2288", "346.459, 714.094, 68.8954, 0.2288", "345.665, 714.912, 69.0973, 0.2288", "344.879, 715.739, 69.3199, 0.2288", "344.094, 716.565, 69.5428, 0.2288", "343.307, 717.392, 69.7654, 0.2288", "342.522, 718.218, 69.9882, 0.2288", "341.89, 719.17, 70.0067, 0.2542", "341.272, 720.133, 70.0067, 0.2796", "340.73, 721.128, 70.1417, 0.305", "340.361, 722.196, 70.5821, 0.2796", "339.991, 723.263, 71.0226, 0.305", "339.62, 724.331, 71.463, 0.356", "339.251, 725.398, 71.9037, 0.4322", "338.88, 726.465, 72.3442, 0.4068", "338.51, 727.532, 72.7846, 0.3304" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000280536385563,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "442.087, 647.146, 25.1966, 0.4068", "441.349, 647.986, 25.1205, 0.4576", "440.385, 648.579, 24.7668, 0.4322", "439.441, 649.117, 23.8994, 0.4068", "438.734, 649.837, 22.5982, 0.5084", "438.672, 650.923, 21.8011, 0.661" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000280536385563
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "435.51, 635.605, 19.5098, 0.2288", "434.805, 634.72, 19.1055, 0.2288", "434.591, 633.664, 18.6942, 0.2288", "434.967, 632.648, 19.0907, 0.2288", "435.547, 631.688, 19.6322, 0.2796", "436.278, 630.874, 20.3823, 0.356", "437.148, 630.434, 21.7546, 0.4576", "438.207, 630.226, 22.563, 0.483", "439.286, 630.025, 22.0268, 0.5084", "440.014, 629.235, 21.4374, 0.5338", "440.617, 628.295, 20.8474, 0.6356", "441.393, 627.463, 20.6875, 0.6864", "442.227, 626.682, 20.531, 0.6864", "442.878, 625.818, 19.6837, 0.6102", "443.785, 625.181, 19.185, 0.5592", "444.766, 624.618, 18.8908, 0.5848", "445.67, 623.998, 18.8908, 0.7118", "446.327, 623.152, 19.4057, 0.8644", "446.936, 622.479, 21.1131, 0.8898" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000280536385563
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "435.131, 646.016, 42.8876, 0.3304", "434.388, 646.659, 43.885, 0.3304", "433.534, 647.194, 45.1497, 0.356", "433.803, 647.918, 46.333, 0.356", "434.79, 648.393, 46.9594, 0.4068", "435.572, 648.96, 48.3616, 0.4576", "435.613, 650.026, 48.5884, 0.5084", "435.158, 651.001, 47.752, 0.5084", "434.35, 651.75, 47.0366, 0.4322", "433.576, 652.544, 47.6885, 0.3304" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000280536385563
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "444.725, 642.291, 48.2602, 0.356", "445.569, 643.025, 47.7669, 0.4068", "446.652, 643.338, 47.9914, 0.4576", "447.701, 642.895, 48.0833, 0.5592", "448.598, 642.205, 47.7963, 0.6356", "449.422, 641.443, 48.3123, 0.6864", "450.338, 640.807, 48.2107, 0.661", "451.26, 640.451, 46.9014, 0.661", "452.27, 640.063, 46.8647, 0.6356", "453.289, 640.456, 47.581, 0.6356", "454.297, 640.967, 47.7568, 0.5592", "455.363, 641.088, 48.4014, 0.483", "456.322, 640.977, 49.7871, 0.4322", "457.279, 641.339, 50.3048, 0.4068", "458.225, 641.802, 49.2352, 0.4068", "459.242, 642.144, 48.3235, 0.356", "460.243, 642.437, 48.6856, 0.356", "461.184, 642.524, 50.1998, 0.3814", "462.206, 642.254, 50.9592, 0.4322", "463.152, 641.647, 51.1776, 0.4322", "464.009, 640.921, 51.6802, 0.4068", "464.911, 640.249, 52.0458, 0.3814", "465.919, 639.725, 52.0789, 0.4068", "466.984, 639.311, 52.073, 0.4322", "468.088, 639.125, 52.0302, 0.4322", "469.204, 639.294, 51.7404, 0.4068", "470.311, 639.542, 51.6653, 0.3814", "471.337, 639.988, 51.9688, 0.3814", "472.34, 640.521, 52.2418, 0.356", "473.325, 640.979, 51.6603, 0.305", "474.083, 641.738, 51.1006, 0.3304", "474.831, 642.595, 51.1375, 0.3814", "475.64, 643.367, 51.6765, 0.5084", "476.443, 644.159, 51.7208, 0.5084", "477.225, 644.961, 51.184, 0.5084", "478.015, 645.775, 50.9522, 0.4322", "478.892, 646.505, 50.8715, 0.4322", "479.863, 647.07, 50.4577, 0.483", "480.852, 647.59, 49.84, 0.5848", "481.685, 648.247, 48.8583, 0.6102", "482.697, 648.69, 48.6088, 0.5338", "483.402, 649.413, 49.7143, 0.4068", "483.996, 650.33, 50.512, 0.356", "484.568, 651.307, 50.883, 0.4068", "485.279, 652.197, 50.8088, 0.4576", "486.046, 653.011, 50.2426, 0.5084", "487.045, 653.523, 50.5338, 0.5338", "488.132, 653.834, 50.9351, 0.6102", "489.095, 654.442, 50.9701, 0.6356", "490.04, 655.086, 51.0121, 0.5848", "490.997, 655.706, 51.256, 0.5084", "492.121, 655.853, 51.0345, 0.483", "493.247, 655.867, 50.5464, 0.483", "494.384, 655.93, 50.2695, 0.483", "495.454, 656.306, 49.931, 0.4322", "496.397, 656.952, 49.8117, 0.4068", "497.188, 657.775, 49.6986, 0.4068", "497.665, 658.633, 48.4414, 0.4322", "498.65, 659.078, 48.8936, 0.483", "499.184, 660.086, 48.8936, 0.483", "500.022, 660.837, 48.8936, 0.4576", "501.047, 661.33, 48.848, 0.4068", "502.161, 661.504, 48.3711, 0.356", "503.275, 661.677, 47.894, 0.3304", "504.379, 661.956, 47.7823, 0.2796", "505.475, 662.28, 47.7823, 0.2542", "506.565, 662.63, 47.7823, 0.2288", "507.457, 662.376, 46.3562, 0.2288", "508.319, 662.033, 44.7199, 0.2288", "509.308, 662.288, 43.6786, 0.2288", "510.323, 662.655, 42.7818, 0.2288", "511.465, 662.732, 42.7818, 0.2288", "512.567, 662.56, 42.7818, 0.2288", "513.586, 662.635, 42.2764, 0.2288", "514.622, 663.017, 41.5282, 0.2288", "515.656, 663.399, 40.7798, 0.2288", "516.541, 663.543, 39.1894, 0.305", "517.364, 663.59, 37.2476, 0.4068", "518.122, 662.743, 37.2257, 0.5338", "519.015, 662.053, 37.2257, 0.5084", "519.979, 661.825, 36.8617, 0.4322", "520.849, 662.366, 35.6143, 0.3304", "521.773, 662.371, 34.6237, 0.356", "522.752, 661.862, 33.8794, 0.4322", "523.755, 661.599, 33.3365, 0.483", "524.827, 662.002, 33.3365, 0.4576", "525.935, 662.143, 32.9308, 0.3814", "527.057, 662.202, 32.3974, 0.3304", "528.164, 662.041, 32.4954, 0.2796", "529.265, 661.773, 32.8947, 0.2796", "530.365, 661.507, 33.294, 0.3304", "531.505, 661.472, 33.3365, 0.4068", "532.492, 661.007, 33.3365, 0.4576", "533.398, 660.31, 33.3365, 0.4576", "534.268, 659.576, 33.131, 0.483", "535.125, 658.825, 32.8474, 0.483", "536.141, 658.33, 32.781, 0.4322", "537.206, 657.912, 32.781, 0.3304", "538.166, 657.309, 32.781, 0.2542", "539.07, 656.608, 32.781, 0.2542" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000280536385563,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "448.217, 638.829, 37.6967, 0.3304", "449.125, 638.323, 36.5492, 0.356", "449.935, 637.519, 36.3975, 0.4322", "450.519, 636.534, 36.3857, 0.4576", "451.286, 635.689, 36.3101, 0.4576", "452.247, 635.095, 35.9492, 0.3814", "453.199, 634.865, 34.5131, 0.356", "454.165, 635.061, 33.1548, 0.356", "454.917, 635.91, 33.1016, 0.4068", "455.664, 636.771, 33.2769, 0.4322", "456.446, 637.528, 34.069, 0.5338", "457.402, 637.982, 35.0384, 0.5848", "458.401, 638.37, 36.0217, 0.6356", "459.201, 639.138, 36.3555, 0.5338", "459.991, 639.964, 36.3471, 0.483", "461.026, 640.378, 36.0318, 0.4322", "462.03, 640.873, 35.4973, 0.483", "462.96, 641.527, 35.5995, 0.483", "463.996, 642.0, 35.5698, 0.483", "465.036, 642.13, 34.5324, 0.4322", "466.152, 642.2, 34.8648, 0.3814", "467.252, 642.498, 34.7497, 0.356", "468.381, 642.655, 34.5078, 0.4068", "469.436, 642.979, 35.2106, 0.5084", "470.493, 643.406, 35.3948, 0.5338", "471.438, 644.019, 35.8862, 0.483", "472.374, 644.647, 36.3717, 0.4068", "473.384, 645.184, 36.3997, 0.3814", "474.497, 645.438, 36.3958, 0.3814", "475.626, 645.63, 36.3709, 0.356", "476.755, 645.773, 36.2169, 0.356", "477.77, 645.525, 36.2267, 0.3304", "478.81, 645.176, 36.9877, 0.3304" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000280536385563
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "431.354, 642.446, 31.8942, 0.4068", "430.243, 642.685, 31.626, 0.5084", "429.286, 642.905, 30.2366, 0.5592", "428.199, 642.6, 29.8908, 0.5084", "427.085, 642.601, 30.5141, 0.3814", "425.945, 642.685, 30.6244, 0.305", "424.852, 643.014, 30.8101, 0.3304", "423.719, 643.173, 30.8669, 0.4576", "422.702, 643.679, 31.1494, 0.5338", "421.717, 643.969, 32.3831, 0.5084" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000280536385563
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "439.977, 647.693, 40.8867, 0.3814", "439.982, 648.832, 40.656, 0.4322", "439.982, 649.941, 39.9795, 0.4576", "439.982, 651.072, 40.2688, 0.4576", "439.982, 652.212, 40.5182, 0.4576", "439.98, 653.312, 39.7824, 0.483", "439.967, 654.442, 39.3593, 0.5084", "439.897, 655.443, 38.0321, 0.5338", "439.518, 656.502, 37.5721, 0.5084", "438.93, 657.48, 37.7322, 0.5084", "438.486, 658.493, 38.4448, 0.5338", "437.993, 659.524, 38.6112, 0.6102", "437.296, 660.429, 38.5034, 0.6864" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000280536385563
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "445.454, 633.88, 38.6064, 0.4322", "446.364, 633.187, 38.5269, 0.4068", "447.398, 632.753, 38.0363, 0.4322", "448.374, 632.179, 38.3718, 0.5084", "449.082, 631.289, 38.5812, 0.6102", "449.492, 630.227, 38.3449, 0.6864", "449.941, 629.223, 37.59, 0.7118", "450.294, 628.141, 37.3058, 0.7118", "450.663, 627.101, 36.5683, 0.661", "451.254, 626.124, 36.4, 0.7372" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000280536385563
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "434.322, 632.778, 37.6211, 0.2542", "433.587, 631.919, 38.0537, 0.305", "432.871, 631.094, 38.8816, 0.4576" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000280536385563
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "451.207, 667.014, 34.16, 1.0", "457.048, 680.83, 34.16, 1.0", "462.89, 694.646, 34.16, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "450.544, 632.206, 66.673, 0.2542", "450.167, 632.562, 66.673, 0.356", "449.336, 633.347, 66.673, 0.305", "448.715, 634.171, 67.4094, 0.2796", "448.332, 635.038, 68.98, 0.305", "447.95, 635.904, 70.5508, 0.2796", "447.569, 636.77, 72.1216, 0.2542", "447.187, 637.637, 73.6924, 0.2796", "446.795, 638.534, 75.007, 0.3304", "446.556, 639.598, 75.007, 0.3814", "446.978, 640.426, 75.4816, 0.3304", "447.638, 640.283, 77.7423, 0.2796", "448.297, 640.139, 80.0033, 0.2288", "448.944, 640.01, 82.2612, 0.2288", "448.781, 640.754, 84.3475, 0.2288", "448.617, 641.5, 86.4338, 0.2542", "448.454, 642.245, 88.52, 0.2796", "448.161, 642.875, 90.641, 0.305", "447.547, 643.219, 92.8483, 0.2796", "446.932, 643.563, 95.0555, 0.2542", "446.318, 643.906, 97.2625, 0.2288", "445.703, 644.25, 99.4697, 0.2288", "445.089, 644.594, 101.677, 0.2288", "444.475, 644.938, 103.884, 0.2288", "443.861, 645.281, 106.091, 0.2288", "443.989, 646.209, 107.675, 0.2288", "444.127, 647.145, 109.25, 0.2288", "444.266, 648.079, 110.826, 0.2288", "444.405, 649.015, 112.401, 0.2288", "444.846, 649.69, 113.985, 0.2288", "445.741, 649.975, 115.583, 0.2288", "446.637, 650.261, 117.181, 0.2542", "447.532, 650.546, 118.78, 0.2796", "448.426, 650.831, 120.378, 0.305", "449.424, 651.276, 121.136, 0.2796", "450.435, 651.741, 121.782, 0.2542", "451.445, 652.208, 122.428, 0.2288", "452.457, 652.674, 123.074, 0.2288", "453.467, 653.139, 123.72, 0.2288", "454.478, 653.606, 124.366, 0.2288", "455.489, 654.072, 125.012, 0.2288" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "450.544, 632.206, 66.673, 0.2542", "450.934, 632.002, 66.673, 0.2288", "451.948, 631.472, 66.673, 0.2288", "453.003, 631.083, 66.673, 0.2288", "454.143, 630.984, 66.673, 0.2288", "455.283, 630.916, 66.673, 0.2288", "456.427, 630.916, 66.673, 0.2542", "457.509, 630.632, 66.673, 0.2796", "458.529, 630.133, 66.7906, 0.305", "459.456, 629.545, 67.583, 0.2796", "460.382, 628.959, 68.3754, 0.305", "461.31, 628.371, 69.1678, 0.3304", "462.238, 627.811, 70.0532, 0.4322", "463.168, 627.266, 70.9901, 0.483", "464.098, 626.72, 71.927, 0.5338", "465.028, 626.174, 72.8641, 0.5848", "465.951, 625.56, 73.3401, 0.5848", "466.89, 625.005, 73.5389, 0.6102", "467.943, 625.045, 74.6374, 0.5592", "468.993, 625.085, 75.7355, 0.6102", "470.039, 625.201, 76.6738, 0.661", "471.051, 625.728, 76.6738, 0.7118", "472.105, 626.173, 76.6738, 0.6864", "472.716, 626.774, 77.5407, 0.6864", "472.75, 627.578, 79.5309, 0.7118", "472.783, 628.382, 81.5212, 0.7372", "473.0, 629.261, 82.7856, 0.6356", "473.536, 630.272, 82.7856, 0.5592", "473.987, 631.184, 83.8169, 0.5084", "474.396, 632.046, 85.3597, 0.5084", "474.805, 632.909, 86.9025, 0.4322", "475.357, 633.706, 88.3117, 0.356", "476.1, 634.416, 89.5418, 0.305", "476.842, 635.126, 90.7721, 0.2796", "477.587, 635.835, 92.0021, 0.2542", "478.329, 636.546, 93.2324, 0.2288", "479.073, 637.255, 94.4625, 0.2288", "479.815, 637.965, 95.6928, 0.2288", "480.559, 638.675, 96.9228, 0.2542", "481.302, 639.384, 98.1532, 0.2796", "482.25, 639.986, 98.3427, 0.305", "483.234, 640.568, 98.3427, 0.2796", "484.285, 640.843, 98.5712, 0.2542", "485.411, 640.933, 99.0072, 0.2288", "486.539, 641.023, 99.4428, 0.2288", "487.664, 641.112, 99.8788, 0.2288", "488.79, 641.203, 100.314, 0.2288", "489.918, 641.293, 100.75, 0.2288", "491.044, 641.384, 101.186, 0.2288", "492.171, 641.473, 101.622, 0.2288", "493.297, 641.563, 102.058, 0.2288", "494.423, 641.654, 102.494, 0.2288", "495.471, 641.941, 102.937, 0.2288", "496.361, 642.637, 103.396, 0.2288", "497.249, 643.333, 103.854, 0.2288", "498.138, 644.029, 104.313, 0.2288", "498.512, 644.827, 105.736, 0.2288", "498.657, 645.672, 107.591, 0.2288", "498.801, 646.517, 109.446, 0.2288", "498.946, 647.361, 111.301, 0.2288", "499.092, 648.206, 113.156, 0.2288", "499.236, 649.051, 115.011, 0.2288" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "419.395, 653.845, 23.891, 0.4068", "418.728, 653.787, 21.2377, 0.305", "417.76, 653.846, 20.0018, 0.305", "416.734, 654.251, 20.0018, 0.3304", "415.592, 654.232, 20.0018, 0.356", "414.921, 654.916, 19.4463, 0.356", "415.346, 655.942, 19.4463, 0.305", "416.115, 656.79, 19.4463, 0.2542" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "419.395, 653.845, 23.891, 0.4068", "419.837, 654.128, 22.0021, 0.2542", "420.378, 654.473, 19.6854, 0.2796", "421.329, 654.83, 18.5069, 0.3304", "422.337, 655.231, 17.7794, 0.3304", "423.368, 655.728, 17.7794, 0.3814", "424.334, 656.339, 17.7794, 0.3814", "424.398, 657.3, 17.7794, 0.4068" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "438.672, 650.923, 21.8011, 0.661", "438.826, 651.05, 22.6932, 0.2288", "439.749, 651.698, 22.2093, 0.2542", "440.671, 652.344, 21.7255, 0.305", "441.749, 652.702, 21.6686, 0.3814", "442.79, 653.007, 22.5537, 0.4068", "443.751, 653.576, 22.78, 0.4068", "444.604, 654.335, 22.78, 0.356", "444.689, 655.448, 22.78, 0.356", "444.89, 656.554, 22.78, 0.356", "445.517, 657.512, 22.78, 0.4068", "446.21, 658.419, 22.78, 0.4068", "446.894, 659.332, 22.78, 0.4068", "447.466, 660.303, 22.8589, 0.3814", "448.368, 660.947, 23.5645, 0.3814", "449.29, 661.092, 23.7398, 0.356", "450.375, 660.787, 23.2708, 0.3304", "451.475, 660.533, 22.9726, 0.3304", "452.609, 660.491, 22.9684, 0.3814", "453.728, 660.7, 23.0135, 0.4576", "454.838, 660.869, 23.3436, 0.5084", "455.918, 660.892, 24.2127, 0.5084", "457.009, 660.907, 24.9962, 0.4322", "458.135, 661.021, 25.2865, 0.356", "458.878, 661.644, 25.7236, 0.305", "459.201, 662.707, 26.2444, 0.356", "460.001, 663.425, 26.1887, 0.4068", "461.009, 663.925, 25.734, 0.483", "461.816, 664.67, 25.8563, 0.5084", "462.428, 665.557, 26.7439, 0.5592", "463.225, 666.312, 27.3246, 0.5848", "464.148, 666.979, 27.4249, 0.5848", "465.211, 667.358, 27.3448, 0.5338", "466.253, 667.769, 26.8834, 0.483", "467.196, 668.382, 26.4401, 0.4322", "468.118, 669.051, 26.3878, 0.4068", "468.897, 669.861, 26.787, 0.3814", "469.579, 670.708, 27.641, 0.3814", "470.368, 671.457, 28.4581, 0.3814", "471.378, 671.907, 29.0357, 0.3814", "472.316, 672.496, 28.6317, 0.3814", "473.238, 673.11, 27.939, 0.356", "474.089, 673.841, 28.261, 0.305", "474.433, 674.886, 27.8222, 0.2542", "475.108, 675.664, 28.8296, 0.2796", "475.951, 676.399, 29.384, 0.3304", "476.526, 677.334, 28.6278, 0.3814", "477.039, 678.336, 28.1372, 0.356", "477.309, 679.438, 28.5029, 0.356", "477.808, 680.467, 28.5656, 0.356", "478.303, 681.497, 28.5925, 0.356", "478.732, 682.553, 28.7893, 0.305", "479.592, 683.216, 29.605, 0.2542", "480.715, 683.43, 29.6755, 0.2542", "481.819, 683.721, 29.6475, 0.3304", "482.952, 683.697, 29.421, 0.4576", "483.85, 683.847, 27.9866, 0.5592", "484.277, 684.701, 26.5583, 0.5592", "484.783, 685.722, 26.3194, 0.483", "485.267, 686.757, 26.3172, 0.4068", "485.579, 687.84, 26.3012, 0.4322", "485.543, 688.981, 26.1887, 0.4576", "485.602, 690.108, 25.7578, 0.483", "485.686, 691.217, 25.2084, 0.4576", "485.969, 692.312, 24.9785, 0.4576", "486.4, 693.351, 24.4854, 0.4322", "486.672, 694.431, 24.4874, 0.356", "486.844, 695.483, 25.4248, 0.2796", "487.303, 696.436, 26.2581, 0.2542", "488.161, 697.024, 26.4578, 0.2796", "488.311, 697.457, 26.3427, 0.356", "488.927, 698.323, 26.6034, 0.4322", "489.341, 699.351, 27.1387, 0.5084", "490.003, 700.272, 27.4467, 0.5338", "490.717, 701.164, 27.5047, 0.5084", "491.547, 701.916, 27.7836, 0.5084", "492.574, 702.318, 28.3069, 0.4576", "493.674, 702.564, 28.4441, 0.4322", "494.697, 703.025, 27.9731, 0.356", "495.652, 703.589, 27.4907, 0.3814", "496.002, 704.066, 27.0494, 0.3814", "496.965, 704.558, 27.5778, 0.4068", "497.927, 704.642, 28.954, 0.356", "498.992, 704.919, 29.5291, 0.356", "499.897, 705.571, 29.68, 0.3814", "500.553, 706.499, 29.6794, 0.4322", "501.199, 707.437, 29.6769, 0.4322", "502.095, 708.105, 29.6587, 0.4068", "503.117, 708.614, 29.5621, 0.3814", "504.094, 709.175, 29.1516, 0.4068", "505.033, 709.802, 29.041, 0.4322", "506.032, 710.319, 28.9234, 0.4576", "507.12, 710.299, 28.6353, 0.4576", "508.216, 709.976, 28.56, 0.4322", "509.278, 709.553, 28.56, 0.4068", "510.372, 709.243, 28.56, 0.3814", "511.509, 709.167, 28.5597, 0.3814", "512.653, 709.172, 28.5594, 0.356", "513.513, 709.238, 27.6788, 0.305", "514.65, 709.202, 27.41, 0.2542", "515.736, 709.366, 27.2247, 0.2796", "516.674, 710.008, 27.2247, 0.3304", "517.081, 710.805, 27.0614, 0.3814", "516.031, 710.983, 26.0442, 0.3304", "514.932, 711.065, 25.5578, 0.3304", "514.57, 711.918, 25.5578, 0.3304", "515.44, 712.606, 25.2675, 0.3814", "516.401, 713.211, 24.9071, 0.3304", "517.359, 713.815, 24.5468, 0.305", "518.221, 714.554, 24.4468, 0.2796", "518.448, 715.622, 24.4468, 0.3304" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "438.672, 650.923, 21.8011, 0.661", "438.858, 651.348, 21.7036, 0.4322", "439.437, 652.102, 20.9224, 0.4322", "440.23, 651.896, 20.0018, 0.4322", "440.829, 650.925, 20.0018, 0.4322", "441.525, 650.02, 20.0018, 0.3814", "442.318, 649.196, 20.0018, 0.305" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "446.936, 622.479, 21.1131, 0.8898", "447.159, 621.796, 19.7716, 0.661", "447.493, 620.71, 19.4463, 0.4576", "447.956, 619.679, 19.4463, 0.305", "448.822, 618.941, 19.4463, 0.305", "449.893, 618.682, 19.8176, 0.3814", "451.009, 618.482, 20.0018, 0.4068", "451.242, 617.479, 20.0018, 0.4068" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "446.936, 622.479, 21.1131, 0.8898", "447.923, 622.469, 21.1131, 0.356", "449.066, 622.498, 21.1131, 0.3814", "450.202, 622.399, 21.1131, 0.4068", "451.214, 622.145, 20.4229, 0.483", "452.062, 621.898, 18.6472, 0.4576", "452.729, 621.249, 17.7794, 0.4068" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "433.576, 652.544, 47.6885, 0.3304", "433.204, 652.714, 48.2804, 0.7372", "432.374, 653.295, 49.5723, 0.5084", "431.54, 653.875, 50.8642, 0.356", "430.709, 654.456, 52.1559, 0.2796", "429.904, 655.075, 53.3383, 0.2542", "429.384, 656.094, 53.3383, 0.2288", "428.753, 656.968, 53.513, 0.2796", "427.792, 657.027, 55.0239, 0.3814", "426.982, 657.617, 55.5607, 0.483", "426.793, 658.643, 56.6101, 0.5338", "426.645, 659.68, 57.7377, 0.483", "426.505, 660.811, 57.7833, 0.4576", "426.677, 661.771, 58.2604, 0.3814", "427.451, 662.389, 59.6621, 0.356", "427.872, 663.371, 60.0057, 0.2796", "428.03, 664.494, 60.0057, 0.2542", "427.18, 664.932, 60.8101, 0.2288", "426.159, 665.068, 62.0306, 0.2288", "425.099, 665.233, 62.7836, 0.2288", "423.974, 665.44, 62.7836, 0.2288", "423.042, 665.676, 63.0098, 0.2796", "423.663, 666.149, 65.0577, 0.3304", "424.286, 666.62, 67.1059, 0.3814", "425.034, 667.162, 68.3399, 0.3304", "425.727, 667.305, 69.5769, 0.2796", "426.181, 666.961, 72.004, 0.2288", "426.635, 666.616, 74.4307, 0.2288", "427.131, 666.339, 76.6738, 0.2288", "427.314, 667.018, 76.6738, 0.2288", "426.523, 667.749, 77.4953, 0.2288", "425.737, 668.452, 78.5826, 0.2288", "424.951, 669.154, 79.6698, 0.2288", "424.131, 669.747, 80.8234, 0.2288", "423.16, 669.837, 82.2833, 0.2542", "422.188, 669.926, 83.7432, 0.2796", "421.215, 670.017, 85.2032, 0.305", "420.243, 670.106, 86.6631, 0.2796", "419.228, 669.683, 87.4168, 0.2542", "418.212, 669.254, 88.165, 0.2288", "417.196, 668.826, 88.9129, 0.2288", "416.18, 668.398, 89.661, 0.2288", "415.164, 667.97, 90.4092, 0.2288", "414.148, 667.541, 91.1571, 0.2288", "413.453, 666.949, 92.1393, 0.2288", "413.48, 665.985, 93.6491, 0.2288", "413.507, 665.023, 95.1588, 0.2542", "413.534, 664.06, 96.6686, 0.2796", "413.561, 663.097, 98.1784, 0.305", "413.588, 662.133, 99.6881, 0.2796", "414.006, 661.136, 100.298, 0.2542", "414.528, 660.13, 100.664, 0.2288", "415.051, 659.124, 101.03, 0.2288", "415.574, 658.117, 101.396, 0.2288", "416.096, 657.111, 101.763, 0.2288", "416.621, 656.105, 102.129, 0.2288", "417.144, 655.098, 102.495, 0.2288", "417.665, 654.091, 102.861, 0.2288", "418.189, 653.086, 103.227, 0.2288", "418.712, 652.079, 103.594, 0.2288", "419.298, 651.121, 103.899, 0.2288", "420.191, 650.409, 103.899, 0.2796", "421.087, 649.696, 103.899, 0.3814" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "433.576, 652.544, 47.6885, 0.3304", "433.459, 652.848, 47.8783, 0.483", "433.174, 653.911, 48.501, 0.483", "433.318, 655.025, 48.8846, 0.4068", "433.482, 656.149, 49.1588, 0.356", "433.332, 657.251, 48.9266, 0.3814", "432.885, 658.289, 48.7354, 0.4322", "432.437, 659.339, 48.7855, 0.483", "432.45, 660.429, 49.1627, 0.5084", "432.351, 661.527, 49.6902, 0.5592", "431.924, 662.575, 49.84, 0.5592", "431.432, 663.608, 49.8403, 0.5848", "430.995, 664.665, 49.8406, 0.5592", "430.782, 665.782, 49.8436, 0.5848", "430.492, 666.885, 49.863, 0.5592", "430.128, 667.968, 49.9808, 0.5338", "429.773, 669.017, 50.6148, 0.483", "429.308, 669.996, 51.4856, 0.483", "428.674, 670.93, 51.6172, 0.5592", "427.938, 671.775, 51.1302, 0.6356", "427.102, 672.546, 50.9897, 0.661", "426.448, 673.474, 51.0726, 0.6356", "425.932, 674.468, 51.5869, 0.5848", "425.776, 675.574, 52.0103, 0.5592", "425.618, 676.705, 52.08, 0.483", "425.03, 677.663, 52.0797, 0.4576", "424.292, 678.537, 52.0789, 0.4576", "423.734, 679.53, 52.073, 0.5592", "423.457, 680.633, 52.0302, 0.6356", "423.145, 681.724, 51.7168, 0.6356", "422.931, 682.838, 51.9504, 0.5338", "422.802, 683.972, 52.0954, 0.4068", "423.447, 684.856, 52.262, 0.3304", "424.028, 685.782, 53.0275, 0.3304", "423.876, 686.814, 54.0201, 0.356", "423.372, 687.829, 54.3186, 0.4322", "422.654, 688.717, 54.3777, 0.5084", "421.829, 689.505, 54.5611, 0.6102", "420.983, 690.213, 55.2852, 0.661", "420.568, 691.268, 55.4372, 0.6864", "420.247, 692.366, 55.4548, 0.6356", "419.846, 693.438, 55.5307, 0.5848", "419.384, 694.476, 55.8373, 0.5084", "419.116, 695.583, 55.606, 0.5338", "418.85, 696.654, 56.35, 0.5338", "418.296, 697.641, 56.5569, 0.5848", "417.721, 698.626, 56.5424, 0.5848", "417.292, 699.682, 56.4262, 0.5848", "417.053, 700.785, 56.5552, 0.5338", "416.953, 701.877, 57.3017, 0.483", "416.931, 702.989, 57.7483, 0.5084", "416.971, 704.103, 58.2756, 0.5338", "417.084, 705.222, 58.7205, 0.5338", "417.23, 706.355, 58.8403, 0.4322", "417.853, 707.241, 59.1268, 0.356", "418.596, 708.059, 59.817, 0.305", "418.688, 709.114, 60.4674, 0.305", "418.544, 710.229, 60.9787, 0.3304", "418.762, 711.34, 61.0406, 0.3814", "419.051, 712.448, 61.0439, 0.4576", "419.103, 713.587, 61.0652, 0.5338", "418.896, 714.708, 61.2083, 0.5592", "418.617, 715.781, 61.8828, 0.5338", "418.042, 716.76, 62.1468, 0.4322", "417.583, 717.806, 62.16, 0.3304", "417.871, 718.827, 62.5517, 0.2796", "418.068, 719.891, 62.7836, 0.305", "417.344, 720.657, 62.7836, 0.356", "416.371, 721.222, 63.1238, 0.356", "415.401, 721.739, 63.898, 0.3814", "414.475, 722.338, 64.4504, 0.4068", "413.658, 723.137, 64.4504, 0.5084", "413.164, 724.133, 65.0821, 0.5338", "412.681, 725.135, 65.7387, 0.5592", "412.225, 726.163, 66.1172, 0.5338", "411.807, 727.227, 66.1172, 0.5338", "411.923, 728.254, 66.1172, 0.5338", "412.197, 729.203, 66.1172, 0.5338", "411.357, 729.978, 66.1172, 0.5084", "410.59, 730.825, 66.1172, 0.5084", "409.94, 731.757, 66.1172, 0.5084", "409.441, 732.787, 66.1172, 0.5338", "408.941, 733.815, 66.1172, 0.5338", "408.202, 734.656, 66.1172, 0.483", "407.421, 735.449, 66.1172, 0.4322", "407.156, 736.562, 66.1172, 0.356", "406.872, 737.649, 66.5538, 0.3304", "406.579, 738.724, 67.1938, 0.3304", "406.286, 739.799, 67.8339, 0.356", "405.993, 740.88, 68.3399, 0.3814", "405.702, 741.986, 68.3399, 0.356", "405.411, 743.092, 68.3399, 0.356", "405.118, 744.198, 68.3399, 0.3814", "404.595, 745.196, 68.3399, 0.4576", "403.935, 746.13, 68.3399, 0.5084", "403.22, 747.006, 68.3399, 0.5592", "402.246, 747.607, 68.3399, 0.5338", "401.269, 748.202, 68.3399, 0.483", "400.255, 748.73, 68.3399, 0.356", "399.239, 749.257, 68.3399, 0.2796", "399.132, 750.264, 69.116, 0.2542", "399.169, 751.346, 70.0157, 0.305", "399.207, 752.429, 70.915, 0.4068", "398.967, 753.524, 71.1178, 0.483", "398.646, 754.622, 71.1178, 0.5084", "398.088, 755.57, 71.2485, 0.4322", "397.249, 756.338, 71.5327, 0.356", "396.411, 757.108, 71.8172, 0.356", "395.572, 757.877, 72.1017, 0.4322", "394.928, 758.792, 72.3383, 0.5084", "394.445, 759.826, 72.5362, 0.483", "393.962, 760.859, 72.7342, 0.4068", "393.478, 761.893, 72.9319, 0.3304", "392.993, 762.927, 73.1298, 0.305", "392.51, 763.96, 73.3275, 0.3304", "392.232, 765.067, 73.3401, 0.3304", "391.967, 766.18, 73.3401, 0.3304", "391.578, 767.25, 73.3401, 0.305", "391.087, 768.283, 73.3401, 0.305", "390.596, 769.317, 73.3401, 0.305", "390.107, 770.351, 73.3401, 0.2796", "389.366, 771.213, 73.3401, 0.2542", "388.582, 772.047, 73.3401, 0.2542", "387.799, 772.881, 73.3401, 0.3304", "386.979, 773.565, 72.7174, 0.4068", "386.115, 774.077, 71.3756, 0.4322", "385.042, 774.354, 71.1178, 0.3814", "383.919, 774.575, 71.1178, 0.3304", "382.803, 774.744, 71.1178, 0.305", "381.753, 774.29, 71.1178, 0.2796", "380.727, 773.794, 71.1178, 0.2542", "379.594, 773.954, 71.1178, 0.2542", "378.551, 774.231, 71.0153, 0.305", "378.056, 775.218, 70.2881, 0.356", "377.562, 776.206, 69.5612, 0.356", "377.069, 777.195, 68.8341, 0.305", "376.678, 778.229, 68.3399, 0.2542", "376.508, 779.359, 68.3399, 0.2288", "376.337, 780.491, 68.3399, 0.2288", "376.167, 781.622, 68.3399, 0.2288", "375.996, 782.753, 68.3399, 0.2288" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "478.81, 645.176, 36.9877, 0.3304", "478.881, 645.372, 36.4204, 0.2796", "479.569, 645.988, 35.3125, 0.305", "480.56, 646.535, 34.8928, 0.2796", "481.549, 647.082, 34.473, 0.305", "482.54, 647.629, 34.0533, 0.3304", "483.424, 648.33, 33.892, 0.3814", "484.26, 649.107, 33.892, 0.3304", "485.208, 649.75, 33.892, 0.2796", "486.154, 650.393, 33.892, 0.305", "487.111, 651.002, 33.892, 0.3814", "488.255, 651.028, 33.892, 0.4576", "489.338, 650.84, 33.892, 0.3814", "490.321, 650.286, 33.892, 0.3304", "491.459, 650.172, 33.892, 0.2796", "492.596, 650.041, 33.892, 0.305", "493.728, 649.873, 33.892, 0.2796", "494.85, 650.077, 33.892, 0.2542", "495.834, 650.604, 33.892, 0.2288", "496.01, 651.61, 33.892, 0.2542", "496.107, 652.707, 33.6109, 0.2796", "496.478, 653.759, 32.9983, 0.356", "496.849, 654.813, 32.3859, 0.4068", "497.516, 655.533, 31.1531, 0.4576", "498.288, 656.133, 29.6999, 0.4068", "499.219, 656.538, 28.8915, 0.3304", "500.112, 657.074, 28.8915, 0.2542", "500.652, 658.078, 28.8915, 0.2542", "500.285, 658.936, 27.806, 0.2796", "499.946, 659.728, 26.588, 0.3304", "500.829, 660.428, 26.1033, 0.3304", "501.713, 661.128, 25.6183, 0.3304", "502.771, 661.54, 25.5578, 0.305", "503.733, 662.067, 25.5578, 0.3304", "504.371, 663.017, 25.5578, 0.356", "504.733, 664.094, 25.5578, 0.4068", "505.267, 665.034, 25.5578, 0.4322", "506.23, 665.65, 25.5578, 0.483", "507.277, 666.111, 25.5578, 0.483", "508.344, 666.505, 25.3974, 0.483", "509.434, 666.833, 25.0827, 0.4576", "510.273, 667.556, 25.0023, 0.4322", "511.029, 668.415, 25.0023, 0.4068", "511.933, 669.111, 25.0023, 0.356", "512.861, 669.781, 25.0023, 0.356", "513.804, 670.429, 25.0023, 0.3814", "514.538, 671.223, 25.7978, 0.4576", "515.484, 671.763, 26.1136, 0.5592", "516.557, 672.159, 26.1136, 0.6356", "517.57, 672.67, 26.1136, 0.7118", "518.505, 673.329, 26.1136, 0.7118", "519.439, 673.989, 26.1136, 0.7118", "520.203, 674.808, 25.8412, 0.661", "520.865, 675.724, 25.4008, 0.6102", "521.515, 676.648, 25.0023, 0.5592", "522.076, 677.646, 25.0023, 0.5084", "523.101, 678.145, 25.0023, 0.483", "524.119, 678.609, 25.4139, 0.483", "525.122, 679.047, 26.2214, 0.5084", "525.771, 679.792, 26.6692, 0.5338", "525.982, 680.917, 26.6692, 0.483", "526.421, 681.972, 26.6692, 0.4322", "527.333, 682.64, 27.0892, 0.356", "528.229, 683.311, 26.803, 0.3304", "529.12, 683.983, 26.1803, 0.356", "530.01, 684.654, 25.5578, 0.4068" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "478.81, 645.176, 36.9877, 0.3304", "479.794, 644.627, 37.2501, 0.4068" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "421.717, 643.969, 32.3831, 0.5084", "421.506, 644.369, 31.1772, 0.2796", "421.171, 645.008, 29.0024, 0.2542", "420.714, 645.629, 27.2247, 0.2796", "419.663, 645.889, 27.0768, 0.3304", "418.543, 645.714, 26.707, 0.3814", "417.423, 645.539, 26.3368, 0.3814", "416.302, 645.364, 25.9666, 0.4068", "415.182, 645.188, 25.5962, 0.483", "414.042, 645.11, 25.5578, 0.5338", "412.986, 645.5, 25.5578, 0.5338", "412.232, 644.825, 24.4933, 0.4576", "411.495, 644.081, 23.3654, 0.3814", "410.758, 643.338, 22.2379, 0.3304", "409.656, 643.061, 21.9598, 0.305", "408.549, 642.791, 21.6924, 0.305", "407.444, 642.52, 21.4248, 0.305", "406.337, 642.25, 21.1571, 0.3304", "405.221, 641.997, 21.1131, 0.4068", "404.095, 641.805, 21.1131, 0.5084", "402.965, 641.633, 21.1131, 0.5338", "401.895, 641.226, 21.1131, 0.483", "400.98, 640.711, 20.2698, 0.3814", "400.463, 641.438, 20.0018, 0.3304" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "421.717, 643.969, 32.3831, 0.5084", "421.049, 644.026, 32.4696, 0.6356", "420.02, 644.327, 31.8396, 0.7118", "419.178, 644.991, 31.0318, 0.788", "418.368, 645.783, 30.8034, 0.788", "417.439, 646.441, 30.8, 0.8136", "416.458, 647.03, 30.8, 0.7626", "415.584, 647.763, 30.7994, 0.7118", "414.745, 648.539, 30.7986, 0.6102", "413.82, 649.211, 30.7933, 0.5338", "412.717, 649.434, 30.7586, 0.5084", "411.584, 649.497, 30.4469, 0.5084", "410.509, 649.859, 30.4828, 0.5592", "409.561, 650.483, 30.7742, 0.5848", "408.523, 650.961, 30.8, 0.6102", "407.556, 651.569, 30.8006, 0.6356", "406.582, 652.168, 30.8022, 0.6102", "405.582, 652.725, 30.8134, 0.5592", "404.625, 653.35, 30.8753, 0.4322", "403.965, 654.268, 31.2043, 0.356", "403.797, 655.394, 31.0901, 0.2796" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "437.296, 660.429, 38.5034, 0.6864", "437.173, 661.163, 38.1699, 0.3814", "436.857, 662.247, 37.7339, 0.483", "436.84, 663.386, 37.7048, 0.5592", "437.152, 664.481, 37.5262, 0.5848", "437.755, 665.452, 37.5136, 0.5084", "438.557, 666.266, 37.4923, 0.4576", "439.484, 666.935, 37.3792, 0.4322", "440.394, 667.571, 36.7128, 0.5084", "441.079, 668.477, 36.4031, 0.5084", "441.678, 669.452, 36.4045, 0.5338", "442.309, 670.406, 36.4235, 0.483" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "437.296, 660.429, 38.5034, 0.6864", "436.596, 661.377, 37.9221, 0.483", "435.864, 662.247, 37.6844, 0.4576", "435.051, 663.002, 38.2175, 0.4068", "434.006, 663.37, 38.5969, 0.3814", "432.995, 663.776, 37.896, 0.3814", "431.91, 664.091, 37.5567, 0.356", "430.798, 664.359, 37.5276, 0.3304", "429.84, 664.964, 37.5575, 0.3304", "428.786, 665.389, 37.7272, 0.3814", "427.689, 665.368, 38.4034, 0.4576", "426.556, 665.253, 38.3513, 0.483", "425.531, 665.45, 37.2688, 0.483", "424.406, 665.549, 36.902, 0.4576", "423.368, 666.021, 37.0874, 0.483", "422.449, 666.675, 37.5122, 0.5338", "421.319, 666.856, 37.4671, 0.6102", "420.19, 666.963, 37.1711, 0.7118", "419.203, 667.495, 36.7343, 0.7626", "418.41, 668.238, 37.6076, 0.7118", "417.742, 669.104, 38.2788, 0.5338", "417.378, 670.171, 37.8524, 0.3814", "416.724, 671.06, 37.5278, 0.3304", "415.646, 671.42, 37.5729, 0.3814", "414.52, 671.529, 37.8311, 0.4322", "413.508, 671.933, 38.5151, 0.4576", "412.704, 672.72, 38.9808, 0.4576", "411.984, 673.563, 39.5646, 0.4576", "411.026, 674.143, 39.7718, 0.4576", "409.923, 674.434, 39.8308, 0.4576", "408.87, 674.848, 40.1226, 0.4576", "407.783, 675.074, 40.6714, 0.4576", "406.652, 675.138, 40.5261, 0.483", "405.592, 675.407, 39.935, 0.5084", "404.671, 676.072, 39.7706, 0.5338", "403.846, 676.864, 39.8026, 0.5592", "402.995, 677.623, 39.9442, 0.6102", "402.045, 678.178, 40.4354, 0.6356", "400.993, 678.427, 41.3406, 0.5848", "399.98, 678.792, 42.2652, 0.483", "399.008, 679.202, 43.2608, 0.4576", "397.975, 679.466, 43.9793, 0.483", "396.939, 679.919, 43.6131, 0.5338", "395.957, 680.467, 43.2169, 0.5084", "394.928, 680.816, 43.4622, 0.483", "393.859, 680.969, 44.0644, 0.4576", "392.963, 681.607, 44.6356, 0.4576", "392.184, 682.419, 44.9369, 0.4576", "391.301, 683.122, 44.6183, 0.4576", "390.341, 683.72, 44.2725, 0.4576", "389.331, 684.253, 44.2403, 0.4576", "388.259, 684.636, 44.2422, 0.4576", "387.159, 684.945, 44.2537, 0.4576", "386.107, 685.386, 44.3215, 0.4322", "385.234, 686.065, 44.6712, 0.4068", "384.466, 686.883, 45.1665, 0.3814", "383.493, 687.402, 45.3398, 0.4068", "382.398, 687.721, 45.2306, 0.4576", "381.826, 687.956, 44.98, 0.5338", "380.831, 688.313, 44.6093, 0.5848", "379.863, 688.876, 45.1186, 0.5848", "378.997, 689.608, 45.3342, 0.5338", "378.176, 690.402, 45.2995, 0.483", "377.314, 691.146, 45.0895, 0.4576", "376.355, 691.716, 44.5866, 0.483", "375.279, 692.029, 44.2669, 0.5338", "374.167, 692.293, 44.2481, 0.5592", "373.043, 692.45, 44.2943, 0.5084", "372.38, 692.44, 44.24, 0.3814", "371.325, 692.837, 44.24, 0.2796", "370.548, 693.662, 44.24, 0.2288", "370.038, 694.686, 44.24, 0.2288", "369.54, 695.714, 44.24, 0.2288", "368.895, 696.648, 44.24, 0.2796", "368.019, 697.381, 44.24, 0.356", "367.096, 698.056, 44.24, 0.483", "366.189, 698.739, 44.24, 0.5338", "365.126, 699.144, 44.24, 0.5592", "364.036, 699.426, 44.24, 0.5084", "363.066, 700.033, 44.2386, 0.483", "362.091, 700.629, 44.2324, 0.4322", "361.219, 701.357, 44.1991, 0.3814", "360.466, 702.203, 44.0138, 0.305", "359.526, 702.798, 43.5131, 0.2542", "358.44, 703.086, 43.1203, 0.2288", "357.308, 703.121, 43.1222, 0.2542", "356.177, 702.977, 43.1365, 0.2796", "355.079, 703.164, 43.2236, 0.3304", "354.132, 703.765, 43.6142, 0.356", "353.29, 704.492, 44.1776, 0.4068", "352.402, 705.21, 44.2481, 0.4068", "351.495, 705.903, 44.2744, 0.3814", "350.635, 706.654, 44.3811, 0.3304", "349.683, 707.201, 44.7846, 0.3304", "348.582, 707.363, 45.3088, 0.3814", "347.454, 707.506, 45.3642, 0.4576", "346.364, 707.85, 45.3872, 0.5084", "345.324, 708.311, 45.5291, 0.5084", "344.302, 708.803, 45.6282, 0.4322", "343.217, 709.161, 45.4538, 0.3814", "342.124, 709.485, 45.4807, 0.3814", "341.042, 709.798, 45.9029, 0.4322", "339.983, 710.156, 46.366, 0.4322", "338.896, 710.421, 46.1616, 0.4068", "337.789, 710.32, 45.6372, 0.3814", "336.683, 710.24, 45.36, 0.356", "335.589, 710.545, 45.36, 0.305", "334.51, 710.657, 45.36, 0.2542", "333.413, 710.476, 44.8941, 0.2288", "332.299, 710.457, 44.6846, 0.2288", "331.188, 710.653, 44.8, 0.2288", "330.044, 710.653, 44.8, 0.2288" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "451.254, 626.124, 36.4, 0.7372", "451.931, 625.067, 34.9908, 0.9406", "452.652, 624.236, 34.2602, 1.0168", "453.452, 623.509, 33.3967, 0.966", "454.342, 622.811, 33.0254, 0.8898", "455.288, 622.208, 32.8563, 0.839", "456.345, 621.979, 32.1726, 0.9152", "457.407, 621.906, 31.1819, 0.966", "458.467, 621.596, 31.3592, 0.9914", "459.495, 621.125, 31.7531, 0.9406", "460.415, 620.478, 31.4866, 0.839", "461.297, 619.793, 30.8806, 0.7372", "462.316, 619.315, 30.5511, 0.6102", "463.408, 619.195, 29.7774, 0.5848", "464.505, 618.88, 29.6117, 0.6102", "465.392, 618.168, 29.3042, 0.6102" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "451.254, 626.124, 36.4, 0.7372", "451.631, 625.349, 36.4, 0.6356", "452.422, 624.55, 36.4008, 0.6864", "453.312, 623.832, 36.4039, 0.661", "454.265, 623.202, 36.4202, 0.6864", "455.249, 622.619, 36.512, 0.6864", "456.146, 621.962, 37.1011, 0.661", "457.2, 621.591, 37.4685, 0.6356", "458.336, 621.551, 37.515, 0.5848", "459.476, 621.637, 37.4858, 0.5848", "460.581, 621.906, 37.2994, 0.6102", "461.652, 621.966, 36.4157, 0.6356", "462.643, 621.889, 35.0423, 0.6102", "463.687, 621.531, 34.5218, 0.5848", "464.51, 621.047, 35.8778, 0.5848", "465.246, 620.432, 37.3974, 0.5592", "466.309, 620.643, 38.015, 0.4322" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_32",
    "id" : "apic_32",
    "points3d" : [ "432.871, 631.094, 38.8816, 0.4576", "432.01, 631.736, 38.6534, 0.5084", "431.012, 632.293, 38.64, 0.4322", "429.943, 632.697, 38.6397, 0.3814", "428.977, 633.308, 38.6392, 0.3304", "427.997, 633.9, 38.6358, 0.3304", "426.939, 634.332, 38.6134, 0.305", "425.806, 634.464, 38.4661, 0.305", "424.75, 634.751, 37.6617, 0.356", "423.686, 634.715, 36.636, 0.4576", "422.592, 634.401, 36.4003, 0.6356", "421.448, 634.361, 36.4, 0.7118", "420.307, 634.427, 36.4006, 0.6864" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "432.871, 631.094, 38.8816, 0.4576", "432.632, 629.812, 39.4425, 0.661", "432.409, 628.731, 38.7688, 0.8136", "431.87, 627.725, 38.745, 0.966", "431.642, 626.632, 39.3112, 0.9406", "431.31, 625.553, 39.7687, 0.966", "431.156, 624.422, 39.8712, 0.9152", "430.693, 623.401, 40.4233, 0.9152", "429.988, 622.508, 40.7109, 0.7626" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "442.318, 649.196, 20.0018, 0.305", "443.352, 649.813, 20.0018, 0.3814", "443.745, 650.714, 19.7708, 0.356", "443.163, 651.614, 18.7933, 0.305", "442.65, 652.595, 18.335, 0.2796", "442.201, 653.647, 18.335, 0.305", "441.957, 654.76, 18.335, 0.356", "441.759, 655.887, 18.335, 0.3814", "441.585, 657.018, 18.335, 0.356", "441.422, 658.149, 18.335, 0.3304", "440.596, 658.446, 18.335, 0.305", "439.867, 659.115, 18.335, 0.305", "439.53, 660.208, 18.335, 0.356" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "442.318, 649.196, 20.0018, 0.305", "443.249, 648.464, 20.0018, 0.4576", "444.053, 647.65, 20.0018, 0.4576", "444.848, 646.828, 20.0018, 0.5338", "445.589, 645.957, 20.0018, 0.5084", "446.306, 645.066, 20.0018, 0.5084" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "479.794, 644.627, 37.2501, 0.4068", "479.877, 643.931, 35.5538, 0.4322", "480.268, 643.101, 33.9097, 0.3814", "480.728, 642.076, 33.7991, 0.356", "480.781, 640.941, 33.9923, 0.3814", "480.713, 639.851, 33.1758, 0.4068", "480.89, 638.931, 32.1798, 0.4068", "481.187, 637.964, 30.872, 0.356", "481.531, 636.906, 30.5584, 0.356", "481.716, 636.059, 28.8988, 0.3304", "481.728, 635.469, 26.6386, 0.3814", "482.006, 635.117, 24.6621, 0.3814", "483.004, 634.689, 23.7804, 0.4068", "484.02, 634.714, 23.3355, 0.3304", "485.056, 635.199, 23.3355, 0.3304", "485.435, 634.38, 21.9052, 0.356", "485.773, 633.481, 20.3871, 0.4322", "485.633, 632.433, 19.794, 0.4068", "485.328, 631.336, 19.516, 0.3304", "485.025, 630.239, 19.2377, 0.2542", "484.721, 629.142, 18.9594, 0.2796", "484.978, 628.077, 18.8908, 0.356", "485.983, 627.533, 18.8908, 0.4322" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "479.794, 644.627, 37.2501, 0.4068", "480.76, 644.46, 36.6618, 0.4068", "481.88, 644.486, 36.4294, 0.3304", "482.947, 644.862, 36.5624, 0.2542", "484.021, 644.995, 37.1431, 0.2796", "485.079, 644.651, 37.4581, 0.356", "486.147, 644.248, 37.3929, 0.4322", "487.168, 643.771, 36.974, 0.4322", "488.092, 643.154, 37.3089, 0.3814", "489.114, 642.692, 37.7194, 0.3814", "490.197, 642.634, 38.4454, 0.4068", "491.286, 642.822, 39.1308, 0.4576", "492.318, 642.56, 39.9185, 0.4068", "492.946, 641.678, 40.495, 0.356", "493.698, 640.873, 41.2034, 0.305", "494.766, 641.09, 41.8625, 0.3304", "495.784, 641.573, 41.4196, 0.3304", "496.907, 641.392, 41.6321, 0.356", "497.849, 640.931, 42.1789, 0.3304", "498.862, 640.615, 42.8529, 0.356", "499.914, 640.757, 43.8152, 0.3814", "500.906, 641.072, 44.963, 0.4322", "502.001, 641.178, 45.4924, 0.4576", "503.108, 641.052, 46.0628, 0.4068", "504.014, 640.463, 45.7069, 0.3814", "504.799, 639.646, 45.7579, 0.3304", "505.792, 639.18, 46.3361, 0.356", "506.874, 638.826, 46.5013, 0.3304", "507.924, 638.378, 46.6404, 0.3304", "508.959, 637.969, 47.25, 0.3304", "509.993, 637.501, 47.553, 0.356", "510.915, 636.832, 47.5502, 0.3814", "511.755, 636.058, 47.3799, 0.3304", "512.661, 635.442, 46.6463, 0.305", "513.773, 635.276, 46.4957, 0.305", "514.917, 635.26, 46.5422, 0.4068", "516.052, 635.24, 46.8675, 0.5084", "517.059, 635.137, 48.1183, 0.6102", "518.143, 634.898, 48.713, 0.661", "519.258, 635.079, 48.944, 0.6864", "520.356, 635.293, 49.5298, 0.6864", "521.455, 635.557, 49.9635, 0.6356", "522.362, 636.051, 51.1426, 0.5848", "523.109, 636.567, 52.8402, 0.483", "524.221, 636.548, 53.4226, 0.4322", "525.328, 636.289, 53.3882, 0.3814", "526.393, 636.504, 54.1778, 0.3814", "527.216, 637.207, 55.0659, 0.4322", "528.051, 637.759, 56.308, 0.483", "529.177, 637.837, 56.4248, 0.5338", "530.262, 637.565, 55.9062, 0.5084", "531.339, 637.479, 55.2264, 0.4576", "532.383, 637.159, 55.974, 0.4576", "533.359, 636.675, 56.4124, 0.483", "534.487, 636.636, 55.9826, 0.5338", "535.609, 636.642, 55.7458, 0.5084", "536.721, 636.669, 56.3676, 0.4576", "537.838, 636.796, 56.8515, 0.4068", "538.917, 636.935, 57.4986, 0.356", "539.909, 636.525, 58.1776, 0.356", "540.732, 635.852, 59.092, 0.3304", "541.557, 635.952, 59.9469, 0.3304", "542.143, 636.901, 60.5321, 0.2796", "542.914, 637.432, 61.4995, 0.2796", "543.893, 637.322, 62.7936, 0.305", "544.844, 636.789, 63.3189, 0.356", "545.76, 636.121, 63.6054, 0.4068", "546.815, 635.856, 63.8845, 0.4068", "547.713, 636.398, 64.1452, 0.4068", "548.184, 637.111, 65.7608, 0.3304", "548.557, 638.084, 66.5826, 0.2796", "549.302, 638.918, 66.7696, 0.2288", "550.328, 639.263, 67.429, 0.2288", "551.349, 639.219, 68.6333, 0.2542", "552.193, 639.684, 70.0356, 0.2796", "553.294, 639.837, 70.2526, 0.3304", "554.409, 639.877, 70.8392, 0.3304", "555.487, 640.217, 70.5818, 0.3814", "555.984, 641.212, 70.0, 0.3814" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "403.797, 655.394, 31.0901, 0.2796", "403.824, 655.93, 29.731, 0.2796", "403.867, 656.84, 28.0683, 0.2542", "404.107, 657.262, 25.7533, 0.2288", "404.493, 657.627, 23.2898, 0.2288", "405.191, 658.303, 22.1124, 0.2288", "406.188, 658.689, 22.6615, 0.2288", "406.622, 659.22, 24.6845, 0.2542", "406.779, 659.678, 27.2182, 0.2796", "406.851, 660.157, 29.6652, 0.3304", "406.393, 660.848, 31.1198, 0.3304", "405.73, 661.73, 30.508, 0.3304", "405.445, 662.675, 29.5943, 0.2796", "406.013, 663.512, 28.7557, 0.2542", "406.447, 664.367, 27.6788, 0.2542", "406.125, 665.229, 26.3645, 0.2796", "405.359, 665.554, 24.5815, 0.305", "404.523, 666.029, 23.2324, 0.2796", "403.615, 666.675, 22.7576, 0.2796", "402.747, 667.297, 21.8498, 0.2796", "402.089, 667.849, 20.0558, 0.305", "401.289, 668.276, 18.3862, 0.2796", "400.6, 668.117, 19.7582, 0.2542", "400.09, 667.483, 21.709, 0.2542", "399.171, 666.856, 22.1948, 0.3304" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "403.797, 655.394, 31.0901, 0.2796", "403.566, 656.33, 30.3744, 0.4322", "403.031, 657.271, 30.4615, 0.4322", "402.138, 657.957, 30.8042, 0.483", "401.134, 658.505, 30.8235, 0.483", "400.107, 658.959, 30.9652, 0.5084", "398.978, 659.068, 31.1836, 0.5338", "397.848, 659.113, 31.2721, 0.5848", "396.76, 659.333, 31.8114, 0.5592", "395.746, 659.843, 32.0326, 0.483", "394.785, 660.43, 32.5332, 0.4068", "393.771, 660.923, 32.9983, 0.4322", "392.921, 661.686, 32.853, 0.5084" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "442.309, 670.406, 36.4235, 0.483", "443.546, 671.067, 36.6702, 0.3814", "444.689, 671.115, 36.6702, 0.4068", "445.738, 671.364, 36.6702, 0.4576", "446.245, 672.297, 37.0997, 0.4576", "446.381, 673.35, 38.1405, 0.4576", "446.5, 674.428, 38.8926, 0.4322", "447.036, 675.277, 38.8926, 0.356", "447.642, 676.203, 39.4836, 0.305", "448.216, 677.158, 40.1198, 0.305", "448.79, 678.113, 40.7562, 0.356", "449.125, 679.149, 41.1149, 0.356", "449.148, 680.293, 41.1149, 0.305", "449.174, 681.437, 41.1149, 0.2796", "449.693, 682.433, 41.1149, 0.2796", "450.659, 682.88, 41.6889, 0.3304", "451.719, 683.192, 42.4133, 0.356", "452.661, 683.742, 42.7818, 0.3814", "453.48, 684.541, 42.7818, 0.3814", "454.23, 685.392, 43.0136, 0.3814", "454.915, 686.29, 43.4498, 0.3814", "455.601, 687.188, 43.8861, 0.3814", "456.288, 688.086, 44.3223, 0.4322", "456.973, 688.984, 44.7586, 0.483", "457.643, 689.901, 45.0041, 0.5084", "458.293, 690.842, 45.0041, 0.4322", "458.965, 691.769, 45.0041, 0.356", "460.044, 692.047, 45.0041, 0.305", "461.169, 692.247, 45.0041, 0.2796", "462.031, 692.849, 45.8133, 0.2542", "462.818, 693.564, 46.8496, 0.2288", "463.499, 694.434, 47.2268, 0.2288", "464.118, 695.396, 47.2268, 0.2288", "464.831, 696.259, 47.4569, 0.2288", "465.706, 696.95, 48.0872, 0.2288", "466.579, 697.641, 48.7175, 0.2542", "467.456, 698.332, 49.3475, 0.2796", "468.376, 699.001, 49.4491, 0.305", "469.362, 699.543, 49.6191, 0.2796", "470.441, 699.871, 50.0842, 0.2796", "471.521, 700.197, 50.5492, 0.305", "472.601, 700.524, 51.0143, 0.356", "473.548, 701.136, 51.116, 0.4068", "474.459, 701.828, 51.116, 0.4068", "475.165, 702.71, 51.116, 0.4068", "475.983, 703.465, 51.116, 0.3304", "476.979, 704.029, 51.116, 0.305", "477.618, 704.95, 51.5015, 0.2796", "478.221, 705.906, 51.9254, 0.305", "478.825, 706.863, 52.3494, 0.2796", "479.427, 707.819, 52.7733, 0.2796", "479.452, 708.958, 52.7828, 0.2796", "479.72, 709.948, 52.976, 0.305", "480.659, 710.541, 53.6654, 0.2796", "481.595, 711.133, 54.3547, 0.2542", "482.492, 711.756, 55.0052, 0.2288", "482.721, 712.877, 55.0052, 0.2288", "482.427, 713.881, 55.0052, 0.2288", "483.129, 714.556, 56.0958, 0.2542", "483.935, 715.213, 57.2673, 0.2796", "484.74, 715.871, 58.4391, 0.3304", "485.54, 716.55, 59.5053, 0.3304", "486.312, 717.378, 59.9082, 0.356", "487.083, 718.208, 60.3112, 0.3304", "487.855, 719.036, 60.7141, 0.4068", "488.626, 719.864, 61.117, 0.4322" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "442.309, 670.406, 36.4235, 0.483", "442.335, 671.033, 35.8893, 0.5338", "442.603, 672.034, 34.785, 0.5084", "443.16, 672.977, 34.7388, 0.5338", "443.842, 673.881, 35.1198, 0.5084", "444.579, 674.752, 35.1042, 0.5084", "445.152, 675.706, 34.5859, 0.483", "445.34, 676.805, 34.2964, 0.4068", "444.937, 677.791, 33.6143, 0.3814", "444.951, 678.867, 33.0834, 0.3304", "445.65, 679.734, 32.9339, 0.3814", "446.558, 680.368, 32.3128, 0.4068", "447.66, 680.576, 31.9544, 0.483", "448.789, 680.754, 31.9105, 0.4576", "449.902, 681.014, 31.8556, 0.4068", "451.031, 681.175, 31.638, 0.305", "451.764, 681.968, 32.305, 0.2542", "451.546, 683.061, 31.7439, 0.2796", "451.489, 684.125, 30.732, 0.356", "451.792, 685.15, 29.7447, 0.4576", "452.29, 686.164, 29.3126, 0.483", "452.769, 687.165, 28.6387, 0.4576", "453.217, 688.217, 28.5538, 0.4322", "453.549, 689.31, 28.5222, 0.4322", "453.672, 690.442, 28.3156, 0.4576", "453.517, 691.53, 27.5705, 0.4322", "453.643, 692.653, 27.2003, 0.3814", "454.009, 693.699, 26.5115, 0.3814", "454.502, 694.715, 26.0761, 0.4068", "455.01, 695.716, 25.6362, 0.483", "455.483, 696.738, 26.0607, 0.483", "455.796, 697.807, 25.6337, 0.4576", "456.258, 698.827, 25.2389, 0.3814", "456.907, 699.763, 25.1684, 0.3304", "457.835, 700.367, 25.0244, 0.305", "458.894, 700.707, 24.4535, 0.305", "459.982, 701.005, 24.1102, 0.3304", "460.853, 701.674, 24.0349, 0.3814", "461.378, 702.669, 23.7633, 0.4576", "461.936, 703.659, 23.686, 0.483", "462.525, 704.639, 23.8199, 0.5084", "463.039, 705.627, 23.3148, 0.483", "463.512, 706.657, 23.0054, 0.4576", "463.742, 707.769, 22.9771, 0.3814", "463.779, 708.909, 23.0731, 0.3304", "463.784, 710.025, 23.6401, 0.305", "463.829, 711.155, 24.019, 0.2796", "464.104, 712.259, 24.0803, 0.2796", "464.628, 713.27, 24.0822, 0.356", "465.418, 714.087, 24.0918, 0.483", "466.111, 714.992, 24.1371, 0.5848", "466.767, 715.925, 24.3533, 0.5592", "467.349, 716.877, 24.9474, 0.5084", "467.794, 717.922, 24.9634, 0.4322", "467.81, 718.983, 24.0607, 0.4322", "467.663, 720.038, 23.0404, 0.4068", "468.289, 720.956, 22.9258, 0.4322", "469.133, 721.727, 22.808, 0.3814", "470.118, 722.287, 23.0751, 0.3814" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "465.392, 618.168, 29.3042, 0.6102", "466.137, 618.294, 28.6448, 0.6864", "467.27, 618.152, 28.6521, 0.6356", "468.375, 618.052, 28.873, 0.483", "469.323, 618.617, 28.6507, 0.4322", "469.868, 619.62, 28.5673, 0.4322", "470.503, 620.446, 28.6415, 0.5084", "471.631, 620.615, 28.8854, 0.5338", "472.411, 620.59, 30.87, 0.5338", "473.45, 620.321, 30.252, 0.6102", "474.206, 619.87, 28.6076, 0.7118", "475.286, 619.922, 28.1526, 0.839", "476.328, 620.356, 28.5443, 0.8898", "477.355, 620.859, 28.56, 0.8644", "478.398, 621.326, 28.5603, 0.788", "479.474, 621.714, 28.5611, 0.6864", "480.484, 622.224, 28.5656, 0.6356", "481.394, 622.911, 28.5863, 0.6102", "482.431, 623.313, 28.6961, 0.5848", "483.54, 623.211, 29.2166, 0.6102", "484.648, 623.229, 29.4714, 0.6356", "485.726, 623.474, 28.8876, 0.7118", "486.811, 623.549, 28.149, 0.7118", "487.922, 623.498, 28.3559, 0.6864", "488.987, 623.758, 28.9195, 0.6356", "490.003, 624.265, 28.9836, 0.6102", "490.926, 624.915, 28.6126, 0.6356", "491.79, 625.648, 28.2556, 0.6864", "492.738, 626.244, 28.4847, 0.7372", "493.672, 626.897, 28.3682, 0.7118", "494.706, 627.377, 28.5037, 0.6356", "495.756, 627.828, 28.56, 0.5592", "496.868, 628.037, 28.56, 0.6356", "498.0, 628.186, 28.56, 0.7372", "499.133, 628.35, 28.5603, 0.839", "500.264, 628.518, 28.5611, 0.7372", "501.35, 628.852, 28.5667, 0.5848", "502.445, 629.155, 28.6028, 0.4576", "503.513, 628.969, 28.9428, 0.4576", "504.464, 628.382, 29.4748, 0.5592", "505.51, 628.027, 29.6218, 0.6356", "506.634, 628.038, 29.2732, 0.7372", "507.704, 628.379, 29.101, 0.788", "508.753, 628.764, 29.6299, 0.839", "509.892, 628.857, 29.6817, 0.8136", "511.036, 628.857, 29.692, 0.788", "512.179, 628.853, 29.7637, 0.7372", "513.315, 628.835, 30.0756, 0.7118", "514.445, 628.719, 30.0398, 0.6864", "515.489, 628.289, 29.6226, 0.6864", "516.5, 627.786, 29.381, 0.661", "517.581, 627.673, 28.7384, 0.661", "518.674, 627.992, 28.56, 0.7118", "519.805, 628.053, 28.5603, 0.839", "520.864, 627.63, 28.5617, 0.966", "521.997, 627.487, 28.5729, 1.0168", "523.141, 627.503, 28.6538, 1.0168", "524.268, 627.585, 29.0772, 0.966", "525.353, 627.915, 29.372, 0.8898", "526.432, 628.074, 28.546, 0.8136", "527.516, 628.138, 28.0106, 0.7372", "528.517, 627.641, 27.5033, 0.7626", "529.531, 627.179, 27.5089, 0.788", "530.659, 627.087, 27.8099, 0.839", "531.688, 626.958, 28.957, 0.8136", "532.654, 626.636, 30.1952, 0.7372", "533.642, 626.293, 29.6019, 0.661", "534.708, 625.985, 29.6355, 0.6102", "535.796, 625.664, 29.6503, 0.661", "536.935, 625.654, 29.4728, 0.7118", "538.036, 625.654, 28.7266, 0.7626", "539.107, 625.655, 28.1716, 0.7118", "540.247, 625.656, 27.9583, 0.6864", "541.388, 625.657, 27.7446, 0.6864", "542.528, 625.657, 27.5313, 0.7626", "543.669, 625.658, 27.3176, 0.7372", "544.789, 625.543, 26.913, 0.6102", "545.891, 625.337, 26.3603, 0.4068", "546.992, 625.131, 25.8079, 0.305", "548.003, 624.677, 25.5578, 0.2796", "548.938, 624.016, 25.5578, 0.3304", "549.96, 623.533, 25.5578, 0.3304", "551.052, 623.192, 25.5578, 0.356", "552.13, 623.11, 25.4405, 0.3814", "553.185, 623.53, 25.0961, 0.5084", "554.24, 623.95, 24.7514, 0.661", "555.294, 624.37, 24.407, 0.7626", "556.349, 624.79, 24.0626, 0.7118", "557.435, 624.867, 23.891, 0.5592", "558.547, 624.603, 23.891, 0.4068", "559.661, 624.339, 23.891, 0.3304", "560.591, 623.706, 23.891, 0.3304", "561.531, 623.212, 23.891, 0.356", "562.651, 623.45, 23.891, 0.3814", "563.771, 623.688, 23.891, 0.356", "564.867, 624.003, 23.891, 0.3304", "565.932, 624.419, 23.891, 0.305", "566.997, 624.836, 23.891, 0.2796", "568.12, 624.744, 24.1531, 0.305", "569.249, 624.6, 24.4429, 0.3814", "570.378, 624.455, 24.7324, 0.483", "571.484, 624.264, 25.0023, 0.483", "572.286, 623.448, 25.0023, 0.4322", "573.226, 622.807, 25.0023, 0.3814", "574.25, 622.341, 24.8595, 0.3814", "575.357, 622.088, 24.4798, 0.3304", "576.461, 621.835, 24.1004, 0.2796", "577.576, 621.786, 23.891, 0.2288", "578.702, 621.989, 23.891, 0.2288", "579.827, 622.192, 23.891, 0.2288", "580.953, 622.394, 23.891, 0.2288", "582.078, 622.598, 23.891, 0.2288", "583.203, 622.8, 23.891, 0.2288", "584.331, 623.003, 23.891, 0.2288", "585.456, 623.207, 23.891, 0.2288", "586.492, 623.602, 23.891, 0.2288", "587.372, 624.333, 23.891, 0.2288", "588.19, 624.609, 23.5393, 0.2288", "588.865, 623.82, 22.365, 0.2542", "589.38, 622.901, 21.6686, 0.2796", "589.664, 621.793, 21.6686, 0.305", "590.438, 621.043, 21.6686, 0.3304", "591.409, 620.44, 21.6686, 0.3814" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "465.392, 618.168, 29.3042, 0.6102", "465.546, 617.666, 28.5194, 0.4322", "465.579, 616.554, 28.3349, 0.4068", "465.434, 615.486, 29.2127, 0.3814", "465.186, 614.381, 29.0576, 0.356", "465.211, 613.262, 28.5074, 0.4068", "465.647, 612.245, 27.841, 0.5338" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "466.309, 620.643, 38.015, 0.4322", "467.332, 620.731, 38.7313, 0.5848", "468.365, 620.807, 38.3589, 0.5338", "469.326, 620.366, 37.5763, 0.5338", "470.246, 619.691, 37.52, 0.5592", "471.186, 619.055, 37.52, 0.5848", "472.256, 618.676, 37.52, 0.6356", "473.385, 618.514, 37.52, 0.661", "474.517, 618.578, 37.52, 0.6356", "475.633, 618.532, 37.52, 0.5848", "476.759, 618.402, 37.52, 0.5338", "477.883, 618.56, 37.52, 0.5592", "479.001, 618.583, 37.52, 0.5338", "480.014, 618.117, 37.52, 0.4576", "480.98, 617.507, 37.52, 0.356", "482.058, 617.21, 37.52, 0.3814", "483.069, 617.564, 37.5203, 0.483", "483.944, 618.3, 37.5214, 0.661", "484.868, 618.964, 37.5278, 0.7372", "485.941, 619.278, 37.5774, 0.839", "487.048, 619.507, 37.9022, 0.788", "488.164, 619.67, 38.2253, 0.7626", "489.296, 619.664, 38.0226, 0.661", "490.362, 619.458, 38.4658, 0.661", "491.319, 619.026, 39.5377, 0.6864", "492.252, 618.48, 39.41, 0.7118", "493.271, 618.049, 38.8794, 0.6864", "494.379, 617.943, 39.0662, 0.6356", "495.445, 618.231, 39.5416, 0.5848", "496.376, 618.862, 39.5016, 0.5592", "497.351, 619.214, 39.8829, 0.4576", "497.625, 618.337, 39.6262, 0.3814", "497.006, 618.755, 39.7132, 0.3304", "497.635, 619.553, 39.7659, 0.4322", "498.73, 619.872, 39.8012, 0.6102", "499.85, 619.918, 40.0529, 0.7118", "500.939, 620.008, 40.5594, 0.6864", "502.012, 620.368, 40.7747, 0.5848", "503.102, 620.45, 40.3474, 0.5592", "504.167, 620.122, 39.8737, 0.6102", "505.253, 619.797, 39.7499, 0.6102", "506.388, 619.697, 39.6897, 0.5848", "507.515, 619.648, 39.3098, 0.5338", "508.596, 619.374, 38.9634, 0.5848", "509.49, 618.763, 39.478, 0.6356", "510.312, 618.101, 40.4919, 0.6356", "511.199, 617.396, 40.8663, 0.5338", "512.078, 616.669, 40.8842, 0.4576", "513.086, 616.134, 40.9038, 0.483", "514.148, 615.717, 41.02, 0.5848", "515.125, 615.156, 41.447, 0.6864", "516.129, 614.691, 42.131, 0.7118", "517.062, 614.059, 42.6216, 0.7118", "517.979, 613.401, 43.0296, 0.7118", "518.914, 612.758, 42.8635, 0.788", "519.904, 612.281, 42.114, 0.839", "520.872, 611.916, 40.9304, 0.788", "521.909, 611.744, 40.1531, 0.661", "523.016, 611.717, 40.6944, 0.5592", "524.086, 611.351, 41.0945, 0.5338", "525.159, 611.022, 41.4022, 0.483", "526.281, 610.877, 41.0231, 0.4322", "527.409, 610.707, 40.8881, 0.3814", "528.474, 611.086, 40.8814, 0.4068", "529.5, 611.59, 40.8878, 0.4322", "530.538, 612.072, 40.9237, 0.4576", "531.651, 612.307, 41.1286, 0.4576", "532.721, 612.074, 41.7483, 0.5084", "533.802, 611.741, 41.6679, 0.5338", "534.901, 611.68, 41.1398, 0.5338", "536.018, 611.811, 40.9052, 0.4068", "537.125, 611.565, 41.0452, 0.3304", "538.135, 611.087, 41.5156, 0.305", "539.24, 610.888, 41.9936, 0.3814", "540.335, 610.556, 41.9731, 0.4322", "541.461, 610.406, 41.7964, 0.4576", "542.359, 611.032, 40.9973, 0.4576", "543.451, 611.364, 40.8918, 0.4322", "544.591, 611.443, 40.964, 0.3814", "545.698, 611.272, 41.5092, 0.305", "546.721, 610.827, 41.9012, 0.2542", "547.786, 610.444, 42.0106, 0.2796", "548.762, 610.831, 42.0616, 0.3304", "549.51, 611.667, 42.4228, 0.3814", "550.195, 612.468, 43.4515, 0.3814", "551.206, 612.566, 43.2846, 0.4068", "552.312, 612.425, 42.6611, 0.4322", "553.395, 612.45, 42.5704, 0.4322", "554.526, 612.49, 42.1714, 0.3814", "555.658, 612.53, 41.7726, 0.3304", "556.708, 612.157, 41.6707, 0.2796", "557.796, 611.974, 41.6707, 0.2796", "558.783, 612.428, 41.6707, 0.2796", "559.556, 613.269, 41.6707, 0.305", "560.57, 613.7, 42.1719, 0.2796", "561.63, 614.063, 42.7526, 0.2796", "562.689, 614.425, 43.3336, 0.305", "563.807, 614.59, 43.7648, 0.356", "564.927, 614.754, 44.1949, 0.3814", "566.044, 614.917, 44.625, 0.3814", "567.163, 615.08, 45.0551, 0.4068", "568.281, 615.243, 45.4852, 0.4322", "569.395, 615.197, 46.0653, 0.4322", "570.508, 615.107, 46.6774, 0.4068", "571.624, 615.021, 47.2268, 0.356", "572.766, 614.966, 47.2268, 0.356", "573.909, 614.91, 47.2268, 0.356", "574.974, 614.906, 46.3271, 0.3814", "576.018, 614.914, 45.1791, 0.356", "577.06, 614.922, 44.0311, 0.305", "578.104, 614.93, 42.8828, 0.2542", "579.148, 614.939, 41.7348, 0.2288", "580.281, 615.038, 41.6707, 0.2288", "581.375, 615.269, 41.8398, 0.2288", "582.359, 615.802, 42.4172, 0.2288", "583.252, 616.462, 42.7818, 0.2288", "583.982, 617.34, 42.7818, 0.2542", "584.716, 618.22, 42.7818, 0.2796", "585.471, 619.075, 42.7818, 0.305", "586.362, 619.793, 42.7818, 0.2796", "587.252, 620.513, 42.7818, 0.2542", "588.177, 621.184, 42.7818, 0.2288", "589.115, 621.838, 42.7818, 0.2288", "590.034, 622.517, 42.7818, 0.2288", "590.901, 623.264, 42.7818, 0.2288", "591.767, 624.012, 42.7818, 0.2288", "592.633, 624.759, 42.7818, 0.2288", "593.499, 625.507, 42.7818, 0.2288", "594.365, 626.254, 42.7818, 0.2288" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "466.309, 620.643, 38.015, 0.4322", "466.484, 621.126, 38.9964, 0.483", "466.544, 621.878, 41.1004, 0.5338", "466.66, 622.62, 43.1897, 0.661", "467.138, 623.313, 44.9515, 0.7626", "467.691, 624.293, 45.0495, 0.7626", "467.917, 625.381, 44.6177, 0.6102", "468.079, 626.473, 45.1508, 0.4322", "468.776, 627.126, 45.4196, 0.3814", "469.868, 626.838, 45.7478, 0.483", "470.905, 626.779, 46.648, 0.6102", "471.867, 627.244, 47.3768, 0.661", "472.862, 627.652, 47.0834, 0.6102", "473.978, 627.627, 46.8356, 0.5848", "475.059, 627.811, 47.3558, 0.5848", "476.008, 628.384, 47.9371, 0.5848", "476.755, 628.899, 49.2565, 0.5084", "477.398, 628.725, 51.2744, 0.4322", "478.342, 628.628, 52.0696, 0.356", "479.284, 629.213, 52.1769, 0.3814", "480.217, 629.819, 52.684, 0.4068", "480.919, 629.386, 53.8482, 0.483", "481.756, 628.747, 54.847, 0.4576", "482.726, 628.923, 55.9048, 0.4576", "483.531, 629.678, 56.3492, 0.4068", "484.415, 630.354, 55.8499, 0.4322", "485.351, 630.534, 57.1964, 0.4068", "486.028, 630.518, 59.4392, 0.4068", "486.594, 629.883, 61.2875, 0.356", "487.398, 629.376, 62.7424, 0.3814", "488.489, 629.586, 62.407, 0.4322", "489.025, 630.294, 63.3394, 0.5848" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_36",
    "id" : "apic_36",
    "points3d" : [ "420.307, 634.427, 36.4006, 0.6864", "418.974, 634.716, 35.3716, 0.8898", "418.073, 635.371, 35.845, 0.7372", "417.085, 635.625, 36.8679, 0.5592", "416.027, 635.581, 37.9011, 0.4322", "414.915, 635.645, 38.4726, 0.483", "413.781, 635.661, 38.6274, 0.5592", "412.682, 635.396, 38.558, 0.5592", "411.687, 634.897, 38.064, 0.5084", "410.66, 634.544, 37.3159, 0.4322", "409.59, 634.709, 37.2778, 0.4068", "408.683, 634.907, 38.8898, 0.3304", "407.798, 635.33, 40.3301, 0.3304", "406.757, 635.785, 40.115, 0.356", "405.664, 636.07, 40.4765, 0.4322", "404.582, 635.815, 40.9814, 0.4322", "403.81, 635.074, 41.5302, 0.4322", "403.143, 635.263, 43.741, 0.4576", "402.273, 635.966, 44.3352, 0.483", "401.31, 636.559, 44.6961, 0.483", "400.241, 636.858, 45.1455, 0.4322", "399.227, 636.433, 44.4212, 0.4322", "398.403, 635.744, 43.5935, 0.4322", "397.388, 635.296, 44.1633, 0.4576", "396.367, 635.124, 45.3023, 0.4322", "395.271, 634.927, 45.7103, 0.3814", "394.233, 635.213, 46.6108, 0.356", "393.307, 635.64, 47.766, 0.3814", "392.393, 635.665, 49.1652, 0.4322", "391.306, 635.396, 48.9, 0.483", "390.342, 634.799, 49.0428, 0.483", "389.34, 634.435, 49.8131, 0.483", "388.34, 634.66, 50.8528, 0.483", "387.466, 635.251, 51.4858, 0.5338", "386.423, 635.63, 51.023, 0.5848", "385.284, 635.724, 50.9653, 0.5592", "384.142, 635.74, 50.9967, 0.483", "383.012, 635.848, 51.1997, 0.4322", "381.975, 636.043, 52.0758, 0.4322", "381.002, 636.005, 52.9707, 0.5084", "379.917, 635.74, 52.3695, 0.5084", "378.797, 635.728, 52.8581, 0.483", "378.019, 635.757, 54.8904, 0.3814", "377.415, 635.972, 57.192, 0.3304", "376.545, 636.694, 57.6024, 0.356", "375.738, 637.496, 57.332, 0.4068", "374.933, 638.26, 56.6709, 0.483", "374.047, 638.97, 56.8084, 0.483", "372.969, 639.173, 57.6069, 0.4576", "371.967, 639.471, 58.2232, 0.4068", "371.474, 640.484, 58.4273, 0.4068", "371.052, 641.49, 58.1918, 0.4576", "370.704, 642.326, 59.7601, 0.483", "370.792, 643.113, 61.6955, 0.4576", "370.967, 643.828, 63.3973, 0.3814", "371.066, 644.13, 66.0876, 0.3304", "371.163, 644.431, 68.7781, 0.2796", "371.26, 644.733, 71.4683, 0.2542", "371.357, 645.035, 74.1588, 0.2288", "371.454, 645.336, 76.8491, 0.2288", "371.571, 645.655, 79.5206, 0.2288", "371.75, 646.027, 82.1318, 0.2288", "371.928, 646.4, 84.7431, 0.2288", "372.107, 646.772, 87.3544, 0.2288", "372.285, 647.145, 89.9657, 0.2288", "372.464, 647.517, 92.577, 0.2288", "372.642, 647.89, 95.188, 0.2288", "372.82, 648.261, 97.7992, 0.2288", "373.104, 648.692, 100.009, 0.2796", "373.971, 649.438, 100.009, 0.3304" ],
    "parent" : "apic_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_33",
    "id" : "apic_33",
    "points3d" : [ "420.307, 634.427, 36.4006, 0.6864", "419.575, 634.718, 36.4028, 0.6102", "418.595, 635.278, 36.4123, 0.6864", "417.819, 636.106, 36.4613, 0.8136", "417.19, 637.051, 36.7296, 0.8136", "416.48, 637.914, 36.8567, 0.8136", "415.631, 638.667, 36.5036, 0.7372", "414.871, 639.502, 36.1598, 0.7372", "414.424, 640.499, 35.6552, 0.7118", "414.247, 641.609, 35.2097, 0.6864", "413.883, 642.652, 34.7808, 0.6102", "413.137, 643.46, 34.2762, 0.5592", "412.18, 644.072, 33.999, 0.5338", "411.22, 644.681, 33.7098, 0.5084", "410.337, 645.286, 32.8437, 0.483", "409.39, 645.818, 32.0681, 0.4322", "408.316, 646.174, 31.824, 0.4068", "407.189, 646.345, 31.733, 0.3814", "406.144, 646.757, 31.8514, 0.4068", "405.165, 647.347, 31.8909, 0.4322", "404.079, 647.612, 31.717, 0.4068", "403.079, 647.769, 30.5645, 0.3304", "402.383, 648.415, 29.1847, 0.2542", "401.665, 649.25, 28.5348, 0.2288", "400.803, 649.974, 28.0773, 0.2542", "399.956, 650.08, 26.469, 0.2796", "399.451, 649.42, 24.7005, 0.3304", "398.714, 648.609, 24.1251, 0.3304", "397.669, 648.179, 24.0576, 0.356", "396.56, 648.373, 23.9375, 0.356", "395.471, 648.598, 23.2893, 0.4322", "394.377, 648.9, 22.9779, 0.5084", "393.239, 648.988, 22.9463, 0.5848", "392.096, 649.0, 22.8662, 0.5592", "390.971, 649.049, 22.3754, 0.483", "389.883, 649.358, 22.6996, 0.4068", "389.008, 650.084, 22.9435, 0.4068", "388.188, 650.881, 22.923, 0.4068", "387.339, 651.645, 22.806, 0.4322", "386.352, 652.157, 22.1589, 0.4576", "385.227, 652.217, 21.6681, 0.5084" ],
    "parent" : "apic_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_29",
    "id" : "apic_29",
    "points3d" : [ "429.988, 622.508, 40.7109, 0.7626", "429.914, 621.256, 40.2864, 0.7372", "429.868, 620.131, 39.7888, 0.7118", "429.686, 619.003, 39.7032, 0.5848", "430.223, 618.031, 39.2524, 0.5848", "431.288, 617.873, 38.3555, 0.5592" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "429.988, 622.508, 40.7109, 0.7626", "428.907, 621.051, 39.0594, 1.0424", "428.451, 620.019, 38.6526, 1.1186", "427.866, 619.038, 38.6075, 1.0168", "427.14, 618.156, 38.4832, 0.8898", "426.308, 617.438, 37.7096, 0.6356", "425.339, 617.119, 36.4501, 0.5084" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "392.921, 661.686, 32.853, 0.5084", "393.036, 661.115, 31.3975, 0.4576", "393.174, 660.364, 29.3118, 0.5848", "392.289, 660.212, 28.8915, 0.6356", "391.191, 660.369, 28.8915, 0.5848", "390.23, 660.992, 28.8915, 0.4576", "389.243, 661.563, 28.7104, 0.3304", "388.247, 662.119, 28.4726, 0.2542", "387.253, 662.673, 28.2352, 0.2288", "386.258, 663.229, 27.9975, 0.2288", "385.263, 663.784, 27.76, 0.2288", "384.267, 664.34, 27.5223, 0.2288", "383.271, 664.895, 27.2849, 0.2288", "382.165, 665.056, 27.2247, 0.2288", "381.022, 665.083, 27.2247, 0.2288", "379.878, 665.11, 27.2247, 0.2542", "378.956, 665.656, 27.2247, 0.2796", "378.147, 666.465, 27.2247, 0.3304", "377.292, 667.212, 27.3638, 0.3304", "376.359, 667.858, 27.7323, 0.3304", "375.428, 668.503, 28.1008, 0.2796", "374.495, 669.15, 28.469, 0.2542", "373.562, 669.795, 28.8375, 0.2542", "372.645, 670.476, 28.8915, 0.305", "371.643, 670.923, 28.8915, 0.356", "370.502, 670.982, 28.8915, 0.356", "369.438, 671.401, 28.8915, 0.3304", "368.432, 671.927, 28.8915, 0.305", "367.512, 672.608, 28.8915, 0.305", "366.657, 673.354, 28.8915, 0.2796", "365.956, 674.259, 28.8915, 0.2542", "365.165, 674.897, 28.6672, 0.2542", "364.094, 674.731, 27.7668, 0.2796", "363.023, 674.565, 26.8663, 0.3304", "362.195, 673.897, 26.1433, 0.3304", "361.433, 673.09, 25.4702, 0.356", "360.702, 672.26, 25.2372, 0.3304", "360.042, 671.38, 26.0072, 0.356", "359.381, 670.501, 26.7775, 0.356", "358.634, 669.677, 27.2247, 0.3814", "357.768, 668.93, 27.2247, 0.3814", "356.901, 668.183, 27.2247, 0.356", "356.18, 667.336, 26.7887, 0.356", "355.573, 666.414, 26.1136, 0.3304", "355.316, 665.299, 26.1136, 0.3304", "355.078, 664.181, 26.1136, 0.2796", "354.838, 663.062, 26.1136, 0.2542", "355.421, 662.62, 26.1136, 0.2542" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "392.921, 661.686, 32.853, 0.5084", "392.273, 662.169, 32.2745, 0.4576", "391.374, 662.715, 31.1968, 0.4068", "390.374, 663.194, 31.3412, 0.4576", "389.431, 663.812, 31.7666, 0.483", "388.453, 664.395, 31.6803, 0.4576", "387.378, 664.529, 30.9756, 0.4068", "386.25, 664.471, 30.5964, 0.4068", "385.226, 664.081, 29.904, 0.483", "384.445, 663.272, 29.7027, 0.5592", "383.486, 662.663, 29.727, 0.5848", "382.476, 662.132, 29.9216, 0.5338", "381.397, 662.149, 30.6942, 0.483", "380.438, 662.081, 29.8351, 0.4322", "379.322, 662.016, 29.689, 0.4322", "378.206, 662.067, 29.7424, 0.4576", "377.098, 662.288, 30.1078, 0.5592", "376.004, 662.556, 30.5766, 0.6102", "374.89, 662.67, 30.4531, 0.6356", "373.778, 662.495, 30.0672, 0.6102", "372.704, 662.203, 30.4419, 0.6102", "371.607, 661.934, 30.6664, 0.6102", "370.515, 661.981, 30.1098, 0.5592", "369.655, 662.544, 29.108, 0.483", "368.696, 663.037, 28.3195, 0.3814", "367.596, 662.994, 28.3693, 0.356", "366.582, 662.498, 28.3825, 0.3814", "365.808, 661.703, 27.8863, 0.4068", "364.953, 660.969, 28.0196, 0.4068", "363.969, 660.422, 28.4735, 0.3814", "362.963, 659.884, 28.5729, 0.3814", "361.991, 659.281, 28.6264, 0.3814", "360.938, 658.88, 28.9895, 0.4068", "359.877, 659.166, 29.3622, 0.4576", "358.785, 659.266, 28.7395, 0.5084", "357.841, 658.666, 28.5768, 0.483", "356.875, 658.054, 28.5961, 0.4576", "355.801, 657.674, 28.7806, 0.4068", "354.766, 657.316, 29.5677, 0.4576", "353.654, 657.064, 29.5098, 0.483", "352.6, 656.721, 28.8361, 0.5592", "351.512, 656.385, 28.5659, 0.5592", "350.372, 656.317, 28.5424, 0.5338", "349.229, 656.326, 28.439, 0.483", "348.117, 656.401, 27.8152, 0.4576", "347.053, 656.816, 27.8642, 0.4322" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "465.647, 612.245, 27.841, 0.5338", "465.963, 612.349, 26.6921, 0.4322", "466.711, 611.687, 26.0131, 0.4576", "467.388, 610.911, 24.8296, 0.483", "468.133, 610.064, 24.9956, 0.5592", "468.762, 609.115, 25.2473, 0.6102", "469.604, 608.351, 25.5242, 0.5848", "470.273, 607.47, 26.2248, 0.483", "470.21, 606.343, 25.9552, 0.3814", "469.654, 605.391, 25.2112, 0.3814", "469.117, 604.424, 24.7957, 0.4068", "469.458, 603.363, 24.2413, 0.483", "470.035, 602.409, 24.1304, 0.483", "470.936, 601.873, 23.0798, 0.483", "471.941, 601.552, 22.2648, 0.4322", "472.772, 600.769, 22.3135, 0.3814", "473.614, 600.108, 22.1651, 0.305", "474.461, 599.628, 21.6924, 0.2796", "474.894, 598.663, 22.5408, 0.305", "475.342, 597.676, 22.3815, 0.3814", "476.068, 596.825, 21.9061, 0.4322", "476.776, 595.931, 21.8369, 0.4576", "477.496, 595.047, 21.8268, 0.4576", "478.324, 594.259, 21.782, 0.4322", "479.251, 593.641, 21.3884, 0.3814", "480.026, 593.236, 19.8456, 0.305", "480.792, 592.825, 18.1664, 0.2796", "481.743, 592.307, 17.9956, 0.3304", "482.674, 591.717, 18.7186, 0.4068", "483.551, 591.225, 19.9861, 0.483", "484.56, 590.897, 20.4142, 0.4576", "485.575, 590.544, 19.5502, 0.4322", "486.53, 589.999, 18.851, 0.356", "487.415, 589.322, 19.1954, 0.3304", "488.212, 589.082, 20.9348, 0.305", "489.089, 589.126, 22.7125, 0.305", "490.112, 589.499, 23.0378, 0.305", "490.989, 590.057, 21.9383, 0.305", "492.031, 590.489, 21.576, 0.3304", "493.036, 591.032, 21.448, 0.3814" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "465.647, 612.245, 27.841, 0.5338", "466.118, 611.863, 27.5968, 0.356", "466.977, 611.112, 27.4484, 0.3814", "467.151, 610.07, 27.4406, 0.4068", "466.755, 609.012, 27.442, 0.483", "466.81, 607.907, 27.4546, 0.5338", "466.973, 606.774, 27.5397, 0.5338", "467.094, 605.662, 28.0804, 0.483", "467.365, 604.568, 28.5149, 0.483", "467.467, 603.435, 28.6594, 0.483", "467.668, 602.311, 28.6863, 0.4322", "468.19, 601.33, 28.145, 0.356", "468.526, 600.284, 27.3972, 0.3304", "468.855, 599.203, 26.992, 0.356", "469.453, 598.382, 28.2145, 0.3814", "469.728, 597.281, 28.4105, 0.4068", "469.76, 596.175, 27.7015, 0.4322", "469.94, 595.057, 27.3118, 0.4576" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "489.025, 630.294, 63.3394, 0.5848", "489.182, 629.963, 64.8855, 0.2542", "489.431, 629.444, 67.3064, 0.356", "489.678, 628.925, 69.7276, 0.4576", "489.927, 628.407, 72.1487, 0.5338", "490.766, 627.93, 73.6179, 0.4576", "491.625, 627.454, 75.0546, 0.3814", "492.483, 626.978, 76.4912, 0.2796", "493.342, 626.501, 77.9279, 0.2542", "494.199, 626.126, 79.4886, 0.2288", "495.053, 625.96, 81.3053, 0.2288", "495.908, 625.793, 83.1219, 0.2288", "496.763, 625.626, 84.9386, 0.2288", "497.617, 625.459, 86.7552, 0.2288", "498.471, 625.293, 88.5718, 0.2542", "499.404, 625.039, 89.9906, 0.2796", "500.411, 624.704, 91.0347, 0.305", "501.419, 624.369, 92.0786, 0.2796", "502.427, 624.034, 93.1227, 0.2542", "503.433, 623.7, 94.1668, 0.2288", "504.441, 623.365, 95.2106, 0.2288", "505.448, 623.029, 96.2548, 0.2288", "506.456, 622.694, 97.2986, 0.305", "507.462, 622.359, 98.3427, 0.4068" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "489.025, 630.294, 63.3394, 0.5848", "489.368, 630.622, 63.5673, 0.5084", "490.24, 631.299, 64.295, 0.4576", "491.111, 631.978, 65.0227, 0.356", "491.984, 632.656, 65.7502, 0.2542", "492.719, 633.482, 66.1172, 0.2288", "493.312, 634.459, 66.1172, 0.2288", "493.984, 635.321, 66.7092, 0.2288", "494.709, 636.098, 67.7421, 0.2542", "495.435, 636.876, 68.775, 0.305", "496.028, 637.721, 69.8718, 0.4068", "496.37, 638.692, 71.0889, 0.4576", "496.65, 639.634, 72.3562, 0.4576", "496.033, 640.142, 74.359, 0.356", "495.415, 640.65, 76.3619, 0.2796", "495.439, 641.157, 78.7727, 0.2542", "495.618, 641.617, 81.2221, 0.3304", "496.417, 641.292, 83.0623, 0.4068", "497.216, 640.966, 84.9027, 0.4322", "498.014, 640.641, 86.7429, 0.356", "498.962, 640.467, 87.7862, 0.2796", "500.107, 640.489, 87.7862, 0.2288", "501.25, 640.512, 87.7862, 0.2288", "502.39, 640.513, 87.7862, 0.2542", "503.473, 640.143, 87.7862, 0.2796", "504.556, 639.774, 87.7862, 0.305", "505.631, 639.386, 87.7862, 0.2796", "506.627, 638.825, 87.7862, 0.2542", "507.624, 638.263, 87.7862, 0.2288", "508.618, 637.7, 87.7862, 0.2288", "509.615, 637.138, 87.7862, 0.2288", "510.612, 636.575, 87.7862, 0.2288", "511.608, 636.014, 87.7862, 0.2542", "512.604, 635.451, 87.7862, 0.3304", "513.601, 634.889, 87.7862, 0.4068" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_35",
    "id" : "apic_35",
    "points3d" : [ "385.227, 652.217, 21.6681, 0.5084", "384.691, 653.237, 21.3906, 0.3814", "384.195, 654.262, 21.1218, 0.356", "383.699, 655.286, 20.853, 0.2796", "383.202, 656.31, 20.5839, 0.2796", "382.315, 657.012, 20.5576, 0.3304", "381.342, 657.615, 20.5576, 0.4322", "380.354, 658.188, 20.5576, 0.483", "379.339, 658.677, 20.4016, 0.4322", "378.249, 658.906, 19.7588, 0.3304", "377.16, 659.135, 19.1159, 0.2542", "376.096, 658.918, 18.8908, 0.2288", "375.048, 658.461, 18.8908, 0.2542", "373.995, 658.012, 18.8908, 0.2796", "373.174, 657.219, 18.8908, 0.305", "372.275, 656.518, 18.8908, 0.2796", "371.167, 656.692, 18.8908, 0.2542", "370.047, 656.926, 18.8908, 0.2288" ],
    "parent" : "apic_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_34",
    "id" : "apic_34",
    "points3d" : [ "385.227, 652.217, 21.6681, 0.5084", "384.548, 652.311, 20.9972, 0.2288", "383.571, 652.62, 19.7946, 0.2288", "382.574, 652.877, 18.5951, 0.2542", "382.184, 652.153, 17.5193, 0.2796", "382.155, 651.017, 17.5451, 0.3814", "381.41, 650.364, 16.24, 0.4576" ],
    "parent" : "apic_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_31",
    "id" : "apic_31",
    "points3d" : [ "431.288, 617.873, 38.3555, 0.5592", "431.479, 617.965, 39.8882, 0.5592", "432.053, 618.311, 42.1061, 0.5084", "432.819, 618.767, 43.8385, 0.5592", "433.648, 618.624, 45.0486, 0.5848", "433.958, 617.65, 45.5946, 0.6102", "433.534, 616.897, 46.8426, 0.5084", "432.621, 617.17, 47.7582, 0.483", "431.786, 617.797, 48.8443, 0.4068", "431.638, 618.524, 50.7564, 0.4322", "431.796, 619.524, 51.9565, 0.4068", "432.255, 620.554, 52.2239, 0.4068", "432.721, 621.542, 53.0141, 0.4322", "432.87, 622.666, 53.2087, 0.483", "432.685, 623.791, 53.3016, 0.5338", "432.739, 624.919, 53.7113, 0.483", "433.031, 625.992, 54.3536, 0.483", "432.864, 626.79, 56.3007, 0.4576", "432.457, 627.769, 57.1315, 0.5084", "433.06, 628.182, 59.2082, 0.483", "433.018, 629.262, 59.9256, 0.5338", "432.562, 630.311, 59.9539, 0.5338", "432.183, 631.369, 60.2319, 0.5848", "431.837, 632.336, 61.3455, 0.5848", "431.155, 633.161, 62.2104, 0.5848", "430.47, 634.059, 62.5346, 0.5592", "429.691, 634.849, 63.0311, 0.5592", "428.785, 635.547, 63.0118, 0.6102", "427.909, 636.271, 63.247, 0.661", "427.108, 637.015, 63.9985, 0.6356", "426.378, 637.791, 65.0031, 0.5848", "425.63, 638.616, 65.4931, 0.5338", "424.818, 639.422, 65.5407, 0.5338", "424.17, 640.33, 65.6905, 0.5084", "423.918, 641.336, 66.5972, 0.4576", "423.632, 641.984, 68.5658, 0.3814", "422.794, 642.185, 70.0137, 0.3304", "421.943, 642.607, 71.2561, 0.3304", "421.389, 643.403, 72.6984, 0.4322", "420.54, 643.998, 73.3603, 0.5338", "419.495, 644.423, 73.7828, 0.6356", "418.556, 644.995, 74.4741, 0.6356", "417.88, 645.825, 75.3519, 0.6864", "417.299, 646.735, 76.2801, 0.6864", "416.497, 647.498, 76.7362, 0.6864", "415.582, 648.14, 77.2906, 0.5848", "414.922, 648.852, 78.6582, 0.4576", "414.232, 649.275, 80.2911, 0.3304", "413.342, 649.752, 81.6136, 0.2542", "412.456, 650.229, 82.9357, 0.2288", "411.566, 650.706, 84.2579, 0.2288", "410.647, 651.349, 84.4525, 0.2288", "409.721, 652.022, 84.4525, 0.2288", "408.974, 652.839, 84.8464, 0.2288", "408.354, 653.76, 85.5212, 0.2288", "407.734, 654.682, 86.196, 0.2288", "407.115, 655.602, 86.8708, 0.2288", "406.495, 656.524, 87.5454, 0.2288", "405.815, 657.427, 87.7862, 0.2288", "405.101, 658.32, 87.7862, 0.2288", "404.385, 659.214, 87.7862, 0.2288", "403.672, 660.107, 87.7862, 0.305", "402.964, 661.002, 87.8371, 0.3814", "402.37, 661.915, 88.6959, 0.5084", "401.775, 662.827, 89.5546, 0.5338", "401.18, 663.739, 90.4134, 0.6102", "400.585, 664.651, 91.2722, 0.6102", "399.992, 665.563, 92.1309, 0.5848", "399.306, 666.401, 92.7864, 0.4576", "398.328, 666.994, 92.7864, 0.3304", "397.35, 667.587, 92.7864, 0.2542", "396.469, 668.178, 93.8003, 0.2542", "395.594, 668.769, 94.8822, 0.2796", "394.72, 669.359, 95.9641, 0.305", "393.845, 669.949, 97.046, 0.305", "392.971, 670.54, 98.1282, 0.305", "392.096, 671.13, 99.2102, 0.305", "391.251, 671.785, 100.101, 0.2796", "390.49, 672.627, 100.45, 0.2542", "389.728, 673.468, 100.799, 0.2288", "388.966, 674.309, 101.148, 0.2288", "388.204, 675.151, 101.497, 0.2288", "387.441, 675.992, 101.847, 0.2288", "386.678, 676.833, 102.196, 0.2288", "385.721, 677.449, 102.232, 0.2288", "384.741, 678.039, 102.232, 0.2288", "383.76, 678.629, 102.232, 0.2288", "382.781, 679.218, 102.232, 0.2542", "381.801, 679.808, 102.232, 0.2796", "380.792, 680.344, 102.184, 0.305", "379.76, 680.837, 102.099, 0.2796", "378.728, 681.331, 102.015, 0.2542", "377.697, 681.824, 101.93, 0.2288", "376.665, 682.318, 101.845, 0.2288", "375.635, 682.811, 101.761, 0.2796", "374.603, 683.305, 101.676, 0.3814" ],
    "parent" : "apic_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_30",
    "id" : "apic_30",
    "points3d" : [ "431.288, 617.873, 38.3555, 0.5592", "432.577, 617.861, 37.4139, 0.5848", "433.678, 617.786, 36.675, 0.6102", "434.72, 617.405, 35.9915, 0.6102", "435.664, 616.818, 36.6318, 0.5848", "436.701, 616.373, 36.6792, 0.5084", "437.831, 616.343, 36.6654, 0.4322", "438.936, 616.442, 37.2439, 0.4068", "440.014, 616.173, 37.5245, 0.4576", "440.89, 615.453, 37.5441, 0.5084", "441.681, 614.674, 37.6922, 0.5338", "442.734, 614.367, 38.1335, 0.5592", "443.833, 614.568, 38.4644, 0.6102", "444.939, 614.421, 38.3286, 0.661", "445.954, 614.13, 39.389, 0.661", "446.952, 613.857, 40.2598, 0.6102", "447.984, 613.411, 39.8776, 0.5338", "448.954, 612.804, 39.8006, 0.483", "449.896, 612.16, 39.9504, 0.483", "450.825, 611.531, 40.4359, 0.483", "451.589, 610.728, 39.76, 0.483", "452.191, 609.767, 39.4388, 0.4322", "452.777, 608.87, 38.5162, 0.4068", "453.736, 608.441, 38.2138, 0.3814", "454.405, 609.027, 39.8079, 0.3814", "455.15, 609.673, 39.4447, 0.4068", "456.17, 609.998, 39.38, 0.4322", "457.273, 609.9, 39.9025, 0.4576", "458.306, 609.44, 39.9885, 0.4576", "459.381, 609.291, 40.6134, 0.4576", "460.348, 609.794, 41.0743, 0.483", "460.824, 610.744, 41.9118, 0.483", "461.285, 611.717, 42.8492, 0.483", "461.831, 612.709, 43.1376, 0.4068", "462.789, 612.372, 43.4179, 0.4068", "463.584, 611.999, 45.12, 0.4068", "464.605, 612.448, 45.5076, 0.483", "465.366, 613.301, 45.3611, 0.5084", "466.161, 614.114, 45.365, 0.5338", "467.152, 614.685, 45.3888, 0.5338", "468.15, 615.237, 45.5235, 0.5084", "469.158, 615.719, 46.0807, 0.483", "470.145, 616.126, 47.0705, 0.483", "471.158, 616.591, 47.6941, 0.483", "472.212, 616.951, 48.1804, 0.4576", "473.253, 617.14, 49.1352, 0.4322", "474.28, 617.623, 49.324, 0.4322", "475.143, 618.345, 49.4211, 0.5338", "475.967, 618.995, 48.8555, 0.6356", "477.083, 618.906, 48.9664, 0.7626", "478.079, 618.407, 49.397, 0.788", "479.001, 617.741, 49.4581, 0.7118", "480.016, 617.273, 49.8014, 0.5848", "481.066, 617.015, 50.4795, 0.483", "482.189, 617.073, 50.2872, 0.483", "483.293, 617.284, 49.8716, 0.5084", "484.423, 617.425, 49.9044, 0.5084", "485.549, 617.464, 50.2662, 0.4322", "486.624, 617.588, 51.1482, 0.3814", "487.614, 617.426, 51.9338, 0.356", "488.427, 616.65, 52.2208, 0.4068", "489.174, 615.815, 52.6641, 0.4322", "490.107, 615.237, 52.8321, 0.4576", "491.165, 614.851, 52.369, 0.4576", "492.243, 614.496, 52.2138, 0.4576", "493.326, 614.27, 52.7705, 0.4322", "494.407, 614.196, 53.6556, 0.4068", "495.504, 614.09, 53.7393, 0.4068", "496.596, 613.815, 53.3235, 0.4322", "497.626, 613.598, 53.4811, 0.4322", "498.512, 613.023, 54.5289, 0.4068", "499.51, 612.568, 55.0194, 0.3814", "500.527, 612.081, 54.5706, 0.3814", "501.518, 611.523, 54.32, 0.3814", "502.523, 610.986, 54.32, 0.4322", "503.596, 610.593, 54.32, 0.483", "504.62, 610.103, 54.32, 0.5084", "505.543, 609.426, 54.32, 0.483", "506.445, 608.725, 54.32, 0.483", "507.278, 607.945, 54.32, 0.5338", "507.986, 607.051, 54.3206, 0.5338", "508.573, 606.068, 54.3236, 0.5338", "509.141, 605.075, 54.341, 0.5084", "509.814, 604.165, 54.4247, 0.5338", "510.605, 603.366, 54.8176, 0.483", "511.247, 602.468, 55.4694, 0.3814", "511.681, 601.437, 55.942, 0.305", "512.067, 600.401, 56.0823, 0.2796", "512.728, 599.526, 56.0706, 0.305", "513.305, 598.622, 56.6485, 0.3304", "513.52, 597.507, 56.6826, 0.3814", "513.883, 596.451, 56.5852, 0.5338", "514.487, 595.482, 56.7132, 0.6102", "515.203, 594.713, 57.4963, 0.7118", "516.117, 594.259, 58.7082, 0.6102", "517.077, 593.96, 60.0225, 0.5848", "517.851, 593.393, 61.327, 0.483", "518.323, 592.42, 61.9609, 0.5338", "518.539, 591.318, 61.7341, 0.5338", "518.841, 590.233, 61.5521, 0.5592", "519.323, 589.289, 62.3818, 0.5084", "520.109, 588.588, 63.2607, 0.483", "521.031, 587.983, 64.001, 0.4068", "521.698, 587.151, 64.829, 0.356", "522.487, 586.382, 65.3374, 0.3814", "523.388, 585.703, 65.0801, 0.5084", "524.309, 585.031, 64.9054, 0.6356", "525.356, 584.59, 64.967, 0.6356", "526.406, 584.192, 65.4559, 0.5848", "527.354, 583.597, 65.9638, 0.5338", "528.228, 582.894, 66.5123, 0.5084", "529.049, 582.103, 66.6462, 0.4322", "529.823, 581.262, 66.7047, 0.3304", "530.766, 580.827, 67.7001, 0.2796", "531.203, 579.977, 67.9876, 0.2796", "531.379, 578.853, 68.271, 0.305", "531.554, 577.728, 68.5541, 0.2796", "531.729, 576.604, 68.8374, 0.2542", "531.904, 575.479, 69.1208, 0.2288", "532.078, 574.354, 69.4039, 0.2542", "532.253, 573.23, 69.6872, 0.2796", "532.427, 572.105, 69.9703, 0.356", "532.715, 571.039, 70.6742, 0.3814", "533.018, 569.981, 71.4398, 0.4068", "533.323, 568.924, 72.2053, 0.3304", "533.625, 567.866, 72.9708, 0.2796", "533.771, 566.767, 73.5076, 0.2288", "533.771, 565.631, 73.8312, 0.2542", "533.773, 564.494, 74.1552, 0.2796", "533.773, 563.358, 74.4789, 0.305", "533.773, 562.222, 74.8026, 0.305", "533.773, 561.086, 75.1262, 0.3304", "533.773, 559.949, 75.4499, 0.356", "534.111, 558.891, 75.4261, 0.356", "534.628, 557.874, 75.2167, 0.4068", "535.145, 556.857, 75.007, 0.5084" ],
    "parent" : "apic_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_24",
    "id" : "apic_24",
    "points3d" : [ "425.339, 617.119, 36.4501, 0.5084", "425.273, 616.275, 36.0604, 0.4322", "424.996, 615.3, 34.7794, 0.5338", "424.888, 614.231, 33.9424, 0.5848", "424.93, 613.089, 34.0536, 0.6356", "425.157, 611.987, 34.1429, 0.661", "425.816, 611.062, 34.078, 0.7118", "426.702, 610.366, 33.7999, 0.6864", "427.724, 609.926, 33.2108, 0.6356", "428.806, 609.559, 33.059, 0.5338", "429.89, 609.196, 33.1083, 0.5084" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "425.339, 617.119, 36.4501, 0.5084", "424.54, 616.989, 35.9993, 0.6864", "423.48, 616.854, 35.0339, 0.7372", "422.461, 616.479, 34.3196, 0.8644", "421.577, 615.78, 34.1617, 0.9152", "420.919, 614.854, 34.1687, 0.9152", "420.444, 613.817, 34.2112, 0.839", "420.285, 612.703, 34.4744, 0.8136", "420.178, 611.679, 35.5799, 0.8644", "419.708, 610.693, 36.3426, 0.8898", "418.807, 610.01, 36.4, 0.8898", "417.874, 609.348, 36.3997, 0.788", "417.251, 608.394, 36.3986, 0.788", "416.67, 607.408, 36.393, 0.788", "415.97, 606.504, 36.3672, 0.8898", "415.556, 605.443, 36.1964, 0.9406", "415.129, 604.435, 35.3892, 0.966", "414.868, 603.398, 34.3916, 0.9406", "415.038, 602.273, 34.1704, 0.9152" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "347.053, 656.816, 27.8642, 0.4322", "346.863, 657.18, 28.7232, 0.2796", "346.258, 657.927, 30.07, 0.305", "345.338, 658.523, 30.7504, 0.3304", "344.298, 658.906, 31.3942, 0.4068", "343.198, 659.052, 31.9435, 0.5084", "342.16, 659.066, 31.2684, 0.5592", "341.13, 659.111, 30.1092, 0.5084", "340.036, 659.317, 29.7032, 0.4322", "338.908, 659.428, 29.6663, 0.3814", "337.805, 659.19, 29.5938, 0.3814", "336.758, 658.776, 29.1704, 0.3814", "335.71, 658.427, 28.4614, 0.4068", "334.622, 658.361, 27.7236, 0.4576", "333.53, 658.61, 27.3638, 0.483", "332.465, 658.954, 26.854, 0.4576", "331.35, 659.098, 26.6913, 0.3814", "330.251, 659.311, 27.1309, 0.356", "329.172, 659.664, 27.3722, 0.3304", "328.061, 659.651, 27.1883, 0.356", "326.938, 659.593, 27.4968, 0.3304", "325.849, 659.87, 27.7449, 0.356", "324.746, 660.08, 27.323, 0.3304", "323.805, 660.583, 28.0882, 0.3814", "322.844, 661.185, 28.2694, 0.3814", "321.789, 661.339, 27.384, 0.4576", "320.706, 661.364, 26.4838, 0.4322", "319.571, 661.455, 26.3782, 0.483", "318.496, 661.821, 26.6381, 0.483", "317.469, 662.244, 27.2978, 0.5592", "316.506, 662.855, 27.3426, 0.5338", "315.575, 663.502, 26.9788, 0.5084", "314.517, 663.855, 26.3805, 0.4576", "313.382, 663.981, 26.3838, 0.5084", "312.388, 664.506, 26.8506, 0.5848", "311.457, 665.155, 26.5311, 0.6864", "310.415, 665.515, 25.7796, 0.7118", "309.355, 665.859, 25.1924, 0.6864", "308.394, 666.474, 25.0695, 0.6102", "307.659, 667.299, 24.3981, 0.5338", "307.132, 667.956, 22.6145, 0.4322", "306.536, 668.559, 20.7399, 0.3304", "305.691, 669.199, 21.0291, 0.2542", "304.924, 669.852, 22.3437, 0.2542", "304.226, 670.251, 24.3275, 0.2796" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "347.053, 656.816, 27.8642, 0.4322", "345.992, 657.008, 28.4847, 0.356", "344.969, 657.325, 28.0871, 0.4322", "343.963, 656.924, 27.4758, 0.5338", "343.07, 656.211, 27.4588, 0.5592", "342.183, 655.495, 27.526, 0.5084", "341.168, 655.131, 27.8286, 0.4068", "340.111, 655.143, 27.6335, 0.356", "339.401, 654.739, 25.9372, 0.4068", "338.896, 654.04, 24.1088, 0.483", "338.308, 653.202, 23.1092, 0.5084", "337.596, 652.321, 22.9202, 0.4576", "336.618, 651.863, 22.6775, 0.4068", "335.517, 651.954, 22.2096, 0.356", "334.463, 652.327, 22.3311, 0.305", "333.452, 652.184, 22.8085, 0.305", "332.532, 651.519, 22.9096, 0.3814", "331.531, 651.021, 22.6044, 0.483", "330.553, 650.596, 21.6681, 0.5338", "329.545, 650.13, 21.3444, 0.5084", "328.477, 650.254, 21.0255, 0.5338", "327.578, 650.922, 20.7648, 0.5338", "326.78, 651.741, 20.7197, 0.5848", "326.073, 652.638, 20.7183, 0.5338", "325.24, 653.416, 20.711, 0.5084", "324.238, 653.954, 20.6718, 0.4068", "323.155, 654.296, 20.4036, 0.356", "322.101, 654.05, 19.7761, 0.305", "320.975, 653.917, 19.6154, 0.3304", "319.951, 654.39, 19.6459, 0.3814", "318.923, 654.883, 19.8999, 0.483", "317.803, 655.101, 19.929, 0.5848", "316.723, 655.45, 19.6042, 0.6356", "315.629, 655.782, 19.607, 0.5592" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "469.94, 595.057, 27.3118, 0.4576", "469.72, 594.536, 27.3717, 0.4322", "469.233, 593.515, 26.9629, 0.4576", "468.714, 592.531, 26.5899, 0.4576", "468.527, 591.469, 27.3437, 0.483", "468.859, 590.418, 28.084, 0.5084", "469.32, 589.397, 28.5796, 0.5592", "469.907, 588.42, 28.7641, 0.6102", "470.436, 587.422, 29.1018, 0.6356", "471.035, 586.458, 28.8291, 0.6102", "471.758, 585.58, 28.5863, 0.5338", "472.47, 584.69, 28.6885, 0.4576", "473.042, 583.715, 29.0657, 0.4068", "473.672, 582.792, 29.5943, 0.3814", "474.405, 581.916, 29.6164, 0.4068", "475.022, 580.974, 29.57, 0.4322", "475.172, 579.854, 29.6867, 0.4576", "475.036, 578.724, 29.7234, 0.4322", "474.884, 577.596, 29.841, 0.3814", "475.038, 576.515, 29.4059, 0.3304", "475.299, 575.448, 28.6588, 0.356", "475.625, 574.389, 27.9941, 0.4068", "476.126, 573.384, 27.55, 0.483", "476.743, 572.424, 27.4366, 0.483", "477.255, 571.41, 27.4204, 0.5084", "477.769, 570.39, 27.3325, 0.483", "478.368, 569.437, 26.9024, 0.5084", "479.02, 568.522, 26.3945, 0.5084", "479.607, 567.558, 26.0, 0.5338", "479.98, 566.489, 25.989, 0.483", "480.407, 565.459, 25.6035, 0.4322", "480.954, 564.47, 25.2246, 0.3814", "481.609, 563.538, 25.0323, 0.4322", "482.028, 562.514, 24.5669, 0.4576", "482.262, 561.403, 24.3508, 0.4576", "482.549, 560.3, 24.5129, 0.3814", "482.823, 559.223, 24.0276, 0.3814", "482.615, 558.312, 22.591, 0.4322", "482.273, 557.29, 21.7666, 0.5084", "482.104, 556.204, 21.0171, 0.5084", "482.082, 555.085, 20.4674, 0.4576", "482.081, 553.976, 19.7823, 0.3814", "482.078, 552.839, 19.6092, 0.3304", "482.053, 551.695, 19.5975, 0.305", "481.884, 550.566, 19.5818, 0.305", "481.204, 549.679, 19.4911, 0.2796", "480.335, 549.06, 18.5797, 0.2542", "480.448, 548.394, 18.3764, 0.2288", "480.394, 547.328, 19.395, 0.2288", "480.34, 546.265, 20.4134, 0.2288", "480.286, 545.201, 21.432, 0.2542", "480.234, 544.136, 22.4504, 0.2796", "480.172, 543.062, 23.3355, 0.3304", "480.059, 541.924, 23.3355, 0.356", "479.947, 540.785, 23.3355, 0.4068", "479.76, 539.657, 23.3355, 0.4576", "479.656, 538.529, 23.3355, 0.483", "479.879, 537.407, 23.3355, 0.4576", "480.105, 536.286, 23.3355, 0.3814", "480.362, 535.171, 23.3355, 0.356", "480.62, 534.056, 23.3355, 0.356", "480.558, 532.983, 23.8879, 0.356", "480.288, 531.936, 24.8063, 0.305", "480.213, 530.814, 25.0023, 0.2796", "480.305, 529.679, 25.0023, 0.2796", "480.351, 528.626, 25.1082, 0.305", "479.415, 528.051, 25.8899, 0.2796", "478.48, 527.473, 26.6692, 0.305", "477.978, 526.446, 26.6692, 0.3304", "477.223, 525.603, 26.6692, 0.3814", "476.349, 524.865, 26.6692, 0.356" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "469.94, 595.057, 27.3118, 0.4576", "470.258, 594.739, 27.0852, 0.3304", "471.14, 594.039, 26.6703, 0.3304", "472.074, 593.412, 26.9517, 0.3304", "472.956, 592.733, 26.6896, 0.356", "473.881, 592.141, 25.9384, 0.3304", "474.861, 591.693, 26.437, 0.3304", "475.644, 590.933, 26.3791, 0.2796", "476.269, 590.024, 25.6606, 0.305", "477.169, 589.472, 26.4093, 0.3814", "478.184, 589.017, 27.0474, 0.483", "479.036, 588.484, 25.8348, 0.483", "479.497, 587.769, 25.387, 0.4068", "480.095, 586.87, 24.4608, 0.356", "480.39, 585.782, 24.4468, 0.356", "480.833, 584.87, 24.0366, 0.3814", "481.681, 584.171, 23.2546, 0.356", "482.528, 583.472, 22.4722, 0.356", "483.515, 583.558, 22.2244, 0.3304", "484.588, 583.694, 22.2244, 0.3814", "485.413, 583.053, 22.2244, 0.4068", "486.085, 582.229, 21.2587, 0.4576", "486.772, 581.422, 20.2006, 0.4068", "486.385, 580.499, 20.0018, 0.356", "486.404, 579.385, 20.0018, 0.356", "487.26, 578.899, 19.2203, 0.4322", "488.282, 578.634, 18.1395, 0.483", "489.353, 578.326, 17.7794, 0.4322", "489.736, 577.357, 17.7794, 0.3304", "489.456, 576.402, 17.7794, 0.2796", "489.094, 575.423, 17.7794, 0.305" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_28",
    "id" : "apic_28",
    "points3d" : [ "429.89, 609.196, 33.1083, 0.5084", "430.702, 609.402, 32.221, 0.5338", "431.585, 609.767, 30.6804, 0.4576", "431.727, 610.688, 30.5584, 0.4068", "430.897, 611.094, 29.729, 0.356", "430.323, 610.74, 27.7052, 0.3304", "429.94, 609.91, 26.0221, 0.305", "429.595, 609.06, 24.4468, 0.305", "429.795, 607.933, 24.4468, 0.305", "430.642, 607.276, 24.4468, 0.305", "430.883, 606.205, 24.4468, 0.305", "430.331, 605.761, 22.5912, 0.356", "429.579, 606.066, 21.6686, 0.3814", "428.709, 606.135, 21.6686, 0.4322", "428.48, 605.139, 21.6686, 0.4068", "428.015, 604.602, 20.9784, 0.4068", "427.078, 604.799, 19.4463, 0.356" ],
    "parent" : "apic_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_25",
    "id" : "apic_25",
    "points3d" : [ "429.89, 609.196, 33.1083, 0.5084", "430.945, 608.363, 33.7456, 0.356", "431.875, 607.843, 34.6139, 0.356" ],
    "parent" : "apic_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_23",
    "id" : "apic_23",
    "points3d" : [ "415.038, 602.273, 34.1704, 0.9152", "416.032, 600.98, 32.5581, 0.483", "416.678, 600.253, 32.2252, 0.483", "415.874, 599.465, 32.2252, 0.5848", "414.911, 599.226, 31.0282, 0.6864", "413.827, 599.223, 30.5584, 0.7372", "412.685, 599.289, 30.5584, 0.661", "411.545, 599.29, 30.5584, 0.5338", "410.482, 599.116, 30.4973, 0.4322", "410.715, 598.094, 29.3826, 0.356", "410.941, 597.063, 28.336, 0.3814", "411.032, 595.922, 28.336, 0.3814", "411.221, 594.844, 28.0204, 0.4576", "411.719, 593.967, 26.7019, 0.4322", "412.215, 593.089, 25.3837, 0.4576", "413.117, 592.602, 25.0023, 0.3814", "413.374, 591.586, 25.0023, 0.356", "412.578, 591.008, 24.1234, 0.2796", "411.62, 590.593, 22.9695, 0.2542", "410.71, 590.226, 22.78, 0.2288", "410.81, 590.534, 21.2038, 0.2288", "410.976, 591.289, 19.1402, 0.2542", "410.059, 591.646, 18.8908, 0.2796", "409.867, 590.519, 18.8908, 0.3304", "410.233, 589.523, 18.8908, 0.3304", "410.729, 588.54, 18.4134, 0.3304", "411.077, 587.51, 17.5406, 0.2796", "411.424, 586.481, 16.6681, 0.2542" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "415.038, 602.273, 34.1704, 0.9152", "414.829, 601.405, 34.2188, 0.6356", "414.195, 600.483, 34.5195, 0.661", "413.702, 599.637, 35.8602, 0.7118", "413.0, 598.794, 36.6442, 0.661", "412.066, 598.194, 37.331, 0.6864", "411.154, 597.507, 37.2375, 0.6356" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_27",
    "id" : "apic_27",
    "points3d" : [ "431.875, 607.843, 34.6139, 0.356", "431.989, 607.823, 33.4846, 0.305", "432.349, 607.152, 31.3936, 0.2542", "432.708, 606.481, 29.3026, 0.2542", "432.812, 605.443, 28.8915, 0.305", "433.415, 604.53, 28.8915, 0.3814", "434.015, 603.585, 28.8915, 0.4322", "434.204, 602.492, 28.8274, 0.4576", "435.079, 601.8, 28.1946, 0.4576", "435.953, 601.108, 27.5618, 0.4322", "436.89, 600.488, 27.2247, 0.4068", "437.75, 599.755, 27.2247, 0.356", "438.305, 598.774, 27.0838, 0.3304", "438.557, 597.709, 26.2679, 0.2796", "438.88, 596.675, 25.5578, 0.2542", "439.67, 595.849, 25.5578, 0.2288", "440.432, 595.023, 25.1034, 0.2288", "441.186, 594.197, 24.512, 0.2796", "441.94, 593.371, 23.9204, 0.3304", "442.693, 592.544, 23.3296, 0.4068", "443.309, 591.606, 22.7898, 0.3814", "443.926, 590.668, 22.2502, 0.356", "444.542, 589.73, 21.7104, 0.2796", "445.16, 588.792, 21.1708, 0.2542", "445.895, 587.932, 20.7715, 0.2288", "446.644, 587.083, 20.389, 0.2542", "447.393, 586.232, 20.0066, 0.2796", "448.143, 585.383, 19.6241, 0.305", "448.812, 584.471, 19.2606, 0.2796", "449.411, 583.508, 18.9134, 0.2542", "450.012, 582.543, 18.5662, 0.2288", "450.611, 581.58, 18.219, 0.2288", "451.211, 580.615, 17.8718, 0.2288", "451.764, 579.618, 17.7794, 0.2288", "452.302, 578.608, 17.7794, 0.2288", "452.84, 577.598, 17.7794, 0.2288", "453.376, 576.587, 17.7794, 0.2288", "453.982, 575.621, 17.7794, 0.2288", "454.652, 574.693, 17.7794, 0.2542", "455.322, 573.766, 17.7794, 0.2796" ],
    "parent" : "apic_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_26",
    "id" : "apic_26",
    "points3d" : [ "431.875, 607.843, 34.6139, 0.356", "432.398, 607.823, 35.1056, 0.3304", "433.5, 607.791, 35.5065, 0.356", "434.577, 607.71, 34.7544, 0.4068", "435.635, 607.456, 34.0995, 0.4322", "436.674, 607.113, 34.6105, 0.4322", "437.628, 606.58, 35.238, 0.4068", "438.641, 606.107, 35.6152, 0.3814", "439.579, 605.919, 36.3894, 0.3814", "440.508, 605.91, 38.0265, 0.356", "441.536, 605.866, 38.8926, 0.305", "442.556, 605.394, 38.8926, 0.2542", "443.522, 604.787, 38.8926, 0.2288", "444.383, 604.037, 38.9049, 0.2542", "445.372, 603.547, 39.6553, 0.3304", "446.359, 603.058, 40.4057, 0.4068", "447.346, 602.569, 41.1558, 0.4576", "448.275, 601.976, 41.6707, 0.4576", "448.689, 600.991, 41.6707, 0.4576", "448.74, 599.848, 41.6707, 0.4322", "449.658, 599.253, 42.422, 0.3814", "450.591, 598.668, 43.185, 0.3304", "451.523, 598.083, 43.948, 0.3304", "452.463, 597.485, 44.4486, 0.3814", "453.423, 596.861, 44.4486, 0.4322", "454.096, 596.013, 43.9253, 0.4576", "454.629, 595.052, 43.1399, 0.4068", "455.16, 594.091, 42.3545, 0.356", "455.73, 593.132, 41.7449, 0.2796", "456.31, 592.173, 41.1695, 0.2542", "456.888, 591.216, 40.5941, 0.2288", "457.467, 590.257, 40.0187, 0.2796", "457.857, 589.238, 39.1815, 0.356", "458.242, 588.217, 38.337, 0.4322" ],
    "parent" : "apic_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "411.154, 597.507, 37.2375, 0.6356", "410.726, 596.765, 37.5396, 0.5084", "410.492, 595.669, 37.9949, 0.5084", "409.904, 594.73, 38.5697, 0.483", "409.062, 593.956, 38.605, 0.483", "408.298, 593.122, 38.4292, 0.483", "407.77, 592.13, 37.9008, 0.5084", "407.194, 591.16, 37.5304, 0.5084", "406.469, 590.275, 37.5659, 0.4322", "405.734, 589.408, 37.7451, 0.356", "405.26, 588.412, 38.2474, 0.356", "405.188, 587.283, 38.4378, 0.4576", "405.091, 586.167, 37.9154, 0.5592", "404.838, 585.068, 37.5113, 0.5848", "404.536, 583.977, 37.4455, 0.5084", "403.798, 583.281, 37.417, 0.4322", "403.808, 582.296, 37.9028, 0.356", "403.717, 581.198, 38.5644, 0.356", "403.321, 580.141, 38.6571, 0.3304", "402.609, 579.245, 38.7178, 0.3814", "401.991, 578.301, 38.9948, 0.4068", "401.557, 577.278, 39.6088, 0.483", "400.984, 576.291, 39.76, 0.483", "400.345, 575.343, 39.76, 0.4576", "399.688, 574.406, 39.7603, 0.3814", "399.417, 573.336, 39.7617, 0.3304", "399.751, 572.28, 39.769, 0.3304", "400.132, 571.207, 39.8188, 0.3814", "400.391, 570.106, 40.1668, 0.4322", "400.272, 569.015, 40.7156, 0.4576", "399.716, 568.039, 40.8778, 0.483", "398.938, 567.207, 40.88, 0.5084", "398.298, 566.269, 40.88, 0.5592", "397.655, 565.324, 40.88, 0.5592", "396.883, 564.483, 40.8806, 0.5592", "396.072, 563.675, 40.8817, 0.5084", "395.254, 562.875, 40.8859, 0.483", "394.409, 562.106, 40.9049, 0.4576", "393.488, 561.433, 41.0161, 0.483", "392.657, 560.693, 41.5923, 0.483", "391.866, 559.879, 41.8603, 0.483", "391.143, 559.008, 41.5772, 0.4576", "390.488, 558.091, 41.0869, 0.5084", "389.859, 557.142, 41.0785, 0.5848", "389.572, 556.085, 41.7259, 0.661", "389.26, 554.996, 41.9916, 0.661", "389.073, 553.87, 42.1064, 0.6356", "388.648, 552.841, 42.621, 0.5848", "387.956, 551.955, 43.0531, 0.5592", "387.085, 551.22, 43.1211, 0.5084", "386.337, 550.359, 43.1273, 0.483", "385.74, 549.387, 43.1589, 0.483", "385.496, 548.281, 43.3474, 0.5084", "385.228, 547.207, 44.0247, 0.5592", "384.993, 546.094, 44.095, 0.5338", "384.637, 545.044, 43.4566, 0.5084", "384.21, 544.031, 42.6756, 0.4322", "383.545, 543.26, 43.8068, 0.4576", "382.737, 542.477, 44.2501, 0.483", "382.064, 541.554, 44.3792, 0.5084", "381.311, 540.734, 45.0181, 0.4576", "380.601, 539.881, 45.3793, 0.4068", "380.077, 538.867, 45.486, 0.4322", "379.824, 537.775, 45.5515, 0.5084", "379.799, 536.632, 45.4387, 0.5848", "379.757, 535.49, 45.36, 0.5848", "379.501, 534.39, 45.36, 0.5338", "378.895, 533.44, 45.3603, 0.483", "378.169, 532.558, 45.3608, 0.483", "377.454, 531.664, 45.3639, 0.5084", "376.639, 530.871, 45.3799, 0.5338", "375.859, 530.046, 45.4835, 0.483", "375.376, 529.058, 46.0054, 0.4322", "375.189, 527.986, 46.8188, 0.4576", "374.915, 526.916, 47.4233, 0.6356", "374.453, 525.877, 47.5975, 0.8644", "374.025, 524.818, 47.5843, 0.9914", "373.65, 523.738, 47.5048, 0.966", "373.271, 522.676, 47.0893, 0.8644", "372.76, 521.671, 46.9395, 0.7626", "372.259, 520.666, 47.3936, 0.7118", "371.655, 519.717, 47.7554, 0.7118", "371.16, 518.729, 48.3227, 0.7372", "370.738, 517.681, 48.6721, 0.7626", "370.158, 516.701, 48.7197, 0.788", "369.458, 515.799, 48.7189, 0.788", "368.702, 514.94, 48.7152, 0.7626", "368.096, 513.979, 48.6934, 0.661", "367.868, 512.878, 48.5481, 0.6102", "367.594, 511.806, 47.9539, 0.5848", "367.071, 510.81, 47.6347, 0.6102", "366.604, 509.769, 47.5684, 0.5848", "366.246, 508.685, 47.4152, 0.5848", "366.086, 507.592, 46.7888, 0.5592", "365.984, 506.465, 46.5083, 0.5592", "365.621, 505.391, 46.482, 0.5338", "365.014, 504.427, 46.4901, 0.5592", "364.377, 503.478, 46.5293, 0.5592", "363.664, 502.587, 46.6894, 0.5592", "363.01, 501.685, 47.2816, 0.5084", "362.26, 500.839, 47.5636, 0.5338", "361.418, 500.065, 47.5961, 0.5338", "360.431, 499.501, 47.5779, 0.6356", "359.508, 498.833, 47.4863, 0.6864", "358.854, 497.933, 46.9927, 0.788", "358.438, 496.885, 46.5926, 0.7372", "358.014, 495.827, 46.4895, 0.6356", "357.44, 494.841, 46.5262, 0.5084", "356.808, 493.895, 46.7222, 0.4576", "356.207, 492.951, 47.3035, 0.5338", "355.652, 491.966, 47.6, 0.5592", "355.314, 490.878, 47.6006, 0.5848", "354.737, 489.891, 47.6022, 0.5084", "354.151, 488.908, 47.6115, 0.5592", "353.526, 487.953, 47.6549, 0.661", "352.815, 487.069, 47.866, 0.7372", "352.31, 486.085, 48.5629, 0.6864", "351.79, 485.109, 49.2912, 0.5338", "351.116, 484.214, 49.742, 0.4322", "350.312, 483.404, 49.84, 0.3814", "349.423, 482.688, 49.8397, 0.4068", "348.539, 481.963, 49.8392, 0.483", "347.729, 481.484, 50.3146, 0.5592", "347.459, 480.565, 51.693, 0.5848", "346.986, 479.551, 52.0624, 0.5338", "346.742, 478.435, 51.9725, 0.5084", "346.47, 477.34, 51.5945, 0.5338", "346.078, 476.312, 51.0188, 0.6356", "345.655, 475.305, 50.953, 0.7118", "345.095, 474.325, 50.9071, 0.7372", "344.717, 473.254, 50.6201, 0.661", "344.469, 472.173, 49.94, 0.5592", "344.03, 471.121, 49.8445, 0.4576", "343.371, 470.189, 49.8453, 0.4068", "342.737, 469.237, 49.8674, 0.4068", "342.146, 468.259, 50.0346, 0.483", "341.389, 467.458, 50.7769, 0.5592", "340.505, 466.737, 50.9592, 0.5592", "339.608, 466.027, 50.9603, 0.5084", "338.769, 465.249, 50.9611, 0.4576", "337.835, 464.59, 50.9653, 0.483", "336.807, 464.088, 50.9902, 0.5338", "335.964, 463.317, 51.1241, 0.6102", "335.413, 462.375, 51.8885, 0.6864", "335.141, 461.271, 52.0814, 0.661", "334.48, 460.341, 52.1186, 0.5848", "333.887, 459.366, 52.2752, 0.4576", "333.534, 458.32, 52.9841, 0.4068", "333.134, 457.252, 53.198, 0.4068", "332.493, 456.304, 53.2, 0.4322", "331.788, 455.404, 53.2, 0.5084", "331.064, 454.518, 53.2, 0.5338", "330.889, 453.388, 53.2, 0.5848", "330.797, 452.25, 53.2, 0.5592", "330.54, 451.142, 53.2, 0.5592", "330.012, 450.137, 53.1994, 0.5338", "329.315, 449.233, 53.1975, 0.5338", "328.635, 448.313, 53.188, 0.5084", "327.882, 447.456, 53.1524, 0.483", "327.057, 446.67, 52.9847, 0.483", "326.198, 445.96, 52.3972, 0.5592", "325.512, 445.056, 52.08, 0.5848", "325.001, 444.044, 52.08, 0.5338", "324.888, 442.905, 52.08, 0.4068", "324.839, 441.764, 52.08, 0.356", "324.596, 440.662, 52.08, 0.4068", "323.903, 439.754, 52.08, 0.5084", "323.225, 438.833, 52.0797, 0.5848", "322.773, 437.786, 52.0786, 0.5592", "322.23, 436.779, 52.0736, 0.5084", "321.62, 435.812, 52.0332, 0.483", "321.053, 434.825, 51.8084, 0.5592", "320.803, 433.741, 51.8764, 0.661", "320.764, 432.601, 52.0481, 0.7372", "320.684, 431.461, 52.08, 0.8136", "320.273, 430.419, 52.08, 0.8644", "319.509, 429.587, 52.08, 0.9152", "318.625, 428.863, 52.08, 0.9406", "317.879, 428.008, 52.08, 0.9914", "317.466, 426.959, 52.08, 1.0932", "316.941, 425.959, 52.08, 1.1694", "315.571, 424.132, 52.08, 1.2202", "314.201, 422.305, 52.08, 1.1694", "312.826, 420.481, 52.0845, 1.2712", "311.739, 418.511, 52.2528, 1.2966", "310.92, 416.434, 53.121, 1.144", "309.862, 414.409, 53.2, 1.1186", "309.144, 413.519, 53.2, 0.9914", "308.478, 412.591, 53.2, 0.7372", "308.046, 411.532, 53.1997, 0.5338", "307.457, 410.552, 53.1983, 0.4322", "306.721, 409.676, 53.193, 0.4576", "306.076, 408.732, 53.167, 0.5084", "305.32, 407.876, 53.0522, 0.5338", "304.627, 406.987, 52.5669, 0.5592", "303.924, 406.104, 52.1167, 0.6102", "303.116, 405.295, 52.0803, 0.661", "302.279, 404.516, 52.0825, 0.661", "301.376, 403.816, 52.0915, 0.6356", "300.647, 402.941, 52.141, 0.5592", "300.211, 401.892, 52.388, 0.5084", "299.957, 400.821, 53.1017, 0.4322", "299.423, 399.812, 53.2011, 0.4068", "298.768, 398.873, 53.2056, 0.3814", "298.126, 397.927, 53.2283, 0.4068", "297.526, 396.965, 53.3593, 0.4322", "297.275, 395.873, 53.916, 0.4576", "296.877, 394.816, 54.32, 0.4322", "296.4, 393.779, 54.32, 0.4322", "295.724, 392.858, 54.3194, 0.4322", "294.951, 392.014, 54.3172, 0.4576", "294.241, 391.12, 54.3066, 0.4576", "293.667, 390.132, 54.2486, 0.483", "292.997, 389.219, 53.9655, 0.5084", "292.241, 388.425, 53.1933, 0.5338", "291.478, 387.592, 52.7696, 0.5084", "290.754, 386.752, 52.1312, 0.483", "290.077, 385.83, 52.0842, 0.4576", "289.453, 384.885, 52.1021, 0.4322", "289.199, 383.779, 52.2399, 0.4322", "289.173, 382.655, 52.7492, 0.4068", "289.006, 381.571, 53.401, 0.4068", "288.45, 380.625, 54.1159, 0.3814", "287.826, 379.768, 54.8498, 0.3814", "287.243, 378.802, 54.42, 0.4068", "286.59, 377.866, 54.2626, 0.4322", "285.911, 376.954, 54.0341, 0.483", "285.273, 376.028, 53.5125, 0.5338", "284.762, 375.073, 53.5928, 0.5338", "284.557, 374.033, 54.3712, 0.5084", "284.142, 373.047, 54.749, 0.4576", "283.285, 372.702, 55.9118, 0.4576", "283.489, 372.355, 57.2821, 0.4576", "284.298, 372.607, 56.6345, 0.4576", "284.934, 372.078, 55.2166, 0.483", "284.937, 371.088, 53.879, 0.5338", "284.525, 370.06, 53.3338, 0.5848", "284.109, 369.011, 53.6841, 0.6102", "283.645, 367.991, 54.2391, 0.5848", "282.973, 367.07, 54.3166, 0.5084", "282.209, 366.218, 54.3155, 0.4576", "281.573, 365.27, 54.2984, 0.4576", "281.41, 364.148, 54.1766, 0.5592", "281.289, 363.042, 53.5405, 0.6102", "280.766, 362.034, 53.4341, 0.6356", "280.182, 361.09, 54.0929, 0.6102", "279.586, 360.119, 54.3057, 0.6102", "279.181, 359.049, 54.2786, 0.5848", "279.079, 357.915, 54.0498, 0.5338", "278.793, 356.878, 53.1112, 0.5084", "278.296, 355.914, 52.2144, 0.5338", "277.703, 354.939, 52.0752, 0.6102", "276.966, 354.063, 52.0604, 0.6356", "276.346, 353.103, 51.9803, 0.6102", "275.836, 352.187, 52.1217, 0.5592", "275.717, 351.122, 51.3103, 0.5338", "274.954, 350.519, 51.6911, 0.5084", "274.051, 349.889, 52.2113, 0.4576", "273.544, 348.943, 52.6473, 0.4322", "273.543, 347.846, 52.5829, 0.4322", "273.683, 346.727, 52.1752, 0.4322", "273.491, 345.63, 52.0808, 0.3814", "273.01, 344.595, 52.0848, 0.356", "272.505, 343.568, 52.1066, 0.3814", "271.884, 342.619, 52.2169, 0.4068", "271.094, 341.802, 52.4286, 0.4068", "270.566, 340.905, 51.735, 0.3814", "270.219, 339.859, 51.1823, 0.4068", "269.839, 338.816, 51.6446, 0.4068", "269.379, 337.863, 52.6884, 0.4068", "268.858, 336.882, 53.1535, 0.3814", "268.375, 335.846, 53.2, 0.4068", "267.712, 334.928, 53.2, 0.4322", "266.901, 334.122, 53.2, 0.4322", "266.259, 333.187, 53.2, 0.4322", "265.642, 332.223, 53.1997, 0.4322", "264.898, 331.36, 53.1989, 0.483", "264.114, 330.526, 53.1958, 0.5084", "263.428, 329.613, 53.1796, 0.5592", "262.872, 328.616, 53.0832, 0.5592", "262.337, 327.627, 52.6212, 0.5084", "261.716, 326.674, 52.5025, 0.4068", "261.133, 325.717, 52.9976, 0.3304", "260.401, 324.853, 53.1868, 0.3304", "259.535, 324.108, 53.1978, 0.356", "258.726, 323.301, 53.1902, 0.4068", "258.042, 322.387, 53.1541, 0.4322", "257.59, 321.346, 52.953, 0.483", "257.154, 320.339, 52.2004, 0.5592", "256.854, 319.289, 51.3895, 0.6864", "256.366, 318.276, 51.0104, 0.788", "255.77, 317.301, 50.9706, 0.8136", "255.59, 316.189, 51.03, 0.788", "255.604, 315.062, 51.4716, 0.7626", "255.793, 313.979, 52.2236, 0.7372", "255.842, 312.885, 53.0138, 0.7118", "255.49, 311.81, 53.1555, 0.6864", "254.947, 310.806, 53.0292, 0.661", "254.427, 309.809, 52.5364, 0.5848", "254.21, 308.72, 53.058, 0.5084", "254.185, 307.58, 53.193, 0.483", "254.113, 306.439, 53.2036, 0.5084", "253.764, 305.352, 53.2218, 0.5084", "253.349, 304.287, 53.3285, 0.483", "253.166, 303.192, 53.9678, 0.483", "252.673, 302.175, 54.3049, 0.5592", "252.03, 301.229, 54.32, 0.6356", "251.254, 300.389, 54.3203, 0.661", "250.351, 299.689, 54.3211, 0.6102", "249.355, 299.125, 54.3256, 0.5848", "248.842, 298.11, 54.3575, 0.6102", "248.695, 296.98, 54.5493, 0.6356", "248.62, 295.876, 55.2524, 0.5848", "248.246, 294.804, 54.9416, 0.5084", "247.756, 293.799, 54.3606, 0.4576", "247.271, 292.762, 54.3295, 0.483", "246.871, 291.691, 54.3836, 0.4576", "246.592, 290.597, 54.7546, 0.4576", "246.351, 289.673, 56.271, 0.4068", "246.045, 288.579, 56.558, 0.4322", "245.627, 287.517, 56.5491, 0.4068", "245.501, 286.381, 56.4855, 0.4068", "245.494, 285.246, 56.1529, 0.4068", "245.446, 284.135, 55.557, 0.4322", "245.258, 283.018, 55.82, 0.4576", "245.282, 281.926, 56.628, 0.4322", "245.108, 280.816, 57.1385, 0.4322", "245.004, 279.686, 57.206, 0.4322", "244.814, 278.606, 56.5342, 0.4576", "244.26, 277.616, 56.2327, 0.4322", "243.691, 276.652, 55.7287, 0.4068", "243.245, 275.643, 56.1022, 0.3814", "243.119, 274.629, 57.2869, 0.3814", "242.792, 273.554, 57.5971, 0.4322", "242.242, 272.565, 57.2995, 0.4576", "241.757, 271.566, 56.6978, 0.483", "241.116, 270.62, 56.5748, 0.4322", "240.475, 269.675, 56.6373, 0.4322", "240.059, 268.657, 57.0128, 0.4322", "240.102, 267.645, 58.2207, 0.4322", "240.279, 266.773, 59.9766, 0.4068", "240.139, 265.875, 61.378, 0.356", "239.449, 265.018, 61.6871, 0.356", "239.0, 264.099, 61.759, 0.3304" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "411.154, 597.507, 37.2375, 0.6356", "410.307, 597.382, 36.5834, 0.3304", "409.191, 597.443, 35.9769, 0.2796", "408.083, 597.368, 35.7154, 0.2796", "406.98, 597.095, 35.7941, 0.305", "405.961, 596.877, 34.9009, 0.3814", "404.978, 596.772, 33.5269, 0.4322", "403.919, 596.585, 32.6494, 0.4322", "402.818, 596.435, 32.1129, 0.4322", "401.719, 596.641, 31.836, 0.4322", "400.846, 597.288, 31.4479, 0.4576", "400.185, 598.174, 30.732, 0.4322", "399.365, 598.874, 30.0135, 0.4322", "398.326, 599.302, 29.6831, 0.4322", "397.23, 599.275, 29.5996, 0.4322", "396.135, 599.209, 29.1099, 0.356", "395.366, 599.776, 27.9899, 0.2796", "395.099, 600.656, 26.4314, 0.2542", "394.777, 601.49, 24.724, 0.2796", "393.997, 602.204, 24.1231, 0.3304", "393.152, 602.968, 24.0702, 0.3304", "392.378, 603.81, 24.0386, 0.356", "391.775, 604.773, 23.8776, 0.3304", "391.433, 605.827, 23.2938, 0.3814", "390.803, 606.717, 23.5113, 0.3814", "389.754, 606.803, 23.0429, 0.4068", "388.766, 607.026, 21.8789, 0.356", "388.676, 608.153, 21.5062, 0.3814", "388.253, 608.992, 20.6072, 0.4068", "387.211, 609.124, 19.7607, 0.4322", "386.134, 609.316, 20.0679, 0.356", "385.215, 609.499, 19.32, 0.305", "384.163, 609.866, 19.32, 0.2796", "383.019, 609.866, 19.32, 0.305", "381.875, 609.866, 19.32, 0.2796", "380.73, 609.866, 19.32, 0.2542", "379.587, 609.866, 19.32, 0.2542", "378.467, 609.991, 19.32, 0.3304", "377.344, 610.095, 19.32, 0.4576", "376.2, 610.095, 19.32, 0.5338", "375.056, 610.095, 19.32, 0.5084", "373.928, 610.213, 19.32, 0.4322", "373.058, 610.846, 19.32, 0.4068", "372.057, 611.28, 19.32, 0.4576", "371.238, 612.071, 19.32, 0.4576", "370.335, 612.763, 19.32, 0.4322", "369.306, 613.25, 19.32, 0.3814", "368.164, 613.298, 19.32, 0.4322", "367.02, 613.298, 19.32, 0.4576", "365.876, 613.298, 19.32, 0.4576", "364.747, 613.411, 19.32, 0.3814", "364.095, 614.233, 19.32, 0.4068", "362.991, 614.328, 19.32, 0.483" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "239.0, 264.099, 61.759, 0.3304", "239.923, 263.675, 62.498, 0.4322", "240.82, 263.393, 64.0836, 0.5084", "241.747, 262.729, 64.2508, 0.483", "242.35, 261.795, 63.6196, 0.4576", "242.504, 260.69, 63.0834, 0.4576", "242.192, 259.616, 62.6105, 0.5338", "241.889, 258.581, 63.4623, 0.5848", "241.829, 257.665, 65.1148, 0.5848", "241.771, 256.604, 66.143, 0.5592", "241.663, 255.606, 67.3781, 0.5338", "242.227, 254.79, 68.5832, 0.5338", "243.229, 254.26, 68.88, 0.5338", "244.134, 253.566, 68.88, 0.5338", "244.872, 252.696, 68.88, 0.5338", "245.457, 251.713, 68.8811, 0.5848", "245.992, 250.702, 68.8856, 0.6356", "246.417, 249.652, 68.9167, 0.7118", "246.587, 248.531, 69.1188, 0.661", "246.919, 247.462, 69.7032, 0.5848", "247.266, 246.4, 70.194, 0.4576", "247.821, 245.43, 70.7308, 0.4068", "248.147, 244.448, 71.7937, 0.356", "248.183, 243.455, 73.0671, 0.3304", "248.526, 242.426, 73.3603, 0.3304", "249.323, 241.607, 73.3614, 0.4068", "250.189, 240.862, 73.3676, 0.5084", "251.047, 240.116, 73.3986, 0.6102", "251.752, 239.221, 73.5675, 0.6356", "252.277, 238.302, 74.3582, 0.5848", "252.584, 237.333, 75.4435, 0.483", "252.819, 236.222, 75.605, 0.3814", "252.919, 235.083, 75.6347, 0.356", "252.664, 234.083, 75.8268, 0.356", "251.738, 233.53, 76.3557, 0.4068", "250.696, 233.163, 76.9583, 0.4576", "249.962, 232.429, 77.7269, 0.5084", "249.638, 231.445, 78.8623, 0.5338", "249.363, 230.406, 79.7619, 0.5338", "248.815, 229.437, 80.0792, 0.5338", "248.174, 228.495, 80.1186, 0.5338", "247.651, 227.482, 80.3065, 0.5084", "247.216, 226.454, 80.8626, 0.483", "246.696, 225.477, 81.4724, 0.4576", "246.042, 224.564, 82.0047, 0.4322", "245.282, 223.731, 82.3435, 0.3814", "244.695, 222.805, 82.7579, 0.305", "244.832, 221.946, 84.196, 0.2796", "245.092, 220.995, 85.5084, 0.3304", "245.352, 219.934, 86.3184, 0.4322", "245.317, 218.833, 86.893, 0.5338", "245.132, 217.745, 87.6162, 0.6356", "245.252, 216.638, 88.0135, 0.6864", "245.688, 215.62, 88.5951, 0.7118", "245.812, 214.678, 90.0178, 0.661", "245.406, 213.732, 91.0661, 0.7372", "244.783, 212.786, 91.2862, 0.788", "244.035, 211.925, 91.3573, 0.839", "243.273, 211.093, 91.7994, 0.788", "243.013, 210.017, 91.5841, 0.8136", "243.22, 208.901, 91.4105, 0.8898", "243.419, 207.797, 91.9173, 0.9152", "243.896, 206.765, 91.8005, 0.839", "244.424, 205.831, 92.7248, 0.6864", "244.559, 204.849, 94.1102, 0.5848", "244.461, 203.815, 95.2764, 0.5592", "244.038, 202.772, 95.7536, 0.5848", "243.699, 201.679, 95.7631, 0.6356", "243.689, 200.535, 95.781, 0.661", "243.821, 199.402, 95.9518, 0.661" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "239.0, 264.099, 61.759, 0.3304", "238.756, 263.464, 62.0903, 0.4068", "238.081, 262.541, 62.16, 0.4068", "237.531, 261.539, 62.16, 0.3814", "236.838, 260.635, 62.16, 0.4322", "235.868, 260.035, 62.1608, 0.483", "234.789, 259.678, 62.1648, 0.5084", "233.918, 258.936, 62.1813, 0.4322", "233.178, 258.07, 62.2572, 0.3814", "232.736, 257.039, 62.6284, 0.3814", "232.783, 255.932, 63.2458, 0.4576", "233.115, 254.839, 63.2898, 0.5338", "233.558, 253.785, 63.3385, 0.5848", "233.875, 252.692, 63.576, 0.6356", "234.062, 251.598, 64.0363, 0.6102", "234.061, 250.481, 63.4312, 0.5848", "234.055, 249.358, 62.9163, 0.5338", "234.012, 248.248, 62.4064, 0.5338", "233.789, 247.158, 62.8622, 0.5592", "233.189, 246.201, 63.2839, 0.5848", "232.502, 245.292, 63.3769, 0.6356", "231.66, 244.537, 63.6734, 0.661", "230.73, 243.926, 64.2732, 0.661", "229.811, 243.248, 64.3975, 0.5848", "229.015, 242.439, 64.3908, 0.5338", "228.315, 241.536, 64.3535, 0.5338", "227.486, 240.753, 64.2062, 0.661", "226.54, 240.17, 63.5942, 0.7118", "225.472, 239.777, 63.4346, 0.7372", "224.469, 239.286, 63.9898, 0.6356", "223.553, 238.624, 64.381, 0.5848", "222.558, 238.062, 64.4848, 0.5084", "221.505, 237.665, 64.9452, 0.4576", "220.479, 237.239, 65.6121, 0.4322", "219.703, 236.461, 66.3354, 0.4322", "219.316, 235.391, 66.5053, 0.5084", "218.941, 234.342, 65.882, 0.5592", "218.609, 233.256, 65.522, 0.5848", "218.502, 232.118, 65.5234, 0.5592" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_20",
    "id" : "apic_20",
    "points3d" : [ "243.821, 199.402, 95.9518, 0.661", "243.886, 198.403, 95.4943, 0.5338", "243.95, 197.286, 96.0733, 0.4068", "244.014, 196.169, 96.6524, 0.2796", "244.078, 195.051, 97.2314, 0.2288" ],
    "parent" : "apic_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "243.821, 199.402, 95.9518, 0.661", "244.696, 199.014, 97.5293, 0.4322", "245.556, 198.301, 97.8788, 0.3814", "246.057, 197.286, 97.5965, 0.2796", "246.383, 196.29, 97.8552, 0.2542", "246.88, 195.433, 99.2544, 0.2288", "247.377, 194.575, 100.653, 0.2288", "247.874, 193.718, 102.052, 0.2288", "248.37, 192.86, 103.452, 0.2288", "248.62, 191.813, 103.899, 0.2542", "248.913, 190.715, 103.899, 0.2796", "249.474, 189.725, 103.899, 0.305", "250.446, 189.612, 104.587, 0.2796", "251.447, 189.728, 105.91, 0.2796", "252.449, 189.843, 107.232, 0.3304" ],
    "parent" : "apic_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "218.502, 232.118, 65.5234, 0.5592", "218.494, 231.393, 65.5354, 0.2542", "218.443, 230.252, 65.6267, 0.2796", "218.275, 229.151, 66.1805, 0.3304", "218.337, 228.086, 67.0936, 0.356", "218.073, 227.083, 68.0784, 0.4576", "217.683, 226.091, 67.4615, 0.5592", "217.246, 225.077, 66.7366, 0.6864", "216.568, 224.174, 66.4636, 0.7118", "215.898, 223.275, 65.9344, 0.7118", "215.069, 222.511, 66.0988, 0.7118", "214.185, 221.806, 66.5389, 0.7626", "213.365, 221.013, 66.6369, 0.8136", "212.579, 220.182, 66.6478, 0.839", "211.895, 219.267, 66.6767, 0.8136", "211.705, 218.161, 66.8609, 0.8136", "211.917, 217.084, 67.5688, 0.788", "212.082, 215.96, 67.7914, 0.8136", "212.099, 214.82, 68.033, 0.839", "212.103, 213.715, 68.7369, 0.8644", "212.131, 212.577, 68.8794, 0.8644", "212.374, 211.462, 68.931, 0.7626", "212.973, 210.502, 69.2468, 0.661", "213.235, 209.409, 68.8145, 0.5338", "213.375, 208.309, 68.1433, 0.5338", "212.95, 207.263, 67.7656, 0.5592", "212.077, 206.526, 67.7636, 0.5848" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "218.502, 232.118, 65.5234, 0.5592", "217.147, 232.071, 67.5746, 0.4322", "216.055, 231.867, 68.2027, 0.4322", "214.999, 232.041, 67.3285, 0.4576", "213.866, 232.171, 67.3716, 0.4322", "212.751, 232.423, 67.3565, 0.4322" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_22",
    "id" : "apic_22",
    "points3d" : [ "244.078, 195.051, 97.2314, 0.2288", "244.708, 193.862, 96.2349, 0.2542", "245.105, 192.934, 95.5646, 0.3304", "244.608, 191.904, 95.5646, 0.4068", "244.44, 190.833, 95.8518, 0.4576", "244.585, 189.721, 96.4132, 0.4322", "244.731, 188.61, 96.9744, 0.4068", "244.877, 187.498, 97.5355, 0.3814", "244.842, 186.377, 97.7869, 0.356", "244.663, 185.247, 97.7869, 0.3304", "244.483, 184.118, 97.7869, 0.2796", "244.303, 182.987, 97.7869, 0.2542", "244.263, 181.868, 98.2374, 0.2288", "244.276, 180.752, 98.8546, 0.2542", "244.288, 179.637, 99.4714, 0.305", "244.299, 178.52, 100.088, 0.3814", "244.31, 177.405, 100.705, 0.4322", "244.322, 176.289, 101.322, 0.4322", "244.488, 175.188, 101.676, 0.4068", "244.862, 174.107, 101.676, 0.356", "245.235, 173.025, 101.676, 0.3304", "245.568, 171.939, 101.855, 0.3304", "245.828, 170.843, 102.346, 0.3814", "246.088, 169.747, 102.838, 0.4322", "246.349, 168.652, 103.329, 0.4068", "246.61, 167.556, 103.82, 0.3304", "246.871, 166.46, 104.311, 0.2542", "247.337, 165.43, 104.454, 0.2288", "247.89, 164.429, 104.454, 0.2288", "248.553, 163.51, 104.454, 0.2288", "249.345, 162.682, 104.454, 0.2288", "250.136, 161.857, 104.454, 0.2288", "250.582, 160.885, 104.788, 0.2542", "250.705, 159.779, 105.434, 0.2796", "250.828, 158.673, 106.08, 0.356", "250.95, 157.567, 106.727, 0.4322", "251.072, 156.46, 107.374, 0.5338", "251.158, 155.34, 107.788, 0.5338", "251.177, 154.196, 107.788, 0.483", "251.196, 153.053, 107.788, 0.3814", "251.163, 151.999, 106.945, 0.3304", "251.098, 151.0, 105.592, 0.2796", "251.003, 149.982, 104.454, 0.2542", "250.741, 148.869, 104.454, 0.2288", "250.357, 147.796, 104.454, 0.2288", "249.894, 146.749, 104.454, 0.2288", "249.478, 145.701, 104.567, 0.2288", "249.448, 144.642, 105.619, 0.2288", "249.418, 143.582, 106.672, 0.2288", "249.389, 142.522, 107.724, 0.2288", "249.359, 141.462, 108.776, 0.2288", "249.77, 140.417, 108.899, 0.2288", "250.239, 139.374, 108.899, 0.2288", "250.708, 138.33, 108.899, 0.2288", "251.177, 137.287, 108.899, 0.2288" ],
    "parent" : "apic_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_21",
    "id" : "apic_21",
    "points3d" : [ "244.078, 195.051, 97.2314, 0.2288", "243.501, 194.582, 97.4383, 0.2288", "242.621, 193.863, 97.755, 0.2288", "241.74, 193.146, 98.0717, 0.2288", "240.858, 192.428, 98.3884, 0.2288", "239.977, 191.71, 98.705, 0.2288", "239.096, 190.992, 99.0217, 0.2288", "238.214, 190.275, 99.3384, 0.2288", "237.333, 189.556, 99.6551, 0.2288", "236.452, 188.839, 99.9718, 0.2288", "235.412, 188.376, 100.009, 0.2288", "234.352, 187.947, 100.009, 0.2288", "233.291, 187.518, 100.009, 0.2288", "232.194, 187.206, 100.009, 0.2542", "231.079, 186.949, 100.009, 0.2796", "229.965, 186.692, 100.009, 0.305", "228.906, 186.304, 100.197, 0.2796", "227.919, 185.752, 100.624, 0.2542", "226.933, 185.2, 101.051, 0.2288", "225.946, 184.648, 101.478, 0.2288", "225.184, 183.86, 101.676, 0.2288", "224.706, 182.84, 101.747, 0.2288", "224.58, 181.712, 102.098, 0.2542", "224.455, 180.584, 102.448, 0.2796", "224.329, 179.455, 102.798, 0.305", "224.205, 178.327, 103.148, 0.2796", "224.079, 177.199, 103.498, 0.2542", "223.954, 176.071, 103.848, 0.2288", "223.829, 174.943, 104.199, 0.2288", "223.704, 173.815, 104.549, 0.2288", "223.579, 172.687, 104.899, 0.2288", "223.304, 171.673, 105.874, 0.2288", "222.96, 170.711, 107.138, 0.2288", "222.617, 169.75, 108.402, 0.2288", "222.24, 168.795, 109.616, 0.2288", "221.697, 167.869, 110.584, 0.2288", "221.152, 166.944, 111.552, 0.2288", "220.609, 166.017, 112.52, 0.2288", "220.066, 165.092, 113.488, 0.305", "219.522, 164.166, 114.455, 0.4322" ],
    "parent" : "apic_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "252.449, 189.843, 107.232, 0.3304", "253.086, 190.319, 108.046, 0.2288", "253.913, 190.941, 109.242, 0.2796", "254.74, 191.562, 110.438, 0.3304", "255.567, 192.183, 111.634, 0.3814", "256.7, 192.234, 111.677, 0.3304", "257.724, 192.01, 111.982, 0.2796", "258.497, 191.261, 112.921, 0.2288", "259.273, 190.512, 113.861, 0.2288", "260.047, 189.762, 114.8, 0.2288", "260.822, 189.013, 115.739, 0.2288", "261.595, 188.264, 116.679, 0.2542", "262.37, 187.514, 117.618, 0.2796", "263.113, 186.727, 118.491, 0.305", "263.747, 185.813, 119.135, 0.2796", "264.384, 184.899, 119.78, 0.2542", "265.019, 183.985, 120.425, 0.2288", "265.655, 183.071, 121.07, 0.2288", "266.29, 182.157, 121.714, 0.2288", "266.926, 181.243, 122.359, 0.2542", "267.561, 180.329, 123.004, 0.305", "268.26, 179.472, 123.691, 0.356", "269.03, 178.681, 124.426, 0.356", "269.799, 177.89, 125.16, 0.305", "270.569, 177.098, 125.895, 0.2542", "271.339, 176.306, 126.63, 0.2288", "272.108, 175.516, 127.364, 0.2796", "272.878, 174.724, 128.099, 0.356", "273.647, 173.933, 128.834, 0.4322", "274.63, 173.363, 128.901, 0.4068", "275.634, 172.815, 128.901, 0.3304", "276.21, 171.948, 129.704, 0.2542", "276.656, 170.984, 130.749, 0.2288", "277.102, 170.021, 131.793, 0.2288", "277.532, 169.055, 132.84, 0.2288", "277.596, 168.003, 133.934, 0.2288", "277.664, 166.953, 135.029, 0.2288", "277.73, 165.902, 136.124, 0.2288" ],
    "parent" : "apic_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "252.449, 189.843, 107.232, 0.3304", "252.594, 188.975, 107.95, 0.2288", "252.774, 187.904, 108.833, 0.2288", "252.953, 186.833, 109.717, 0.2288", "253.133, 185.763, 110.6, 0.2288", "253.483, 184.73, 111.122, 0.2288", "254.076, 183.752, 111.122, 0.2288", "254.429, 182.696, 111.668, 0.2288", "254.744, 181.627, 112.305, 0.2288", "255.058, 180.559, 112.942, 0.2288", "255.413, 179.492, 113.344, 0.2288", "255.837, 178.43, 113.344, 0.2288", "256.262, 177.368, 113.344, 0.2288", "256.755, 176.377, 113.873, 0.2288", "257.293, 175.435, 114.762, 0.2288", "257.831, 174.493, 115.652, 0.2288", "258.368, 173.552, 116.541, 0.2288", "258.908, 172.61, 117.431, 0.2288", "259.445, 171.669, 118.32, 0.2288", "259.777, 170.656, 118.9, 0.2288", "259.721, 169.513, 118.9, 0.2288", "259.665, 168.372, 118.9, 0.2288", "260.281, 167.516, 118.9, 0.2288", "261.147, 166.769, 118.9, 0.2288", "262.013, 166.022, 118.9, 0.2288", "262.898, 165.358, 119.556, 0.2288", "263.786, 164.708, 120.325, 0.2288", "264.674, 164.06, 121.094, 0.2288", "265.562, 163.411, 121.863, 0.2288", "266.45, 162.762, 122.632, 0.2288", "267.338, 162.113, 123.401, 0.2288", "268.227, 161.463, 124.17, 0.2288", "269.115, 160.814, 124.939, 0.2288", "270.169, 160.511, 125.667, 0.2288", "271.242, 160.245, 126.391, 0.2288", "272.314, 159.978, 127.116, 0.2288", "273.387, 159.712, 127.84, 0.2288", "274.459, 159.445, 128.564, 0.2288", "275.531, 159.178, 129.289, 0.2288", "276.604, 158.912, 130.013, 0.2288", "277.676, 158.645, 130.737, 0.2288", "278.783, 158.505, 131.123, 0.2288", "279.927, 158.506, 131.123, 0.2288", "281.07, 158.508, 131.123, 0.2288", "282.215, 158.509, 131.123, 0.2288", "283.219, 158.129, 131.441, 0.2288", "284.118, 157.46, 132.0, 0.2288", "285.017, 156.791, 132.558, 0.2288", "285.917, 156.122, 133.117, 0.2288", "286.816, 155.452, 133.675, 0.2288", "287.716, 154.783, 134.234, 0.2288", "288.63, 154.111, 134.457, 0.305", "289.553, 153.436, 134.457, 0.3814" ],
    "parent" : "apic_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "212.077, 206.526, 67.7636, 0.5848", "212.109, 205.906, 68.2618, 0.5592", "212.257, 204.775, 68.0518, 0.4068", "212.404, 203.643, 67.842, 0.2796", "212.553, 202.512, 67.6323, 0.2288", "212.701, 201.382, 67.4223, 0.2288", "212.853, 200.25, 67.2286, 0.2796", "213.064, 199.126, 67.2286, 0.3814", "213.275, 198.002, 67.2286, 0.5592", "213.994, 197.145, 67.2286, 0.661", "214.803, 196.336, 67.2286, 0.7626", "215.255, 195.433, 67.2286, 0.788", "214.946, 194.331, 67.2286, 0.8136", "214.641, 193.231, 67.2286, 0.7118", "214.958, 192.131, 67.2286, 0.5848", "215.276, 191.032, 67.2286, 0.5592", "215.562, 189.927, 67.184, 0.5848", "215.737, 188.799, 66.9796, 0.6356", "215.911, 187.672, 66.7752, 0.5848", "216.084, 186.544, 66.5708, 0.5592", "216.26, 185.417, 66.3664, 0.5084", "216.433, 184.289, 66.162, 0.4322", "216.608, 183.161, 65.9576, 0.356", "216.782, 182.034, 65.7532, 0.3304", "216.948, 180.905, 65.5617, 0.3814", "216.981, 179.762, 65.5617, 0.4322", "217.016, 178.618, 65.5617, 0.4068", "217.26, 177.504, 65.5617, 0.3304", "217.54, 176.395, 65.5617, 0.2542", "217.71, 175.27, 65.5617, 0.2288", "217.747, 174.127, 65.5617, 0.2288", "217.783, 172.983, 65.5617, 0.2542", "217.818, 171.84, 65.5617, 0.2796", "217.851, 170.696, 65.5617, 0.305", "217.963, 169.582, 65.0387, 0.2796", "218.085, 168.47, 64.4442, 0.2542", "218.209, 167.359, 63.8498, 0.2288", "218.331, 166.248, 63.2554, 0.2288", "218.455, 165.137, 62.6609, 0.2288", "218.531, 164.018, 62.228, 0.2288", "218.485, 162.875, 62.228, 0.2288", "218.436, 161.731, 62.228, 0.2288", "218.375, 160.589, 62.228, 0.2288", "218.312, 159.446, 62.228, 0.2796", "217.738, 158.482, 62.228, 0.356", "217.079, 157.547, 62.228, 0.4322", "216.42, 156.611, 62.228, 0.4068", "216.041, 155.592, 62.228, 0.3304", "216.075, 154.449, 62.228, 0.2542", "216.619, 153.462, 62.228, 0.2288", "217.51, 152.979, 62.228, 0.2288", "218.653, 152.936, 62.228, 0.2288", "219.511, 152.301, 61.7081, 0.2542", "220.292, 151.51, 61.0512, 0.2796", "221.075, 150.72, 60.394, 0.305", "221.857, 149.929, 59.7372, 0.2796", "222.839, 149.508, 59.4502, 0.2542", "223.975, 149.374, 59.4502, 0.2288", "224.813, 148.793, 58.7787, 0.2288", "225.496, 147.976, 57.7545, 0.2288", "226.178, 147.158, 56.73, 0.2288", "226.861, 146.342, 55.7054, 0.2288", "227.567, 145.456, 55.5607, 0.2288", "228.278, 144.56, 55.5607, 0.305", "228.989, 143.663, 55.5607, 0.4322" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "212.077, 206.526, 67.7636, 0.5848", "210.992, 206.039, 67.7902, 0.7626", "209.882, 205.842, 68.0047, 0.8136", "209.061, 205.199, 69.134, 0.7372", "208.034, 204.784, 69.7144, 0.6102", "207.032, 204.32, 69.3848, 0.5592", "206.158, 203.949, 70.8786, 0.6102", "205.629, 203.203, 72.4819, 0.7372", "205.426, 202.186, 73.6358, 0.7626", "205.442, 201.094, 74.2577, 0.6864", "205.597, 199.98, 74.251, 0.5848", "205.293, 198.92, 74.6446, 0.5592", "204.569, 198.058, 75.0893, 0.6102", "203.756, 197.286, 75.5695, 0.6864", "202.87, 196.569, 75.6011, 0.788", "201.883, 195.992, 75.6053, 0.8644", "200.872, 195.457, 75.6288, 0.9406", "199.868, 194.912, 75.7624, 0.9152", "198.852, 194.427, 76.2003, 0.8898", "197.808, 194.028, 76.7301, 0.8136", "196.721, 193.707, 76.8734, 0.8136", "195.598, 193.529, 76.8289, 0.788", "194.55, 193.131, 76.4467, 0.7626", "193.572, 192.574, 75.9671, 0.6356", "192.536, 192.122, 75.7058, 0.5592", "191.435, 191.86, 75.8092, 0.4576", "190.303, 191.731, 75.924, 0.483", "189.283, 191.316, 76.3582, 0.5084", "188.498, 190.531, 76.7231, 0.6102", "187.933, 189.541, 76.7407, 0.661", "187.413, 188.524, 76.8429, 0.6356", "186.787, 187.603, 77.3405, 0.6102", "186.106, 186.714, 77.7879, 0.5848", "185.409, 185.809, 77.8518, 0.6102", "184.831, 184.834, 77.9302, 0.6102", "184.24, 183.926, 78.5526, 0.5848", "183.677, 183.539, 79.7871, 0.5338", "182.847, 182.85, 80.7215, 0.4322", "182.016, 182.163, 81.6558, 0.3304", "181.187, 181.474, 82.5902, 0.305", "180.111, 181.249, 82.7856, 0.3304", "179.019, 181.093, 83.3045, 0.3814", "177.969, 180.889, 84.2965, 0.3304", "176.919, 180.686, 85.2888, 0.2796", "175.825, 180.688, 86.0286, 0.2288", "174.714, 180.769, 86.6715, 0.2288", "173.604, 180.85, 87.3146, 0.2542", "172.493, 180.933, 87.9575, 0.2796", "171.426, 180.784, 88.5951, 0.3304", "170.425, 180.296, 89.2245, 0.356", "169.423, 179.806, 89.8542, 0.3814", "168.422, 179.317, 90.4837, 0.4068", "167.42, 178.828, 91.1131, 0.4322", "166.304, 179.069, 91.1196, 0.483", "165.187, 179.317, 91.1196, 0.4576", "164.07, 179.564, 91.1196, 0.4576", "162.948, 179.784, 91.1196, 0.4322", "161.823, 179.995, 91.1196, 0.4576", "160.685, 180.108, 91.1196, 0.4068", "159.546, 180.211, 91.1196, 0.3304", "158.406, 180.314, 91.1196, 0.2542", "157.278, 180.363, 91.1196, 0.2542", "156.269, 179.824, 91.1196, 0.2796", "155.259, 179.286, 91.1196, 0.305", "154.25, 178.748, 91.1196, 0.2796", "153.226, 178.247, 91.1196, 0.2542", "152.124, 177.939, 91.1196, 0.2288", "151.022, 177.631, 91.1196, 0.2288", "149.92, 177.323, 91.1196, 0.2288", "148.818, 177.016, 91.1196, 0.2288", "147.717, 176.708, 91.1196, 0.2288" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "212.751, 232.423, 67.3565, 0.4322", "212.027, 231.266, 65.8241, 0.5338", "211.3, 230.455, 66.4362, 0.5848", "210.438, 229.777, 67.212, 0.6864", "209.584, 229.041, 67.6402, 0.788", "208.931, 228.117, 67.594, 0.8644", "208.255, 227.251, 66.904, 0.9152", "207.529, 226.399, 66.362, 0.8898", "206.667, 225.692, 65.7894, 0.8644", "205.825, 224.929, 65.7588, 0.8136", "205.069, 224.25, 66.9192, 0.788", "204.655, 223.26, 67.6746, 0.7372", "204.082, 222.278, 67.7538, 0.7118", "203.399, 221.361, 67.732, 0.661", "202.704, 220.453, 67.6242, 0.661", "201.978, 219.606, 67.034, 0.661", "201.087, 219.057, 65.9498, 0.7118", "200.218, 218.34, 65.548, 0.7626", "199.5, 217.454, 65.52, 0.8136", "199.163, 216.367, 65.52, 0.8644", "198.634, 215.356, 65.5194, 0.839", "198.1, 214.343, 65.5175, 0.839", "197.827, 213.235, 65.5021, 0.7626", "197.438, 212.161, 65.4108, 0.788", "196.968, 211.141, 64.8802, 0.788", "196.58, 210.073, 64.5736, 0.8644", "196.488, 208.969, 65.2313, 0.8898", "196.198, 207.863, 65.2364, 0.8898", "195.8, 206.836, 64.475, 0.8136", "195.089, 205.944, 64.318, 0.661", "194.316, 205.113, 63.957, 0.5338", "193.813, 204.122, 63.3492, 0.4576", "193.625, 203.01, 63.7129, 0.4576", "193.007, 202.053, 63.6056, 0.483", "192.599, 201.001, 63.2968, 0.5084", "191.843, 200.154, 63.3713, 0.5848", "190.863, 199.581, 63.6843, 0.6102", "189.944, 198.947, 64.1892, 0.6864", "189.128, 198.159, 63.8725, 0.7372", "188.355, 197.359, 63.2484, 0.839", "187.606, 196.506, 62.9821, 0.839", "186.972, 195.584, 62.4456, 0.7372", "186.273, 194.696, 62.5512, 0.5338", "185.417, 194.009, 63.2296, 0.4068", "184.532, 193.327, 63.1187, 0.4068", "184.009, 192.328, 62.673, 0.5084", "183.548, 191.307, 62.1939, 0.5592", "183.111, 190.276, 62.1751, 0.5338", "183.037, 189.137, 62.27, 0.5084", "182.668, 188.128, 62.7427, 0.5592", "181.865, 187.403, 63.6227, 0.661", "180.98, 186.726, 64.2004, 0.7372", "180.147, 185.95, 64.3835, 0.7372", "179.402, 185.085, 64.3191, 0.661", "178.714, 184.192, 63.9612, 0.6102", "177.942, 183.39, 63.4228, 0.5592", "177.029, 182.717, 63.4203, 0.6102", "176.001, 182.279, 63.849, 0.6356", "174.959, 181.904, 64.3843, 0.7118", "173.994, 181.3, 64.5854, 0.7372", "173.175, 180.647, 65.4366, 0.7372", "172.418, 179.982, 66.505, 0.7118", "171.628, 179.164, 66.6162, 0.6864", "170.842, 178.345, 66.4698, 0.6356", "169.954, 177.647, 66.0509, 0.5592", "169.099, 176.912, 65.637, 0.483", "168.346, 176.058, 65.4912, 0.4576", "167.522, 175.288, 65.3719, 0.4322", "166.49, 174.961, 64.895, 0.4068", "165.365, 174.975, 64.6724, 0.4322", "164.252, 175.184, 64.5394, 0.5338", "163.13, 175.283, 64.4064, 0.6102", "162.035, 175.01, 64.4375, 0.6102", "161.025, 174.485, 64.584, 0.5338", "159.983, 174.163, 65.1507, 0.5084", "158.92, 173.826, 65.5668, 0.483", "158.008, 173.191, 66.0285, 0.5084", "157.197, 172.413, 66.5487, 0.5084", "156.393, 171.611, 66.8716, 0.5848", "155.59, 170.829, 67.3957, 0.5848", "154.741, 170.088, 67.3957, 0.5592", "153.926, 169.29, 67.2476, 0.4322", "153.645, 168.571, 67.7961, 0.356", "153.294, 167.553, 68.7453, 0.2796", "152.82, 166.595, 69.4509, 0.2542", "151.978, 165.82, 69.4509, 0.2288", "151.09, 165.099, 69.4509, 0.2288", "150.09, 164.641, 70.0028, 0.2288", "149.049, 164.276, 70.7518, 0.2288", "148.078, 163.975, 70.2976, 0.2288", "147.172, 163.734, 68.6935, 0.2288", "146.266, 163.494, 67.0897, 0.2288", "145.36, 163.252, 65.4856, 0.2288", "144.366, 163.4, 64.3504, 0.2288", "143.334, 163.714, 63.415, 0.2288", "142.302, 164.028, 62.4795, 0.2288", "141.271, 164.342, 61.544, 0.2288", "140.215, 164.578, 60.6516, 0.2288", "139.14, 164.75, 59.7957, 0.2288", "138.064, 164.921, 58.9397, 0.2288", "136.988, 165.093, 58.0835, 0.2796", "135.913, 165.264, 57.2275, 0.3304" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "212.751, 232.423, 67.3565, 0.4322", "211.289, 232.582, 67.8404, 0.6102", "210.182, 232.66, 68.4947, 0.6864", "209.22, 232.965, 69.7687, 0.7118", "208.099, 233.018, 69.9076, 0.8136", "206.967, 232.95, 69.571, 0.7626", "205.899, 232.59, 69.1435, 0.6864", "204.814, 232.303, 68.6221, 0.5338", "203.711, 232.213, 67.9176, 0.5084", "202.662, 232.605, 68.3777, 0.483" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "202.662, 232.605, 68.3777, 0.483", "201.766, 231.912, 68.7011, 0.3304", "200.77, 231.371, 69.0752, 0.2796", "199.773, 230.829, 69.4495, 0.2288", "198.777, 230.29, 69.8236, 0.2288", "197.78, 229.748, 70.198, 0.2796", "196.784, 229.207, 70.5723, 0.3814", "195.788, 228.666, 70.9464, 0.483", "194.714, 228.484, 71.1178, 0.483", "193.576, 228.604, 71.1178, 0.4322", "192.439, 228.725, 71.1178, 0.3814", "191.327, 228.676, 71.1178, 0.3814", "190.279, 228.218, 71.1178, 0.3304", "189.231, 227.759, 71.1178, 0.305", "188.211, 227.249, 71.1178, 0.2796", "187.252, 226.624, 71.1178, 0.356", "186.292, 226.001, 71.1178, 0.3814", "185.334, 225.377, 71.1178, 0.4068", "184.344, 224.814, 71.1178, 0.3304", "183.27, 224.423, 71.1178, 0.305", "182.195, 224.032, 71.1178, 0.2796", "181.119, 223.641, 71.1178, 0.305", "180.086, 223.171, 71.1178, 0.2796", "179.165, 222.493, 71.1178, 0.2542", "178.244, 221.815, 71.1178, 0.2288", "177.323, 221.135, 71.1178, 0.2288", "176.455, 220.402, 71.1178, 0.2288", "175.74, 219.508, 71.1178, 0.2288", "175.025, 218.616, 71.1178, 0.305", "174.311, 217.723, 71.1178, 0.3814", "173.348, 217.172, 71.787, 0.4576", "172.381, 216.627, 72.4654, 0.3814", "171.415, 216.082, 73.1438, 0.3304", "170.447, 215.536, 73.8223, 0.305", "169.473, 215.0, 74.4514, 0.4068", "168.412, 214.576, 74.4514, 0.5338", "167.349, 214.151, 74.4514, 0.6102", "166.262, 213.883, 74.4514, 0.6102", "165.12, 213.954, 74.4514, 0.483", "163.977, 214.025, 74.4514, 0.3814", "162.845, 214.148, 74.6231, 0.2796", "161.719, 214.308, 74.9185, 0.2542", "160.592, 214.468, 75.2142, 0.2288", "159.467, 214.628, 75.5096, 0.2288", "158.34, 214.788, 75.805, 0.2542", "157.214, 214.948, 76.1006, 0.2796", "156.087, 215.109, 76.396, 0.3304", "154.962, 215.27, 76.6508, 0.3304", "153.845, 215.464, 76.2723, 0.356", "152.729, 215.658, 75.8937, 0.3304", "151.611, 215.852, 75.5152, 0.3304", "150.494, 216.046, 75.1366, 0.3304", "149.378, 216.24, 74.758, 0.4068", "148.261, 216.434, 74.3795, 0.483", "147.145, 216.628, 74.0009, 0.483", "146.027, 216.822, 73.6224, 0.3814", "144.92, 217.017, 73.1427, 0.2796", "143.839, 217.216, 72.3682, 0.2288", "142.758, 217.415, 71.5938, 0.2288", "141.676, 217.613, 70.8193, 0.2542", "140.595, 217.812, 70.0448, 0.2796", "139.513, 218.01, 69.2703, 0.305", "138.432, 218.209, 68.4958, 0.2796", "137.328, 218.24, 67.7989, 0.2542", "136.218, 218.228, 67.1216, 0.2288", "135.107, 218.217, 66.4443, 0.2288", "133.998, 218.205, 65.7672, 0.2288", "132.888, 218.194, 65.0899, 0.2796", "131.935, 217.611, 65.0062, 0.3304", "131.016, 216.93, 65.0062, 0.3814", "130.112, 216.229, 65.0062, 0.356", "129.176, 215.573, 65.0062, 0.356", "128.206, 214.967, 65.0062, 0.3814", "127.112, 214.839, 64.4216, 0.4576", "126.002, 214.772, 63.7624, 0.483", "124.892, 214.706, 63.103, 0.4576", "123.782, 214.638, 62.4439, 0.356", "122.672, 214.572, 61.7845, 0.2796", "121.563, 214.506, 61.1254, 0.2542", "120.452, 214.458, 60.4713, 0.2796", "119.339, 214.521, 59.8492, 0.3304", "118.226, 214.585, 59.2267, 0.3304", "117.111, 214.648, 58.6046, 0.3304", "115.998, 214.712, 57.9824, 0.2796", "114.884, 214.775, 57.36, 0.305", "113.886, 214.308, 57.2275, 0.3304", "112.918, 213.697, 57.2275, 0.4068", "111.951, 213.087, 57.2275, 0.3814", "110.983, 212.476, 57.2275, 0.356" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "202.662, 232.605, 68.3777, 0.483", "202.717, 233.366, 70.112, 0.2796", "202.784, 234.457, 70.8436, 0.2796", "202.699, 235.555, 70.5802, 0.3304", "201.952, 236.35, 71.1449, 0.4322", "200.982, 236.683, 71.932, 0.5084", "199.858, 236.737, 71.465, 0.483", "198.739, 236.793, 71.5638, 0.4322", "197.729, 236.734, 72.7734, 0.3814", "196.883, 236.684, 74.6514, 0.4068", "196.138, 236.642, 76.75, 0.4068", "195.631, 236.408, 79.1165, 0.4068", "195.084, 236.184, 81.1073, 0.3814", "194.106, 236.602, 81.6858, 0.4322", "193.135, 237.191, 81.7645, 0.5084", "192.088, 237.565, 82.1918, 0.5848", "190.99, 237.788, 82.7448, 0.5592", "189.968, 237.8, 83.8222, 0.4576", "189.052, 237.976, 85.269, 0.3814", "188.342, 238.557, 86.889, 0.4068", "187.504, 238.61, 88.4761, 0.483", "186.682, 237.93, 89.0392, 0.5592", "185.733, 237.317, 89.2956, 0.5338", "184.656, 237.176, 89.9682, 0.5592", "183.53, 237.252, 90.3409, 0.5338", "182.568, 237.538, 91.5597, 0.5592", "181.621, 237.607, 93.0972, 0.5338", "180.603, 237.608, 94.3698, 0.5338", "179.479, 237.598, 94.7223, 0.5848", "178.362, 237.544, 95.2879, 0.6102", "177.28, 237.231, 95.7051, 0.6102", "176.224, 236.795, 95.7242, 0.5338", "175.132, 236.496, 95.3756, 0.5084", "174.192, 237.06, 95.6788, 0.5084", "173.151, 237.292, 96.6762, 0.5338", "172.147, 237.619, 97.7505, 0.483", "171.396, 237.688, 98.1005, 0.4068", "170.578, 237.906, 99.9858, 0.3304", "169.762, 238.124, 101.871, 0.305", "168.712, 238.072, 102.784, 0.305", "167.61, 237.957, 103.466, 0.2796", "166.557, 237.658, 103.899, 0.305", "165.592, 237.044, 103.899, 0.3814" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_98",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_99",
    "groups" : [ ],
    "sections" : [ "dend_48", "dend_45", "dend_44", "dend_39", "dend_36", "dend_33", "dend_32", "dend_27", "dend_18", "dend_13", "dend_0", "apic_0", "dend_50", "dend_49", "dend_47", "dend_46", "dend_43", "dend_40", "dend_38", "dend_37", "dend_35", "dend_34", "dend_31", "dend_28", "dend_26", "dend_19", "dend_15", "dend_14", "dend_6", "dend_1", "apic_32", "apic_1", "dend_42", "dend_41", "dend_30", "dend_29", "dend_25", "dend_20", "dend_17", "dend_16", "dend_12", "dend_7", "dend_5", "dend_2", "apic_36", "apic_33", "apic_29", "apic_2", "dend_24", "dend_21", "dend_11", "dend_8", "dend_4", "dend_3", "apic_35", "apic_34", "apic_31", "apic_30", "apic_24", "apic_3", "dend_23", "dend_22", "dend_10", "dend_9", "apic_28", "apic_25", "apic_23", "apic_4", "apic_27", "apic_26", "apic_6", "apic_5", "apic_16", "apic_7", "apic_20", "apic_17", "apic_13", "apic_8", "apic_22", "apic_21", "apic_19", "apic_18", "apic_15", "apic_14", "apic_12", "apic_9", "apic_11", "apic_10" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_48", "dend_45", "dend_44", "dend_39", "dend_36", "dend_33", "dend_32", "dend_27", "dend_18", "dend_13", "dend_0", "dend_50", "dend_49", "dend_47", "dend_46", "dend_43", "dend_40", "dend_38", "dend_37", "dend_35", "dend_34", "dend_31", "dend_28", "dend_26", "dend_19", "dend_15", "dend_14", "dend_6", "dend_1", "dend_42", "dend_41", "dend_30", "dend_29", "dend_25", "dend_20", "dend_17", "dend_16", "dend_12", "dend_7", "dend_5", "dend_2", "dend_24", "dend_21", "dend_11", "dend_8", "dend_4", "dend_3", "dend_23", "dend_22", "dend_10", "dend_9" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_32", "apic_1", "apic_36", "apic_33", "apic_29", "apic_2", "apic_35", "apic_34", "apic_31", "apic_30", "apic_24", "apic_3", "apic_28", "apic_25", "apic_23", "apic_4", "apic_27", "apic_26", "apic_6", "apic_5", "apic_16", "apic_7", "apic_20", "apic_17", "apic_13", "apic_8", "apic_22", "apic_21", "apic_19", "apic_18", "apic_15", "apic_14", "apic_12", "apic_9", "apic_11", "apic_10" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4489",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "apic_0", "apic_0", "axon_1", "axon_1", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "apic_35", "apic_35", "apic_35", "apic_35", "apic_35", "apic_35", "apic_35", "apic_35", "apic_35", "apic_35", "apic_35", "apic_35", "apic_35", "apic_35", "apic_35", "apic_35", "apic_35", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_25", "apic_25", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_20", "apic_20", "apic_20", "apic_20", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "apic",
    "value" : "2.47"
  }, {
    "group" : "dend",
    "value" : "2.47"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "54.98"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "3.8515322E-4",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "4.4473767E-4",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.6984893",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "1.2104418E-5",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.017523432",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.024483336",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0027545008",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.09407922",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "3.34503E-4",
    "erev" : "-83.48182"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "4.8102517E-4",
    "erev" : "-83.48182"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "1.0297096E-5",
    "erev" : "-83.48182"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "8.895349E-5",
    "erev" : "-83.48182"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "2.183149E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0024101327",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_473871773

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_48, id: dend_48, parent: soma_0
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: soma_0
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: soma_0
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: soma_0
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_18
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: apic_32, id: apic_32, parent: apic_0
create apic_32
public apic_32
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_25, id: dend_25, parent: dend_19
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_12, id: dend_12, parent: dend_6
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_36, id: apic_36, parent: apic_32
create apic_36
public apic_36
// Section: apic_33, id: apic_33, parent: apic_32
create apic_33
public apic_33
// Section: apic_29, id: apic_29, parent: apic_1
create apic_29
public apic_29
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_35, id: apic_35, parent: apic_33
create apic_35
public apic_35
// Section: apic_34, id: apic_34, parent: apic_33
create apic_34
public apic_34
// Section: apic_31, id: apic_31, parent: apic_29
create apic_31
public apic_31
// Section: apic_30, id: apic_30, parent: apic_29
create apic_30
public apic_30
// Section: apic_24, id: apic_24, parent: apic_2
create apic_24
public apic_24
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: apic_28, id: apic_28, parent: apic_24
create apic_28
public apic_28
// Section: apic_25, id: apic_25, parent: apic_24
create apic_25
public apic_25
// Section: apic_23, id: apic_23, parent: apic_3
create apic_23
public apic_23
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: apic_27, id: apic_27, parent: apic_25
create apic_27
public apic_27
// Section: apic_26, id: apic_26, parent: apic_25
create apic_26
public apic_26
// Section: apic_6, id: apic_6, parent: apic_4
create apic_6
public apic_6
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: apic_16, id: apic_16, parent: apic_6
create apic_16
public apic_16
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7
// Section: apic_20, id: apic_20, parent: apic_16
create apic_20
public apic_20
// Section: apic_17, id: apic_17, parent: apic_16
create apic_17
public apic_17
// Section: apic_13, id: apic_13, parent: apic_7
create apic_13
public apic_13
// Section: apic_8, id: apic_8, parent: apic_7
create apic_8
public apic_8
// Section: apic_22, id: apic_22, parent: apic_20
create apic_22
public apic_22
// Section: apic_21, id: apic_21, parent: apic_20
create apic_21
public apic_21
// Section: apic_19, id: apic_19, parent: apic_17
create apic_19
public apic_19
// Section: apic_18, id: apic_18, parent: apic_17
create apic_18
public apic_18
// Section: apic_15, id: apic_15, parent: apic_13
create apic_15
public apic_15
// Section: apic_14, id: apic_14, parent: apic_13
create apic_14
public apic_14
// Section: apic_12, id: apic_12, parent: apic_8
create apic_12
public apic_12
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9
// Section: apic_11, id: apic_11, parent: apic_9
create apic_11
public apic_11
// Section: apic_10, id: apic_10, parent: apic_9
create apic_10
public apic_10

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_98, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_98
// Group: {name=ModelViewParmSubset_99, groups=[], sections=[dend_48, dend_45, dend_44, dend_39, dend_36, dend_33, dend_32, dend_27, dend_18, dend_13, dend_0, apic_0, dend_50, dend_49, dend_47, dend_46, dend_43, dend_40, dend_38, dend_37, dend_35, dend_34, dend_31, dend_28, dend_26, dend_19, dend_15, dend_14, dend_6, dend_1, apic_32, apic_1, dend_42, dend_41, dend_30, dend_29, dend_25, dend_20, dend_17, dend_16, dend_12, dend_7, dend_5, dend_2, apic_36, apic_33, apic_29, apic_2, dend_24, dend_21, dend_11, dend_8, dend_4, dend_3, apic_35, apic_34, apic_31, apic_30, apic_24, apic_3, dend_23, dend_22, dend_10, dend_9, apic_28, apic_25, apic_23, apic_4, apic_27, apic_26, apic_6, apic_5, apic_16, apic_7, apic_20, apic_17, apic_13, apic_8, apic_22, apic_21, apic_19, apic_18, apic_15, apic_14, apic_12, apic_9, apic_11, apic_10]}
objref ModelViewParmSubset_99
// Group: {name=dend, groups=[], sections=[dend_48, dend_45, dend_44, dend_39, dend_36, dend_33, dend_32, dend_27, dend_18, dend_13, dend_0, dend_50, dend_49, dend_47, dend_46, dend_43, dend_40, dend_38, dend_37, dend_35, dend_34, dend_31, dend_28, dend_26, dend_19, dend_15, dend_14, dend_6, dend_1, dend_42, dend_41, dend_30, dend_29, dend_25, dend_20, dend_17, dend_16, dend_12, dend_7, dend_5, dend_2, dend_24, dend_21, dend_11, dend_8, dend_4, dend_3, dend_23, dend_22, dend_10, dend_9]}
objref dend
// Group: {name=apic, groups=[], sections=[apic_0, apic_32, apic_1, apic_36, apic_33, apic_29, apic_2, apic_35, apic_34, apic_31, apic_30, apic_24, apic_3, apic_28, apic_25, apic_23, apic_4, apic_27, apic_26, apic_6, apic_5, apic_16, apic_7, apic_20, apic_17, apic_13, apic_8, apic_22, apic_21, apic_19, apic_18, apic_15, apic_14, apic_12, apic_9, apic_11, apic_10]}
objref apic
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_4489, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_4489
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, apic_0, apic_0, axon_1, axon_1, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_29, apic_29, apic_29, apic_29, apic_29, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_35, apic_35, apic_35, apic_35, apic_35, apic_35, apic_35, apic_35, apic_35, apic_35, apic_35, apic_35, apic_35, apic_35, apic_35, apic_35, apic_35, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_25, apic_25, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_20, apic_20, apic_20, apic_20, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_8, apic_8, apic_8, apic_8, apic_8, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5000280536385563)
    connect dend_48(0), soma_0(0.5000280536385563)
    connect dend_45(0), soma_0(0.5000280536385563)
    connect dend_44(0), soma_0(0.5000280536385563)
    connect dend_39(0), soma_0(0.5000280536385563)
    connect dend_36(0), soma_0(0.5000280536385563)
    connect dend_33(0), soma_0(0.5000280536385563)
    connect dend_32(0), soma_0(0.5000280536385563)
    connect dend_27(0), soma_0(0.5000280536385563)
    connect dend_18(0), soma_0(0.5000280536385563)
    connect dend_13(0), soma_0(0.5000280536385563)
    connect dend_0(0), soma_0(0.5000280536385563)
    connect apic_0(0), soma_0(0.5000280536385563)
    connect axon_1(0), axon_0(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect apic_32(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_25(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_12(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_36(0), apic_32(1.0)
    connect apic_33(0), apic_32(1.0)
    connect apic_29(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_35(0), apic_33(1.0)
    connect apic_34(0), apic_33(1.0)
    connect apic_31(0), apic_29(1.0)
    connect apic_30(0), apic_29(1.0)
    connect apic_24(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect apic_28(0), apic_24(1.0)
    connect apic_25(0), apic_24(1.0)
    connect apic_23(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect apic_27(0), apic_25(1.0)
    connect apic_26(0), apic_25(1.0)
    connect apic_6(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect apic_16(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)
    connect apic_20(0), apic_16(1.0)
    connect apic_17(0), apic_16(1.0)
    connect apic_13(0), apic_7(1.0)
    connect apic_8(0), apic_7(1.0)
    connect apic_22(0), apic_20(1.0)
    connect apic_21(0), apic_20(1.0)
    connect apic_19(0), apic_17(1.0)
    connect apic_18(0), apic_17(1.0)
    connect apic_15(0), apic_13(1.0)
    connect apic_14(0), apic_13(1.0)
    connect apic_12(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)
    connect apic_11(0), apic_9(1.0)
    connect apic_10(0), apic_9(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 430.613, 639.382, 34.16, 17.8232 ) }
    soma_0 { pt3dadd( 439.525, 639.382, 34.16, 17.8232 ) }
    soma_0 { pt3dadd( 448.436, 639.382, 34.16, 17.8232 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 439.525, 639.382, 34.16, 1.0 ) }
    axon_0 { pt3dadd( 445.366, 653.198, 34.16, 1.0 ) }
    axon_0 { pt3dadd( 451.207, 667.014, 34.16, 1.0 ) }
    // Section: dend_48, id: dend_48, parent: soma_0 (entry count 6/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 443.062, 637.6, 52.4157, 0.2288 ) }
    dend_48 { pt3dadd( 443.551, 637.344, 54.8691, 0.2288 ) }
    dend_48 { pt3dadd( 444.039, 637.088, 57.3224, 0.2288 ) }
    dend_48 { pt3dadd( 444.527, 636.833, 59.7758, 0.2288 ) }
    dend_48 { pt3dadd( 445.015, 636.576, 62.2292, 0.2288 ) }
    dend_48 { pt3dadd( 445.503, 636.321, 64.6825, 0.2288 ) }
    dend_48 { pt3dadd( 446.154, 635.867, 66.1598, 0.2288 ) }
    dend_48 { pt3dadd( 447.032, 635.135, 66.2626, 0.2288 ) }
    dend_48 { pt3dadd( 447.91, 634.403, 66.365, 0.2288 ) }
    dend_48 { pt3dadd( 448.788, 633.671, 66.4678, 0.2288 ) }
    dend_48 { pt3dadd( 449.665, 632.939, 66.5703, 0.2288 ) }
    dend_48 { pt3dadd( 450.544, 632.206, 66.673, 0.2542 ) }
    // Section: dend_45, id: dend_45, parent: soma_0 (entry count 18/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 432.979, 644.809, 28.8915, 0.356 ) }
    dend_45 { pt3dadd( 431.941, 645.282, 28.8702, 0.4576 ) }
    dend_45 { pt3dadd( 430.943, 645.809, 28.4091, 0.5084 ) }
    dend_45 { pt3dadd( 430.001, 646.451, 28.336, 0.5338 ) }
    dend_45 { pt3dadd( 428.943, 646.317, 28.336, 0.5338 ) }
    dend_45 { pt3dadd( 428.032, 645.632, 28.336, 0.5338 ) }
    dend_45 { pt3dadd( 426.98, 645.337, 28.336, 0.5338 ) }
    dend_45 { pt3dadd( 426.083, 645.857, 28.1355, 0.5338 ) }
    dend_45 { pt3dadd( 425.488, 646.814, 27.6679, 0.483 ) }
    dend_45 { pt3dadd( 424.934, 647.791, 27.1345, 0.4322 ) }
    dend_45 { pt3dadd( 424.307, 648.669, 26.6692, 0.3814 ) }
    dend_45 { pt3dadd( 423.178, 648.855, 26.6692, 0.3814 ) }
    dend_45 { pt3dadd( 422.153, 649.22, 26.6692, 0.356 ) }
    dend_45 { pt3dadd( 421.345, 650.03, 26.6692, 0.356 ) }
    dend_45 { pt3dadd( 420.76, 650.953, 26.4211, 0.3814 ) }
    dend_45 { pt3dadd( 420.492, 652.038, 25.816, 0.4576 ) }
    dend_45 { pt3dadd( 420.02, 652.991, 24.9505, 0.4576 ) }
    dend_45 { pt3dadd( 419.395, 653.845, 23.891, 0.4068 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 36/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 434.91, 642.089, 50.5604, 0.2288 ) }
    dend_44 { pt3dadd( 433.905, 642.639, 50.5604, 0.2288 ) }
    dend_44 { pt3dadd( 432.902, 643.188, 50.5604, 0.2542 ) }
    dend_44 { pt3dadd( 431.898, 643.737, 50.5604, 0.2796 ) }
    dend_44 { pt3dadd( 430.904, 644.3, 50.5604, 0.3304 ) }
    dend_44 { pt3dadd( 429.957, 644.943, 50.5604, 0.3304 ) }
    dend_44 { pt3dadd( 429.01, 645.586, 50.5604, 0.356 ) }
    dend_44 { pt3dadd( 428.055, 646.214, 50.5604, 0.3814 ) }
    dend_44 { pt3dadd( 427.082, 646.813, 50.5604, 0.483 ) }
    dend_44 { pt3dadd( 426.134, 647.435, 50.6724, 0.5592 ) }
    dend_44 { pt3dadd( 425.382, 648.213, 51.5763, 0.5848 ) }
    dend_44 { pt3dadd( 424.768, 649.086, 52.227, 0.5084 ) }
    dend_44 { pt3dadd( 424.533, 650.204, 52.227, 0.4068 ) }
    dend_44 { pt3dadd( 424.169, 651.13, 52.227, 0.305 ) }
    dend_44 { pt3dadd( 423.104, 651.378, 52.227, 0.2796 ) }
    dend_44 { pt3dadd( 421.978, 651.187, 52.227, 0.305 ) }
    dend_44 { pt3dadd( 420.977, 650.655, 52.227, 0.356 ) }
    dend_44 { pt3dadd( 419.87, 650.529, 52.227, 0.356 ) }
    dend_44 { pt3dadd( 418.81, 650.954, 52.227, 0.356 ) }
    dend_44 { pt3dadd( 417.889, 651.611, 52.227, 0.4322 ) }
    dend_44 { pt3dadd( 417.146, 652.451, 52.4922, 0.5338 ) }
    dend_44 { pt3dadd( 416.545, 653.392, 53.0914, 0.5848 ) }
    dend_44 { pt3dadd( 415.945, 654.335, 53.6906, 0.5084 ) }
    dend_44 { pt3dadd( 415.342, 655.276, 54.2898, 0.4322 ) }
    dend_44 { pt3dadd( 414.622, 656.121, 54.9324, 0.356 ) }
    dend_44 { pt3dadd( 413.859, 656.929, 55.5906, 0.305 ) }
    dend_44 { pt3dadd( 413.096, 657.738, 56.2489, 0.2542 ) }
    dend_44 { pt3dadd( 412.348, 658.575, 56.672, 0.2542 ) }
    dend_44 { pt3dadd( 411.625, 659.461, 56.672, 0.305 ) }
    dend_44 { pt3dadd( 410.577, 659.573, 56.672, 0.3814 ) }
    dend_44 { pt3dadd( 409.473, 659.804, 56.672, 0.4322 ) }
    dend_44 { pt3dadd( 408.681, 660.58, 56.672, 0.4576 ) }
    dend_44 { pt3dadd( 407.93, 661.4, 57.2432, 0.483 ) }
    dend_44 { pt3dadd( 407.165, 662.199, 57.9695, 0.483 ) }
    dend_44 { pt3dadd( 406.401, 662.996, 58.6958, 0.4576 ) }
    dend_44 { pt3dadd( 405.677, 663.847, 59.2791, 0.4068 ) }
    dend_44 { pt3dadd( 404.969, 664.719, 59.8083, 0.4068 ) }
    dend_44 { pt3dadd( 404.26, 665.589, 60.3375, 0.4576 ) }
    dend_44 { pt3dadd( 403.551, 666.461, 60.867, 0.4576 ) }
    dend_44 { pt3dadd( 402.841, 667.332, 61.3962, 0.4068 ) }
    dend_44 { pt3dadd( 402.114, 668.188, 61.9298, 0.3304 ) }
    dend_44 { pt3dadd( 401.366, 669.025, 62.468, 0.305 ) }
    dend_44 { pt3dadd( 400.617, 669.862, 63.0062, 0.305 ) }
    dend_44 { pt3dadd( 399.87, 670.7, 63.5443, 0.2796 ) }
    dend_44 { pt3dadd( 399.022, 671.415, 63.8949, 0.2542 ) }
    dend_44 { pt3dadd( 397.986, 671.9, 63.8949, 0.2288 ) }
    dend_44 { pt3dadd( 397.415, 672.801, 63.8949, 0.2288 ) }
    dend_44 { pt3dadd( 396.328, 673.111, 63.8949, 0.2288 ) }
    dend_44 { pt3dadd( 396.008, 674.04, 64.3978, 0.2796 ) }
    dend_44 { pt3dadd( 395.908, 675.149, 65.0415, 0.3814 ) }
    dend_44 { pt3dadd( 395.853, 676.263, 65.5617, 0.5084 ) }
    dend_44 { pt3dadd( 395.991, 677.398, 65.5617, 0.5338 ) }
    dend_44 { pt3dadd( 396.053, 678.532, 65.6712, 0.483 ) }
    dend_44 { pt3dadd( 395.94, 679.661, 66.0341, 0.3814 ) }
    dend_44 { pt3dadd( 395.265, 680.518, 66.1172, 0.3304 ) }
    dend_44 { pt3dadd( 394.959, 681.583, 66.1172, 0.305 ) }
    dend_44 { pt3dadd( 394.802, 682.705, 66.124, 0.305 ) }
    dend_44 { pt3dadd( 394.293, 683.714, 66.5594, 0.3304 ) }
    dend_44 { pt3dadd( 393.784, 684.723, 66.995, 0.356 ) }
    dend_44 { pt3dadd( 393.275, 685.732, 67.4304, 0.3814 ) }
    dend_44 { pt3dadd( 392.714, 686.705, 67.7841, 0.356 ) }
    dend_44 { pt3dadd( 391.919, 687.53, 67.7841, 0.305 ) }
    dend_44 { pt3dadd( 391.126, 688.353, 67.7841, 0.2542 ) }
    dend_44 { pt3dadd( 390.294, 689.139, 67.7841, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_44 { pt3dadd( 389.463, 689.926, 67.7841, 0.2542 ) }
    dend_44 { pt3dadd( 388.596, 690.672, 67.7841, 0.2796 ) }
    dend_44 { pt3dadd( 387.713, 691.398, 67.7841, 0.305 ) }
    dend_44 { pt3dadd( 386.829, 692.123, 67.7841, 0.2796 ) }
    dend_44 { pt3dadd( 385.944, 692.85, 67.7841, 0.2542 ) }
    dend_44 { pt3dadd( 385.06, 693.575, 67.7841, 0.2288 ) }
    dend_44 { pt3dadd( 384.176, 694.302, 67.7841, 0.2288 ) }
    dend_44 { pt3dadd( 383.247, 694.969, 67.7841, 0.2288 ) }
    dend_44 { pt3dadd( 382.344, 695.666, 67.7841, 0.2288 ) }
    dend_44 { pt3dadd( 381.562, 696.502, 67.7841, 0.2288 ) }
    dend_44 { pt3dadd( 380.783, 697.338, 67.7841, 0.2288 ) }
    dend_44 { pt3dadd( 380.001, 698.174, 67.7841, 0.2288 ) }
    dend_44 { pt3dadd( 379.185, 698.963, 67.8793, 0.2288 ) }
    dend_44 { pt3dadd( 378.245, 699.591, 68.3082, 0.2288 ) }
    dend_44 { pt3dadd( 377.305, 700.221, 68.7372, 0.2288 ) }
    dend_44 { pt3dadd( 376.366, 700.849, 69.1659, 0.2288 ) }
    dend_44 { pt3dadd( 375.384, 701.406, 69.4509, 0.2288 ) }
    dend_44 { pt3dadd( 374.319, 701.823, 69.4509, 0.2288 ) }
    dend_44 { pt3dadd( 373.253, 702.241, 69.4509, 0.2288 ) }
    dend_44 { pt3dadd( 372.152, 702.527, 69.4509, 0.2288 ) }
    dend_44 { pt3dadd( 371.023, 702.717, 69.4509, 0.2288 ) }
    dend_44 { pt3dadd( 369.895, 702.908, 69.4509, 0.2288 ) }
    dend_44 { pt3dadd( 368.789, 703.192, 69.4509, 0.2288 ) }
    dend_44 { pt3dadd( 367.686, 703.497, 69.4509, 0.2288 ) }
    dend_44 { pt3dadd( 366.583, 703.804, 69.4509, 0.2288 ) }
    dend_44 { pt3dadd( 365.482, 704.109, 69.4509, 0.2288 ) }
    dend_44 { pt3dadd( 364.379, 704.415, 69.4509, 0.2288 ) }
    dend_44 { pt3dadd( 363.278, 704.723, 69.4436, 0.2288 ) }
    dend_44 { pt3dadd( 362.217, 705.14, 69.2056, 0.2288 ) }
    dend_44 { pt3dadd( 361.155, 705.555, 68.9679, 0.2288 ) }
    dend_44 { pt3dadd( 360.092, 705.97, 68.7299, 0.2542 ) }
    dend_44 { pt3dadd( 359.032, 706.387, 68.4919, 0.2796 ) }
    dend_44 { pt3dadd( 357.97, 706.804, 68.3399, 0.305 ) }
    dend_44 { pt3dadd( 356.907, 707.227, 68.3399, 0.2796 ) }
    dend_44 { pt3dadd( 355.844, 707.65, 68.3399, 0.2542 ) }
    dend_44 { pt3dadd( 354.802, 708.113, 68.3637, 0.2288 ) }
    dend_44 { pt3dadd( 353.832, 708.719, 68.469, 0.2288 ) }
    dend_44 { pt3dadd( 352.863, 709.325, 68.5742, 0.2288 ) }
    dend_44 { pt3dadd( 351.894, 709.931, 68.6795, 0.2288 ) }
    dend_44 { pt3dadd( 350.924, 710.537, 68.7848, 0.2288 ) }
    dend_44 { pt3dadd( 349.954, 711.142, 68.8901, 0.2288 ) }
    dend_44 { pt3dadd( 349.078, 711.876, 68.8954, 0.2288 ) }
    dend_44 { pt3dadd( 348.204, 712.615, 68.8954, 0.2288 ) }
    dend_44 { pt3dadd( 347.332, 713.355, 68.8954, 0.2288 ) }
    dend_44 { pt3dadd( 346.459, 714.094, 68.8954, 0.2288 ) }
    dend_44 { pt3dadd( 345.665, 714.912, 69.0973, 0.2288 ) }
    dend_44 { pt3dadd( 344.879, 715.739, 69.3199, 0.2288 ) }
    dend_44 { pt3dadd( 344.094, 716.565, 69.5428, 0.2288 ) }
    dend_44 { pt3dadd( 343.307, 717.392, 69.7654, 0.2288 ) }
    dend_44 { pt3dadd( 342.522, 718.218, 69.9882, 0.2288 ) }
    dend_44 { pt3dadd( 341.89, 719.17, 70.0067, 0.2542 ) }
    dend_44 { pt3dadd( 341.272, 720.133, 70.0067, 0.2796 ) }
    dend_44 { pt3dadd( 340.73, 721.128, 70.1417, 0.305 ) }
    dend_44 { pt3dadd( 340.361, 722.196, 70.5821, 0.2796 ) }
    dend_44 { pt3dadd( 339.991, 723.263, 71.0226, 0.305 ) }
    dend_44 { pt3dadd( 339.62, 724.331, 71.463, 0.356 ) }
    dend_44 { pt3dadd( 339.251, 725.398, 71.9037, 0.4322 ) }
    dend_44 { pt3dadd( 338.88, 726.465, 72.3442, 0.4068 ) }
    dend_44 { pt3dadd( 338.51, 727.532, 72.7846, 0.3304 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 59/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 442.087, 647.146, 25.1966, 0.4068 ) }
    dend_39 { pt3dadd( 441.349, 647.986, 25.1205, 0.4576 ) }
    dend_39 { pt3dadd( 440.385, 648.579, 24.7668, 0.4322 ) }
    dend_39 { pt3dadd( 439.441, 649.117, 23.8994, 0.4068 ) }
    dend_39 { pt3dadd( 438.734, 649.837, 22.5982, 0.5084 ) }
    dend_39 { pt3dadd( 438.672, 650.923, 21.8011, 0.661 ) }
    // Section: dend_36, id: dend_36, parent: soma_0 (entry count 65/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 435.51, 635.605, 19.5098, 0.2288 ) }
    dend_36 { pt3dadd( 434.805, 634.72, 19.1055, 0.2288 ) }
    dend_36 { pt3dadd( 434.591, 633.664, 18.6942, 0.2288 ) }
    dend_36 { pt3dadd( 434.967, 632.648, 19.0907, 0.2288 ) }
    dend_36 { pt3dadd( 435.547, 631.688, 19.6322, 0.2796 ) }
    dend_36 { pt3dadd( 436.278, 630.874, 20.3823, 0.356 ) }
    dend_36 { pt3dadd( 437.148, 630.434, 21.7546, 0.4576 ) }
    dend_36 { pt3dadd( 438.207, 630.226, 22.563, 0.483 ) }
    dend_36 { pt3dadd( 439.286, 630.025, 22.0268, 0.5084 ) }
    dend_36 { pt3dadd( 440.014, 629.235, 21.4374, 0.5338 ) }
    dend_36 { pt3dadd( 440.617, 628.295, 20.8474, 0.6356 ) }
    dend_36 { pt3dadd( 441.393, 627.463, 20.6875, 0.6864 ) }
    dend_36 { pt3dadd( 442.227, 626.682, 20.531, 0.6864 ) }
    dend_36 { pt3dadd( 442.878, 625.818, 19.6837, 0.6102 ) }
    dend_36 { pt3dadd( 443.785, 625.181, 19.185, 0.5592 ) }
    dend_36 { pt3dadd( 444.766, 624.618, 18.8908, 0.5848 ) }
    dend_36 { pt3dadd( 445.67, 623.998, 18.8908, 0.7118 ) }
    dend_36 { pt3dadd( 446.327, 623.152, 19.4057, 0.8644 ) }
    dend_36 { pt3dadd( 446.936, 622.479, 21.1131, 0.8898 ) }
    // Section: dend_33, id: dend_33, parent: soma_0 (entry count 84/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 435.131, 646.016, 42.8876, 0.3304 ) }
    dend_33 { pt3dadd( 434.388, 646.659, 43.885, 0.3304 ) }
    dend_33 { pt3dadd( 433.534, 647.194, 45.1497, 0.356 ) }
    dend_33 { pt3dadd( 433.803, 647.918, 46.333, 0.356 ) }
    dend_33 { pt3dadd( 434.79, 648.393, 46.9594, 0.4068 ) }
    dend_33 { pt3dadd( 435.572, 648.96, 48.3616, 0.4576 ) }
    dend_33 { pt3dadd( 435.613, 650.026, 48.5884, 0.5084 ) }
    dend_33 { pt3dadd( 435.158, 651.001, 47.752, 0.5084 ) }
    dend_33 { pt3dadd( 434.35, 651.75, 47.0366, 0.4322 ) }
    dend_33 { pt3dadd( 433.576, 652.544, 47.6885, 0.3304 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 94/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 444.725, 642.291, 48.2602, 0.356 ) }
    dend_32 { pt3dadd( 445.569, 643.025, 47.7669, 0.4068 ) }
    dend_32 { pt3dadd( 446.652, 643.338, 47.9914, 0.4576 ) }
    dend_32 { pt3dadd( 447.701, 642.895, 48.0833, 0.5592 ) }
    dend_32 { pt3dadd( 448.598, 642.205, 47.7963, 0.6356 ) }
    dend_32 { pt3dadd( 449.422, 641.443, 48.3123, 0.6864 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_32 { pt3dadd( 450.338, 640.807, 48.2107, 0.661 ) }
    dend_32 { pt3dadd( 451.26, 640.451, 46.9014, 0.661 ) }
    dend_32 { pt3dadd( 452.27, 640.063, 46.8647, 0.6356 ) }
    dend_32 { pt3dadd( 453.289, 640.456, 47.581, 0.6356 ) }
    dend_32 { pt3dadd( 454.297, 640.967, 47.7568, 0.5592 ) }
    dend_32 { pt3dadd( 455.363, 641.088, 48.4014, 0.483 ) }
    dend_32 { pt3dadd( 456.322, 640.977, 49.7871, 0.4322 ) }
    dend_32 { pt3dadd( 457.279, 641.339, 50.3048, 0.4068 ) }
    dend_32 { pt3dadd( 458.225, 641.802, 49.2352, 0.4068 ) }
    dend_32 { pt3dadd( 459.242, 642.144, 48.3235, 0.356 ) }
    dend_32 { pt3dadd( 460.243, 642.437, 48.6856, 0.356 ) }
    dend_32 { pt3dadd( 461.184, 642.524, 50.1998, 0.3814 ) }
    dend_32 { pt3dadd( 462.206, 642.254, 50.9592, 0.4322 ) }
    dend_32 { pt3dadd( 463.152, 641.647, 51.1776, 0.4322 ) }
    dend_32 { pt3dadd( 464.009, 640.921, 51.6802, 0.4068 ) }
    dend_32 { pt3dadd( 464.911, 640.249, 52.0458, 0.3814 ) }
    dend_32 { pt3dadd( 465.919, 639.725, 52.0789, 0.4068 ) }
    dend_32 { pt3dadd( 466.984, 639.311, 52.073, 0.4322 ) }
    dend_32 { pt3dadd( 468.088, 639.125, 52.0302, 0.4322 ) }
    dend_32 { pt3dadd( 469.204, 639.294, 51.7404, 0.4068 ) }
    dend_32 { pt3dadd( 470.311, 639.542, 51.6653, 0.3814 ) }
    dend_32 { pt3dadd( 471.337, 639.988, 51.9688, 0.3814 ) }
    dend_32 { pt3dadd( 472.34, 640.521, 52.2418, 0.356 ) }
    dend_32 { pt3dadd( 473.325, 640.979, 51.6603, 0.305 ) }
    dend_32 { pt3dadd( 474.083, 641.738, 51.1006, 0.3304 ) }
    dend_32 { pt3dadd( 474.831, 642.595, 51.1375, 0.3814 ) }
    dend_32 { pt3dadd( 475.64, 643.367, 51.6765, 0.5084 ) }
    dend_32 { pt3dadd( 476.443, 644.159, 51.7208, 0.5084 ) }
    dend_32 { pt3dadd( 477.225, 644.961, 51.184, 0.5084 ) }
    dend_32 { pt3dadd( 478.015, 645.775, 50.9522, 0.4322 ) }
    dend_32 { pt3dadd( 478.892, 646.505, 50.8715, 0.4322 ) }
    dend_32 { pt3dadd( 479.863, 647.07, 50.4577, 0.483 ) }
    dend_32 { pt3dadd( 480.852, 647.59, 49.84, 0.5848 ) }
    dend_32 { pt3dadd( 481.685, 648.247, 48.8583, 0.6102 ) }
    dend_32 { pt3dadd( 482.697, 648.69, 48.6088, 0.5338 ) }
    dend_32 { pt3dadd( 483.402, 649.413, 49.7143, 0.4068 ) }
    dend_32 { pt3dadd( 483.996, 650.33, 50.512, 0.356 ) }
    dend_32 { pt3dadd( 484.568, 651.307, 50.883, 0.4068 ) }
    dend_32 { pt3dadd( 485.279, 652.197, 50.8088, 0.4576 ) }
    dend_32 { pt3dadd( 486.046, 653.011, 50.2426, 0.5084 ) }
    dend_32 { pt3dadd( 487.045, 653.523, 50.5338, 0.5338 ) }
    dend_32 { pt3dadd( 488.132, 653.834, 50.9351, 0.6102 ) }
    dend_32 { pt3dadd( 489.095, 654.442, 50.9701, 0.6356 ) }
    dend_32 { pt3dadd( 490.04, 655.086, 51.0121, 0.5848 ) }
    dend_32 { pt3dadd( 490.997, 655.706, 51.256, 0.5084 ) }
    dend_32 { pt3dadd( 492.121, 655.853, 51.0345, 0.483 ) }
    dend_32 { pt3dadd( 493.247, 655.867, 50.5464, 0.483 ) }
    dend_32 { pt3dadd( 494.384, 655.93, 50.2695, 0.483 ) }
    dend_32 { pt3dadd( 495.454, 656.306, 49.931, 0.4322 ) }
    dend_32 { pt3dadd( 496.397, 656.952, 49.8117, 0.4068 ) }
    dend_32 { pt3dadd( 497.188, 657.775, 49.6986, 0.4068 ) }
    dend_32 { pt3dadd( 497.665, 658.633, 48.4414, 0.4322 ) }
    dend_32 { pt3dadd( 498.65, 659.078, 48.8936, 0.483 ) }
    dend_32 { pt3dadd( 499.184, 660.086, 48.8936, 0.483 ) }
    dend_32 { pt3dadd( 500.022, 660.837, 48.8936, 0.4576 ) }
    dend_32 { pt3dadd( 501.047, 661.33, 48.848, 0.4068 ) }
    dend_32 { pt3dadd( 502.161, 661.504, 48.3711, 0.356 ) }
    dend_32 { pt3dadd( 503.275, 661.677, 47.894, 0.3304 ) }
    dend_32 { pt3dadd( 504.379, 661.956, 47.7823, 0.2796 ) }
    dend_32 { pt3dadd( 505.475, 662.28, 47.7823, 0.2542 ) }
    dend_32 { pt3dadd( 506.565, 662.63, 47.7823, 0.2288 ) }
    dend_32 { pt3dadd( 507.457, 662.376, 46.3562, 0.2288 ) }
    dend_32 { pt3dadd( 508.319, 662.033, 44.7199, 0.2288 ) }
    dend_32 { pt3dadd( 509.308, 662.288, 43.6786, 0.2288 ) }
    dend_32 { pt3dadd( 510.323, 662.655, 42.7818, 0.2288 ) }
    dend_32 { pt3dadd( 511.465, 662.732, 42.7818, 0.2288 ) }
    dend_32 { pt3dadd( 512.567, 662.56, 42.7818, 0.2288 ) }
    dend_32 { pt3dadd( 513.586, 662.635, 42.2764, 0.2288 ) }
    dend_32 { pt3dadd( 514.622, 663.017, 41.5282, 0.2288 ) }
    dend_32 { pt3dadd( 515.656, 663.399, 40.7798, 0.2288 ) }
    dend_32 { pt3dadd( 516.541, 663.543, 39.1894, 0.305 ) }
    dend_32 { pt3dadd( 517.364, 663.59, 37.2476, 0.4068 ) }
    dend_32 { pt3dadd( 518.122, 662.743, 37.2257, 0.5338 ) }
    dend_32 { pt3dadd( 519.015, 662.053, 37.2257, 0.5084 ) }
    dend_32 { pt3dadd( 519.979, 661.825, 36.8617, 0.4322 ) }
    dend_32 { pt3dadd( 520.849, 662.366, 35.6143, 0.3304 ) }
    dend_32 { pt3dadd( 521.773, 662.371, 34.6237, 0.356 ) }
    dend_32 { pt3dadd( 522.752, 661.862, 33.8794, 0.4322 ) }
    dend_32 { pt3dadd( 523.755, 661.599, 33.3365, 0.483 ) }
    dend_32 { pt3dadd( 524.827, 662.002, 33.3365, 0.4576 ) }
    dend_32 { pt3dadd( 525.935, 662.143, 32.9308, 0.3814 ) }
    dend_32 { pt3dadd( 527.057, 662.202, 32.3974, 0.3304 ) }
    dend_32 { pt3dadd( 528.164, 662.041, 32.4954, 0.2796 ) }
    dend_32 { pt3dadd( 529.265, 661.773, 32.8947, 0.2796 ) }
    dend_32 { pt3dadd( 530.365, 661.507, 33.294, 0.3304 ) }
    dend_32 { pt3dadd( 531.505, 661.472, 33.3365, 0.4068 ) }
    dend_32 { pt3dadd( 532.492, 661.007, 33.3365, 0.4576 ) }
    dend_32 { pt3dadd( 533.398, 660.31, 33.3365, 0.4576 ) }
    dend_32 { pt3dadd( 534.268, 659.576, 33.131, 0.483 ) }
    dend_32 { pt3dadd( 535.125, 658.825, 32.8474, 0.483 ) }
    dend_32 { pt3dadd( 536.141, 658.33, 32.781, 0.4322 ) }
    dend_32 { pt3dadd( 537.206, 657.912, 32.781, 0.3304 ) }
    dend_32 { pt3dadd( 538.166, 657.309, 32.781, 0.2542 ) }
    dend_32 { pt3dadd( 539.07, 656.608, 32.781, 0.2542 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 94/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 448.217, 638.829, 37.6967, 0.3304 ) }
    dend_27 { pt3dadd( 449.125, 638.323, 36.5492, 0.356 ) }
    dend_27 { pt3dadd( 449.935, 637.519, 36.3975, 0.4322 ) }
    dend_27 { pt3dadd( 450.519, 636.534, 36.3857, 0.4576 ) }
    dend_27 { pt3dadd( 451.286, 635.689, 36.3101, 0.4576 ) }
    dend_27 { pt3dadd( 452.247, 635.095, 35.9492, 0.3814 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_27 { pt3dadd( 453.199, 634.865, 34.5131, 0.356 ) }
    dend_27 { pt3dadd( 454.165, 635.061, 33.1548, 0.356 ) }
    dend_27 { pt3dadd( 454.917, 635.91, 33.1016, 0.4068 ) }
    dend_27 { pt3dadd( 455.664, 636.771, 33.2769, 0.4322 ) }
    dend_27 { pt3dadd( 456.446, 637.528, 34.069, 0.5338 ) }
    dend_27 { pt3dadd( 457.402, 637.982, 35.0384, 0.5848 ) }
    dend_27 { pt3dadd( 458.401, 638.37, 36.0217, 0.6356 ) }
    dend_27 { pt3dadd( 459.201, 639.138, 36.3555, 0.5338 ) }
    dend_27 { pt3dadd( 459.991, 639.964, 36.3471, 0.483 ) }
    dend_27 { pt3dadd( 461.026, 640.378, 36.0318, 0.4322 ) }
    dend_27 { pt3dadd( 462.03, 640.873, 35.4973, 0.483 ) }
    dend_27 { pt3dadd( 462.96, 641.527, 35.5995, 0.483 ) }
    dend_27 { pt3dadd( 463.996, 642.0, 35.5698, 0.483 ) }
    dend_27 { pt3dadd( 465.036, 642.13, 34.5324, 0.4322 ) }
    dend_27 { pt3dadd( 466.152, 642.2, 34.8648, 0.3814 ) }
    dend_27 { pt3dadd( 467.252, 642.498, 34.7497, 0.356 ) }
    dend_27 { pt3dadd( 468.381, 642.655, 34.5078, 0.4068 ) }
    dend_27 { pt3dadd( 469.436, 642.979, 35.2106, 0.5084 ) }
    dend_27 { pt3dadd( 470.493, 643.406, 35.3948, 0.5338 ) }
    dend_27 { pt3dadd( 471.438, 644.019, 35.8862, 0.483 ) }
    dend_27 { pt3dadd( 472.374, 644.647, 36.3717, 0.4068 ) }
    dend_27 { pt3dadd( 473.384, 645.184, 36.3997, 0.3814 ) }
    dend_27 { pt3dadd( 474.497, 645.438, 36.3958, 0.3814 ) }
    dend_27 { pt3dadd( 475.626, 645.63, 36.3709, 0.356 ) }
    dend_27 { pt3dadd( 476.755, 645.773, 36.2169, 0.356 ) }
    dend_27 { pt3dadd( 477.77, 645.525, 36.2267, 0.3304 ) }
    dend_27 { pt3dadd( 478.81, 645.176, 36.9877, 0.3304 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 27/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 431.354, 642.446, 31.8942, 0.4068 ) }
    dend_18 { pt3dadd( 430.243, 642.685, 31.626, 0.5084 ) }
    dend_18 { pt3dadd( 429.286, 642.905, 30.2366, 0.5592 ) }
    dend_18 { pt3dadd( 428.199, 642.6, 29.8908, 0.5084 ) }
    dend_18 { pt3dadd( 427.085, 642.601, 30.5141, 0.3814 ) }
    dend_18 { pt3dadd( 425.945, 642.685, 30.6244, 0.305 ) }
    dend_18 { pt3dadd( 424.852, 643.014, 30.8101, 0.3304 ) }
    dend_18 { pt3dadd( 423.719, 643.173, 30.8669, 0.4576 ) }
    dend_18 { pt3dadd( 422.702, 643.679, 31.1494, 0.5338 ) }
    dend_18 { pt3dadd( 421.717, 643.969, 32.3831, 0.5084 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 37/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 439.977, 647.693, 40.8867, 0.3814 ) }
    dend_13 { pt3dadd( 439.982, 648.832, 40.656, 0.4322 ) }
    dend_13 { pt3dadd( 439.982, 649.941, 39.9795, 0.4576 ) }
    dend_13 { pt3dadd( 439.982, 651.072, 40.2688, 0.4576 ) }
    dend_13 { pt3dadd( 439.982, 652.212, 40.5182, 0.4576 ) }
    dend_13 { pt3dadd( 439.98, 653.312, 39.7824, 0.483 ) }
    dend_13 { pt3dadd( 439.967, 654.442, 39.3593, 0.5084 ) }
    dend_13 { pt3dadd( 439.897, 655.443, 38.0321, 0.5338 ) }
    dend_13 { pt3dadd( 439.518, 656.502, 37.5721, 0.5084 ) }
    dend_13 { pt3dadd( 438.93, 657.48, 37.7322, 0.5084 ) }
    dend_13 { pt3dadd( 438.486, 658.493, 38.4448, 0.5338 ) }
    dend_13 { pt3dadd( 437.993, 659.524, 38.6112, 0.6102 ) }
    dend_13 { pt3dadd( 437.296, 660.429, 38.5034, 0.6864 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 50/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 445.454, 633.88, 38.6064, 0.4322 ) }
    dend_0 { pt3dadd( 446.364, 633.187, 38.5269, 0.4068 ) }
    dend_0 { pt3dadd( 447.398, 632.753, 38.0363, 0.4322 ) }
    dend_0 { pt3dadd( 448.374, 632.179, 38.3718, 0.5084 ) }
    dend_0 { pt3dadd( 449.082, 631.289, 38.5812, 0.6102 ) }
    dend_0 { pt3dadd( 449.492, 630.227, 38.3449, 0.6864 ) }
    dend_0 { pt3dadd( 449.941, 629.223, 37.59, 0.7118 ) }
    dend_0 { pt3dadd( 450.294, 628.141, 37.3058, 0.7118 ) }
    dend_0 { pt3dadd( 450.663, 627.101, 36.5683, 0.661 ) }
    dend_0 { pt3dadd( 451.254, 626.124, 36.4, 0.7372 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 60/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 434.322, 632.778, 37.6211, 0.2542 ) }
    apic_0 { pt3dadd( 433.587, 631.919, 38.0537, 0.305 ) }
    apic_0 { pt3dadd( 432.871, 631.094, 38.8816, 0.4576 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 63/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 451.207, 667.014, 34.16, 1.0 ) }
    axon_1 { pt3dadd( 457.048, 680.83, 34.16, 1.0 ) }
    axon_1 { pt3dadd( 462.89, 694.646, 34.16, 1.0 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 66/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 450.544, 632.206, 66.673, 0.2542 ) }
    dend_50 { pt3dadd( 450.167, 632.562, 66.673, 0.356 ) }
    dend_50 { pt3dadd( 449.336, 633.347, 66.673, 0.305 ) }
    dend_50 { pt3dadd( 448.715, 634.171, 67.4094, 0.2796 ) }
    dend_50 { pt3dadd( 448.332, 635.038, 68.98, 0.305 ) }
    dend_50 { pt3dadd( 447.95, 635.904, 70.5508, 0.2796 ) }
    dend_50 { pt3dadd( 447.569, 636.77, 72.1216, 0.2542 ) }
    dend_50 { pt3dadd( 447.187, 637.637, 73.6924, 0.2796 ) }
    dend_50 { pt3dadd( 446.795, 638.534, 75.007, 0.3304 ) }
    dend_50 { pt3dadd( 446.556, 639.598, 75.007, 0.3814 ) }
    dend_50 { pt3dadd( 446.978, 640.426, 75.4816, 0.3304 ) }
    dend_50 { pt3dadd( 447.638, 640.283, 77.7423, 0.2796 ) }
    dend_50 { pt3dadd( 448.297, 640.139, 80.0033, 0.2288 ) }
    dend_50 { pt3dadd( 448.944, 640.01, 82.2612, 0.2288 ) }
    dend_50 { pt3dadd( 448.781, 640.754, 84.3475, 0.2288 ) }
    dend_50 { pt3dadd( 448.617, 641.5, 86.4338, 0.2542 ) }
    dend_50 { pt3dadd( 448.454, 642.245, 88.52, 0.2796 ) }
    dend_50 { pt3dadd( 448.161, 642.875, 90.641, 0.305 ) }
    dend_50 { pt3dadd( 447.547, 643.219, 92.8483, 0.2796 ) }
    dend_50 { pt3dadd( 446.932, 643.563, 95.0555, 0.2542 ) }
    dend_50 { pt3dadd( 446.318, 643.906, 97.2625, 0.2288 ) }
    dend_50 { pt3dadd( 445.703, 644.25, 99.4697, 0.2288 ) }
    dend_50 { pt3dadd( 445.089, 644.594, 101.677, 0.2288 ) }
    dend_50 { pt3dadd( 444.475, 644.938, 103.884, 0.2288 ) }
    dend_50 { pt3dadd( 443.861, 645.281, 106.091, 0.2288 ) }
    dend_50 { pt3dadd( 443.989, 646.209, 107.675, 0.2288 ) }
    dend_50 { pt3dadd( 444.127, 647.145, 109.25, 0.2288 ) }
    dend_50 { pt3dadd( 444.266, 648.079, 110.826, 0.2288 ) }
    dend_50 { pt3dadd( 444.405, 649.015, 112.401, 0.2288 ) }
    dend_50 { pt3dadd( 444.846, 649.69, 113.985, 0.2288 ) }
    dend_50 { pt3dadd( 445.741, 649.975, 115.583, 0.2288 ) }
    dend_50 { pt3dadd( 446.637, 650.261, 117.181, 0.2542 ) }
    dend_50 { pt3dadd( 447.532, 650.546, 118.78, 0.2796 ) }
    dend_50 { pt3dadd( 448.426, 650.831, 120.378, 0.305 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_50 { pt3dadd( 449.424, 651.276, 121.136, 0.2796 ) }
    dend_50 { pt3dadd( 450.435, 651.741, 121.782, 0.2542 ) }
    dend_50 { pt3dadd( 451.445, 652.208, 122.428, 0.2288 ) }
    dend_50 { pt3dadd( 452.457, 652.674, 123.074, 0.2288 ) }
    dend_50 { pt3dadd( 453.467, 653.139, 123.72, 0.2288 ) }
    dend_50 { pt3dadd( 454.478, 653.606, 124.366, 0.2288 ) }
    dend_50 { pt3dadd( 455.489, 654.072, 125.012, 0.2288 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 7/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 450.544, 632.206, 66.673, 0.2542 ) }
    dend_49 { pt3dadd( 450.934, 632.002, 66.673, 0.2288 ) }
    dend_49 { pt3dadd( 451.948, 631.472, 66.673, 0.2288 ) }
    dend_49 { pt3dadd( 453.003, 631.083, 66.673, 0.2288 ) }
    dend_49 { pt3dadd( 454.143, 630.984, 66.673, 0.2288 ) }
    dend_49 { pt3dadd( 455.283, 630.916, 66.673, 0.2288 ) }
    dend_49 { pt3dadd( 456.427, 630.916, 66.673, 0.2542 ) }
    dend_49 { pt3dadd( 457.509, 630.632, 66.673, 0.2796 ) }
    dend_49 { pt3dadd( 458.529, 630.133, 66.7906, 0.305 ) }
    dend_49 { pt3dadd( 459.456, 629.545, 67.583, 0.2796 ) }
    dend_49 { pt3dadd( 460.382, 628.959, 68.3754, 0.305 ) }
    dend_49 { pt3dadd( 461.31, 628.371, 69.1678, 0.3304 ) }
    dend_49 { pt3dadd( 462.238, 627.811, 70.0532, 0.4322 ) }
    dend_49 { pt3dadd( 463.168, 627.266, 70.9901, 0.483 ) }
    dend_49 { pt3dadd( 464.098, 626.72, 71.927, 0.5338 ) }
    dend_49 { pt3dadd( 465.028, 626.174, 72.8641, 0.5848 ) }
    dend_49 { pt3dadd( 465.951, 625.56, 73.3401, 0.5848 ) }
    dend_49 { pt3dadd( 466.89, 625.005, 73.5389, 0.6102 ) }
    dend_49 { pt3dadd( 467.943, 625.045, 74.6374, 0.5592 ) }
    dend_49 { pt3dadd( 468.993, 625.085, 75.7355, 0.6102 ) }
    dend_49 { pt3dadd( 470.039, 625.201, 76.6738, 0.661 ) }
    dend_49 { pt3dadd( 471.051, 625.728, 76.6738, 0.7118 ) }
    dend_49 { pt3dadd( 472.105, 626.173, 76.6738, 0.6864 ) }
    dend_49 { pt3dadd( 472.716, 626.774, 77.5407, 0.6864 ) }
    dend_49 { pt3dadd( 472.75, 627.578, 79.5309, 0.7118 ) }
    dend_49 { pt3dadd( 472.783, 628.382, 81.5212, 0.7372 ) }
    dend_49 { pt3dadd( 473.0, 629.261, 82.7856, 0.6356 ) }
    dend_49 { pt3dadd( 473.536, 630.272, 82.7856, 0.5592 ) }
    dend_49 { pt3dadd( 473.987, 631.184, 83.8169, 0.5084 ) }
    dend_49 { pt3dadd( 474.396, 632.046, 85.3597, 0.5084 ) }
    dend_49 { pt3dadd( 474.805, 632.909, 86.9025, 0.4322 ) }
    dend_49 { pt3dadd( 475.357, 633.706, 88.3117, 0.356 ) }
    dend_49 { pt3dadd( 476.1, 634.416, 89.5418, 0.305 ) }
    dend_49 { pt3dadd( 476.842, 635.126, 90.7721, 0.2796 ) }
    dend_49 { pt3dadd( 477.587, 635.835, 92.0021, 0.2542 ) }
    dend_49 { pt3dadd( 478.329, 636.546, 93.2324, 0.2288 ) }
    dend_49 { pt3dadd( 479.073, 637.255, 94.4625, 0.2288 ) }
    dend_49 { pt3dadd( 479.815, 637.965, 95.6928, 0.2288 ) }
    dend_49 { pt3dadd( 480.559, 638.675, 96.9228, 0.2542 ) }
    dend_49 { pt3dadd( 481.302, 639.384, 98.1532, 0.2796 ) }
    dend_49 { pt3dadd( 482.25, 639.986, 98.3427, 0.305 ) }
    dend_49 { pt3dadd( 483.234, 640.568, 98.3427, 0.2796 ) }
    dend_49 { pt3dadd( 484.285, 640.843, 98.5712, 0.2542 ) }
    dend_49 { pt3dadd( 485.411, 640.933, 99.0072, 0.2288 ) }
    dend_49 { pt3dadd( 486.539, 641.023, 99.4428, 0.2288 ) }
    dend_49 { pt3dadd( 487.664, 641.112, 99.8788, 0.2288 ) }
    dend_49 { pt3dadd( 488.79, 641.203, 100.314, 0.2288 ) }
    dend_49 { pt3dadd( 489.918, 641.293, 100.75, 0.2288 ) }
    dend_49 { pt3dadd( 491.044, 641.384, 101.186, 0.2288 ) }
    dend_49 { pt3dadd( 492.171, 641.473, 101.622, 0.2288 ) }
    dend_49 { pt3dadd( 493.297, 641.563, 102.058, 0.2288 ) }
    dend_49 { pt3dadd( 494.423, 641.654, 102.494, 0.2288 ) }
    dend_49 { pt3dadd( 495.471, 641.941, 102.937, 0.2288 ) }
    dend_49 { pt3dadd( 496.361, 642.637, 103.396, 0.2288 ) }
    dend_49 { pt3dadd( 497.249, 643.333, 103.854, 0.2288 ) }
    dend_49 { pt3dadd( 498.138, 644.029, 104.313, 0.2288 ) }
    dend_49 { pt3dadd( 498.512, 644.827, 105.736, 0.2288 ) }
    dend_49 { pt3dadd( 498.657, 645.672, 107.591, 0.2288 ) }
    dend_49 { pt3dadd( 498.801, 646.517, 109.446, 0.2288 ) }
    dend_49 { pt3dadd( 498.946, 647.361, 111.301, 0.2288 ) }
    dend_49 { pt3dadd( 499.092, 648.206, 113.156, 0.2288 ) }
    dend_49 { pt3dadd( 499.236, 649.051, 115.011, 0.2288 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 69/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 419.395, 653.845, 23.891, 0.4068 ) }
    dend_47 { pt3dadd( 418.728, 653.787, 21.2377, 0.305 ) }
    dend_47 { pt3dadd( 417.76, 653.846, 20.0018, 0.305 ) }
    dend_47 { pt3dadd( 416.734, 654.251, 20.0018, 0.3304 ) }
    dend_47 { pt3dadd( 415.592, 654.232, 20.0018, 0.356 ) }
    dend_47 { pt3dadd( 414.921, 654.916, 19.4463, 0.356 ) }
    dend_47 { pt3dadd( 415.346, 655.942, 19.4463, 0.305 ) }
    dend_47 { pt3dadd( 416.115, 656.79, 19.4463, 0.2542 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 77/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 419.395, 653.845, 23.891, 0.4068 ) }
    dend_46 { pt3dadd( 419.837, 654.128, 22.0021, 0.2542 ) }
    dend_46 { pt3dadd( 420.378, 654.473, 19.6854, 0.2796 ) }
    dend_46 { pt3dadd( 421.329, 654.83, 18.5069, 0.3304 ) }
    dend_46 { pt3dadd( 422.337, 655.231, 17.7794, 0.3304 ) }
    dend_46 { pt3dadd( 423.368, 655.728, 17.7794, 0.3814 ) }
    dend_46 { pt3dadd( 424.334, 656.339, 17.7794, 0.3814 ) }
    dend_46 { pt3dadd( 424.398, 657.3, 17.7794, 0.4068 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 85/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 438.672, 650.923, 21.8011, 0.661 ) }
    dend_43 { pt3dadd( 438.826, 651.05, 22.6932, 0.2288 ) }
    dend_43 { pt3dadd( 439.749, 651.698, 22.2093, 0.2542 ) }
    dend_43 { pt3dadd( 440.671, 652.344, 21.7255, 0.305 ) }
    dend_43 { pt3dadd( 441.749, 652.702, 21.6686, 0.3814 ) }
    dend_43 { pt3dadd( 442.79, 653.007, 22.5537, 0.4068 ) }
    dend_43 { pt3dadd( 443.751, 653.576, 22.78, 0.4068 ) }
    dend_43 { pt3dadd( 444.604, 654.335, 22.78, 0.356 ) }
    dend_43 { pt3dadd( 444.689, 655.448, 22.78, 0.356 ) }
    dend_43 { pt3dadd( 444.89, 656.554, 22.78, 0.356 ) }
    dend_43 { pt3dadd( 445.517, 657.512, 22.78, 0.4068 ) }
    dend_43 { pt3dadd( 446.21, 658.419, 22.78, 0.4068 ) }
    dend_43 { pt3dadd( 446.894, 659.332, 22.78, 0.4068 ) }
    dend_43 { pt3dadd( 447.466, 660.303, 22.8589, 0.3814 ) }
    dend_43 { pt3dadd( 448.368, 660.947, 23.5645, 0.3814 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_43 { pt3dadd( 449.29, 661.092, 23.7398, 0.356 ) }
    dend_43 { pt3dadd( 450.375, 660.787, 23.2708, 0.3304 ) }
    dend_43 { pt3dadd( 451.475, 660.533, 22.9726, 0.3304 ) }
    dend_43 { pt3dadd( 452.609, 660.491, 22.9684, 0.3814 ) }
    dend_43 { pt3dadd( 453.728, 660.7, 23.0135, 0.4576 ) }
    dend_43 { pt3dadd( 454.838, 660.869, 23.3436, 0.5084 ) }
    dend_43 { pt3dadd( 455.918, 660.892, 24.2127, 0.5084 ) }
    dend_43 { pt3dadd( 457.009, 660.907, 24.9962, 0.4322 ) }
    dend_43 { pt3dadd( 458.135, 661.021, 25.2865, 0.356 ) }
    dend_43 { pt3dadd( 458.878, 661.644, 25.7236, 0.305 ) }
    dend_43 { pt3dadd( 459.201, 662.707, 26.2444, 0.356 ) }
    dend_43 { pt3dadd( 460.001, 663.425, 26.1887, 0.4068 ) }
    dend_43 { pt3dadd( 461.009, 663.925, 25.734, 0.483 ) }
    dend_43 { pt3dadd( 461.816, 664.67, 25.8563, 0.5084 ) }
    dend_43 { pt3dadd( 462.428, 665.557, 26.7439, 0.5592 ) }
    dend_43 { pt3dadd( 463.225, 666.312, 27.3246, 0.5848 ) }
    dend_43 { pt3dadd( 464.148, 666.979, 27.4249, 0.5848 ) }
    dend_43 { pt3dadd( 465.211, 667.358, 27.3448, 0.5338 ) }
    dend_43 { pt3dadd( 466.253, 667.769, 26.8834, 0.483 ) }
    dend_43 { pt3dadd( 467.196, 668.382, 26.4401, 0.4322 ) }
    dend_43 { pt3dadd( 468.118, 669.051, 26.3878, 0.4068 ) }
    dend_43 { pt3dadd( 468.897, 669.861, 26.787, 0.3814 ) }
    dend_43 { pt3dadd( 469.579, 670.708, 27.641, 0.3814 ) }
    dend_43 { pt3dadd( 470.368, 671.457, 28.4581, 0.3814 ) }
    dend_43 { pt3dadd( 471.378, 671.907, 29.0357, 0.3814 ) }
    dend_43 { pt3dadd( 472.316, 672.496, 28.6317, 0.3814 ) }
    dend_43 { pt3dadd( 473.238, 673.11, 27.939, 0.356 ) }
    dend_43 { pt3dadd( 474.089, 673.841, 28.261, 0.305 ) }
    dend_43 { pt3dadd( 474.433, 674.886, 27.8222, 0.2542 ) }
    dend_43 { pt3dadd( 475.108, 675.664, 28.8296, 0.2796 ) }
    dend_43 { pt3dadd( 475.951, 676.399, 29.384, 0.3304 ) }
    dend_43 { pt3dadd( 476.526, 677.334, 28.6278, 0.3814 ) }
    dend_43 { pt3dadd( 477.039, 678.336, 28.1372, 0.356 ) }
    dend_43 { pt3dadd( 477.309, 679.438, 28.5029, 0.356 ) }
    dend_43 { pt3dadd( 477.808, 680.467, 28.5656, 0.356 ) }
    dend_43 { pt3dadd( 478.303, 681.497, 28.5925, 0.356 ) }
    dend_43 { pt3dadd( 478.732, 682.553, 28.7893, 0.305 ) }
    dend_43 { pt3dadd( 479.592, 683.216, 29.605, 0.2542 ) }
    dend_43 { pt3dadd( 480.715, 683.43, 29.6755, 0.2542 ) }
    dend_43 { pt3dadd( 481.819, 683.721, 29.6475, 0.3304 ) }
    dend_43 { pt3dadd( 482.952, 683.697, 29.421, 0.4576 ) }
    dend_43 { pt3dadd( 483.85, 683.847, 27.9866, 0.5592 ) }
    dend_43 { pt3dadd( 484.277, 684.701, 26.5583, 0.5592 ) }
    dend_43 { pt3dadd( 484.783, 685.722, 26.3194, 0.483 ) }
    dend_43 { pt3dadd( 485.267, 686.757, 26.3172, 0.4068 ) }
    dend_43 { pt3dadd( 485.579, 687.84, 26.3012, 0.4322 ) }
    dend_43 { pt3dadd( 485.543, 688.981, 26.1887, 0.4576 ) }
    dend_43 { pt3dadd( 485.602, 690.108, 25.7578, 0.483 ) }
    dend_43 { pt3dadd( 485.686, 691.217, 25.2084, 0.4576 ) }
    dend_43 { pt3dadd( 485.969, 692.312, 24.9785, 0.4576 ) }
    dend_43 { pt3dadd( 486.4, 693.351, 24.4854, 0.4322 ) }
    dend_43 { pt3dadd( 486.672, 694.431, 24.4874, 0.356 ) }
    dend_43 { pt3dadd( 486.844, 695.483, 25.4248, 0.2796 ) }
    dend_43 { pt3dadd( 487.303, 696.436, 26.2581, 0.2542 ) }
    dend_43 { pt3dadd( 488.161, 697.024, 26.4578, 0.2796 ) }
    dend_43 { pt3dadd( 488.311, 697.457, 26.3427, 0.356 ) }
    dend_43 { pt3dadd( 488.927, 698.323, 26.6034, 0.4322 ) }
    dend_43 { pt3dadd( 489.341, 699.351, 27.1387, 0.5084 ) }
    dend_43 { pt3dadd( 490.003, 700.272, 27.4467, 0.5338 ) }
    dend_43 { pt3dadd( 490.717, 701.164, 27.5047, 0.5084 ) }
    dend_43 { pt3dadd( 491.547, 701.916, 27.7836, 0.5084 ) }
    dend_43 { pt3dadd( 492.574, 702.318, 28.3069, 0.4576 ) }
    dend_43 { pt3dadd( 493.674, 702.564, 28.4441, 0.4322 ) }
    dend_43 { pt3dadd( 494.697, 703.025, 27.9731, 0.356 ) }
    dend_43 { pt3dadd( 495.652, 703.589, 27.4907, 0.3814 ) }
    dend_43 { pt3dadd( 496.002, 704.066, 27.0494, 0.3814 ) }
    dend_43 { pt3dadd( 496.965, 704.558, 27.5778, 0.4068 ) }
    dend_43 { pt3dadd( 497.927, 704.642, 28.954, 0.356 ) }
    dend_43 { pt3dadd( 498.992, 704.919, 29.5291, 0.356 ) }
    dend_43 { pt3dadd( 499.897, 705.571, 29.68, 0.3814 ) }
    dend_43 { pt3dadd( 500.553, 706.499, 29.6794, 0.4322 ) }
    dend_43 { pt3dadd( 501.199, 707.437, 29.6769, 0.4322 ) }
    dend_43 { pt3dadd( 502.095, 708.105, 29.6587, 0.4068 ) }
    dend_43 { pt3dadd( 503.117, 708.614, 29.5621, 0.3814 ) }
    dend_43 { pt3dadd( 504.094, 709.175, 29.1516, 0.4068 ) }
    dend_43 { pt3dadd( 505.033, 709.802, 29.041, 0.4322 ) }
    dend_43 { pt3dadd( 506.032, 710.319, 28.9234, 0.4576 ) }
    dend_43 { pt3dadd( 507.12, 710.299, 28.6353, 0.4576 ) }
    dend_43 { pt3dadd( 508.216, 709.976, 28.56, 0.4322 ) }
    dend_43 { pt3dadd( 509.278, 709.553, 28.56, 0.4068 ) }
    dend_43 { pt3dadd( 510.372, 709.243, 28.56, 0.3814 ) }
    dend_43 { pt3dadd( 511.509, 709.167, 28.5597, 0.3814 ) }
    dend_43 { pt3dadd( 512.653, 709.172, 28.5594, 0.356 ) }
    dend_43 { pt3dadd( 513.513, 709.238, 27.6788, 0.305 ) }
    dend_43 { pt3dadd( 514.65, 709.202, 27.41, 0.2542 ) }
    dend_43 { pt3dadd( 515.736, 709.366, 27.2247, 0.2796 ) }
    dend_43 { pt3dadd( 516.674, 710.008, 27.2247, 0.3304 ) }
    dend_43 { pt3dadd( 517.081, 710.805, 27.0614, 0.3814 ) }
    dend_43 { pt3dadd( 516.031, 710.983, 26.0442, 0.3304 ) }
    dend_43 { pt3dadd( 514.932, 711.065, 25.5578, 0.3304 ) }
    dend_43 { pt3dadd( 514.57, 711.918, 25.5578, 0.3304 ) }
    dend_43 { pt3dadd( 515.44, 712.606, 25.2675, 0.3814 ) }
    dend_43 { pt3dadd( 516.401, 713.211, 24.9071, 0.3304 ) }
    dend_43 { pt3dadd( 517.359, 713.815, 24.5468, 0.305 ) }
    dend_43 { pt3dadd( 518.221, 714.554, 24.4468, 0.2796 ) }
    dend_43 { pt3dadd( 518.448, 715.622, 24.4468, 0.3304 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 96/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 438.672, 650.923, 21.8011, 0.661 ) }
    dend_40 { pt3dadd( 438.858, 651.348, 21.7036, 0.4322 ) }
    dend_40 { pt3dadd( 439.437, 652.102, 20.9224, 0.4322 ) }
    dend_40 { pt3dadd( 440.23, 651.896, 20.0018, 0.4322 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_40 { pt3dadd( 440.829, 650.925, 20.0018, 0.4322 ) }
    dend_40 { pt3dadd( 441.525, 650.02, 20.0018, 0.3814 ) }
    dend_40 { pt3dadd( 442.318, 649.196, 20.0018, 0.305 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 3/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 446.936, 622.479, 21.1131, 0.8898 ) }
    dend_38 { pt3dadd( 447.159, 621.796, 19.7716, 0.661 ) }
    dend_38 { pt3dadd( 447.493, 620.71, 19.4463, 0.4576 ) }
    dend_38 { pt3dadd( 447.956, 619.679, 19.4463, 0.305 ) }
    dend_38 { pt3dadd( 448.822, 618.941, 19.4463, 0.305 ) }
    dend_38 { pt3dadd( 449.893, 618.682, 19.8176, 0.3814 ) }
    dend_38 { pt3dadd( 451.009, 618.482, 20.0018, 0.4068 ) }
    dend_38 { pt3dadd( 451.242, 617.479, 20.0018, 0.4068 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 11/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 446.936, 622.479, 21.1131, 0.8898 ) }
    dend_37 { pt3dadd( 447.923, 622.469, 21.1131, 0.356 ) }
    dend_37 { pt3dadd( 449.066, 622.498, 21.1131, 0.3814 ) }
    dend_37 { pt3dadd( 450.202, 622.399, 21.1131, 0.4068 ) }
    dend_37 { pt3dadd( 451.214, 622.145, 20.4229, 0.483 ) }
    dend_37 { pt3dadd( 452.062, 621.898, 18.6472, 0.4576 ) }
    dend_37 { pt3dadd( 452.729, 621.249, 17.7794, 0.4068 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 18/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 433.576, 652.544, 47.6885, 0.3304 ) }
    dend_35 { pt3dadd( 433.204, 652.714, 48.2804, 0.7372 ) }
    dend_35 { pt3dadd( 432.374, 653.295, 49.5723, 0.5084 ) }
    dend_35 { pt3dadd( 431.54, 653.875, 50.8642, 0.356 ) }
    dend_35 { pt3dadd( 430.709, 654.456, 52.1559, 0.2796 ) }
    dend_35 { pt3dadd( 429.904, 655.075, 53.3383, 0.2542 ) }
    dend_35 { pt3dadd( 429.384, 656.094, 53.3383, 0.2288 ) }
    dend_35 { pt3dadd( 428.753, 656.968, 53.513, 0.2796 ) }
    dend_35 { pt3dadd( 427.792, 657.027, 55.0239, 0.3814 ) }
    dend_35 { pt3dadd( 426.982, 657.617, 55.5607, 0.483 ) }
    dend_35 { pt3dadd( 426.793, 658.643, 56.6101, 0.5338 ) }
    dend_35 { pt3dadd( 426.645, 659.68, 57.7377, 0.483 ) }
    dend_35 { pt3dadd( 426.505, 660.811, 57.7833, 0.4576 ) }
    dend_35 { pt3dadd( 426.677, 661.771, 58.2604, 0.3814 ) }
    dend_35 { pt3dadd( 427.451, 662.389, 59.6621, 0.356 ) }
    dend_35 { pt3dadd( 427.872, 663.371, 60.0057, 0.2796 ) }
    dend_35 { pt3dadd( 428.03, 664.494, 60.0057, 0.2542 ) }
    dend_35 { pt3dadd( 427.18, 664.932, 60.8101, 0.2288 ) }
    dend_35 { pt3dadd( 426.159, 665.068, 62.0306, 0.2288 ) }
    dend_35 { pt3dadd( 425.099, 665.233, 62.7836, 0.2288 ) }
    dend_35 { pt3dadd( 423.974, 665.44, 62.7836, 0.2288 ) }
    dend_35 { pt3dadd( 423.042, 665.676, 63.0098, 0.2796 ) }
    dend_35 { pt3dadd( 423.663, 666.149, 65.0577, 0.3304 ) }
    dend_35 { pt3dadd( 424.286, 666.62, 67.1059, 0.3814 ) }
    dend_35 { pt3dadd( 425.034, 667.162, 68.3399, 0.3304 ) }
    dend_35 { pt3dadd( 425.727, 667.305, 69.5769, 0.2796 ) }
    dend_35 { pt3dadd( 426.181, 666.961, 72.004, 0.2288 ) }
    dend_35 { pt3dadd( 426.635, 666.616, 74.4307, 0.2288 ) }
    dend_35 { pt3dadd( 427.131, 666.339, 76.6738, 0.2288 ) }
    dend_35 { pt3dadd( 427.314, 667.018, 76.6738, 0.2288 ) }
    dend_35 { pt3dadd( 426.523, 667.749, 77.4953, 0.2288 ) }
    dend_35 { pt3dadd( 425.737, 668.452, 78.5826, 0.2288 ) }
    dend_35 { pt3dadd( 424.951, 669.154, 79.6698, 0.2288 ) }
    dend_35 { pt3dadd( 424.131, 669.747, 80.8234, 0.2288 ) }
    dend_35 { pt3dadd( 423.16, 669.837, 82.2833, 0.2542 ) }
    dend_35 { pt3dadd( 422.188, 669.926, 83.7432, 0.2796 ) }
    dend_35 { pt3dadd( 421.215, 670.017, 85.2032, 0.305 ) }
    dend_35 { pt3dadd( 420.243, 670.106, 86.6631, 0.2796 ) }
    dend_35 { pt3dadd( 419.228, 669.683, 87.4168, 0.2542 ) }
    dend_35 { pt3dadd( 418.212, 669.254, 88.165, 0.2288 ) }
    dend_35 { pt3dadd( 417.196, 668.826, 88.9129, 0.2288 ) }
    dend_35 { pt3dadd( 416.18, 668.398, 89.661, 0.2288 ) }
    dend_35 { pt3dadd( 415.164, 667.97, 90.4092, 0.2288 ) }
    dend_35 { pt3dadd( 414.148, 667.541, 91.1571, 0.2288 ) }
    dend_35 { pt3dadd( 413.453, 666.949, 92.1393, 0.2288 ) }
    dend_35 { pt3dadd( 413.48, 665.985, 93.6491, 0.2288 ) }
    dend_35 { pt3dadd( 413.507, 665.023, 95.1588, 0.2542 ) }
    dend_35 { pt3dadd( 413.534, 664.06, 96.6686, 0.2796 ) }
    dend_35 { pt3dadd( 413.561, 663.097, 98.1784, 0.305 ) }
    dend_35 { pt3dadd( 413.588, 662.133, 99.6881, 0.2796 ) }
    dend_35 { pt3dadd( 414.006, 661.136, 100.298, 0.2542 ) }
    dend_35 { pt3dadd( 414.528, 660.13, 100.664, 0.2288 ) }
    dend_35 { pt3dadd( 415.051, 659.124, 101.03, 0.2288 ) }
    dend_35 { pt3dadd( 415.574, 658.117, 101.396, 0.2288 ) }
    dend_35 { pt3dadd( 416.096, 657.111, 101.763, 0.2288 ) }
    dend_35 { pt3dadd( 416.621, 656.105, 102.129, 0.2288 ) }
    dend_35 { pt3dadd( 417.144, 655.098, 102.495, 0.2288 ) }
    dend_35 { pt3dadd( 417.665, 654.091, 102.861, 0.2288 ) }
    dend_35 { pt3dadd( 418.189, 653.086, 103.227, 0.2288 ) }
    dend_35 { pt3dadd( 418.712, 652.079, 103.594, 0.2288 ) }
    dend_35 { pt3dadd( 419.298, 651.121, 103.899, 0.2288 ) }
    dend_35 { pt3dadd( 420.191, 650.409, 103.899, 0.2796 ) }
    dend_35 { pt3dadd( 421.087, 649.696, 103.899, 0.3814 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 81/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 433.576, 652.544, 47.6885, 0.3304 ) }
    dend_34 { pt3dadd( 433.459, 652.848, 47.8783, 0.483 ) }
    dend_34 { pt3dadd( 433.174, 653.911, 48.501, 0.483 ) }
    dend_34 { pt3dadd( 433.318, 655.025, 48.8846, 0.4068 ) }
    dend_34 { pt3dadd( 433.482, 656.149, 49.1588, 0.356 ) }
    dend_34 { pt3dadd( 433.332, 657.251, 48.9266, 0.3814 ) }
    dend_34 { pt3dadd( 432.885, 658.289, 48.7354, 0.4322 ) }
    dend_34 { pt3dadd( 432.437, 659.339, 48.7855, 0.483 ) }
    dend_34 { pt3dadd( 432.45, 660.429, 49.1627, 0.5084 ) }
    dend_34 { pt3dadd( 432.351, 661.527, 49.6902, 0.5592 ) }
    dend_34 { pt3dadd( 431.924, 662.575, 49.84, 0.5592 ) }
    dend_34 { pt3dadd( 431.432, 663.608, 49.8403, 0.5848 ) }
    dend_34 { pt3dadd( 430.995, 664.665, 49.8406, 0.5592 ) }
    dend_34 { pt3dadd( 430.782, 665.782, 49.8436, 0.5848 ) }
    dend_34 { pt3dadd( 430.492, 666.885, 49.863, 0.5592 ) }
    dend_34 { pt3dadd( 430.128, 667.968, 49.9808, 0.5338 ) }
    dend_34 { pt3dadd( 429.773, 669.017, 50.6148, 0.483 ) }
    dend_34 { pt3dadd( 429.308, 669.996, 51.4856, 0.483 ) }
    dend_34 { pt3dadd( 428.674, 670.93, 51.6172, 0.5592 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_34 { pt3dadd( 427.938, 671.775, 51.1302, 0.6356 ) }
    dend_34 { pt3dadd( 427.102, 672.546, 50.9897, 0.661 ) }
    dend_34 { pt3dadd( 426.448, 673.474, 51.0726, 0.6356 ) }
    dend_34 { pt3dadd( 425.932, 674.468, 51.5869, 0.5848 ) }
    dend_34 { pt3dadd( 425.776, 675.574, 52.0103, 0.5592 ) }
    dend_34 { pt3dadd( 425.618, 676.705, 52.08, 0.483 ) }
    dend_34 { pt3dadd( 425.03, 677.663, 52.0797, 0.4576 ) }
    dend_34 { pt3dadd( 424.292, 678.537, 52.0789, 0.4576 ) }
    dend_34 { pt3dadd( 423.734, 679.53, 52.073, 0.5592 ) }
    dend_34 { pt3dadd( 423.457, 680.633, 52.0302, 0.6356 ) }
    dend_34 { pt3dadd( 423.145, 681.724, 51.7168, 0.6356 ) }
    dend_34 { pt3dadd( 422.931, 682.838, 51.9504, 0.5338 ) }
    dend_34 { pt3dadd( 422.802, 683.972, 52.0954, 0.4068 ) }
    dend_34 { pt3dadd( 423.447, 684.856, 52.262, 0.3304 ) }
    dend_34 { pt3dadd( 424.028, 685.782, 53.0275, 0.3304 ) }
    dend_34 { pt3dadd( 423.876, 686.814, 54.0201, 0.356 ) }
    dend_34 { pt3dadd( 423.372, 687.829, 54.3186, 0.4322 ) }
    dend_34 { pt3dadd( 422.654, 688.717, 54.3777, 0.5084 ) }
    dend_34 { pt3dadd( 421.829, 689.505, 54.5611, 0.6102 ) }
    dend_34 { pt3dadd( 420.983, 690.213, 55.2852, 0.661 ) }
    dend_34 { pt3dadd( 420.568, 691.268, 55.4372, 0.6864 ) }
    dend_34 { pt3dadd( 420.247, 692.366, 55.4548, 0.6356 ) }
    dend_34 { pt3dadd( 419.846, 693.438, 55.5307, 0.5848 ) }
    dend_34 { pt3dadd( 419.384, 694.476, 55.8373, 0.5084 ) }
    dend_34 { pt3dadd( 419.116, 695.583, 55.606, 0.5338 ) }
    dend_34 { pt3dadd( 418.85, 696.654, 56.35, 0.5338 ) }
    dend_34 { pt3dadd( 418.296, 697.641, 56.5569, 0.5848 ) }
    dend_34 { pt3dadd( 417.721, 698.626, 56.5424, 0.5848 ) }
    dend_34 { pt3dadd( 417.292, 699.682, 56.4262, 0.5848 ) }
    dend_34 { pt3dadd( 417.053, 700.785, 56.5552, 0.5338 ) }
    dend_34 { pt3dadd( 416.953, 701.877, 57.3017, 0.483 ) }
    dend_34 { pt3dadd( 416.931, 702.989, 57.7483, 0.5084 ) }
    dend_34 { pt3dadd( 416.971, 704.103, 58.2756, 0.5338 ) }
    dend_34 { pt3dadd( 417.084, 705.222, 58.7205, 0.5338 ) }
    dend_34 { pt3dadd( 417.23, 706.355, 58.8403, 0.4322 ) }
    dend_34 { pt3dadd( 417.853, 707.241, 59.1268, 0.356 ) }
    dend_34 { pt3dadd( 418.596, 708.059, 59.817, 0.305 ) }
    dend_34 { pt3dadd( 418.688, 709.114, 60.4674, 0.305 ) }
    dend_34 { pt3dadd( 418.544, 710.229, 60.9787, 0.3304 ) }
    dend_34 { pt3dadd( 418.762, 711.34, 61.0406, 0.3814 ) }
    dend_34 { pt3dadd( 419.051, 712.448, 61.0439, 0.4576 ) }
    dend_34 { pt3dadd( 419.103, 713.587, 61.0652, 0.5338 ) }
    dend_34 { pt3dadd( 418.896, 714.708, 61.2083, 0.5592 ) }
    dend_34 { pt3dadd( 418.617, 715.781, 61.8828, 0.5338 ) }
    dend_34 { pt3dadd( 418.042, 716.76, 62.1468, 0.4322 ) }
    dend_34 { pt3dadd( 417.583, 717.806, 62.16, 0.3304 ) }
    dend_34 { pt3dadd( 417.871, 718.827, 62.5517, 0.2796 ) }
    dend_34 { pt3dadd( 418.068, 719.891, 62.7836, 0.305 ) }
    dend_34 { pt3dadd( 417.344, 720.657, 62.7836, 0.356 ) }
    dend_34 { pt3dadd( 416.371, 721.222, 63.1238, 0.356 ) }
    dend_34 { pt3dadd( 415.401, 721.739, 63.898, 0.3814 ) }
    dend_34 { pt3dadd( 414.475, 722.338, 64.4504, 0.4068 ) }
    dend_34 { pt3dadd( 413.658, 723.137, 64.4504, 0.5084 ) }
    dend_34 { pt3dadd( 413.164, 724.133, 65.0821, 0.5338 ) }
    dend_34 { pt3dadd( 412.681, 725.135, 65.7387, 0.5592 ) }
    dend_34 { pt3dadd( 412.225, 726.163, 66.1172, 0.5338 ) }
    dend_34 { pt3dadd( 411.807, 727.227, 66.1172, 0.5338 ) }
    dend_34 { pt3dadd( 411.923, 728.254, 66.1172, 0.5338 ) }
    dend_34 { pt3dadd( 412.197, 729.203, 66.1172, 0.5338 ) }
    dend_34 { pt3dadd( 411.357, 729.978, 66.1172, 0.5084 ) }
    dend_34 { pt3dadd( 410.59, 730.825, 66.1172, 0.5084 ) }
    dend_34 { pt3dadd( 409.94, 731.757, 66.1172, 0.5084 ) }
    dend_34 { pt3dadd( 409.441, 732.787, 66.1172, 0.5338 ) }
    dend_34 { pt3dadd( 408.941, 733.815, 66.1172, 0.5338 ) }
    dend_34 { pt3dadd( 408.202, 734.656, 66.1172, 0.483 ) }
    dend_34 { pt3dadd( 407.421, 735.449, 66.1172, 0.4322 ) }
    dend_34 { pt3dadd( 407.156, 736.562, 66.1172, 0.356 ) }
    dend_34 { pt3dadd( 406.872, 737.649, 66.5538, 0.3304 ) }
    dend_34 { pt3dadd( 406.579, 738.724, 67.1938, 0.3304 ) }
    dend_34 { pt3dadd( 406.286, 739.799, 67.8339, 0.356 ) }
    dend_34 { pt3dadd( 405.993, 740.88, 68.3399, 0.3814 ) }
    dend_34 { pt3dadd( 405.702, 741.986, 68.3399, 0.356 ) }
    dend_34 { pt3dadd( 405.411, 743.092, 68.3399, 0.356 ) }
    dend_34 { pt3dadd( 405.118, 744.198, 68.3399, 0.3814 ) }
    dend_34 { pt3dadd( 404.595, 745.196, 68.3399, 0.4576 ) }
    dend_34 { pt3dadd( 403.935, 746.13, 68.3399, 0.5084 ) }
    dend_34 { pt3dadd( 403.22, 747.006, 68.3399, 0.5592 ) }
    dend_34 { pt3dadd( 402.246, 747.607, 68.3399, 0.5338 ) }
    dend_34 { pt3dadd( 401.269, 748.202, 68.3399, 0.483 ) }
    dend_34 { pt3dadd( 400.255, 748.73, 68.3399, 0.356 ) }
    dend_34 { pt3dadd( 399.239, 749.257, 68.3399, 0.2796 ) }
    dend_34 { pt3dadd( 399.132, 750.264, 69.116, 0.2542 ) }
    dend_34 { pt3dadd( 399.169, 751.346, 70.0157, 0.305 ) }
    dend_34 { pt3dadd( 399.207, 752.429, 70.915, 0.4068 ) }
    dend_34 { pt3dadd( 398.967, 753.524, 71.1178, 0.483 ) }
    dend_34 { pt3dadd( 398.646, 754.622, 71.1178, 0.5084 ) }
    dend_34 { pt3dadd( 398.088, 755.57, 71.2485, 0.4322 ) }
    dend_34 { pt3dadd( 397.249, 756.338, 71.5327, 0.356 ) }
    dend_34 { pt3dadd( 396.411, 757.108, 71.8172, 0.356 ) }
    dend_34 { pt3dadd( 395.572, 757.877, 72.1017, 0.4322 ) }
    dend_34 { pt3dadd( 394.928, 758.792, 72.3383, 0.5084 ) }
    dend_34 { pt3dadd( 394.445, 759.826, 72.5362, 0.483 ) }
    dend_34 { pt3dadd( 393.962, 760.859, 72.7342, 0.4068 ) }
    dend_34 { pt3dadd( 393.478, 761.893, 72.9319, 0.3304 ) }
    dend_34 { pt3dadd( 392.993, 762.927, 73.1298, 0.305 ) }
    dend_34 { pt3dadd( 392.51, 763.96, 73.3275, 0.3304 ) }
    dend_34 { pt3dadd( 392.232, 765.067, 73.3401, 0.3304 ) }
    dend_34 { pt3dadd( 391.967, 766.18, 73.3401, 0.3304 ) }
    dend_34 { pt3dadd( 391.578, 767.25, 73.3401, 0.305 ) }
    dend_34 { pt3dadd( 391.087, 768.283, 73.3401, 0.305 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_34 { pt3dadd( 390.596, 769.317, 73.3401, 0.305 ) }
    dend_34 { pt3dadd( 390.107, 770.351, 73.3401, 0.2796 ) }
    dend_34 { pt3dadd( 389.366, 771.213, 73.3401, 0.2542 ) }
    dend_34 { pt3dadd( 388.582, 772.047, 73.3401, 0.2542 ) }
    dend_34 { pt3dadd( 387.799, 772.881, 73.3401, 0.3304 ) }
    dend_34 { pt3dadd( 386.979, 773.565, 72.7174, 0.4068 ) }
    dend_34 { pt3dadd( 386.115, 774.077, 71.3756, 0.4322 ) }
    dend_34 { pt3dadd( 385.042, 774.354, 71.1178, 0.3814 ) }
    dend_34 { pt3dadd( 383.919, 774.575, 71.1178, 0.3304 ) }
    dend_34 { pt3dadd( 382.803, 774.744, 71.1178, 0.305 ) }
    dend_34 { pt3dadd( 381.753, 774.29, 71.1178, 0.2796 ) }
    dend_34 { pt3dadd( 380.727, 773.794, 71.1178, 0.2542 ) }
    dend_34 { pt3dadd( 379.594, 773.954, 71.1178, 0.2542 ) }
    dend_34 { pt3dadd( 378.551, 774.231, 71.0153, 0.305 ) }
    dend_34 { pt3dadd( 378.056, 775.218, 70.2881, 0.356 ) }
    dend_34 { pt3dadd( 377.562, 776.206, 69.5612, 0.356 ) }
    dend_34 { pt3dadd( 377.069, 777.195, 68.8341, 0.305 ) }
    dend_34 { pt3dadd( 376.678, 778.229, 68.3399, 0.2542 ) }
    dend_34 { pt3dadd( 376.508, 779.359, 68.3399, 0.2288 ) }
    dend_34 { pt3dadd( 376.337, 780.491, 68.3399, 0.2288 ) }
    dend_34 { pt3dadd( 376.167, 781.622, 68.3399, 0.2288 ) }
    dend_34 { pt3dadd( 375.996, 782.753, 68.3399, 0.2288 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 22/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 478.81, 645.176, 36.9877, 0.3304 ) }
    dend_31 { pt3dadd( 478.881, 645.372, 36.4204, 0.2796 ) }
    dend_31 { pt3dadd( 479.569, 645.988, 35.3125, 0.305 ) }
    dend_31 { pt3dadd( 480.56, 646.535, 34.8928, 0.2796 ) }
    dend_31 { pt3dadd( 481.549, 647.082, 34.473, 0.305 ) }
    dend_31 { pt3dadd( 482.54, 647.629, 34.0533, 0.3304 ) }
    dend_31 { pt3dadd( 483.424, 648.33, 33.892, 0.3814 ) }
    dend_31 { pt3dadd( 484.26, 649.107, 33.892, 0.3304 ) }
    dend_31 { pt3dadd( 485.208, 649.75, 33.892, 0.2796 ) }
    dend_31 { pt3dadd( 486.154, 650.393, 33.892, 0.305 ) }
    dend_31 { pt3dadd( 487.111, 651.002, 33.892, 0.3814 ) }
    dend_31 { pt3dadd( 488.255, 651.028, 33.892, 0.4576 ) }
    dend_31 { pt3dadd( 489.338, 650.84, 33.892, 0.3814 ) }
    dend_31 { pt3dadd( 490.321, 650.286, 33.892, 0.3304 ) }
    dend_31 { pt3dadd( 491.459, 650.172, 33.892, 0.2796 ) }
    dend_31 { pt3dadd( 492.596, 650.041, 33.892, 0.305 ) }
    dend_31 { pt3dadd( 493.728, 649.873, 33.892, 0.2796 ) }
    dend_31 { pt3dadd( 494.85, 650.077, 33.892, 0.2542 ) }
    dend_31 { pt3dadd( 495.834, 650.604, 33.892, 0.2288 ) }
    dend_31 { pt3dadd( 496.01, 651.61, 33.892, 0.2542 ) }
    dend_31 { pt3dadd( 496.107, 652.707, 33.6109, 0.2796 ) }
    dend_31 { pt3dadd( 496.478, 653.759, 32.9983, 0.356 ) }
    dend_31 { pt3dadd( 496.849, 654.813, 32.3859, 0.4068 ) }
    dend_31 { pt3dadd( 497.516, 655.533, 31.1531, 0.4576 ) }
    dend_31 { pt3dadd( 498.288, 656.133, 29.6999, 0.4068 ) }
    dend_31 { pt3dadd( 499.219, 656.538, 28.8915, 0.3304 ) }
    dend_31 { pt3dadd( 500.112, 657.074, 28.8915, 0.2542 ) }
    dend_31 { pt3dadd( 500.652, 658.078, 28.8915, 0.2542 ) }
    dend_31 { pt3dadd( 500.285, 658.936, 27.806, 0.2796 ) }
    dend_31 { pt3dadd( 499.946, 659.728, 26.588, 0.3304 ) }
    dend_31 { pt3dadd( 500.829, 660.428, 26.1033, 0.3304 ) }
    dend_31 { pt3dadd( 501.713, 661.128, 25.6183, 0.3304 ) }
    dend_31 { pt3dadd( 502.771, 661.54, 25.5578, 0.305 ) }
    dend_31 { pt3dadd( 503.733, 662.067, 25.5578, 0.3304 ) }
    dend_31 { pt3dadd( 504.371, 663.017, 25.5578, 0.356 ) }
    dend_31 { pt3dadd( 504.733, 664.094, 25.5578, 0.4068 ) }
    dend_31 { pt3dadd( 505.267, 665.034, 25.5578, 0.4322 ) }
    dend_31 { pt3dadd( 506.23, 665.65, 25.5578, 0.483 ) }
    dend_31 { pt3dadd( 507.277, 666.111, 25.5578, 0.483 ) }
    dend_31 { pt3dadd( 508.344, 666.505, 25.3974, 0.483 ) }
    dend_31 { pt3dadd( 509.434, 666.833, 25.0827, 0.4576 ) }
    dend_31 { pt3dadd( 510.273, 667.556, 25.0023, 0.4322 ) }
    dend_31 { pt3dadd( 511.029, 668.415, 25.0023, 0.4068 ) }
    dend_31 { pt3dadd( 511.933, 669.111, 25.0023, 0.356 ) }
    dend_31 { pt3dadd( 512.861, 669.781, 25.0023, 0.356 ) }
    dend_31 { pt3dadd( 513.804, 670.429, 25.0023, 0.3814 ) }
    dend_31 { pt3dadd( 514.538, 671.223, 25.7978, 0.4576 ) }
    dend_31 { pt3dadd( 515.484, 671.763, 26.1136, 0.5592 ) }
    dend_31 { pt3dadd( 516.557, 672.159, 26.1136, 0.6356 ) }
    dend_31 { pt3dadd( 517.57, 672.67, 26.1136, 0.7118 ) }
    dend_31 { pt3dadd( 518.505, 673.329, 26.1136, 0.7118 ) }
    dend_31 { pt3dadd( 519.439, 673.989, 26.1136, 0.7118 ) }
    dend_31 { pt3dadd( 520.203, 674.808, 25.8412, 0.661 ) }
    dend_31 { pt3dadd( 520.865, 675.724, 25.4008, 0.6102 ) }
    dend_31 { pt3dadd( 521.515, 676.648, 25.0023, 0.5592 ) }
    dend_31 { pt3dadd( 522.076, 677.646, 25.0023, 0.5084 ) }
    dend_31 { pt3dadd( 523.101, 678.145, 25.0023, 0.483 ) }
    dend_31 { pt3dadd( 524.119, 678.609, 25.4139, 0.483 ) }
    dend_31 { pt3dadd( 525.122, 679.047, 26.2214, 0.5084 ) }
    dend_31 { pt3dadd( 525.771, 679.792, 26.6692, 0.5338 ) }
    dend_31 { pt3dadd( 525.982, 680.917, 26.6692, 0.483 ) }
    dend_31 { pt3dadd( 526.421, 681.972, 26.6692, 0.4322 ) }
    dend_31 { pt3dadd( 527.333, 682.64, 27.0892, 0.356 ) }
    dend_31 { pt3dadd( 528.229, 683.311, 26.803, 0.3304 ) }
    dend_31 { pt3dadd( 529.12, 683.983, 26.1803, 0.356 ) }
    dend_31 { pt3dadd( 530.01, 684.654, 25.5578, 0.4068 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 88/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 478.81, 645.176, 36.9877, 0.3304 ) }
    dend_28 { pt3dadd( 479.794, 644.627, 37.2501, 0.4068 ) }
    // Section: dend_26, id: dend_26, parent: dend_18 (entry count 90/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 421.717, 643.969, 32.3831, 0.5084 ) }
    dend_26 { pt3dadd( 421.506, 644.369, 31.1772, 0.2796 ) }
    dend_26 { pt3dadd( 421.171, 645.008, 29.0024, 0.2542 ) }
    dend_26 { pt3dadd( 420.714, 645.629, 27.2247, 0.2796 ) }
    dend_26 { pt3dadd( 419.663, 645.889, 27.0768, 0.3304 ) }
    dend_26 { pt3dadd( 418.543, 645.714, 26.707, 0.3814 ) }
    dend_26 { pt3dadd( 417.423, 645.539, 26.3368, 0.3814 ) }
    dend_26 { pt3dadd( 416.302, 645.364, 25.9666, 0.4068 ) }
    dend_26 { pt3dadd( 415.182, 645.188, 25.5962, 0.483 ) }
    dend_26 { pt3dadd( 414.042, 645.11, 25.5578, 0.5338 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_26 { pt3dadd( 412.986, 645.5, 25.5578, 0.5338 ) }
    dend_26 { pt3dadd( 412.232, 644.825, 24.4933, 0.4576 ) }
    dend_26 { pt3dadd( 411.495, 644.081, 23.3654, 0.3814 ) }
    dend_26 { pt3dadd( 410.758, 643.338, 22.2379, 0.3304 ) }
    dend_26 { pt3dadd( 409.656, 643.061, 21.9598, 0.305 ) }
    dend_26 { pt3dadd( 408.549, 642.791, 21.6924, 0.305 ) }
    dend_26 { pt3dadd( 407.444, 642.52, 21.4248, 0.305 ) }
    dend_26 { pt3dadd( 406.337, 642.25, 21.1571, 0.3304 ) }
    dend_26 { pt3dadd( 405.221, 641.997, 21.1131, 0.4068 ) }
    dend_26 { pt3dadd( 404.095, 641.805, 21.1131, 0.5084 ) }
    dend_26 { pt3dadd( 402.965, 641.633, 21.1131, 0.5338 ) }
    dend_26 { pt3dadd( 401.895, 641.226, 21.1131, 0.483 ) }
    dend_26 { pt3dadd( 400.98, 640.711, 20.2698, 0.3814 ) }
    dend_26 { pt3dadd( 400.463, 641.438, 20.0018, 0.3304 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 14/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 421.717, 643.969, 32.3831, 0.5084 ) }
    dend_19 { pt3dadd( 421.049, 644.026, 32.4696, 0.6356 ) }
    dend_19 { pt3dadd( 420.02, 644.327, 31.8396, 0.7118 ) }
    dend_19 { pt3dadd( 419.178, 644.991, 31.0318, 0.788 ) }
    dend_19 { pt3dadd( 418.368, 645.783, 30.8034, 0.788 ) }
    dend_19 { pt3dadd( 417.439, 646.441, 30.8, 0.8136 ) }
    dend_19 { pt3dadd( 416.458, 647.03, 30.8, 0.7626 ) }
    dend_19 { pt3dadd( 415.584, 647.763, 30.7994, 0.7118 ) }
    dend_19 { pt3dadd( 414.745, 648.539, 30.7986, 0.6102 ) }
    dend_19 { pt3dadd( 413.82, 649.211, 30.7933, 0.5338 ) }
    dend_19 { pt3dadd( 412.717, 649.434, 30.7586, 0.5084 ) }
    dend_19 { pt3dadd( 411.584, 649.497, 30.4469, 0.5084 ) }
    dend_19 { pt3dadd( 410.509, 649.859, 30.4828, 0.5592 ) }
    dend_19 { pt3dadd( 409.561, 650.483, 30.7742, 0.5848 ) }
    dend_19 { pt3dadd( 408.523, 650.961, 30.8, 0.6102 ) }
    dend_19 { pt3dadd( 407.556, 651.569, 30.8006, 0.6356 ) }
    dend_19 { pt3dadd( 406.582, 652.168, 30.8022, 0.6102 ) }
    dend_19 { pt3dadd( 405.582, 652.725, 30.8134, 0.5592 ) }
    dend_19 { pt3dadd( 404.625, 653.35, 30.8753, 0.4322 ) }
    dend_19 { pt3dadd( 403.965, 654.268, 31.2043, 0.356 ) }
    dend_19 { pt3dadd( 403.797, 655.394, 31.0901, 0.2796 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 35/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 437.296, 660.429, 38.5034, 0.6864 ) }
    dend_15 { pt3dadd( 437.173, 661.163, 38.1699, 0.3814 ) }
    dend_15 { pt3dadd( 436.857, 662.247, 37.7339, 0.483 ) }
    dend_15 { pt3dadd( 436.84, 663.386, 37.7048, 0.5592 ) }
    dend_15 { pt3dadd( 437.152, 664.481, 37.5262, 0.5848 ) }
    dend_15 { pt3dadd( 437.755, 665.452, 37.5136, 0.5084 ) }
    dend_15 { pt3dadd( 438.557, 666.266, 37.4923, 0.4576 ) }
    dend_15 { pt3dadd( 439.484, 666.935, 37.3792, 0.4322 ) }
    dend_15 { pt3dadd( 440.394, 667.571, 36.7128, 0.5084 ) }
    dend_15 { pt3dadd( 441.079, 668.477, 36.4031, 0.5084 ) }
    dend_15 { pt3dadd( 441.678, 669.452, 36.4045, 0.5338 ) }
    dend_15 { pt3dadd( 442.309, 670.406, 36.4235, 0.483 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 47/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 437.296, 660.429, 38.5034, 0.6864 ) }
    dend_14 { pt3dadd( 436.596, 661.377, 37.9221, 0.483 ) }
    dend_14 { pt3dadd( 435.864, 662.247, 37.6844, 0.4576 ) }
    dend_14 { pt3dadd( 435.051, 663.002, 38.2175, 0.4068 ) }
    dend_14 { pt3dadd( 434.006, 663.37, 38.5969, 0.3814 ) }
    dend_14 { pt3dadd( 432.995, 663.776, 37.896, 0.3814 ) }
    dend_14 { pt3dadd( 431.91, 664.091, 37.5567, 0.356 ) }
    dend_14 { pt3dadd( 430.798, 664.359, 37.5276, 0.3304 ) }
    dend_14 { pt3dadd( 429.84, 664.964, 37.5575, 0.3304 ) }
    dend_14 { pt3dadd( 428.786, 665.389, 37.7272, 0.3814 ) }
    dend_14 { pt3dadd( 427.689, 665.368, 38.4034, 0.4576 ) }
    dend_14 { pt3dadd( 426.556, 665.253, 38.3513, 0.483 ) }
    dend_14 { pt3dadd( 425.531, 665.45, 37.2688, 0.483 ) }
    dend_14 { pt3dadd( 424.406, 665.549, 36.902, 0.4576 ) }
    dend_14 { pt3dadd( 423.368, 666.021, 37.0874, 0.483 ) }
    dend_14 { pt3dadd( 422.449, 666.675, 37.5122, 0.5338 ) }
    dend_14 { pt3dadd( 421.319, 666.856, 37.4671, 0.6102 ) }
    dend_14 { pt3dadd( 420.19, 666.963, 37.1711, 0.7118 ) }
    dend_14 { pt3dadd( 419.203, 667.495, 36.7343, 0.7626 ) }
    dend_14 { pt3dadd( 418.41, 668.238, 37.6076, 0.7118 ) }
    dend_14 { pt3dadd( 417.742, 669.104, 38.2788, 0.5338 ) }
    dend_14 { pt3dadd( 417.378, 670.171, 37.8524, 0.3814 ) }
    dend_14 { pt3dadd( 416.724, 671.06, 37.5278, 0.3304 ) }
    dend_14 { pt3dadd( 415.646, 671.42, 37.5729, 0.3814 ) }
    dend_14 { pt3dadd( 414.52, 671.529, 37.8311, 0.4322 ) }
    dend_14 { pt3dadd( 413.508, 671.933, 38.5151, 0.4576 ) }
    dend_14 { pt3dadd( 412.704, 672.72, 38.9808, 0.4576 ) }
    dend_14 { pt3dadd( 411.984, 673.563, 39.5646, 0.4576 ) }
    dend_14 { pt3dadd( 411.026, 674.143, 39.7718, 0.4576 ) }
    dend_14 { pt3dadd( 409.923, 674.434, 39.8308, 0.4576 ) }
    dend_14 { pt3dadd( 408.87, 674.848, 40.1226, 0.4576 ) }
    dend_14 { pt3dadd( 407.783, 675.074, 40.6714, 0.4576 ) }
    dend_14 { pt3dadd( 406.652, 675.138, 40.5261, 0.483 ) }
    dend_14 { pt3dadd( 405.592, 675.407, 39.935, 0.5084 ) }
    dend_14 { pt3dadd( 404.671, 676.072, 39.7706, 0.5338 ) }
    dend_14 { pt3dadd( 403.846, 676.864, 39.8026, 0.5592 ) }
    dend_14 { pt3dadd( 402.995, 677.623, 39.9442, 0.6102 ) }
    dend_14 { pt3dadd( 402.045, 678.178, 40.4354, 0.6356 ) }
    dend_14 { pt3dadd( 400.993, 678.427, 41.3406, 0.5848 ) }
    dend_14 { pt3dadd( 399.98, 678.792, 42.2652, 0.483 ) }
    dend_14 { pt3dadd( 399.008, 679.202, 43.2608, 0.4576 ) }
    dend_14 { pt3dadd( 397.975, 679.466, 43.9793, 0.483 ) }
    dend_14 { pt3dadd( 396.939, 679.919, 43.6131, 0.5338 ) }
    dend_14 { pt3dadd( 395.957, 680.467, 43.2169, 0.5084 ) }
    dend_14 { pt3dadd( 394.928, 680.816, 43.4622, 0.483 ) }
    dend_14 { pt3dadd( 393.859, 680.969, 44.0644, 0.4576 ) }
    dend_14 { pt3dadd( 392.963, 681.607, 44.6356, 0.4576 ) }
    dend_14 { pt3dadd( 392.184, 682.419, 44.9369, 0.4576 ) }
    dend_14 { pt3dadd( 391.301, 683.122, 44.6183, 0.4576 ) }
    dend_14 { pt3dadd( 390.341, 683.72, 44.2725, 0.4576 ) }
    dend_14 { pt3dadd( 389.331, 684.253, 44.2403, 0.4576 ) }
    dend_14 { pt3dadd( 388.259, 684.636, 44.2422, 0.4576 ) }
    dend_14 { pt3dadd( 387.159, 684.945, 44.2537, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_14 { pt3dadd( 386.107, 685.386, 44.3215, 0.4322 ) }
    dend_14 { pt3dadd( 385.234, 686.065, 44.6712, 0.4068 ) }
    dend_14 { pt3dadd( 384.466, 686.883, 45.1665, 0.3814 ) }
    dend_14 { pt3dadd( 383.493, 687.402, 45.3398, 0.4068 ) }
    dend_14 { pt3dadd( 382.398, 687.721, 45.2306, 0.4576 ) }
    dend_14 { pt3dadd( 381.826, 687.956, 44.98, 0.5338 ) }
    dend_14 { pt3dadd( 380.831, 688.313, 44.6093, 0.5848 ) }
    dend_14 { pt3dadd( 379.863, 688.876, 45.1186, 0.5848 ) }
    dend_14 { pt3dadd( 378.997, 689.608, 45.3342, 0.5338 ) }
    dend_14 { pt3dadd( 378.176, 690.402, 45.2995, 0.483 ) }
    dend_14 { pt3dadd( 377.314, 691.146, 45.0895, 0.4576 ) }
    dend_14 { pt3dadd( 376.355, 691.716, 44.5866, 0.483 ) }
    dend_14 { pt3dadd( 375.279, 692.029, 44.2669, 0.5338 ) }
    dend_14 { pt3dadd( 374.167, 692.293, 44.2481, 0.5592 ) }
    dend_14 { pt3dadd( 373.043, 692.45, 44.2943, 0.5084 ) }
    dend_14 { pt3dadd( 372.38, 692.44, 44.24, 0.3814 ) }
    dend_14 { pt3dadd( 371.325, 692.837, 44.24, 0.2796 ) }
    dend_14 { pt3dadd( 370.548, 693.662, 44.24, 0.2288 ) }
    dend_14 { pt3dadd( 370.038, 694.686, 44.24, 0.2288 ) }
    dend_14 { pt3dadd( 369.54, 695.714, 44.24, 0.2288 ) }
    dend_14 { pt3dadd( 368.895, 696.648, 44.24, 0.2796 ) }
    dend_14 { pt3dadd( 368.019, 697.381, 44.24, 0.356 ) }
    dend_14 { pt3dadd( 367.096, 698.056, 44.24, 0.483 ) }
    dend_14 { pt3dadd( 366.189, 698.739, 44.24, 0.5338 ) }
    dend_14 { pt3dadd( 365.126, 699.144, 44.24, 0.5592 ) }
    dend_14 { pt3dadd( 364.036, 699.426, 44.24, 0.5084 ) }
    dend_14 { pt3dadd( 363.066, 700.033, 44.2386, 0.483 ) }
    dend_14 { pt3dadd( 362.091, 700.629, 44.2324, 0.4322 ) }
    dend_14 { pt3dadd( 361.219, 701.357, 44.1991, 0.3814 ) }
    dend_14 { pt3dadd( 360.466, 702.203, 44.0138, 0.305 ) }
    dend_14 { pt3dadd( 359.526, 702.798, 43.5131, 0.2542 ) }
    dend_14 { pt3dadd( 358.44, 703.086, 43.1203, 0.2288 ) }
    dend_14 { pt3dadd( 357.308, 703.121, 43.1222, 0.2542 ) }
    dend_14 { pt3dadd( 356.177, 702.977, 43.1365, 0.2796 ) }
    dend_14 { pt3dadd( 355.079, 703.164, 43.2236, 0.3304 ) }
    dend_14 { pt3dadd( 354.132, 703.765, 43.6142, 0.356 ) }
    dend_14 { pt3dadd( 353.29, 704.492, 44.1776, 0.4068 ) }
    dend_14 { pt3dadd( 352.402, 705.21, 44.2481, 0.4068 ) }
    dend_14 { pt3dadd( 351.495, 705.903, 44.2744, 0.3814 ) }
    dend_14 { pt3dadd( 350.635, 706.654, 44.3811, 0.3304 ) }
    dend_14 { pt3dadd( 349.683, 707.201, 44.7846, 0.3304 ) }
    dend_14 { pt3dadd( 348.582, 707.363, 45.3088, 0.3814 ) }
    dend_14 { pt3dadd( 347.454, 707.506, 45.3642, 0.4576 ) }
    dend_14 { pt3dadd( 346.364, 707.85, 45.3872, 0.5084 ) }
    dend_14 { pt3dadd( 345.324, 708.311, 45.5291, 0.5084 ) }
    dend_14 { pt3dadd( 344.302, 708.803, 45.6282, 0.4322 ) }
    dend_14 { pt3dadd( 343.217, 709.161, 45.4538, 0.3814 ) }
    dend_14 { pt3dadd( 342.124, 709.485, 45.4807, 0.3814 ) }
    dend_14 { pt3dadd( 341.042, 709.798, 45.9029, 0.4322 ) }
    dend_14 { pt3dadd( 339.983, 710.156, 46.366, 0.4322 ) }
    dend_14 { pt3dadd( 338.896, 710.421, 46.1616, 0.4068 ) }
    dend_14 { pt3dadd( 337.789, 710.32, 45.6372, 0.3814 ) }
    dend_14 { pt3dadd( 336.683, 710.24, 45.36, 0.356 ) }
    dend_14 { pt3dadd( 335.589, 710.545, 45.36, 0.305 ) }
    dend_14 { pt3dadd( 334.51, 710.657, 45.36, 0.2542 ) }
    dend_14 { pt3dadd( 333.413, 710.476, 44.8941, 0.2288 ) }
    dend_14 { pt3dadd( 332.299, 710.457, 44.6846, 0.2288 ) }
    dend_14 { pt3dadd( 331.188, 710.653, 44.8, 0.2288 ) }
    dend_14 { pt3dadd( 330.044, 710.653, 44.8, 0.2288 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 59/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 451.254, 626.124, 36.4, 0.7372 ) }
    dend_6 { pt3dadd( 451.931, 625.067, 34.9908, 0.9406 ) }
    dend_6 { pt3dadd( 452.652, 624.236, 34.2602, 1.0168 ) }
    dend_6 { pt3dadd( 453.452, 623.509, 33.3967, 0.966 ) }
    dend_6 { pt3dadd( 454.342, 622.811, 33.0254, 0.8898 ) }
    dend_6 { pt3dadd( 455.288, 622.208, 32.8563, 0.839 ) }
    dend_6 { pt3dadd( 456.345, 621.979, 32.1726, 0.9152 ) }
    dend_6 { pt3dadd( 457.407, 621.906, 31.1819, 0.966 ) }
    dend_6 { pt3dadd( 458.467, 621.596, 31.3592, 0.9914 ) }
    dend_6 { pt3dadd( 459.495, 621.125, 31.7531, 0.9406 ) }
    dend_6 { pt3dadd( 460.415, 620.478, 31.4866, 0.839 ) }
    dend_6 { pt3dadd( 461.297, 619.793, 30.8806, 0.7372 ) }
    dend_6 { pt3dadd( 462.316, 619.315, 30.5511, 0.6102 ) }
    dend_6 { pt3dadd( 463.408, 619.195, 29.7774, 0.5848 ) }
    dend_6 { pt3dadd( 464.505, 618.88, 29.6117, 0.6102 ) }
    dend_6 { pt3dadd( 465.392, 618.168, 29.3042, 0.6102 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 75/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 451.254, 626.124, 36.4, 0.7372 ) }
    dend_1 { pt3dadd( 451.631, 625.349, 36.4, 0.6356 ) }
    dend_1 { pt3dadd( 452.422, 624.55, 36.4008, 0.6864 ) }
    dend_1 { pt3dadd( 453.312, 623.832, 36.4039, 0.661 ) }
    dend_1 { pt3dadd( 454.265, 623.202, 36.4202, 0.6864 ) }
    dend_1 { pt3dadd( 455.249, 622.619, 36.512, 0.6864 ) }
    dend_1 { pt3dadd( 456.146, 621.962, 37.1011, 0.661 ) }
    dend_1 { pt3dadd( 457.2, 621.591, 37.4685, 0.6356 ) }
    dend_1 { pt3dadd( 458.336, 621.551, 37.515, 0.5848 ) }
    dend_1 { pt3dadd( 459.476, 621.637, 37.4858, 0.5848 ) }
    dend_1 { pt3dadd( 460.581, 621.906, 37.2994, 0.6102 ) }
    dend_1 { pt3dadd( 461.652, 621.966, 36.4157, 0.6356 ) }
    dend_1 { pt3dadd( 462.643, 621.889, 35.0423, 0.6102 ) }
    dend_1 { pt3dadd( 463.687, 621.531, 34.5218, 0.5848 ) }
    dend_1 { pt3dadd( 464.51, 621.047, 35.8778, 0.5848 ) }
    dend_1 { pt3dadd( 465.246, 620.432, 37.3974, 0.5592 ) }
    dend_1 { pt3dadd( 466.309, 620.643, 38.015, 0.4322 ) }
    // Section: apic_32, id: apic_32, parent: apic_0 (entry count 92/100)
    apic_32 { pt3dclear() }
    apic_32 { pt3dadd( 432.871, 631.094, 38.8816, 0.4576 ) }
    apic_32 { pt3dadd( 432.01, 631.736, 38.6534, 0.5084 ) }
    apic_32 { pt3dadd( 431.012, 632.293, 38.64, 0.4322 ) }
    apic_32 { pt3dadd( 429.943, 632.697, 38.6397, 0.3814 ) }
    apic_32 { pt3dadd( 428.977, 633.308, 38.6392, 0.3304 ) }
    apic_32 { pt3dadd( 427.997, 633.9, 38.6358, 0.3304 ) }
    apic_32 { pt3dadd( 426.939, 634.332, 38.6134, 0.305 ) }
    apic_32 { pt3dadd( 425.806, 634.464, 38.4661, 0.305 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    apic_32 { pt3dadd( 424.75, 634.751, 37.6617, 0.356 ) }
    apic_32 { pt3dadd( 423.686, 634.715, 36.636, 0.4576 ) }
    apic_32 { pt3dadd( 422.592, 634.401, 36.4003, 0.6356 ) }
    apic_32 { pt3dadd( 421.448, 634.361, 36.4, 0.7118 ) }
    apic_32 { pt3dadd( 420.307, 634.427, 36.4006, 0.6864 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 5/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 432.871, 631.094, 38.8816, 0.4576 ) }
    apic_1 { pt3dadd( 432.632, 629.812, 39.4425, 0.661 ) }
    apic_1 { pt3dadd( 432.409, 628.731, 38.7688, 0.8136 ) }
    apic_1 { pt3dadd( 431.87, 627.725, 38.745, 0.966 ) }
    apic_1 { pt3dadd( 431.642, 626.632, 39.3112, 0.9406 ) }
    apic_1 { pt3dadd( 431.31, 625.553, 39.7687, 0.966 ) }
    apic_1 { pt3dadd( 431.156, 624.422, 39.8712, 0.9152 ) }
    apic_1 { pt3dadd( 430.693, 623.401, 40.4233, 0.9152 ) }
    apic_1 { pt3dadd( 429.988, 622.508, 40.7109, 0.7626 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 14/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 442.318, 649.196, 20.0018, 0.305 ) }
    dend_42 { pt3dadd( 443.352, 649.813, 20.0018, 0.3814 ) }
    dend_42 { pt3dadd( 443.745, 650.714, 19.7708, 0.356 ) }
    dend_42 { pt3dadd( 443.163, 651.614, 18.7933, 0.305 ) }
    dend_42 { pt3dadd( 442.65, 652.595, 18.335, 0.2796 ) }
    dend_42 { pt3dadd( 442.201, 653.647, 18.335, 0.305 ) }
    dend_42 { pt3dadd( 441.957, 654.76, 18.335, 0.356 ) }
    dend_42 { pt3dadd( 441.759, 655.887, 18.335, 0.3814 ) }
    dend_42 { pt3dadd( 441.585, 657.018, 18.335, 0.356 ) }
    dend_42 { pt3dadd( 441.422, 658.149, 18.335, 0.3304 ) }
    dend_42 { pt3dadd( 440.596, 658.446, 18.335, 0.305 ) }
    dend_42 { pt3dadd( 439.867, 659.115, 18.335, 0.305 ) }
    dend_42 { pt3dadd( 439.53, 660.208, 18.335, 0.356 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 27/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 442.318, 649.196, 20.0018, 0.305 ) }
    dend_41 { pt3dadd( 443.249, 648.464, 20.0018, 0.4576 ) }
    dend_41 { pt3dadd( 444.053, 647.65, 20.0018, 0.4576 ) }
    dend_41 { pt3dadd( 444.848, 646.828, 20.0018, 0.5338 ) }
    dend_41 { pt3dadd( 445.589, 645.957, 20.0018, 0.5084 ) }
    dend_41 { pt3dadd( 446.306, 645.066, 20.0018, 0.5084 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 33/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 479.794, 644.627, 37.2501, 0.4068 ) }
    dend_30 { pt3dadd( 479.877, 643.931, 35.5538, 0.4322 ) }
    dend_30 { pt3dadd( 480.268, 643.101, 33.9097, 0.3814 ) }
    dend_30 { pt3dadd( 480.728, 642.076, 33.7991, 0.356 ) }
    dend_30 { pt3dadd( 480.781, 640.941, 33.9923, 0.3814 ) }
    dend_30 { pt3dadd( 480.713, 639.851, 33.1758, 0.4068 ) }
    dend_30 { pt3dadd( 480.89, 638.931, 32.1798, 0.4068 ) }
    dend_30 { pt3dadd( 481.187, 637.964, 30.872, 0.356 ) }
    dend_30 { pt3dadd( 481.531, 636.906, 30.5584, 0.356 ) }
    dend_30 { pt3dadd( 481.716, 636.059, 28.8988, 0.3304 ) }
    dend_30 { pt3dadd( 481.728, 635.469, 26.6386, 0.3814 ) }
    dend_30 { pt3dadd( 482.006, 635.117, 24.6621, 0.3814 ) }
    dend_30 { pt3dadd( 483.004, 634.689, 23.7804, 0.4068 ) }
    dend_30 { pt3dadd( 484.02, 634.714, 23.3355, 0.3304 ) }
    dend_30 { pt3dadd( 485.056, 635.199, 23.3355, 0.3304 ) }
    dend_30 { pt3dadd( 485.435, 634.38, 21.9052, 0.356 ) }
    dend_30 { pt3dadd( 485.773, 633.481, 20.3871, 0.4322 ) }
    dend_30 { pt3dadd( 485.633, 632.433, 19.794, 0.4068 ) }
    dend_30 { pt3dadd( 485.328, 631.336, 19.516, 0.3304 ) }
    dend_30 { pt3dadd( 485.025, 630.239, 19.2377, 0.2542 ) }
    dend_30 { pt3dadd( 484.721, 629.142, 18.9594, 0.2796 ) }
    dend_30 { pt3dadd( 484.978, 628.077, 18.8908, 0.356 ) }
    dend_30 { pt3dadd( 485.983, 627.533, 18.8908, 0.4322 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 56/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 479.794, 644.627, 37.2501, 0.4068 ) }
    dend_29 { pt3dadd( 480.76, 644.46, 36.6618, 0.4068 ) }
    dend_29 { pt3dadd( 481.88, 644.486, 36.4294, 0.3304 ) }
    dend_29 { pt3dadd( 482.947, 644.862, 36.5624, 0.2542 ) }
    dend_29 { pt3dadd( 484.021, 644.995, 37.1431, 0.2796 ) }
    dend_29 { pt3dadd( 485.079, 644.651, 37.4581, 0.356 ) }
    dend_29 { pt3dadd( 486.147, 644.248, 37.3929, 0.4322 ) }
    dend_29 { pt3dadd( 487.168, 643.771, 36.974, 0.4322 ) }
    dend_29 { pt3dadd( 488.092, 643.154, 37.3089, 0.3814 ) }
    dend_29 { pt3dadd( 489.114, 642.692, 37.7194, 0.3814 ) }
    dend_29 { pt3dadd( 490.197, 642.634, 38.4454, 0.4068 ) }
    dend_29 { pt3dadd( 491.286, 642.822, 39.1308, 0.4576 ) }
    dend_29 { pt3dadd( 492.318, 642.56, 39.9185, 0.4068 ) }
    dend_29 { pt3dadd( 492.946, 641.678, 40.495, 0.356 ) }
    dend_29 { pt3dadd( 493.698, 640.873, 41.2034, 0.305 ) }
    dend_29 { pt3dadd( 494.766, 641.09, 41.8625, 0.3304 ) }
    dend_29 { pt3dadd( 495.784, 641.573, 41.4196, 0.3304 ) }
    dend_29 { pt3dadd( 496.907, 641.392, 41.6321, 0.356 ) }
    dend_29 { pt3dadd( 497.849, 640.931, 42.1789, 0.3304 ) }
    dend_29 { pt3dadd( 498.862, 640.615, 42.8529, 0.356 ) }
    dend_29 { pt3dadd( 499.914, 640.757, 43.8152, 0.3814 ) }
    dend_29 { pt3dadd( 500.906, 641.072, 44.963, 0.4322 ) }
    dend_29 { pt3dadd( 502.001, 641.178, 45.4924, 0.4576 ) }
    dend_29 { pt3dadd( 503.108, 641.052, 46.0628, 0.4068 ) }
    dend_29 { pt3dadd( 504.014, 640.463, 45.7069, 0.3814 ) }
    dend_29 { pt3dadd( 504.799, 639.646, 45.7579, 0.3304 ) }
    dend_29 { pt3dadd( 505.792, 639.18, 46.3361, 0.356 ) }
    dend_29 { pt3dadd( 506.874, 638.826, 46.5013, 0.3304 ) }
    dend_29 { pt3dadd( 507.924, 638.378, 46.6404, 0.3304 ) }
    dend_29 { pt3dadd( 508.959, 637.969, 47.25, 0.3304 ) }
    dend_29 { pt3dadd( 509.993, 637.501, 47.553, 0.356 ) }
    dend_29 { pt3dadd( 510.915, 636.832, 47.5502, 0.3814 ) }
    dend_29 { pt3dadd( 511.755, 636.058, 47.3799, 0.3304 ) }
    dend_29 { pt3dadd( 512.661, 635.442, 46.6463, 0.305 ) }
    dend_29 { pt3dadd( 513.773, 635.276, 46.4957, 0.305 ) }
    dend_29 { pt3dadd( 514.917, 635.26, 46.5422, 0.4068 ) }
    dend_29 { pt3dadd( 516.052, 635.24, 46.8675, 0.5084 ) }
    dend_29 { pt3dadd( 517.059, 635.137, 48.1183, 0.6102 ) }
    dend_29 { pt3dadd( 518.143, 634.898, 48.713, 0.661 ) }
    dend_29 { pt3dadd( 519.258, 635.079, 48.944, 0.6864 ) }
    dend_29 { pt3dadd( 520.356, 635.293, 49.5298, 0.6864 ) }
    dend_29 { pt3dadd( 521.455, 635.557, 49.9635, 0.6356 ) }
    dend_29 { pt3dadd( 522.362, 636.051, 51.1426, 0.5848 ) }
    dend_29 { pt3dadd( 523.109, 636.567, 52.8402, 0.483 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_29 { pt3dadd( 524.221, 636.548, 53.4226, 0.4322 ) }
    dend_29 { pt3dadd( 525.328, 636.289, 53.3882, 0.3814 ) }
    dend_29 { pt3dadd( 526.393, 636.504, 54.1778, 0.3814 ) }
    dend_29 { pt3dadd( 527.216, 637.207, 55.0659, 0.4322 ) }
    dend_29 { pt3dadd( 528.051, 637.759, 56.308, 0.483 ) }
    dend_29 { pt3dadd( 529.177, 637.837, 56.4248, 0.5338 ) }
    dend_29 { pt3dadd( 530.262, 637.565, 55.9062, 0.5084 ) }
    dend_29 { pt3dadd( 531.339, 637.479, 55.2264, 0.4576 ) }
    dend_29 { pt3dadd( 532.383, 637.159, 55.974, 0.4576 ) }
    dend_29 { pt3dadd( 533.359, 636.675, 56.4124, 0.483 ) }
    dend_29 { pt3dadd( 534.487, 636.636, 55.9826, 0.5338 ) }
    dend_29 { pt3dadd( 535.609, 636.642, 55.7458, 0.5084 ) }
    dend_29 { pt3dadd( 536.721, 636.669, 56.3676, 0.4576 ) }
    dend_29 { pt3dadd( 537.838, 636.796, 56.8515, 0.4068 ) }
    dend_29 { pt3dadd( 538.917, 636.935, 57.4986, 0.356 ) }
    dend_29 { pt3dadd( 539.909, 636.525, 58.1776, 0.356 ) }
    dend_29 { pt3dadd( 540.732, 635.852, 59.092, 0.3304 ) }
    dend_29 { pt3dadd( 541.557, 635.952, 59.9469, 0.3304 ) }
    dend_29 { pt3dadd( 542.143, 636.901, 60.5321, 0.2796 ) }
    dend_29 { pt3dadd( 542.914, 637.432, 61.4995, 0.2796 ) }
    dend_29 { pt3dadd( 543.893, 637.322, 62.7936, 0.305 ) }
    dend_29 { pt3dadd( 544.844, 636.789, 63.3189, 0.356 ) }
    dend_29 { pt3dadd( 545.76, 636.121, 63.6054, 0.4068 ) }
    dend_29 { pt3dadd( 546.815, 635.856, 63.8845, 0.4068 ) }
    dend_29 { pt3dadd( 547.713, 636.398, 64.1452, 0.4068 ) }
    dend_29 { pt3dadd( 548.184, 637.111, 65.7608, 0.3304 ) }
    dend_29 { pt3dadd( 548.557, 638.084, 66.5826, 0.2796 ) }
    dend_29 { pt3dadd( 549.302, 638.918, 66.7696, 0.2288 ) }
    dend_29 { pt3dadd( 550.328, 639.263, 67.429, 0.2288 ) }
    dend_29 { pt3dadd( 551.349, 639.219, 68.6333, 0.2542 ) }
    dend_29 { pt3dadd( 552.193, 639.684, 70.0356, 0.2796 ) }
    dend_29 { pt3dadd( 553.294, 639.837, 70.2526, 0.3304 ) }
    dend_29 { pt3dadd( 554.409, 639.877, 70.8392, 0.3304 ) }
    dend_29 { pt3dadd( 555.487, 640.217, 70.5818, 0.3814 ) }
    dend_29 { pt3dadd( 555.984, 641.212, 70.0, 0.3814 ) }
    // Section: dend_25, id: dend_25, parent: dend_19 (entry count 35/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 403.797, 655.394, 31.0901, 0.2796 ) }
    dend_25 { pt3dadd( 403.824, 655.93, 29.731, 0.2796 ) }
    dend_25 { pt3dadd( 403.867, 656.84, 28.0683, 0.2542 ) }
    dend_25 { pt3dadd( 404.107, 657.262, 25.7533, 0.2288 ) }
    dend_25 { pt3dadd( 404.493, 657.627, 23.2898, 0.2288 ) }
    dend_25 { pt3dadd( 405.191, 658.303, 22.1124, 0.2288 ) }
    dend_25 { pt3dadd( 406.188, 658.689, 22.6615, 0.2288 ) }
    dend_25 { pt3dadd( 406.622, 659.22, 24.6845, 0.2542 ) }
    dend_25 { pt3dadd( 406.779, 659.678, 27.2182, 0.2796 ) }
    dend_25 { pt3dadd( 406.851, 660.157, 29.6652, 0.3304 ) }
    dend_25 { pt3dadd( 406.393, 660.848, 31.1198, 0.3304 ) }
    dend_25 { pt3dadd( 405.73, 661.73, 30.508, 0.3304 ) }
    dend_25 { pt3dadd( 405.445, 662.675, 29.5943, 0.2796 ) }
    dend_25 { pt3dadd( 406.013, 663.512, 28.7557, 0.2542 ) }
    dend_25 { pt3dadd( 406.447, 664.367, 27.6788, 0.2542 ) }
    dend_25 { pt3dadd( 406.125, 665.229, 26.3645, 0.2796 ) }
    dend_25 { pt3dadd( 405.359, 665.554, 24.5815, 0.305 ) }
    dend_25 { pt3dadd( 404.523, 666.029, 23.2324, 0.2796 ) }
    dend_25 { pt3dadd( 403.615, 666.675, 22.7576, 0.2796 ) }
    dend_25 { pt3dadd( 402.747, 667.297, 21.8498, 0.2796 ) }
    dend_25 { pt3dadd( 402.089, 667.849, 20.0558, 0.305 ) }
    dend_25 { pt3dadd( 401.289, 668.276, 18.3862, 0.2796 ) }
    dend_25 { pt3dadd( 400.6, 668.117, 19.7582, 0.2542 ) }
    dend_25 { pt3dadd( 400.09, 667.483, 21.709, 0.2542 ) }
    dend_25 { pt3dadd( 399.171, 666.856, 22.1948, 0.3304 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 60/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 403.797, 655.394, 31.0901, 0.2796 ) }
    dend_20 { pt3dadd( 403.566, 656.33, 30.3744, 0.4322 ) }
    dend_20 { pt3dadd( 403.031, 657.271, 30.4615, 0.4322 ) }
    dend_20 { pt3dadd( 402.138, 657.957, 30.8042, 0.483 ) }
    dend_20 { pt3dadd( 401.134, 658.505, 30.8235, 0.483 ) }
    dend_20 { pt3dadd( 400.107, 658.959, 30.9652, 0.5084 ) }
    dend_20 { pt3dadd( 398.978, 659.068, 31.1836, 0.5338 ) }
    dend_20 { pt3dadd( 397.848, 659.113, 31.2721, 0.5848 ) }
    dend_20 { pt3dadd( 396.76, 659.333, 31.8114, 0.5592 ) }
    dend_20 { pt3dadd( 395.746, 659.843, 32.0326, 0.483 ) }
    dend_20 { pt3dadd( 394.785, 660.43, 32.5332, 0.4068 ) }
    dend_20 { pt3dadd( 393.771, 660.923, 32.9983, 0.4322 ) }
    dend_20 { pt3dadd( 392.921, 661.686, 32.853, 0.5084 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 73/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 442.309, 670.406, 36.4235, 0.483 ) }
    dend_17 { pt3dadd( 443.546, 671.067, 36.6702, 0.3814 ) }
    dend_17 { pt3dadd( 444.689, 671.115, 36.6702, 0.4068 ) }
    dend_17 { pt3dadd( 445.738, 671.364, 36.6702, 0.4576 ) }
    dend_17 { pt3dadd( 446.245, 672.297, 37.0997, 0.4576 ) }
    dend_17 { pt3dadd( 446.381, 673.35, 38.1405, 0.4576 ) }
    dend_17 { pt3dadd( 446.5, 674.428, 38.8926, 0.4322 ) }
    dend_17 { pt3dadd( 447.036, 675.277, 38.8926, 0.356 ) }
    dend_17 { pt3dadd( 447.642, 676.203, 39.4836, 0.305 ) }
    dend_17 { pt3dadd( 448.216, 677.158, 40.1198, 0.305 ) }
    dend_17 { pt3dadd( 448.79, 678.113, 40.7562, 0.356 ) }
    dend_17 { pt3dadd( 449.125, 679.149, 41.1149, 0.356 ) }
    dend_17 { pt3dadd( 449.148, 680.293, 41.1149, 0.305 ) }
    dend_17 { pt3dadd( 449.174, 681.437, 41.1149, 0.2796 ) }
    dend_17 { pt3dadd( 449.693, 682.433, 41.1149, 0.2796 ) }
    dend_17 { pt3dadd( 450.659, 682.88, 41.6889, 0.3304 ) }
    dend_17 { pt3dadd( 451.719, 683.192, 42.4133, 0.356 ) }
    dend_17 { pt3dadd( 452.661, 683.742, 42.7818, 0.3814 ) }
    dend_17 { pt3dadd( 453.48, 684.541, 42.7818, 0.3814 ) }
    dend_17 { pt3dadd( 454.23, 685.392, 43.0136, 0.3814 ) }
    dend_17 { pt3dadd( 454.915, 686.29, 43.4498, 0.3814 ) }
    dend_17 { pt3dadd( 455.601, 687.188, 43.8861, 0.3814 ) }
    dend_17 { pt3dadd( 456.288, 688.086, 44.3223, 0.4322 ) }
    dend_17 { pt3dadd( 456.973, 688.984, 44.7586, 0.483 ) }
    dend_17 { pt3dadd( 457.643, 689.901, 45.0041, 0.5084 ) }
    dend_17 { pt3dadd( 458.293, 690.842, 45.0041, 0.4322 ) }
    dend_17 { pt3dadd( 458.965, 691.769, 45.0041, 0.356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_17 { pt3dadd( 460.044, 692.047, 45.0041, 0.305 ) }
    dend_17 { pt3dadd( 461.169, 692.247, 45.0041, 0.2796 ) }
    dend_17 { pt3dadd( 462.031, 692.849, 45.8133, 0.2542 ) }
    dend_17 { pt3dadd( 462.818, 693.564, 46.8496, 0.2288 ) }
    dend_17 { pt3dadd( 463.499, 694.434, 47.2268, 0.2288 ) }
    dend_17 { pt3dadd( 464.118, 695.396, 47.2268, 0.2288 ) }
    dend_17 { pt3dadd( 464.831, 696.259, 47.4569, 0.2288 ) }
    dend_17 { pt3dadd( 465.706, 696.95, 48.0872, 0.2288 ) }
    dend_17 { pt3dadd( 466.579, 697.641, 48.7175, 0.2542 ) }
    dend_17 { pt3dadd( 467.456, 698.332, 49.3475, 0.2796 ) }
    dend_17 { pt3dadd( 468.376, 699.001, 49.4491, 0.305 ) }
    dend_17 { pt3dadd( 469.362, 699.543, 49.6191, 0.2796 ) }
    dend_17 { pt3dadd( 470.441, 699.871, 50.0842, 0.2796 ) }
    dend_17 { pt3dadd( 471.521, 700.197, 50.5492, 0.305 ) }
    dend_17 { pt3dadd( 472.601, 700.524, 51.0143, 0.356 ) }
    dend_17 { pt3dadd( 473.548, 701.136, 51.116, 0.4068 ) }
    dend_17 { pt3dadd( 474.459, 701.828, 51.116, 0.4068 ) }
    dend_17 { pt3dadd( 475.165, 702.71, 51.116, 0.4068 ) }
    dend_17 { pt3dadd( 475.983, 703.465, 51.116, 0.3304 ) }
    dend_17 { pt3dadd( 476.979, 704.029, 51.116, 0.305 ) }
    dend_17 { pt3dadd( 477.618, 704.95, 51.5015, 0.2796 ) }
    dend_17 { pt3dadd( 478.221, 705.906, 51.9254, 0.305 ) }
    dend_17 { pt3dadd( 478.825, 706.863, 52.3494, 0.2796 ) }
    dend_17 { pt3dadd( 479.427, 707.819, 52.7733, 0.2796 ) }
    dend_17 { pt3dadd( 479.452, 708.958, 52.7828, 0.2796 ) }
    dend_17 { pt3dadd( 479.72, 709.948, 52.976, 0.305 ) }
    dend_17 { pt3dadd( 480.659, 710.541, 53.6654, 0.2796 ) }
    dend_17 { pt3dadd( 481.595, 711.133, 54.3547, 0.2542 ) }
    dend_17 { pt3dadd( 482.492, 711.756, 55.0052, 0.2288 ) }
    dend_17 { pt3dadd( 482.721, 712.877, 55.0052, 0.2288 ) }
    dend_17 { pt3dadd( 482.427, 713.881, 55.0052, 0.2288 ) }
    dend_17 { pt3dadd( 483.129, 714.556, 56.0958, 0.2542 ) }
    dend_17 { pt3dadd( 483.935, 715.213, 57.2673, 0.2796 ) }
    dend_17 { pt3dadd( 484.74, 715.871, 58.4391, 0.3304 ) }
    dend_17 { pt3dadd( 485.54, 716.55, 59.5053, 0.3304 ) }
    dend_17 { pt3dadd( 486.312, 717.378, 59.9082, 0.356 ) }
    dend_17 { pt3dadd( 487.083, 718.208, 60.3112, 0.3304 ) }
    dend_17 { pt3dadd( 487.855, 719.036, 60.7141, 0.4068 ) }
    dend_17 { pt3dadd( 488.626, 719.864, 61.117, 0.4322 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 39/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 442.309, 670.406, 36.4235, 0.483 ) }
    dend_16 { pt3dadd( 442.335, 671.033, 35.8893, 0.5338 ) }
    dend_16 { pt3dadd( 442.603, 672.034, 34.785, 0.5084 ) }
    dend_16 { pt3dadd( 443.16, 672.977, 34.7388, 0.5338 ) }
    dend_16 { pt3dadd( 443.842, 673.881, 35.1198, 0.5084 ) }
    dend_16 { pt3dadd( 444.579, 674.752, 35.1042, 0.5084 ) }
    dend_16 { pt3dadd( 445.152, 675.706, 34.5859, 0.483 ) }
    dend_16 { pt3dadd( 445.34, 676.805, 34.2964, 0.4068 ) }
    dend_16 { pt3dadd( 444.937, 677.791, 33.6143, 0.3814 ) }
    dend_16 { pt3dadd( 444.951, 678.867, 33.0834, 0.3304 ) }
    dend_16 { pt3dadd( 445.65, 679.734, 32.9339, 0.3814 ) }
    dend_16 { pt3dadd( 446.558, 680.368, 32.3128, 0.4068 ) }
    dend_16 { pt3dadd( 447.66, 680.576, 31.9544, 0.483 ) }
    dend_16 { pt3dadd( 448.789, 680.754, 31.9105, 0.4576 ) }
    dend_16 { pt3dadd( 449.902, 681.014, 31.8556, 0.4068 ) }
    dend_16 { pt3dadd( 451.031, 681.175, 31.638, 0.305 ) }
    dend_16 { pt3dadd( 451.764, 681.968, 32.305, 0.2542 ) }
    dend_16 { pt3dadd( 451.546, 683.061, 31.7439, 0.2796 ) }
    dend_16 { pt3dadd( 451.489, 684.125, 30.732, 0.356 ) }
    dend_16 { pt3dadd( 451.792, 685.15, 29.7447, 0.4576 ) }
    dend_16 { pt3dadd( 452.29, 686.164, 29.3126, 0.483 ) }
    dend_16 { pt3dadd( 452.769, 687.165, 28.6387, 0.4576 ) }
    dend_16 { pt3dadd( 453.217, 688.217, 28.5538, 0.4322 ) }
    dend_16 { pt3dadd( 453.549, 689.31, 28.5222, 0.4322 ) }
    dend_16 { pt3dadd( 453.672, 690.442, 28.3156, 0.4576 ) }
    dend_16 { pt3dadd( 453.517, 691.53, 27.5705, 0.4322 ) }
    dend_16 { pt3dadd( 453.643, 692.653, 27.2003, 0.3814 ) }
    dend_16 { pt3dadd( 454.009, 693.699, 26.5115, 0.3814 ) }
    dend_16 { pt3dadd( 454.502, 694.715, 26.0761, 0.4068 ) }
    dend_16 { pt3dadd( 455.01, 695.716, 25.6362, 0.483 ) }
    dend_16 { pt3dadd( 455.483, 696.738, 26.0607, 0.483 ) }
    dend_16 { pt3dadd( 455.796, 697.807, 25.6337, 0.4576 ) }
    dend_16 { pt3dadd( 456.258, 698.827, 25.2389, 0.3814 ) }
    dend_16 { pt3dadd( 456.907, 699.763, 25.1684, 0.3304 ) }
    dend_16 { pt3dadd( 457.835, 700.367, 25.0244, 0.305 ) }
    dend_16 { pt3dadd( 458.894, 700.707, 24.4535, 0.305 ) }
    dend_16 { pt3dadd( 459.982, 701.005, 24.1102, 0.3304 ) }
    dend_16 { pt3dadd( 460.853, 701.674, 24.0349, 0.3814 ) }
    dend_16 { pt3dadd( 461.378, 702.669, 23.7633, 0.4576 ) }
    dend_16 { pt3dadd( 461.936, 703.659, 23.686, 0.483 ) }
    dend_16 { pt3dadd( 462.525, 704.639, 23.8199, 0.5084 ) }
    dend_16 { pt3dadd( 463.039, 705.627, 23.3148, 0.483 ) }
    dend_16 { pt3dadd( 463.512, 706.657, 23.0054, 0.4576 ) }
    dend_16 { pt3dadd( 463.742, 707.769, 22.9771, 0.3814 ) }
    dend_16 { pt3dadd( 463.779, 708.909, 23.0731, 0.3304 ) }
    dend_16 { pt3dadd( 463.784, 710.025, 23.6401, 0.305 ) }
    dend_16 { pt3dadd( 463.829, 711.155, 24.019, 0.2796 ) }
    dend_16 { pt3dadd( 464.104, 712.259, 24.0803, 0.2796 ) }
    dend_16 { pt3dadd( 464.628, 713.27, 24.0822, 0.356 ) }
    dend_16 { pt3dadd( 465.418, 714.087, 24.0918, 0.483 ) }
    dend_16 { pt3dadd( 466.111, 714.992, 24.1371, 0.5848 ) }
    dend_16 { pt3dadd( 466.767, 715.925, 24.3533, 0.5592 ) }
    dend_16 { pt3dadd( 467.349, 716.877, 24.9474, 0.5084 ) }
    dend_16 { pt3dadd( 467.794, 717.922, 24.9634, 0.4322 ) }
    dend_16 { pt3dadd( 467.81, 718.983, 24.0607, 0.4322 ) }
    dend_16 { pt3dadd( 467.663, 720.038, 23.0404, 0.4068 ) }
    dend_16 { pt3dadd( 468.289, 720.956, 22.9258, 0.4322 ) }
    dend_16 { pt3dadd( 469.133, 721.727, 22.808, 0.3814 ) }
    dend_16 { pt3dadd( 470.118, 722.287, 23.0751, 0.3814 ) }
    // Section: dend_12, id: dend_12, parent: dend_6 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 465.392, 618.168, 29.3042, 0.6102 ) }
    dend_12 { pt3dadd( 466.137, 618.294, 28.6448, 0.6864 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_12 { pt3dadd( 467.27, 618.152, 28.6521, 0.6356 ) }
    dend_12 { pt3dadd( 468.375, 618.052, 28.873, 0.483 ) }
    dend_12 { pt3dadd( 469.323, 618.617, 28.6507, 0.4322 ) }
    dend_12 { pt3dadd( 469.868, 619.62, 28.5673, 0.4322 ) }
    dend_12 { pt3dadd( 470.503, 620.446, 28.6415, 0.5084 ) }
    dend_12 { pt3dadd( 471.631, 620.615, 28.8854, 0.5338 ) }
    dend_12 { pt3dadd( 472.411, 620.59, 30.87, 0.5338 ) }
    dend_12 { pt3dadd( 473.45, 620.321, 30.252, 0.6102 ) }
    dend_12 { pt3dadd( 474.206, 619.87, 28.6076, 0.7118 ) }
    dend_12 { pt3dadd( 475.286, 619.922, 28.1526, 0.839 ) }
    dend_12 { pt3dadd( 476.328, 620.356, 28.5443, 0.8898 ) }
    dend_12 { pt3dadd( 477.355, 620.859, 28.56, 0.8644 ) }
    dend_12 { pt3dadd( 478.398, 621.326, 28.5603, 0.788 ) }
    dend_12 { pt3dadd( 479.474, 621.714, 28.5611, 0.6864 ) }
    dend_12 { pt3dadd( 480.484, 622.224, 28.5656, 0.6356 ) }
    dend_12 { pt3dadd( 481.394, 622.911, 28.5863, 0.6102 ) }
    dend_12 { pt3dadd( 482.431, 623.313, 28.6961, 0.5848 ) }
    dend_12 { pt3dadd( 483.54, 623.211, 29.2166, 0.6102 ) }
    dend_12 { pt3dadd( 484.648, 623.229, 29.4714, 0.6356 ) }
    dend_12 { pt3dadd( 485.726, 623.474, 28.8876, 0.7118 ) }
    dend_12 { pt3dadd( 486.811, 623.549, 28.149, 0.7118 ) }
    dend_12 { pt3dadd( 487.922, 623.498, 28.3559, 0.6864 ) }
    dend_12 { pt3dadd( 488.987, 623.758, 28.9195, 0.6356 ) }
    dend_12 { pt3dadd( 490.003, 624.265, 28.9836, 0.6102 ) }
    dend_12 { pt3dadd( 490.926, 624.915, 28.6126, 0.6356 ) }
    dend_12 { pt3dadd( 491.79, 625.648, 28.2556, 0.6864 ) }
    dend_12 { pt3dadd( 492.738, 626.244, 28.4847, 0.7372 ) }
    dend_12 { pt3dadd( 493.672, 626.897, 28.3682, 0.7118 ) }
    dend_12 { pt3dadd( 494.706, 627.377, 28.5037, 0.6356 ) }
    dend_12 { pt3dadd( 495.756, 627.828, 28.56, 0.5592 ) }
    dend_12 { pt3dadd( 496.868, 628.037, 28.56, 0.6356 ) }
    dend_12 { pt3dadd( 498.0, 628.186, 28.56, 0.7372 ) }
    dend_12 { pt3dadd( 499.133, 628.35, 28.5603, 0.839 ) }
    dend_12 { pt3dadd( 500.264, 628.518, 28.5611, 0.7372 ) }
    dend_12 { pt3dadd( 501.35, 628.852, 28.5667, 0.5848 ) }
    dend_12 { pt3dadd( 502.445, 629.155, 28.6028, 0.4576 ) }
    dend_12 { pt3dadd( 503.513, 628.969, 28.9428, 0.4576 ) }
    dend_12 { pt3dadd( 504.464, 628.382, 29.4748, 0.5592 ) }
    dend_12 { pt3dadd( 505.51, 628.027, 29.6218, 0.6356 ) }
    dend_12 { pt3dadd( 506.634, 628.038, 29.2732, 0.7372 ) }
    dend_12 { pt3dadd( 507.704, 628.379, 29.101, 0.788 ) }
    dend_12 { pt3dadd( 508.753, 628.764, 29.6299, 0.839 ) }
    dend_12 { pt3dadd( 509.892, 628.857, 29.6817, 0.8136 ) }
    dend_12 { pt3dadd( 511.036, 628.857, 29.692, 0.788 ) }
    dend_12 { pt3dadd( 512.179, 628.853, 29.7637, 0.7372 ) }
    dend_12 { pt3dadd( 513.315, 628.835, 30.0756, 0.7118 ) }
    dend_12 { pt3dadd( 514.445, 628.719, 30.0398, 0.6864 ) }
    dend_12 { pt3dadd( 515.489, 628.289, 29.6226, 0.6864 ) }
    dend_12 { pt3dadd( 516.5, 627.786, 29.381, 0.661 ) }
    dend_12 { pt3dadd( 517.581, 627.673, 28.7384, 0.661 ) }
    dend_12 { pt3dadd( 518.674, 627.992, 28.56, 0.7118 ) }
    dend_12 { pt3dadd( 519.805, 628.053, 28.5603, 0.839 ) }
    dend_12 { pt3dadd( 520.864, 627.63, 28.5617, 0.966 ) }
    dend_12 { pt3dadd( 521.997, 627.487, 28.5729, 1.0168 ) }
    dend_12 { pt3dadd( 523.141, 627.503, 28.6538, 1.0168 ) }
    dend_12 { pt3dadd( 524.268, 627.585, 29.0772, 0.966 ) }
    dend_12 { pt3dadd( 525.353, 627.915, 29.372, 0.8898 ) }
    dend_12 { pt3dadd( 526.432, 628.074, 28.546, 0.8136 ) }
    dend_12 { pt3dadd( 527.516, 628.138, 28.0106, 0.7372 ) }
    dend_12 { pt3dadd( 528.517, 627.641, 27.5033, 0.7626 ) }
    dend_12 { pt3dadd( 529.531, 627.179, 27.5089, 0.788 ) }
    dend_12 { pt3dadd( 530.659, 627.087, 27.8099, 0.839 ) }
    dend_12 { pt3dadd( 531.688, 626.958, 28.957, 0.8136 ) }
    dend_12 { pt3dadd( 532.654, 626.636, 30.1952, 0.7372 ) }
    dend_12 { pt3dadd( 533.642, 626.293, 29.6019, 0.661 ) }
    dend_12 { pt3dadd( 534.708, 625.985, 29.6355, 0.6102 ) }
    dend_12 { pt3dadd( 535.796, 625.664, 29.6503, 0.661 ) }
    dend_12 { pt3dadd( 536.935, 625.654, 29.4728, 0.7118 ) }
    dend_12 { pt3dadd( 538.036, 625.654, 28.7266, 0.7626 ) }
    dend_12 { pt3dadd( 539.107, 625.655, 28.1716, 0.7118 ) }
    dend_12 { pt3dadd( 540.247, 625.656, 27.9583, 0.6864 ) }
    dend_12 { pt3dadd( 541.388, 625.657, 27.7446, 0.6864 ) }
    dend_12 { pt3dadd( 542.528, 625.657, 27.5313, 0.7626 ) }
    dend_12 { pt3dadd( 543.669, 625.658, 27.3176, 0.7372 ) }
    dend_12 { pt3dadd( 544.789, 625.543, 26.913, 0.6102 ) }
    dend_12 { pt3dadd( 545.891, 625.337, 26.3603, 0.4068 ) }
    dend_12 { pt3dadd( 546.992, 625.131, 25.8079, 0.305 ) }
    dend_12 { pt3dadd( 548.003, 624.677, 25.5578, 0.2796 ) }
    dend_12 { pt3dadd( 548.938, 624.016, 25.5578, 0.3304 ) }
    dend_12 { pt3dadd( 549.96, 623.533, 25.5578, 0.3304 ) }
    dend_12 { pt3dadd( 551.052, 623.192, 25.5578, 0.356 ) }
    dend_12 { pt3dadd( 552.13, 623.11, 25.4405, 0.3814 ) }
    dend_12 { pt3dadd( 553.185, 623.53, 25.0961, 0.5084 ) }
    dend_12 { pt3dadd( 554.24, 623.95, 24.7514, 0.661 ) }
    dend_12 { pt3dadd( 555.294, 624.37, 24.407, 0.7626 ) }
    dend_12 { pt3dadd( 556.349, 624.79, 24.0626, 0.7118 ) }
    dend_12 { pt3dadd( 557.435, 624.867, 23.891, 0.5592 ) }
    dend_12 { pt3dadd( 558.547, 624.603, 23.891, 0.4068 ) }
    dend_12 { pt3dadd( 559.661, 624.339, 23.891, 0.3304 ) }
    dend_12 { pt3dadd( 560.591, 623.706, 23.891, 0.3304 ) }
    dend_12 { pt3dadd( 561.531, 623.212, 23.891, 0.356 ) }
    dend_12 { pt3dadd( 562.651, 623.45, 23.891, 0.3814 ) }
    dend_12 { pt3dadd( 563.771, 623.688, 23.891, 0.356 ) }
    dend_12 { pt3dadd( 564.867, 624.003, 23.891, 0.3304 ) }
    dend_12 { pt3dadd( 565.932, 624.419, 23.891, 0.305 ) }
    dend_12 { pt3dadd( 566.997, 624.836, 23.891, 0.2796 ) }
    dend_12 { pt3dadd( 568.12, 624.744, 24.1531, 0.305 ) }
    dend_12 { pt3dadd( 569.249, 624.6, 24.4429, 0.3814 ) }
    dend_12 { pt3dadd( 570.378, 624.455, 24.7324, 0.483 ) }
    dend_12 { pt3dadd( 571.484, 624.264, 25.0023, 0.483 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_12 { pt3dadd( 572.286, 623.448, 25.0023, 0.4322 ) }
    dend_12 { pt3dadd( 573.226, 622.807, 25.0023, 0.3814 ) }
    dend_12 { pt3dadd( 574.25, 622.341, 24.8595, 0.3814 ) }
    dend_12 { pt3dadd( 575.357, 622.088, 24.4798, 0.3304 ) }
    dend_12 { pt3dadd( 576.461, 621.835, 24.1004, 0.2796 ) }
    dend_12 { pt3dadd( 577.576, 621.786, 23.891, 0.2288 ) }
    dend_12 { pt3dadd( 578.702, 621.989, 23.891, 0.2288 ) }
    dend_12 { pt3dadd( 579.827, 622.192, 23.891, 0.2288 ) }
    dend_12 { pt3dadd( 580.953, 622.394, 23.891, 0.2288 ) }
    dend_12 { pt3dadd( 582.078, 622.598, 23.891, 0.2288 ) }
    dend_12 { pt3dadd( 583.203, 622.8, 23.891, 0.2288 ) }
    dend_12 { pt3dadd( 584.331, 623.003, 23.891, 0.2288 ) }
    dend_12 { pt3dadd( 585.456, 623.207, 23.891, 0.2288 ) }
    dend_12 { pt3dadd( 586.492, 623.602, 23.891, 0.2288 ) }
    dend_12 { pt3dadd( 587.372, 624.333, 23.891, 0.2288 ) }
    dend_12 { pt3dadd( 588.19, 624.609, 23.5393, 0.2288 ) }
    dend_12 { pt3dadd( 588.865, 623.82, 22.365, 0.2542 ) }
    dend_12 { pt3dadd( 589.38, 622.901, 21.6686, 0.2796 ) }
    dend_12 { pt3dadd( 589.664, 621.793, 21.6686, 0.305 ) }
    dend_12 { pt3dadd( 590.438, 621.043, 21.6686, 0.3304 ) }
    dend_12 { pt3dadd( 591.409, 620.44, 21.6686, 0.3814 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 21/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 465.392, 618.168, 29.3042, 0.6102 ) }
    dend_7 { pt3dadd( 465.546, 617.666, 28.5194, 0.4322 ) }
    dend_7 { pt3dadd( 465.579, 616.554, 28.3349, 0.4068 ) }
    dend_7 { pt3dadd( 465.434, 615.486, 29.2127, 0.3814 ) }
    dend_7 { pt3dadd( 465.186, 614.381, 29.0576, 0.356 ) }
    dend_7 { pt3dadd( 465.211, 613.262, 28.5074, 0.4068 ) }
    dend_7 { pt3dadd( 465.647, 612.245, 27.841, 0.5338 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 28/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 466.309, 620.643, 38.015, 0.4322 ) }
    dend_5 { pt3dadd( 467.332, 620.731, 38.7313, 0.5848 ) }
    dend_5 { pt3dadd( 468.365, 620.807, 38.3589, 0.5338 ) }
    dend_5 { pt3dadd( 469.326, 620.366, 37.5763, 0.5338 ) }
    dend_5 { pt3dadd( 470.246, 619.691, 37.52, 0.5592 ) }
    dend_5 { pt3dadd( 471.186, 619.055, 37.52, 0.5848 ) }
    dend_5 { pt3dadd( 472.256, 618.676, 37.52, 0.6356 ) }
    dend_5 { pt3dadd( 473.385, 618.514, 37.52, 0.661 ) }
    dend_5 { pt3dadd( 474.517, 618.578, 37.52, 0.6356 ) }
    dend_5 { pt3dadd( 475.633, 618.532, 37.52, 0.5848 ) }
    dend_5 { pt3dadd( 476.759, 618.402, 37.52, 0.5338 ) }
    dend_5 { pt3dadd( 477.883, 618.56, 37.52, 0.5592 ) }
    dend_5 { pt3dadd( 479.001, 618.583, 37.52, 0.5338 ) }
    dend_5 { pt3dadd( 480.014, 618.117, 37.52, 0.4576 ) }
    dend_5 { pt3dadd( 480.98, 617.507, 37.52, 0.356 ) }
    dend_5 { pt3dadd( 482.058, 617.21, 37.52, 0.3814 ) }
    dend_5 { pt3dadd( 483.069, 617.564, 37.5203, 0.483 ) }
    dend_5 { pt3dadd( 483.944, 618.3, 37.5214, 0.661 ) }
    dend_5 { pt3dadd( 484.868, 618.964, 37.5278, 0.7372 ) }
    dend_5 { pt3dadd( 485.941, 619.278, 37.5774, 0.839 ) }
    dend_5 { pt3dadd( 487.048, 619.507, 37.9022, 0.788 ) }
    dend_5 { pt3dadd( 488.164, 619.67, 38.2253, 0.7626 ) }
    dend_5 { pt3dadd( 489.296, 619.664, 38.0226, 0.661 ) }
    dend_5 { pt3dadd( 490.362, 619.458, 38.4658, 0.661 ) }
    dend_5 { pt3dadd( 491.319, 619.026, 39.5377, 0.6864 ) }
    dend_5 { pt3dadd( 492.252, 618.48, 39.41, 0.7118 ) }
    dend_5 { pt3dadd( 493.271, 618.049, 38.8794, 0.6864 ) }
    dend_5 { pt3dadd( 494.379, 617.943, 39.0662, 0.6356 ) }
    dend_5 { pt3dadd( 495.445, 618.231, 39.5416, 0.5848 ) }
    dend_5 { pt3dadd( 496.376, 618.862, 39.5016, 0.5592 ) }
    dend_5 { pt3dadd( 497.351, 619.214, 39.8829, 0.4576 ) }
    dend_5 { pt3dadd( 497.625, 618.337, 39.6262, 0.3814 ) }
    dend_5 { pt3dadd( 497.006, 618.755, 39.7132, 0.3304 ) }
    dend_5 { pt3dadd( 497.635, 619.553, 39.7659, 0.4322 ) }
    dend_5 { pt3dadd( 498.73, 619.872, 39.8012, 0.6102 ) }
    dend_5 { pt3dadd( 499.85, 619.918, 40.0529, 0.7118 ) }
    dend_5 { pt3dadd( 500.939, 620.008, 40.5594, 0.6864 ) }
    dend_5 { pt3dadd( 502.012, 620.368, 40.7747, 0.5848 ) }
    dend_5 { pt3dadd( 503.102, 620.45, 40.3474, 0.5592 ) }
    dend_5 { pt3dadd( 504.167, 620.122, 39.8737, 0.6102 ) }
    dend_5 { pt3dadd( 505.253, 619.797, 39.7499, 0.6102 ) }
    dend_5 { pt3dadd( 506.388, 619.697, 39.6897, 0.5848 ) }
    dend_5 { pt3dadd( 507.515, 619.648, 39.3098, 0.5338 ) }
    dend_5 { pt3dadd( 508.596, 619.374, 38.9634, 0.5848 ) }
    dend_5 { pt3dadd( 509.49, 618.763, 39.478, 0.6356 ) }
    dend_5 { pt3dadd( 510.312, 618.101, 40.4919, 0.6356 ) }
    dend_5 { pt3dadd( 511.199, 617.396, 40.8663, 0.5338 ) }
    dend_5 { pt3dadd( 512.078, 616.669, 40.8842, 0.4576 ) }
    dend_5 { pt3dadd( 513.086, 616.134, 40.9038, 0.483 ) }
    dend_5 { pt3dadd( 514.148, 615.717, 41.02, 0.5848 ) }
    dend_5 { pt3dadd( 515.125, 615.156, 41.447, 0.6864 ) }
    dend_5 { pt3dadd( 516.129, 614.691, 42.131, 0.7118 ) }
    dend_5 { pt3dadd( 517.062, 614.059, 42.6216, 0.7118 ) }
    dend_5 { pt3dadd( 517.979, 613.401, 43.0296, 0.7118 ) }
    dend_5 { pt3dadd( 518.914, 612.758, 42.8635, 0.788 ) }
    dend_5 { pt3dadd( 519.904, 612.281, 42.114, 0.839 ) }
    dend_5 { pt3dadd( 520.872, 611.916, 40.9304, 0.788 ) }
    dend_5 { pt3dadd( 521.909, 611.744, 40.1531, 0.661 ) }
    dend_5 { pt3dadd( 523.016, 611.717, 40.6944, 0.5592 ) }
    dend_5 { pt3dadd( 524.086, 611.351, 41.0945, 0.5338 ) }
    dend_5 { pt3dadd( 525.159, 611.022, 41.4022, 0.483 ) }
    dend_5 { pt3dadd( 526.281, 610.877, 41.0231, 0.4322 ) }
    dend_5 { pt3dadd( 527.409, 610.707, 40.8881, 0.3814 ) }
    dend_5 { pt3dadd( 528.474, 611.086, 40.8814, 0.4068 ) }
    dend_5 { pt3dadd( 529.5, 611.59, 40.8878, 0.4322 ) }
    dend_5 { pt3dadd( 530.538, 612.072, 40.9237, 0.4576 ) }
    dend_5 { pt3dadd( 531.651, 612.307, 41.1286, 0.4576 ) }
    dend_5 { pt3dadd( 532.721, 612.074, 41.7483, 0.5084 ) }
    dend_5 { pt3dadd( 533.802, 611.741, 41.6679, 0.5338 ) }
    dend_5 { pt3dadd( 534.901, 611.68, 41.1398, 0.5338 ) }
    dend_5 { pt3dadd( 536.018, 611.811, 40.9052, 0.4068 ) }
    dend_5 { pt3dadd( 537.125, 611.565, 41.0452, 0.3304 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_5 { pt3dadd( 538.135, 611.087, 41.5156, 0.305 ) }
    dend_5 { pt3dadd( 539.24, 610.888, 41.9936, 0.3814 ) }
    dend_5 { pt3dadd( 540.335, 610.556, 41.9731, 0.4322 ) }
    dend_5 { pt3dadd( 541.461, 610.406, 41.7964, 0.4576 ) }
    dend_5 { pt3dadd( 542.359, 611.032, 40.9973, 0.4576 ) }
    dend_5 { pt3dadd( 543.451, 611.364, 40.8918, 0.4322 ) }
    dend_5 { pt3dadd( 544.591, 611.443, 40.964, 0.3814 ) }
    dend_5 { pt3dadd( 545.698, 611.272, 41.5092, 0.305 ) }
    dend_5 { pt3dadd( 546.721, 610.827, 41.9012, 0.2542 ) }
    dend_5 { pt3dadd( 547.786, 610.444, 42.0106, 0.2796 ) }
    dend_5 { pt3dadd( 548.762, 610.831, 42.0616, 0.3304 ) }
    dend_5 { pt3dadd( 549.51, 611.667, 42.4228, 0.3814 ) }
    dend_5 { pt3dadd( 550.195, 612.468, 43.4515, 0.3814 ) }
    dend_5 { pt3dadd( 551.206, 612.566, 43.2846, 0.4068 ) }
    dend_5 { pt3dadd( 552.312, 612.425, 42.6611, 0.4322 ) }
    dend_5 { pt3dadd( 553.395, 612.45, 42.5704, 0.4322 ) }
    dend_5 { pt3dadd( 554.526, 612.49, 42.1714, 0.3814 ) }
    dend_5 { pt3dadd( 555.658, 612.53, 41.7726, 0.3304 ) }
    dend_5 { pt3dadd( 556.708, 612.157, 41.6707, 0.2796 ) }
    dend_5 { pt3dadd( 557.796, 611.974, 41.6707, 0.2796 ) }
    dend_5 { pt3dadd( 558.783, 612.428, 41.6707, 0.2796 ) }
    dend_5 { pt3dadd( 559.556, 613.269, 41.6707, 0.305 ) }
    dend_5 { pt3dadd( 560.57, 613.7, 42.1719, 0.2796 ) }
    dend_5 { pt3dadd( 561.63, 614.063, 42.7526, 0.2796 ) }
    dend_5 { pt3dadd( 562.689, 614.425, 43.3336, 0.305 ) }
    dend_5 { pt3dadd( 563.807, 614.59, 43.7648, 0.356 ) }
    dend_5 { pt3dadd( 564.927, 614.754, 44.1949, 0.3814 ) }
    dend_5 { pt3dadd( 566.044, 614.917, 44.625, 0.3814 ) }
    dend_5 { pt3dadd( 567.163, 615.08, 45.0551, 0.4068 ) }
    dend_5 { pt3dadd( 568.281, 615.243, 45.4852, 0.4322 ) }
    dend_5 { pt3dadd( 569.395, 615.197, 46.0653, 0.4322 ) }
    dend_5 { pt3dadd( 570.508, 615.107, 46.6774, 0.4068 ) }
    dend_5 { pt3dadd( 571.624, 615.021, 47.2268, 0.356 ) }
    dend_5 { pt3dadd( 572.766, 614.966, 47.2268, 0.356 ) }
    dend_5 { pt3dadd( 573.909, 614.91, 47.2268, 0.356 ) }
    dend_5 { pt3dadd( 574.974, 614.906, 46.3271, 0.3814 ) }
    dend_5 { pt3dadd( 576.018, 614.914, 45.1791, 0.356 ) }
    dend_5 { pt3dadd( 577.06, 614.922, 44.0311, 0.305 ) }
    dend_5 { pt3dadd( 578.104, 614.93, 42.8828, 0.2542 ) }
    dend_5 { pt3dadd( 579.148, 614.939, 41.7348, 0.2288 ) }
    dend_5 { pt3dadd( 580.281, 615.038, 41.6707, 0.2288 ) }
    dend_5 { pt3dadd( 581.375, 615.269, 41.8398, 0.2288 ) }
    dend_5 { pt3dadd( 582.359, 615.802, 42.4172, 0.2288 ) }
    dend_5 { pt3dadd( 583.252, 616.462, 42.7818, 0.2288 ) }
    dend_5 { pt3dadd( 583.982, 617.34, 42.7818, 0.2542 ) }
    dend_5 { pt3dadd( 584.716, 618.22, 42.7818, 0.2796 ) }
    dend_5 { pt3dadd( 585.471, 619.075, 42.7818, 0.305 ) }
    dend_5 { pt3dadd( 586.362, 619.793, 42.7818, 0.2796 ) }
    dend_5 { pt3dadd( 587.252, 620.513, 42.7818, 0.2542 ) }
    dend_5 { pt3dadd( 588.177, 621.184, 42.7818, 0.2288 ) }
    dend_5 { pt3dadd( 589.115, 621.838, 42.7818, 0.2288 ) }
    dend_5 { pt3dadd( 590.034, 622.517, 42.7818, 0.2288 ) }
    dend_5 { pt3dadd( 590.901, 623.264, 42.7818, 0.2288 ) }
    dend_5 { pt3dadd( 591.767, 624.012, 42.7818, 0.2288 ) }
    dend_5 { pt3dadd( 592.633, 624.759, 42.7818, 0.2288 ) }
    dend_5 { pt3dadd( 593.499, 625.507, 42.7818, 0.2288 ) }
    dend_5 { pt3dadd( 594.365, 626.254, 42.7818, 0.2288 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 57/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 466.309, 620.643, 38.015, 0.4322 ) }
    dend_2 { pt3dadd( 466.484, 621.126, 38.9964, 0.483 ) }
    dend_2 { pt3dadd( 466.544, 621.878, 41.1004, 0.5338 ) }
    dend_2 { pt3dadd( 466.66, 622.62, 43.1897, 0.661 ) }
    dend_2 { pt3dadd( 467.138, 623.313, 44.9515, 0.7626 ) }
    dend_2 { pt3dadd( 467.691, 624.293, 45.0495, 0.7626 ) }
    dend_2 { pt3dadd( 467.917, 625.381, 44.6177, 0.6102 ) }
    dend_2 { pt3dadd( 468.079, 626.473, 45.1508, 0.4322 ) }
    dend_2 { pt3dadd( 468.776, 627.126, 45.4196, 0.3814 ) }
    dend_2 { pt3dadd( 469.868, 626.838, 45.7478, 0.483 ) }
    dend_2 { pt3dadd( 470.905, 626.779, 46.648, 0.6102 ) }
    dend_2 { pt3dadd( 471.867, 627.244, 47.3768, 0.661 ) }
    dend_2 { pt3dadd( 472.862, 627.652, 47.0834, 0.6102 ) }
    dend_2 { pt3dadd( 473.978, 627.627, 46.8356, 0.5848 ) }
    dend_2 { pt3dadd( 475.059, 627.811, 47.3558, 0.5848 ) }
    dend_2 { pt3dadd( 476.008, 628.384, 47.9371, 0.5848 ) }
    dend_2 { pt3dadd( 476.755, 628.899, 49.2565, 0.5084 ) }
    dend_2 { pt3dadd( 477.398, 628.725, 51.2744, 0.4322 ) }
    dend_2 { pt3dadd( 478.342, 628.628, 52.0696, 0.356 ) }
    dend_2 { pt3dadd( 479.284, 629.213, 52.1769, 0.3814 ) }
    dend_2 { pt3dadd( 480.217, 629.819, 52.684, 0.4068 ) }
    dend_2 { pt3dadd( 480.919, 629.386, 53.8482, 0.483 ) }
    dend_2 { pt3dadd( 481.756, 628.747, 54.847, 0.4576 ) }
    dend_2 { pt3dadd( 482.726, 628.923, 55.9048, 0.4576 ) }
    dend_2 { pt3dadd( 483.531, 629.678, 56.3492, 0.4068 ) }
    dend_2 { pt3dadd( 484.415, 630.354, 55.8499, 0.4322 ) }
    dend_2 { pt3dadd( 485.351, 630.534, 57.1964, 0.4068 ) }
    dend_2 { pt3dadd( 486.028, 630.518, 59.4392, 0.4068 ) }
    dend_2 { pt3dadd( 486.594, 629.883, 61.2875, 0.356 ) }
    dend_2 { pt3dadd( 487.398, 629.376, 62.7424, 0.3814 ) }
    dend_2 { pt3dadd( 488.489, 629.586, 62.407, 0.4322 ) }
    dend_2 { pt3dadd( 489.025, 630.294, 63.3394, 0.5848 ) }
    // Section: apic_36, id: apic_36, parent: apic_32 (entry count 89/100)
    apic_36 { pt3dclear() }
    apic_36 { pt3dadd( 420.307, 634.427, 36.4006, 0.6864 ) }
    apic_36 { pt3dadd( 418.974, 634.716, 35.3716, 0.8898 ) }
    apic_36 { pt3dadd( 418.073, 635.371, 35.845, 0.7372 ) }
    apic_36 { pt3dadd( 417.085, 635.625, 36.8679, 0.5592 ) }
    apic_36 { pt3dadd( 416.027, 635.581, 37.9011, 0.4322 ) }
    apic_36 { pt3dadd( 414.915, 635.645, 38.4726, 0.483 ) }
    apic_36 { pt3dadd( 413.781, 635.661, 38.6274, 0.5592 ) }
    apic_36 { pt3dadd( 412.682, 635.396, 38.558, 0.5592 ) }
    apic_36 { pt3dadd( 411.687, 634.897, 38.064, 0.5084 ) }
    apic_36 { pt3dadd( 410.66, 634.544, 37.3159, 0.4322 ) }
    apic_36 { pt3dadd( 409.59, 634.709, 37.2778, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    apic_36 { pt3dadd( 408.683, 634.907, 38.8898, 0.3304 ) }
    apic_36 { pt3dadd( 407.798, 635.33, 40.3301, 0.3304 ) }
    apic_36 { pt3dadd( 406.757, 635.785, 40.115, 0.356 ) }
    apic_36 { pt3dadd( 405.664, 636.07, 40.4765, 0.4322 ) }
    apic_36 { pt3dadd( 404.582, 635.815, 40.9814, 0.4322 ) }
    apic_36 { pt3dadd( 403.81, 635.074, 41.5302, 0.4322 ) }
    apic_36 { pt3dadd( 403.143, 635.263, 43.741, 0.4576 ) }
    apic_36 { pt3dadd( 402.273, 635.966, 44.3352, 0.483 ) }
    apic_36 { pt3dadd( 401.31, 636.559, 44.6961, 0.483 ) }
    apic_36 { pt3dadd( 400.241, 636.858, 45.1455, 0.4322 ) }
    apic_36 { pt3dadd( 399.227, 636.433, 44.4212, 0.4322 ) }
    apic_36 { pt3dadd( 398.403, 635.744, 43.5935, 0.4322 ) }
    apic_36 { pt3dadd( 397.388, 635.296, 44.1633, 0.4576 ) }
    apic_36 { pt3dadd( 396.367, 635.124, 45.3023, 0.4322 ) }
    apic_36 { pt3dadd( 395.271, 634.927, 45.7103, 0.3814 ) }
    apic_36 { pt3dadd( 394.233, 635.213, 46.6108, 0.356 ) }
    apic_36 { pt3dadd( 393.307, 635.64, 47.766, 0.3814 ) }
    apic_36 { pt3dadd( 392.393, 635.665, 49.1652, 0.4322 ) }
    apic_36 { pt3dadd( 391.306, 635.396, 48.9, 0.483 ) }
    apic_36 { pt3dadd( 390.342, 634.799, 49.0428, 0.483 ) }
    apic_36 { pt3dadd( 389.34, 634.435, 49.8131, 0.483 ) }
    apic_36 { pt3dadd( 388.34, 634.66, 50.8528, 0.483 ) }
    apic_36 { pt3dadd( 387.466, 635.251, 51.4858, 0.5338 ) }
    apic_36 { pt3dadd( 386.423, 635.63, 51.023, 0.5848 ) }
    apic_36 { pt3dadd( 385.284, 635.724, 50.9653, 0.5592 ) }
    apic_36 { pt3dadd( 384.142, 635.74, 50.9967, 0.483 ) }
    apic_36 { pt3dadd( 383.012, 635.848, 51.1997, 0.4322 ) }
    apic_36 { pt3dadd( 381.975, 636.043, 52.0758, 0.4322 ) }
    apic_36 { pt3dadd( 381.002, 636.005, 52.9707, 0.5084 ) }
    apic_36 { pt3dadd( 379.917, 635.74, 52.3695, 0.5084 ) }
    apic_36 { pt3dadd( 378.797, 635.728, 52.8581, 0.483 ) }
    apic_36 { pt3dadd( 378.019, 635.757, 54.8904, 0.3814 ) }
    apic_36 { pt3dadd( 377.415, 635.972, 57.192, 0.3304 ) }
    apic_36 { pt3dadd( 376.545, 636.694, 57.6024, 0.356 ) }
    apic_36 { pt3dadd( 375.738, 637.496, 57.332, 0.4068 ) }
    apic_36 { pt3dadd( 374.933, 638.26, 56.6709, 0.483 ) }
    apic_36 { pt3dadd( 374.047, 638.97, 56.8084, 0.483 ) }
    apic_36 { pt3dadd( 372.969, 639.173, 57.6069, 0.4576 ) }
    apic_36 { pt3dadd( 371.967, 639.471, 58.2232, 0.4068 ) }
    apic_36 { pt3dadd( 371.474, 640.484, 58.4273, 0.4068 ) }
    apic_36 { pt3dadd( 371.052, 641.49, 58.1918, 0.4576 ) }
    apic_36 { pt3dadd( 370.704, 642.326, 59.7601, 0.483 ) }
    apic_36 { pt3dadd( 370.792, 643.113, 61.6955, 0.4576 ) }
    apic_36 { pt3dadd( 370.967, 643.828, 63.3973, 0.3814 ) }
    apic_36 { pt3dadd( 371.066, 644.13, 66.0876, 0.3304 ) }
    apic_36 { pt3dadd( 371.163, 644.431, 68.7781, 0.2796 ) }
    apic_36 { pt3dadd( 371.26, 644.733, 71.4683, 0.2542 ) }
    apic_36 { pt3dadd( 371.357, 645.035, 74.1588, 0.2288 ) }
    apic_36 { pt3dadd( 371.454, 645.336, 76.8491, 0.2288 ) }
    apic_36 { pt3dadd( 371.571, 645.655, 79.5206, 0.2288 ) }
    apic_36 { pt3dadd( 371.75, 646.027, 82.1318, 0.2288 ) }
    apic_36 { pt3dadd( 371.928, 646.4, 84.7431, 0.2288 ) }
    apic_36 { pt3dadd( 372.107, 646.772, 87.3544, 0.2288 ) }
    apic_36 { pt3dadd( 372.285, 647.145, 89.9657, 0.2288 ) }
    apic_36 { pt3dadd( 372.464, 647.517, 92.577, 0.2288 ) }
    apic_36 { pt3dadd( 372.642, 647.89, 95.188, 0.2288 ) }
    apic_36 { pt3dadd( 372.82, 648.261, 97.7992, 0.2288 ) }
    apic_36 { pt3dadd( 373.104, 648.692, 100.009, 0.2796 ) }
    apic_36 { pt3dadd( 373.971, 649.438, 100.009, 0.3304 ) }
    // Section: apic_33, id: apic_33, parent: apic_32 (entry count 59/100)
    apic_33 { pt3dclear() }
    apic_33 { pt3dadd( 420.307, 634.427, 36.4006, 0.6864 ) }
    apic_33 { pt3dadd( 419.575, 634.718, 36.4028, 0.6102 ) }
    apic_33 { pt3dadd( 418.595, 635.278, 36.4123, 0.6864 ) }
    apic_33 { pt3dadd( 417.819, 636.106, 36.4613, 0.8136 ) }
    apic_33 { pt3dadd( 417.19, 637.051, 36.7296, 0.8136 ) }
    apic_33 { pt3dadd( 416.48, 637.914, 36.8567, 0.8136 ) }
    apic_33 { pt3dadd( 415.631, 638.667, 36.5036, 0.7372 ) }
    apic_33 { pt3dadd( 414.871, 639.502, 36.1598, 0.7372 ) }
    apic_33 { pt3dadd( 414.424, 640.499, 35.6552, 0.7118 ) }
    apic_33 { pt3dadd( 414.247, 641.609, 35.2097, 0.6864 ) }
    apic_33 { pt3dadd( 413.883, 642.652, 34.7808, 0.6102 ) }
    apic_33 { pt3dadd( 413.137, 643.46, 34.2762, 0.5592 ) }
    apic_33 { pt3dadd( 412.18, 644.072, 33.999, 0.5338 ) }
    apic_33 { pt3dadd( 411.22, 644.681, 33.7098, 0.5084 ) }
    apic_33 { pt3dadd( 410.337, 645.286, 32.8437, 0.483 ) }
    apic_33 { pt3dadd( 409.39, 645.818, 32.0681, 0.4322 ) }
    apic_33 { pt3dadd( 408.316, 646.174, 31.824, 0.4068 ) }
    apic_33 { pt3dadd( 407.189, 646.345, 31.733, 0.3814 ) }
    apic_33 { pt3dadd( 406.144, 646.757, 31.8514, 0.4068 ) }
    apic_33 { pt3dadd( 405.165, 647.347, 31.8909, 0.4322 ) }
    apic_33 { pt3dadd( 404.079, 647.612, 31.717, 0.4068 ) }
    apic_33 { pt3dadd( 403.079, 647.769, 30.5645, 0.3304 ) }
    apic_33 { pt3dadd( 402.383, 648.415, 29.1847, 0.2542 ) }
    apic_33 { pt3dadd( 401.665, 649.25, 28.5348, 0.2288 ) }
    apic_33 { pt3dadd( 400.803, 649.974, 28.0773, 0.2542 ) }
    apic_33 { pt3dadd( 399.956, 650.08, 26.469, 0.2796 ) }
    apic_33 { pt3dadd( 399.451, 649.42, 24.7005, 0.3304 ) }
    apic_33 { pt3dadd( 398.714, 648.609, 24.1251, 0.3304 ) }
    apic_33 { pt3dadd( 397.669, 648.179, 24.0576, 0.356 ) }
    apic_33 { pt3dadd( 396.56, 648.373, 23.9375, 0.356 ) }
    apic_33 { pt3dadd( 395.471, 648.598, 23.2893, 0.4322 ) }
    apic_33 { pt3dadd( 394.377, 648.9, 22.9779, 0.5084 ) }
    apic_33 { pt3dadd( 393.239, 648.988, 22.9463, 0.5848 ) }
    apic_33 { pt3dadd( 392.096, 649.0, 22.8662, 0.5592 ) }
    apic_33 { pt3dadd( 390.971, 649.049, 22.3754, 0.483 ) }
    apic_33 { pt3dadd( 389.883, 649.358, 22.6996, 0.4068 ) }
    apic_33 { pt3dadd( 389.008, 650.084, 22.9435, 0.4068 ) }
    apic_33 { pt3dadd( 388.188, 650.881, 22.923, 0.4068 ) }
    apic_33 { pt3dadd( 387.339, 651.645, 22.806, 0.4322 ) }
    apic_33 { pt3dadd( 386.352, 652.157, 22.1589, 0.4576 ) }
    apic_33 { pt3dadd( 385.227, 652.217, 21.6681, 0.5084 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    // Section: apic_29, id: apic_29, parent: apic_1 (entry count 0/100)
    apic_29 { pt3dclear() }
    apic_29 { pt3dadd( 429.988, 622.508, 40.7109, 0.7626 ) }
    apic_29 { pt3dadd( 429.914, 621.256, 40.2864, 0.7372 ) }
    apic_29 { pt3dadd( 429.868, 620.131, 39.7888, 0.7118 ) }
    apic_29 { pt3dadd( 429.686, 619.003, 39.7032, 0.5848 ) }
    apic_29 { pt3dadd( 430.223, 618.031, 39.2524, 0.5848 ) }
    apic_29 { pt3dadd( 431.288, 617.873, 38.3555, 0.5592 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 6/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 429.988, 622.508, 40.7109, 0.7626 ) }
    apic_2 { pt3dadd( 428.907, 621.051, 39.0594, 1.0424 ) }
    apic_2 { pt3dadd( 428.451, 620.019, 38.6526, 1.1186 ) }
    apic_2 { pt3dadd( 427.866, 619.038, 38.6075, 1.0168 ) }
    apic_2 { pt3dadd( 427.14, 618.156, 38.4832, 0.8898 ) }
    apic_2 { pt3dadd( 426.308, 617.438, 37.7096, 0.6356 ) }
    apic_2 { pt3dadd( 425.339, 617.119, 36.4501, 0.5084 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 13/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 392.921, 661.686, 32.853, 0.5084 ) }
    dend_24 { pt3dadd( 393.036, 661.115, 31.3975, 0.4576 ) }
    dend_24 { pt3dadd( 393.174, 660.364, 29.3118, 0.5848 ) }
    dend_24 { pt3dadd( 392.289, 660.212, 28.8915, 0.6356 ) }
    dend_24 { pt3dadd( 391.191, 660.369, 28.8915, 0.5848 ) }
    dend_24 { pt3dadd( 390.23, 660.992, 28.8915, 0.4576 ) }
    dend_24 { pt3dadd( 389.243, 661.563, 28.7104, 0.3304 ) }
    dend_24 { pt3dadd( 388.247, 662.119, 28.4726, 0.2542 ) }
    dend_24 { pt3dadd( 387.253, 662.673, 28.2352, 0.2288 ) }
    dend_24 { pt3dadd( 386.258, 663.229, 27.9975, 0.2288 ) }
    dend_24 { pt3dadd( 385.263, 663.784, 27.76, 0.2288 ) }
    dend_24 { pt3dadd( 384.267, 664.34, 27.5223, 0.2288 ) }
    dend_24 { pt3dadd( 383.271, 664.895, 27.2849, 0.2288 ) }
    dend_24 { pt3dadd( 382.165, 665.056, 27.2247, 0.2288 ) }
    dend_24 { pt3dadd( 381.022, 665.083, 27.2247, 0.2288 ) }
    dend_24 { pt3dadd( 379.878, 665.11, 27.2247, 0.2542 ) }
    dend_24 { pt3dadd( 378.956, 665.656, 27.2247, 0.2796 ) }
    dend_24 { pt3dadd( 378.147, 666.465, 27.2247, 0.3304 ) }
    dend_24 { pt3dadd( 377.292, 667.212, 27.3638, 0.3304 ) }
    dend_24 { pt3dadd( 376.359, 667.858, 27.7323, 0.3304 ) }
    dend_24 { pt3dadd( 375.428, 668.503, 28.1008, 0.2796 ) }
    dend_24 { pt3dadd( 374.495, 669.15, 28.469, 0.2542 ) }
    dend_24 { pt3dadd( 373.562, 669.795, 28.8375, 0.2542 ) }
    dend_24 { pt3dadd( 372.645, 670.476, 28.8915, 0.305 ) }
    dend_24 { pt3dadd( 371.643, 670.923, 28.8915, 0.356 ) }
    dend_24 { pt3dadd( 370.502, 670.982, 28.8915, 0.356 ) }
    dend_24 { pt3dadd( 369.438, 671.401, 28.8915, 0.3304 ) }
    dend_24 { pt3dadd( 368.432, 671.927, 28.8915, 0.305 ) }
    dend_24 { pt3dadd( 367.512, 672.608, 28.8915, 0.305 ) }
    dend_24 { pt3dadd( 366.657, 673.354, 28.8915, 0.2796 ) }
    dend_24 { pt3dadd( 365.956, 674.259, 28.8915, 0.2542 ) }
    dend_24 { pt3dadd( 365.165, 674.897, 28.6672, 0.2542 ) }
    dend_24 { pt3dadd( 364.094, 674.731, 27.7668, 0.2796 ) }
    dend_24 { pt3dadd( 363.023, 674.565, 26.8663, 0.3304 ) }
    dend_24 { pt3dadd( 362.195, 673.897, 26.1433, 0.3304 ) }
    dend_24 { pt3dadd( 361.433, 673.09, 25.4702, 0.356 ) }
    dend_24 { pt3dadd( 360.702, 672.26, 25.2372, 0.3304 ) }
    dend_24 { pt3dadd( 360.042, 671.38, 26.0072, 0.356 ) }
    dend_24 { pt3dadd( 359.381, 670.501, 26.7775, 0.356 ) }
    dend_24 { pt3dadd( 358.634, 669.677, 27.2247, 0.3814 ) }
    dend_24 { pt3dadd( 357.768, 668.93, 27.2247, 0.3814 ) }
    dend_24 { pt3dadd( 356.901, 668.183, 27.2247, 0.356 ) }
    dend_24 { pt3dadd( 356.18, 667.336, 26.7887, 0.356 ) }
    dend_24 { pt3dadd( 355.573, 666.414, 26.1136, 0.3304 ) }
    dend_24 { pt3dadd( 355.316, 665.299, 26.1136, 0.3304 ) }
    dend_24 { pt3dadd( 355.078, 664.181, 26.1136, 0.2796 ) }
    dend_24 { pt3dadd( 354.838, 663.062, 26.1136, 0.2542 ) }
    dend_24 { pt3dadd( 355.421, 662.62, 26.1136, 0.2542 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 61/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 392.921, 661.686, 32.853, 0.5084 ) }
    dend_21 { pt3dadd( 392.273, 662.169, 32.2745, 0.4576 ) }
    dend_21 { pt3dadd( 391.374, 662.715, 31.1968, 0.4068 ) }
    dend_21 { pt3dadd( 390.374, 663.194, 31.3412, 0.4576 ) }
    dend_21 { pt3dadd( 389.431, 663.812, 31.7666, 0.483 ) }
    dend_21 { pt3dadd( 388.453, 664.395, 31.6803, 0.4576 ) }
    dend_21 { pt3dadd( 387.378, 664.529, 30.9756, 0.4068 ) }
    dend_21 { pt3dadd( 386.25, 664.471, 30.5964, 0.4068 ) }
    dend_21 { pt3dadd( 385.226, 664.081, 29.904, 0.483 ) }
    dend_21 { pt3dadd( 384.445, 663.272, 29.7027, 0.5592 ) }
    dend_21 { pt3dadd( 383.486, 662.663, 29.727, 0.5848 ) }
    dend_21 { pt3dadd( 382.476, 662.132, 29.9216, 0.5338 ) }
    dend_21 { pt3dadd( 381.397, 662.149, 30.6942, 0.483 ) }
    dend_21 { pt3dadd( 380.438, 662.081, 29.8351, 0.4322 ) }
    dend_21 { pt3dadd( 379.322, 662.016, 29.689, 0.4322 ) }
    dend_21 { pt3dadd( 378.206, 662.067, 29.7424, 0.4576 ) }
    dend_21 { pt3dadd( 377.098, 662.288, 30.1078, 0.5592 ) }
    dend_21 { pt3dadd( 376.004, 662.556, 30.5766, 0.6102 ) }
    dend_21 { pt3dadd( 374.89, 662.67, 30.4531, 0.6356 ) }
    dend_21 { pt3dadd( 373.778, 662.495, 30.0672, 0.6102 ) }
    dend_21 { pt3dadd( 372.704, 662.203, 30.4419, 0.6102 ) }
    dend_21 { pt3dadd( 371.607, 661.934, 30.6664, 0.6102 ) }
    dend_21 { pt3dadd( 370.515, 661.981, 30.1098, 0.5592 ) }
    dend_21 { pt3dadd( 369.655, 662.544, 29.108, 0.483 ) }
    dend_21 { pt3dadd( 368.696, 663.037, 28.3195, 0.3814 ) }
    dend_21 { pt3dadd( 367.596, 662.994, 28.3693, 0.356 ) }
    dend_21 { pt3dadd( 366.582, 662.498, 28.3825, 0.3814 ) }
    dend_21 { pt3dadd( 365.808, 661.703, 27.8863, 0.4068 ) }
    dend_21 { pt3dadd( 364.953, 660.969, 28.0196, 0.4068 ) }
    dend_21 { pt3dadd( 363.969, 660.422, 28.4735, 0.3814 ) }
    dend_21 { pt3dadd( 362.963, 659.884, 28.5729, 0.3814 ) }
    dend_21 { pt3dadd( 361.991, 659.281, 28.6264, 0.3814 ) }
    dend_21 { pt3dadd( 360.938, 658.88, 28.9895, 0.4068 ) }
    dend_21 { pt3dadd( 359.877, 659.166, 29.3622, 0.4576 ) }
    dend_21 { pt3dadd( 358.785, 659.266, 28.7395, 0.5084 ) }
    dend_21 { pt3dadd( 357.841, 658.666, 28.5768, 0.483 ) }
    dend_21 { pt3dadd( 356.875, 658.054, 28.5961, 0.4576 ) }
    dend_21 { pt3dadd( 355.801, 657.674, 28.7806, 0.4068 ) }
    dend_21 { pt3dadd( 354.766, 657.316, 29.5677, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_21 { pt3dadd( 353.654, 657.064, 29.5098, 0.483 ) }
    dend_21 { pt3dadd( 352.6, 656.721, 28.8361, 0.5592 ) }
    dend_21 { pt3dadd( 351.512, 656.385, 28.5659, 0.5592 ) }
    dend_21 { pt3dadd( 350.372, 656.317, 28.5424, 0.5338 ) }
    dend_21 { pt3dadd( 349.229, 656.326, 28.439, 0.483 ) }
    dend_21 { pt3dadd( 348.117, 656.401, 27.8152, 0.4576 ) }
    dend_21 { pt3dadd( 347.053, 656.816, 27.8642, 0.4322 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 7/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 465.647, 612.245, 27.841, 0.5338 ) }
    dend_11 { pt3dadd( 465.963, 612.349, 26.6921, 0.4322 ) }
    dend_11 { pt3dadd( 466.711, 611.687, 26.0131, 0.4576 ) }
    dend_11 { pt3dadd( 467.388, 610.911, 24.8296, 0.483 ) }
    dend_11 { pt3dadd( 468.133, 610.064, 24.9956, 0.5592 ) }
    dend_11 { pt3dadd( 468.762, 609.115, 25.2473, 0.6102 ) }
    dend_11 { pt3dadd( 469.604, 608.351, 25.5242, 0.5848 ) }
    dend_11 { pt3dadd( 470.273, 607.47, 26.2248, 0.483 ) }
    dend_11 { pt3dadd( 470.21, 606.343, 25.9552, 0.3814 ) }
    dend_11 { pt3dadd( 469.654, 605.391, 25.2112, 0.3814 ) }
    dend_11 { pt3dadd( 469.117, 604.424, 24.7957, 0.4068 ) }
    dend_11 { pt3dadd( 469.458, 603.363, 24.2413, 0.483 ) }
    dend_11 { pt3dadd( 470.035, 602.409, 24.1304, 0.483 ) }
    dend_11 { pt3dadd( 470.936, 601.873, 23.0798, 0.483 ) }
    dend_11 { pt3dadd( 471.941, 601.552, 22.2648, 0.4322 ) }
    dend_11 { pt3dadd( 472.772, 600.769, 22.3135, 0.3814 ) }
    dend_11 { pt3dadd( 473.614, 600.108, 22.1651, 0.305 ) }
    dend_11 { pt3dadd( 474.461, 599.628, 21.6924, 0.2796 ) }
    dend_11 { pt3dadd( 474.894, 598.663, 22.5408, 0.305 ) }
    dend_11 { pt3dadd( 475.342, 597.676, 22.3815, 0.3814 ) }
    dend_11 { pt3dadd( 476.068, 596.825, 21.9061, 0.4322 ) }
    dend_11 { pt3dadd( 476.776, 595.931, 21.8369, 0.4576 ) }
    dend_11 { pt3dadd( 477.496, 595.047, 21.8268, 0.4576 ) }
    dend_11 { pt3dadd( 478.324, 594.259, 21.782, 0.4322 ) }
    dend_11 { pt3dadd( 479.251, 593.641, 21.3884, 0.3814 ) }
    dend_11 { pt3dadd( 480.026, 593.236, 19.8456, 0.305 ) }
    dend_11 { pt3dadd( 480.792, 592.825, 18.1664, 0.2796 ) }
    dend_11 { pt3dadd( 481.743, 592.307, 17.9956, 0.3304 ) }
    dend_11 { pt3dadd( 482.674, 591.717, 18.7186, 0.4068 ) }
    dend_11 { pt3dadd( 483.551, 591.225, 19.9861, 0.483 ) }
    dend_11 { pt3dadd( 484.56, 590.897, 20.4142, 0.4576 ) }
    dend_11 { pt3dadd( 485.575, 590.544, 19.5502, 0.4322 ) }
    dend_11 { pt3dadd( 486.53, 589.999, 18.851, 0.356 ) }
    dend_11 { pt3dadd( 487.415, 589.322, 19.1954, 0.3304 ) }
    dend_11 { pt3dadd( 488.212, 589.082, 20.9348, 0.305 ) }
    dend_11 { pt3dadd( 489.089, 589.126, 22.7125, 0.305 ) }
    dend_11 { pt3dadd( 490.112, 589.499, 23.0378, 0.305 ) }
    dend_11 { pt3dadd( 490.989, 590.057, 21.9383, 0.305 ) }
    dend_11 { pt3dadd( 492.031, 590.489, 21.576, 0.3304 ) }
    dend_11 { pt3dadd( 493.036, 591.032, 21.448, 0.3814 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 47/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 465.647, 612.245, 27.841, 0.5338 ) }
    dend_8 { pt3dadd( 466.118, 611.863, 27.5968, 0.356 ) }
    dend_8 { pt3dadd( 466.977, 611.112, 27.4484, 0.3814 ) }
    dend_8 { pt3dadd( 467.151, 610.07, 27.4406, 0.4068 ) }
    dend_8 { pt3dadd( 466.755, 609.012, 27.442, 0.483 ) }
    dend_8 { pt3dadd( 466.81, 607.907, 27.4546, 0.5338 ) }
    dend_8 { pt3dadd( 466.973, 606.774, 27.5397, 0.5338 ) }
    dend_8 { pt3dadd( 467.094, 605.662, 28.0804, 0.483 ) }
    dend_8 { pt3dadd( 467.365, 604.568, 28.5149, 0.483 ) }
    dend_8 { pt3dadd( 467.467, 603.435, 28.6594, 0.483 ) }
    dend_8 { pt3dadd( 467.668, 602.311, 28.6863, 0.4322 ) }
    dend_8 { pt3dadd( 468.19, 601.33, 28.145, 0.356 ) }
    dend_8 { pt3dadd( 468.526, 600.284, 27.3972, 0.3304 ) }
    dend_8 { pt3dadd( 468.855, 599.203, 26.992, 0.356 ) }
    dend_8 { pt3dadd( 469.453, 598.382, 28.2145, 0.3814 ) }
    dend_8 { pt3dadd( 469.728, 597.281, 28.4105, 0.4068 ) }
    dend_8 { pt3dadd( 469.76, 596.175, 27.7015, 0.4322 ) }
    dend_8 { pt3dadd( 469.94, 595.057, 27.3118, 0.4576 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 65/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 489.025, 630.294, 63.3394, 0.5848 ) }
    dend_4 { pt3dadd( 489.182, 629.963, 64.8855, 0.2542 ) }
    dend_4 { pt3dadd( 489.431, 629.444, 67.3064, 0.356 ) }
    dend_4 { pt3dadd( 489.678, 628.925, 69.7276, 0.4576 ) }
    dend_4 { pt3dadd( 489.927, 628.407, 72.1487, 0.5338 ) }
    dend_4 { pt3dadd( 490.766, 627.93, 73.6179, 0.4576 ) }
    dend_4 { pt3dadd( 491.625, 627.454, 75.0546, 0.3814 ) }
    dend_4 { pt3dadd( 492.483, 626.978, 76.4912, 0.2796 ) }
    dend_4 { pt3dadd( 493.342, 626.501, 77.9279, 0.2542 ) }
    dend_4 { pt3dadd( 494.199, 626.126, 79.4886, 0.2288 ) }
    dend_4 { pt3dadd( 495.053, 625.96, 81.3053, 0.2288 ) }
    dend_4 { pt3dadd( 495.908, 625.793, 83.1219, 0.2288 ) }
    dend_4 { pt3dadd( 496.763, 625.626, 84.9386, 0.2288 ) }
    dend_4 { pt3dadd( 497.617, 625.459, 86.7552, 0.2288 ) }
    dend_4 { pt3dadd( 498.471, 625.293, 88.5718, 0.2542 ) }
    dend_4 { pt3dadd( 499.404, 625.039, 89.9906, 0.2796 ) }
    dend_4 { pt3dadd( 500.411, 624.704, 91.0347, 0.305 ) }
    dend_4 { pt3dadd( 501.419, 624.369, 92.0786, 0.2796 ) }
    dend_4 { pt3dadd( 502.427, 624.034, 93.1227, 0.2542 ) }
    dend_4 { pt3dadd( 503.433, 623.7, 94.1668, 0.2288 ) }
    dend_4 { pt3dadd( 504.441, 623.365, 95.2106, 0.2288 ) }
    dend_4 { pt3dadd( 505.448, 623.029, 96.2548, 0.2288 ) }
    dend_4 { pt3dadd( 506.456, 622.694, 97.2986, 0.305 ) }
    dend_4 { pt3dadd( 507.462, 622.359, 98.3427, 0.4068 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 89/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 489.025, 630.294, 63.3394, 0.5848 ) }
    dend_3 { pt3dadd( 489.368, 630.622, 63.5673, 0.5084 ) }
    dend_3 { pt3dadd( 490.24, 631.299, 64.295, 0.4576 ) }
    dend_3 { pt3dadd( 491.111, 631.978, 65.0227, 0.356 ) }
    dend_3 { pt3dadd( 491.984, 632.656, 65.7502, 0.2542 ) }
    dend_3 { pt3dadd( 492.719, 633.482, 66.1172, 0.2288 ) }
    dend_3 { pt3dadd( 493.312, 634.459, 66.1172, 0.2288 ) }
    dend_3 { pt3dadd( 493.984, 635.321, 66.7092, 0.2288 ) }
    dend_3 { pt3dadd( 494.709, 636.098, 67.7421, 0.2542 ) }
    dend_3 { pt3dadd( 495.435, 636.876, 68.775, 0.305 ) }
    dend_3 { pt3dadd( 496.028, 637.721, 69.8718, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_3 { pt3dadd( 496.37, 638.692, 71.0889, 0.4576 ) }
    dend_3 { pt3dadd( 496.65, 639.634, 72.3562, 0.4576 ) }
    dend_3 { pt3dadd( 496.033, 640.142, 74.359, 0.356 ) }
    dend_3 { pt3dadd( 495.415, 640.65, 76.3619, 0.2796 ) }
    dend_3 { pt3dadd( 495.439, 641.157, 78.7727, 0.2542 ) }
    dend_3 { pt3dadd( 495.618, 641.617, 81.2221, 0.3304 ) }
    dend_3 { pt3dadd( 496.417, 641.292, 83.0623, 0.4068 ) }
    dend_3 { pt3dadd( 497.216, 640.966, 84.9027, 0.4322 ) }
    dend_3 { pt3dadd( 498.014, 640.641, 86.7429, 0.356 ) }
    dend_3 { pt3dadd( 498.962, 640.467, 87.7862, 0.2796 ) }
    dend_3 { pt3dadd( 500.107, 640.489, 87.7862, 0.2288 ) }
    dend_3 { pt3dadd( 501.25, 640.512, 87.7862, 0.2288 ) }
    dend_3 { pt3dadd( 502.39, 640.513, 87.7862, 0.2542 ) }
    dend_3 { pt3dadd( 503.473, 640.143, 87.7862, 0.2796 ) }
    dend_3 { pt3dadd( 504.556, 639.774, 87.7862, 0.305 ) }
    dend_3 { pt3dadd( 505.631, 639.386, 87.7862, 0.2796 ) }
    dend_3 { pt3dadd( 506.627, 638.825, 87.7862, 0.2542 ) }
    dend_3 { pt3dadd( 507.624, 638.263, 87.7862, 0.2288 ) }
    dend_3 { pt3dadd( 508.618, 637.7, 87.7862, 0.2288 ) }
    dend_3 { pt3dadd( 509.615, 637.138, 87.7862, 0.2288 ) }
    dend_3 { pt3dadd( 510.612, 636.575, 87.7862, 0.2288 ) }
    dend_3 { pt3dadd( 511.608, 636.014, 87.7862, 0.2542 ) }
    dend_3 { pt3dadd( 512.604, 635.451, 87.7862, 0.3304 ) }
    dend_3 { pt3dadd( 513.601, 634.889, 87.7862, 0.4068 ) }
    // Section: apic_35, id: apic_35, parent: apic_33 (entry count 24/100)
    apic_35 { pt3dclear() }
    apic_35 { pt3dadd( 385.227, 652.217, 21.6681, 0.5084 ) }
    apic_35 { pt3dadd( 384.691, 653.237, 21.3906, 0.3814 ) }
    apic_35 { pt3dadd( 384.195, 654.262, 21.1218, 0.356 ) }
    apic_35 { pt3dadd( 383.699, 655.286, 20.853, 0.2796 ) }
    apic_35 { pt3dadd( 383.202, 656.31, 20.5839, 0.2796 ) }
    apic_35 { pt3dadd( 382.315, 657.012, 20.5576, 0.3304 ) }
    apic_35 { pt3dadd( 381.342, 657.615, 20.5576, 0.4322 ) }
    apic_35 { pt3dadd( 380.354, 658.188, 20.5576, 0.483 ) }
    apic_35 { pt3dadd( 379.339, 658.677, 20.4016, 0.4322 ) }
    apic_35 { pt3dadd( 378.249, 658.906, 19.7588, 0.3304 ) }
    apic_35 { pt3dadd( 377.16, 659.135, 19.1159, 0.2542 ) }
    apic_35 { pt3dadd( 376.096, 658.918, 18.8908, 0.2288 ) }
    apic_35 { pt3dadd( 375.048, 658.461, 18.8908, 0.2542 ) }
    apic_35 { pt3dadd( 373.995, 658.012, 18.8908, 0.2796 ) }
    apic_35 { pt3dadd( 373.174, 657.219, 18.8908, 0.305 ) }
    apic_35 { pt3dadd( 372.275, 656.518, 18.8908, 0.2796 ) }
    apic_35 { pt3dadd( 371.167, 656.692, 18.8908, 0.2542 ) }
    apic_35 { pt3dadd( 370.047, 656.926, 18.8908, 0.2288 ) }
    // Section: apic_34, id: apic_34, parent: apic_33 (entry count 42/100)
    apic_34 { pt3dclear() }
    apic_34 { pt3dadd( 385.227, 652.217, 21.6681, 0.5084 ) }
    apic_34 { pt3dadd( 384.548, 652.311, 20.9972, 0.2288 ) }
    apic_34 { pt3dadd( 383.571, 652.62, 19.7946, 0.2288 ) }
    apic_34 { pt3dadd( 382.574, 652.877, 18.5951, 0.2542 ) }
    apic_34 { pt3dadd( 382.184, 652.153, 17.5193, 0.2796 ) }
    apic_34 { pt3dadd( 382.155, 651.017, 17.5451, 0.3814 ) }
    apic_34 { pt3dadd( 381.41, 650.364, 16.24, 0.4576 ) }
    // Section: apic_31, id: apic_31, parent: apic_29 (entry count 49/100)
    apic_31 { pt3dclear() }
    apic_31 { pt3dadd( 431.288, 617.873, 38.3555, 0.5592 ) }
    apic_31 { pt3dadd( 431.479, 617.965, 39.8882, 0.5592 ) }
    apic_31 { pt3dadd( 432.053, 618.311, 42.1061, 0.5084 ) }
    apic_31 { pt3dadd( 432.819, 618.767, 43.8385, 0.5592 ) }
    apic_31 { pt3dadd( 433.648, 618.624, 45.0486, 0.5848 ) }
    apic_31 { pt3dadd( 433.958, 617.65, 45.5946, 0.6102 ) }
    apic_31 { pt3dadd( 433.534, 616.897, 46.8426, 0.5084 ) }
    apic_31 { pt3dadd( 432.621, 617.17, 47.7582, 0.483 ) }
    apic_31 { pt3dadd( 431.786, 617.797, 48.8443, 0.4068 ) }
    apic_31 { pt3dadd( 431.638, 618.524, 50.7564, 0.4322 ) }
    apic_31 { pt3dadd( 431.796, 619.524, 51.9565, 0.4068 ) }
    apic_31 { pt3dadd( 432.255, 620.554, 52.2239, 0.4068 ) }
    apic_31 { pt3dadd( 432.721, 621.542, 53.0141, 0.4322 ) }
    apic_31 { pt3dadd( 432.87, 622.666, 53.2087, 0.483 ) }
    apic_31 { pt3dadd( 432.685, 623.791, 53.3016, 0.5338 ) }
    apic_31 { pt3dadd( 432.739, 624.919, 53.7113, 0.483 ) }
    apic_31 { pt3dadd( 433.031, 625.992, 54.3536, 0.483 ) }
    apic_31 { pt3dadd( 432.864, 626.79, 56.3007, 0.4576 ) }
    apic_31 { pt3dadd( 432.457, 627.769, 57.1315, 0.5084 ) }
    apic_31 { pt3dadd( 433.06, 628.182, 59.2082, 0.483 ) }
    apic_31 { pt3dadd( 433.018, 629.262, 59.9256, 0.5338 ) }
    apic_31 { pt3dadd( 432.562, 630.311, 59.9539, 0.5338 ) }
    apic_31 { pt3dadd( 432.183, 631.369, 60.2319, 0.5848 ) }
    apic_31 { pt3dadd( 431.837, 632.336, 61.3455, 0.5848 ) }
    apic_31 { pt3dadd( 431.155, 633.161, 62.2104, 0.5848 ) }
    apic_31 { pt3dadd( 430.47, 634.059, 62.5346, 0.5592 ) }
    apic_31 { pt3dadd( 429.691, 634.849, 63.0311, 0.5592 ) }
    apic_31 { pt3dadd( 428.785, 635.547, 63.0118, 0.6102 ) }
    apic_31 { pt3dadd( 427.909, 636.271, 63.247, 0.661 ) }
    apic_31 { pt3dadd( 427.108, 637.015, 63.9985, 0.6356 ) }
    apic_31 { pt3dadd( 426.378, 637.791, 65.0031, 0.5848 ) }
    apic_31 { pt3dadd( 425.63, 638.616, 65.4931, 0.5338 ) }
    apic_31 { pt3dadd( 424.818, 639.422, 65.5407, 0.5338 ) }
    apic_31 { pt3dadd( 424.17, 640.33, 65.6905, 0.5084 ) }
    apic_31 { pt3dadd( 423.918, 641.336, 66.5972, 0.4576 ) }
    apic_31 { pt3dadd( 423.632, 641.984, 68.5658, 0.3814 ) }
    apic_31 { pt3dadd( 422.794, 642.185, 70.0137, 0.3304 ) }
    apic_31 { pt3dadd( 421.943, 642.607, 71.2561, 0.3304 ) }
    apic_31 { pt3dadd( 421.389, 643.403, 72.6984, 0.4322 ) }
    apic_31 { pt3dadd( 420.54, 643.998, 73.3603, 0.5338 ) }
    apic_31 { pt3dadd( 419.495, 644.423, 73.7828, 0.6356 ) }
    apic_31 { pt3dadd( 418.556, 644.995, 74.4741, 0.6356 ) }
    apic_31 { pt3dadd( 417.88, 645.825, 75.3519, 0.6864 ) }
    apic_31 { pt3dadd( 417.299, 646.735, 76.2801, 0.6864 ) }
    apic_31 { pt3dadd( 416.497, 647.498, 76.7362, 0.6864 ) }
    apic_31 { pt3dadd( 415.582, 648.14, 77.2906, 0.5848 ) }
    apic_31 { pt3dadd( 414.922, 648.852, 78.6582, 0.4576 ) }
    apic_31 { pt3dadd( 414.232, 649.275, 80.2911, 0.3304 ) }
    apic_31 { pt3dadd( 413.342, 649.752, 81.6136, 0.2542 ) }
    apic_31 { pt3dadd( 412.456, 650.229, 82.9357, 0.2288 ) }
    apic_31 { pt3dadd( 411.566, 650.706, 84.2579, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    apic_31 { pt3dadd( 410.647, 651.349, 84.4525, 0.2288 ) }
    apic_31 { pt3dadd( 409.721, 652.022, 84.4525, 0.2288 ) }
    apic_31 { pt3dadd( 408.974, 652.839, 84.8464, 0.2288 ) }
    apic_31 { pt3dadd( 408.354, 653.76, 85.5212, 0.2288 ) }
    apic_31 { pt3dadd( 407.734, 654.682, 86.196, 0.2288 ) }
    apic_31 { pt3dadd( 407.115, 655.602, 86.8708, 0.2288 ) }
    apic_31 { pt3dadd( 406.495, 656.524, 87.5454, 0.2288 ) }
    apic_31 { pt3dadd( 405.815, 657.427, 87.7862, 0.2288 ) }
    apic_31 { pt3dadd( 405.101, 658.32, 87.7862, 0.2288 ) }
    apic_31 { pt3dadd( 404.385, 659.214, 87.7862, 0.2288 ) }
    apic_31 { pt3dadd( 403.672, 660.107, 87.7862, 0.305 ) }
    apic_31 { pt3dadd( 402.964, 661.002, 87.8371, 0.3814 ) }
    apic_31 { pt3dadd( 402.37, 661.915, 88.6959, 0.5084 ) }
    apic_31 { pt3dadd( 401.775, 662.827, 89.5546, 0.5338 ) }
    apic_31 { pt3dadd( 401.18, 663.739, 90.4134, 0.6102 ) }
    apic_31 { pt3dadd( 400.585, 664.651, 91.2722, 0.6102 ) }
    apic_31 { pt3dadd( 399.992, 665.563, 92.1309, 0.5848 ) }
    apic_31 { pt3dadd( 399.306, 666.401, 92.7864, 0.4576 ) }
    apic_31 { pt3dadd( 398.328, 666.994, 92.7864, 0.3304 ) }
    apic_31 { pt3dadd( 397.35, 667.587, 92.7864, 0.2542 ) }
    apic_31 { pt3dadd( 396.469, 668.178, 93.8003, 0.2542 ) }
    apic_31 { pt3dadd( 395.594, 668.769, 94.8822, 0.2796 ) }
    apic_31 { pt3dadd( 394.72, 669.359, 95.9641, 0.305 ) }
    apic_31 { pt3dadd( 393.845, 669.949, 97.046, 0.305 ) }
    apic_31 { pt3dadd( 392.971, 670.54, 98.1282, 0.305 ) }
    apic_31 { pt3dadd( 392.096, 671.13, 99.2102, 0.305 ) }
    apic_31 { pt3dadd( 391.251, 671.785, 100.101, 0.2796 ) }
    apic_31 { pt3dadd( 390.49, 672.627, 100.45, 0.2542 ) }
    apic_31 { pt3dadd( 389.728, 673.468, 100.799, 0.2288 ) }
    apic_31 { pt3dadd( 388.966, 674.309, 101.148, 0.2288 ) }
    apic_31 { pt3dadd( 388.204, 675.151, 101.497, 0.2288 ) }
    apic_31 { pt3dadd( 387.441, 675.992, 101.847, 0.2288 ) }
    apic_31 { pt3dadd( 386.678, 676.833, 102.196, 0.2288 ) }
    apic_31 { pt3dadd( 385.721, 677.449, 102.232, 0.2288 ) }
    apic_31 { pt3dadd( 384.741, 678.039, 102.232, 0.2288 ) }
    apic_31 { pt3dadd( 383.76, 678.629, 102.232, 0.2288 ) }
    apic_31 { pt3dadd( 382.781, 679.218, 102.232, 0.2542 ) }
    apic_31 { pt3dadd( 381.801, 679.808, 102.232, 0.2796 ) }
    apic_31 { pt3dadd( 380.792, 680.344, 102.184, 0.305 ) }
    apic_31 { pt3dadd( 379.76, 680.837, 102.099, 0.2796 ) }
    apic_31 { pt3dadd( 378.728, 681.331, 102.015, 0.2542 ) }
    apic_31 { pt3dadd( 377.697, 681.824, 101.93, 0.2288 ) }
    apic_31 { pt3dadd( 376.665, 682.318, 101.845, 0.2288 ) }
    apic_31 { pt3dadd( 375.635, 682.811, 101.761, 0.2796 ) }
    apic_31 { pt3dadd( 374.603, 683.305, 101.676, 0.3814 ) }
    // Section: apic_30, id: apic_30, parent: apic_29 (entry count 45/100)
    apic_30 { pt3dclear() }
    apic_30 { pt3dadd( 431.288, 617.873, 38.3555, 0.5592 ) }
    apic_30 { pt3dadd( 432.577, 617.861, 37.4139, 0.5848 ) }
    apic_30 { pt3dadd( 433.678, 617.786, 36.675, 0.6102 ) }
    apic_30 { pt3dadd( 434.72, 617.405, 35.9915, 0.6102 ) }
    apic_30 { pt3dadd( 435.664, 616.818, 36.6318, 0.5848 ) }
    apic_30 { pt3dadd( 436.701, 616.373, 36.6792, 0.5084 ) }
    apic_30 { pt3dadd( 437.831, 616.343, 36.6654, 0.4322 ) }
    apic_30 { pt3dadd( 438.936, 616.442, 37.2439, 0.4068 ) }
    apic_30 { pt3dadd( 440.014, 616.173, 37.5245, 0.4576 ) }
    apic_30 { pt3dadd( 440.89, 615.453, 37.5441, 0.5084 ) }
    apic_30 { pt3dadd( 441.681, 614.674, 37.6922, 0.5338 ) }
    apic_30 { pt3dadd( 442.734, 614.367, 38.1335, 0.5592 ) }
    apic_30 { pt3dadd( 443.833, 614.568, 38.4644, 0.6102 ) }
    apic_30 { pt3dadd( 444.939, 614.421, 38.3286, 0.661 ) }
    apic_30 { pt3dadd( 445.954, 614.13, 39.389, 0.661 ) }
    apic_30 { pt3dadd( 446.952, 613.857, 40.2598, 0.6102 ) }
    apic_30 { pt3dadd( 447.984, 613.411, 39.8776, 0.5338 ) }
    apic_30 { pt3dadd( 448.954, 612.804, 39.8006, 0.483 ) }
    apic_30 { pt3dadd( 449.896, 612.16, 39.9504, 0.483 ) }
    apic_30 { pt3dadd( 450.825, 611.531, 40.4359, 0.483 ) }
    apic_30 { pt3dadd( 451.589, 610.728, 39.76, 0.483 ) }
    apic_30 { pt3dadd( 452.191, 609.767, 39.4388, 0.4322 ) }
    apic_30 { pt3dadd( 452.777, 608.87, 38.5162, 0.4068 ) }
    apic_30 { pt3dadd( 453.736, 608.441, 38.2138, 0.3814 ) }
    apic_30 { pt3dadd( 454.405, 609.027, 39.8079, 0.3814 ) }
    apic_30 { pt3dadd( 455.15, 609.673, 39.4447, 0.4068 ) }
    apic_30 { pt3dadd( 456.17, 609.998, 39.38, 0.4322 ) }
    apic_30 { pt3dadd( 457.273, 609.9, 39.9025, 0.4576 ) }
    apic_30 { pt3dadd( 458.306, 609.44, 39.9885, 0.4576 ) }
    apic_30 { pt3dadd( 459.381, 609.291, 40.6134, 0.4576 ) }
    apic_30 { pt3dadd( 460.348, 609.794, 41.0743, 0.483 ) }
    apic_30 { pt3dadd( 460.824, 610.744, 41.9118, 0.483 ) }
    apic_30 { pt3dadd( 461.285, 611.717, 42.8492, 0.483 ) }
    apic_30 { pt3dadd( 461.831, 612.709, 43.1376, 0.4068 ) }
    apic_30 { pt3dadd( 462.789, 612.372, 43.4179, 0.4068 ) }
    apic_30 { pt3dadd( 463.584, 611.999, 45.12, 0.4068 ) }
    apic_30 { pt3dadd( 464.605, 612.448, 45.5076, 0.483 ) }
    apic_30 { pt3dadd( 465.366, 613.301, 45.3611, 0.5084 ) }
    apic_30 { pt3dadd( 466.161, 614.114, 45.365, 0.5338 ) }
    apic_30 { pt3dadd( 467.152, 614.685, 45.3888, 0.5338 ) }
    apic_30 { pt3dadd( 468.15, 615.237, 45.5235, 0.5084 ) }
    apic_30 { pt3dadd( 469.158, 615.719, 46.0807, 0.483 ) }
    apic_30 { pt3dadd( 470.145, 616.126, 47.0705, 0.483 ) }
    apic_30 { pt3dadd( 471.158, 616.591, 47.6941, 0.483 ) }
    apic_30 { pt3dadd( 472.212, 616.951, 48.1804, 0.4576 ) }
    apic_30 { pt3dadd( 473.253, 617.14, 49.1352, 0.4322 ) }
    apic_30 { pt3dadd( 474.28, 617.623, 49.324, 0.4322 ) }
    apic_30 { pt3dadd( 475.143, 618.345, 49.4211, 0.5338 ) }
    apic_30 { pt3dadd( 475.967, 618.995, 48.8555, 0.6356 ) }
    apic_30 { pt3dadd( 477.083, 618.906, 48.9664, 0.7626 ) }
    apic_30 { pt3dadd( 478.079, 618.407, 49.397, 0.788 ) }
    apic_30 { pt3dadd( 479.001, 617.741, 49.4581, 0.7118 ) }
    apic_30 { pt3dadd( 480.016, 617.273, 49.8014, 0.5848 ) }
    apic_30 { pt3dadd( 481.066, 617.015, 50.4795, 0.483 ) }
    apic_30 { pt3dadd( 482.189, 617.073, 50.2872, 0.483 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    apic_30 { pt3dadd( 483.293, 617.284, 49.8716, 0.5084 ) }
    apic_30 { pt3dadd( 484.423, 617.425, 49.9044, 0.5084 ) }
    apic_30 { pt3dadd( 485.549, 617.464, 50.2662, 0.4322 ) }
    apic_30 { pt3dadd( 486.624, 617.588, 51.1482, 0.3814 ) }
    apic_30 { pt3dadd( 487.614, 617.426, 51.9338, 0.356 ) }
    apic_30 { pt3dadd( 488.427, 616.65, 52.2208, 0.4068 ) }
    apic_30 { pt3dadd( 489.174, 615.815, 52.6641, 0.4322 ) }
    apic_30 { pt3dadd( 490.107, 615.237, 52.8321, 0.4576 ) }
    apic_30 { pt3dadd( 491.165, 614.851, 52.369, 0.4576 ) }
    apic_30 { pt3dadd( 492.243, 614.496, 52.2138, 0.4576 ) }
    apic_30 { pt3dadd( 493.326, 614.27, 52.7705, 0.4322 ) }
    apic_30 { pt3dadd( 494.407, 614.196, 53.6556, 0.4068 ) }
    apic_30 { pt3dadd( 495.504, 614.09, 53.7393, 0.4068 ) }
    apic_30 { pt3dadd( 496.596, 613.815, 53.3235, 0.4322 ) }
    apic_30 { pt3dadd( 497.626, 613.598, 53.4811, 0.4322 ) }
    apic_30 { pt3dadd( 498.512, 613.023, 54.5289, 0.4068 ) }
    apic_30 { pt3dadd( 499.51, 612.568, 55.0194, 0.3814 ) }
    apic_30 { pt3dadd( 500.527, 612.081, 54.5706, 0.3814 ) }
    apic_30 { pt3dadd( 501.518, 611.523, 54.32, 0.3814 ) }
    apic_30 { pt3dadd( 502.523, 610.986, 54.32, 0.4322 ) }
    apic_30 { pt3dadd( 503.596, 610.593, 54.32, 0.483 ) }
    apic_30 { pt3dadd( 504.62, 610.103, 54.32, 0.5084 ) }
    apic_30 { pt3dadd( 505.543, 609.426, 54.32, 0.483 ) }
    apic_30 { pt3dadd( 506.445, 608.725, 54.32, 0.483 ) }
    apic_30 { pt3dadd( 507.278, 607.945, 54.32, 0.5338 ) }
    apic_30 { pt3dadd( 507.986, 607.051, 54.3206, 0.5338 ) }
    apic_30 { pt3dadd( 508.573, 606.068, 54.3236, 0.5338 ) }
    apic_30 { pt3dadd( 509.141, 605.075, 54.341, 0.5084 ) }
    apic_30 { pt3dadd( 509.814, 604.165, 54.4247, 0.5338 ) }
    apic_30 { pt3dadd( 510.605, 603.366, 54.8176, 0.483 ) }
    apic_30 { pt3dadd( 511.247, 602.468, 55.4694, 0.3814 ) }
    apic_30 { pt3dadd( 511.681, 601.437, 55.942, 0.305 ) }
    apic_30 { pt3dadd( 512.067, 600.401, 56.0823, 0.2796 ) }
    apic_30 { pt3dadd( 512.728, 599.526, 56.0706, 0.305 ) }
    apic_30 { pt3dadd( 513.305, 598.622, 56.6485, 0.3304 ) }
    apic_30 { pt3dadd( 513.52, 597.507, 56.6826, 0.3814 ) }
    apic_30 { pt3dadd( 513.883, 596.451, 56.5852, 0.5338 ) }
    apic_30 { pt3dadd( 514.487, 595.482, 56.7132, 0.6102 ) }
    apic_30 { pt3dadd( 515.203, 594.713, 57.4963, 0.7118 ) }
    apic_30 { pt3dadd( 516.117, 594.259, 58.7082, 0.6102 ) }
    apic_30 { pt3dadd( 517.077, 593.96, 60.0225, 0.5848 ) }
    apic_30 { pt3dadd( 517.851, 593.393, 61.327, 0.483 ) }
    apic_30 { pt3dadd( 518.323, 592.42, 61.9609, 0.5338 ) }
    apic_30 { pt3dadd( 518.539, 591.318, 61.7341, 0.5338 ) }
    apic_30 { pt3dadd( 518.841, 590.233, 61.5521, 0.5592 ) }
    apic_30 { pt3dadd( 519.323, 589.289, 62.3818, 0.5084 ) }
    apic_30 { pt3dadd( 520.109, 588.588, 63.2607, 0.483 ) }
    apic_30 { pt3dadd( 521.031, 587.983, 64.001, 0.4068 ) }
    apic_30 { pt3dadd( 521.698, 587.151, 64.829, 0.356 ) }
    apic_30 { pt3dadd( 522.487, 586.382, 65.3374, 0.3814 ) }
    apic_30 { pt3dadd( 523.388, 585.703, 65.0801, 0.5084 ) }
    apic_30 { pt3dadd( 524.309, 585.031, 64.9054, 0.6356 ) }
    apic_30 { pt3dadd( 525.356, 584.59, 64.967, 0.6356 ) }
    apic_30 { pt3dadd( 526.406, 584.192, 65.4559, 0.5848 ) }
    apic_30 { pt3dadd( 527.354, 583.597, 65.9638, 0.5338 ) }
    apic_30 { pt3dadd( 528.228, 582.894, 66.5123, 0.5084 ) }
    apic_30 { pt3dadd( 529.049, 582.103, 66.6462, 0.4322 ) }
    apic_30 { pt3dadd( 529.823, 581.262, 66.7047, 0.3304 ) }
    apic_30 { pt3dadd( 530.766, 580.827, 67.7001, 0.2796 ) }
    apic_30 { pt3dadd( 531.203, 579.977, 67.9876, 0.2796 ) }
    apic_30 { pt3dadd( 531.379, 578.853, 68.271, 0.305 ) }
    apic_30 { pt3dadd( 531.554, 577.728, 68.5541, 0.2796 ) }
    apic_30 { pt3dadd( 531.729, 576.604, 68.8374, 0.2542 ) }
    apic_30 { pt3dadd( 531.904, 575.479, 69.1208, 0.2288 ) }
    apic_30 { pt3dadd( 532.078, 574.354, 69.4039, 0.2542 ) }
    apic_30 { pt3dadd( 532.253, 573.23, 69.6872, 0.2796 ) }
    apic_30 { pt3dadd( 532.427, 572.105, 69.9703, 0.356 ) }
    apic_30 { pt3dadd( 532.715, 571.039, 70.6742, 0.3814 ) }
    apic_30 { pt3dadd( 533.018, 569.981, 71.4398, 0.4068 ) }
    apic_30 { pt3dadd( 533.323, 568.924, 72.2053, 0.3304 ) }
    apic_30 { pt3dadd( 533.625, 567.866, 72.9708, 0.2796 ) }
    apic_30 { pt3dadd( 533.771, 566.767, 73.5076, 0.2288 ) }
    apic_30 { pt3dadd( 533.771, 565.631, 73.8312, 0.2542 ) }
    apic_30 { pt3dadd( 533.773, 564.494, 74.1552, 0.2796 ) }
    apic_30 { pt3dadd( 533.773, 563.358, 74.4789, 0.305 ) }
    apic_30 { pt3dadd( 533.773, 562.222, 74.8026, 0.305 ) }
    apic_30 { pt3dadd( 533.773, 561.086, 75.1262, 0.3304 ) }
    apic_30 { pt3dadd( 533.773, 559.949, 75.4499, 0.356 ) }
    apic_30 { pt3dadd( 534.111, 558.891, 75.4261, 0.356 ) }
    apic_30 { pt3dadd( 534.628, 557.874, 75.2167, 0.4068 ) }
    apic_30 { pt3dadd( 535.145, 556.857, 75.007, 0.5084 ) }
    // Section: apic_24, id: apic_24, parent: apic_2 (entry count 81/100)
    apic_24 { pt3dclear() }
    apic_24 { pt3dadd( 425.339, 617.119, 36.4501, 0.5084 ) }
    apic_24 { pt3dadd( 425.273, 616.275, 36.0604, 0.4322 ) }
    apic_24 { pt3dadd( 424.996, 615.3, 34.7794, 0.5338 ) }
    apic_24 { pt3dadd( 424.888, 614.231, 33.9424, 0.5848 ) }
    apic_24 { pt3dadd( 424.93, 613.089, 34.0536, 0.6356 ) }
    apic_24 { pt3dadd( 425.157, 611.987, 34.1429, 0.661 ) }
    apic_24 { pt3dadd( 425.816, 611.062, 34.078, 0.7118 ) }
    apic_24 { pt3dadd( 426.702, 610.366, 33.7999, 0.6864 ) }
    apic_24 { pt3dadd( 427.724, 609.926, 33.2108, 0.6356 ) }
    apic_24 { pt3dadd( 428.806, 609.559, 33.059, 0.5338 ) }
    apic_24 { pt3dadd( 429.89, 609.196, 33.1083, 0.5084 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 92/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 425.339, 617.119, 36.4501, 0.5084 ) }
    apic_3 { pt3dadd( 424.54, 616.989, 35.9993, 0.6864 ) }
    apic_3 { pt3dadd( 423.48, 616.854, 35.0339, 0.7372 ) }
    apic_3 { pt3dadd( 422.461, 616.479, 34.3196, 0.8644 ) }
    apic_3 { pt3dadd( 421.577, 615.78, 34.1617, 0.9152 ) }
    apic_3 { pt3dadd( 420.919, 614.854, 34.1687, 0.9152 ) }
    apic_3 { pt3dadd( 420.444, 613.817, 34.2112, 0.839 ) }
    apic_3 { pt3dadd( 420.285, 612.703, 34.4744, 0.8136 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    apic_3 { pt3dadd( 420.178, 611.679, 35.5799, 0.8644 ) }
    apic_3 { pt3dadd( 419.708, 610.693, 36.3426, 0.8898 ) }
    apic_3 { pt3dadd( 418.807, 610.01, 36.4, 0.8898 ) }
    apic_3 { pt3dadd( 417.874, 609.348, 36.3997, 0.788 ) }
    apic_3 { pt3dadd( 417.251, 608.394, 36.3986, 0.788 ) }
    apic_3 { pt3dadd( 416.67, 607.408, 36.393, 0.788 ) }
    apic_3 { pt3dadd( 415.97, 606.504, 36.3672, 0.8898 ) }
    apic_3 { pt3dadd( 415.556, 605.443, 36.1964, 0.9406 ) }
    apic_3 { pt3dadd( 415.129, 604.435, 35.3892, 0.966 ) }
    apic_3 { pt3dadd( 414.868, 603.398, 34.3916, 0.9406 ) }
    apic_3 { pt3dadd( 415.038, 602.273, 34.1704, 0.9152 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 11/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 347.053, 656.816, 27.8642, 0.4322 ) }
    dend_23 { pt3dadd( 346.863, 657.18, 28.7232, 0.2796 ) }
    dend_23 { pt3dadd( 346.258, 657.927, 30.07, 0.305 ) }
    dend_23 { pt3dadd( 345.338, 658.523, 30.7504, 0.3304 ) }
    dend_23 { pt3dadd( 344.298, 658.906, 31.3942, 0.4068 ) }
    dend_23 { pt3dadd( 343.198, 659.052, 31.9435, 0.5084 ) }
    dend_23 { pt3dadd( 342.16, 659.066, 31.2684, 0.5592 ) }
    dend_23 { pt3dadd( 341.13, 659.111, 30.1092, 0.5084 ) }
    dend_23 { pt3dadd( 340.036, 659.317, 29.7032, 0.4322 ) }
    dend_23 { pt3dadd( 338.908, 659.428, 29.6663, 0.3814 ) }
    dend_23 { pt3dadd( 337.805, 659.19, 29.5938, 0.3814 ) }
    dend_23 { pt3dadd( 336.758, 658.776, 29.1704, 0.3814 ) }
    dend_23 { pt3dadd( 335.71, 658.427, 28.4614, 0.4068 ) }
    dend_23 { pt3dadd( 334.622, 658.361, 27.7236, 0.4576 ) }
    dend_23 { pt3dadd( 333.53, 658.61, 27.3638, 0.483 ) }
    dend_23 { pt3dadd( 332.465, 658.954, 26.854, 0.4576 ) }
    dend_23 { pt3dadd( 331.35, 659.098, 26.6913, 0.3814 ) }
    dend_23 { pt3dadd( 330.251, 659.311, 27.1309, 0.356 ) }
    dend_23 { pt3dadd( 329.172, 659.664, 27.3722, 0.3304 ) }
    dend_23 { pt3dadd( 328.061, 659.651, 27.1883, 0.356 ) }
    dend_23 { pt3dadd( 326.938, 659.593, 27.4968, 0.3304 ) }
    dend_23 { pt3dadd( 325.849, 659.87, 27.7449, 0.356 ) }
    dend_23 { pt3dadd( 324.746, 660.08, 27.323, 0.3304 ) }
    dend_23 { pt3dadd( 323.805, 660.583, 28.0882, 0.3814 ) }
    dend_23 { pt3dadd( 322.844, 661.185, 28.2694, 0.3814 ) }
    dend_23 { pt3dadd( 321.789, 661.339, 27.384, 0.4576 ) }
    dend_23 { pt3dadd( 320.706, 661.364, 26.4838, 0.4322 ) }
    dend_23 { pt3dadd( 319.571, 661.455, 26.3782, 0.483 ) }
    dend_23 { pt3dadd( 318.496, 661.821, 26.6381, 0.483 ) }
    dend_23 { pt3dadd( 317.469, 662.244, 27.2978, 0.5592 ) }
    dend_23 { pt3dadd( 316.506, 662.855, 27.3426, 0.5338 ) }
    dend_23 { pt3dadd( 315.575, 663.502, 26.9788, 0.5084 ) }
    dend_23 { pt3dadd( 314.517, 663.855, 26.3805, 0.4576 ) }
    dend_23 { pt3dadd( 313.382, 663.981, 26.3838, 0.5084 ) }
    dend_23 { pt3dadd( 312.388, 664.506, 26.8506, 0.5848 ) }
    dend_23 { pt3dadd( 311.457, 665.155, 26.5311, 0.6864 ) }
    dend_23 { pt3dadd( 310.415, 665.515, 25.7796, 0.7118 ) }
    dend_23 { pt3dadd( 309.355, 665.859, 25.1924, 0.6864 ) }
    dend_23 { pt3dadd( 308.394, 666.474, 25.0695, 0.6102 ) }
    dend_23 { pt3dadd( 307.659, 667.299, 24.3981, 0.5338 ) }
    dend_23 { pt3dadd( 307.132, 667.956, 22.6145, 0.4322 ) }
    dend_23 { pt3dadd( 306.536, 668.559, 20.7399, 0.3304 ) }
    dend_23 { pt3dadd( 305.691, 669.199, 21.0291, 0.2542 ) }
    dend_23 { pt3dadd( 304.924, 669.852, 22.3437, 0.2542 ) }
    dend_23 { pt3dadd( 304.226, 670.251, 24.3275, 0.2796 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 56/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 347.053, 656.816, 27.8642, 0.4322 ) }
    dend_22 { pt3dadd( 345.992, 657.008, 28.4847, 0.356 ) }
    dend_22 { pt3dadd( 344.969, 657.325, 28.0871, 0.4322 ) }
    dend_22 { pt3dadd( 343.963, 656.924, 27.4758, 0.5338 ) }
    dend_22 { pt3dadd( 343.07, 656.211, 27.4588, 0.5592 ) }
    dend_22 { pt3dadd( 342.183, 655.495, 27.526, 0.5084 ) }
    dend_22 { pt3dadd( 341.168, 655.131, 27.8286, 0.4068 ) }
    dend_22 { pt3dadd( 340.111, 655.143, 27.6335, 0.356 ) }
    dend_22 { pt3dadd( 339.401, 654.739, 25.9372, 0.4068 ) }
    dend_22 { pt3dadd( 338.896, 654.04, 24.1088, 0.483 ) }
    dend_22 { pt3dadd( 338.308, 653.202, 23.1092, 0.5084 ) }
    dend_22 { pt3dadd( 337.596, 652.321, 22.9202, 0.4576 ) }
    dend_22 { pt3dadd( 336.618, 651.863, 22.6775, 0.4068 ) }
    dend_22 { pt3dadd( 335.517, 651.954, 22.2096, 0.356 ) }
    dend_22 { pt3dadd( 334.463, 652.327, 22.3311, 0.305 ) }
    dend_22 { pt3dadd( 333.452, 652.184, 22.8085, 0.305 ) }
    dend_22 { pt3dadd( 332.532, 651.519, 22.9096, 0.3814 ) }
    dend_22 { pt3dadd( 331.531, 651.021, 22.6044, 0.483 ) }
    dend_22 { pt3dadd( 330.553, 650.596, 21.6681, 0.5338 ) }
    dend_22 { pt3dadd( 329.545, 650.13, 21.3444, 0.5084 ) }
    dend_22 { pt3dadd( 328.477, 650.254, 21.0255, 0.5338 ) }
    dend_22 { pt3dadd( 327.578, 650.922, 20.7648, 0.5338 ) }
    dend_22 { pt3dadd( 326.78, 651.741, 20.7197, 0.5848 ) }
    dend_22 { pt3dadd( 326.073, 652.638, 20.7183, 0.5338 ) }
    dend_22 { pt3dadd( 325.24, 653.416, 20.711, 0.5084 ) }
    dend_22 { pt3dadd( 324.238, 653.954, 20.6718, 0.4068 ) }
    dend_22 { pt3dadd( 323.155, 654.296, 20.4036, 0.356 ) }
    dend_22 { pt3dadd( 322.101, 654.05, 19.7761, 0.305 ) }
    dend_22 { pt3dadd( 320.975, 653.917, 19.6154, 0.3304 ) }
    dend_22 { pt3dadd( 319.951, 654.39, 19.6459, 0.3814 ) }
    dend_22 { pt3dadd( 318.923, 654.883, 19.8999, 0.483 ) }
    dend_22 { pt3dadd( 317.803, 655.101, 19.929, 0.5848 ) }
    dend_22 { pt3dadd( 316.723, 655.45, 19.6042, 0.6356 ) }
    dend_22 { pt3dadd( 315.629, 655.782, 19.607, 0.5592 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 90/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 469.94, 595.057, 27.3118, 0.4576 ) }
    dend_10 { pt3dadd( 469.72, 594.536, 27.3717, 0.4322 ) }
    dend_10 { pt3dadd( 469.233, 593.515, 26.9629, 0.4576 ) }
    dend_10 { pt3dadd( 468.714, 592.531, 26.5899, 0.4576 ) }
    dend_10 { pt3dadd( 468.527, 591.469, 27.3437, 0.483 ) }
    dend_10 { pt3dadd( 468.859, 590.418, 28.084, 0.5084 ) }
    dend_10 { pt3dadd( 469.32, 589.397, 28.5796, 0.5592 ) }
    dend_10 { pt3dadd( 469.907, 588.42, 28.7641, 0.6102 ) }
    dend_10 { pt3dadd( 470.436, 587.422, 29.1018, 0.6356 ) }
    dend_10 { pt3dadd( 471.035, 586.458, 28.8291, 0.6102 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_10 { pt3dadd( 471.758, 585.58, 28.5863, 0.5338 ) }
    dend_10 { pt3dadd( 472.47, 584.69, 28.6885, 0.4576 ) }
    dend_10 { pt3dadd( 473.042, 583.715, 29.0657, 0.4068 ) }
    dend_10 { pt3dadd( 473.672, 582.792, 29.5943, 0.3814 ) }
    dend_10 { pt3dadd( 474.405, 581.916, 29.6164, 0.4068 ) }
    dend_10 { pt3dadd( 475.022, 580.974, 29.57, 0.4322 ) }
    dend_10 { pt3dadd( 475.172, 579.854, 29.6867, 0.4576 ) }
    dend_10 { pt3dadd( 475.036, 578.724, 29.7234, 0.4322 ) }
    dend_10 { pt3dadd( 474.884, 577.596, 29.841, 0.3814 ) }
    dend_10 { pt3dadd( 475.038, 576.515, 29.4059, 0.3304 ) }
    dend_10 { pt3dadd( 475.299, 575.448, 28.6588, 0.356 ) }
    dend_10 { pt3dadd( 475.625, 574.389, 27.9941, 0.4068 ) }
    dend_10 { pt3dadd( 476.126, 573.384, 27.55, 0.483 ) }
    dend_10 { pt3dadd( 476.743, 572.424, 27.4366, 0.483 ) }
    dend_10 { pt3dadd( 477.255, 571.41, 27.4204, 0.5084 ) }
    dend_10 { pt3dadd( 477.769, 570.39, 27.3325, 0.483 ) }
    dend_10 { pt3dadd( 478.368, 569.437, 26.9024, 0.5084 ) }
    dend_10 { pt3dadd( 479.02, 568.522, 26.3945, 0.5084 ) }
    dend_10 { pt3dadd( 479.607, 567.558, 26.0, 0.5338 ) }
    dend_10 { pt3dadd( 479.98, 566.489, 25.989, 0.483 ) }
    dend_10 { pt3dadd( 480.407, 565.459, 25.6035, 0.4322 ) }
    dend_10 { pt3dadd( 480.954, 564.47, 25.2246, 0.3814 ) }
    dend_10 { pt3dadd( 481.609, 563.538, 25.0323, 0.4322 ) }
    dend_10 { pt3dadd( 482.028, 562.514, 24.5669, 0.4576 ) }
    dend_10 { pt3dadd( 482.262, 561.403, 24.3508, 0.4576 ) }
    dend_10 { pt3dadd( 482.549, 560.3, 24.5129, 0.3814 ) }
    dend_10 { pt3dadd( 482.823, 559.223, 24.0276, 0.3814 ) }
    dend_10 { pt3dadd( 482.615, 558.312, 22.591, 0.4322 ) }
    dend_10 { pt3dadd( 482.273, 557.29, 21.7666, 0.5084 ) }
    dend_10 { pt3dadd( 482.104, 556.204, 21.0171, 0.5084 ) }
    dend_10 { pt3dadd( 482.082, 555.085, 20.4674, 0.4576 ) }
    dend_10 { pt3dadd( 482.081, 553.976, 19.7823, 0.3814 ) }
    dend_10 { pt3dadd( 482.078, 552.839, 19.6092, 0.3304 ) }
    dend_10 { pt3dadd( 482.053, 551.695, 19.5975, 0.305 ) }
    dend_10 { pt3dadd( 481.884, 550.566, 19.5818, 0.305 ) }
    dend_10 { pt3dadd( 481.204, 549.679, 19.4911, 0.2796 ) }
    dend_10 { pt3dadd( 480.335, 549.06, 18.5797, 0.2542 ) }
    dend_10 { pt3dadd( 480.448, 548.394, 18.3764, 0.2288 ) }
    dend_10 { pt3dadd( 480.394, 547.328, 19.395, 0.2288 ) }
    dend_10 { pt3dadd( 480.34, 546.265, 20.4134, 0.2288 ) }
    dend_10 { pt3dadd( 480.286, 545.201, 21.432, 0.2542 ) }
    dend_10 { pt3dadd( 480.234, 544.136, 22.4504, 0.2796 ) }
    dend_10 { pt3dadd( 480.172, 543.062, 23.3355, 0.3304 ) }
    dend_10 { pt3dadd( 480.059, 541.924, 23.3355, 0.356 ) }
    dend_10 { pt3dadd( 479.947, 540.785, 23.3355, 0.4068 ) }
    dend_10 { pt3dadd( 479.76, 539.657, 23.3355, 0.4576 ) }
    dend_10 { pt3dadd( 479.656, 538.529, 23.3355, 0.483 ) }
    dend_10 { pt3dadd( 479.879, 537.407, 23.3355, 0.4576 ) }
    dend_10 { pt3dadd( 480.105, 536.286, 23.3355, 0.3814 ) }
    dend_10 { pt3dadd( 480.362, 535.171, 23.3355, 0.356 ) }
    dend_10 { pt3dadd( 480.62, 534.056, 23.3355, 0.356 ) }
    dend_10 { pt3dadd( 480.558, 532.983, 23.8879, 0.356 ) }
    dend_10 { pt3dadd( 480.288, 531.936, 24.8063, 0.305 ) }
    dend_10 { pt3dadd( 480.213, 530.814, 25.0023, 0.2796 ) }
    dend_10 { pt3dadd( 480.305, 529.679, 25.0023, 0.2796 ) }
    dend_10 { pt3dadd( 480.351, 528.626, 25.1082, 0.305 ) }
    dend_10 { pt3dadd( 479.415, 528.051, 25.8899, 0.2796 ) }
    dend_10 { pt3dadd( 478.48, 527.473, 26.6692, 0.305 ) }
    dend_10 { pt3dadd( 477.978, 526.446, 26.6692, 0.3304 ) }
    dend_10 { pt3dadd( 477.223, 525.603, 26.6692, 0.3814 ) }
    dend_10 { pt3dadd( 476.349, 524.865, 26.6692, 0.356 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 61/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 469.94, 595.057, 27.3118, 0.4576 ) }
    dend_9 { pt3dadd( 470.258, 594.739, 27.0852, 0.3304 ) }
    dend_9 { pt3dadd( 471.14, 594.039, 26.6703, 0.3304 ) }
    dend_9 { pt3dadd( 472.074, 593.412, 26.9517, 0.3304 ) }
    dend_9 { pt3dadd( 472.956, 592.733, 26.6896, 0.356 ) }
    dend_9 { pt3dadd( 473.881, 592.141, 25.9384, 0.3304 ) }
    dend_9 { pt3dadd( 474.861, 591.693, 26.437, 0.3304 ) }
    dend_9 { pt3dadd( 475.644, 590.933, 26.3791, 0.2796 ) }
    dend_9 { pt3dadd( 476.269, 590.024, 25.6606, 0.305 ) }
    dend_9 { pt3dadd( 477.169, 589.472, 26.4093, 0.3814 ) }
    dend_9 { pt3dadd( 478.184, 589.017, 27.0474, 0.483 ) }
    dend_9 { pt3dadd( 479.036, 588.484, 25.8348, 0.483 ) }
    dend_9 { pt3dadd( 479.497, 587.769, 25.387, 0.4068 ) }
    dend_9 { pt3dadd( 480.095, 586.87, 24.4608, 0.356 ) }
    dend_9 { pt3dadd( 480.39, 585.782, 24.4468, 0.356 ) }
    dend_9 { pt3dadd( 480.833, 584.87, 24.0366, 0.3814 ) }
    dend_9 { pt3dadd( 481.681, 584.171, 23.2546, 0.356 ) }
    dend_9 { pt3dadd( 482.528, 583.472, 22.4722, 0.356 ) }
    dend_9 { pt3dadd( 483.515, 583.558, 22.2244, 0.3304 ) }
    dend_9 { pt3dadd( 484.588, 583.694, 22.2244, 0.3814 ) }
    dend_9 { pt3dadd( 485.413, 583.053, 22.2244, 0.4068 ) }
    dend_9 { pt3dadd( 486.085, 582.229, 21.2587, 0.4576 ) }
    dend_9 { pt3dadd( 486.772, 581.422, 20.2006, 0.4068 ) }
    dend_9 { pt3dadd( 486.385, 580.499, 20.0018, 0.356 ) }
    dend_9 { pt3dadd( 486.404, 579.385, 20.0018, 0.356 ) }
    dend_9 { pt3dadd( 487.26, 578.899, 19.2203, 0.4322 ) }
    dend_9 { pt3dadd( 488.282, 578.634, 18.1395, 0.483 ) }
    dend_9 { pt3dadd( 489.353, 578.326, 17.7794, 0.4322 ) }
    dend_9 { pt3dadd( 489.736, 577.357, 17.7794, 0.3304 ) }
    dend_9 { pt3dadd( 489.456, 576.402, 17.7794, 0.2796 ) }
    dend_9 { pt3dadd( 489.094, 575.423, 17.7794, 0.305 ) }
    // Section: apic_28, id: apic_28, parent: apic_24 (entry count 92/100)
    apic_28 { pt3dclear() }
    apic_28 { pt3dadd( 429.89, 609.196, 33.1083, 0.5084 ) }
    apic_28 { pt3dadd( 430.702, 609.402, 32.221, 0.5338 ) }
    apic_28 { pt3dadd( 431.585, 609.767, 30.6804, 0.4576 ) }
    apic_28 { pt3dadd( 431.727, 610.688, 30.5584, 0.4068 ) }
    apic_28 { pt3dadd( 430.897, 611.094, 29.729, 0.356 ) }
    apic_28 { pt3dadd( 430.323, 610.74, 27.7052, 0.3304 ) }
    apic_28 { pt3dadd( 429.94, 609.91, 26.0221, 0.305 ) }
    apic_28 { pt3dadd( 429.595, 609.06, 24.4468, 0.305 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    apic_28 { pt3dadd( 429.795, 607.933, 24.4468, 0.305 ) }
    apic_28 { pt3dadd( 430.642, 607.276, 24.4468, 0.305 ) }
    apic_28 { pt3dadd( 430.883, 606.205, 24.4468, 0.305 ) }
    apic_28 { pt3dadd( 430.331, 605.761, 22.5912, 0.356 ) }
    apic_28 { pt3dadd( 429.579, 606.066, 21.6686, 0.3814 ) }
    apic_28 { pt3dadd( 428.709, 606.135, 21.6686, 0.4322 ) }
    apic_28 { pt3dadd( 428.48, 605.139, 21.6686, 0.4068 ) }
    apic_28 { pt3dadd( 428.015, 604.602, 20.9784, 0.4068 ) }
    apic_28 { pt3dadd( 427.078, 604.799, 19.4463, 0.356 ) }
    // Section: apic_25, id: apic_25, parent: apic_24 (entry count 9/100)
    apic_25 { pt3dclear() }
    apic_25 { pt3dadd( 429.89, 609.196, 33.1083, 0.5084 ) }
    apic_25 { pt3dadd( 430.945, 608.363, 33.7456, 0.356 ) }
    apic_25 { pt3dadd( 431.875, 607.843, 34.6139, 0.356 ) }
    // Section: apic_23, id: apic_23, parent: apic_3 (entry count 12/100)
    apic_23 { pt3dclear() }
    apic_23 { pt3dadd( 415.038, 602.273, 34.1704, 0.9152 ) }
    apic_23 { pt3dadd( 416.032, 600.98, 32.5581, 0.483 ) }
    apic_23 { pt3dadd( 416.678, 600.253, 32.2252, 0.483 ) }
    apic_23 { pt3dadd( 415.874, 599.465, 32.2252, 0.5848 ) }
    apic_23 { pt3dadd( 414.911, 599.226, 31.0282, 0.6864 ) }
    apic_23 { pt3dadd( 413.827, 599.223, 30.5584, 0.7372 ) }
    apic_23 { pt3dadd( 412.685, 599.289, 30.5584, 0.661 ) }
    apic_23 { pt3dadd( 411.545, 599.29, 30.5584, 0.5338 ) }
    apic_23 { pt3dadd( 410.482, 599.116, 30.4973, 0.4322 ) }
    apic_23 { pt3dadd( 410.715, 598.094, 29.3826, 0.356 ) }
    apic_23 { pt3dadd( 410.941, 597.063, 28.336, 0.3814 ) }
    apic_23 { pt3dadd( 411.032, 595.922, 28.336, 0.3814 ) }
    apic_23 { pt3dadd( 411.221, 594.844, 28.0204, 0.4576 ) }
    apic_23 { pt3dadd( 411.719, 593.967, 26.7019, 0.4322 ) }
    apic_23 { pt3dadd( 412.215, 593.089, 25.3837, 0.4576 ) }
    apic_23 { pt3dadd( 413.117, 592.602, 25.0023, 0.3814 ) }
    apic_23 { pt3dadd( 413.374, 591.586, 25.0023, 0.356 ) }
    apic_23 { pt3dadd( 412.578, 591.008, 24.1234, 0.2796 ) }
    apic_23 { pt3dadd( 411.62, 590.593, 22.9695, 0.2542 ) }
    apic_23 { pt3dadd( 410.71, 590.226, 22.78, 0.2288 ) }
    apic_23 { pt3dadd( 410.81, 590.534, 21.2038, 0.2288 ) }
    apic_23 { pt3dadd( 410.976, 591.289, 19.1402, 0.2542 ) }
    apic_23 { pt3dadd( 410.059, 591.646, 18.8908, 0.2796 ) }
    apic_23 { pt3dadd( 409.867, 590.519, 18.8908, 0.3304 ) }
    apic_23 { pt3dadd( 410.233, 589.523, 18.8908, 0.3304 ) }
    apic_23 { pt3dadd( 410.729, 588.54, 18.4134, 0.3304 ) }
    apic_23 { pt3dadd( 411.077, 587.51, 17.5406, 0.2796 ) }
    apic_23 { pt3dadd( 411.424, 586.481, 16.6681, 0.2542 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 40/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 415.038, 602.273, 34.1704, 0.9152 ) }
    apic_4 { pt3dadd( 414.829, 601.405, 34.2188, 0.6356 ) }
    apic_4 { pt3dadd( 414.195, 600.483, 34.5195, 0.661 ) }
    apic_4 { pt3dadd( 413.702, 599.637, 35.8602, 0.7118 ) }
    apic_4 { pt3dadd( 413.0, 598.794, 36.6442, 0.661 ) }
    apic_4 { pt3dadd( 412.066, 598.194, 37.331, 0.6864 ) }
    apic_4 { pt3dadd( 411.154, 597.507, 37.2375, 0.6356 ) }
    // Section: apic_27, id: apic_27, parent: apic_25 (entry count 47/100)
    apic_27 { pt3dclear() }
    apic_27 { pt3dadd( 431.875, 607.843, 34.6139, 0.356 ) }
    apic_27 { pt3dadd( 431.989, 607.823, 33.4846, 0.305 ) }
    apic_27 { pt3dadd( 432.349, 607.152, 31.3936, 0.2542 ) }
    apic_27 { pt3dadd( 432.708, 606.481, 29.3026, 0.2542 ) }
    apic_27 { pt3dadd( 432.812, 605.443, 28.8915, 0.305 ) }
    apic_27 { pt3dadd( 433.415, 604.53, 28.8915, 0.3814 ) }
    apic_27 { pt3dadd( 434.015, 603.585, 28.8915, 0.4322 ) }
    apic_27 { pt3dadd( 434.204, 602.492, 28.8274, 0.4576 ) }
    apic_27 { pt3dadd( 435.079, 601.8, 28.1946, 0.4576 ) }
    apic_27 { pt3dadd( 435.953, 601.108, 27.5618, 0.4322 ) }
    apic_27 { pt3dadd( 436.89, 600.488, 27.2247, 0.4068 ) }
    apic_27 { pt3dadd( 437.75, 599.755, 27.2247, 0.356 ) }
    apic_27 { pt3dadd( 438.305, 598.774, 27.0838, 0.3304 ) }
    apic_27 { pt3dadd( 438.557, 597.709, 26.2679, 0.2796 ) }
    apic_27 { pt3dadd( 438.88, 596.675, 25.5578, 0.2542 ) }
    apic_27 { pt3dadd( 439.67, 595.849, 25.5578, 0.2288 ) }
    apic_27 { pt3dadd( 440.432, 595.023, 25.1034, 0.2288 ) }
    apic_27 { pt3dadd( 441.186, 594.197, 24.512, 0.2796 ) }
    apic_27 { pt3dadd( 441.94, 593.371, 23.9204, 0.3304 ) }
    apic_27 { pt3dadd( 442.693, 592.544, 23.3296, 0.4068 ) }
    apic_27 { pt3dadd( 443.309, 591.606, 22.7898, 0.3814 ) }
    apic_27 { pt3dadd( 443.926, 590.668, 22.2502, 0.356 ) }
    apic_27 { pt3dadd( 444.542, 589.73, 21.7104, 0.2796 ) }
    apic_27 { pt3dadd( 445.16, 588.792, 21.1708, 0.2542 ) }
    apic_27 { pt3dadd( 445.895, 587.932, 20.7715, 0.2288 ) }
    apic_27 { pt3dadd( 446.644, 587.083, 20.389, 0.2542 ) }
    apic_27 { pt3dadd( 447.393, 586.232, 20.0066, 0.2796 ) }
    apic_27 { pt3dadd( 448.143, 585.383, 19.6241, 0.305 ) }
    apic_27 { pt3dadd( 448.812, 584.471, 19.2606, 0.2796 ) }
    apic_27 { pt3dadd( 449.411, 583.508, 18.9134, 0.2542 ) }
    apic_27 { pt3dadd( 450.012, 582.543, 18.5662, 0.2288 ) }
    apic_27 { pt3dadd( 450.611, 581.58, 18.219, 0.2288 ) }
    apic_27 { pt3dadd( 451.211, 580.615, 17.8718, 0.2288 ) }
    apic_27 { pt3dadd( 451.764, 579.618, 17.7794, 0.2288 ) }
    apic_27 { pt3dadd( 452.302, 578.608, 17.7794, 0.2288 ) }
    apic_27 { pt3dadd( 452.84, 577.598, 17.7794, 0.2288 ) }
    apic_27 { pt3dadd( 453.376, 576.587, 17.7794, 0.2288 ) }
    apic_27 { pt3dadd( 453.982, 575.621, 17.7794, 0.2288 ) }
    apic_27 { pt3dadd( 454.652, 574.693, 17.7794, 0.2542 ) }
    apic_27 { pt3dadd( 455.322, 573.766, 17.7794, 0.2796 ) }
    // Section: apic_26, id: apic_26, parent: apic_25 (entry count 87/100)
    apic_26 { pt3dclear() }
    apic_26 { pt3dadd( 431.875, 607.843, 34.6139, 0.356 ) }
    apic_26 { pt3dadd( 432.398, 607.823, 35.1056, 0.3304 ) }
    apic_26 { pt3dadd( 433.5, 607.791, 35.5065, 0.356 ) }
    apic_26 { pt3dadd( 434.577, 607.71, 34.7544, 0.4068 ) }
    apic_26 { pt3dadd( 435.635, 607.456, 34.0995, 0.4322 ) }
    apic_26 { pt3dadd( 436.674, 607.113, 34.6105, 0.4322 ) }
    apic_26 { pt3dadd( 437.628, 606.58, 35.238, 0.4068 ) }
    apic_26 { pt3dadd( 438.641, 606.107, 35.6152, 0.3814 ) }
    apic_26 { pt3dadd( 439.579, 605.919, 36.3894, 0.3814 ) }
    apic_26 { pt3dadd( 440.508, 605.91, 38.0265, 0.356 ) }
    apic_26 { pt3dadd( 441.536, 605.866, 38.8926, 0.305 ) }
    apic_26 { pt3dadd( 442.556, 605.394, 38.8926, 0.2542 ) }
    apic_26 { pt3dadd( 443.522, 604.787, 38.8926, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    apic_26 { pt3dadd( 444.383, 604.037, 38.9049, 0.2542 ) }
    apic_26 { pt3dadd( 445.372, 603.547, 39.6553, 0.3304 ) }
    apic_26 { pt3dadd( 446.359, 603.058, 40.4057, 0.4068 ) }
    apic_26 { pt3dadd( 447.346, 602.569, 41.1558, 0.4576 ) }
    apic_26 { pt3dadd( 448.275, 601.976, 41.6707, 0.4576 ) }
    apic_26 { pt3dadd( 448.689, 600.991, 41.6707, 0.4576 ) }
    apic_26 { pt3dadd( 448.74, 599.848, 41.6707, 0.4322 ) }
    apic_26 { pt3dadd( 449.658, 599.253, 42.422, 0.3814 ) }
    apic_26 { pt3dadd( 450.591, 598.668, 43.185, 0.3304 ) }
    apic_26 { pt3dadd( 451.523, 598.083, 43.948, 0.3304 ) }
    apic_26 { pt3dadd( 452.463, 597.485, 44.4486, 0.3814 ) }
    apic_26 { pt3dadd( 453.423, 596.861, 44.4486, 0.4322 ) }
    apic_26 { pt3dadd( 454.096, 596.013, 43.9253, 0.4576 ) }
    apic_26 { pt3dadd( 454.629, 595.052, 43.1399, 0.4068 ) }
    apic_26 { pt3dadd( 455.16, 594.091, 42.3545, 0.356 ) }
    apic_26 { pt3dadd( 455.73, 593.132, 41.7449, 0.2796 ) }
    apic_26 { pt3dadd( 456.31, 592.173, 41.1695, 0.2542 ) }
    apic_26 { pt3dadd( 456.888, 591.216, 40.5941, 0.2288 ) }
    apic_26 { pt3dadd( 457.467, 590.257, 40.0187, 0.2796 ) }
    apic_26 { pt3dadd( 457.857, 589.238, 39.1815, 0.356 ) }
    apic_26 { pt3dadd( 458.242, 588.217, 38.337, 0.4322 ) }
    // Section: apic_6, id: apic_6, parent: apic_4 (entry count 21/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 411.154, 597.507, 37.2375, 0.6356 ) }
    apic_6 { pt3dadd( 410.726, 596.765, 37.5396, 0.5084 ) }
    apic_6 { pt3dadd( 410.492, 595.669, 37.9949, 0.5084 ) }
    apic_6 { pt3dadd( 409.904, 594.73, 38.5697, 0.483 ) }
    apic_6 { pt3dadd( 409.062, 593.956, 38.605, 0.483 ) }
    apic_6 { pt3dadd( 408.298, 593.122, 38.4292, 0.483 ) }
    apic_6 { pt3dadd( 407.77, 592.13, 37.9008, 0.5084 ) }
    apic_6 { pt3dadd( 407.194, 591.16, 37.5304, 0.5084 ) }
    apic_6 { pt3dadd( 406.469, 590.275, 37.5659, 0.4322 ) }
    apic_6 { pt3dadd( 405.734, 589.408, 37.7451, 0.356 ) }
    apic_6 { pt3dadd( 405.26, 588.412, 38.2474, 0.356 ) }
    apic_6 { pt3dadd( 405.188, 587.283, 38.4378, 0.4576 ) }
    apic_6 { pt3dadd( 405.091, 586.167, 37.9154, 0.5592 ) }
    apic_6 { pt3dadd( 404.838, 585.068, 37.5113, 0.5848 ) }
    apic_6 { pt3dadd( 404.536, 583.977, 37.4455, 0.5084 ) }
    apic_6 { pt3dadd( 403.798, 583.281, 37.417, 0.4322 ) }
    apic_6 { pt3dadd( 403.808, 582.296, 37.9028, 0.356 ) }
    apic_6 { pt3dadd( 403.717, 581.198, 38.5644, 0.356 ) }
    apic_6 { pt3dadd( 403.321, 580.141, 38.6571, 0.3304 ) }
    apic_6 { pt3dadd( 402.609, 579.245, 38.7178, 0.3814 ) }
    apic_6 { pt3dadd( 401.991, 578.301, 38.9948, 0.4068 ) }
    apic_6 { pt3dadd( 401.557, 577.278, 39.6088, 0.483 ) }
    apic_6 { pt3dadd( 400.984, 576.291, 39.76, 0.483 ) }
    apic_6 { pt3dadd( 400.345, 575.343, 39.76, 0.4576 ) }
    apic_6 { pt3dadd( 399.688, 574.406, 39.7603, 0.3814 ) }
    apic_6 { pt3dadd( 399.417, 573.336, 39.7617, 0.3304 ) }
    apic_6 { pt3dadd( 399.751, 572.28, 39.769, 0.3304 ) }
    apic_6 { pt3dadd( 400.132, 571.207, 39.8188, 0.3814 ) }
    apic_6 { pt3dadd( 400.391, 570.106, 40.1668, 0.4322 ) }
    apic_6 { pt3dadd( 400.272, 569.015, 40.7156, 0.4576 ) }
    apic_6 { pt3dadd( 399.716, 568.039, 40.8778, 0.483 ) }
    apic_6 { pt3dadd( 398.938, 567.207, 40.88, 0.5084 ) }
    apic_6 { pt3dadd( 398.298, 566.269, 40.88, 0.5592 ) }
    apic_6 { pt3dadd( 397.655, 565.324, 40.88, 0.5592 ) }
    apic_6 { pt3dadd( 396.883, 564.483, 40.8806, 0.5592 ) }
    apic_6 { pt3dadd( 396.072, 563.675, 40.8817, 0.5084 ) }
    apic_6 { pt3dadd( 395.254, 562.875, 40.8859, 0.483 ) }
    apic_6 { pt3dadd( 394.409, 562.106, 40.9049, 0.4576 ) }
    apic_6 { pt3dadd( 393.488, 561.433, 41.0161, 0.483 ) }
    apic_6 { pt3dadd( 392.657, 560.693, 41.5923, 0.483 ) }
    apic_6 { pt3dadd( 391.866, 559.879, 41.8603, 0.483 ) }
    apic_6 { pt3dadd( 391.143, 559.008, 41.5772, 0.4576 ) }
    apic_6 { pt3dadd( 390.488, 558.091, 41.0869, 0.5084 ) }
    apic_6 { pt3dadd( 389.859, 557.142, 41.0785, 0.5848 ) }
    apic_6 { pt3dadd( 389.572, 556.085, 41.7259, 0.661 ) }
    apic_6 { pt3dadd( 389.26, 554.996, 41.9916, 0.661 ) }
    apic_6 { pt3dadd( 389.073, 553.87, 42.1064, 0.6356 ) }
    apic_6 { pt3dadd( 388.648, 552.841, 42.621, 0.5848 ) }
    apic_6 { pt3dadd( 387.956, 551.955, 43.0531, 0.5592 ) }
    apic_6 { pt3dadd( 387.085, 551.22, 43.1211, 0.5084 ) }
    apic_6 { pt3dadd( 386.337, 550.359, 43.1273, 0.483 ) }
    apic_6 { pt3dadd( 385.74, 549.387, 43.1589, 0.483 ) }
    apic_6 { pt3dadd( 385.496, 548.281, 43.3474, 0.5084 ) }
    apic_6 { pt3dadd( 385.228, 547.207, 44.0247, 0.5592 ) }
    apic_6 { pt3dadd( 384.993, 546.094, 44.095, 0.5338 ) }
    apic_6 { pt3dadd( 384.637, 545.044, 43.4566, 0.5084 ) }
    apic_6 { pt3dadd( 384.21, 544.031, 42.6756, 0.4322 ) }
    apic_6 { pt3dadd( 383.545, 543.26, 43.8068, 0.4576 ) }
    apic_6 { pt3dadd( 382.737, 542.477, 44.2501, 0.483 ) }
    apic_6 { pt3dadd( 382.064, 541.554, 44.3792, 0.5084 ) }
    apic_6 { pt3dadd( 381.311, 540.734, 45.0181, 0.4576 ) }
    apic_6 { pt3dadd( 380.601, 539.881, 45.3793, 0.4068 ) }
    apic_6 { pt3dadd( 380.077, 538.867, 45.486, 0.4322 ) }
    apic_6 { pt3dadd( 379.824, 537.775, 45.5515, 0.5084 ) }
    apic_6 { pt3dadd( 379.799, 536.632, 45.4387, 0.5848 ) }
    apic_6 { pt3dadd( 379.757, 535.49, 45.36, 0.5848 ) }
    apic_6 { pt3dadd( 379.501, 534.39, 45.36, 0.5338 ) }
    apic_6 { pt3dadd( 378.895, 533.44, 45.3603, 0.483 ) }
    apic_6 { pt3dadd( 378.169, 532.558, 45.3608, 0.483 ) }
    apic_6 { pt3dadd( 377.454, 531.664, 45.3639, 0.5084 ) }
    apic_6 { pt3dadd( 376.639, 530.871, 45.3799, 0.5338 ) }
    apic_6 { pt3dadd( 375.859, 530.046, 45.4835, 0.483 ) }
    apic_6 { pt3dadd( 375.376, 529.058, 46.0054, 0.4322 ) }
    apic_6 { pt3dadd( 375.189, 527.986, 46.8188, 0.4576 ) }
    apic_6 { pt3dadd( 374.915, 526.916, 47.4233, 0.6356 ) }
    apic_6 { pt3dadd( 374.453, 525.877, 47.5975, 0.8644 ) }
    apic_6 { pt3dadd( 374.025, 524.818, 47.5843, 0.9914 ) }
    apic_6 { pt3dadd( 373.65, 523.738, 47.5048, 0.966 ) }
    apic_6 { pt3dadd( 373.271, 522.676, 47.0893, 0.8644 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    apic_6 { pt3dadd( 372.76, 521.671, 46.9395, 0.7626 ) }
    apic_6 { pt3dadd( 372.259, 520.666, 47.3936, 0.7118 ) }
    apic_6 { pt3dadd( 371.655, 519.717, 47.7554, 0.7118 ) }
    apic_6 { pt3dadd( 371.16, 518.729, 48.3227, 0.7372 ) }
    apic_6 { pt3dadd( 370.738, 517.681, 48.6721, 0.7626 ) }
    apic_6 { pt3dadd( 370.158, 516.701, 48.7197, 0.788 ) }
    apic_6 { pt3dadd( 369.458, 515.799, 48.7189, 0.788 ) }
    apic_6 { pt3dadd( 368.702, 514.94, 48.7152, 0.7626 ) }
    apic_6 { pt3dadd( 368.096, 513.979, 48.6934, 0.661 ) }
    apic_6 { pt3dadd( 367.868, 512.878, 48.5481, 0.6102 ) }
    apic_6 { pt3dadd( 367.594, 511.806, 47.9539, 0.5848 ) }
    apic_6 { pt3dadd( 367.071, 510.81, 47.6347, 0.6102 ) }
    apic_6 { pt3dadd( 366.604, 509.769, 47.5684, 0.5848 ) }
    apic_6 { pt3dadd( 366.246, 508.685, 47.4152, 0.5848 ) }
    apic_6 { pt3dadd( 366.086, 507.592, 46.7888, 0.5592 ) }
    apic_6 { pt3dadd( 365.984, 506.465, 46.5083, 0.5592 ) }
    apic_6 { pt3dadd( 365.621, 505.391, 46.482, 0.5338 ) }
    apic_6 { pt3dadd( 365.014, 504.427, 46.4901, 0.5592 ) }
    apic_6 { pt3dadd( 364.377, 503.478, 46.5293, 0.5592 ) }
    apic_6 { pt3dadd( 363.664, 502.587, 46.6894, 0.5592 ) }
    apic_6 { pt3dadd( 363.01, 501.685, 47.2816, 0.5084 ) }
    apic_6 { pt3dadd( 362.26, 500.839, 47.5636, 0.5338 ) }
    apic_6 { pt3dadd( 361.418, 500.065, 47.5961, 0.5338 ) }
    apic_6 { pt3dadd( 360.431, 499.501, 47.5779, 0.6356 ) }
    apic_6 { pt3dadd( 359.508, 498.833, 47.4863, 0.6864 ) }
    apic_6 { pt3dadd( 358.854, 497.933, 46.9927, 0.788 ) }
    apic_6 { pt3dadd( 358.438, 496.885, 46.5926, 0.7372 ) }
    apic_6 { pt3dadd( 358.014, 495.827, 46.4895, 0.6356 ) }
    apic_6 { pt3dadd( 357.44, 494.841, 46.5262, 0.5084 ) }
    apic_6 { pt3dadd( 356.808, 493.895, 46.7222, 0.4576 ) }
    apic_6 { pt3dadd( 356.207, 492.951, 47.3035, 0.5338 ) }
    apic_6 { pt3dadd( 355.652, 491.966, 47.6, 0.5592 ) }
    apic_6 { pt3dadd( 355.314, 490.878, 47.6006, 0.5848 ) }
    apic_6 { pt3dadd( 354.737, 489.891, 47.6022, 0.5084 ) }
    apic_6 { pt3dadd( 354.151, 488.908, 47.6115, 0.5592 ) }
    apic_6 { pt3dadd( 353.526, 487.953, 47.6549, 0.661 ) }
    apic_6 { pt3dadd( 352.815, 487.069, 47.866, 0.7372 ) }
    apic_6 { pt3dadd( 352.31, 486.085, 48.5629, 0.6864 ) }
    apic_6 { pt3dadd( 351.79, 485.109, 49.2912, 0.5338 ) }
    apic_6 { pt3dadd( 351.116, 484.214, 49.742, 0.4322 ) }
    apic_6 { pt3dadd( 350.312, 483.404, 49.84, 0.3814 ) }
    apic_6 { pt3dadd( 349.423, 482.688, 49.8397, 0.4068 ) }
    apic_6 { pt3dadd( 348.539, 481.963, 49.8392, 0.483 ) }
    apic_6 { pt3dadd( 347.729, 481.484, 50.3146, 0.5592 ) }
    apic_6 { pt3dadd( 347.459, 480.565, 51.693, 0.5848 ) }
    apic_6 { pt3dadd( 346.986, 479.551, 52.0624, 0.5338 ) }
    apic_6 { pt3dadd( 346.742, 478.435, 51.9725, 0.5084 ) }
    apic_6 { pt3dadd( 346.47, 477.34, 51.5945, 0.5338 ) }
    apic_6 { pt3dadd( 346.078, 476.312, 51.0188, 0.6356 ) }
    apic_6 { pt3dadd( 345.655, 475.305, 50.953, 0.7118 ) }
    apic_6 { pt3dadd( 345.095, 474.325, 50.9071, 0.7372 ) }
    apic_6 { pt3dadd( 344.717, 473.254, 50.6201, 0.661 ) }
    apic_6 { pt3dadd( 344.469, 472.173, 49.94, 0.5592 ) }
    apic_6 { pt3dadd( 344.03, 471.121, 49.8445, 0.4576 ) }
    apic_6 { pt3dadd( 343.371, 470.189, 49.8453, 0.4068 ) }
    apic_6 { pt3dadd( 342.737, 469.237, 49.8674, 0.4068 ) }
    apic_6 { pt3dadd( 342.146, 468.259, 50.0346, 0.483 ) }
    apic_6 { pt3dadd( 341.389, 467.458, 50.7769, 0.5592 ) }
    apic_6 { pt3dadd( 340.505, 466.737, 50.9592, 0.5592 ) }
    apic_6 { pt3dadd( 339.608, 466.027, 50.9603, 0.5084 ) }
    apic_6 { pt3dadd( 338.769, 465.249, 50.9611, 0.4576 ) }
    apic_6 { pt3dadd( 337.835, 464.59, 50.9653, 0.483 ) }
    apic_6 { pt3dadd( 336.807, 464.088, 50.9902, 0.5338 ) }
    apic_6 { pt3dadd( 335.964, 463.317, 51.1241, 0.6102 ) }
    apic_6 { pt3dadd( 335.413, 462.375, 51.8885, 0.6864 ) }
    apic_6 { pt3dadd( 335.141, 461.271, 52.0814, 0.661 ) }
    apic_6 { pt3dadd( 334.48, 460.341, 52.1186, 0.5848 ) }
    apic_6 { pt3dadd( 333.887, 459.366, 52.2752, 0.4576 ) }
    apic_6 { pt3dadd( 333.534, 458.32, 52.9841, 0.4068 ) }
    apic_6 { pt3dadd( 333.134, 457.252, 53.198, 0.4068 ) }
    apic_6 { pt3dadd( 332.493, 456.304, 53.2, 0.4322 ) }
    apic_6 { pt3dadd( 331.788, 455.404, 53.2, 0.5084 ) }
    apic_6 { pt3dadd( 331.064, 454.518, 53.2, 0.5338 ) }
    apic_6 { pt3dadd( 330.889, 453.388, 53.2, 0.5848 ) }
    apic_6 { pt3dadd( 330.797, 452.25, 53.2, 0.5592 ) }
    apic_6 { pt3dadd( 330.54, 451.142, 53.2, 0.5592 ) }
    apic_6 { pt3dadd( 330.012, 450.137, 53.1994, 0.5338 ) }
    apic_6 { pt3dadd( 329.315, 449.233, 53.1975, 0.5338 ) }
    apic_6 { pt3dadd( 328.635, 448.313, 53.188, 0.5084 ) }
    apic_6 { pt3dadd( 327.882, 447.456, 53.1524, 0.483 ) }
    apic_6 { pt3dadd( 327.057, 446.67, 52.9847, 0.483 ) }
    apic_6 { pt3dadd( 326.198, 445.96, 52.3972, 0.5592 ) }
    apic_6 { pt3dadd( 325.512, 445.056, 52.08, 0.5848 ) }
    apic_6 { pt3dadd( 325.001, 444.044, 52.08, 0.5338 ) }
    apic_6 { pt3dadd( 324.888, 442.905, 52.08, 0.4068 ) }
    apic_6 { pt3dadd( 324.839, 441.764, 52.08, 0.356 ) }
    apic_6 { pt3dadd( 324.596, 440.662, 52.08, 0.4068 ) }
    apic_6 { pt3dadd( 323.903, 439.754, 52.08, 0.5084 ) }
    apic_6 { pt3dadd( 323.225, 438.833, 52.0797, 0.5848 ) }
    apic_6 { pt3dadd( 322.773, 437.786, 52.0786, 0.5592 ) }
    apic_6 { pt3dadd( 322.23, 436.779, 52.0736, 0.5084 ) }
    apic_6 { pt3dadd( 321.62, 435.812, 52.0332, 0.483 ) }
    apic_6 { pt3dadd( 321.053, 434.825, 51.8084, 0.5592 ) }
    apic_6 { pt3dadd( 320.803, 433.741, 51.8764, 0.661 ) }
    apic_6 { pt3dadd( 320.764, 432.601, 52.0481, 0.7372 ) }
    apic_6 { pt3dadd( 320.684, 431.461, 52.08, 0.8136 ) }
    apic_6 { pt3dadd( 320.273, 430.419, 52.08, 0.8644 ) }
    apic_6 { pt3dadd( 319.509, 429.587, 52.08, 0.9152 ) }
    apic_6 { pt3dadd( 318.625, 428.863, 52.08, 0.9406 ) }
    apic_6 { pt3dadd( 317.879, 428.008, 52.08, 0.9914 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    apic_6 { pt3dadd( 317.466, 426.959, 52.08, 1.0932 ) }
    apic_6 { pt3dadd( 316.941, 425.959, 52.08, 1.1694 ) }
    apic_6 { pt3dadd( 315.571, 424.132, 52.08, 1.2202 ) }
    apic_6 { pt3dadd( 314.201, 422.305, 52.08, 1.1694 ) }
    apic_6 { pt3dadd( 312.826, 420.481, 52.0845, 1.2712 ) }
    apic_6 { pt3dadd( 311.739, 418.511, 52.2528, 1.2966 ) }
    apic_6 { pt3dadd( 310.92, 416.434, 53.121, 1.144 ) }
    apic_6 { pt3dadd( 309.862, 414.409, 53.2, 1.1186 ) }
    apic_6 { pt3dadd( 309.144, 413.519, 53.2, 0.9914 ) }
    apic_6 { pt3dadd( 308.478, 412.591, 53.2, 0.7372 ) }
    apic_6 { pt3dadd( 308.046, 411.532, 53.1997, 0.5338 ) }
    apic_6 { pt3dadd( 307.457, 410.552, 53.1983, 0.4322 ) }
    apic_6 { pt3dadd( 306.721, 409.676, 53.193, 0.4576 ) }
    apic_6 { pt3dadd( 306.076, 408.732, 53.167, 0.5084 ) }
    apic_6 { pt3dadd( 305.32, 407.876, 53.0522, 0.5338 ) }
    apic_6 { pt3dadd( 304.627, 406.987, 52.5669, 0.5592 ) }
    apic_6 { pt3dadd( 303.924, 406.104, 52.1167, 0.6102 ) }
    apic_6 { pt3dadd( 303.116, 405.295, 52.0803, 0.661 ) }
    apic_6 { pt3dadd( 302.279, 404.516, 52.0825, 0.661 ) }
    apic_6 { pt3dadd( 301.376, 403.816, 52.0915, 0.6356 ) }
    apic_6 { pt3dadd( 300.647, 402.941, 52.141, 0.5592 ) }
    apic_6 { pt3dadd( 300.211, 401.892, 52.388, 0.5084 ) }
    apic_6 { pt3dadd( 299.957, 400.821, 53.1017, 0.4322 ) }
    apic_6 { pt3dadd( 299.423, 399.812, 53.2011, 0.4068 ) }
    apic_6 { pt3dadd( 298.768, 398.873, 53.2056, 0.3814 ) }
    apic_6 { pt3dadd( 298.126, 397.927, 53.2283, 0.4068 ) }
    apic_6 { pt3dadd( 297.526, 396.965, 53.3593, 0.4322 ) }
    apic_6 { pt3dadd( 297.275, 395.873, 53.916, 0.4576 ) }
    apic_6 { pt3dadd( 296.877, 394.816, 54.32, 0.4322 ) }
    apic_6 { pt3dadd( 296.4, 393.779, 54.32, 0.4322 ) }
    apic_6 { pt3dadd( 295.724, 392.858, 54.3194, 0.4322 ) }
    apic_6 { pt3dadd( 294.951, 392.014, 54.3172, 0.4576 ) }
    apic_6 { pt3dadd( 294.241, 391.12, 54.3066, 0.4576 ) }
    apic_6 { pt3dadd( 293.667, 390.132, 54.2486, 0.483 ) }
    apic_6 { pt3dadd( 292.997, 389.219, 53.9655, 0.5084 ) }
    apic_6 { pt3dadd( 292.241, 388.425, 53.1933, 0.5338 ) }
    apic_6 { pt3dadd( 291.478, 387.592, 52.7696, 0.5084 ) }
    apic_6 { pt3dadd( 290.754, 386.752, 52.1312, 0.483 ) }
    apic_6 { pt3dadd( 290.077, 385.83, 52.0842, 0.4576 ) }
    apic_6 { pt3dadd( 289.453, 384.885, 52.1021, 0.4322 ) }
    apic_6 { pt3dadd( 289.199, 383.779, 52.2399, 0.4322 ) }
    apic_6 { pt3dadd( 289.173, 382.655, 52.7492, 0.4068 ) }
    apic_6 { pt3dadd( 289.006, 381.571, 53.401, 0.4068 ) }
    apic_6 { pt3dadd( 288.45, 380.625, 54.1159, 0.3814 ) }
    apic_6 { pt3dadd( 287.826, 379.768, 54.8498, 0.3814 ) }
    apic_6 { pt3dadd( 287.243, 378.802, 54.42, 0.4068 ) }
    apic_6 { pt3dadd( 286.59, 377.866, 54.2626, 0.4322 ) }
    apic_6 { pt3dadd( 285.911, 376.954, 54.0341, 0.483 ) }
    apic_6 { pt3dadd( 285.273, 376.028, 53.5125, 0.5338 ) }
    apic_6 { pt3dadd( 284.762, 375.073, 53.5928, 0.5338 ) }
    apic_6 { pt3dadd( 284.557, 374.033, 54.3712, 0.5084 ) }
    apic_6 { pt3dadd( 284.142, 373.047, 54.749, 0.4576 ) }
    apic_6 { pt3dadd( 283.285, 372.702, 55.9118, 0.4576 ) }
    apic_6 { pt3dadd( 283.489, 372.355, 57.2821, 0.4576 ) }
    apic_6 { pt3dadd( 284.298, 372.607, 56.6345, 0.4576 ) }
    apic_6 { pt3dadd( 284.934, 372.078, 55.2166, 0.483 ) }
    apic_6 { pt3dadd( 284.937, 371.088, 53.879, 0.5338 ) }
    apic_6 { pt3dadd( 284.525, 370.06, 53.3338, 0.5848 ) }
    apic_6 { pt3dadd( 284.109, 369.011, 53.6841, 0.6102 ) }
    apic_6 { pt3dadd( 283.645, 367.991, 54.2391, 0.5848 ) }
    apic_6 { pt3dadd( 282.973, 367.07, 54.3166, 0.5084 ) }
    apic_6 { pt3dadd( 282.209, 366.218, 54.3155, 0.4576 ) }
    apic_6 { pt3dadd( 281.573, 365.27, 54.2984, 0.4576 ) }
    apic_6 { pt3dadd( 281.41, 364.148, 54.1766, 0.5592 ) }
    apic_6 { pt3dadd( 281.289, 363.042, 53.5405, 0.6102 ) }
    apic_6 { pt3dadd( 280.766, 362.034, 53.4341, 0.6356 ) }
    apic_6 { pt3dadd( 280.182, 361.09, 54.0929, 0.6102 ) }
    apic_6 { pt3dadd( 279.586, 360.119, 54.3057, 0.6102 ) }
    apic_6 { pt3dadd( 279.181, 359.049, 54.2786, 0.5848 ) }
    apic_6 { pt3dadd( 279.079, 357.915, 54.0498, 0.5338 ) }
    apic_6 { pt3dadd( 278.793, 356.878, 53.1112, 0.5084 ) }
    apic_6 { pt3dadd( 278.296, 355.914, 52.2144, 0.5338 ) }
    apic_6 { pt3dadd( 277.703, 354.939, 52.0752, 0.6102 ) }
    apic_6 { pt3dadd( 276.966, 354.063, 52.0604, 0.6356 ) }
    apic_6 { pt3dadd( 276.346, 353.103, 51.9803, 0.6102 ) }
    apic_6 { pt3dadd( 275.836, 352.187, 52.1217, 0.5592 ) }
    apic_6 { pt3dadd( 275.717, 351.122, 51.3103, 0.5338 ) }
    apic_6 { pt3dadd( 274.954, 350.519, 51.6911, 0.5084 ) }
    apic_6 { pt3dadd( 274.051, 349.889, 52.2113, 0.4576 ) }
    apic_6 { pt3dadd( 273.544, 348.943, 52.6473, 0.4322 ) }
    apic_6 { pt3dadd( 273.543, 347.846, 52.5829, 0.4322 ) }
    apic_6 { pt3dadd( 273.683, 346.727, 52.1752, 0.4322 ) }
    apic_6 { pt3dadd( 273.491, 345.63, 52.0808, 0.3814 ) }
    apic_6 { pt3dadd( 273.01, 344.595, 52.0848, 0.356 ) }
    apic_6 { pt3dadd( 272.505, 343.568, 52.1066, 0.3814 ) }
    apic_6 { pt3dadd( 271.884, 342.619, 52.2169, 0.4068 ) }
    apic_6 { pt3dadd( 271.094, 341.802, 52.4286, 0.4068 ) }
    apic_6 { pt3dadd( 270.566, 340.905, 51.735, 0.3814 ) }
    apic_6 { pt3dadd( 270.219, 339.859, 51.1823, 0.4068 ) }
    apic_6 { pt3dadd( 269.839, 338.816, 51.6446, 0.4068 ) }
    apic_6 { pt3dadd( 269.379, 337.863, 52.6884, 0.4068 ) }
    apic_6 { pt3dadd( 268.858, 336.882, 53.1535, 0.3814 ) }
    apic_6 { pt3dadd( 268.375, 335.846, 53.2, 0.4068 ) }
    apic_6 { pt3dadd( 267.712, 334.928, 53.2, 0.4322 ) }
    apic_6 { pt3dadd( 266.901, 334.122, 53.2, 0.4322 ) }
    apic_6 { pt3dadd( 266.259, 333.187, 53.2, 0.4322 ) }
    apic_6 { pt3dadd( 265.642, 332.223, 53.1997, 0.4322 ) }
    apic_6 { pt3dadd( 264.898, 331.36, 53.1989, 0.483 ) }
    apic_6 { pt3dadd( 264.114, 330.526, 53.1958, 0.5084 ) }
    apic_6 { pt3dadd( 263.428, 329.613, 53.1796, 0.5592 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    apic_6 { pt3dadd( 262.872, 328.616, 53.0832, 0.5592 ) }
    apic_6 { pt3dadd( 262.337, 327.627, 52.6212, 0.5084 ) }
    apic_6 { pt3dadd( 261.716, 326.674, 52.5025, 0.4068 ) }
    apic_6 { pt3dadd( 261.133, 325.717, 52.9976, 0.3304 ) }
    apic_6 { pt3dadd( 260.401, 324.853, 53.1868, 0.3304 ) }
    apic_6 { pt3dadd( 259.535, 324.108, 53.1978, 0.356 ) }
    apic_6 { pt3dadd( 258.726, 323.301, 53.1902, 0.4068 ) }
    apic_6 { pt3dadd( 258.042, 322.387, 53.1541, 0.4322 ) }
    apic_6 { pt3dadd( 257.59, 321.346, 52.953, 0.483 ) }
    apic_6 { pt3dadd( 257.154, 320.339, 52.2004, 0.5592 ) }
    apic_6 { pt3dadd( 256.854, 319.289, 51.3895, 0.6864 ) }
    apic_6 { pt3dadd( 256.366, 318.276, 51.0104, 0.788 ) }
    apic_6 { pt3dadd( 255.77, 317.301, 50.9706, 0.8136 ) }
    apic_6 { pt3dadd( 255.59, 316.189, 51.03, 0.788 ) }
    apic_6 { pt3dadd( 255.604, 315.062, 51.4716, 0.7626 ) }
    apic_6 { pt3dadd( 255.793, 313.979, 52.2236, 0.7372 ) }
    apic_6 { pt3dadd( 255.842, 312.885, 53.0138, 0.7118 ) }
    apic_6 { pt3dadd( 255.49, 311.81, 53.1555, 0.6864 ) }
    apic_6 { pt3dadd( 254.947, 310.806, 53.0292, 0.661 ) }
    apic_6 { pt3dadd( 254.427, 309.809, 52.5364, 0.5848 ) }
    apic_6 { pt3dadd( 254.21, 308.72, 53.058, 0.5084 ) }
    apic_6 { pt3dadd( 254.185, 307.58, 53.193, 0.483 ) }
    apic_6 { pt3dadd( 254.113, 306.439, 53.2036, 0.5084 ) }
    apic_6 { pt3dadd( 253.764, 305.352, 53.2218, 0.5084 ) }
    apic_6 { pt3dadd( 253.349, 304.287, 53.3285, 0.483 ) }
    apic_6 { pt3dadd( 253.166, 303.192, 53.9678, 0.483 ) }
    apic_6 { pt3dadd( 252.673, 302.175, 54.3049, 0.5592 ) }
    apic_6 { pt3dadd( 252.03, 301.229, 54.32, 0.6356 ) }
    apic_6 { pt3dadd( 251.254, 300.389, 54.3203, 0.661 ) }
    apic_6 { pt3dadd( 250.351, 299.689, 54.3211, 0.6102 ) }
    apic_6 { pt3dadd( 249.355, 299.125, 54.3256, 0.5848 ) }
    apic_6 { pt3dadd( 248.842, 298.11, 54.3575, 0.6102 ) }
    apic_6 { pt3dadd( 248.695, 296.98, 54.5493, 0.6356 ) }
    apic_6 { pt3dadd( 248.62, 295.876, 55.2524, 0.5848 ) }
    apic_6 { pt3dadd( 248.246, 294.804, 54.9416, 0.5084 ) }
    apic_6 { pt3dadd( 247.756, 293.799, 54.3606, 0.4576 ) }
    apic_6 { pt3dadd( 247.271, 292.762, 54.3295, 0.483 ) }
    apic_6 { pt3dadd( 246.871, 291.691, 54.3836, 0.4576 ) }
    apic_6 { pt3dadd( 246.592, 290.597, 54.7546, 0.4576 ) }
    apic_6 { pt3dadd( 246.351, 289.673, 56.271, 0.4068 ) }
    apic_6 { pt3dadd( 246.045, 288.579, 56.558, 0.4322 ) }
    apic_6 { pt3dadd( 245.627, 287.517, 56.5491, 0.4068 ) }
    apic_6 { pt3dadd( 245.501, 286.381, 56.4855, 0.4068 ) }
    apic_6 { pt3dadd( 245.494, 285.246, 56.1529, 0.4068 ) }
    apic_6 { pt3dadd( 245.446, 284.135, 55.557, 0.4322 ) }
    apic_6 { pt3dadd( 245.258, 283.018, 55.82, 0.4576 ) }
    apic_6 { pt3dadd( 245.282, 281.926, 56.628, 0.4322 ) }
    apic_6 { pt3dadd( 245.108, 280.816, 57.1385, 0.4322 ) }
    apic_6 { pt3dadd( 245.004, 279.686, 57.206, 0.4322 ) }
    apic_6 { pt3dadd( 244.814, 278.606, 56.5342, 0.4576 ) }
    apic_6 { pt3dadd( 244.26, 277.616, 56.2327, 0.4322 ) }
    apic_6 { pt3dadd( 243.691, 276.652, 55.7287, 0.4068 ) }
    apic_6 { pt3dadd( 243.245, 275.643, 56.1022, 0.3814 ) }
    apic_6 { pt3dadd( 243.119, 274.629, 57.2869, 0.3814 ) }
    apic_6 { pt3dadd( 242.792, 273.554, 57.5971, 0.4322 ) }
    apic_6 { pt3dadd( 242.242, 272.565, 57.2995, 0.4576 ) }
    apic_6 { pt3dadd( 241.757, 271.566, 56.6978, 0.483 ) }
    apic_6 { pt3dadd( 241.116, 270.62, 56.5748, 0.4322 ) }
    apic_6 { pt3dadd( 240.475, 269.675, 56.6373, 0.4322 ) }
    apic_6 { pt3dadd( 240.059, 268.657, 57.0128, 0.4322 ) }
    apic_6 { pt3dadd( 240.102, 267.645, 58.2207, 0.4322 ) }
    apic_6 { pt3dadd( 240.279, 266.773, 59.9766, 0.4068 ) }
    apic_6 { pt3dadd( 240.139, 265.875, 61.378, 0.356 ) }
    apic_6 { pt3dadd( 239.449, 265.018, 61.6871, 0.356 ) }
    apic_6 { pt3dadd( 239.0, 264.099, 61.759, 0.3304 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 65/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 411.154, 597.507, 37.2375, 0.6356 ) }
    apic_5 { pt3dadd( 410.307, 597.382, 36.5834, 0.3304 ) }
    apic_5 { pt3dadd( 409.191, 597.443, 35.9769, 0.2796 ) }
    apic_5 { pt3dadd( 408.083, 597.368, 35.7154, 0.2796 ) }
    apic_5 { pt3dadd( 406.98, 597.095, 35.7941, 0.305 ) }
    apic_5 { pt3dadd( 405.961, 596.877, 34.9009, 0.3814 ) }
    apic_5 { pt3dadd( 404.978, 596.772, 33.5269, 0.4322 ) }
    apic_5 { pt3dadd( 403.919, 596.585, 32.6494, 0.4322 ) }
    apic_5 { pt3dadd( 402.818, 596.435, 32.1129, 0.4322 ) }
    apic_5 { pt3dadd( 401.719, 596.641, 31.836, 0.4322 ) }
    apic_5 { pt3dadd( 400.846, 597.288, 31.4479, 0.4576 ) }
    apic_5 { pt3dadd( 400.185, 598.174, 30.732, 0.4322 ) }
    apic_5 { pt3dadd( 399.365, 598.874, 30.0135, 0.4322 ) }
    apic_5 { pt3dadd( 398.326, 599.302, 29.6831, 0.4322 ) }
    apic_5 { pt3dadd( 397.23, 599.275, 29.5996, 0.4322 ) }
    apic_5 { pt3dadd( 396.135, 599.209, 29.1099, 0.356 ) }
    apic_5 { pt3dadd( 395.366, 599.776, 27.9899, 0.2796 ) }
    apic_5 { pt3dadd( 395.099, 600.656, 26.4314, 0.2542 ) }
    apic_5 { pt3dadd( 394.777, 601.49, 24.724, 0.2796 ) }
    apic_5 { pt3dadd( 393.997, 602.204, 24.1231, 0.3304 ) }
    apic_5 { pt3dadd( 393.152, 602.968, 24.0702, 0.3304 ) }
    apic_5 { pt3dadd( 392.378, 603.81, 24.0386, 0.356 ) }
    apic_5 { pt3dadd( 391.775, 604.773, 23.8776, 0.3304 ) }
    apic_5 { pt3dadd( 391.433, 605.827, 23.2938, 0.3814 ) }
    apic_5 { pt3dadd( 390.803, 606.717, 23.5113, 0.3814 ) }
    apic_5 { pt3dadd( 389.754, 606.803, 23.0429, 0.4068 ) }
    apic_5 { pt3dadd( 388.766, 607.026, 21.8789, 0.356 ) }
    apic_5 { pt3dadd( 388.676, 608.153, 21.5062, 0.3814 ) }
    apic_5 { pt3dadd( 388.253, 608.992, 20.6072, 0.4068 ) }
    apic_5 { pt3dadd( 387.211, 609.124, 19.7607, 0.4322 ) }
    apic_5 { pt3dadd( 386.134, 609.316, 20.0679, 0.356 ) }
    apic_5 { pt3dadd( 385.215, 609.499, 19.32, 0.305 ) }
    apic_5 { pt3dadd( 384.163, 609.866, 19.32, 0.2796 ) }
    apic_5 { pt3dadd( 383.019, 609.866, 19.32, 0.305 ) }
    apic_5 { pt3dadd( 381.875, 609.866, 19.32, 0.2796 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    apic_5 { pt3dadd( 380.73, 609.866, 19.32, 0.2542 ) }
    apic_5 { pt3dadd( 379.587, 609.866, 19.32, 0.2542 ) }
    apic_5 { pt3dadd( 378.467, 609.991, 19.32, 0.3304 ) }
    apic_5 { pt3dadd( 377.344, 610.095, 19.32, 0.4576 ) }
    apic_5 { pt3dadd( 376.2, 610.095, 19.32, 0.5338 ) }
    apic_5 { pt3dadd( 375.056, 610.095, 19.32, 0.5084 ) }
    apic_5 { pt3dadd( 373.928, 610.213, 19.32, 0.4322 ) }
    apic_5 { pt3dadd( 373.058, 610.846, 19.32, 0.4068 ) }
    apic_5 { pt3dadd( 372.057, 611.28, 19.32, 0.4576 ) }
    apic_5 { pt3dadd( 371.238, 612.071, 19.32, 0.4576 ) }
    apic_5 { pt3dadd( 370.335, 612.763, 19.32, 0.4322 ) }
    apic_5 { pt3dadd( 369.306, 613.25, 19.32, 0.3814 ) }
    apic_5 { pt3dadd( 368.164, 613.298, 19.32, 0.4322 ) }
    apic_5 { pt3dadd( 367.02, 613.298, 19.32, 0.4576 ) }
    apic_5 { pt3dadd( 365.876, 613.298, 19.32, 0.4576 ) }
    apic_5 { pt3dadd( 364.747, 613.411, 19.32, 0.3814 ) }
    apic_5 { pt3dadd( 364.095, 614.233, 19.32, 0.4068 ) }
    apic_5 { pt3dadd( 362.991, 614.328, 19.32, 0.483 ) }
    // Section: apic_16, id: apic_16, parent: apic_6 (entry count 18/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( 239.0, 264.099, 61.759, 0.3304 ) }
    apic_16 { pt3dadd( 239.923, 263.675, 62.498, 0.4322 ) }
    apic_16 { pt3dadd( 240.82, 263.393, 64.0836, 0.5084 ) }
    apic_16 { pt3dadd( 241.747, 262.729, 64.2508, 0.483 ) }
    apic_16 { pt3dadd( 242.35, 261.795, 63.6196, 0.4576 ) }
    apic_16 { pt3dadd( 242.504, 260.69, 63.0834, 0.4576 ) }
    apic_16 { pt3dadd( 242.192, 259.616, 62.6105, 0.5338 ) }
    apic_16 { pt3dadd( 241.889, 258.581, 63.4623, 0.5848 ) }
    apic_16 { pt3dadd( 241.829, 257.665, 65.1148, 0.5848 ) }
    apic_16 { pt3dadd( 241.771, 256.604, 66.143, 0.5592 ) }
    apic_16 { pt3dadd( 241.663, 255.606, 67.3781, 0.5338 ) }
    apic_16 { pt3dadd( 242.227, 254.79, 68.5832, 0.5338 ) }
    apic_16 { pt3dadd( 243.229, 254.26, 68.88, 0.5338 ) }
    apic_16 { pt3dadd( 244.134, 253.566, 68.88, 0.5338 ) }
    apic_16 { pt3dadd( 244.872, 252.696, 68.88, 0.5338 ) }
    apic_16 { pt3dadd( 245.457, 251.713, 68.8811, 0.5848 ) }
    apic_16 { pt3dadd( 245.992, 250.702, 68.8856, 0.6356 ) }
    apic_16 { pt3dadd( 246.417, 249.652, 68.9167, 0.7118 ) }
    apic_16 { pt3dadd( 246.587, 248.531, 69.1188, 0.661 ) }
    apic_16 { pt3dadd( 246.919, 247.462, 69.7032, 0.5848 ) }
    apic_16 { pt3dadd( 247.266, 246.4, 70.194, 0.4576 ) }
    apic_16 { pt3dadd( 247.821, 245.43, 70.7308, 0.4068 ) }
    apic_16 { pt3dadd( 248.147, 244.448, 71.7937, 0.356 ) }
    apic_16 { pt3dadd( 248.183, 243.455, 73.0671, 0.3304 ) }
    apic_16 { pt3dadd( 248.526, 242.426, 73.3603, 0.3304 ) }
    apic_16 { pt3dadd( 249.323, 241.607, 73.3614, 0.4068 ) }
    apic_16 { pt3dadd( 250.189, 240.862, 73.3676, 0.5084 ) }
    apic_16 { pt3dadd( 251.047, 240.116, 73.3986, 0.6102 ) }
    apic_16 { pt3dadd( 251.752, 239.221, 73.5675, 0.6356 ) }
    apic_16 { pt3dadd( 252.277, 238.302, 74.3582, 0.5848 ) }
    apic_16 { pt3dadd( 252.584, 237.333, 75.4435, 0.483 ) }
    apic_16 { pt3dadd( 252.819, 236.222, 75.605, 0.3814 ) }
    apic_16 { pt3dadd( 252.919, 235.083, 75.6347, 0.356 ) }
    apic_16 { pt3dadd( 252.664, 234.083, 75.8268, 0.356 ) }
    apic_16 { pt3dadd( 251.738, 233.53, 76.3557, 0.4068 ) }
    apic_16 { pt3dadd( 250.696, 233.163, 76.9583, 0.4576 ) }
    apic_16 { pt3dadd( 249.962, 232.429, 77.7269, 0.5084 ) }
    apic_16 { pt3dadd( 249.638, 231.445, 78.8623, 0.5338 ) }
    apic_16 { pt3dadd( 249.363, 230.406, 79.7619, 0.5338 ) }
    apic_16 { pt3dadd( 248.815, 229.437, 80.0792, 0.5338 ) }
    apic_16 { pt3dadd( 248.174, 228.495, 80.1186, 0.5338 ) }
    apic_16 { pt3dadd( 247.651, 227.482, 80.3065, 0.5084 ) }
    apic_16 { pt3dadd( 247.216, 226.454, 80.8626, 0.483 ) }
    apic_16 { pt3dadd( 246.696, 225.477, 81.4724, 0.4576 ) }
    apic_16 { pt3dadd( 246.042, 224.564, 82.0047, 0.4322 ) }
    apic_16 { pt3dadd( 245.282, 223.731, 82.3435, 0.3814 ) }
    apic_16 { pt3dadd( 244.695, 222.805, 82.7579, 0.305 ) }
    apic_16 { pt3dadd( 244.832, 221.946, 84.196, 0.2796 ) }
    apic_16 { pt3dadd( 245.092, 220.995, 85.5084, 0.3304 ) }
    apic_16 { pt3dadd( 245.352, 219.934, 86.3184, 0.4322 ) }
    apic_16 { pt3dadd( 245.317, 218.833, 86.893, 0.5338 ) }
    apic_16 { pt3dadd( 245.132, 217.745, 87.6162, 0.6356 ) }
    apic_16 { pt3dadd( 245.252, 216.638, 88.0135, 0.6864 ) }
    apic_16 { pt3dadd( 245.688, 215.62, 88.5951, 0.7118 ) }
    apic_16 { pt3dadd( 245.812, 214.678, 90.0178, 0.661 ) }
    apic_16 { pt3dadd( 245.406, 213.732, 91.0661, 0.7372 ) }
    apic_16 { pt3dadd( 244.783, 212.786, 91.2862, 0.788 ) }
    apic_16 { pt3dadd( 244.035, 211.925, 91.3573, 0.839 ) }
    apic_16 { pt3dadd( 243.273, 211.093, 91.7994, 0.788 ) }
    apic_16 { pt3dadd( 243.013, 210.017, 91.5841, 0.8136 ) }
    apic_16 { pt3dadd( 243.22, 208.901, 91.4105, 0.8898 ) }
    apic_16 { pt3dadd( 243.419, 207.797, 91.9173, 0.9152 ) }
    apic_16 { pt3dadd( 243.896, 206.765, 91.8005, 0.839 ) }
    apic_16 { pt3dadd( 244.424, 205.831, 92.7248, 0.6864 ) }
    apic_16 { pt3dadd( 244.559, 204.849, 94.1102, 0.5848 ) }
    apic_16 { pt3dadd( 244.461, 203.815, 95.2764, 0.5592 ) }
    apic_16 { pt3dadd( 244.038, 202.772, 95.7536, 0.5848 ) }
    apic_16 { pt3dadd( 243.699, 201.679, 95.7631, 0.6356 ) }
    apic_16 { pt3dadd( 243.689, 200.535, 95.781, 0.661 ) }
    apic_16 { pt3dadd( 243.821, 199.402, 95.9518, 0.661 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 88/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 239.0, 264.099, 61.759, 0.3304 ) }
    apic_7 { pt3dadd( 238.756, 263.464, 62.0903, 0.4068 ) }
    apic_7 { pt3dadd( 238.081, 262.541, 62.16, 0.4068 ) }
    apic_7 { pt3dadd( 237.531, 261.539, 62.16, 0.3814 ) }
    apic_7 { pt3dadd( 236.838, 260.635, 62.16, 0.4322 ) }
    apic_7 { pt3dadd( 235.868, 260.035, 62.1608, 0.483 ) }
    apic_7 { pt3dadd( 234.789, 259.678, 62.1648, 0.5084 ) }
    apic_7 { pt3dadd( 233.918, 258.936, 62.1813, 0.4322 ) }
    apic_7 { pt3dadd( 233.178, 258.07, 62.2572, 0.3814 ) }
    apic_7 { pt3dadd( 232.736, 257.039, 62.6284, 0.3814 ) }
    apic_7 { pt3dadd( 232.783, 255.932, 63.2458, 0.4576 ) }
    apic_7 { pt3dadd( 233.115, 254.839, 63.2898, 0.5338 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    apic_7 { pt3dadd( 233.558, 253.785, 63.3385, 0.5848 ) }
    apic_7 { pt3dadd( 233.875, 252.692, 63.576, 0.6356 ) }
    apic_7 { pt3dadd( 234.062, 251.598, 64.0363, 0.6102 ) }
    apic_7 { pt3dadd( 234.061, 250.481, 63.4312, 0.5848 ) }
    apic_7 { pt3dadd( 234.055, 249.358, 62.9163, 0.5338 ) }
    apic_7 { pt3dadd( 234.012, 248.248, 62.4064, 0.5338 ) }
    apic_7 { pt3dadd( 233.789, 247.158, 62.8622, 0.5592 ) }
    apic_7 { pt3dadd( 233.189, 246.201, 63.2839, 0.5848 ) }
    apic_7 { pt3dadd( 232.502, 245.292, 63.3769, 0.6356 ) }
    apic_7 { pt3dadd( 231.66, 244.537, 63.6734, 0.661 ) }
    apic_7 { pt3dadd( 230.73, 243.926, 64.2732, 0.661 ) }
    apic_7 { pt3dadd( 229.811, 243.248, 64.3975, 0.5848 ) }
    apic_7 { pt3dadd( 229.015, 242.439, 64.3908, 0.5338 ) }
    apic_7 { pt3dadd( 228.315, 241.536, 64.3535, 0.5338 ) }
    apic_7 { pt3dadd( 227.486, 240.753, 64.2062, 0.661 ) }
    apic_7 { pt3dadd( 226.54, 240.17, 63.5942, 0.7118 ) }
    apic_7 { pt3dadd( 225.472, 239.777, 63.4346, 0.7372 ) }
    apic_7 { pt3dadd( 224.469, 239.286, 63.9898, 0.6356 ) }
    apic_7 { pt3dadd( 223.553, 238.624, 64.381, 0.5848 ) }
    apic_7 { pt3dadd( 222.558, 238.062, 64.4848, 0.5084 ) }
    apic_7 { pt3dadd( 221.505, 237.665, 64.9452, 0.4576 ) }
    apic_7 { pt3dadd( 220.479, 237.239, 65.6121, 0.4322 ) }
    apic_7 { pt3dadd( 219.703, 236.461, 66.3354, 0.4322 ) }
    apic_7 { pt3dadd( 219.316, 235.391, 66.5053, 0.5084 ) }
    apic_7 { pt3dadd( 218.941, 234.342, 65.882, 0.5592 ) }
    apic_7 { pt3dadd( 218.609, 233.256, 65.522, 0.5848 ) }
    apic_7 { pt3dadd( 218.502, 232.118, 65.5234, 0.5592 ) }
    // Section: apic_20, id: apic_20, parent: apic_16 (entry count 27/100)
    apic_20 { pt3dclear() }
    apic_20 { pt3dadd( 243.821, 199.402, 95.9518, 0.661 ) }
    apic_20 { pt3dadd( 243.886, 198.403, 95.4943, 0.5338 ) }
    apic_20 { pt3dadd( 243.95, 197.286, 96.0733, 0.4068 ) }
    apic_20 { pt3dadd( 244.014, 196.169, 96.6524, 0.2796 ) }
    apic_20 { pt3dadd( 244.078, 195.051, 97.2314, 0.2288 ) }
    // Section: apic_17, id: apic_17, parent: apic_16 (entry count 32/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( 243.821, 199.402, 95.9518, 0.661 ) }
    apic_17 { pt3dadd( 244.696, 199.014, 97.5293, 0.4322 ) }
    apic_17 { pt3dadd( 245.556, 198.301, 97.8788, 0.3814 ) }
    apic_17 { pt3dadd( 246.057, 197.286, 97.5965, 0.2796 ) }
    apic_17 { pt3dadd( 246.383, 196.29, 97.8552, 0.2542 ) }
    apic_17 { pt3dadd( 246.88, 195.433, 99.2544, 0.2288 ) }
    apic_17 { pt3dadd( 247.377, 194.575, 100.653, 0.2288 ) }
    apic_17 { pt3dadd( 247.874, 193.718, 102.052, 0.2288 ) }
    apic_17 { pt3dadd( 248.37, 192.86, 103.452, 0.2288 ) }
    apic_17 { pt3dadd( 248.62, 191.813, 103.899, 0.2542 ) }
    apic_17 { pt3dadd( 248.913, 190.715, 103.899, 0.2796 ) }
    apic_17 { pt3dadd( 249.474, 189.725, 103.899, 0.305 ) }
    apic_17 { pt3dadd( 250.446, 189.612, 104.587, 0.2796 ) }
    apic_17 { pt3dadd( 251.447, 189.728, 105.91, 0.2796 ) }
    apic_17 { pt3dadd( 252.449, 189.843, 107.232, 0.3304 ) }
    // Section: apic_13, id: apic_13, parent: apic_7 (entry count 47/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 218.502, 232.118, 65.5234, 0.5592 ) }
    apic_13 { pt3dadd( 218.494, 231.393, 65.5354, 0.2542 ) }
    apic_13 { pt3dadd( 218.443, 230.252, 65.6267, 0.2796 ) }
    apic_13 { pt3dadd( 218.275, 229.151, 66.1805, 0.3304 ) }
    apic_13 { pt3dadd( 218.337, 228.086, 67.0936, 0.356 ) }
    apic_13 { pt3dadd( 218.073, 227.083, 68.0784, 0.4576 ) }
    apic_13 { pt3dadd( 217.683, 226.091, 67.4615, 0.5592 ) }
    apic_13 { pt3dadd( 217.246, 225.077, 66.7366, 0.6864 ) }
    apic_13 { pt3dadd( 216.568, 224.174, 66.4636, 0.7118 ) }
    apic_13 { pt3dadd( 215.898, 223.275, 65.9344, 0.7118 ) }
    apic_13 { pt3dadd( 215.069, 222.511, 66.0988, 0.7118 ) }
    apic_13 { pt3dadd( 214.185, 221.806, 66.5389, 0.7626 ) }
    apic_13 { pt3dadd( 213.365, 221.013, 66.6369, 0.8136 ) }
    apic_13 { pt3dadd( 212.579, 220.182, 66.6478, 0.839 ) }
    apic_13 { pt3dadd( 211.895, 219.267, 66.6767, 0.8136 ) }
    apic_13 { pt3dadd( 211.705, 218.161, 66.8609, 0.8136 ) }
    apic_13 { pt3dadd( 211.917, 217.084, 67.5688, 0.788 ) }
    apic_13 { pt3dadd( 212.082, 215.96, 67.7914, 0.8136 ) }
    apic_13 { pt3dadd( 212.099, 214.82, 68.033, 0.839 ) }
    apic_13 { pt3dadd( 212.103, 213.715, 68.7369, 0.8644 ) }
    apic_13 { pt3dadd( 212.131, 212.577, 68.8794, 0.8644 ) }
    apic_13 { pt3dadd( 212.374, 211.462, 68.931, 0.7626 ) }
    apic_13 { pt3dadd( 212.973, 210.502, 69.2468, 0.661 ) }
    apic_13 { pt3dadd( 213.235, 209.409, 68.8145, 0.5338 ) }
    apic_13 { pt3dadd( 213.375, 208.309, 68.1433, 0.5338 ) }
    apic_13 { pt3dadd( 212.95, 207.263, 67.7656, 0.5592 ) }
    apic_13 { pt3dadd( 212.077, 206.526, 67.7636, 0.5848 ) }
    // Section: apic_8, id: apic_8, parent: apic_7 (entry count 74/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 218.502, 232.118, 65.5234, 0.5592 ) }
    apic_8 { pt3dadd( 217.147, 232.071, 67.5746, 0.4322 ) }
    apic_8 { pt3dadd( 216.055, 231.867, 68.2027, 0.4322 ) }
    apic_8 { pt3dadd( 214.999, 232.041, 67.3285, 0.4576 ) }
    apic_8 { pt3dadd( 213.866, 232.171, 67.3716, 0.4322 ) }
    apic_8 { pt3dadd( 212.751, 232.423, 67.3565, 0.4322 ) }
    // Section: apic_22, id: apic_22, parent: apic_20 (entry count 80/100)
    apic_22 { pt3dclear() }
    apic_22 { pt3dadd( 244.078, 195.051, 97.2314, 0.2288 ) }
    apic_22 { pt3dadd( 244.708, 193.862, 96.2349, 0.2542 ) }
    apic_22 { pt3dadd( 245.105, 192.934, 95.5646, 0.3304 ) }
    apic_22 { pt3dadd( 244.608, 191.904, 95.5646, 0.4068 ) }
    apic_22 { pt3dadd( 244.44, 190.833, 95.8518, 0.4576 ) }
    apic_22 { pt3dadd( 244.585, 189.721, 96.4132, 0.4322 ) }
    apic_22 { pt3dadd( 244.731, 188.61, 96.9744, 0.4068 ) }
    apic_22 { pt3dadd( 244.877, 187.498, 97.5355, 0.3814 ) }
    apic_22 { pt3dadd( 244.842, 186.377, 97.7869, 0.356 ) }
    apic_22 { pt3dadd( 244.663, 185.247, 97.7869, 0.3304 ) }
    apic_22 { pt3dadd( 244.483, 184.118, 97.7869, 0.2796 ) }
    apic_22 { pt3dadd( 244.303, 182.987, 97.7869, 0.2542 ) }
    apic_22 { pt3dadd( 244.263, 181.868, 98.2374, 0.2288 ) }
    apic_22 { pt3dadd( 244.276, 180.752, 98.8546, 0.2542 ) }
    apic_22 { pt3dadd( 244.288, 179.637, 99.4714, 0.305 ) }
    apic_22 { pt3dadd( 244.299, 178.52, 100.088, 0.3814 ) }
    apic_22 { pt3dadd( 244.31, 177.405, 100.705, 0.4322 ) }
    apic_22 { pt3dadd( 244.322, 176.289, 101.322, 0.4322 ) }
    apic_22 { pt3dadd( 244.488, 175.188, 101.676, 0.4068 ) }
    apic_22 { pt3dadd( 244.862, 174.107, 101.676, 0.356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    apic_22 { pt3dadd( 245.235, 173.025, 101.676, 0.3304 ) }
    apic_22 { pt3dadd( 245.568, 171.939, 101.855, 0.3304 ) }
    apic_22 { pt3dadd( 245.828, 170.843, 102.346, 0.3814 ) }
    apic_22 { pt3dadd( 246.088, 169.747, 102.838, 0.4322 ) }
    apic_22 { pt3dadd( 246.349, 168.652, 103.329, 0.4068 ) }
    apic_22 { pt3dadd( 246.61, 167.556, 103.82, 0.3304 ) }
    apic_22 { pt3dadd( 246.871, 166.46, 104.311, 0.2542 ) }
    apic_22 { pt3dadd( 247.337, 165.43, 104.454, 0.2288 ) }
    apic_22 { pt3dadd( 247.89, 164.429, 104.454, 0.2288 ) }
    apic_22 { pt3dadd( 248.553, 163.51, 104.454, 0.2288 ) }
    apic_22 { pt3dadd( 249.345, 162.682, 104.454, 0.2288 ) }
    apic_22 { pt3dadd( 250.136, 161.857, 104.454, 0.2288 ) }
    apic_22 { pt3dadd( 250.582, 160.885, 104.788, 0.2542 ) }
    apic_22 { pt3dadd( 250.705, 159.779, 105.434, 0.2796 ) }
    apic_22 { pt3dadd( 250.828, 158.673, 106.08, 0.356 ) }
    apic_22 { pt3dadd( 250.95, 157.567, 106.727, 0.4322 ) }
    apic_22 { pt3dadd( 251.072, 156.46, 107.374, 0.5338 ) }
    apic_22 { pt3dadd( 251.158, 155.34, 107.788, 0.5338 ) }
    apic_22 { pt3dadd( 251.177, 154.196, 107.788, 0.483 ) }
    apic_22 { pt3dadd( 251.196, 153.053, 107.788, 0.3814 ) }
    apic_22 { pt3dadd( 251.163, 151.999, 106.945, 0.3304 ) }
    apic_22 { pt3dadd( 251.098, 151.0, 105.592, 0.2796 ) }
    apic_22 { pt3dadd( 251.003, 149.982, 104.454, 0.2542 ) }
    apic_22 { pt3dadd( 250.741, 148.869, 104.454, 0.2288 ) }
    apic_22 { pt3dadd( 250.357, 147.796, 104.454, 0.2288 ) }
    apic_22 { pt3dadd( 249.894, 146.749, 104.454, 0.2288 ) }
    apic_22 { pt3dadd( 249.478, 145.701, 104.567, 0.2288 ) }
    apic_22 { pt3dadd( 249.448, 144.642, 105.619, 0.2288 ) }
    apic_22 { pt3dadd( 249.418, 143.582, 106.672, 0.2288 ) }
    apic_22 { pt3dadd( 249.389, 142.522, 107.724, 0.2288 ) }
    apic_22 { pt3dadd( 249.359, 141.462, 108.776, 0.2288 ) }
    apic_22 { pt3dadd( 249.77, 140.417, 108.899, 0.2288 ) }
    apic_22 { pt3dadd( 250.239, 139.374, 108.899, 0.2288 ) }
    apic_22 { pt3dadd( 250.708, 138.33, 108.899, 0.2288 ) }
    apic_22 { pt3dadd( 251.177, 137.287, 108.899, 0.2288 ) }
    // Section: apic_21, id: apic_21, parent: apic_20 (entry count 35/100)
    apic_21 { pt3dclear() }
    apic_21 { pt3dadd( 244.078, 195.051, 97.2314, 0.2288 ) }
    apic_21 { pt3dadd( 243.501, 194.582, 97.4383, 0.2288 ) }
    apic_21 { pt3dadd( 242.621, 193.863, 97.755, 0.2288 ) }
    apic_21 { pt3dadd( 241.74, 193.146, 98.0717, 0.2288 ) }
    apic_21 { pt3dadd( 240.858, 192.428, 98.3884, 0.2288 ) }
    apic_21 { pt3dadd( 239.977, 191.71, 98.705, 0.2288 ) }
    apic_21 { pt3dadd( 239.096, 190.992, 99.0217, 0.2288 ) }
    apic_21 { pt3dadd( 238.214, 190.275, 99.3384, 0.2288 ) }
    apic_21 { pt3dadd( 237.333, 189.556, 99.6551, 0.2288 ) }
    apic_21 { pt3dadd( 236.452, 188.839, 99.9718, 0.2288 ) }
    apic_21 { pt3dadd( 235.412, 188.376, 100.009, 0.2288 ) }
    apic_21 { pt3dadd( 234.352, 187.947, 100.009, 0.2288 ) }
    apic_21 { pt3dadd( 233.291, 187.518, 100.009, 0.2288 ) }
    apic_21 { pt3dadd( 232.194, 187.206, 100.009, 0.2542 ) }
    apic_21 { pt3dadd( 231.079, 186.949, 100.009, 0.2796 ) }
    apic_21 { pt3dadd( 229.965, 186.692, 100.009, 0.305 ) }
    apic_21 { pt3dadd( 228.906, 186.304, 100.197, 0.2796 ) }
    apic_21 { pt3dadd( 227.919, 185.752, 100.624, 0.2542 ) }
    apic_21 { pt3dadd( 226.933, 185.2, 101.051, 0.2288 ) }
    apic_21 { pt3dadd( 225.946, 184.648, 101.478, 0.2288 ) }
    apic_21 { pt3dadd( 225.184, 183.86, 101.676, 0.2288 ) }
    apic_21 { pt3dadd( 224.706, 182.84, 101.747, 0.2288 ) }
    apic_21 { pt3dadd( 224.58, 181.712, 102.098, 0.2542 ) }
    apic_21 { pt3dadd( 224.455, 180.584, 102.448, 0.2796 ) }
    apic_21 { pt3dadd( 224.329, 179.455, 102.798, 0.305 ) }
    apic_21 { pt3dadd( 224.205, 178.327, 103.148, 0.2796 ) }
    apic_21 { pt3dadd( 224.079, 177.199, 103.498, 0.2542 ) }
    apic_21 { pt3dadd( 223.954, 176.071, 103.848, 0.2288 ) }
    apic_21 { pt3dadd( 223.829, 174.943, 104.199, 0.2288 ) }
    apic_21 { pt3dadd( 223.704, 173.815, 104.549, 0.2288 ) }
    apic_21 { pt3dadd( 223.579, 172.687, 104.899, 0.2288 ) }
    apic_21 { pt3dadd( 223.304, 171.673, 105.874, 0.2288 ) }
    apic_21 { pt3dadd( 222.96, 170.711, 107.138, 0.2288 ) }
    apic_21 { pt3dadd( 222.617, 169.75, 108.402, 0.2288 ) }
    apic_21 { pt3dadd( 222.24, 168.795, 109.616, 0.2288 ) }
    apic_21 { pt3dadd( 221.697, 167.869, 110.584, 0.2288 ) }
    apic_21 { pt3dadd( 221.152, 166.944, 111.552, 0.2288 ) }
    apic_21 { pt3dadd( 220.609, 166.017, 112.52, 0.2288 ) }
    apic_21 { pt3dadd( 220.066, 165.092, 113.488, 0.305 ) }
    apic_21 { pt3dadd( 219.522, 164.166, 114.455, 0.4322 ) }
    // Section: apic_19, id: apic_19, parent: apic_17 (entry count 75/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( 252.449, 189.843, 107.232, 0.3304 ) }
    apic_19 { pt3dadd( 253.086, 190.319, 108.046, 0.2288 ) }
    apic_19 { pt3dadd( 253.913, 190.941, 109.242, 0.2796 ) }
    apic_19 { pt3dadd( 254.74, 191.562, 110.438, 0.3304 ) }
    apic_19 { pt3dadd( 255.567, 192.183, 111.634, 0.3814 ) }
    apic_19 { pt3dadd( 256.7, 192.234, 111.677, 0.3304 ) }
    apic_19 { pt3dadd( 257.724, 192.01, 111.982, 0.2796 ) }
    apic_19 { pt3dadd( 258.497, 191.261, 112.921, 0.2288 ) }
    apic_19 { pt3dadd( 259.273, 190.512, 113.861, 0.2288 ) }
    apic_19 { pt3dadd( 260.047, 189.762, 114.8, 0.2288 ) }
    apic_19 { pt3dadd( 260.822, 189.013, 115.739, 0.2288 ) }
    apic_19 { pt3dadd( 261.595, 188.264, 116.679, 0.2542 ) }
    apic_19 { pt3dadd( 262.37, 187.514, 117.618, 0.2796 ) }
    apic_19 { pt3dadd( 263.113, 186.727, 118.491, 0.305 ) }
    apic_19 { pt3dadd( 263.747, 185.813, 119.135, 0.2796 ) }
    apic_19 { pt3dadd( 264.384, 184.899, 119.78, 0.2542 ) }
    apic_19 { pt3dadd( 265.019, 183.985, 120.425, 0.2288 ) }
    apic_19 { pt3dadd( 265.655, 183.071, 121.07, 0.2288 ) }
    apic_19 { pt3dadd( 266.29, 182.157, 121.714, 0.2288 ) }
    apic_19 { pt3dadd( 266.926, 181.243, 122.359, 0.2542 ) }
    apic_19 { pt3dadd( 267.561, 180.329, 123.004, 0.305 ) }
    apic_19 { pt3dadd( 268.26, 179.472, 123.691, 0.356 ) }
    apic_19 { pt3dadd( 269.03, 178.681, 124.426, 0.356 ) }
    apic_19 { pt3dadd( 269.799, 177.89, 125.16, 0.305 ) }
    apic_19 { pt3dadd( 270.569, 177.098, 125.895, 0.2542 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    apic_19 { pt3dadd( 271.339, 176.306, 126.63, 0.2288 ) }
    apic_19 { pt3dadd( 272.108, 175.516, 127.364, 0.2796 ) }
    apic_19 { pt3dadd( 272.878, 174.724, 128.099, 0.356 ) }
    apic_19 { pt3dadd( 273.647, 173.933, 128.834, 0.4322 ) }
    apic_19 { pt3dadd( 274.63, 173.363, 128.901, 0.4068 ) }
    apic_19 { pt3dadd( 275.634, 172.815, 128.901, 0.3304 ) }
    apic_19 { pt3dadd( 276.21, 171.948, 129.704, 0.2542 ) }
    apic_19 { pt3dadd( 276.656, 170.984, 130.749, 0.2288 ) }
    apic_19 { pt3dadd( 277.102, 170.021, 131.793, 0.2288 ) }
    apic_19 { pt3dadd( 277.532, 169.055, 132.84, 0.2288 ) }
    apic_19 { pt3dadd( 277.596, 168.003, 133.934, 0.2288 ) }
    apic_19 { pt3dadd( 277.664, 166.953, 135.029, 0.2288 ) }
    apic_19 { pt3dadd( 277.73, 165.902, 136.124, 0.2288 ) }
    // Section: apic_18, id: apic_18, parent: apic_17 (entry count 13/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( 252.449, 189.843, 107.232, 0.3304 ) }
    apic_18 { pt3dadd( 252.594, 188.975, 107.95, 0.2288 ) }
    apic_18 { pt3dadd( 252.774, 187.904, 108.833, 0.2288 ) }
    apic_18 { pt3dadd( 252.953, 186.833, 109.717, 0.2288 ) }
    apic_18 { pt3dadd( 253.133, 185.763, 110.6, 0.2288 ) }
    apic_18 { pt3dadd( 253.483, 184.73, 111.122, 0.2288 ) }
    apic_18 { pt3dadd( 254.076, 183.752, 111.122, 0.2288 ) }
    apic_18 { pt3dadd( 254.429, 182.696, 111.668, 0.2288 ) }
    apic_18 { pt3dadd( 254.744, 181.627, 112.305, 0.2288 ) }
    apic_18 { pt3dadd( 255.058, 180.559, 112.942, 0.2288 ) }
    apic_18 { pt3dadd( 255.413, 179.492, 113.344, 0.2288 ) }
    apic_18 { pt3dadd( 255.837, 178.43, 113.344, 0.2288 ) }
    apic_18 { pt3dadd( 256.262, 177.368, 113.344, 0.2288 ) }
    apic_18 { pt3dadd( 256.755, 176.377, 113.873, 0.2288 ) }
    apic_18 { pt3dadd( 257.293, 175.435, 114.762, 0.2288 ) }
    apic_18 { pt3dadd( 257.831, 174.493, 115.652, 0.2288 ) }
    apic_18 { pt3dadd( 258.368, 173.552, 116.541, 0.2288 ) }
    apic_18 { pt3dadd( 258.908, 172.61, 117.431, 0.2288 ) }
    apic_18 { pt3dadd( 259.445, 171.669, 118.32, 0.2288 ) }
    apic_18 { pt3dadd( 259.777, 170.656, 118.9, 0.2288 ) }
    apic_18 { pt3dadd( 259.721, 169.513, 118.9, 0.2288 ) }
    apic_18 { pt3dadd( 259.665, 168.372, 118.9, 0.2288 ) }
    apic_18 { pt3dadd( 260.281, 167.516, 118.9, 0.2288 ) }
    apic_18 { pt3dadd( 261.147, 166.769, 118.9, 0.2288 ) }
    apic_18 { pt3dadd( 262.013, 166.022, 118.9, 0.2288 ) }
    apic_18 { pt3dadd( 262.898, 165.358, 119.556, 0.2288 ) }
    apic_18 { pt3dadd( 263.786, 164.708, 120.325, 0.2288 ) }
    apic_18 { pt3dadd( 264.674, 164.06, 121.094, 0.2288 ) }
    apic_18 { pt3dadd( 265.562, 163.411, 121.863, 0.2288 ) }
    apic_18 { pt3dadd( 266.45, 162.762, 122.632, 0.2288 ) }
    apic_18 { pt3dadd( 267.338, 162.113, 123.401, 0.2288 ) }
    apic_18 { pt3dadd( 268.227, 161.463, 124.17, 0.2288 ) }
    apic_18 { pt3dadd( 269.115, 160.814, 124.939, 0.2288 ) }
    apic_18 { pt3dadd( 270.169, 160.511, 125.667, 0.2288 ) }
    apic_18 { pt3dadd( 271.242, 160.245, 126.391, 0.2288 ) }
    apic_18 { pt3dadd( 272.314, 159.978, 127.116, 0.2288 ) }
    apic_18 { pt3dadd( 273.387, 159.712, 127.84, 0.2288 ) }
    apic_18 { pt3dadd( 274.459, 159.445, 128.564, 0.2288 ) }
    apic_18 { pt3dadd( 275.531, 159.178, 129.289, 0.2288 ) }
    apic_18 { pt3dadd( 276.604, 158.912, 130.013, 0.2288 ) }
    apic_18 { pt3dadd( 277.676, 158.645, 130.737, 0.2288 ) }
    apic_18 { pt3dadd( 278.783, 158.505, 131.123, 0.2288 ) }
    apic_18 { pt3dadd( 279.927, 158.506, 131.123, 0.2288 ) }
    apic_18 { pt3dadd( 281.07, 158.508, 131.123, 0.2288 ) }
    apic_18 { pt3dadd( 282.215, 158.509, 131.123, 0.2288 ) }
    apic_18 { pt3dadd( 283.219, 158.129, 131.441, 0.2288 ) }
    apic_18 { pt3dadd( 284.118, 157.46, 132.0, 0.2288 ) }
    apic_18 { pt3dadd( 285.017, 156.791, 132.558, 0.2288 ) }
    apic_18 { pt3dadd( 285.917, 156.122, 133.117, 0.2288 ) }
    apic_18 { pt3dadd( 286.816, 155.452, 133.675, 0.2288 ) }
    apic_18 { pt3dadd( 287.716, 154.783, 134.234, 0.2288 ) }
    apic_18 { pt3dadd( 288.63, 154.111, 134.457, 0.305 ) }
    apic_18 { pt3dadd( 289.553, 153.436, 134.457, 0.3814 ) }
    // Section: apic_15, id: apic_15, parent: apic_13 (entry count 66/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( 212.077, 206.526, 67.7636, 0.5848 ) }
    apic_15 { pt3dadd( 212.109, 205.906, 68.2618, 0.5592 ) }
    apic_15 { pt3dadd( 212.257, 204.775, 68.0518, 0.4068 ) }
    apic_15 { pt3dadd( 212.404, 203.643, 67.842, 0.2796 ) }
    apic_15 { pt3dadd( 212.553, 202.512, 67.6323, 0.2288 ) }
    apic_15 { pt3dadd( 212.701, 201.382, 67.4223, 0.2288 ) }
    apic_15 { pt3dadd( 212.853, 200.25, 67.2286, 0.2796 ) }
    apic_15 { pt3dadd( 213.064, 199.126, 67.2286, 0.3814 ) }
    apic_15 { pt3dadd( 213.275, 198.002, 67.2286, 0.5592 ) }
    apic_15 { pt3dadd( 213.994, 197.145, 67.2286, 0.661 ) }
    apic_15 { pt3dadd( 214.803, 196.336, 67.2286, 0.7626 ) }
    apic_15 { pt3dadd( 215.255, 195.433, 67.2286, 0.788 ) }
    apic_15 { pt3dadd( 214.946, 194.331, 67.2286, 0.8136 ) }
    apic_15 { pt3dadd( 214.641, 193.231, 67.2286, 0.7118 ) }
    apic_15 { pt3dadd( 214.958, 192.131, 67.2286, 0.5848 ) }
    apic_15 { pt3dadd( 215.276, 191.032, 67.2286, 0.5592 ) }
    apic_15 { pt3dadd( 215.562, 189.927, 67.184, 0.5848 ) }
    apic_15 { pt3dadd( 215.737, 188.799, 66.9796, 0.6356 ) }
    apic_15 { pt3dadd( 215.911, 187.672, 66.7752, 0.5848 ) }
    apic_15 { pt3dadd( 216.084, 186.544, 66.5708, 0.5592 ) }
    apic_15 { pt3dadd( 216.26, 185.417, 66.3664, 0.5084 ) }
    apic_15 { pt3dadd( 216.433, 184.289, 66.162, 0.4322 ) }
    apic_15 { pt3dadd( 216.608, 183.161, 65.9576, 0.356 ) }
    apic_15 { pt3dadd( 216.782, 182.034, 65.7532, 0.3304 ) }
    apic_15 { pt3dadd( 216.948, 180.905, 65.5617, 0.3814 ) }
    apic_15 { pt3dadd( 216.981, 179.762, 65.5617, 0.4322 ) }
    apic_15 { pt3dadd( 217.016, 178.618, 65.5617, 0.4068 ) }
    apic_15 { pt3dadd( 217.26, 177.504, 65.5617, 0.3304 ) }
    apic_15 { pt3dadd( 217.54, 176.395, 65.5617, 0.2542 ) }
    apic_15 { pt3dadd( 217.71, 175.27, 65.5617, 0.2288 ) }
    apic_15 { pt3dadd( 217.747, 174.127, 65.5617, 0.2288 ) }
    apic_15 { pt3dadd( 217.783, 172.983, 65.5617, 0.2542 ) }
    apic_15 { pt3dadd( 217.818, 171.84, 65.5617, 0.2796 ) }
    apic_15 { pt3dadd( 217.851, 170.696, 65.5617, 0.305 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    apic_15 { pt3dadd( 217.963, 169.582, 65.0387, 0.2796 ) }
    apic_15 { pt3dadd( 218.085, 168.47, 64.4442, 0.2542 ) }
    apic_15 { pt3dadd( 218.209, 167.359, 63.8498, 0.2288 ) }
    apic_15 { pt3dadd( 218.331, 166.248, 63.2554, 0.2288 ) }
    apic_15 { pt3dadd( 218.455, 165.137, 62.6609, 0.2288 ) }
    apic_15 { pt3dadd( 218.531, 164.018, 62.228, 0.2288 ) }
    apic_15 { pt3dadd( 218.485, 162.875, 62.228, 0.2288 ) }
    apic_15 { pt3dadd( 218.436, 161.731, 62.228, 0.2288 ) }
    apic_15 { pt3dadd( 218.375, 160.589, 62.228, 0.2288 ) }
    apic_15 { pt3dadd( 218.312, 159.446, 62.228, 0.2796 ) }
    apic_15 { pt3dadd( 217.738, 158.482, 62.228, 0.356 ) }
    apic_15 { pt3dadd( 217.079, 157.547, 62.228, 0.4322 ) }
    apic_15 { pt3dadd( 216.42, 156.611, 62.228, 0.4068 ) }
    apic_15 { pt3dadd( 216.041, 155.592, 62.228, 0.3304 ) }
    apic_15 { pt3dadd( 216.075, 154.449, 62.228, 0.2542 ) }
    apic_15 { pt3dadd( 216.619, 153.462, 62.228, 0.2288 ) }
    apic_15 { pt3dadd( 217.51, 152.979, 62.228, 0.2288 ) }
    apic_15 { pt3dadd( 218.653, 152.936, 62.228, 0.2288 ) }
    apic_15 { pt3dadd( 219.511, 152.301, 61.7081, 0.2542 ) }
    apic_15 { pt3dadd( 220.292, 151.51, 61.0512, 0.2796 ) }
    apic_15 { pt3dadd( 221.075, 150.72, 60.394, 0.305 ) }
    apic_15 { pt3dadd( 221.857, 149.929, 59.7372, 0.2796 ) }
    apic_15 { pt3dadd( 222.839, 149.508, 59.4502, 0.2542 ) }
    apic_15 { pt3dadd( 223.975, 149.374, 59.4502, 0.2288 ) }
    apic_15 { pt3dadd( 224.813, 148.793, 58.7787, 0.2288 ) }
    apic_15 { pt3dadd( 225.496, 147.976, 57.7545, 0.2288 ) }
    apic_15 { pt3dadd( 226.178, 147.158, 56.73, 0.2288 ) }
    apic_15 { pt3dadd( 226.861, 146.342, 55.7054, 0.2288 ) }
    apic_15 { pt3dadd( 227.567, 145.456, 55.5607, 0.2288 ) }
    apic_15 { pt3dadd( 228.278, 144.56, 55.5607, 0.305 ) }
    apic_15 { pt3dadd( 228.989, 143.663, 55.5607, 0.4322 ) }
    // Section: apic_14, id: apic_14, parent: apic_13 (entry count 31/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 212.077, 206.526, 67.7636, 0.5848 ) }
    apic_14 { pt3dadd( 210.992, 206.039, 67.7902, 0.7626 ) }
    apic_14 { pt3dadd( 209.882, 205.842, 68.0047, 0.8136 ) }
    apic_14 { pt3dadd( 209.061, 205.199, 69.134, 0.7372 ) }
    apic_14 { pt3dadd( 208.034, 204.784, 69.7144, 0.6102 ) }
    apic_14 { pt3dadd( 207.032, 204.32, 69.3848, 0.5592 ) }
    apic_14 { pt3dadd( 206.158, 203.949, 70.8786, 0.6102 ) }
    apic_14 { pt3dadd( 205.629, 203.203, 72.4819, 0.7372 ) }
    apic_14 { pt3dadd( 205.426, 202.186, 73.6358, 0.7626 ) }
    apic_14 { pt3dadd( 205.442, 201.094, 74.2577, 0.6864 ) }
    apic_14 { pt3dadd( 205.597, 199.98, 74.251, 0.5848 ) }
    apic_14 { pt3dadd( 205.293, 198.92, 74.6446, 0.5592 ) }
    apic_14 { pt3dadd( 204.569, 198.058, 75.0893, 0.6102 ) }
    apic_14 { pt3dadd( 203.756, 197.286, 75.5695, 0.6864 ) }
    apic_14 { pt3dadd( 202.87, 196.569, 75.6011, 0.788 ) }
    apic_14 { pt3dadd( 201.883, 195.992, 75.6053, 0.8644 ) }
    apic_14 { pt3dadd( 200.872, 195.457, 75.6288, 0.9406 ) }
    apic_14 { pt3dadd( 199.868, 194.912, 75.7624, 0.9152 ) }
    apic_14 { pt3dadd( 198.852, 194.427, 76.2003, 0.8898 ) }
    apic_14 { pt3dadd( 197.808, 194.028, 76.7301, 0.8136 ) }
    apic_14 { pt3dadd( 196.721, 193.707, 76.8734, 0.8136 ) }
    apic_14 { pt3dadd( 195.598, 193.529, 76.8289, 0.788 ) }
    apic_14 { pt3dadd( 194.55, 193.131, 76.4467, 0.7626 ) }
    apic_14 { pt3dadd( 193.572, 192.574, 75.9671, 0.6356 ) }
    apic_14 { pt3dadd( 192.536, 192.122, 75.7058, 0.5592 ) }
    apic_14 { pt3dadd( 191.435, 191.86, 75.8092, 0.4576 ) }
    apic_14 { pt3dadd( 190.303, 191.731, 75.924, 0.483 ) }
    apic_14 { pt3dadd( 189.283, 191.316, 76.3582, 0.5084 ) }
    apic_14 { pt3dadd( 188.498, 190.531, 76.7231, 0.6102 ) }
    apic_14 { pt3dadd( 187.933, 189.541, 76.7407, 0.661 ) }
    apic_14 { pt3dadd( 187.413, 188.524, 76.8429, 0.6356 ) }
    apic_14 { pt3dadd( 186.787, 187.603, 77.3405, 0.6102 ) }
    apic_14 { pt3dadd( 186.106, 186.714, 77.7879, 0.5848 ) }
    apic_14 { pt3dadd( 185.409, 185.809, 77.8518, 0.6102 ) }
    apic_14 { pt3dadd( 184.831, 184.834, 77.9302, 0.6102 ) }
    apic_14 { pt3dadd( 184.24, 183.926, 78.5526, 0.5848 ) }
    apic_14 { pt3dadd( 183.677, 183.539, 79.7871, 0.5338 ) }
    apic_14 { pt3dadd( 182.847, 182.85, 80.7215, 0.4322 ) }
    apic_14 { pt3dadd( 182.016, 182.163, 81.6558, 0.3304 ) }
    apic_14 { pt3dadd( 181.187, 181.474, 82.5902, 0.305 ) }
    apic_14 { pt3dadd( 180.111, 181.249, 82.7856, 0.3304 ) }
    apic_14 { pt3dadd( 179.019, 181.093, 83.3045, 0.3814 ) }
    apic_14 { pt3dadd( 177.969, 180.889, 84.2965, 0.3304 ) }
    apic_14 { pt3dadd( 176.919, 180.686, 85.2888, 0.2796 ) }
    apic_14 { pt3dadd( 175.825, 180.688, 86.0286, 0.2288 ) }
    apic_14 { pt3dadd( 174.714, 180.769, 86.6715, 0.2288 ) }
    apic_14 { pt3dadd( 173.604, 180.85, 87.3146, 0.2542 ) }
    apic_14 { pt3dadd( 172.493, 180.933, 87.9575, 0.2796 ) }
    apic_14 { pt3dadd( 171.426, 180.784, 88.5951, 0.3304 ) }
    apic_14 { pt3dadd( 170.425, 180.296, 89.2245, 0.356 ) }
    apic_14 { pt3dadd( 169.423, 179.806, 89.8542, 0.3814 ) }
    apic_14 { pt3dadd( 168.422, 179.317, 90.4837, 0.4068 ) }
    apic_14 { pt3dadd( 167.42, 178.828, 91.1131, 0.4322 ) }
    apic_14 { pt3dadd( 166.304, 179.069, 91.1196, 0.483 ) }
    apic_14 { pt3dadd( 165.187, 179.317, 91.1196, 0.4576 ) }
    apic_14 { pt3dadd( 164.07, 179.564, 91.1196, 0.4576 ) }
    apic_14 { pt3dadd( 162.948, 179.784, 91.1196, 0.4322 ) }
    apic_14 { pt3dadd( 161.823, 179.995, 91.1196, 0.4576 ) }
    apic_14 { pt3dadd( 160.685, 180.108, 91.1196, 0.4068 ) }
    apic_14 { pt3dadd( 159.546, 180.211, 91.1196, 0.3304 ) }
    apic_14 { pt3dadd( 158.406, 180.314, 91.1196, 0.2542 ) }
    apic_14 { pt3dadd( 157.278, 180.363, 91.1196, 0.2542 ) }
    apic_14 { pt3dadd( 156.269, 179.824, 91.1196, 0.2796 ) }
    apic_14 { pt3dadd( 155.259, 179.286, 91.1196, 0.305 ) }
    apic_14 { pt3dadd( 154.25, 178.748, 91.1196, 0.2796 ) }
    apic_14 { pt3dadd( 153.226, 178.247, 91.1196, 0.2542 ) }
    apic_14 { pt3dadd( 152.124, 177.939, 91.1196, 0.2288 ) }
    apic_14 { pt3dadd( 151.022, 177.631, 91.1196, 0.2288 ) }
    apic_14 { pt3dadd( 149.92, 177.323, 91.1196, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    apic_14 { pt3dadd( 148.818, 177.016, 91.1196, 0.2288 ) }
    apic_14 { pt3dadd( 147.717, 176.708, 91.1196, 0.2288 ) }
    // Section: apic_12, id: apic_12, parent: apic_8 (entry count 2/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 212.751, 232.423, 67.3565, 0.4322 ) }
    apic_12 { pt3dadd( 212.027, 231.266, 65.8241, 0.5338 ) }
    apic_12 { pt3dadd( 211.3, 230.455, 66.4362, 0.5848 ) }
    apic_12 { pt3dadd( 210.438, 229.777, 67.212, 0.6864 ) }
    apic_12 { pt3dadd( 209.584, 229.041, 67.6402, 0.788 ) }
    apic_12 { pt3dadd( 208.931, 228.117, 67.594, 0.8644 ) }
    apic_12 { pt3dadd( 208.255, 227.251, 66.904, 0.9152 ) }
    apic_12 { pt3dadd( 207.529, 226.399, 66.362, 0.8898 ) }
    apic_12 { pt3dadd( 206.667, 225.692, 65.7894, 0.8644 ) }
    apic_12 { pt3dadd( 205.825, 224.929, 65.7588, 0.8136 ) }
    apic_12 { pt3dadd( 205.069, 224.25, 66.9192, 0.788 ) }
    apic_12 { pt3dadd( 204.655, 223.26, 67.6746, 0.7372 ) }
    apic_12 { pt3dadd( 204.082, 222.278, 67.7538, 0.7118 ) }
    apic_12 { pt3dadd( 203.399, 221.361, 67.732, 0.661 ) }
    apic_12 { pt3dadd( 202.704, 220.453, 67.6242, 0.661 ) }
    apic_12 { pt3dadd( 201.978, 219.606, 67.034, 0.661 ) }
    apic_12 { pt3dadd( 201.087, 219.057, 65.9498, 0.7118 ) }
    apic_12 { pt3dadd( 200.218, 218.34, 65.548, 0.7626 ) }
    apic_12 { pt3dadd( 199.5, 217.454, 65.52, 0.8136 ) }
    apic_12 { pt3dadd( 199.163, 216.367, 65.52, 0.8644 ) }
    apic_12 { pt3dadd( 198.634, 215.356, 65.5194, 0.839 ) }
    apic_12 { pt3dadd( 198.1, 214.343, 65.5175, 0.839 ) }
    apic_12 { pt3dadd( 197.827, 213.235, 65.5021, 0.7626 ) }
    apic_12 { pt3dadd( 197.438, 212.161, 65.4108, 0.788 ) }
    apic_12 { pt3dadd( 196.968, 211.141, 64.8802, 0.788 ) }
    apic_12 { pt3dadd( 196.58, 210.073, 64.5736, 0.8644 ) }
    apic_12 { pt3dadd( 196.488, 208.969, 65.2313, 0.8898 ) }
    apic_12 { pt3dadd( 196.198, 207.863, 65.2364, 0.8898 ) }
    apic_12 { pt3dadd( 195.8, 206.836, 64.475, 0.8136 ) }
    apic_12 { pt3dadd( 195.089, 205.944, 64.318, 0.661 ) }
    apic_12 { pt3dadd( 194.316, 205.113, 63.957, 0.5338 ) }
    apic_12 { pt3dadd( 193.813, 204.122, 63.3492, 0.4576 ) }
    apic_12 { pt3dadd( 193.625, 203.01, 63.7129, 0.4576 ) }
    apic_12 { pt3dadd( 193.007, 202.053, 63.6056, 0.483 ) }
    apic_12 { pt3dadd( 192.599, 201.001, 63.2968, 0.5084 ) }
    apic_12 { pt3dadd( 191.843, 200.154, 63.3713, 0.5848 ) }
    apic_12 { pt3dadd( 190.863, 199.581, 63.6843, 0.6102 ) }
    apic_12 { pt3dadd( 189.944, 198.947, 64.1892, 0.6864 ) }
    apic_12 { pt3dadd( 189.128, 198.159, 63.8725, 0.7372 ) }
    apic_12 { pt3dadd( 188.355, 197.359, 63.2484, 0.839 ) }
    apic_12 { pt3dadd( 187.606, 196.506, 62.9821, 0.839 ) }
    apic_12 { pt3dadd( 186.972, 195.584, 62.4456, 0.7372 ) }
    apic_12 { pt3dadd( 186.273, 194.696, 62.5512, 0.5338 ) }
    apic_12 { pt3dadd( 185.417, 194.009, 63.2296, 0.4068 ) }
    apic_12 { pt3dadd( 184.532, 193.327, 63.1187, 0.4068 ) }
    apic_12 { pt3dadd( 184.009, 192.328, 62.673, 0.5084 ) }
    apic_12 { pt3dadd( 183.548, 191.307, 62.1939, 0.5592 ) }
    apic_12 { pt3dadd( 183.111, 190.276, 62.1751, 0.5338 ) }
    apic_12 { pt3dadd( 183.037, 189.137, 62.27, 0.5084 ) }
    apic_12 { pt3dadd( 182.668, 188.128, 62.7427, 0.5592 ) }
    apic_12 { pt3dadd( 181.865, 187.403, 63.6227, 0.661 ) }
    apic_12 { pt3dadd( 180.98, 186.726, 64.2004, 0.7372 ) }
    apic_12 { pt3dadd( 180.147, 185.95, 64.3835, 0.7372 ) }
    apic_12 { pt3dadd( 179.402, 185.085, 64.3191, 0.661 ) }
    apic_12 { pt3dadd( 178.714, 184.192, 63.9612, 0.6102 ) }
    apic_12 { pt3dadd( 177.942, 183.39, 63.4228, 0.5592 ) }
    apic_12 { pt3dadd( 177.029, 182.717, 63.4203, 0.6102 ) }
    apic_12 { pt3dadd( 176.001, 182.279, 63.849, 0.6356 ) }
    apic_12 { pt3dadd( 174.959, 181.904, 64.3843, 0.7118 ) }
    apic_12 { pt3dadd( 173.994, 181.3, 64.5854, 0.7372 ) }
    apic_12 { pt3dadd( 173.175, 180.647, 65.4366, 0.7372 ) }
    apic_12 { pt3dadd( 172.418, 179.982, 66.505, 0.7118 ) }
    apic_12 { pt3dadd( 171.628, 179.164, 66.6162, 0.6864 ) }
    apic_12 { pt3dadd( 170.842, 178.345, 66.4698, 0.6356 ) }
    apic_12 { pt3dadd( 169.954, 177.647, 66.0509, 0.5592 ) }
    apic_12 { pt3dadd( 169.099, 176.912, 65.637, 0.483 ) }
    apic_12 { pt3dadd( 168.346, 176.058, 65.4912, 0.4576 ) }
    apic_12 { pt3dadd( 167.522, 175.288, 65.3719, 0.4322 ) }
    apic_12 { pt3dadd( 166.49, 174.961, 64.895, 0.4068 ) }
    apic_12 { pt3dadd( 165.365, 174.975, 64.6724, 0.4322 ) }
    apic_12 { pt3dadd( 164.252, 175.184, 64.5394, 0.5338 ) }
    apic_12 { pt3dadd( 163.13, 175.283, 64.4064, 0.6102 ) }
    apic_12 { pt3dadd( 162.035, 175.01, 64.4375, 0.6102 ) }
    apic_12 { pt3dadd( 161.025, 174.485, 64.584, 0.5338 ) }
    apic_12 { pt3dadd( 159.983, 174.163, 65.1507, 0.5084 ) }
    apic_12 { pt3dadd( 158.92, 173.826, 65.5668, 0.483 ) }
    apic_12 { pt3dadd( 158.008, 173.191, 66.0285, 0.5084 ) }
    apic_12 { pt3dadd( 157.197, 172.413, 66.5487, 0.5084 ) }
    apic_12 { pt3dadd( 156.393, 171.611, 66.8716, 0.5848 ) }
    apic_12 { pt3dadd( 155.59, 170.829, 67.3957, 0.5848 ) }
    apic_12 { pt3dadd( 154.741, 170.088, 67.3957, 0.5592 ) }
    apic_12 { pt3dadd( 153.926, 169.29, 67.2476, 0.4322 ) }
    apic_12 { pt3dadd( 153.645, 168.571, 67.7961, 0.356 ) }
    apic_12 { pt3dadd( 153.294, 167.553, 68.7453, 0.2796 ) }
    apic_12 { pt3dadd( 152.82, 166.595, 69.4509, 0.2542 ) }
    apic_12 { pt3dadd( 151.978, 165.82, 69.4509, 0.2288 ) }
    apic_12 { pt3dadd( 151.09, 165.099, 69.4509, 0.2288 ) }
    apic_12 { pt3dadd( 150.09, 164.641, 70.0028, 0.2288 ) }
    apic_12 { pt3dadd( 149.049, 164.276, 70.7518, 0.2288 ) }
    apic_12 { pt3dadd( 148.078, 163.975, 70.2976, 0.2288 ) }
    apic_12 { pt3dadd( 147.172, 163.734, 68.6935, 0.2288 ) }
    apic_12 { pt3dadd( 146.266, 163.494, 67.0897, 0.2288 ) }
    apic_12 { pt3dadd( 145.36, 163.252, 65.4856, 0.2288 ) }
    apic_12 { pt3dadd( 144.366, 163.4, 64.3504, 0.2288 ) }
    apic_12 { pt3dadd( 143.334, 163.714, 63.415, 0.2288 ) }
    apic_12 { pt3dadd( 142.302, 164.028, 62.4795, 0.2288 ) }
    apic_12 { pt3dadd( 141.271, 164.342, 61.544, 0.2288 ) }
    apic_12 { pt3dadd( 140.215, 164.578, 60.6516, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    apic_12 { pt3dadd( 139.14, 164.75, 59.7957, 0.2288 ) }
    apic_12 { pt3dadd( 138.064, 164.921, 58.9397, 0.2288 ) }
    apic_12 { pt3dadd( 136.988, 165.093, 58.0835, 0.2796 ) }
    apic_12 { pt3dadd( 135.913, 165.264, 57.2275, 0.3304 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 4/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 212.751, 232.423, 67.3565, 0.4322 ) }
    apic_9 { pt3dadd( 211.289, 232.582, 67.8404, 0.6102 ) }
    apic_9 { pt3dadd( 210.182, 232.66, 68.4947, 0.6864 ) }
    apic_9 { pt3dadd( 209.22, 232.965, 69.7687, 0.7118 ) }
    apic_9 { pt3dadd( 208.099, 233.018, 69.9076, 0.8136 ) }
    apic_9 { pt3dadd( 206.967, 232.95, 69.571, 0.7626 ) }
    apic_9 { pt3dadd( 205.899, 232.59, 69.1435, 0.6864 ) }
    apic_9 { pt3dadd( 204.814, 232.303, 68.6221, 0.5338 ) }
    apic_9 { pt3dadd( 203.711, 232.213, 67.9176, 0.5084 ) }
    apic_9 { pt3dadd( 202.662, 232.605, 68.3777, 0.483 ) }
    // Section: apic_11, id: apic_11, parent: apic_9 (entry count 14/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 202.662, 232.605, 68.3777, 0.483 ) }
    apic_11 { pt3dadd( 201.766, 231.912, 68.7011, 0.3304 ) }
    apic_11 { pt3dadd( 200.77, 231.371, 69.0752, 0.2796 ) }
    apic_11 { pt3dadd( 199.773, 230.829, 69.4495, 0.2288 ) }
    apic_11 { pt3dadd( 198.777, 230.29, 69.8236, 0.2288 ) }
    apic_11 { pt3dadd( 197.78, 229.748, 70.198, 0.2796 ) }
    apic_11 { pt3dadd( 196.784, 229.207, 70.5723, 0.3814 ) }
    apic_11 { pt3dadd( 195.788, 228.666, 70.9464, 0.483 ) }
    apic_11 { pt3dadd( 194.714, 228.484, 71.1178, 0.483 ) }
    apic_11 { pt3dadd( 193.576, 228.604, 71.1178, 0.4322 ) }
    apic_11 { pt3dadd( 192.439, 228.725, 71.1178, 0.3814 ) }
    apic_11 { pt3dadd( 191.327, 228.676, 71.1178, 0.3814 ) }
    apic_11 { pt3dadd( 190.279, 228.218, 71.1178, 0.3304 ) }
    apic_11 { pt3dadd( 189.231, 227.759, 71.1178, 0.305 ) }
    apic_11 { pt3dadd( 188.211, 227.249, 71.1178, 0.2796 ) }
    apic_11 { pt3dadd( 187.252, 226.624, 71.1178, 0.356 ) }
    apic_11 { pt3dadd( 186.292, 226.001, 71.1178, 0.3814 ) }
    apic_11 { pt3dadd( 185.334, 225.377, 71.1178, 0.4068 ) }
    apic_11 { pt3dadd( 184.344, 224.814, 71.1178, 0.3304 ) }
    apic_11 { pt3dadd( 183.27, 224.423, 71.1178, 0.305 ) }
    apic_11 { pt3dadd( 182.195, 224.032, 71.1178, 0.2796 ) }
    apic_11 { pt3dadd( 181.119, 223.641, 71.1178, 0.305 ) }
    apic_11 { pt3dadd( 180.086, 223.171, 71.1178, 0.2796 ) }
    apic_11 { pt3dadd( 179.165, 222.493, 71.1178, 0.2542 ) }
    apic_11 { pt3dadd( 178.244, 221.815, 71.1178, 0.2288 ) }
    apic_11 { pt3dadd( 177.323, 221.135, 71.1178, 0.2288 ) }
    apic_11 { pt3dadd( 176.455, 220.402, 71.1178, 0.2288 ) }
    apic_11 { pt3dadd( 175.74, 219.508, 71.1178, 0.2288 ) }
    apic_11 { pt3dadd( 175.025, 218.616, 71.1178, 0.305 ) }
    apic_11 { pt3dadd( 174.311, 217.723, 71.1178, 0.3814 ) }
    apic_11 { pt3dadd( 173.348, 217.172, 71.787, 0.4576 ) }
    apic_11 { pt3dadd( 172.381, 216.627, 72.4654, 0.3814 ) }
    apic_11 { pt3dadd( 171.415, 216.082, 73.1438, 0.3304 ) }
    apic_11 { pt3dadd( 170.447, 215.536, 73.8223, 0.305 ) }
    apic_11 { pt3dadd( 169.473, 215.0, 74.4514, 0.4068 ) }
    apic_11 { pt3dadd( 168.412, 214.576, 74.4514, 0.5338 ) }
    apic_11 { pt3dadd( 167.349, 214.151, 74.4514, 0.6102 ) }
    apic_11 { pt3dadd( 166.262, 213.883, 74.4514, 0.6102 ) }
    apic_11 { pt3dadd( 165.12, 213.954, 74.4514, 0.483 ) }
    apic_11 { pt3dadd( 163.977, 214.025, 74.4514, 0.3814 ) }
    apic_11 { pt3dadd( 162.845, 214.148, 74.6231, 0.2796 ) }
    apic_11 { pt3dadd( 161.719, 214.308, 74.9185, 0.2542 ) }
    apic_11 { pt3dadd( 160.592, 214.468, 75.2142, 0.2288 ) }
    apic_11 { pt3dadd( 159.467, 214.628, 75.5096, 0.2288 ) }
    apic_11 { pt3dadd( 158.34, 214.788, 75.805, 0.2542 ) }
    apic_11 { pt3dadd( 157.214, 214.948, 76.1006, 0.2796 ) }
    apic_11 { pt3dadd( 156.087, 215.109, 76.396, 0.3304 ) }
    apic_11 { pt3dadd( 154.962, 215.27, 76.6508, 0.3304 ) }
    apic_11 { pt3dadd( 153.845, 215.464, 76.2723, 0.356 ) }
    apic_11 { pt3dadd( 152.729, 215.658, 75.8937, 0.3304 ) }
    apic_11 { pt3dadd( 151.611, 215.852, 75.5152, 0.3304 ) }
    apic_11 { pt3dadd( 150.494, 216.046, 75.1366, 0.3304 ) }
    apic_11 { pt3dadd( 149.378, 216.24, 74.758, 0.4068 ) }
    apic_11 { pt3dadd( 148.261, 216.434, 74.3795, 0.483 ) }
    apic_11 { pt3dadd( 147.145, 216.628, 74.0009, 0.483 ) }
    apic_11 { pt3dadd( 146.027, 216.822, 73.6224, 0.3814 ) }
    apic_11 { pt3dadd( 144.92, 217.017, 73.1427, 0.2796 ) }
    apic_11 { pt3dadd( 143.839, 217.216, 72.3682, 0.2288 ) }
    apic_11 { pt3dadd( 142.758, 217.415, 71.5938, 0.2288 ) }
    apic_11 { pt3dadd( 141.676, 217.613, 70.8193, 0.2542 ) }
    apic_11 { pt3dadd( 140.595, 217.812, 70.0448, 0.2796 ) }
    apic_11 { pt3dadd( 139.513, 218.01, 69.2703, 0.305 ) }
    apic_11 { pt3dadd( 138.432, 218.209, 68.4958, 0.2796 ) }
    apic_11 { pt3dadd( 137.328, 218.24, 67.7989, 0.2542 ) }
    apic_11 { pt3dadd( 136.218, 218.228, 67.1216, 0.2288 ) }
    apic_11 { pt3dadd( 135.107, 218.217, 66.4443, 0.2288 ) }
    apic_11 { pt3dadd( 133.998, 218.205, 65.7672, 0.2288 ) }
    apic_11 { pt3dadd( 132.888, 218.194, 65.0899, 0.2796 ) }
    apic_11 { pt3dadd( 131.935, 217.611, 65.0062, 0.3304 ) }
    apic_11 { pt3dadd( 131.016, 216.93, 65.0062, 0.3814 ) }
    apic_11 { pt3dadd( 130.112, 216.229, 65.0062, 0.356 ) }
    apic_11 { pt3dadd( 129.176, 215.573, 65.0062, 0.356 ) }
    apic_11 { pt3dadd( 128.206, 214.967, 65.0062, 0.3814 ) }
    apic_11 { pt3dadd( 127.112, 214.839, 64.4216, 0.4576 ) }
    apic_11 { pt3dadd( 126.002, 214.772, 63.7624, 0.483 ) }
    apic_11 { pt3dadd( 124.892, 214.706, 63.103, 0.4576 ) }
    apic_11 { pt3dadd( 123.782, 214.638, 62.4439, 0.356 ) }
    apic_11 { pt3dadd( 122.672, 214.572, 61.7845, 0.2796 ) }
    apic_11 { pt3dadd( 121.563, 214.506, 61.1254, 0.2542 ) }
    apic_11 { pt3dadd( 120.452, 214.458, 60.4713, 0.2796 ) }
    apic_11 { pt3dadd( 119.339, 214.521, 59.8492, 0.3304 ) }
    apic_11 { pt3dadd( 118.226, 214.585, 59.2267, 0.3304 ) }
    apic_11 { pt3dadd( 117.111, 214.648, 58.6046, 0.3304 ) }
    apic_11 { pt3dadd( 115.998, 214.712, 57.9824, 0.2796 ) }
    apic_11 { pt3dadd( 114.884, 214.775, 57.36, 0.305 ) }
    apic_11 { pt3dadd( 113.886, 214.308, 57.2275, 0.3304 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    apic_11 { pt3dadd( 112.918, 213.697, 57.2275, 0.4068 ) }
    apic_11 { pt3dadd( 111.951, 213.087, 57.2275, 0.3814 ) }
    apic_11 { pt3dadd( 110.983, 212.476, 57.2275, 0.356 ) }
    // Section: apic_10, id: apic_10, parent: apic_9 (entry count 3/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 202.662, 232.605, 68.3777, 0.483 ) }
    apic_10 { pt3dadd( 202.717, 233.366, 70.112, 0.2796 ) }
    apic_10 { pt3dadd( 202.784, 234.457, 70.8436, 0.2796 ) }
    apic_10 { pt3dadd( 202.699, 235.555, 70.5802, 0.3304 ) }
    apic_10 { pt3dadd( 201.952, 236.35, 71.1449, 0.4322 ) }
    apic_10 { pt3dadd( 200.982, 236.683, 71.932, 0.5084 ) }
    apic_10 { pt3dadd( 199.858, 236.737, 71.465, 0.483 ) }
    apic_10 { pt3dadd( 198.739, 236.793, 71.5638, 0.4322 ) }
    apic_10 { pt3dadd( 197.729, 236.734, 72.7734, 0.3814 ) }
    apic_10 { pt3dadd( 196.883, 236.684, 74.6514, 0.4068 ) }
    apic_10 { pt3dadd( 196.138, 236.642, 76.75, 0.4068 ) }
    apic_10 { pt3dadd( 195.631, 236.408, 79.1165, 0.4068 ) }
    apic_10 { pt3dadd( 195.084, 236.184, 81.1073, 0.3814 ) }
    apic_10 { pt3dadd( 194.106, 236.602, 81.6858, 0.4322 ) }
    apic_10 { pt3dadd( 193.135, 237.191, 81.7645, 0.5084 ) }
    apic_10 { pt3dadd( 192.088, 237.565, 82.1918, 0.5848 ) }
    apic_10 { pt3dadd( 190.99, 237.788, 82.7448, 0.5592 ) }
    apic_10 { pt3dadd( 189.968, 237.8, 83.8222, 0.4576 ) }
    apic_10 { pt3dadd( 189.052, 237.976, 85.269, 0.3814 ) }
    apic_10 { pt3dadd( 188.342, 238.557, 86.889, 0.4068 ) }
    apic_10 { pt3dadd( 187.504, 238.61, 88.4761, 0.483 ) }
    apic_10 { pt3dadd( 186.682, 237.93, 89.0392, 0.5592 ) }
    apic_10 { pt3dadd( 185.733, 237.317, 89.2956, 0.5338 ) }
    apic_10 { pt3dadd( 184.656, 237.176, 89.9682, 0.5592 ) }
    apic_10 { pt3dadd( 183.53, 237.252, 90.3409, 0.5338 ) }
    apic_10 { pt3dadd( 182.568, 237.538, 91.5597, 0.5592 ) }
    apic_10 { pt3dadd( 181.621, 237.607, 93.0972, 0.5338 ) }
    apic_10 { pt3dadd( 180.603, 237.608, 94.3698, 0.5338 ) }
    apic_10 { pt3dadd( 179.479, 237.598, 94.7223, 0.5848 ) }
    apic_10 { pt3dadd( 178.362, 237.544, 95.2879, 0.6102 ) }
    apic_10 { pt3dadd( 177.28, 237.231, 95.7051, 0.6102 ) }
    apic_10 { pt3dadd( 176.224, 236.795, 95.7242, 0.5338 ) }
    apic_10 { pt3dadd( 175.132, 236.496, 95.3756, 0.5084 ) }
    apic_10 { pt3dadd( 174.192, 237.06, 95.6788, 0.5084 ) }
    apic_10 { pt3dadd( 173.151, 237.292, 96.6762, 0.5338 ) }
    apic_10 { pt3dadd( 172.147, 237.619, 97.7505, 0.483 ) }
    apic_10 { pt3dadd( 171.396, 237.688, 98.1005, 0.4068 ) }
    apic_10 { pt3dadd( 170.578, 237.906, 99.9858, 0.3304 ) }
    apic_10 { pt3dadd( 169.762, 238.124, 101.871, 0.305 ) }
    apic_10 { pt3dadd( 168.712, 238.072, 102.784, 0.305 ) }
    apic_10 { pt3dadd( 167.61, 237.957, 103.466, 0.2796 ) }
    apic_10 { pt3dadd( 166.557, 237.658, 103.899, 0.305 ) }
    apic_10 { pt3dadd( 165.592, 237.044, 103.899, 0.3814 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_98, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_98 = new SectionList()
    soma_0 ModelViewParmSubset_98.append()
    axon_0 ModelViewParmSubset_98.append()
    axon_1 ModelViewParmSubset_98.append()

    // Group: {name=ModelViewParmSubset_99, groups=[], sections=[dend_48, dend_45, dend_44, dend_39, dend_36, dend_33, dend_32, dend_27, dend_18, dend_13, dend_0, apic_0, dend_50, dend_49, dend_47, dend_46, dend_43, dend_40, dend_38, dend_37, dend_35, dend_34, dend_31, dend_28, dend_26, dend_19, dend_15, dend_14, dend_6, dend_1, apic_32, apic_1, dend_42, dend_41, dend_30, dend_29, dend_25, dend_20, dend_17, dend_16, dend_12, dend_7, dend_5, dend_2, apic_36, apic_33, apic_29, apic_2, dend_24, dend_21, dend_11, dend_8, dend_4, dend_3, apic_35, apic_34, apic_31, apic_30, apic_24, apic_3, dend_23, dend_22, dend_10, dend_9, apic_28, apic_25, apic_23, apic_4, apic_27, apic_26, apic_6, apic_5, apic_16, apic_7, apic_20, apic_17, apic_13, apic_8, apic_22, apic_21, apic_19, apic_18, apic_15, apic_14, apic_12, apic_9, apic_11, apic_10]}
    ModelViewParmSubset_99 = new SectionList()
    dend_48 ModelViewParmSubset_99.append()
    dend_45 ModelViewParmSubset_99.append()
    dend_44 ModelViewParmSubset_99.append()
    dend_39 ModelViewParmSubset_99.append()
    dend_36 ModelViewParmSubset_99.append()
    dend_33 ModelViewParmSubset_99.append()
    dend_32 ModelViewParmSubset_99.append()
    dend_27 ModelViewParmSubset_99.append()
    dend_18 ModelViewParmSubset_99.append()
    dend_13 ModelViewParmSubset_99.append()
    dend_0 ModelViewParmSubset_99.append()
    apic_0 ModelViewParmSubset_99.append()
    dend_50 ModelViewParmSubset_99.append()
    dend_49 ModelViewParmSubset_99.append()
    dend_47 ModelViewParmSubset_99.append()
    dend_46 ModelViewParmSubset_99.append()
    dend_43 ModelViewParmSubset_99.append()
    dend_40 ModelViewParmSubset_99.append()
    dend_38 ModelViewParmSubset_99.append()
    dend_37 ModelViewParmSubset_99.append()
    dend_35 ModelViewParmSubset_99.append()
    dend_34 ModelViewParmSubset_99.append()
    dend_31 ModelViewParmSubset_99.append()
    dend_28 ModelViewParmSubset_99.append()
    dend_26 ModelViewParmSubset_99.append()
    dend_19 ModelViewParmSubset_99.append()
    dend_15 ModelViewParmSubset_99.append()
    dend_14 ModelViewParmSubset_99.append()
    dend_6 ModelViewParmSubset_99.append()
    dend_1 ModelViewParmSubset_99.append()
    apic_32 ModelViewParmSubset_99.append()
    apic_1 ModelViewParmSubset_99.append()
    dend_42 ModelViewParmSubset_99.append()
    dend_41 ModelViewParmSubset_99.append()
    dend_30 ModelViewParmSubset_99.append()
    dend_29 ModelViewParmSubset_99.append()
    dend_25 ModelViewParmSubset_99.append()
    dend_20 ModelViewParmSubset_99.append()
    dend_17 ModelViewParmSubset_99.append()
    dend_16 ModelViewParmSubset_99.append()
    dend_12 ModelViewParmSubset_99.append()
    dend_7 ModelViewParmSubset_99.append()
    dend_5 ModelViewParmSubset_99.append()
    dend_2 ModelViewParmSubset_99.append()
    apic_36 ModelViewParmSubset_99.append()
    apic_33 ModelViewParmSubset_99.append()
    apic_29 ModelViewParmSubset_99.append()
    apic_2 ModelViewParmSubset_99.append()
    dend_24 ModelViewParmSubset_99.append()
    dend_21 ModelViewParmSubset_99.append()
    dend_11 ModelViewParmSubset_99.append()
    dend_8 ModelViewParmSubset_99.append()
    dend_4 ModelViewParmSubset_99.append()
    dend_3 ModelViewParmSubset_99.append()
    apic_35 ModelViewParmSubset_99.append()
    apic_34 ModelViewParmSubset_99.append()
    apic_31 ModelViewParmSubset_99.append()
    apic_30 ModelViewParmSubset_99.append()
    apic_24 ModelViewParmSubset_99.append()
    apic_3 ModelViewParmSubset_99.append()
    dend_23 ModelViewParmSubset_99.append()
    dend_22 ModelViewParmSubset_99.append()
    dend_10 ModelViewParmSubset_99.append()
    dend_9 ModelViewParmSubset_99.append()
    apic_28 ModelViewParmSubset_99.append()
    apic_25 ModelViewParmSubset_99.append()
    apic_23 ModelViewParmSubset_99.append()
    apic_4 ModelViewParmSubset_99.append()
    apic_27 ModelViewParmSubset_99.append()
    apic_26 ModelViewParmSubset_99.append()
    apic_6 ModelViewParmSubset_99.append()
    apic_5 ModelViewParmSubset_99.append()
    apic_16 ModelViewParmSubset_99.append()
    apic_7 ModelViewParmSubset_99.append()
    apic_20 ModelViewParmSubset_99.append()
    apic_17 ModelViewParmSubset_99.append()
    apic_13 ModelViewParmSubset_99.append()
    apic_8 ModelViewParmSubset_99.append()
    apic_22 ModelViewParmSubset_99.append()
    apic_21 ModelViewParmSubset_99.append()
    apic_19 ModelViewParmSubset_99.append()
    apic_18 ModelViewParmSubset_99.append()
    apic_15 ModelViewParmSubset_99.append()
    apic_14 ModelViewParmSubset_99.append()
    apic_12 ModelViewParmSubset_99.append()
    apic_9 ModelViewParmSubset_99.append()
    apic_11 ModelViewParmSubset_99.append()
    apic_10 ModelViewParmSubset_99.append()

    // Group: {name=dend, groups=[], sections=[dend_48, dend_45, dend_44, dend_39, dend_36, dend_33, dend_32, dend_27, dend_18, dend_13, dend_0, dend_50, dend_49, dend_47, dend_46, dend_43, dend_40, dend_38, dend_37, dend_35, dend_34, dend_31, dend_28, dend_26, dend_19, dend_15, dend_14, dend_6, dend_1, dend_42, dend_41, dend_30, dend_29, dend_25, dend_20, dend_17, dend_16, dend_12, dend_7, dend_5, dend_2, dend_24, dend_21, dend_11, dend_8, dend_4, dend_3, dend_23, dend_22, dend_10, dend_9]}
    dend = new SectionList()
    dend_48 dend.append()
    dend_45 dend.append()
    dend_44 dend.append()
    dend_39 dend.append()
    dend_36 dend.append()
    dend_33 dend.append()
    dend_32 dend.append()
    dend_27 dend.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_18 dend.append()
    dend_13 dend.append()
    dend_0 dend.append()
    dend_50 dend.append()
    dend_49 dend.append()
    dend_47 dend.append()
    dend_46 dend.append()
    dend_43 dend.append()
    dend_40 dend.append()
    dend_38 dend.append()
    dend_37 dend.append()
    dend_35 dend.append()
    dend_34 dend.append()
    dend_31 dend.append()
    dend_28 dend.append()
    dend_26 dend.append()
    dend_19 dend.append()
    dend_15 dend.append()
    dend_14 dend.append()
    dend_6 dend.append()
    dend_1 dend.append()
    dend_42 dend.append()
    dend_41 dend.append()
    dend_30 dend.append()
    dend_29 dend.append()
    dend_25 dend.append()
    dend_20 dend.append()
    dend_17 dend.append()
    dend_16 dend.append()
    dend_12 dend.append()
    dend_7 dend.append()
    dend_5 dend.append()
    dend_2 dend.append()
    dend_24 dend.append()
    dend_21 dend.append()
    dend_11 dend.append()
    dend_8 dend.append()
    dend_4 dend.append()
    dend_3 dend.append()
    dend_23 dend.append()
    dend_22 dend.append()
    dend_10 dend.append()
    dend_9 dend.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_32, apic_1, apic_36, apic_33, apic_29, apic_2, apic_35, apic_34, apic_31, apic_30, apic_24, apic_3, apic_28, apic_25, apic_23, apic_4, apic_27, apic_26, apic_6, apic_5, apic_16, apic_7, apic_20, apic_17, apic_13, apic_8, apic_22, apic_21, apic_19, apic_18, apic_15, apic_14, apic_12, apic_9, apic_11, apic_10]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_32 apic.append()
    apic_1 apic.append()
    apic_36 apic.append()
    apic_33 apic.append()
    apic_29 apic.append()
    apic_2 apic.append()
    apic_35 apic.append()
    apic_34 apic.append()
    apic_31 apic.append()
    apic_30 apic.append()
    apic_24 apic.append()
    apic_3 apic.append()
    apic_28 apic.append()
    apic_25 apic.append()
    apic_23 apic.append()
    apic_4 apic.append()
    apic_27 apic.append()
    apic_26 apic.append()
    apic_6 apic.append()
    apic_5 apic.append()
    apic_16 apic.append()
    apic_7 apic.append()
    apic_20 apic.append()
    apic_17 apic.append()
    apic_13 apic.append()
    apic_8 apic.append()
    apic_22 apic.append()
    apic_21 apic.append()
    apic_19 apic.append()
    apic_18 apic.append()
    apic_15 apic.append()
    apic_14 apic.append()
    apic_12 apic.append()
    apic_9 apic.append()
    apic_11 apic.append()
    apic_10 apic.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_4489, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_4489 = new SectionList()
    soma_0 OneSecGrp_SectionRef_4489.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, apic_0, apic_0, axon_1, axon_1, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_29, apic_29, apic_29, apic_29, apic_29, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_35, apic_35, apic_35, apic_35, apic_35, apic_35, apic_35, apic_35, apic_35, apic_35, apic_35, apic_35, apic_35, apic_35, apic_35, apic_35, apic_35, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_25, apic_25, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_20, apic_20, apic_20, apic_20, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_8, apic_8, apic_8, apic_8, apic_8, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_35 all.append()
    apic_35 all.append()
    apic_35 all.append()
    apic_35 all.append()
    apic_35 all.append()
    apic_35 all.append()
    apic_35 all.append()
    apic_35 all.append()
    apic_35 all.append()
    apic_35 all.append()
    apic_35 all.append()
    apic_35 all.append()
    apic_35 all.append()
    apic_35 all.append()
    apic_35 all.append()
    apic_35 all.append()
    apic_35 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_26 all.append()
    apic_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_12 all.append()
    apic_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec apic cm = 2.47  // units: uF/cm2
    forsec dend cm = 2.47  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 54.98  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 3.8515322E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 4.4473767E-4  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.6984893  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 1.2104418E-5  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 0.017523432  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.024483336  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 0.0027545008  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.09407922  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 3.34503E-4  // units: S cm-2
        e_pas_nml2 = -83.48182  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 4.8102517E-4  // units: S cm-2
        e_pas_nml2 = -83.48182  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 1.0297096E-5  // units: S cm-2
        e_pas_nml2 = -83.48182  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 8.895349E-5  // units: S cm-2
        e_pas_nml2 = -83.48182  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 2.183149E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0024101327  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        insert CaDynamics
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_44 nseg = 7
    dend_32 nseg = 7
    dend_50 nseg = 3
    dend_49 nseg = 5
    dend_43 nseg = 7
    dend_35 nseg = 5
    dend_34 nseg = 9
    dend_31 nseg = 3
    dend_14 nseg = 7
    dend_29 nseg = 5
    dend_25 nseg = 3
    dend_17 nseg = 3
    dend_16 nseg = 3
    dend_12 nseg = 7
    dend_5 nseg = 7
    dend_2 nseg = 3
    apic_36 nseg = 5
    apic_33 nseg = 3
    dend_24 nseg = 3
    dend_21 nseg = 3
    dend_11 nseg = 3
    dend_4 nseg = 3
    dend_3 nseg = 3
    apic_31 nseg = 7
    apic_30 nseg = 9
    dend_23 nseg = 3
    dend_22 nseg = 3
    dend_10 nseg = 5
    apic_27 nseg = 3
    apic_26 nseg = 3
    apic_6 nseg = 21
    apic_5 nseg = 3
    apic_16 nseg = 5
    apic_7 nseg = 3
    apic_22 nseg = 3
    apic_21 nseg = 3
    apic_19 nseg = 3
    apic_18 nseg = 3
    apic_15 nseg = 3
    apic_14 nseg = 5
    apic_12 nseg = 7
    apic_11 nseg = 5
    apic_10 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_473871773


