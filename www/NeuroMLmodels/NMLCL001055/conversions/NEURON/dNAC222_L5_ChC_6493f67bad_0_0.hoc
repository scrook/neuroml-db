// Cell: dNAC222_L5_ChC_6493f67bad_0_0
/*
{
  "id" : "dNAC222_L5_ChC_6493f67bad_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.44259, -9.54825, -1.27888, 2.30647", "-1.2819, -8.63231, -1.15821, 3.63473", "-1.1212, -7.71637, -1.03754, 6.81375", "-0.960502, -6.80044, -0.916865, 9.18535", "-0.799804, -5.8845, -0.796194, 10.2157", "-0.639107, -4.96856, -0.675522, 11.1797", "-0.478409, -4.05262, -0.554851, 12.0566", "-0.317712, -3.13668, -0.43418, 12.6775", "-0.157014, -2.22074, -0.313508, 13.0617", "0.00368301, -1.3048, -0.192837, 13.2009", "0.16438, -0.388856, -0.0721652, 13.2418", "0.325078, 0.527084, 0.0485063, 12.889", "0.485775, 1.44302, 0.169178, 12.4912", "0.646473, 2.35896, 0.289849, 12.2347", "0.80717, 3.2749, 0.410521, 12.0486", "0.967868, 4.19084, 0.531192, 11.9346", "1.12856, 5.10678, 0.651864, 11.8925", "1.28926, 6.02272, 0.772535, 11.1454", "1.44996, 6.93866, 0.893206, 8.66152", "1.61066, 7.8546, 1.01388, 5.25757", "1.77135, 8.77054, 1.13455, 3.12251" ]
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-3.66144, -7.4365, -8.0337, 1.77", "-3.66144, -7.4365, -8.0337, 1.77", "-3.30991, -8.63126, -8.19805, 1.77", "-3.04219, -9.52066, -8.32898, 1.77", "-2.633, -10.9147, -8.52219, 1.55", "-2.39266, -11.8391, -8.67564, 1.69", "-2.22814, -12.5574, -8.80935, 1.77", "-2.08401, -13.2562, -8.97108, 1.77", "-1.90103, -14.1929, -9.24293, 1.25", "-1.60442, -15.6299, -9.60943, 0.74", "-2.17458, -15.0038, -10.2373, 0.74", "-2.6192, -14.7825, -10.9054, 0.74", "-3.39881, -14.4816, -12.1066, 1.18", "-3.81791, -14.406, -12.7914, 1.18", "-4.44654, -14.2541, -13.738, 0.52", "-5.19042, -13.9776, -14.755, 0.52", "-6.03601, -14.0177, -16.0403, 0.74", "-6.39234, -14.2189, -16.9147, 0.74", "-6.56234, -14.5292, -17.6777, 0.74", "-6.83671, -14.929, -18.8292, 1.11", "-7.08162, -15.1377, -19.5663, 1.69", "-7.48246, -15.2814, -20.3105, 1.77", "-8.39562, -15.5578, -21.9551, 1.33", "-8.88162, -15.8052, -22.9577, 1.4", "-9.16795, -16.1347, -23.7107, 1.55", "-9.33074, -16.6828, -24.4992, 1.33", "-9.34846, -17.6277, -25.5, 0.74", "-9.19612, -18.4014, -26.0816, 1.03", "-8.9736, -19.051, -26.4493, 1.47", "-8.7375, -19.478, -26.7134, 1.62", "-8.36349, -19.9878, -27.0776, 1.62", "-7.93964, -20.3975, -27.4128, 0.52", "-7.43582, -20.783, -27.7826, 0.52", "-7.31047, -20.9844, -28.1004, 0.52", "-7.33595, -21.3967, -28.9236, 0.66", "-7.49893, -21.8016, -29.7935, 0.74", "-7.76472, -21.9667, -30.4071, 0.44", "-8.22269, -21.9647, -31.0563, 0.44", "-8.89774, -21.8797, -31.8818, 0.44", "-9.37764, -21.9298, -32.6162, 0.44", "-9.64446, -22.0284, -33.1371, 0.44", "-10.1406, -22.3577, -34.1492, 0.66", "-10.3828, -22.8689, -35.1718, 1.11", "-10.5082, -23.0563, -35.527, 0.96", "-10.8357, -23.4514, -36.3411, 1.18", "-10.9632, -23.6205, -36.6594, 1.69", "-11.1704, -23.8808, -37.1207, 1.69", "-11.9599, -24.8021, -38.6644, 0.88", "-12.4421, -25.2404, -39.4705, 2.14", "-13.5358, -25.8328, -40.9599, 2.28", "-13.6895, -25.8757, -41.1304, 2.28", "-14.5768, -25.9597, -41.9581, 0.44", "-15.0833, -25.918, -42.3304, 0.44", "-15.6817, -25.7929, -42.6736, 0.81", "-16.2955, -25.6328, -43.0402, 0.81", "-16.5754, -25.5934, -43.2408, 0.96", "-17.1313, -25.6446, -43.7295, 0.66", "-17.6904, -25.8395, -44.3035, 1.99", "-18.1091, -26.0727, -44.7878, 2.21", "-18.5179, -26.3801, -45.2936, 2.5", "-19.6427, -27.4353, -46.793, 0.66", "-20.2259, -28.1237, -47.6785, 0.66", "-20.5861, -28.6589, -48.2868, 0.66", "-20.957, -29.2954, -48.9379, 1.55", "-21.1293, -29.6085, -49.2261, 2.21", "-21.2955, -29.9355, -49.5013, 2.21", "-21.7539, -30.9754, -50.3286, 0.29", "-21.9991, -31.646, -50.9037, 0.29", "-22.1595, -32.1091, -51.2931, 1.55", "-22.3593, -32.6679, -51.7525, 1.99", "-22.5431, -33.1681, -52.1735, 2.36", "-23.06, -34.5285, -53.3535, 0.59", "-23.317, -35.2258, -53.9993, 1.84", "-23.4181, -35.5495, -54.3356, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-6.50143, -1.72726, 2.1563, 1.92", "-6.50143, -1.72726, 2.1563, 1.92", "-7.00859, -2.64744, 2.11596, 1.92", "-7.87127, -4.47208, 2.02823, 1.92", "-8.76088, -6.13672, 1.93973, 2.14", "-9.44662, -7.26249, 1.86488, 2.36", "-10.4184, -8.62474, 1.7617, 2.28", "-11.4859, -9.88246, 1.64368, 2.36", "-12.6804, -11.0463, 1.49045, 2.36", "-14.5343, -12.3511, 1.27174, 1.77", "-15.554, -12.7804, 1.1951, 1.77", "-17.1529, -13.1304, 1.15249, 1.99", "-18.5777, -13.2741, 1.24295, 1.99", "-19.2826, -13.3002, 1.32998, 1.99", "-20.3335, -13.3525, 1.51747, 1.77", "-21.96, -13.643, 1.93827, 1.47", "-23.134, -14.0729, 2.27042, 1.47", "-24.6137, -14.9486, 2.64432, 1.33", "-25.2863, -15.4843, 2.76958, 1.99", "-26.4296, -16.5794, 2.89507, 1.99", "-27.7465, -18.0025, 2.91189, 1.77", "-29.2031, -19.7412, 2.7837, 1.92", "-30.5501, -21.3938, 2.50889, 1.69", "-31.3784, -22.3533, 2.24252, 1.69", "-32.4162, -23.4337, 1.85015, 1.84", "-33.3629, -24.3375, 1.48862, 1.84", "-34.5882, -25.4662, 1.03972, 1.69", "-35.9349, -26.7236, 0.619574, 1.55", "-37.2949, -28.0844, 0.302191, 1.4", "-38.4091, -29.2046, 0.0760081, 1.25", "-39.575, -30.4298, -0.134014, 1.33", "-40.6791, -31.7035, -0.256183, 1.47", "-41.7127, -33.0549, -0.206636, 1.62", "-42.4436, -34.3189, 0.0507945, 1.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "0.448551, -8.92275, -4.9037, 3.61", "0.448551, -8.92275, -4.9037, 3.61", "0.686032, -10.6438, -4.82542, 2.95", "1.0264, -13.3148, -4.70763, 2.8", "1.22266, -15.1047, -4.5954, 2.8", "1.3936, -17.1062, -4.45397, 3.02", "1.47539, -18.4346, -4.35929, 3.02", "1.50961, -19.7377, -4.26146, 3.02", "1.47662, -21.7011, -4.1114, 3.02", "1.34285, -23.7781, -3.94638, 2.36", "0.983862, -27.4113, -3.76604, 2.36", "0.724698, -29.4466, -3.74844, 2.43", "0.426561, -31.4166, -3.79338, 2.43", "0.0368725, -33.7257, -3.92092, 2.43", "-0.569025, -36.9138, -4.18123, 2.28", "-1.22192, -40.1849, -4.52174, 2.14", "-2.13343, -44.5183, -5.05451, 2.06", "-2.76604, -47.5259, -5.47065, 2.43", "-3.16563, -49.4412, -5.77268, 2.58", "-3.5941, -51.4594, -6.134, 2.58" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-0.381405, 7.80525, -7.5337, 1.62", "-0.473059, 8.65312, -7.59659, 1.62", "-0.617992, 9.90056, -7.63316, 1.92", "-0.836565, 11.5669, -7.69639, 1.33", "-1.11223, 13.3604, -7.78955, 1.69", "-1.33832, 14.6875, -7.83695, 2.21", "-1.53212, 15.7968, -7.82879, 2.21", "-1.76546, 17.0456, -7.77216, 1.99", "-1.98444, 18.1076, -7.68621, 1.77", "-2.24448, 19.2889, -7.55983, 1.99", "-2.52649, 20.5393, -7.42096, 1.99", "-3.00855, 22.7359, -7.21848, 1.11", "-3.30611, 24.1091, -7.13162, 1.11", "-3.62499, 25.4908, -7.09714, 1.25", "-3.929, 26.6509, -7.09121, 1.4", "-4.32694, 27.9189, -7.15995, 0.81", "-4.79561, 29.12, -7.33567, 0.74", "-5.16804, 29.9053, -7.52273, 0.74", "-5.62714, 30.7572, -7.77576, 0.74", "-6.16066, 31.6851, -8.09751, 0.96", "-6.66367, 32.5584, -8.42246, 0.96", "-7.18845, 33.4353, -8.75668, 1.55", "-7.78122, 34.4184, -9.14495, 2.06", "-8.28273, 35.3136, -9.50706, 2.43", "-8.85789, 36.5191, -9.99864, 2.36", "-9.5091, 38.1613, -10.651, 2.58" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-2.32144, 8.54325, 0.346303, 2.5", "-2.37572, 8.66605, 0.34692, 2.5", "-3.23634, 10.3865, 0.313663, 1.77", "-3.83704, 11.5491, 0.31981, 1.55", "-4.54158, 12.8724, 0.377185, 1.55", "-5.07841, 13.8821, 0.457223, 1.33", "-5.8975, 15.4483, 0.627534, 1.33", "-6.40972, 16.4051, 0.758575, 1.55", "-7.18253, 17.8225, 0.981283, 1.55", "-7.98514, 19.3639, 1.2283, 1.62", "-8.62594, 20.7378, 1.43578, 1.4", "-9.22338, 22.2498, 1.6384, 1.4", "-9.56324, 23.1786, 1.76425, 1.4", "-10.0918, 24.6723, 1.95555, 1.4", "-10.5935, 26.1645, 2.08908, 1.4", "-11.1576, 28.0089, 2.17961, 1.77", "-11.6325, 29.6636, 2.19654, 2.73" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "6.82855, 4.29975, 1.3463, 2.58", "6.87841, 4.34961, 1.35083, 2.58", "7.5068, 4.99399, 1.41645, 2.58", "8.21979, 5.73272, 1.51296, 1.84", "8.74761, 6.2687, 1.59858, 2.06", "9.42909, 6.95879, 1.72662, 2.06", "9.87943, 7.40421, 1.84035, 2.58", "10.3792, 7.89528, 1.99544, 2.58", "10.7097, 8.22525, 2.12076, 2.58", "11.296, 8.78453, 2.37128, 2.58", "11.7085, 9.15005, 2.5573, 2.43", "12.5727, 9.87136, 2.98069, 2.21", "13.2031, 10.3671, 3.30232, 1.99", "13.709, 10.7417, 3.54483, 1.99", "14.3651, 11.1561, 3.82821, 1.69", "14.9136, 11.3932, 4.03623, 1.69", "15.8848, 11.5296, 4.35547, 2.06", "16.4943, 11.4204, 4.52145, 2.06", "17.9346, 10.7771, 4.9068, 1.69", "18.9253, 10.2201, 5.15715, 1.92", "20.474, 9.14112, 5.5209, 1.92", "21.9487, 7.8993, 5.83532, 2.06", "22.7048, 7.12553, 5.97757, 2.28", "23.2719, 6.42055, 6.09191, 2.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.77135, 8.77054, 1.13455, 0.827595", "4.36343, 23.5449, 1.13455, 0.827595", "6.95552, 38.3192, 1.13455, 0.827595" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-23.4181, -35.5495, -54.3356, 0.96", "-22.7555, -36.8424, -60.827, 0.96", "-22.5966, -37.188, -62.0686, 0.96", "-22.3553, -37.6985, -63.5685, 0.96", "-21.9858, -38.4447, -65.5272, 1.55", "-21.663, -39.1077, -67.0446, 0.22", "-21.2619, -39.9272, -68.5928, 0.22", "-20.9714, -40.5324, -69.2903, 1.11", "-20.6931, -41.1188, -69.8805, 1.4", "-20.2555, -41.9093, -70.6071, 1.4", "-19.2031, -43.5987, -72.0563, 0.22", "-17.9939, -45.2803, -73.5077, 0.22", "-17.5604, -45.8169, -73.9817, 0.74", "-17.3151, -46.1009, -74.2258, 0.74", "-15.9633, -47.6116, -75.4724, 0.15", "-15.743, -47.8445, -75.654, 0.37", "-14.4354, -49.0739, -76.6119, 0.22", "-13.6728, -49.7303, -77.1828, 0.22", "-13.0646, -50.255, -77.6348, 0.74", "-12.4751, -50.8109, -78.067, 0.88", "-12.3051, -51.019, -78.1959, 0.88" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-23.4181, -35.5495, -54.3356, 2.87", "-24.1043, -35.7955, -54.4227, 2.87", "-26.2674, -36.758, -54.7961, 0.22", "-28.2181, -37.8956, -55.1929, 0.22", "-29.159, -38.5026, -55.3912, 1.69", "-29.4544, -38.7063, -55.4544, 2.21", "-29.9342, -39.0522, -55.5575, 2.21", "-31.691, -40.5029, -55.9296, 0.22", "-33.2276, -42.0415, -56.3069, 0.22", "-33.7026, -42.5601, -56.4351, 1.25", "-34.0904, -42.9883, -56.5409, 1.25", "-34.6056, -43.5501, -56.6886, 1.25", "-35.659, -44.6226, -56.9866, 0.15", "-36.2573, -45.206, -57.1488, 0.15", "-36.7306, -45.6174, -57.2811, 0.96", "-37.2704, -46.0397, -57.4482, 1.18", "-37.5191, -46.2089, -57.5276, 1.18", "-39.1325, -47.1465, -58.1286, 0.22", "-39.5646, -47.3298, -58.3065, 0.52", "-39.9586, -47.4725, -58.4718, 0.52", "-40.9731, -47.8057, -58.8894, 0.22", "-41.6033, -48.0054, -59.1555, 1.25", "-42.5275, -48.3347, -59.5345, 1.4", "-44.3056, -49.142, -60.3221, 0.22", "-45.514, -49.8562, -60.8739, 0.22", "-45.9691, -50.2011, -61.0912, 0.74", "-46.5473, -50.7668, -61.3778, 0.88", "-47.3397, -51.9071, -61.9331, 0.22", "-47.9474, -53.3799, -62.5142, 0.22", "-48.1731, -54.3431, -62.8481, 1.99", "-48.254, -54.9336, -63.0239, 2.36", "-48.3106, -55.5132, -63.1954, 2.36", "-48.4901, -58.7642, -64.15, 0.15", "-48.5128, -60.781, -64.7806, 0.15", "-48.5045, -61.3062, -64.9254, 0.44", "-48.4581, -62.3178, -65.1809, 0.44" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-42.4436, -34.3189, 0.0507945, 0.96", "-43.2867, -34.7375, -0.3402, 0.96", "-44.0891, -35.1674, -0.712516, 1.25", "-45.2461, -35.7855, -1.24383, 1.25", "-47.2701, -36.7803, -2.1247, 1.18", "-48.6541, -37.3828, -2.68947, 1.11", "-49.7216, -37.8175, -3.1182, 0.88", "-51.1242, -38.4035, -3.7034, 0.96", "-51.926, -38.7402, -4.04573, 0.96", "-53.102, -39.2454, -4.55403, 0.96", "-54.2712, -39.7357, -4.98668, 0.96", "-55.2741, -40.1304, -5.29756, 1.18", "-56.5154, -40.5857, -5.62888, 1.03", "-57.1391, -40.7789, -5.73343, 1.03", "-58.4641, -41.1059, -5.81821, 1.18", "-59.286, -41.2448, -5.75999, 1.18", "-61.1872, -41.3761, -5.30193, 0.96", "-61.8938, -41.3703, -5.07735, 1.11", "-63.279, -41.3181, -4.57875, 1.11", "-64.3914, -41.3015, -4.16154, 1.11", "-65.7004, -41.331, -3.66159, 1.11", "-67.447, -41.5155, -2.98553, 1.55", "-68.6916, -41.7926, -2.5226, 1.03", "-70.1792, -42.3079, -1.95559, 0.88", "-71.4438, -42.9332, -1.47802, 0.74", "-72.1658, -43.4158, -1.20384, 0.74", "-73.0888, -44.2311, -0.88532, 0.74", "-73.9934, -45.244, -0.618312, 0.66", "-74.7977, -46.3031, -0.392113, 0.88", "-75.318, -47.084, -0.263162, 1.03", "-75.8576, -48.0082, -0.130474, 1.03", "-76.5444, -49.2026, 0.0227555, 0.88", "-77.3981, -50.6099, 0.178025, 0.88", "-77.8797, -51.318, 0.237013, 0.88", "-78.595, -52.1893, 0.292609, 0.88", "-79.9906, -53.5865, 0.352789, 0.88", "-80.8078, -54.2213, 0.355744, 0.88", "-81.9795, -54.8908, 0.318086, 0.88", "-82.7684, -55.2019, 0.262759, 0.96", "-83.6938, -55.4809, 0.154077, 0.96", "-84.5352, -55.666, 0.0453247, 0.96", "-85.4786, -55.8409, -0.0736685, 0.52", "-86.1251, -56.0713, -0.120348, 0.52", "-86.619, -56.468, -0.0671254, 0.52", "-87.117, -57.1921, 0.168124, 0.81", "-87.5126, -57.9483, 0.4812, 0.96", "-87.8155, -58.8175, 0.879503, 0.96", "-88.177, -60.3708, 1.62749, 0.81", "-88.3068, -61.1289, 2.00882, 0.81", "-88.4354, -62.0803, 2.54001, 1.11", "-88.5505, -62.6112, 2.8791, 1.11" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-42.4436, -34.3189, 0.0507945, 1.33", "-43.2303, -34.4713, 0.650409, 1.33", "-43.9877, -34.6512, 1.15019, 1.18", "-45.4079, -34.9619, 2.03957, 0.88", "-46.0925, -35.0845, 2.4281, 0.74", "-47.094, -35.2206, 2.92441, 0.74", "-48.1118, -35.2981, 3.41877, 0.74", "-48.8786, -35.3385, 3.76156, 0.59", "-49.7797, -35.3376, 4.15286, 0.59", "-50.4893, -35.2909, 4.45993, 0.52", "-51.2072, -35.1567, 4.81738, 0.52", "-52.5646, -34.7221, 5.5836, 0.74", "-53.4279, -34.3641, 6.12423, 0.59", "-54.2246, -34.0217, 6.64424, 0.44", "-55.0854, -33.6992, 7.23195, 0.37", "-55.7755, -33.5145, 7.71673, 0.66", "-56.3897, -33.4547, 8.08163, 0.66", "-56.7869, -33.4859, 8.24207, 0.66", "-57.3111, -33.5622, 8.42798, 0.44", "-57.9179, -33.695, 8.61885, 0.44", "-58.999, -33.9401, 8.93326, 0.44", "-60.4918, -34.3134, 9.37497, 0.74", "-61.3765, -34.5674, 9.63603, 0.74", "-62.5977, -34.9076, 9.98015, 0.52", "-63.739, -35.2108, 10.2877, 0.59", "-64.7178, -35.4656, 10.5347, 0.44", "-66.0783, -35.8762, 10.8821, 0.37", "-67.0576, -36.2604, 11.1441, 0.37", "-68.1222, -36.8327, 11.416, 0.29", "-68.627, -37.2124, 11.5407, 0.29", "-69.2239, -37.7898, 11.7434, 0.29", "-69.7352, -38.3388, 11.9611, 0.37", "-70.3161, -38.9786, 12.2626, 0.37", "-70.9079, -39.5919, 12.615, 0.37", "-71.5468, -40.3122, 13.0512, 0.66", "-72.1849, -41.0096, 13.5043, 0.81", "-72.6778, -41.4873, 13.8522, 0.81", "-73.3987, -42.0505, 14.3198, 0.22", "-74.2853, -42.6186, 14.8649, 0.22", "-82.8979, -43.6061, 18.4748, 0.22" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-3.5941, -51.4594, -6.134, 1.55", "-3.18418, -52.6464, -6.1673, 1.55", "-2.77563, -53.8555, -6.19793, 1.55", "-2.42957, -54.9184, -6.22699, 1.55", "-2.04839, -56.1247, -6.25259, 1.69", "-1.77374, -57.0509, -6.26468, 1.69", "-1.58979, -57.7443, -6.27002, 1.69", "-1.33628, -58.8969, -6.26963, 1.55", "-1.06037, -60.407, -6.26391, 1.47", "-0.894891, -61.6676, -6.23885, 1.33", "-0.812607, -62.8786, -6.19369, 1.33", "-0.81054, -64.4904, -6.11135, 1.33", "-0.89575, -65.6755, -6.02322, 1.11", "-1.01104, -66.424, -5.94811, 1.11", "-1.37507, -68.0586, -5.74859, 1.25", "-1.67721, -69.1461, -5.60038, 1.25", "-1.98723, -70.1259, -5.4585, 1.25", "-2.45255, -71.4876, -5.26613, 1.4", "-2.93248, -72.8312, -5.08817, 1.4", "-3.31339, -73.921, -4.96946, 1.55", "-3.55739, -74.7229, -4.92152, 1.55", "-3.85069, -75.9088, -4.89877, 1.33", "-4.13702, -77.3891, -4.93952, 0.96", "-4.22049, -77.9755, -4.98592, 0.81", "-4.28561, -78.6348, -5.04839, 0.81", "-4.37991, -80.1578, -5.19437, 0.96", "-4.40797, -81.212, -5.28586, 1.33", "-4.41804, -82.3753, -5.36962, 1.69", "-4.4292, -83.0806, -5.4031, 1.84", "-4.45501, -83.8806, -5.41642, 1.99", "-4.52444, -84.8283, -5.39523, 2.06", "-4.59467, -85.6389, -5.35528, 2.06", "-4.66161, -86.4641, -5.28349, 1.84", "-4.71681, -87.3446, -5.17056, 1.62", "-4.7586, -88.4026, -5.00376, 1.18", "-4.76974, -89.2496, -4.86265, 0.88", "-4.76967, -90.4071, -4.65362, 0.88", "-4.75934, -91.2036, -4.4837, 1.03", "-4.74725, -92.0231, -4.28497, 1.11", "-4.75112, -92.607, -4.13396, 1.11", "-4.83003, -94.0648, -3.74495, 1.03", "-4.92579, -95.0169, -3.48569, 1.18", "-5.02404, -95.7942, -3.2836, 1.25", "-5.19334, -96.9772, -3.00261, 1.18", "-5.36988, -98.0502, -2.77624, 1.03", "-5.57779, -99.1213, -2.57732, 0.96", "-5.83877, -100.281, -2.39807, 0.88", "-6.04391, -101.056, -2.31191, 0.88", "-6.42442, -102.223, -2.26918, 1.25", "-6.86342, -103.387, -2.29543, 1.55", "-7.21219, -104.278, -2.35224, 1.62", "-7.47568, -104.99, -2.41541, 1.62", "-7.78563, -105.922, -2.50864, 1.4", "-8.16934, -107.242, -2.63154, 1.11", "-8.48357, -108.601, -2.74274, 1.11", "-8.74116, -110.102, -2.82276, 1.11", "-8.95658, -111.702, -2.87969, 1.11", "-9.09068, -112.872, -2.9017, 1.4", "-9.21077, -114.085, -2.90932, 1.4", "-9.37976, -115.976, -2.89605, 1.25", "-9.5537, -117.912, -2.88803, 1.25", "-9.67911, -119.186, -2.88369, 1.62", "-9.80656, -120.302, -2.88868, 1.77", "-9.98173, -121.795, -2.91798, 1.33", "-10.1353, -123.148, -2.9539, 0.88", "-10.2782, -124.655, -3.0142, 1.25", "-10.337, -125.401, -3.05601, 1.84", "-10.3824, -126.236, -3.11847, 2.28", "-10.4101, -127.101, -3.20385, 2.43" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-3.5941, -51.4594, -6.134, 2.14", "-3.45963, -52.1144, -6.31684, 2.14", "-3.21445, -53.1513, -6.5595, 2.14", "-2.7952, -54.9243, -6.97444, 1.69", "-2.44389, -56.4099, -7.32213, 1.84", "-2.10261, -57.8532, -7.65989, 1.99", "-1.82653, -59.0207, -7.93314, 2.36", "-1.60553, -59.8776, -8.09932, 2.5" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-9.5091, 38.1613, -10.651, 1.25", "-9.1226, 39.3606, -10.922, 1.25", "-8.79684, 40.1658, -11.0891, 1.03", "-8.36321, 41.1228, -11.272, 0.81", "-7.87706, 42.195, -11.4579, 0.81", "-7.45005, 43.2664, -11.626, 1.11", "-7.18135, 44.0451, -11.7365, 1.11", "-6.89371, 44.9575, -11.8199, 0.96", "-6.55487, 46.1807, -11.8956, 0.66", "-6.34988, 47.0278, -11.9425, 0.52", "-6.1117, 48.1407, -11.9923, 0.52", "-5.96254, 48.9684, -12.0254, 0.52", "-5.6405, 50.7389, -12.1237, 1.18", "-5.46991, 51.6448, -12.1836, 1.62", "-5.3377, 52.2945, -12.2339, 1.69", "-5.08492, 53.3698, -12.3486, 1.33", "-4.92509, 53.9012, -12.4265, 0.74", "-4.6312, 54.715, -12.5783, 0.59", "-4.1308, 56.0007, -12.8906, 0.66", "-3.87204, 56.6961, -13.0771, 0.44", "-3.70618, 57.2163, -13.2168, 0.44", "-3.44627, 58.1713, -13.4751, 0.37", "-3.22382, 58.9752, -13.6855, 0.37", "-3.03771, 59.5593, -13.8225, 0.37", "-2.67301, 60.4776, -14.0572, 0.37", "-2.31751, 61.295, -14.2826, 0.44", "-2.00531, 62.0913, -14.5297, 0.44", "-1.58614, 63.3812, -14.9695, 0.81", "-1.32257, 64.2934, -15.2917, 1.03", "-1.07412, 65.1171, -15.5953, 1.03", "-0.847413, 65.8666, -15.9004, 0.81", "-0.53997, 66.9607, -16.393, 0.29", "-0.408791, 67.5052, -16.6502, 0.29", "-0.156535, 68.8231, -17.2646, 1.77", "-0.0803756, 69.2622, -17.4643, 2.36", "0.032579, 69.8707, -17.7174, 2.36", "0.272784, 71.0285, -18.1659, 2.28", "0.603664, 72.4176, -18.6543, 0.66", "0.792733, 73.1774, -18.9216, 0.88", "0.987272, 73.9684, -19.2036, 0.88", "1.20664, 74.8563, -19.4997, 0.37", "1.35628, 75.456, -19.691, 0.37", "1.65645, 76.7066, -20.0631, 0.37", "1.87082, 77.65, -20.33, 1.11", "2.02809, 78.4041, -20.5345, 1.47", "2.12568, 78.9437, -20.6713, 1.69", "2.26053, 79.8566, -20.884, 1.33", "2.37626, 80.8602, -21.0934, 0.44", "2.42663, 81.9288, -21.2868, 0.29", "2.43516, 82.7682, -21.4332, 0.52", "2.4249, 83.3958, -21.5401, 0.52", "2.38505, 84.4497, -21.7424, 0.29", "2.36003, 85.5345, -21.9562, 0.29", "2.35425, 87.4465, -22.3645, 1.18", "2.3626, 88.1653, -22.5183, 1.62", "2.37153, 88.9308, -22.6693, 1.84", "2.38595, 89.8977, -22.8429, 1.33", "2.42179, 92.6563, -23.3154, 0.22", "2.45293, 94.4224, -23.6012, 0.22", "2.48086, 96.0188, -23.8355, 0.22", "2.48935, 97.7064, -24.0516, 0.74", "2.48506, 98.6263, -24.1611, 1.03", "2.47569, 99.0602, -24.2073, 1.03", "2.38412, 100.444, -24.383, 0.15", "2.33793, 100.975, -24.4743, 0.15", "2.2791, 101.583, -24.6198, 0.44", "2.22398, 102.161, -24.7844, 0.66", "2.17416, 102.694, -24.9375, 0.66", "2.076, 104.23, -25.3719, 1.55", "2.03659, 105.36, -25.6777, 2.58", "2.03012, 106.343, -25.9419, 2.58", "2.11379, 108.525, -26.4884, 0.29", "2.25526, 109.983, -26.7898, 0.29", "2.56877, 112.073, -27.1224, 0.29", "2.84062, 113.385, -27.2689, 0.96", "3.00974, 114.059, -27.3127, 0.96", "3.66574, 116.253, -27.3623, 0.22", "4.44735, 118.588, -27.3203, 0.22", "4.97365, 120.054, -27.2486, 1.77", "5.19172, 120.628, -27.2043, 2.36", "5.46332, 121.328, -27.1442, 2.5", "6.34093, 123.591, -26.9345, 0.15", "6.77809, 124.73, -26.8365, 0.29", "7.06512, 125.493, -26.7851, 0.29", "7.4256, 126.467, -26.7672, 0.15", "7.77671, 127.465, -26.8074, 1.18", "7.99448, 128.084, -26.8632, 1.55", "8.2357, 128.771, -26.9507, 1.18", "8.41138, 129.267, -27.0282, 0.74", "8.91121, 130.805, -27.2785, 0.22", "9.2726, 132.006, -27.4774, 0.22", "9.84808, 134.108, -27.7836, 0.22", "10.1343, 135.24, -27.9254, 0.81", "10.2399, 135.694, -27.9733, 0.81", "10.8392, 138.535, -28.1884, 0.22", "11.1027, 139.965, -28.2209, 0.22", "11.2976, 141.257, -28.2362, 1.25", "11.3262, 141.599, -28.2388, 1.69", "11.3399, 141.987, -28.2398, 1.69", "11.3416, 142.813, -28.236, 1.33", "11.3123, 143.536, -28.241, 0.59", "11.2251, 145.04, -28.2882, 0.22", "11.1214, 147.184, -28.4201, 0.22", "11.0583, 148.504, -28.5163, 1.03", "11.0301, 149.06, -28.5601, 1.03", "11.0181, 149.641, -28.606, 1.03", "11.0316, 150.503, -28.6671, 0.52", "11.1343, 152.435, -28.7672, 0.22", "11.2531, 153.364, -28.814, 0.59", "11.3645, 153.961, -28.8408, 0.59", "11.972, 156.578, -28.9382, 0.22", "12.203, 157.39, -28.9599, 0.66", "12.4056, 157.97, -28.9743, 0.66", "12.9249, 159.315, -29.0184, 0.15", "13.2261, 160.063, -29.0537, 0.81", "13.4322, 160.577, -29.0868, 0.81", "13.7261, 161.336, -29.154, 0.81", "14.2444, 162.784, -29.3058, 0.22", "14.7469, 164.255, -29.4956, 1.33", "14.9472, 164.872, -29.5864, 1.55", "15.0655, 165.232, -29.6416, 1.55", "15.1911, 165.614, -29.7056, 1.03", "15.7908, 167.353, -30.0244, 0.22", "16.3645, 168.9, -30.3292, 0.22", "16.6937, 169.711, -30.5089, 0.22", "17.0799, 170.671, -30.7242, 1.25", "17.3134, 171.291, -30.8673, 1.77", "17.5064, 171.853, -31.002, 1.77", "17.6584, 172.327, -31.1258, 1.18", "17.883, 173.077, -31.3306, 0.66", "18.5624, 175.363, -32.0051, 0.22", "19.0224, 176.89, -32.5008, 0.22", "19.3452, 177.931, -32.8375, 1.11", "19.5755, 178.6, -33.0476, 1.4", "19.8048, 179.194, -33.2327, 1.4", "20.1043, 179.882, -33.4669, 0.96", "21.0301, 181.827, -34.1846, 0.22", "22.0732, 183.848, -34.9384, 0.22", "22.9074, 185.396, -35.5061, 1.77", "23.208, 185.942, -35.6979, 2.65", "23.6905, 186.796, -35.9828, 2.95" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-9.5091, 38.1613, -10.651, 0.66", "-11.253, 39.0691, -10.7188, 0.66", "-11.9484, 39.398, -10.7426, 0.66", "-12.7638, 39.7516, -10.7629, 0.66", "-13.6961, 40.1144, -10.7867, 1.11", "-14.2755, 40.3118, -10.8048, 1.33", "-15.1491, 40.5985, -10.8346, 1.33", "-16.0982, 40.8793, -10.8645, 0.96", "-16.7507, 41.0779, -10.8638, 0.88", "-17.5273, 41.3159, -10.838, 0.88", "-18.4456, 41.5962, -10.7617, 0.37", "-18.9167, 41.7361, -10.7011, 0.37", "-19.7183, 41.9742, -10.5676, 0.81", "-20.409, 42.1886, -10.4325, 0.88", "-21.0474, 42.3929, -10.2978, 0.81", "-21.7201, 42.6132, -10.1452, 0.29", "-22.1501, 42.7476, -10.053, 0.29", "-22.9024, 42.9303, -9.92568, 0.74", "-23.4658, 43.0485, -9.85479, 0.74", "-23.7879, 43.1305, -9.81068, 0.74", "-24.1571, 43.2558, -9.73333, 0.74", "-24.6067, 43.4313, -9.61139, 0.59", "-25.0417, 43.5964, -9.46318, 0.59", "-25.4201, 43.7279, -9.29979, 0.37", "-26.4434, 44.0222, -8.83301, 0.37", "-27.1654, 44.1802, -8.49534, 0.37", "-27.5522, 44.2413, -8.31347, 0.22", "-28.2058, 44.3089, -8.01392, 0.22", "-28.5612, 44.3224, -7.87002, 0.22", "-29.6142, 44.3355, -7.49837, 1.03", "-30.1396, 44.3531, -7.34631, 1.4", "-30.4543, 44.3811, -7.26215, 1.4", "-31.2193, 44.4989, -7.07186, 0.81", "-32.2005, 44.6942, -6.86041, 0.22", "-32.7316, 44.8075, -6.7565, 0.22", "-33.8058, 45.0518, -6.57244, 1.11", "-34.3559, 45.1836, -6.49219, 1.4", "-34.7475, 45.2786, -6.44283, 1.4", "-35.6636, 45.4983, -6.34613, 0.66", "-36.5263, 45.6939, -6.26478, 0.52", "-37.5726, 45.8996, -6.17842, 0.74", "-38.253, 46.028, -6.13044, 0.88", "-39.2192, 46.2221, -6.071, 0.66", "-39.9051, 46.3673, -6.03383, 0.66", "-40.4679, 46.4932, -6.0096, 0.66", "-41.5257, 46.7508, -5.96103, 0.29", "-42.3709, 46.9744, -5.90062, 1.03", "-43.0864, 47.1754, -5.82585, 1.25", "-43.3121, 47.2502, -5.78444, 1.25", "-43.8871, 47.4804, -5.63752, 0.81", "-44.5715, 47.7866, -5.414, 0.29", "-45.0094, 48.0009, -5.23562, 0.52", "-45.2993, 48.1565, -5.1075, 0.66", "-46.3547, 48.7499, -4.64473, 0.22", "-46.9534, 49.093, -4.39966, 0.22", "-47.4469, 49.3748, -4.22187, 0.22", "-48.1152, 49.758, -4.03449, 0.22", "-49.0201, 50.2793, -3.82611, 0.59", "-49.5403, 50.5827, -3.73125, 0.81", "-50.0275, 50.8833, -3.68397, 0.81", "-50.7753, 51.3816, -3.64641, 0.52", "-51.7824, 52.0998, -3.63705, 1.03", "-52.386, 52.5473, -3.6513, 1.18", "-52.834, 52.8944, -3.67504, 1.25", "-53.8321, 53.7012, -3.75122, 0.29", "-54.735, 54.4523, -3.83769, 0.74", "-55.0743, 54.7384, -3.87645, 0.96", "-55.3722, 54.9872, -3.91847, 0.96", "-56.3671, 55.7882, -4.07566, 0.22", "-56.7632, 56.0895, -4.13987, 0.22", "-57.307, 56.475, -4.22064, 0.66", "-57.6789, 56.7268, -4.28353, 0.88", "-58.1206, 57.0118, -4.35706, 0.44", "-58.697, 57.3752, -4.44704, 0.37", "-59.0446, 57.5899, -4.49303, 0.44", "-59.5072, 57.8866, -4.55338, 0.44", "-59.84, 58.1029, -4.59711, 0.44", "-60.4803, 58.528, -4.67433, 0.22", "-60.8969, 58.8148, -4.71197, 0.22", "-61.3889, 59.1832, -4.74635, 0.29", "-61.6757, 59.4141, -4.75587, 0.22" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-11.6325, 29.6636, 2.19654, 1.47", "-11.1807, 30.5727, 2.1938, 1.47", "-10.771, 31.5645, 2.19528, 0.81", "-10.515, 32.2911, 2.2004, 0.81", "-10.2425, 33.3091, 2.21171, 0.81", "-9.96129, 34.5489, 2.22967, 0.81", "-9.69782, 35.9179, 2.25393, 0.81", "-9.52339, 37.2855, 2.27729, 1.03", "-9.41055, 38.5163, 2.30115, 1.03", "-9.2705, 40.401, 2.33309, 1.18", "-9.18998, 41.5684, 2.35837, 1.18", "-9.14408, 43.599, 2.39279, 1.18", "-9.16021, 45.0441, 2.41098, 1.4", "-9.16172, 46.0682, 2.42127, 1.4", "-9.16909, 46.7972, 2.42477, 1.4" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-11.6325, 29.6636, 2.19654, 0.96", "-13.3698, 30.6801, 1.21449, 0.96", "-13.997, 31.0636, 0.881823, 0.96", "-14.8666, 31.6047, 0.422631, 0.96", "-15.7686, 32.1868, -0.0634238, 0.81", "-16.5451, 32.7053, -0.478518, 0.81", "-17.6192, 33.4374, -1.03585, 1.03", "-18.3451, 33.9725, -1.40727, 1.03", "-19.0162, 34.553, -1.74289, 1.03", "-19.846, 35.3801, -2.14882, 0.81", "-20.4526, 36.0115, -2.44155, 0.81", "-21.1204, 36.7265, -2.74989, 0.81", "-21.9039, 37.6196, -3.10837, 0.52", "-22.6237, 38.5246, -3.41998, 0.52", "-23.0309, 39.0763, -3.57277, 0.52", "-23.6163, 39.9232, -3.76555, 0.52", "-24.3437, 41.0157, -3.99033, 0.52", "-24.7265, 41.6133, -4.0972, 0.52", "-25.1169, 42.2328, -4.18607, 0.52", "-25.5776, 42.9719, -4.2687, 0.66", "-26.0051, 43.705, -4.32594, 0.88", "-26.4192, 44.4914, -4.36438, 0.88", "-26.8772, 45.4164, -4.40262, 0.59", "-27.3401, 46.3353, -4.4531, 0.88", "-27.6732, 46.9969, -4.49763, 0.88", "-27.9429, 47.5878, -4.53686, 0.96", "-28.1783, 48.1291, -4.58008, 0.96", "-28.3907, 48.6026, -4.62938, 0.96", "-28.774, 49.3764, -4.73709, 0.74", "-29.3861, 50.515, -4.9331, 1.25", "-29.8131, 51.2725, -5.0796, 1.25", "-30.3002, 52.1178, -5.24932, 0.29", "-30.6251, 52.6801, -5.35619, 0.29", "-30.9551, 53.2501, -5.45337, 0.66", "-31.2547, 53.7652, -5.52649, 0.81", "-31.5068, 54.2016, -5.57265, 0.81", "-31.9273, 54.977, -5.61375, 0.37", "-32.3147, 55.838, -5.66188, 0.37", "-32.5332, 56.4027, -5.70426, 1.03", "-32.7156, 56.9035, -5.75406, 1.25", "-32.9508, 57.5169, -5.8358, 1.25", "-33.1567, 58.0038, -5.92267, 0.81", "-33.6074, 58.9693, -6.12831, 0.59", "-33.8801, 59.5195, -6.25567, 0.44", "-34.2646, 60.2948, -6.40992, 0.88", "-34.5632, 60.8918, -6.50676, 0.88", "-35.0826, 61.9349, -6.61805, 0.59", "-35.4184, 62.6297, -6.6727, 0.59", "-35.9409, 63.7559, -6.71984, 0.44", "-36.5083, 65.0544, -6.7527, 1.03", "-36.9611, 66.1588, -6.74907, 1.55", "-37.216, 66.8443, -6.71915, 1.62", "-37.5581, 67.848, -6.64503, 1.11", "-37.9064, 68.9501, -6.54112, 0.59", "-38.1347, 69.7113, -6.44774, 0.59", "-38.4985, 70.9824, -6.26167, 0.59", "-38.8634, 72.2481, -6.05697, 0.52", "-39.1106, 73.0749, -5.90595, 0.52", "-39.4348, 74.1029, -5.68258, 0.52", "-39.7865, 75.1747, -5.44377, 0.52", "-40.1963, 76.3479, -5.19597, 0.37", "-40.8127, 77.9064, -4.89956, 1.55", "-41.0478, 78.4195, -4.81772, 1.92", "-41.2926, 78.8855, -4.76038, 1.92", "-41.5249, 79.2825, -4.73216, 1.92", "-42.0268, 80.0332, -4.72273, 0.88", "-42.7042, 80.9838, -4.75194, 0.44", "-43.2165, 81.6872, -4.78988, 0.44", "-43.7644, 82.4498, -4.84555, 0.44", "-44.5241, 83.5363, -4.92503, 0.37", "-44.9279, 84.128, -4.96722, 0.37", "-45.7575, 85.3979, -5.04819, 0.74", "-46.088, 85.9202, -5.07275, 0.74", "-46.4954, 86.5921, -5.09768, 0.52", "-47.0315, 87.5218, -5.14234, 1.25", "-47.3992, 88.1757, -5.19686, 1.47", "-47.6419, 88.6204, -5.24718, 1.47", "-47.9731, 89.1709, -5.3544, 0.81", "-48.4226, 89.8596, -5.5333, 0.59", "-48.8708, 90.4946, -5.75285, 0.88", "-49.2479, 91.0056, -5.95944, 1.18", "-49.4823, 91.3199, -6.09592, 1.18", "-50.0602, 92.1186, -6.40764, 0.96", "-50.6802, 93.0261, -6.69231, 0.52", "-51.0445, 93.5922, -6.80026, 0.37", "-51.5778, 94.4715, -6.86499, 0.37", "-52.0917, 95.3859, -6.85112, 0.37", "-52.565, 96.3014, -6.77581, 0.37", "-52.8924, 97.0115, -6.66885, 0.81", "-53.36, 98.1522, -6.45536, 1.84", "-53.5457, 98.6132, -6.36748, 1.92", "-53.686, 98.9463, -6.31425, 1.92", "-53.9366, 99.5664, -6.23393, 1.62", "-54.2727, 100.447, -6.16791, 0.88", "-54.6062, 101.397, -6.12345, 0.29", "-55.1116, 102.878, -6.08219, 0.29", "-55.4966, 103.944, -6.05915, 0.29", "-55.7535, 104.564, -6.04635, 0.29", "-55.8928, 104.852, -6.042, 0.29", "-56.2578, 105.483, -6.04045, 0.66", "-56.7301, 106.174, -6.05005, 0.81", "-57.076, 106.629, -6.06262, 0.81", "-57.7387, 107.489, -6.09191, 0.37", "-58.2615, 108.149, -6.11825, 0.37", "-58.7561, 108.781, -6.14244, 0.81", "-59.105, 109.231, -6.15557, 0.81", "-59.6, 109.878, -6.1654, 0.37", "-60.0927, 110.48, -6.17649, 0.37", "-60.5993, 111.041, -6.18998, 0.88", "-61.2237, 111.698, -6.2081, 1.47", "-61.6932, 112.189, -6.22513, 1.69", "-62.0727, 112.592, -6.24318, 1.69", "-63.1058, 113.669, -6.30304, 0.37", "-63.4596, 114.044, -6.32463, 0.37", "-64.1171, 114.795, -6.36864, 0.37", "-64.8667, 115.728, -6.42165, 0.81", "-65.3439, 116.411, -6.45319, 1.33", "-65.6283, 116.866, -6.47357, 1.33", "-66.0054, 117.508, -6.50389, 0.81", "-66.7658, 118.767, -6.58392, 0.52", "-67.401, 119.741, -6.67046, 0.52", "-68.1165, 120.821, -6.78049, 0.52", "-68.5109, 121.416, -6.84563, 0.52", "-69.0165, 122.188, -6.93414, 0.52", "-69.582, 123.053, -7.04215, 0.52", "-70.5441, 124.512, -7.23867, 0.52", "-70.8927, 125.039, -7.31128, 0.52", "-71.7613, 126.327, -7.49067, 1.25", "-72.0073, 126.692, -7.53905, 1.47", "-72.3294, 127.167, -7.60786, 1.47", "-72.8029, 127.826, -7.71916, 0.88", "-73.3826, 128.557, -7.86591, 0.29", "-73.6261, 128.828, -7.92852, 0.29", "-74.135, 129.344, -8.05586, 0.44", "-74.5424, 129.737, -8.14932, 0.44", "-74.9294, 130.095, -8.22859, 0.44", "-75.1538, 130.316, -8.28271, 0.44", "-75.475, 130.644, -8.34135, 0.29", "-75.8907, 131.182, -8.37269, 0.29", "-76.0358, 131.387, -8.36654, 0.44", "-76.2155, 131.645, -8.34576, 0.44", "-76.694, 132.31, -8.27937, 0.37", "-77.3456, 133.173, -8.18549, 0.44", "-78.3914, 134.551, -8.11376, 2.28", "-78.8047, 135.101, -8.11273, 2.5", "-79.1164, 135.54, -8.13161, 2.5", "-79.6136, 136.263, -8.19402, 1.92", "-80.0965, 136.999, -8.30462, 0.81", "-80.6869, 138.02, -8.55766, 0.52", "-80.9221, 138.491, -8.69007, 0.52", "-81.403, 139.582, -9.00119, 0.88", "-81.662, 140.257, -9.18345, 0.88", "-81.9411, 141.073, -9.38493, 0.66", "-82.1498, 141.744, -9.53747, 0.44", "-82.4321, 142.719, -9.72199, 0.29", "-82.7253, 143.846, -9.93556, 0.29", "-83.0129, 145.133, -10.1887, 0.29", "-83.1387, 145.773, -10.3198, 0.29", "-83.3461, 146.962, -10.6112, 0.52", "-83.4878, 147.78, -10.8498, 0.88", "-83.6049, 148.454, -11.0917, 0.88", "-83.7531, 149.195, -11.403, 0.44", "-84.0893, 150.372, -11.9842, 1.11", "-84.4939, 151.39, -12.556, 2.43", "-84.8636, 152.077, -12.9915, 2.43", "-85.1445, 152.475, -13.2736, 2.43", "-85.5721, 152.942, -13.6207, 1.69", "-86.2153, 153.529, -14.0799, 0.59", "-86.9611, 154.085, -14.5298, 0.74", "-87.2234, 154.253, -14.656, 0.74", "-87.6681, 154.521, -14.859, 0.52", "-88.3619, 154.933, -15.1452, 0.52" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "23.2719, 6.42055, 6.09191, 1.99", "24.8908, 6.54157, 6.12386, 1.99", "25.8429, 6.85648, 6.20823, 1.99", "26.5168, 7.34234, 6.30231, 1.69", "27.464, 8.02534, 6.43457, 1.69", "27.863, 8.31301, 6.49027, 1.69", "28.5259, 8.79098, 6.58283, 1.69", "28.954, 9.28373, 6.61933, 1.92", "29.5874, 10.3171, 6.75143, 1.99" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "23.2719, 6.42055, 6.09191, 0.74", "23.9529, 8.2353, 6.44537, 0.74", "24.206, 9.02126, 6.58545, 0.74", "24.5543, 10.2542, 6.78647, 0.74", "24.8247, 11.3152, 6.94904, 0.44", "25.031, 12.2138, 7.0888, 0.44", "25.306, 13.5458, 7.29711, 0.66", "25.4073, 14.1872, 7.38591, 0.88", "25.5359, 15.1183, 7.53698, 0.88", "25.6404, 15.9768, 7.70826, 1.03", "25.803, 17.2069, 7.98582, 0.96", "25.932, 18.0788, 8.19684, 0.52", "26.0574, 18.7799, 8.37341, 0.52", "26.1988, 19.7116, 8.61185, 0.88", "26.3145, 20.4709, 8.80939, 0.66", "26.4476, 21.3206, 9.03805, 0.88", "26.5649, 22.079, 9.24714, 0.88", "26.7261, 23.1983, 9.56801, 0.29", "26.8351, 24.1025, 9.82331, 0.29", "26.9027, 24.7258, 9.98945, 0.29", "27.0165, 25.7878, 10.2786, 0.44", "27.0989, 26.4213, 10.4674, 0.74", "27.2262, 27.1839, 10.7025, 0.88", "27.3208, 27.6452, 10.8521, 1.11", "27.4058, 28.0103, 10.9688, 1.11", "27.566, 28.8406, 11.2087, 0.29", "27.7393, 29.6612, 11.4088, 0.29", "27.9389, 30.4381, 11.5786, 0.29", "29.7811, 38.7756, 15.2505, 0.29", "32.7404, 46.9974, 18.3961, 0.29", "34.753, 55.7808, 20.7378, 0.29", "35.9606, 64.8348, 22.5993, 0.29" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "6.95552, 38.3192, 1.13455, 0.59", "9.5476, 53.0936, 1.13455, 0.59", "12.1397, 67.8679, 1.13455, 0.59" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-88.5505, -62.6112, 2.8791, 0.44", "-90.416, -63.3078, 3.54348, 0.44", "-91.3601, -63.7327, 3.87537, 0.29", "-92.355, -64.2344, 4.196, 0.29", "-92.9383, -64.5427, 4.37356, 0.29", "-94.1774, -65.1888, 4.72206, 0.37", "-94.7432, -65.4667, 4.88364, 0.37", "-95.6053, -65.8731, 5.05754, 0.29", "-96.4304, -66.3241, 5.24633, 0.29", "-97.061, -66.7204, 5.40483, 0.29", "-97.4988, -67.0114, 5.51534, 0.29", "-98.1813, -67.4516, 5.68216, 0.29", "-98.8546, -67.8271, 5.82861, 0.44", "-99.7833, -68.2838, 6.02198, 0.44", "-100.276, -68.5398, 6.14862, 0.44", "-100.997, -68.9647, 6.37825, 0.66", "-101.717, -69.4804, 6.66924, 0.66", "-102.089, -69.8249, 6.87092, 0.52", "-102.729, -70.657, 7.40805, 0.44", "-102.987, -71.2423, 7.81009, 0.66", "-103.136, -71.8543, 8.24553, 0.66", "-103.242, -72.5621, 8.75379, 0.52", "-103.376, -73.4998, 9.43781, 0.52", "-103.467, -74.3576, 10.0545, 0.44", "-103.522, -75.1109, 10.5917, 0.37", "-103.653, -76.2817, 11.42, 0.37", "-103.807, -77.2013, 12.0859, 0.29", "-104.056, -78.123, 12.8023, 0.29", "-110.836, -84.7004, 14.7837, 0.29" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-88.5505, -62.6112, 2.8791, 1.11", "-89.5711, -63.0498, 3.05892, 1.11", "-90.365, -63.4672, 3.18149, 1.11", "-91.9741, -64.3741, 3.43751, 0.88", "-93.201, -65.0274, 3.63052, 0.88", "-95.0674, -65.9408, 3.91802, 0.88", "-97.015, -66.8047, 4.199, 0.88", "-98.0822, -67.2712, 4.34996, 0.88", "-99.0745, -67.6929, 4.46346, 0.81", "-100.19, -68.1482, 4.56055, 0.81", "-100.996, -68.4428, 4.62436, 0.81", "-102.428, -68.9126, 4.73921, 0.96", "-103.176, -69.183, 4.79339, 0.96", "-103.94, -69.5438, 4.83024, 0.96", "-104.662, -70.0099, 4.83937, 0.96", "-105.603, -70.7429, 4.83741, 0.96", "-105.916, -70.9997, 4.82935, 0.96", "-106.875, -71.7666, 4.77694, 0.88", "-108.078, -72.6102, 4.67595, 0.88", "-108.939, -73.1892, 4.59189, 1.11", "-109.808, -73.7757, 4.50304, 1.11", "-110.813, -74.4806, 4.38058, 0.96", "-111.662, -75.1322, 4.30225, 0.96", "-112.829, -76.1191, 4.23667, 0.88", "-114.166, -77.3633, 4.14942, 0.88", "-115.198, -78.3708, 4.03173, 0.96", "-116.022, -79.1899, 3.89797, 0.96", "-117.197, -80.3192, 3.66847, 0.88", "-117.755, -80.8238, 3.53025, 0.74", "-119.008, -81.8799, 3.16698, 0.96", "-120.117, -82.7202, 2.83063, 1.11", "-121.021, -83.3685, 2.57079, 1.25", "-121.806, -83.9331, 2.3683, 1.25", "-123.072, -84.8657, 2.07225, 1.03", "-124.78, -86.209, 1.77195, 0.88", "-126.019, -87.2795, 1.6195, 0.88", "-127.268, -88.4365, 1.49247, 0.88", "-128.309, -89.4149, 1.38433, 0.88", "-129.316, -90.3201, 1.28031, 1.33", "-130.108, -90.9627, 1.20745, 1.33", "-131.053, -91.675, 1.11409, 1.18", "-131.718, -92.1462, 1.04154, 0.96", "-132.916, -92.9318, 0.921595, 0.96", "-134.022, -93.5731, 0.828804, 0.96", "-135.513, -94.3141, 0.75184, 0.88", "-136.806, -94.8147, 0.743079, 0.81", "-137.534, -95.0199, 0.778324, 0.81", "-138.384, -95.2235, 0.84461, 0.74", "-139.014, -95.3968, 0.905549, 0.74", "-139.816, -95.6919, 0.993163, 0.74", "-140.963, -96.2751, 1.1255, 0.74", "-141.601, -96.7436, 1.19211, 1.11", "-142.572, -97.7511, 1.27002, 1.11", "-143.759, -99.2652, 1.33046, 0.88", "-144.527, -100.394, 1.35669, 0.88", "-145.115, -101.343, 1.36747, 0.88", "-145.923, -102.668, 1.3729, 0.81", "-147.038, -104.379, 1.32815, 0.81", "-147.612, -105.181, 1.2841, 1.18", "-148.245, -106.04, 1.2005, 1.33", "-148.933, -106.907, 1.08646, 1.33", "-150.063, -108.208, 0.877779, 0.88", "-151.187, -109.394, 0.635795, 0.81", "-152.367, -110.544, 0.376693, 0.81", "-153.769, -111.843, 0.0472566, 0.81", "-154.832, -112.787, -0.23477, 0.81", "-155.834, -113.65, -0.510812, 1.11", "-156.442, -114.168, -0.686578, 1.25", "-157.17, -114.784, -0.895724, 2.14", "-157.871, -115.414, -1.12093, 2.5", "-158.831, -116.263, -1.42984, 1.92", "-160.213, -117.665, -1.93928, 1.11", "-160.803, -118.347, -2.18212, 0.96", "-161.61, -119.37, -2.52864, 1.4", "-162.643, -120.75, -3.02913, 1.69" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-10.4101, -127.101, -3.20385, 0.37", "-9.45872, -129.263, -2.6145, 0.37", "-9.19838, -129.821, -2.48871, 0.52", "-8.87883, -130.504, -2.3625, 0.66", "-8.52231, -131.282, -2.23513, 0.37", "-8.25682, -131.857, -2.14913, 0.44", "-7.94807, -132.526, -2.05906, 0.44", "-7.58818, -133.324, -2.02935, 0.29", "-7.22404, -134.071, -2.00411, 0.29", "-6.86931, -134.699, -1.99329, 0.59", "-6.51503, -135.237, -2.00697, 0.59", "-6.08697, -135.799, -2.04821, 0.37", "-5.62925, -136.327, -2.11666, 0.66", "-5.18534, -136.772, -2.19977, 0.52", "-4.51292, -137.366, -2.35197, 0.37", "-4.00137, -137.782, -2.48639, 0.37", "-3.23617, -138.394, -2.71175, 0.37", "-2.49564, -138.983, -2.95079, 1.03", "-1.96059, -139.414, -3.13902, 1.18", "-1.46024, -139.828, -3.33346, 0.81", "-1.06872, -140.161, -3.49867, 0.52", "-0.336407, -140.791, -3.80891, 0.52", "0.357766, -141.412, -4.10658, 0.59", "0.956001, -141.999, -4.39068, 0.59", "1.4374, -142.528, -4.63906, 0.81", "1.82563, -142.99, -4.84939, 0.81", "2.24837, -143.525, -5.09051, 0.66", "2.5499, -143.934, -5.27295, 0.29", "3.23345, -144.929, -5.70532, 0.52", "3.8132, -145.797, -6.07923, 1.03", "4.01919, -146.115, -6.21769, 1.47", "4.39604, -146.669, -6.47192, 1.62", "4.90607, -147.34, -6.81041, 1.03", "5.4089, -147.918, -7.11897, 0.29", "5.90589, -148.419, -7.39723, 0.29", "6.48988, -148.957, -7.72043, 0.37", "7.09857, -149.51, -8.05629, 0.66", "7.41406, -149.792, -8.22518, 0.81", "7.91873, -150.224, -8.47832, 0.96", "8.30357, -150.545, -8.65995, 0.44", "8.61279, -150.796, -8.79435, 0.29", "9.22024, -151.271, -9.03126, 0.29", "9.67986, -151.67, -9.20364, 0.59", "10.1207, -152.102, -9.36315, 0.74", "10.4732, -152.487, -9.48773, 0.74", "10.944, -153.061, -9.65412, 0.74", "11.3172, -153.565, -9.79211, 0.44", "11.8088, -154.287, -9.98123, 0.29", "12.0959, -154.741, -10.0991, 0.66", "12.4495, -155.32, -10.2548, 0.88", "12.7782, -155.854, -10.4044, 0.96", "13.2542, -156.601, -10.6126, 0.66", "13.747, -157.368, -10.8218, 0.37", "14.3346, -158.231, -11.0621, 0.74", "14.6633, -158.698, -11.1941, 0.81", "15.0439, -159.245, -11.3429, 0.37", "15.5527, -160.009, -11.5382, 0.37", "15.989, -160.695, -11.7044, 0.37", "16.35, -161.284, -11.8441, 0.37", "16.6381, -161.778, -11.9593, 0.52", "16.9792, -162.36, -12.1043, 0.52", "17.3285, -162.953, -12.264, 0.37", "17.6828, -163.576, -12.4416, 0.37", "18.0986, -164.287, -12.6494, 0.81", "18.3523, -164.677, -12.7732, 0.88", "18.7885, -165.271, -12.9822, 0.59", "19.1694, -165.745, -13.1604, 0.37", "19.5611, -166.193, -13.3407, 0.37", "20.0655, -166.732, -13.5657, 0.44", "21.1071, -167.762, -14.0167, 0.44", "21.7935, -168.362, -14.3062, 1.18", "22.3135, -168.78, -14.5196, 1.47", "22.8879, -169.217, -14.7627, 1.47", "23.7301, -169.854, -15.1335, 1.18", "24.3778, -170.38, -15.4399, 0.29", "24.7758, -170.738, -15.6452, 0.29", "25.073, -171.03, -15.8179, 0.29", "25.5873, -171.603, -16.1752, 0.59", "26.0682, -172.224, -16.5661, 0.66", "26.3214, -172.615, -16.8112, 0.74", "26.5738, -173.07, -17.0809, 0.59", "26.8454, -173.632, -17.3891, 0.44", "27.1636, -174.352, -17.7713, 0.29", "27.3443, -174.838, -18.0053, 0.37", "27.5989, -175.656, -18.3678, 0.52", "27.7685, -176.284, -18.6063, 1.03", "27.9273, -176.942, -18.8471, 1.55", "28.0674, -177.511, -19.0479, 1.55", "28.4148, -178.948, -19.5474, 0.44", "28.6548, -179.885, -19.8893, 0.37", "29.2773, -181.974, -20.7483, 0.29", "29.4419, -182.417, -20.9552, 0.29", "29.9862, -183.555, -21.5586, 1.47", "30.2183, -183.923, -21.79, 1.92", "30.7034, -184.511, -22.2481, 2.06", "31.4433, -185.229, -22.9712, 0.81", "32.404, -185.982, -23.9722, 0.29", "33.0051, -186.423, -24.6276, 0.29", "33.796, -186.98, -25.477, 0.44", "34.1914, -187.259, -25.8731, 0.52", "35.1502, -187.95, -26.748, 0.29", "35.8772, -188.491, -27.3214, 0.88", "36.3181, -188.826, -27.5946, 0.74", "37.4089, -189.699, -28.0477, 0.29", "38.2085, -190.344, -28.2391, 0.29", "39.011, -190.995, -28.344, 0.59", "39.5406, -191.428, -28.3683, 0.66", "40.5516, -192.273, -28.38, 0.29", "41.5592, -193.16, -28.3965, 0.29", "42.2066, -193.798, -28.4425, 0.29", "42.7888, -194.46, -28.5147, 1.03", "43.2022, -194.979, -28.5953, 1.47", "43.5665, -195.481, -28.7003, 1.18", "44.2158, -196.458, -28.9524, 0.22", "44.7878, -197.361, -29.2065, 0.22", "45.5094, -198.525, -29.5615, 0.22", "45.8176, -199.004, -29.7144, 0.52", "46.3503, -199.804, -29.9807, 0.29", "46.854, -200.543, -30.2402, 0.29", "47.1722, -200.988, -30.4148, 0.88", "47.6144, -201.585, -30.6349, 0.88", "48.2705, -202.49, -30.9418, 0.29", "48.5734, -202.908, -31.0651, 0.29", "49.1178, -203.631, -31.2279, 0.96", "49.5115, -204.109, -31.295, 1.4", "49.9374, -204.593, -31.3306, 1.77", "50.209, -204.878, -31.3355, 1.77", "51.2803, -205.93, -31.3335, 0.22", "52.3882, -206.937, -31.299, 0.22", "53.261, -207.664, -31.2761, 0.88", "53.6534, -207.978, -31.2759, 1.33", "54.0519, -208.288, -31.2969, 1.33", "54.9568, -208.972, -31.3718, 0.22", "56.069, -209.795, -31.511, 0.22", "57.236, -210.681, -31.7226, 0.22", "58.2821, -211.525, -31.9727, 0.22", "58.8854, -212.04, -32.14, 0.74", "59.2073, -212.336, -32.2421, 0.88", "59.5782, -212.713, -32.3814, 0.52", "60.214, -213.477, -32.6752, 0.22", "60.5277, -213.913, -32.8365, 0.88", "60.8702, -214.43, -33.0096, 1.33", "61.1416, -214.86, -33.1393, 1.33", "61.7733, -215.913, -33.4233, 0.29", "62.5097, -217.205, -33.7199, 0.29", "62.8681, -217.848, -33.8402, 0.44", "63.1827, -218.413, -33.9243, 0.59", "63.4723, -218.932, -33.984, 0.59", "63.9402, -219.762, -34.0549, 0.22", "64.4173, -220.614, -34.111, 0.22", "64.7139, -221.134, -34.146, 0.74", "64.892, -221.444, -34.1731, 0.88", "65.1271, -221.84, -34.2254, 0.88", "65.5975, -222.613, -34.3348, 0.22", "66.4283, -223.922, -34.553, 0.22", "66.7966, -224.496, -34.6696, 0.52", "67.0336, -224.87, -34.7575, 0.66", "67.4022, -225.451, -34.9073, 0.44", "72.6334, -231.321, -38.3394, 0.44" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-10.4101, -127.101, -3.20385, 2.28", "-11.01, -128.448, -2.92602, 2.28", "-11.5757, -129.6, -2.62143, 1.62", "-12.3028, -130.969, -2.24444, 1.33", "-13.0357, -132.255, -1.9021, 0.88", "-13.3965, -132.848, -1.7513, 0.88", "-13.9721, -133.717, -1.53663, 1.03", "-15.1276, -135.27, -1.16385, 1.03", "-16.131, -136.454, -0.89024, 0.96", "-16.9327, -137.309, -0.722161, 0.88", "-17.6215, -138.038, -0.626381, 1.11", "-18.3777, -138.918, -0.589428, 1.33", "-18.9716, -139.756, -0.627846, 1.55", "-19.4462, -140.613, -0.732523, 1.25", "-19.7881, -141.479, -0.879991, 0.96", "-20.077, -142.67, -1.11178, 0.88", "-20.2856, -144.151, -1.42884, 0.88", "-20.4076, -145.734, -1.7723, 0.88", "-20.4665, -147.128, -2.06846, 1.03", "-20.4874, -148.431, -2.33325, 1.03", "-20.4936, -149.965, -2.61592, 1.03", "-20.4856, -151.363, -2.84378, 1.25", "-20.4498, -152.977, -3.06027, 1.55", "-20.39, -154.212, -3.18884, 1.55", "-20.2509, -155.914, -3.32507, 1.33", "-20.1052, -157.305, -3.41251, 1.33", "-19.9766, -158.548, -3.47513, 1.11", "-19.8281, -159.877, -3.4863, 1.11", "-19.6895, -161.339, -3.4503, 0.96", "-19.6212, -162.427, -3.39396, 0.96", "-19.5757, -164.001, -3.25322, 0.88", "-19.5712, -166.079, -3.01424, 0.88", "-19.6066, -167.881, -2.76035, 1.03", "-19.6672, -169.485, -2.49892, 1.25", "-19.7525, -171.01, -2.22709, 1.33", "-19.8371, -172.211, -2.00021, 1.62", "-19.9132, -173.445, -1.75245, 2.5", "-19.9321, -174.115, -1.62135, 2.8", "-19.941, -174.944, -1.49779, 3.02", "-19.916, -175.722, -1.37893, 3.02", "-19.8939, -176.243, -1.30218, 3.32" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-1.60553, -59.8776, -8.09932, 0.81", "-1.9673, -61.3452, -8.139, 0.81", "-2.29564, -62.3283, -8.14966, 0.66", "-2.73598, -63.4229, -8.16703, 0.66", "-3.24113, -64.5668, -8.19552, 0.52", "-3.44934, -65.0235, -8.20962, 0.52", "-3.99944, -66.2265, -8.25147, 0.74", "-4.56581, -67.4495, -8.24134, 0.74", "-5.05933, -68.4597, -8.25042, 0.88", "-5.62248, -69.5529, -8.29558, 0.59", "-5.985, -70.2654, -8.35329, 1.03", "-6.3167, -70.9661, -8.41026, 1.25", "-6.64777, -71.7933, -8.46273, 1.03", "-7.0026, -72.8659, -8.51389, 0.66", "-7.27, -73.7419, -8.5532, 0.66", "-7.5404, -74.6462, -8.60646, 0.81", "-7.83248, -75.7061, -8.69242, 0.81", "-8.03345, -76.5954, -8.79086, 0.66", "-8.18275, -77.5409, -8.91912, 0.52", "-8.23832, -78.1039, -9.02057, 0.52", "-8.2931, -78.7945, -9.1603, 0.52", "-8.36892, -79.7787, -9.38445, 0.66", "-8.44997, -80.6717, -9.60126, 0.66", "-8.55267, -81.6141, -9.84474, 0.59", "-8.69145, -82.6459, -10.1107, 1.18", "-8.80798, -83.5449, -10.3319, 1.55", "-8.94216, -84.4034, -10.5327, 1.99", "-9.18138, -85.4377, -10.7762, 2.73", "-9.41641, -86.1987, -10.9574, 2.87", "-9.67503, -86.9058, -11.1399, 3.02" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-1.60553, -59.8776, -8.09932, 0.52", "-1.04246, -61.2178, -9.32773, 0.52", "-0.918121, -61.5339, -9.58567, 0.52", "-0.480202, -62.5781, -10.4402, 0.52", "-0.116335, -63.3521, -11.0832, 0.66", "0.129998, -63.8256, -11.4624, 0.66", "0.361549, -64.2254, -11.7768, 0.44", "0.63877, -64.7774, -12.2037, 0.88", "0.887541, -65.2962, -12.5676, 1.33", "1.1652, -65.8554, -12.9238, 1.47", "1.47868, -66.5025, -13.4056, 1.03", "1.83613, -67.5081, -14.2627, 0.44", "1.87573, -68.1204, -14.8905, 0.44", "1.72495, -68.8202, -15.7992, 0.37", "1.53109, -69.3263, -16.577, 0.37", "1.27463, -69.9751, -17.7446, 0.37", "1.13068, -70.3996, -18.6306, 0.74", "1.07084, -70.6883, -19.3002, 0.96", "1.06654, -71.0903, -20.2216, 0.96", "1.13728, -71.8213, -21.8331, 0.44", "1.24462, -72.3255, -22.8551, 1.33", "1.43989, -73.0199, -24.1373, 1.55", "1.62493, -73.6598, -25.2533, 1.33", "1.8844, -74.5345, -26.6499, 0.81", "2.00488, -74.91, -27.1882, 1.25", "2.17661, -75.3764, -27.7736, 0.88", "2.35844, -75.9013, -28.3355, 0.37", "2.51067, -76.3648, -28.7448, 0.81", "2.66197, -76.8621, -29.1297, 1.03", "2.76351, -77.1617, -29.3352, 1.03", "3.15504, -78.2007, -30.0156, 0.29", "3.36904, -78.7287, -30.3394, 0.29", "3.68119, -79.4133, -30.7282, 1.84", "3.98852, -79.99, -31.0583, 2.14", "4.86036, -81.4135, -31.9233, 0.29", "5.31903, -82.0661, -32.3367, 0.81", "5.7919, -82.6526, -32.72, 0.81", "6.29048, -83.1991, -33.1052, 0.52", "6.97677, -83.8726, -33.6425, 1.25", "7.42698, -84.2816, -34.0055, 1.4", "8.58567, -85.2933, -34.9393, 0.22", "9.30166, -85.9092, -35.4874, 0.22", "10.1134, -86.6138, -36.0762, 1.4", "10.6211, -87.0826, -36.4256, 2.21", "10.8534, -87.3153, -36.5709, 2.21", "12.359, -88.9593, -37.4238, 0.22", "12.7622, -89.4228, -37.6417, 0.74", "13.1181, -89.8528, -37.8407, 1.03", "13.6911, -90.5978, -38.1722, 0.59", "15.0258, -92.4377, -38.9616, 0.22", "16.7143, -94.8293, -40.0021, 0.22", "17.3014, -95.6795, -40.3981, 0.81", "17.7365, -96.3079, -40.7036, 0.96", "19.1463, -98.3555, -41.7397, 0.22", "20.0266, -99.6193, -42.4303, 0.22", "20.5107, -100.317, -42.8505, 0.88", "20.9864, -100.994, -43.3036, 0.88", "22.3251, -102.885, -44.6236, 0.15", "23.3403, -104.266, -45.5624, 0.15", "23.9358, -105.047, -46.1034, 0.15", "24.477, -105.758, -46.5864, 1.62", "24.814, -106.217, -46.8798, 1.92", "25.0821, -106.586, -47.0913, 1.92", "26.8201, -109.039, -48.3814, 0.22", "27.1932, -109.563, -48.6336, 0.66", "27.4768, -109.971, -48.8184, 0.88", "27.7678, -110.387, -49.0094, 0.88", "28.6934, -111.744, -49.7365, 0.15", "29.3669, -112.843, -50.445, 0.15", "29.7164, -113.512, -50.9377, 0.81", "29.9216, -113.991, -51.3003, 1.03", "30.07, -114.425, -51.635, 1.03", "30.4315, -115.885, -52.7934, 0.22", "30.6634, -117.471, -54.0981, 0.22", "30.7317, -118.117, -54.6653, 0.22", "30.8149, -119.051, -55.5329, 1.03", "30.86, -119.536, -55.9883, 1.62", "30.9055, -120.026, -56.4739, 1.62", "30.9974, -120.852, -57.3462, 1.03", "31.2203, -122.542, -59.2222, 0.22", "31.3185, -123.333, -60.195, 0.44", "31.386, -123.766, -60.7589, 0.44", "31.5475, -124.723, -62.0128, 0.66", "31.64, -125.206, -62.6275, 0.96", "31.7607, -125.762, -63.3239, 0.37", "32.1932, -127.547, -65.4717, 0.66", "32.2974, -127.914, -65.9013, 0.66", "32.7061, -129.245, -67.4753, 0.22", "32.9536, -129.948, -68.2725, 0.22", "33.1988, -130.574, -68.9676, 0.81", "33.4625, -131.137, -69.5744, 0.96", "33.6686, -131.503, -69.8736, 0.96" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "23.6905, 186.796, -35.9828, 0.37", "24.5776, 186.312, -34.4708, 0.37", "24.7586, 186.214, -34.1623, 0.37" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "23.6905, 186.796, -35.9828, 0.22", "25.0226, 189.681, -36.2757, 0.22", "25.6952, 191.25, -36.496, 0.22", "26.2072, 192.492, -36.6959, 0.74", "26.387, 192.953, -36.7733, 0.74", "27.2199, 195.089, -37.132, 0.15", "27.7589, 196.47, -37.364, 0.15", "28.138, 197.467, -37.6427, 0.66", "28.3305, 198.084, -37.7889, 0.88", "28.5387, 198.791, -37.9156, 0.29" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-9.16909, 46.7972, 2.42477, 0.66", "-9.51795, 48.995, 2.23133, 0.66", "-9.5917, 49.8249, 2.20294, 0.96", "-9.67645, 50.7979, 2.18753, 0.96", "-9.7866, 52.1267, 2.18392, 0.59", "-9.87283, 53.3036, 2.19195, 0.59", "-9.9555, 54.6948, 2.2128, 0.59", "-10.0412, 56.714, 2.31249, 0.59", "-10.0541, 57.6661, 2.36859, 0.52", "-10.0455, 59.088, 2.46363, 0.88", "-10.0387, 60.1189, 2.52514, 1.11", "-10.0517, 61.3497, 2.57912, 1.11", "-10.0857, 62.7671, 2.63898, 0.74", "-10.1534, 64.2534, 2.6972, 0.74", "-10.2593, 66.1553, 2.77412, 0.74", "-10.3559, 67.4677, 2.81525, 0.52", "-10.4837, 68.8723, 2.83451, 0.52", "-10.586, 69.8845, 2.83339, 0.96", "-10.7357, 71.3801, 2.79985, 1.11", "-10.9579, 73.5993, 2.71208, 1.11", "-11.0992, 75.0582, 2.63586, 1.11", "-11.2195, 76.5117, 2.57438, 0.81", "-11.3054, 77.7889, 2.53276, 0.74", "-11.3683, 79.119, 2.50687, 0.74", "-11.3982, 80.3651, 2.5071, 0.44", "-11.419, 81.4183, 2.52984, 0.44", "-11.4672, 83.1497, 2.61289, 0.74", "-11.5039, 84.3438, 2.69432, 0.74", "-11.5371, 85.6129, 2.79282, 0.37", "-11.5365, 86.9296, 2.90919, 0.74", "-11.5129, 88.0808, 2.97154, 0.96", "-11.4656, 89.4029, 2.99391, 0.96", "-11.3925, 90.8605, 2.94731, 0.81", "-11.3047, 92.2302, 2.86453, 0.52", "-11.1892, 93.6627, 2.74761, 0.52", "-10.9859, 95.5429, 2.57319, 1.03", "-10.8561, 96.5423, 2.47427, 1.55", "-10.7287, 97.446, 2.37801, 1.69", "-10.6446, 98.0347, 2.31591, 1.69", "-10.4338, 99.4897, 2.1883, 0.37", "-10.258, 100.705, 2.12691, 0.44", "-10.1493, 101.336, 2.1373, 0.44", "-10.006, 102.061, 2.17387, 0.44", "-9.74941, 103.26, 2.2656, 0.29", "-9.62379, 103.77, 2.31044, 0.59", "-9.3735, 104.633, 2.39603, 0.44", "-8.96466, 105.991, 2.53843, 0.29", "-8.60623, 107.251, 2.67144, 1.18", "-8.4259, 107.928, 2.74369, 1.18", "-8.16254, 108.946, 2.84854, 0.52", "-7.91166, 109.923, 2.94866, 0.29", "-7.62284, 111.036, 3.09512, 0.29", "-7.38859, 112.042, 3.27776, 0.29", "-7.26145, 112.7, 3.42286, 0.29", "-7.05773, 114.009, 3.74819, 0.81", "-6.90383, 115.156, 4.05852, 0.44", "-6.7359, 116.254, 4.35198, 0.22", "-6.51615, 117.362, 4.6428, 0.44", "-6.42342, 117.786, 4.75983, 0.44", "-6.23184, 118.696, 5.01401, 0.29", "-6.07789, 119.519, 5.24607, 0.29", "-5.85927, 120.643, 5.53998, 0.29", "-5.70969, 121.362, 5.70326, 0.29", "-5.50868, 122.288, 5.90385, 0.66", "-5.3515, 123.04, 6.07326, 0.66", "-5.15474, 123.993, 6.2625, 0.74", "-4.98427, 125.03, 6.46572, 0.37", "-4.8767, 125.843, 6.62387, 0.37", "-4.72665, 126.98, 6.81007, 0.52", "-4.60345, 127.84, 6.91906, 0.59", "-4.41001, 129.15, 7.06759, 0.44", "-4.26816, 130.073, 7.16425, 0.29", "-4.16143, 130.72, 7.2364, 0.29", "-3.93109, 132.149, 7.41232, 1.11", "-3.80331, 132.967, 7.52202, 1.25", "-3.71464, 133.551, 7.60643, 1.25", "-3.50929, 134.776, 7.7878, 0.66", "-3.35767, 135.508, 7.87891, 0.29", "-3.08381, 136.645, 8.0135, 0.29", "-2.80942, 137.661, 8.12947, 0.29", "-2.5342, 138.58, 8.23187, 0.29", "-2.08945, 139.953, 8.3782, 0.96", "-1.89291, 140.549, 8.43193, 1.47", "-1.73704, 141.06, 8.46735, 1.47", "-1.65467, 141.361, 8.48182, 1.47", "-1.44745, 142.244, 8.5187, 0.74", "-1.23463, 143.258, 8.56429, 0.29", "-1.04788, 144.297, 8.61338, 0.52", "-0.875355, 145.257, 8.66476, 0.74", "-0.62884, 146.476, 8.74447, 0.44", "-0.40831, 147.445, 8.81806, 0.29", "-0.234891, 148.125, 8.87575, 0.29", "0.0398877, 149.057, 8.96686, 0.66", "0.257621, 149.722, 9.03498, 0.74", "0.5769, 150.659, 9.13146, 0.74", "0.925528, 151.71, 9.24559, 0.29", "1.21779, 152.65, 9.34979, 0.29", "1.76242, 154.543, 9.56028, 0.29", "2.08317, 155.833, 9.75913, 0.52", "2.24964, 156.612, 9.90383, 1.18", "2.36891, 157.287, 10.0452, 1.4", "2.52188, 158.386, 10.2942, 1.4", "2.61165, 159.25, 10.4987, 0.66", "2.79548, 161.274, 10.9791, 0.29", "2.93167, 162.55, 11.259, 0.29", "3.04467, 163.32, 11.3908, 0.37", "3.23511, 164.359, 11.5192, 0.37", "3.46983, 165.432, 11.6135, 0.37", "3.95609, 167.333, 11.7143, 0.37", "4.5718, 169.399, 11.7336, 0.37", "5.22499, 171.402, 11.7396, 1.33", "5.57492, 172.363, 11.7293, 1.99", "5.87179, 173.125, 11.7125, 1.99", "5.99915, 173.447, 11.7019, 1.99", "6.23667, 174.043, 11.6833, 1.99", "6.73296, 175.284, 11.6675, 0.59", "7.31043, 176.723, 11.7011, 0.29", "7.71525, 177.727, 11.7795, 0.59", "8.02945, 178.502, 11.8644, 0.59", "8.6879, 180.124, 12.0885, 0.37", "9.03855, 181.024, 12.2355, 0.37", "9.57118, 182.482, 12.509, 0.37", "10.1586, 184.238, 12.8738, 0.74", "10.3687, 184.961, 13.0188, 0.74", "10.5464, 185.71, 13.169, 0.88", "10.7417, 186.8, 13.382, 0.44", "10.9941, 188.689, 13.6948, 0.29", "11.0869, 189.703, 13.7996, 0.52", "11.2061, 191.595, 13.8711, 1.25", "11.2405, 192.403, 13.8762, 1.62", "11.2615, 192.935, 13.8535, 1.62", "11.3043, 194.029, 13.7586, 0.96", "11.3871, 195.664, 13.5451, 0.29", "11.462, 196.604, 13.4064, 0.29", "11.5845, 197.747, 13.2509, 0.29", "11.7134, 198.942, 13.1245, 0.74", "11.7617, 199.484, 13.0904, 0.96", "11.8072, 200.111, 13.0791, 0.96", "11.9066, 201.699, 13.0881, 0.52", "12.0413, 203.891, 13.089, 0.37", "12.1284, 205.395, 13.0932, 0.29", "12.1938, 206.814, 13.0869, 0.66", "12.233, 207.767, 13.0632, 0.66", "12.2928, 209.556, 12.9826, 0.29", "12.3225, 210.444, 12.9356, 0.29", "12.4113, 212.785, 12.8075, 0.29", "12.5399, 215.332, 12.6828, 1.99", "12.5698, 215.91, 12.663, 2.28", "12.6022, 216.727, 12.6522, 1.55", "12.6247, 217.62, 12.681, 0.88", "12.6308, 219.075, 12.8038, 0.22", "12.618, 219.755, 12.8889, 0.22", "12.5763, 220.996, 13.086, 0.66", "12.5494, 221.78, 13.2106, 0.66", "12.5156, 223.108, 13.4099, 0.29", "12.4763, 225.235, 13.6883, 0.22", "12.4838, 226.313, 13.8202, 0.22", "12.5221, 227.454, 13.9466, 0.52", "12.6398, 228.882, 14.087, 0.44", "12.7997, 230.126, 14.1951, 0.44", "13.0427, 231.561, 14.2959, 0.44", "13.5205, 233.787, 14.4401, 0.22", "13.9185, 235.442, 14.5463, 0.66", "14.2775, 236.781, 14.6326, 1.77", "14.4856, 237.489, 14.6796, 1.77", "14.69, 238.123, 14.7244, 1.77", "15.0305, 239.05, 14.7989, 0.88", "15.4357, 240.079, 14.927, 0.29", "15.7161, 240.775, 15.041, 0.52", "16.4184, 242.575, 15.3741, 0.22", "16.8215, 243.602, 15.5591, 0.52", "17.2819, 244.759, 15.7537, 0.52", "18.2834, 247.305, 16.1475, 0.22", "19.0463, 249.254, 16.4181, 0.37", "19.5407, 250.537, 16.5897, 0.37", "20.0763, 251.966, 16.7664, 1.92", "20.3133, 252.624, 16.8355, 2.21", "20.5434, 253.307, 16.8794, 2.21", "20.8149, 254.117, 16.836, 1.18" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-9.16909, 46.7972, 2.42477, 0.66", "-8.60838, 48.7968, 2.86545, 0.66", "-8.2635, 50.0148, 3.12426, 0.81", "-8.01573, 50.9201, 3.34006, 0.37", "-7.73844, 52.0106, 3.60367, 0.29", "-7.26444, 53.839, 4.03425, 0.29", "-6.96066, 54.9092, 4.28881, 0.29", "-6.60828, 55.9385, 4.51347, 0.29", "-6.05758, 57.2941, 4.83986, 0.29", "-5.56477, 58.4057, 5.11845, 0.29", "-5.07348, 59.5128, 5.39535, 0.74", "-4.73302, 60.2565, 5.59124, 0.74", "-4.08572, 61.5152, 5.93481, 0.29", "-3.70241, 62.2377, 6.14159, 0.37", "-2.82212, 63.9196, 6.60699, 0.37", "-2.358, 64.8707, 6.87255, 0.37", "-1.88446, 65.9947, 7.1761, 0.37", "-1.69463, 66.513, 7.31172, 0.37", "-1.39495, 67.4588, 7.55828, 0.22", "-1.12804, 68.3772, 7.79479, 0.22", "-0.891325, 69.1018, 7.97683, 0.66", "-0.627175, 69.9758, 8.15379, 0.96", "2.32772, 80.4461, 9.44241, 0.96", "7.36481, 89.5348, 12.7264, 0.96", "11.1738, 98.7429, 17.1521, 0.96" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "29.5874, 10.3171, 6.75143, 0.66", "30.4035, 8.60162, 6.75084, 0.66", "30.6331, 8.05576, 6.71708, 0.66", "31.0117, 7.21647, 6.68996, 0.88", "31.6995, 5.86354, 6.6981, 0.88", "32.1961, 5.00222, 6.73859, 0.88", "32.6777, 4.28707, 6.79771, 1.03", "33.2451, 3.51339, 6.87247, 1.03", "34.0783, 2.91219, 7.09253, 0.88", "34.7516, 2.76639, 7.30964, 0.88", "35.3327, 2.71396, 7.51662, 0.88", "36.2522, 2.60098, 7.87284, 0.81", "37.3069, 2.32648, 8.31522, 0.81", "37.9742, 2.0143, 8.5835, 0.81", "38.8176, 1.40313, 8.86079, 0.74", "39.7138, 0.608291, 9.11385, 0.88", "40.5082, -0.190976, 9.29666, 0.88", "41.3577, -1.16126, 9.45047, 0.52", "41.7848, -1.66265, 9.48983, 0.52", "42.313, -2.19277, 9.47323, 0.52", "42.9997, -2.7346, 9.40155, 0.52", "43.7939, -3.19929, 9.28055, 0.74", "44.6059, -3.58174, 9.13352, 0.74", "45.6401, -3.99429, 8.93019, 0.74", "47.0089, -4.48172, 8.6655, 0.74", "47.9594, -4.79207, 8.47457, 0.74", "48.7135, -4.99832, 8.32758, 0.74", "49.5352, -5.13671, 8.17677, 0.74", "50.0173, -5.17906, 8.10777, 0.88", "51.3812, -5.18968, 7.93822, 0.88", "52.5443, -5.15885, 7.81565, 0.88", "53.9837, -5.13286, 7.6807, 0.66", "55.0353, -5.13502, 7.607, 0.66", "57.7387, -5.16451, 7.48545, 0.59", "58.6756, -5.18263, 7.46028, 0.52", "60.0938, -5.17733, 7.44506, 0.52", "60.9487, -5.12634, 7.44949, 0.52", "61.88, -4.98171, 7.45708, 0.52", "62.9944, -4.73455, 7.4709, 0.52", "63.7394, -4.55118, 7.48934, 0.52", "64.9546, -4.3055, 7.53359, 0.52", "66.2726, -4.03871, 7.59093, 0.52", "67.5072, -3.82825, 7.6538, 0.52", "68.6542, -3.72833, 7.72457, 0.52", "69.9576, -3.77578, 7.82638, 0.52", "70.8501, -3.95848, 7.92353, 0.52", "71.6767, -4.23339, 8.07115, 0.52", "72.231, -4.43627, 8.2052, 0.52", "72.9301, -4.67414, 8.40526, 0.52", "74.3467, -5.06319, 8.89078, 0.29", "76.8812, -5.54825, 9.86783, 0.29", "79.1824, -5.82009, 10.8147, 0.29", "80.3577, -5.86165, 11.3327, 0.29", "81.2023, -5.84896, 11.7188, 0.44", "82.0977, -5.76005, 12.1588, 0.59", "82.6606, -5.6237, 12.4915, 0.59", "83.5798, -5.05068, 13.1794, 0.59", "84.0702, -4.51314, 13.5709, 0.59", "93.5755, -7.72809, 15.6565, 0.59" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "29.5874, 10.3171, 6.75143, 1.11", "31.3882, 9.77666, 6.90272, 1.11", "32.4934, 9.2941, 7.0003, 1.11", "33.7733, 8.78159, 6.9899, 1.25", "34.7755, 8.47895, 6.9319, 1.47", "36.1528, 8.21744, 6.81077, 1.4", "37.3881, 8.10124, 6.67551, 1.4", "38.7903, 8.0254, 6.4513, 1.18", "40.717, 8.26863, 6.03315, 1.18", "42.0563, 8.71263, 5.66353, 1.18", "43.2072, 9.19366, 5.3113, 1.18", "43.8914, 9.48601, 5.10026, 0.88", "44.573, 9.70991, 4.90835, 0.88", "45.6348, 9.83456, 4.66405, 0.88", "47.2408, 9.63751, 4.39607, 1.11", "48.4531, 9.30683, 4.21727, 1.11", "49.6766, 8.87707, 4.04396, 1.11", "51.0559, 8.31455, 3.86089, 1.25", "52.4588, 7.66945, 3.69037, 1.33", "53.1055, 7.34304, 3.62238, 1.47", "54.1719, 6.82205, 3.53341, 1.77" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-162.643, -120.75, -3.02913, 0.59", "-162.587, -122.576, -3.35489, 0.59", "-162.555, -123.348, -3.46157, 0.59", "-162.508, -124.026, -3.53459, 0.52", "-162.445, -124.809, -3.59758, 0.52", "-162.396, -125.657, -3.65351, 0.88", "-162.348, -126.597, -3.70623, 1.03", "-162.326, -127.162, -3.69664, 1.03", "-162.261, -128.159, -3.66414, 1.03", "-162.181, -129.017, -3.62535, 0.29", "-162.129, -129.629, -3.59411, 0.29", "-162.099, -130.134, -3.56573, 0.29", "-162.091, -131.089, -3.51685, 0.59", "-162.125, -131.872, -3.44367, 0.74", "-162.18, -132.431, -3.37106, 0.88", "-162.254, -132.972, -3.29005, 0.88", "-162.336, -133.474, -3.20071, 0.88", "-162.483, -134.144, -3.06885, 0.81", "-162.856, -135.587, -2.77806, 0.37", "-163.057, -136.368, -2.61438, 1.03", "-163.259, -137.143, -2.42032, 1.33", "-163.451, -137.852, -2.22334, 1.33", "-163.718, -138.758, -1.95579, 1.03", "-163.958, -139.518, -1.72707, 0.74", "-164.18, -140.177, -1.54931, 0.37", "-164.483, -141.045, -1.26779, 0.74", "-164.668, -141.544, -1.09274, 0.74", "-164.876, -142.155, -0.919068, 0.59", "-165.012, -142.621, -0.81779, 0.37", "-165.178, -143.299, -0.733113, 0.37", "-165.438, -144.412, -0.725575, 0.66", "-165.632, -145.199, -0.80455, 0.74", "-165.997, -146.527, -1.02248, 0.52", "-166.155, -147.081, -1.13873, 0.52", "-166.379, -147.736, -1.29411, 1.33", "-166.672, -148.551, -1.50893, 1.55", "-167.065, -149.621, -1.77016, 1.99", "-167.319, -150.262, -1.8865, 2.21", "-167.668, -151.06, -1.9843, 1.99", "-168.113, -152.021, -2.09752, 1.11", "-168.587, -153.123, -2.23449, 0.37", "-168.94, -154.066, -2.3512, 1.11", "-169.101, -154.544, -2.41376, 1.25", "-169.304, -155.16, -2.49423, 1.25", "-169.761, -156.518, -2.70548, 0.29", "-170.056, -157.381, -2.85872, 0.29", "-170.358, -158.172, -3.00395, 0.44", "-170.687, -158.99, -3.16125, 0.59", "-171.083, -159.956, -3.33702, 0.88", "-171.418, -160.758, -3.47035, 0.96", "-171.786, -161.53, -3.58143, 0.66", "-172.291, -162.447, -3.67546, 0.37", "-172.679, -163.101, -3.73113, 0.29", "-173.109, -163.782, -3.75602, 0.29", "-173.483, -164.38, -3.74997, 0.29", "-174.002, -165.184, -3.70831, 0.29", "-174.785, -166.287, -3.64686, 0.74", "-175.396, -167.048, -3.57011, 1.03", "-176.158, -167.93, -3.44638, 2.28", "-176.76, -168.57, -3.33561, 2.8", "-177.34, -169.175, -3.2284, 3.09", "-178.273, -170.184, -3.06053, 1.84", "-179.353, -171.339, -2.87481, 0.29", "-179.882, -171.938, -2.77872, 0.29", "-180.573, -172.792, -2.65969, 0.29", "-181.265, -173.733, -2.53008, 0.29", "-181.733, -174.515, -2.42086, 0.88", "-182.092, -175.22, -2.3275, 1.11", "-182.371, -175.828, -2.26931, 0.81", "-182.594, -176.354, -2.21801, 0.52", "-182.933, -177.239, -2.12936, 0.29", "-183.311, -178.289, -2.01577, 0.29", "-183.611, -179.188, -1.91635, 0.29", "-183.78, -179.674, -1.86361, 0.29", "-184.1, -180.641, -1.75665, 0.81", "-184.371, -181.54, -1.6553, 1.11", "-184.562, -182.246, -1.57502, 0.88", "-184.83, -183.248, -1.46331, 0.29", "-185.15, -184.471, -1.32451, 0.29", "-185.466, -185.562, -1.23774, 0.29", "-185.589, -185.96, -1.21603, 0.29", "-185.881, -186.911, -1.18648, 0.74", "-186.091, -187.592, -1.181, 0.74", "-186.375, -188.553, -1.1875, 0.44", "-186.693, -189.67, -1.20939, 0.29", "-186.857, -190.225, -1.22569, 0.29", "-187.075, -190.997, -1.22016, 0.29", "-187.294, -191.928, -1.17101, 0.29", "-187.4, -192.464, -1.11081, 0.74", "-187.493, -192.961, -1.02667, 0.74", "-187.656, -193.854, -0.817749, 0.44", "-187.858, -194.862, -0.563512, 0.29", "-188.046, -195.733, -0.312703, 0.74", "-188.184, -196.344, -0.129643, 1.11", "-188.319, -196.858, 0.0218785, 1.69", "-188.438, -197.29, 0.143491, 1.92", "-188.61, -197.915, 0.303877, 1.92", "-188.855, -198.86, 0.50508, 1.62", "-189.15, -200.005, 0.725747, 0.29", "-189.378, -200.922, 0.884792, 0.22", "-189.582, -201.68, 1.00573, 0.22", "-189.872, -202.705, 1.14883, 0.59", "-190.128, -203.555, 1.2494, 0.74", "-190.325, -204.147, 1.31326, 0.74", "-190.603, -204.907, 1.40262, 0.44", "-190.871, -205.55, 1.48108, 0.29", "-191.192, -206.19, 1.58312, 0.29", "-191.958, -207.465, 1.84622, 0.44", "-192.409, -208.119, 1.98264, 0.59", "-192.864, -208.724, 2.10518, 0.59", "-193.404, -209.417, 2.2199, 0.52", "-194.232, -210.453, 2.35446, 1.33", "-194.917, -211.29, 2.43067, 2.06", "-195.558, -212.1, 2.47045, 2.21", "-196.023, -212.749, 2.4739, 2.21", "-196.694, -213.813, 2.43915, 0.81", "-197.099, -214.584, 2.37895, 0.29", "-197.402, -215.287, 2.29236, 0.44", "-197.589, -215.823, 2.22287, 0.44", "-197.822, -216.611, 2.13063, 0.29", "-197.995, -217.202, 2.04833, 0.29", "-198.215, -217.935, 1.94631, 0.29", "-198.38, -218.413, 1.88132, 0.74", "-198.558, -218.845, 1.83813, 0.88", "-198.794, -219.353, 1.80828, 0.88", "-199.181, -220.178, 1.80639, 0.29", "-199.572, -221.001, 1.8658, 0.29", "-199.939, -221.835, 2.00015, 0.29", "-200.343, -222.843, 2.21329, 0.52", "-200.524, -223.316, 2.33175, 0.52", "-200.83, -224.181, 2.58719, 0.29", "-201.01, -224.779, 2.80333, 0.29", "-201.303, -225.994, 3.30327, 0.59", "-201.448, -226.683, 3.62029, 0.29", "-201.549, -227.135, 3.85347, 0.29", "-201.722, -227.755, 4.2094, 0.74", "-202.054, -228.561, 4.72485, 0.88", "-202.399, -229.157, 5.12954, 0.29", "-202.81, -229.695, 5.51937, 0.29", "-203.4, -230.361, 5.98766, 0.96", "-203.89, -230.886, 6.31281, 1.11", "-204.515, -231.551, 6.62932, 1.11", "-205.182, -232.314, 6.90066, 0.29", "-205.614, -232.887, 7.05985, 0.22", "-205.957, -233.463, 7.1714, 0.44", "-206.282, -234.148, 7.2572, 0.44", "-206.719, -235.305, 7.3247, 0.22", "-206.959, -236.03, 7.327, 0.22", "-207.12, -236.57, 7.29928, 0.22", "-207.301, -237.183, 7.24659, 0.59", "-207.43, -237.624, 7.20525, 0.74", "-207.822, -238.923, 7.04862, 0.29", "-208.034, -239.613, 6.9529, 0.29", "-208.304, -240.471, 6.82524, 0.44", "-208.55, -241.293, 6.70326, 0.44", "-208.858, -242.385, 6.55901, 0.52", "-209.033, -243.008, 6.48824, 0.96", "-209.216, -243.629, 6.43562, 1.4", "-209.421, -244.257, 6.38202, 1.4", "-209.961, -245.705, 6.33767, 0.29", "-210.535, -247.108, 6.37297, 0.22", "-210.838, -247.79, 6.43482, 0.37", "-211.344, -248.867, 6.60285, 0.37", "-211.87, -249.92, 6.8235, 0.29", "-212.603, -251.287, 7.1801, 0.74", "-213.014, -251.98, 7.39683, 1.11", "-213.49, -252.709, 7.63904, 1.25", "-213.994, -253.424, 7.86923, 1.11", "-214.482, -254.078, 8.06356, 0.59", "-215.124, -254.92, 8.26941, 0.29", "-215.507, -255.429, 8.33239, 0.29", "-216.224, -256.402, 8.40741, 0.22", "-216.697, -257.07, 8.43902, 0.22", "-216.961, -257.451, 8.45349, 0.66", "-217.368, -258.048, 8.47591, 0.66", "-218.192, -259.295, 8.54957, 0.29", "-218.692, -260.044, 8.60685, 0.29", "-219.221, -260.791, 8.67239, 0.29", "-219.776, -261.525, 8.73716, 0.66", "-220.223, -262.083, 8.78369, 0.66", "-220.943, -262.94, 8.84858, 0.22", "-221.439, -263.514, 8.88491, 0.22", "-222.273, -264.476, 8.93191, 0.22", "-223.729, -266.182, 8.96802, 0.22", "-224.163, -266.735, 8.958, 0.22", "-224.612, -267.367, 8.92463, 1.11", "-224.852, -267.761, 8.88549, 1.11", "-224.962, -267.992, 8.85894, 1.11", "-225.18, -268.599, 8.78436, 0.66", "-225.441, -269.609, 8.64785, 0.22", "-225.562, -270.231, 8.56935, 0.52", "-225.747, -271.664, 8.40544, 0.22", "-225.891, -272.829, 8.28198, 0.22", "-225.952, -273.328, 8.23406, 0.59", "-226.031, -273.961, 8.18254, 0.59", "-226.143, -274.878, 8.10659, 0.52", "-226.292, -276.229, 7.9897, 0.22", "-226.365, -277.023, 7.91886, 0.22", "-226.392, -277.496, 7.87735, 0.22", "-226.412, -278.034, 7.82962, 0.66", "-226.41, -278.811, 7.80767, 0.81", "-226.344, -279.668, 7.85438, 0.59", "-226.1, -280.898, 8.07505, 1.25", "-225.879, -281.551, 8.26271, 1.69", "-225.716, -281.874, 8.391, 1.92", "-224.983, -282.914, 8.92863, 1.18", "-224.238, -283.699, 9.45792, 0.22", "-223.332, -284.422, 10.0504, 0.22", "-222.704, -284.824, 10.4314, 0.22", "-221.904, -285.279, 10.8679, 0.22", "-221.319, -285.593, 11.1499, 0.66", "-220.882, -285.829, 11.3224, 0.66", "-219.689, -286.473, 11.7313, 0.22", "-219.234, -286.728, 11.8687, 0.37", "-218.775, -287.04, 12.0081, 0.37", "-218.409, -287.344, 12.1311, 0.22", "-217.858, -287.873, 12.3267, 0.22", "-221.665, -296.708, 12.9901, 0.22" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-162.643, -120.75, -3.02913, 0.37", "-163.573, -120.508, -2.97523, 0.37", "-163.964, -120.427, -2.96773, 0.37", "-164.8, -120.293, -3.00361, 0.29", "-165.436, -120.218, -3.05098, 0.44", "-166.05, -120.168, -3.10926, 0.66", "-166.404, -120.151, -3.15196, 0.81", "-166.709, -120.152, -3.20515, 0.81", "-167.658, -120.19, -3.41002, 0.22", "-167.955, -120.212, -3.48934, 0.22", "-168.488, -120.255, -3.6327, 0.74", "-168.926, -120.289, -3.75416, 0.88", "-169.653, -120.353, -3.97694, 0.22", "-169.95, -120.378, -4.09521, 0.22", "-170.224, -120.406, -4.22833, 0.22", "-170.535, -120.447, -4.39854, 0.74", "-170.862, -120.512, -4.60165, 0.88", "-171.217, -120.633, -4.86912, 0.88", "-171.991, -121.036, -5.56924, 0.22", "-172.263, -121.209, -5.84075, 0.22", "-172.485, -121.364, -6.08179, 0.74", "-172.758, -121.589, -6.43332, 0.74", "-173.331, -122.059, -7.11065, 0.29", "-173.512, -122.204, -7.30599, 0.29", "-173.811, -122.438, -7.59814, 0.88", "-174.17, -122.689, -7.92771, 1.03", "-175.262, -123.347, -8.86911, 0.22", "-176.304, -123.915, -9.70612, 0.22", "-176.73, -124.118, -10.0109, 0.22", "-176.983, -124.232, -10.1824, 1.11", "-177.291, -124.368, -10.3759, 1.11", "-177.624, -124.504, -10.5494, 0.81" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-19.8939, -176.243, -1.30218, 0.81", "-18.2443, -177.122, -1.5573, 0.81", "-16.9112, -177.753, -1.78446, 0.52", "-15.0122, -178.578, -2.13325, 0.52", "-14.1831, -178.951, -2.29305, 0.37", "-12.5272, -179.721, -2.62057, 0.37", "-11.8697, -180.037, -2.75201, 0.66", "-11.2849, -180.321, -2.88933, 0.88", "-10.7984, -180.563, -2.99872, 0.88", "-9.55493, -181.313, -3.27963, 0.59", "-8.45163, -182.126, -3.5283, 0.66", "-7.35252, -183.06, -3.77072, 0.74", "-6.68012, -183.628, -3.91707, 0.74", "-6.15789, -184.034, -4.02905, 0.52", "-5.30606, -184.621, -4.21383, 0.29", "-4.39468, -185.119, -4.39638, 0.96", "-3.56482, -185.499, -4.54774, 1.03", "-3.01639, -185.726, -4.63424, 1.03", "-1.76689, -186.218, -4.80014, 0.66", "-1.24216, -186.431, -4.87202, 0.52", "-0.0369606, -186.938, -5.04022, 0.59", "1.15685, -187.513, -5.20983, 0.59", "2.25374, -188.118, -5.37427, 0.52", "3.16013, -188.685, -5.52031, 0.52", "4.10835, -189.34, -5.68488, 0.96", "4.69795, -189.759, -5.80483, 1.18", "5.67207, -190.435, -6.0334, 0.66", "6.82039, -191.166, -6.31308, 0.37", "7.5385, -191.578, -6.49297, 0.37", "9.02503, -192.341, -6.87332, 0.88", "10.3449, -192.988, -7.17408, 1.03", "11.3504, -193.48, -7.38657, 0.81", "12.2798, -193.934, -7.56009, 0.52", "13.374, -194.471, -7.73604, 0.52", "14.2326, -194.91, -7.84822, 0.52", "15.4201, -195.608, -7.97022, 0.52", "16.4229, -196.272, -8.04798, 1.33", "17.0499, -196.733, -8.08942, 1.69", "17.7695, -197.333, -8.13003, 1.69", "18.9564, -198.404, -8.28645, 1.11", "20.2326, -199.591, -8.54862, 0.44", "21.0498, -200.329, -8.7962, 0.44", "21.7061, -200.901, -9.04074, 0.29", "22.4473, -201.526, -9.38318, 0.29", "24.1164, -202.865, -10.2687, 1.03", "24.5996, -203.232, -10.5575, 1.4", "25.1176, -203.633, -10.9022, 1.4", "26.7592, -205.04, -12.0889, 0.22", "27.6274, -205.828, -12.7256, 0.52", "28.0555, -206.234, -13.0311, 0.52", "28.7924, -207.004, -13.53, 0.29", "29.8219, -208.12, -14.2365, 0.29", "30.454, -208.813, -14.6555, 0.29", "31.0917, -209.552, -15.085, 0.66", "31.5648, -210.107, -15.3686, 0.81", "31.9099, -210.512, -15.5628, 0.81", "32.4934, -211.143, -15.8497, 0.59", "33.1593, -211.786, -16.155, 0.29", "33.7977, -212.426, -16.4107, 0.29", "34.5171, -213.264, -16.6567, 0.66", "35.0645, -214.007, -16.7855, 0.66", "35.7847, -215.154, -16.8621, 0.29", "36.184, -215.899, -16.8416, 0.29", "36.841, -217.262, -16.7133, 0.66", "37.2866, -218.232, -16.5612, 0.66", "37.8264, -219.502, -16.2939, 0.44", "38.323, -220.798, -15.9714, 1.47", "38.6814, -221.844, -15.6873, 1.84", "38.876, -222.459, -15.5192, 1.84", "38.9906, -222.841, -15.4319, 1.84", "39.2921, -223.815, -15.2271, 1.33", "39.686, -224.988, -15.0092, 0.52", "39.9046, -225.606, -14.9032, 0.52", "40.2059, -226.445, -14.7611, 0.52", "40.6892, -227.785, -14.5228, 0.29", "40.947, -228.478, -14.3922, 0.29", "41.3384, -229.465, -14.1869, 0.29", "41.7236, -230.374, -13.983, 0.44", "42.3087, -231.594, -13.7089, 0.44", "42.86, -232.585, -13.51, 0.44", "43.2931, -233.275, -13.4014, 1.33", "43.8014, -234.066, -13.3267, 1.84", "44.3021, -234.764, -13.2961, 1.84", "45.1549, -235.845, -13.286, 0.96", "46.2837, -237.161, -13.3187, 0.22", "47.2514, -238.222, -13.3758, 0.22", "48.6289, -239.65, -13.495, 0.22", "49.4646, -240.449, -13.5808, 0.22", "50.4191, -241.267, -13.6904, 0.22", "51.2653, -241.922, -13.8079, 0.44", "52.2769, -242.635, -13.9806, 0.88", "53.2508, -243.292, -14.1874, 1.03", "53.8877, -243.717, -14.3374, 1.03", "54.6289, -244.251, -14.5222, 0.88", "55.3696, -244.754, -14.7156, 0.29", "55.9058, -245.092, -14.8403, 0.29", "56.7335, -245.564, -14.9844, 0.29", "57.7823, -246.107, -15.1151, 0.37", "58.5781, -246.479, -15.1703, 0.37", "59.2801, -246.772, -15.188, 0.29", "60.6339, -247.259, -15.1709, 0.29", "61.6958, -247.609, -15.1533, 0.81", "62.2914, -247.804, -15.1505, 0.81", "63.4353, -248.245, -15.1447, 0.59", "64.2674, -248.662, -15.123, 0.29", "64.9786, -249.093, -15.0877, 0.29", "65.7219, -249.604, -15.0323, 0.66", "66.2681, -250.005, -14.9674, 0.66", "67.8885, -251.236, -14.698, 0.29", "68.9105, -252.011, -14.4622, 0.29", "69.9625, -252.813, -14.1313, 0.29", "70.7538, -253.431, -13.8179, 0.29", "71.5329, -254.033, -13.4466, 0.88", "71.8837, -254.302, -13.2726, 0.88", "72.8163, -255.021, -12.7679, 0.66", "74.0914, -255.993, -12.0136, 0.29", "74.7446, -256.504, -11.5915, 0.29", "75.5148, -257.129, -11.0863, 0.66", "76.1621, -257.678, -10.6963, 0.44", "85.7785, -266.064, -9.34674, 0.44" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-19.8939, -176.243, -1.30218, 2.14", "-20.6954, -178.489, -1.68701, 2.14", "-21.3493, -180.537, -1.99347, 1.33", "-21.9334, -182.553, -2.25171, 1.03", "-22.3093, -184.083, -2.41079, 1.03", "-22.5427, -185.126, -2.50828, 1.25", "-22.7606, -186.146, -2.59588, 1.25", "-23.0739, -188.071, -2.71894, 0.96", "-23.2948, -189.63, -2.77525, 0.96", "-23.7019, -192.364, -2.84898, 0.88", "-23.9488, -193.975, -2.85856, 0.88", "-24.1465, -195.501, -2.84232, 0.96", "-24.3231, -197.242, -2.7962, 0.96", "-24.4449, -198.729, -2.72357, 0.74", "-24.5406, -200.16, -2.62721, 0.52", "-24.607, -201.349, -2.5219, 0.52", "-24.6771, -202.809, -2.36771, 0.37", "-24.7279, -203.972, -2.2406, 0.74", "-24.807, -205.235, -2.10006, 0.74", "-24.9113, -206.658, -1.92491, 1.03", "-24.9927, -207.563, -1.80825, 1.18", "-25.1232, -208.814, -1.65678, 1.33", "-25.2437, -209.757, -1.53952, 1.33", "-25.3584, -210.762, -1.36603, 1.18", "-25.5219, -212.226, -0.964735, 0.96", "-25.6463, -213.344, -0.540682, 0.81", "-25.7584, -214.472, -0.0285075, 0.81", "-25.8409, -215.708, 0.59626, 0.81", "-25.8946, -216.791, 1.15858, 0.59", "-25.9567, -218.579, 2.05058, 0.66", "-26.0108, -219.342, 2.39261, 0.66", "-26.1961, -220.712, 2.87622, 1.18", "-26.557, -222.125, 3.15643, 1.47", "-27.0299, -223.347, 3.21079, 1.55", "-27.5085, -224.236, 3.13774, 1.55", "-28.3313, -225.433, 2.92974, 1.4", "-29.5058, -226.82, 2.64842, 1.18", "-30.9291, -228.285, 2.33466, 0.66", "-32.1252, -229.431, 2.10309, 0.74", "-33.6905, -230.87, 1.8483, 1.18", "-34.9944, -232.027, 1.69792, 1.25", "-36.3717, -233.215, 1.6217, 1.25", "-37.5484, -234.199, 1.64526, 1.25", "-38.7518, -235.114, 1.73654, 1.33", "-39.4504, -235.575, 1.83024, 1.33", "-40.5864, -236.204, 2.07968, 1.03", "-41.572, -236.651, 2.37502, 0.74", "-42.3614, -236.956, 2.64767, 0.59", "-43.4017, -237.358, 3.03983, 0.59", "-44.4398, -237.821, 3.45285, 0.88", "-45.4712, -238.446, 3.91111, 1.18", "-46.4293, -239.208, 4.41237, 1.18", "-47.2688, -240.023, 4.9111, 1.18", "-48.0524, -240.928, 5.39859, 1.18", "-48.6531, -241.717, 5.77207, 1.18", "-49.4837, -242.931, 6.28157, 0.81", "-49.9808, -243.733, 6.57558, 0.59", "-50.4372, -244.572, 6.83183, 0.52", "-51.3102, -246.36, 7.2815, 0.96", "-51.8117, -247.558, 7.5126, 1.18", "-52.2291, -248.675, 7.67223, 1.18", "-52.7647, -250.198, 7.81809, 0.88", "-53.2838, -251.733, 7.91812, 0.59", "-53.7089, -253.114, 7.99019, 0.59", "-54.1721, -254.723, 8.06899, 0.59", "-54.6037, -256.224, 8.14457, 0.74", "-55.1082, -257.903, 8.23428, 1.33", "-55.5631, -259.362, 8.31547, 1.69", "-56.1477, -261.163, 8.41867, 1.77", "-56.4822, -262.223, 8.47613, 1.77", "-56.8952, -263.559, 8.51522, 1.77", "-57.2349, -264.843, 8.51288, 1.47", "-57.5515, -266.269, 8.4649, 1.03", "-57.8378, -267.672, 8.38153, 1.03", "-58.1693, -269.311, 8.24528, 1.03", "-58.4926, -271.011, 8.09896, 1.11", "-58.7745, -272.612, 7.97235, 1.33", "-58.9781, -274.07, 7.8786, 1.03", "-59.1599, -276.047, 7.78499, 0.81", "-59.234, -277.431, 7.74559, 1.03", "-59.2664, -279.171, 7.7306, 0.81", "-59.2592, -280.12, 7.74227, 0.81", "-59.1882, -282.687, 7.78551, 0.74", "-59.068, -285.267, 7.83908, 0.74", "-58.9282, -287.341, 7.88331, 0.74", "-58.7291, -290.371, 7.94931, 0.74", "-58.6399, -292.461, 7.98444, 0.74", "-58.635, -293.819, 8.00878, 1.18", "-58.7322, -295.213, 8.05157, 1.4", "-58.987, -296.656, 8.12892, 1.4", "-59.41, -298.023, 8.24301, 1.47", "-60.1501, -299.53, 8.41602, 1.55", "-60.7496, -300.431, 8.53701, 1.55", "-61.8981, -301.83, 8.75972, 1.11", "-63.4315, -303.399, 9.05819, 0.88", "-64.5585, -304.416, 9.31141, 0.88", "-65.8576, -305.458, 9.63569, 1.03", "-66.7584, -306.135, 9.86735, 1.03", "-67.4725, -306.686, 10.0611, 1.03", "-68.5148, -307.612, 10.3995, 0.81", "-69.708, -308.925, 10.8416, 0.59", "-71.0026, -310.731, 11.3715, 0.59", "-71.8095, -312.137, 11.7368, 0.88", "-72.4057, -313.44, 12.0436, 0.88", "-73.1569, -315.489, 12.4625, 0.74", "-73.5635, -316.9, 12.7093, 0.96", "-73.8846, -318.291, 12.8869, 1.11", "-74.068, -319.291, 12.9914, 1.11", "-74.246, -320.343, 13.066, 0.88", "-74.5128, -321.79, 13.0899, 0.66", "-74.7238, -322.807, 13.0757, 0.66", "-75.075, -324.518, 13.0558, 0.96", "-75.3324, -325.825, 13.035, 0.96", "-75.6464, -327.498, 12.9999, 0.66", "-75.9328, -329.024, 12.9653, 0.74", "-76.3761, -331.473, 12.9357, 0.96", "-76.6198, -332.887, 12.9577, 0.96", "-76.8653, -334.362, 12.9882, 0.96", "-77.1629, -336.053, 12.9978, 0.66", "-77.6122, -338.548, 12.9674, 0.66", "-77.9896, -340.932, 12.8678, 0.66", "-78.1872, -342.356, 12.7636, 0.81", "-78.4861, -344.848, 12.5254, 0.74", "-78.6829, -346.823, 12.2916, 0.74", "-78.8332, -348.905, 12.0052, 0.96", "-78.9191, -350.654, 11.7402, 0.96", "-78.9725, -351.814, 11.5743, 1.62", "-79.0322, -352.452, 11.5118, 1.62", "-79.1559, -353.29, 11.502, 1.62", "-79.3845, -354.516, 11.5558, 1.4", "-79.6792, -355.797, 11.6588, 0.88", "-80.0786, -357.437, 11.8278, 0.59", "-80.6078, -359.666, 12.0828, 0.81", "-81.0342, -361.46, 12.303, 0.96", "-81.3609, -362.908, 12.4701, 0.96", "-81.7247, -364.657, 12.6406, 1.11", "-81.9639, -365.801, 12.7375, 1.11", "-82.1674, -366.686, 12.801, 1.33", "-82.3827, -367.547, 12.8562, 1.33", "-82.8233, -368.947, 12.9762, 1.03", "-83.3676, -370.327, 13.1315, 0.66", "-83.8259, -371.357, 13.2669, 0.37", "-84.1736, -372.108, 13.3708, 0.37", "-84.5951, -373.093, 13.5066, 0.37", "-84.9732, -374.028, 13.6372, 1.03", "-85.3816, -375.069, 13.7811, 1.25", "-85.6449, -375.842, 13.8851, 1.25", "-86.0592, -377.289, 14.062, 0.96", "-86.5125, -379.109, 14.2611, 0.52", "-86.8992, -380.747, 14.4213, 0.52", "-87.3993, -383.031, 14.6162, 0.52", "-87.7499, -384.891, 14.7561, 0.81", "-87.994, -386.248, 14.8606, 1.03", "-88.2249, -387.473, 14.9595, 1.03", "-88.4123, -388.419, 15.0365, 0.81", "-88.6624, -389.558, 15.127, 0.81", "-89.0712, -391.157, 15.2465, 0.59", "-89.608, -392.834, 15.3665, 0.44", "-90.463, -394.941, 15.5472, 0.88", "-90.9097, -395.844, 15.639, 0.88", "-91.5893, -397.01, 15.7749, 0.59", "-92.319, -398.003, 15.9205, 0.59", "-93.4976, -399.246, 16.1337, 0.59", "-94.784, -400.334, 16.3421, 0.81", "-95.524, -400.853, 16.4582, 0.81", "-96.1237, -401.225, 16.5499, 0.81", "-97.4847, -401.945, 16.7466, 0.59", "-98.9864, -402.588, 16.9545, 0.88", "-100.485, -403.103, 17.1492, 1.03", "-101.92, -403.518, 17.3233, 1.03", "-103.108, -403.795, 17.4715, 0.59", "-104.178, -404.012, 17.6185, 0.59", "-105.086, -404.199, 17.7559, 0.59", "-105.862, -404.355, 17.8985, 0.59", "-106.686, -404.559, 18.0613, 0.59", "-107.76, -404.883, 18.2922, 0.44", "-109.362, -405.485, 18.6609, 0.81", "-110.692, -406.089, 18.9929, 1.11", "-112.133, -406.865, 19.3866, 0.81", "-113.568, -407.77, 19.8031, 0.66", "-114.223, -408.242, 19.9995, 0.66", "-115.007, -408.887, 20.2408, 0.52", "-115.898, -409.697, 20.5291, 0.52", "-116.796, -410.617, 20.8299, 0.52", "-117.693, -411.607, 21.1395, 0.52", "-118.232, -412.263, 21.3319, 1.11", "-119.423, -413.865, 21.7503, 1.4", "-120.064, -414.827, 21.9718, 1.84", "-120.767, -415.992, 22.1944, 2.43" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-9.67503, -86.9058, -11.1399, 0.66", "-9.86818, -89.0601, -11.1305, 0.66", "-10.0059, -90.3867, -11.1369, 0.37", "-10.0811, -91.2737, -11.168, 0.81", "-10.1514, -92.4211, -11.223, 1.03", "-10.2109, -93.4186, -11.2782, 1.11", "-10.2754, -94.4828, -11.3553, 0.88", "-10.3394, -95.7084, -11.4864, 0.59", "-10.3686, -97.1366, -11.671, 0.29", "-10.3527, -98.1737, -11.8224, 0.29", "-10.321, -98.6498, -11.8952, 0.29", "-10.1655, -99.7263, -12.074, 0.74", "-9.93207, -100.732, -12.2466, 1.11", "-9.74274, -101.368, -12.3499, 1.11", "-9.43549, -102.306, -12.4956, 1.11", "-9.06571, -103.395, -12.6171, 0.81", "-8.47811, -105.192, -12.7406, 0.44", "-7.9701, -106.898, -12.7907, 0.59", "-7.71277, -107.925, -12.796, 0.88", "-7.50783, -109.003, -12.7761, 0.88", "-7.30809, -110.543, -12.7203, 0.81", "-7.21038, -112.051, -12.6284, 0.44", "-7.2099, -113.238, -12.5223, 1.03", "-7.24812, -114.23, -12.4277, 0.74", "-7.31577, -115.473, -12.3245, 0.52", "-7.3741, -116.434, -12.2634, 0.88", "-7.42732, -117.317, -12.2641, 1.18", "-7.47038, -118.081, -12.2793, 1.18", "-7.52612, -118.957, -12.309, 0.88", "-7.62357, -120.478, -12.379, 0.29", "-7.70089, -121.629, -12.449, 0.29", "-7.8121, -123.275, -12.5867, 1.03", "-7.87437, -124.369, -12.6936, 1.47", "-7.91452, -125.059, -12.7626, 1.47", "-7.95341, -125.818, -12.8378, 1.47", "-7.98715, -126.952, -12.9402, 1.25", "-8.01344, -128.341, -13.0442, 0.44", "-8.01657, -129.488, -13.1043, 0.44", "-8.0067, -130.609, -13.1659, 0.44", "-7.99346, -131.186, -13.1974, 0.59", "-7.95832, -132.54, -13.2718, 0.59", "-7.91253, -133.573, -13.3279, 0.37", "-7.87246, -134.436, -13.374, 0.81", "-7.83962, -135.226, -13.4065, 1.03", "-7.82139, -135.803, -13.4222, 1.03", "-7.81866, -136.519, -13.4318, 0.59", "-7.81503, -137.685, -13.4279, 0.22", "-7.79048, -138.417, -13.4138, 0.22", "-7.74041, -139.282, -13.3882, 0.22", "-7.67094, -140.214, -13.3542, 0.66", "-7.56992, -141.329, -13.3123, 0.88", "-7.38658, -142.958, -13.2466, 0.88", "-7.15836, -144.851, -13.1705, 0.96", "-6.97624, -146.278, -13.1337, 1.18", "-6.84023, -147.433, -13.1313, 0.66", "-6.73549, -148.38, -13.1364, 0.52", "-6.5659, -150.187, -13.1726, 0.52", "-6.45971, -151.581, -13.2195, 0.81", "-6.36383, -152.987, -13.2831, 0.52", "-6.29179, -154.039, -13.3274, 0.52", "-6.19209, -155.283, -13.4004, 1.47", "-6.06874, -156.557, -13.4991, 1.77", "-5.94887, -157.541, -13.6081, 1.77", "-5.85924, -158.107, -13.6796, 1.77", "-5.68023, -159.045, -13.7963, 1.25", "-5.45097, -160.134, -13.9277, 0.81", "-5.17723, -161.455, -14.0944, 0.44", "-4.82783, -163.112, -14.294, 0.37", "-4.61523, -164.13, -14.4098, 0.52", "-4.34452, -165.363, -14.5366, 0.52", "-4.13004, -166.286, -14.6213, 0.66", "-3.82479, -167.502, -14.7268, 0.66", "-3.39774, -169.058, -14.9089, 0.88", "-3.00098, -170.364, -15.0957, 1.25", "-2.75478, -171.101, -15.2316, 1.25", "-2.51886, -171.735, -15.3677, 1.25", "-2.01652, -172.98, -15.6701, 1.11", "-1.54738, -174.079, -15.9629, 0.74", "-1.11724, -175.045, -16.2419, 0.29", "-0.861076, -175.616, -16.4192, 0.29", "-0.259314, -177.009, -16.8417, 0.44", "0.0632594, -177.808, -17.0591, 0.88", "0.315266, -178.533, -17.2228, 1.33", "0.570027, -179.391, -17.3726, 1.47", "0.801521, -180.322, -17.4955, 1.47", "0.982292, -181.15, -17.575, 1.25", "1.20389, -182.28, -17.6508, 0.44", "1.49187, -183.938, -17.6704, 0.29", "1.67893, -185.252, -17.6193, 0.29", "1.82596, -186.593, -17.5138, 0.29", "1.90678, -187.661, -17.3957, 0.74", "1.93327, -188.416, -17.2948, 0.88", "1.90271, -189.945, -17.0628, 0.96", "1.79423, -191.25, -16.8687, 1.03", "1.65331, -192.231, -16.7547, 1.03", "1.46325, -193.205, -16.6572, 0.59", "1.24135, -194.245, -16.5692, 0.22", "1.10634, -194.9, -16.5328, 0.22", "0.830462, -196.41, -16.5228, 0.96", "0.676959, -197.304, -16.5404, 1.11", "0.516231, -198.288, -16.5334, 1.11", "0.381134, -199.231, -16.4877, 0.59", "0.266491, -200.19, -16.4111, 0.29", "0.185726, -201.01, -16.3173, 0.29", "0.116642, -201.694, -16.2192, 0.29", "-0.0332887, -203.177, -15.9767, 0.44", "-0.167014, -204.434, -15.7396, 0.66", "-0.309458, -205.761, -15.4763, 0.66", "-0.400005, -206.721, -15.2908, 0.81", "-0.487338, -207.788, -15.1056, 0.81", "-0.560728, -208.809, -14.9451, 0.52", "-0.671297, -210.104, -14.7839, 0.66", "-0.76549, -211.063, -14.6758, 0.66", "-0.948928, -212.675, -14.5829, 0.37", "-1.12394, -214.102, -14.5786, 0.37", "-1.27778, -215.24, -14.633, 1.03", "-1.43374, -216.383, -14.7723, 1.47", "-1.59736, -217.504, -14.9879, 1.62", "-1.91956, -219.501, -15.5083, 0.88", "-2.17779, -220.796, -15.9718, 0.59", "-2.42241, -221.779, -16.4224, 0.37", "-2.91911, -223.354, -17.2696, 0.29", "-3.10146, -223.817, -17.5285, 0.29", "-3.41749, -224.477, -17.8947, 0.29", "-4.05342, -225.702, -18.5025, 0.29", "-4.6893, -226.856, -19.0871, 0.59", "-5.35675, -228.08, -19.6803, 0.59", "-5.77879, -228.838, -20.0425, 0.44", "-6.30126, -229.746, -20.4993, 0.44", "-6.641, -230.297, -20.8379, 0.29", "-7.12335, -231.082, -21.3947, 1.4", "-7.81611, -231.969, -22.2796, 1.62", "-8.46453, -232.566, -23.0979, 1.4", "-9.10578, -232.984, -23.8736, 1.11", "-10.1949, -233.528, -25.1171, 0.81", "-10.8008, -233.804, -25.8012, 0.59", "-11.4593, -234.142, -26.5835, 0.74", "-12.0845, -234.562, -27.3647, 0.81", "-12.5678, -235.116, -28.0093, 0.52", "-12.9176, -235.686, -28.5184, 0.52", "-13.2437, -236.327, -28.9758, 0.74", "-13.6812, -237.24, -29.6364, 0.74", "-13.9083, -237.81, -29.9936, 0.74", "-14.1276, -238.455, -30.3973, 0.52", "-14.4588, -239.475, -30.9725, 0.52", "-14.6445, -240.035, -31.2693, 0.52", "-15.015, -241.135, -31.7802, 1.69", "-15.2511, -241.863, -32.056, 2.14", "-15.6955, -243.408, -32.5213, 1.55", "-16.1207, -245.031, -32.9103, 0.29", "-16.3536, -245.982, -33.094, 0.29", "-16.6667, -247.29, -33.3053, 0.44", "-16.971, -248.539, -33.4622, 0.59", "-17.2471, -249.646, -33.5751, 0.59", "-17.5384, -250.774, -33.6481, 0.29", "-17.696, -251.381, -33.6889, 0.29", "-17.9132, -252.227, -33.7449, 0.96", "-18.0916, -252.971, -33.7915, 1.03", "-18.3114, -254.006, -33.8546, 0.52", "-18.5523, -255.358, -33.9335, 0.29", "-18.6667, -256.127, -33.9735, 0.81", "-18.7833, -257.021, -34.0131, 0.96", "-18.8666, -257.711, -34.0431, 0.96", "-19.0099, -258.921, -34.0978, 0.29", "-19.196, -260.3, -34.1633, 0.29", "-19.3997, -261.743, -34.2745, 1.47", "-19.5399, -262.753, -34.3721, 1.92", "-19.602, -263.244, -34.4236, 1.92", "-19.7546, -264.467, -34.5432, 1.33", "-19.9082, -265.828, -34.6786, 0.29", "-20.0533, -267.216, -34.8243, 0.29", "-20.1547, -268.325, -34.9517, 0.29", "-20.3595, -270.735, -35.2451, 0.29", "-20.4871, -272.376, -35.4312, 1.4", "-20.5554, -273.376, -35.5333, 2.14", "-20.5814, -273.813, -35.5729, 2.28", "-20.6192, -274.526, -35.6217, 2.28", "-20.6675, -275.263, -35.6517, 1.92", "-20.7727, -276.33, -35.6191, 0.88", "-20.9656, -277.957, -35.4799, 0.29", "-21.0972, -278.951, -35.3459, 0.29", "-21.2508, -280.063, -35.1614, 0.29", "-21.4994, -281.804, -34.8358, 0.29", "-21.7473, -283.588, -34.4982, 0.96", "-21.9016, -284.782, -34.2816, 1.62", "-21.9845, -285.459, -34.1628, 1.62", "-22.0587, -286.096, -34.0642, 1.62", "-22.2079, -287.47, -33.9067, 1.11", "-22.35, -289.156, -33.8618, 0.29", "-22.4499, -290.413, -33.9113, 0.29", "-22.5331, -291.409, -33.9815, 0.59", "-22.5807, -291.902, -34.0291, 0.66", "-22.6471, -292.499, -34.0968, 0.66", "-22.8627, -294.137, -34.3036, 0.29", "-23.1589, -296.034, -34.5969, 0.29", "-23.4247, -297.501, -34.849, 0.96", "-23.6779, -298.655, -35.0564, 1.4", "-23.891, -299.518, -35.2066, 1.4", "-24.1261, -300.409, -35.3505, 1.4", "-24.4564, -301.587, -35.516, 0.88", "-24.8691, -303.027, -35.7111, 0.29", "-25.2465, -304.343, -35.8695, 0.29", "-25.6457, -305.672, -36.0243, 0.44", "-25.9198, -306.512, -36.1161, 0.66", "-26.1567, -307.187, -36.1781, 0.66", "-26.5989, -308.386, -36.2439, 0.29", "-26.8629, -309.107, -36.2769, 0.29", "-27.1926, -310.028, -36.3574, 0.29", "-27.6454, -311.29, -36.5536, 0.29", "-27.9039, -312.01, -36.7157, 0.52", "-28.24, -313.01, -36.9883, 0.66", "-28.512, -314.01, -37.2227, 0.66", "-28.8096, -315.571, -37.5281, 1.4", "-28.9314, -316.945, -37.7556, 2.28", "-28.9372, -318.32, -37.9525, 2.5", "-28.8801, -319.095, -38.0247, 2.5", "-28.4173, -321.817, -38.1049, 0.22", "-28.1337, -322.919, -38.0536, 0.22", "-27.6354, -324.323, -37.8706, 0.37", "-27.2593, -325.156, -37.6951, 0.44", "-26.5037, -326.393, -37.4655, 0.29", "-25.6119, -327.543, -37.3628, 0.88", "-25.0463, -328.089, -37.4442, 1.4", "-24.5927, -328.482, -37.5867, 1.4", "-23.9644, -329.041, -37.8899, 1.11", "-21.957, -330.962, -39.194, 0.29", "-21.3087, -331.653, -39.716, 0.29", "-20.3145, -332.856, -40.643, 0.81", "-19.8232, -333.633, -41.1693, 0.81", "-19.0459, -335.276, -42.1269, 0.22", "-18.8088, -335.961, -42.4638, 0.22", "-18.5756, -337.018, -42.8405, 0.44", "-18.4818, -337.613, -43.0166, 0.59", "-18.2117, -340.103, -43.6163, 0.22", "-18.1371, -340.973, -43.8171, 0.74", "-18.0862, -341.745, -43.9859, 1.03", "-18.0276, -342.571, -44.1486, 1.03", "-17.9705, -343.379, -44.2946, 0.74", "-17.9133, -344.131, -44.426, 0.37", "-17.745, -346.041, -44.7614, 0.22", "-17.5931, -347.94, -45.1064, 0.22", "-17.4997, -349.369, -45.3655, 0.88", "-17.4423, -350.424, -45.558, 1.62", "-17.4181, -351.004, -45.6657, 1.84", "-17.4048, -351.702, -45.7969, 1.84", "-17.4176, -353.139, -46.0635, 0.52", "-17.4785, -354.35, -46.298, 0.22", "-17.5699, -355.319, -46.5005, 0.22", "-17.6822, -356.152, -46.6833, 0.37", "-17.7416, -356.475, -46.7493, 0.37", "-17.9287, -357.272, -46.9203, 0.22", "-18.1104, -357.919, -47.0632, 0.74", "-18.3319, -358.653, -47.2343, 0.74", "-18.5468, -359.317, -47.3861, 0.59", "-19.0456, -360.752, -47.7087, 0.22", "-19.3006, -361.414, -47.8503, 0.22", "-19.6951, -362.296, -48.003, 0.59", "-20.0195, -362.93, -48.0784, 0.59", "-20.3825, -363.581, -48.0966, 0.29", "-20.7875, -364.244, -48.0854, 0.22", "-21.4067, -365.156, -48.1031, 0.37", "-22.2217, -366.247, -48.1581, 0.44", "-22.9457, -367.013, -48.321, 0.59", "-23.8605, -367.784, -48.6662, 0.37", "-24.4151, -368.112, -48.958, 0.22", "-25.7852, -368.591, -49.8738, 2.21", "-26.2931, -368.623, -50.2897, 2.5", "-28.2266, -368.132, -52.1184, 0.22", "-28.8111, -367.827, -52.7239, 0.22", "-29.5704, -367.185, -53.6388, 0.66", "-29.92, -366.78, -54.1169, 0.66", "-30.4005, -366.093, -54.8389, 0.37", "-31.0514, -365.083, -55.9104, 1.92", "-31.2785, -364.726, -56.3013, 1.92", "-32.4357, -363.2, -58.375, 0.44", "-32.9527, -362.651, -59.3031, 0.59", "-33.2793, -362.409, -59.8245, 0.37", "-33.821, -362.193, -60.5378, 0.37", "-34.394, -362.062, -61.2451, 0.22", "-35.819, -361.949, -62.7724, 0.29", "-36.3501, -362.017, -63.2031, 0.22", "-37.2429, -362.183, -63.8394, 0.22", "-38.487, -362.404, -64.6756, 0.22" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-9.67503, -86.9058, -11.1399, 0.74", "-11.2809, -88.0682, -12.0103, 0.74", "-11.9132, -88.4783, -12.3564, 0.74", "-12.805, -88.9844, -12.8828, 0.74", "-13.415, -89.2736, -13.268, 0.52", "-14.0206, -89.4675, -13.7053, 0.52", "-14.5779, -89.5813, -14.1558, 0.88", "-14.9809, -89.5058, -14.6227, 0.88", "-15.5554, -89.221, -15.4647, 0.59", "-15.8876, -88.9901, -16.0263, 0.37", "-16.3713, -88.67, -16.9395, 0.37", "-16.643, -88.5487, -17.5353, 1.11", "-16.8589, -88.5682, -18.0666, 1.47", "-17.0738, -88.6756, -18.5808, 1.47", "-17.2421, -88.7896, -18.9435, 1.47", "-17.6425, -89.0571, -19.7539, 0.96", "-18.0128, -89.2389, -20.4532, 0.59", "-18.3766, -89.3261, -21.0542, 0.59", "-18.792, -89.3565, -21.615, 0.59", "-19.244, -89.3824, -22.1867, 0.81", "-19.6835, -89.4079, -22.7161, 0.81", "-20.0468, -89.4241, -23.1004, 0.81", "-20.4904, -89.4666, -23.5384, 0.81", "-20.9402, -89.7501, -24.0887, 0.22", "-21.1633, -90.466, -24.5974, 0.22", "-21.2687, -91.0461, -24.9781, 0.66", "-21.3109, -91.3939, -25.2046, 0.88", "-21.3565, -91.9006, -25.5513, 0.88", "-21.3854, -92.4952, -26.095, 0.44", "-21.4469, -93.0791, -26.8667, 1.4", "-21.5228, -93.3897, -27.5565, 2.14", "-21.5549, -93.4662, -27.8643, 2.58", "-21.6292, -93.522, -28.4968, 2.36", "-21.8244, -93.5104, -30.2117, 1.69", "-21.9368, -93.449, -31.0993, 0.37", "-22.122, -93.3252, -32.1208, 0.37", "-22.3072, -93.2135, -32.914, 0.37", "-22.7468, -93.0311, -34.4391, 1.92", "-22.9501, -92.9869, -35.045, 2.14", "-23.1777, -92.9943, -35.6264, 2.5", "-23.8426, -93.1975, -37.3635, 0.44", "-24.0478, -93.3119, -37.9102, 0.44", "-24.3407, -93.51, -38.776, 0.44", "-24.5795, -93.6691, -39.5967, 0.44", "-24.8053, -93.7802, -40.4602, 1.4", "-25.0318, -93.8673, -41.4242, 2.06", "-25.202, -93.9385, -42.3258, 2.06", "-25.3805, -93.9724, -43.4604, 0.66", "-25.4816, -93.9766, -44.3958, 0.81", "-25.5462, -93.983, -45.4538, 0.52", "-25.5258, -94.0355, -46.4049, 1.77", "-25.4451, -94.1326, -47.1215, 2.28", "-24.9626, -94.6823, -49.4324, 1.33", "-24.698, -94.9979, -50.2971, 1.77", "-24.4965, -95.2257, -50.8326, 1.77", "-24.0773, -95.6867, -51.847, 0.74", "-23.7327, -96.063, -52.6467, 0.52", "-23.2544, -96.6575, -53.8134, 0.52", "-22.7879, -97.3584, -54.9932, 0.88", "-22.4305, -98.0255, -56.1078, 1.47", "-22.1564, -98.6812, -57.1836, 0.22", "-22.0502, -99.0191, -57.7126, 0.22", "-21.9508, -99.4766, -58.3573, 0.81", "-21.8848, -99.9709, -58.949, 0.96", "-21.8367, -100.627, -59.6479, 1.55", "-21.8244, -101.28, -60.2518, 1.55", "-21.8265, -101.991, -60.8864, 0.37", "-21.8264, -102.496, -61.3466, 0.74", "-21.8163, -103.12, -61.9551, 0.81", "-21.7668, -103.944, -62.7797, 0.29", "-21.7223, -104.341, -63.1646, 0.96", "-21.6326, -104.925, -63.7054, 1.33", "-21.4594, -105.748, -64.4281, 0.74", "-21.274, -106.437, -64.9833, 0.59", "-20.9151, -107.533, -65.7613, 0.29", "-20.6457, -108.246, -66.1643, 0.29", "-20.3551, -108.906, -66.4759, 0.29", "-20.1104, -109.415, -66.6492, 1.18", "-19.8502, -109.894, -66.7652, 1.69", "-19.4324, -110.591, -66.8688, 1.33", "-18.7968, -111.575, -66.9716, 0.22", "-18.497, -112.026, -67.0215, 0.22", "-18.1285, -112.608, -67.1004, 0.96", "-17.8926, -113.019, -67.1704, 1.11", "-17.4811, -113.803, -67.3196, 0.52", "-16.88, -115.066, -67.5751, 0.22", "-16.6154, -115.665, -67.7038, 0.22", "-16.3451, -116.319, -67.8581, 0.88", "-16.1499, -116.797, -67.996, 1.03", "-15.8081, -117.622, -68.2737, 0.22", "-15.6439, -118.003, -68.4114, 0.22", "-15.3879, -118.56, -68.6157, 0.66", "-15.0923, -119.18, -68.833, 0.74", "-14.4017, -120.621, -69.2951, 0.22", "-13.9414, -121.668, -69.5827, 0.22", "-13.4581, -122.994, -69.914, 0.96", "-13.3086, -123.494, -70.0293, 1.25", "-13.1779, -124.162, -70.1723, 1.25", "-13.081, -125.147, -70.355, 0.66", "-13.0845, -126.353, -70.5713, 0.15", "-13.1965, -127.379, -70.799, 0.37", "-13.2839, -127.854, -70.937, 0.37", "-13.6782, -129.582, -71.539, 0.22", "-13.7478, -129.849, -71.6528, 0.74", "-13.9019, -130.417, -71.9341, 0.88", "-14.4064, -132.215, -72.9114, 0.22", "-14.6017, -132.89, -73.2865, 0.74", "-14.8012, -133.544, -73.6519, 0.74", "-15.2338, -134.966, -74.4581, 0.22", "-15.601, -136.16, -75.1195, 0.22", "-16.0439, -137.532, -75.8125, 0.22", "-16.4784, -138.829, -76.387, 0.22", "-16.7265, -139.535, -76.6574, 0.88", "-16.9271, -140.094, -76.8375, 1.11", "-17.1271, -140.664, -76.9707, 1.11", "-17.5941, -142.058, -77.204, 0.15", "-17.9368, -143.193, -77.3402, 0.15", "-18.1143, -143.823, -77.398, 0.81", "-18.2614, -144.375, -77.4402, 0.96", "-18.6575, -146.45, -77.7701, 0.22", "-18.817, -147.428, -77.9373, 0.22", "-18.9456, -148.512, -78.1679, 0.22", "-18.982, -148.948, -78.2752, 1.18", "-19.0005, -149.365, -78.3981, 1.18", "-18.9228, -152.458, -79.6619, 0.29" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "24.7586, 186.214, -34.1623, 0.37", "25.2157, 185.519, -33.9488, 0.37", "25.5785, 184.997, -33.8103, 0.52", "26.0886, 184.291, -33.6317, 0.74", "26.4973, 183.732, -33.5038, 1.11", "26.7362, 183.416, -33.4319, 1.11", "27.0841, 182.959, -33.3242, 0.81", "27.8973, 181.966, -33.0373, 0.22", "28.2875, 181.481, -32.898, 0.22", "28.5267, 181.157, -32.821, 0.66", "28.7667, 180.796, -32.744, 0.66", "28.9962, 180.421, -32.6702, 0.66", "29.4233, 179.671, -32.5117, 0.44", "29.8124, 178.928, -32.3454, 0.22", "30.2098, 178.103, -32.1699, 0.22", "30.3882, 177.703, -32.0886, 0.44", "30.4963, 177.427, -32.0468, 0.59" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "24.7586, 186.214, -34.1623, 0.22", "26.1176, 186.327, -33.9437, 0.22", "26.43, 186.373, -33.9068, 0.44", "27.8625, 186.672, -33.7525, 0.22", "28.4805, 186.82, -33.7052, 0.59", "28.9572, 186.941, -33.6915, 0.59", "31.002, 187.459, -33.633, 0.22", "33.3706, 188.093, -33.6229, 0.22", "34.22, 188.344, -33.6382, 0.66", "34.8876, 188.569, -33.6766, 0.81", "35.9003, 188.932, -33.7636, 0.22" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "20.8149, 254.117, 16.836, 0.59", "22.1977, 255.286, 16.5269, 0.59", "22.6463, 255.68, 16.4429, 0.44", "23.5767, 256.545, 16.2463, 0.22", "24.3739, 257.347, 16.082, 0.81", "24.7938, 257.79, 15.982, 0.96", "24.9872, 257.999, 15.9301, 0.96", "25.5809, 258.733, 15.7543, 0.22", "26.4077, 259.92, 15.4042, 0.22", "27.0689, 261.034, 15.0321, 1.11", "27.3892, 261.656, 14.8197, 1.47", "27.5216, 261.963, 14.7019, 1.47", "27.9785, 263.308, 14.1698, 0.22", "28.2861, 264.541, 13.6624, 0.22", "28.4151, 265.268, 13.3613, 0.66", "28.4646, 265.63, 13.2037, 0.66", "28.6062, 267.355, 12.4636, 0.22", "28.6649, 268.928, 11.799, 0.22", "28.6569, 269.823, 11.4145, 0.22", "28.617, 270.864, 10.9698, 1.47", "28.5688, 271.457, 10.7261, 1.47", "28.3123, 273.458, 9.97015, 0.22", "28.1954, 274.107, 9.74158, 0.81", "28.0645, 274.652, 9.56298, 0.81", "27.6695, 275.979, 9.17199, 0.22", "27.3052, 277.03, 8.88298, 0.22", "26.8839, 278.121, 8.59852, 1.47", "26.6942, 278.573, 8.46829, 1.84", "25.9727, 280.213, 7.9851, 0.22", "25.3899, 281.47, 7.61756, 0.22", "25.1684, 281.905, 7.4843, 0.22", "24.5662, 283.044, 7.09118, 1.55", "24.1805, 283.731, 6.82676, 2.06" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "20.8149, 254.117, 16.836, 0.22", "21.5494, 256.196, 16.9391, 0.22", "21.9621, 257.325, 17.0152, 0.22", "22.2863, 258.199, 17.0841, 0.96", "22.4271, 258.579, 17.118, 1.18", "22.572, 258.971, 17.1568, 1.18", "22.8042, 259.613, 17.2244, 0.22", "22.9721, 260.069, 17.2889, 0.44", "23.0529, 260.303, 17.3175, 0.44", "23.2689, 260.976, 17.3917, 0.22", "23.4516, 261.568, 17.4549, 0.44", "23.6507, 262.224, 17.5244, 0.44", "24.2263, 264.233, 17.7316, 0.22", "24.7061, 265.925, 17.8896, 0.22", "24.8896, 266.561, 17.9418, 0.66", "24.9921, 266.911, 17.9662, 0.74", "25.1647, 267.467, 17.991, 0.22", "25.6102, 268.827, 18.0278, 0.22", "25.876, 269.627, 18.0381, 1.03", "26.0549, 270.158, 18.0388, 1.25", "26.1906, 270.559, 18.0363, 1.25", "26.6496, 271.909, 18.0192, 0.22", "27.4139, 274.13, 17.9841, 0.22", "27.6751, 274.878, 17.9738, 0.74", "27.8186, 275.31, 17.9768, 0.81" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "11.1738, 98.7429, 17.1521, 0.37", "13.6894, 109.283, 23.4378, 0.37", "17.0073, 119.142, 30.3707, 0.37", "17.6292, 128.587, 38.5076, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "11.1738, 98.7429, 17.1521, 0.22", "14.667, 104.849, 17.9186, 0.37", "18.8631, 110.523, 18.131, 0.37", "23.419, 115.902, 18.1884, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "93.5755, -7.72809, 15.6565, 0.37", "104.562, -10.5855, 16.6034, 0.37", "115.851, -11.597, 17.5744, 0.37", "127.031, -11.373, 19.6548, 0.37" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "93.5755, -7.72809, 15.6565, 0.22", "102.412, -10.2336, 16.7336, 0.37", "111.59, -11.1396, 17.1936, 0.37", "120.663, -12.5175, 18.2335, 0.37" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "54.1719, 6.82205, 3.53341, 0.52", "55.2151, 7.05686, 3.85517, 0.52", "55.6193, 7.12944, 3.99006, 0.52", "56.036, 7.19884, 4.16294, 0.52", "56.8323, 7.32689, 4.52306, 0.52", "57.3067, 7.3938, 4.75277, 0.88", "58.0325, 7.47972, 5.10267, 0.88", "58.5708, 7.53878, 5.35495, 0.88", "59.1393, 7.53216, 5.64976, 0.81", "59.4999, 7.43951, 5.84348, 0.81", "60.0331, 7.15569, 6.14876, 0.59", "60.453, 6.81994, 6.38783, 0.59", "60.9008, 6.36969, 6.61485, 0.59", "61.345, 5.87319, 6.79793, 0.74", "62.0353, 5.00661, 7.04996, 0.66", "62.316, 4.61699, 7.15301, 0.66", "62.7361, 3.97661, 7.31469, 0.52", "63.0205, 3.53313, 7.42157, 0.52", "63.3896, 2.97956, 7.54544, 0.81", "63.8493, 2.28936, 7.69123, 0.81", "64.1508, 1.81376, 7.80013, 0.81", "64.5099, 1.18833, 7.94054, 0.81", "64.9315, 0.362599, 8.13025, 0.88", "65.2603, -0.36547, 8.30225, 1.11", "65.4589, -0.844259, 8.41292, 1.11", "65.815, -1.80513, 8.63914, 0.88", "66.0444, -2.56156, 8.8415, 0.96", "66.1787, -3.14086, 9.02708, 0.96", "66.2606, -3.61619, 9.20484, 0.96", "66.3218, -4.04559, 9.3813, 0.66", "66.4168, -4.71567, 9.6983, 0.66", "66.5673, -5.58114, 10.1668, 0.81", "66.7447, -6.25794, 10.5709, 1.11", "67.0105, -7.01046, 11.0603, 0.96", "67.2584, -7.54968, 11.4056, 0.81", "67.6555, -8.23708, 11.8367, 0.81", "68.173, -8.95666, 12.2679, 0.59", "68.6347, -9.50698, 12.5717, 0.37", "69.0722, -9.9855, 12.8106, 0.37", "69.7292, -10.6878, 13.1227, 0.59", "70.0917, -11.0886, 13.2662, 0.88", "70.2929, -11.3276, 13.3305, 1.11", "70.5478, -11.6593, 13.4181, 1.11", "70.881, -12.1186, 13.556, 0.74", "71.1506, -12.47, 13.662, 0.74", "71.4164, -12.8306, 13.7638, 0.74", "71.82, -13.4133, 13.8955, 0.74", "72.229, -14.0381, 14.0009, 0.74", "72.6015, -14.6091, 14.0832, 0.66", "72.9561, -15.1466, 14.1464, 0.66", "73.4281, -15.858, 14.2104, 0.96", "73.9835, -16.7246, 14.2602, 1.4", "74.2634, -17.2035, 14.269, 1.62", "74.548, -17.7361, 14.2607, 1.77" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "54.1719, 6.82205, 3.53341, 0.88", "55.2072, 7.81496, 3.51617, 0.88", "56.1362, 8.62074, 3.55938, 0.88", "57.1819, 9.39756, 3.66039, 0.88", "58.3171, 10.1153, 3.8019, 0.88", "59.6621, 10.8626, 4.01177, 0.74", "60.5132, 11.3108, 4.16375, 0.74", "61.7147, 11.8678, 4.43823, 0.88", "62.7936, 12.2984, 4.71121, 0.88", "63.6871, 12.6114, 4.93657, 0.88", "64.5557, 12.9009, 5.14857, 0.66", "65.1675, 13.1274, 5.27619, 0.66", "65.9959, 13.5217, 5.37046, 0.88", "66.496, 13.823, 5.38148, 0.88", "66.9776, 14.1563, 5.36078, 0.88", "67.468, 14.5069, 5.32674, 0.88", "68.381, 15.144, 5.26872, 0.59", "69.0254, 15.5856, 5.27278, 0.59", "69.516, 15.9481, 5.30675, 0.81", "70.157, 16.4798, 5.37538, 0.81", "70.6462, 16.9441, 5.43596, 0.81", "71.1983, 17.5122, 5.50839, 0.66", "71.9895, 18.3565, 5.61938, 0.59", "72.8319, 19.4012, 5.70069, 0.59", "73.2889, 20.0408, 5.70786, 0.59", "73.8144, 20.8346, 5.66265, 0.44", "74.147, 21.3311, 5.60269, 0.44", "74.5082, 21.8462, 5.51033, 0.44", "75.4128, 23.071, 5.24093, 0.44", "76.1292, 23.9873, 5.03391, 0.66", "76.7278, 24.7336, 4.86252, 0.66", "77.4683, 25.6443, 4.6467, 0.74", "78.0467, 26.3534, 4.47417, 0.96", "78.4915, 26.8805, 4.34488, 0.96", "79.1468, 27.5782, 4.17684, 0.66", "79.7884, 28.2287, 4.02246, 0.66", "80.8066, 29.2398, 3.78278, 0.59", "81.7477, 30.2086, 3.57511, 0.59", "82.3549, 30.8524, 3.4504, 0.81", "82.8149, 31.3585, 3.35982, 0.81", "83.5997, 32.1925, 3.22478, 0.52", "84.2056, 32.7829, 3.14069, 0.52", "85.0084, 33.5193, 3.0558, 0.52", "85.6839, 34.1243, 2.99154, 0.52", "86.3314, 34.6904, 2.93027, 0.37", "87.4863, 35.6721, 2.82002, 0.37", "88.2471, 36.3029, 2.74136, 0.59", "88.733, 36.6754, 2.689, 0.59", "89.7667, 37.4263, 2.55795, 0.74", "90.3064, 37.8225, 2.48743, 0.74", "90.7653, 38.1766, 2.42777, 0.74", "91.4199, 38.7533, 2.33879, 0.74", "91.863, 39.154, 2.24017, 0.44", "92.5039, 39.6834, 2.02785, 0.44", "93.0587, 40.0822, 1.81021, 0.81", "93.9937, 40.678, 1.41054, 0.81", "94.6827, 41.0572, 1.08992, 0.66", "95.8862, 41.6627, 0.511301, 0.52", "96.8082, 42.115, 0.019781, 0.44", "97.4201, 42.385, -0.338454, 0.44", "97.9571, 42.6054, -0.680383, 0.44", "98.3788, 42.758, -0.972417, 0.44", "99.0814, 42.9881, -1.43728, 0.74", "99.6815, 43.2263, -1.71573, 0.59", "100.086, 43.4351, -1.88747, 0.59", "107.34, 50.7635, -1.71402, 0.59", "114.825, 57.8456, -1.56173, 0.59" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-120.767, -415.992, 22.1944, 0.52", "-121.34, -417.514, 22.2198, 0.52", "-121.579, -418.13, 22.2381, 0.29", "-121.913, -418.934, 22.2615, 0.44", "-122.229, -419.682, 22.28, 0.44", "-122.481, -420.261, 22.293, 0.29", "-122.87, -421.103, 22.3035, 0.29", "-123.273, -421.904, 22.3093, 0.81", "-123.583, -422.518, 22.2915, 1.18", "-123.748, -422.853, 22.2734, 1.4", "-124.008, -423.41, 22.2362, 1.4", "-124.236, -423.947, 22.1954, 1.11", "-124.687, -425.106, 22.1057, 0.52", "-124.988, -426.016, 22.0391, 0.44", "-125.194, -426.747, 21.9896, 0.74", "-125.427, -427.629, 21.9375, 0.81", "-125.592, -428.293, 21.8992, 0.81", "-125.75, -428.998, 21.8564, 0.74", "-125.933, -429.931, 21.835, 0.22", "-126.012, -430.363, 21.8302, 0.22", "-126.135, -431.122, 21.816, 0.22", "-126.213, -431.78, 21.8168, 0.66", "-126.271, -432.468, 21.8406, 0.81", "-126.326, -433.575, 21.911, 0.66", "-126.333, -434.583, 22.0091, 0.22", "-126.291, -435.483, 22.1206, 0.22", "-126.224, -436.14, 22.2178, 0.22", "-126.142, -436.776, 22.3422, 0.96", "-126.104, -437.103, 22.4145, 1.18", "-126.052, -437.59, 22.522, 1.18", "-126.006, -437.989, 22.6341, 1.18", "-125.949, -438.752, 22.8411, 0.74", "-125.92, -439.907, 23.1301, 0.22", "-125.925, -440.287, 23.2215, 0.22", "-125.942, -440.73, 23.3278, 0.44", "-125.962, -441.114, 23.4115, 0.44", "-126.008, -442.118, 23.605, 0.22", "-126.033, -442.749, 23.7047, 0.96", "-126.039, -443.231, 23.7589, 1.18", "-126.036, -443.693, 23.8036, 1.25", "-126.03, -444.574, 23.8788, 0.96", "-126.057, -445.837, 23.9785, 0.29", "-126.103, -446.831, 24.0486, 0.22", "-126.193, -447.953, 24.1133, 0.22", "-126.26, -448.531, 24.1439, 0.81", "-126.341, -449.001, 24.1664, 0.96", "-126.712, -450.634, 24.2523, 0.22", "-126.86, -451.144, 24.2819, 0.22", "-127.119, -451.956, 24.3385, 0.59", "-127.321, -452.55, 24.3875, 0.59", "-127.614, -453.443, 24.4636, 0.52", "-127.835, -454.177, 24.53, 0.52", "-128.106, -455.175, 24.6365, 0.52", "-128.207, -455.567, 24.6832, 0.96", "-128.37, -456.239, 24.767, 0.96", "-128.543, -456.995, 24.8647, 0.59", "-128.828, -458.274, 25.0672, 0.22", "-129.111, -459.595, 25.2824, 0.22", "-129.241, -460.214, 25.3877, 0.22", "-129.364, -460.762, 25.4867, 0.96", "-129.45, -461.137, 25.5599, 1.18", "-129.628, -461.884, 25.7242, 0.52", "-130.079, -471.021, 25.3551, 0.52" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-120.767, -415.992, 22.1944, 0.29", "-122.245, -415.524, 22.6067, 0.29", "-123.033, -415.493, 22.8097, 0.37", "-123.389, -415.578, 22.8955, 0.37", "-124.201, -415.908, 23.1152, 0.37", "-124.987, -416.275, 23.2425, 0.52", "-125.674, -416.611, 23.3137, 0.59", "-126.602, -417.175, 23.3417, 0.59", "-127.427, -417.709, 23.3273, 0.37", "-128.189, -418.212, 23.2855, 0.37", "-129.544, -419.12, 23.1554, 0.37", "-130.17, -419.501, 23.0804, 0.37", "-130.749, -419.827, 23.0055, 0.29", "-131.212, -420.066, 22.9497, 0.29", "-131.735, -420.328, 22.9003, 0.81", "-132.153, -420.557, 22.8779, 0.81", "-132.722, -420.94, 22.9254, 0.81", "-133.677, -421.685, 23.0438, 0.29", "-134.128, -422.084, 23.1172, 0.66", "-134.462, -422.408, 23.1913, 0.66", "-134.769, -422.73, 23.274, 0.66", "-135.872, -423.959, 23.6103, 0.29", "-136.36, -424.53, 23.7574, 0.44", "-136.782, -425.023, 23.8829, 0.29", "-137.289, -425.591, 24.0188, 0.74", "-137.664, -425.976, 24.0917, 0.74", "-138.286, -426.532, 24.1699, 0.52", "-139.395, -427.383, 24.2374, 0.29", "-140.058, -427.841, 24.254, 0.52", "-140.509, -428.126, 24.2381, 0.52", "-141.458, -428.68, 24.1342, 0.29", "-142.166, -429.055, 24.036, 0.29", "-142.598, -429.252, 23.9654, 0.59", "-143.11, -429.459, 23.8614, 0.59", "-144.036, -429.817, 23.6495, 0.22", "-144.556, -430.01, 23.5402, 0.29", "-145.338, -430.305, 23.4037, 0.29", "-145.706, -430.451, 23.3425, 0.29", "-146.648, -430.87, 23.1938, 0.37", "-147.355, -431.269, 23.1497, 0.37", "-148.075, -431.766, 23.1888, 0.52", "-148.896, -432.446, 23.2968, 1.55", "-149.385, -432.917, 23.3846, 1.92", "-149.848, -433.409, 23.4918, 1.92", "-150.91, -434.634, 23.8147, 0.29", "-151.602, -435.497, 24.0458, 0.29", "-152.155, -436.243, 24.2546, 0.29", "-152.592, -436.846, 24.4348, 0.74", "-152.809, -437.148, 24.5257, 0.96", "-153.004, -437.406, 24.6011, 1.11", "-153.565, -438.167, 24.8153, 0.52", "-153.914, -438.678, 24.9828, 0.29", "-154.424, -439.416, 25.2586, 0.22", "-154.773, -439.895, 25.4537, 0.44", "-155.074, -440.286, 25.6227, 0.44", "-155.907, -441.355, 26.1045, 0.22", "-156.412, -441.99, 26.4061, 0.22", "-156.9, -442.577, 26.6918, 1.25", "-157.349, -443.108, 26.9663, 1.55", "-157.565, -443.349, 27.0941, 1.62" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "74.548, -17.7361, 14.2607, 0.74", "76.4037, -17.7979, 16.2821, 0.74", "76.9404, -17.8596, 16.8528, 0.74", "77.854, -18.0628, 17.8023, 0.59", "78.9202, -18.4378, 18.8793, 0.59", "79.9045, -18.8987, 19.8541, 0.59", "80.3951, -19.1566, 20.333, 0.59", "81.3529, -19.7989, 21.2461, 0.59", "82.1662, -20.4072, 22.0053, 0.81", "83.2469, -21.2095, 23.0023, 0.81", "84.1439, -21.8423, 23.7999, 0.37", "85.082, -22.4431, 24.599, 0.37", "86.1802, -23.1253, 25.5375, 0.37", "87.2972, -23.7986, 26.5344, 0.37", "88.3699, -24.3829, 27.4967, 0.37", "89.9874, -25.1677, 28.9583, 0.22", "91.7165, -25.9447, 30.5249, 0.22", "100.587, -32.8807, 39.6311, 0.22" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "74.548, -17.7361, 14.2607, 0.37", "74.4457, -19.0086, 14.5547, 0.37", "74.4352, -19.7962, 14.7802, 0.37", "74.4665, -20.5229, 15.0094, 0.37", "74.5445, -21.2441, 15.3025, 0.37", "74.6399, -21.8588, 15.5727, 0.37", "74.7803, -22.569, 15.9087, 0.29", "75.0578, -23.5826, 16.3695, 0.22", "75.3878, -24.6839, 16.8199, 0.22", "75.8418, -26.0891, 17.3289, 0.22", "76.0153, -26.6229, 17.4952, 1.18", "76.1391, -27.0829, 17.5942, 1.4", "76.3502, -28.5745, 17.7444, 1.4", "76.347, -29.8398, 17.7422, 0.44", "76.2923, -30.2734, 17.7261, 0.44", "76.1449, -30.9327, 17.6881, 0.29", "75.8259, -31.9978, 17.67, 0.29", "75.3622, -33.3184, 17.6811, 0.22", "74.9531, -34.2766, 17.7731, 0.22", "74.664, -34.8393, 17.8396, 1.03", "74.5093, -35.1179, 17.8841, 1.33", "74.2832, -35.4947, 17.9665, 1.33" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-157.565, -443.349, 27.0941, 0.29", "-158.762, -442.253, 27.3493, 0.29", "-159.028, -442.011, 27.3982, 0.52", "-159.441, -441.63, 27.4618, 0.59", "-161.807, -439.461, 27.6796, 0.22", "-162.474, -438.86, 27.718, 0.22", "-163.394, -438.049, 27.748, 0.66", "-163.889, -437.611, 27.7296, 0.66", "-165.989, -435.825, 27.5844, 0.22", "-166.858, -435.122, 27.5018, 0.22", "-167.653, -434.534, 27.4184, 0.52", "-168.219, -434.147, 27.3598, 0.66", "-169.767, -433.168, 27.2054, 0.22", "-172.838, -431.27, 26.9066, 0.22", "-174.818, -430.106, 26.7247, 0.22", "-176.649, -429.042, 26.5988, 1.18", "-177.162, -428.748, 26.5637, 1.4", "-177.951, -428.313, 26.5155, 0.74" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-157.565, -443.349, 27.0941, 0.22", "-158.382, -444.889, 27.4289, 0.22", "-159.005, -446.16, 27.7558, 0.22", "-159.264, -446.733, 27.9046, 0.44", "-159.373, -446.985, 27.9702, 0.44", "-160.372, -449.395, 28.5777, 0.22", "-160.839, -450.523, 28.862, 0.44", "-161.229, -451.472, 29.1125, 0.22", "-161.465, -452.113, 29.281, 0.59", "-161.657, -452.669, 29.4306, 0.66", "-161.791, -453.097, 29.5479, 0.44", "-164.097, -463.016, 32.1574, 0.44" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_49", "dend_42", "dend_27", "dend_20", "dend_11", "dend_0", "dend_51", "dend_50", "dend_44", "dend_43", "dend_33", "dend_28", "dend_22", "dend_21", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_45", "dend_41", "dend_34", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_14", "dend_8", "dend_3", "dend_47", "dend_46", "dend_40", "dend_35", "dend_32", "dend_31", "dend_26", "dend_25", "dend_19", "dend_18", "dend_16", "dend_15", "dend_10", "dend_9", "dend_5", "dend_4", "dend_39", "dend_36", "dend_7", "dend_6", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_49", "dend_42", "dend_27", "dend_20", "dend_11", "dend_0", "dend_51", "dend_50", "dend_44", "dend_43", "dend_33", "dend_28", "dend_22", "dend_21", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_45", "dend_41", "dend_34", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_14", "dend_8", "dend_3", "dend_47", "dend_46", "dend_40", "dend_35", "dend_32", "dend_31", "dend_26", "dend_25", "dend_19", "dend_18", "dend_16", "dend_15", "dend_10", "dend_9", "dend_5", "dend_4", "dend_39", "dend_36", "dend_7", "dend_6", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L5_ChC_6493f67bad_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_49, id: dend_49, parent: soma_0
create dend_49
public dend_49
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_33, id: dend_33, parent: dend_27
create dend_33
public dend_33
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_41, id: dend_41, parent: dend_33
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_54
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_49(0), soma_0(0.49999994654580493)
    connect dend_42(0), soma_0(0.49999994654580493)
    connect dend_27(0), soma_0(0.49999994654580493)
    connect dend_20(0), soma_0(0.49999994654580493)
    connect dend_11(0), soma_0(0.49999994654580493)
    connect dend_0(0), soma_0(0.49999994654580493)
    connect axon_0(0), soma_0(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_33(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_41(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.44259, -9.54825, -1.27888, 2.30647 ) }
    soma_0 { pt3dadd( -1.2819, -8.63231, -1.15821, 3.63473 ) }
    soma_0 { pt3dadd( -1.1212, -7.71637, -1.03754, 6.81375 ) }
    soma_0 { pt3dadd( -0.960502, -6.80044, -0.916865, 9.18535 ) }
    soma_0 { pt3dadd( -0.799804, -5.8845, -0.796194, 10.2157 ) }
    soma_0 { pt3dadd( -0.639107, -4.96856, -0.675522, 11.1797 ) }
    soma_0 { pt3dadd( -0.478409, -4.05262, -0.554851, 12.0566 ) }
    soma_0 { pt3dadd( -0.317712, -3.13668, -0.43418, 12.6775 ) }
    soma_0 { pt3dadd( -0.157014, -2.22074, -0.313508, 13.0617 ) }
    soma_0 { pt3dadd( 0.00368301, -1.3048, -0.192837, 13.2009 ) }
    soma_0 { pt3dadd( 0.16438, -0.388856, -0.0721652, 13.2418 ) }
    soma_0 { pt3dadd( 0.325078, 0.527084, 0.0485063, 12.889 ) }
    soma_0 { pt3dadd( 0.485775, 1.44302, 0.169178, 12.4912 ) }
    soma_0 { pt3dadd( 0.646473, 2.35896, 0.289849, 12.2347 ) }
    soma_0 { pt3dadd( 0.80717, 3.2749, 0.410521, 12.0486 ) }
    soma_0 { pt3dadd( 0.967868, 4.19084, 0.531192, 11.9346 ) }
    soma_0 { pt3dadd( 1.12856, 5.10678, 0.651864, 11.8925 ) }
    soma_0 { pt3dadd( 1.28926, 6.02272, 0.772535, 11.1454 ) }
    soma_0 { pt3dadd( 1.44996, 6.93866, 0.893206, 8.66152 ) }
    soma_0 { pt3dadd( 1.61066, 7.8546, 1.01388, 5.25757 ) }
    soma_0 { pt3dadd( 1.77135, 8.77054, 1.13455, 3.12251 ) }
    // Section: dend_49, id: dend_49, parent: soma_0 (entry count 21/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -3.66144, -7.4365, -8.0337, 1.77 ) }
    dend_49 { pt3dadd( -3.66144, -7.4365, -8.0337, 1.77 ) }
    dend_49 { pt3dadd( -3.30991, -8.63126, -8.19805, 1.77 ) }
    dend_49 { pt3dadd( -3.04219, -9.52066, -8.32898, 1.77 ) }
    dend_49 { pt3dadd( -2.633, -10.9147, -8.52219, 1.55 ) }
    dend_49 { pt3dadd( -2.39266, -11.8391, -8.67564, 1.69 ) }
    dend_49 { pt3dadd( -2.22814, -12.5574, -8.80935, 1.77 ) }
    dend_49 { pt3dadd( -2.08401, -13.2562, -8.97108, 1.77 ) }
    dend_49 { pt3dadd( -1.90103, -14.1929, -9.24293, 1.25 ) }
    dend_49 { pt3dadd( -1.60442, -15.6299, -9.60943, 0.74 ) }
    dend_49 { pt3dadd( -2.17458, -15.0038, -10.2373, 0.74 ) }
    dend_49 { pt3dadd( -2.6192, -14.7825, -10.9054, 0.74 ) }
    dend_49 { pt3dadd( -3.39881, -14.4816, -12.1066, 1.18 ) }
    dend_49 { pt3dadd( -3.81791, -14.406, -12.7914, 1.18 ) }
    dend_49 { pt3dadd( -4.44654, -14.2541, -13.738, 0.52 ) }
    dend_49 { pt3dadd( -5.19042, -13.9776, -14.755, 0.52 ) }
    dend_49 { pt3dadd( -6.03601, -14.0177, -16.0403, 0.74 ) }
    dend_49 { pt3dadd( -6.39234, -14.2189, -16.9147, 0.74 ) }
    dend_49 { pt3dadd( -6.56234, -14.5292, -17.6777, 0.74 ) }
    dend_49 { pt3dadd( -6.83671, -14.929, -18.8292, 1.11 ) }
    dend_49 { pt3dadd( -7.08162, -15.1377, -19.5663, 1.69 ) }
    dend_49 { pt3dadd( -7.48246, -15.2814, -20.3105, 1.77 ) }
    dend_49 { pt3dadd( -8.39562, -15.5578, -21.9551, 1.33 ) }
    dend_49 { pt3dadd( -8.88162, -15.8052, -22.9577, 1.4 ) }
    dend_49 { pt3dadd( -9.16795, -16.1347, -23.7107, 1.55 ) }
    dend_49 { pt3dadd( -9.33074, -16.6828, -24.4992, 1.33 ) }
    dend_49 { pt3dadd( -9.34846, -17.6277, -25.5, 0.74 ) }
    dend_49 { pt3dadd( -9.19612, -18.4014, -26.0816, 1.03 ) }
    dend_49 { pt3dadd( -8.9736, -19.051, -26.4493, 1.47 ) }
    dend_49 { pt3dadd( -8.7375, -19.478, -26.7134, 1.62 ) }
    dend_49 { pt3dadd( -8.36349, -19.9878, -27.0776, 1.62 ) }
    dend_49 { pt3dadd( -7.93964, -20.3975, -27.4128, 0.52 ) }
    dend_49 { pt3dadd( -7.43582, -20.783, -27.7826, 0.52 ) }
    dend_49 { pt3dadd( -7.31047, -20.9844, -28.1004, 0.52 ) }
    dend_49 { pt3dadd( -7.33595, -21.3967, -28.9236, 0.66 ) }
    dend_49 { pt3dadd( -7.49893, -21.8016, -29.7935, 0.74 ) }
    dend_49 { pt3dadd( -7.76472, -21.9667, -30.4071, 0.44 ) }
    dend_49 { pt3dadd( -8.22269, -21.9647, -31.0563, 0.44 ) }
    dend_49 { pt3dadd( -8.89774, -21.8797, -31.8818, 0.44 ) }
    dend_49 { pt3dadd( -9.37764, -21.9298, -32.6162, 0.44 ) }
    dend_49 { pt3dadd( -9.64446, -22.0284, -33.1371, 0.44 ) }
    dend_49 { pt3dadd( -10.1406, -22.3577, -34.1492, 0.66 ) }
    dend_49 { pt3dadd( -10.3828, -22.8689, -35.1718, 1.11 ) }
    dend_49 { pt3dadd( -10.5082, -23.0563, -35.527, 0.96 ) }
    dend_49 { pt3dadd( -10.8357, -23.4514, -36.3411, 1.18 ) }
    dend_49 { pt3dadd( -10.9632, -23.6205, -36.6594, 1.69 ) }
    dend_49 { pt3dadd( -11.1704, -23.8808, -37.1207, 1.69 ) }
    dend_49 { pt3dadd( -11.9599, -24.8021, -38.6644, 0.88 ) }
    dend_49 { pt3dadd( -12.4421, -25.2404, -39.4705, 2.14 ) }
    dend_49 { pt3dadd( -13.5358, -25.8328, -40.9599, 2.28 ) }
    dend_49 { pt3dadd( -13.6895, -25.8757, -41.1304, 2.28 ) }
    dend_49 { pt3dadd( -14.5768, -25.9597, -41.9581, 0.44 ) }
    dend_49 { pt3dadd( -15.0833, -25.918, -42.3304, 0.44 ) }
    dend_49 { pt3dadd( -15.6817, -25.7929, -42.6736, 0.81 ) }
    dend_49 { pt3dadd( -16.2955, -25.6328, -43.0402, 0.81 ) }
    dend_49 { pt3dadd( -16.5754, -25.5934, -43.2408, 0.96 ) }
    dend_49 { pt3dadd( -17.1313, -25.6446, -43.7295, 0.66 ) }
    dend_49 { pt3dadd( -17.6904, -25.8395, -44.3035, 1.99 ) }
    dend_49 { pt3dadd( -18.1091, -26.0727, -44.7878, 2.21 ) }
    dend_49 { pt3dadd( -18.5179, -26.3801, -45.2936, 2.5 ) }
    dend_49 { pt3dadd( -19.6427, -27.4353, -46.793, 0.66 ) }
    dend_49 { pt3dadd( -20.2259, -28.1237, -47.6785, 0.66 ) }
    dend_49 { pt3dadd( -20.5861, -28.6589, -48.2868, 0.66 ) }
    dend_49 { pt3dadd( -20.957, -29.2954, -48.9379, 1.55 ) }
    dend_49 { pt3dadd( -21.1293, -29.6085, -49.2261, 2.21 ) }
    dend_49 { pt3dadd( -21.2955, -29.9355, -49.5013, 2.21 ) }
    dend_49 { pt3dadd( -21.7539, -30.9754, -50.3286, 0.29 ) }
    dend_49 { pt3dadd( -21.9991, -31.646, -50.9037, 0.29 ) }
    dend_49 { pt3dadd( -22.1595, -32.1091, -51.2931, 1.55 ) }
    dend_49 { pt3dadd( -22.3593, -32.6679, -51.7525, 1.99 ) }
    dend_49 { pt3dadd( -22.5431, -33.1681, -52.1735, 2.36 ) }
    dend_49 { pt3dadd( -23.06, -34.5285, -53.3535, 0.59 ) }
    dend_49 { pt3dadd( -23.317, -35.2258, -53.9993, 1.84 ) }
    dend_49 { pt3dadd( -23.4181, -35.5495, -54.3356, 1.84 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 95/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -6.50143, -1.72726, 2.1563, 1.92 ) }
    dend_42 { pt3dadd( -6.50143, -1.72726, 2.1563, 1.92 ) }
    dend_42 { pt3dadd( -7.00859, -2.64744, 2.11596, 1.92 ) }
    dend_42 { pt3dadd( -7.87127, -4.47208, 2.02823, 1.92 ) }
    dend_42 { pt3dadd( -8.76088, -6.13672, 1.93973, 2.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_42 { pt3dadd( -9.44662, -7.26249, 1.86488, 2.36 ) }
    dend_42 { pt3dadd( -10.4184, -8.62474, 1.7617, 2.28 ) }
    dend_42 { pt3dadd( -11.4859, -9.88246, 1.64368, 2.36 ) }
    dend_42 { pt3dadd( -12.6804, -11.0463, 1.49045, 2.36 ) }
    dend_42 { pt3dadd( -14.5343, -12.3511, 1.27174, 1.77 ) }
    dend_42 { pt3dadd( -15.554, -12.7804, 1.1951, 1.77 ) }
    dend_42 { pt3dadd( -17.1529, -13.1304, 1.15249, 1.99 ) }
    dend_42 { pt3dadd( -18.5777, -13.2741, 1.24295, 1.99 ) }
    dend_42 { pt3dadd( -19.2826, -13.3002, 1.32998, 1.99 ) }
    dend_42 { pt3dadd( -20.3335, -13.3525, 1.51747, 1.77 ) }
    dend_42 { pt3dadd( -21.96, -13.643, 1.93827, 1.47 ) }
    dend_42 { pt3dadd( -23.134, -14.0729, 2.27042, 1.47 ) }
    dend_42 { pt3dadd( -24.6137, -14.9486, 2.64432, 1.33 ) }
    dend_42 { pt3dadd( -25.2863, -15.4843, 2.76958, 1.99 ) }
    dend_42 { pt3dadd( -26.4296, -16.5794, 2.89507, 1.99 ) }
    dend_42 { pt3dadd( -27.7465, -18.0025, 2.91189, 1.77 ) }
    dend_42 { pt3dadd( -29.2031, -19.7412, 2.7837, 1.92 ) }
    dend_42 { pt3dadd( -30.5501, -21.3938, 2.50889, 1.69 ) }
    dend_42 { pt3dadd( -31.3784, -22.3533, 2.24252, 1.69 ) }
    dend_42 { pt3dadd( -32.4162, -23.4337, 1.85015, 1.84 ) }
    dend_42 { pt3dadd( -33.3629, -24.3375, 1.48862, 1.84 ) }
    dend_42 { pt3dadd( -34.5882, -25.4662, 1.03972, 1.69 ) }
    dend_42 { pt3dadd( -35.9349, -26.7236, 0.619574, 1.55 ) }
    dend_42 { pt3dadd( -37.2949, -28.0844, 0.302191, 1.4 ) }
    dend_42 { pt3dadd( -38.4091, -29.2046, 0.0760081, 1.25 ) }
    dend_42 { pt3dadd( -39.575, -30.4298, -0.134014, 1.33 ) }
    dend_42 { pt3dadd( -40.6791, -31.7035, -0.256183, 1.47 ) }
    dend_42 { pt3dadd( -41.7127, -33.0549, -0.206636, 1.62 ) }
    dend_42 { pt3dadd( -42.4436, -34.3189, 0.0507945, 1.77 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 29/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 0.448551, -8.92275, -4.9037, 3.61 ) }
    dend_27 { pt3dadd( 0.448551, -8.92275, -4.9037, 3.61 ) }
    dend_27 { pt3dadd( 0.686032, -10.6438, -4.82542, 2.95 ) }
    dend_27 { pt3dadd( 1.0264, -13.3148, -4.70763, 2.8 ) }
    dend_27 { pt3dadd( 1.22266, -15.1047, -4.5954, 2.8 ) }
    dend_27 { pt3dadd( 1.3936, -17.1062, -4.45397, 3.02 ) }
    dend_27 { pt3dadd( 1.47539, -18.4346, -4.35929, 3.02 ) }
    dend_27 { pt3dadd( 1.50961, -19.7377, -4.26146, 3.02 ) }
    dend_27 { pt3dadd( 1.47662, -21.7011, -4.1114, 3.02 ) }
    dend_27 { pt3dadd( 1.34285, -23.7781, -3.94638, 2.36 ) }
    dend_27 { pt3dadd( 0.983862, -27.4113, -3.76604, 2.36 ) }
    dend_27 { pt3dadd( 0.724698, -29.4466, -3.74844, 2.43 ) }
    dend_27 { pt3dadd( 0.426561, -31.4166, -3.79338, 2.43 ) }
    dend_27 { pt3dadd( 0.0368725, -33.7257, -3.92092, 2.43 ) }
    dend_27 { pt3dadd( -0.569025, -36.9138, -4.18123, 2.28 ) }
    dend_27 { pt3dadd( -1.22192, -40.1849, -4.52174, 2.14 ) }
    dend_27 { pt3dadd( -2.13343, -44.5183, -5.05451, 2.06 ) }
    dend_27 { pt3dadd( -2.76604, -47.5259, -5.47065, 2.43 ) }
    dend_27 { pt3dadd( -3.16563, -49.4412, -5.77268, 2.58 ) }
    dend_27 { pt3dadd( -3.5941, -51.4594, -6.134, 2.58 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 49/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -0.381405, 7.80525, -7.5337, 1.62 ) }
    dend_20 { pt3dadd( -0.473059, 8.65312, -7.59659, 1.62 ) }
    dend_20 { pt3dadd( -0.617992, 9.90056, -7.63316, 1.92 ) }
    dend_20 { pt3dadd( -0.836565, 11.5669, -7.69639, 1.33 ) }
    dend_20 { pt3dadd( -1.11223, 13.3604, -7.78955, 1.69 ) }
    dend_20 { pt3dadd( -1.33832, 14.6875, -7.83695, 2.21 ) }
    dend_20 { pt3dadd( -1.53212, 15.7968, -7.82879, 2.21 ) }
    dend_20 { pt3dadd( -1.76546, 17.0456, -7.77216, 1.99 ) }
    dend_20 { pt3dadd( -1.98444, 18.1076, -7.68621, 1.77 ) }
    dend_20 { pt3dadd( -2.24448, 19.2889, -7.55983, 1.99 ) }
    dend_20 { pt3dadd( -2.52649, 20.5393, -7.42096, 1.99 ) }
    dend_20 { pt3dadd( -3.00855, 22.7359, -7.21848, 1.11 ) }
    dend_20 { pt3dadd( -3.30611, 24.1091, -7.13162, 1.11 ) }
    dend_20 { pt3dadd( -3.62499, 25.4908, -7.09714, 1.25 ) }
    dend_20 { pt3dadd( -3.929, 26.6509, -7.09121, 1.4 ) }
    dend_20 { pt3dadd( -4.32694, 27.9189, -7.15995, 0.81 ) }
    dend_20 { pt3dadd( -4.79561, 29.12, -7.33567, 0.74 ) }
    dend_20 { pt3dadd( -5.16804, 29.9053, -7.52273, 0.74 ) }
    dend_20 { pt3dadd( -5.62714, 30.7572, -7.77576, 0.74 ) }
    dend_20 { pt3dadd( -6.16066, 31.6851, -8.09751, 0.96 ) }
    dend_20 { pt3dadd( -6.66367, 32.5584, -8.42246, 0.96 ) }
    dend_20 { pt3dadd( -7.18845, 33.4353, -8.75668, 1.55 ) }
    dend_20 { pt3dadd( -7.78122, 34.4184, -9.14495, 2.06 ) }
    dend_20 { pt3dadd( -8.28273, 35.3136, -9.50706, 2.43 ) }
    dend_20 { pt3dadd( -8.85789, 36.5191, -9.99864, 2.36 ) }
    dend_20 { pt3dadd( -9.5091, 38.1613, -10.651, 2.58 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -2.32144, 8.54325, 0.346303, 2.5 ) }
    dend_11 { pt3dadd( -2.37572, 8.66605, 0.34692, 2.5 ) }
    dend_11 { pt3dadd( -3.23634, 10.3865, 0.313663, 1.77 ) }
    dend_11 { pt3dadd( -3.83704, 11.5491, 0.31981, 1.55 ) }
    dend_11 { pt3dadd( -4.54158, 12.8724, 0.377185, 1.55 ) }
    dend_11 { pt3dadd( -5.07841, 13.8821, 0.457223, 1.33 ) }
    dend_11 { pt3dadd( -5.8975, 15.4483, 0.627534, 1.33 ) }
    dend_11 { pt3dadd( -6.40972, 16.4051, 0.758575, 1.55 ) }
    dend_11 { pt3dadd( -7.18253, 17.8225, 0.981283, 1.55 ) }
    dend_11 { pt3dadd( -7.98514, 19.3639, 1.2283, 1.62 ) }
    dend_11 { pt3dadd( -8.62594, 20.7378, 1.43578, 1.4 ) }
    dend_11 { pt3dadd( -9.22338, 22.2498, 1.6384, 1.4 ) }
    dend_11 { pt3dadd( -9.56324, 23.1786, 1.76425, 1.4 ) }
    dend_11 { pt3dadd( -10.0918, 24.6723, 1.95555, 1.4 ) }
    dend_11 { pt3dadd( -10.5935, 26.1645, 2.08908, 1.4 ) }
    dend_11 { pt3dadd( -11.1576, 28.0089, 2.17961, 1.77 ) }
    dend_11 { pt3dadd( -11.6325, 29.6636, 2.19654, 2.73 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 92/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 6.82855, 4.29975, 1.3463, 2.58 ) }
    dend_0 { pt3dadd( 6.87841, 4.34961, 1.35083, 2.58 ) }
    dend_0 { pt3dadd( 7.5068, 4.99399, 1.41645, 2.58 ) }
    dend_0 { pt3dadd( 8.21979, 5.73272, 1.51296, 1.84 ) }
    dend_0 { pt3dadd( 8.74761, 6.2687, 1.59858, 2.06 ) }
    dend_0 { pt3dadd( 9.42909, 6.95879, 1.72662, 2.06 ) }
    dend_0 { pt3dadd( 9.87943, 7.40421, 1.84035, 2.58 ) }
    dend_0 { pt3dadd( 10.3792, 7.89528, 1.99544, 2.58 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_0 { pt3dadd( 10.7097, 8.22525, 2.12076, 2.58 ) }
    dend_0 { pt3dadd( 11.296, 8.78453, 2.37128, 2.58 ) }
    dend_0 { pt3dadd( 11.7085, 9.15005, 2.5573, 2.43 ) }
    dend_0 { pt3dadd( 12.5727, 9.87136, 2.98069, 2.21 ) }
    dend_0 { pt3dadd( 13.2031, 10.3671, 3.30232, 1.99 ) }
    dend_0 { pt3dadd( 13.709, 10.7417, 3.54483, 1.99 ) }
    dend_0 { pt3dadd( 14.3651, 11.1561, 3.82821, 1.69 ) }
    dend_0 { pt3dadd( 14.9136, 11.3932, 4.03623, 1.69 ) }
    dend_0 { pt3dadd( 15.8848, 11.5296, 4.35547, 2.06 ) }
    dend_0 { pt3dadd( 16.4943, 11.4204, 4.52145, 2.06 ) }
    dend_0 { pt3dadd( 17.9346, 10.7771, 4.9068, 1.69 ) }
    dend_0 { pt3dadd( 18.9253, 10.2201, 5.15715, 1.92 ) }
    dend_0 { pt3dadd( 20.474, 9.14112, 5.5209, 1.92 ) }
    dend_0 { pt3dadd( 21.9487, 7.8993, 5.83532, 2.06 ) }
    dend_0 { pt3dadd( 22.7048, 7.12553, 5.97757, 2.28 ) }
    dend_0 { pt3dadd( 23.2719, 6.42055, 6.09191, 2.28 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 16/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.77135, 8.77054, 1.13455, 0.827595 ) }
    axon_0 { pt3dadd( 4.36343, 23.5449, 1.13455, 0.827595 ) }
    axon_0 { pt3dadd( 6.95552, 38.3192, 1.13455, 0.827595 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 19/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -23.4181, -35.5495, -54.3356, 0.96 ) }
    dend_51 { pt3dadd( -22.7555, -36.8424, -60.827, 0.96 ) }
    dend_51 { pt3dadd( -22.5966, -37.188, -62.0686, 0.96 ) }
    dend_51 { pt3dadd( -22.3553, -37.6985, -63.5685, 0.96 ) }
    dend_51 { pt3dadd( -21.9858, -38.4447, -65.5272, 1.55 ) }
    dend_51 { pt3dadd( -21.663, -39.1077, -67.0446, 0.22 ) }
    dend_51 { pt3dadd( -21.2619, -39.9272, -68.5928, 0.22 ) }
    dend_51 { pt3dadd( -20.9714, -40.5324, -69.2903, 1.11 ) }
    dend_51 { pt3dadd( -20.6931, -41.1188, -69.8805, 1.4 ) }
    dend_51 { pt3dadd( -20.2555, -41.9093, -70.6071, 1.4 ) }
    dend_51 { pt3dadd( -19.2031, -43.5987, -72.0563, 0.22 ) }
    dend_51 { pt3dadd( -17.9939, -45.2803, -73.5077, 0.22 ) }
    dend_51 { pt3dadd( -17.5604, -45.8169, -73.9817, 0.74 ) }
    dend_51 { pt3dadd( -17.3151, -46.1009, -74.2258, 0.74 ) }
    dend_51 { pt3dadd( -15.9633, -47.6116, -75.4724, 0.15 ) }
    dend_51 { pt3dadd( -15.743, -47.8445, -75.654, 0.37 ) }
    dend_51 { pt3dadd( -14.4354, -49.0739, -76.6119, 0.22 ) }
    dend_51 { pt3dadd( -13.6728, -49.7303, -77.1828, 0.22 ) }
    dend_51 { pt3dadd( -13.0646, -50.255, -77.6348, 0.74 ) }
    dend_51 { pt3dadd( -12.4751, -50.8109, -78.067, 0.88 ) }
    dend_51 { pt3dadd( -12.3051, -51.019, -78.1959, 0.88 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 40/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -23.4181, -35.5495, -54.3356, 2.87 ) }
    dend_50 { pt3dadd( -24.1043, -35.7955, -54.4227, 2.87 ) }
    dend_50 { pt3dadd( -26.2674, -36.758, -54.7961, 0.22 ) }
    dend_50 { pt3dadd( -28.2181, -37.8956, -55.1929, 0.22 ) }
    dend_50 { pt3dadd( -29.159, -38.5026, -55.3912, 1.69 ) }
    dend_50 { pt3dadd( -29.4544, -38.7063, -55.4544, 2.21 ) }
    dend_50 { pt3dadd( -29.9342, -39.0522, -55.5575, 2.21 ) }
    dend_50 { pt3dadd( -31.691, -40.5029, -55.9296, 0.22 ) }
    dend_50 { pt3dadd( -33.2276, -42.0415, -56.3069, 0.22 ) }
    dend_50 { pt3dadd( -33.7026, -42.5601, -56.4351, 1.25 ) }
    dend_50 { pt3dadd( -34.0904, -42.9883, -56.5409, 1.25 ) }
    dend_50 { pt3dadd( -34.6056, -43.5501, -56.6886, 1.25 ) }
    dend_50 { pt3dadd( -35.659, -44.6226, -56.9866, 0.15 ) }
    dend_50 { pt3dadd( -36.2573, -45.206, -57.1488, 0.15 ) }
    dend_50 { pt3dadd( -36.7306, -45.6174, -57.2811, 0.96 ) }
    dend_50 { pt3dadd( -37.2704, -46.0397, -57.4482, 1.18 ) }
    dend_50 { pt3dadd( -37.5191, -46.2089, -57.5276, 1.18 ) }
    dend_50 { pt3dadd( -39.1325, -47.1465, -58.1286, 0.22 ) }
    dend_50 { pt3dadd( -39.5646, -47.3298, -58.3065, 0.52 ) }
    dend_50 { pt3dadd( -39.9586, -47.4725, -58.4718, 0.52 ) }
    dend_50 { pt3dadd( -40.9731, -47.8057, -58.8894, 0.22 ) }
    dend_50 { pt3dadd( -41.6033, -48.0054, -59.1555, 1.25 ) }
    dend_50 { pt3dadd( -42.5275, -48.3347, -59.5345, 1.4 ) }
    dend_50 { pt3dadd( -44.3056, -49.142, -60.3221, 0.22 ) }
    dend_50 { pt3dadd( -45.514, -49.8562, -60.8739, 0.22 ) }
    dend_50 { pt3dadd( -45.9691, -50.2011, -61.0912, 0.74 ) }
    dend_50 { pt3dadd( -46.5473, -50.7668, -61.3778, 0.88 ) }
    dend_50 { pt3dadd( -47.3397, -51.9071, -61.9331, 0.22 ) }
    dend_50 { pt3dadd( -47.9474, -53.3799, -62.5142, 0.22 ) }
    dend_50 { pt3dadd( -48.1731, -54.3431, -62.8481, 1.99 ) }
    dend_50 { pt3dadd( -48.254, -54.9336, -63.0239, 2.36 ) }
    dend_50 { pt3dadd( -48.3106, -55.5132, -63.1954, 2.36 ) }
    dend_50 { pt3dadd( -48.4901, -58.7642, -64.15, 0.15 ) }
    dend_50 { pt3dadd( -48.5128, -60.781, -64.7806, 0.15 ) }
    dend_50 { pt3dadd( -48.5045, -61.3062, -64.9254, 0.44 ) }
    dend_50 { pt3dadd( -48.4581, -62.3178, -65.1809, 0.44 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 76/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -42.4436, -34.3189, 0.0507945, 0.96 ) }
    dend_44 { pt3dadd( -43.2867, -34.7375, -0.3402, 0.96 ) }
    dend_44 { pt3dadd( -44.0891, -35.1674, -0.712516, 1.25 ) }
    dend_44 { pt3dadd( -45.2461, -35.7855, -1.24383, 1.25 ) }
    dend_44 { pt3dadd( -47.2701, -36.7803, -2.1247, 1.18 ) }
    dend_44 { pt3dadd( -48.6541, -37.3828, -2.68947, 1.11 ) }
    dend_44 { pt3dadd( -49.7216, -37.8175, -3.1182, 0.88 ) }
    dend_44 { pt3dadd( -51.1242, -38.4035, -3.7034, 0.96 ) }
    dend_44 { pt3dadd( -51.926, -38.7402, -4.04573, 0.96 ) }
    dend_44 { pt3dadd( -53.102, -39.2454, -4.55403, 0.96 ) }
    dend_44 { pt3dadd( -54.2712, -39.7357, -4.98668, 0.96 ) }
    dend_44 { pt3dadd( -55.2741, -40.1304, -5.29756, 1.18 ) }
    dend_44 { pt3dadd( -56.5154, -40.5857, -5.62888, 1.03 ) }
    dend_44 { pt3dadd( -57.1391, -40.7789, -5.73343, 1.03 ) }
    dend_44 { pt3dadd( -58.4641, -41.1059, -5.81821, 1.18 ) }
    dend_44 { pt3dadd( -59.286, -41.2448, -5.75999, 1.18 ) }
    dend_44 { pt3dadd( -61.1872, -41.3761, -5.30193, 0.96 ) }
    dend_44 { pt3dadd( -61.8938, -41.3703, -5.07735, 1.11 ) }
    dend_44 { pt3dadd( -63.279, -41.3181, -4.57875, 1.11 ) }
    dend_44 { pt3dadd( -64.3914, -41.3015, -4.16154, 1.11 ) }
    dend_44 { pt3dadd( -65.7004, -41.331, -3.66159, 1.11 ) }
    dend_44 { pt3dadd( -67.447, -41.5155, -2.98553, 1.55 ) }
    dend_44 { pt3dadd( -68.6916, -41.7926, -2.5226, 1.03 ) }
    dend_44 { pt3dadd( -70.1792, -42.3079, -1.95559, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_44 { pt3dadd( -71.4438, -42.9332, -1.47802, 0.74 ) }
    dend_44 { pt3dadd( -72.1658, -43.4158, -1.20384, 0.74 ) }
    dend_44 { pt3dadd( -73.0888, -44.2311, -0.88532, 0.74 ) }
    dend_44 { pt3dadd( -73.9934, -45.244, -0.618312, 0.66 ) }
    dend_44 { pt3dadd( -74.7977, -46.3031, -0.392113, 0.88 ) }
    dend_44 { pt3dadd( -75.318, -47.084, -0.263162, 1.03 ) }
    dend_44 { pt3dadd( -75.8576, -48.0082, -0.130474, 1.03 ) }
    dend_44 { pt3dadd( -76.5444, -49.2026, 0.0227555, 0.88 ) }
    dend_44 { pt3dadd( -77.3981, -50.6099, 0.178025, 0.88 ) }
    dend_44 { pt3dadd( -77.8797, -51.318, 0.237013, 0.88 ) }
    dend_44 { pt3dadd( -78.595, -52.1893, 0.292609, 0.88 ) }
    dend_44 { pt3dadd( -79.9906, -53.5865, 0.352789, 0.88 ) }
    dend_44 { pt3dadd( -80.8078, -54.2213, 0.355744, 0.88 ) }
    dend_44 { pt3dadd( -81.9795, -54.8908, 0.318086, 0.88 ) }
    dend_44 { pt3dadd( -82.7684, -55.2019, 0.262759, 0.96 ) }
    dend_44 { pt3dadd( -83.6938, -55.4809, 0.154077, 0.96 ) }
    dend_44 { pt3dadd( -84.5352, -55.666, 0.0453247, 0.96 ) }
    dend_44 { pt3dadd( -85.4786, -55.8409, -0.0736685, 0.52 ) }
    dend_44 { pt3dadd( -86.1251, -56.0713, -0.120348, 0.52 ) }
    dend_44 { pt3dadd( -86.619, -56.468, -0.0671254, 0.52 ) }
    dend_44 { pt3dadd( -87.117, -57.1921, 0.168124, 0.81 ) }
    dend_44 { pt3dadd( -87.5126, -57.9483, 0.4812, 0.96 ) }
    dend_44 { pt3dadd( -87.8155, -58.8175, 0.879503, 0.96 ) }
    dend_44 { pt3dadd( -88.177, -60.3708, 1.62749, 0.81 ) }
    dend_44 { pt3dadd( -88.3068, -61.1289, 2.00882, 0.81 ) }
    dend_44 { pt3dadd( -88.4354, -62.0803, 2.54001, 1.11 ) }
    dend_44 { pt3dadd( -88.5505, -62.6112, 2.8791, 1.11 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 27/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -42.4436, -34.3189, 0.0507945, 1.33 ) }
    dend_43 { pt3dadd( -43.2303, -34.4713, 0.650409, 1.33 ) }
    dend_43 { pt3dadd( -43.9877, -34.6512, 1.15019, 1.18 ) }
    dend_43 { pt3dadd( -45.4079, -34.9619, 2.03957, 0.88 ) }
    dend_43 { pt3dadd( -46.0925, -35.0845, 2.4281, 0.74 ) }
    dend_43 { pt3dadd( -47.094, -35.2206, 2.92441, 0.74 ) }
    dend_43 { pt3dadd( -48.1118, -35.2981, 3.41877, 0.74 ) }
    dend_43 { pt3dadd( -48.8786, -35.3385, 3.76156, 0.59 ) }
    dend_43 { pt3dadd( -49.7797, -35.3376, 4.15286, 0.59 ) }
    dend_43 { pt3dadd( -50.4893, -35.2909, 4.45993, 0.52 ) }
    dend_43 { pt3dadd( -51.2072, -35.1567, 4.81738, 0.52 ) }
    dend_43 { pt3dadd( -52.5646, -34.7221, 5.5836, 0.74 ) }
    dend_43 { pt3dadd( -53.4279, -34.3641, 6.12423, 0.59 ) }
    dend_43 { pt3dadd( -54.2246, -34.0217, 6.64424, 0.44 ) }
    dend_43 { pt3dadd( -55.0854, -33.6992, 7.23195, 0.37 ) }
    dend_43 { pt3dadd( -55.7755, -33.5145, 7.71673, 0.66 ) }
    dend_43 { pt3dadd( -56.3897, -33.4547, 8.08163, 0.66 ) }
    dend_43 { pt3dadd( -56.7869, -33.4859, 8.24207, 0.66 ) }
    dend_43 { pt3dadd( -57.3111, -33.5622, 8.42798, 0.44 ) }
    dend_43 { pt3dadd( -57.9179, -33.695, 8.61885, 0.44 ) }
    dend_43 { pt3dadd( -58.999, -33.9401, 8.93326, 0.44 ) }
    dend_43 { pt3dadd( -60.4918, -34.3134, 9.37497, 0.74 ) }
    dend_43 { pt3dadd( -61.3765, -34.5674, 9.63603, 0.74 ) }
    dend_43 { pt3dadd( -62.5977, -34.9076, 9.98015, 0.52 ) }
    dend_43 { pt3dadd( -63.739, -35.2108, 10.2877, 0.59 ) }
    dend_43 { pt3dadd( -64.7178, -35.4656, 10.5347, 0.44 ) }
    dend_43 { pt3dadd( -66.0783, -35.8762, 10.8821, 0.37 ) }
    dend_43 { pt3dadd( -67.0576, -36.2604, 11.1441, 0.37 ) }
    dend_43 { pt3dadd( -68.1222, -36.8327, 11.416, 0.29 ) }
    dend_43 { pt3dadd( -68.627, -37.2124, 11.5407, 0.29 ) }
    dend_43 { pt3dadd( -69.2239, -37.7898, 11.7434, 0.29 ) }
    dend_43 { pt3dadd( -69.7352, -38.3388, 11.9611, 0.37 ) }
    dend_43 { pt3dadd( -70.3161, -38.9786, 12.2626, 0.37 ) }
    dend_43 { pt3dadd( -70.9079, -39.5919, 12.615, 0.37 ) }
    dend_43 { pt3dadd( -71.5468, -40.3122, 13.0512, 0.66 ) }
    dend_43 { pt3dadd( -72.1849, -41.0096, 13.5043, 0.81 ) }
    dend_43 { pt3dadd( -72.6778, -41.4873, 13.8522, 0.81 ) }
    dend_43 { pt3dadd( -73.3987, -42.0505, 14.3198, 0.22 ) }
    dend_43 { pt3dadd( -74.2853, -42.6186, 14.8649, 0.22 ) }
    dend_43 { pt3dadd( -82.8979, -43.6061, 18.4748, 0.22 ) }
    // Section: dend_33, id: dend_33, parent: dend_27 (entry count 67/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -3.5941, -51.4594, -6.134, 1.55 ) }
    dend_33 { pt3dadd( -3.18418, -52.6464, -6.1673, 1.55 ) }
    dend_33 { pt3dadd( -2.77563, -53.8555, -6.19793, 1.55 ) }
    dend_33 { pt3dadd( -2.42957, -54.9184, -6.22699, 1.55 ) }
    dend_33 { pt3dadd( -2.04839, -56.1247, -6.25259, 1.69 ) }
    dend_33 { pt3dadd( -1.77374, -57.0509, -6.26468, 1.69 ) }
    dend_33 { pt3dadd( -1.58979, -57.7443, -6.27002, 1.69 ) }
    dend_33 { pt3dadd( -1.33628, -58.8969, -6.26963, 1.55 ) }
    dend_33 { pt3dadd( -1.06037, -60.407, -6.26391, 1.47 ) }
    dend_33 { pt3dadd( -0.894891, -61.6676, -6.23885, 1.33 ) }
    dend_33 { pt3dadd( -0.812607, -62.8786, -6.19369, 1.33 ) }
    dend_33 { pt3dadd( -0.81054, -64.4904, -6.11135, 1.33 ) }
    dend_33 { pt3dadd( -0.89575, -65.6755, -6.02322, 1.11 ) }
    dend_33 { pt3dadd( -1.01104, -66.424, -5.94811, 1.11 ) }
    dend_33 { pt3dadd( -1.37507, -68.0586, -5.74859, 1.25 ) }
    dend_33 { pt3dadd( -1.67721, -69.1461, -5.60038, 1.25 ) }
    dend_33 { pt3dadd( -1.98723, -70.1259, -5.4585, 1.25 ) }
    dend_33 { pt3dadd( -2.45255, -71.4876, -5.26613, 1.4 ) }
    dend_33 { pt3dadd( -2.93248, -72.8312, -5.08817, 1.4 ) }
    dend_33 { pt3dadd( -3.31339, -73.921, -4.96946, 1.55 ) }
    dend_33 { pt3dadd( -3.55739, -74.7229, -4.92152, 1.55 ) }
    dend_33 { pt3dadd( -3.85069, -75.9088, -4.89877, 1.33 ) }
    dend_33 { pt3dadd( -4.13702, -77.3891, -4.93952, 0.96 ) }
    dend_33 { pt3dadd( -4.22049, -77.9755, -4.98592, 0.81 ) }
    dend_33 { pt3dadd( -4.28561, -78.6348, -5.04839, 0.81 ) }
    dend_33 { pt3dadd( -4.37991, -80.1578, -5.19437, 0.96 ) }
    dend_33 { pt3dadd( -4.40797, -81.212, -5.28586, 1.33 ) }
    dend_33 { pt3dadd( -4.41804, -82.3753, -5.36962, 1.69 ) }
    dend_33 { pt3dadd( -4.4292, -83.0806, -5.4031, 1.84 ) }
    dend_33 { pt3dadd( -4.45501, -83.8806, -5.41642, 1.99 ) }
    dend_33 { pt3dadd( -4.52444, -84.8283, -5.39523, 2.06 ) }
    dend_33 { pt3dadd( -4.59467, -85.6389, -5.35528, 2.06 ) }
    dend_33 { pt3dadd( -4.66161, -86.4641, -5.28349, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_33 { pt3dadd( -4.71681, -87.3446, -5.17056, 1.62 ) }
    dend_33 { pt3dadd( -4.7586, -88.4026, -5.00376, 1.18 ) }
    dend_33 { pt3dadd( -4.76974, -89.2496, -4.86265, 0.88 ) }
    dend_33 { pt3dadd( -4.76967, -90.4071, -4.65362, 0.88 ) }
    dend_33 { pt3dadd( -4.75934, -91.2036, -4.4837, 1.03 ) }
    dend_33 { pt3dadd( -4.74725, -92.0231, -4.28497, 1.11 ) }
    dend_33 { pt3dadd( -4.75112, -92.607, -4.13396, 1.11 ) }
    dend_33 { pt3dadd( -4.83003, -94.0648, -3.74495, 1.03 ) }
    dend_33 { pt3dadd( -4.92579, -95.0169, -3.48569, 1.18 ) }
    dend_33 { pt3dadd( -5.02404, -95.7942, -3.2836, 1.25 ) }
    dend_33 { pt3dadd( -5.19334, -96.9772, -3.00261, 1.18 ) }
    dend_33 { pt3dadd( -5.36988, -98.0502, -2.77624, 1.03 ) }
    dend_33 { pt3dadd( -5.57779, -99.1213, -2.57732, 0.96 ) }
    dend_33 { pt3dadd( -5.83877, -100.281, -2.39807, 0.88 ) }
    dend_33 { pt3dadd( -6.04391, -101.056, -2.31191, 0.88 ) }
    dend_33 { pt3dadd( -6.42442, -102.223, -2.26918, 1.25 ) }
    dend_33 { pt3dadd( -6.86342, -103.387, -2.29543, 1.55 ) }
    dend_33 { pt3dadd( -7.21219, -104.278, -2.35224, 1.62 ) }
    dend_33 { pt3dadd( -7.47568, -104.99, -2.41541, 1.62 ) }
    dend_33 { pt3dadd( -7.78563, -105.922, -2.50864, 1.4 ) }
    dend_33 { pt3dadd( -8.16934, -107.242, -2.63154, 1.11 ) }
    dend_33 { pt3dadd( -8.48357, -108.601, -2.74274, 1.11 ) }
    dend_33 { pt3dadd( -8.74116, -110.102, -2.82276, 1.11 ) }
    dend_33 { pt3dadd( -8.95658, -111.702, -2.87969, 1.11 ) }
    dend_33 { pt3dadd( -9.09068, -112.872, -2.9017, 1.4 ) }
    dend_33 { pt3dadd( -9.21077, -114.085, -2.90932, 1.4 ) }
    dend_33 { pt3dadd( -9.37976, -115.976, -2.89605, 1.25 ) }
    dend_33 { pt3dadd( -9.5537, -117.912, -2.88803, 1.25 ) }
    dend_33 { pt3dadd( -9.67911, -119.186, -2.88369, 1.62 ) }
    dend_33 { pt3dadd( -9.80656, -120.302, -2.88868, 1.77 ) }
    dend_33 { pt3dadd( -9.98173, -121.795, -2.91798, 1.33 ) }
    dend_33 { pt3dadd( -10.1353, -123.148, -2.9539, 0.88 ) }
    dend_33 { pt3dadd( -10.2782, -124.655, -3.0142, 1.25 ) }
    dend_33 { pt3dadd( -10.337, -125.401, -3.05601, 1.84 ) }
    dend_33 { pt3dadd( -10.3824, -126.236, -3.11847, 2.28 ) }
    dend_33 { pt3dadd( -10.4101, -127.101, -3.20385, 2.43 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 36/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -3.5941, -51.4594, -6.134, 2.14 ) }
    dend_28 { pt3dadd( -3.45963, -52.1144, -6.31684, 2.14 ) }
    dend_28 { pt3dadd( -3.21445, -53.1513, -6.5595, 2.14 ) }
    dend_28 { pt3dadd( -2.7952, -54.9243, -6.97444, 1.69 ) }
    dend_28 { pt3dadd( -2.44389, -56.4099, -7.32213, 1.84 ) }
    dend_28 { pt3dadd( -2.10261, -57.8532, -7.65989, 1.99 ) }
    dend_28 { pt3dadd( -1.82653, -59.0207, -7.93314, 2.36 ) }
    dend_28 { pt3dadd( -1.60553, -59.8776, -8.09932, 2.5 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 44/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -9.5091, 38.1613, -10.651, 1.25 ) }
    dend_22 { pt3dadd( -9.1226, 39.3606, -10.922, 1.25 ) }
    dend_22 { pt3dadd( -8.79684, 40.1658, -11.0891, 1.03 ) }
    dend_22 { pt3dadd( -8.36321, 41.1228, -11.272, 0.81 ) }
    dend_22 { pt3dadd( -7.87706, 42.195, -11.4579, 0.81 ) }
    dend_22 { pt3dadd( -7.45005, 43.2664, -11.626, 1.11 ) }
    dend_22 { pt3dadd( -7.18135, 44.0451, -11.7365, 1.11 ) }
    dend_22 { pt3dadd( -6.89371, 44.9575, -11.8199, 0.96 ) }
    dend_22 { pt3dadd( -6.55487, 46.1807, -11.8956, 0.66 ) }
    dend_22 { pt3dadd( -6.34988, 47.0278, -11.9425, 0.52 ) }
    dend_22 { pt3dadd( -6.1117, 48.1407, -11.9923, 0.52 ) }
    dend_22 { pt3dadd( -5.96254, 48.9684, -12.0254, 0.52 ) }
    dend_22 { pt3dadd( -5.6405, 50.7389, -12.1237, 1.18 ) }
    dend_22 { pt3dadd( -5.46991, 51.6448, -12.1836, 1.62 ) }
    dend_22 { pt3dadd( -5.3377, 52.2945, -12.2339, 1.69 ) }
    dend_22 { pt3dadd( -5.08492, 53.3698, -12.3486, 1.33 ) }
    dend_22 { pt3dadd( -4.92509, 53.9012, -12.4265, 0.74 ) }
    dend_22 { pt3dadd( -4.6312, 54.715, -12.5783, 0.59 ) }
    dend_22 { pt3dadd( -4.1308, 56.0007, -12.8906, 0.66 ) }
    dend_22 { pt3dadd( -3.87204, 56.6961, -13.0771, 0.44 ) }
    dend_22 { pt3dadd( -3.70618, 57.2163, -13.2168, 0.44 ) }
    dend_22 { pt3dadd( -3.44627, 58.1713, -13.4751, 0.37 ) }
    dend_22 { pt3dadd( -3.22382, 58.9752, -13.6855, 0.37 ) }
    dend_22 { pt3dadd( -3.03771, 59.5593, -13.8225, 0.37 ) }
    dend_22 { pt3dadd( -2.67301, 60.4776, -14.0572, 0.37 ) }
    dend_22 { pt3dadd( -2.31751, 61.295, -14.2826, 0.44 ) }
    dend_22 { pt3dadd( -2.00531, 62.0913, -14.5297, 0.44 ) }
    dend_22 { pt3dadd( -1.58614, 63.3812, -14.9695, 0.81 ) }
    dend_22 { pt3dadd( -1.32257, 64.2934, -15.2917, 1.03 ) }
    dend_22 { pt3dadd( -1.07412, 65.1171, -15.5953, 1.03 ) }
    dend_22 { pt3dadd( -0.847413, 65.8666, -15.9004, 0.81 ) }
    dend_22 { pt3dadd( -0.53997, 66.9607, -16.393, 0.29 ) }
    dend_22 { pt3dadd( -0.408791, 67.5052, -16.6502, 0.29 ) }
    dend_22 { pt3dadd( -0.156535, 68.8231, -17.2646, 1.77 ) }
    dend_22 { pt3dadd( -0.0803756, 69.2622, -17.4643, 2.36 ) }
    dend_22 { pt3dadd( 0.032579, 69.8707, -17.7174, 2.36 ) }
    dend_22 { pt3dadd( 0.272784, 71.0285, -18.1659, 2.28 ) }
    dend_22 { pt3dadd( 0.603664, 72.4176, -18.6543, 0.66 ) }
    dend_22 { pt3dadd( 0.792733, 73.1774, -18.9216, 0.88 ) }
    dend_22 { pt3dadd( 0.987272, 73.9684, -19.2036, 0.88 ) }
    dend_22 { pt3dadd( 1.20664, 74.8563, -19.4997, 0.37 ) }
    dend_22 { pt3dadd( 1.35628, 75.456, -19.691, 0.37 ) }
    dend_22 { pt3dadd( 1.65645, 76.7066, -20.0631, 0.37 ) }
    dend_22 { pt3dadd( 1.87082, 77.65, -20.33, 1.11 ) }
    dend_22 { pt3dadd( 2.02809, 78.4041, -20.5345, 1.47 ) }
    dend_22 { pt3dadd( 2.12568, 78.9437, -20.6713, 1.69 ) }
    dend_22 { pt3dadd( 2.26053, 79.8566, -20.884, 1.33 ) }
    dend_22 { pt3dadd( 2.37626, 80.8602, -21.0934, 0.44 ) }
    dend_22 { pt3dadd( 2.42663, 81.9288, -21.2868, 0.29 ) }
    dend_22 { pt3dadd( 2.43516, 82.7682, -21.4332, 0.52 ) }
    dend_22 { pt3dadd( 2.4249, 83.3958, -21.5401, 0.52 ) }
    dend_22 { pt3dadd( 2.38505, 84.4497, -21.7424, 0.29 ) }
    dend_22 { pt3dadd( 2.36003, 85.5345, -21.9562, 0.29 ) }
    dend_22 { pt3dadd( 2.35425, 87.4465, -22.3645, 1.18 ) }
    dend_22 { pt3dadd( 2.3626, 88.1653, -22.5183, 1.62 ) }
    dend_22 { pt3dadd( 2.37153, 88.9308, -22.6693, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_22 { pt3dadd( 2.38595, 89.8977, -22.8429, 1.33 ) }
    dend_22 { pt3dadd( 2.42179, 92.6563, -23.3154, 0.22 ) }
    dend_22 { pt3dadd( 2.45293, 94.4224, -23.6012, 0.22 ) }
    dend_22 { pt3dadd( 2.48086, 96.0188, -23.8355, 0.22 ) }
    dend_22 { pt3dadd( 2.48935, 97.7064, -24.0516, 0.74 ) }
    dend_22 { pt3dadd( 2.48506, 98.6263, -24.1611, 1.03 ) }
    dend_22 { pt3dadd( 2.47569, 99.0602, -24.2073, 1.03 ) }
    dend_22 { pt3dadd( 2.38412, 100.444, -24.383, 0.15 ) }
    dend_22 { pt3dadd( 2.33793, 100.975, -24.4743, 0.15 ) }
    dend_22 { pt3dadd( 2.2791, 101.583, -24.6198, 0.44 ) }
    dend_22 { pt3dadd( 2.22398, 102.161, -24.7844, 0.66 ) }
    dend_22 { pt3dadd( 2.17416, 102.694, -24.9375, 0.66 ) }
    dend_22 { pt3dadd( 2.076, 104.23, -25.3719, 1.55 ) }
    dend_22 { pt3dadd( 2.03659, 105.36, -25.6777, 2.58 ) }
    dend_22 { pt3dadd( 2.03012, 106.343, -25.9419, 2.58 ) }
    dend_22 { pt3dadd( 2.11379, 108.525, -26.4884, 0.29 ) }
    dend_22 { pt3dadd( 2.25526, 109.983, -26.7898, 0.29 ) }
    dend_22 { pt3dadd( 2.56877, 112.073, -27.1224, 0.29 ) }
    dend_22 { pt3dadd( 2.84062, 113.385, -27.2689, 0.96 ) }
    dend_22 { pt3dadd( 3.00974, 114.059, -27.3127, 0.96 ) }
    dend_22 { pt3dadd( 3.66574, 116.253, -27.3623, 0.22 ) }
    dend_22 { pt3dadd( 4.44735, 118.588, -27.3203, 0.22 ) }
    dend_22 { pt3dadd( 4.97365, 120.054, -27.2486, 1.77 ) }
    dend_22 { pt3dadd( 5.19172, 120.628, -27.2043, 2.36 ) }
    dend_22 { pt3dadd( 5.46332, 121.328, -27.1442, 2.5 ) }
    dend_22 { pt3dadd( 6.34093, 123.591, -26.9345, 0.15 ) }
    dend_22 { pt3dadd( 6.77809, 124.73, -26.8365, 0.29 ) }
    dend_22 { pt3dadd( 7.06512, 125.493, -26.7851, 0.29 ) }
    dend_22 { pt3dadd( 7.4256, 126.467, -26.7672, 0.15 ) }
    dend_22 { pt3dadd( 7.77671, 127.465, -26.8074, 1.18 ) }
    dend_22 { pt3dadd( 7.99448, 128.084, -26.8632, 1.55 ) }
    dend_22 { pt3dadd( 8.2357, 128.771, -26.9507, 1.18 ) }
    dend_22 { pt3dadd( 8.41138, 129.267, -27.0282, 0.74 ) }
    dend_22 { pt3dadd( 8.91121, 130.805, -27.2785, 0.22 ) }
    dend_22 { pt3dadd( 9.2726, 132.006, -27.4774, 0.22 ) }
    dend_22 { pt3dadd( 9.84808, 134.108, -27.7836, 0.22 ) }
    dend_22 { pt3dadd( 10.1343, 135.24, -27.9254, 0.81 ) }
    dend_22 { pt3dadd( 10.2399, 135.694, -27.9733, 0.81 ) }
    dend_22 { pt3dadd( 10.8392, 138.535, -28.1884, 0.22 ) }
    dend_22 { pt3dadd( 11.1027, 139.965, -28.2209, 0.22 ) }
    dend_22 { pt3dadd( 11.2976, 141.257, -28.2362, 1.25 ) }
    dend_22 { pt3dadd( 11.3262, 141.599, -28.2388, 1.69 ) }
    dend_22 { pt3dadd( 11.3399, 141.987, -28.2398, 1.69 ) }
    dend_22 { pt3dadd( 11.3416, 142.813, -28.236, 1.33 ) }
    dend_22 { pt3dadd( 11.3123, 143.536, -28.241, 0.59 ) }
    dend_22 { pt3dadd( 11.2251, 145.04, -28.2882, 0.22 ) }
    dend_22 { pt3dadd( 11.1214, 147.184, -28.4201, 0.22 ) }
    dend_22 { pt3dadd( 11.0583, 148.504, -28.5163, 1.03 ) }
    dend_22 { pt3dadd( 11.0301, 149.06, -28.5601, 1.03 ) }
    dend_22 { pt3dadd( 11.0181, 149.641, -28.606, 1.03 ) }
    dend_22 { pt3dadd( 11.0316, 150.503, -28.6671, 0.52 ) }
    dend_22 { pt3dadd( 11.1343, 152.435, -28.7672, 0.22 ) }
    dend_22 { pt3dadd( 11.2531, 153.364, -28.814, 0.59 ) }
    dend_22 { pt3dadd( 11.3645, 153.961, -28.8408, 0.59 ) }
    dend_22 { pt3dadd( 11.972, 156.578, -28.9382, 0.22 ) }
    dend_22 { pt3dadd( 12.203, 157.39, -28.9599, 0.66 ) }
    dend_22 { pt3dadd( 12.4056, 157.97, -28.9743, 0.66 ) }
    dend_22 { pt3dadd( 12.9249, 159.315, -29.0184, 0.15 ) }
    dend_22 { pt3dadd( 13.2261, 160.063, -29.0537, 0.81 ) }
    dend_22 { pt3dadd( 13.4322, 160.577, -29.0868, 0.81 ) }
    dend_22 { pt3dadd( 13.7261, 161.336, -29.154, 0.81 ) }
    dend_22 { pt3dadd( 14.2444, 162.784, -29.3058, 0.22 ) }
    dend_22 { pt3dadd( 14.7469, 164.255, -29.4956, 1.33 ) }
    dend_22 { pt3dadd( 14.9472, 164.872, -29.5864, 1.55 ) }
    dend_22 { pt3dadd( 15.0655, 165.232, -29.6416, 1.55 ) }
    dend_22 { pt3dadd( 15.1911, 165.614, -29.7056, 1.03 ) }
    dend_22 { pt3dadd( 15.7908, 167.353, -30.0244, 0.22 ) }
    dend_22 { pt3dadd( 16.3645, 168.9, -30.3292, 0.22 ) }
    dend_22 { pt3dadd( 16.6937, 169.711, -30.5089, 0.22 ) }
    dend_22 { pt3dadd( 17.0799, 170.671, -30.7242, 1.25 ) }
    dend_22 { pt3dadd( 17.3134, 171.291, -30.8673, 1.77 ) }
    dend_22 { pt3dadd( 17.5064, 171.853, -31.002, 1.77 ) }
    dend_22 { pt3dadd( 17.6584, 172.327, -31.1258, 1.18 ) }
    dend_22 { pt3dadd( 17.883, 173.077, -31.3306, 0.66 ) }
    dend_22 { pt3dadd( 18.5624, 175.363, -32.0051, 0.22 ) }
    dend_22 { pt3dadd( 19.0224, 176.89, -32.5008, 0.22 ) }
    dend_22 { pt3dadd( 19.3452, 177.931, -32.8375, 1.11 ) }
    dend_22 { pt3dadd( 19.5755, 178.6, -33.0476, 1.4 ) }
    dend_22 { pt3dadd( 19.8048, 179.194, -33.2327, 1.4 ) }
    dend_22 { pt3dadd( 20.1043, 179.882, -33.4669, 0.96 ) }
    dend_22 { pt3dadd( 21.0301, 181.827, -34.1846, 0.22 ) }
    dend_22 { pt3dadd( 22.0732, 183.848, -34.9384, 0.22 ) }
    dend_22 { pt3dadd( 22.9074, 185.396, -35.5061, 1.77 ) }
    dend_22 { pt3dadd( 23.208, 185.942, -35.6979, 2.65 ) }
    dend_22 { pt3dadd( 23.6905, 186.796, -35.9828, 2.95 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 85/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -9.5091, 38.1613, -10.651, 0.66 ) }
    dend_21 { pt3dadd( -11.253, 39.0691, -10.7188, 0.66 ) }
    dend_21 { pt3dadd( -11.9484, 39.398, -10.7426, 0.66 ) }
    dend_21 { pt3dadd( -12.7638, 39.7516, -10.7629, 0.66 ) }
    dend_21 { pt3dadd( -13.6961, 40.1144, -10.7867, 1.11 ) }
    dend_21 { pt3dadd( -14.2755, 40.3118, -10.8048, 1.33 ) }
    dend_21 { pt3dadd( -15.1491, 40.5985, -10.8346, 1.33 ) }
    dend_21 { pt3dadd( -16.0982, 40.8793, -10.8645, 0.96 ) }
    dend_21 { pt3dadd( -16.7507, 41.0779, -10.8638, 0.88 ) }
    dend_21 { pt3dadd( -17.5273, 41.3159, -10.838, 0.88 ) }
    dend_21 { pt3dadd( -18.4456, 41.5962, -10.7617, 0.37 ) }
    dend_21 { pt3dadd( -18.9167, 41.7361, -10.7011, 0.37 ) }
    dend_21 { pt3dadd( -19.7183, 41.9742, -10.5676, 0.81 ) }
    dend_21 { pt3dadd( -20.409, 42.1886, -10.4325, 0.88 ) }
    dend_21 { pt3dadd( -21.0474, 42.3929, -10.2978, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_21 { pt3dadd( -21.7201, 42.6132, -10.1452, 0.29 ) }
    dend_21 { pt3dadd( -22.1501, 42.7476, -10.053, 0.29 ) }
    dend_21 { pt3dadd( -22.9024, 42.9303, -9.92568, 0.74 ) }
    dend_21 { pt3dadd( -23.4658, 43.0485, -9.85479, 0.74 ) }
    dend_21 { pt3dadd( -23.7879, 43.1305, -9.81068, 0.74 ) }
    dend_21 { pt3dadd( -24.1571, 43.2558, -9.73333, 0.74 ) }
    dend_21 { pt3dadd( -24.6067, 43.4313, -9.61139, 0.59 ) }
    dend_21 { pt3dadd( -25.0417, 43.5964, -9.46318, 0.59 ) }
    dend_21 { pt3dadd( -25.4201, 43.7279, -9.29979, 0.37 ) }
    dend_21 { pt3dadd( -26.4434, 44.0222, -8.83301, 0.37 ) }
    dend_21 { pt3dadd( -27.1654, 44.1802, -8.49534, 0.37 ) }
    dend_21 { pt3dadd( -27.5522, 44.2413, -8.31347, 0.22 ) }
    dend_21 { pt3dadd( -28.2058, 44.3089, -8.01392, 0.22 ) }
    dend_21 { pt3dadd( -28.5612, 44.3224, -7.87002, 0.22 ) }
    dend_21 { pt3dadd( -29.6142, 44.3355, -7.49837, 1.03 ) }
    dend_21 { pt3dadd( -30.1396, 44.3531, -7.34631, 1.4 ) }
    dend_21 { pt3dadd( -30.4543, 44.3811, -7.26215, 1.4 ) }
    dend_21 { pt3dadd( -31.2193, 44.4989, -7.07186, 0.81 ) }
    dend_21 { pt3dadd( -32.2005, 44.6942, -6.86041, 0.22 ) }
    dend_21 { pt3dadd( -32.7316, 44.8075, -6.7565, 0.22 ) }
    dend_21 { pt3dadd( -33.8058, 45.0518, -6.57244, 1.11 ) }
    dend_21 { pt3dadd( -34.3559, 45.1836, -6.49219, 1.4 ) }
    dend_21 { pt3dadd( -34.7475, 45.2786, -6.44283, 1.4 ) }
    dend_21 { pt3dadd( -35.6636, 45.4983, -6.34613, 0.66 ) }
    dend_21 { pt3dadd( -36.5263, 45.6939, -6.26478, 0.52 ) }
    dend_21 { pt3dadd( -37.5726, 45.8996, -6.17842, 0.74 ) }
    dend_21 { pt3dadd( -38.253, 46.028, -6.13044, 0.88 ) }
    dend_21 { pt3dadd( -39.2192, 46.2221, -6.071, 0.66 ) }
    dend_21 { pt3dadd( -39.9051, 46.3673, -6.03383, 0.66 ) }
    dend_21 { pt3dadd( -40.4679, 46.4932, -6.0096, 0.66 ) }
    dend_21 { pt3dadd( -41.5257, 46.7508, -5.96103, 0.29 ) }
    dend_21 { pt3dadd( -42.3709, 46.9744, -5.90062, 1.03 ) }
    dend_21 { pt3dadd( -43.0864, 47.1754, -5.82585, 1.25 ) }
    dend_21 { pt3dadd( -43.3121, 47.2502, -5.78444, 1.25 ) }
    dend_21 { pt3dadd( -43.8871, 47.4804, -5.63752, 0.81 ) }
    dend_21 { pt3dadd( -44.5715, 47.7866, -5.414, 0.29 ) }
    dend_21 { pt3dadd( -45.0094, 48.0009, -5.23562, 0.52 ) }
    dend_21 { pt3dadd( -45.2993, 48.1565, -5.1075, 0.66 ) }
    dend_21 { pt3dadd( -46.3547, 48.7499, -4.64473, 0.22 ) }
    dend_21 { pt3dadd( -46.9534, 49.093, -4.39966, 0.22 ) }
    dend_21 { pt3dadd( -47.4469, 49.3748, -4.22187, 0.22 ) }
    dend_21 { pt3dadd( -48.1152, 49.758, -4.03449, 0.22 ) }
    dend_21 { pt3dadd( -49.0201, 50.2793, -3.82611, 0.59 ) }
    dend_21 { pt3dadd( -49.5403, 50.5827, -3.73125, 0.81 ) }
    dend_21 { pt3dadd( -50.0275, 50.8833, -3.68397, 0.81 ) }
    dend_21 { pt3dadd( -50.7753, 51.3816, -3.64641, 0.52 ) }
    dend_21 { pt3dadd( -51.7824, 52.0998, -3.63705, 1.03 ) }
    dend_21 { pt3dadd( -52.386, 52.5473, -3.6513, 1.18 ) }
    dend_21 { pt3dadd( -52.834, 52.8944, -3.67504, 1.25 ) }
    dend_21 { pt3dadd( -53.8321, 53.7012, -3.75122, 0.29 ) }
    dend_21 { pt3dadd( -54.735, 54.4523, -3.83769, 0.74 ) }
    dend_21 { pt3dadd( -55.0743, 54.7384, -3.87645, 0.96 ) }
    dend_21 { pt3dadd( -55.3722, 54.9872, -3.91847, 0.96 ) }
    dend_21 { pt3dadd( -56.3671, 55.7882, -4.07566, 0.22 ) }
    dend_21 { pt3dadd( -56.7632, 56.0895, -4.13987, 0.22 ) }
    dend_21 { pt3dadd( -57.307, 56.475, -4.22064, 0.66 ) }
    dend_21 { pt3dadd( -57.6789, 56.7268, -4.28353, 0.88 ) }
    dend_21 { pt3dadd( -58.1206, 57.0118, -4.35706, 0.44 ) }
    dend_21 { pt3dadd( -58.697, 57.3752, -4.44704, 0.37 ) }
    dend_21 { pt3dadd( -59.0446, 57.5899, -4.49303, 0.44 ) }
    dend_21 { pt3dadd( -59.5072, 57.8866, -4.55338, 0.44 ) }
    dend_21 { pt3dadd( -59.84, 58.1029, -4.59711, 0.44 ) }
    dend_21 { pt3dadd( -60.4803, 58.528, -4.67433, 0.22 ) }
    dend_21 { pt3dadd( -60.8969, 58.8148, -4.71197, 0.22 ) }
    dend_21 { pt3dadd( -61.3889, 59.1832, -4.74635, 0.29 ) }
    dend_21 { pt3dadd( -61.6757, 59.4141, -4.75587, 0.22 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 66/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -11.6325, 29.6636, 2.19654, 1.47 ) }
    dend_13 { pt3dadd( -11.1807, 30.5727, 2.1938, 1.47 ) }
    dend_13 { pt3dadd( -10.771, 31.5645, 2.19528, 0.81 ) }
    dend_13 { pt3dadd( -10.515, 32.2911, 2.2004, 0.81 ) }
    dend_13 { pt3dadd( -10.2425, 33.3091, 2.21171, 0.81 ) }
    dend_13 { pt3dadd( -9.96129, 34.5489, 2.22967, 0.81 ) }
    dend_13 { pt3dadd( -9.69782, 35.9179, 2.25393, 0.81 ) }
    dend_13 { pt3dadd( -9.52339, 37.2855, 2.27729, 1.03 ) }
    dend_13 { pt3dadd( -9.41055, 38.5163, 2.30115, 1.03 ) }
    dend_13 { pt3dadd( -9.2705, 40.401, 2.33309, 1.18 ) }
    dend_13 { pt3dadd( -9.18998, 41.5684, 2.35837, 1.18 ) }
    dend_13 { pt3dadd( -9.14408, 43.599, 2.39279, 1.18 ) }
    dend_13 { pt3dadd( -9.16021, 45.0441, 2.41098, 1.4 ) }
    dend_13 { pt3dadd( -9.16172, 46.0682, 2.42127, 1.4 ) }
    dend_13 { pt3dadd( -9.16909, 46.7972, 2.42477, 1.4 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 81/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -11.6325, 29.6636, 2.19654, 0.96 ) }
    dend_12 { pt3dadd( -13.3698, 30.6801, 1.21449, 0.96 ) }
    dend_12 { pt3dadd( -13.997, 31.0636, 0.881823, 0.96 ) }
    dend_12 { pt3dadd( -14.8666, 31.6047, 0.422631, 0.96 ) }
    dend_12 { pt3dadd( -15.7686, 32.1868, -0.0634238, 0.81 ) }
    dend_12 { pt3dadd( -16.5451, 32.7053, -0.478518, 0.81 ) }
    dend_12 { pt3dadd( -17.6192, 33.4374, -1.03585, 1.03 ) }
    dend_12 { pt3dadd( -18.3451, 33.9725, -1.40727, 1.03 ) }
    dend_12 { pt3dadd( -19.0162, 34.553, -1.74289, 1.03 ) }
    dend_12 { pt3dadd( -19.846, 35.3801, -2.14882, 0.81 ) }
    dend_12 { pt3dadd( -20.4526, 36.0115, -2.44155, 0.81 ) }
    dend_12 { pt3dadd( -21.1204, 36.7265, -2.74989, 0.81 ) }
    dend_12 { pt3dadd( -21.9039, 37.6196, -3.10837, 0.52 ) }
    dend_12 { pt3dadd( -22.6237, 38.5246, -3.41998, 0.52 ) }
    dend_12 { pt3dadd( -23.0309, 39.0763, -3.57277, 0.52 ) }
    dend_12 { pt3dadd( -23.6163, 39.9232, -3.76555, 0.52 ) }
    dend_12 { pt3dadd( -24.3437, 41.0157, -3.99033, 0.52 ) }
    dend_12 { pt3dadd( -24.7265, 41.6133, -4.0972, 0.52 ) }
    dend_12 { pt3dadd( -25.1169, 42.2328, -4.18607, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_12 { pt3dadd( -25.5776, 42.9719, -4.2687, 0.66 ) }
    dend_12 { pt3dadd( -26.0051, 43.705, -4.32594, 0.88 ) }
    dend_12 { pt3dadd( -26.4192, 44.4914, -4.36438, 0.88 ) }
    dend_12 { pt3dadd( -26.8772, 45.4164, -4.40262, 0.59 ) }
    dend_12 { pt3dadd( -27.3401, 46.3353, -4.4531, 0.88 ) }
    dend_12 { pt3dadd( -27.6732, 46.9969, -4.49763, 0.88 ) }
    dend_12 { pt3dadd( -27.9429, 47.5878, -4.53686, 0.96 ) }
    dend_12 { pt3dadd( -28.1783, 48.1291, -4.58008, 0.96 ) }
    dend_12 { pt3dadd( -28.3907, 48.6026, -4.62938, 0.96 ) }
    dend_12 { pt3dadd( -28.774, 49.3764, -4.73709, 0.74 ) }
    dend_12 { pt3dadd( -29.3861, 50.515, -4.9331, 1.25 ) }
    dend_12 { pt3dadd( -29.8131, 51.2725, -5.0796, 1.25 ) }
    dend_12 { pt3dadd( -30.3002, 52.1178, -5.24932, 0.29 ) }
    dend_12 { pt3dadd( -30.6251, 52.6801, -5.35619, 0.29 ) }
    dend_12 { pt3dadd( -30.9551, 53.2501, -5.45337, 0.66 ) }
    dend_12 { pt3dadd( -31.2547, 53.7652, -5.52649, 0.81 ) }
    dend_12 { pt3dadd( -31.5068, 54.2016, -5.57265, 0.81 ) }
    dend_12 { pt3dadd( -31.9273, 54.977, -5.61375, 0.37 ) }
    dend_12 { pt3dadd( -32.3147, 55.838, -5.66188, 0.37 ) }
    dend_12 { pt3dadd( -32.5332, 56.4027, -5.70426, 1.03 ) }
    dend_12 { pt3dadd( -32.7156, 56.9035, -5.75406, 1.25 ) }
    dend_12 { pt3dadd( -32.9508, 57.5169, -5.8358, 1.25 ) }
    dend_12 { pt3dadd( -33.1567, 58.0038, -5.92267, 0.81 ) }
    dend_12 { pt3dadd( -33.6074, 58.9693, -6.12831, 0.59 ) }
    dend_12 { pt3dadd( -33.8801, 59.5195, -6.25567, 0.44 ) }
    dend_12 { pt3dadd( -34.2646, 60.2948, -6.40992, 0.88 ) }
    dend_12 { pt3dadd( -34.5632, 60.8918, -6.50676, 0.88 ) }
    dend_12 { pt3dadd( -35.0826, 61.9349, -6.61805, 0.59 ) }
    dend_12 { pt3dadd( -35.4184, 62.6297, -6.6727, 0.59 ) }
    dend_12 { pt3dadd( -35.9409, 63.7559, -6.71984, 0.44 ) }
    dend_12 { pt3dadd( -36.5083, 65.0544, -6.7527, 1.03 ) }
    dend_12 { pt3dadd( -36.9611, 66.1588, -6.74907, 1.55 ) }
    dend_12 { pt3dadd( -37.216, 66.8443, -6.71915, 1.62 ) }
    dend_12 { pt3dadd( -37.5581, 67.848, -6.64503, 1.11 ) }
    dend_12 { pt3dadd( -37.9064, 68.9501, -6.54112, 0.59 ) }
    dend_12 { pt3dadd( -38.1347, 69.7113, -6.44774, 0.59 ) }
    dend_12 { pt3dadd( -38.4985, 70.9824, -6.26167, 0.59 ) }
    dend_12 { pt3dadd( -38.8634, 72.2481, -6.05697, 0.52 ) }
    dend_12 { pt3dadd( -39.1106, 73.0749, -5.90595, 0.52 ) }
    dend_12 { pt3dadd( -39.4348, 74.1029, -5.68258, 0.52 ) }
    dend_12 { pt3dadd( -39.7865, 75.1747, -5.44377, 0.52 ) }
    dend_12 { pt3dadd( -40.1963, 76.3479, -5.19597, 0.37 ) }
    dend_12 { pt3dadd( -40.8127, 77.9064, -4.89956, 1.55 ) }
    dend_12 { pt3dadd( -41.0478, 78.4195, -4.81772, 1.92 ) }
    dend_12 { pt3dadd( -41.2926, 78.8855, -4.76038, 1.92 ) }
    dend_12 { pt3dadd( -41.5249, 79.2825, -4.73216, 1.92 ) }
    dend_12 { pt3dadd( -42.0268, 80.0332, -4.72273, 0.88 ) }
    dend_12 { pt3dadd( -42.7042, 80.9838, -4.75194, 0.44 ) }
    dend_12 { pt3dadd( -43.2165, 81.6872, -4.78988, 0.44 ) }
    dend_12 { pt3dadd( -43.7644, 82.4498, -4.84555, 0.44 ) }
    dend_12 { pt3dadd( -44.5241, 83.5363, -4.92503, 0.37 ) }
    dend_12 { pt3dadd( -44.9279, 84.128, -4.96722, 0.37 ) }
    dend_12 { pt3dadd( -45.7575, 85.3979, -5.04819, 0.74 ) }
    dend_12 { pt3dadd( -46.088, 85.9202, -5.07275, 0.74 ) }
    dend_12 { pt3dadd( -46.4954, 86.5921, -5.09768, 0.52 ) }
    dend_12 { pt3dadd( -47.0315, 87.5218, -5.14234, 1.25 ) }
    dend_12 { pt3dadd( -47.3992, 88.1757, -5.19686, 1.47 ) }
    dend_12 { pt3dadd( -47.6419, 88.6204, -5.24718, 1.47 ) }
    dend_12 { pt3dadd( -47.9731, 89.1709, -5.3544, 0.81 ) }
    dend_12 { pt3dadd( -48.4226, 89.8596, -5.5333, 0.59 ) }
    dend_12 { pt3dadd( -48.8708, 90.4946, -5.75285, 0.88 ) }
    dend_12 { pt3dadd( -49.2479, 91.0056, -5.95944, 1.18 ) }
    dend_12 { pt3dadd( -49.4823, 91.3199, -6.09592, 1.18 ) }
    dend_12 { pt3dadd( -50.0602, 92.1186, -6.40764, 0.96 ) }
    dend_12 { pt3dadd( -50.6802, 93.0261, -6.69231, 0.52 ) }
    dend_12 { pt3dadd( -51.0445, 93.5922, -6.80026, 0.37 ) }
    dend_12 { pt3dadd( -51.5778, 94.4715, -6.86499, 0.37 ) }
    dend_12 { pt3dadd( -52.0917, 95.3859, -6.85112, 0.37 ) }
    dend_12 { pt3dadd( -52.565, 96.3014, -6.77581, 0.37 ) }
    dend_12 { pt3dadd( -52.8924, 97.0115, -6.66885, 0.81 ) }
    dend_12 { pt3dadd( -53.36, 98.1522, -6.45536, 1.84 ) }
    dend_12 { pt3dadd( -53.5457, 98.6132, -6.36748, 1.92 ) }
    dend_12 { pt3dadd( -53.686, 98.9463, -6.31425, 1.92 ) }
    dend_12 { pt3dadd( -53.9366, 99.5664, -6.23393, 1.62 ) }
    dend_12 { pt3dadd( -54.2727, 100.447, -6.16791, 0.88 ) }
    dend_12 { pt3dadd( -54.6062, 101.397, -6.12345, 0.29 ) }
    dend_12 { pt3dadd( -55.1116, 102.878, -6.08219, 0.29 ) }
    dend_12 { pt3dadd( -55.4966, 103.944, -6.05915, 0.29 ) }
    dend_12 { pt3dadd( -55.7535, 104.564, -6.04635, 0.29 ) }
    dend_12 { pt3dadd( -55.8928, 104.852, -6.042, 0.29 ) }
    dend_12 { pt3dadd( -56.2578, 105.483, -6.04045, 0.66 ) }
    dend_12 { pt3dadd( -56.7301, 106.174, -6.05005, 0.81 ) }
    dend_12 { pt3dadd( -57.076, 106.629, -6.06262, 0.81 ) }
    dend_12 { pt3dadd( -57.7387, 107.489, -6.09191, 0.37 ) }
    dend_12 { pt3dadd( -58.2615, 108.149, -6.11825, 0.37 ) }
    dend_12 { pt3dadd( -58.7561, 108.781, -6.14244, 0.81 ) }
    dend_12 { pt3dadd( -59.105, 109.231, -6.15557, 0.81 ) }
    dend_12 { pt3dadd( -59.6, 109.878, -6.1654, 0.37 ) }
    dend_12 { pt3dadd( -60.0927, 110.48, -6.17649, 0.37 ) }
    dend_12 { pt3dadd( -60.5993, 111.041, -6.18998, 0.88 ) }
    dend_12 { pt3dadd( -61.2237, 111.698, -6.2081, 1.47 ) }
    dend_12 { pt3dadd( -61.6932, 112.189, -6.22513, 1.69 ) }
    dend_12 { pt3dadd( -62.0727, 112.592, -6.24318, 1.69 ) }
    dend_12 { pt3dadd( -63.1058, 113.669, -6.30304, 0.37 ) }
    dend_12 { pt3dadd( -63.4596, 114.044, -6.32463, 0.37 ) }
    dend_12 { pt3dadd( -64.1171, 114.795, -6.36864, 0.37 ) }
    dend_12 { pt3dadd( -64.8667, 115.728, -6.42165, 0.81 ) }
    dend_12 { pt3dadd( -65.3439, 116.411, -6.45319, 1.33 ) }
    dend_12 { pt3dadd( -65.6283, 116.866, -6.47357, 1.33 ) }
    dend_12 { pt3dadd( -66.0054, 117.508, -6.50389, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_12 { pt3dadd( -66.7658, 118.767, -6.58392, 0.52 ) }
    dend_12 { pt3dadd( -67.401, 119.741, -6.67046, 0.52 ) }
    dend_12 { pt3dadd( -68.1165, 120.821, -6.78049, 0.52 ) }
    dend_12 { pt3dadd( -68.5109, 121.416, -6.84563, 0.52 ) }
    dend_12 { pt3dadd( -69.0165, 122.188, -6.93414, 0.52 ) }
    dend_12 { pt3dadd( -69.582, 123.053, -7.04215, 0.52 ) }
    dend_12 { pt3dadd( -70.5441, 124.512, -7.23867, 0.52 ) }
    dend_12 { pt3dadd( -70.8927, 125.039, -7.31128, 0.52 ) }
    dend_12 { pt3dadd( -71.7613, 126.327, -7.49067, 1.25 ) }
    dend_12 { pt3dadd( -72.0073, 126.692, -7.53905, 1.47 ) }
    dend_12 { pt3dadd( -72.3294, 127.167, -7.60786, 1.47 ) }
    dend_12 { pt3dadd( -72.8029, 127.826, -7.71916, 0.88 ) }
    dend_12 { pt3dadd( -73.3826, 128.557, -7.86591, 0.29 ) }
    dend_12 { pt3dadd( -73.6261, 128.828, -7.92852, 0.29 ) }
    dend_12 { pt3dadd( -74.135, 129.344, -8.05586, 0.44 ) }
    dend_12 { pt3dadd( -74.5424, 129.737, -8.14932, 0.44 ) }
    dend_12 { pt3dadd( -74.9294, 130.095, -8.22859, 0.44 ) }
    dend_12 { pt3dadd( -75.1538, 130.316, -8.28271, 0.44 ) }
    dend_12 { pt3dadd( -75.475, 130.644, -8.34135, 0.29 ) }
    dend_12 { pt3dadd( -75.8907, 131.182, -8.37269, 0.29 ) }
    dend_12 { pt3dadd( -76.0358, 131.387, -8.36654, 0.44 ) }
    dend_12 { pt3dadd( -76.2155, 131.645, -8.34576, 0.44 ) }
    dend_12 { pt3dadd( -76.694, 132.31, -8.27937, 0.37 ) }
    dend_12 { pt3dadd( -77.3456, 133.173, -8.18549, 0.44 ) }
    dend_12 { pt3dadd( -78.3914, 134.551, -8.11376, 2.28 ) }
    dend_12 { pt3dadd( -78.8047, 135.101, -8.11273, 2.5 ) }
    dend_12 { pt3dadd( -79.1164, 135.54, -8.13161, 2.5 ) }
    dend_12 { pt3dadd( -79.6136, 136.263, -8.19402, 1.92 ) }
    dend_12 { pt3dadd( -80.0965, 136.999, -8.30462, 0.81 ) }
    dend_12 { pt3dadd( -80.6869, 138.02, -8.55766, 0.52 ) }
    dend_12 { pt3dadd( -80.9221, 138.491, -8.69007, 0.52 ) }
    dend_12 { pt3dadd( -81.403, 139.582, -9.00119, 0.88 ) }
    dend_12 { pt3dadd( -81.662, 140.257, -9.18345, 0.88 ) }
    dend_12 { pt3dadd( -81.9411, 141.073, -9.38493, 0.66 ) }
    dend_12 { pt3dadd( -82.1498, 141.744, -9.53747, 0.44 ) }
    dend_12 { pt3dadd( -82.4321, 142.719, -9.72199, 0.29 ) }
    dend_12 { pt3dadd( -82.7253, 143.846, -9.93556, 0.29 ) }
    dend_12 { pt3dadd( -83.0129, 145.133, -10.1887, 0.29 ) }
    dend_12 { pt3dadd( -83.1387, 145.773, -10.3198, 0.29 ) }
    dend_12 { pt3dadd( -83.3461, 146.962, -10.6112, 0.52 ) }
    dend_12 { pt3dadd( -83.4878, 147.78, -10.8498, 0.88 ) }
    dend_12 { pt3dadd( -83.6049, 148.454, -11.0917, 0.88 ) }
    dend_12 { pt3dadd( -83.7531, 149.195, -11.403, 0.44 ) }
    dend_12 { pt3dadd( -84.0893, 150.372, -11.9842, 1.11 ) }
    dend_12 { pt3dadd( -84.4939, 151.39, -12.556, 2.43 ) }
    dend_12 { pt3dadd( -84.8636, 152.077, -12.9915, 2.43 ) }
    dend_12 { pt3dadd( -85.1445, 152.475, -13.2736, 2.43 ) }
    dend_12 { pt3dadd( -85.5721, 152.942, -13.6207, 1.69 ) }
    dend_12 { pt3dadd( -86.2153, 153.529, -14.0799, 0.59 ) }
    dend_12 { pt3dadd( -86.9611, 154.085, -14.5298, 0.74 ) }
    dend_12 { pt3dadd( -87.2234, 154.253, -14.656, 0.74 ) }
    dend_12 { pt3dadd( -87.6681, 154.521, -14.859, 0.52 ) }
    dend_12 { pt3dadd( -88.3619, 154.933, -15.1452, 0.52 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 53/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 23.2719, 6.42055, 6.09191, 1.99 ) }
    dend_2 { pt3dadd( 24.8908, 6.54157, 6.12386, 1.99 ) }
    dend_2 { pt3dadd( 25.8429, 6.85648, 6.20823, 1.99 ) }
    dend_2 { pt3dadd( 26.5168, 7.34234, 6.30231, 1.69 ) }
    dend_2 { pt3dadd( 27.464, 8.02534, 6.43457, 1.69 ) }
    dend_2 { pt3dadd( 27.863, 8.31301, 6.49027, 1.69 ) }
    dend_2 { pt3dadd( 28.5259, 8.79098, 6.58283, 1.69 ) }
    dend_2 { pt3dadd( 28.954, 9.28373, 6.61933, 1.92 ) }
    dend_2 { pt3dadd( 29.5874, 10.3171, 6.75143, 1.99 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 62/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 23.2719, 6.42055, 6.09191, 0.74 ) }
    dend_1 { pt3dadd( 23.9529, 8.2353, 6.44537, 0.74 ) }
    dend_1 { pt3dadd( 24.206, 9.02126, 6.58545, 0.74 ) }
    dend_1 { pt3dadd( 24.5543, 10.2542, 6.78647, 0.74 ) }
    dend_1 { pt3dadd( 24.8247, 11.3152, 6.94904, 0.44 ) }
    dend_1 { pt3dadd( 25.031, 12.2138, 7.0888, 0.44 ) }
    dend_1 { pt3dadd( 25.306, 13.5458, 7.29711, 0.66 ) }
    dend_1 { pt3dadd( 25.4073, 14.1872, 7.38591, 0.88 ) }
    dend_1 { pt3dadd( 25.5359, 15.1183, 7.53698, 0.88 ) }
    dend_1 { pt3dadd( 25.6404, 15.9768, 7.70826, 1.03 ) }
    dend_1 { pt3dadd( 25.803, 17.2069, 7.98582, 0.96 ) }
    dend_1 { pt3dadd( 25.932, 18.0788, 8.19684, 0.52 ) }
    dend_1 { pt3dadd( 26.0574, 18.7799, 8.37341, 0.52 ) }
    dend_1 { pt3dadd( 26.1988, 19.7116, 8.61185, 0.88 ) }
    dend_1 { pt3dadd( 26.3145, 20.4709, 8.80939, 0.66 ) }
    dend_1 { pt3dadd( 26.4476, 21.3206, 9.03805, 0.88 ) }
    dend_1 { pt3dadd( 26.5649, 22.079, 9.24714, 0.88 ) }
    dend_1 { pt3dadd( 26.7261, 23.1983, 9.56801, 0.29 ) }
    dend_1 { pt3dadd( 26.8351, 24.1025, 9.82331, 0.29 ) }
    dend_1 { pt3dadd( 26.9027, 24.7258, 9.98945, 0.29 ) }
    dend_1 { pt3dadd( 27.0165, 25.7878, 10.2786, 0.44 ) }
    dend_1 { pt3dadd( 27.0989, 26.4213, 10.4674, 0.74 ) }
    dend_1 { pt3dadd( 27.2262, 27.1839, 10.7025, 0.88 ) }
    dend_1 { pt3dadd( 27.3208, 27.6452, 10.8521, 1.11 ) }
    dend_1 { pt3dadd( 27.4058, 28.0103, 10.9688, 1.11 ) }
    dend_1 { pt3dadd( 27.566, 28.8406, 11.2087, 0.29 ) }
    dend_1 { pt3dadd( 27.7393, 29.6612, 11.4088, 0.29 ) }
    dend_1 { pt3dadd( 27.9389, 30.4381, 11.5786, 0.29 ) }
    dend_1 { pt3dadd( 29.7811, 38.7756, 15.2505, 0.29 ) }
    dend_1 { pt3dadd( 32.7404, 46.9974, 18.3961, 0.29 ) }
    dend_1 { pt3dadd( 34.753, 55.7808, 20.7378, 0.29 ) }
    dend_1 { pt3dadd( 35.9606, 64.8348, 22.5993, 0.29 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 94/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 6.95552, 38.3192, 1.13455, 0.59 ) }
    axon_1 { pt3dadd( 9.5476, 53.0936, 1.13455, 0.59 ) }
    axon_1 { pt3dadd( 12.1397, 67.8679, 1.13455, 0.59 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 97/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -88.5505, -62.6112, 2.8791, 0.44 ) }
    dend_48 { pt3dadd( -90.416, -63.3078, 3.54348, 0.44 ) }
    dend_48 { pt3dadd( -91.3601, -63.7327, 3.87537, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_48 { pt3dadd( -92.355, -64.2344, 4.196, 0.29 ) }
    dend_48 { pt3dadd( -92.9383, -64.5427, 4.37356, 0.29 ) }
    dend_48 { pt3dadd( -94.1774, -65.1888, 4.72206, 0.37 ) }
    dend_48 { pt3dadd( -94.7432, -65.4667, 4.88364, 0.37 ) }
    dend_48 { pt3dadd( -95.6053, -65.8731, 5.05754, 0.29 ) }
    dend_48 { pt3dadd( -96.4304, -66.3241, 5.24633, 0.29 ) }
    dend_48 { pt3dadd( -97.061, -66.7204, 5.40483, 0.29 ) }
    dend_48 { pt3dadd( -97.4988, -67.0114, 5.51534, 0.29 ) }
    dend_48 { pt3dadd( -98.1813, -67.4516, 5.68216, 0.29 ) }
    dend_48 { pt3dadd( -98.8546, -67.8271, 5.82861, 0.44 ) }
    dend_48 { pt3dadd( -99.7833, -68.2838, 6.02198, 0.44 ) }
    dend_48 { pt3dadd( -100.276, -68.5398, 6.14862, 0.44 ) }
    dend_48 { pt3dadd( -100.997, -68.9647, 6.37825, 0.66 ) }
    dend_48 { pt3dadd( -101.717, -69.4804, 6.66924, 0.66 ) }
    dend_48 { pt3dadd( -102.089, -69.8249, 6.87092, 0.52 ) }
    dend_48 { pt3dadd( -102.729, -70.657, 7.40805, 0.44 ) }
    dend_48 { pt3dadd( -102.987, -71.2423, 7.81009, 0.66 ) }
    dend_48 { pt3dadd( -103.136, -71.8543, 8.24553, 0.66 ) }
    dend_48 { pt3dadd( -103.242, -72.5621, 8.75379, 0.52 ) }
    dend_48 { pt3dadd( -103.376, -73.4998, 9.43781, 0.52 ) }
    dend_48 { pt3dadd( -103.467, -74.3576, 10.0545, 0.44 ) }
    dend_48 { pt3dadd( -103.522, -75.1109, 10.5917, 0.37 ) }
    dend_48 { pt3dadd( -103.653, -76.2817, 11.42, 0.37 ) }
    dend_48 { pt3dadd( -103.807, -77.2013, 12.0859, 0.29 ) }
    dend_48 { pt3dadd( -104.056, -78.123, 12.8023, 0.29 ) }
    dend_48 { pt3dadd( -110.836, -84.7004, 14.7837, 0.29 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 26/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -88.5505, -62.6112, 2.8791, 1.11 ) }
    dend_45 { pt3dadd( -89.5711, -63.0498, 3.05892, 1.11 ) }
    dend_45 { pt3dadd( -90.365, -63.4672, 3.18149, 1.11 ) }
    dend_45 { pt3dadd( -91.9741, -64.3741, 3.43751, 0.88 ) }
    dend_45 { pt3dadd( -93.201, -65.0274, 3.63052, 0.88 ) }
    dend_45 { pt3dadd( -95.0674, -65.9408, 3.91802, 0.88 ) }
    dend_45 { pt3dadd( -97.015, -66.8047, 4.199, 0.88 ) }
    dend_45 { pt3dadd( -98.0822, -67.2712, 4.34996, 0.88 ) }
    dend_45 { pt3dadd( -99.0745, -67.6929, 4.46346, 0.81 ) }
    dend_45 { pt3dadd( -100.19, -68.1482, 4.56055, 0.81 ) }
    dend_45 { pt3dadd( -100.996, -68.4428, 4.62436, 0.81 ) }
    dend_45 { pt3dadd( -102.428, -68.9126, 4.73921, 0.96 ) }
    dend_45 { pt3dadd( -103.176, -69.183, 4.79339, 0.96 ) }
    dend_45 { pt3dadd( -103.94, -69.5438, 4.83024, 0.96 ) }
    dend_45 { pt3dadd( -104.662, -70.0099, 4.83937, 0.96 ) }
    dend_45 { pt3dadd( -105.603, -70.7429, 4.83741, 0.96 ) }
    dend_45 { pt3dadd( -105.916, -70.9997, 4.82935, 0.96 ) }
    dend_45 { pt3dadd( -106.875, -71.7666, 4.77694, 0.88 ) }
    dend_45 { pt3dadd( -108.078, -72.6102, 4.67595, 0.88 ) }
    dend_45 { pt3dadd( -108.939, -73.1892, 4.59189, 1.11 ) }
    dend_45 { pt3dadd( -109.808, -73.7757, 4.50304, 1.11 ) }
    dend_45 { pt3dadd( -110.813, -74.4806, 4.38058, 0.96 ) }
    dend_45 { pt3dadd( -111.662, -75.1322, 4.30225, 0.96 ) }
    dend_45 { pt3dadd( -112.829, -76.1191, 4.23667, 0.88 ) }
    dend_45 { pt3dadd( -114.166, -77.3633, 4.14942, 0.88 ) }
    dend_45 { pt3dadd( -115.198, -78.3708, 4.03173, 0.96 ) }
    dend_45 { pt3dadd( -116.022, -79.1899, 3.89797, 0.96 ) }
    dend_45 { pt3dadd( -117.197, -80.3192, 3.66847, 0.88 ) }
    dend_45 { pt3dadd( -117.755, -80.8238, 3.53025, 0.74 ) }
    dend_45 { pt3dadd( -119.008, -81.8799, 3.16698, 0.96 ) }
    dend_45 { pt3dadd( -120.117, -82.7202, 2.83063, 1.11 ) }
    dend_45 { pt3dadd( -121.021, -83.3685, 2.57079, 1.25 ) }
    dend_45 { pt3dadd( -121.806, -83.9331, 2.3683, 1.25 ) }
    dend_45 { pt3dadd( -123.072, -84.8657, 2.07225, 1.03 ) }
    dend_45 { pt3dadd( -124.78, -86.209, 1.77195, 0.88 ) }
    dend_45 { pt3dadd( -126.019, -87.2795, 1.6195, 0.88 ) }
    dend_45 { pt3dadd( -127.268, -88.4365, 1.49247, 0.88 ) }
    dend_45 { pt3dadd( -128.309, -89.4149, 1.38433, 0.88 ) }
    dend_45 { pt3dadd( -129.316, -90.3201, 1.28031, 1.33 ) }
    dend_45 { pt3dadd( -130.108, -90.9627, 1.20745, 1.33 ) }
    dend_45 { pt3dadd( -131.053, -91.675, 1.11409, 1.18 ) }
    dend_45 { pt3dadd( -131.718, -92.1462, 1.04154, 0.96 ) }
    dend_45 { pt3dadd( -132.916, -92.9318, 0.921595, 0.96 ) }
    dend_45 { pt3dadd( -134.022, -93.5731, 0.828804, 0.96 ) }
    dend_45 { pt3dadd( -135.513, -94.3141, 0.75184, 0.88 ) }
    dend_45 { pt3dadd( -136.806, -94.8147, 0.743079, 0.81 ) }
    dend_45 { pt3dadd( -137.534, -95.0199, 0.778324, 0.81 ) }
    dend_45 { pt3dadd( -138.384, -95.2235, 0.84461, 0.74 ) }
    dend_45 { pt3dadd( -139.014, -95.3968, 0.905549, 0.74 ) }
    dend_45 { pt3dadd( -139.816, -95.6919, 0.993163, 0.74 ) }
    dend_45 { pt3dadd( -140.963, -96.2751, 1.1255, 0.74 ) }
    dend_45 { pt3dadd( -141.601, -96.7436, 1.19211, 1.11 ) }
    dend_45 { pt3dadd( -142.572, -97.7511, 1.27002, 1.11 ) }
    dend_45 { pt3dadd( -143.759, -99.2652, 1.33046, 0.88 ) }
    dend_45 { pt3dadd( -144.527, -100.394, 1.35669, 0.88 ) }
    dend_45 { pt3dadd( -145.115, -101.343, 1.36747, 0.88 ) }
    dend_45 { pt3dadd( -145.923, -102.668, 1.3729, 0.81 ) }
    dend_45 { pt3dadd( -147.038, -104.379, 1.32815, 0.81 ) }
    dend_45 { pt3dadd( -147.612, -105.181, 1.2841, 1.18 ) }
    dend_45 { pt3dadd( -148.245, -106.04, 1.2005, 1.33 ) }
    dend_45 { pt3dadd( -148.933, -106.907, 1.08646, 1.33 ) }
    dend_45 { pt3dadd( -150.063, -108.208, 0.877779, 0.88 ) }
    dend_45 { pt3dadd( -151.187, -109.394, 0.635795, 0.81 ) }
    dend_45 { pt3dadd( -152.367, -110.544, 0.376693, 0.81 ) }
    dend_45 { pt3dadd( -153.769, -111.843, 0.0472566, 0.81 ) }
    dend_45 { pt3dadd( -154.832, -112.787, -0.23477, 0.81 ) }
    dend_45 { pt3dadd( -155.834, -113.65, -0.510812, 1.11 ) }
    dend_45 { pt3dadd( -156.442, -114.168, -0.686578, 1.25 ) }
    dend_45 { pt3dadd( -157.17, -114.784, -0.895724, 2.14 ) }
    dend_45 { pt3dadd( -157.871, -115.414, -1.12093, 2.5 ) }
    dend_45 { pt3dadd( -158.831, -116.263, -1.42984, 1.92 ) }
    dend_45 { pt3dadd( -160.213, -117.665, -1.93928, 1.11 ) }
    dend_45 { pt3dadd( -160.803, -118.347, -2.18212, 0.96 ) }
    dend_45 { pt3dadd( -161.61, -119.37, -2.52864, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_45 { pt3dadd( -162.643, -120.75, -3.02913, 1.69 ) }
    // Section: dend_41, id: dend_41, parent: dend_33 (entry count 1/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -10.4101, -127.101, -3.20385, 0.37 ) }
    dend_41 { pt3dadd( -9.45872, -129.263, -2.6145, 0.37 ) }
    dend_41 { pt3dadd( -9.19838, -129.821, -2.48871, 0.52 ) }
    dend_41 { pt3dadd( -8.87883, -130.504, -2.3625, 0.66 ) }
    dend_41 { pt3dadd( -8.52231, -131.282, -2.23513, 0.37 ) }
    dend_41 { pt3dadd( -8.25682, -131.857, -2.14913, 0.44 ) }
    dend_41 { pt3dadd( -7.94807, -132.526, -2.05906, 0.44 ) }
    dend_41 { pt3dadd( -7.58818, -133.324, -2.02935, 0.29 ) }
    dend_41 { pt3dadd( -7.22404, -134.071, -2.00411, 0.29 ) }
    dend_41 { pt3dadd( -6.86931, -134.699, -1.99329, 0.59 ) }
    dend_41 { pt3dadd( -6.51503, -135.237, -2.00697, 0.59 ) }
    dend_41 { pt3dadd( -6.08697, -135.799, -2.04821, 0.37 ) }
    dend_41 { pt3dadd( -5.62925, -136.327, -2.11666, 0.66 ) }
    dend_41 { pt3dadd( -5.18534, -136.772, -2.19977, 0.52 ) }
    dend_41 { pt3dadd( -4.51292, -137.366, -2.35197, 0.37 ) }
    dend_41 { pt3dadd( -4.00137, -137.782, -2.48639, 0.37 ) }
    dend_41 { pt3dadd( -3.23617, -138.394, -2.71175, 0.37 ) }
    dend_41 { pt3dadd( -2.49564, -138.983, -2.95079, 1.03 ) }
    dend_41 { pt3dadd( -1.96059, -139.414, -3.13902, 1.18 ) }
    dend_41 { pt3dadd( -1.46024, -139.828, -3.33346, 0.81 ) }
    dend_41 { pt3dadd( -1.06872, -140.161, -3.49867, 0.52 ) }
    dend_41 { pt3dadd( -0.336407, -140.791, -3.80891, 0.52 ) }
    dend_41 { pt3dadd( 0.357766, -141.412, -4.10658, 0.59 ) }
    dend_41 { pt3dadd( 0.956001, -141.999, -4.39068, 0.59 ) }
    dend_41 { pt3dadd( 1.4374, -142.528, -4.63906, 0.81 ) }
    dend_41 { pt3dadd( 1.82563, -142.99, -4.84939, 0.81 ) }
    dend_41 { pt3dadd( 2.24837, -143.525, -5.09051, 0.66 ) }
    dend_41 { pt3dadd( 2.5499, -143.934, -5.27295, 0.29 ) }
    dend_41 { pt3dadd( 3.23345, -144.929, -5.70532, 0.52 ) }
    dend_41 { pt3dadd( 3.8132, -145.797, -6.07923, 1.03 ) }
    dend_41 { pt3dadd( 4.01919, -146.115, -6.21769, 1.47 ) }
    dend_41 { pt3dadd( 4.39604, -146.669, -6.47192, 1.62 ) }
    dend_41 { pt3dadd( 4.90607, -147.34, -6.81041, 1.03 ) }
    dend_41 { pt3dadd( 5.4089, -147.918, -7.11897, 0.29 ) }
    dend_41 { pt3dadd( 5.90589, -148.419, -7.39723, 0.29 ) }
    dend_41 { pt3dadd( 6.48988, -148.957, -7.72043, 0.37 ) }
    dend_41 { pt3dadd( 7.09857, -149.51, -8.05629, 0.66 ) }
    dend_41 { pt3dadd( 7.41406, -149.792, -8.22518, 0.81 ) }
    dend_41 { pt3dadd( 7.91873, -150.224, -8.47832, 0.96 ) }
    dend_41 { pt3dadd( 8.30357, -150.545, -8.65995, 0.44 ) }
    dend_41 { pt3dadd( 8.61279, -150.796, -8.79435, 0.29 ) }
    dend_41 { pt3dadd( 9.22024, -151.271, -9.03126, 0.29 ) }
    dend_41 { pt3dadd( 9.67986, -151.67, -9.20364, 0.59 ) }
    dend_41 { pt3dadd( 10.1207, -152.102, -9.36315, 0.74 ) }
    dend_41 { pt3dadd( 10.4732, -152.487, -9.48773, 0.74 ) }
    dend_41 { pt3dadd( 10.944, -153.061, -9.65412, 0.74 ) }
    dend_41 { pt3dadd( 11.3172, -153.565, -9.79211, 0.44 ) }
    dend_41 { pt3dadd( 11.8088, -154.287, -9.98123, 0.29 ) }
    dend_41 { pt3dadd( 12.0959, -154.741, -10.0991, 0.66 ) }
    dend_41 { pt3dadd( 12.4495, -155.32, -10.2548, 0.88 ) }
    dend_41 { pt3dadd( 12.7782, -155.854, -10.4044, 0.96 ) }
    dend_41 { pt3dadd( 13.2542, -156.601, -10.6126, 0.66 ) }
    dend_41 { pt3dadd( 13.747, -157.368, -10.8218, 0.37 ) }
    dend_41 { pt3dadd( 14.3346, -158.231, -11.0621, 0.74 ) }
    dend_41 { pt3dadd( 14.6633, -158.698, -11.1941, 0.81 ) }
    dend_41 { pt3dadd( 15.0439, -159.245, -11.3429, 0.37 ) }
    dend_41 { pt3dadd( 15.5527, -160.009, -11.5382, 0.37 ) }
    dend_41 { pt3dadd( 15.989, -160.695, -11.7044, 0.37 ) }
    dend_41 { pt3dadd( 16.35, -161.284, -11.8441, 0.37 ) }
    dend_41 { pt3dadd( 16.6381, -161.778, -11.9593, 0.52 ) }
    dend_41 { pt3dadd( 16.9792, -162.36, -12.1043, 0.52 ) }
    dend_41 { pt3dadd( 17.3285, -162.953, -12.264, 0.37 ) }
    dend_41 { pt3dadd( 17.6828, -163.576, -12.4416, 0.37 ) }
    dend_41 { pt3dadd( 18.0986, -164.287, -12.6494, 0.81 ) }
    dend_41 { pt3dadd( 18.3523, -164.677, -12.7732, 0.88 ) }
    dend_41 { pt3dadd( 18.7885, -165.271, -12.9822, 0.59 ) }
    dend_41 { pt3dadd( 19.1694, -165.745, -13.1604, 0.37 ) }
    dend_41 { pt3dadd( 19.5611, -166.193, -13.3407, 0.37 ) }
    dend_41 { pt3dadd( 20.0655, -166.732, -13.5657, 0.44 ) }
    dend_41 { pt3dadd( 21.1071, -167.762, -14.0167, 0.44 ) }
    dend_41 { pt3dadd( 21.7935, -168.362, -14.3062, 1.18 ) }
    dend_41 { pt3dadd( 22.3135, -168.78, -14.5196, 1.47 ) }
    dend_41 { pt3dadd( 22.8879, -169.217, -14.7627, 1.47 ) }
    dend_41 { pt3dadd( 23.7301, -169.854, -15.1335, 1.18 ) }
    dend_41 { pt3dadd( 24.3778, -170.38, -15.4399, 0.29 ) }
    dend_41 { pt3dadd( 24.7758, -170.738, -15.6452, 0.29 ) }
    dend_41 { pt3dadd( 25.073, -171.03, -15.8179, 0.29 ) }
    dend_41 { pt3dadd( 25.5873, -171.603, -16.1752, 0.59 ) }
    dend_41 { pt3dadd( 26.0682, -172.224, -16.5661, 0.66 ) }
    dend_41 { pt3dadd( 26.3214, -172.615, -16.8112, 0.74 ) }
    dend_41 { pt3dadd( 26.5738, -173.07, -17.0809, 0.59 ) }
    dend_41 { pt3dadd( 26.8454, -173.632, -17.3891, 0.44 ) }
    dend_41 { pt3dadd( 27.1636, -174.352, -17.7713, 0.29 ) }
    dend_41 { pt3dadd( 27.3443, -174.838, -18.0053, 0.37 ) }
    dend_41 { pt3dadd( 27.5989, -175.656, -18.3678, 0.52 ) }
    dend_41 { pt3dadd( 27.7685, -176.284, -18.6063, 1.03 ) }
    dend_41 { pt3dadd( 27.9273, -176.942, -18.8471, 1.55 ) }
    dend_41 { pt3dadd( 28.0674, -177.511, -19.0479, 1.55 ) }
    dend_41 { pt3dadd( 28.4148, -178.948, -19.5474, 0.44 ) }
    dend_41 { pt3dadd( 28.6548, -179.885, -19.8893, 0.37 ) }
    dend_41 { pt3dadd( 29.2773, -181.974, -20.7483, 0.29 ) }
    dend_41 { pt3dadd( 29.4419, -182.417, -20.9552, 0.29 ) }
    dend_41 { pt3dadd( 29.9862, -183.555, -21.5586, 1.47 ) }
    dend_41 { pt3dadd( 30.2183, -183.923, -21.79, 1.92 ) }
    dend_41 { pt3dadd( 30.7034, -184.511, -22.2481, 2.06 ) }
    dend_41 { pt3dadd( 31.4433, -185.229, -22.9712, 0.81 ) }
    dend_41 { pt3dadd( 32.404, -185.982, -23.9722, 0.29 ) }
    dend_41 { pt3dadd( 33.0051, -186.423, -24.6276, 0.29 ) }
    dend_41 { pt3dadd( 33.796, -186.98, -25.477, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_41 { pt3dadd( 34.1914, -187.259, -25.8731, 0.52 ) }
    dend_41 { pt3dadd( 35.1502, -187.95, -26.748, 0.29 ) }
    dend_41 { pt3dadd( 35.8772, -188.491, -27.3214, 0.88 ) }
    dend_41 { pt3dadd( 36.3181, -188.826, -27.5946, 0.74 ) }
    dend_41 { pt3dadd( 37.4089, -189.699, -28.0477, 0.29 ) }
    dend_41 { pt3dadd( 38.2085, -190.344, -28.2391, 0.29 ) }
    dend_41 { pt3dadd( 39.011, -190.995, -28.344, 0.59 ) }
    dend_41 { pt3dadd( 39.5406, -191.428, -28.3683, 0.66 ) }
    dend_41 { pt3dadd( 40.5516, -192.273, -28.38, 0.29 ) }
    dend_41 { pt3dadd( 41.5592, -193.16, -28.3965, 0.29 ) }
    dend_41 { pt3dadd( 42.2066, -193.798, -28.4425, 0.29 ) }
    dend_41 { pt3dadd( 42.7888, -194.46, -28.5147, 1.03 ) }
    dend_41 { pt3dadd( 43.2022, -194.979, -28.5953, 1.47 ) }
    dend_41 { pt3dadd( 43.5665, -195.481, -28.7003, 1.18 ) }
    dend_41 { pt3dadd( 44.2158, -196.458, -28.9524, 0.22 ) }
    dend_41 { pt3dadd( 44.7878, -197.361, -29.2065, 0.22 ) }
    dend_41 { pt3dadd( 45.5094, -198.525, -29.5615, 0.22 ) }
    dend_41 { pt3dadd( 45.8176, -199.004, -29.7144, 0.52 ) }
    dend_41 { pt3dadd( 46.3503, -199.804, -29.9807, 0.29 ) }
    dend_41 { pt3dadd( 46.854, -200.543, -30.2402, 0.29 ) }
    dend_41 { pt3dadd( 47.1722, -200.988, -30.4148, 0.88 ) }
    dend_41 { pt3dadd( 47.6144, -201.585, -30.6349, 0.88 ) }
    dend_41 { pt3dadd( 48.2705, -202.49, -30.9418, 0.29 ) }
    dend_41 { pt3dadd( 48.5734, -202.908, -31.0651, 0.29 ) }
    dend_41 { pt3dadd( 49.1178, -203.631, -31.2279, 0.96 ) }
    dend_41 { pt3dadd( 49.5115, -204.109, -31.295, 1.4 ) }
    dend_41 { pt3dadd( 49.9374, -204.593, -31.3306, 1.77 ) }
    dend_41 { pt3dadd( 50.209, -204.878, -31.3355, 1.77 ) }
    dend_41 { pt3dadd( 51.2803, -205.93, -31.3335, 0.22 ) }
    dend_41 { pt3dadd( 52.3882, -206.937, -31.299, 0.22 ) }
    dend_41 { pt3dadd( 53.261, -207.664, -31.2761, 0.88 ) }
    dend_41 { pt3dadd( 53.6534, -207.978, -31.2759, 1.33 ) }
    dend_41 { pt3dadd( 54.0519, -208.288, -31.2969, 1.33 ) }
    dend_41 { pt3dadd( 54.9568, -208.972, -31.3718, 0.22 ) }
    dend_41 { pt3dadd( 56.069, -209.795, -31.511, 0.22 ) }
    dend_41 { pt3dadd( 57.236, -210.681, -31.7226, 0.22 ) }
    dend_41 { pt3dadd( 58.2821, -211.525, -31.9727, 0.22 ) }
    dend_41 { pt3dadd( 58.8854, -212.04, -32.14, 0.74 ) }
    dend_41 { pt3dadd( 59.2073, -212.336, -32.2421, 0.88 ) }
    dend_41 { pt3dadd( 59.5782, -212.713, -32.3814, 0.52 ) }
    dend_41 { pt3dadd( 60.214, -213.477, -32.6752, 0.22 ) }
    dend_41 { pt3dadd( 60.5277, -213.913, -32.8365, 0.88 ) }
    dend_41 { pt3dadd( 60.8702, -214.43, -33.0096, 1.33 ) }
    dend_41 { pt3dadd( 61.1416, -214.86, -33.1393, 1.33 ) }
    dend_41 { pt3dadd( 61.7733, -215.913, -33.4233, 0.29 ) }
    dend_41 { pt3dadd( 62.5097, -217.205, -33.7199, 0.29 ) }
    dend_41 { pt3dadd( 62.8681, -217.848, -33.8402, 0.44 ) }
    dend_41 { pt3dadd( 63.1827, -218.413, -33.9243, 0.59 ) }
    dend_41 { pt3dadd( 63.4723, -218.932, -33.984, 0.59 ) }
    dend_41 { pt3dadd( 63.9402, -219.762, -34.0549, 0.22 ) }
    dend_41 { pt3dadd( 64.4173, -220.614, -34.111, 0.22 ) }
    dend_41 { pt3dadd( 64.7139, -221.134, -34.146, 0.74 ) }
    dend_41 { pt3dadd( 64.892, -221.444, -34.1731, 0.88 ) }
    dend_41 { pt3dadd( 65.1271, -221.84, -34.2254, 0.88 ) }
    dend_41 { pt3dadd( 65.5975, -222.613, -34.3348, 0.22 ) }
    dend_41 { pt3dadd( 66.4283, -223.922, -34.553, 0.22 ) }
    dend_41 { pt3dadd( 66.7966, -224.496, -34.6696, 0.52 ) }
    dend_41 { pt3dadd( 67.0336, -224.87, -34.7575, 0.66 ) }
    dend_41 { pt3dadd( 67.4022, -225.451, -34.9073, 0.44 ) }
    dend_41 { pt3dadd( 72.6334, -231.321, -38.3394, 0.44 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 60/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -10.4101, -127.101, -3.20385, 2.28 ) }
    dend_34 { pt3dadd( -11.01, -128.448, -2.92602, 2.28 ) }
    dend_34 { pt3dadd( -11.5757, -129.6, -2.62143, 1.62 ) }
    dend_34 { pt3dadd( -12.3028, -130.969, -2.24444, 1.33 ) }
    dend_34 { pt3dadd( -13.0357, -132.255, -1.9021, 0.88 ) }
    dend_34 { pt3dadd( -13.3965, -132.848, -1.7513, 0.88 ) }
    dend_34 { pt3dadd( -13.9721, -133.717, -1.53663, 1.03 ) }
    dend_34 { pt3dadd( -15.1276, -135.27, -1.16385, 1.03 ) }
    dend_34 { pt3dadd( -16.131, -136.454, -0.89024, 0.96 ) }
    dend_34 { pt3dadd( -16.9327, -137.309, -0.722161, 0.88 ) }
    dend_34 { pt3dadd( -17.6215, -138.038, -0.626381, 1.11 ) }
    dend_34 { pt3dadd( -18.3777, -138.918, -0.589428, 1.33 ) }
    dend_34 { pt3dadd( -18.9716, -139.756, -0.627846, 1.55 ) }
    dend_34 { pt3dadd( -19.4462, -140.613, -0.732523, 1.25 ) }
    dend_34 { pt3dadd( -19.7881, -141.479, -0.879991, 0.96 ) }
    dend_34 { pt3dadd( -20.077, -142.67, -1.11178, 0.88 ) }
    dend_34 { pt3dadd( -20.2856, -144.151, -1.42884, 0.88 ) }
    dend_34 { pt3dadd( -20.4076, -145.734, -1.7723, 0.88 ) }
    dend_34 { pt3dadd( -20.4665, -147.128, -2.06846, 1.03 ) }
    dend_34 { pt3dadd( -20.4874, -148.431, -2.33325, 1.03 ) }
    dend_34 { pt3dadd( -20.4936, -149.965, -2.61592, 1.03 ) }
    dend_34 { pt3dadd( -20.4856, -151.363, -2.84378, 1.25 ) }
    dend_34 { pt3dadd( -20.4498, -152.977, -3.06027, 1.55 ) }
    dend_34 { pt3dadd( -20.39, -154.212, -3.18884, 1.55 ) }
    dend_34 { pt3dadd( -20.2509, -155.914, -3.32507, 1.33 ) }
    dend_34 { pt3dadd( -20.1052, -157.305, -3.41251, 1.33 ) }
    dend_34 { pt3dadd( -19.9766, -158.548, -3.47513, 1.11 ) }
    dend_34 { pt3dadd( -19.8281, -159.877, -3.4863, 1.11 ) }
    dend_34 { pt3dadd( -19.6895, -161.339, -3.4503, 0.96 ) }
    dend_34 { pt3dadd( -19.6212, -162.427, -3.39396, 0.96 ) }
    dend_34 { pt3dadd( -19.5757, -164.001, -3.25322, 0.88 ) }
    dend_34 { pt3dadd( -19.5712, -166.079, -3.01424, 0.88 ) }
    dend_34 { pt3dadd( -19.6066, -167.881, -2.76035, 1.03 ) }
    dend_34 { pt3dadd( -19.6672, -169.485, -2.49892, 1.25 ) }
    dend_34 { pt3dadd( -19.7525, -171.01, -2.22709, 1.33 ) }
    dend_34 { pt3dadd( -19.8371, -172.211, -2.00021, 1.62 ) }
    dend_34 { pt3dadd( -19.9132, -173.445, -1.75245, 2.5 ) }
    dend_34 { pt3dadd( -19.9321, -174.115, -1.62135, 2.8 ) }
    dend_34 { pt3dadd( -19.941, -174.944, -1.49779, 3.02 ) }
    dend_34 { pt3dadd( -19.916, -175.722, -1.37893, 3.02 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_34 { pt3dadd( -19.8939, -176.243, -1.30218, 3.32 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 1/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -1.60553, -59.8776, -8.09932, 0.81 ) }
    dend_30 { pt3dadd( -1.9673, -61.3452, -8.139, 0.81 ) }
    dend_30 { pt3dadd( -2.29564, -62.3283, -8.14966, 0.66 ) }
    dend_30 { pt3dadd( -2.73598, -63.4229, -8.16703, 0.66 ) }
    dend_30 { pt3dadd( -3.24113, -64.5668, -8.19552, 0.52 ) }
    dend_30 { pt3dadd( -3.44934, -65.0235, -8.20962, 0.52 ) }
    dend_30 { pt3dadd( -3.99944, -66.2265, -8.25147, 0.74 ) }
    dend_30 { pt3dadd( -4.56581, -67.4495, -8.24134, 0.74 ) }
    dend_30 { pt3dadd( -5.05933, -68.4597, -8.25042, 0.88 ) }
    dend_30 { pt3dadd( -5.62248, -69.5529, -8.29558, 0.59 ) }
    dend_30 { pt3dadd( -5.985, -70.2654, -8.35329, 1.03 ) }
    dend_30 { pt3dadd( -6.3167, -70.9661, -8.41026, 1.25 ) }
    dend_30 { pt3dadd( -6.64777, -71.7933, -8.46273, 1.03 ) }
    dend_30 { pt3dadd( -7.0026, -72.8659, -8.51389, 0.66 ) }
    dend_30 { pt3dadd( -7.27, -73.7419, -8.5532, 0.66 ) }
    dend_30 { pt3dadd( -7.5404, -74.6462, -8.60646, 0.81 ) }
    dend_30 { pt3dadd( -7.83248, -75.7061, -8.69242, 0.81 ) }
    dend_30 { pt3dadd( -8.03345, -76.5954, -8.79086, 0.66 ) }
    dend_30 { pt3dadd( -8.18275, -77.5409, -8.91912, 0.52 ) }
    dend_30 { pt3dadd( -8.23832, -78.1039, -9.02057, 0.52 ) }
    dend_30 { pt3dadd( -8.2931, -78.7945, -9.1603, 0.52 ) }
    dend_30 { pt3dadd( -8.36892, -79.7787, -9.38445, 0.66 ) }
    dend_30 { pt3dadd( -8.44997, -80.6717, -9.60126, 0.66 ) }
    dend_30 { pt3dadd( -8.55267, -81.6141, -9.84474, 0.59 ) }
    dend_30 { pt3dadd( -8.69145, -82.6459, -10.1107, 1.18 ) }
    dend_30 { pt3dadd( -8.80798, -83.5449, -10.3319, 1.55 ) }
    dend_30 { pt3dadd( -8.94216, -84.4034, -10.5327, 1.99 ) }
    dend_30 { pt3dadd( -9.18138, -85.4377, -10.7762, 2.73 ) }
    dend_30 { pt3dadd( -9.41641, -86.1987, -10.9574, 2.87 ) }
    dend_30 { pt3dadd( -9.67503, -86.9058, -11.1399, 3.02 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 31/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -1.60553, -59.8776, -8.09932, 0.52 ) }
    dend_29 { pt3dadd( -1.04246, -61.2178, -9.32773, 0.52 ) }
    dend_29 { pt3dadd( -0.918121, -61.5339, -9.58567, 0.52 ) }
    dend_29 { pt3dadd( -0.480202, -62.5781, -10.4402, 0.52 ) }
    dend_29 { pt3dadd( -0.116335, -63.3521, -11.0832, 0.66 ) }
    dend_29 { pt3dadd( 0.129998, -63.8256, -11.4624, 0.66 ) }
    dend_29 { pt3dadd( 0.361549, -64.2254, -11.7768, 0.44 ) }
    dend_29 { pt3dadd( 0.63877, -64.7774, -12.2037, 0.88 ) }
    dend_29 { pt3dadd( 0.887541, -65.2962, -12.5676, 1.33 ) }
    dend_29 { pt3dadd( 1.1652, -65.8554, -12.9238, 1.47 ) }
    dend_29 { pt3dadd( 1.47868, -66.5025, -13.4056, 1.03 ) }
    dend_29 { pt3dadd( 1.83613, -67.5081, -14.2627, 0.44 ) }
    dend_29 { pt3dadd( 1.87573, -68.1204, -14.8905, 0.44 ) }
    dend_29 { pt3dadd( 1.72495, -68.8202, -15.7992, 0.37 ) }
    dend_29 { pt3dadd( 1.53109, -69.3263, -16.577, 0.37 ) }
    dend_29 { pt3dadd( 1.27463, -69.9751, -17.7446, 0.37 ) }
    dend_29 { pt3dadd( 1.13068, -70.3996, -18.6306, 0.74 ) }
    dend_29 { pt3dadd( 1.07084, -70.6883, -19.3002, 0.96 ) }
    dend_29 { pt3dadd( 1.06654, -71.0903, -20.2216, 0.96 ) }
    dend_29 { pt3dadd( 1.13728, -71.8213, -21.8331, 0.44 ) }
    dend_29 { pt3dadd( 1.24462, -72.3255, -22.8551, 1.33 ) }
    dend_29 { pt3dadd( 1.43989, -73.0199, -24.1373, 1.55 ) }
    dend_29 { pt3dadd( 1.62493, -73.6598, -25.2533, 1.33 ) }
    dend_29 { pt3dadd( 1.8844, -74.5345, -26.6499, 0.81 ) }
    dend_29 { pt3dadd( 2.00488, -74.91, -27.1882, 1.25 ) }
    dend_29 { pt3dadd( 2.17661, -75.3764, -27.7736, 0.88 ) }
    dend_29 { pt3dadd( 2.35844, -75.9013, -28.3355, 0.37 ) }
    dend_29 { pt3dadd( 2.51067, -76.3648, -28.7448, 0.81 ) }
    dend_29 { pt3dadd( 2.66197, -76.8621, -29.1297, 1.03 ) }
    dend_29 { pt3dadd( 2.76351, -77.1617, -29.3352, 1.03 ) }
    dend_29 { pt3dadd( 3.15504, -78.2007, -30.0156, 0.29 ) }
    dend_29 { pt3dadd( 3.36904, -78.7287, -30.3394, 0.29 ) }
    dend_29 { pt3dadd( 3.68119, -79.4133, -30.7282, 1.84 ) }
    dend_29 { pt3dadd( 3.98852, -79.99, -31.0583, 2.14 ) }
    dend_29 { pt3dadd( 4.86036, -81.4135, -31.9233, 0.29 ) }
    dend_29 { pt3dadd( 5.31903, -82.0661, -32.3367, 0.81 ) }
    dend_29 { pt3dadd( 5.7919, -82.6526, -32.72, 0.81 ) }
    dend_29 { pt3dadd( 6.29048, -83.1991, -33.1052, 0.52 ) }
    dend_29 { pt3dadd( 6.97677, -83.8726, -33.6425, 1.25 ) }
    dend_29 { pt3dadd( 7.42698, -84.2816, -34.0055, 1.4 ) }
    dend_29 { pt3dadd( 8.58567, -85.2933, -34.9393, 0.22 ) }
    dend_29 { pt3dadd( 9.30166, -85.9092, -35.4874, 0.22 ) }
    dend_29 { pt3dadd( 10.1134, -86.6138, -36.0762, 1.4 ) }
    dend_29 { pt3dadd( 10.6211, -87.0826, -36.4256, 2.21 ) }
    dend_29 { pt3dadd( 10.8534, -87.3153, -36.5709, 2.21 ) }
    dend_29 { pt3dadd( 12.359, -88.9593, -37.4238, 0.22 ) }
    dend_29 { pt3dadd( 12.7622, -89.4228, -37.6417, 0.74 ) }
    dend_29 { pt3dadd( 13.1181, -89.8528, -37.8407, 1.03 ) }
    dend_29 { pt3dadd( 13.6911, -90.5978, -38.1722, 0.59 ) }
    dend_29 { pt3dadd( 15.0258, -92.4377, -38.9616, 0.22 ) }
    dend_29 { pt3dadd( 16.7143, -94.8293, -40.0021, 0.22 ) }
    dend_29 { pt3dadd( 17.3014, -95.6795, -40.3981, 0.81 ) }
    dend_29 { pt3dadd( 17.7365, -96.3079, -40.7036, 0.96 ) }
    dend_29 { pt3dadd( 19.1463, -98.3555, -41.7397, 0.22 ) }
    dend_29 { pt3dadd( 20.0266, -99.6193, -42.4303, 0.22 ) }
    dend_29 { pt3dadd( 20.5107, -100.317, -42.8505, 0.88 ) }
    dend_29 { pt3dadd( 20.9864, -100.994, -43.3036, 0.88 ) }
    dend_29 { pt3dadd( 22.3251, -102.885, -44.6236, 0.15 ) }
    dend_29 { pt3dadd( 23.3403, -104.266, -45.5624, 0.15 ) }
    dend_29 { pt3dadd( 23.9358, -105.047, -46.1034, 0.15 ) }
    dend_29 { pt3dadd( 24.477, -105.758, -46.5864, 1.62 ) }
    dend_29 { pt3dadd( 24.814, -106.217, -46.8798, 1.92 ) }
    dend_29 { pt3dadd( 25.0821, -106.586, -47.0913, 1.92 ) }
    dend_29 { pt3dadd( 26.8201, -109.039, -48.3814, 0.22 ) }
    dend_29 { pt3dadd( 27.1932, -109.563, -48.6336, 0.66 ) }
    dend_29 { pt3dadd( 27.4768, -109.971, -48.8184, 0.88 ) }
    dend_29 { pt3dadd( 27.7678, -110.387, -49.0094, 0.88 ) }
    dend_29 { pt3dadd( 28.6934, -111.744, -49.7365, 0.15 ) }
    dend_29 { pt3dadd( 29.3669, -112.843, -50.445, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_29 { pt3dadd( 29.7164, -113.512, -50.9377, 0.81 ) }
    dend_29 { pt3dadd( 29.9216, -113.991, -51.3003, 1.03 ) }
    dend_29 { pt3dadd( 30.07, -114.425, -51.635, 1.03 ) }
    dend_29 { pt3dadd( 30.4315, -115.885, -52.7934, 0.22 ) }
    dend_29 { pt3dadd( 30.6634, -117.471, -54.0981, 0.22 ) }
    dend_29 { pt3dadd( 30.7317, -118.117, -54.6653, 0.22 ) }
    dend_29 { pt3dadd( 30.8149, -119.051, -55.5329, 1.03 ) }
    dend_29 { pt3dadd( 30.86, -119.536, -55.9883, 1.62 ) }
    dend_29 { pt3dadd( 30.9055, -120.026, -56.4739, 1.62 ) }
    dend_29 { pt3dadd( 30.9974, -120.852, -57.3462, 1.03 ) }
    dend_29 { pt3dadd( 31.2203, -122.542, -59.2222, 0.22 ) }
    dend_29 { pt3dadd( 31.3185, -123.333, -60.195, 0.44 ) }
    dend_29 { pt3dadd( 31.386, -123.766, -60.7589, 0.44 ) }
    dend_29 { pt3dadd( 31.5475, -124.723, -62.0128, 0.66 ) }
    dend_29 { pt3dadd( 31.64, -125.206, -62.6275, 0.96 ) }
    dend_29 { pt3dadd( 31.7607, -125.762, -63.3239, 0.37 ) }
    dend_29 { pt3dadd( 32.1932, -127.547, -65.4717, 0.66 ) }
    dend_29 { pt3dadd( 32.2974, -127.914, -65.9013, 0.66 ) }
    dend_29 { pt3dadd( 32.7061, -129.245, -67.4753, 0.22 ) }
    dend_29 { pt3dadd( 32.9536, -129.948, -68.2725, 0.22 ) }
    dend_29 { pt3dadd( 33.1988, -130.574, -68.9676, 0.81 ) }
    dend_29 { pt3dadd( 33.4625, -131.137, -69.5744, 0.96 ) }
    dend_29 { pt3dadd( 33.6686, -131.503, -69.8736, 0.96 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 23/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 23.6905, 186.796, -35.9828, 0.37 ) }
    dend_24 { pt3dadd( 24.5776, 186.312, -34.4708, 0.37 ) }
    dend_24 { pt3dadd( 24.7586, 186.214, -34.1623, 0.37 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 26/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 23.6905, 186.796, -35.9828, 0.22 ) }
    dend_23 { pt3dadd( 25.0226, 189.681, -36.2757, 0.22 ) }
    dend_23 { pt3dadd( 25.6952, 191.25, -36.496, 0.22 ) }
    dend_23 { pt3dadd( 26.2072, 192.492, -36.6959, 0.74 ) }
    dend_23 { pt3dadd( 26.387, 192.953, -36.7733, 0.74 ) }
    dend_23 { pt3dadd( 27.2199, 195.089, -37.132, 0.15 ) }
    dend_23 { pt3dadd( 27.7589, 196.47, -37.364, 0.15 ) }
    dend_23 { pt3dadd( 28.138, 197.467, -37.6427, 0.66 ) }
    dend_23 { pt3dadd( 28.3305, 198.084, -37.7889, 0.88 ) }
    dend_23 { pt3dadd( 28.5387, 198.791, -37.9156, 0.29 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 36/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -9.16909, 46.7972, 2.42477, 0.66 ) }
    dend_17 { pt3dadd( -9.51795, 48.995, 2.23133, 0.66 ) }
    dend_17 { pt3dadd( -9.5917, 49.8249, 2.20294, 0.96 ) }
    dend_17 { pt3dadd( -9.67645, 50.7979, 2.18753, 0.96 ) }
    dend_17 { pt3dadd( -9.7866, 52.1267, 2.18392, 0.59 ) }
    dend_17 { pt3dadd( -9.87283, 53.3036, 2.19195, 0.59 ) }
    dend_17 { pt3dadd( -9.9555, 54.6948, 2.2128, 0.59 ) }
    dend_17 { pt3dadd( -10.0412, 56.714, 2.31249, 0.59 ) }
    dend_17 { pt3dadd( -10.0541, 57.6661, 2.36859, 0.52 ) }
    dend_17 { pt3dadd( -10.0455, 59.088, 2.46363, 0.88 ) }
    dend_17 { pt3dadd( -10.0387, 60.1189, 2.52514, 1.11 ) }
    dend_17 { pt3dadd( -10.0517, 61.3497, 2.57912, 1.11 ) }
    dend_17 { pt3dadd( -10.0857, 62.7671, 2.63898, 0.74 ) }
    dend_17 { pt3dadd( -10.1534, 64.2534, 2.6972, 0.74 ) }
    dend_17 { pt3dadd( -10.2593, 66.1553, 2.77412, 0.74 ) }
    dend_17 { pt3dadd( -10.3559, 67.4677, 2.81525, 0.52 ) }
    dend_17 { pt3dadd( -10.4837, 68.8723, 2.83451, 0.52 ) }
    dend_17 { pt3dadd( -10.586, 69.8845, 2.83339, 0.96 ) }
    dend_17 { pt3dadd( -10.7357, 71.3801, 2.79985, 1.11 ) }
    dend_17 { pt3dadd( -10.9579, 73.5993, 2.71208, 1.11 ) }
    dend_17 { pt3dadd( -11.0992, 75.0582, 2.63586, 1.11 ) }
    dend_17 { pt3dadd( -11.2195, 76.5117, 2.57438, 0.81 ) }
    dend_17 { pt3dadd( -11.3054, 77.7889, 2.53276, 0.74 ) }
    dend_17 { pt3dadd( -11.3683, 79.119, 2.50687, 0.74 ) }
    dend_17 { pt3dadd( -11.3982, 80.3651, 2.5071, 0.44 ) }
    dend_17 { pt3dadd( -11.419, 81.4183, 2.52984, 0.44 ) }
    dend_17 { pt3dadd( -11.4672, 83.1497, 2.61289, 0.74 ) }
    dend_17 { pt3dadd( -11.5039, 84.3438, 2.69432, 0.74 ) }
    dend_17 { pt3dadd( -11.5371, 85.6129, 2.79282, 0.37 ) }
    dend_17 { pt3dadd( -11.5365, 86.9296, 2.90919, 0.74 ) }
    dend_17 { pt3dadd( -11.5129, 88.0808, 2.97154, 0.96 ) }
    dend_17 { pt3dadd( -11.4656, 89.4029, 2.99391, 0.96 ) }
    dend_17 { pt3dadd( -11.3925, 90.8605, 2.94731, 0.81 ) }
    dend_17 { pt3dadd( -11.3047, 92.2302, 2.86453, 0.52 ) }
    dend_17 { pt3dadd( -11.1892, 93.6627, 2.74761, 0.52 ) }
    dend_17 { pt3dadd( -10.9859, 95.5429, 2.57319, 1.03 ) }
    dend_17 { pt3dadd( -10.8561, 96.5423, 2.47427, 1.55 ) }
    dend_17 { pt3dadd( -10.7287, 97.446, 2.37801, 1.69 ) }
    dend_17 { pt3dadd( -10.6446, 98.0347, 2.31591, 1.69 ) }
    dend_17 { pt3dadd( -10.4338, 99.4897, 2.1883, 0.37 ) }
    dend_17 { pt3dadd( -10.258, 100.705, 2.12691, 0.44 ) }
    dend_17 { pt3dadd( -10.1493, 101.336, 2.1373, 0.44 ) }
    dend_17 { pt3dadd( -10.006, 102.061, 2.17387, 0.44 ) }
    dend_17 { pt3dadd( -9.74941, 103.26, 2.2656, 0.29 ) }
    dend_17 { pt3dadd( -9.62379, 103.77, 2.31044, 0.59 ) }
    dend_17 { pt3dadd( -9.3735, 104.633, 2.39603, 0.44 ) }
    dend_17 { pt3dadd( -8.96466, 105.991, 2.53843, 0.29 ) }
    dend_17 { pt3dadd( -8.60623, 107.251, 2.67144, 1.18 ) }
    dend_17 { pt3dadd( -8.4259, 107.928, 2.74369, 1.18 ) }
    dend_17 { pt3dadd( -8.16254, 108.946, 2.84854, 0.52 ) }
    dend_17 { pt3dadd( -7.91166, 109.923, 2.94866, 0.29 ) }
    dend_17 { pt3dadd( -7.62284, 111.036, 3.09512, 0.29 ) }
    dend_17 { pt3dadd( -7.38859, 112.042, 3.27776, 0.29 ) }
    dend_17 { pt3dadd( -7.26145, 112.7, 3.42286, 0.29 ) }
    dend_17 { pt3dadd( -7.05773, 114.009, 3.74819, 0.81 ) }
    dend_17 { pt3dadd( -6.90383, 115.156, 4.05852, 0.44 ) }
    dend_17 { pt3dadd( -6.7359, 116.254, 4.35198, 0.22 ) }
    dend_17 { pt3dadd( -6.51615, 117.362, 4.6428, 0.44 ) }
    dend_17 { pt3dadd( -6.42342, 117.786, 4.75983, 0.44 ) }
    dend_17 { pt3dadd( -6.23184, 118.696, 5.01401, 0.29 ) }
    dend_17 { pt3dadd( -6.07789, 119.519, 5.24607, 0.29 ) }
    dend_17 { pt3dadd( -5.85927, 120.643, 5.53998, 0.29 ) }
    dend_17 { pt3dadd( -5.70969, 121.362, 5.70326, 0.29 ) }
    dend_17 { pt3dadd( -5.50868, 122.288, 5.90385, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_17 { pt3dadd( -5.3515, 123.04, 6.07326, 0.66 ) }
    dend_17 { pt3dadd( -5.15474, 123.993, 6.2625, 0.74 ) }
    dend_17 { pt3dadd( -4.98427, 125.03, 6.46572, 0.37 ) }
    dend_17 { pt3dadd( -4.8767, 125.843, 6.62387, 0.37 ) }
    dend_17 { pt3dadd( -4.72665, 126.98, 6.81007, 0.52 ) }
    dend_17 { pt3dadd( -4.60345, 127.84, 6.91906, 0.59 ) }
    dend_17 { pt3dadd( -4.41001, 129.15, 7.06759, 0.44 ) }
    dend_17 { pt3dadd( -4.26816, 130.073, 7.16425, 0.29 ) }
    dend_17 { pt3dadd( -4.16143, 130.72, 7.2364, 0.29 ) }
    dend_17 { pt3dadd( -3.93109, 132.149, 7.41232, 1.11 ) }
    dend_17 { pt3dadd( -3.80331, 132.967, 7.52202, 1.25 ) }
    dend_17 { pt3dadd( -3.71464, 133.551, 7.60643, 1.25 ) }
    dend_17 { pt3dadd( -3.50929, 134.776, 7.7878, 0.66 ) }
    dend_17 { pt3dadd( -3.35767, 135.508, 7.87891, 0.29 ) }
    dend_17 { pt3dadd( -3.08381, 136.645, 8.0135, 0.29 ) }
    dend_17 { pt3dadd( -2.80942, 137.661, 8.12947, 0.29 ) }
    dend_17 { pt3dadd( -2.5342, 138.58, 8.23187, 0.29 ) }
    dend_17 { pt3dadd( -2.08945, 139.953, 8.3782, 0.96 ) }
    dend_17 { pt3dadd( -1.89291, 140.549, 8.43193, 1.47 ) }
    dend_17 { pt3dadd( -1.73704, 141.06, 8.46735, 1.47 ) }
    dend_17 { pt3dadd( -1.65467, 141.361, 8.48182, 1.47 ) }
    dend_17 { pt3dadd( -1.44745, 142.244, 8.5187, 0.74 ) }
    dend_17 { pt3dadd( -1.23463, 143.258, 8.56429, 0.29 ) }
    dend_17 { pt3dadd( -1.04788, 144.297, 8.61338, 0.52 ) }
    dend_17 { pt3dadd( -0.875355, 145.257, 8.66476, 0.74 ) }
    dend_17 { pt3dadd( -0.62884, 146.476, 8.74447, 0.44 ) }
    dend_17 { pt3dadd( -0.40831, 147.445, 8.81806, 0.29 ) }
    dend_17 { pt3dadd( -0.234891, 148.125, 8.87575, 0.29 ) }
    dend_17 { pt3dadd( 0.0398877, 149.057, 8.96686, 0.66 ) }
    dend_17 { pt3dadd( 0.257621, 149.722, 9.03498, 0.74 ) }
    dend_17 { pt3dadd( 0.5769, 150.659, 9.13146, 0.74 ) }
    dend_17 { pt3dadd( 0.925528, 151.71, 9.24559, 0.29 ) }
    dend_17 { pt3dadd( 1.21779, 152.65, 9.34979, 0.29 ) }
    dend_17 { pt3dadd( 1.76242, 154.543, 9.56028, 0.29 ) }
    dend_17 { pt3dadd( 2.08317, 155.833, 9.75913, 0.52 ) }
    dend_17 { pt3dadd( 2.24964, 156.612, 9.90383, 1.18 ) }
    dend_17 { pt3dadd( 2.36891, 157.287, 10.0452, 1.4 ) }
    dend_17 { pt3dadd( 2.52188, 158.386, 10.2942, 1.4 ) }
    dend_17 { pt3dadd( 2.61165, 159.25, 10.4987, 0.66 ) }
    dend_17 { pt3dadd( 2.79548, 161.274, 10.9791, 0.29 ) }
    dend_17 { pt3dadd( 2.93167, 162.55, 11.259, 0.29 ) }
    dend_17 { pt3dadd( 3.04467, 163.32, 11.3908, 0.37 ) }
    dend_17 { pt3dadd( 3.23511, 164.359, 11.5192, 0.37 ) }
    dend_17 { pt3dadd( 3.46983, 165.432, 11.6135, 0.37 ) }
    dend_17 { pt3dadd( 3.95609, 167.333, 11.7143, 0.37 ) }
    dend_17 { pt3dadd( 4.5718, 169.399, 11.7336, 0.37 ) }
    dend_17 { pt3dadd( 5.22499, 171.402, 11.7396, 1.33 ) }
    dend_17 { pt3dadd( 5.57492, 172.363, 11.7293, 1.99 ) }
    dend_17 { pt3dadd( 5.87179, 173.125, 11.7125, 1.99 ) }
    dend_17 { pt3dadd( 5.99915, 173.447, 11.7019, 1.99 ) }
    dend_17 { pt3dadd( 6.23667, 174.043, 11.6833, 1.99 ) }
    dend_17 { pt3dadd( 6.73296, 175.284, 11.6675, 0.59 ) }
    dend_17 { pt3dadd( 7.31043, 176.723, 11.7011, 0.29 ) }
    dend_17 { pt3dadd( 7.71525, 177.727, 11.7795, 0.59 ) }
    dend_17 { pt3dadd( 8.02945, 178.502, 11.8644, 0.59 ) }
    dend_17 { pt3dadd( 8.6879, 180.124, 12.0885, 0.37 ) }
    dend_17 { pt3dadd( 9.03855, 181.024, 12.2355, 0.37 ) }
    dend_17 { pt3dadd( 9.57118, 182.482, 12.509, 0.37 ) }
    dend_17 { pt3dadd( 10.1586, 184.238, 12.8738, 0.74 ) }
    dend_17 { pt3dadd( 10.3687, 184.961, 13.0188, 0.74 ) }
    dend_17 { pt3dadd( 10.5464, 185.71, 13.169, 0.88 ) }
    dend_17 { pt3dadd( 10.7417, 186.8, 13.382, 0.44 ) }
    dend_17 { pt3dadd( 10.9941, 188.689, 13.6948, 0.29 ) }
    dend_17 { pt3dadd( 11.0869, 189.703, 13.7996, 0.52 ) }
    dend_17 { pt3dadd( 11.2061, 191.595, 13.8711, 1.25 ) }
    dend_17 { pt3dadd( 11.2405, 192.403, 13.8762, 1.62 ) }
    dend_17 { pt3dadd( 11.2615, 192.935, 13.8535, 1.62 ) }
    dend_17 { pt3dadd( 11.3043, 194.029, 13.7586, 0.96 ) }
    dend_17 { pt3dadd( 11.3871, 195.664, 13.5451, 0.29 ) }
    dend_17 { pt3dadd( 11.462, 196.604, 13.4064, 0.29 ) }
    dend_17 { pt3dadd( 11.5845, 197.747, 13.2509, 0.29 ) }
    dend_17 { pt3dadd( 11.7134, 198.942, 13.1245, 0.74 ) }
    dend_17 { pt3dadd( 11.7617, 199.484, 13.0904, 0.96 ) }
    dend_17 { pt3dadd( 11.8072, 200.111, 13.0791, 0.96 ) }
    dend_17 { pt3dadd( 11.9066, 201.699, 13.0881, 0.52 ) }
    dend_17 { pt3dadd( 12.0413, 203.891, 13.089, 0.37 ) }
    dend_17 { pt3dadd( 12.1284, 205.395, 13.0932, 0.29 ) }
    dend_17 { pt3dadd( 12.1938, 206.814, 13.0869, 0.66 ) }
    dend_17 { pt3dadd( 12.233, 207.767, 13.0632, 0.66 ) }
    dend_17 { pt3dadd( 12.2928, 209.556, 12.9826, 0.29 ) }
    dend_17 { pt3dadd( 12.3225, 210.444, 12.9356, 0.29 ) }
    dend_17 { pt3dadd( 12.4113, 212.785, 12.8075, 0.29 ) }
    dend_17 { pt3dadd( 12.5399, 215.332, 12.6828, 1.99 ) }
    dend_17 { pt3dadd( 12.5698, 215.91, 12.663, 2.28 ) }
    dend_17 { pt3dadd( 12.6022, 216.727, 12.6522, 1.55 ) }
    dend_17 { pt3dadd( 12.6247, 217.62, 12.681, 0.88 ) }
    dend_17 { pt3dadd( 12.6308, 219.075, 12.8038, 0.22 ) }
    dend_17 { pt3dadd( 12.618, 219.755, 12.8889, 0.22 ) }
    dend_17 { pt3dadd( 12.5763, 220.996, 13.086, 0.66 ) }
    dend_17 { pt3dadd( 12.5494, 221.78, 13.2106, 0.66 ) }
    dend_17 { pt3dadd( 12.5156, 223.108, 13.4099, 0.29 ) }
    dend_17 { pt3dadd( 12.4763, 225.235, 13.6883, 0.22 ) }
    dend_17 { pt3dadd( 12.4838, 226.313, 13.8202, 0.22 ) }
    dend_17 { pt3dadd( 12.5221, 227.454, 13.9466, 0.52 ) }
    dend_17 { pt3dadd( 12.6398, 228.882, 14.087, 0.44 ) }
    dend_17 { pt3dadd( 12.7997, 230.126, 14.1951, 0.44 ) }
    dend_17 { pt3dadd( 13.0427, 231.561, 14.2959, 0.44 ) }
    dend_17 { pt3dadd( 13.5205, 233.787, 14.4401, 0.22 ) }
    dend_17 { pt3dadd( 13.9185, 235.442, 14.5463, 0.66 ) }
    dend_17 { pt3dadd( 14.2775, 236.781, 14.6326, 1.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_17 { pt3dadd( 14.4856, 237.489, 14.6796, 1.77 ) }
    dend_17 { pt3dadd( 14.69, 238.123, 14.7244, 1.77 ) }
    dend_17 { pt3dadd( 15.0305, 239.05, 14.7989, 0.88 ) }
    dend_17 { pt3dadd( 15.4357, 240.079, 14.927, 0.29 ) }
    dend_17 { pt3dadd( 15.7161, 240.775, 15.041, 0.52 ) }
    dend_17 { pt3dadd( 16.4184, 242.575, 15.3741, 0.22 ) }
    dend_17 { pt3dadd( 16.8215, 243.602, 15.5591, 0.52 ) }
    dend_17 { pt3dadd( 17.2819, 244.759, 15.7537, 0.52 ) }
    dend_17 { pt3dadd( 18.2834, 247.305, 16.1475, 0.22 ) }
    dend_17 { pt3dadd( 19.0463, 249.254, 16.4181, 0.37 ) }
    dend_17 { pt3dadd( 19.5407, 250.537, 16.5897, 0.37 ) }
    dend_17 { pt3dadd( 20.0763, 251.966, 16.7664, 1.92 ) }
    dend_17 { pt3dadd( 20.3133, 252.624, 16.8355, 2.21 ) }
    dend_17 { pt3dadd( 20.5434, 253.307, 16.8794, 2.21 ) }
    dend_17 { pt3dadd( 20.8149, 254.117, 16.836, 1.18 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 15/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -9.16909, 46.7972, 2.42477, 0.66 ) }
    dend_14 { pt3dadd( -8.60838, 48.7968, 2.86545, 0.66 ) }
    dend_14 { pt3dadd( -8.2635, 50.0148, 3.12426, 0.81 ) }
    dend_14 { pt3dadd( -8.01573, 50.9201, 3.34006, 0.37 ) }
    dend_14 { pt3dadd( -7.73844, 52.0106, 3.60367, 0.29 ) }
    dend_14 { pt3dadd( -7.26444, 53.839, 4.03425, 0.29 ) }
    dend_14 { pt3dadd( -6.96066, 54.9092, 4.28881, 0.29 ) }
    dend_14 { pt3dadd( -6.60828, 55.9385, 4.51347, 0.29 ) }
    dend_14 { pt3dadd( -6.05758, 57.2941, 4.83986, 0.29 ) }
    dend_14 { pt3dadd( -5.56477, 58.4057, 5.11845, 0.29 ) }
    dend_14 { pt3dadd( -5.07348, 59.5128, 5.39535, 0.74 ) }
    dend_14 { pt3dadd( -4.73302, 60.2565, 5.59124, 0.74 ) }
    dend_14 { pt3dadd( -4.08572, 61.5152, 5.93481, 0.29 ) }
    dend_14 { pt3dadd( -3.70241, 62.2377, 6.14159, 0.37 ) }
    dend_14 { pt3dadd( -2.82212, 63.9196, 6.60699, 0.37 ) }
    dend_14 { pt3dadd( -2.358, 64.8707, 6.87255, 0.37 ) }
    dend_14 { pt3dadd( -1.88446, 65.9947, 7.1761, 0.37 ) }
    dend_14 { pt3dadd( -1.69463, 66.513, 7.31172, 0.37 ) }
    dend_14 { pt3dadd( -1.39495, 67.4588, 7.55828, 0.22 ) }
    dend_14 { pt3dadd( -1.12804, 68.3772, 7.79479, 0.22 ) }
    dend_14 { pt3dadd( -0.891325, 69.1018, 7.97683, 0.66 ) }
    dend_14 { pt3dadd( -0.627175, 69.9758, 8.15379, 0.96 ) }
    dend_14 { pt3dadd( 2.32772, 80.4461, 9.44241, 0.96 ) }
    dend_14 { pt3dadd( 7.36481, 89.5348, 12.7264, 0.96 ) }
    dend_14 { pt3dadd( 11.1738, 98.7429, 17.1521, 0.96 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 40/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 29.5874, 10.3171, 6.75143, 0.66 ) }
    dend_8 { pt3dadd( 30.4035, 8.60162, 6.75084, 0.66 ) }
    dend_8 { pt3dadd( 30.6331, 8.05576, 6.71708, 0.66 ) }
    dend_8 { pt3dadd( 31.0117, 7.21647, 6.68996, 0.88 ) }
    dend_8 { pt3dadd( 31.6995, 5.86354, 6.6981, 0.88 ) }
    dend_8 { pt3dadd( 32.1961, 5.00222, 6.73859, 0.88 ) }
    dend_8 { pt3dadd( 32.6777, 4.28707, 6.79771, 1.03 ) }
    dend_8 { pt3dadd( 33.2451, 3.51339, 6.87247, 1.03 ) }
    dend_8 { pt3dadd( 34.0783, 2.91219, 7.09253, 0.88 ) }
    dend_8 { pt3dadd( 34.7516, 2.76639, 7.30964, 0.88 ) }
    dend_8 { pt3dadd( 35.3327, 2.71396, 7.51662, 0.88 ) }
    dend_8 { pt3dadd( 36.2522, 2.60098, 7.87284, 0.81 ) }
    dend_8 { pt3dadd( 37.3069, 2.32648, 8.31522, 0.81 ) }
    dend_8 { pt3dadd( 37.9742, 2.0143, 8.5835, 0.81 ) }
    dend_8 { pt3dadd( 38.8176, 1.40313, 8.86079, 0.74 ) }
    dend_8 { pt3dadd( 39.7138, 0.608291, 9.11385, 0.88 ) }
    dend_8 { pt3dadd( 40.5082, -0.190976, 9.29666, 0.88 ) }
    dend_8 { pt3dadd( 41.3577, -1.16126, 9.45047, 0.52 ) }
    dend_8 { pt3dadd( 41.7848, -1.66265, 9.48983, 0.52 ) }
    dend_8 { pt3dadd( 42.313, -2.19277, 9.47323, 0.52 ) }
    dend_8 { pt3dadd( 42.9997, -2.7346, 9.40155, 0.52 ) }
    dend_8 { pt3dadd( 43.7939, -3.19929, 9.28055, 0.74 ) }
    dend_8 { pt3dadd( 44.6059, -3.58174, 9.13352, 0.74 ) }
    dend_8 { pt3dadd( 45.6401, -3.99429, 8.93019, 0.74 ) }
    dend_8 { pt3dadd( 47.0089, -4.48172, 8.6655, 0.74 ) }
    dend_8 { pt3dadd( 47.9594, -4.79207, 8.47457, 0.74 ) }
    dend_8 { pt3dadd( 48.7135, -4.99832, 8.32758, 0.74 ) }
    dend_8 { pt3dadd( 49.5352, -5.13671, 8.17677, 0.74 ) }
    dend_8 { pt3dadd( 50.0173, -5.17906, 8.10777, 0.88 ) }
    dend_8 { pt3dadd( 51.3812, -5.18968, 7.93822, 0.88 ) }
    dend_8 { pt3dadd( 52.5443, -5.15885, 7.81565, 0.88 ) }
    dend_8 { pt3dadd( 53.9837, -5.13286, 7.6807, 0.66 ) }
    dend_8 { pt3dadd( 55.0353, -5.13502, 7.607, 0.66 ) }
    dend_8 { pt3dadd( 57.7387, -5.16451, 7.48545, 0.59 ) }
    dend_8 { pt3dadd( 58.6756, -5.18263, 7.46028, 0.52 ) }
    dend_8 { pt3dadd( 60.0938, -5.17733, 7.44506, 0.52 ) }
    dend_8 { pt3dadd( 60.9487, -5.12634, 7.44949, 0.52 ) }
    dend_8 { pt3dadd( 61.88, -4.98171, 7.45708, 0.52 ) }
    dend_8 { pt3dadd( 62.9944, -4.73455, 7.4709, 0.52 ) }
    dend_8 { pt3dadd( 63.7394, -4.55118, 7.48934, 0.52 ) }
    dend_8 { pt3dadd( 64.9546, -4.3055, 7.53359, 0.52 ) }
    dend_8 { pt3dadd( 66.2726, -4.03871, 7.59093, 0.52 ) }
    dend_8 { pt3dadd( 67.5072, -3.82825, 7.6538, 0.52 ) }
    dend_8 { pt3dadd( 68.6542, -3.72833, 7.72457, 0.52 ) }
    dend_8 { pt3dadd( 69.9576, -3.77578, 7.82638, 0.52 ) }
    dend_8 { pt3dadd( 70.8501, -3.95848, 7.92353, 0.52 ) }
    dend_8 { pt3dadd( 71.6767, -4.23339, 8.07115, 0.52 ) }
    dend_8 { pt3dadd( 72.231, -4.43627, 8.2052, 0.52 ) }
    dend_8 { pt3dadd( 72.9301, -4.67414, 8.40526, 0.52 ) }
    dend_8 { pt3dadd( 74.3467, -5.06319, 8.89078, 0.29 ) }
    dend_8 { pt3dadd( 76.8812, -5.54825, 9.86783, 0.29 ) }
    dend_8 { pt3dadd( 79.1824, -5.82009, 10.8147, 0.29 ) }
    dend_8 { pt3dadd( 80.3577, -5.86165, 11.3327, 0.29 ) }
    dend_8 { pt3dadd( 81.2023, -5.84896, 11.7188, 0.44 ) }
    dend_8 { pt3dadd( 82.0977, -5.76005, 12.1588, 0.59 ) }
    dend_8 { pt3dadd( 82.6606, -5.6237, 12.4915, 0.59 ) }
    dend_8 { pt3dadd( 83.5798, -5.05068, 13.1794, 0.59 ) }
    dend_8 { pt3dadd( 84.0702, -4.51314, 13.5709, 0.59 ) }
    dend_8 { pt3dadd( 93.5755, -7.72809, 15.6565, 0.59 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 99/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 29.5874, 10.3171, 6.75143, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_3 { pt3dadd( 31.3882, 9.77666, 6.90272, 1.11 ) }
    dend_3 { pt3dadd( 32.4934, 9.2941, 7.0003, 1.11 ) }
    dend_3 { pt3dadd( 33.7733, 8.78159, 6.9899, 1.25 ) }
    dend_3 { pt3dadd( 34.7755, 8.47895, 6.9319, 1.47 ) }
    dend_3 { pt3dadd( 36.1528, 8.21744, 6.81077, 1.4 ) }
    dend_3 { pt3dadd( 37.3881, 8.10124, 6.67551, 1.4 ) }
    dend_3 { pt3dadd( 38.7903, 8.0254, 6.4513, 1.18 ) }
    dend_3 { pt3dadd( 40.717, 8.26863, 6.03315, 1.18 ) }
    dend_3 { pt3dadd( 42.0563, 8.71263, 5.66353, 1.18 ) }
    dend_3 { pt3dadd( 43.2072, 9.19366, 5.3113, 1.18 ) }
    dend_3 { pt3dadd( 43.8914, 9.48601, 5.10026, 0.88 ) }
    dend_3 { pt3dadd( 44.573, 9.70991, 4.90835, 0.88 ) }
    dend_3 { pt3dadd( 45.6348, 9.83456, 4.66405, 0.88 ) }
    dend_3 { pt3dadd( 47.2408, 9.63751, 4.39607, 1.11 ) }
    dend_3 { pt3dadd( 48.4531, 9.30683, 4.21727, 1.11 ) }
    dend_3 { pt3dadd( 49.6766, 8.87707, 4.04396, 1.11 ) }
    dend_3 { pt3dadd( 51.0559, 8.31455, 3.86089, 1.25 ) }
    dend_3 { pt3dadd( 52.4588, 7.66945, 3.69037, 1.33 ) }
    dend_3 { pt3dadd( 53.1055, 7.34304, 3.62238, 1.47 ) }
    dend_3 { pt3dadd( 54.1719, 6.82205, 3.53341, 1.77 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 20/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -162.643, -120.75, -3.02913, 0.59 ) }
    dend_47 { pt3dadd( -162.587, -122.576, -3.35489, 0.59 ) }
    dend_47 { pt3dadd( -162.555, -123.348, -3.46157, 0.59 ) }
    dend_47 { pt3dadd( -162.508, -124.026, -3.53459, 0.52 ) }
    dend_47 { pt3dadd( -162.445, -124.809, -3.59758, 0.52 ) }
    dend_47 { pt3dadd( -162.396, -125.657, -3.65351, 0.88 ) }
    dend_47 { pt3dadd( -162.348, -126.597, -3.70623, 1.03 ) }
    dend_47 { pt3dadd( -162.326, -127.162, -3.69664, 1.03 ) }
    dend_47 { pt3dadd( -162.261, -128.159, -3.66414, 1.03 ) }
    dend_47 { pt3dadd( -162.181, -129.017, -3.62535, 0.29 ) }
    dend_47 { pt3dadd( -162.129, -129.629, -3.59411, 0.29 ) }
    dend_47 { pt3dadd( -162.099, -130.134, -3.56573, 0.29 ) }
    dend_47 { pt3dadd( -162.091, -131.089, -3.51685, 0.59 ) }
    dend_47 { pt3dadd( -162.125, -131.872, -3.44367, 0.74 ) }
    dend_47 { pt3dadd( -162.18, -132.431, -3.37106, 0.88 ) }
    dend_47 { pt3dadd( -162.254, -132.972, -3.29005, 0.88 ) }
    dend_47 { pt3dadd( -162.336, -133.474, -3.20071, 0.88 ) }
    dend_47 { pt3dadd( -162.483, -134.144, -3.06885, 0.81 ) }
    dend_47 { pt3dadd( -162.856, -135.587, -2.77806, 0.37 ) }
    dend_47 { pt3dadd( -163.057, -136.368, -2.61438, 1.03 ) }
    dend_47 { pt3dadd( -163.259, -137.143, -2.42032, 1.33 ) }
    dend_47 { pt3dadd( -163.451, -137.852, -2.22334, 1.33 ) }
    dend_47 { pt3dadd( -163.718, -138.758, -1.95579, 1.03 ) }
    dend_47 { pt3dadd( -163.958, -139.518, -1.72707, 0.74 ) }
    dend_47 { pt3dadd( -164.18, -140.177, -1.54931, 0.37 ) }
    dend_47 { pt3dadd( -164.483, -141.045, -1.26779, 0.74 ) }
    dend_47 { pt3dadd( -164.668, -141.544, -1.09274, 0.74 ) }
    dend_47 { pt3dadd( -164.876, -142.155, -0.919068, 0.59 ) }
    dend_47 { pt3dadd( -165.012, -142.621, -0.81779, 0.37 ) }
    dend_47 { pt3dadd( -165.178, -143.299, -0.733113, 0.37 ) }
    dend_47 { pt3dadd( -165.438, -144.412, -0.725575, 0.66 ) }
    dend_47 { pt3dadd( -165.632, -145.199, -0.80455, 0.74 ) }
    dend_47 { pt3dadd( -165.997, -146.527, -1.02248, 0.52 ) }
    dend_47 { pt3dadd( -166.155, -147.081, -1.13873, 0.52 ) }
    dend_47 { pt3dadd( -166.379, -147.736, -1.29411, 1.33 ) }
    dend_47 { pt3dadd( -166.672, -148.551, -1.50893, 1.55 ) }
    dend_47 { pt3dadd( -167.065, -149.621, -1.77016, 1.99 ) }
    dend_47 { pt3dadd( -167.319, -150.262, -1.8865, 2.21 ) }
    dend_47 { pt3dadd( -167.668, -151.06, -1.9843, 1.99 ) }
    dend_47 { pt3dadd( -168.113, -152.021, -2.09752, 1.11 ) }
    dend_47 { pt3dadd( -168.587, -153.123, -2.23449, 0.37 ) }
    dend_47 { pt3dadd( -168.94, -154.066, -2.3512, 1.11 ) }
    dend_47 { pt3dadd( -169.101, -154.544, -2.41376, 1.25 ) }
    dend_47 { pt3dadd( -169.304, -155.16, -2.49423, 1.25 ) }
    dend_47 { pt3dadd( -169.761, -156.518, -2.70548, 0.29 ) }
    dend_47 { pt3dadd( -170.056, -157.381, -2.85872, 0.29 ) }
    dend_47 { pt3dadd( -170.358, -158.172, -3.00395, 0.44 ) }
    dend_47 { pt3dadd( -170.687, -158.99, -3.16125, 0.59 ) }
    dend_47 { pt3dadd( -171.083, -159.956, -3.33702, 0.88 ) }
    dend_47 { pt3dadd( -171.418, -160.758, -3.47035, 0.96 ) }
    dend_47 { pt3dadd( -171.786, -161.53, -3.58143, 0.66 ) }
    dend_47 { pt3dadd( -172.291, -162.447, -3.67546, 0.37 ) }
    dend_47 { pt3dadd( -172.679, -163.101, -3.73113, 0.29 ) }
    dend_47 { pt3dadd( -173.109, -163.782, -3.75602, 0.29 ) }
    dend_47 { pt3dadd( -173.483, -164.38, -3.74997, 0.29 ) }
    dend_47 { pt3dadd( -174.002, -165.184, -3.70831, 0.29 ) }
    dend_47 { pt3dadd( -174.785, -166.287, -3.64686, 0.74 ) }
    dend_47 { pt3dadd( -175.396, -167.048, -3.57011, 1.03 ) }
    dend_47 { pt3dadd( -176.158, -167.93, -3.44638, 2.28 ) }
    dend_47 { pt3dadd( -176.76, -168.57, -3.33561, 2.8 ) }
    dend_47 { pt3dadd( -177.34, -169.175, -3.2284, 3.09 ) }
    dend_47 { pt3dadd( -178.273, -170.184, -3.06053, 1.84 ) }
    dend_47 { pt3dadd( -179.353, -171.339, -2.87481, 0.29 ) }
    dend_47 { pt3dadd( -179.882, -171.938, -2.77872, 0.29 ) }
    dend_47 { pt3dadd( -180.573, -172.792, -2.65969, 0.29 ) }
    dend_47 { pt3dadd( -181.265, -173.733, -2.53008, 0.29 ) }
    dend_47 { pt3dadd( -181.733, -174.515, -2.42086, 0.88 ) }
    dend_47 { pt3dadd( -182.092, -175.22, -2.3275, 1.11 ) }
    dend_47 { pt3dadd( -182.371, -175.828, -2.26931, 0.81 ) }
    dend_47 { pt3dadd( -182.594, -176.354, -2.21801, 0.52 ) }
    dend_47 { pt3dadd( -182.933, -177.239, -2.12936, 0.29 ) }
    dend_47 { pt3dadd( -183.311, -178.289, -2.01577, 0.29 ) }
    dend_47 { pt3dadd( -183.611, -179.188, -1.91635, 0.29 ) }
    dend_47 { pt3dadd( -183.78, -179.674, -1.86361, 0.29 ) }
    dend_47 { pt3dadd( -184.1, -180.641, -1.75665, 0.81 ) }
    dend_47 { pt3dadd( -184.371, -181.54, -1.6553, 1.11 ) }
    dend_47 { pt3dadd( -184.562, -182.246, -1.57502, 0.88 ) }
    dend_47 { pt3dadd( -184.83, -183.248, -1.46331, 0.29 ) }
    dend_47 { pt3dadd( -185.15, -184.471, -1.32451, 0.29 ) }
    dend_47 { pt3dadd( -185.466, -185.562, -1.23774, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_47 { pt3dadd( -185.589, -185.96, -1.21603, 0.29 ) }
    dend_47 { pt3dadd( -185.881, -186.911, -1.18648, 0.74 ) }
    dend_47 { pt3dadd( -186.091, -187.592, -1.181, 0.74 ) }
    dend_47 { pt3dadd( -186.375, -188.553, -1.1875, 0.44 ) }
    dend_47 { pt3dadd( -186.693, -189.67, -1.20939, 0.29 ) }
    dend_47 { pt3dadd( -186.857, -190.225, -1.22569, 0.29 ) }
    dend_47 { pt3dadd( -187.075, -190.997, -1.22016, 0.29 ) }
    dend_47 { pt3dadd( -187.294, -191.928, -1.17101, 0.29 ) }
    dend_47 { pt3dadd( -187.4, -192.464, -1.11081, 0.74 ) }
    dend_47 { pt3dadd( -187.493, -192.961, -1.02667, 0.74 ) }
    dend_47 { pt3dadd( -187.656, -193.854, -0.817749, 0.44 ) }
    dend_47 { pt3dadd( -187.858, -194.862, -0.563512, 0.29 ) }
    dend_47 { pt3dadd( -188.046, -195.733, -0.312703, 0.74 ) }
    dend_47 { pt3dadd( -188.184, -196.344, -0.129643, 1.11 ) }
    dend_47 { pt3dadd( -188.319, -196.858, 0.0218785, 1.69 ) }
    dend_47 { pt3dadd( -188.438, -197.29, 0.143491, 1.92 ) }
    dend_47 { pt3dadd( -188.61, -197.915, 0.303877, 1.92 ) }
    dend_47 { pt3dadd( -188.855, -198.86, 0.50508, 1.62 ) }
    dend_47 { pt3dadd( -189.15, -200.005, 0.725747, 0.29 ) }
    dend_47 { pt3dadd( -189.378, -200.922, 0.884792, 0.22 ) }
    dend_47 { pt3dadd( -189.582, -201.68, 1.00573, 0.22 ) }
    dend_47 { pt3dadd( -189.872, -202.705, 1.14883, 0.59 ) }
    dend_47 { pt3dadd( -190.128, -203.555, 1.2494, 0.74 ) }
    dend_47 { pt3dadd( -190.325, -204.147, 1.31326, 0.74 ) }
    dend_47 { pt3dadd( -190.603, -204.907, 1.40262, 0.44 ) }
    dend_47 { pt3dadd( -190.871, -205.55, 1.48108, 0.29 ) }
    dend_47 { pt3dadd( -191.192, -206.19, 1.58312, 0.29 ) }
    dend_47 { pt3dadd( -191.958, -207.465, 1.84622, 0.44 ) }
    dend_47 { pt3dadd( -192.409, -208.119, 1.98264, 0.59 ) }
    dend_47 { pt3dadd( -192.864, -208.724, 2.10518, 0.59 ) }
    dend_47 { pt3dadd( -193.404, -209.417, 2.2199, 0.52 ) }
    dend_47 { pt3dadd( -194.232, -210.453, 2.35446, 1.33 ) }
    dend_47 { pt3dadd( -194.917, -211.29, 2.43067, 2.06 ) }
    dend_47 { pt3dadd( -195.558, -212.1, 2.47045, 2.21 ) }
    dend_47 { pt3dadd( -196.023, -212.749, 2.4739, 2.21 ) }
    dend_47 { pt3dadd( -196.694, -213.813, 2.43915, 0.81 ) }
    dend_47 { pt3dadd( -197.099, -214.584, 2.37895, 0.29 ) }
    dend_47 { pt3dadd( -197.402, -215.287, 2.29236, 0.44 ) }
    dend_47 { pt3dadd( -197.589, -215.823, 2.22287, 0.44 ) }
    dend_47 { pt3dadd( -197.822, -216.611, 2.13063, 0.29 ) }
    dend_47 { pt3dadd( -197.995, -217.202, 2.04833, 0.29 ) }
    dend_47 { pt3dadd( -198.215, -217.935, 1.94631, 0.29 ) }
    dend_47 { pt3dadd( -198.38, -218.413, 1.88132, 0.74 ) }
    dend_47 { pt3dadd( -198.558, -218.845, 1.83813, 0.88 ) }
    dend_47 { pt3dadd( -198.794, -219.353, 1.80828, 0.88 ) }
    dend_47 { pt3dadd( -199.181, -220.178, 1.80639, 0.29 ) }
    dend_47 { pt3dadd( -199.572, -221.001, 1.8658, 0.29 ) }
    dend_47 { pt3dadd( -199.939, -221.835, 2.00015, 0.29 ) }
    dend_47 { pt3dadd( -200.343, -222.843, 2.21329, 0.52 ) }
    dend_47 { pt3dadd( -200.524, -223.316, 2.33175, 0.52 ) }
    dend_47 { pt3dadd( -200.83, -224.181, 2.58719, 0.29 ) }
    dend_47 { pt3dadd( -201.01, -224.779, 2.80333, 0.29 ) }
    dend_47 { pt3dadd( -201.303, -225.994, 3.30327, 0.59 ) }
    dend_47 { pt3dadd( -201.448, -226.683, 3.62029, 0.29 ) }
    dend_47 { pt3dadd( -201.549, -227.135, 3.85347, 0.29 ) }
    dend_47 { pt3dadd( -201.722, -227.755, 4.2094, 0.74 ) }
    dend_47 { pt3dadd( -202.054, -228.561, 4.72485, 0.88 ) }
    dend_47 { pt3dadd( -202.399, -229.157, 5.12954, 0.29 ) }
    dend_47 { pt3dadd( -202.81, -229.695, 5.51937, 0.29 ) }
    dend_47 { pt3dadd( -203.4, -230.361, 5.98766, 0.96 ) }
    dend_47 { pt3dadd( -203.89, -230.886, 6.31281, 1.11 ) }
    dend_47 { pt3dadd( -204.515, -231.551, 6.62932, 1.11 ) }
    dend_47 { pt3dadd( -205.182, -232.314, 6.90066, 0.29 ) }
    dend_47 { pt3dadd( -205.614, -232.887, 7.05985, 0.22 ) }
    dend_47 { pt3dadd( -205.957, -233.463, 7.1714, 0.44 ) }
    dend_47 { pt3dadd( -206.282, -234.148, 7.2572, 0.44 ) }
    dend_47 { pt3dadd( -206.719, -235.305, 7.3247, 0.22 ) }
    dend_47 { pt3dadd( -206.959, -236.03, 7.327, 0.22 ) }
    dend_47 { pt3dadd( -207.12, -236.57, 7.29928, 0.22 ) }
    dend_47 { pt3dadd( -207.301, -237.183, 7.24659, 0.59 ) }
    dend_47 { pt3dadd( -207.43, -237.624, 7.20525, 0.74 ) }
    dend_47 { pt3dadd( -207.822, -238.923, 7.04862, 0.29 ) }
    dend_47 { pt3dadd( -208.034, -239.613, 6.9529, 0.29 ) }
    dend_47 { pt3dadd( -208.304, -240.471, 6.82524, 0.44 ) }
    dend_47 { pt3dadd( -208.55, -241.293, 6.70326, 0.44 ) }
    dend_47 { pt3dadd( -208.858, -242.385, 6.55901, 0.52 ) }
    dend_47 { pt3dadd( -209.033, -243.008, 6.48824, 0.96 ) }
    dend_47 { pt3dadd( -209.216, -243.629, 6.43562, 1.4 ) }
    dend_47 { pt3dadd( -209.421, -244.257, 6.38202, 1.4 ) }
    dend_47 { pt3dadd( -209.961, -245.705, 6.33767, 0.29 ) }
    dend_47 { pt3dadd( -210.535, -247.108, 6.37297, 0.22 ) }
    dend_47 { pt3dadd( -210.838, -247.79, 6.43482, 0.37 ) }
    dend_47 { pt3dadd( -211.344, -248.867, 6.60285, 0.37 ) }
    dend_47 { pt3dadd( -211.87, -249.92, 6.8235, 0.29 ) }
    dend_47 { pt3dadd( -212.603, -251.287, 7.1801, 0.74 ) }
    dend_47 { pt3dadd( -213.014, -251.98, 7.39683, 1.11 ) }
    dend_47 { pt3dadd( -213.49, -252.709, 7.63904, 1.25 ) }
    dend_47 { pt3dadd( -213.994, -253.424, 7.86923, 1.11 ) }
    dend_47 { pt3dadd( -214.482, -254.078, 8.06356, 0.59 ) }
    dend_47 { pt3dadd( -215.124, -254.92, 8.26941, 0.29 ) }
    dend_47 { pt3dadd( -215.507, -255.429, 8.33239, 0.29 ) }
    dend_47 { pt3dadd( -216.224, -256.402, 8.40741, 0.22 ) }
    dend_47 { pt3dadd( -216.697, -257.07, 8.43902, 0.22 ) }
    dend_47 { pt3dadd( -216.961, -257.451, 8.45349, 0.66 ) }
    dend_47 { pt3dadd( -217.368, -258.048, 8.47591, 0.66 ) }
    dend_47 { pt3dadd( -218.192, -259.295, 8.54957, 0.29 ) }
    dend_47 { pt3dadd( -218.692, -260.044, 8.60685, 0.29 ) }
    dend_47 { pt3dadd( -219.221, -260.791, 8.67239, 0.29 ) }
    dend_47 { pt3dadd( -219.776, -261.525, 8.73716, 0.66 ) }
    dend_47 { pt3dadd( -220.223, -262.083, 8.78369, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_47 { pt3dadd( -220.943, -262.94, 8.84858, 0.22 ) }
    dend_47 { pt3dadd( -221.439, -263.514, 8.88491, 0.22 ) }
    dend_47 { pt3dadd( -222.273, -264.476, 8.93191, 0.22 ) }
    dend_47 { pt3dadd( -223.729, -266.182, 8.96802, 0.22 ) }
    dend_47 { pt3dadd( -224.163, -266.735, 8.958, 0.22 ) }
    dend_47 { pt3dadd( -224.612, -267.367, 8.92463, 1.11 ) }
    dend_47 { pt3dadd( -224.852, -267.761, 8.88549, 1.11 ) }
    dend_47 { pt3dadd( -224.962, -267.992, 8.85894, 1.11 ) }
    dend_47 { pt3dadd( -225.18, -268.599, 8.78436, 0.66 ) }
    dend_47 { pt3dadd( -225.441, -269.609, 8.64785, 0.22 ) }
    dend_47 { pt3dadd( -225.562, -270.231, 8.56935, 0.52 ) }
    dend_47 { pt3dadd( -225.747, -271.664, 8.40544, 0.22 ) }
    dend_47 { pt3dadd( -225.891, -272.829, 8.28198, 0.22 ) }
    dend_47 { pt3dadd( -225.952, -273.328, 8.23406, 0.59 ) }
    dend_47 { pt3dadd( -226.031, -273.961, 8.18254, 0.59 ) }
    dend_47 { pt3dadd( -226.143, -274.878, 8.10659, 0.52 ) }
    dend_47 { pt3dadd( -226.292, -276.229, 7.9897, 0.22 ) }
    dend_47 { pt3dadd( -226.365, -277.023, 7.91886, 0.22 ) }
    dend_47 { pt3dadd( -226.392, -277.496, 7.87735, 0.22 ) }
    dend_47 { pt3dadd( -226.412, -278.034, 7.82962, 0.66 ) }
    dend_47 { pt3dadd( -226.41, -278.811, 7.80767, 0.81 ) }
    dend_47 { pt3dadd( -226.344, -279.668, 7.85438, 0.59 ) }
    dend_47 { pt3dadd( -226.1, -280.898, 8.07505, 1.25 ) }
    dend_47 { pt3dadd( -225.879, -281.551, 8.26271, 1.69 ) }
    dend_47 { pt3dadd( -225.716, -281.874, 8.391, 1.92 ) }
    dend_47 { pt3dadd( -224.983, -282.914, 8.92863, 1.18 ) }
    dend_47 { pt3dadd( -224.238, -283.699, 9.45792, 0.22 ) }
    dend_47 { pt3dadd( -223.332, -284.422, 10.0504, 0.22 ) }
    dend_47 { pt3dadd( -222.704, -284.824, 10.4314, 0.22 ) }
    dend_47 { pt3dadd( -221.904, -285.279, 10.8679, 0.22 ) }
    dend_47 { pt3dadd( -221.319, -285.593, 11.1499, 0.66 ) }
    dend_47 { pt3dadd( -220.882, -285.829, 11.3224, 0.66 ) }
    dend_47 { pt3dadd( -219.689, -286.473, 11.7313, 0.22 ) }
    dend_47 { pt3dadd( -219.234, -286.728, 11.8687, 0.37 ) }
    dend_47 { pt3dadd( -218.775, -287.04, 12.0081, 0.37 ) }
    dend_47 { pt3dadd( -218.409, -287.344, 12.1311, 0.22 ) }
    dend_47 { pt3dadd( -217.858, -287.873, 12.3267, 0.22 ) }
    dend_47 { pt3dadd( -221.665, -296.708, 12.9901, 0.22 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 38/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -162.643, -120.75, -3.02913, 0.37 ) }
    dend_46 { pt3dadd( -163.573, -120.508, -2.97523, 0.37 ) }
    dend_46 { pt3dadd( -163.964, -120.427, -2.96773, 0.37 ) }
    dend_46 { pt3dadd( -164.8, -120.293, -3.00361, 0.29 ) }
    dend_46 { pt3dadd( -165.436, -120.218, -3.05098, 0.44 ) }
    dend_46 { pt3dadd( -166.05, -120.168, -3.10926, 0.66 ) }
    dend_46 { pt3dadd( -166.404, -120.151, -3.15196, 0.81 ) }
    dend_46 { pt3dadd( -166.709, -120.152, -3.20515, 0.81 ) }
    dend_46 { pt3dadd( -167.658, -120.19, -3.41002, 0.22 ) }
    dend_46 { pt3dadd( -167.955, -120.212, -3.48934, 0.22 ) }
    dend_46 { pt3dadd( -168.488, -120.255, -3.6327, 0.74 ) }
    dend_46 { pt3dadd( -168.926, -120.289, -3.75416, 0.88 ) }
    dend_46 { pt3dadd( -169.653, -120.353, -3.97694, 0.22 ) }
    dend_46 { pt3dadd( -169.95, -120.378, -4.09521, 0.22 ) }
    dend_46 { pt3dadd( -170.224, -120.406, -4.22833, 0.22 ) }
    dend_46 { pt3dadd( -170.535, -120.447, -4.39854, 0.74 ) }
    dend_46 { pt3dadd( -170.862, -120.512, -4.60165, 0.88 ) }
    dend_46 { pt3dadd( -171.217, -120.633, -4.86912, 0.88 ) }
    dend_46 { pt3dadd( -171.991, -121.036, -5.56924, 0.22 ) }
    dend_46 { pt3dadd( -172.263, -121.209, -5.84075, 0.22 ) }
    dend_46 { pt3dadd( -172.485, -121.364, -6.08179, 0.74 ) }
    dend_46 { pt3dadd( -172.758, -121.589, -6.43332, 0.74 ) }
    dend_46 { pt3dadd( -173.331, -122.059, -7.11065, 0.29 ) }
    dend_46 { pt3dadd( -173.512, -122.204, -7.30599, 0.29 ) }
    dend_46 { pt3dadd( -173.811, -122.438, -7.59814, 0.88 ) }
    dend_46 { pt3dadd( -174.17, -122.689, -7.92771, 1.03 ) }
    dend_46 { pt3dadd( -175.262, -123.347, -8.86911, 0.22 ) }
    dend_46 { pt3dadd( -176.304, -123.915, -9.70612, 0.22 ) }
    dend_46 { pt3dadd( -176.73, -124.118, -10.0109, 0.22 ) }
    dend_46 { pt3dadd( -176.983, -124.232, -10.1824, 1.11 ) }
    dend_46 { pt3dadd( -177.291, -124.368, -10.3759, 1.11 ) }
    dend_46 { pt3dadd( -177.624, -124.504, -10.5494, 0.81 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 70/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -19.8939, -176.243, -1.30218, 0.81 ) }
    dend_40 { pt3dadd( -18.2443, -177.122, -1.5573, 0.81 ) }
    dend_40 { pt3dadd( -16.9112, -177.753, -1.78446, 0.52 ) }
    dend_40 { pt3dadd( -15.0122, -178.578, -2.13325, 0.52 ) }
    dend_40 { pt3dadd( -14.1831, -178.951, -2.29305, 0.37 ) }
    dend_40 { pt3dadd( -12.5272, -179.721, -2.62057, 0.37 ) }
    dend_40 { pt3dadd( -11.8697, -180.037, -2.75201, 0.66 ) }
    dend_40 { pt3dadd( -11.2849, -180.321, -2.88933, 0.88 ) }
    dend_40 { pt3dadd( -10.7984, -180.563, -2.99872, 0.88 ) }
    dend_40 { pt3dadd( -9.55493, -181.313, -3.27963, 0.59 ) }
    dend_40 { pt3dadd( -8.45163, -182.126, -3.5283, 0.66 ) }
    dend_40 { pt3dadd( -7.35252, -183.06, -3.77072, 0.74 ) }
    dend_40 { pt3dadd( -6.68012, -183.628, -3.91707, 0.74 ) }
    dend_40 { pt3dadd( -6.15789, -184.034, -4.02905, 0.52 ) }
    dend_40 { pt3dadd( -5.30606, -184.621, -4.21383, 0.29 ) }
    dend_40 { pt3dadd( -4.39468, -185.119, -4.39638, 0.96 ) }
    dend_40 { pt3dadd( -3.56482, -185.499, -4.54774, 1.03 ) }
    dend_40 { pt3dadd( -3.01639, -185.726, -4.63424, 1.03 ) }
    dend_40 { pt3dadd( -1.76689, -186.218, -4.80014, 0.66 ) }
    dend_40 { pt3dadd( -1.24216, -186.431, -4.87202, 0.52 ) }
    dend_40 { pt3dadd( -0.0369606, -186.938, -5.04022, 0.59 ) }
    dend_40 { pt3dadd( 1.15685, -187.513, -5.20983, 0.59 ) }
    dend_40 { pt3dadd( 2.25374, -188.118, -5.37427, 0.52 ) }
    dend_40 { pt3dadd( 3.16013, -188.685, -5.52031, 0.52 ) }
    dend_40 { pt3dadd( 4.10835, -189.34, -5.68488, 0.96 ) }
    dend_40 { pt3dadd( 4.69795, -189.759, -5.80483, 1.18 ) }
    dend_40 { pt3dadd( 5.67207, -190.435, -6.0334, 0.66 ) }
    dend_40 { pt3dadd( 6.82039, -191.166, -6.31308, 0.37 ) }
    dend_40 { pt3dadd( 7.5385, -191.578, -6.49297, 0.37 ) }
    dend_40 { pt3dadd( 9.02503, -192.341, -6.87332, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_40 { pt3dadd( 10.3449, -192.988, -7.17408, 1.03 ) }
    dend_40 { pt3dadd( 11.3504, -193.48, -7.38657, 0.81 ) }
    dend_40 { pt3dadd( 12.2798, -193.934, -7.56009, 0.52 ) }
    dend_40 { pt3dadd( 13.374, -194.471, -7.73604, 0.52 ) }
    dend_40 { pt3dadd( 14.2326, -194.91, -7.84822, 0.52 ) }
    dend_40 { pt3dadd( 15.4201, -195.608, -7.97022, 0.52 ) }
    dend_40 { pt3dadd( 16.4229, -196.272, -8.04798, 1.33 ) }
    dend_40 { pt3dadd( 17.0499, -196.733, -8.08942, 1.69 ) }
    dend_40 { pt3dadd( 17.7695, -197.333, -8.13003, 1.69 ) }
    dend_40 { pt3dadd( 18.9564, -198.404, -8.28645, 1.11 ) }
    dend_40 { pt3dadd( 20.2326, -199.591, -8.54862, 0.44 ) }
    dend_40 { pt3dadd( 21.0498, -200.329, -8.7962, 0.44 ) }
    dend_40 { pt3dadd( 21.7061, -200.901, -9.04074, 0.29 ) }
    dend_40 { pt3dadd( 22.4473, -201.526, -9.38318, 0.29 ) }
    dend_40 { pt3dadd( 24.1164, -202.865, -10.2687, 1.03 ) }
    dend_40 { pt3dadd( 24.5996, -203.232, -10.5575, 1.4 ) }
    dend_40 { pt3dadd( 25.1176, -203.633, -10.9022, 1.4 ) }
    dend_40 { pt3dadd( 26.7592, -205.04, -12.0889, 0.22 ) }
    dend_40 { pt3dadd( 27.6274, -205.828, -12.7256, 0.52 ) }
    dend_40 { pt3dadd( 28.0555, -206.234, -13.0311, 0.52 ) }
    dend_40 { pt3dadd( 28.7924, -207.004, -13.53, 0.29 ) }
    dend_40 { pt3dadd( 29.8219, -208.12, -14.2365, 0.29 ) }
    dend_40 { pt3dadd( 30.454, -208.813, -14.6555, 0.29 ) }
    dend_40 { pt3dadd( 31.0917, -209.552, -15.085, 0.66 ) }
    dend_40 { pt3dadd( 31.5648, -210.107, -15.3686, 0.81 ) }
    dend_40 { pt3dadd( 31.9099, -210.512, -15.5628, 0.81 ) }
    dend_40 { pt3dadd( 32.4934, -211.143, -15.8497, 0.59 ) }
    dend_40 { pt3dadd( 33.1593, -211.786, -16.155, 0.29 ) }
    dend_40 { pt3dadd( 33.7977, -212.426, -16.4107, 0.29 ) }
    dend_40 { pt3dadd( 34.5171, -213.264, -16.6567, 0.66 ) }
    dend_40 { pt3dadd( 35.0645, -214.007, -16.7855, 0.66 ) }
    dend_40 { pt3dadd( 35.7847, -215.154, -16.8621, 0.29 ) }
    dend_40 { pt3dadd( 36.184, -215.899, -16.8416, 0.29 ) }
    dend_40 { pt3dadd( 36.841, -217.262, -16.7133, 0.66 ) }
    dend_40 { pt3dadd( 37.2866, -218.232, -16.5612, 0.66 ) }
    dend_40 { pt3dadd( 37.8264, -219.502, -16.2939, 0.44 ) }
    dend_40 { pt3dadd( 38.323, -220.798, -15.9714, 1.47 ) }
    dend_40 { pt3dadd( 38.6814, -221.844, -15.6873, 1.84 ) }
    dend_40 { pt3dadd( 38.876, -222.459, -15.5192, 1.84 ) }
    dend_40 { pt3dadd( 38.9906, -222.841, -15.4319, 1.84 ) }
    dend_40 { pt3dadd( 39.2921, -223.815, -15.2271, 1.33 ) }
    dend_40 { pt3dadd( 39.686, -224.988, -15.0092, 0.52 ) }
    dend_40 { pt3dadd( 39.9046, -225.606, -14.9032, 0.52 ) }
    dend_40 { pt3dadd( 40.2059, -226.445, -14.7611, 0.52 ) }
    dend_40 { pt3dadd( 40.6892, -227.785, -14.5228, 0.29 ) }
    dend_40 { pt3dadd( 40.947, -228.478, -14.3922, 0.29 ) }
    dend_40 { pt3dadd( 41.3384, -229.465, -14.1869, 0.29 ) }
    dend_40 { pt3dadd( 41.7236, -230.374, -13.983, 0.44 ) }
    dend_40 { pt3dadd( 42.3087, -231.594, -13.7089, 0.44 ) }
    dend_40 { pt3dadd( 42.86, -232.585, -13.51, 0.44 ) }
    dend_40 { pt3dadd( 43.2931, -233.275, -13.4014, 1.33 ) }
    dend_40 { pt3dadd( 43.8014, -234.066, -13.3267, 1.84 ) }
    dend_40 { pt3dadd( 44.3021, -234.764, -13.2961, 1.84 ) }
    dend_40 { pt3dadd( 45.1549, -235.845, -13.286, 0.96 ) }
    dend_40 { pt3dadd( 46.2837, -237.161, -13.3187, 0.22 ) }
    dend_40 { pt3dadd( 47.2514, -238.222, -13.3758, 0.22 ) }
    dend_40 { pt3dadd( 48.6289, -239.65, -13.495, 0.22 ) }
    dend_40 { pt3dadd( 49.4646, -240.449, -13.5808, 0.22 ) }
    dend_40 { pt3dadd( 50.4191, -241.267, -13.6904, 0.22 ) }
    dend_40 { pt3dadd( 51.2653, -241.922, -13.8079, 0.44 ) }
    dend_40 { pt3dadd( 52.2769, -242.635, -13.9806, 0.88 ) }
    dend_40 { pt3dadd( 53.2508, -243.292, -14.1874, 1.03 ) }
    dend_40 { pt3dadd( 53.8877, -243.717, -14.3374, 1.03 ) }
    dend_40 { pt3dadd( 54.6289, -244.251, -14.5222, 0.88 ) }
    dend_40 { pt3dadd( 55.3696, -244.754, -14.7156, 0.29 ) }
    dend_40 { pt3dadd( 55.9058, -245.092, -14.8403, 0.29 ) }
    dend_40 { pt3dadd( 56.7335, -245.564, -14.9844, 0.29 ) }
    dend_40 { pt3dadd( 57.7823, -246.107, -15.1151, 0.37 ) }
    dend_40 { pt3dadd( 58.5781, -246.479, -15.1703, 0.37 ) }
    dend_40 { pt3dadd( 59.2801, -246.772, -15.188, 0.29 ) }
    dend_40 { pt3dadd( 60.6339, -247.259, -15.1709, 0.29 ) }
    dend_40 { pt3dadd( 61.6958, -247.609, -15.1533, 0.81 ) }
    dend_40 { pt3dadd( 62.2914, -247.804, -15.1505, 0.81 ) }
    dend_40 { pt3dadd( 63.4353, -248.245, -15.1447, 0.59 ) }
    dend_40 { pt3dadd( 64.2674, -248.662, -15.123, 0.29 ) }
    dend_40 { pt3dadd( 64.9786, -249.093, -15.0877, 0.29 ) }
    dend_40 { pt3dadd( 65.7219, -249.604, -15.0323, 0.66 ) }
    dend_40 { pt3dadd( 66.2681, -250.005, -14.9674, 0.66 ) }
    dend_40 { pt3dadd( 67.8885, -251.236, -14.698, 0.29 ) }
    dend_40 { pt3dadd( 68.9105, -252.011, -14.4622, 0.29 ) }
    dend_40 { pt3dadd( 69.9625, -252.813, -14.1313, 0.29 ) }
    dend_40 { pt3dadd( 70.7538, -253.431, -13.8179, 0.29 ) }
    dend_40 { pt3dadd( 71.5329, -254.033, -13.4466, 0.88 ) }
    dend_40 { pt3dadd( 71.8837, -254.302, -13.2726, 0.88 ) }
    dend_40 { pt3dadd( 72.8163, -255.021, -12.7679, 0.66 ) }
    dend_40 { pt3dadd( 74.0914, -255.993, -12.0136, 0.29 ) }
    dend_40 { pt3dadd( 74.7446, -256.504, -11.5915, 0.29 ) }
    dend_40 { pt3dadd( 75.5148, -257.129, -11.0863, 0.66 ) }
    dend_40 { pt3dadd( 76.1621, -257.678, -10.6963, 0.44 ) }
    dend_40 { pt3dadd( 85.7785, -266.064, -9.34674, 0.44 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 90/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -19.8939, -176.243, -1.30218, 2.14 ) }
    dend_35 { pt3dadd( -20.6954, -178.489, -1.68701, 2.14 ) }
    dend_35 { pt3dadd( -21.3493, -180.537, -1.99347, 1.33 ) }
    dend_35 { pt3dadd( -21.9334, -182.553, -2.25171, 1.03 ) }
    dend_35 { pt3dadd( -22.3093, -184.083, -2.41079, 1.03 ) }
    dend_35 { pt3dadd( -22.5427, -185.126, -2.50828, 1.25 ) }
    dend_35 { pt3dadd( -22.7606, -186.146, -2.59588, 1.25 ) }
    dend_35 { pt3dadd( -23.0739, -188.071, -2.71894, 0.96 ) }
    dend_35 { pt3dadd( -23.2948, -189.63, -2.77525, 0.96 ) }
    dend_35 { pt3dadd( -23.7019, -192.364, -2.84898, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_35 { pt3dadd( -23.9488, -193.975, -2.85856, 0.88 ) }
    dend_35 { pt3dadd( -24.1465, -195.501, -2.84232, 0.96 ) }
    dend_35 { pt3dadd( -24.3231, -197.242, -2.7962, 0.96 ) }
    dend_35 { pt3dadd( -24.4449, -198.729, -2.72357, 0.74 ) }
    dend_35 { pt3dadd( -24.5406, -200.16, -2.62721, 0.52 ) }
    dend_35 { pt3dadd( -24.607, -201.349, -2.5219, 0.52 ) }
    dend_35 { pt3dadd( -24.6771, -202.809, -2.36771, 0.37 ) }
    dend_35 { pt3dadd( -24.7279, -203.972, -2.2406, 0.74 ) }
    dend_35 { pt3dadd( -24.807, -205.235, -2.10006, 0.74 ) }
    dend_35 { pt3dadd( -24.9113, -206.658, -1.92491, 1.03 ) }
    dend_35 { pt3dadd( -24.9927, -207.563, -1.80825, 1.18 ) }
    dend_35 { pt3dadd( -25.1232, -208.814, -1.65678, 1.33 ) }
    dend_35 { pt3dadd( -25.2437, -209.757, -1.53952, 1.33 ) }
    dend_35 { pt3dadd( -25.3584, -210.762, -1.36603, 1.18 ) }
    dend_35 { pt3dadd( -25.5219, -212.226, -0.964735, 0.96 ) }
    dend_35 { pt3dadd( -25.6463, -213.344, -0.540682, 0.81 ) }
    dend_35 { pt3dadd( -25.7584, -214.472, -0.0285075, 0.81 ) }
    dend_35 { pt3dadd( -25.8409, -215.708, 0.59626, 0.81 ) }
    dend_35 { pt3dadd( -25.8946, -216.791, 1.15858, 0.59 ) }
    dend_35 { pt3dadd( -25.9567, -218.579, 2.05058, 0.66 ) }
    dend_35 { pt3dadd( -26.0108, -219.342, 2.39261, 0.66 ) }
    dend_35 { pt3dadd( -26.1961, -220.712, 2.87622, 1.18 ) }
    dend_35 { pt3dadd( -26.557, -222.125, 3.15643, 1.47 ) }
    dend_35 { pt3dadd( -27.0299, -223.347, 3.21079, 1.55 ) }
    dend_35 { pt3dadd( -27.5085, -224.236, 3.13774, 1.55 ) }
    dend_35 { pt3dadd( -28.3313, -225.433, 2.92974, 1.4 ) }
    dend_35 { pt3dadd( -29.5058, -226.82, 2.64842, 1.18 ) }
    dend_35 { pt3dadd( -30.9291, -228.285, 2.33466, 0.66 ) }
    dend_35 { pt3dadd( -32.1252, -229.431, 2.10309, 0.74 ) }
    dend_35 { pt3dadd( -33.6905, -230.87, 1.8483, 1.18 ) }
    dend_35 { pt3dadd( -34.9944, -232.027, 1.69792, 1.25 ) }
    dend_35 { pt3dadd( -36.3717, -233.215, 1.6217, 1.25 ) }
    dend_35 { pt3dadd( -37.5484, -234.199, 1.64526, 1.25 ) }
    dend_35 { pt3dadd( -38.7518, -235.114, 1.73654, 1.33 ) }
    dend_35 { pt3dadd( -39.4504, -235.575, 1.83024, 1.33 ) }
    dend_35 { pt3dadd( -40.5864, -236.204, 2.07968, 1.03 ) }
    dend_35 { pt3dadd( -41.572, -236.651, 2.37502, 0.74 ) }
    dend_35 { pt3dadd( -42.3614, -236.956, 2.64767, 0.59 ) }
    dend_35 { pt3dadd( -43.4017, -237.358, 3.03983, 0.59 ) }
    dend_35 { pt3dadd( -44.4398, -237.821, 3.45285, 0.88 ) }
    dend_35 { pt3dadd( -45.4712, -238.446, 3.91111, 1.18 ) }
    dend_35 { pt3dadd( -46.4293, -239.208, 4.41237, 1.18 ) }
    dend_35 { pt3dadd( -47.2688, -240.023, 4.9111, 1.18 ) }
    dend_35 { pt3dadd( -48.0524, -240.928, 5.39859, 1.18 ) }
    dend_35 { pt3dadd( -48.6531, -241.717, 5.77207, 1.18 ) }
    dend_35 { pt3dadd( -49.4837, -242.931, 6.28157, 0.81 ) }
    dend_35 { pt3dadd( -49.9808, -243.733, 6.57558, 0.59 ) }
    dend_35 { pt3dadd( -50.4372, -244.572, 6.83183, 0.52 ) }
    dend_35 { pt3dadd( -51.3102, -246.36, 7.2815, 0.96 ) }
    dend_35 { pt3dadd( -51.8117, -247.558, 7.5126, 1.18 ) }
    dend_35 { pt3dadd( -52.2291, -248.675, 7.67223, 1.18 ) }
    dend_35 { pt3dadd( -52.7647, -250.198, 7.81809, 0.88 ) }
    dend_35 { pt3dadd( -53.2838, -251.733, 7.91812, 0.59 ) }
    dend_35 { pt3dadd( -53.7089, -253.114, 7.99019, 0.59 ) }
    dend_35 { pt3dadd( -54.1721, -254.723, 8.06899, 0.59 ) }
    dend_35 { pt3dadd( -54.6037, -256.224, 8.14457, 0.74 ) }
    dend_35 { pt3dadd( -55.1082, -257.903, 8.23428, 1.33 ) }
    dend_35 { pt3dadd( -55.5631, -259.362, 8.31547, 1.69 ) }
    dend_35 { pt3dadd( -56.1477, -261.163, 8.41867, 1.77 ) }
    dend_35 { pt3dadd( -56.4822, -262.223, 8.47613, 1.77 ) }
    dend_35 { pt3dadd( -56.8952, -263.559, 8.51522, 1.77 ) }
    dend_35 { pt3dadd( -57.2349, -264.843, 8.51288, 1.47 ) }
    dend_35 { pt3dadd( -57.5515, -266.269, 8.4649, 1.03 ) }
    dend_35 { pt3dadd( -57.8378, -267.672, 8.38153, 1.03 ) }
    dend_35 { pt3dadd( -58.1693, -269.311, 8.24528, 1.03 ) }
    dend_35 { pt3dadd( -58.4926, -271.011, 8.09896, 1.11 ) }
    dend_35 { pt3dadd( -58.7745, -272.612, 7.97235, 1.33 ) }
    dend_35 { pt3dadd( -58.9781, -274.07, 7.8786, 1.03 ) }
    dend_35 { pt3dadd( -59.1599, -276.047, 7.78499, 0.81 ) }
    dend_35 { pt3dadd( -59.234, -277.431, 7.74559, 1.03 ) }
    dend_35 { pt3dadd( -59.2664, -279.171, 7.7306, 0.81 ) }
    dend_35 { pt3dadd( -59.2592, -280.12, 7.74227, 0.81 ) }
    dend_35 { pt3dadd( -59.1882, -282.687, 7.78551, 0.74 ) }
    dend_35 { pt3dadd( -59.068, -285.267, 7.83908, 0.74 ) }
    dend_35 { pt3dadd( -58.9282, -287.341, 7.88331, 0.74 ) }
    dend_35 { pt3dadd( -58.7291, -290.371, 7.94931, 0.74 ) }
    dend_35 { pt3dadd( -58.6399, -292.461, 7.98444, 0.74 ) }
    dend_35 { pt3dadd( -58.635, -293.819, 8.00878, 1.18 ) }
    dend_35 { pt3dadd( -58.7322, -295.213, 8.05157, 1.4 ) }
    dend_35 { pt3dadd( -58.987, -296.656, 8.12892, 1.4 ) }
    dend_35 { pt3dadd( -59.41, -298.023, 8.24301, 1.47 ) }
    dend_35 { pt3dadd( -60.1501, -299.53, 8.41602, 1.55 ) }
    dend_35 { pt3dadd( -60.7496, -300.431, 8.53701, 1.55 ) }
    dend_35 { pt3dadd( -61.8981, -301.83, 8.75972, 1.11 ) }
    dend_35 { pt3dadd( -63.4315, -303.399, 9.05819, 0.88 ) }
    dend_35 { pt3dadd( -64.5585, -304.416, 9.31141, 0.88 ) }
    dend_35 { pt3dadd( -65.8576, -305.458, 9.63569, 1.03 ) }
    dend_35 { pt3dadd( -66.7584, -306.135, 9.86735, 1.03 ) }
    dend_35 { pt3dadd( -67.4725, -306.686, 10.0611, 1.03 ) }
    dend_35 { pt3dadd( -68.5148, -307.612, 10.3995, 0.81 ) }
    dend_35 { pt3dadd( -69.708, -308.925, 10.8416, 0.59 ) }
    dend_35 { pt3dadd( -71.0026, -310.731, 11.3715, 0.59 ) }
    dend_35 { pt3dadd( -71.8095, -312.137, 11.7368, 0.88 ) }
    dend_35 { pt3dadd( -72.4057, -313.44, 12.0436, 0.88 ) }
    dend_35 { pt3dadd( -73.1569, -315.489, 12.4625, 0.74 ) }
    dend_35 { pt3dadd( -73.5635, -316.9, 12.7093, 0.96 ) }
    dend_35 { pt3dadd( -73.8846, -318.291, 12.8869, 1.11 ) }
    dend_35 { pt3dadd( -74.068, -319.291, 12.9914, 1.11 ) }
    dend_35 { pt3dadd( -74.246, -320.343, 13.066, 0.88 ) }
    dend_35 { pt3dadd( -74.5128, -321.79, 13.0899, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_35 { pt3dadd( -74.7238, -322.807, 13.0757, 0.66 ) }
    dend_35 { pt3dadd( -75.075, -324.518, 13.0558, 0.96 ) }
    dend_35 { pt3dadd( -75.3324, -325.825, 13.035, 0.96 ) }
    dend_35 { pt3dadd( -75.6464, -327.498, 12.9999, 0.66 ) }
    dend_35 { pt3dadd( -75.9328, -329.024, 12.9653, 0.74 ) }
    dend_35 { pt3dadd( -76.3761, -331.473, 12.9357, 0.96 ) }
    dend_35 { pt3dadd( -76.6198, -332.887, 12.9577, 0.96 ) }
    dend_35 { pt3dadd( -76.8653, -334.362, 12.9882, 0.96 ) }
    dend_35 { pt3dadd( -77.1629, -336.053, 12.9978, 0.66 ) }
    dend_35 { pt3dadd( -77.6122, -338.548, 12.9674, 0.66 ) }
    dend_35 { pt3dadd( -77.9896, -340.932, 12.8678, 0.66 ) }
    dend_35 { pt3dadd( -78.1872, -342.356, 12.7636, 0.81 ) }
    dend_35 { pt3dadd( -78.4861, -344.848, 12.5254, 0.74 ) }
    dend_35 { pt3dadd( -78.6829, -346.823, 12.2916, 0.74 ) }
    dend_35 { pt3dadd( -78.8332, -348.905, 12.0052, 0.96 ) }
    dend_35 { pt3dadd( -78.9191, -350.654, 11.7402, 0.96 ) }
    dend_35 { pt3dadd( -78.9725, -351.814, 11.5743, 1.62 ) }
    dend_35 { pt3dadd( -79.0322, -352.452, 11.5118, 1.62 ) }
    dend_35 { pt3dadd( -79.1559, -353.29, 11.502, 1.62 ) }
    dend_35 { pt3dadd( -79.3845, -354.516, 11.5558, 1.4 ) }
    dend_35 { pt3dadd( -79.6792, -355.797, 11.6588, 0.88 ) }
    dend_35 { pt3dadd( -80.0786, -357.437, 11.8278, 0.59 ) }
    dend_35 { pt3dadd( -80.6078, -359.666, 12.0828, 0.81 ) }
    dend_35 { pt3dadd( -81.0342, -361.46, 12.303, 0.96 ) }
    dend_35 { pt3dadd( -81.3609, -362.908, 12.4701, 0.96 ) }
    dend_35 { pt3dadd( -81.7247, -364.657, 12.6406, 1.11 ) }
    dend_35 { pt3dadd( -81.9639, -365.801, 12.7375, 1.11 ) }
    dend_35 { pt3dadd( -82.1674, -366.686, 12.801, 1.33 ) }
    dend_35 { pt3dadd( -82.3827, -367.547, 12.8562, 1.33 ) }
    dend_35 { pt3dadd( -82.8233, -368.947, 12.9762, 1.03 ) }
    dend_35 { pt3dadd( -83.3676, -370.327, 13.1315, 0.66 ) }
    dend_35 { pt3dadd( -83.8259, -371.357, 13.2669, 0.37 ) }
    dend_35 { pt3dadd( -84.1736, -372.108, 13.3708, 0.37 ) }
    dend_35 { pt3dadd( -84.5951, -373.093, 13.5066, 0.37 ) }
    dend_35 { pt3dadd( -84.9732, -374.028, 13.6372, 1.03 ) }
    dend_35 { pt3dadd( -85.3816, -375.069, 13.7811, 1.25 ) }
    dend_35 { pt3dadd( -85.6449, -375.842, 13.8851, 1.25 ) }
    dend_35 { pt3dadd( -86.0592, -377.289, 14.062, 0.96 ) }
    dend_35 { pt3dadd( -86.5125, -379.109, 14.2611, 0.52 ) }
    dend_35 { pt3dadd( -86.8992, -380.747, 14.4213, 0.52 ) }
    dend_35 { pt3dadd( -87.3993, -383.031, 14.6162, 0.52 ) }
    dend_35 { pt3dadd( -87.7499, -384.891, 14.7561, 0.81 ) }
    dend_35 { pt3dadd( -87.994, -386.248, 14.8606, 1.03 ) }
    dend_35 { pt3dadd( -88.2249, -387.473, 14.9595, 1.03 ) }
    dend_35 { pt3dadd( -88.4123, -388.419, 15.0365, 0.81 ) }
    dend_35 { pt3dadd( -88.6624, -389.558, 15.127, 0.81 ) }
    dend_35 { pt3dadd( -89.0712, -391.157, 15.2465, 0.59 ) }
    dend_35 { pt3dadd( -89.608, -392.834, 15.3665, 0.44 ) }
    dend_35 { pt3dadd( -90.463, -394.941, 15.5472, 0.88 ) }
    dend_35 { pt3dadd( -90.9097, -395.844, 15.639, 0.88 ) }
    dend_35 { pt3dadd( -91.5893, -397.01, 15.7749, 0.59 ) }
    dend_35 { pt3dadd( -92.319, -398.003, 15.9205, 0.59 ) }
    dend_35 { pt3dadd( -93.4976, -399.246, 16.1337, 0.59 ) }
    dend_35 { pt3dadd( -94.784, -400.334, 16.3421, 0.81 ) }
    dend_35 { pt3dadd( -95.524, -400.853, 16.4582, 0.81 ) }
    dend_35 { pt3dadd( -96.1237, -401.225, 16.5499, 0.81 ) }
    dend_35 { pt3dadd( -97.4847, -401.945, 16.7466, 0.59 ) }
    dend_35 { pt3dadd( -98.9864, -402.588, 16.9545, 0.88 ) }
    dend_35 { pt3dadd( -100.485, -403.103, 17.1492, 1.03 ) }
    dend_35 { pt3dadd( -101.92, -403.518, 17.3233, 1.03 ) }
    dend_35 { pt3dadd( -103.108, -403.795, 17.4715, 0.59 ) }
    dend_35 { pt3dadd( -104.178, -404.012, 17.6185, 0.59 ) }
    dend_35 { pt3dadd( -105.086, -404.199, 17.7559, 0.59 ) }
    dend_35 { pt3dadd( -105.862, -404.355, 17.8985, 0.59 ) }
    dend_35 { pt3dadd( -106.686, -404.559, 18.0613, 0.59 ) }
    dend_35 { pt3dadd( -107.76, -404.883, 18.2922, 0.44 ) }
    dend_35 { pt3dadd( -109.362, -405.485, 18.6609, 0.81 ) }
    dend_35 { pt3dadd( -110.692, -406.089, 18.9929, 1.11 ) }
    dend_35 { pt3dadd( -112.133, -406.865, 19.3866, 0.81 ) }
    dend_35 { pt3dadd( -113.568, -407.77, 19.8031, 0.66 ) }
    dend_35 { pt3dadd( -114.223, -408.242, 19.9995, 0.66 ) }
    dend_35 { pt3dadd( -115.007, -408.887, 20.2408, 0.52 ) }
    dend_35 { pt3dadd( -115.898, -409.697, 20.5291, 0.52 ) }
    dend_35 { pt3dadd( -116.796, -410.617, 20.8299, 0.52 ) }
    dend_35 { pt3dadd( -117.693, -411.607, 21.1395, 0.52 ) }
    dend_35 { pt3dadd( -118.232, -412.263, 21.3319, 1.11 ) }
    dend_35 { pt3dadd( -119.423, -413.865, 21.7503, 1.4 ) }
    dend_35 { pt3dadd( -120.064, -414.827, 21.9718, 1.84 ) }
    dend_35 { pt3dadd( -120.767, -415.992, 22.1944, 2.43 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 79/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -9.67503, -86.9058, -11.1399, 0.66 ) }
    dend_32 { pt3dadd( -9.86818, -89.0601, -11.1305, 0.66 ) }
    dend_32 { pt3dadd( -10.0059, -90.3867, -11.1369, 0.37 ) }
    dend_32 { pt3dadd( -10.0811, -91.2737, -11.168, 0.81 ) }
    dend_32 { pt3dadd( -10.1514, -92.4211, -11.223, 1.03 ) }
    dend_32 { pt3dadd( -10.2109, -93.4186, -11.2782, 1.11 ) }
    dend_32 { pt3dadd( -10.2754, -94.4828, -11.3553, 0.88 ) }
    dend_32 { pt3dadd( -10.3394, -95.7084, -11.4864, 0.59 ) }
    dend_32 { pt3dadd( -10.3686, -97.1366, -11.671, 0.29 ) }
    dend_32 { pt3dadd( -10.3527, -98.1737, -11.8224, 0.29 ) }
    dend_32 { pt3dadd( -10.321, -98.6498, -11.8952, 0.29 ) }
    dend_32 { pt3dadd( -10.1655, -99.7263, -12.074, 0.74 ) }
    dend_32 { pt3dadd( -9.93207, -100.732, -12.2466, 1.11 ) }
    dend_32 { pt3dadd( -9.74274, -101.368, -12.3499, 1.11 ) }
    dend_32 { pt3dadd( -9.43549, -102.306, -12.4956, 1.11 ) }
    dend_32 { pt3dadd( -9.06571, -103.395, -12.6171, 0.81 ) }
    dend_32 { pt3dadd( -8.47811, -105.192, -12.7406, 0.44 ) }
    dend_32 { pt3dadd( -7.9701, -106.898, -12.7907, 0.59 ) }
    dend_32 { pt3dadd( -7.71277, -107.925, -12.796, 0.88 ) }
    dend_32 { pt3dadd( -7.50783, -109.003, -12.7761, 0.88 ) }
    dend_32 { pt3dadd( -7.30809, -110.543, -12.7203, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_32 { pt3dadd( -7.21038, -112.051, -12.6284, 0.44 ) }
    dend_32 { pt3dadd( -7.2099, -113.238, -12.5223, 1.03 ) }
    dend_32 { pt3dadd( -7.24812, -114.23, -12.4277, 0.74 ) }
    dend_32 { pt3dadd( -7.31577, -115.473, -12.3245, 0.52 ) }
    dend_32 { pt3dadd( -7.3741, -116.434, -12.2634, 0.88 ) }
    dend_32 { pt3dadd( -7.42732, -117.317, -12.2641, 1.18 ) }
    dend_32 { pt3dadd( -7.47038, -118.081, -12.2793, 1.18 ) }
    dend_32 { pt3dadd( -7.52612, -118.957, -12.309, 0.88 ) }
    dend_32 { pt3dadd( -7.62357, -120.478, -12.379, 0.29 ) }
    dend_32 { pt3dadd( -7.70089, -121.629, -12.449, 0.29 ) }
    dend_32 { pt3dadd( -7.8121, -123.275, -12.5867, 1.03 ) }
    dend_32 { pt3dadd( -7.87437, -124.369, -12.6936, 1.47 ) }
    dend_32 { pt3dadd( -7.91452, -125.059, -12.7626, 1.47 ) }
    dend_32 { pt3dadd( -7.95341, -125.818, -12.8378, 1.47 ) }
    dend_32 { pt3dadd( -7.98715, -126.952, -12.9402, 1.25 ) }
    dend_32 { pt3dadd( -8.01344, -128.341, -13.0442, 0.44 ) }
    dend_32 { pt3dadd( -8.01657, -129.488, -13.1043, 0.44 ) }
    dend_32 { pt3dadd( -8.0067, -130.609, -13.1659, 0.44 ) }
    dend_32 { pt3dadd( -7.99346, -131.186, -13.1974, 0.59 ) }
    dend_32 { pt3dadd( -7.95832, -132.54, -13.2718, 0.59 ) }
    dend_32 { pt3dadd( -7.91253, -133.573, -13.3279, 0.37 ) }
    dend_32 { pt3dadd( -7.87246, -134.436, -13.374, 0.81 ) }
    dend_32 { pt3dadd( -7.83962, -135.226, -13.4065, 1.03 ) }
    dend_32 { pt3dadd( -7.82139, -135.803, -13.4222, 1.03 ) }
    dend_32 { pt3dadd( -7.81866, -136.519, -13.4318, 0.59 ) }
    dend_32 { pt3dadd( -7.81503, -137.685, -13.4279, 0.22 ) }
    dend_32 { pt3dadd( -7.79048, -138.417, -13.4138, 0.22 ) }
    dend_32 { pt3dadd( -7.74041, -139.282, -13.3882, 0.22 ) }
    dend_32 { pt3dadd( -7.67094, -140.214, -13.3542, 0.66 ) }
    dend_32 { pt3dadd( -7.56992, -141.329, -13.3123, 0.88 ) }
    dend_32 { pt3dadd( -7.38658, -142.958, -13.2466, 0.88 ) }
    dend_32 { pt3dadd( -7.15836, -144.851, -13.1705, 0.96 ) }
    dend_32 { pt3dadd( -6.97624, -146.278, -13.1337, 1.18 ) }
    dend_32 { pt3dadd( -6.84023, -147.433, -13.1313, 0.66 ) }
    dend_32 { pt3dadd( -6.73549, -148.38, -13.1364, 0.52 ) }
    dend_32 { pt3dadd( -6.5659, -150.187, -13.1726, 0.52 ) }
    dend_32 { pt3dadd( -6.45971, -151.581, -13.2195, 0.81 ) }
    dend_32 { pt3dadd( -6.36383, -152.987, -13.2831, 0.52 ) }
    dend_32 { pt3dadd( -6.29179, -154.039, -13.3274, 0.52 ) }
    dend_32 { pt3dadd( -6.19209, -155.283, -13.4004, 1.47 ) }
    dend_32 { pt3dadd( -6.06874, -156.557, -13.4991, 1.77 ) }
    dend_32 { pt3dadd( -5.94887, -157.541, -13.6081, 1.77 ) }
    dend_32 { pt3dadd( -5.85924, -158.107, -13.6796, 1.77 ) }
    dend_32 { pt3dadd( -5.68023, -159.045, -13.7963, 1.25 ) }
    dend_32 { pt3dadd( -5.45097, -160.134, -13.9277, 0.81 ) }
    dend_32 { pt3dadd( -5.17723, -161.455, -14.0944, 0.44 ) }
    dend_32 { pt3dadd( -4.82783, -163.112, -14.294, 0.37 ) }
    dend_32 { pt3dadd( -4.61523, -164.13, -14.4098, 0.52 ) }
    dend_32 { pt3dadd( -4.34452, -165.363, -14.5366, 0.52 ) }
    dend_32 { pt3dadd( -4.13004, -166.286, -14.6213, 0.66 ) }
    dend_32 { pt3dadd( -3.82479, -167.502, -14.7268, 0.66 ) }
    dend_32 { pt3dadd( -3.39774, -169.058, -14.9089, 0.88 ) }
    dend_32 { pt3dadd( -3.00098, -170.364, -15.0957, 1.25 ) }
    dend_32 { pt3dadd( -2.75478, -171.101, -15.2316, 1.25 ) }
    dend_32 { pt3dadd( -2.51886, -171.735, -15.3677, 1.25 ) }
    dend_32 { pt3dadd( -2.01652, -172.98, -15.6701, 1.11 ) }
    dend_32 { pt3dadd( -1.54738, -174.079, -15.9629, 0.74 ) }
    dend_32 { pt3dadd( -1.11724, -175.045, -16.2419, 0.29 ) }
    dend_32 { pt3dadd( -0.861076, -175.616, -16.4192, 0.29 ) }
    dend_32 { pt3dadd( -0.259314, -177.009, -16.8417, 0.44 ) }
    dend_32 { pt3dadd( 0.0632594, -177.808, -17.0591, 0.88 ) }
    dend_32 { pt3dadd( 0.315266, -178.533, -17.2228, 1.33 ) }
    dend_32 { pt3dadd( 0.570027, -179.391, -17.3726, 1.47 ) }
    dend_32 { pt3dadd( 0.801521, -180.322, -17.4955, 1.47 ) }
    dend_32 { pt3dadd( 0.982292, -181.15, -17.575, 1.25 ) }
    dend_32 { pt3dadd( 1.20389, -182.28, -17.6508, 0.44 ) }
    dend_32 { pt3dadd( 1.49187, -183.938, -17.6704, 0.29 ) }
    dend_32 { pt3dadd( 1.67893, -185.252, -17.6193, 0.29 ) }
    dend_32 { pt3dadd( 1.82596, -186.593, -17.5138, 0.29 ) }
    dend_32 { pt3dadd( 1.90678, -187.661, -17.3957, 0.74 ) }
    dend_32 { pt3dadd( 1.93327, -188.416, -17.2948, 0.88 ) }
    dend_32 { pt3dadd( 1.90271, -189.945, -17.0628, 0.96 ) }
    dend_32 { pt3dadd( 1.79423, -191.25, -16.8687, 1.03 ) }
    dend_32 { pt3dadd( 1.65331, -192.231, -16.7547, 1.03 ) }
    dend_32 { pt3dadd( 1.46325, -193.205, -16.6572, 0.59 ) }
    dend_32 { pt3dadd( 1.24135, -194.245, -16.5692, 0.22 ) }
    dend_32 { pt3dadd( 1.10634, -194.9, -16.5328, 0.22 ) }
    dend_32 { pt3dadd( 0.830462, -196.41, -16.5228, 0.96 ) }
    dend_32 { pt3dadd( 0.676959, -197.304, -16.5404, 1.11 ) }
    dend_32 { pt3dadd( 0.516231, -198.288, -16.5334, 1.11 ) }
    dend_32 { pt3dadd( 0.381134, -199.231, -16.4877, 0.59 ) }
    dend_32 { pt3dadd( 0.266491, -200.19, -16.4111, 0.29 ) }
    dend_32 { pt3dadd( 0.185726, -201.01, -16.3173, 0.29 ) }
    dend_32 { pt3dadd( 0.116642, -201.694, -16.2192, 0.29 ) }
    dend_32 { pt3dadd( -0.0332887, -203.177, -15.9767, 0.44 ) }
    dend_32 { pt3dadd( -0.167014, -204.434, -15.7396, 0.66 ) }
    dend_32 { pt3dadd( -0.309458, -205.761, -15.4763, 0.66 ) }
    dend_32 { pt3dadd( -0.400005, -206.721, -15.2908, 0.81 ) }
    dend_32 { pt3dadd( -0.487338, -207.788, -15.1056, 0.81 ) }
    dend_32 { pt3dadd( -0.560728, -208.809, -14.9451, 0.52 ) }
    dend_32 { pt3dadd( -0.671297, -210.104, -14.7839, 0.66 ) }
    dend_32 { pt3dadd( -0.76549, -211.063, -14.6758, 0.66 ) }
    dend_32 { pt3dadd( -0.948928, -212.675, -14.5829, 0.37 ) }
    dend_32 { pt3dadd( -1.12394, -214.102, -14.5786, 0.37 ) }
    dend_32 { pt3dadd( -1.27778, -215.24, -14.633, 1.03 ) }
    dend_32 { pt3dadd( -1.43374, -216.383, -14.7723, 1.47 ) }
    dend_32 { pt3dadd( -1.59736, -217.504, -14.9879, 1.62 ) }
    dend_32 { pt3dadd( -1.91956, -219.501, -15.5083, 0.88 ) }
    dend_32 { pt3dadd( -2.17779, -220.796, -15.9718, 0.59 ) }
    dend_32 { pt3dadd( -2.42241, -221.779, -16.4224, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_32 { pt3dadd( -2.91911, -223.354, -17.2696, 0.29 ) }
    dend_32 { pt3dadd( -3.10146, -223.817, -17.5285, 0.29 ) }
    dend_32 { pt3dadd( -3.41749, -224.477, -17.8947, 0.29 ) }
    dend_32 { pt3dadd( -4.05342, -225.702, -18.5025, 0.29 ) }
    dend_32 { pt3dadd( -4.6893, -226.856, -19.0871, 0.59 ) }
    dend_32 { pt3dadd( -5.35675, -228.08, -19.6803, 0.59 ) }
    dend_32 { pt3dadd( -5.77879, -228.838, -20.0425, 0.44 ) }
    dend_32 { pt3dadd( -6.30126, -229.746, -20.4993, 0.44 ) }
    dend_32 { pt3dadd( -6.641, -230.297, -20.8379, 0.29 ) }
    dend_32 { pt3dadd( -7.12335, -231.082, -21.3947, 1.4 ) }
    dend_32 { pt3dadd( -7.81611, -231.969, -22.2796, 1.62 ) }
    dend_32 { pt3dadd( -8.46453, -232.566, -23.0979, 1.4 ) }
    dend_32 { pt3dadd( -9.10578, -232.984, -23.8736, 1.11 ) }
    dend_32 { pt3dadd( -10.1949, -233.528, -25.1171, 0.81 ) }
    dend_32 { pt3dadd( -10.8008, -233.804, -25.8012, 0.59 ) }
    dend_32 { pt3dadd( -11.4593, -234.142, -26.5835, 0.74 ) }
    dend_32 { pt3dadd( -12.0845, -234.562, -27.3647, 0.81 ) }
    dend_32 { pt3dadd( -12.5678, -235.116, -28.0093, 0.52 ) }
    dend_32 { pt3dadd( -12.9176, -235.686, -28.5184, 0.52 ) }
    dend_32 { pt3dadd( -13.2437, -236.327, -28.9758, 0.74 ) }
    dend_32 { pt3dadd( -13.6812, -237.24, -29.6364, 0.74 ) }
    dend_32 { pt3dadd( -13.9083, -237.81, -29.9936, 0.74 ) }
    dend_32 { pt3dadd( -14.1276, -238.455, -30.3973, 0.52 ) }
    dend_32 { pt3dadd( -14.4588, -239.475, -30.9725, 0.52 ) }
    dend_32 { pt3dadd( -14.6445, -240.035, -31.2693, 0.52 ) }
    dend_32 { pt3dadd( -15.015, -241.135, -31.7802, 1.69 ) }
    dend_32 { pt3dadd( -15.2511, -241.863, -32.056, 2.14 ) }
    dend_32 { pt3dadd( -15.6955, -243.408, -32.5213, 1.55 ) }
    dend_32 { pt3dadd( -16.1207, -245.031, -32.9103, 0.29 ) }
    dend_32 { pt3dadd( -16.3536, -245.982, -33.094, 0.29 ) }
    dend_32 { pt3dadd( -16.6667, -247.29, -33.3053, 0.44 ) }
    dend_32 { pt3dadd( -16.971, -248.539, -33.4622, 0.59 ) }
    dend_32 { pt3dadd( -17.2471, -249.646, -33.5751, 0.59 ) }
    dend_32 { pt3dadd( -17.5384, -250.774, -33.6481, 0.29 ) }
    dend_32 { pt3dadd( -17.696, -251.381, -33.6889, 0.29 ) }
    dend_32 { pt3dadd( -17.9132, -252.227, -33.7449, 0.96 ) }
    dend_32 { pt3dadd( -18.0916, -252.971, -33.7915, 1.03 ) }
    dend_32 { pt3dadd( -18.3114, -254.006, -33.8546, 0.52 ) }
    dend_32 { pt3dadd( -18.5523, -255.358, -33.9335, 0.29 ) }
    dend_32 { pt3dadd( -18.6667, -256.127, -33.9735, 0.81 ) }
    dend_32 { pt3dadd( -18.7833, -257.021, -34.0131, 0.96 ) }
    dend_32 { pt3dadd( -18.8666, -257.711, -34.0431, 0.96 ) }
    dend_32 { pt3dadd( -19.0099, -258.921, -34.0978, 0.29 ) }
    dend_32 { pt3dadd( -19.196, -260.3, -34.1633, 0.29 ) }
    dend_32 { pt3dadd( -19.3997, -261.743, -34.2745, 1.47 ) }
    dend_32 { pt3dadd( -19.5399, -262.753, -34.3721, 1.92 ) }
    dend_32 { pt3dadd( -19.602, -263.244, -34.4236, 1.92 ) }
    dend_32 { pt3dadd( -19.7546, -264.467, -34.5432, 1.33 ) }
    dend_32 { pt3dadd( -19.9082, -265.828, -34.6786, 0.29 ) }
    dend_32 { pt3dadd( -20.0533, -267.216, -34.8243, 0.29 ) }
    dend_32 { pt3dadd( -20.1547, -268.325, -34.9517, 0.29 ) }
    dend_32 { pt3dadd( -20.3595, -270.735, -35.2451, 0.29 ) }
    dend_32 { pt3dadd( -20.4871, -272.376, -35.4312, 1.4 ) }
    dend_32 { pt3dadd( -20.5554, -273.376, -35.5333, 2.14 ) }
    dend_32 { pt3dadd( -20.5814, -273.813, -35.5729, 2.28 ) }
    dend_32 { pt3dadd( -20.6192, -274.526, -35.6217, 2.28 ) }
    dend_32 { pt3dadd( -20.6675, -275.263, -35.6517, 1.92 ) }
    dend_32 { pt3dadd( -20.7727, -276.33, -35.6191, 0.88 ) }
    dend_32 { pt3dadd( -20.9656, -277.957, -35.4799, 0.29 ) }
    dend_32 { pt3dadd( -21.0972, -278.951, -35.3459, 0.29 ) }
    dend_32 { pt3dadd( -21.2508, -280.063, -35.1614, 0.29 ) }
    dend_32 { pt3dadd( -21.4994, -281.804, -34.8358, 0.29 ) }
    dend_32 { pt3dadd( -21.7473, -283.588, -34.4982, 0.96 ) }
    dend_32 { pt3dadd( -21.9016, -284.782, -34.2816, 1.62 ) }
    dend_32 { pt3dadd( -21.9845, -285.459, -34.1628, 1.62 ) }
    dend_32 { pt3dadd( -22.0587, -286.096, -34.0642, 1.62 ) }
    dend_32 { pt3dadd( -22.2079, -287.47, -33.9067, 1.11 ) }
    dend_32 { pt3dadd( -22.35, -289.156, -33.8618, 0.29 ) }
    dend_32 { pt3dadd( -22.4499, -290.413, -33.9113, 0.29 ) }
    dend_32 { pt3dadd( -22.5331, -291.409, -33.9815, 0.59 ) }
    dend_32 { pt3dadd( -22.5807, -291.902, -34.0291, 0.66 ) }
    dend_32 { pt3dadd( -22.6471, -292.499, -34.0968, 0.66 ) }
    dend_32 { pt3dadd( -22.8627, -294.137, -34.3036, 0.29 ) }
    dend_32 { pt3dadd( -23.1589, -296.034, -34.5969, 0.29 ) }
    dend_32 { pt3dadd( -23.4247, -297.501, -34.849, 0.96 ) }
    dend_32 { pt3dadd( -23.6779, -298.655, -35.0564, 1.4 ) }
    dend_32 { pt3dadd( -23.891, -299.518, -35.2066, 1.4 ) }
    dend_32 { pt3dadd( -24.1261, -300.409, -35.3505, 1.4 ) }
    dend_32 { pt3dadd( -24.4564, -301.587, -35.516, 0.88 ) }
    dend_32 { pt3dadd( -24.8691, -303.027, -35.7111, 0.29 ) }
    dend_32 { pt3dadd( -25.2465, -304.343, -35.8695, 0.29 ) }
    dend_32 { pt3dadd( -25.6457, -305.672, -36.0243, 0.44 ) }
    dend_32 { pt3dadd( -25.9198, -306.512, -36.1161, 0.66 ) }
    dend_32 { pt3dadd( -26.1567, -307.187, -36.1781, 0.66 ) }
    dend_32 { pt3dadd( -26.5989, -308.386, -36.2439, 0.29 ) }
    dend_32 { pt3dadd( -26.8629, -309.107, -36.2769, 0.29 ) }
    dend_32 { pt3dadd( -27.1926, -310.028, -36.3574, 0.29 ) }
    dend_32 { pt3dadd( -27.6454, -311.29, -36.5536, 0.29 ) }
    dend_32 { pt3dadd( -27.9039, -312.01, -36.7157, 0.52 ) }
    dend_32 { pt3dadd( -28.24, -313.01, -36.9883, 0.66 ) }
    dend_32 { pt3dadd( -28.512, -314.01, -37.2227, 0.66 ) }
    dend_32 { pt3dadd( -28.8096, -315.571, -37.5281, 1.4 ) }
    dend_32 { pt3dadd( -28.9314, -316.945, -37.7556, 2.28 ) }
    dend_32 { pt3dadd( -28.9372, -318.32, -37.9525, 2.5 ) }
    dend_32 { pt3dadd( -28.8801, -319.095, -38.0247, 2.5 ) }
    dend_32 { pt3dadd( -28.4173, -321.817, -38.1049, 0.22 ) }
    dend_32 { pt3dadd( -28.1337, -322.919, -38.0536, 0.22 ) }
    dend_32 { pt3dadd( -27.6354, -324.323, -37.8706, 0.37 ) }
    dend_32 { pt3dadd( -27.2593, -325.156, -37.6951, 0.44 ) }
    dend_32 { pt3dadd( -26.5037, -326.393, -37.4655, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_32 { pt3dadd( -25.6119, -327.543, -37.3628, 0.88 ) }
    dend_32 { pt3dadd( -25.0463, -328.089, -37.4442, 1.4 ) }
    dend_32 { pt3dadd( -24.5927, -328.482, -37.5867, 1.4 ) }
    dend_32 { pt3dadd( -23.9644, -329.041, -37.8899, 1.11 ) }
    dend_32 { pt3dadd( -21.957, -330.962, -39.194, 0.29 ) }
    dend_32 { pt3dadd( -21.3087, -331.653, -39.716, 0.29 ) }
    dend_32 { pt3dadd( -20.3145, -332.856, -40.643, 0.81 ) }
    dend_32 { pt3dadd( -19.8232, -333.633, -41.1693, 0.81 ) }
    dend_32 { pt3dadd( -19.0459, -335.276, -42.1269, 0.22 ) }
    dend_32 { pt3dadd( -18.8088, -335.961, -42.4638, 0.22 ) }
    dend_32 { pt3dadd( -18.5756, -337.018, -42.8405, 0.44 ) }
    dend_32 { pt3dadd( -18.4818, -337.613, -43.0166, 0.59 ) }
    dend_32 { pt3dadd( -18.2117, -340.103, -43.6163, 0.22 ) }
    dend_32 { pt3dadd( -18.1371, -340.973, -43.8171, 0.74 ) }
    dend_32 { pt3dadd( -18.0862, -341.745, -43.9859, 1.03 ) }
    dend_32 { pt3dadd( -18.0276, -342.571, -44.1486, 1.03 ) }
    dend_32 { pt3dadd( -17.9705, -343.379, -44.2946, 0.74 ) }
    dend_32 { pt3dadd( -17.9133, -344.131, -44.426, 0.37 ) }
    dend_32 { pt3dadd( -17.745, -346.041, -44.7614, 0.22 ) }
    dend_32 { pt3dadd( -17.5931, -347.94, -45.1064, 0.22 ) }
    dend_32 { pt3dadd( -17.4997, -349.369, -45.3655, 0.88 ) }
    dend_32 { pt3dadd( -17.4423, -350.424, -45.558, 1.62 ) }
    dend_32 { pt3dadd( -17.4181, -351.004, -45.6657, 1.84 ) }
    dend_32 { pt3dadd( -17.4048, -351.702, -45.7969, 1.84 ) }
    dend_32 { pt3dadd( -17.4176, -353.139, -46.0635, 0.52 ) }
    dend_32 { pt3dadd( -17.4785, -354.35, -46.298, 0.22 ) }
    dend_32 { pt3dadd( -17.5699, -355.319, -46.5005, 0.22 ) }
    dend_32 { pt3dadd( -17.6822, -356.152, -46.6833, 0.37 ) }
    dend_32 { pt3dadd( -17.7416, -356.475, -46.7493, 0.37 ) }
    dend_32 { pt3dadd( -17.9287, -357.272, -46.9203, 0.22 ) }
    dend_32 { pt3dadd( -18.1104, -357.919, -47.0632, 0.74 ) }
    dend_32 { pt3dadd( -18.3319, -358.653, -47.2343, 0.74 ) }
    dend_32 { pt3dadd( -18.5468, -359.317, -47.3861, 0.59 ) }
    dend_32 { pt3dadd( -19.0456, -360.752, -47.7087, 0.22 ) }
    dend_32 { pt3dadd( -19.3006, -361.414, -47.8503, 0.22 ) }
    dend_32 { pt3dadd( -19.6951, -362.296, -48.003, 0.59 ) }
    dend_32 { pt3dadd( -20.0195, -362.93, -48.0784, 0.59 ) }
    dend_32 { pt3dadd( -20.3825, -363.581, -48.0966, 0.29 ) }
    dend_32 { pt3dadd( -20.7875, -364.244, -48.0854, 0.22 ) }
    dend_32 { pt3dadd( -21.4067, -365.156, -48.1031, 0.37 ) }
    dend_32 { pt3dadd( -22.2217, -366.247, -48.1581, 0.44 ) }
    dend_32 { pt3dadd( -22.9457, -367.013, -48.321, 0.59 ) }
    dend_32 { pt3dadd( -23.8605, -367.784, -48.6662, 0.37 ) }
    dend_32 { pt3dadd( -24.4151, -368.112, -48.958, 0.22 ) }
    dend_32 { pt3dadd( -25.7852, -368.591, -49.8738, 2.21 ) }
    dend_32 { pt3dadd( -26.2931, -368.623, -50.2897, 2.5 ) }
    dend_32 { pt3dadd( -28.2266, -368.132, -52.1184, 0.22 ) }
    dend_32 { pt3dadd( -28.8111, -367.827, -52.7239, 0.22 ) }
    dend_32 { pt3dadd( -29.5704, -367.185, -53.6388, 0.66 ) }
    dend_32 { pt3dadd( -29.92, -366.78, -54.1169, 0.66 ) }
    dend_32 { pt3dadd( -30.4005, -366.093, -54.8389, 0.37 ) }
    dend_32 { pt3dadd( -31.0514, -365.083, -55.9104, 1.92 ) }
    dend_32 { pt3dadd( -31.2785, -364.726, -56.3013, 1.92 ) }
    dend_32 { pt3dadd( -32.4357, -363.2, -58.375, 0.44 ) }
    dend_32 { pt3dadd( -32.9527, -362.651, -59.3031, 0.59 ) }
    dend_32 { pt3dadd( -33.2793, -362.409, -59.8245, 0.37 ) }
    dend_32 { pt3dadd( -33.821, -362.193, -60.5378, 0.37 ) }
    dend_32 { pt3dadd( -34.394, -362.062, -61.2451, 0.22 ) }
    dend_32 { pt3dadd( -35.819, -361.949, -62.7724, 0.29 ) }
    dend_32 { pt3dadd( -36.3501, -362.017, -63.2031, 0.22 ) }
    dend_32 { pt3dadd( -37.2429, -362.183, -63.8394, 0.22 ) }
    dend_32 { pt3dadd( -38.487, -362.404, -64.6756, 0.22 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 62/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -9.67503, -86.9058, -11.1399, 0.74 ) }
    dend_31 { pt3dadd( -11.2809, -88.0682, -12.0103, 0.74 ) }
    dend_31 { pt3dadd( -11.9132, -88.4783, -12.3564, 0.74 ) }
    dend_31 { pt3dadd( -12.805, -88.9844, -12.8828, 0.74 ) }
    dend_31 { pt3dadd( -13.415, -89.2736, -13.268, 0.52 ) }
    dend_31 { pt3dadd( -14.0206, -89.4675, -13.7053, 0.52 ) }
    dend_31 { pt3dadd( -14.5779, -89.5813, -14.1558, 0.88 ) }
    dend_31 { pt3dadd( -14.9809, -89.5058, -14.6227, 0.88 ) }
    dend_31 { pt3dadd( -15.5554, -89.221, -15.4647, 0.59 ) }
    dend_31 { pt3dadd( -15.8876, -88.9901, -16.0263, 0.37 ) }
    dend_31 { pt3dadd( -16.3713, -88.67, -16.9395, 0.37 ) }
    dend_31 { pt3dadd( -16.643, -88.5487, -17.5353, 1.11 ) }
    dend_31 { pt3dadd( -16.8589, -88.5682, -18.0666, 1.47 ) }
    dend_31 { pt3dadd( -17.0738, -88.6756, -18.5808, 1.47 ) }
    dend_31 { pt3dadd( -17.2421, -88.7896, -18.9435, 1.47 ) }
    dend_31 { pt3dadd( -17.6425, -89.0571, -19.7539, 0.96 ) }
    dend_31 { pt3dadd( -18.0128, -89.2389, -20.4532, 0.59 ) }
    dend_31 { pt3dadd( -18.3766, -89.3261, -21.0542, 0.59 ) }
    dend_31 { pt3dadd( -18.792, -89.3565, -21.615, 0.59 ) }
    dend_31 { pt3dadd( -19.244, -89.3824, -22.1867, 0.81 ) }
    dend_31 { pt3dadd( -19.6835, -89.4079, -22.7161, 0.81 ) }
    dend_31 { pt3dadd( -20.0468, -89.4241, -23.1004, 0.81 ) }
    dend_31 { pt3dadd( -20.4904, -89.4666, -23.5384, 0.81 ) }
    dend_31 { pt3dadd( -20.9402, -89.7501, -24.0887, 0.22 ) }
    dend_31 { pt3dadd( -21.1633, -90.466, -24.5974, 0.22 ) }
    dend_31 { pt3dadd( -21.2687, -91.0461, -24.9781, 0.66 ) }
    dend_31 { pt3dadd( -21.3109, -91.3939, -25.2046, 0.88 ) }
    dend_31 { pt3dadd( -21.3565, -91.9006, -25.5513, 0.88 ) }
    dend_31 { pt3dadd( -21.3854, -92.4952, -26.095, 0.44 ) }
    dend_31 { pt3dadd( -21.4469, -93.0791, -26.8667, 1.4 ) }
    dend_31 { pt3dadd( -21.5228, -93.3897, -27.5565, 2.14 ) }
    dend_31 { pt3dadd( -21.5549, -93.4662, -27.8643, 2.58 ) }
    dend_31 { pt3dadd( -21.6292, -93.522, -28.4968, 2.36 ) }
    dend_31 { pt3dadd( -21.8244, -93.5104, -30.2117, 1.69 ) }
    dend_31 { pt3dadd( -21.9368, -93.449, -31.0993, 0.37 ) }
    dend_31 { pt3dadd( -22.122, -93.3252, -32.1208, 0.37 ) }
    dend_31 { pt3dadd( -22.3072, -93.2135, -32.914, 0.37 ) }
    dend_31 { pt3dadd( -22.7468, -93.0311, -34.4391, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_31 { pt3dadd( -22.9501, -92.9869, -35.045, 2.14 ) }
    dend_31 { pt3dadd( -23.1777, -92.9943, -35.6264, 2.5 ) }
    dend_31 { pt3dadd( -23.8426, -93.1975, -37.3635, 0.44 ) }
    dend_31 { pt3dadd( -24.0478, -93.3119, -37.9102, 0.44 ) }
    dend_31 { pt3dadd( -24.3407, -93.51, -38.776, 0.44 ) }
    dend_31 { pt3dadd( -24.5795, -93.6691, -39.5967, 0.44 ) }
    dend_31 { pt3dadd( -24.8053, -93.7802, -40.4602, 1.4 ) }
    dend_31 { pt3dadd( -25.0318, -93.8673, -41.4242, 2.06 ) }
    dend_31 { pt3dadd( -25.202, -93.9385, -42.3258, 2.06 ) }
    dend_31 { pt3dadd( -25.3805, -93.9724, -43.4604, 0.66 ) }
    dend_31 { pt3dadd( -25.4816, -93.9766, -44.3958, 0.81 ) }
    dend_31 { pt3dadd( -25.5462, -93.983, -45.4538, 0.52 ) }
    dend_31 { pt3dadd( -25.5258, -94.0355, -46.4049, 1.77 ) }
    dend_31 { pt3dadd( -25.4451, -94.1326, -47.1215, 2.28 ) }
    dend_31 { pt3dadd( -24.9626, -94.6823, -49.4324, 1.33 ) }
    dend_31 { pt3dadd( -24.698, -94.9979, -50.2971, 1.77 ) }
    dend_31 { pt3dadd( -24.4965, -95.2257, -50.8326, 1.77 ) }
    dend_31 { pt3dadd( -24.0773, -95.6867, -51.847, 0.74 ) }
    dend_31 { pt3dadd( -23.7327, -96.063, -52.6467, 0.52 ) }
    dend_31 { pt3dadd( -23.2544, -96.6575, -53.8134, 0.52 ) }
    dend_31 { pt3dadd( -22.7879, -97.3584, -54.9932, 0.88 ) }
    dend_31 { pt3dadd( -22.4305, -98.0255, -56.1078, 1.47 ) }
    dend_31 { pt3dadd( -22.1564, -98.6812, -57.1836, 0.22 ) }
    dend_31 { pt3dadd( -22.0502, -99.0191, -57.7126, 0.22 ) }
    dend_31 { pt3dadd( -21.9508, -99.4766, -58.3573, 0.81 ) }
    dend_31 { pt3dadd( -21.8848, -99.9709, -58.949, 0.96 ) }
    dend_31 { pt3dadd( -21.8367, -100.627, -59.6479, 1.55 ) }
    dend_31 { pt3dadd( -21.8244, -101.28, -60.2518, 1.55 ) }
    dend_31 { pt3dadd( -21.8265, -101.991, -60.8864, 0.37 ) }
    dend_31 { pt3dadd( -21.8264, -102.496, -61.3466, 0.74 ) }
    dend_31 { pt3dadd( -21.8163, -103.12, -61.9551, 0.81 ) }
    dend_31 { pt3dadd( -21.7668, -103.944, -62.7797, 0.29 ) }
    dend_31 { pt3dadd( -21.7223, -104.341, -63.1646, 0.96 ) }
    dend_31 { pt3dadd( -21.6326, -104.925, -63.7054, 1.33 ) }
    dend_31 { pt3dadd( -21.4594, -105.748, -64.4281, 0.74 ) }
    dend_31 { pt3dadd( -21.274, -106.437, -64.9833, 0.59 ) }
    dend_31 { pt3dadd( -20.9151, -107.533, -65.7613, 0.29 ) }
    dend_31 { pt3dadd( -20.6457, -108.246, -66.1643, 0.29 ) }
    dend_31 { pt3dadd( -20.3551, -108.906, -66.4759, 0.29 ) }
    dend_31 { pt3dadd( -20.1104, -109.415, -66.6492, 1.18 ) }
    dend_31 { pt3dadd( -19.8502, -109.894, -66.7652, 1.69 ) }
    dend_31 { pt3dadd( -19.4324, -110.591, -66.8688, 1.33 ) }
    dend_31 { pt3dadd( -18.7968, -111.575, -66.9716, 0.22 ) }
    dend_31 { pt3dadd( -18.497, -112.026, -67.0215, 0.22 ) }
    dend_31 { pt3dadd( -18.1285, -112.608, -67.1004, 0.96 ) }
    dend_31 { pt3dadd( -17.8926, -113.019, -67.1704, 1.11 ) }
    dend_31 { pt3dadd( -17.4811, -113.803, -67.3196, 0.52 ) }
    dend_31 { pt3dadd( -16.88, -115.066, -67.5751, 0.22 ) }
    dend_31 { pt3dadd( -16.6154, -115.665, -67.7038, 0.22 ) }
    dend_31 { pt3dadd( -16.3451, -116.319, -67.8581, 0.88 ) }
    dend_31 { pt3dadd( -16.1499, -116.797, -67.996, 1.03 ) }
    dend_31 { pt3dadd( -15.8081, -117.622, -68.2737, 0.22 ) }
    dend_31 { pt3dadd( -15.6439, -118.003, -68.4114, 0.22 ) }
    dend_31 { pt3dadd( -15.3879, -118.56, -68.6157, 0.66 ) }
    dend_31 { pt3dadd( -15.0923, -119.18, -68.833, 0.74 ) }
    dend_31 { pt3dadd( -14.4017, -120.621, -69.2951, 0.22 ) }
    dend_31 { pt3dadd( -13.9414, -121.668, -69.5827, 0.22 ) }
    dend_31 { pt3dadd( -13.4581, -122.994, -69.914, 0.96 ) }
    dend_31 { pt3dadd( -13.3086, -123.494, -70.0293, 1.25 ) }
    dend_31 { pt3dadd( -13.1779, -124.162, -70.1723, 1.25 ) }
    dend_31 { pt3dadd( -13.081, -125.147, -70.355, 0.66 ) }
    dend_31 { pt3dadd( -13.0845, -126.353, -70.5713, 0.15 ) }
    dend_31 { pt3dadd( -13.1965, -127.379, -70.799, 0.37 ) }
    dend_31 { pt3dadd( -13.2839, -127.854, -70.937, 0.37 ) }
    dend_31 { pt3dadd( -13.6782, -129.582, -71.539, 0.22 ) }
    dend_31 { pt3dadd( -13.7478, -129.849, -71.6528, 0.74 ) }
    dend_31 { pt3dadd( -13.9019, -130.417, -71.9341, 0.88 ) }
    dend_31 { pt3dadd( -14.4064, -132.215, -72.9114, 0.22 ) }
    dend_31 { pt3dadd( -14.6017, -132.89, -73.2865, 0.74 ) }
    dend_31 { pt3dadd( -14.8012, -133.544, -73.6519, 0.74 ) }
    dend_31 { pt3dadd( -15.2338, -134.966, -74.4581, 0.22 ) }
    dend_31 { pt3dadd( -15.601, -136.16, -75.1195, 0.22 ) }
    dend_31 { pt3dadd( -16.0439, -137.532, -75.8125, 0.22 ) }
    dend_31 { pt3dadd( -16.4784, -138.829, -76.387, 0.22 ) }
    dend_31 { pt3dadd( -16.7265, -139.535, -76.6574, 0.88 ) }
    dend_31 { pt3dadd( -16.9271, -140.094, -76.8375, 1.11 ) }
    dend_31 { pt3dadd( -17.1271, -140.664, -76.9707, 1.11 ) }
    dend_31 { pt3dadd( -17.5941, -142.058, -77.204, 0.15 ) }
    dend_31 { pt3dadd( -17.9368, -143.193, -77.3402, 0.15 ) }
    dend_31 { pt3dadd( -18.1143, -143.823, -77.398, 0.81 ) }
    dend_31 { pt3dadd( -18.2614, -144.375, -77.4402, 0.96 ) }
    dend_31 { pt3dadd( -18.6575, -146.45, -77.7701, 0.22 ) }
    dend_31 { pt3dadd( -18.817, -147.428, -77.9373, 0.22 ) }
    dend_31 { pt3dadd( -18.9456, -148.512, -78.1679, 0.22 ) }
    dend_31 { pt3dadd( -18.982, -148.948, -78.2752, 1.18 ) }
    dend_31 { pt3dadd( -19.0005, -149.365, -78.3981, 1.18 ) }
    dend_31 { pt3dadd( -18.9228, -152.458, -79.6619, 0.29 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 87/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 24.7586, 186.214, -34.1623, 0.37 ) }
    dend_26 { pt3dadd( 25.2157, 185.519, -33.9488, 0.37 ) }
    dend_26 { pt3dadd( 25.5785, 184.997, -33.8103, 0.52 ) }
    dend_26 { pt3dadd( 26.0886, 184.291, -33.6317, 0.74 ) }
    dend_26 { pt3dadd( 26.4973, 183.732, -33.5038, 1.11 ) }
    dend_26 { pt3dadd( 26.7362, 183.416, -33.4319, 1.11 ) }
    dend_26 { pt3dadd( 27.0841, 182.959, -33.3242, 0.81 ) }
    dend_26 { pt3dadd( 27.8973, 181.966, -33.0373, 0.22 ) }
    dend_26 { pt3dadd( 28.2875, 181.481, -32.898, 0.22 ) }
    dend_26 { pt3dadd( 28.5267, 181.157, -32.821, 0.66 ) }
    dend_26 { pt3dadd( 28.7667, 180.796, -32.744, 0.66 ) }
    dend_26 { pt3dadd( 28.9962, 180.421, -32.6702, 0.66 ) }
    dend_26 { pt3dadd( 29.4233, 179.671, -32.5117, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_26 { pt3dadd( 29.8124, 178.928, -32.3454, 0.22 ) }
    dend_26 { pt3dadd( 30.2098, 178.103, -32.1699, 0.22 ) }
    dend_26 { pt3dadd( 30.3882, 177.703, -32.0886, 0.44 ) }
    dend_26 { pt3dadd( 30.4963, 177.427, -32.0468, 0.59 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 4/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 24.7586, 186.214, -34.1623, 0.22 ) }
    dend_25 { pt3dadd( 26.1176, 186.327, -33.9437, 0.22 ) }
    dend_25 { pt3dadd( 26.43, 186.373, -33.9068, 0.44 ) }
    dend_25 { pt3dadd( 27.8625, 186.672, -33.7525, 0.22 ) }
    dend_25 { pt3dadd( 28.4805, 186.82, -33.7052, 0.59 ) }
    dend_25 { pt3dadd( 28.9572, 186.941, -33.6915, 0.59 ) }
    dend_25 { pt3dadd( 31.002, 187.459, -33.633, 0.22 ) }
    dend_25 { pt3dadd( 33.3706, 188.093, -33.6229, 0.22 ) }
    dend_25 { pt3dadd( 34.22, 188.344, -33.6382, 0.66 ) }
    dend_25 { pt3dadd( 34.8876, 188.569, -33.6766, 0.81 ) }
    dend_25 { pt3dadd( 35.9003, 188.932, -33.7636, 0.22 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 15/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 20.8149, 254.117, 16.836, 0.59 ) }
    dend_19 { pt3dadd( 22.1977, 255.286, 16.5269, 0.59 ) }
    dend_19 { pt3dadd( 22.6463, 255.68, 16.4429, 0.44 ) }
    dend_19 { pt3dadd( 23.5767, 256.545, 16.2463, 0.22 ) }
    dend_19 { pt3dadd( 24.3739, 257.347, 16.082, 0.81 ) }
    dend_19 { pt3dadd( 24.7938, 257.79, 15.982, 0.96 ) }
    dend_19 { pt3dadd( 24.9872, 257.999, 15.9301, 0.96 ) }
    dend_19 { pt3dadd( 25.5809, 258.733, 15.7543, 0.22 ) }
    dend_19 { pt3dadd( 26.4077, 259.92, 15.4042, 0.22 ) }
    dend_19 { pt3dadd( 27.0689, 261.034, 15.0321, 1.11 ) }
    dend_19 { pt3dadd( 27.3892, 261.656, 14.8197, 1.47 ) }
    dend_19 { pt3dadd( 27.5216, 261.963, 14.7019, 1.47 ) }
    dend_19 { pt3dadd( 27.9785, 263.308, 14.1698, 0.22 ) }
    dend_19 { pt3dadd( 28.2861, 264.541, 13.6624, 0.22 ) }
    dend_19 { pt3dadd( 28.4151, 265.268, 13.3613, 0.66 ) }
    dend_19 { pt3dadd( 28.4646, 265.63, 13.2037, 0.66 ) }
    dend_19 { pt3dadd( 28.6062, 267.355, 12.4636, 0.22 ) }
    dend_19 { pt3dadd( 28.6649, 268.928, 11.799, 0.22 ) }
    dend_19 { pt3dadd( 28.6569, 269.823, 11.4145, 0.22 ) }
    dend_19 { pt3dadd( 28.617, 270.864, 10.9698, 1.47 ) }
    dend_19 { pt3dadd( 28.5688, 271.457, 10.7261, 1.47 ) }
    dend_19 { pt3dadd( 28.3123, 273.458, 9.97015, 0.22 ) }
    dend_19 { pt3dadd( 28.1954, 274.107, 9.74158, 0.81 ) }
    dend_19 { pt3dadd( 28.0645, 274.652, 9.56298, 0.81 ) }
    dend_19 { pt3dadd( 27.6695, 275.979, 9.17199, 0.22 ) }
    dend_19 { pt3dadd( 27.3052, 277.03, 8.88298, 0.22 ) }
    dend_19 { pt3dadd( 26.8839, 278.121, 8.59852, 1.47 ) }
    dend_19 { pt3dadd( 26.6942, 278.573, 8.46829, 1.84 ) }
    dend_19 { pt3dadd( 25.9727, 280.213, 7.9851, 0.22 ) }
    dend_19 { pt3dadd( 25.3899, 281.47, 7.61756, 0.22 ) }
    dend_19 { pt3dadd( 25.1684, 281.905, 7.4843, 0.22 ) }
    dend_19 { pt3dadd( 24.5662, 283.044, 7.09118, 1.55 ) }
    dend_19 { pt3dadd( 24.1805, 283.731, 6.82676, 2.06 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 48/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 20.8149, 254.117, 16.836, 0.22 ) }
    dend_18 { pt3dadd( 21.5494, 256.196, 16.9391, 0.22 ) }
    dend_18 { pt3dadd( 21.9621, 257.325, 17.0152, 0.22 ) }
    dend_18 { pt3dadd( 22.2863, 258.199, 17.0841, 0.96 ) }
    dend_18 { pt3dadd( 22.4271, 258.579, 17.118, 1.18 ) }
    dend_18 { pt3dadd( 22.572, 258.971, 17.1568, 1.18 ) }
    dend_18 { pt3dadd( 22.8042, 259.613, 17.2244, 0.22 ) }
    dend_18 { pt3dadd( 22.9721, 260.069, 17.2889, 0.44 ) }
    dend_18 { pt3dadd( 23.0529, 260.303, 17.3175, 0.44 ) }
    dend_18 { pt3dadd( 23.2689, 260.976, 17.3917, 0.22 ) }
    dend_18 { pt3dadd( 23.4516, 261.568, 17.4549, 0.44 ) }
    dend_18 { pt3dadd( 23.6507, 262.224, 17.5244, 0.44 ) }
    dend_18 { pt3dadd( 24.2263, 264.233, 17.7316, 0.22 ) }
    dend_18 { pt3dadd( 24.7061, 265.925, 17.8896, 0.22 ) }
    dend_18 { pt3dadd( 24.8896, 266.561, 17.9418, 0.66 ) }
    dend_18 { pt3dadd( 24.9921, 266.911, 17.9662, 0.74 ) }
    dend_18 { pt3dadd( 25.1647, 267.467, 17.991, 0.22 ) }
    dend_18 { pt3dadd( 25.6102, 268.827, 18.0278, 0.22 ) }
    dend_18 { pt3dadd( 25.876, 269.627, 18.0381, 1.03 ) }
    dend_18 { pt3dadd( 26.0549, 270.158, 18.0388, 1.25 ) }
    dend_18 { pt3dadd( 26.1906, 270.559, 18.0363, 1.25 ) }
    dend_18 { pt3dadd( 26.6496, 271.909, 18.0192, 0.22 ) }
    dend_18 { pt3dadd( 27.4139, 274.13, 17.9841, 0.22 ) }
    dend_18 { pt3dadd( 27.6751, 274.878, 17.9738, 0.74 ) }
    dend_18 { pt3dadd( 27.8186, 275.31, 17.9768, 0.81 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 73/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 11.1738, 98.7429, 17.1521, 0.37 ) }
    dend_16 { pt3dadd( 13.6894, 109.283, 23.4378, 0.37 ) }
    dend_16 { pt3dadd( 17.0073, 119.142, 30.3707, 0.37 ) }
    dend_16 { pt3dadd( 17.6292, 128.587, 38.5076, 0.37 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 77/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 11.1738, 98.7429, 17.1521, 0.22 ) }
    dend_15 { pt3dadd( 14.667, 104.849, 17.9186, 0.37 ) }
    dend_15 { pt3dadd( 18.8631, 110.523, 18.131, 0.37 ) }
    dend_15 { pt3dadd( 23.419, 115.902, 18.1884, 0.37 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 81/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 93.5755, -7.72809, 15.6565, 0.37 ) }
    dend_10 { pt3dadd( 104.562, -10.5855, 16.6034, 0.37 ) }
    dend_10 { pt3dadd( 115.851, -11.597, 17.5744, 0.37 ) }
    dend_10 { pt3dadd( 127.031, -11.373, 19.6548, 0.37 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 85/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 93.5755, -7.72809, 15.6565, 0.22 ) }
    dend_9 { pt3dadd( 102.412, -10.2336, 16.7336, 0.37 ) }
    dend_9 { pt3dadd( 111.59, -11.1396, 17.1936, 0.37 ) }
    dend_9 { pt3dadd( 120.663, -12.5175, 18.2335, 0.37 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 89/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 54.1719, 6.82205, 3.53341, 0.52 ) }
    dend_5 { pt3dadd( 55.2151, 7.05686, 3.85517, 0.52 ) }
    dend_5 { pt3dadd( 55.6193, 7.12944, 3.99006, 0.52 ) }
    dend_5 { pt3dadd( 56.036, 7.19884, 4.16294, 0.52 ) }
    dend_5 { pt3dadd( 56.8323, 7.32689, 4.52306, 0.52 ) }
    dend_5 { pt3dadd( 57.3067, 7.3938, 4.75277, 0.88 ) }
    dend_5 { pt3dadd( 58.0325, 7.47972, 5.10267, 0.88 ) }
    dend_5 { pt3dadd( 58.5708, 7.53878, 5.35495, 0.88 ) }
    dend_5 { pt3dadd( 59.1393, 7.53216, 5.64976, 0.81 ) }
    dend_5 { pt3dadd( 59.4999, 7.43951, 5.84348, 0.81 ) }
    dend_5 { pt3dadd( 60.0331, 7.15569, 6.14876, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_5 { pt3dadd( 60.453, 6.81994, 6.38783, 0.59 ) }
    dend_5 { pt3dadd( 60.9008, 6.36969, 6.61485, 0.59 ) }
    dend_5 { pt3dadd( 61.345, 5.87319, 6.79793, 0.74 ) }
    dend_5 { pt3dadd( 62.0353, 5.00661, 7.04996, 0.66 ) }
    dend_5 { pt3dadd( 62.316, 4.61699, 7.15301, 0.66 ) }
    dend_5 { pt3dadd( 62.7361, 3.97661, 7.31469, 0.52 ) }
    dend_5 { pt3dadd( 63.0205, 3.53313, 7.42157, 0.52 ) }
    dend_5 { pt3dadd( 63.3896, 2.97956, 7.54544, 0.81 ) }
    dend_5 { pt3dadd( 63.8493, 2.28936, 7.69123, 0.81 ) }
    dend_5 { pt3dadd( 64.1508, 1.81376, 7.80013, 0.81 ) }
    dend_5 { pt3dadd( 64.5099, 1.18833, 7.94054, 0.81 ) }
    dend_5 { pt3dadd( 64.9315, 0.362599, 8.13025, 0.88 ) }
    dend_5 { pt3dadd( 65.2603, -0.36547, 8.30225, 1.11 ) }
    dend_5 { pt3dadd( 65.4589, -0.844259, 8.41292, 1.11 ) }
    dend_5 { pt3dadd( 65.815, -1.80513, 8.63914, 0.88 ) }
    dend_5 { pt3dadd( 66.0444, -2.56156, 8.8415, 0.96 ) }
    dend_5 { pt3dadd( 66.1787, -3.14086, 9.02708, 0.96 ) }
    dend_5 { pt3dadd( 66.2606, -3.61619, 9.20484, 0.96 ) }
    dend_5 { pt3dadd( 66.3218, -4.04559, 9.3813, 0.66 ) }
    dend_5 { pt3dadd( 66.4168, -4.71567, 9.6983, 0.66 ) }
    dend_5 { pt3dadd( 66.5673, -5.58114, 10.1668, 0.81 ) }
    dend_5 { pt3dadd( 66.7447, -6.25794, 10.5709, 1.11 ) }
    dend_5 { pt3dadd( 67.0105, -7.01046, 11.0603, 0.96 ) }
    dend_5 { pt3dadd( 67.2584, -7.54968, 11.4056, 0.81 ) }
    dend_5 { pt3dadd( 67.6555, -8.23708, 11.8367, 0.81 ) }
    dend_5 { pt3dadd( 68.173, -8.95666, 12.2679, 0.59 ) }
    dend_5 { pt3dadd( 68.6347, -9.50698, 12.5717, 0.37 ) }
    dend_5 { pt3dadd( 69.0722, -9.9855, 12.8106, 0.37 ) }
    dend_5 { pt3dadd( 69.7292, -10.6878, 13.1227, 0.59 ) }
    dend_5 { pt3dadd( 70.0917, -11.0886, 13.2662, 0.88 ) }
    dend_5 { pt3dadd( 70.2929, -11.3276, 13.3305, 1.11 ) }
    dend_5 { pt3dadd( 70.5478, -11.6593, 13.4181, 1.11 ) }
    dend_5 { pt3dadd( 70.881, -12.1186, 13.556, 0.74 ) }
    dend_5 { pt3dadd( 71.1506, -12.47, 13.662, 0.74 ) }
    dend_5 { pt3dadd( 71.4164, -12.8306, 13.7638, 0.74 ) }
    dend_5 { pt3dadd( 71.82, -13.4133, 13.8955, 0.74 ) }
    dend_5 { pt3dadd( 72.229, -14.0381, 14.0009, 0.74 ) }
    dend_5 { pt3dadd( 72.6015, -14.6091, 14.0832, 0.66 ) }
    dend_5 { pt3dadd( 72.9561, -15.1466, 14.1464, 0.66 ) }
    dend_5 { pt3dadd( 73.4281, -15.858, 14.2104, 0.96 ) }
    dend_5 { pt3dadd( 73.9835, -16.7246, 14.2602, 1.4 ) }
    dend_5 { pt3dadd( 74.2634, -17.2035, 14.269, 1.62 ) }
    dend_5 { pt3dadd( 74.548, -17.7361, 14.2607, 1.77 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 43/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 54.1719, 6.82205, 3.53341, 0.88 ) }
    dend_4 { pt3dadd( 55.2072, 7.81496, 3.51617, 0.88 ) }
    dend_4 { pt3dadd( 56.1362, 8.62074, 3.55938, 0.88 ) }
    dend_4 { pt3dadd( 57.1819, 9.39756, 3.66039, 0.88 ) }
    dend_4 { pt3dadd( 58.3171, 10.1153, 3.8019, 0.88 ) }
    dend_4 { pt3dadd( 59.6621, 10.8626, 4.01177, 0.74 ) }
    dend_4 { pt3dadd( 60.5132, 11.3108, 4.16375, 0.74 ) }
    dend_4 { pt3dadd( 61.7147, 11.8678, 4.43823, 0.88 ) }
    dend_4 { pt3dadd( 62.7936, 12.2984, 4.71121, 0.88 ) }
    dend_4 { pt3dadd( 63.6871, 12.6114, 4.93657, 0.88 ) }
    dend_4 { pt3dadd( 64.5557, 12.9009, 5.14857, 0.66 ) }
    dend_4 { pt3dadd( 65.1675, 13.1274, 5.27619, 0.66 ) }
    dend_4 { pt3dadd( 65.9959, 13.5217, 5.37046, 0.88 ) }
    dend_4 { pt3dadd( 66.496, 13.823, 5.38148, 0.88 ) }
    dend_4 { pt3dadd( 66.9776, 14.1563, 5.36078, 0.88 ) }
    dend_4 { pt3dadd( 67.468, 14.5069, 5.32674, 0.88 ) }
    dend_4 { pt3dadd( 68.381, 15.144, 5.26872, 0.59 ) }
    dend_4 { pt3dadd( 69.0254, 15.5856, 5.27278, 0.59 ) }
    dend_4 { pt3dadd( 69.516, 15.9481, 5.30675, 0.81 ) }
    dend_4 { pt3dadd( 70.157, 16.4798, 5.37538, 0.81 ) }
    dend_4 { pt3dadd( 70.6462, 16.9441, 5.43596, 0.81 ) }
    dend_4 { pt3dadd( 71.1983, 17.5122, 5.50839, 0.66 ) }
    dend_4 { pt3dadd( 71.9895, 18.3565, 5.61938, 0.59 ) }
    dend_4 { pt3dadd( 72.8319, 19.4012, 5.70069, 0.59 ) }
    dend_4 { pt3dadd( 73.2889, 20.0408, 5.70786, 0.59 ) }
    dend_4 { pt3dadd( 73.8144, 20.8346, 5.66265, 0.44 ) }
    dend_4 { pt3dadd( 74.147, 21.3311, 5.60269, 0.44 ) }
    dend_4 { pt3dadd( 74.5082, 21.8462, 5.51033, 0.44 ) }
    dend_4 { pt3dadd( 75.4128, 23.071, 5.24093, 0.44 ) }
    dend_4 { pt3dadd( 76.1292, 23.9873, 5.03391, 0.66 ) }
    dend_4 { pt3dadd( 76.7278, 24.7336, 4.86252, 0.66 ) }
    dend_4 { pt3dadd( 77.4683, 25.6443, 4.6467, 0.74 ) }
    dend_4 { pt3dadd( 78.0467, 26.3534, 4.47417, 0.96 ) }
    dend_4 { pt3dadd( 78.4915, 26.8805, 4.34488, 0.96 ) }
    dend_4 { pt3dadd( 79.1468, 27.5782, 4.17684, 0.66 ) }
    dend_4 { pt3dadd( 79.7884, 28.2287, 4.02246, 0.66 ) }
    dend_4 { pt3dadd( 80.8066, 29.2398, 3.78278, 0.59 ) }
    dend_4 { pt3dadd( 81.7477, 30.2086, 3.57511, 0.59 ) }
    dend_4 { pt3dadd( 82.3549, 30.8524, 3.4504, 0.81 ) }
    dend_4 { pt3dadd( 82.8149, 31.3585, 3.35982, 0.81 ) }
    dend_4 { pt3dadd( 83.5997, 32.1925, 3.22478, 0.52 ) }
    dend_4 { pt3dadd( 84.2056, 32.7829, 3.14069, 0.52 ) }
    dend_4 { pt3dadd( 85.0084, 33.5193, 3.0558, 0.52 ) }
    dend_4 { pt3dadd( 85.6839, 34.1243, 2.99154, 0.52 ) }
    dend_4 { pt3dadd( 86.3314, 34.6904, 2.93027, 0.37 ) }
    dend_4 { pt3dadd( 87.4863, 35.6721, 2.82002, 0.37 ) }
    dend_4 { pt3dadd( 88.2471, 36.3029, 2.74136, 0.59 ) }
    dend_4 { pt3dadd( 88.733, 36.6754, 2.689, 0.59 ) }
    dend_4 { pt3dadd( 89.7667, 37.4263, 2.55795, 0.74 ) }
    dend_4 { pt3dadd( 90.3064, 37.8225, 2.48743, 0.74 ) }
    dend_4 { pt3dadd( 90.7653, 38.1766, 2.42777, 0.74 ) }
    dend_4 { pt3dadd( 91.4199, 38.7533, 2.33879, 0.74 ) }
    dend_4 { pt3dadd( 91.863, 39.154, 2.24017, 0.44 ) }
    dend_4 { pt3dadd( 92.5039, 39.6834, 2.02785, 0.44 ) }
    dend_4 { pt3dadd( 93.0587, 40.0822, 1.81021, 0.81 ) }
    dend_4 { pt3dadd( 93.9937, 40.678, 1.41054, 0.81 ) }
    dend_4 { pt3dadd( 94.6827, 41.0572, 1.08992, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_4 { pt3dadd( 95.8862, 41.6627, 0.511301, 0.52 ) }
    dend_4 { pt3dadd( 96.8082, 42.115, 0.019781, 0.44 ) }
    dend_4 { pt3dadd( 97.4201, 42.385, -0.338454, 0.44 ) }
    dend_4 { pt3dadd( 97.9571, 42.6054, -0.680383, 0.44 ) }
    dend_4 { pt3dadd( 98.3788, 42.758, -0.972417, 0.44 ) }
    dend_4 { pt3dadd( 99.0814, 42.9881, -1.43728, 0.74 ) }
    dend_4 { pt3dadd( 99.6815, 43.2263, -1.71573, 0.59 ) }
    dend_4 { pt3dadd( 100.086, 43.4351, -1.88747, 0.59 ) }
    dend_4 { pt3dadd( 107.34, 50.7635, -1.71402, 0.59 ) }
    dend_4 { pt3dadd( 114.825, 57.8456, -1.56173, 0.59 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 10/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -120.767, -415.992, 22.1944, 0.52 ) }
    dend_39 { pt3dadd( -121.34, -417.514, 22.2198, 0.52 ) }
    dend_39 { pt3dadd( -121.579, -418.13, 22.2381, 0.29 ) }
    dend_39 { pt3dadd( -121.913, -418.934, 22.2615, 0.44 ) }
    dend_39 { pt3dadd( -122.229, -419.682, 22.28, 0.44 ) }
    dend_39 { pt3dadd( -122.481, -420.261, 22.293, 0.29 ) }
    dend_39 { pt3dadd( -122.87, -421.103, 22.3035, 0.29 ) }
    dend_39 { pt3dadd( -123.273, -421.904, 22.3093, 0.81 ) }
    dend_39 { pt3dadd( -123.583, -422.518, 22.2915, 1.18 ) }
    dend_39 { pt3dadd( -123.748, -422.853, 22.2734, 1.4 ) }
    dend_39 { pt3dadd( -124.008, -423.41, 22.2362, 1.4 ) }
    dend_39 { pt3dadd( -124.236, -423.947, 22.1954, 1.11 ) }
    dend_39 { pt3dadd( -124.687, -425.106, 22.1057, 0.52 ) }
    dend_39 { pt3dadd( -124.988, -426.016, 22.0391, 0.44 ) }
    dend_39 { pt3dadd( -125.194, -426.747, 21.9896, 0.74 ) }
    dend_39 { pt3dadd( -125.427, -427.629, 21.9375, 0.81 ) }
    dend_39 { pt3dadd( -125.592, -428.293, 21.8992, 0.81 ) }
    dend_39 { pt3dadd( -125.75, -428.998, 21.8564, 0.74 ) }
    dend_39 { pt3dadd( -125.933, -429.931, 21.835, 0.22 ) }
    dend_39 { pt3dadd( -126.012, -430.363, 21.8302, 0.22 ) }
    dend_39 { pt3dadd( -126.135, -431.122, 21.816, 0.22 ) }
    dend_39 { pt3dadd( -126.213, -431.78, 21.8168, 0.66 ) }
    dend_39 { pt3dadd( -126.271, -432.468, 21.8406, 0.81 ) }
    dend_39 { pt3dadd( -126.326, -433.575, 21.911, 0.66 ) }
    dend_39 { pt3dadd( -126.333, -434.583, 22.0091, 0.22 ) }
    dend_39 { pt3dadd( -126.291, -435.483, 22.1206, 0.22 ) }
    dend_39 { pt3dadd( -126.224, -436.14, 22.2178, 0.22 ) }
    dend_39 { pt3dadd( -126.142, -436.776, 22.3422, 0.96 ) }
    dend_39 { pt3dadd( -126.104, -437.103, 22.4145, 1.18 ) }
    dend_39 { pt3dadd( -126.052, -437.59, 22.522, 1.18 ) }
    dend_39 { pt3dadd( -126.006, -437.989, 22.6341, 1.18 ) }
    dend_39 { pt3dadd( -125.949, -438.752, 22.8411, 0.74 ) }
    dend_39 { pt3dadd( -125.92, -439.907, 23.1301, 0.22 ) }
    dend_39 { pt3dadd( -125.925, -440.287, 23.2215, 0.22 ) }
    dend_39 { pt3dadd( -125.942, -440.73, 23.3278, 0.44 ) }
    dend_39 { pt3dadd( -125.962, -441.114, 23.4115, 0.44 ) }
    dend_39 { pt3dadd( -126.008, -442.118, 23.605, 0.22 ) }
    dend_39 { pt3dadd( -126.033, -442.749, 23.7047, 0.96 ) }
    dend_39 { pt3dadd( -126.039, -443.231, 23.7589, 1.18 ) }
    dend_39 { pt3dadd( -126.036, -443.693, 23.8036, 1.25 ) }
    dend_39 { pt3dadd( -126.03, -444.574, 23.8788, 0.96 ) }
    dend_39 { pt3dadd( -126.057, -445.837, 23.9785, 0.29 ) }
    dend_39 { pt3dadd( -126.103, -446.831, 24.0486, 0.22 ) }
    dend_39 { pt3dadd( -126.193, -447.953, 24.1133, 0.22 ) }
    dend_39 { pt3dadd( -126.26, -448.531, 24.1439, 0.81 ) }
    dend_39 { pt3dadd( -126.341, -449.001, 24.1664, 0.96 ) }
    dend_39 { pt3dadd( -126.712, -450.634, 24.2523, 0.22 ) }
    dend_39 { pt3dadd( -126.86, -451.144, 24.2819, 0.22 ) }
    dend_39 { pt3dadd( -127.119, -451.956, 24.3385, 0.59 ) }
    dend_39 { pt3dadd( -127.321, -452.55, 24.3875, 0.59 ) }
    dend_39 { pt3dadd( -127.614, -453.443, 24.4636, 0.52 ) }
    dend_39 { pt3dadd( -127.835, -454.177, 24.53, 0.52 ) }
    dend_39 { pt3dadd( -128.106, -455.175, 24.6365, 0.52 ) }
    dend_39 { pt3dadd( -128.207, -455.567, 24.6832, 0.96 ) }
    dend_39 { pt3dadd( -128.37, -456.239, 24.767, 0.96 ) }
    dend_39 { pt3dadd( -128.543, -456.995, 24.8647, 0.59 ) }
    dend_39 { pt3dadd( -128.828, -458.274, 25.0672, 0.22 ) }
    dend_39 { pt3dadd( -129.111, -459.595, 25.2824, 0.22 ) }
    dend_39 { pt3dadd( -129.241, -460.214, 25.3877, 0.22 ) }
    dend_39 { pt3dadd( -129.364, -460.762, 25.4867, 0.96 ) }
    dend_39 { pt3dadd( -129.45, -461.137, 25.5599, 1.18 ) }
    dend_39 { pt3dadd( -129.628, -461.884, 25.7242, 0.52 ) }
    dend_39 { pt3dadd( -130.079, -471.021, 25.3551, 0.52 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 73/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -120.767, -415.992, 22.1944, 0.29 ) }
    dend_36 { pt3dadd( -122.245, -415.524, 22.6067, 0.29 ) }
    dend_36 { pt3dadd( -123.033, -415.493, 22.8097, 0.37 ) }
    dend_36 { pt3dadd( -123.389, -415.578, 22.8955, 0.37 ) }
    dend_36 { pt3dadd( -124.201, -415.908, 23.1152, 0.37 ) }
    dend_36 { pt3dadd( -124.987, -416.275, 23.2425, 0.52 ) }
    dend_36 { pt3dadd( -125.674, -416.611, 23.3137, 0.59 ) }
    dend_36 { pt3dadd( -126.602, -417.175, 23.3417, 0.59 ) }
    dend_36 { pt3dadd( -127.427, -417.709, 23.3273, 0.37 ) }
    dend_36 { pt3dadd( -128.189, -418.212, 23.2855, 0.37 ) }
    dend_36 { pt3dadd( -129.544, -419.12, 23.1554, 0.37 ) }
    dend_36 { pt3dadd( -130.17, -419.501, 23.0804, 0.37 ) }
    dend_36 { pt3dadd( -130.749, -419.827, 23.0055, 0.29 ) }
    dend_36 { pt3dadd( -131.212, -420.066, 22.9497, 0.29 ) }
    dend_36 { pt3dadd( -131.735, -420.328, 22.9003, 0.81 ) }
    dend_36 { pt3dadd( -132.153, -420.557, 22.8779, 0.81 ) }
    dend_36 { pt3dadd( -132.722, -420.94, 22.9254, 0.81 ) }
    dend_36 { pt3dadd( -133.677, -421.685, 23.0438, 0.29 ) }
    dend_36 { pt3dadd( -134.128, -422.084, 23.1172, 0.66 ) }
    dend_36 { pt3dadd( -134.462, -422.408, 23.1913, 0.66 ) }
    dend_36 { pt3dadd( -134.769, -422.73, 23.274, 0.66 ) }
    dend_36 { pt3dadd( -135.872, -423.959, 23.6103, 0.29 ) }
    dend_36 { pt3dadd( -136.36, -424.53, 23.7574, 0.44 ) }
    dend_36 { pt3dadd( -136.782, -425.023, 23.8829, 0.29 ) }
    dend_36 { pt3dadd( -137.289, -425.591, 24.0188, 0.74 ) }
    dend_36 { pt3dadd( -137.664, -425.976, 24.0917, 0.74 ) }
    dend_36 { pt3dadd( -138.286, -426.532, 24.1699, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_36 { pt3dadd( -139.395, -427.383, 24.2374, 0.29 ) }
    dend_36 { pt3dadd( -140.058, -427.841, 24.254, 0.52 ) }
    dend_36 { pt3dadd( -140.509, -428.126, 24.2381, 0.52 ) }
    dend_36 { pt3dadd( -141.458, -428.68, 24.1342, 0.29 ) }
    dend_36 { pt3dadd( -142.166, -429.055, 24.036, 0.29 ) }
    dend_36 { pt3dadd( -142.598, -429.252, 23.9654, 0.59 ) }
    dend_36 { pt3dadd( -143.11, -429.459, 23.8614, 0.59 ) }
    dend_36 { pt3dadd( -144.036, -429.817, 23.6495, 0.22 ) }
    dend_36 { pt3dadd( -144.556, -430.01, 23.5402, 0.29 ) }
    dend_36 { pt3dadd( -145.338, -430.305, 23.4037, 0.29 ) }
    dend_36 { pt3dadd( -145.706, -430.451, 23.3425, 0.29 ) }
    dend_36 { pt3dadd( -146.648, -430.87, 23.1938, 0.37 ) }
    dend_36 { pt3dadd( -147.355, -431.269, 23.1497, 0.37 ) }
    dend_36 { pt3dadd( -148.075, -431.766, 23.1888, 0.52 ) }
    dend_36 { pt3dadd( -148.896, -432.446, 23.2968, 1.55 ) }
    dend_36 { pt3dadd( -149.385, -432.917, 23.3846, 1.92 ) }
    dend_36 { pt3dadd( -149.848, -433.409, 23.4918, 1.92 ) }
    dend_36 { pt3dadd( -150.91, -434.634, 23.8147, 0.29 ) }
    dend_36 { pt3dadd( -151.602, -435.497, 24.0458, 0.29 ) }
    dend_36 { pt3dadd( -152.155, -436.243, 24.2546, 0.29 ) }
    dend_36 { pt3dadd( -152.592, -436.846, 24.4348, 0.74 ) }
    dend_36 { pt3dadd( -152.809, -437.148, 24.5257, 0.96 ) }
    dend_36 { pt3dadd( -153.004, -437.406, 24.6011, 1.11 ) }
    dend_36 { pt3dadd( -153.565, -438.167, 24.8153, 0.52 ) }
    dend_36 { pt3dadd( -153.914, -438.678, 24.9828, 0.29 ) }
    dend_36 { pt3dadd( -154.424, -439.416, 25.2586, 0.22 ) }
    dend_36 { pt3dadd( -154.773, -439.895, 25.4537, 0.44 ) }
    dend_36 { pt3dadd( -155.074, -440.286, 25.6227, 0.44 ) }
    dend_36 { pt3dadd( -155.907, -441.355, 26.1045, 0.22 ) }
    dend_36 { pt3dadd( -156.412, -441.99, 26.4061, 0.22 ) }
    dend_36 { pt3dadd( -156.9, -442.577, 26.6918, 1.25 ) }
    dend_36 { pt3dadd( -157.349, -443.108, 26.9663, 1.55 ) }
    dend_36 { pt3dadd( -157.565, -443.349, 27.0941, 1.62 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 33/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 74.548, -17.7361, 14.2607, 0.74 ) }
    dend_7 { pt3dadd( 76.4037, -17.7979, 16.2821, 0.74 ) }
    dend_7 { pt3dadd( 76.9404, -17.8596, 16.8528, 0.74 ) }
    dend_7 { pt3dadd( 77.854, -18.0628, 17.8023, 0.59 ) }
    dend_7 { pt3dadd( 78.9202, -18.4378, 18.8793, 0.59 ) }
    dend_7 { pt3dadd( 79.9045, -18.8987, 19.8541, 0.59 ) }
    dend_7 { pt3dadd( 80.3951, -19.1566, 20.333, 0.59 ) }
    dend_7 { pt3dadd( 81.3529, -19.7989, 21.2461, 0.59 ) }
    dend_7 { pt3dadd( 82.1662, -20.4072, 22.0053, 0.81 ) }
    dend_7 { pt3dadd( 83.2469, -21.2095, 23.0023, 0.81 ) }
    dend_7 { pt3dadd( 84.1439, -21.8423, 23.7999, 0.37 ) }
    dend_7 { pt3dadd( 85.082, -22.4431, 24.599, 0.37 ) }
    dend_7 { pt3dadd( 86.1802, -23.1253, 25.5375, 0.37 ) }
    dend_7 { pt3dadd( 87.2972, -23.7986, 26.5344, 0.37 ) }
    dend_7 { pt3dadd( 88.3699, -24.3829, 27.4967, 0.37 ) }
    dend_7 { pt3dadd( 89.9874, -25.1677, 28.9583, 0.22 ) }
    dend_7 { pt3dadd( 91.7165, -25.9447, 30.5249, 0.22 ) }
    dend_7 { pt3dadd( 100.587, -32.8807, 39.6311, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 51/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 74.548, -17.7361, 14.2607, 0.37 ) }
    dend_6 { pt3dadd( 74.4457, -19.0086, 14.5547, 0.37 ) }
    dend_6 { pt3dadd( 74.4352, -19.7962, 14.7802, 0.37 ) }
    dend_6 { pt3dadd( 74.4665, -20.5229, 15.0094, 0.37 ) }
    dend_6 { pt3dadd( 74.5445, -21.2441, 15.3025, 0.37 ) }
    dend_6 { pt3dadd( 74.6399, -21.8588, 15.5727, 0.37 ) }
    dend_6 { pt3dadd( 74.7803, -22.569, 15.9087, 0.29 ) }
    dend_6 { pt3dadd( 75.0578, -23.5826, 16.3695, 0.22 ) }
    dend_6 { pt3dadd( 75.3878, -24.6839, 16.8199, 0.22 ) }
    dend_6 { pt3dadd( 75.8418, -26.0891, 17.3289, 0.22 ) }
    dend_6 { pt3dadd( 76.0153, -26.6229, 17.4952, 1.18 ) }
    dend_6 { pt3dadd( 76.1391, -27.0829, 17.5942, 1.4 ) }
    dend_6 { pt3dadd( 76.3502, -28.5745, 17.7444, 1.4 ) }
    dend_6 { pt3dadd( 76.347, -29.8398, 17.7422, 0.44 ) }
    dend_6 { pt3dadd( 76.2923, -30.2734, 17.7261, 0.44 ) }
    dend_6 { pt3dadd( 76.1449, -30.9327, 17.6881, 0.29 ) }
    dend_6 { pt3dadd( 75.8259, -31.9978, 17.67, 0.29 ) }
    dend_6 { pt3dadd( 75.3622, -33.3184, 17.6811, 0.22 ) }
    dend_6 { pt3dadd( 74.9531, -34.2766, 17.7731, 0.22 ) }
    dend_6 { pt3dadd( 74.664, -34.8393, 17.8396, 1.03 ) }
    dend_6 { pt3dadd( 74.5093, -35.1179, 17.8841, 1.33 ) }
    dend_6 { pt3dadd( 74.2832, -35.4947, 17.9665, 1.33 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 73/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -157.565, -443.349, 27.0941, 0.29 ) }
    dend_38 { pt3dadd( -158.762, -442.253, 27.3493, 0.29 ) }
    dend_38 { pt3dadd( -159.028, -442.011, 27.3982, 0.52 ) }
    dend_38 { pt3dadd( -159.441, -441.63, 27.4618, 0.59 ) }
    dend_38 { pt3dadd( -161.807, -439.461, 27.6796, 0.22 ) }
    dend_38 { pt3dadd( -162.474, -438.86, 27.718, 0.22 ) }
    dend_38 { pt3dadd( -163.394, -438.049, 27.748, 0.66 ) }
    dend_38 { pt3dadd( -163.889, -437.611, 27.7296, 0.66 ) }
    dend_38 { pt3dadd( -165.989, -435.825, 27.5844, 0.22 ) }
    dend_38 { pt3dadd( -166.858, -435.122, 27.5018, 0.22 ) }
    dend_38 { pt3dadd( -167.653, -434.534, 27.4184, 0.52 ) }
    dend_38 { pt3dadd( -168.219, -434.147, 27.3598, 0.66 ) }
    dend_38 { pt3dadd( -169.767, -433.168, 27.2054, 0.22 ) }
    dend_38 { pt3dadd( -172.838, -431.27, 26.9066, 0.22 ) }
    dend_38 { pt3dadd( -174.818, -430.106, 26.7247, 0.22 ) }
    dend_38 { pt3dadd( -176.649, -429.042, 26.5988, 1.18 ) }
    dend_38 { pt3dadd( -177.162, -428.748, 26.5637, 1.4 ) }
    dend_38 { pt3dadd( -177.951, -428.313, 26.5155, 0.74 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 91/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -157.565, -443.349, 27.0941, 0.22 ) }
    dend_37 { pt3dadd( -158.382, -444.889, 27.4289, 0.22 ) }
    dend_37 { pt3dadd( -159.005, -446.16, 27.7558, 0.22 ) }
    dend_37 { pt3dadd( -159.264, -446.733, 27.9046, 0.44 ) }
    dend_37 { pt3dadd( -159.373, -446.985, 27.9702, 0.44 ) }
    dend_37 { pt3dadd( -160.372, -449.395, 28.5777, 0.22 ) }
    dend_37 { pt3dadd( -160.839, -450.523, 28.862, 0.44 ) }
    dend_37 { pt3dadd( -161.229, -451.472, 29.1125, 0.22 ) }
    dend_37 { pt3dadd( -161.465, -452.113, 29.281, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_37 { pt3dadd( -161.657, -452.669, 29.4306, 0.66 ) }
    dend_37 { pt3dadd( -161.791, -453.097, 29.5479, 0.44 ) }
    dend_37 { pt3dadd( -164.097, -463.016, 32.1574, 0.44 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
    ModelViewParmSubset_2 = new SectionList()
    dend_49 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_5 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_49 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_42 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_27 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_50 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_44 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_43 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_33 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_22 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_21 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_12 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_45 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_41 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_34 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_29 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_17 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_14 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_8 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_47 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_40 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_35 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_32 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_31 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_4 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_39 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_36 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_11 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_2 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_20 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_13 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_28 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_3 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_30 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_5 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_51 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_6 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_15 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_9 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_7 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_16 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_10 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_48 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_24 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_26 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_23 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_25 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_46 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_18 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_19 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_37 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_38 OneSecGrp_SectionRef_54.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_49 nseg = 3
    dend_42 nseg = 3
    dend_27 nseg = 3
    dend_50 nseg = 3
    dend_44 nseg = 3
    dend_43 nseg = 3
    dend_33 nseg = 3
    dend_22 nseg = 7
    dend_21 nseg = 3
    dend_12 nseg = 7
    dend_1 nseg = 3
    dend_45 nseg = 5
    dend_41 nseg = 7
    dend_34 nseg = 3
    dend_29 nseg = 5
    dend_17 nseg = 11
    dend_14 nseg = 3
    dend_8 nseg = 3
    dend_47 nseg = 11
    dend_40 nseg = 7
    dend_35 nseg = 15
    dend_32 nseg = 17
    dend_31 nseg = 5
    dend_4 nseg = 5
    dend_39 nseg = 3
    dend_36 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L5_ChC_6493f67bad_0_0


