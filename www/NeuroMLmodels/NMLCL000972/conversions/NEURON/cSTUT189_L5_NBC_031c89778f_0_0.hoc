// Cell: cSTUT189_L5_NBC_031c89778f_0_0
/*
{
  "id" : "cSTUT189_L5_NBC_031c89778f_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "5.06383, -8.03547, 0.0, 2.96232", "4.52136, -7.21896, 0.0, 4.65461", "3.9789, -6.40244, 0.0, 6.41887", "3.43643, -5.58592, 0.0, 7.96069", "2.89397, -4.7694, 0.0, 9.55419", "2.35151, -3.95288, 0.0, 10.983", "1.80904, -3.13637, 0.0, 11.7075", "1.26658, -2.31985, 0.0, 12.5906", "0.724116, -1.50333, 0.0, 13.2278", "0.181652, -0.686812, 0.0, 13.8644", "-0.360812, 0.129707, 0.0, 14.2774", "-0.903275, 0.946225, 0.0, 14.5108", "-1.44574, 1.76274, 0.0, 14.4652", "-1.9882, 2.57926, 0.0, 14.3007", "-2.53067, 3.39578, 0.0, 13.9535", "-3.07313, 4.2123, 0.0, 13.2045", "-3.61559, 5.02882, 0.0, 12.1103", "-4.15806, 5.84533, 0.0, 10.6196", "-4.70052, 6.66185, 0.0, 8.93613", "-5.24299, 7.47837, 0.0, 6.69248", "-5.78545, 8.29489, 0.0, 3.86173" ]
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-6.39245, 3.59415, -5.2, 0.8", "-7.58895, 2.99489, -5.65564, 0.8", "-8.52969, 2.56465, -5.99743, 0.8", "-9.4726, 2.15254, -6.3196, 1.24", "-11.0012, 1.51804, -6.81699, 1.46", "-13.321, 0.608796, -7.56312, 1.17", "-14.5898, 0.163297, -7.95777, 0.95", "-15.6535, -0.119551, -8.26661, 0.95", "-16.6764, -0.294501, -8.55346, 0.95", "-17.328, -0.351466, -8.72294, 0.95", "-18.5109, -0.30827, -8.97277, 0.95", "-19.8438, -0.0670528, -9.2359, 1.17", "-20.6626, 0.167193, -9.37549, 1.53", "-22.0175, 0.653257, -9.57307, 1.68", "-22.6784, 0.91352, -9.65485, 1.68", "-24.653, 1.66858, -9.8531, 0.88", "-25.4613, 1.95472, -9.89718, 0.88", "-26.1636, 2.17077, -9.91492, 0.88", "-27.2044, 2.45192, -9.91569, 0.88", "-28.2559, 2.68956, -9.90954, 0.88", "-29.9735, 3.03145, -9.88945, 1.09", "-31.3253, 3.25987, -9.86569, 1.68", "-32.4203, 3.43481, -9.8401, 1.9", "-33.7783, 3.65164, -9.79655, 2.12", "-34.5035, 3.78372, -9.7706, 2.12", "-36.0778, 4.11512, -9.70776, 1.82", "-36.9577, 4.33495, -9.66888, 1.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999289980176
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-4.28245, 5.95415, -5.85, 0.88", "-4.76043, 5.71593, -6.19009, 0.88", "-5.39839, 5.3155, -6.65979, 0.88", "-5.74401, 5.10982, -6.87691, 0.88", "-6.42707, 4.75059, -7.26655, 0.88", "-7.10179, 4.45736, -7.60691, 0.88", "-8.08119, 4.10978, -8.05041, 0.88", "-8.85009, 3.88684, -8.35517, 0.88", "-10.055, 3.71606, -8.74716, 1.02", "-11.358, 3.69651, -9.13902, 0.88", "-12.482, 3.80094, -9.45467, 1.24", "-13.2882, 3.94526, -9.69873, 1.24", "-13.9986, 4.1137, -9.9406, 1.24", "-15.8826, 4.56137, -10.671, 0.8", "-16.5853, 4.69833, -11.0094, 0.8", "-17.1703, 4.74306, -11.3728, 0.8", "-17.9742, 4.53677, -12.0959, 0.8", "-18.4955, 4.21368, -12.7084, 0.8", "-18.9867, 3.73592, -13.4099, 0.58", "-19.3208, 3.19688, -14.0306, 0.58", "-19.7592, 2.27049, -14.9713, 0.8", "-20.1551, 1.15174, -15.9981, 1.17", "-20.206, 0.95425, -16.1556, 1.17" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999289980176
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "4.76755, 2.33415, -5.1, 0.44", "5.04244, 2.20876, -5.37382, 0.44", "5.94721, 2.44029, -6.07672, 0.36", "6.36905, 2.74266, -6.31665, 0.36", "6.65028, 3.00351, -6.43407, 0.36", "6.96218, 3.31991, -6.56782, 0.36", "7.40838, 3.80479, -6.78417, 0.36", "7.93827, 4.44593, -7.06901, 0.66", "8.30559, 4.89837, -7.25864, 1.09", "8.86918, 5.54148, -7.56963, 0.8", "9.41802, 6.15168, -7.94448, 0.51", "9.79548, 6.54842, -8.23131, 0.73", "10.3738, 7.09975, -8.68633, 1.24", "10.7989, 7.44615, -8.98793, 1.82", "11.77, 8.12476, -9.5479, 0.36", "12.548, 8.60864, -9.83298, 0.36", "12.9101, 8.80149, -9.81382, 0.36", "13.3449, 8.99399, -9.5844, 0.36", "14.3705, 9.37701, -8.73841, 0.58", "15.0196, 9.58612, -8.07508, 0.29", "15.7059, 9.79714, -7.28116, 0.51", "16.492, 10.063, -6.33842, 0.73", "17.1442, 10.3238, -5.56714, 0.73", "17.4224, 10.4677, -5.23678, 0.73", "17.9659, 10.8455, -4.60304, 0.36", "18.355, 11.1581, -4.16049, 0.36", "18.8119, 11.569, -3.65568, 0.58", "19.248, 12.0664, -3.14653, 0.58", "19.7637, 12.7729, -2.45343, 0.58", "20.022, 13.1692, -2.04101, 0.58", "20.2163, 13.484, -1.68093, 0.58", "20.3995, 13.2718, -1.50419, 0.58", "20.6898, 12.9539, -1.3415, 0.58", "21.2022, 12.4487, -1.06893, 0.58", "21.9304, 11.7949, -0.707489, 0.36", "22.5479, 11.3475, -0.390208, 0.36", "23.2644, 11.0047, -0.0277585, 0.36", "23.9613, 10.8926, 0.35587, 0.66", "24.7529, 11.1632, 0.886488, 0.29", "24.9873, 11.3715, 1.07587, 0.44", "25.3458, 11.8235, 1.41062, 0.44", "25.7086, 12.3544, 1.75509, 0.95", "26.0911, 12.916, 2.12253, 0.44", "26.4268, 13.337, 2.42482, 0.44", "26.9786, 13.9078, 2.84949, 0.29", "27.215, 14.1277, 3.02023, 0.51", "27.9248, 14.7285, 3.4713, 0.29", "28.6111, 15.2638, 3.90161, 0.73", "29.412, 15.9011, 4.42957, 1.61", "29.6156, 16.0847, 4.59378, 1.61", "29.9651, 16.4179, 4.89463, 1.61", "30.6569, 17.1374, 5.53211, 0.95", "31.199, 17.7892, 6.10542, 0.66", "31.652, 18.4424, 6.62813, 0.29", "32.0659, 19.2176, 7.24405, 0.29", "37.1636, 24.191, 10.4071, 0.29", "42.1686, 28.3449, 14.6991, 0.29", "46.7022, 31.9197, 19.933, 0.29", "50.9293, 36.1221, 24.9527, 0.29", "55.1889, 39.0469, 30.786, 0.29", "59.1973, 40.6326, 37.2778, 0.29", "63.065, 42.8997, 43.6517, 0.29", "65.9834, 45.9194, 50.216, 0.29", "67.713, 48.7609, 57.263, 0.29", "69.8018, 51.9862, 64.0424, 0.29", "72.4368, 54.7451, 70.8374, 0.29", "76.0052, 57.1012, 77.352, 0.29", "80.0297, 58.7548, 83.8169, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999289980176,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-4.54245, 4.33415, 0.96, 1.24", "-5.64428, 4.82324, 1.24711, 1.24", "-6.92316, 5.32794, 1.51118, 1.09", "-7.98018, 5.7061, 1.65024, 1.24", "-9.15414, 6.1261, 1.80469, 1.39", "-10.0614, 6.45069, 1.92406, 2.12", "-10.9392, 6.76472, 2.03953, 2.34", "-11.8146, 7.01455, 2.06994, 2.04", "-12.905, 7.26183, 2.00835, 1.75" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999289980176
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-2.82245, 4.93415, 2.13, 1.46", "-2.43582, 5.62352, 2.52229, 1.46", "-1.76442, 6.56157, 3.24461, 1.68", "-1.26143, 7.23403, 3.83852, 1.68", "-0.872021, 7.72911, 4.35617, 1.68", "-0.261195, 8.4372, 5.2847, 0.44", "0.306181, 9.02899, 6.30129, 0.29", "0.615264, 9.20997, 7.0832, 0.29", "0.746721, 9.19659, 7.64366, 0.22", "0.865925, 9.06275, 8.54914, 0.22", "0.890914, 8.84015, 9.58862, 0.22", "0.808294, 8.70305, 10.2152, 0.22", "0.753481, 8.71285, 10.4595, 0.22", "0.665466, 8.87253, 10.8799, 0.22", "0.503708, 9.34565, 11.7365, 0.22", "0.364942, 9.72634, 12.2668, 0.58", "0.119714, 10.2804, 12.9194, 0.22", "-0.101025, 10.6706, 13.3716, 0.22", "-0.274229, 10.9137, 13.6843, 0.22", "-0.633972, 11.2594, 14.2262, 0.22", "-0.961971, 11.4567, 14.6313, 0.22", "-1.18201, 11.5857, 14.9326, 0.22", "-1.29426, 11.8551, 15.3917, 0.15", "-1.25704, 12.0823, 15.6971, 0.15", "-1.21452, 12.3424, 16.0453, 0.15", "-1.12407, 12.7494, 16.5483, 0.15", "-1.03268, 13.0751, 16.9653, 0.15", "-0.939441, 13.4154, 17.4621, 0.15", "-0.893391, 13.6072, 17.78, 0.15", "-0.847561, 13.8621, 18.1993, 0.15", "-0.818881, 14.0497, 18.5257, 0.15", "-0.739977, 14.223, 18.9076, 0.15", "-0.484242, 14.3072, 19.4834, 0.15", "-0.235168, 14.2681, 19.9455, 0.15", "0.135681, 14.1195, 20.8418, 0.15", "0.297401, 14.0404, 21.3447, 0.15", "0.400787, 14.0138, 22.0616, 0.15", "0.347583, 14.1921, 22.5386, 0.15", "0.193479, 14.6293, 22.9964, 0.15", "0.013487, 15.1212, 23.4736, 0.15", "-0.148814, 15.5648, 23.8944, 0.15", "-0.307759, 16.0495, 24.2556, 0.15", "-0.45341, 16.5298, 24.5523, 0.15", "-0.638841, 17.4237, 25.0021, 0.15", "0.96669, 21.8329, 31.9663, 0.15" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999289980176
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.85755, -9.60585, 2.2, 2.63", "3.15575, -10.7859, 2.49898, 2.63", "3.31426, -11.4131, 2.65791, 2.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999289980176
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-5.78545, 8.29489, 0.0, 0.545971", "-14.086, 20.7889, 0.0, 0.545971", "-22.3866, 33.2829, 0.0, 0.545971" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-36.9577, 4.33495, -9.66888, 0.36", "-36.9613, 3.79422, -10.6868, 0.36", "-36.841, 2.62384, -12.5221, 0.36", "-36.8005, 2.20899, -13.1086, 0.36", "-36.7808, 1.89964, -13.5075, 0.58", "-36.769, 1.44707, -14.0454, 0.58", "-36.7971, 0.560784, -14.9932, 0.36", "-36.8268, 0.0772363, -15.423, 0.88", "-37.0035, -1.02702, -16.2906, 0.36", "-37.1711, -1.56308, -16.7673, 0.66", "-37.3461, -1.89352, -17.1233, 0.66", "-37.8174, -2.37702, -17.8778, 0.22", "-38.3104, -2.55003, -18.5052, 0.22", "-38.8037, -2.47166, -19.1103, 0.73", "-39.4072, -2.21732, -19.8115, 0.88", "-40.029, -1.89876, -20.5198, 0.36", "-40.5515, -1.66757, -21.1218, 0.36", "-40.8362, -1.59156, -21.4475, 0.36", "-41.485, -1.6016, -22.253, 0.36", "-41.9011, -1.698, -22.7799, 0.73", "-42.1377, -1.79163, -23.0926, 0.88", "-42.8522, -2.17368, -24.1348, 0.22", "-43.4078, -2.52161, -25.0139, 1.02", "-44.3187, -3.15747, -26.7675, 0.51", "-44.645, -3.37559, -27.5583, 0.51", "-44.9712, -3.52785, -28.4594, 0.73", "-45.2488, -3.57221, -29.187, 0.73", "-45.372, -3.55056, -29.4824, 0.73", "-45.8065, -3.37751, -30.5058, 0.73", "-46.2822, -3.15697, -31.5167, 0.73", "-46.7911, -2.87631, -32.6428, 1.31", "-47.4301, -2.46426, -34.0002, 0.07", "-47.9309, -2.11647, -35.0767, 0.58", "-48.9323, -1.43074, -37.2985, 0.29", "-49.3931, -1.13652, -38.4023, 1.09", "-50.3067, -0.583674, -41.1236, 0.8", "-50.7993, -0.27057, -43.321, 0.58", "-50.9333, -0.198418, -44.2428, 0.58", "-51.0021, -0.18827, -44.7667, 0.58", "-51.2263, -0.256853, -46.239, 0.58", "-51.4193, -0.326234, -47.0759, 0.58", "-51.8375, -0.448066, -48.2259, 0.58", "-52.1332, -0.488544, -48.8769, 0.58", "-52.5231, -0.478723, -49.6252, 0.58", "-53.0218, -0.393717, -50.4898, 0.58", "-53.8118, -0.165497, -51.7337, 0.88", "-54.6176, 0.111638, -52.941, 0.22", "-55.6367, 0.466131, -54.4132, 0.44", "-56.8035, 0.85637, -56.0642, 0.15", "-57.4139, 1.05265, -56.8991, 0.73", "-58.5298, 1.39386, -58.4228, 0.07", "-59.1866, 1.5765, -59.3428, 0.29", "-60.1412, 1.76421, -60.7215, 0.58", "-60.8444, 1.80273, -61.7055, 0.07", "-61.0995, 1.775, -62.0657, 0.07", "-61.7117, 1.61271, -63.0021, 0.07", "-62.3297, 1.35518, -63.9787, 0.58", "-63.1196, 0.93553, -65.2399, 0.07", "-63.5736, 0.622086, -65.9655, 0.36", "-64.5127, -0.131657, -67.4494, 0.07", "-65.1527, -0.679047, -68.3814, 0.07", "-65.4583, -0.94658, -68.7585, 0.07", "-65.7401, -1.20428, -69.0649, 0.29", "-66.423, -1.82258, -69.7295, 0.07", "-67.3531, -2.60954, -70.7124, 0.07", "-68.0508, -3.12184, -71.3878, 0.88", "-69.021, -3.76784, -72.3436, 0.07", "-70.205, -4.50507, -73.5267, 1.09", "-71.7753, -5.43846, -75.1301, 0.22", "-73.8125, -6.62169, -77.2463, 0.22", "-74.9507, -7.29054, -78.43, 1.17", "-76.1759, -8.02297, -79.7077, 0.22", "-76.8339, -8.42695, -80.3583, 0.22", "-77.6673, -8.97012, -81.0889, 0.22", "-78.4928, -9.56471, -81.7287, 0.36", "-79.1432, -10.0535, -82.1167, 0.07", "-79.8347, -10.5584, -82.5181, 0.66", "-80.6354, -11.0806, -82.9515, 0.66", "-82.3578, -12.0963, -83.9475, 0.07", "-83.4153, -12.6897, -84.546, 0.07", "-85.116, -13.5815, -85.5289, 0.66", "-86.4866, -14.2477, -86.3716, 0.07", "-87.4097, -14.6568, -86.976, 0.07", "-88.9133, -15.2553, -88.0275, 1.61" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-36.9577, 4.33495, -9.66888, 0.44", "-37.3822, 4.64319, -9.13371, 0.44", "-37.8026, 4.75834, -8.72685, 0.44", "-37.9327, 4.58557, -8.76411, 0.44", "-38.1269, 4.27287, -8.87302, 0.44", "-38.2406, 4.09081, -8.95488, 0.44", "-38.5049, 3.70299, -9.16062, 0.58", "-38.7965, 3.31929, -9.38404, 0.36", "-39.4334, 2.57866, -9.85299, 0.51", "-39.8421, 2.15169, -10.1019, 0.29", "-40.2092, 1.81862, -10.2821, 0.29", "-40.5889, 1.51655, -10.4166, 0.44", "-41.3435, 1.00163, -10.58, 0.73", "-41.9636, 0.645267, -10.6348, 0.88", "-42.9072, 0.197042, -10.6012, 0.58", "-43.766, -0.140097, -10.498, 0.51", "-44.4213, -0.337783, -10.373, 0.51", "-45.0435, -0.433428, -10.2209, 0.36", "-45.4801, -0.423444, -10.1033, 0.36", "-46.0037, -0.333947, -9.95839, 0.95", "-46.5149, -0.187699, -9.82556, 1.17", "-47.2636, 0.0599033, -9.64513, 1.31", "-48.4359, 0.443232, -9.43591, 0.51", "-49.1884, 0.646802, -9.38048, 0.29", "-49.6579, 0.70799, -9.40465, 0.22", "-50.0103, 0.665861, -9.48145, 0.22", "-50.4774, 0.456636, -9.6889, 0.22", "-51.0182, 0.0992873, -10.0452, 0.29", "-51.7234, -0.414912, -10.5687, 1.09", "-52.2844, -0.822341, -10.925, 0.8", "-52.8585, -1.20196, -11.2163, 0.22", "-53.6389, -1.65158, -11.5132, 0.51", "-54.5725, -2.08854, -11.7464, 0.22", "-55.5305, -2.44204, -11.8677, 0.51", "-56.88, -2.79362, -11.957, 0.29", "-57.7112, -2.9329, -12.0286, 0.29", "-58.1272, -2.98191, -12.0785, 0.95", "-58.784, -3.05016, -12.19, 1.53", "-59.3796, -3.12318, -12.3525, 1.53", "-60.6245, -3.34097, -12.9235, 0.44", "-61.4254, -3.53775, -13.4658, 0.36", "-61.8797, -3.69883, -13.8394, 0.36", "-62.3555, -3.90541, -14.2762, 0.36", "-62.8446, -4.15485, -14.7697, 0.36", "-63.4136, -4.47543, -15.3747, 0.36", "-63.814, -4.73598, -15.7957, 0.22", "-64.1226, -4.90177, -16.056, 0.22", "-64.6207, -5.02174, -16.3321, 0.66", "-64.9868, -5.01505, -16.4357, 0.66", "-65.5275, -4.94777, -16.537, 0.22", "-65.9478, -4.9015, -16.6052, 0.22", "-66.2393, -4.92697, -16.682, 0.22", "-66.4896, -5.02501, -16.8215, 0.22", "-66.7255, -5.17621, -16.9973, 0.22", "-67.2019, -5.54957, -17.3698, 0.22", "-67.546, -5.83249, -17.6338, 0.73", "-68.0982, -6.21252, -18.0295, 1.24", "-68.6343, -6.48038, -18.3545, 1.24", "-69.0866, -6.61458, -18.5647, 1.24", "-70.05, -6.76446, -18.9322, 0.29", "-70.5399, -6.79512, -19.0916, 0.29", "-71.59, -6.80248, -19.4337, 0.51", "-72.4289, -6.7881, -19.6973, 0.29", "-73.3386, -6.79869, -19.9965, 0.15", "-73.7729, -6.82167, -20.1661, 0.15", "-74.1586, -6.87289, -20.3486, 0.15", "-74.7367, -6.99851, -20.6609, 0.88", "-75.1007, -7.11459, -20.8693, 0.88", "-75.7327, -7.24791, -21.2165, 0.15", "-76.0798, -7.24529, -21.3557, 0.15", "-76.4156, -7.19679, -21.4391, 0.15", "-77.6286, -6.9749, -21.7273, 0.15", "-78.1606, -6.88378, -21.8462, 0.15", "-78.8825, -6.78518, -21.982, 0.15", "-79.4097, -6.74173, -22.0709, 1.31", "-80.1206, -6.77454, -22.1758, 1.31", "-81.3477, -7.02724, -22.3337, 0.66", "-82.2769, -7.38841, -22.3978, 0.22", "-82.9871, -7.7351, -22.4099, 0.22", "-83.4172, -7.98054, -22.3941, 0.22", "-84.1785, -8.44797, -22.3479, 0.22", "-84.7299, -8.78796, -22.3161, 0.73", "-85.6173, -9.31653, -22.2748, 1.46", "-85.8413, -9.43404, -22.2871, 1.46", "-86.5836, -9.75788, -22.3912, 0.88", "-87.4753, -10.0725, -22.5533, 0.29", "-88.2365, -10.2824, -22.7288, 0.8", "-89.1234, -10.5047, -22.9718, 0.51", "-89.8788, -10.6873, -23.2164, 0.36", "-90.1281, -10.756, -23.3082, 0.36", "-90.3635, -10.8291, -23.4053, 0.36", "-90.9113, -11.0249, -23.642, 0.44", "-91.7227, -11.3414, -23.9944, 0.66", "-92.0797, -11.4864, -24.1519, 0.66", "-93.1074, -11.9004, -24.555, 0.44", "-93.5267, -12.0669, -24.7116, 0.58", "-93.9538, -12.23, -24.8666, 0.8", "-94.7088, -12.4874, -25.1222, 1.68", "-95.2039, -12.6329, -25.2687, 1.68", "-96.4188, -12.9445, -25.5694, 0.22", "-96.9982, -13.0765, -25.6801, 0.22", "-97.6094, -13.2168, -25.7925, 0.22", "-98.1959, -13.3572, -25.8971, 0.22", "-98.8514, -13.5318, -26.01, 0.51", "-99.5853, -13.7407, -26.1392, 1.68", "-100.174, -13.9297, -26.265, 1.68", "-101.775, -14.4907, -26.6805, 0.15", "-102.441, -14.7597, -26.8906, 0.15", "-103.11, -15.0839, -27.1482, 0.58", "-103.375, -15.2336, -27.2674, 0.58", "-104.279, -15.8087, -27.7399, 0.15", "-104.907, -16.2392, -28.1153, 0.58", "-105.451, -16.6513, -28.4943, 0.22", "-105.952, -17.0522, -28.8691, 0.36", "-106.272, -17.318, -29.1164, 0.07", "-106.763, -17.764, -29.4927, 0.51", "-107.167, -18.1501, -29.7919, 0.07", "-107.492, -18.4738, -30.0495, 0.07", "-107.928, -18.9086, -30.4145, 1.09", "-108.021, -19.0084, -30.5031, 1.09", "-108.471, -19.5401, -30.9725, 0.51", "-109.039, -20.229, -31.5689, 0.07", "-109.532, -20.7983, -32.0777, 0.88", "-109.638, -20.9045, -32.1829, 0.88", "-110.274, -21.4387, -32.7739, 0.07", "-110.591, -21.6607, -33.0397, 0.15", "-111.112, -21.9097, -33.4256, 0.15", "-111.558, -22.0504, -33.7123, 0.15", "-112.139, -22.1618, -34.0568, 0.15", "-112.811, -22.2666, -34.4424, 1.53", "-113.218, -22.3101, -34.6609, 1.53", "-114.362, -22.4621, -35.2399, 0.07", "-114.722, -22.5209, -35.422, 0.07", "-115.204, -22.6036, -35.651, 0.07", "-115.985, -22.7427, -35.9905, 0.95", "-116.229, -22.7842, -36.0859, 0.95", "-117.448, -23.0288, -36.518, 0.22", "-117.935, -23.1594, -36.6662, 0.22", "-118.43, -23.3121, -36.8091, 0.51", "-119.004, -23.4917, -36.9585, 0.51", "-119.539, -23.6447, -37.0926, 0.22", "-119.738, -23.7113, -37.1545, 0.22", "-120.063, -23.8448, -37.2704, 0.22", "-120.546, -24.0881, -37.4377, 0.22", "-120.722, -24.2035, -37.5216, 0.22", "-121.102, -24.4646, -37.7484, 0.22", "-121.6, -24.7941, -38.0639, 0.22", "-122.13, -25.117, -38.3886, 0.58", "-122.507, -25.2998, -38.5771, 0.58", "-123.558, -25.7344, -39.0362, 0.29", "-124.236, -25.9969, -39.3198, 0.88", "-124.418, -26.067, -39.3958, 1.17", "-124.881, -26.2463, -39.5804, 1.75", "-126.419, -26.8232, -40.1931, 0.22", "-126.879, -26.9935, -40.3888, 0.15", "-127.334, -27.1604, -40.5834, 0.15", "-128.226, -27.5097, -40.9966, 0.66", "-128.535, -27.6372, -41.156, 1.17", "-128.992, -27.8309, -41.4056, 1.17", "-129.916, -28.2583, -41.941, 0.15", "-130.298, -28.4254, -42.1476, 0.15", "-130.846, -28.6542, -42.4124, 0.15", "-131.195, -28.7896, -42.5756, 0.15", "-132.085, -29.1308, -42.9878, 0.66", "-132.46, -29.2809, -43.1518, 0.15", "-133.154, -29.5808, -43.3843, 0.58", "-133.734, -29.8468, -43.5559, 0.15", "-134.104, -30.0303, -43.6462, 0.15", "-134.428, -30.1959, -43.7033, 0.15", "-135.126, -30.5453, -43.7804, 0.15", "-136.066, -30.9909, -43.8272, 1.46", "-136.491, -31.1864, -43.8242, 1.46", "-137.453, -31.6275, -43.8087, 0.51", "-138.216, -31.9949, -43.7991, 0.22", "-138.519, -32.149, -43.8041, 0.22", "-138.766, -32.2832, -43.8171, 0.22", "-139.241, -32.5514, -43.8677, 0.22", "-140.525, -33.3189, -44.0409, 0.22", "-141.117, -33.6802, -44.1125, 0.22", "-141.653, -34.0055, -44.1741, 0.8", "-141.951, -34.1801, -44.1999, 0.8", "-143.314, -34.9292, -44.2772, 0.15", "-143.803, -35.1775, -44.2893, 0.36", "-144.453, -35.4887, -44.2854, 0.15", "-144.869, -35.6952, -44.2836, 0.15", "-145.278, -35.9258, -44.2696, 0.15", "-145.726, -36.2077, -44.2152, 0.15", "-146.065, -36.4212, -44.156, 0.15", "-146.586, -36.7384, -44.0358, 0.15", "-147.203, -37.11, -43.8862, 0.15", "-148.099, -37.6633, -43.6493, 0.15", "-148.903, -38.1775, -43.4302, 1.61", "-150.024, -38.9241, -43.0869, 0.15", "-150.871, -39.547, -42.8405, 0.36", "-151.122, -39.7462, -42.7737, 0.36", "-151.782, -40.3083, -42.6292, 0.07", "-152.215, -40.6994, -42.5774, 0.07", "-152.91, -41.362, -42.5517, 0.8", "-153.976, -42.4547, -42.5305, 0.07", "-154.194, -42.6729, -42.5354, 0.88", "-154.468, -42.9276, -42.5382, 0.88", "-155.299, -43.5919, -42.5397, 0.07", "-155.684, -43.8383, -42.5437, 0.07", "-156.183, -44.0899, -42.5625, 0.07", "-156.624, -44.2623, -42.5667, 0.07", "-157.068, -44.4151, -42.5732, 0.07", "-157.71, -44.6273, -42.5849, 0.58", "-158.413, -44.8401, -42.6067, 0.22", "-158.622, -44.896, -42.6167, 0.22", "-159.072, -44.9821, -42.6502, 0.51", "-159.885, -45.0995, -42.7006, 0.07" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-20.206, 0.95425, -16.1556, 0.58", "-19.8861, 0.450513, -17.607, 0.58", "-19.4306, -0.148202, -20.1568, 0.58", "-19.0823, -0.479225, -22.2426, 0.58", "-18.7375, -0.649292, -23.9563, 0.73", "-18.2614, -0.794246, -25.9271, 0.88", "-17.5736, -1.06313, -28.5738, 0.58", "-16.7522, -1.42028, -31.3027, 0.66", "-16.3185, -1.69057, -32.6934, 0.66", "-15.7857, -2.31117, -34.8365, 0.66", "-15.4635, -3.00167, -36.503, 0.51", "-15.0917, -4.20427, -38.7264, 0.73", "-14.6776, -5.70233, -41.0807, 0.44", "-14.2981, -7.09721, -43.0161, 0.44", "-13.7476, -9.24418, -45.7268, 0.44", "-13.315, -10.9963, -47.8085, 0.44", "-12.745, -13.3067, -50.5742, 0.44", "-12.514, -14.0961, -51.5629, 0.66", "-11.9276, -15.7541, -53.7032, 0.44", "-11.1182, -17.5742, -55.9275, 0.29", "-10.2277, -19.2623, -57.7231, 0.29" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-20.206, 0.95425, -16.1556, 2.63", "-20.9802, 1.23678, -16.4605, 2.63", "-24.2538, 2.61016, -18.057, 0.44", "-25.2488, 3.08699, -18.5928, 0.88", "-26.731, 3.93854, -19.4127, 0.73", "-27.7454, 4.57937, -20.01, 0.51", "-29.1092, 5.46808, -20.8583, 0.51", "-30.3034, 6.30675, -21.6731, 1.02", "-31.2819, 7.017, -22.3727, 1.02", "-32.9498, 8.00053, -23.4595, 0.29", "-33.755, 8.34954, -23.9162, 0.29", "-35.2996, 8.81363, -24.6645, 0.29", "-36.5926, 9.01812, -25.1754, 0.88", "-38.2593, 9.03322, -25.664, 0.36", "-39.8029, 8.85847, -26.0565, 0.22", "-40.3337, 8.75198, -26.2018, 0.22", "-40.9584, 8.63562, -26.3877, 0.22", "-41.7759, 8.50443, -26.6667, 0.22", "-43.0814, 8.37228, -27.2315, 2.12", "-44.2306, 8.37934, -27.9215, 2.48", "-45.9162, 8.57627, -29.1612, 1.46", "-47.4313, 8.81073, -30.4114, 0.29", "-48.0007, 8.90532, -30.9144, 0.29", "-48.4645, 8.95542, -31.3361, 0.29", "-49.8766, 8.99472, -32.5843, 0.29", "-50.5364, 8.98078, -33.0543, 0.29", "-51.525, 8.9121, -33.5738, 0.8", "-52.2406, 8.84338, -33.9123, 0.8", "-53.6435, 8.79369, -34.573, 0.22", "-54.2522, 8.81397, -34.8437, 0.22", "-54.8253, 8.87202, -35.0864, 0.22", "-55.7063, 8.98382, -35.5704, 0.22", "-56.5939, 9.11087, -36.1698, 0.22", "-57.6908, 9.25923, -37.0047, 0.22", "-58.6663, 9.38357, -37.7619, 1.61", "-59.8598, 9.49315, -38.6415, 1.61", "-62.0302, 9.61747, -40.0918, 0.36", "-63.2801, 9.66903, -40.8824, 0.15", "-64.9817, 9.75594, -41.881, 0.15", "-65.7422, 9.82614, -42.297, 1.24", "-66.7258, 9.96854, -42.8448, 1.24", "-68.3253, 10.3499, -43.7906, 0.07", "-69.2757, 10.6704, -44.3672, 0.58", "-70.0503, 11.0231, -44.892, 0.8", "-71.6627, 11.9538, -46.1376, 0.44", "-72.7371, 12.6825, -47.1994, 0.73", "-73.7452, 13.4854, -48.4212, 1.75", "-73.9677, 13.6909, -48.7315, 1.75", "-75.168, 14.9409, -50.6725, 0.22", "-75.8722, 15.8234, -52.0945, 1.75", "-76.9364, 17.473, -54.7334, 0.29", "-77.3559, 18.1924, -55.8504, 0.95", "-77.5285, 18.5171, -56.3761, 0.95", "-77.9622, 19.4096, -57.8392, 0.44", "-78.3521, 20.234, -59.2917, 0.73", "-78.5049, 20.5636, -59.8933, 0.73", "-78.9691, 21.344, -61.6378, 0.36", "-79.2592, 21.7351, -62.8383, 0.36", "-79.5989, 22.1379, -64.4632, 1.75", "-80.247, 22.8599, -68.5998, 0.15", "-80.3863, 23.0142, -70.1373, 1.53", "-80.546, 23.2419, -74.202, 0.15", "-80.5537, 23.3007, -76.857, 0.07", "-80.5441, 23.3068, -78.1911, 0.29", "-80.5409, 23.2812, -81.5218, 0.29", "-80.5725, 23.2603, -83.7226, 0.07", "-80.7533, 23.4456, -86.55, 0.07", "-80.9331, 23.6877, -87.773, 0.07", "-81.2911, 24.102, -89.1018, 0.36", "-82.1092, 25.031, -91.3702, 0.07", "-82.6955, 25.7409, -92.7666, 0.58", "-83.7443, 27.1904, -95.2248, 0.07", "-84.1454, 27.8539, -96.2931, 0.29", "-84.7106, 28.9167, -98.0537, 0.07", "-85.3737, 30.2968, -100.328, 0.73", "-85.7188, 31.0235, -101.462, 0.36", "-85.9392, 31.45, -102.099, 0.58", "-86.5391, 32.4049, -103.637, 0.15", "-87.4586, 33.6024, -105.735, 0.73", "-88.1955, 34.4321, -107.115, 0.07", "-88.649, 34.8721, -107.809, 0.07", "-90.523, 36.565, -110.42, 0.36", "-92.1613, 37.9731, -112.499, 0.07", "-94.2006, 39.6469, -114.861, 0.58", "-95.5672, 40.7249, -116.36, 0.07", "-96.552, 41.4551, -117.398, 0.66", "-98.0713, 42.4971, -118.926, 0.22", "-99.2477, 43.2511, -120.015, 0.44", "-100.496, 44.0368, -121.095, 0.15", "-101.328, 44.5339, -121.783, 0.66", "-101.817, 44.806, -122.212, 0.66", "-103.978, 45.9621, -124.255, 0.07", "-105.277, 46.6364, -125.546, 0.36", "-106.222, 47.1364, -126.569, 0.66", "-107.741, 47.9714, -128.222, 0.07", "-109.218, 48.8374, -129.818, 1.24", "-111.303, 50.1356, -132.058, 0.36", "-112.159, 50.6914, -132.975, 0.36", "-113.159, 51.3365, -134.038, 0.95", "-113.971, 51.875, -134.883, 0.95", "-115.518, 52.8978, -136.305, 0.07", "-116.053, 53.2421, -136.703, 0.36", "-117.898, 54.4445, -137.806, 0.07", "-118.435, 54.7864, -138.13, 0.07", "-119.47, 55.4446, -138.775, 0.88", "-120.507, 56.039, -139.443, 0.88", "-122.333, 56.8875, -140.632, 0.07", "-123.212, 57.1866, -141.277, 1.24", "-125.834, 57.8099, -143.228, 0.07", "-126.776, 57.9603, -143.923, 0.66", "-128.513, 58.139, -145.164, 0.07", "-130.493, 58.25, -146.494, 1.31", "-134.05, 58.3413, -148.607, 0.22", "-135.439, 58.3481, -149.349, 0.51", "-137.371, 58.3006, -150.246, 0.15", "-138.624, 58.2507, -150.782, 1.09", "-139.608, 58.235, -151.144, 1.68", "-142.51, 58.3067, -151.989, 0.15", "-144.006, 58.4128, -152.307, 0.15", "-145.431, 58.5829, -152.637, 0.44", "-146.408, 58.7611, -152.878, 0.22", "-147.267, 58.9784, -153.093, 0.22", "-148.421, 59.384, -153.361, 0.51", "-149.288, 59.756, -153.512, 0.51", "-151.017, 60.5613, -153.792, 0.15", "-151.76, 60.9136, -153.908, 0.15", "-153.112, 61.5255, -154.18, 0.73", "-153.864, 61.8146, -154.345, 0.73", "-155.317, 62.2842, -154.669, 0.07", "-156.227, 62.5727, -154.835, 1.24", "-157.316, 62.9647, -154.983, 1.24", "-159.252, 63.8131, -155.146, 0.15", "-160.394, 64.4837, -155.175, 0.15", "-160.935, 64.8732, -155.167, 0.15", "-162.154, 65.9425, -155.092, 0.15", "-162.921, 66.6936, -155.0, 0.88", "-163.356, 67.151, -154.95, 0.88", "-164.556, 68.4254, -154.895, 0.22", "-165.135, 69.009, -154.948, 0.51", "-165.853, 69.6096, -155.17, 0.51", "-166.304, 69.9187, -155.38, 0.51", "-167.429, 70.5672, -155.958, 0.15", "-168.699, 71.1987, -156.627, 0.73", "-169.503, 71.5354, -157.05, 1.09", "-171.596, 72.3409, -158.08, 0.22", "-173.177, 72.8993, -158.787, 1.31", "-173.645, 73.0508, -158.986, 1.17", "-174.5, 73.2983, -159.325, 1.17", "-176.821, 73.8812, -160.171, 0.22", "-178.124, 74.1641, -160.628, 1.24", "-179.266, 74.379, -160.983, 1.24", "-181.185, 74.6989, -161.603, 0.07", "-181.959, 74.8469, -161.895, 0.07", "-182.306, 74.918, -162.041, 0.07", "-182.669, 75.0006, -162.199, 0.07", "-183.256, 75.189, -162.414, 0.07", "-183.98, 75.4921, -162.615, 0.07", "-185.493, 76.1755, -162.916, 0.36", "-186.355, 76.5588, -163.076, 0.95", "-187.489, 77.0387, -163.299, 1.24", "-190.224, 78.0999, -163.826, 0.07", "-192.063, 78.7482, -164.195, 0.29", "-193.643, 79.2225, -164.506, 0.07", "-194.366, 79.4028, -164.603, 0.95", "-196.694, 79.8614, -164.912, 0.22", "-197.722, 79.9706, -165.087, 0.22", "-198.554, 79.9902, -165.26, 0.22", "-200.401, 79.8886, -165.694, 0.51", "-203.053, 79.5553, -166.336, 0.29", "-204.979, 79.2284, -166.8, 1.39", "-208.57, 78.4953, -167.764, 0.29", "-209.237, 78.3572, -167.969, 0.29", "-210.473, 78.0964, -168.447, 0.88", "-211.767, 77.7611, -169.117, 0.29", "-212.262, 77.5834, -169.459, 0.29", "-213.458, 76.9324, -170.418, 0.66", "-214.153, 76.4857, -171.044, 0.66", "-215.428, 75.6328, -172.271, 0.36", "-216.625, 74.7644, -173.557, 0.36", "-217.552, 73.9599, -174.69, 0.95", "-218.831, 72.5361, -176.343, 0.29" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-12.905, 7.26183, 2.00835, 0.58", "-13.5955, 7.26443, 2.36156, 0.58", "-14.6582, 7.26845, 2.90523, 0.58", "-15.6648, 7.27225, 3.42016, 0.58", "-16.839, 7.27669, 4.02088, 1.17", "-17.5689, 7.27944, 4.39425, 1.02" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-12.905, 7.26183, 2.00835, 0.88", "-13.5396, 7.78328, 1.08486, 0.88", "-14.4972, 8.57022, -0.308807, 0.95", "-15.2535, 9.1918, -1.40963, 1.61" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "0.96669, 21.8329, 31.9663, 0.07", "2.58452, 27.6365, 41.4318, 0.07", "6.15546, 32.1731, 51.0528, 0.07", "7.62868, 38.7603, 60.0157, 0.07", "9.93473, 46.5119, 67.7933, 0.07", "14.2338, 55.1958, 73.4504, 0.07", "16.9286, 64.7995, 78.5889, 0.07", "19.0603, 74.0779, 84.5272, 0.07", "20.7474, 82.2439, 92.0348, 0.07", "23.4099, 90.2053, 99.4795, 0.07", "25.6614, 98.0441, 107.185, 0.07", "28.594, 104.932, 115.542, 0.07", "32.6816, 112.005, 123.234, 0.07", "35.6944, 118.937, 131.526, 0.07", "38.6659, 125.396, 140.207, 0.07", "42.6732, 132.753, 147.671, 0.07", "45.4858, 140.217, 155.562, 0.07", "48.9307, 148.395, 162.428, 0.07", "52.3022, 155.488, 170.442, 0.07" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "0.96669, 21.8329, 31.9663, 0.07", "1.24493, 26.0603, 40.4245, 0.07", "1.61156, 28.3523, 49.5951, 0.07", "0.34098, 29.8363, 58.8511, 0.07", "0.746024, 32.1104, 68.0245, 0.07", "0.01615, 33.0239, 77.4118, 0.07", "-0.926161, 33.0868, 86.8244, 0.07", "-0.744456, 34.8085, 96.1245, 0.07", "1.17048, 38.14, 104.769, 0.07", "2.92257, 41.447, 113.457, 0.07", "4.90546, 44.619, 122.146, 0.07", "7.40181, 45.7592, 131.199, 0.07", "11.2561, 47.7325, 139.609, 0.07", "16.6704, 48.0721, 147.359, 0.07", "21.9911, 48.3336, 155.176, 0.07", "25.5211, 48.3741, 163.953, 0.07", "27.6327, 49.7637, 173.069, 0.07", "29.4975, 50.9904, 182.261, 0.07", "30.1612, 54.0658, 191.183, 0.07", "31.4507, 56.8578, 200.129, 0.07", "31.4871, 58.9995, 209.343, 0.07", "30.3941, 62.3122, 218.136, 0.07" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "3.31426, -11.4131, 2.65791, 2.77", "4.38215, -11.8278, 2.62743, 2.77" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "3.31426, -11.4131, 2.65791, 2.63", "3.2932, -12.9052, 2.40468, 2.63", "3.27071, -14.4981, 2.13435, 2.34", "3.23376, -17.1159, 1.69007, 2.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-22.3866, 33.2829, 0.0, 0.153188", "-30.6871, 45.777, 0.0, 0.153188", "-38.9877, 58.271, 0.0, 0.153188" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-88.9133, -15.2553, -88.0275, 0.07", "-89.8799, -16.0116, -88.5198, 0.07", "-90.7913, -16.6632, -89.0047, 0.51", "-91.7474, -17.2929, -89.5349, 0.22", "-92.7822, -17.9101, -90.1497, 0.07", "-93.7279, -18.4403, -90.7513, 0.29", "-94.2348, -18.7153, -91.0742, 0.07", "-95.1453, -19.166, -91.6391, 1.02", "-96.2352, -19.6786, -92.3449, 0.07", "-97.1398, -20.1415, -92.9643, 0.51", "-98.149, -20.7121, -93.7115, 0.15", "-98.8044, -21.1478, -94.2065, 0.36", "-99.5746, -21.7552, -94.8159, 0.07", "-100.215, -22.3675, -95.3373, 0.51", "-101.131, -23.4326, -96.1173, 0.07", "-101.576, -24.0625, -96.5093, 0.73", "-102.255, -25.2076, -97.1404, 0.07", "-102.479, -25.6211, -97.3643, 0.22", "-102.681, -25.9935, -97.5699, 0.07", "-102.864, -26.3399, -97.7342, 0.36", "-103.092, -26.7626, -97.9221, 0.07", "-103.396, -27.2785, -98.1736, 0.44", "-103.875, -27.9363, -98.5182, 0.15", "-104.434, -28.4904, -98.8936, 0.88" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-88.9133, -15.2553, -88.0275, 0.07", "-89.8116, -15.7348, -89.2342, 0.07", "-90.5167, -16.1053, -90.3745, 0.51", "-90.7741, -16.2552, -90.839, 0.15", "-91.3626, -16.6208, -92.0103, 0.44", "-91.8184, -16.879, -92.969, 0.07", "-92.7083, -17.2932, -95.0036, 0.07", "-92.9246, -17.3556, -95.6077, 0.51", "-93.0774, -17.3862, -96.0652, 0.36", "-93.4613, -17.4366, -97.2891, 0.66", "-93.8825, -17.432, -98.7239, 0.36", "-94.2576, -17.4319, -100.002, 0.07", "-94.4731, -17.4296, -100.707, 0.36", "-94.8567, -17.4212, -101.92, 0.36", "-95.0637, -17.4113, -102.573, 0.51", "-95.8854, -17.4432, -105.322, 0.07", "-96.2598, -17.5661, -106.689, 0.07" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-17.5689, 7.27944, 4.39425, 0.22", "-16.9366, 6.10679, 4.65835, 0.22", "-16.1605, 3.88047, 4.97281, 0.22", "-15.8142, 2.56873, 5.08996, 0.22", "-15.5719, 1.44283, 5.15559, 0.22", "-15.3079, 0.00319028, 5.21857, 0.22", "-15.1236, -1.27381, 5.27665, 0.44", "-15.0457, -3.29471, 5.26509, 0.07", "-15.1621, -4.10906, 5.27443, 0.07", "-15.3737, -4.8174, 5.34218, 0.22", "-15.5712, -5.33343, 5.41562, 0.07", "-15.8902, -6.04121, 5.58204, 0.07", "-16.1257, -6.49246, 5.75224, 0.07", "-17.1477, -8.19648, 6.66105, 0.22", "-17.6631, -8.89114, 7.10089, 0.22", "-16.7602, -21.1472, 7.21598, 0.22", "-15.4707, -33.3546, 7.8111, 0.22" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-17.5689, 7.27944, 4.39425, 0.15", "-17.8948, 8.08001, 5.03084, 0.15", "-18.0516, 9.01171, 5.97614, 0.29", "-17.9473, 9.42886, 6.58664, 0.29", "-17.4953, 9.85874, 7.73017, 0.29", "-17.2792, 9.93374, 8.18644, 0.22", "-16.9213, 9.91044, 8.91774, 0.22", "-16.3397, 9.68644, 10.0055, 0.22", "-15.7591, 9.30739, 11.1035, 0.22", "-15.228, 8.85424, 12.0736, 0.22", "-14.8043, 8.39453, 12.848, 0.22", "-14.301, 7.68742, 13.9295, 0.51", "-14.1144, 7.29775, 14.4429, 0.95", "-14.0036, 6.61298, 15.1912, 1.17" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-15.2535, 9.1918, -1.40963, 0.88", "-15.588, 10.5152, -1.42255, 0.88", "-15.9791, 12.0436, -1.45765, 0.88", "-16.1554, 12.6708, -1.47909, 0.88", "-16.5126, 13.8004, -1.55039, 0.73", "-16.7916, 14.6829, -1.60609, 0.73", "-17.0578, 15.5246, -1.65922, 1.61", "-17.1889, 15.8806, -1.70026, 1.97", "-17.4467, 16.518, -1.78807, 1.46", "-17.8709, 17.5496, -1.94611, 0.8" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-15.2535, 9.1918, -1.40963, 0.36", "-16.5052, 10.1837, -1.20775, 0.36", "-17.0923, 10.6505, -1.03227, 0.8", "-17.9054, 11.2859, -0.715421, 0.8", "-19.0077, 12.1071, -0.220675, 0.66", "-19.9695, 12.7417, 0.270887, 0.8", "-20.7847, 13.2236, 0.69585, 0.95", "-21.459, 13.5514, 1.07893, 1.09", "-22.1967, 13.8142, 1.46818, 1.53", "-23.1454, 14.0166, 1.85431, 1.09", "-24.7602, 14.1807, 2.22727, 0.73", "-25.3354, 14.2115, 2.27154, 0.73", "-26.9929, 14.3034, 2.16925, 0.73", "-27.6946, 14.3727, 2.02255, 0.73", "-28.9697, 14.5535, 1.60937, 0.73", "-29.9317, 14.7461, 1.21077, 1.17", "-30.8699, 14.9891, 0.769463, 1.61", "-31.7686, 15.2613, 0.319003, 1.61", "-33.1967, 15.7863, -0.433563, 1.02", "-34.335, 16.2313, -1.02359, 1.02", "-35.49, 16.7251, -1.60122, 1.02", "-36.7187, 17.2952, -2.17959, 1.02", "-37.8473, 17.8541, -2.66814, 1.02", "-39.0651, 18.4699, -3.15506, 0.95", "-39.7916, 18.8643, -3.41804, 0.95", "-40.4897, 19.2943, -3.65962, 1.46", "-41.348, 19.8979, -3.9134, 1.82", "-42.0536, 20.4866, -4.04424, 1.82" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "4.38215, -11.8278, 2.62743, 0.51", "4.56096, -11.8289, 2.73939, 0.51", "5.30381, -11.6814, 3.28162, 0.29", "5.65143, -11.5239, 3.64119, 0.29", "5.88488, -11.3451, 3.96408, 0.15", "6.11399, -11.0513, 4.39982, 0.15", "6.22249, -10.8408, 4.69852, 0.44", "6.33064, -10.4419, 5.18635, 0.66", "6.40606, -9.85775, 5.83283, 0.15", "6.44088, -9.68219, 6.02775, 0.15", "6.53121, -9.43665, 6.28658, 0.36", "6.85119, -8.98765, 6.7186, 0.36", "7.14634, -8.75808, 6.92887, 0.8", "7.72281, -8.47284, 7.16421, 0.8", "8.45849, -8.20494, 7.40504, 0.15", "9.14758, -8.02564, 7.60455, 0.15", "9.42597, -7.98357, 7.66781, 0.15", "9.76107, -7.97663, 7.74078, 0.15", "9.95251, -8.02467, 7.82349, 0.15", "10.4073, -8.32663, 8.09819, 0.15", "10.6381, -8.45255, 8.22138, 0.15", "10.8033, -8.57025, 8.34984, 0.15", "11.4299, -8.99229, 8.84309, 0.15", "11.7048, -9.09813, 8.99704, 0.15", "12.3732, -9.1596, 9.16532, 0.15", "13.678, -9.13295, 9.30992, 0.15", "18.4045, -7.46947, 13.3755, 0.15", "23.0399, -4.80432, 16.9874, 0.15" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "4.38215, -11.8278, 2.62743, 0.51", "4.14689, -11.4218, 3.13165, 0.51", "3.39564, -10.5154, 4.27551, 0.73", "2.79847, -9.95048, 5.05322, 0.73", "2.29559, -9.55416, 5.6358, 0.73", "1.64612, -9.11294, 6.30722, 0.73", "0.707833, -8.57667, 7.18081, 0.73", "-0.129684, -8.2321, 7.8235, 0.73", "-0.957811, -8.01349, 8.36859, 0.73", "-1.81269, -7.90072, 8.93235, 0.73", "-2.40192, -7.87311, 9.3228, 0.73", "-3.24178, -7.90801, 9.89003, 0.73", "-3.75092, -7.98757, 10.2086, 0.73", "-3.16613, -7.9588, 10.2742, 0.73", "-2.51788, -7.95742, 10.5766, 0.73", "-1.30431, -7.96422, 11.1782, 0.58", "-0.697154, -7.97656, 11.4535, 0.88", "-0.011461, -7.97985, 11.7227, 0.88", "0.701631, -7.95195, 11.9855, 0.22", "1.08981, -7.91559, 12.1257, 0.22", "1.86284, -7.83382, 12.3881, 0.22", "2.53749, -7.76965, 12.6292, 0.22", "3.03721, -7.75037, 12.8038, 0.22", "3.82574, -7.78355, 13.0922, 0.22", "4.33551, -7.83713, 13.2799, 0.22", "3.24937, -5.1456, 20.7624, 0.22", "3.81643, -3.33216, 28.5599, 0.22" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "3.23376, -17.1159, 1.69007, 1.9", "3.83896, -18.5101, 3.05697, 1.9", "4.22612, -19.8844, 4.17527, 0.88", "4.27165, -20.2853, 4.47409, 0.8", "4.26461, -20.7838, 4.8234, 0.8", "4.20672, -21.144, 5.0729, 0.8", "3.97648, -21.8489, 5.5652, 0.73", "3.37086, -21.9695, 5.70044, 0.58", "2.566, -21.8468, 5.8758, 0.58", "2.29383, -21.752, 5.92758, 0.58", "1.26773, -21.3238, 6.14037, 1.17", "0.56702, -21.0294, 6.32607, 1.17", "-0.864601, -20.4951, 6.82104, 1.17", "-1.78077, -20.2114, 7.20212, 0.8", "-2.79552, -20.0192, 7.70789, 0.51", "-3.9185, -19.9406, 8.32197, 0.51", "-4.95764, -20.0183, 8.94457, 0.51", "-6.23192, -20.3012, 9.80002, 1.39", "-6.70453, -20.4918, 10.1699, 1.39", "-7.79072, -21.1538, 11.1958, 1.39", "-8.34729, -21.6586, 11.8957, 1.09", "-8.63919, -22.1237, 12.48, 0.88", "-8.84542, -22.7859, 13.262, 0.66", "-8.59714, -23.6599, 14.1792, 0.36", "-8.00886, -24.4748, 14.9343, 0.29", "-7.61573, -24.8497, 15.2558, 0.29", "-6.99097, -25.353, 15.6877, 0.29", "-11.5789, -29.9795, 23.3319, 0.29", "-14.6336, -32.7867, 32.4794, 0.29" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "3.23376, -17.1159, 1.69007, 1.53", "3.53832, -18.0383, 1.19843, 1.53", "3.80049, -18.8324, 0.775229, 1.53", "4.05503, -19.6033, 0.364333, 1.97", "4.2858, -20.3022, -0.00818735, 2.48" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-15.4707, -33.3546, 7.8111, 0.07", "-14.6227, -41.5246, 12.2399, 0.07", "-13.3437, -49.4085, 17.0659, 0.07" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-15.4707, -33.3546, 7.8111, 0.07", "-15.2456, -44.8551, 7.8254, 0.07", "-16.5935, -56.2784, 7.89494, 0.07", "-17.4806, -67.6418, 9.44319, 0.07", "-20.6367, -78.7003, 9.69033, 0.07", "-25.4459, -89.125, 8.97642, 0.07", "-28.5607, -100.169, 9.77443, 0.07", "-33.0815, -110.589, 11.5944, 0.07", "-35.9656, -121.711, 12.147, 0.07", "-38.0665, -132.95, 13.4048, 0.07", "-39.0392, -144.39, 14.1039, 0.07", "-40.1688, -155.837, 14.1663, 0.07", "-42.7438, -166.827, 11.9536, 0.07", "-45.6935, -177.9, 10.9528, 0.07", "-48.1157, -189.106, 11.8808, 0.07" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-14.0036, 6.61298, 15.1912, 0.44", "-13.8084, 7.86634, 15.5379, 0.44", "-13.6082, 9.51138, 15.906, 0.58", "-13.5218, 10.3607, 16.0492, 0.44", "-13.442, 11.2528, 16.1522, 0.22", "-13.3877, 11.9717, 16.2052, 0.22", "-13.3128, 12.9642, 16.2784, 0.22", "-13.2698, 13.6455, 16.2817, 0.22", "-13.2205, 14.8211, 16.2073, 1.02", "-13.1952, 16.1615, 16.12, 0.36", "-13.195, 17.4027, 16.0271, 0.15", "-12.8626, 28.5162, 17.4761, 0.15" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-14.0036, 6.61298, 15.1912, 0.15", "-14.6557, 7.16322, 15.1239, 0.15", "-15.5584, 8.21503, 15.1974, 0.15", "-15.9183, 8.82928, 15.2971, 0.15", "-16.3056, 9.63348, 15.4711, 0.15", "-16.8716, 10.7835, 15.838, 0.15", "-17.2608, 11.4815, 16.1016, 0.15", "-17.4986, 11.9102, 16.3252, 0.15", "-17.9231, 12.5541, 16.7624, 0.44", "-18.5122, 13.1173, 17.2995, 0.29", "-19.4655, 13.454, 17.9685, 0.15", "-20.1369, 13.4396, 18.3103, 0.15", "-20.8402, 13.3368, 18.6058, 0.15", "-22.0623, 13.1133, 19.0566, 0.15", "-22.7522, 12.9703, 19.2959, 0.15", "-23.3604, 12.8474, 19.4896, 0.15", "-23.9156, 12.801, 19.6414, 0.15", "-24.6156, 12.9298, 19.8731, 0.15", "-25.2658, 13.2871, 20.1102, 0.15", "-25.7796, 13.7023, 20.3023, 0.15", "-26.2623, 14.1207, 20.4524, 0.15", "-26.5931, 14.4162, 20.5389, 0.15", "-27.2975, 15.0139, 20.6999, 0.22", "-27.7293, 15.3357, 20.7895, 0.22", "-28.2998, 15.6917, 20.9102, 0.22", "-29.1829, 16.165, 21.1156, 0.15", "-30.2794, 16.71, 21.4387, 0.15", "-30.9382, 17.054, 21.6821, 0.15", "-31.5045, 17.3902, 21.9263, 0.36", "-32.2314, 17.8315, 22.2696, 0.15", "-33.0026, 18.2633, 22.6247, 0.15", "-33.8934, 18.6907, 22.9889, 0.15", "-34.5515, 18.9522, 23.2212, 0.15", "-35.16, 19.1269, 23.4065, 0.15", "-36.2281, 19.4226, 23.7007, 0.15", "-37.978, 19.8738, 24.0928, 0.15", "-39.3762, 20.1868, 24.3334, 1.09", "-40.5956, 20.3833, 24.4832, 1.09", "-42.1669, 20.5219, 24.6524, 0.22", "-50.7568, 25.7254, 27.0369, 0.22", "-58.5966, 32.2658, 28.5572, 0.22", "-67.3917, 37.6571, 28.1975, 0.22", "-74.5884, 45.0145, 28.9885, 0.22", "-81.7644, 52.1843, 30.8984, 0.22", "-88.7706, 59.7646, 30.9432, 0.22", "-93.8146, 68.7438, 31.6366, 0.22", "-99.0298, 77.581, 32.7569, 0.22", "-104.226, 86.4199, 33.9521, 0.22", "-108.668, 95.7342, 34.2005, 0.22" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-17.8709, 17.5496, -1.94611, 0.29", "-17.2934, 18.6462, -1.24078, 0.29", "-16.7032, 19.4314, -0.676144, 0.29", "-16.2521, 19.9307, -0.283014, 0.73", "-15.7925, 20.4308, 0.082153, 1.17", "-15.4662, 20.7992, 0.334676, 1.17", "-14.6142, 21.8582, 0.991321, 0.36", "-13.9674, 22.6825, 1.41207, 0.58", "-13.5783, 23.2868, 1.7041, 0.36", "-13.2232, 24.2331, 2.13629, 0.22", "-13.1713, 24.8912, 2.40226, 0.22", "-13.2985, 25.7368, 2.67066, 0.22", "-13.5105, 26.4814, 2.85268, 0.22", "-13.8821, 27.725, 3.12999, 0.66", "-14.2353, 29.0136, 3.44076, 0.22", "-14.416, 29.8422, 3.66937, 0.22", "-14.5848, 30.88, 3.99648, 0.22", "-14.7019, 31.9024, 4.34664, 0.22", "-14.8093, 33.1453, 4.77587, 0.07", "-14.8274, 34.0908, 5.10121, 0.44", "-14.7856, 35.066, 5.47945, 0.22", "-14.7305, 36.0189, 5.87746, 0.07", "-14.7178, 36.7635, 6.23403, 0.51", "-14.7934, 37.4695, 6.58484, 0.15", "-14.7988, 46.4365, 12.2149, 0.15", "-13.224, 55.6441, 17.1997, 0.15", "-10.8498, 65.4525, 20.4036, 0.15", "-8.29358, 74.745, 24.7878, 0.15", "-6.91065, 83.9804, 29.778, 0.15", "-7.01443, 93.4639, 34.4853, 0.15", "-5.67649, 102.401, 40.0021, 0.15", "-4.20556, 111.283, 45.5744, 0.15", "-1.84108, 120.306, 50.5843, 0.15", "-1.10164, 129.944, 54.9055, 0.15", "-1.01538, 139.312, 59.84, 0.15", "-0.578716, 148.098, 65.7312, 0.15" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-17.8709, 17.5496, -1.94611, 0.44", "-18.8043, 18.0883, -1.57597, 0.44", "-19.5299, 18.7101, -1.18465, 0.44", "-19.9825, 19.1991, -0.924317, 0.44", "-20.5481, 19.8889, -0.613093, 0.44", "-21.1105, 20.5751, -0.366058, 0.44", "-21.937, 21.5867, -0.044162, 0.66", "-22.4395, 22.2794, 0.158624, 0.88", "-22.8637, 22.8609, 0.308944, 1.09", "-23.2809, 23.38, 0.416219, 1.24", "-24.3262, 24.4569, 0.583141, 0.36", "-25.0463, 25.0131, 0.650619, 0.22", "-25.634, 25.324, 0.688466, 0.22", "-26.4852, 25.6215, 0.737666, 0.22", "-27.0928, 25.7691, 0.751627, 0.22", "-27.8255, 25.9155, 0.732345, 0.22", "-28.7324, 26.1077, 0.640112, 0.66", "-29.3166, 26.2742, 0.529036, 0.88", "-30.1192, 26.6627, 0.339129, 0.44", "-30.7326, 27.1937, 0.20325, 0.29", "-31.2518, 27.8781, 0.116189, 0.29", "-31.7539, 28.7233, 0.0853908, 0.66", "-31.9778, 29.1572, 0.1053, 0.66", "-32.4013, 30.0507, 0.221696, 0.36", "-32.8955, 31.142, 0.442883, 0.22", "-33.0654, 31.5117, 0.537169, 0.22", "-33.4457, 32.252, 0.756229, 0.22", "-33.9836, 33.113, 1.02679, 0.22", "-34.4767, 33.6821, 1.23174, 0.22", "-34.9868, 34.1717, 1.395, 0.15", "-35.3247, 34.4443, 1.47848, 0.15", "-35.8442, 34.8155, 1.61071, 0.51", "-36.8072, 35.3878, 1.87953, 0.29", "-38.0603, 35.7825, 2.27205, 0.07", "-47.0298, 41.1412, 3.86692, 0.07", "-56.0052, 46.5821, 5.11247, 0.07", "-64.9849, 52.1466, 4.77603, 0.07", "-74.4724, 56.7619, 5.40703, 0.07", "-84.1865, 60.8928, 4.8732, 0.07", "-93.4222, 65.8296, 3.44449, 0.07", "-102.189, 71.6934, 2.75918, 0.07", "-111.13, 76.8331, 0.444283, 0.07", "-118.876, 82.6502, -3.78213, 0.07", "-126.816, 88.5782, -7.46177, 0.07", "-134.452, 94.562, -11.6552, 0.07", "-143.33, 99.8984, -13.7596, 0.07", "-151.854, 105.028, -17.3271, 0.07", "-158.873, 112.329, -20.3518, 0.07", "-166.263, 119.195, -23.5083, 0.07", "-171.812, 127.968, -25.4941, 0.07", "-176.282, 137.078, -28.4516, 0.07", "-178.837, 146.875, -31.4853, 0.07" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-42.0536, 20.4866, -4.04424, 0.51", "-43.0988, 21.3224, -2.54627, 0.51", "-43.9186, 21.8696, -1.57749, 0.51", "-45.4735, 22.9265, 0.0105838, 0.51", "-46.1538, 23.4304, 0.644779, 0.51", "-47.5927, 24.5778, 1.83063, 0.66", "-48.5834, 25.4183, 2.46077, 0.58", "-49.8364, 26.4064, 2.88782, 0.51", "-50.9154, 27.2873, 3.03176, 0.51", "-51.8759, 28.0917, 3.00678, 0.51", "-52.9617, 29.0674, 2.88238, 0.51", "-55.19, 31.0223, 2.42516, 0.51", "-56.8731, 32.3122, 1.99483, 0.51", "-57.7108, 32.8356, 1.77453, 0.51", "-58.9078, 33.3944, 1.50485, 0.88", "-59.427, 33.5623, 1.423, 1.09", "-61.8786, 34.043, 1.37192, 0.51", "-63.2901, 34.1984, 1.60983, 0.51", "-64.1059, 34.2797, 1.86079, 0.51", "-65.1028, 34.3951, 2.19116, 0.51", "-66.5369, 34.6341, 2.63903, 0.51", "-68.1656, 35.0228, 3.08083, 0.66", "-70.2375, 35.7665, 3.53735, 1.02", "-72.3012, 36.7813, 3.80918, 0.66", "-73.9261, 37.7558, 3.83667, 0.51", "-75.8893, 39.13, 3.61703, 0.44", "-77.215, 40.1491, 3.30573, 0.88", "-78.6376, 41.2789, 2.84749, 0.66", "-80.0989, 42.4629, 2.32136, 0.51", "-81.0661, 43.2042, 1.98994, 0.51", "-82.1912, 43.9349, 1.67217, 0.36", "-83.5046, 44.5315, 1.39535, 0.58", "-85.3144, 44.9483, 1.13238, 0.95", "-86.653, 45.049, 1.00246, 1.17", "-88.9237, 45.0488, 0.894586, 0.51", "-89.8713, 45.0311, 0.890984, 0.51", "-91.4019, 45.0121, 0.946798, 0.44", "-93.0135, 45.0817, 1.07149, 0.44", "-93.9147, 45.2146, 1.19931, 0.44", "-95.3816, 45.6178, 1.49226, 0.44", "-97.3681, 46.4289, 2.00794, 0.51", "-98.3909, 46.9349, 2.31107, 0.51", "-99.7782, 47.7257, 2.75231, 1.61", "-100.954, 48.429, 3.14319, 2.12", "-102.136, 49.1334, 3.53985, 2.12", "-103.932, 50.1717, 4.11828, 0.88", "-104.927, 50.7515, 4.4465, 0.58", "-105.451, 51.0376, 4.61435, 0.73", "-107.524, 52.0792, 5.28542, 0.51", "-108.954, 52.7489, 5.75652, 0.8", "-109.825, 53.1495, 6.06807, 1.02", "-110.962, 53.6735, 6.49666, 0.73", "-112.587, 54.3803, 7.07079, 0.51", "-114.294, 55.0816, 7.62919, 0.44", "-115.453, 55.5353, 7.96571, 0.8", "-116.804, 56.0782, 8.37299, 1.02", "-118.965, 57.0196, 9.07569, 0.51", "-120.498, 57.7768, 9.64305, 0.66", "-121.587, 58.4511, 10.1561, 0.44", "-122.434, 59.1582, 10.6987, 0.44", "-123.644, 60.6767, 11.8488, 0.22", "-124.056, 61.7104, 12.5544, 0.15", "-124.257, 63.213, 13.4688, 0.15", "-124.299, 64.4517, 14.1049, 0.15", "-124.271, 65.341, 14.4523, 0.36", "-124.225, 66.3473, 14.7818, 0.36", "-124.26, 67.8478, 15.0866, 0.07", "-124.392, 68.8151, 15.225, 0.07", "-124.624, 69.8603, 15.2533, 0.36", "-124.938, 71.2004, 15.179, 0.07", "-135.02, 78.8141, 19.0798, 0.07", "-145.056, 85.5253, 24.4726, 0.07" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-42.0536, 20.4866, -4.04424, 0.44", "-42.5391, 21.2392, -3.92187, 0.44", "-42.9335, 21.8525, -3.87355, 0.44", "-43.5565, 22.9491, -3.89709, 0.44", "-44.0289, 23.9046, -3.99578, 0.44", "-44.4472, 24.9289, -4.22763, 0.88", "-44.7324, 25.7737, -4.48018, 0.88", "-45.0059, 26.8372, -4.96995, 0.36", "-45.2128, 27.8541, -5.60018, 0.36", "-45.3121, 28.4395, -6.11966, 0.36", "-45.4904, 29.45, -7.32445, 0.36", "-45.5866, 29.8097, -7.92724, 0.36", "-45.8329, 30.207, -8.90662, 0.36", "-46.1098, 30.4056, -9.5542, 0.58", "-46.6742, 30.7032, -10.5348, 0.58", "-47.1007, 30.9995, -11.2094, 0.29", "-47.316, 31.212, -11.542, 0.29", "-47.6879, 31.7841, -12.1617, 0.29", "-48.2124, 33.0186, -13.1282, 0.29", "-48.536, 33.9754, -13.7529, 0.29", "-48.8914, 35.045, -14.3713, 1.09", "-49.0722, 35.5435, -14.6545, 1.09", "-49.4654, 36.4349, -15.1532, 0.22", "-49.7811, 36.9637, -15.4441, 0.22", "-50.1648, 37.4091, -15.7021, 0.22", "-50.8625, 38.0194, -16.0939, 0.22", "-51.6077, 38.5534, -16.5167, 0.51", "-52.3244, 39.0493, -16.9283, 1.02", "-53.1072, 39.6173, -17.4076, 1.24", "-53.7252, 40.1109, -17.8059, 1.24", "-55.1222, 41.4159, -18.7991, 0.22", "-56.055, 42.559, -19.6055, 0.22", "-56.5003, 43.2785, -20.064, 0.36", "-56.8733, 44.0029, -20.5008, 0.66", "-57.0936, 44.4901, -20.7856, 0.88", "-57.3798, 45.1865, -21.154, 0.88", "-57.8764, 46.396, -21.7105, 0.15", "-58.224, 46.9193, -21.9098, 0.58", "-59.2769, 48.0374, -22.1794, 0.15", "-60.3674, 48.9434, -22.2921, 0.66", "-60.9601, 49.3732, -22.3089, 1.68", "-62.1185, 50.1511, -22.2755, 2.41", "-64.2469, 51.5335, -22.1528, 0.58", "-65.7085, 52.5373, -22.0588, 0.36", "-66.5126, 53.1928, -21.9966, 0.15", "-66.7987, 53.4578, -21.9825, 0.15", "-67.3028, 53.9886, -21.9836, 0.15", "-67.9618, 54.8328, -22.0591, 0.73", "-68.336, 55.4172, -22.1582, 0.73", "-69.0314, 56.4915, -22.3734, 0.29", "-69.4584, 57.1431, -22.4671, 0.29", "-70.3366, 58.3333, -22.6263, 1.02", "-70.9071, 59.0133, -22.7442, 1.17", "-72.1233, 60.2747, -23.0018, 0.15", "-72.6652, 60.7646, -23.133, 0.36", "-73.0364, 61.0493, -23.2624, 0.36", "-74.0901, 61.8091, -23.753, 0.07", "-74.9828, 62.4474, -24.3272, 0.66", "-75.4961, 62.8086, -24.7021, 1.24", "-75.8233, 63.0277, -24.9568, 1.24", "-76.7524, 63.5863, -25.6455, 0.15", "-77.1235, 63.7756, -25.9074, 0.15", "-77.6887, 64.0317, -26.2528, 0.15", "-78.3053, 64.2587, -26.5419, 0.15", "-78.9647, 64.4337, -26.8391, 0.15", "-79.9816, 64.6486, -27.2797, 0.66", "-81.1039, 64.8516, -27.7394, 1.53", "-81.7778, 64.9731, -28.0236, 2.04", "-83.1771, 65.2556, -28.6485, 1.61", "-84.9295, 65.7241, -29.4797, 0.15", "-85.302, 65.8907, -29.6565, 0.15", "-85.661, 66.1444, -29.8197, 0.15", "-86.182, 66.6616, -30.0503, 0.15", "-86.7137, 67.3354, -30.3239, 0.95", "-87.0738, 67.9008, -30.5275, 1.09", "-87.9313, 69.3759, -30.954, 0.22", "-88.146, 69.6979, -31.06, 0.22", "-88.3582, 69.9451, -31.1547, 0.22", "-88.905, 70.293, -31.3609, 0.22", "-89.6022, 70.2828, -31.6254, 0.44", "-90.1979, 70.1123, -31.8831, 0.44", "-91.009, 69.8976, -32.3488, 0.15", "-91.2863, 69.9013, -32.5045, 0.15", "-91.7226, 69.991, -32.7336, 0.15", "-92.2665, 70.2096, -33.0296, 0.44", "-92.9663, 70.5981, -33.4913, 0.22", "-93.9771, 71.307, -34.2334, 0.73", "-94.7399, 71.9367, -34.8098, 1.53", "-95.0644, 72.218, -35.0567, 1.53", "-96.1494, 73.1976, -35.844, 0.07", "-96.8775, 73.868, -36.3496, 0.07", "-97.2885, 74.2721, -36.6283, 0.88", "-97.8754, 74.9164, -36.9709, 1.46", "-98.3763, 75.5238, -37.2668, 1.46", "-99.5375, 76.9956, -37.8885, 0.15", "-100.084, 77.6611, -38.1034, 0.15", "-100.713, 78.3791, -38.3229, 0.66", "-101.697, 79.4955, -38.6806, 0.07", "-102.654, 80.7246, -39.1189, 0.36", "-102.891, 81.0729, -39.2599, 0.36", "-103.613, 82.2081, -39.7648, 0.07", "-104.111, 82.9376, -40.101, 0.58", "-104.662, 83.6607, -40.498, 0.88", "-105.549, 84.701, -41.1561, 0.07", "-106.061, 85.2621, -41.5016, 0.73", "-106.284, 85.486, -41.6398, 0.73", "-107.435, 86.4848, -42.3425, 0.07", "-108.472, 87.1783, -42.8815, 1.02", "-109.16, 87.5201, -43.1971, 1.61", "-109.597, 87.6772, -43.3685, 1.61", "-110.708, 87.9896, -43.7639, 0.73", "-112.136, 88.3217, -44.3484, 0.07", "-112.98, 88.4895, -44.7263, 0.07", "-113.331, 88.556, -44.8767, 0.07", "-113.822, 88.6578, -45.1156, 0.58", "-114.438, 88.8093, -45.4295, 0.8", "-116.043, 89.282, -46.2473, 0.29", "-116.899, 89.5736, -46.6801, 0.51", "-117.389, 89.756, -46.9583, 0.51", "-118.652, 90.2269, -47.6811, 0.07", "-119.424, 90.5007, -48.1138, 0.8", "-119.955, 90.6591, -48.4144, 0.8", "-121.734, 91.1079, -49.4348, 0.07", "-123.083, 91.4626, -50.2398, 0.66", "-123.822, 91.6728, -50.6986, 1.46", "-124.204, 91.78, -50.94, 1.46", "-125.634, 92.1564, -51.9187, 0.29", "-126.479, 92.3817, -52.5001, 0.29", "-127.668, 92.7533, -53.313, 0.07", "-128.632, 93.1014, -53.9695, 0.66", "-129.599, 93.522, -54.6718, 1.82", "-130.965, 94.2306, -55.7354, 0.29", "-131.716, 94.6854, -56.3286, 0.8", "-133.003, 95.4509, -57.3618, 0.15", "-133.429, 95.6948, -57.7093, 0.36", "-134.208, 96.1365, -58.2878, 0.73", "-134.945, 96.5529, -58.7818, 0.07", "-135.566, 96.8601, -59.1311, 0.88", "-136.811, 97.2995, -59.6833, 0.07", "-137.548, 97.4871, -59.8655, 0.29", "-138.682, 97.7481, -60.0766, 0.07", "-139.222, 97.8932, -60.1751, 0.66", "-139.835, 98.1147, -60.2878, 0.95", "-141.07, 98.6735, -60.5413, 0.07", "-142.158, 99.2907, -60.775, 0.07", "-143.769, 100.369, -61.2074, 0.07", "-145.071, 101.388, -61.6412, 0.07", "-146.175, 102.374, -62.1231, 0.44", "-146.56, 102.776, -62.3242, 0.29", "-146.968, 103.262, -62.5684, 1.09", "-147.483, 103.959, -62.896, 1.09", "-148.419, 105.422, -63.4549, 0.07", "-149.497, 107.214, -64.0721, 0.07", "-150.116, 108.3, -64.4494, 1.17", "-150.354, 108.724, -64.5952, 0.95", "-151.081, 110.008, -65.0139, 0.22", "-151.384, 110.539, -65.1636, 0.07", "-151.557, 110.837, -65.2124, 0.07", "-151.967, 111.494, -65.2553, 0.29", "-152.533, 112.321, -65.2972, 0.07", "-152.955, 112.917, -65.3937, 0.51", "-153.256, 113.341, -65.5125, 0.51", "-154.03, 114.497, -66.0281, 0.07", "-154.461, 115.163, -66.4482, 0.95", "-154.692, 115.498, -66.7405, 1.17", "-155.97, 117.172, -68.6015, 0.07", "-156.438, 117.701, -69.3438, 0.88", "-157.382, 118.719, -70.9576, 0.22", "-158.178, 119.524, -72.444, 0.44", "-158.955, 120.239, -73.9307, 0.44", "-159.318, 120.526, -74.6632, 1.09", "-159.674, 120.676, -75.4155, 1.09" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "23.0399, -4.80432, 16.9874, 0.07", "30.0859, -2.17592, 22.3989, 0.07", "36.612, 1.06478, 28.1214, 0.07", "43.643, 4.14508, 33.3094, 0.07", "50.9737, 7.31296, 38.0067, 0.07", "58.6513, 11.0752, 41.576, 0.07", "67.2527, 13.7835, 43.7017, 0.07", "75.8846, 15.6528, 46.5011, 0.07", "84.8446, 17.6382, 47.7717, 0.07", "93.3738, 21.245, 47.4854, 0.07", "101.467, 25.7516, 47.6493, 0.07", "109.162, 30.8305, 46.7359, 0.07", "116.301, 36.2382, 44.3627, 0.07", "123.563, 41.9739, 43.9133, 0.07", "129.674, 48.8252, 45.1611, 0.07", "135.747, 55.394, 47.5711, 0.07", "142.81, 61.2866, 48.6812, 0.07", "150.712, 65.3296, 51.3349, 0.07", "158.18, 70.1413, 53.9649, 0.07", "166.028, 74.153, 56.8224, 0.07", "173.871, 78.637, 58.8757, 0.07" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "23.0399, -4.80432, 16.9874, 0.07", "30.3104, -1.98314, 22.9546, 0.07", "37.1942, -0.373433, 29.7699, 0.07", "45.1474, 3.08395, 34.3764, 0.07", "53.1855, 5.64609, 39.4015, 0.07", "60.8221, 7.87312, 45.159, 0.07", "68.0288, 10.2326, 51.3978, 0.07", "74.5911, 13.1902, 58.0774, 0.07", "79.729, 18.0881, 64.8626, 0.07", "85.336, 22.9312, 71.3072, 0.07", "91.7321, 27.7336, 77.004, 0.07", "97.6851, 31.5551, 83.8147, 0.07" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "3.81643, -3.33216, 28.5599, 0.07", "3.12256, -0.148972, 38.9785, 0.07", "2.06635, 0.84841, 49.7975, 0.07" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "3.81643, -3.33216, 28.5599, 0.07", "2.88436, -0.698647, 37.4663, 0.07", "1.93109, 0.74797, 46.6383, 0.07", "2.09837, 2.58875, 55.7877, 0.07", "1.27923, 3.73916, 65.0145, 0.07", "1.31772, 3.92034, 74.3469, 0.07", "3.69299, 2.50842, 83.2628, 0.07", "5.38938, 1.61124, 92.3976, 0.07", "7.83884, -0.778851, 101.082, 0.07", "10.5252, -4.1357, 109.367, 0.07", "14.254, -8.89468, 116.479, 0.07", "19.182, -12.5486, 123.514, 0.07", "24.9495, -16.8518, 129.459, 0.07", "31.4954, -20.3656, 135.11, 0.07" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-14.6336, -32.7867, 32.4794, 0.07", "-18.0945, -36.3508, 40.127, 0.07" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-14.6336, -32.7867, 32.4794, 0.07", "-18.7802, -36.145, 38.5658, 0.07", "-23.3236, -38.1554, 44.9559, 0.07", "-26.4412, -41.1727, 51.7891, 0.07", "-29.0308, -43.0974, 59.2125, 0.07", "-30.0899, -45.5401, 66.8563, 0.07", "-30.9135, -47.8131, 74.5811, 0.07", "-32.2746, -49.453, 82.3898, 0.07", "-33.296, -49.89, 90.4074, 0.07", "-35.2868, -49.9249, 98.253, 0.07", "-36.8723, -51.3361, 106.064, 0.07" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "4.2858, -20.3022, -0.00818735, 0.88", "5.26847, -21.4914, -0.869948, 0.88", "5.77289, -22.0231, -1.2855, 0.88", "6.78398, -22.9239, -2.15737, 0.73", "7.63241, -23.5755, -2.96203, 0.73", "8.31428, -24.072, -3.67888, 0.73", "8.50746, -24.2183, -3.89671, 0.73", "8.79143, -24.4296, -4.25454, 0.73", "9.44629, -24.9658, -4.94669, 0.73", "9.8894, -25.4534, -5.27369, 0.73", "10.3417, -26.1061, -5.42375, 0.73", "10.8347, -27.0247, -5.40901, 0.73", "11.437, -28.4811, -5.17134, 0.73", "11.8376, -29.7174, -4.87892, 0.73", "12.0904, -30.7365, -4.59146, 0.73", "12.3058, -32.0303, -4.20844, 0.88", "12.3802, -33.0718, -3.8981, 0.66", "12.3387, -34.3448, -3.55347, 0.66", "12.2483, -35.0781, -3.41567, 0.66", "12.1259, -35.9862, -3.33218, 0.51", "12.0349, -37.2557, -3.29275, 0.66", "12.0515, -38.1485, -3.28595, 0.66", "12.1143, -38.6769, -3.26974, 0.66", "12.4309, -40.0881, -3.15728, 0.66", "13.0189, -42.0367, -2.78592, 0.58", "13.5342, -43.3312, -2.38355, 0.58", "14.0189, -44.3164, -1.95798, 0.58", "14.2838, -44.784, -1.70667, 0.88", "14.6103, -45.3126, -1.33849, 0.88", "15.2033, -46.15, -0.497311, 0.88", "15.5072, -46.5554, 0.096473, 0.88", "15.6116, -46.7866, 0.37684, 0.88", "15.7169, -47.3246, 0.73292, 0.88", "15.7579, -47.8525, 0.913039, 0.88", "15.8066, -48.5616, 1.03931, 0.88", "15.8763, -49.5684, 1.14179, 0.88", "16.0457, -51.3003, 1.22037, 0.58", "16.2124, -52.5289, 1.218, 0.95", "16.3658, -53.5923, 1.20344, 1.09", "16.6136, -55.4532, 1.16898, 0.88", "16.6966, -56.5341, 1.1512, 0.88", "16.7235, -57.9268, 1.11692, 0.88", "16.5777, -60.426, 1.09525, 0.66", "16.3702, -61.8137, 1.1059, 0.88", "16.1438, -62.6665, 1.13287, 1.24", "15.3638, -64.475, 1.22463, 0.66", "14.9245, -65.2261, 1.30598, 0.66", "14.1333, -66.3475, 1.53271, 0.51", "13.5536, -67.1001, 1.76853, 0.51", "13.1277, -67.7841, 2.0312, 0.51", "13.1424, -68.2367, 2.30375, 0.51", "13.6413, -68.9761, 2.96931, 0.51", "14.4312, -69.9205, 3.89841, 0.29", "15.2977, -70.8313, 4.80389, 0.51", "16.2463, -71.8559, 5.73172, 0.44", "17.0157, -72.7984, 6.52528, 0.44", "17.7391, -73.8683, 7.43305, 0.66", "17.9464, -74.2419, 7.7459, 0.88", "18.1888, -74.8302, 8.26424, 0.88", "18.5328, -76.0667, 9.41772, 0.36", "18.7347, -77.2218, 10.6072, 0.36", "18.8497, -78.4015, 11.8079, 0.22", "18.8688, -78.5878, 12.0061, 0.22", "18.9158, -79.3764, 12.9799, 0.29", "18.9033, -79.7534, 13.6565, 0.07", "18.9501, -79.6568, 14.5225, 0.15", "21.7552, -88.7957, 18.1869, 0.15", "23.9568, -97.8729, 22.3789, 0.15", "26.0488, -105.977, 28.275, 0.15", "29.4545, -114.099, 33.496, 0.15", "33.3169, -120.636, 40.3634, 0.15", "36.7342, -127.04, 47.5837, 0.15", "39.8707, -134.136, 54.2634, 0.15", "42.3981, -140.66, 61.7374, 0.15", "43.8542, -147.917, 68.8116, 0.15", "45.6795, -154.813, 76.1552, 0.15", "47.2694, -162.742, 82.433, 0.15", "47.0901, -171.025, 88.4481, 0.15", "47.2501, -179.312, 94.4577, 0.15", "46.0057, -188.382, 99.0409, 0.15", "43.9102, -197.685, 102.766, 0.15" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "4.2858, -20.3022, -0.00818735, 1.53", "3.8224, -21.0453, -0.939341, 1.53", "3.1088, -22.0681, -2.24494, 1.24", "2.46926, -22.9847, -3.41504, 1.09", "1.88158, -23.827, -4.49026, 0.88", "1.16609, -24.8525, -5.79932, 1.09", "0.801942, -25.3744, -6.46555, 1.31", "0.353256, -26.0584, -7.3638, 1.68" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-13.3437, -49.4085, 17.0659, 0.07", "-12.1238, -54.5385, 23.4079, 0.07" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-13.3437, -49.4085, 17.0659, 0.07", "-12.4826, -58.2938, 22.0211, 0.07", "-10.9133, -67.0994, 26.9447, 0.07", "-8.90908, -75.0632, 33.0114, 0.07", "-8.80117, -83.67, 38.5027, 0.07", "-8.49243, -91.8542, 44.5991, 0.07", "-9.18906, -101.092, 48.8912, 0.07", "-8.24841, -110.301, 53.1999, 0.07", "-5.56337, -119.064, 57.6995, 0.07", "-3.99056, -128.392, 61.5409, 0.07", "-0.948061, -137.546, 64.8857, 0.07" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-12.8626, 28.5162, 17.4761, 0.07", "-14.1119, 36.6861, 16.9974, 0.07", "-15.7449, 44.8008, 16.8541, 0.07", "-16.6801, 53.0264, 16.8998, 0.07", "-18.1642, 61.1694, 17.056, 0.07", "-19.2116, 69.2239, 15.4544, 0.07", "-19.1641, 77.4813, 14.8637, 0.07", "-17.6965, 85.6232, 15.1663, 0.07", "-15.1306, 93.4927, 15.0102, 0.07", "-12.5361, 101.115, 13.0881, 0.07", "-10.9996, 108.804, 10.4307, 0.07", "-10.0393, 116.265, 6.97489, 0.07", "-8.23598, 123.664, 3.7275, 0.07", "-4.7984, 130.448, 0.458187, 0.07", "-0.163746, 136.358, -3.02549, 0.07", "5.09663, 141.463, -6.87324, 0.07" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-12.8626, 28.5162, 17.4761, 0.07", "-12.8575, 41.0436, 18.1655, 0.07", "-14.4761, 53.4132, 19.5012, 0.07", "-15.0591, 65.6374, 22.265, 0.07", "-16.0944, 77.9742, 24.2998, 0.07", "-17.2013, 90.4595, 24.8516, 0.07", "-20.3004, 102.511, 26.4477, 0.07", "-21.0944, 114.958, 27.8119, 0.07", "-20.7536, 127.497, 28.0606, 0.07", "-20.0194, 139.957, 26.7853, 0.07", "-21.6161, 152.125, 24.1766, 0.07", "-21.1589, 164.635, 23.3478, 0.07", "-20.443, 177.016, 21.4466, 0.07", "-18.453, 189.403, 21.5212, 0.07", "-14.6291, 201.24, 19.8843, 0.07", "-12.1488, 213.305, 17.4966, 0.07", "-8.27164, 225.154, 16.0912, 0.07", "-6.98142, 237.337, 13.3877, 0.07", "-8.27586, 249.016, 8.99035, 0.07", "-11.4899, 260.928, 6.71389, 0.07", "-16.6176, 272.15, 4.43269, 0.07" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-108.668, 95.7342, 34.2005, 0.07", "-118.009, 104.9, 36.3025, 0.07", "-126.059, 115.302, 37.9485, 0.07" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-108.668, 95.7342, 34.2005, 0.07", "-115.866, 101.972, 35.4585, 0.07" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-145.056, 85.5253, 24.4726, 0.07", "-153.091, 91.2297, 26.3973, 0.07", "-160.893, 96.7481, 29.4734, 0.07", "-168.24, 101.553, 34.3454, 0.07", "-176.473, 104.274, 39.4057, 0.07", "-184.122, 106.567, 45.4917, 0.07", "-191.141, 108.604, 52.3758, 0.07", "-199.089, 111.65, 57.6992, 0.07", "-207.362, 115.276, 62.0831, 0.07", "-214.995, 118.95, 67.4717, 0.07" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-145.056, 85.5253, 24.4726, 0.07", "-157.542, 93.3009, 28.0078, 0.07", "-168.788, 101.835, 33.4429, 0.07" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-159.674, 120.676, -75.4155, 0.36", "-160.017, 120.352, -76.2047, 0.36", "-160.634, 119.839, -77.2865, 0.36", "-161.141, 119.499, -78.1324, 0.58", "-162.117, 118.901, -79.8581, 0.58", "-162.972, 118.319, -81.4527, 0.36", "-163.967, 117.644, -83.2822, 0.36", "-165.275, 116.879, -85.4854, 0.36", "-166.191, 116.466, -86.9296, 0.51", "-166.892, 116.279, -88.0023, 0.36", "-167.723, 116.297, -89.1973, 0.58", "-169.036, 116.702, -90.8459, 0.36", "-170.049, 117.191, -91.9815, 0.88", "-171.558, 118.05, -93.5382, 0.22", "-172.423, 118.559, -94.3231, 0.73", "-173.689, 119.362, -95.3483, 0.07", "-174.503, 119.946, -95.9715, 0.29", "-176.514, 121.47, -97.4233, 0.07" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-159.674, 120.676, -75.4155, 0.07", "-159.877, 119.331, -76.0417, 0.07", "-159.942, 118.353, -76.4565, 0.73", "-159.966, 117.163, -76.9477, 0.15", "-159.967, 116.562, -77.1815, 0.15", "-159.972, 115.748, -77.4845, 0.36", "-159.987, 114.824, -77.8284, 0.07", "-159.987, 113.727, -78.2127, 0.8", "-159.971, 112.849, -78.5119, 0.15", "-159.977, 112.466, -78.6507, 0.44", "-160.083, 110.889, -79.2279, 0.15", "-160.187, 109.893, -79.5792, 0.44", "-160.359, 108.6, -80.0029, 0.15", "-160.551, 107.356, -80.3558, 0.29", "-160.726, 106.302, -80.6422, 0.07", "-160.858, 105.525, -80.8471, 0.07", "-160.938, 105.066, -80.9456, 0.29", "-161.154, 103.889, -81.1181, 0.07", "-161.304, 103.145, -81.1629, 0.51" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "97.6851, 31.5551, 83.8147, 0.07", "106.963, 36.0586, 92.3582, 0.07" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "97.6851, 31.5551, 83.8147, 0.07", "105.51, 35.2563, 90.198, 0.07" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-36.8723, -51.3361, 106.064, 0.07", "-43.9064, -51.3818, 114.105, 0.07" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-36.8723, -51.3361, 106.064, 0.07", "-36.57, -54.2274, 115.574, 0.07", "-38.7424, -56.3081, 125.052, 0.07" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "0.353256, -26.0584, -7.3638, 0.22", "-0.085479, -27.6394, -8.20307, 0.22", "-0.378587, -28.6756, -8.68135, 0.88", "-0.770122, -29.9394, -9.08009, 0.44", "-0.998791, -30.6399, -9.25046, 0.44", "-1.35126, -31.7555, -9.41663, 0.44", "-1.76651, -33.0376, -9.52981, 0.22", "-2.07252, -34.0578, -9.52972, 0.22", "-2.55944, -35.5814, -9.46111, 1.09", "-2.72592, -36.0802, -9.40247, 1.31", "-3.17334, -37.605, -9.15652, 0.22", "-3.37236, -38.4495, -8.99703, 0.22", "-3.55871, -39.6251, -8.77794, 0.22", "-3.60673, -40.3253, -8.68511, 0.44", "-3.59123, -41.4128, -8.596, 0.22", "-3.50969, -42.3409, -8.52721, 0.22", "-3.39136, -43.0734, -8.48996, 0.22", "-3.05571, -44.6225, -8.42068, 0.15", "-2.77169, -45.7836, -8.36308, 0.15", "-2.50241, -46.8858, -8.3059, 0.15", "-2.23937, -48.0541, -8.25453, 0.15", "-1.89801, -49.5859, -8.20022, 0.15", "-1.62044, -50.6752, -8.17261, 0.22", "-2.74489, -60.6038, -7.20283, 0.22", "-4.88084, -70.4092, -6.93124, 0.22", "-6.80378, -80.2418, -7.56792, 0.22", "-8.64756, -90.0674, -8.48493, 0.22", "-10.8102, -99.3264, -11.7062, 0.22", "-11.2362, -108.485, -15.7966, 0.22", "-10.6227, -117.845, -19.3744, 0.22", "-9.19704, -127.272, -22.5173, 0.22", "-6.15362, -136.102, -26.1989, 0.22", "-4.16545, -145.422, -29.3556, 0.22", "-3.62848, -154.814, -32.8587, 0.22" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "0.353256, -26.0584, -7.3638, 0.73", "1.51636, -27.8202, -8.975, 0.73", "2.16178, -28.6794, -9.64172, 0.73", "2.62799, -29.3569, -10.1265, 0.73", "3.0747, -30.0926, -10.6308, 0.73", "3.41217, -30.7172, -11.0552, 0.73", "3.69525, -31.2849, -11.4532, 0.73", "4.00697, -32.0547, -11.8715, 0.73", "4.46965, -33.2852, -12.5895, 0.73", "4.65213, -33.7265, -12.9923, 0.73", "4.78351, -33.9444, -13.3417, 0.73", "4.9315, -34.0277, -13.7474, 0.73", "5.09764, -33.9932, -14.2475, 0.73", "5.21271, -33.8483, -14.6801, 0.73", "5.56649, -33.4018, -15.597, 0.73", "5.94701, -32.9647, -16.4278, 0.73", "6.32588, -32.578, -17.1684, 0.58", "6.66946, -32.2459, -17.8475, 0.58", "7.04428, -31.8475, -18.7842, 0.44" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-0.948061, -137.546, 64.8857, 0.07", "0.314775, -146.586, 69.4083, 0.07", "2.99188, -154.948, 74.5743, 0.07" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-0.948061, -137.546, 64.8857, 0.07", "0.106358, -144.8, 68.6879, 0.07", "2.46224, -151.836, 72.3127, 0.07" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_55", "dend_52", "dend_51", "dend_24", "dend_21", "dend_0", "dend_57", "dend_56", "dend_54", "dend_53", "dend_36", "dend_25", "dend_23", "dend_22", "dend_12", "dend_1", "dend_59", "dend_58", "dend_44", "dend_37", "dend_33", "dend_26", "dend_16", "dend_13", "dend_7", "dend_2", "dend_46", "dend_45", "dend_41", "dend_38", "dend_35", "dend_34", "dend_30", "dend_27", "dend_20", "dend_17", "dend_15", "dend_14", "dend_11", "dend_8", "dend_6", "dend_3", "dend_50", "dend_47", "dend_43", "dend_42", "dend_40", "dend_39", "dend_32", "dend_31", "dend_29", "dend_28", "dend_19", "dend_18", "dend_10", "dend_9", "dend_5", "dend_4", "dend_49", "dend_48" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_55", "dend_52", "dend_51", "dend_24", "dend_21", "dend_0", "dend_57", "dend_56", "dend_54", "dend_53", "dend_36", "dend_25", "dend_23", "dend_22", "dend_12", "dend_1", "dend_59", "dend_58", "dend_44", "dend_37", "dend_33", "dend_26", "dend_16", "dend_13", "dend_7", "dend_2", "dend_46", "dend_45", "dend_41", "dend_38", "dend_35", "dend_34", "dend_30", "dend_27", "dend_20", "dend_17", "dend_15", "dend_14", "dend_11", "dend_8", "dend_6", "dend_3", "dend_50", "dend_47", "dend_43", "dend_42", "dend_40", "dend_39", "dend_32", "dend_31", "dend_29", "dend_28", "dend_19", "dend_18", "dend_10", "dend_9", "dend_5", "dend_4", "dend_49", "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_0", "dend_0", "axon_0", "axon_0", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_12", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_2", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_50", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_40", "dend_40", "dend_39", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_19", "dend_18", "dend_10", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_49", "dend_49", "dend_48", "dend_48" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.6794998E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cSTUT189_L5_NBC_031c89778f_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_55, id: dend_55, parent: soma_0
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: soma_0
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: soma_0
create dend_51
public dend_51
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_36, id: dend_36, parent: dend_24
create dend_36
public dend_36
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_44, id: dend_44, parent: dend_36
create dend_44
public dend_44
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_33, id: dend_33, parent: dend_25
create dend_33
public dend_33
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_41, id: dend_41, parent: dend_37
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_16
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_50, id: dend_50, parent: dend_46
create dend_50
public dend_50
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_52, dend_51, dend_24, dend_21, dend_0, dend_57, dend_56, dend_54, dend_53, dend_36, dend_25, dend_23, dend_22, dend_12, dend_1, dend_59, dend_58, dend_44, dend_37, dend_33, dend_26, dend_16, dend_13, dend_7, dend_2, dend_46, dend_45, dend_41, dend_38, dend_35, dend_34, dend_30, dend_27, dend_20, dend_17, dend_15, dend_14, dend_11, dend_8, dend_6, dend_3, dend_50, dend_47, dend_43, dend_42, dend_40, dend_39, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_10, dend_9, dend_5, dend_4, dend_49, dend_48]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_55, dend_52, dend_51, dend_24, dend_21, dend_0, dend_57, dend_56, dend_54, dend_53, dend_36, dend_25, dend_23, dend_22, dend_12, dend_1, dend_59, dend_58, dend_44, dend_37, dend_33, dend_26, dend_16, dend_13, dend_7, dend_2, dend_46, dend_45, dend_41, dend_38, dend_35, dend_34, dend_30, dend_27, dend_20, dend_17, dend_15, dend_14, dend_11, dend_8, dend_6, dend_3, dend_50, dend_47, dend_43, dend_42, dend_40, dend_39, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_10, dend_9, dend_5, dend_4, dend_49, dend_48]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_54
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, axon_0, axon_0, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_36, dend_36, dend_36, dend_36, dend_36, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_12, dend_1, dend_1, dend_1, axon_1, axon_1, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_39, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_19, dend_18, dend_10, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_49, dend_49, dend_48, dend_48]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_55(0), soma_0(0.4999999289980176)
    connect dend_52(0), soma_0(0.4999999289980176)
    connect dend_51(0), soma_0(0.4999999289980176)
    connect dend_24(0), soma_0(0.4999999289980176)
    connect dend_21(0), soma_0(0.4999999289980176)
    connect dend_0(0), soma_0(0.4999999289980176)
    connect axon_0(0), soma_0(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_36(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_44(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_33(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_41(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_20(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_50(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 5.06383, -8.03547, 0.0, 2.96232 ) }
    soma_0 { pt3dadd( 4.52136, -7.21896, 0.0, 4.65461 ) }
    soma_0 { pt3dadd( 3.9789, -6.40244, 0.0, 6.41887 ) }
    soma_0 { pt3dadd( 3.43643, -5.58592, 0.0, 7.96069 ) }
    soma_0 { pt3dadd( 2.89397, -4.7694, 0.0, 9.55419 ) }
    soma_0 { pt3dadd( 2.35151, -3.95288, 0.0, 10.983 ) }
    soma_0 { pt3dadd( 1.80904, -3.13637, 0.0, 11.7075 ) }
    soma_0 { pt3dadd( 1.26658, -2.31985, 0.0, 12.5906 ) }
    soma_0 { pt3dadd( 0.724116, -1.50333, 0.0, 13.2278 ) }
    soma_0 { pt3dadd( 0.181652, -0.686812, 0.0, 13.8644 ) }
    soma_0 { pt3dadd( -0.360812, 0.129707, 0.0, 14.2774 ) }
    soma_0 { pt3dadd( -0.903275, 0.946225, 0.0, 14.5108 ) }
    soma_0 { pt3dadd( -1.44574, 1.76274, 0.0, 14.4652 ) }
    soma_0 { pt3dadd( -1.9882, 2.57926, 0.0, 14.3007 ) }
    soma_0 { pt3dadd( -2.53067, 3.39578, 0.0, 13.9535 ) }
    soma_0 { pt3dadd( -3.07313, 4.2123, 0.0, 13.2045 ) }
    soma_0 { pt3dadd( -3.61559, 5.02882, 0.0, 12.1103 ) }
    soma_0 { pt3dadd( -4.15806, 5.84533, 0.0, 10.6196 ) }
    soma_0 { pt3dadd( -4.70052, 6.66185, 0.0, 8.93613 ) }
    soma_0 { pt3dadd( -5.24299, 7.47837, 0.0, 6.69248 ) }
    soma_0 { pt3dadd( -5.78545, 8.29489, 0.0, 3.86173 ) }
    // Section: dend_55, id: dend_55, parent: soma_0 (entry count 21/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -6.39245, 3.59415, -5.2, 0.8 ) }
    dend_55 { pt3dadd( -7.58895, 2.99489, -5.65564, 0.8 ) }
    dend_55 { pt3dadd( -8.52969, 2.56465, -5.99743, 0.8 ) }
    dend_55 { pt3dadd( -9.4726, 2.15254, -6.3196, 1.24 ) }
    dend_55 { pt3dadd( -11.0012, 1.51804, -6.81699, 1.46 ) }
    dend_55 { pt3dadd( -13.321, 0.608796, -7.56312, 1.17 ) }
    dend_55 { pt3dadd( -14.5898, 0.163297, -7.95777, 0.95 ) }
    dend_55 { pt3dadd( -15.6535, -0.119551, -8.26661, 0.95 ) }
    dend_55 { pt3dadd( -16.6764, -0.294501, -8.55346, 0.95 ) }
    dend_55 { pt3dadd( -17.328, -0.351466, -8.72294, 0.95 ) }
    dend_55 { pt3dadd( -18.5109, -0.30827, -8.97277, 0.95 ) }
    dend_55 { pt3dadd( -19.8438, -0.0670528, -9.2359, 1.17 ) }
    dend_55 { pt3dadd( -20.6626, 0.167193, -9.37549, 1.53 ) }
    dend_55 { pt3dadd( -22.0175, 0.653257, -9.57307, 1.68 ) }
    dend_55 { pt3dadd( -22.6784, 0.91352, -9.65485, 1.68 ) }
    dend_55 { pt3dadd( -24.653, 1.66858, -9.8531, 0.88 ) }
    dend_55 { pt3dadd( -25.4613, 1.95472, -9.89718, 0.88 ) }
    dend_55 { pt3dadd( -26.1636, 2.17077, -9.91492, 0.88 ) }
    dend_55 { pt3dadd( -27.2044, 2.45192, -9.91569, 0.88 ) }
    dend_55 { pt3dadd( -28.2559, 2.68956, -9.90954, 0.88 ) }
    dend_55 { pt3dadd( -29.9735, 3.03145, -9.88945, 1.09 ) }
    dend_55 { pt3dadd( -31.3253, 3.25987, -9.86569, 1.68 ) }
    dend_55 { pt3dadd( -32.4203, 3.43481, -9.8401, 1.9 ) }
    dend_55 { pt3dadd( -33.7783, 3.65164, -9.79655, 2.12 ) }
    dend_55 { pt3dadd( -34.5035, 3.78372, -9.7706, 2.12 ) }
    dend_55 { pt3dadd( -36.0778, 4.11512, -9.70776, 1.82 ) }
    dend_55 { pt3dadd( -36.9577, 4.33495, -9.66888, 1.68 ) }
    // Section: dend_52, id: dend_52, parent: soma_0 (entry count 48/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -4.28245, 5.95415, -5.85, 0.88 ) }
    dend_52 { pt3dadd( -4.76043, 5.71593, -6.19009, 0.88 ) }
    dend_52 { pt3dadd( -5.39839, 5.3155, -6.65979, 0.88 ) }
    dend_52 { pt3dadd( -5.74401, 5.10982, -6.87691, 0.88 ) }
    dend_52 { pt3dadd( -6.42707, 4.75059, -7.26655, 0.88 ) }
    dend_52 { pt3dadd( -7.10179, 4.45736, -7.60691, 0.88 ) }
    dend_52 { pt3dadd( -8.08119, 4.10978, -8.05041, 0.88 ) }
    dend_52 { pt3dadd( -8.85009, 3.88684, -8.35517, 0.88 ) }
    dend_52 { pt3dadd( -10.055, 3.71606, -8.74716, 1.02 ) }
    dend_52 { pt3dadd( -11.358, 3.69651, -9.13902, 0.88 ) }
    dend_52 { pt3dadd( -12.482, 3.80094, -9.45467, 1.24 ) }
    dend_52 { pt3dadd( -13.2882, 3.94526, -9.69873, 1.24 ) }
    dend_52 { pt3dadd( -13.9986, 4.1137, -9.9406, 1.24 ) }
    dend_52 { pt3dadd( -15.8826, 4.56137, -10.671, 0.8 ) }
    dend_52 { pt3dadd( -16.5853, 4.69833, -11.0094, 0.8 ) }
    dend_52 { pt3dadd( -17.1703, 4.74306, -11.3728, 0.8 ) }
    dend_52 { pt3dadd( -17.9742, 4.53677, -12.0959, 0.8 ) }
    dend_52 { pt3dadd( -18.4955, 4.21368, -12.7084, 0.8 ) }
    dend_52 { pt3dadd( -18.9867, 3.73592, -13.4099, 0.58 ) }
    dend_52 { pt3dadd( -19.3208, 3.19688, -14.0306, 0.58 ) }
    dend_52 { pt3dadd( -19.7592, 2.27049, -14.9713, 0.8 ) }
    dend_52 { pt3dadd( -20.1551, 1.15174, -15.9981, 1.17 ) }
    dend_52 { pt3dadd( -20.206, 0.95425, -16.1556, 1.17 ) }
    // Section: dend_51, id: dend_51, parent: soma_0 (entry count 71/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 4.76755, 2.33415, -5.1, 0.44 ) }
    dend_51 { pt3dadd( 5.04244, 2.20876, -5.37382, 0.44 ) }
    dend_51 { pt3dadd( 5.94721, 2.44029, -6.07672, 0.36 ) }
    dend_51 { pt3dadd( 6.36905, 2.74266, -6.31665, 0.36 ) }
    dend_51 { pt3dadd( 6.65028, 3.00351, -6.43407, 0.36 ) }
    dend_51 { pt3dadd( 6.96218, 3.31991, -6.56782, 0.36 ) }
    dend_51 { pt3dadd( 7.40838, 3.80479, -6.78417, 0.36 ) }
    dend_51 { pt3dadd( 7.93827, 4.44593, -7.06901, 0.66 ) }
    dend_51 { pt3dadd( 8.30559, 4.89837, -7.25864, 1.09 ) }
    dend_51 { pt3dadd( 8.86918, 5.54148, -7.56963, 0.8 ) }
    dend_51 { pt3dadd( 9.41802, 6.15168, -7.94448, 0.51 ) }
    dend_51 { pt3dadd( 9.79548, 6.54842, -8.23131, 0.73 ) }
    dend_51 { pt3dadd( 10.3738, 7.09975, -8.68633, 1.24 ) }
    dend_51 { pt3dadd( 10.7989, 7.44615, -8.98793, 1.82 ) }
    dend_51 { pt3dadd( 11.77, 8.12476, -9.5479, 0.36 ) }
    dend_51 { pt3dadd( 12.548, 8.60864, -9.83298, 0.36 ) }
    dend_51 { pt3dadd( 12.9101, 8.80149, -9.81382, 0.36 ) }
    dend_51 { pt3dadd( 13.3449, 8.99399, -9.5844, 0.36 ) }
    dend_51 { pt3dadd( 14.3705, 9.37701, -8.73841, 0.58 ) }
    dend_51 { pt3dadd( 15.0196, 9.58612, -8.07508, 0.29 ) }
    dend_51 { pt3dadd( 15.7059, 9.79714, -7.28116, 0.51 ) }
    dend_51 { pt3dadd( 16.492, 10.063, -6.33842, 0.73 ) }
    dend_51 { pt3dadd( 17.1442, 10.3238, -5.56714, 0.73 ) }
    dend_51 { pt3dadd( 17.4224, 10.4677, -5.23678, 0.73 ) }
    dend_51 { pt3dadd( 17.9659, 10.8455, -4.60304, 0.36 ) }
    dend_51 { pt3dadd( 18.355, 11.1581, -4.16049, 0.36 ) }
    dend_51 { pt3dadd( 18.8119, 11.569, -3.65568, 0.58 ) }
    dend_51 { pt3dadd( 19.248, 12.0664, -3.14653, 0.58 ) }
    dend_51 { pt3dadd( 19.7637, 12.7729, -2.45343, 0.58 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_51 { pt3dadd( 20.022, 13.1692, -2.04101, 0.58 ) }
    dend_51 { pt3dadd( 20.2163, 13.484, -1.68093, 0.58 ) }
    dend_51 { pt3dadd( 20.3995, 13.2718, -1.50419, 0.58 ) }
    dend_51 { pt3dadd( 20.6898, 12.9539, -1.3415, 0.58 ) }
    dend_51 { pt3dadd( 21.2022, 12.4487, -1.06893, 0.58 ) }
    dend_51 { pt3dadd( 21.9304, 11.7949, -0.707489, 0.36 ) }
    dend_51 { pt3dadd( 22.5479, 11.3475, -0.390208, 0.36 ) }
    dend_51 { pt3dadd( 23.2644, 11.0047, -0.0277585, 0.36 ) }
    dend_51 { pt3dadd( 23.9613, 10.8926, 0.35587, 0.66 ) }
    dend_51 { pt3dadd( 24.7529, 11.1632, 0.886488, 0.29 ) }
    dend_51 { pt3dadd( 24.9873, 11.3715, 1.07587, 0.44 ) }
    dend_51 { pt3dadd( 25.3458, 11.8235, 1.41062, 0.44 ) }
    dend_51 { pt3dadd( 25.7086, 12.3544, 1.75509, 0.95 ) }
    dend_51 { pt3dadd( 26.0911, 12.916, 2.12253, 0.44 ) }
    dend_51 { pt3dadd( 26.4268, 13.337, 2.42482, 0.44 ) }
    dend_51 { pt3dadd( 26.9786, 13.9078, 2.84949, 0.29 ) }
    dend_51 { pt3dadd( 27.215, 14.1277, 3.02023, 0.51 ) }
    dend_51 { pt3dadd( 27.9248, 14.7285, 3.4713, 0.29 ) }
    dend_51 { pt3dadd( 28.6111, 15.2638, 3.90161, 0.73 ) }
    dend_51 { pt3dadd( 29.412, 15.9011, 4.42957, 1.61 ) }
    dend_51 { pt3dadd( 29.6156, 16.0847, 4.59378, 1.61 ) }
    dend_51 { pt3dadd( 29.9651, 16.4179, 4.89463, 1.61 ) }
    dend_51 { pt3dadd( 30.6569, 17.1374, 5.53211, 0.95 ) }
    dend_51 { pt3dadd( 31.199, 17.7892, 6.10542, 0.66 ) }
    dend_51 { pt3dadd( 31.652, 18.4424, 6.62813, 0.29 ) }
    dend_51 { pt3dadd( 32.0659, 19.2176, 7.24405, 0.29 ) }
    dend_51 { pt3dadd( 37.1636, 24.191, 10.4071, 0.29 ) }
    dend_51 { pt3dadd( 42.1686, 28.3449, 14.6991, 0.29 ) }
    dend_51 { pt3dadd( 46.7022, 31.9197, 19.933, 0.29 ) }
    dend_51 { pt3dadd( 50.9293, 36.1221, 24.9527, 0.29 ) }
    dend_51 { pt3dadd( 55.1889, 39.0469, 30.786, 0.29 ) }
    dend_51 { pt3dadd( 59.1973, 40.6326, 37.2778, 0.29 ) }
    dend_51 { pt3dadd( 63.065, 42.8997, 43.6517, 0.29 ) }
    dend_51 { pt3dadd( 65.9834, 45.9194, 50.216, 0.29 ) }
    dend_51 { pt3dadd( 67.713, 48.7609, 57.263, 0.29 ) }
    dend_51 { pt3dadd( 69.8018, 51.9862, 64.0424, 0.29 ) }
    dend_51 { pt3dadd( 72.4368, 54.7451, 70.8374, 0.29 ) }
    dend_51 { pt3dadd( 76.0052, 57.1012, 77.352, 0.29 ) }
    dend_51 { pt3dadd( 80.0297, 58.7548, 83.8169, 0.29 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 39/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -4.54245, 4.33415, 0.96, 1.24 ) }
    dend_24 { pt3dadd( -5.64428, 4.82324, 1.24711, 1.24 ) }
    dend_24 { pt3dadd( -6.92316, 5.32794, 1.51118, 1.09 ) }
    dend_24 { pt3dadd( -7.98018, 5.7061, 1.65024, 1.24 ) }
    dend_24 { pt3dadd( -9.15414, 6.1261, 1.80469, 1.39 ) }
    dend_24 { pt3dadd( -10.0614, 6.45069, 1.92406, 2.12 ) }
    dend_24 { pt3dadd( -10.9392, 6.76472, 2.03953, 2.34 ) }
    dend_24 { pt3dadd( -11.8146, 7.01455, 2.06994, 2.04 ) }
    dend_24 { pt3dadd( -12.905, 7.26183, 2.00835, 1.75 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 48/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -2.82245, 4.93415, 2.13, 1.46 ) }
    dend_21 { pt3dadd( -2.43582, 5.62352, 2.52229, 1.46 ) }
    dend_21 { pt3dadd( -1.76442, 6.56157, 3.24461, 1.68 ) }
    dend_21 { pt3dadd( -1.26143, 7.23403, 3.83852, 1.68 ) }
    dend_21 { pt3dadd( -0.872021, 7.72911, 4.35617, 1.68 ) }
    dend_21 { pt3dadd( -0.261195, 8.4372, 5.2847, 0.44 ) }
    dend_21 { pt3dadd( 0.306181, 9.02899, 6.30129, 0.29 ) }
    dend_21 { pt3dadd( 0.615264, 9.20997, 7.0832, 0.29 ) }
    dend_21 { pt3dadd( 0.746721, 9.19659, 7.64366, 0.22 ) }
    dend_21 { pt3dadd( 0.865925, 9.06275, 8.54914, 0.22 ) }
    dend_21 { pt3dadd( 0.890914, 8.84015, 9.58862, 0.22 ) }
    dend_21 { pt3dadd( 0.808294, 8.70305, 10.2152, 0.22 ) }
    dend_21 { pt3dadd( 0.753481, 8.71285, 10.4595, 0.22 ) }
    dend_21 { pt3dadd( 0.665466, 8.87253, 10.8799, 0.22 ) }
    dend_21 { pt3dadd( 0.503708, 9.34565, 11.7365, 0.22 ) }
    dend_21 { pt3dadd( 0.364942, 9.72634, 12.2668, 0.58 ) }
    dend_21 { pt3dadd( 0.119714, 10.2804, 12.9194, 0.22 ) }
    dend_21 { pt3dadd( -0.101025, 10.6706, 13.3716, 0.22 ) }
    dend_21 { pt3dadd( -0.274229, 10.9137, 13.6843, 0.22 ) }
    dend_21 { pt3dadd( -0.633972, 11.2594, 14.2262, 0.22 ) }
    dend_21 { pt3dadd( -0.961971, 11.4567, 14.6313, 0.22 ) }
    dend_21 { pt3dadd( -1.18201, 11.5857, 14.9326, 0.22 ) }
    dend_21 { pt3dadd( -1.29426, 11.8551, 15.3917, 0.15 ) }
    dend_21 { pt3dadd( -1.25704, 12.0823, 15.6971, 0.15 ) }
    dend_21 { pt3dadd( -1.21452, 12.3424, 16.0453, 0.15 ) }
    dend_21 { pt3dadd( -1.12407, 12.7494, 16.5483, 0.15 ) }
    dend_21 { pt3dadd( -1.03268, 13.0751, 16.9653, 0.15 ) }
    dend_21 { pt3dadd( -0.939441, 13.4154, 17.4621, 0.15 ) }
    dend_21 { pt3dadd( -0.893391, 13.6072, 17.78, 0.15 ) }
    dend_21 { pt3dadd( -0.847561, 13.8621, 18.1993, 0.15 ) }
    dend_21 { pt3dadd( -0.818881, 14.0497, 18.5257, 0.15 ) }
    dend_21 { pt3dadd( -0.739977, 14.223, 18.9076, 0.15 ) }
    dend_21 { pt3dadd( -0.484242, 14.3072, 19.4834, 0.15 ) }
    dend_21 { pt3dadd( -0.235168, 14.2681, 19.9455, 0.15 ) }
    dend_21 { pt3dadd( 0.135681, 14.1195, 20.8418, 0.15 ) }
    dend_21 { pt3dadd( 0.297401, 14.0404, 21.3447, 0.15 ) }
    dend_21 { pt3dadd( 0.400787, 14.0138, 22.0616, 0.15 ) }
    dend_21 { pt3dadd( 0.347583, 14.1921, 22.5386, 0.15 ) }
    dend_21 { pt3dadd( 0.193479, 14.6293, 22.9964, 0.15 ) }
    dend_21 { pt3dadd( 0.013487, 15.1212, 23.4736, 0.15 ) }
    dend_21 { pt3dadd( -0.148814, 15.5648, 23.8944, 0.15 ) }
    dend_21 { pt3dadd( -0.307759, 16.0495, 24.2556, 0.15 ) }
    dend_21 { pt3dadd( -0.45341, 16.5298, 24.5523, 0.15 ) }
    dend_21 { pt3dadd( -0.638841, 17.4237, 25.0021, 0.15 ) }
    dend_21 { pt3dadd( 0.96669, 21.8329, 31.9663, 0.15 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 93/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.85755, -9.60585, 2.2, 2.63 ) }
    dend_0 { pt3dadd( 3.15575, -10.7859, 2.49898, 2.63 ) }
    dend_0 { pt3dadd( 3.31426, -11.4131, 2.65791, 2.77 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 96/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -5.78545, 8.29489, 0.0, 0.545971 ) }
    axon_0 { pt3dadd( -14.086, 20.7889, 0.0, 0.545971 ) }
    axon_0 { pt3dadd( -22.3866, 33.2829, 0.0, 0.545971 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 99/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -36.9577, 4.33495, -9.66888, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_57 { pt3dadd( -36.9613, 3.79422, -10.6868, 0.36 ) }
    dend_57 { pt3dadd( -36.841, 2.62384, -12.5221, 0.36 ) }
    dend_57 { pt3dadd( -36.8005, 2.20899, -13.1086, 0.36 ) }
    dend_57 { pt3dadd( -36.7808, 1.89964, -13.5075, 0.58 ) }
    dend_57 { pt3dadd( -36.769, 1.44707, -14.0454, 0.58 ) }
    dend_57 { pt3dadd( -36.7971, 0.560784, -14.9932, 0.36 ) }
    dend_57 { pt3dadd( -36.8268, 0.0772363, -15.423, 0.88 ) }
    dend_57 { pt3dadd( -37.0035, -1.02702, -16.2906, 0.36 ) }
    dend_57 { pt3dadd( -37.1711, -1.56308, -16.7673, 0.66 ) }
    dend_57 { pt3dadd( -37.3461, -1.89352, -17.1233, 0.66 ) }
    dend_57 { pt3dadd( -37.8174, -2.37702, -17.8778, 0.22 ) }
    dend_57 { pt3dadd( -38.3104, -2.55003, -18.5052, 0.22 ) }
    dend_57 { pt3dadd( -38.8037, -2.47166, -19.1103, 0.73 ) }
    dend_57 { pt3dadd( -39.4072, -2.21732, -19.8115, 0.88 ) }
    dend_57 { pt3dadd( -40.029, -1.89876, -20.5198, 0.36 ) }
    dend_57 { pt3dadd( -40.5515, -1.66757, -21.1218, 0.36 ) }
    dend_57 { pt3dadd( -40.8362, -1.59156, -21.4475, 0.36 ) }
    dend_57 { pt3dadd( -41.485, -1.6016, -22.253, 0.36 ) }
    dend_57 { pt3dadd( -41.9011, -1.698, -22.7799, 0.73 ) }
    dend_57 { pt3dadd( -42.1377, -1.79163, -23.0926, 0.88 ) }
    dend_57 { pt3dadd( -42.8522, -2.17368, -24.1348, 0.22 ) }
    dend_57 { pt3dadd( -43.4078, -2.52161, -25.0139, 1.02 ) }
    dend_57 { pt3dadd( -44.3187, -3.15747, -26.7675, 0.51 ) }
    dend_57 { pt3dadd( -44.645, -3.37559, -27.5583, 0.51 ) }
    dend_57 { pt3dadd( -44.9712, -3.52785, -28.4594, 0.73 ) }
    dend_57 { pt3dadd( -45.2488, -3.57221, -29.187, 0.73 ) }
    dend_57 { pt3dadd( -45.372, -3.55056, -29.4824, 0.73 ) }
    dend_57 { pt3dadd( -45.8065, -3.37751, -30.5058, 0.73 ) }
    dend_57 { pt3dadd( -46.2822, -3.15697, -31.5167, 0.73 ) }
    dend_57 { pt3dadd( -46.7911, -2.87631, -32.6428, 1.31 ) }
    dend_57 { pt3dadd( -47.4301, -2.46426, -34.0002, 0.07 ) }
    dend_57 { pt3dadd( -47.9309, -2.11647, -35.0767, 0.58 ) }
    dend_57 { pt3dadd( -48.9323, -1.43074, -37.2985, 0.29 ) }
    dend_57 { pt3dadd( -49.3931, -1.13652, -38.4023, 1.09 ) }
    dend_57 { pt3dadd( -50.3067, -0.583674, -41.1236, 0.8 ) }
    dend_57 { pt3dadd( -50.7993, -0.27057, -43.321, 0.58 ) }
    dend_57 { pt3dadd( -50.9333, -0.198418, -44.2428, 0.58 ) }
    dend_57 { pt3dadd( -51.0021, -0.18827, -44.7667, 0.58 ) }
    dend_57 { pt3dadd( -51.2263, -0.256853, -46.239, 0.58 ) }
    dend_57 { pt3dadd( -51.4193, -0.326234, -47.0759, 0.58 ) }
    dend_57 { pt3dadd( -51.8375, -0.448066, -48.2259, 0.58 ) }
    dend_57 { pt3dadd( -52.1332, -0.488544, -48.8769, 0.58 ) }
    dend_57 { pt3dadd( -52.5231, -0.478723, -49.6252, 0.58 ) }
    dend_57 { pt3dadd( -53.0218, -0.393717, -50.4898, 0.58 ) }
    dend_57 { pt3dadd( -53.8118, -0.165497, -51.7337, 0.88 ) }
    dend_57 { pt3dadd( -54.6176, 0.111638, -52.941, 0.22 ) }
    dend_57 { pt3dadd( -55.6367, 0.466131, -54.4132, 0.44 ) }
    dend_57 { pt3dadd( -56.8035, 0.85637, -56.0642, 0.15 ) }
    dend_57 { pt3dadd( -57.4139, 1.05265, -56.8991, 0.73 ) }
    dend_57 { pt3dadd( -58.5298, 1.39386, -58.4228, 0.07 ) }
    dend_57 { pt3dadd( -59.1866, 1.5765, -59.3428, 0.29 ) }
    dend_57 { pt3dadd( -60.1412, 1.76421, -60.7215, 0.58 ) }
    dend_57 { pt3dadd( -60.8444, 1.80273, -61.7055, 0.07 ) }
    dend_57 { pt3dadd( -61.0995, 1.775, -62.0657, 0.07 ) }
    dend_57 { pt3dadd( -61.7117, 1.61271, -63.0021, 0.07 ) }
    dend_57 { pt3dadd( -62.3297, 1.35518, -63.9787, 0.58 ) }
    dend_57 { pt3dadd( -63.1196, 0.93553, -65.2399, 0.07 ) }
    dend_57 { pt3dadd( -63.5736, 0.622086, -65.9655, 0.36 ) }
    dend_57 { pt3dadd( -64.5127, -0.131657, -67.4494, 0.07 ) }
    dend_57 { pt3dadd( -65.1527, -0.679047, -68.3814, 0.07 ) }
    dend_57 { pt3dadd( -65.4583, -0.94658, -68.7585, 0.07 ) }
    dend_57 { pt3dadd( -65.7401, -1.20428, -69.0649, 0.29 ) }
    dend_57 { pt3dadd( -66.423, -1.82258, -69.7295, 0.07 ) }
    dend_57 { pt3dadd( -67.3531, -2.60954, -70.7124, 0.07 ) }
    dend_57 { pt3dadd( -68.0508, -3.12184, -71.3878, 0.88 ) }
    dend_57 { pt3dadd( -69.021, -3.76784, -72.3436, 0.07 ) }
    dend_57 { pt3dadd( -70.205, -4.50507, -73.5267, 1.09 ) }
    dend_57 { pt3dadd( -71.7753, -5.43846, -75.1301, 0.22 ) }
    dend_57 { pt3dadd( -73.8125, -6.62169, -77.2463, 0.22 ) }
    dend_57 { pt3dadd( -74.9507, -7.29054, -78.43, 1.17 ) }
    dend_57 { pt3dadd( -76.1759, -8.02297, -79.7077, 0.22 ) }
    dend_57 { pt3dadd( -76.8339, -8.42695, -80.3583, 0.22 ) }
    dend_57 { pt3dadd( -77.6673, -8.97012, -81.0889, 0.22 ) }
    dend_57 { pt3dadd( -78.4928, -9.56471, -81.7287, 0.36 ) }
    dend_57 { pt3dadd( -79.1432, -10.0535, -82.1167, 0.07 ) }
    dend_57 { pt3dadd( -79.8347, -10.5584, -82.5181, 0.66 ) }
    dend_57 { pt3dadd( -80.6354, -11.0806, -82.9515, 0.66 ) }
    dend_57 { pt3dadd( -82.3578, -12.0963, -83.9475, 0.07 ) }
    dend_57 { pt3dadd( -83.4153, -12.6897, -84.546, 0.07 ) }
    dend_57 { pt3dadd( -85.116, -13.5815, -85.5289, 0.66 ) }
    dend_57 { pt3dadd( -86.4866, -14.2477, -86.3716, 0.07 ) }
    dend_57 { pt3dadd( -87.4097, -14.6568, -86.976, 0.07 ) }
    dend_57 { pt3dadd( -88.9133, -15.2553, -88.0275, 1.61 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 83/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -36.9577, 4.33495, -9.66888, 0.44 ) }
    dend_56 { pt3dadd( -37.3822, 4.64319, -9.13371, 0.44 ) }
    dend_56 { pt3dadd( -37.8026, 4.75834, -8.72685, 0.44 ) }
    dend_56 { pt3dadd( -37.9327, 4.58557, -8.76411, 0.44 ) }
    dend_56 { pt3dadd( -38.1269, 4.27287, -8.87302, 0.44 ) }
    dend_56 { pt3dadd( -38.2406, 4.09081, -8.95488, 0.44 ) }
    dend_56 { pt3dadd( -38.5049, 3.70299, -9.16062, 0.58 ) }
    dend_56 { pt3dadd( -38.7965, 3.31929, -9.38404, 0.36 ) }
    dend_56 { pt3dadd( -39.4334, 2.57866, -9.85299, 0.51 ) }
    dend_56 { pt3dadd( -39.8421, 2.15169, -10.1019, 0.29 ) }
    dend_56 { pt3dadd( -40.2092, 1.81862, -10.2821, 0.29 ) }
    dend_56 { pt3dadd( -40.5889, 1.51655, -10.4166, 0.44 ) }
    dend_56 { pt3dadd( -41.3435, 1.00163, -10.58, 0.73 ) }
    dend_56 { pt3dadd( -41.9636, 0.645267, -10.6348, 0.88 ) }
    dend_56 { pt3dadd( -42.9072, 0.197042, -10.6012, 0.58 ) }
    dend_56 { pt3dadd( -43.766, -0.140097, -10.498, 0.51 ) }
    dend_56 { pt3dadd( -44.4213, -0.337783, -10.373, 0.51 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_56 { pt3dadd( -45.0435, -0.433428, -10.2209, 0.36 ) }
    dend_56 { pt3dadd( -45.4801, -0.423444, -10.1033, 0.36 ) }
    dend_56 { pt3dadd( -46.0037, -0.333947, -9.95839, 0.95 ) }
    dend_56 { pt3dadd( -46.5149, -0.187699, -9.82556, 1.17 ) }
    dend_56 { pt3dadd( -47.2636, 0.0599033, -9.64513, 1.31 ) }
    dend_56 { pt3dadd( -48.4359, 0.443232, -9.43591, 0.51 ) }
    dend_56 { pt3dadd( -49.1884, 0.646802, -9.38048, 0.29 ) }
    dend_56 { pt3dadd( -49.6579, 0.70799, -9.40465, 0.22 ) }
    dend_56 { pt3dadd( -50.0103, 0.665861, -9.48145, 0.22 ) }
    dend_56 { pt3dadd( -50.4774, 0.456636, -9.6889, 0.22 ) }
    dend_56 { pt3dadd( -51.0182, 0.0992873, -10.0452, 0.29 ) }
    dend_56 { pt3dadd( -51.7234, -0.414912, -10.5687, 1.09 ) }
    dend_56 { pt3dadd( -52.2844, -0.822341, -10.925, 0.8 ) }
    dend_56 { pt3dadd( -52.8585, -1.20196, -11.2163, 0.22 ) }
    dend_56 { pt3dadd( -53.6389, -1.65158, -11.5132, 0.51 ) }
    dend_56 { pt3dadd( -54.5725, -2.08854, -11.7464, 0.22 ) }
    dend_56 { pt3dadd( -55.5305, -2.44204, -11.8677, 0.51 ) }
    dend_56 { pt3dadd( -56.88, -2.79362, -11.957, 0.29 ) }
    dend_56 { pt3dadd( -57.7112, -2.9329, -12.0286, 0.29 ) }
    dend_56 { pt3dadd( -58.1272, -2.98191, -12.0785, 0.95 ) }
    dend_56 { pt3dadd( -58.784, -3.05016, -12.19, 1.53 ) }
    dend_56 { pt3dadd( -59.3796, -3.12318, -12.3525, 1.53 ) }
    dend_56 { pt3dadd( -60.6245, -3.34097, -12.9235, 0.44 ) }
    dend_56 { pt3dadd( -61.4254, -3.53775, -13.4658, 0.36 ) }
    dend_56 { pt3dadd( -61.8797, -3.69883, -13.8394, 0.36 ) }
    dend_56 { pt3dadd( -62.3555, -3.90541, -14.2762, 0.36 ) }
    dend_56 { pt3dadd( -62.8446, -4.15485, -14.7697, 0.36 ) }
    dend_56 { pt3dadd( -63.4136, -4.47543, -15.3747, 0.36 ) }
    dend_56 { pt3dadd( -63.814, -4.73598, -15.7957, 0.22 ) }
    dend_56 { pt3dadd( -64.1226, -4.90177, -16.056, 0.22 ) }
    dend_56 { pt3dadd( -64.6207, -5.02174, -16.3321, 0.66 ) }
    dend_56 { pt3dadd( -64.9868, -5.01505, -16.4357, 0.66 ) }
    dend_56 { pt3dadd( -65.5275, -4.94777, -16.537, 0.22 ) }
    dend_56 { pt3dadd( -65.9478, -4.9015, -16.6052, 0.22 ) }
    dend_56 { pt3dadd( -66.2393, -4.92697, -16.682, 0.22 ) }
    dend_56 { pt3dadd( -66.4896, -5.02501, -16.8215, 0.22 ) }
    dend_56 { pt3dadd( -66.7255, -5.17621, -16.9973, 0.22 ) }
    dend_56 { pt3dadd( -67.2019, -5.54957, -17.3698, 0.22 ) }
    dend_56 { pt3dadd( -67.546, -5.83249, -17.6338, 0.73 ) }
    dend_56 { pt3dadd( -68.0982, -6.21252, -18.0295, 1.24 ) }
    dend_56 { pt3dadd( -68.6343, -6.48038, -18.3545, 1.24 ) }
    dend_56 { pt3dadd( -69.0866, -6.61458, -18.5647, 1.24 ) }
    dend_56 { pt3dadd( -70.05, -6.76446, -18.9322, 0.29 ) }
    dend_56 { pt3dadd( -70.5399, -6.79512, -19.0916, 0.29 ) }
    dend_56 { pt3dadd( -71.59, -6.80248, -19.4337, 0.51 ) }
    dend_56 { pt3dadd( -72.4289, -6.7881, -19.6973, 0.29 ) }
    dend_56 { pt3dadd( -73.3386, -6.79869, -19.9965, 0.15 ) }
    dend_56 { pt3dadd( -73.7729, -6.82167, -20.1661, 0.15 ) }
    dend_56 { pt3dadd( -74.1586, -6.87289, -20.3486, 0.15 ) }
    dend_56 { pt3dadd( -74.7367, -6.99851, -20.6609, 0.88 ) }
    dend_56 { pt3dadd( -75.1007, -7.11459, -20.8693, 0.88 ) }
    dend_56 { pt3dadd( -75.7327, -7.24791, -21.2165, 0.15 ) }
    dend_56 { pt3dadd( -76.0798, -7.24529, -21.3557, 0.15 ) }
    dend_56 { pt3dadd( -76.4156, -7.19679, -21.4391, 0.15 ) }
    dend_56 { pt3dadd( -77.6286, -6.9749, -21.7273, 0.15 ) }
    dend_56 { pt3dadd( -78.1606, -6.88378, -21.8462, 0.15 ) }
    dend_56 { pt3dadd( -78.8825, -6.78518, -21.982, 0.15 ) }
    dend_56 { pt3dadd( -79.4097, -6.74173, -22.0709, 1.31 ) }
    dend_56 { pt3dadd( -80.1206, -6.77454, -22.1758, 1.31 ) }
    dend_56 { pt3dadd( -81.3477, -7.02724, -22.3337, 0.66 ) }
    dend_56 { pt3dadd( -82.2769, -7.38841, -22.3978, 0.22 ) }
    dend_56 { pt3dadd( -82.9871, -7.7351, -22.4099, 0.22 ) }
    dend_56 { pt3dadd( -83.4172, -7.98054, -22.3941, 0.22 ) }
    dend_56 { pt3dadd( -84.1785, -8.44797, -22.3479, 0.22 ) }
    dend_56 { pt3dadd( -84.7299, -8.78796, -22.3161, 0.73 ) }
    dend_56 { pt3dadd( -85.6173, -9.31653, -22.2748, 1.46 ) }
    dend_56 { pt3dadd( -85.8413, -9.43404, -22.2871, 1.46 ) }
    dend_56 { pt3dadd( -86.5836, -9.75788, -22.3912, 0.88 ) }
    dend_56 { pt3dadd( -87.4753, -10.0725, -22.5533, 0.29 ) }
    dend_56 { pt3dadd( -88.2365, -10.2824, -22.7288, 0.8 ) }
    dend_56 { pt3dadd( -89.1234, -10.5047, -22.9718, 0.51 ) }
    dend_56 { pt3dadd( -89.8788, -10.6873, -23.2164, 0.36 ) }
    dend_56 { pt3dadd( -90.1281, -10.756, -23.3082, 0.36 ) }
    dend_56 { pt3dadd( -90.3635, -10.8291, -23.4053, 0.36 ) }
    dend_56 { pt3dadd( -90.9113, -11.0249, -23.642, 0.44 ) }
    dend_56 { pt3dadd( -91.7227, -11.3414, -23.9944, 0.66 ) }
    dend_56 { pt3dadd( -92.0797, -11.4864, -24.1519, 0.66 ) }
    dend_56 { pt3dadd( -93.1074, -11.9004, -24.555, 0.44 ) }
    dend_56 { pt3dadd( -93.5267, -12.0669, -24.7116, 0.58 ) }
    dend_56 { pt3dadd( -93.9538, -12.23, -24.8666, 0.8 ) }
    dend_56 { pt3dadd( -94.7088, -12.4874, -25.1222, 1.68 ) }
    dend_56 { pt3dadd( -95.2039, -12.6329, -25.2687, 1.68 ) }
    dend_56 { pt3dadd( -96.4188, -12.9445, -25.5694, 0.22 ) }
    dend_56 { pt3dadd( -96.9982, -13.0765, -25.6801, 0.22 ) }
    dend_56 { pt3dadd( -97.6094, -13.2168, -25.7925, 0.22 ) }
    dend_56 { pt3dadd( -98.1959, -13.3572, -25.8971, 0.22 ) }
    dend_56 { pt3dadd( -98.8514, -13.5318, -26.01, 0.51 ) }
    dend_56 { pt3dadd( -99.5853, -13.7407, -26.1392, 1.68 ) }
    dend_56 { pt3dadd( -100.174, -13.9297, -26.265, 1.68 ) }
    dend_56 { pt3dadd( -101.775, -14.4907, -26.6805, 0.15 ) }
    dend_56 { pt3dadd( -102.441, -14.7597, -26.8906, 0.15 ) }
    dend_56 { pt3dadd( -103.11, -15.0839, -27.1482, 0.58 ) }
    dend_56 { pt3dadd( -103.375, -15.2336, -27.2674, 0.58 ) }
    dend_56 { pt3dadd( -104.279, -15.8087, -27.7399, 0.15 ) }
    dend_56 { pt3dadd( -104.907, -16.2392, -28.1153, 0.58 ) }
    dend_56 { pt3dadd( -105.451, -16.6513, -28.4943, 0.22 ) }
    dend_56 { pt3dadd( -105.952, -17.0522, -28.8691, 0.36 ) }
    dend_56 { pt3dadd( -106.272, -17.318, -29.1164, 0.07 ) }
    dend_56 { pt3dadd( -106.763, -17.764, -29.4927, 0.51 ) }
    dend_56 { pt3dadd( -107.167, -18.1501, -29.7919, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_56 { pt3dadd( -107.492, -18.4738, -30.0495, 0.07 ) }
    dend_56 { pt3dadd( -107.928, -18.9086, -30.4145, 1.09 ) }
    dend_56 { pt3dadd( -108.021, -19.0084, -30.5031, 1.09 ) }
    dend_56 { pt3dadd( -108.471, -19.5401, -30.9725, 0.51 ) }
    dend_56 { pt3dadd( -109.039, -20.229, -31.5689, 0.07 ) }
    dend_56 { pt3dadd( -109.532, -20.7983, -32.0777, 0.88 ) }
    dend_56 { pt3dadd( -109.638, -20.9045, -32.1829, 0.88 ) }
    dend_56 { pt3dadd( -110.274, -21.4387, -32.7739, 0.07 ) }
    dend_56 { pt3dadd( -110.591, -21.6607, -33.0397, 0.15 ) }
    dend_56 { pt3dadd( -111.112, -21.9097, -33.4256, 0.15 ) }
    dend_56 { pt3dadd( -111.558, -22.0504, -33.7123, 0.15 ) }
    dend_56 { pt3dadd( -112.139, -22.1618, -34.0568, 0.15 ) }
    dend_56 { pt3dadd( -112.811, -22.2666, -34.4424, 1.53 ) }
    dend_56 { pt3dadd( -113.218, -22.3101, -34.6609, 1.53 ) }
    dend_56 { pt3dadd( -114.362, -22.4621, -35.2399, 0.07 ) }
    dend_56 { pt3dadd( -114.722, -22.5209, -35.422, 0.07 ) }
    dend_56 { pt3dadd( -115.204, -22.6036, -35.651, 0.07 ) }
    dend_56 { pt3dadd( -115.985, -22.7427, -35.9905, 0.95 ) }
    dend_56 { pt3dadd( -116.229, -22.7842, -36.0859, 0.95 ) }
    dend_56 { pt3dadd( -117.448, -23.0288, -36.518, 0.22 ) }
    dend_56 { pt3dadd( -117.935, -23.1594, -36.6662, 0.22 ) }
    dend_56 { pt3dadd( -118.43, -23.3121, -36.8091, 0.51 ) }
    dend_56 { pt3dadd( -119.004, -23.4917, -36.9585, 0.51 ) }
    dend_56 { pt3dadd( -119.539, -23.6447, -37.0926, 0.22 ) }
    dend_56 { pt3dadd( -119.738, -23.7113, -37.1545, 0.22 ) }
    dend_56 { pt3dadd( -120.063, -23.8448, -37.2704, 0.22 ) }
    dend_56 { pt3dadd( -120.546, -24.0881, -37.4377, 0.22 ) }
    dend_56 { pt3dadd( -120.722, -24.2035, -37.5216, 0.22 ) }
    dend_56 { pt3dadd( -121.102, -24.4646, -37.7484, 0.22 ) }
    dend_56 { pt3dadd( -121.6, -24.7941, -38.0639, 0.22 ) }
    dend_56 { pt3dadd( -122.13, -25.117, -38.3886, 0.58 ) }
    dend_56 { pt3dadd( -122.507, -25.2998, -38.5771, 0.58 ) }
    dend_56 { pt3dadd( -123.558, -25.7344, -39.0362, 0.29 ) }
    dend_56 { pt3dadd( -124.236, -25.9969, -39.3198, 0.88 ) }
    dend_56 { pt3dadd( -124.418, -26.067, -39.3958, 1.17 ) }
    dend_56 { pt3dadd( -124.881, -26.2463, -39.5804, 1.75 ) }
    dend_56 { pt3dadd( -126.419, -26.8232, -40.1931, 0.22 ) }
    dend_56 { pt3dadd( -126.879, -26.9935, -40.3888, 0.15 ) }
    dend_56 { pt3dadd( -127.334, -27.1604, -40.5834, 0.15 ) }
    dend_56 { pt3dadd( -128.226, -27.5097, -40.9966, 0.66 ) }
    dend_56 { pt3dadd( -128.535, -27.6372, -41.156, 1.17 ) }
    dend_56 { pt3dadd( -128.992, -27.8309, -41.4056, 1.17 ) }
    dend_56 { pt3dadd( -129.916, -28.2583, -41.941, 0.15 ) }
    dend_56 { pt3dadd( -130.298, -28.4254, -42.1476, 0.15 ) }
    dend_56 { pt3dadd( -130.846, -28.6542, -42.4124, 0.15 ) }
    dend_56 { pt3dadd( -131.195, -28.7896, -42.5756, 0.15 ) }
    dend_56 { pt3dadd( -132.085, -29.1308, -42.9878, 0.66 ) }
    dend_56 { pt3dadd( -132.46, -29.2809, -43.1518, 0.15 ) }
    dend_56 { pt3dadd( -133.154, -29.5808, -43.3843, 0.58 ) }
    dend_56 { pt3dadd( -133.734, -29.8468, -43.5559, 0.15 ) }
    dend_56 { pt3dadd( -134.104, -30.0303, -43.6462, 0.15 ) }
    dend_56 { pt3dadd( -134.428, -30.1959, -43.7033, 0.15 ) }
    dend_56 { pt3dadd( -135.126, -30.5453, -43.7804, 0.15 ) }
    dend_56 { pt3dadd( -136.066, -30.9909, -43.8272, 1.46 ) }
    dend_56 { pt3dadd( -136.491, -31.1864, -43.8242, 1.46 ) }
    dend_56 { pt3dadd( -137.453, -31.6275, -43.8087, 0.51 ) }
    dend_56 { pt3dadd( -138.216, -31.9949, -43.7991, 0.22 ) }
    dend_56 { pt3dadd( -138.519, -32.149, -43.8041, 0.22 ) }
    dend_56 { pt3dadd( -138.766, -32.2832, -43.8171, 0.22 ) }
    dend_56 { pt3dadd( -139.241, -32.5514, -43.8677, 0.22 ) }
    dend_56 { pt3dadd( -140.525, -33.3189, -44.0409, 0.22 ) }
    dend_56 { pt3dadd( -141.117, -33.6802, -44.1125, 0.22 ) }
    dend_56 { pt3dadd( -141.653, -34.0055, -44.1741, 0.8 ) }
    dend_56 { pt3dadd( -141.951, -34.1801, -44.1999, 0.8 ) }
    dend_56 { pt3dadd( -143.314, -34.9292, -44.2772, 0.15 ) }
    dend_56 { pt3dadd( -143.803, -35.1775, -44.2893, 0.36 ) }
    dend_56 { pt3dadd( -144.453, -35.4887, -44.2854, 0.15 ) }
    dend_56 { pt3dadd( -144.869, -35.6952, -44.2836, 0.15 ) }
    dend_56 { pt3dadd( -145.278, -35.9258, -44.2696, 0.15 ) }
    dend_56 { pt3dadd( -145.726, -36.2077, -44.2152, 0.15 ) }
    dend_56 { pt3dadd( -146.065, -36.4212, -44.156, 0.15 ) }
    dend_56 { pt3dadd( -146.586, -36.7384, -44.0358, 0.15 ) }
    dend_56 { pt3dadd( -147.203, -37.11, -43.8862, 0.15 ) }
    dend_56 { pt3dadd( -148.099, -37.6633, -43.6493, 0.15 ) }
    dend_56 { pt3dadd( -148.903, -38.1775, -43.4302, 1.61 ) }
    dend_56 { pt3dadd( -150.024, -38.9241, -43.0869, 0.15 ) }
    dend_56 { pt3dadd( -150.871, -39.547, -42.8405, 0.36 ) }
    dend_56 { pt3dadd( -151.122, -39.7462, -42.7737, 0.36 ) }
    dend_56 { pt3dadd( -151.782, -40.3083, -42.6292, 0.07 ) }
    dend_56 { pt3dadd( -152.215, -40.6994, -42.5774, 0.07 ) }
    dend_56 { pt3dadd( -152.91, -41.362, -42.5517, 0.8 ) }
    dend_56 { pt3dadd( -153.976, -42.4547, -42.5305, 0.07 ) }
    dend_56 { pt3dadd( -154.194, -42.6729, -42.5354, 0.88 ) }
    dend_56 { pt3dadd( -154.468, -42.9276, -42.5382, 0.88 ) }
    dend_56 { pt3dadd( -155.299, -43.5919, -42.5397, 0.07 ) }
    dend_56 { pt3dadd( -155.684, -43.8383, -42.5437, 0.07 ) }
    dend_56 { pt3dadd( -156.183, -44.0899, -42.5625, 0.07 ) }
    dend_56 { pt3dadd( -156.624, -44.2623, -42.5667, 0.07 ) }
    dend_56 { pt3dadd( -157.068, -44.4151, -42.5732, 0.07 ) }
    dend_56 { pt3dadd( -157.71, -44.6273, -42.5849, 0.58 ) }
    dend_56 { pt3dadd( -158.413, -44.8401, -42.6067, 0.22 ) }
    dend_56 { pt3dadd( -158.622, -44.896, -42.6167, 0.22 ) }
    dend_56 { pt3dadd( -159.072, -44.9821, -42.6502, 0.51 ) }
    dend_56 { pt3dadd( -159.885, -45.0995, -42.7006, 0.07 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 94/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -20.206, 0.95425, -16.1556, 0.58 ) }
    dend_54 { pt3dadd( -19.8861, 0.450513, -17.607, 0.58 ) }
    dend_54 { pt3dadd( -19.4306, -0.148202, -20.1568, 0.58 ) }
    dend_54 { pt3dadd( -19.0823, -0.479225, -22.2426, 0.58 ) }
    dend_54 { pt3dadd( -18.7375, -0.649292, -23.9563, 0.73 ) }
    dend_54 { pt3dadd( -18.2614, -0.794246, -25.9271, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_54 { pt3dadd( -17.5736, -1.06313, -28.5738, 0.58 ) }
    dend_54 { pt3dadd( -16.7522, -1.42028, -31.3027, 0.66 ) }
    dend_54 { pt3dadd( -16.3185, -1.69057, -32.6934, 0.66 ) }
    dend_54 { pt3dadd( -15.7857, -2.31117, -34.8365, 0.66 ) }
    dend_54 { pt3dadd( -15.4635, -3.00167, -36.503, 0.51 ) }
    dend_54 { pt3dadd( -15.0917, -4.20427, -38.7264, 0.73 ) }
    dend_54 { pt3dadd( -14.6776, -5.70233, -41.0807, 0.44 ) }
    dend_54 { pt3dadd( -14.2981, -7.09721, -43.0161, 0.44 ) }
    dend_54 { pt3dadd( -13.7476, -9.24418, -45.7268, 0.44 ) }
    dend_54 { pt3dadd( -13.315, -10.9963, -47.8085, 0.44 ) }
    dend_54 { pt3dadd( -12.745, -13.3067, -50.5742, 0.44 ) }
    dend_54 { pt3dadd( -12.514, -14.0961, -51.5629, 0.66 ) }
    dend_54 { pt3dadd( -11.9276, -15.7541, -53.7032, 0.44 ) }
    dend_54 { pt3dadd( -11.1182, -17.5742, -55.9275, 0.29 ) }
    dend_54 { pt3dadd( -10.2277, -19.2623, -57.7231, 0.29 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 15/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -20.206, 0.95425, -16.1556, 2.63 ) }
    dend_53 { pt3dadd( -20.9802, 1.23678, -16.4605, 2.63 ) }
    dend_53 { pt3dadd( -24.2538, 2.61016, -18.057, 0.44 ) }
    dend_53 { pt3dadd( -25.2488, 3.08699, -18.5928, 0.88 ) }
    dend_53 { pt3dadd( -26.731, 3.93854, -19.4127, 0.73 ) }
    dend_53 { pt3dadd( -27.7454, 4.57937, -20.01, 0.51 ) }
    dend_53 { pt3dadd( -29.1092, 5.46808, -20.8583, 0.51 ) }
    dend_53 { pt3dadd( -30.3034, 6.30675, -21.6731, 1.02 ) }
    dend_53 { pt3dadd( -31.2819, 7.017, -22.3727, 1.02 ) }
    dend_53 { pt3dadd( -32.9498, 8.00053, -23.4595, 0.29 ) }
    dend_53 { pt3dadd( -33.755, 8.34954, -23.9162, 0.29 ) }
    dend_53 { pt3dadd( -35.2996, 8.81363, -24.6645, 0.29 ) }
    dend_53 { pt3dadd( -36.5926, 9.01812, -25.1754, 0.88 ) }
    dend_53 { pt3dadd( -38.2593, 9.03322, -25.664, 0.36 ) }
    dend_53 { pt3dadd( -39.8029, 8.85847, -26.0565, 0.22 ) }
    dend_53 { pt3dadd( -40.3337, 8.75198, -26.2018, 0.22 ) }
    dend_53 { pt3dadd( -40.9584, 8.63562, -26.3877, 0.22 ) }
    dend_53 { pt3dadd( -41.7759, 8.50443, -26.6667, 0.22 ) }
    dend_53 { pt3dadd( -43.0814, 8.37228, -27.2315, 2.12 ) }
    dend_53 { pt3dadd( -44.2306, 8.37934, -27.9215, 2.48 ) }
    dend_53 { pt3dadd( -45.9162, 8.57627, -29.1612, 1.46 ) }
    dend_53 { pt3dadd( -47.4313, 8.81073, -30.4114, 0.29 ) }
    dend_53 { pt3dadd( -48.0007, 8.90532, -30.9144, 0.29 ) }
    dend_53 { pt3dadd( -48.4645, 8.95542, -31.3361, 0.29 ) }
    dend_53 { pt3dadd( -49.8766, 8.99472, -32.5843, 0.29 ) }
    dend_53 { pt3dadd( -50.5364, 8.98078, -33.0543, 0.29 ) }
    dend_53 { pt3dadd( -51.525, 8.9121, -33.5738, 0.8 ) }
    dend_53 { pt3dadd( -52.2406, 8.84338, -33.9123, 0.8 ) }
    dend_53 { pt3dadd( -53.6435, 8.79369, -34.573, 0.22 ) }
    dend_53 { pt3dadd( -54.2522, 8.81397, -34.8437, 0.22 ) }
    dend_53 { pt3dadd( -54.8253, 8.87202, -35.0864, 0.22 ) }
    dend_53 { pt3dadd( -55.7063, 8.98382, -35.5704, 0.22 ) }
    dend_53 { pt3dadd( -56.5939, 9.11087, -36.1698, 0.22 ) }
    dend_53 { pt3dadd( -57.6908, 9.25923, -37.0047, 0.22 ) }
    dend_53 { pt3dadd( -58.6663, 9.38357, -37.7619, 1.61 ) }
    dend_53 { pt3dadd( -59.8598, 9.49315, -38.6415, 1.61 ) }
    dend_53 { pt3dadd( -62.0302, 9.61747, -40.0918, 0.36 ) }
    dend_53 { pt3dadd( -63.2801, 9.66903, -40.8824, 0.15 ) }
    dend_53 { pt3dadd( -64.9817, 9.75594, -41.881, 0.15 ) }
    dend_53 { pt3dadd( -65.7422, 9.82614, -42.297, 1.24 ) }
    dend_53 { pt3dadd( -66.7258, 9.96854, -42.8448, 1.24 ) }
    dend_53 { pt3dadd( -68.3253, 10.3499, -43.7906, 0.07 ) }
    dend_53 { pt3dadd( -69.2757, 10.6704, -44.3672, 0.58 ) }
    dend_53 { pt3dadd( -70.0503, 11.0231, -44.892, 0.8 ) }
    dend_53 { pt3dadd( -71.6627, 11.9538, -46.1376, 0.44 ) }
    dend_53 { pt3dadd( -72.7371, 12.6825, -47.1994, 0.73 ) }
    dend_53 { pt3dadd( -73.7452, 13.4854, -48.4212, 1.75 ) }
    dend_53 { pt3dadd( -73.9677, 13.6909, -48.7315, 1.75 ) }
    dend_53 { pt3dadd( -75.168, 14.9409, -50.6725, 0.22 ) }
    dend_53 { pt3dadd( -75.8722, 15.8234, -52.0945, 1.75 ) }
    dend_53 { pt3dadd( -76.9364, 17.473, -54.7334, 0.29 ) }
    dend_53 { pt3dadd( -77.3559, 18.1924, -55.8504, 0.95 ) }
    dend_53 { pt3dadd( -77.5285, 18.5171, -56.3761, 0.95 ) }
    dend_53 { pt3dadd( -77.9622, 19.4096, -57.8392, 0.44 ) }
    dend_53 { pt3dadd( -78.3521, 20.234, -59.2917, 0.73 ) }
    dend_53 { pt3dadd( -78.5049, 20.5636, -59.8933, 0.73 ) }
    dend_53 { pt3dadd( -78.9691, 21.344, -61.6378, 0.36 ) }
    dend_53 { pt3dadd( -79.2592, 21.7351, -62.8383, 0.36 ) }
    dend_53 { pt3dadd( -79.5989, 22.1379, -64.4632, 1.75 ) }
    dend_53 { pt3dadd( -80.247, 22.8599, -68.5998, 0.15 ) }
    dend_53 { pt3dadd( -80.3863, 23.0142, -70.1373, 1.53 ) }
    dend_53 { pt3dadd( -80.546, 23.2419, -74.202, 0.15 ) }
    dend_53 { pt3dadd( -80.5537, 23.3007, -76.857, 0.07 ) }
    dend_53 { pt3dadd( -80.5441, 23.3068, -78.1911, 0.29 ) }
    dend_53 { pt3dadd( -80.5409, 23.2812, -81.5218, 0.29 ) }
    dend_53 { pt3dadd( -80.5725, 23.2603, -83.7226, 0.07 ) }
    dend_53 { pt3dadd( -80.7533, 23.4456, -86.55, 0.07 ) }
    dend_53 { pt3dadd( -80.9331, 23.6877, -87.773, 0.07 ) }
    dend_53 { pt3dadd( -81.2911, 24.102, -89.1018, 0.36 ) }
    dend_53 { pt3dadd( -82.1092, 25.031, -91.3702, 0.07 ) }
    dend_53 { pt3dadd( -82.6955, 25.7409, -92.7666, 0.58 ) }
    dend_53 { pt3dadd( -83.7443, 27.1904, -95.2248, 0.07 ) }
    dend_53 { pt3dadd( -84.1454, 27.8539, -96.2931, 0.29 ) }
    dend_53 { pt3dadd( -84.7106, 28.9167, -98.0537, 0.07 ) }
    dend_53 { pt3dadd( -85.3737, 30.2968, -100.328, 0.73 ) }
    dend_53 { pt3dadd( -85.7188, 31.0235, -101.462, 0.36 ) }
    dend_53 { pt3dadd( -85.9392, 31.45, -102.099, 0.58 ) }
    dend_53 { pt3dadd( -86.5391, 32.4049, -103.637, 0.15 ) }
    dend_53 { pt3dadd( -87.4586, 33.6024, -105.735, 0.73 ) }
    dend_53 { pt3dadd( -88.1955, 34.4321, -107.115, 0.07 ) }
    dend_53 { pt3dadd( -88.649, 34.8721, -107.809, 0.07 ) }
    dend_53 { pt3dadd( -90.523, 36.565, -110.42, 0.36 ) }
    dend_53 { pt3dadd( -92.1613, 37.9731, -112.499, 0.07 ) }
    dend_53 { pt3dadd( -94.2006, 39.6469, -114.861, 0.58 ) }
    dend_53 { pt3dadd( -95.5672, 40.7249, -116.36, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_53 { pt3dadd( -96.552, 41.4551, -117.398, 0.66 ) }
    dend_53 { pt3dadd( -98.0713, 42.4971, -118.926, 0.22 ) }
    dend_53 { pt3dadd( -99.2477, 43.2511, -120.015, 0.44 ) }
    dend_53 { pt3dadd( -100.496, 44.0368, -121.095, 0.15 ) }
    dend_53 { pt3dadd( -101.328, 44.5339, -121.783, 0.66 ) }
    dend_53 { pt3dadd( -101.817, 44.806, -122.212, 0.66 ) }
    dend_53 { pt3dadd( -103.978, 45.9621, -124.255, 0.07 ) }
    dend_53 { pt3dadd( -105.277, 46.6364, -125.546, 0.36 ) }
    dend_53 { pt3dadd( -106.222, 47.1364, -126.569, 0.66 ) }
    dend_53 { pt3dadd( -107.741, 47.9714, -128.222, 0.07 ) }
    dend_53 { pt3dadd( -109.218, 48.8374, -129.818, 1.24 ) }
    dend_53 { pt3dadd( -111.303, 50.1356, -132.058, 0.36 ) }
    dend_53 { pt3dadd( -112.159, 50.6914, -132.975, 0.36 ) }
    dend_53 { pt3dadd( -113.159, 51.3365, -134.038, 0.95 ) }
    dend_53 { pt3dadd( -113.971, 51.875, -134.883, 0.95 ) }
    dend_53 { pt3dadd( -115.518, 52.8978, -136.305, 0.07 ) }
    dend_53 { pt3dadd( -116.053, 53.2421, -136.703, 0.36 ) }
    dend_53 { pt3dadd( -117.898, 54.4445, -137.806, 0.07 ) }
    dend_53 { pt3dadd( -118.435, 54.7864, -138.13, 0.07 ) }
    dend_53 { pt3dadd( -119.47, 55.4446, -138.775, 0.88 ) }
    dend_53 { pt3dadd( -120.507, 56.039, -139.443, 0.88 ) }
    dend_53 { pt3dadd( -122.333, 56.8875, -140.632, 0.07 ) }
    dend_53 { pt3dadd( -123.212, 57.1866, -141.277, 1.24 ) }
    dend_53 { pt3dadd( -125.834, 57.8099, -143.228, 0.07 ) }
    dend_53 { pt3dadd( -126.776, 57.9603, -143.923, 0.66 ) }
    dend_53 { pt3dadd( -128.513, 58.139, -145.164, 0.07 ) }
    dend_53 { pt3dadd( -130.493, 58.25, -146.494, 1.31 ) }
    dend_53 { pt3dadd( -134.05, 58.3413, -148.607, 0.22 ) }
    dend_53 { pt3dadd( -135.439, 58.3481, -149.349, 0.51 ) }
    dend_53 { pt3dadd( -137.371, 58.3006, -150.246, 0.15 ) }
    dend_53 { pt3dadd( -138.624, 58.2507, -150.782, 1.09 ) }
    dend_53 { pt3dadd( -139.608, 58.235, -151.144, 1.68 ) }
    dend_53 { pt3dadd( -142.51, 58.3067, -151.989, 0.15 ) }
    dend_53 { pt3dadd( -144.006, 58.4128, -152.307, 0.15 ) }
    dend_53 { pt3dadd( -145.431, 58.5829, -152.637, 0.44 ) }
    dend_53 { pt3dadd( -146.408, 58.7611, -152.878, 0.22 ) }
    dend_53 { pt3dadd( -147.267, 58.9784, -153.093, 0.22 ) }
    dend_53 { pt3dadd( -148.421, 59.384, -153.361, 0.51 ) }
    dend_53 { pt3dadd( -149.288, 59.756, -153.512, 0.51 ) }
    dend_53 { pt3dadd( -151.017, 60.5613, -153.792, 0.15 ) }
    dend_53 { pt3dadd( -151.76, 60.9136, -153.908, 0.15 ) }
    dend_53 { pt3dadd( -153.112, 61.5255, -154.18, 0.73 ) }
    dend_53 { pt3dadd( -153.864, 61.8146, -154.345, 0.73 ) }
    dend_53 { pt3dadd( -155.317, 62.2842, -154.669, 0.07 ) }
    dend_53 { pt3dadd( -156.227, 62.5727, -154.835, 1.24 ) }
    dend_53 { pt3dadd( -157.316, 62.9647, -154.983, 1.24 ) }
    dend_53 { pt3dadd( -159.252, 63.8131, -155.146, 0.15 ) }
    dend_53 { pt3dadd( -160.394, 64.4837, -155.175, 0.15 ) }
    dend_53 { pt3dadd( -160.935, 64.8732, -155.167, 0.15 ) }
    dend_53 { pt3dadd( -162.154, 65.9425, -155.092, 0.15 ) }
    dend_53 { pt3dadd( -162.921, 66.6936, -155.0, 0.88 ) }
    dend_53 { pt3dadd( -163.356, 67.151, -154.95, 0.88 ) }
    dend_53 { pt3dadd( -164.556, 68.4254, -154.895, 0.22 ) }
    dend_53 { pt3dadd( -165.135, 69.009, -154.948, 0.51 ) }
    dend_53 { pt3dadd( -165.853, 69.6096, -155.17, 0.51 ) }
    dend_53 { pt3dadd( -166.304, 69.9187, -155.38, 0.51 ) }
    dend_53 { pt3dadd( -167.429, 70.5672, -155.958, 0.15 ) }
    dend_53 { pt3dadd( -168.699, 71.1987, -156.627, 0.73 ) }
    dend_53 { pt3dadd( -169.503, 71.5354, -157.05, 1.09 ) }
    dend_53 { pt3dadd( -171.596, 72.3409, -158.08, 0.22 ) }
    dend_53 { pt3dadd( -173.177, 72.8993, -158.787, 1.31 ) }
    dend_53 { pt3dadd( -173.645, 73.0508, -158.986, 1.17 ) }
    dend_53 { pt3dadd( -174.5, 73.2983, -159.325, 1.17 ) }
    dend_53 { pt3dadd( -176.821, 73.8812, -160.171, 0.22 ) }
    dend_53 { pt3dadd( -178.124, 74.1641, -160.628, 1.24 ) }
    dend_53 { pt3dadd( -179.266, 74.379, -160.983, 1.24 ) }
    dend_53 { pt3dadd( -181.185, 74.6989, -161.603, 0.07 ) }
    dend_53 { pt3dadd( -181.959, 74.8469, -161.895, 0.07 ) }
    dend_53 { pt3dadd( -182.306, 74.918, -162.041, 0.07 ) }
    dend_53 { pt3dadd( -182.669, 75.0006, -162.199, 0.07 ) }
    dend_53 { pt3dadd( -183.256, 75.189, -162.414, 0.07 ) }
    dend_53 { pt3dadd( -183.98, 75.4921, -162.615, 0.07 ) }
    dend_53 { pt3dadd( -185.493, 76.1755, -162.916, 0.36 ) }
    dend_53 { pt3dadd( -186.355, 76.5588, -163.076, 0.95 ) }
    dend_53 { pt3dadd( -187.489, 77.0387, -163.299, 1.24 ) }
    dend_53 { pt3dadd( -190.224, 78.0999, -163.826, 0.07 ) }
    dend_53 { pt3dadd( -192.063, 78.7482, -164.195, 0.29 ) }
    dend_53 { pt3dadd( -193.643, 79.2225, -164.506, 0.07 ) }
    dend_53 { pt3dadd( -194.366, 79.4028, -164.603, 0.95 ) }
    dend_53 { pt3dadd( -196.694, 79.8614, -164.912, 0.22 ) }
    dend_53 { pt3dadd( -197.722, 79.9706, -165.087, 0.22 ) }
    dend_53 { pt3dadd( -198.554, 79.9902, -165.26, 0.22 ) }
    dend_53 { pt3dadd( -200.401, 79.8886, -165.694, 0.51 ) }
    dend_53 { pt3dadd( -203.053, 79.5553, -166.336, 0.29 ) }
    dend_53 { pt3dadd( -204.979, 79.2284, -166.8, 1.39 ) }
    dend_53 { pt3dadd( -208.57, 78.4953, -167.764, 0.29 ) }
    dend_53 { pt3dadd( -209.237, 78.3572, -167.969, 0.29 ) }
    dend_53 { pt3dadd( -210.473, 78.0964, -168.447, 0.88 ) }
    dend_53 { pt3dadd( -211.767, 77.7611, -169.117, 0.29 ) }
    dend_53 { pt3dadd( -212.262, 77.5834, -169.459, 0.29 ) }
    dend_53 { pt3dadd( -213.458, 76.9324, -170.418, 0.66 ) }
    dend_53 { pt3dadd( -214.153, 76.4857, -171.044, 0.66 ) }
    dend_53 { pt3dadd( -215.428, 75.6328, -172.271, 0.36 ) }
    dend_53 { pt3dadd( -216.625, 74.7644, -173.557, 0.36 ) }
    dend_53 { pt3dadd( -217.552, 73.9599, -174.69, 0.95 ) }
    dend_53 { pt3dadd( -218.831, 72.5361, -176.343, 0.29 ) }
    // Section: dend_36, id: dend_36, parent: dend_24 (entry count 96/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -12.905, 7.26183, 2.00835, 0.58 ) }
    dend_36 { pt3dadd( -13.5955, 7.26443, 2.36156, 0.58 ) }
    dend_36 { pt3dadd( -14.6582, 7.26845, 2.90523, 0.58 ) }
    dend_36 { pt3dadd( -15.6648, 7.27225, 3.42016, 0.58 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_36 { pt3dadd( -16.839, 7.27669, 4.02088, 1.17 ) }
    dend_36 { pt3dadd( -17.5689, 7.27944, 4.39425, 1.02 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 2/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -12.905, 7.26183, 2.00835, 0.88 ) }
    dend_25 { pt3dadd( -13.5396, 7.78328, 1.08486, 0.88 ) }
    dend_25 { pt3dadd( -14.4972, 8.57022, -0.308807, 0.95 ) }
    dend_25 { pt3dadd( -15.2535, 9.1918, -1.40963, 1.61 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 6/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 0.96669, 21.8329, 31.9663, 0.07 ) }
    dend_23 { pt3dadd( 2.58452, 27.6365, 41.4318, 0.07 ) }
    dend_23 { pt3dadd( 6.15546, 32.1731, 51.0528, 0.07 ) }
    dend_23 { pt3dadd( 7.62868, 38.7603, 60.0157, 0.07 ) }
    dend_23 { pt3dadd( 9.93473, 46.5119, 67.7933, 0.07 ) }
    dend_23 { pt3dadd( 14.2338, 55.1958, 73.4504, 0.07 ) }
    dend_23 { pt3dadd( 16.9286, 64.7995, 78.5889, 0.07 ) }
    dend_23 { pt3dadd( 19.0603, 74.0779, 84.5272, 0.07 ) }
    dend_23 { pt3dadd( 20.7474, 82.2439, 92.0348, 0.07 ) }
    dend_23 { pt3dadd( 23.4099, 90.2053, 99.4795, 0.07 ) }
    dend_23 { pt3dadd( 25.6614, 98.0441, 107.185, 0.07 ) }
    dend_23 { pt3dadd( 28.594, 104.932, 115.542, 0.07 ) }
    dend_23 { pt3dadd( 32.6816, 112.005, 123.234, 0.07 ) }
    dend_23 { pt3dadd( 35.6944, 118.937, 131.526, 0.07 ) }
    dend_23 { pt3dadd( 38.6659, 125.396, 140.207, 0.07 ) }
    dend_23 { pt3dadd( 42.6732, 132.753, 147.671, 0.07 ) }
    dend_23 { pt3dadd( 45.4858, 140.217, 155.562, 0.07 ) }
    dend_23 { pt3dadd( 48.9307, 148.395, 162.428, 0.07 ) }
    dend_23 { pt3dadd( 52.3022, 155.488, 170.442, 0.07 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 25/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 0.96669, 21.8329, 31.9663, 0.07 ) }
    dend_22 { pt3dadd( 1.24493, 26.0603, 40.4245, 0.07 ) }
    dend_22 { pt3dadd( 1.61156, 28.3523, 49.5951, 0.07 ) }
    dend_22 { pt3dadd( 0.34098, 29.8363, 58.8511, 0.07 ) }
    dend_22 { pt3dadd( 0.746024, 32.1104, 68.0245, 0.07 ) }
    dend_22 { pt3dadd( 0.01615, 33.0239, 77.4118, 0.07 ) }
    dend_22 { pt3dadd( -0.926161, 33.0868, 86.8244, 0.07 ) }
    dend_22 { pt3dadd( -0.744456, 34.8085, 96.1245, 0.07 ) }
    dend_22 { pt3dadd( 1.17048, 38.14, 104.769, 0.07 ) }
    dend_22 { pt3dadd( 2.92257, 41.447, 113.457, 0.07 ) }
    dend_22 { pt3dadd( 4.90546, 44.619, 122.146, 0.07 ) }
    dend_22 { pt3dadd( 7.40181, 45.7592, 131.199, 0.07 ) }
    dend_22 { pt3dadd( 11.2561, 47.7325, 139.609, 0.07 ) }
    dend_22 { pt3dadd( 16.6704, 48.0721, 147.359, 0.07 ) }
    dend_22 { pt3dadd( 21.9911, 48.3336, 155.176, 0.07 ) }
    dend_22 { pt3dadd( 25.5211, 48.3741, 163.953, 0.07 ) }
    dend_22 { pt3dadd( 27.6327, 49.7637, 173.069, 0.07 ) }
    dend_22 { pt3dadd( 29.4975, 50.9904, 182.261, 0.07 ) }
    dend_22 { pt3dadd( 30.1612, 54.0658, 191.183, 0.07 ) }
    dend_22 { pt3dadd( 31.4507, 56.8578, 200.129, 0.07 ) }
    dend_22 { pt3dadd( 31.4871, 58.9995, 209.343, 0.07 ) }
    dend_22 { pt3dadd( 30.3941, 62.3122, 218.136, 0.07 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 47/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 3.31426, -11.4131, 2.65791, 2.77 ) }
    dend_12 { pt3dadd( 4.38215, -11.8278, 2.62743, 2.77 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 49/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 3.31426, -11.4131, 2.65791, 2.63 ) }
    dend_1 { pt3dadd( 3.2932, -12.9052, 2.40468, 2.63 ) }
    dend_1 { pt3dadd( 3.27071, -14.4981, 2.13435, 2.34 ) }
    dend_1 { pt3dadd( 3.23376, -17.1159, 1.69007, 2.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 53/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -22.3866, 33.2829, 0.0, 0.153188 ) }
    axon_1 { pt3dadd( -30.6871, 45.777, 0.0, 0.153188 ) }
    axon_1 { pt3dadd( -38.9877, 58.271, 0.0, 0.153188 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 56/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -88.9133, -15.2553, -88.0275, 0.07 ) }
    dend_59 { pt3dadd( -89.8799, -16.0116, -88.5198, 0.07 ) }
    dend_59 { pt3dadd( -90.7913, -16.6632, -89.0047, 0.51 ) }
    dend_59 { pt3dadd( -91.7474, -17.2929, -89.5349, 0.22 ) }
    dend_59 { pt3dadd( -92.7822, -17.9101, -90.1497, 0.07 ) }
    dend_59 { pt3dadd( -93.7279, -18.4403, -90.7513, 0.29 ) }
    dend_59 { pt3dadd( -94.2348, -18.7153, -91.0742, 0.07 ) }
    dend_59 { pt3dadd( -95.1453, -19.166, -91.6391, 1.02 ) }
    dend_59 { pt3dadd( -96.2352, -19.6786, -92.3449, 0.07 ) }
    dend_59 { pt3dadd( -97.1398, -20.1415, -92.9643, 0.51 ) }
    dend_59 { pt3dadd( -98.149, -20.7121, -93.7115, 0.15 ) }
    dend_59 { pt3dadd( -98.8044, -21.1478, -94.2065, 0.36 ) }
    dend_59 { pt3dadd( -99.5746, -21.7552, -94.8159, 0.07 ) }
    dend_59 { pt3dadd( -100.215, -22.3675, -95.3373, 0.51 ) }
    dend_59 { pt3dadd( -101.131, -23.4326, -96.1173, 0.07 ) }
    dend_59 { pt3dadd( -101.576, -24.0625, -96.5093, 0.73 ) }
    dend_59 { pt3dadd( -102.255, -25.2076, -97.1404, 0.07 ) }
    dend_59 { pt3dadd( -102.479, -25.6211, -97.3643, 0.22 ) }
    dend_59 { pt3dadd( -102.681, -25.9935, -97.5699, 0.07 ) }
    dend_59 { pt3dadd( -102.864, -26.3399, -97.7342, 0.36 ) }
    dend_59 { pt3dadd( -103.092, -26.7626, -97.9221, 0.07 ) }
    dend_59 { pt3dadd( -103.396, -27.2785, -98.1736, 0.44 ) }
    dend_59 { pt3dadd( -103.875, -27.9363, -98.5182, 0.15 ) }
    dend_59 { pt3dadd( -104.434, -28.4904, -98.8936, 0.88 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 80/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -88.9133, -15.2553, -88.0275, 0.07 ) }
    dend_58 { pt3dadd( -89.8116, -15.7348, -89.2342, 0.07 ) }
    dend_58 { pt3dadd( -90.5167, -16.1053, -90.3745, 0.51 ) }
    dend_58 { pt3dadd( -90.7741, -16.2552, -90.839, 0.15 ) }
    dend_58 { pt3dadd( -91.3626, -16.6208, -92.0103, 0.44 ) }
    dend_58 { pt3dadd( -91.8184, -16.879, -92.969, 0.07 ) }
    dend_58 { pt3dadd( -92.7083, -17.2932, -95.0036, 0.07 ) }
    dend_58 { pt3dadd( -92.9246, -17.3556, -95.6077, 0.51 ) }
    dend_58 { pt3dadd( -93.0774, -17.3862, -96.0652, 0.36 ) }
    dend_58 { pt3dadd( -93.4613, -17.4366, -97.2891, 0.66 ) }
    dend_58 { pt3dadd( -93.8825, -17.432, -98.7239, 0.36 ) }
    dend_58 { pt3dadd( -94.2576, -17.4319, -100.002, 0.07 ) }
    dend_58 { pt3dadd( -94.4731, -17.4296, -100.707, 0.36 ) }
    dend_58 { pt3dadd( -94.8567, -17.4212, -101.92, 0.36 ) }
    dend_58 { pt3dadd( -95.0637, -17.4113, -102.573, 0.51 ) }
    dend_58 { pt3dadd( -95.8854, -17.4432, -105.322, 0.07 ) }
    dend_58 { pt3dadd( -96.2598, -17.5661, -106.689, 0.07 ) }
    // Section: dend_44, id: dend_44, parent: dend_36 (entry count 97/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -17.5689, 7.27944, 4.39425, 0.22 ) }
    dend_44 { pt3dadd( -16.9366, 6.10679, 4.65835, 0.22 ) }
    dend_44 { pt3dadd( -16.1605, 3.88047, 4.97281, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_44 { pt3dadd( -15.8142, 2.56873, 5.08996, 0.22 ) }
    dend_44 { pt3dadd( -15.5719, 1.44283, 5.15559, 0.22 ) }
    dend_44 { pt3dadd( -15.3079, 0.00319028, 5.21857, 0.22 ) }
    dend_44 { pt3dadd( -15.1236, -1.27381, 5.27665, 0.44 ) }
    dend_44 { pt3dadd( -15.0457, -3.29471, 5.26509, 0.07 ) }
    dend_44 { pt3dadd( -15.1621, -4.10906, 5.27443, 0.07 ) }
    dend_44 { pt3dadd( -15.3737, -4.8174, 5.34218, 0.22 ) }
    dend_44 { pt3dadd( -15.5712, -5.33343, 5.41562, 0.07 ) }
    dend_44 { pt3dadd( -15.8902, -6.04121, 5.58204, 0.07 ) }
    dend_44 { pt3dadd( -16.1257, -6.49246, 5.75224, 0.07 ) }
    dend_44 { pt3dadd( -17.1477, -8.19648, 6.66105, 0.22 ) }
    dend_44 { pt3dadd( -17.6631, -8.89114, 7.10089, 0.22 ) }
    dend_44 { pt3dadd( -16.7602, -21.1472, 7.21598, 0.22 ) }
    dend_44 { pt3dadd( -15.4707, -33.3546, 7.8111, 0.22 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 14/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -17.5689, 7.27944, 4.39425, 0.15 ) }
    dend_37 { pt3dadd( -17.8948, 8.08001, 5.03084, 0.15 ) }
    dend_37 { pt3dadd( -18.0516, 9.01171, 5.97614, 0.29 ) }
    dend_37 { pt3dadd( -17.9473, 9.42886, 6.58664, 0.29 ) }
    dend_37 { pt3dadd( -17.4953, 9.85874, 7.73017, 0.29 ) }
    dend_37 { pt3dadd( -17.2792, 9.93374, 8.18644, 0.22 ) }
    dend_37 { pt3dadd( -16.9213, 9.91044, 8.91774, 0.22 ) }
    dend_37 { pt3dadd( -16.3397, 9.68644, 10.0055, 0.22 ) }
    dend_37 { pt3dadd( -15.7591, 9.30739, 11.1035, 0.22 ) }
    dend_37 { pt3dadd( -15.228, 8.85424, 12.0736, 0.22 ) }
    dend_37 { pt3dadd( -14.8043, 8.39453, 12.848, 0.22 ) }
    dend_37 { pt3dadd( -14.301, 7.68742, 13.9295, 0.51 ) }
    dend_37 { pt3dadd( -14.1144, 7.29775, 14.4429, 0.95 ) }
    dend_37 { pt3dadd( -14.0036, 6.61298, 15.1912, 1.17 ) }
    // Section: dend_33, id: dend_33, parent: dend_25 (entry count 28/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -15.2535, 9.1918, -1.40963, 0.88 ) }
    dend_33 { pt3dadd( -15.588, 10.5152, -1.42255, 0.88 ) }
    dend_33 { pt3dadd( -15.9791, 12.0436, -1.45765, 0.88 ) }
    dend_33 { pt3dadd( -16.1554, 12.6708, -1.47909, 0.88 ) }
    dend_33 { pt3dadd( -16.5126, 13.8004, -1.55039, 0.73 ) }
    dend_33 { pt3dadd( -16.7916, 14.6829, -1.60609, 0.73 ) }
    dend_33 { pt3dadd( -17.0578, 15.5246, -1.65922, 1.61 ) }
    dend_33 { pt3dadd( -17.1889, 15.8806, -1.70026, 1.97 ) }
    dend_33 { pt3dadd( -17.4467, 16.518, -1.78807, 1.46 ) }
    dend_33 { pt3dadd( -17.8709, 17.5496, -1.94611, 0.8 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 38/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -15.2535, 9.1918, -1.40963, 0.36 ) }
    dend_26 { pt3dadd( -16.5052, 10.1837, -1.20775, 0.36 ) }
    dend_26 { pt3dadd( -17.0923, 10.6505, -1.03227, 0.8 ) }
    dend_26 { pt3dadd( -17.9054, 11.2859, -0.715421, 0.8 ) }
    dend_26 { pt3dadd( -19.0077, 12.1071, -0.220675, 0.66 ) }
    dend_26 { pt3dadd( -19.9695, 12.7417, 0.270887, 0.8 ) }
    dend_26 { pt3dadd( -20.7847, 13.2236, 0.69585, 0.95 ) }
    dend_26 { pt3dadd( -21.459, 13.5514, 1.07893, 1.09 ) }
    dend_26 { pt3dadd( -22.1967, 13.8142, 1.46818, 1.53 ) }
    dend_26 { pt3dadd( -23.1454, 14.0166, 1.85431, 1.09 ) }
    dend_26 { pt3dadd( -24.7602, 14.1807, 2.22727, 0.73 ) }
    dend_26 { pt3dadd( -25.3354, 14.2115, 2.27154, 0.73 ) }
    dend_26 { pt3dadd( -26.9929, 14.3034, 2.16925, 0.73 ) }
    dend_26 { pt3dadd( -27.6946, 14.3727, 2.02255, 0.73 ) }
    dend_26 { pt3dadd( -28.9697, 14.5535, 1.60937, 0.73 ) }
    dend_26 { pt3dadd( -29.9317, 14.7461, 1.21077, 1.17 ) }
    dend_26 { pt3dadd( -30.8699, 14.9891, 0.769463, 1.61 ) }
    dend_26 { pt3dadd( -31.7686, 15.2613, 0.319003, 1.61 ) }
    dend_26 { pt3dadd( -33.1967, 15.7863, -0.433563, 1.02 ) }
    dend_26 { pt3dadd( -34.335, 16.2313, -1.02359, 1.02 ) }
    dend_26 { pt3dadd( -35.49, 16.7251, -1.60122, 1.02 ) }
    dend_26 { pt3dadd( -36.7187, 17.2952, -2.17959, 1.02 ) }
    dend_26 { pt3dadd( -37.8473, 17.8541, -2.66814, 1.02 ) }
    dend_26 { pt3dadd( -39.0651, 18.4699, -3.15506, 0.95 ) }
    dend_26 { pt3dadd( -39.7916, 18.8643, -3.41804, 0.95 ) }
    dend_26 { pt3dadd( -40.4897, 19.2943, -3.65962, 1.46 ) }
    dend_26 { pt3dadd( -41.348, 19.8979, -3.9134, 1.82 ) }
    dend_26 { pt3dadd( -42.0536, 20.4866, -4.04424, 1.82 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 66/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 4.38215, -11.8278, 2.62743, 0.51 ) }
    dend_16 { pt3dadd( 4.56096, -11.8289, 2.73939, 0.51 ) }
    dend_16 { pt3dadd( 5.30381, -11.6814, 3.28162, 0.29 ) }
    dend_16 { pt3dadd( 5.65143, -11.5239, 3.64119, 0.29 ) }
    dend_16 { pt3dadd( 5.88488, -11.3451, 3.96408, 0.15 ) }
    dend_16 { pt3dadd( 6.11399, -11.0513, 4.39982, 0.15 ) }
    dend_16 { pt3dadd( 6.22249, -10.8408, 4.69852, 0.44 ) }
    dend_16 { pt3dadd( 6.33064, -10.4419, 5.18635, 0.66 ) }
    dend_16 { pt3dadd( 6.40606, -9.85775, 5.83283, 0.15 ) }
    dend_16 { pt3dadd( 6.44088, -9.68219, 6.02775, 0.15 ) }
    dend_16 { pt3dadd( 6.53121, -9.43665, 6.28658, 0.36 ) }
    dend_16 { pt3dadd( 6.85119, -8.98765, 6.7186, 0.36 ) }
    dend_16 { pt3dadd( 7.14634, -8.75808, 6.92887, 0.8 ) }
    dend_16 { pt3dadd( 7.72281, -8.47284, 7.16421, 0.8 ) }
    dend_16 { pt3dadd( 8.45849, -8.20494, 7.40504, 0.15 ) }
    dend_16 { pt3dadd( 9.14758, -8.02564, 7.60455, 0.15 ) }
    dend_16 { pt3dadd( 9.42597, -7.98357, 7.66781, 0.15 ) }
    dend_16 { pt3dadd( 9.76107, -7.97663, 7.74078, 0.15 ) }
    dend_16 { pt3dadd( 9.95251, -8.02467, 7.82349, 0.15 ) }
    dend_16 { pt3dadd( 10.4073, -8.32663, 8.09819, 0.15 ) }
    dend_16 { pt3dadd( 10.6381, -8.45255, 8.22138, 0.15 ) }
    dend_16 { pt3dadd( 10.8033, -8.57025, 8.34984, 0.15 ) }
    dend_16 { pt3dadd( 11.4299, -8.99229, 8.84309, 0.15 ) }
    dend_16 { pt3dadd( 11.7048, -9.09813, 8.99704, 0.15 ) }
    dend_16 { pt3dadd( 12.3732, -9.1596, 9.16532, 0.15 ) }
    dend_16 { pt3dadd( 13.678, -9.13295, 9.30992, 0.15 ) }
    dend_16 { pt3dadd( 18.4045, -7.46947, 13.3755, 0.15 ) }
    dend_16 { pt3dadd( 23.0399, -4.80432, 16.9874, 0.15 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 94/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 4.38215, -11.8278, 2.62743, 0.51 ) }
    dend_13 { pt3dadd( 4.14689, -11.4218, 3.13165, 0.51 ) }
    dend_13 { pt3dadd( 3.39564, -10.5154, 4.27551, 0.73 ) }
    dend_13 { pt3dadd( 2.79847, -9.95048, 5.05322, 0.73 ) }
    dend_13 { pt3dadd( 2.29559, -9.55416, 5.6358, 0.73 ) }
    dend_13 { pt3dadd( 1.64612, -9.11294, 6.30722, 0.73 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_13 { pt3dadd( 0.707833, -8.57667, 7.18081, 0.73 ) }
    dend_13 { pt3dadd( -0.129684, -8.2321, 7.8235, 0.73 ) }
    dend_13 { pt3dadd( -0.957811, -8.01349, 8.36859, 0.73 ) }
    dend_13 { pt3dadd( -1.81269, -7.90072, 8.93235, 0.73 ) }
    dend_13 { pt3dadd( -2.40192, -7.87311, 9.3228, 0.73 ) }
    dend_13 { pt3dadd( -3.24178, -7.90801, 9.89003, 0.73 ) }
    dend_13 { pt3dadd( -3.75092, -7.98757, 10.2086, 0.73 ) }
    dend_13 { pt3dadd( -3.16613, -7.9588, 10.2742, 0.73 ) }
    dend_13 { pt3dadd( -2.51788, -7.95742, 10.5766, 0.73 ) }
    dend_13 { pt3dadd( -1.30431, -7.96422, 11.1782, 0.58 ) }
    dend_13 { pt3dadd( -0.697154, -7.97656, 11.4535, 0.88 ) }
    dend_13 { pt3dadd( -0.011461, -7.97985, 11.7227, 0.88 ) }
    dend_13 { pt3dadd( 0.701631, -7.95195, 11.9855, 0.22 ) }
    dend_13 { pt3dadd( 1.08981, -7.91559, 12.1257, 0.22 ) }
    dend_13 { pt3dadd( 1.86284, -7.83382, 12.3881, 0.22 ) }
    dend_13 { pt3dadd( 2.53749, -7.76965, 12.6292, 0.22 ) }
    dend_13 { pt3dadd( 3.03721, -7.75037, 12.8038, 0.22 ) }
    dend_13 { pt3dadd( 3.82574, -7.78355, 13.0922, 0.22 ) }
    dend_13 { pt3dadd( 4.33551, -7.83713, 13.2799, 0.22 ) }
    dend_13 { pt3dadd( 3.24937, -5.1456, 20.7624, 0.22 ) }
    dend_13 { pt3dadd( 3.81643, -3.33216, 28.5599, 0.22 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 21/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 3.23376, -17.1159, 1.69007, 1.9 ) }
    dend_7 { pt3dadd( 3.83896, -18.5101, 3.05697, 1.9 ) }
    dend_7 { pt3dadd( 4.22612, -19.8844, 4.17527, 0.88 ) }
    dend_7 { pt3dadd( 4.27165, -20.2853, 4.47409, 0.8 ) }
    dend_7 { pt3dadd( 4.26461, -20.7838, 4.8234, 0.8 ) }
    dend_7 { pt3dadd( 4.20672, -21.144, 5.0729, 0.8 ) }
    dend_7 { pt3dadd( 3.97648, -21.8489, 5.5652, 0.73 ) }
    dend_7 { pt3dadd( 3.37086, -21.9695, 5.70044, 0.58 ) }
    dend_7 { pt3dadd( 2.566, -21.8468, 5.8758, 0.58 ) }
    dend_7 { pt3dadd( 2.29383, -21.752, 5.92758, 0.58 ) }
    dend_7 { pt3dadd( 1.26773, -21.3238, 6.14037, 1.17 ) }
    dend_7 { pt3dadd( 0.56702, -21.0294, 6.32607, 1.17 ) }
    dend_7 { pt3dadd( -0.864601, -20.4951, 6.82104, 1.17 ) }
    dend_7 { pt3dadd( -1.78077, -20.2114, 7.20212, 0.8 ) }
    dend_7 { pt3dadd( -2.79552, -20.0192, 7.70789, 0.51 ) }
    dend_7 { pt3dadd( -3.9185, -19.9406, 8.32197, 0.51 ) }
    dend_7 { pt3dadd( -4.95764, -20.0183, 8.94457, 0.51 ) }
    dend_7 { pt3dadd( -6.23192, -20.3012, 9.80002, 1.39 ) }
    dend_7 { pt3dadd( -6.70453, -20.4918, 10.1699, 1.39 ) }
    dend_7 { pt3dadd( -7.79072, -21.1538, 11.1958, 1.39 ) }
    dend_7 { pt3dadd( -8.34729, -21.6586, 11.8957, 1.09 ) }
    dend_7 { pt3dadd( -8.63919, -22.1237, 12.48, 0.88 ) }
    dend_7 { pt3dadd( -8.84542, -22.7859, 13.262, 0.66 ) }
    dend_7 { pt3dadd( -8.59714, -23.6599, 14.1792, 0.36 ) }
    dend_7 { pt3dadd( -8.00886, -24.4748, 14.9343, 0.29 ) }
    dend_7 { pt3dadd( -7.61573, -24.8497, 15.2558, 0.29 ) }
    dend_7 { pt3dadd( -6.99097, -25.353, 15.6877, 0.29 ) }
    dend_7 { pt3dadd( -11.5789, -29.9795, 23.3319, 0.29 ) }
    dend_7 { pt3dadd( -14.6336, -32.7867, 32.4794, 0.29 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 50/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 3.23376, -17.1159, 1.69007, 1.53 ) }
    dend_2 { pt3dadd( 3.53832, -18.0383, 1.19843, 1.53 ) }
    dend_2 { pt3dadd( 3.80049, -18.8324, 0.775229, 1.53 ) }
    dend_2 { pt3dadd( 4.05503, -19.6033, 0.364333, 1.97 ) }
    dend_2 { pt3dadd( 4.2858, -20.3022, -0.00818735, 2.48 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 55/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -15.4707, -33.3546, 7.8111, 0.07 ) }
    dend_46 { pt3dadd( -14.6227, -41.5246, 12.2399, 0.07 ) }
    dend_46 { pt3dadd( -13.3437, -49.4085, 17.0659, 0.07 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 58/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -15.4707, -33.3546, 7.8111, 0.07 ) }
    dend_45 { pt3dadd( -15.2456, -44.8551, 7.8254, 0.07 ) }
    dend_45 { pt3dadd( -16.5935, -56.2784, 7.89494, 0.07 ) }
    dend_45 { pt3dadd( -17.4806, -67.6418, 9.44319, 0.07 ) }
    dend_45 { pt3dadd( -20.6367, -78.7003, 9.69033, 0.07 ) }
    dend_45 { pt3dadd( -25.4459, -89.125, 8.97642, 0.07 ) }
    dend_45 { pt3dadd( -28.5607, -100.169, 9.77443, 0.07 ) }
    dend_45 { pt3dadd( -33.0815, -110.589, 11.5944, 0.07 ) }
    dend_45 { pt3dadd( -35.9656, -121.711, 12.147, 0.07 ) }
    dend_45 { pt3dadd( -38.0665, -132.95, 13.4048, 0.07 ) }
    dend_45 { pt3dadd( -39.0392, -144.39, 14.1039, 0.07 ) }
    dend_45 { pt3dadd( -40.1688, -155.837, 14.1663, 0.07 ) }
    dend_45 { pt3dadd( -42.7438, -166.827, 11.9536, 0.07 ) }
    dend_45 { pt3dadd( -45.6935, -177.9, 10.9528, 0.07 ) }
    dend_45 { pt3dadd( -48.1157, -189.106, 11.8808, 0.07 ) }
    // Section: dend_41, id: dend_41, parent: dend_37 (entry count 73/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -14.0036, 6.61298, 15.1912, 0.44 ) }
    dend_41 { pt3dadd( -13.8084, 7.86634, 15.5379, 0.44 ) }
    dend_41 { pt3dadd( -13.6082, 9.51138, 15.906, 0.58 ) }
    dend_41 { pt3dadd( -13.5218, 10.3607, 16.0492, 0.44 ) }
    dend_41 { pt3dadd( -13.442, 11.2528, 16.1522, 0.22 ) }
    dend_41 { pt3dadd( -13.3877, 11.9717, 16.2052, 0.22 ) }
    dend_41 { pt3dadd( -13.3128, 12.9642, 16.2784, 0.22 ) }
    dend_41 { pt3dadd( -13.2698, 13.6455, 16.2817, 0.22 ) }
    dend_41 { pt3dadd( -13.2205, 14.8211, 16.2073, 1.02 ) }
    dend_41 { pt3dadd( -13.1952, 16.1615, 16.12, 0.36 ) }
    dend_41 { pt3dadd( -13.195, 17.4027, 16.0271, 0.15 ) }
    dend_41 { pt3dadd( -12.8626, 28.5162, 17.4761, 0.15 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 85/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -14.0036, 6.61298, 15.1912, 0.15 ) }
    dend_38 { pt3dadd( -14.6557, 7.16322, 15.1239, 0.15 ) }
    dend_38 { pt3dadd( -15.5584, 8.21503, 15.1974, 0.15 ) }
    dend_38 { pt3dadd( -15.9183, 8.82928, 15.2971, 0.15 ) }
    dend_38 { pt3dadd( -16.3056, 9.63348, 15.4711, 0.15 ) }
    dend_38 { pt3dadd( -16.8716, 10.7835, 15.838, 0.15 ) }
    dend_38 { pt3dadd( -17.2608, 11.4815, 16.1016, 0.15 ) }
    dend_38 { pt3dadd( -17.4986, 11.9102, 16.3252, 0.15 ) }
    dend_38 { pt3dadd( -17.9231, 12.5541, 16.7624, 0.44 ) }
    dend_38 { pt3dadd( -18.5122, 13.1173, 17.2995, 0.29 ) }
    dend_38 { pt3dadd( -19.4655, 13.454, 17.9685, 0.15 ) }
    dend_38 { pt3dadd( -20.1369, 13.4396, 18.3103, 0.15 ) }
    dend_38 { pt3dadd( -20.8402, 13.3368, 18.6058, 0.15 ) }
    dend_38 { pt3dadd( -22.0623, 13.1133, 19.0566, 0.15 ) }
    dend_38 { pt3dadd( -22.7522, 12.9703, 19.2959, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_38 { pt3dadd( -23.3604, 12.8474, 19.4896, 0.15 ) }
    dend_38 { pt3dadd( -23.9156, 12.801, 19.6414, 0.15 ) }
    dend_38 { pt3dadd( -24.6156, 12.9298, 19.8731, 0.15 ) }
    dend_38 { pt3dadd( -25.2658, 13.2871, 20.1102, 0.15 ) }
    dend_38 { pt3dadd( -25.7796, 13.7023, 20.3023, 0.15 ) }
    dend_38 { pt3dadd( -26.2623, 14.1207, 20.4524, 0.15 ) }
    dend_38 { pt3dadd( -26.5931, 14.4162, 20.5389, 0.15 ) }
    dend_38 { pt3dadd( -27.2975, 15.0139, 20.6999, 0.22 ) }
    dend_38 { pt3dadd( -27.7293, 15.3357, 20.7895, 0.22 ) }
    dend_38 { pt3dadd( -28.2998, 15.6917, 20.9102, 0.22 ) }
    dend_38 { pt3dadd( -29.1829, 16.165, 21.1156, 0.15 ) }
    dend_38 { pt3dadd( -30.2794, 16.71, 21.4387, 0.15 ) }
    dend_38 { pt3dadd( -30.9382, 17.054, 21.6821, 0.15 ) }
    dend_38 { pt3dadd( -31.5045, 17.3902, 21.9263, 0.36 ) }
    dend_38 { pt3dadd( -32.2314, 17.8315, 22.2696, 0.15 ) }
    dend_38 { pt3dadd( -33.0026, 18.2633, 22.6247, 0.15 ) }
    dend_38 { pt3dadd( -33.8934, 18.6907, 22.9889, 0.15 ) }
    dend_38 { pt3dadd( -34.5515, 18.9522, 23.2212, 0.15 ) }
    dend_38 { pt3dadd( -35.16, 19.1269, 23.4065, 0.15 ) }
    dend_38 { pt3dadd( -36.2281, 19.4226, 23.7007, 0.15 ) }
    dend_38 { pt3dadd( -37.978, 19.8738, 24.0928, 0.15 ) }
    dend_38 { pt3dadd( -39.3762, 20.1868, 24.3334, 1.09 ) }
    dend_38 { pt3dadd( -40.5956, 20.3833, 24.4832, 1.09 ) }
    dend_38 { pt3dadd( -42.1669, 20.5219, 24.6524, 0.22 ) }
    dend_38 { pt3dadd( -50.7568, 25.7254, 27.0369, 0.22 ) }
    dend_38 { pt3dadd( -58.5966, 32.2658, 28.5572, 0.22 ) }
    dend_38 { pt3dadd( -67.3917, 37.6571, 28.1975, 0.22 ) }
    dend_38 { pt3dadd( -74.5884, 45.0145, 28.9885, 0.22 ) }
    dend_38 { pt3dadd( -81.7644, 52.1843, 30.8984, 0.22 ) }
    dend_38 { pt3dadd( -88.7706, 59.7646, 30.9432, 0.22 ) }
    dend_38 { pt3dadd( -93.8146, 68.7438, 31.6366, 0.22 ) }
    dend_38 { pt3dadd( -99.0298, 77.581, 32.7569, 0.22 ) }
    dend_38 { pt3dadd( -104.226, 86.4199, 33.9521, 0.22 ) }
    dend_38 { pt3dadd( -108.668, 95.7342, 34.2005, 0.22 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 34/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -17.8709, 17.5496, -1.94611, 0.29 ) }
    dend_35 { pt3dadd( -17.2934, 18.6462, -1.24078, 0.29 ) }
    dend_35 { pt3dadd( -16.7032, 19.4314, -0.676144, 0.29 ) }
    dend_35 { pt3dadd( -16.2521, 19.9307, -0.283014, 0.73 ) }
    dend_35 { pt3dadd( -15.7925, 20.4308, 0.082153, 1.17 ) }
    dend_35 { pt3dadd( -15.4662, 20.7992, 0.334676, 1.17 ) }
    dend_35 { pt3dadd( -14.6142, 21.8582, 0.991321, 0.36 ) }
    dend_35 { pt3dadd( -13.9674, 22.6825, 1.41207, 0.58 ) }
    dend_35 { pt3dadd( -13.5783, 23.2868, 1.7041, 0.36 ) }
    dend_35 { pt3dadd( -13.2232, 24.2331, 2.13629, 0.22 ) }
    dend_35 { pt3dadd( -13.1713, 24.8912, 2.40226, 0.22 ) }
    dend_35 { pt3dadd( -13.2985, 25.7368, 2.67066, 0.22 ) }
    dend_35 { pt3dadd( -13.5105, 26.4814, 2.85268, 0.22 ) }
    dend_35 { pt3dadd( -13.8821, 27.725, 3.12999, 0.66 ) }
    dend_35 { pt3dadd( -14.2353, 29.0136, 3.44076, 0.22 ) }
    dend_35 { pt3dadd( -14.416, 29.8422, 3.66937, 0.22 ) }
    dend_35 { pt3dadd( -14.5848, 30.88, 3.99648, 0.22 ) }
    dend_35 { pt3dadd( -14.7019, 31.9024, 4.34664, 0.22 ) }
    dend_35 { pt3dadd( -14.8093, 33.1453, 4.77587, 0.07 ) }
    dend_35 { pt3dadd( -14.8274, 34.0908, 5.10121, 0.44 ) }
    dend_35 { pt3dadd( -14.7856, 35.066, 5.47945, 0.22 ) }
    dend_35 { pt3dadd( -14.7305, 36.0189, 5.87746, 0.07 ) }
    dend_35 { pt3dadd( -14.7178, 36.7635, 6.23403, 0.51 ) }
    dend_35 { pt3dadd( -14.7934, 37.4695, 6.58484, 0.15 ) }
    dend_35 { pt3dadd( -14.7988, 46.4365, 12.2149, 0.15 ) }
    dend_35 { pt3dadd( -13.224, 55.6441, 17.1997, 0.15 ) }
    dend_35 { pt3dadd( -10.8498, 65.4525, 20.4036, 0.15 ) }
    dend_35 { pt3dadd( -8.29358, 74.745, 24.7878, 0.15 ) }
    dend_35 { pt3dadd( -6.91065, 83.9804, 29.778, 0.15 ) }
    dend_35 { pt3dadd( -7.01443, 93.4639, 34.4853, 0.15 ) }
    dend_35 { pt3dadd( -5.67649, 102.401, 40.0021, 0.15 ) }
    dend_35 { pt3dadd( -4.20556, 111.283, 45.5744, 0.15 ) }
    dend_35 { pt3dadd( -1.84108, 120.306, 50.5843, 0.15 ) }
    dend_35 { pt3dadd( -1.10164, 129.944, 54.9055, 0.15 ) }
    dend_35 { pt3dadd( -1.01538, 139.312, 59.84, 0.15 ) }
    dend_35 { pt3dadd( -0.578716, 148.098, 65.7312, 0.15 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 70/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -17.8709, 17.5496, -1.94611, 0.44 ) }
    dend_34 { pt3dadd( -18.8043, 18.0883, -1.57597, 0.44 ) }
    dend_34 { pt3dadd( -19.5299, 18.7101, -1.18465, 0.44 ) }
    dend_34 { pt3dadd( -19.9825, 19.1991, -0.924317, 0.44 ) }
    dend_34 { pt3dadd( -20.5481, 19.8889, -0.613093, 0.44 ) }
    dend_34 { pt3dadd( -21.1105, 20.5751, -0.366058, 0.44 ) }
    dend_34 { pt3dadd( -21.937, 21.5867, -0.044162, 0.66 ) }
    dend_34 { pt3dadd( -22.4395, 22.2794, 0.158624, 0.88 ) }
    dend_34 { pt3dadd( -22.8637, 22.8609, 0.308944, 1.09 ) }
    dend_34 { pt3dadd( -23.2809, 23.38, 0.416219, 1.24 ) }
    dend_34 { pt3dadd( -24.3262, 24.4569, 0.583141, 0.36 ) }
    dend_34 { pt3dadd( -25.0463, 25.0131, 0.650619, 0.22 ) }
    dend_34 { pt3dadd( -25.634, 25.324, 0.688466, 0.22 ) }
    dend_34 { pt3dadd( -26.4852, 25.6215, 0.737666, 0.22 ) }
    dend_34 { pt3dadd( -27.0928, 25.7691, 0.751627, 0.22 ) }
    dend_34 { pt3dadd( -27.8255, 25.9155, 0.732345, 0.22 ) }
    dend_34 { pt3dadd( -28.7324, 26.1077, 0.640112, 0.66 ) }
    dend_34 { pt3dadd( -29.3166, 26.2742, 0.529036, 0.88 ) }
    dend_34 { pt3dadd( -30.1192, 26.6627, 0.339129, 0.44 ) }
    dend_34 { pt3dadd( -30.7326, 27.1937, 0.20325, 0.29 ) }
    dend_34 { pt3dadd( -31.2518, 27.8781, 0.116189, 0.29 ) }
    dend_34 { pt3dadd( -31.7539, 28.7233, 0.0853908, 0.66 ) }
    dend_34 { pt3dadd( -31.9778, 29.1572, 0.1053, 0.66 ) }
    dend_34 { pt3dadd( -32.4013, 30.0507, 0.221696, 0.36 ) }
    dend_34 { pt3dadd( -32.8955, 31.142, 0.442883, 0.22 ) }
    dend_34 { pt3dadd( -33.0654, 31.5117, 0.537169, 0.22 ) }
    dend_34 { pt3dadd( -33.4457, 32.252, 0.756229, 0.22 ) }
    dend_34 { pt3dadd( -33.9836, 33.113, 1.02679, 0.22 ) }
    dend_34 { pt3dadd( -34.4767, 33.6821, 1.23174, 0.22 ) }
    dend_34 { pt3dadd( -34.9868, 34.1717, 1.395, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_34 { pt3dadd( -35.3247, 34.4443, 1.47848, 0.15 ) }
    dend_34 { pt3dadd( -35.8442, 34.8155, 1.61071, 0.51 ) }
    dend_34 { pt3dadd( -36.8072, 35.3878, 1.87953, 0.29 ) }
    dend_34 { pt3dadd( -38.0603, 35.7825, 2.27205, 0.07 ) }
    dend_34 { pt3dadd( -47.0298, 41.1412, 3.86692, 0.07 ) }
    dend_34 { pt3dadd( -56.0052, 46.5821, 5.11247, 0.07 ) }
    dend_34 { pt3dadd( -64.9849, 52.1466, 4.77603, 0.07 ) }
    dend_34 { pt3dadd( -74.4724, 56.7619, 5.40703, 0.07 ) }
    dend_34 { pt3dadd( -84.1865, 60.8928, 4.8732, 0.07 ) }
    dend_34 { pt3dadd( -93.4222, 65.8296, 3.44449, 0.07 ) }
    dend_34 { pt3dadd( -102.189, 71.6934, 2.75918, 0.07 ) }
    dend_34 { pt3dadd( -111.13, 76.8331, 0.444283, 0.07 ) }
    dend_34 { pt3dadd( -118.876, 82.6502, -3.78213, 0.07 ) }
    dend_34 { pt3dadd( -126.816, 88.5782, -7.46177, 0.07 ) }
    dend_34 { pt3dadd( -134.452, 94.562, -11.6552, 0.07 ) }
    dend_34 { pt3dadd( -143.33, 99.8984, -13.7596, 0.07 ) }
    dend_34 { pt3dadd( -151.854, 105.028, -17.3271, 0.07 ) }
    dend_34 { pt3dadd( -158.873, 112.329, -20.3518, 0.07 ) }
    dend_34 { pt3dadd( -166.263, 119.195, -23.5083, 0.07 ) }
    dend_34 { pt3dadd( -171.812, 127.968, -25.4941, 0.07 ) }
    dend_34 { pt3dadd( -176.282, 137.078, -28.4516, 0.07 ) }
    dend_34 { pt3dadd( -178.837, 146.875, -31.4853, 0.07 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 22/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -42.0536, 20.4866, -4.04424, 0.51 ) }
    dend_30 { pt3dadd( -43.0988, 21.3224, -2.54627, 0.51 ) }
    dend_30 { pt3dadd( -43.9186, 21.8696, -1.57749, 0.51 ) }
    dend_30 { pt3dadd( -45.4735, 22.9265, 0.0105838, 0.51 ) }
    dend_30 { pt3dadd( -46.1538, 23.4304, 0.644779, 0.51 ) }
    dend_30 { pt3dadd( -47.5927, 24.5778, 1.83063, 0.66 ) }
    dend_30 { pt3dadd( -48.5834, 25.4183, 2.46077, 0.58 ) }
    dend_30 { pt3dadd( -49.8364, 26.4064, 2.88782, 0.51 ) }
    dend_30 { pt3dadd( -50.9154, 27.2873, 3.03176, 0.51 ) }
    dend_30 { pt3dadd( -51.8759, 28.0917, 3.00678, 0.51 ) }
    dend_30 { pt3dadd( -52.9617, 29.0674, 2.88238, 0.51 ) }
    dend_30 { pt3dadd( -55.19, 31.0223, 2.42516, 0.51 ) }
    dend_30 { pt3dadd( -56.8731, 32.3122, 1.99483, 0.51 ) }
    dend_30 { pt3dadd( -57.7108, 32.8356, 1.77453, 0.51 ) }
    dend_30 { pt3dadd( -58.9078, 33.3944, 1.50485, 0.88 ) }
    dend_30 { pt3dadd( -59.427, 33.5623, 1.423, 1.09 ) }
    dend_30 { pt3dadd( -61.8786, 34.043, 1.37192, 0.51 ) }
    dend_30 { pt3dadd( -63.2901, 34.1984, 1.60983, 0.51 ) }
    dend_30 { pt3dadd( -64.1059, 34.2797, 1.86079, 0.51 ) }
    dend_30 { pt3dadd( -65.1028, 34.3951, 2.19116, 0.51 ) }
    dend_30 { pt3dadd( -66.5369, 34.6341, 2.63903, 0.51 ) }
    dend_30 { pt3dadd( -68.1656, 35.0228, 3.08083, 0.66 ) }
    dend_30 { pt3dadd( -70.2375, 35.7665, 3.53735, 1.02 ) }
    dend_30 { pt3dadd( -72.3012, 36.7813, 3.80918, 0.66 ) }
    dend_30 { pt3dadd( -73.9261, 37.7558, 3.83667, 0.51 ) }
    dend_30 { pt3dadd( -75.8893, 39.13, 3.61703, 0.44 ) }
    dend_30 { pt3dadd( -77.215, 40.1491, 3.30573, 0.88 ) }
    dend_30 { pt3dadd( -78.6376, 41.2789, 2.84749, 0.66 ) }
    dend_30 { pt3dadd( -80.0989, 42.4629, 2.32136, 0.51 ) }
    dend_30 { pt3dadd( -81.0661, 43.2042, 1.98994, 0.51 ) }
    dend_30 { pt3dadd( -82.1912, 43.9349, 1.67217, 0.36 ) }
    dend_30 { pt3dadd( -83.5046, 44.5315, 1.39535, 0.58 ) }
    dend_30 { pt3dadd( -85.3144, 44.9483, 1.13238, 0.95 ) }
    dend_30 { pt3dadd( -86.653, 45.049, 1.00246, 1.17 ) }
    dend_30 { pt3dadd( -88.9237, 45.0488, 0.894586, 0.51 ) }
    dend_30 { pt3dadd( -89.8713, 45.0311, 0.890984, 0.51 ) }
    dend_30 { pt3dadd( -91.4019, 45.0121, 0.946798, 0.44 ) }
    dend_30 { pt3dadd( -93.0135, 45.0817, 1.07149, 0.44 ) }
    dend_30 { pt3dadd( -93.9147, 45.2146, 1.19931, 0.44 ) }
    dend_30 { pt3dadd( -95.3816, 45.6178, 1.49226, 0.44 ) }
    dend_30 { pt3dadd( -97.3681, 46.4289, 2.00794, 0.51 ) }
    dend_30 { pt3dadd( -98.3909, 46.9349, 2.31107, 0.51 ) }
    dend_30 { pt3dadd( -99.7782, 47.7257, 2.75231, 1.61 ) }
    dend_30 { pt3dadd( -100.954, 48.429, 3.14319, 2.12 ) }
    dend_30 { pt3dadd( -102.136, 49.1334, 3.53985, 2.12 ) }
    dend_30 { pt3dadd( -103.932, 50.1717, 4.11828, 0.88 ) }
    dend_30 { pt3dadd( -104.927, 50.7515, 4.4465, 0.58 ) }
    dend_30 { pt3dadd( -105.451, 51.0376, 4.61435, 0.73 ) }
    dend_30 { pt3dadd( -107.524, 52.0792, 5.28542, 0.51 ) }
    dend_30 { pt3dadd( -108.954, 52.7489, 5.75652, 0.8 ) }
    dend_30 { pt3dadd( -109.825, 53.1495, 6.06807, 1.02 ) }
    dend_30 { pt3dadd( -110.962, 53.6735, 6.49666, 0.73 ) }
    dend_30 { pt3dadd( -112.587, 54.3803, 7.07079, 0.51 ) }
    dend_30 { pt3dadd( -114.294, 55.0816, 7.62919, 0.44 ) }
    dend_30 { pt3dadd( -115.453, 55.5353, 7.96571, 0.8 ) }
    dend_30 { pt3dadd( -116.804, 56.0782, 8.37299, 1.02 ) }
    dend_30 { pt3dadd( -118.965, 57.0196, 9.07569, 0.51 ) }
    dend_30 { pt3dadd( -120.498, 57.7768, 9.64305, 0.66 ) }
    dend_30 { pt3dadd( -121.587, 58.4511, 10.1561, 0.44 ) }
    dend_30 { pt3dadd( -122.434, 59.1582, 10.6987, 0.44 ) }
    dend_30 { pt3dadd( -123.644, 60.6767, 11.8488, 0.22 ) }
    dend_30 { pt3dadd( -124.056, 61.7104, 12.5544, 0.15 ) }
    dend_30 { pt3dadd( -124.257, 63.213, 13.4688, 0.15 ) }
    dend_30 { pt3dadd( -124.299, 64.4517, 14.1049, 0.15 ) }
    dend_30 { pt3dadd( -124.271, 65.341, 14.4523, 0.36 ) }
    dend_30 { pt3dadd( -124.225, 66.3473, 14.7818, 0.36 ) }
    dend_30 { pt3dadd( -124.26, 67.8478, 15.0866, 0.07 ) }
    dend_30 { pt3dadd( -124.392, 68.8151, 15.225, 0.07 ) }
    dend_30 { pt3dadd( -124.624, 69.8603, 15.2533, 0.36 ) }
    dend_30 { pt3dadd( -124.938, 71.2004, 15.179, 0.07 ) }
    dend_30 { pt3dadd( -135.02, 78.8141, 19.0798, 0.07 ) }
    dend_30 { pt3dadd( -145.056, 85.5253, 24.4726, 0.07 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 94/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -42.0536, 20.4866, -4.04424, 0.44 ) }
    dend_27 { pt3dadd( -42.5391, 21.2392, -3.92187, 0.44 ) }
    dend_27 { pt3dadd( -42.9335, 21.8525, -3.87355, 0.44 ) }
    dend_27 { pt3dadd( -43.5565, 22.9491, -3.89709, 0.44 ) }
    dend_27 { pt3dadd( -44.0289, 23.9046, -3.99578, 0.44 ) }
    dend_27 { pt3dadd( -44.4472, 24.9289, -4.22763, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_27 { pt3dadd( -44.7324, 25.7737, -4.48018, 0.88 ) }
    dend_27 { pt3dadd( -45.0059, 26.8372, -4.96995, 0.36 ) }
    dend_27 { pt3dadd( -45.2128, 27.8541, -5.60018, 0.36 ) }
    dend_27 { pt3dadd( -45.3121, 28.4395, -6.11966, 0.36 ) }
    dend_27 { pt3dadd( -45.4904, 29.45, -7.32445, 0.36 ) }
    dend_27 { pt3dadd( -45.5866, 29.8097, -7.92724, 0.36 ) }
    dend_27 { pt3dadd( -45.8329, 30.207, -8.90662, 0.36 ) }
    dend_27 { pt3dadd( -46.1098, 30.4056, -9.5542, 0.58 ) }
    dend_27 { pt3dadd( -46.6742, 30.7032, -10.5348, 0.58 ) }
    dend_27 { pt3dadd( -47.1007, 30.9995, -11.2094, 0.29 ) }
    dend_27 { pt3dadd( -47.316, 31.212, -11.542, 0.29 ) }
    dend_27 { pt3dadd( -47.6879, 31.7841, -12.1617, 0.29 ) }
    dend_27 { pt3dadd( -48.2124, 33.0186, -13.1282, 0.29 ) }
    dend_27 { pt3dadd( -48.536, 33.9754, -13.7529, 0.29 ) }
    dend_27 { pt3dadd( -48.8914, 35.045, -14.3713, 1.09 ) }
    dend_27 { pt3dadd( -49.0722, 35.5435, -14.6545, 1.09 ) }
    dend_27 { pt3dadd( -49.4654, 36.4349, -15.1532, 0.22 ) }
    dend_27 { pt3dadd( -49.7811, 36.9637, -15.4441, 0.22 ) }
    dend_27 { pt3dadd( -50.1648, 37.4091, -15.7021, 0.22 ) }
    dend_27 { pt3dadd( -50.8625, 38.0194, -16.0939, 0.22 ) }
    dend_27 { pt3dadd( -51.6077, 38.5534, -16.5167, 0.51 ) }
    dend_27 { pt3dadd( -52.3244, 39.0493, -16.9283, 1.02 ) }
    dend_27 { pt3dadd( -53.1072, 39.6173, -17.4076, 1.24 ) }
    dend_27 { pt3dadd( -53.7252, 40.1109, -17.8059, 1.24 ) }
    dend_27 { pt3dadd( -55.1222, 41.4159, -18.7991, 0.22 ) }
    dend_27 { pt3dadd( -56.055, 42.559, -19.6055, 0.22 ) }
    dend_27 { pt3dadd( -56.5003, 43.2785, -20.064, 0.36 ) }
    dend_27 { pt3dadd( -56.8733, 44.0029, -20.5008, 0.66 ) }
    dend_27 { pt3dadd( -57.0936, 44.4901, -20.7856, 0.88 ) }
    dend_27 { pt3dadd( -57.3798, 45.1865, -21.154, 0.88 ) }
    dend_27 { pt3dadd( -57.8764, 46.396, -21.7105, 0.15 ) }
    dend_27 { pt3dadd( -58.224, 46.9193, -21.9098, 0.58 ) }
    dend_27 { pt3dadd( -59.2769, 48.0374, -22.1794, 0.15 ) }
    dend_27 { pt3dadd( -60.3674, 48.9434, -22.2921, 0.66 ) }
    dend_27 { pt3dadd( -60.9601, 49.3732, -22.3089, 1.68 ) }
    dend_27 { pt3dadd( -62.1185, 50.1511, -22.2755, 2.41 ) }
    dend_27 { pt3dadd( -64.2469, 51.5335, -22.1528, 0.58 ) }
    dend_27 { pt3dadd( -65.7085, 52.5373, -22.0588, 0.36 ) }
    dend_27 { pt3dadd( -66.5126, 53.1928, -21.9966, 0.15 ) }
    dend_27 { pt3dadd( -66.7987, 53.4578, -21.9825, 0.15 ) }
    dend_27 { pt3dadd( -67.3028, 53.9886, -21.9836, 0.15 ) }
    dend_27 { pt3dadd( -67.9618, 54.8328, -22.0591, 0.73 ) }
    dend_27 { pt3dadd( -68.336, 55.4172, -22.1582, 0.73 ) }
    dend_27 { pt3dadd( -69.0314, 56.4915, -22.3734, 0.29 ) }
    dend_27 { pt3dadd( -69.4584, 57.1431, -22.4671, 0.29 ) }
    dend_27 { pt3dadd( -70.3366, 58.3333, -22.6263, 1.02 ) }
    dend_27 { pt3dadd( -70.9071, 59.0133, -22.7442, 1.17 ) }
    dend_27 { pt3dadd( -72.1233, 60.2747, -23.0018, 0.15 ) }
    dend_27 { pt3dadd( -72.6652, 60.7646, -23.133, 0.36 ) }
    dend_27 { pt3dadd( -73.0364, 61.0493, -23.2624, 0.36 ) }
    dend_27 { pt3dadd( -74.0901, 61.8091, -23.753, 0.07 ) }
    dend_27 { pt3dadd( -74.9828, 62.4474, -24.3272, 0.66 ) }
    dend_27 { pt3dadd( -75.4961, 62.8086, -24.7021, 1.24 ) }
    dend_27 { pt3dadd( -75.8233, 63.0277, -24.9568, 1.24 ) }
    dend_27 { pt3dadd( -76.7524, 63.5863, -25.6455, 0.15 ) }
    dend_27 { pt3dadd( -77.1235, 63.7756, -25.9074, 0.15 ) }
    dend_27 { pt3dadd( -77.6887, 64.0317, -26.2528, 0.15 ) }
    dend_27 { pt3dadd( -78.3053, 64.2587, -26.5419, 0.15 ) }
    dend_27 { pt3dadd( -78.9647, 64.4337, -26.8391, 0.15 ) }
    dend_27 { pt3dadd( -79.9816, 64.6486, -27.2797, 0.66 ) }
    dend_27 { pt3dadd( -81.1039, 64.8516, -27.7394, 1.53 ) }
    dend_27 { pt3dadd( -81.7778, 64.9731, -28.0236, 2.04 ) }
    dend_27 { pt3dadd( -83.1771, 65.2556, -28.6485, 1.61 ) }
    dend_27 { pt3dadd( -84.9295, 65.7241, -29.4797, 0.15 ) }
    dend_27 { pt3dadd( -85.302, 65.8907, -29.6565, 0.15 ) }
    dend_27 { pt3dadd( -85.661, 66.1444, -29.8197, 0.15 ) }
    dend_27 { pt3dadd( -86.182, 66.6616, -30.0503, 0.15 ) }
    dend_27 { pt3dadd( -86.7137, 67.3354, -30.3239, 0.95 ) }
    dend_27 { pt3dadd( -87.0738, 67.9008, -30.5275, 1.09 ) }
    dend_27 { pt3dadd( -87.9313, 69.3759, -30.954, 0.22 ) }
    dend_27 { pt3dadd( -88.146, 69.6979, -31.06, 0.22 ) }
    dend_27 { pt3dadd( -88.3582, 69.9451, -31.1547, 0.22 ) }
    dend_27 { pt3dadd( -88.905, 70.293, -31.3609, 0.22 ) }
    dend_27 { pt3dadd( -89.6022, 70.2828, -31.6254, 0.44 ) }
    dend_27 { pt3dadd( -90.1979, 70.1123, -31.8831, 0.44 ) }
    dend_27 { pt3dadd( -91.009, 69.8976, -32.3488, 0.15 ) }
    dend_27 { pt3dadd( -91.2863, 69.9013, -32.5045, 0.15 ) }
    dend_27 { pt3dadd( -91.7226, 69.991, -32.7336, 0.15 ) }
    dend_27 { pt3dadd( -92.2665, 70.2096, -33.0296, 0.44 ) }
    dend_27 { pt3dadd( -92.9663, 70.5981, -33.4913, 0.22 ) }
    dend_27 { pt3dadd( -93.9771, 71.307, -34.2334, 0.73 ) }
    dend_27 { pt3dadd( -94.7399, 71.9367, -34.8098, 1.53 ) }
    dend_27 { pt3dadd( -95.0644, 72.218, -35.0567, 1.53 ) }
    dend_27 { pt3dadd( -96.1494, 73.1976, -35.844, 0.07 ) }
    dend_27 { pt3dadd( -96.8775, 73.868, -36.3496, 0.07 ) }
    dend_27 { pt3dadd( -97.2885, 74.2721, -36.6283, 0.88 ) }
    dend_27 { pt3dadd( -97.8754, 74.9164, -36.9709, 1.46 ) }
    dend_27 { pt3dadd( -98.3763, 75.5238, -37.2668, 1.46 ) }
    dend_27 { pt3dadd( -99.5375, 76.9956, -37.8885, 0.15 ) }
    dend_27 { pt3dadd( -100.084, 77.6611, -38.1034, 0.15 ) }
    dend_27 { pt3dadd( -100.713, 78.3791, -38.3229, 0.66 ) }
    dend_27 { pt3dadd( -101.697, 79.4955, -38.6806, 0.07 ) }
    dend_27 { pt3dadd( -102.654, 80.7246, -39.1189, 0.36 ) }
    dend_27 { pt3dadd( -102.891, 81.0729, -39.2599, 0.36 ) }
    dend_27 { pt3dadd( -103.613, 82.2081, -39.7648, 0.07 ) }
    dend_27 { pt3dadd( -104.111, 82.9376, -40.101, 0.58 ) }
    dend_27 { pt3dadd( -104.662, 83.6607, -40.498, 0.88 ) }
    dend_27 { pt3dadd( -105.549, 84.701, -41.1561, 0.07 ) }
    dend_27 { pt3dadd( -106.061, 85.2621, -41.5016, 0.73 ) }
    dend_27 { pt3dadd( -106.284, 85.486, -41.6398, 0.73 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_27 { pt3dadd( -107.435, 86.4848, -42.3425, 0.07 ) }
    dend_27 { pt3dadd( -108.472, 87.1783, -42.8815, 1.02 ) }
    dend_27 { pt3dadd( -109.16, 87.5201, -43.1971, 1.61 ) }
    dend_27 { pt3dadd( -109.597, 87.6772, -43.3685, 1.61 ) }
    dend_27 { pt3dadd( -110.708, 87.9896, -43.7639, 0.73 ) }
    dend_27 { pt3dadd( -112.136, 88.3217, -44.3484, 0.07 ) }
    dend_27 { pt3dadd( -112.98, 88.4895, -44.7263, 0.07 ) }
    dend_27 { pt3dadd( -113.331, 88.556, -44.8767, 0.07 ) }
    dend_27 { pt3dadd( -113.822, 88.6578, -45.1156, 0.58 ) }
    dend_27 { pt3dadd( -114.438, 88.8093, -45.4295, 0.8 ) }
    dend_27 { pt3dadd( -116.043, 89.282, -46.2473, 0.29 ) }
    dend_27 { pt3dadd( -116.899, 89.5736, -46.6801, 0.51 ) }
    dend_27 { pt3dadd( -117.389, 89.756, -46.9583, 0.51 ) }
    dend_27 { pt3dadd( -118.652, 90.2269, -47.6811, 0.07 ) }
    dend_27 { pt3dadd( -119.424, 90.5007, -48.1138, 0.8 ) }
    dend_27 { pt3dadd( -119.955, 90.6591, -48.4144, 0.8 ) }
    dend_27 { pt3dadd( -121.734, 91.1079, -49.4348, 0.07 ) }
    dend_27 { pt3dadd( -123.083, 91.4626, -50.2398, 0.66 ) }
    dend_27 { pt3dadd( -123.822, 91.6728, -50.6986, 1.46 ) }
    dend_27 { pt3dadd( -124.204, 91.78, -50.94, 1.46 ) }
    dend_27 { pt3dadd( -125.634, 92.1564, -51.9187, 0.29 ) }
    dend_27 { pt3dadd( -126.479, 92.3817, -52.5001, 0.29 ) }
    dend_27 { pt3dadd( -127.668, 92.7533, -53.313, 0.07 ) }
    dend_27 { pt3dadd( -128.632, 93.1014, -53.9695, 0.66 ) }
    dend_27 { pt3dadd( -129.599, 93.522, -54.6718, 1.82 ) }
    dend_27 { pt3dadd( -130.965, 94.2306, -55.7354, 0.29 ) }
    dend_27 { pt3dadd( -131.716, 94.6854, -56.3286, 0.8 ) }
    dend_27 { pt3dadd( -133.003, 95.4509, -57.3618, 0.15 ) }
    dend_27 { pt3dadd( -133.429, 95.6948, -57.7093, 0.36 ) }
    dend_27 { pt3dadd( -134.208, 96.1365, -58.2878, 0.73 ) }
    dend_27 { pt3dadd( -134.945, 96.5529, -58.7818, 0.07 ) }
    dend_27 { pt3dadd( -135.566, 96.8601, -59.1311, 0.88 ) }
    dend_27 { pt3dadd( -136.811, 97.2995, -59.6833, 0.07 ) }
    dend_27 { pt3dadd( -137.548, 97.4871, -59.8655, 0.29 ) }
    dend_27 { pt3dadd( -138.682, 97.7481, -60.0766, 0.07 ) }
    dend_27 { pt3dadd( -139.222, 97.8932, -60.1751, 0.66 ) }
    dend_27 { pt3dadd( -139.835, 98.1147, -60.2878, 0.95 ) }
    dend_27 { pt3dadd( -141.07, 98.6735, -60.5413, 0.07 ) }
    dend_27 { pt3dadd( -142.158, 99.2907, -60.775, 0.07 ) }
    dend_27 { pt3dadd( -143.769, 100.369, -61.2074, 0.07 ) }
    dend_27 { pt3dadd( -145.071, 101.388, -61.6412, 0.07 ) }
    dend_27 { pt3dadd( -146.175, 102.374, -62.1231, 0.44 ) }
    dend_27 { pt3dadd( -146.56, 102.776, -62.3242, 0.29 ) }
    dend_27 { pt3dadd( -146.968, 103.262, -62.5684, 1.09 ) }
    dend_27 { pt3dadd( -147.483, 103.959, -62.896, 1.09 ) }
    dend_27 { pt3dadd( -148.419, 105.422, -63.4549, 0.07 ) }
    dend_27 { pt3dadd( -149.497, 107.214, -64.0721, 0.07 ) }
    dend_27 { pt3dadd( -150.116, 108.3, -64.4494, 1.17 ) }
    dend_27 { pt3dadd( -150.354, 108.724, -64.5952, 0.95 ) }
    dend_27 { pt3dadd( -151.081, 110.008, -65.0139, 0.22 ) }
    dend_27 { pt3dadd( -151.384, 110.539, -65.1636, 0.07 ) }
    dend_27 { pt3dadd( -151.557, 110.837, -65.2124, 0.07 ) }
    dend_27 { pt3dadd( -151.967, 111.494, -65.2553, 0.29 ) }
    dend_27 { pt3dadd( -152.533, 112.321, -65.2972, 0.07 ) }
    dend_27 { pt3dadd( -152.955, 112.917, -65.3937, 0.51 ) }
    dend_27 { pt3dadd( -153.256, 113.341, -65.5125, 0.51 ) }
    dend_27 { pt3dadd( -154.03, 114.497, -66.0281, 0.07 ) }
    dend_27 { pt3dadd( -154.461, 115.163, -66.4482, 0.95 ) }
    dend_27 { pt3dadd( -154.692, 115.498, -66.7405, 1.17 ) }
    dend_27 { pt3dadd( -155.97, 117.172, -68.6015, 0.07 ) }
    dend_27 { pt3dadd( -156.438, 117.701, -69.3438, 0.88 ) }
    dend_27 { pt3dadd( -157.382, 118.719, -70.9576, 0.22 ) }
    dend_27 { pt3dadd( -158.178, 119.524, -72.444, 0.44 ) }
    dend_27 { pt3dadd( -158.955, 120.239, -73.9307, 0.44 ) }
    dend_27 { pt3dadd( -159.318, 120.526, -74.6632, 1.09 ) }
    dend_27 { pt3dadd( -159.674, 120.676, -75.4155, 1.09 ) }
    // Section: dend_20, id: dend_20, parent: dend_16 (entry count 66/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 23.0399, -4.80432, 16.9874, 0.07 ) }
    dend_20 { pt3dadd( 30.0859, -2.17592, 22.3989, 0.07 ) }
    dend_20 { pt3dadd( 36.612, 1.06478, 28.1214, 0.07 ) }
    dend_20 { pt3dadd( 43.643, 4.14508, 33.3094, 0.07 ) }
    dend_20 { pt3dadd( 50.9737, 7.31296, 38.0067, 0.07 ) }
    dend_20 { pt3dadd( 58.6513, 11.0752, 41.576, 0.07 ) }
    dend_20 { pt3dadd( 67.2527, 13.7835, 43.7017, 0.07 ) }
    dend_20 { pt3dadd( 75.8846, 15.6528, 46.5011, 0.07 ) }
    dend_20 { pt3dadd( 84.8446, 17.6382, 47.7717, 0.07 ) }
    dend_20 { pt3dadd( 93.3738, 21.245, 47.4854, 0.07 ) }
    dend_20 { pt3dadd( 101.467, 25.7516, 47.6493, 0.07 ) }
    dend_20 { pt3dadd( 109.162, 30.8305, 46.7359, 0.07 ) }
    dend_20 { pt3dadd( 116.301, 36.2382, 44.3627, 0.07 ) }
    dend_20 { pt3dadd( 123.563, 41.9739, 43.9133, 0.07 ) }
    dend_20 { pt3dadd( 129.674, 48.8252, 45.1611, 0.07 ) }
    dend_20 { pt3dadd( 135.747, 55.394, 47.5711, 0.07 ) }
    dend_20 { pt3dadd( 142.81, 61.2866, 48.6812, 0.07 ) }
    dend_20 { pt3dadd( 150.712, 65.3296, 51.3349, 0.07 ) }
    dend_20 { pt3dadd( 158.18, 70.1413, 53.9649, 0.07 ) }
    dend_20 { pt3dadd( 166.028, 74.153, 56.8224, 0.07 ) }
    dend_20 { pt3dadd( 173.871, 78.637, 58.8757, 0.07 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 87/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 23.0399, -4.80432, 16.9874, 0.07 ) }
    dend_17 { pt3dadd( 30.3104, -1.98314, 22.9546, 0.07 ) }
    dend_17 { pt3dadd( 37.1942, -0.373433, 29.7699, 0.07 ) }
    dend_17 { pt3dadd( 45.1474, 3.08395, 34.3764, 0.07 ) }
    dend_17 { pt3dadd( 53.1855, 5.64609, 39.4015, 0.07 ) }
    dend_17 { pt3dadd( 60.8221, 7.87312, 45.159, 0.07 ) }
    dend_17 { pt3dadd( 68.0288, 10.2326, 51.3978, 0.07 ) }
    dend_17 { pt3dadd( 74.5911, 13.1902, 58.0774, 0.07 ) }
    dend_17 { pt3dadd( 79.729, 18.0881, 64.8626, 0.07 ) }
    dend_17 { pt3dadd( 85.336, 22.9312, 71.3072, 0.07 ) }
    dend_17 { pt3dadd( 91.7321, 27.7336, 77.004, 0.07 ) }
    dend_17 { pt3dadd( 97.6851, 31.5551, 83.8147, 0.07 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 99/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 3.81643, -3.33216, 28.5599, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_15 { pt3dadd( 3.12256, -0.148972, 38.9785, 0.07 ) }
    dend_15 { pt3dadd( 2.06635, 0.84841, 49.7975, 0.07 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 2/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 3.81643, -3.33216, 28.5599, 0.07 ) }
    dend_14 { pt3dadd( 2.88436, -0.698647, 37.4663, 0.07 ) }
    dend_14 { pt3dadd( 1.93109, 0.74797, 46.6383, 0.07 ) }
    dend_14 { pt3dadd( 2.09837, 2.58875, 55.7877, 0.07 ) }
    dend_14 { pt3dadd( 1.27923, 3.73916, 65.0145, 0.07 ) }
    dend_14 { pt3dadd( 1.31772, 3.92034, 74.3469, 0.07 ) }
    dend_14 { pt3dadd( 3.69299, 2.50842, 83.2628, 0.07 ) }
    dend_14 { pt3dadd( 5.38938, 1.61124, 92.3976, 0.07 ) }
    dend_14 { pt3dadd( 7.83884, -0.778851, 101.082, 0.07 ) }
    dend_14 { pt3dadd( 10.5252, -4.1357, 109.367, 0.07 ) }
    dend_14 { pt3dadd( 14.254, -8.89468, 116.479, 0.07 ) }
    dend_14 { pt3dadd( 19.182, -12.5486, 123.514, 0.07 ) }
    dend_14 { pt3dadd( 24.9495, -16.8518, 129.459, 0.07 ) }
    dend_14 { pt3dadd( 31.4954, -20.3656, 135.11, 0.07 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 16/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -14.6336, -32.7867, 32.4794, 0.07 ) }
    dend_11 { pt3dadd( -18.0945, -36.3508, 40.127, 0.07 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 18/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -14.6336, -32.7867, 32.4794, 0.07 ) }
    dend_8 { pt3dadd( -18.7802, -36.145, 38.5658, 0.07 ) }
    dend_8 { pt3dadd( -23.3236, -38.1554, 44.9559, 0.07 ) }
    dend_8 { pt3dadd( -26.4412, -41.1727, 51.7891, 0.07 ) }
    dend_8 { pt3dadd( -29.0308, -43.0974, 59.2125, 0.07 ) }
    dend_8 { pt3dadd( -30.0899, -45.5401, 66.8563, 0.07 ) }
    dend_8 { pt3dadd( -30.9135, -47.8131, 74.5811, 0.07 ) }
    dend_8 { pt3dadd( -32.2746, -49.453, 82.3898, 0.07 ) }
    dend_8 { pt3dadd( -33.296, -49.89, 90.4074, 0.07 ) }
    dend_8 { pt3dadd( -35.2868, -49.9249, 98.253, 0.07 ) }
    dend_8 { pt3dadd( -36.8723, -51.3361, 106.064, 0.07 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 29/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 4.2858, -20.3022, -0.00818735, 0.88 ) }
    dend_6 { pt3dadd( 5.26847, -21.4914, -0.869948, 0.88 ) }
    dend_6 { pt3dadd( 5.77289, -22.0231, -1.2855, 0.88 ) }
    dend_6 { pt3dadd( 6.78398, -22.9239, -2.15737, 0.73 ) }
    dend_6 { pt3dadd( 7.63241, -23.5755, -2.96203, 0.73 ) }
    dend_6 { pt3dadd( 8.31428, -24.072, -3.67888, 0.73 ) }
    dend_6 { pt3dadd( 8.50746, -24.2183, -3.89671, 0.73 ) }
    dend_6 { pt3dadd( 8.79143, -24.4296, -4.25454, 0.73 ) }
    dend_6 { pt3dadd( 9.44629, -24.9658, -4.94669, 0.73 ) }
    dend_6 { pt3dadd( 9.8894, -25.4534, -5.27369, 0.73 ) }
    dend_6 { pt3dadd( 10.3417, -26.1061, -5.42375, 0.73 ) }
    dend_6 { pt3dadd( 10.8347, -27.0247, -5.40901, 0.73 ) }
    dend_6 { pt3dadd( 11.437, -28.4811, -5.17134, 0.73 ) }
    dend_6 { pt3dadd( 11.8376, -29.7174, -4.87892, 0.73 ) }
    dend_6 { pt3dadd( 12.0904, -30.7365, -4.59146, 0.73 ) }
    dend_6 { pt3dadd( 12.3058, -32.0303, -4.20844, 0.88 ) }
    dend_6 { pt3dadd( 12.3802, -33.0718, -3.8981, 0.66 ) }
    dend_6 { pt3dadd( 12.3387, -34.3448, -3.55347, 0.66 ) }
    dend_6 { pt3dadd( 12.2483, -35.0781, -3.41567, 0.66 ) }
    dend_6 { pt3dadd( 12.1259, -35.9862, -3.33218, 0.51 ) }
    dend_6 { pt3dadd( 12.0349, -37.2557, -3.29275, 0.66 ) }
    dend_6 { pt3dadd( 12.0515, -38.1485, -3.28595, 0.66 ) }
    dend_6 { pt3dadd( 12.1143, -38.6769, -3.26974, 0.66 ) }
    dend_6 { pt3dadd( 12.4309, -40.0881, -3.15728, 0.66 ) }
    dend_6 { pt3dadd( 13.0189, -42.0367, -2.78592, 0.58 ) }
    dend_6 { pt3dadd( 13.5342, -43.3312, -2.38355, 0.58 ) }
    dend_6 { pt3dadd( 14.0189, -44.3164, -1.95798, 0.58 ) }
    dend_6 { pt3dadd( 14.2838, -44.784, -1.70667, 0.88 ) }
    dend_6 { pt3dadd( 14.6103, -45.3126, -1.33849, 0.88 ) }
    dend_6 { pt3dadd( 15.2033, -46.15, -0.497311, 0.88 ) }
    dend_6 { pt3dadd( 15.5072, -46.5554, 0.096473, 0.88 ) }
    dend_6 { pt3dadd( 15.6116, -46.7866, 0.37684, 0.88 ) }
    dend_6 { pt3dadd( 15.7169, -47.3246, 0.73292, 0.88 ) }
    dend_6 { pt3dadd( 15.7579, -47.8525, 0.913039, 0.88 ) }
    dend_6 { pt3dadd( 15.8066, -48.5616, 1.03931, 0.88 ) }
    dend_6 { pt3dadd( 15.8763, -49.5684, 1.14179, 0.88 ) }
    dend_6 { pt3dadd( 16.0457, -51.3003, 1.22037, 0.58 ) }
    dend_6 { pt3dadd( 16.2124, -52.5289, 1.218, 0.95 ) }
    dend_6 { pt3dadd( 16.3658, -53.5923, 1.20344, 1.09 ) }
    dend_6 { pt3dadd( 16.6136, -55.4532, 1.16898, 0.88 ) }
    dend_6 { pt3dadd( 16.6966, -56.5341, 1.1512, 0.88 ) }
    dend_6 { pt3dadd( 16.7235, -57.9268, 1.11692, 0.88 ) }
    dend_6 { pt3dadd( 16.5777, -60.426, 1.09525, 0.66 ) }
    dend_6 { pt3dadd( 16.3702, -61.8137, 1.1059, 0.88 ) }
    dend_6 { pt3dadd( 16.1438, -62.6665, 1.13287, 1.24 ) }
    dend_6 { pt3dadd( 15.3638, -64.475, 1.22463, 0.66 ) }
    dend_6 { pt3dadd( 14.9245, -65.2261, 1.30598, 0.66 ) }
    dend_6 { pt3dadd( 14.1333, -66.3475, 1.53271, 0.51 ) }
    dend_6 { pt3dadd( 13.5536, -67.1001, 1.76853, 0.51 ) }
    dend_6 { pt3dadd( 13.1277, -67.7841, 2.0312, 0.51 ) }
    dend_6 { pt3dadd( 13.1424, -68.2367, 2.30375, 0.51 ) }
    dend_6 { pt3dadd( 13.6413, -68.9761, 2.96931, 0.51 ) }
    dend_6 { pt3dadd( 14.4312, -69.9205, 3.89841, 0.29 ) }
    dend_6 { pt3dadd( 15.2977, -70.8313, 4.80389, 0.51 ) }
    dend_6 { pt3dadd( 16.2463, -71.8559, 5.73172, 0.44 ) }
    dend_6 { pt3dadd( 17.0157, -72.7984, 6.52528, 0.44 ) }
    dend_6 { pt3dadd( 17.7391, -73.8683, 7.43305, 0.66 ) }
    dend_6 { pt3dadd( 17.9464, -74.2419, 7.7459, 0.88 ) }
    dend_6 { pt3dadd( 18.1888, -74.8302, 8.26424, 0.88 ) }
    dend_6 { pt3dadd( 18.5328, -76.0667, 9.41772, 0.36 ) }
    dend_6 { pt3dadd( 18.7347, -77.2218, 10.6072, 0.36 ) }
    dend_6 { pt3dadd( 18.8497, -78.4015, 11.8079, 0.22 ) }
    dend_6 { pt3dadd( 18.8688, -78.5878, 12.0061, 0.22 ) }
    dend_6 { pt3dadd( 18.9158, -79.3764, 12.9799, 0.29 ) }
    dend_6 { pt3dadd( 18.9033, -79.7534, 13.6565, 0.07 ) }
    dend_6 { pt3dadd( 18.9501, -79.6568, 14.5225, 0.15 ) }
    dend_6 { pt3dadd( 21.7552, -88.7957, 18.1869, 0.15 ) }
    dend_6 { pt3dadd( 23.9568, -97.8729, 22.3789, 0.15 ) }
    dend_6 { pt3dadd( 26.0488, -105.977, 28.275, 0.15 ) }
    dend_6 { pt3dadd( 29.4545, -114.099, 33.496, 0.15 ) }
    dend_6 { pt3dadd( 33.3169, -120.636, 40.3634, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_6 { pt3dadd( 36.7342, -127.04, 47.5837, 0.15 ) }
    dend_6 { pt3dadd( 39.8707, -134.136, 54.2634, 0.15 ) }
    dend_6 { pt3dadd( 42.3981, -140.66, 61.7374, 0.15 ) }
    dend_6 { pt3dadd( 43.8542, -147.917, 68.8116, 0.15 ) }
    dend_6 { pt3dadd( 45.6795, -154.813, 76.1552, 0.15 ) }
    dend_6 { pt3dadd( 47.2694, -162.742, 82.433, 0.15 ) }
    dend_6 { pt3dadd( 47.0901, -171.025, 88.4481, 0.15 ) }
    dend_6 { pt3dadd( 47.2501, -179.312, 94.4577, 0.15 ) }
    dend_6 { pt3dadd( 46.0057, -188.382, 99.0409, 0.15 ) }
    dend_6 { pt3dadd( 43.9102, -197.685, 102.766, 0.15 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 10/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 4.2858, -20.3022, -0.00818735, 1.53 ) }
    dend_3 { pt3dadd( 3.8224, -21.0453, -0.939341, 1.53 ) }
    dend_3 { pt3dadd( 3.1088, -22.0681, -2.24494, 1.24 ) }
    dend_3 { pt3dadd( 2.46926, -22.9847, -3.41504, 1.09 ) }
    dend_3 { pt3dadd( 1.88158, -23.827, -4.49026, 0.88 ) }
    dend_3 { pt3dadd( 1.16609, -24.8525, -5.79932, 1.09 ) }
    dend_3 { pt3dadd( 0.801942, -25.3744, -6.46555, 1.31 ) }
    dend_3 { pt3dadd( 0.353256, -26.0584, -7.3638, 1.68 ) }
    // Section: dend_50, id: dend_50, parent: dend_46 (entry count 18/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -13.3437, -49.4085, 17.0659, 0.07 ) }
    dend_50 { pt3dadd( -12.1238, -54.5385, 23.4079, 0.07 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 20/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -13.3437, -49.4085, 17.0659, 0.07 ) }
    dend_47 { pt3dadd( -12.4826, -58.2938, 22.0211, 0.07 ) }
    dend_47 { pt3dadd( -10.9133, -67.0994, 26.9447, 0.07 ) }
    dend_47 { pt3dadd( -8.90908, -75.0632, 33.0114, 0.07 ) }
    dend_47 { pt3dadd( -8.80117, -83.67, 38.5027, 0.07 ) }
    dend_47 { pt3dadd( -8.49243, -91.8542, 44.5991, 0.07 ) }
    dend_47 { pt3dadd( -9.18906, -101.092, 48.8912, 0.07 ) }
    dend_47 { pt3dadd( -8.24841, -110.301, 53.1999, 0.07 ) }
    dend_47 { pt3dadd( -5.56337, -119.064, 57.6995, 0.07 ) }
    dend_47 { pt3dadd( -3.99056, -128.392, 61.5409, 0.07 ) }
    dend_47 { pt3dadd( -0.948061, -137.546, 64.8857, 0.07 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 31/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -12.8626, 28.5162, 17.4761, 0.07 ) }
    dend_43 { pt3dadd( -14.1119, 36.6861, 16.9974, 0.07 ) }
    dend_43 { pt3dadd( -15.7449, 44.8008, 16.8541, 0.07 ) }
    dend_43 { pt3dadd( -16.6801, 53.0264, 16.8998, 0.07 ) }
    dend_43 { pt3dadd( -18.1642, 61.1694, 17.056, 0.07 ) }
    dend_43 { pt3dadd( -19.2116, 69.2239, 15.4544, 0.07 ) }
    dend_43 { pt3dadd( -19.1641, 77.4813, 14.8637, 0.07 ) }
    dend_43 { pt3dadd( -17.6965, 85.6232, 15.1663, 0.07 ) }
    dend_43 { pt3dadd( -15.1306, 93.4927, 15.0102, 0.07 ) }
    dend_43 { pt3dadd( -12.5361, 101.115, 13.0881, 0.07 ) }
    dend_43 { pt3dadd( -10.9996, 108.804, 10.4307, 0.07 ) }
    dend_43 { pt3dadd( -10.0393, 116.265, 6.97489, 0.07 ) }
    dend_43 { pt3dadd( -8.23598, 123.664, 3.7275, 0.07 ) }
    dend_43 { pt3dadd( -4.7984, 130.448, 0.458187, 0.07 ) }
    dend_43 { pt3dadd( -0.163746, 136.358, -3.02549, 0.07 ) }
    dend_43 { pt3dadd( 5.09663, 141.463, -6.87324, 0.07 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 47/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -12.8626, 28.5162, 17.4761, 0.07 ) }
    dend_42 { pt3dadd( -12.8575, 41.0436, 18.1655, 0.07 ) }
    dend_42 { pt3dadd( -14.4761, 53.4132, 19.5012, 0.07 ) }
    dend_42 { pt3dadd( -15.0591, 65.6374, 22.265, 0.07 ) }
    dend_42 { pt3dadd( -16.0944, 77.9742, 24.2998, 0.07 ) }
    dend_42 { pt3dadd( -17.2013, 90.4595, 24.8516, 0.07 ) }
    dend_42 { pt3dadd( -20.3004, 102.511, 26.4477, 0.07 ) }
    dend_42 { pt3dadd( -21.0944, 114.958, 27.8119, 0.07 ) }
    dend_42 { pt3dadd( -20.7536, 127.497, 28.0606, 0.07 ) }
    dend_42 { pt3dadd( -20.0194, 139.957, 26.7853, 0.07 ) }
    dend_42 { pt3dadd( -21.6161, 152.125, 24.1766, 0.07 ) }
    dend_42 { pt3dadd( -21.1589, 164.635, 23.3478, 0.07 ) }
    dend_42 { pt3dadd( -20.443, 177.016, 21.4466, 0.07 ) }
    dend_42 { pt3dadd( -18.453, 189.403, 21.5212, 0.07 ) }
    dend_42 { pt3dadd( -14.6291, 201.24, 19.8843, 0.07 ) }
    dend_42 { pt3dadd( -12.1488, 213.305, 17.4966, 0.07 ) }
    dend_42 { pt3dadd( -8.27164, 225.154, 16.0912, 0.07 ) }
    dend_42 { pt3dadd( -6.98142, 237.337, 13.3877, 0.07 ) }
    dend_42 { pt3dadd( -8.27586, 249.016, 8.99035, 0.07 ) }
    dend_42 { pt3dadd( -11.4899, 260.928, 6.71389, 0.07 ) }
    dend_42 { pt3dadd( -16.6176, 272.15, 4.43269, 0.07 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 68/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -108.668, 95.7342, 34.2005, 0.07 ) }
    dend_40 { pt3dadd( -118.009, 104.9, 36.3025, 0.07 ) }
    dend_40 { pt3dadd( -126.059, 115.302, 37.9485, 0.07 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 71/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -108.668, 95.7342, 34.2005, 0.07 ) }
    dend_39 { pt3dadd( -115.866, 101.972, 35.4585, 0.07 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 73/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -145.056, 85.5253, 24.4726, 0.07 ) }
    dend_32 { pt3dadd( -153.091, 91.2297, 26.3973, 0.07 ) }
    dend_32 { pt3dadd( -160.893, 96.7481, 29.4734, 0.07 ) }
    dend_32 { pt3dadd( -168.24, 101.553, 34.3454, 0.07 ) }
    dend_32 { pt3dadd( -176.473, 104.274, 39.4057, 0.07 ) }
    dend_32 { pt3dadd( -184.122, 106.567, 45.4917, 0.07 ) }
    dend_32 { pt3dadd( -191.141, 108.604, 52.3758, 0.07 ) }
    dend_32 { pt3dadd( -199.089, 111.65, 57.6992, 0.07 ) }
    dend_32 { pt3dadd( -207.362, 115.276, 62.0831, 0.07 ) }
    dend_32 { pt3dadd( -214.995, 118.95, 67.4717, 0.07 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 83/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -145.056, 85.5253, 24.4726, 0.07 ) }
    dend_31 { pt3dadd( -157.542, 93.3009, 28.0078, 0.07 ) }
    dend_31 { pt3dadd( -168.788, 101.835, 33.4429, 0.07 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 86/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -159.674, 120.676, -75.4155, 0.36 ) }
    dend_29 { pt3dadd( -160.017, 120.352, -76.2047, 0.36 ) }
    dend_29 { pt3dadd( -160.634, 119.839, -77.2865, 0.36 ) }
    dend_29 { pt3dadd( -161.141, 119.499, -78.1324, 0.58 ) }
    dend_29 { pt3dadd( -162.117, 118.901, -79.8581, 0.58 ) }
    dend_29 { pt3dadd( -162.972, 118.319, -81.4527, 0.36 ) }
    dend_29 { pt3dadd( -163.967, 117.644, -83.2822, 0.36 ) }
    dend_29 { pt3dadd( -165.275, 116.879, -85.4854, 0.36 ) }
    dend_29 { pt3dadd( -166.191, 116.466, -86.9296, 0.51 ) }
    dend_29 { pt3dadd( -166.892, 116.279, -88.0023, 0.36 ) }
    dend_29 { pt3dadd( -167.723, 116.297, -89.1973, 0.58 ) }
    dend_29 { pt3dadd( -169.036, 116.702, -90.8459, 0.36 ) }
    dend_29 { pt3dadd( -170.049, 117.191, -91.9815, 0.88 ) }
    dend_29 { pt3dadd( -171.558, 118.05, -93.5382, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_29 { pt3dadd( -172.423, 118.559, -94.3231, 0.73 ) }
    dend_29 { pt3dadd( -173.689, 119.362, -95.3483, 0.07 ) }
    dend_29 { pt3dadd( -174.503, 119.946, -95.9715, 0.29 ) }
    dend_29 { pt3dadd( -176.514, 121.47, -97.4233, 0.07 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 4/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -159.674, 120.676, -75.4155, 0.07 ) }
    dend_28 { pt3dadd( -159.877, 119.331, -76.0417, 0.07 ) }
    dend_28 { pt3dadd( -159.942, 118.353, -76.4565, 0.73 ) }
    dend_28 { pt3dadd( -159.966, 117.163, -76.9477, 0.15 ) }
    dend_28 { pt3dadd( -159.967, 116.562, -77.1815, 0.15 ) }
    dend_28 { pt3dadd( -159.972, 115.748, -77.4845, 0.36 ) }
    dend_28 { pt3dadd( -159.987, 114.824, -77.8284, 0.07 ) }
    dend_28 { pt3dadd( -159.987, 113.727, -78.2127, 0.8 ) }
    dend_28 { pt3dadd( -159.971, 112.849, -78.5119, 0.15 ) }
    dend_28 { pt3dadd( -159.977, 112.466, -78.6507, 0.44 ) }
    dend_28 { pt3dadd( -160.083, 110.889, -79.2279, 0.15 ) }
    dend_28 { pt3dadd( -160.187, 109.893, -79.5792, 0.44 ) }
    dend_28 { pt3dadd( -160.359, 108.6, -80.0029, 0.15 ) }
    dend_28 { pt3dadd( -160.551, 107.356, -80.3558, 0.29 ) }
    dend_28 { pt3dadd( -160.726, 106.302, -80.6422, 0.07 ) }
    dend_28 { pt3dadd( -160.858, 105.525, -80.8471, 0.07 ) }
    dend_28 { pt3dadd( -160.938, 105.066, -80.9456, 0.29 ) }
    dend_28 { pt3dadd( -161.154, 103.889, -81.1181, 0.07 ) }
    dend_28 { pt3dadd( -161.304, 103.145, -81.1629, 0.51 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 23/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 97.6851, 31.5551, 83.8147, 0.07 ) }
    dend_19 { pt3dadd( 106.963, 36.0586, 92.3582, 0.07 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 25/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 97.6851, 31.5551, 83.8147, 0.07 ) }
    dend_18 { pt3dadd( 105.51, 35.2563, 90.198, 0.07 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 27/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -36.8723, -51.3361, 106.064, 0.07 ) }
    dend_10 { pt3dadd( -43.9064, -51.3818, 114.105, 0.07 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 29/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -36.8723, -51.3361, 106.064, 0.07 ) }
    dend_9 { pt3dadd( -36.57, -54.2274, 115.574, 0.07 ) }
    dend_9 { pt3dadd( -38.7424, -56.3081, 125.052, 0.07 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 32/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 0.353256, -26.0584, -7.3638, 0.22 ) }
    dend_5 { pt3dadd( -0.085479, -27.6394, -8.20307, 0.22 ) }
    dend_5 { pt3dadd( -0.378587, -28.6756, -8.68135, 0.88 ) }
    dend_5 { pt3dadd( -0.770122, -29.9394, -9.08009, 0.44 ) }
    dend_5 { pt3dadd( -0.998791, -30.6399, -9.25046, 0.44 ) }
    dend_5 { pt3dadd( -1.35126, -31.7555, -9.41663, 0.44 ) }
    dend_5 { pt3dadd( -1.76651, -33.0376, -9.52981, 0.22 ) }
    dend_5 { pt3dadd( -2.07252, -34.0578, -9.52972, 0.22 ) }
    dend_5 { pt3dadd( -2.55944, -35.5814, -9.46111, 1.09 ) }
    dend_5 { pt3dadd( -2.72592, -36.0802, -9.40247, 1.31 ) }
    dend_5 { pt3dadd( -3.17334, -37.605, -9.15652, 0.22 ) }
    dend_5 { pt3dadd( -3.37236, -38.4495, -8.99703, 0.22 ) }
    dend_5 { pt3dadd( -3.55871, -39.6251, -8.77794, 0.22 ) }
    dend_5 { pt3dadd( -3.60673, -40.3253, -8.68511, 0.44 ) }
    dend_5 { pt3dadd( -3.59123, -41.4128, -8.596, 0.22 ) }
    dend_5 { pt3dadd( -3.50969, -42.3409, -8.52721, 0.22 ) }
    dend_5 { pt3dadd( -3.39136, -43.0734, -8.48996, 0.22 ) }
    dend_5 { pt3dadd( -3.05571, -44.6225, -8.42068, 0.15 ) }
    dend_5 { pt3dadd( -2.77169, -45.7836, -8.36308, 0.15 ) }
    dend_5 { pt3dadd( -2.50241, -46.8858, -8.3059, 0.15 ) }
    dend_5 { pt3dadd( -2.23937, -48.0541, -8.25453, 0.15 ) }
    dend_5 { pt3dadd( -1.89801, -49.5859, -8.20022, 0.15 ) }
    dend_5 { pt3dadd( -1.62044, -50.6752, -8.17261, 0.22 ) }
    dend_5 { pt3dadd( -2.74489, -60.6038, -7.20283, 0.22 ) }
    dend_5 { pt3dadd( -4.88084, -70.4092, -6.93124, 0.22 ) }
    dend_5 { pt3dadd( -6.80378, -80.2418, -7.56792, 0.22 ) }
    dend_5 { pt3dadd( -8.64756, -90.0674, -8.48493, 0.22 ) }
    dend_5 { pt3dadd( -10.8102, -99.3264, -11.7062, 0.22 ) }
    dend_5 { pt3dadd( -11.2362, -108.485, -15.7966, 0.22 ) }
    dend_5 { pt3dadd( -10.6227, -117.845, -19.3744, 0.22 ) }
    dend_5 { pt3dadd( -9.19704, -127.272, -22.5173, 0.22 ) }
    dend_5 { pt3dadd( -6.15362, -136.102, -26.1989, 0.22 ) }
    dend_5 { pt3dadd( -4.16545, -145.422, -29.3556, 0.22 ) }
    dend_5 { pt3dadd( -3.62848, -154.814, -32.8587, 0.22 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 66/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 0.353256, -26.0584, -7.3638, 0.73 ) }
    dend_4 { pt3dadd( 1.51636, -27.8202, -8.975, 0.73 ) }
    dend_4 { pt3dadd( 2.16178, -28.6794, -9.64172, 0.73 ) }
    dend_4 { pt3dadd( 2.62799, -29.3569, -10.1265, 0.73 ) }
    dend_4 { pt3dadd( 3.0747, -30.0926, -10.6308, 0.73 ) }
    dend_4 { pt3dadd( 3.41217, -30.7172, -11.0552, 0.73 ) }
    dend_4 { pt3dadd( 3.69525, -31.2849, -11.4532, 0.73 ) }
    dend_4 { pt3dadd( 4.00697, -32.0547, -11.8715, 0.73 ) }
    dend_4 { pt3dadd( 4.46965, -33.2852, -12.5895, 0.73 ) }
    dend_4 { pt3dadd( 4.65213, -33.7265, -12.9923, 0.73 ) }
    dend_4 { pt3dadd( 4.78351, -33.9444, -13.3417, 0.73 ) }
    dend_4 { pt3dadd( 4.9315, -34.0277, -13.7474, 0.73 ) }
    dend_4 { pt3dadd( 5.09764, -33.9932, -14.2475, 0.73 ) }
    dend_4 { pt3dadd( 5.21271, -33.8483, -14.6801, 0.73 ) }
    dend_4 { pt3dadd( 5.56649, -33.4018, -15.597, 0.73 ) }
    dend_4 { pt3dadd( 5.94701, -32.9647, -16.4278, 0.73 ) }
    dend_4 { pt3dadd( 6.32588, -32.578, -17.1684, 0.58 ) }
    dend_4 { pt3dadd( 6.66946, -32.2459, -17.8475, 0.58 ) }
    dend_4 { pt3dadd( 7.04428, -31.8475, -18.7842, 0.44 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 85/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -0.948061, -137.546, 64.8857, 0.07 ) }
    dend_49 { pt3dadd( 0.314775, -146.586, 69.4083, 0.07 ) }
    dend_49 { pt3dadd( 2.99188, -154.948, 74.5743, 0.07 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 88/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -0.948061, -137.546, 64.8857, 0.07 ) }
    dend_48 { pt3dadd( 0.106358, -144.8, 68.6879, 0.07 ) }
    dend_48 { pt3dadd( 2.46224, -151.836, 72.3127, 0.07 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_52, dend_51, dend_24, dend_21, dend_0, dend_57, dend_56, dend_54, dend_53, dend_36, dend_25, dend_23, dend_22, dend_12, dend_1, dend_59, dend_58, dend_44, dend_37, dend_33, dend_26, dend_16, dend_13, dend_7, dend_2, dend_46, dend_45, dend_41, dend_38, dend_35, dend_34, dend_30, dend_27, dend_20, dend_17, dend_15, dend_14, dend_11, dend_8, dend_6, dend_3, dend_50, dend_47, dend_43, dend_42, dend_40, dend_39, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_10, dend_9, dend_5, dend_4, dend_49, dend_48]}
    ModelViewParmSubset_2 = new SectionList()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_55, dend_52, dend_51, dend_24, dend_21, dend_0, dend_57, dend_56, dend_54, dend_53, dend_36, dend_25, dend_23, dend_22, dend_12, dend_1, dend_59, dend_58, dend_44, dend_37, dend_33, dend_26, dend_16, dend_13, dend_7, dend_2, dend_46, dend_45, dend_41, dend_38, dend_35, dend_34, dend_30, dend_27, dend_20, dend_17, dend_15, dend_14, dend_11, dend_8, dend_6, dend_3, dend_50, dend_47, dend_43, dend_42, dend_40, dend_39, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_10, dend_9, dend_5, dend_4, dend_49, dend_48]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_20 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_51 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_57 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_56 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_54 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_53 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_23 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_22 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_44 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_7 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_45 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_38 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_35 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_34 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_30 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_27 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_20 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_17 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_14 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_8 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_6 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_47 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_43 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_42 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_32 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_5 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_12 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_1 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_24 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_2 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_25 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_36 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_3 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_52 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_33 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_37 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_16 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_55 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_21 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_4 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_13 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_26 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_41 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_15 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_11 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_46 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_50 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_10 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_18 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_19 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_9 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_58 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_59 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_39 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_40 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_48 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_49 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_31 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_28 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_29 OneSecGrp_SectionRef_54.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, axon_0, axon_0, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_36, dend_36, dend_36, dend_36, dend_36, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_12, dend_1, dend_1, dend_1, axon_1, axon_1, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_39, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_19, dend_18, dend_10, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_49, dend_49, dend_48, dend_48]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_12 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_50 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.6794998E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cSTUT_7_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cSTUT_7_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_51 nseg = 7
    dend_57 nseg = 5
    dend_56 nseg = 7
    dend_54 nseg = 3
    dend_53 nseg = 15
    dend_23 nseg = 11
    dend_22 nseg = 9
    dend_44 nseg = 3
    dend_7 nseg = 3
    dend_45 nseg = 9
    dend_38 nseg = 7
    dend_35 nseg = 7
    dend_34 nseg = 11
    dend_30 nseg = 7
    dend_27 nseg = 9
    dend_20 nseg = 9
    dend_17 nseg = 5
    dend_14 nseg = 7
    dend_8 nseg = 5
    dend_6 nseg = 11
    dend_47 nseg = 5
    dend_43 nseg = 7
    dend_42 nseg = 13
    dend_32 nseg = 5
    dend_5 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cSTUT189_L5_NBC_031c89778f_0_0


