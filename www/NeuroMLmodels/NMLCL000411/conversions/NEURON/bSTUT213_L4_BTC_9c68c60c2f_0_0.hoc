// Cell: bSTUT213_L4_BTC_9c68c60c2f_0_0
/*
{
  "id" : "bSTUT213_L4_BTC_9c68c60c2f_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.41353, 11.9919, 1.31418, 2.57576", "-2.15404, 10.8832, 1.19952, 4.64379", "-1.89456, 9.77439, 1.08486, 7.1282", "-1.63508, 8.66563, 0.970208, 9.55084", "-1.37559, 7.55686, 0.855552, 11.3429", "-1.11611, 6.44809, 0.740896, 12.5314", "-0.856626, 5.33932, 0.626239, 13.4739", "-0.597143, 4.23056, 0.511583, 13.1445", "-0.337659, 3.12179, 0.396927, 12.6062", "-0.0781762, 2.01302, 0.282271, 12.0679", "0.181307, 0.904256, 0.167615, 11.529", "0.44079, -0.204511, 0.0529586, 10.9839", "0.700273, -1.31328, -0.0616975, 10.4042", "0.959757, -2.42205, -0.176354, 9.22811", "1.21924, -3.53081, -0.29101, 7.93477", "1.47872, -4.63958, -0.405666, 7.09354", "1.73821, -5.74835, -0.520322, 6.0452", "1.99769, -6.85711, -0.634978, 4.95117", "2.25717, -7.96588, -0.749635, 4.10786", "2.51666, -9.07465, -0.864291, 3.50414", "2.77614, -10.1834, -0.978947, 3.28095" ]
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "1.75135, -9.07039, 1.8584, 2.77", "2.13433, -13.6092, 1.8584, 3.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999977243497945
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-5.09865, 9.72061, -3.7416, 1.38", "-6.32171, 11.6332, -3.96547, 1.38", "-8.23673, 14.6279, -4.31599, 1.66", "-9.87185, 17.1849, -4.61527, 1.38", "-11.1794, 19.2297, -4.85461, 1.11", "-12.2121, 20.8446, -5.04363, 1.11", "-14.5994, 24.5779, -5.4806, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999977243497945
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "6.01135, 6.08211, 6.4384, 1.38", "6.01695, 10.6921, 7.74088, 1.38", "6.17483, 13.5414, 8.54875, 1.38", "6.64283, 18.5235, 10.1331, 1.38", "7.28252, 23.8373, 11.9032, 1.38", "7.76399, 27.8368, 13.2355, 1.38", "8.19362, 31.4056, 14.4244, 0.83", "8.4742, 34.8751, 15.6615, 1.38", "8.88511, 38.9922, 17.1941, 1.38", "9.82396, 43.9021, 18.9901, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999977243497945,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.77614, -10.1834, -0.978947, 0.694477", "6.19422, -24.7888, -0.978947, 0.694477", "9.61231, -39.3941, -0.978947, 0.694477" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "2.13433, -13.6092, 1.8584, 2.22", "4.42368, -17.7505, 1.3519, 2.22", "5.61462, -19.9048, 1.08841, 1.66" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "2.13433, -13.6092, 1.8584, 0.83", "-0.633681, -15.7031, 3.68611, 0.83", "-2.47996, -17.1538, 5.22059, 1.11", "-5.0272, -19.1552, 7.33766, 0.83", "-6.98371, -20.6924, 8.96377, 0.83", "-10.301, -23.2989, 11.7208, 1.38", "-13.4717, -25.7902, 14.3561, 1.38", "-16.191, -27.728, 16.9268, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-14.5994, 24.5779, -5.4806, 0.55", "-18.0158, 24.9579, -4.86579, 0.55", "-19.68, 24.9303, -4.34454, 0.55", "-20.8762, 24.8419, -3.89694, 0.55", "-22.8477, 24.6212, -3.12055, 1.11", "-26.2951, 24.1369, -1.7699, 0.83", "-29.769, 23.5202, -0.381297, 0.83", "-33.4264, 22.612, 1.22043, 0.55", "-35.4103, 22.0162, 2.09668, 1.38", "-36.8494, 21.5087, 2.73641, 0.28", "-38.1581, 20.9734, 3.31934, 0.83", "-39.7428, 20.3226, 4.05802, 0.28", "-40.8473, 19.8562, 4.60649, 0.55", "-42.2397, 19.3408, 5.24895, 0.55", "-44.4527, 18.5912, 6.26494, 0.55", "-46.3624, 17.9563, 7.1311, 0.55", "-49.6248, 16.9503, 8.64918, 0.55", "-51.0, 16.5572, 9.26263, 0.55", "-53.6269, 15.8425, 10.3748, 0.83", "-55.4692, 15.3815, 11.1157, 0.83", "-56.9296, 15.038, 11.6428, 0.83", "-60.0345, 14.3668, 12.715, 0.83", "-61.1819, 14.1069, 13.0779, 0.83", "-63.9607, 13.4405, 14.035, 0.83", "-67.7599, 12.4423, 15.3885, 0.83", "-68.7146, 12.2122, 15.7253, 0.83", "-70.7931, 11.7546, 16.422, 0.28", "-71.9453, 11.476, 16.7394, 0.83", "-74.6995, 10.7913, 17.4234, 0.28", "-76.6149, 10.3088, 17.7785, 0.83", "-78.8372, 9.75381, 18.0771, 0.28", "-79.3175, 9.63261, 18.1344, 0.55", "-82.0528, 9.02412, 18.35, 0.55", "-84.0166, 8.64994, 18.4485, 0.28", "-86.2232, 8.25629, 18.3484, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-14.5994, 24.5779, -5.4806, 1.11", "-15.8995, 28.5691, -8.22382, 1.11", "-16.6303, 30.7571, -9.50163, 1.11", "-17.5117, 33.3959, -11.0428, 1.11", "-18.2527, 35.6143, -12.3383, 1.11", "-19.1252, 38.2264, -13.8639, 0.83", "-20.0187, 40.9015, -15.4262, 0.83", "-20.6548, 43.0228, -16.3402, 1.11" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "9.82396, 43.9021, 18.9901, 0.83", "8.95404, 46.9741, 19.9359, 0.83", "8.30339, 49.2718, 20.6433, 0.83", "7.79943, 51.0515, 21.1913, 0.83", "7.01298, 53.8287, 22.0463, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "9.82396, 43.9021, 18.9901, 0.83", "14.4376, 47.7423, 19.0259, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "9.61231, -39.3941, -0.978947, 0.694477", "13.0304, -53.9995, -0.978947, 0.694477", "16.4485, -68.6049, -0.978947, 0.694477" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "5.61462, -19.9048, 1.08841, 0.83", "6.10156, -21.6604, -1.93496, 0.83", "6.36766, -22.4767, -3.73972, 0.83", "6.68135, -23.3506, -6.01299, 0.83", "7.86127, -26.7608, -15.3701, 0.83", "8.51907, -28.6372, -20.5578, 0.83", "9.50489, -31.4493, -28.3323, 0.55", "9.81414, -32.7036, -32.1347, 0.83", "10.0791, -34.0324, -36.5481, 0.83", "10.3152, -35.1564, -40.7373, 1.11", "10.4219, -35.3308, -41.461, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "5.61462, -19.9048, 1.08841, 1.66", "6.49788, -22.1348, 1.09787, 1.66", "7.77203, -24.8277, 1.06098, 1.11", "8.73649, -26.6146, 1.02089, 1.11", "10.5838, -29.3906, 1.19816, 1.11", "12.1609, -31.7605, 1.3495, 1.11", "13.264, -33.4182, 1.45536, 1.38", "14.5788, -35.1902, 1.57249, 1.11", "15.4158, -36.1755, 1.67598, 1.11", "19.0249, -39.5866, 2.25428, 1.66" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-16.191, -27.728, 16.9268, 0.28", "-15.575, -29.8209, 20.2993, 0.28", "-15.3654, -30.6818, 21.839, 1.11", "-14.6097, -33.5278, 27.2577, 0.55", "-14.3581, -34.4086, 28.8879, 0.83", "-13.8012, -36.3584, 32.4966, 0.83", "-13.1594, -38.6058, 36.6559, 0.55", "-12.7929, -39.8728, 39.119, 1.11", "-12.0781, -42.0661, 43.5642, 0.55", "-11.8825, -42.8444, 45.1345, 1.11" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-16.191, -27.728, 16.9268, 0.83", "-19.8131, -27.781, 19.7121, 0.83", "-22.5428, -27.7983, 21.7564, 1.11", "-25.2638, -27.7261, 23.7001, 0.83", "-28.353, -27.5804, 25.7889, 0.83", "-32.1628, -27.4007, 28.3648, 0.83", "-35.7994, -27.2291, 30.8238, 0.83", "-39.8126, -27.0378, 33.4552, 1.11", "-44.0895, -26.7702, 36.0736, 1.11", "-47.9114, -26.4816, 38.3043, 1.11" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-86.2232, 8.25629, 18.3484, 0.28", "-86.1485, 6.87176, 18.7126, 0.28", "-86.122, 6.38021, 18.8418, 0.83", "-85.9881, 3.89895, 19.4944, 0.28" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-86.2232, 8.25629, 18.3484, 0.28", "-89.4127, 8.38461, 18.6376, 0.28", "-90.4679, 8.36587, 18.4016, 0.55", "-92.7327, 8.19907, 17.551, 0.28", "-94.733, 7.98207, 16.6768, 0.83", "-97.1156, 7.7236, 15.6356, 0.28", "-99.4013, 7.47566, 14.6367, 0.28", "-103.15, 6.8589, 12.2832, 0.28", "-103.894, 6.71207, 11.7086, 0.83", "-104.997, 6.45906, 10.6035, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-20.6548, 43.0228, -16.3402, 0.55", "-21.9704, 43.3215, -17.3695, 0.55", "-24.2898, 43.8482, -19.1842, 0.55", "-26.529, 44.3566, -20.9361, 0.83", "-30.5689, 45.274, -24.097, 0.55", "-33.1012, 45.849, -26.0783, 1.11" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-20.6548, 43.0228, -16.3402, 0.55", "-19.4488, 46.3646, -17.2025, 0.55", "-18.9279, 48.0264, -17.5149, 0.55", "-18.529, 49.4582, -17.6462, 0.83", "-18.0216, 51.3472, -17.7204, 0.55", "-17.7052, 52.5615, -17.7576, 0.83", "-17.228, 54.3714, -17.7861, 0.55", "-16.8914, 55.7516, -17.7207, 0.83", "-16.3399, 57.7346, -17.6793, 0.28", "-15.985, 58.8428, -17.6915, 0.83", "-15.3273, 60.6671, -17.757, 0.55", "-14.7847, 62.0977, -17.8365, 0.83", "-13.9054, 64.289, -18.0142, 0.55", "-12.8507, 66.7395, -18.2921, 0.83", "-11.8293, 69.0088, -18.6425, 0.83", "-10.4456, 72.0298, -19.1033, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "7.01298, 53.8287, 22.0463, 0.83", "8.43087, 58.007, 23.2765, 0.83", "9.76942, 62.6273, 24.5492, 0.83", "10.4648, 65.5046, 25.4133, 0.83", "11.3154, 69.5177, 26.6909, 0.83", "12.2141, 74.0435, 28.1369, 0.83", "13.1147, 79.0688, 29.7161, 0.83", "13.8391, 83.8711, 31.265, 0.83", "14.4608, 88.6517, 32.893, 0.83", "14.7658, 91.5333, 33.8171, 0.55", "15.048, 94.6755, 34.6768, 0.55", "15.3352, 97.2966, 35.2188, 0.83", "15.6742, 99.6256, 35.5192, 0.83", "16.0762, 101.761, 35.6831, 0.55", "16.6844, 104.44, 35.6418, 0.83", "17.2064, 106.609, 35.5437, 0.55", "17.6402, 108.472, 35.4408, 0.83", "18.2626, 111.371, 35.2802, 0.55", "18.8253, 114.288, 35.0617, 0.83", "19.3325, 116.933, 34.5981, 0.55", "19.5809, 118.371, 34.263, 0.55", "19.9114, 120.601, 33.7059, 0.83", "20.3118, 123.797, 32.8565, 0.83", "20.618, 126.446, 32.1507, 0.55", "21.1943, 132.456, 30.4853, 0.83", "21.4906, 135.947, 29.5109, 0.83", "21.8514, 140.208, 28.3927, 0.83", "22.0648, 142.802, 27.8379, 0.83", "22.1711, 144.893, 27.5188, 0.83", "22.2064, 146.968, 27.3665, 0.55", "22.1671, 149.346, 27.3529, 0.55", "22.0288, 152.064, 27.3004, 0.83", "21.6067, 157.123, 27.1316, 0.83", "21.2638, 161.122, 26.9602, 1.11", "20.9737, 164.162, 26.7963, 0.55", "20.571, 167.502, 26.5944, 1.11", "19.8256, 172.206, 26.2892, 0.83", "19.136, 176.109, 25.9595, 0.83", "18.652, 178.705, 25.6347, 0.83", "18.2335, 181.286, 25.2342, 0.55", "17.7277, 184.904, 24.6033, 0.55", "17.6394, 185.754, 24.4399, 0.55", "17.4307, 188.905, 23.8836, 0.55", "17.3552, 191.2, 23.4255, 0.28", "17.3903, 194.866, 22.5505, 0.55", "17.6493, 199.024, 21.4216, 0.55", "17.8849, 201.361, 20.7376, 0.55", "18.3372, 205.431, 19.5372, 0.83", "18.8634, 209.731, 18.2622, 0.83", "19.2387, 212.779, 17.2113, 0.83", "19.4315, 214.538, 16.4979, 0.55", "19.5992, 216.098, 15.8142, 0.83", "19.7541, 218.611, 14.743, 0.83", "19.7717, 221.809, 13.4182, 0.83", "19.6094, 225.86, 12.0364, 0.83", "19.4355, 228.428, 11.2436, 0.83", "19.24, 230.807, 10.4344, 0.83", "18.9469, 234.169, 9.19446, 0.55", "18.5603, 237.682, 7.8622, 0.55", "18.2739, 240.241, 6.9377, 0.55", "17.9933, 243.082, 5.94034, 0.83", "17.6345, 247.405, 4.3613, 1.11", "17.3909, 251.926, 2.83707, 0.55", "17.3827, 254.559, 2.10805, 0.55", "17.457, 257.621, 1.41142, 0.55", "17.6498, 260.66, 0.848784, 0.83", "18.0952, 264.321, 0.346802, 0.83", "18.9632, 269.354, -0.157072, 0.83", "20.3486, 275.343, -0.77453, 0.83", "21.3093, 278.803, -1.19956, 0.55", "22.3611, 282.216, -1.69469, 0.55", "23.7971, 286.479, -2.37893, 0.83", "24.4479, 288.475, -2.76889, 0.83", "25.301, 291.642, -3.47989, 0.83", "26.0045, 295.415, -4.30454, 0.83", "26.2634, 298.571, -4.87301, 0.28", "26.2347, 300.222, -5.12456, 0.83", "25.8362, 304.97, -5.77425, 0.83", "25.3234, 308.771, -6.21047, 0.83", "24.5591, 312.492, -6.51463, 0.83", "23.5677, 316.34, -6.70575, 0.83", "22.8079, 318.906, -6.78122, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "7.01298, 53.8287, 22.0463, 0.83", "5.25557, 55.7704, 22.4074, 0.83", "3.97826, 57.4099, 22.7848, 0.55", "1.92838, 60.063, 23.3902, 0.55", "0.0149991, 62.5449, 23.95, 0.55", "-2.15786, 65.1489, 24.5138, 0.55", "-3.82178, 66.9277, 24.9083, 0.55", "-6.8221, 69.6528, 25.5884, 0.55", "-9.01269, 71.333, 25.9834, 0.55", "-12.0323, 73.1881, 26.2705, 0.55", "-16.8678, 75.2321, 26.302, 0.55", "-19.7207, 76.013, 26.0829, 0.55", "-22.8641, 76.3478, 25.6536, 0.55", "-24.7298, 76.2491, 25.2533, 0.55", "-26.2332, 75.9421, 24.8346, 0.55", "-29.0075, 74.936, 23.8577, 0.28", "-30.365, 74.2507, 23.3131, 0.83", "-32.2132, 73.1964, 22.5621, 0.55", "-33.3995, 72.3497, 22.0197, 0.55", "-34.8977, 70.929, 21.2518, 0.55", "-36.2684, 69.3545, 20.4751, 0.83", "-37.3919, 67.9144, 19.7689, 0.55", "-38.2946, 66.6742, 19.1189, 0.55", "-40.3214, 63.7333, 17.5219, 0.55", "-42.2859, 60.9523, 15.8891, 0.83", "-43.774, 58.9152, 14.5525, 0.83", "-45.2246, 56.8689, 12.9656, 0.83", "-46.9077, 54.6241, 11.0252, 0.55", "-47.7423, 53.6317, 10.1325, 0.28", "-48.8489, 52.5018, 9.07083, 0.55", "-50.1614, 51.3367, 7.82781, 0.28", "-53.0524, 49.038, 5.27606, 0.55", "-54.8921, 47.7206, 3.76212, 0.55", "-56.7557, 46.5033, 2.38679, 0.28", "-58.483, 45.4301, 1.2078, 0.55", "-61.5364, 43.4759, -0.740512, 0.55", "-62.6343, 42.7643, -1.36954, 0.83", "-64.6355, 41.4051, -2.40863, 0.55", "-67.3576, 39.2723, -3.91133, 0.55", "-69.1972, 37.4921, -4.95696, 0.83", "-71.1235, 35.1968, -5.98819, 0.55", "-72.3769, 33.3065, -6.61998, 0.55", "-73.4867, 31.3299, -7.1653, 0.55", "-73.991, 30.2385, -7.40189, 0.83", "-75.1136, 27.3483, -7.9371, 0.55", "-76.2885, 23.9013, -8.48923, 0.28", "-77.9166, 18.8801, -9.22879, 0.28", "-78.5535, 16.7528, -9.60231, 0.83", "-79.7588, 12.5609, -10.3746, 0.28", "-80.193, 11.095, -10.6405, 0.83", "-80.4758, 10.185, -10.8029, 0.28", "-80.8683, 8.73566, -11.0539, 0.83", "-81.6622, 5.85021, -11.5625, 0.28", "-82.0262, 4.76615, -11.7603, 0.55", "-83.0071, 2.37726, -12.2399, 0.28", "-83.6141, 1.01151, -12.5312, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "14.4376, 47.7423, 19.0259, 0.83", "14.4937, 49.007, 17.2409, 0.83", "14.6093, 50.5994, 15.2346, 0.83", "14.7214, 51.61, 14.0888, 0.83", "15.7412, 57.6813, 7.86552, 0.55", "16.1458, 59.3516, 6.37131, 0.55", "16.4304, 60.254, 5.67208, 0.55", "16.8685, 61.4071, 4.8776, 0.55", "17.4006, 62.5473, 4.30495, 1.11", "18.1265, 63.8769, 3.97364, 0.55", "19.532, 66.1066, 3.95521, 0.55", "20.7403, 68.1031, 4.02692, 0.55", "21.525, 69.3992, 4.12168, 0.55", "22.506, 71.0219, 4.37994, 0.83", "23.621, 72.9828, 4.82695, 0.55", "24.4024, 74.536, 5.25759, 1.11", "25.1635, 76.1463, 5.77983, 0.55", "25.8867, 77.7253, 6.32473, 0.83", "27.0943, 80.4729, 7.25172, 0.55", "27.713, 81.9162, 7.71058, 0.55", "28.5269, 83.9163, 8.292, 0.55", "29.1592, 85.4957, 8.64492, 0.55", "29.5355, 86.48, 8.81581, 0.28", "30.2741, 88.4438, 9.0496, 0.55", "30.8123, 89.9293, 9.13831, 0.28", "31.3207, 91.2824, 9.18424, 0.55", "32.2857, 93.8307, 9.22482, 0.55", "32.7938, 95.2663, 9.2372, 0.55", "33.4943, 97.2645, 9.22666, 0.28", "34.012, 99.3546, 8.66351, 0.83", "34.3683, 101.198, 7.87602, 0.28", "34.4388, 101.607, 7.64095, 0.55", "34.5795, 102.532, 6.90518, 0.28", "34.6609, 103.098, 6.36536, 0.83", "35.6323, 109.883, -0.864038, 0.55", "36.0824, 112.397, -3.65564, 0.55", "36.2419, 113.158, -4.48066, 0.83", "36.7494, 114.933, -6.13133, 0.55", "37.0744, 115.8, -6.75458, 0.55", "37.5541, 116.816, -7.00292, 0.83", "38.24, 118.062, -6.665, 0.28", "38.5021, 118.737, -6.54898, 0.55", "39.1067, 120.625, -6.03761, 0.28", "39.4662, 121.851, -5.51393, 0.55", "39.7592, 122.912, -5.07036, 0.28", "39.9128, 123.971, -4.72392, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "14.4376, 47.7423, 19.0259, 0.55", "16.0208, 46.9976, 20.5009, 0.55", "18.3965, 45.8801, 22.7143, 0.28", "19.6429, 45.2938, 23.8756, 0.55", "21.9326, 44.2167, 26.0089, 0.55", "24.9262, 42.8085, 28.798, 0.55", "26.563, 42.0386, 30.323, 0.28" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "10.4219, -35.3308, -41.461, 0.55", "6.6461, -33.9217, -42.4484, 0.55", "5.48977, -33.579, -43.07, 0.83", "2.80719, -32.8382, -44.6907, 0.55", "1.70606, -32.5587, -45.3416, 0.55", "-3.29027, -31.7977, -48.9528, 0.28", "-4.32029, -31.7052, -49.729, 0.83", "-8.45225, -31.7334, -53.3585, 0.55", "-8.89199, -31.7653, -53.7613, 0.55", "-10.0619, -31.9236, -54.8697, 0.83", "-15.2418, -32.7919, -59.6869, 0.55", "-16.2385, -32.9902, -60.581, 0.55", "-17.3602, -33.224, -61.6146, 0.83", "-19.8193, -33.7004, -64.0282, 0.55", "-20.3358, -33.7648, -64.5673, 0.55", "-21.2832, -33.8057, -65.6502, 0.55", "-25.1009, -33.5942, -70.1501, 0.28", "-26.13, -33.495, -71.4416, 0.83", "-29.5899, -32.9809, -75.8777, 0.55", "-30.4734, -32.7822, -77.038, 0.83", "-34.9497, -31.402, -82.9272, 0.55", "-36.1798, -30.8671, -84.6382, 0.28", "-36.8871, -30.4722, -85.6595, 0.83", "-38.0604, -29.6802, -87.4446, 0.55", "-38.8645, -28.982, -88.7189, 0.83", "-40.5094, -27.1993, -91.6348, 0.55", "-42.3998, -24.3057, -95.5067, 0.28", "-42.6551, -23.8579, -96.0918, 0.55", "-43.2753, -22.6565, -97.6351, 0.28", "-43.5109, -22.167, -98.2628, 0.55", "-44.2687, -20.499, -100.353, 0.28", "-44.5043, -19.9042, -101.067, 0.55", "-45.2566, -18.0397, -103.281, 0.28", "-45.5571, -17.3591, -104.141, 0.55", "-46.2903, -15.8656, -106.035, 0.28", "-46.4781, -15.5331, -106.458, 0.55", "-47.2405, -14.1897, -108.038, 0.28", "-47.5077, -13.7238, -108.577, 0.55", "-48.3867, -12.2748, -110.158, 0.28", "-48.9156, -11.578, -111.024, 0.55", "-50.605, -9.56953, -113.513, 0.28", "-51.3592, -8.76443, -114.544, 0.55", "-53.6526, -6.62287, -117.696, 0.28", "-54.3741, -5.98871, -118.727, 0.55", "-56.8008, -4.01854, -122.51, 0.28", "-57.6581, -3.38444, -123.88, 0.28", "-58.6989, -2.66239, -125.565, 0.55", "-60.5707, -1.42876, -128.453, 0.28", "-60.9049, -1.18978, -128.95, 0.55", "-62.4049, -0.202132, -131.265, 0.28", "-63.1294, 0.27125, -132.362, 0.83", "-64.6588, 1.22634, -134.567, 0.55", "-65.642, 1.84771, -136.002, 0.55", "-67.3315, 2.98618, -138.48, 0.55", "-71.4946, 5.78719, -144.955, 0.83", "-72.9174, 6.74188, -147.315, 0.28", "-73.655, 7.24007, -148.639, 0.55", "-76.3372, 9.04667, -153.96, 0.55", "-76.9815, 9.52711, -155.418, 0.55", "-79.0158, 11.0476, -160.415, 0.83", "-80.3443, 11.991, -163.807, 0.28", "-81.2564, 12.383, -166.058, 0.55", "-82.334, 12.5314, -168.809, 0.28", "-82.7875, 12.4764, -169.992, 0.83", "-85.3719, 11.6517, -176.598, 0.55", "-86.3712, 11.1492, -179.109, 0.55", "-88.768, 9.72691, -184.75, 0.55", "-92.7185, 7.4629, -192.934, 0.55", "-93.7024, 6.9169, -194.802, 0.55", "-96.2895, 5.55048, -199.443, 0.55", "-99.1279, 4.17508, -204.245, 0.55", "-101.448, 3.16603, -207.939, 0.55", "-105.193, 1.6844, -213.375, 0.55", "-109.228, 0.28181, -218.792, 0.55", "-110.144, -0.0128317, -220.004, 0.55", "-114.153, -1.34151, -225.309, 0.55", "-115.123, -1.66625, -226.582, 0.28", "-115.353, -1.74994, -226.891, 0.55", "-124.245, -5.34296, -238.908, 0.28", "-125.063, -5.6823, -239.981, 0.83", "-129.886, -7.81179, -246.276, 0.28", "-130.198, -7.95173, -246.678, 0.55", "-132.489, -8.94203, -249.6, 0.28", "-133.432, -9.35172, -250.777, 0.55", "-135.375, -10.2703, -252.897, 0.28", "-136.037, -10.5937, -253.633, 0.55" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "10.4219, -35.3308, -41.461, 0.55", "12.2881, -35.8773, -44.6722, 0.55", "13.9123, -36.296, -47.1461, 0.55", "17.482, -37.212, -52.9036, 0.83", "18.4278, -37.5073, -54.45, 0.83", "19.5328, -37.8893, -56.241, 0.83", "20.4729, -38.2056, -57.7157, 0.83", "22.1548, -38.7514, -60.2567, 0.83", "24.9545, -39.7735, -64.5174, 0.83", "26.719, -40.3393, -67.0198, 0.83", "28.6216, -40.8797, -69.8513, 0.83", "30.7465, -41.4049, -72.9973, 0.83", "32.6841, -41.8363, -75.8576, 0.83", "35.8679, -42.5008, -80.3772, 0.83", "37.8755, -42.8329, -83.0665, 0.83", "40.4383, -43.1077, -86.5134, 0.83", "42.077, -43.2256, -88.7488, 0.83" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "19.0249, -39.5866, 2.25428, 0.55", "21.2987, -39.4292, 3.51673, 0.55", "23.1821, -39.4009, 4.6142, 0.28", "24.3681, -39.4655, 5.33966, 0.55", "26.373, -39.6411, 6.59348, 1.11", "29.9708, -40.099, 9.04007, 0.55", "31.3364, -40.3107, 10.0314, 0.55", "32.8273, -40.6226, 11.2181, 0.83", "34.3935, -40.9828, 12.5326, 0.28", "34.3935, -40.9828, 12.5326, 0.83", "36.985, -42.0151, 15.0049, 0.28", "37.6774, -42.3394, 15.6835, 1.11" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "19.0249, -39.5866, 2.25428, 0.83", "21.3088, -43.1572, 1.46965, 0.83", "23.3562, -45.8485, 0.391502, 0.55", "24.7138, -47.3882, -0.579352, 0.83", "25.8215, -48.6444, -1.37151, 0.83", "27.3568, -50.3855, -2.4694, 0.83", "28.7052, -51.9147, -3.43362, 0.83", "31.504, -54.464, -5.79653, 0.83", "33.561, -56.1377, -7.87673, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-47.9114, -26.4816, 38.3043, 0.55", "-48.1181, -23.8281, 38.9809, 0.55", "-48.2806, -20.2075, 39.8362, 0.83", "-48.5333, -15.0988, 40.9361, 0.55", "-48.5638, -12.6697, 41.4612, 0.55", "-48.5132, -9.1701, 42.2195, 1.11", "-48.4173, -6.09114, 42.9151, 0.83", "-48.2497, -2.87806, 43.6337, 0.55", "-48.1459, -1.58549, 43.9309, 0.55", "-47.852, 1.4561, 44.8882, 0.55", "-47.796, 2.07346, 45.0872, 1.11", "-47.5712, 3.42983, 45.8209, 0.55", "-47.2368, 4.56497, 46.9619, 0.83", "-46.8801, 5.45908, 48.3318, 0.55", "-46.4773, 6.43576, 50.0871, 0.55", "-46.257, 7.14077, 51.3794, 0.83", "-45.5272, 10.9516, 57.0026, 0.55", "-45.3571, 12.101, 58.4307, 0.83", "-45.2346, 13.7267, 60.1267, 0.55", "-45.2628, 15.5519, 61.807, 0.55", "-45.461, 17.4333, 63.1755, 1.11", "-45.9927, 21.2493, 65.3635, 0.55", "-46.1931, 22.5573, 65.9727, 0.55", "-46.6382, 26.0172, 67.4955, 0.55", "-46.8901, 28.2833, 68.446, 0.55", "-47.1652, 31.1669, 69.7143, 1.11", "-47.4359, 34.3211, 71.2262, 0.55", "-47.5571, 36.1678, 72.2665, 1.11", "-47.7184, 38.4472, 73.6008, 0.28", "-47.7595, 39.2177, 74.1008, 0.55", "-47.8205, 40.4198, 74.9916, 0.28", "-47.91, 41.8803, 76.3478, 0.83", "-48.1405, 43.9765, 78.5805, 0.28", "-48.2073, 44.7163, 79.4672, 0.55", "-48.4189, 47.5949, 83.3232, 0.28", "-48.4642, 48.678, 84.8194, 0.83", "-48.4907, 50.245, 86.965, 0.55", "-48.492, 51.853, 89.1376, 0.55", "-48.4985, 53.5245, 91.3009, 0.55", "-48.4666, 54.8396, 92.9381, 0.83", "-48.3988, 56.4529, 94.8065, 0.28", "-48.2842, 58.0603, 96.5514, 0.55", "-48.0345, 60.2585, 98.5678, 0.55", "-47.9509, 60.7147, 98.9265, 0.83", "-47.5791, 62.9631, 100.189, 0.28", "-47.2988, 64.2943, 100.717, 0.55", "-47.0871, 65.4876, 100.961, 0.28", "-46.8072, 68.1219, 101.104, 0.55", "-46.5848, 71.0241, 100.99, 0.55", "-46.3659, 75.2484, 100.684, 0.28", "-46.3899, 78.2657, 100.136, 0.83", "-46.5385, 82.7589, 99.0501, 0.55", "-46.6876, 86.0755, 98.1066, 0.55", "-46.7794, 87.4888, 97.6862, 0.55", "-47.0186, 89.7141, 96.9634, 0.83", "-47.7566, 95.8314, 95.111, 0.28", "-47.9607, 97.107, 94.7413, 0.83", "-48.2425, 98.8313, 94.3508, 0.28", "-48.5236, 100.531, 94.1249, 0.55", "-49.4874, 104.589, 94.1148, 0.83", "-49.7516, 105.697, 94.5444, 0.83", "-49.9656, 107.087, 95.9449, 0.28", "-50.0019, 107.654, 96.7679, 0.55", "-49.9237, 108.81, 98.9459, 0.28", "-49.7039, 109.622, 100.639, 0.55", "-48.3451, 111.233, 106.051, 0.28", "-48.0012, 111.501, 107.187, 0.55", "-47.3374, 111.913, 109.008, 0.28", "-46.7355, 112.222, 110.462, 0.83", "-45.6623, 112.708, 112.857, 0.83", "-42.3929, 114.248, 119.484, 0.28", "-41.8957, 114.516, 120.409, 0.55", "-40.1155, 115.506, 123.544, 0.28", "-39.0907, 116.11, 125.265, 0.83", "-37.9743, 116.822, 127.05, 0.28", "-37.0936, 117.502, 128.409, 0.83", "-35.3875, 119.317, 130.877, 0.28", "-34.6339, 120.207, 131.909, 0.83", "-33.307, 122.036, 133.621, 0.28", "-32.6224, 123.31, 134.462, 0.55", "-32.0209, 124.79, 135.129, 0.28", "-31.518, 126.76, 135.591, 0.55", "-31.1021, 129.389, 135.87, 0.28", "-30.977, 130.547, 135.9, 0.83", "-30.754, 133.492, 135.847, 0.28", "-30.7552, 135.842, 135.622, 0.83", "-30.8355, 140.113, 135.112, 0.28", "-30.9372, 141.583, 134.823, 0.83", "-31.2206, 144.316, 134.12, 0.28", "-31.389, 145.467, 133.731, 0.83", "-32.5125, 152.366, 131.114, 0.28", "-33.0854, 155.164, 129.913, 0.83", "-34.5039, 161.673, 126.92, 0.28", "-35.0577, 164.08, 125.703, 0.83", "-36.1593, 168.521, 123.346, 0.28", "-36.5328, 169.928, 122.572, 0.55", "-37.6093, 174.06, 120.437, 0.28", "-37.9738, 175.399, 119.796, 0.28", "-38.7505, 178.54, 118.618, 0.55", "-40.2552, 183.291, 117.21, 0.28", "-41.42, 186.559, 116.421, 0.83", "-42.6444, 189.645, 115.583, 0.28", "-43.2755, 191.173, 115.185, 0.55", "-44.2509, 193.536, 114.732, 0.28", "-48.5205, 204.145, 113.554, 0.28", "-48.981, 205.355, 113.477, 0.83", "-51.831, 213.179, 113.203, 0.28", "-52.1474, 214.052, 113.149, 0.83", "-55.2914, 223.87, 112.935, 0.28", "-55.425, 224.707, 113.069, 0.55", "-54.5684, 227.177, 115.234, 0.28", "-54.3588, 227.99, 115.836, 0.55", "-54.0484, 229.157, 116.843, 0.28", "-54.1165, 230.639, 117.133, 0.55", "-54.5169, 233.364, 117.093, 0.28", "-54.7136, 234.658, 117.067, 1.11", "-55.255, 237.567, 117.194, 0.28", "-55.5347, 238.793, 117.207, 0.83" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-47.9114, -26.4816, 38.3043, 0.55", "-50.8998, -27.3824, 39.7832, 0.55", "-52.1897, -27.7225, 40.4855, 0.55", "-54.119, -28.2118, 41.6477, 0.83", "-56.0801, -28.7281, 42.8592, 0.55", "-57.6989, -29.2851, 43.9296, 0.55", "-58.4545, -29.5991, 44.4392, 0.83", "-59.5164, -30.1912, 45.2352, 0.55", "-61.2001, -31.471, 46.8504, 0.55", "-61.9778, -32.2545, 47.7492, 0.55", "-63.305, -33.9126, 49.461, 0.55", "-63.8396, -34.7502, 50.2744, 0.28", "-64.9705, -36.8075, 52.1664, 0.83", "-66.1533, -39.3337, 54.5138, 0.55", "-66.3465, -39.7887, 54.9522, 0.55", "-66.961, -41.1604, 56.3552, 0.83", "-67.7359, -42.6194, 57.9916, 0.55", "-68.323, -43.6166, 59.1818, 0.83", "-70.1061, -46.0541, 62.1827, 0.55", "-71.035, -47.0388, 63.394, 0.83", "-72.2711, -48.1251, 64.817, 0.28", "-73.3127, -48.8329, 65.8465, 0.55", "-74.5628, -49.4505, 66.8396, 0.55", "-76.5126, -50.1858, 68.1387, 0.28", "-77.4255, -50.4264, 68.6076, 0.28", "-78.2202, -50.6047, 69.0034, 0.55", "-80.3891, -51.181, 70.0553, 0.28", "-81.18, -51.4986, 70.4972, 0.55", "-81.5685, -51.684, 70.7156, 0.28", "-82.5709, -52.2772, 71.3567, 0.28", "-83.2367, -52.6789, 71.7862, 0.55", "-84.5807, -53.5468, 72.6206, 0.28", "-85.9876, -54.5202, 73.4028, 0.55", "-87.6981, -55.7336, 74.4035, 0.28", "-88.9833, -56.6904, 75.1634, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-85.9881, 3.89895, 19.4944, 0.28", "-88.5607, 5.77736, 19.064, 0.28", "-89.2557, 6.35974, 18.9474, 0.55", "-90.7547, 7.64867, 18.7164, 0.28", "-91.0888, 7.96354, 18.6732, 0.55", "-94.2292, 11.1397, 18.341, 0.28", "-96.685, 13.6628, 18.1986, 0.28", "-98.1365, 15.3264, 18.1901, 0.28", "-99.1711, 16.6024, 18.2322, 0.55", "-101.472, 19.6582, 18.2804, 0.28", "-102.326, 20.8105, 18.3301, 0.55", "-103.652, 22.658, 18.5073, 0.28", "-104.346, 23.7136, 18.6377, 0.55", "-105.44, 25.4632, 18.8886, 0.28", "-106.809, 27.8954, 19.2132, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-85.9881, 3.89895, 19.4944, 0.28", "-82.7978, 3.47569, 18.2773, 0.28", "-81.8979, 3.39753, 17.8552, 0.83", "-77.616, 3.20258, 16.1134, 0.28", "-77.1713, 3.18508, 15.9457, 0.83", "-73.2924, 3.03372, 14.7696, 0.28", "-72.1509, 2.97901, 14.4735, 0.83", "-64.705, 2.72074, 12.836, 0.28", "-60.525, 2.57166, 12.0814, 0.28", "-59.6141, 2.54072, 11.9722, 1.11", "-54.8852, 2.34068, 11.6423, 0.28", "-53.4942, 2.26581, 11.5461, 0.55", "-48.3865, 1.94863, 11.1122, 0.28", "-46.0128, 1.74781, 10.9243, 0.28", "-44.5211, 1.60401, 10.7259, 0.55", "-42.2666, 1.39763, 10.3506, 0.28", "-35.5686, 0.68852, 8.738, 0.28", "-32.0514, 0.28704, 7.81758, 0.28", "-31.287, 0.15031, 7.59689, 0.83", "-29.6285, -0.225376, 7.09205, 0.28", "-29.6285, -0.225376, 7.09205, 0.83", "-26.0422, -1.22408, 6.11021, 0.28", "-25.1379, -1.58172, 5.97411, 0.83", "-22.4344, -2.91916, 5.26969, 0.28", "-20.7928, -3.78132, 4.7755, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-33.1012, 45.849, -26.0783, 0.28", "-34.1811, 44.0655, -27.5496, 0.28", "-34.9941, 42.6851, -28.8469, 0.83", "-35.8806, 41.173, -30.2397, 0.55", "-36.7584, 39.6403, -31.8866, 1.11", "-39.0272, 35.3049, -36.9213, 0.28", "-39.1787, 35.0118, -37.314, 0.83", "-39.8083, 33.7155, -39.36, 0.83", "-40.171, 32.9146, -40.7365, 0.83", "-41.4487, 30.0206, -46.0606, 0.28", "-41.7864, 29.2872, -47.4091, 0.83", "-43.0168, 26.8979, -52.5629, 0.28", "-43.23, 26.485, -53.5372, 0.55", "-43.5893, 25.7962, -55.2577, 0.55", "-43.9475, 25.1023, -57.0965, 0.55", "-44.4326, 24.2217, -59.4419, 1.11", "-46.273, 20.8065, -69.6799, 0.55", "-46.4946, 20.3255, -71.2486, 0.28", "-46.5583, 20.2025, -71.7236, 0.55", "-46.9951, 19.488, -74.8848, 0.28", "-47.1502, 19.1911, -76.2889, 0.83", "-47.9558, 17.4934, -84.7322, 0.28", "-47.9967, 17.4161, -85.0944, 0.55", "-48.931, 15.7056, -93.1673, 0.28", "-49.0845, 15.3739, -94.626, 0.55", "-49.5676, 14.3371, -98.6979, 0.28", "-49.6522, 14.1386, -99.4011, 0.83", "-50.0935, 13.087, -102.616, 0.28", "-50.3148, 12.5506, -104.209, 0.83", "-51.3577, 9.66951, -111.877, 0.28", "-51.6574, 8.95433, -113.63, 0.83", "-52.9949, 6.14812, -120.004, 0.55", "-53.1665, 5.7779, -120.797, 0.83", "-54.1133, 3.64907, -125.056, 0.28", "-54.4207, 2.95676, -126.311, 0.55", "-55.7214, -0.0145447, -131.106, 0.28", "-56.1773, -1.1102, -132.826, 0.83", "-58.4963, -6.65946, -140.761, 0.28", "-58.6119, -6.9427, -141.161, 0.83", "-59.3028, -8.74733, -143.591, 0.28", "-59.4737, -9.19567, -144.232, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-33.1012, 45.849, -26.0783, 0.55", "-33.9508, 48.0789, -26.5766, 0.55", "-34.5892, 49.7597, -27.0019, 0.55", "-35.2649, 51.5132, -27.5667, 0.28", "-35.7127, 52.6687, -27.9722, 1.38", "-36.3961, 54.3456, -28.6353, 0.55", "-37.1744, 56.214, -29.4033, 0.55", "-37.5182, 57.0115, -29.7154, 0.83", "-38.136, 58.4261, -30.3252, 0.28", "-38.46, 59.2312, -30.6951, 0.55", "-38.9793, 60.6506, -31.3152, 0.28", "-39.3294, 61.6878, -31.6945, 0.83", "-39.9492, 63.8405, -32.2652, 0.28", "-40.2442, 64.9942, -32.5842, 0.55", "-40.5356, 66.3733, -32.9594, 0.28", "-40.726, 67.5282, -33.351, 0.83", "-40.9498, 69.6705, -34.1643, 0.28", "-41.0961, 71.5441, -35.0249, 0.83", "-41.209, 74.6624, -36.6569, 0.28", "-41.198, 75.7333, -37.2712, 0.83", "-41.141, 78.6199, -39.2299, 0.28", "-41.087, 79.9387, -40.2364, 0.83", "-40.9925, 81.5448, -41.5603, 0.28", "-40.9273, 82.8037, -42.6597, 0.55", "-40.8605, 84.063, -43.751, 0.83", "-40.8218, 86.856, -46.1353, 0.28", "-40.8602, 87.957, -47.0172, 0.83", "-40.979, 89.4538, -48.1714, 0.83", "-41.1681, 90.9621, -49.2494, 0.28", "-41.4586, 92.1289, -50.0772, 0.83", "-41.8506, 93.3128, -50.8338, 0.28", "-42.1728, 94.1705, -51.2929, 0.55", "-42.47, 94.797, -51.6168, 0.28", "-43.1926, 96.1041, -52.1818, 0.55", "-44.6187, 98.5716, -52.9625, 0.28", "-45.2116, 99.4576, -53.1974, 0.55", "-45.9126, 100.421, -53.3998, 0.28", "-46.7174, 101.462, -53.5675, 0.83", "-47.7974, 102.809, -53.6873, 0.28", "-48.8606, 104.133, -53.7098, 0.83", "-50.4221, 106.123, -53.5948, 0.28", "-51.0416, 106.91, -53.5802, 0.83", "-51.7509, 107.841, -53.584, 0.28", "-52.6572, 109.121, -53.6375, 0.28", "-53.055, 109.731, -53.7358, 0.55", "-53.9254, 111.265, -54.1539, 0.28", "-54.6049, 112.581, -54.7785, 0.55", "-54.9795, 113.327, -55.2446, 0.55", "-55.5164, 114.428, -56.0359, 0.83", "-56.5662, 116.415, -57.7193, 0.28", "-57.3526, 117.844, -59.0573, 0.83", "-58.5163, 119.793, -61.1573, 0.28", "-58.9762, 120.497, -61.9811, 0.28", "-59.6012, 121.471, -63.1653, 0.83", "-60.7734, 123.294, -65.4875, 0.28", "-61.202, 123.974, -66.3188, 0.83", "-62.6941, 126.494, -69.2752, 0.28", "-63.4157, 127.725, -70.6877, 1.11", "-64.8176, 130.138, -73.5094, 0.28", "-65.3708, 131.15, -74.7227, 0.55", "-65.8223, 132.108, -75.7826, 0.28", "-66.1671, 132.9, -76.5923, 0.55", "-66.9473, 135.01, -78.5823, 0.28", "-67.2885, 135.842, -79.4462, 0.55", "-67.8456, 137.108, -80.8092, 0.28", "-68.2085, 137.917, -81.7756, 0.55", "-68.6221, 138.876, -83.0093, 0.28", "-69.2009, 140.287, -84.8777, 0.55", "-70.1519, 142.913, -88.1716, 0.28", "-70.5415, 143.987, -89.5849, 0.55", "-71.071, 145.517, -91.6198, 0.28", "-71.3396, 146.355, -92.8072, 0.83", "-71.6328, 147.493, -94.4105, 0.28", "-71.8181, 148.302, -95.5927, 0.83", "-72.0896, 149.696, -97.6193, 0.28", "-72.2379, 150.312, -98.6084, 0.55", "-72.4364, 151.166, -100.051, 0.28", "-72.5894, 151.871, -101.331, 0.55", "-73.0219, 153.944, -104.915, 0.28", "-73.181, 154.675, -106.101, 0.28", "-73.6006, 156.353, -108.401, 0.55", "-73.9622, 157.79, -110.131, 0.28", "-74.1785, 158.593, -110.943, 0.55", "-74.8463, 160.797, -112.739, 0.28", "-75.3414, 162.112, -113.469, 0.83", "-76.2495, 164.055, -114.253, 0.28", "-76.6252, 164.665, -114.407, 0.55", "-77.3387, 165.583, -114.567, 0.28", "-78.1261, 166.43, -114.714, 0.55", "-79.9984, 168.137, -114.966, 0.28", "-80.4332, 168.513, -114.999, 0.55", "-83.205, 170.861, -115.267, 0.28", "-83.8893, 171.5, -115.367, 0.55", "-84.7876, 172.479, -115.528, 0.28", "-85.6671, 173.511, -115.716, 0.55", "-87.0094, 175.323, -116.068, 0.28", "-87.7876, 176.495, -116.279, 0.55", "-89.1431, 179.269, -116.537, 0.28", "-89.6037, 180.391, -116.658, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-10.4456, 72.0298, -19.1033, 0.55", "-8.73597, 73.4753, -20.2127, 0.55", "-6.57672, 75.7917, -23.2431, 0.55", "-5.7985, 76.7694, -24.8285, 0.83", "-5.19101, 77.5738, -26.23, 0.83", "-3.56124, 79.8531, -30.338, 0.28", "-2.9599, 80.7109, -31.8545, 0.83", "-1.25584, 83.882, -38.4541, 0.55", "-1.02002, 84.5833, -40.1299, 0.28", "-0.961497, 84.9071, -40.9798, 0.28", "-0.957967, 85.4394, -42.4699, 0.55", "-1.0316, 86.0763, -44.2177, 0.55", "-1.38443, 88.3244, -49.9512, 0.28", "-1.52386, 89.4071, -52.4263, 0.83", "-1.76905, 91.7965, -57.5974, 0.83", "-1.93609, 93.9151, -62.01, 0.83", "-2.07625, 96.637, -67.5503, 0.28", "-2.08896, 97.5913, -69.4188, 0.28", "-2.04005, 98.1253, -70.3358, 0.55", "-1.53033, 100.526, -74.0662, 0.28", "-1.41042, 100.889, -74.5721, 0.55", "-0.319746, 103.254, -77.7751, 0.28", "0.116632, 104.046, -79.1365, 0.55", "0.553565, 104.742, -80.5535, 0.28", "0.728835, 105.001, -81.1213, 0.55", "2.04893, 106.644, -85.1119, 0.28", "2.48453, 107.118, -86.2984, 0.55", "4.99019, 109.425, -92.5794, 0.28", "5.72987, 110.078, -94.3493, 0.28", "6.52647, 110.76, -96.1171, 0.55", "8.21587, 112.205, -99.9019, 0.28", "8.77117, 112.659, -101.047, 0.55", "11.0749, 114.49, -105.646, 0.28", "12.2703, 115.386, -107.863, 0.28", "13.3224, 116.169, -109.856, 0.83", "17.1258, 118.815, -116.674, 0.28", "18.1503, 119.484, -118.399, 0.28", "19.6183, 120.389, -120.694, 0.55", "20.9329, 121.161, -122.539, 0.28", "21.878, 121.654, -123.869, 0.55", "22.8201, 122.113, -125.079, 0.28", "23.4476, 122.406, -125.586, 0.55", "24.9229, 123.156, -126.794, 0.28", "27.0606, 124.44, -128.192, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-10.4456, 72.0298, -19.1033, 0.55", "-11.6446, 75.6561, -18.0507, 0.55", "-12.2843, 78.0916, -17.1663, 0.55", "-12.5531, 79.1262, -16.7815, 0.55", "-12.9628, 80.7806, -16.1767, 0.55", "-13.2955, 82.1761, -15.7334, 0.55", "-14.0732, 85.5319, -14.6709, 0.28", "-14.3309, 86.7158, -14.2816, 0.55", "-14.6402, 88.3786, -13.5974, 0.55", "-14.8262, 89.1798, -13.2084, 0.83", "-15.3643, 90.9876, -12.2518, 0.28", "-15.8448, 92.5056, -11.4607, 0.83", "-16.7991, 95.2637, -10.026, 0.28", "-16.9115, 95.5816, -9.82011, 0.83", "-17.6856, 98.0098, -7.99291, 0.55", "-18.0173, 99.1148, -7.06803, 0.55", "-18.4669, 100.742, -5.64948, 0.83", "-19.2225, 103.709, -2.99734, 0.55", "-19.7452, 105.99, -0.929662, 0.83", "-19.983, 107.148, 0.148752, 0.28", "-20.1462, 108.169, 1.04535, 0.83", "-20.3947, 109.687, 2.36325, 0.83", "-20.907, 112.348, 4.5672, 0.83", "-21.3457, 114.577, 6.03959, 0.28", "-21.5226, 115.338, 6.48319, 0.83", "-22.1169, 117.634, 7.85606, 0.83", "-22.6702, 119.644, 9.08016, 0.28", "-22.9685, 120.69, 9.75465, 0.55", "-23.5796, 122.766, 11.0014, 0.28", "-24.3385, 124.903, 12.3497, 0.55", "-25.4392, 127.692, 14.2401, 0.28", "-25.7148, 128.316, 14.7016, 0.83", "-26.2744, 129.579, 15.6143, 0.28", "-26.9592, 131.093, 16.7685, 0.55", "-27.9362, 133.301, 18.6657, 0.28", "-28.1063, 133.726, 19.0118, 0.55", "-28.4622, 134.646, 19.7996, 0.28", "-28.8028, 135.61, 20.7408, 0.83", "-29.155, 136.883, 22.0655, 0.28", "-29.4884, 138.469, 23.8311, 0.55", "-29.7007, 139.546, 25.1782, 0.28", "-29.83, 140.217, 25.9789, 0.83", "-30.0541, 141.643, 27.5911, 0.83", "-30.2491, 143.085, 29.1026, 0.55", "-30.3161, 143.878, 29.8436, 0.83", "-30.6083, 148.333, 33.5733, 0.55", "-30.6875, 150.02, 34.8038, 0.83", "-30.7902, 155.586, 38.1834, 0.28", "-30.7845, 156.776, 38.6344, 0.55", "-30.6769, 159.15, 39.0831, 0.28", "-30.5651, 160.575, 39.1894, 0.83", "-30.2256, 163.507, 38.8517, 0.28", "-30.0206, 165.273, 38.4397, 0.55", "-29.3743, 170.192, 36.1085, 0.28", "-29.1227, 172.35, 34.9769, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "22.8079, 318.906, -6.78122, 0.55", "23.1517, 321.273, -6.94785, 0.55", "23.4287, 324.105, -7.17771, 0.55", "23.6661, 326.828, -7.4002, 0.83", "23.8123, 328.713, -7.53816, 0.55", "23.9918, 331.057, -7.6765, 1.11", "24.3158, 334.649, -7.84717, 0.55", "24.5839, 337.192, -7.93133, 1.11", "24.8514, 339.109, -8.03296, 0.83", "25.2434, 340.903, -8.14367, 0.55", "26.0151, 343.23, -8.28904, 0.55", "26.9478, 345.213, -8.43685, 0.83", "28.3014, 347.242, -8.68955, 0.55", "29.9616, 349.205, -9.05898, 0.83", "31.427, 350.669, -9.4021, 0.83", "32.7962, 351.851, -9.73847, 0.83", "33.9843, 352.784, -10.0174, 1.11", "36.5371, 354.725, -10.6833, 0.83", "37.6299, 355.568, -10.9733, 0.55", "39.3695, 356.929, -11.3774, 0.83", "41.9048, 359.052, -11.9815, 0.55", "43.5069, 360.375, -12.3467, 1.11", "45.9189, 362.39, -12.8444, 0.55", "46.7489, 363.111, -12.9757, 0.55", "47.8773, 364.127, -13.1483, 0.55", "50.3867, 366.606, -13.4683, 0.55", "51.3381, 367.655, -13.533, 0.28", "51.9164, 368.384, -13.5433, 0.55", "52.9168, 369.806, -13.4753, 0.28", "53.722, 371.071, -13.4303, 0.83", "55.1136, 373.474, -13.3624, 0.55", "55.5598, 374.282, -13.3223, 0.83", "56.4757, 376.024, -13.2673, 0.55", "57.0667, 377.152, -13.2587, 0.83", "58.8575, 380.581, -13.2943, 0.28", "60.0546, 382.846, -13.3702, 0.83", "61.3031, 385.183, -13.4883, 0.28", "62.3926, 387.245, -13.6153, 0.55", "63.5111, 389.424, -13.769, 0.55", "64.4449, 391.405, -13.9794, 0.55", "64.9024, 392.509, -14.1358, 0.28", "65.2937, 393.579, -14.3106, 0.55", "65.9233, 395.664, -14.667, 0.28", "66.2441, 396.895, -14.9491, 0.55", "66.7516, 399.137, -15.5908, 0.28", "67.0689, 400.664, -16.067, 0.28", "67.4946, 402.798, -16.7614, 0.83", "67.8555, 404.711, -17.4198, 0.83", "68.5416, 408.362, -18.6762, 0.55", "68.9596, 410.411, -19.3339, 0.55", "69.2796, 411.738, -19.6894, 0.55", "69.5065, 412.49, -19.8962, 0.28", "69.8717, 413.545, -20.1757, 0.55", "70.2246, 414.441, -20.3661, 0.28", "70.5549, 415.28, -20.5533, 1.11", "71.4692, 417.809, -21.3865, 0.55", "72.0193, 419.658, -22.1008, 0.55", "72.4248, 421.282, -22.8433, 0.28", "72.6125, 422.2, -23.3504, 0.83", "73.1114, 424.835, -25.0313, 0.55", "73.4288, 426.536, -26.1962, 0.83", "73.7737, 428.406, -27.5872, 0.83", "74.1981, 430.289, -29.077, 0.55", "74.6052, 431.762, -30.3151, 0.28", "75.0552, 433.194, -31.5276, 0.55", "75.4958, 434.509, -32.629, 0.55", "76.1069, 436.228, -34.1298, 1.11", "76.9245, 438.493, -36.0608, 0.55", "77.2668, 439.479, -36.8436, 0.55", "77.6137, 440.545, -37.7091, 0.55", "78.3055, 443.073, -39.8086, 0.55", "78.6521, 444.347, -40.8989, 0.83", "79.3447, 447.059, -43.0738, 0.28", "79.534, 447.875, -43.6952, 0.55", "80.0855, 450.208, -45.3747, 0.28", "80.3758, 451.348, -46.1492, 0.55", "80.8652, 453.145, -47.2327, 0.28", "81.2948, 454.952, -48.2135, 0.55", "81.5064, 455.895, -48.6704, 0.28", "81.8523, 457.449, -49.3317, 0.55", "82.4692, 460.046, -50.1804, 0.55", "82.8132, 461.386, -50.6334, 0.28", "83.0519, 462.571, -51.063, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "22.8079, 318.906, -6.78122, 0.55", "22.0409, 319.819, -7.41446, 0.55", "21.1252, 320.958, -8.10187, 1.11", "20.08, 322.156, -8.79267, 0.55", "19.7457, 322.551, -9.0406, 0.83", "18.9572, 323.513, -9.65017, 0.55", "18.2978, 324.279, -10.1496, 0.55", "17.7836, 324.866, -10.5387, 0.83", "16.2514, 326.562, -11.687, 0.55", "15.0886, 327.8, -12.4845, 0.55", "14.6828, 328.233, -12.7805, 0.83", "13.5735, 329.395, -13.6038, 0.55", "13.3952, 329.579, -13.7409, 0.83", "12.804, 330.206, -14.1673, 0.28", "12.7058, 330.317, -14.2226, 0.55", "12.0729, 330.991, -14.4426, 0.28", "11.6745, 331.44, -14.5524, 0.55", "11.2202, 331.933, -14.687, 0.55", "9.9823, 333.21, -15.0797, 0.55", "9.14229, 334.082, -15.3674, 0.55", "8.51299, 334.778, -15.6534, 0.83", "7.67724, 335.756, -16.0989, 0.83", "6.67828, 337.075, -16.8355, 0.55", "5.99338, 338.068, -17.4671, 0.55", "5.30428, 339.175, -18.2434, 1.11", "4.61027, 340.531, -19.1826, 0.55", "4.44247, 340.923, -19.4541, 0.83", "3.96757, 342.269, -20.2917, 0.28", "3.80639, 342.991, -20.8423, 0.55", "3.73347, 343.474, -21.2789, 0.28", "3.69091, 343.945, -21.7296, 0.83", "3.66278, 344.952, -22.7141, 0.28", "3.67111, 345.865, -23.6228, 0.83", "3.86352, 349.412, -27.1167, 0.55", "3.92474, 350.095, -27.7911, 0.55", "3.99983, 350.716, -28.3923, 0.83", "4.10548, 351.511, -29.1189, 0.28", "4.16389, 351.903, -29.4243, 0.55", "4.23627, 352.497, -29.793, 0.28", "4.28492, 353.321, -30.0408, 0.55", "4.33323, 354.484, -30.4166, 0.55", "4.35203, 355.148, -30.6309, 0.55", "4.37031, 355.89, -30.8558, 0.83", "4.41645, 357.075, -31.2144, 0.28", "4.45725, 358.072, -31.5026, 0.83", "4.54384, 359.3, -31.817, 0.55", "4.57706, 359.791, -31.926, 0.55", "4.64958, 360.726, -32.0857, 0.83", "4.67583, 361.22, -32.1435, 0.55", "4.701, 362.154, -32.1644, 0.83", "4.66009, 363.018, -32.1824, 0.28", "4.62743, 363.374, -32.2267, 0.28", "4.49285, 364.33, -32.4504, 0.28", "4.43129, 364.74, -32.5887, 0.83", "4.28304, 365.692, -33.0283, 0.55", "4.14383, 366.729, -33.7487, 0.83", "3.92502, 368.13, -34.9697, 0.28", "3.84691, 368.559, -35.4403, 0.55", "3.74539, 368.976, -36.0278, 0.28", "3.63941, 369.273, -36.4811, 0.83", "3.19499, 370.361, -38.1906, 0.83", "3.03599, 370.712, -38.7322, 0.83", "2.47713, 371.807, -40.32, 0.83", "1.7932, 373.074, -42.1006, 0.55", "1.36016, 373.824, -43.1512, 0.55", "0.963606, 374.505, -44.071, 0.55", "0.520569, 375.26, -45.0291, 0.55", "-0.0942019, 376.438, -46.4201, 0.55", "-0.585716, 377.424, -47.4365, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "42.077, -43.2256, -88.7488, 0.55", "42.7117, -42.6278, -90.158, 0.55", "43.337, -41.9638, -91.5951, 0.83", "44.5983, -40.5566, -94.5257, 0.28", "45.2388, -39.8115, -95.9874, 0.83", "46.8074, -37.9655, -99.4236, 0.28", "47.3535, -37.3227, -100.564, 0.55", "48.5336, -35.825, -103.191, 0.55", "49.7656, -34.15, -105.838, 0.55", "50.837, -32.6906, -108.0, 0.28", "51.2826, -32.0823, -108.853, 0.28", "51.739, -31.464, -109.682, 0.55", "52.7471, -30.1731, -111.397, 0.28", "54.1805, -28.412, -113.507, 0.55", "55.8158, -26.2498, -116.125, 0.28", "56.236, -25.6926, -116.822, 0.55", "57.9024, -23.325, -119.71, 0.28", "58.9643, -21.747, -121.621, 0.28", "60.152, -19.9238, -123.884, 0.83", "61.9244, -16.9621, -127.646, 0.55", "62.3432, -16.2406, -128.585, 0.55", "63.1562, -14.8161, -130.615, 0.55", "63.9734, -13.4511, -132.742, 0.83", "65.2099, -11.5421, -135.903, 0.28", "65.6183, -11.0038, -136.812, 0.55", "66.8414, -9.68942, -138.838, 0.28", "67.0748, -9.46211, -139.194, 0.55", "68.2448, -8.53399, -140.691, 0.55", "70.0818, -7.21828, -142.615, 0.28", "70.7803, -6.73989, -143.235, 0.55", "72.5032, -5.63652, -144.663, 0.28", "73.2227, -5.19328, -145.206, 0.55", "74.7908, -4.33029, -146.347, 0.28", "75.7982, -3.8985, -147.069, 0.55", "76.3683, -3.7065, -147.438, 0.55", "77.9823, -3.1374, -148.39, 0.28", "79.0703, -2.72357, -148.953, 0.28", "80.1322, -2.23712, -149.516, 0.55", "82.6904, -0.860094, -150.871, 0.28", "84.4518, 0.28446, -151.812, 0.55", "86.0869, 1.5286, -152.649, 0.55", "87.5679, 2.86856, -153.372, 0.83", "89.7276, 5.1379, -154.349, 0.28", "90.5043, 6.09974, -154.68, 0.28", "91.8165, 8.06381, -155.164, 0.55", "93.075, 10.2011, -155.571, 0.28", "93.6127, 11.1801, -155.711, 0.55", "94.4449, 12.7818, -155.837, 0.55", "95.6608, 15.1816, -155.879, 0.28", "96.3838, 16.6433, -155.893, 0.55", "97.4588, 18.9164, -155.907, 0.28", "98.6232, 21.5004, -155.953, 0.55", "99.7948, 24.1757, -156.024, 0.55", "100.295, 25.3791, -156.063, 0.55", "101.232, 27.8028, -156.194, 0.55", "102.071, 30.0432, -156.412, 0.55", "102.868, 32.3497, -156.701, 0.55", "103.596, 34.5448, -157.003, 0.28", "103.97, 35.6926, -157.212, 0.55", "105.142, 39.3017, -157.92, 0.28", "105.864, 41.7186, -158.474, 0.28", "106.192, 42.9342, -158.777, 0.55", "106.767, 45.0835, -159.351, 0.28", "107.272, 47.0188, -159.884, 0.55", "107.649, 48.5024, -160.279, 0.55", "108.629, 52.694, -161.329, 0.28", "109.166, 55.3026, -161.95, 0.28", "109.364, 56.3682, -162.188, 0.55", "109.727, 58.5237, -162.631, 0.55", "110.216, 61.4551, -163.116, 0.28", "110.591, 63.7276, -163.45, 0.55", "110.937, 65.8322, -163.679, 0.28", "111.171, 67.6467, -163.844, 0.55", "111.302, 68.7413, -163.914, 0.28", "111.41, 69.4899, -163.894, 0.55", "111.75, 71.6724, -163.664, 0.28", "111.958, 72.7462, -163.476, 0.55", "112.764, 76.3051, -162.72, 0.28", "113.381, 78.751, -162.158, 0.55", "114.256, 81.9922, -161.346, 0.28", "114.763, 83.7374, -160.895, 0.55", "115.388, 85.731, -160.348, 0.28", "115.977, 87.5129, -159.827, 0.55", "116.552, 89.1896, -159.328, 0.28", "116.975, 90.4843, -158.951, 0.55", "117.935, 93.7063, -158.081, 0.28", "118.427, 95.351, -157.594, 0.55", "119.089, 97.7162, -156.844, 0.28", "119.331, 98.5977, -156.533, 0.55", "119.897, 100.843, -155.692, 0.28", "120.428, 103.213, -154.799, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "42.077, -43.2256, -88.7488, 0.28", "43.9541, -43.7164, -89.7751, 0.28", "44.5103, -43.8576, -90.1156, 0.55", "45.2724, -43.9985, -90.6234, 0.55", "46.4419, -44.1796, -91.4053, 0.28", "47.1379, -44.2871, -91.8535, 0.55", "49.5848, -44.6315, -93.3457, 0.28", "50.2526, -44.6818, -93.7181, 0.55", "51.8539, -44.729, -94.5447, 0.28", "52.5454, -44.7178, -94.8681, 0.28", "53.6908, -44.6627, -95.3267, 0.55", "54.7617, -44.614, -95.6911, 0.55", "57.3808, -44.5363, -96.3494, 0.28", "58.3559, -44.5573, -96.5791, 0.55", "59.4547, -44.656, -96.8277, 0.55", "61.4549, -44.9467, -97.3022, 0.28", "62.7539, -45.2294, -97.623, 0.55", "64.3607, -45.7528, -97.998, 0.28", "65.2072, -46.1398, -98.1817, 0.55", "66.7428, -46.9974, -98.4977, 0.28", "67.384, -47.4445, -98.6097, 0.55", "68.0739, -48.0308, -98.6974, 0.55", "68.9496, -48.9314, -98.712, 0.28", "69.435, -49.5253, -98.6747, 0.28", "69.9285, -50.2916, -98.5801, 0.55", "70.502, -51.4421, -98.3919, 0.28", "70.5728, -51.6177, -98.3592, 0.55", "71.1114, -53.2879, -98.0859, 0.28", "71.1582, -53.4807, -98.0747, 0.83", "71.6924, -56.086, -98.1225, 0.28", "71.7854, -56.578, -98.2287, 0.55", "71.9846, -57.7846, -98.6712, 0.28", "72.097, -58.5302, -99.025, 0.55", "72.3459, -60.2138, -100.067, 0.28", "72.3748, -60.4258, -100.21, 0.55", "72.7045, -62.8786, -102.069, 0.28", "72.7415, -63.2151, -102.316, 0.55", "72.7693, -63.421, -102.468, 0.55", "72.8851, -64.1855, -102.935, 0.28", "72.9906, -64.8302, -103.254, 0.55", "73.2036, -65.9545, -103.706, 0.28", "73.2989, -66.4181, -103.868, 0.55", "73.9539, -69.1947, -104.924, 0.28", "74.0999, -69.7617, -105.147, 0.55", "74.2747, -70.4053, -105.439, 0.28", "74.8694, -72.4725, -106.454, 0.28", "75.0475, -73.1426, -106.765, 0.55", "75.5269, -75.0754, -107.597, 0.28", "75.5576, -75.2395, -107.654, 0.55", "75.8615, -77.3779, -108.351, 0.28", "75.9572, -78.435, -108.6, 0.55", "76.0327, -79.8019, -108.775, 0.28", "76.0701, -80.3797, -108.782, 0.55", "76.1609, -81.5747, -108.697, 0.28", "76.2146, -82.1017, -108.645, 0.55", "76.4828, -84.1423, -108.567, 0.28", "76.7471, -85.8065, -108.618, 0.28", "76.895, -86.523, -108.706, 0.55", "77.3101, -88.2657, -109.005, 0.28", "77.4604, -88.7954, -109.113, 0.55", "78.5014, -92.2837, -109.892, 0.28", "78.9353, -93.5943, -110.236, 0.55", "79.653, -95.5178, -110.773, 0.28", "79.8013, -95.8945, -110.882, 0.55", "80.5782, -97.6791, -111.402, 0.28", "80.6964, -97.9206, -111.466, 0.55", "81.2623, -98.7277, -111.573, 0.28", "81.6723, -99.2266, -111.672, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "37.6774, -42.3394, 15.6835, 0.55", "38.4495, -42.2108, 16.9032, 0.55", "39.9916, -41.8817, 19.3778, 0.55", "42.8237, -41.2526, 23.8301, 0.55", "45.0089, -40.7794, 27.2048, 0.55", "46.9952, -40.4054, 30.2212, 0.28", "48.1023, -40.2159, 31.8653, 0.83", "49.4825, -40.0166, 33.947, 0.55", "50.5339, -39.9345, 35.4734, 0.28", "51.0751, -39.9154, 36.1286, 0.55", "52.2486, -39.8902, 37.4236, 0.28", "52.6429, -39.8944, 37.854, 0.55", "54.3901, -40.0495, 39.5233, 0.28", "55.5319, -40.3161, 40.4887, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "37.6774, -42.3394, 15.6835, 0.28", "44.0385, -45.1727, 11.1721, 0.28", "44.9296, -45.4989, 10.6259, 0.83", "48.0247, -46.4655, 8.89971, 0.28", "48.9291, -46.6469, 8.46079, 0.83", "51.0423, -46.9089, 7.51308, 0.28", "51.9372, -46.96, 7.13946, 0.83", "54.584, -46.5759, 6.55163, 0.28", "55.1564, -46.3718, 6.40588, 0.83", "58.0227, -44.8065, 5.6018, 0.28", "58.718, -44.4017, 5.39402, 0.28", "59.7024, -43.7985, 5.08565, 0.55", "61.5427, -42.6687, 4.8743, 0.28", "64.3685, -40.9466, 4.97205, 0.28", "65.0762, -40.529, 5.1487, 0.83", "70.1163, -37.6839, 7.25604, 0.28", "70.9767, -37.2432, 7.71523, 0.55", "77.1505, -34.2837, 11.9428, 0.28", "77.8031, -33.9813, 12.4804, 0.83", "81.6703, -32.1036, 16.267, 0.28", "82.1777, -31.8205, 16.8291, 0.55", "83.6626, -30.8728, 18.7127, 0.28", "85.0587, -29.9538, 20.4585, 0.55", "86.8295, -28.7641, 22.3778, 0.28", "87.548, -28.258, 23.0981, 0.55", "89.8289, -26.3953, 24.9148, 0.28", "90.6517, -25.6222, 25.5963, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "33.561, -56.1377, -7.87673, 0.55", "34.6996, -56.7449, -8.98809, 0.55", "36.5174, -57.7362, -10.7725, 0.55", "37.8256, -58.4804, -12.08, 0.28", "38.7614, -59.005, -13.0054, 0.55", "40.2439, -59.8023, -14.4121, 0.55", "40.8927, -60.1647, -14.9831, 0.28", "41.333, -60.4251, -15.3916, 0.55", "41.8323, -60.7659, -15.8281, 0.28", "42.5709, -61.3388, -16.4589, 0.55", "43.6928, -62.2286, -17.3029, 0.55", "45.3193, -63.521, -18.4663, 0.55", "47.3403, -65.2088, -20.3095, 1.38", "48.5548, -66.2403, -21.5929, 0.83", "49.5518, -67.0626, -22.7485, 0.55", "50.7638, -68.038, -24.2814, 0.28", "52.2037, -69.1534, -26.2447, 0.83", "54.7612, -71.028, -30.2555, 0.28", "55.0751, -71.2739, -30.803, 0.28", "55.7943, -71.9322, -32.2906, 0.55", "56.2505, -72.3784, -33.3255, 0.55", "56.6328, -72.8135, -34.3077, 0.55", "57.7205, -74.1602, -36.9472, 0.55", "58.8106, -75.615, -39.4105, 0.28", "59.4508, -76.5712, -40.9456, 0.83", "59.8302, -77.1836, -41.8995, 0.83", "60.8446, -78.8015, -44.3916, 0.55", "61.2775, -79.4592, -45.3611, 0.83", "61.9655, -80.345, -46.5359, 0.28", "62.5154, -80.9269, -47.2821, 0.55", "62.8769, -81.2999, -47.6804, 0.28", "63.0639, -81.4972, -47.849, 0.55", "64.0292, -82.4038, -48.5279, 0.28", "65.0518, -83.4326, -49.3576, 0.28", "65.8414, -84.2384, -49.9881, 0.83", "66.4978, -84.9956, -50.5382, 0.55", "68.1243, -87.0108, -51.9242, 0.28", "68.5813, -87.6541, -52.3664, 0.83", "69.9834, -89.8447, -53.8341, 0.28", "70.4843, -90.7757, -54.4018, 0.83", "71.3497, -92.4532, -55.3304, 0.28", "71.591, -92.9346, -55.5999, 0.83", "72.5751, -95.0038, -56.7052, 0.28", "73.1725, -96.2746, -57.3582, 0.28", "73.7505, -97.348, -57.8575, 0.55", "74.4176, -98.5252, -58.4807, 0.55", "75.552, -100.32, -59.5082, 0.55", "76.1739, -101.233, -60.0495, 0.28", "76.509, -101.702, -60.3453, 0.55", "77.5719, -103.229, -61.4398, 0.28", "78.3781, -104.305, -62.2795, 0.55", "79.2075, -105.466, -63.1837, 0.28", "79.4653, -105.812, -63.4333, 0.83", "80.5502, -107.276, -64.5618, 0.28", "80.8031, -107.598, -64.8298, 0.55", "81.4539, -108.365, -65.5494, 0.55", "82.6317, -109.602, -66.6047, 0.28", "82.6783, -109.649, -66.6477, 0.55", "83.692, -110.643, -67.7064, 0.28", "84.0937, -111.009, -68.1328, 0.55", "85.1237, -112.02, -69.3825, 0.28", "85.7785, -112.673, -70.2561, 0.55", "86.9377, -113.787, -71.8962, 0.55", "87.9205, -114.764, -73.3693, 0.28", "88.5108, -115.386, -74.2867, 0.83", "89.5182, -116.492, -75.8717, 0.28", "89.7505, -116.708, -76.1861, 0.55", "90.6608, -117.415, -77.2901, 0.28", "91.0094, -117.61, -77.5856, 0.55", "92.7793, -118.378, -78.8197, 0.28", "93.3616, -118.581, -79.1873, 0.83", "95.7455, -119.164, -80.3895, 0.28", "96.2003, -119.251, -80.594, 0.55", "98.1232, -119.424, -81.2857, 0.28", "99.7863, -119.426, -81.8517, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "33.561, -56.1377, -7.87673, 0.55", "33.5917, -57.6804, -10.0577, 0.55", "33.485, -61.0049, -14.6037, 0.55", "33.458, -63.8508, -18.461, 0.28", "33.4705, -65.8789, -21.2951, 0.83", "33.6552, -69.0875, -25.9315, 0.28", "33.6945, -69.814, -27.0564, 0.55", "33.6956, -70.4184, -28.0764, 0.55", "33.7712, -71.5038, -30.2233, 0.55", "33.9893, -73.0744, -33.5426, 0.55", "34.1292, -73.9026, -35.3785, 0.55", "34.8579, -76.0051, -40.3911, 0.83", "35.3325, -77.2421, -43.4987, 0.28", "35.4916, -77.719, -44.7804, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-59.4737, -9.19567, -144.232, 0.28", "-60.3611, -10.0137, -144.367, 0.28", "-61.514, -11.0765, -144.541, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-59.4737, -9.19567, -144.232, 0.28", "-59.3827, -12.1386, -148.901, 0.28", "-59.3561, -12.999, -150.266, 0.55", "-59.2729, -15.6909, -154.537, 0.28", "-59.236, -16.8824, -156.427, 0.83", "-59.0748, -22.0968, -164.699, 0.28", "-59.0483, -22.9538, -166.059, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-0.585716, 377.424, -47.4365, 0.55", "-1.1764, 378.171, -48.7446, 0.55", "-1.7975, 379.068, -50.0916, 0.28", "-2.41685, 379.962, -51.4349, 0.55", "-4.20776, 382.548, -55.319, 0.28", "-4.41365, 382.845, -55.7655, 0.55", "-5.74159, 384.763, -58.6455, 0.28", "-6.38241, 385.57, -60.2277, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-0.585716, 377.424, -47.4365, 0.28", "-2.11552, 376.904, -48.1324, 0.28", "-2.96697, 376.616, -48.5198, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "120.428, 103.213, -154.799, 0.28", "117.003, 104.42, -154.606, 0.28", "115.842, 104.829, -154.541, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "120.428, 103.213, -154.799, 0.28", "120.487, 104.109, -154.707, 0.28", "120.583, 105.798, -154.51, 0.28", "120.6, 106.253, -154.434, 0.55", "120.624, 107.915, -154.064, 0.28", "120.637, 108.87, -153.851, 0.55", "120.655, 110.104, -153.575, 0.28", "120.652, 110.756, -153.391, 0.55", "120.624, 111.795, -153.017, 0.28", "120.576, 112.636, -152.696, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "35.4916, -77.719, -44.7804, 0.55", "34.2792, -78.7444, -45.6804, 0.55", "33.721, -79.2479, -46.1207, 0.28", "33.3412, -79.5665, -46.4147, 0.83", "30.9921, -81.4206, -48.0908, 0.28", "30.3326, -81.958, -48.5533, 0.83", "27.5002, -84.3262, -50.4656, 0.28", "27.1067, -84.6528, -50.7271, 0.83", "24.6635, -86.5264, -52.2371, 0.28", "23.9472, -87.0475, -52.6228, 0.55", "20.8128, -89.1538, -54.0779, 0.28", "20.1714, -89.5624, -54.3731, 0.28", "18.7834, -90.3943, -55.0097, 0.83", "14.6744, -92.7648, -56.9279, 0.28", "13.5398, -93.4055, -57.4876, 0.55", "11.3071, -94.6329, -58.6324, 0.55", "9.64384, -95.4969, -59.4778, 0.55", "6.78169, -97.0132, -60.9495, 0.28", "5.98847, -97.4725, -61.3626, 0.83", "3.34766, -99.1181, -62.6788, 0.28", "2.84368, -99.4589, -62.9145, 0.55", "0.671192, -101.054, -63.6907, 0.28", "0.0276432, -101.513, -63.8542, 0.55", "-2.39153, -103.296, -64.2718, 0.28", "-2.60931, -103.448, -64.3074, 0.83", "-3.88361, -104.29, -64.4098, 0.28", "-4.90426, -104.944, -64.4267, 0.55", "-8.01116, -106.841, -64.4039, 0.28", "-8.93296, -107.413, -64.3533, 0.83", "-12.855, -109.881, -63.903, 0.28", "-14.5303, -110.96, -63.6769, 0.55", "-16.7295, -112.434, -63.3845, 0.55", "-19.1481, -114.152, -62.9942, 0.28", "-21.1285, -115.665, -62.5486, 0.55", "-22.5628, -116.792, -62.29, 0.28", "-22.7724, -116.969, -62.2553, 0.55", "-24.0815, -118.019, -62.1211, 0.28", "-25.1175, -118.776, -62.0429, 0.55", "-26.2797, -119.536, -61.9878, 0.55", "-28.3418, -120.68, -62.0193, 0.28", "-29.2292, -121.117, -62.0227, 0.55", "-30.504, -121.718, -62.0206, 0.28", "-31.3135, -122.069, -61.9967, 0.55", "-33.5128, -122.979, -61.9417, 0.28", "-34.2609, -123.274, -61.9518, 0.55", "-36.1348, -124.04, -61.9766, 0.28", "-37.3611, -124.589, -62.1145, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "35.4916, -77.719, -44.7804, 0.28", "39.5825, -78.1879, -47.8729, 0.28", "40.1421, -78.2955, -48.3716, 0.83", "42.7124, -78.9547, -50.6586, 0.28", "43.6025, -79.1595, -51.47, 0.28", "44.68, -79.4842, -52.5045, 0.55", "46.4034, -80.1865, -54.5816, 0.28", "48.0487, -81.1388, -57.0791, 0.55", "49.0014, -81.8062, -58.5675, 0.55", "50.0672, -82.7974, -60.5671, 0.55", "51.7629, -84.6441, -64.2558, 0.83", "53.5955, -86.9812, -68.9062, 0.28", "54.1822, -87.821, -70.561, 0.28", "54.4393, -88.3192, -71.465, 0.83", "56.0167, -91.7833, -77.6312, 0.28", "56.4023, -92.8704, -79.4411, 0.83", "56.679, -93.8773, -81.0133, 0.83", "57.1847, -95.8007, -83.7344, 0.83", "57.9969, -99.2323, -88.3806, 0.55", "58.684, -102.504, -92.3413, 0.55", "59.5667, -107.04, -97.0235, 0.55", "59.9136, -109.503, -99.2346, 0.55", "60.1516, -111.892, -101.073, 0.28", "60.1777, -112.203, -101.263, 0.55", "60.5135, -116.861, -103.336, 0.28", "60.6138, -118.608, -103.883, 0.55", "61.0249, -123.718, -105.127, 0.28", "61.3696, -126.58, -105.72, 0.55", "61.8721, -129.635, -106.301, 0.28", "62.419, -131.886, -106.657, 0.55", "64.067, -137.042, -107.266, 0.28", "64.5614, -138.256, -107.366, 1.11", "67.7402, -144.198, -107.671, 0.28", "69.6053, -147.023, -107.751, 0.55", "71.8233, -149.539, -107.524, 0.28", "72.7012, -150.279, -107.341, 0.55", "75.3147, -151.995, -106.564, 0.28", "77.1976, -153.023, -105.903, 0.28", "81.1095, -154.656, -104.325, 0.55", "87.0079, -157.031, -101.766, 0.55", "89.323, -157.952, -100.736, 0.28", "89.798, -158.124, -100.546, 0.55", "93.2162, -159.246, -99.3898, 0.28", "93.802, -159.433, -99.2176, 0.55", "96.4265, -160.192, -98.7634, 0.28", "97.5625, -160.485, -98.7286, 0.55", "102.178, -161.156, -98.576, 0.28", "103.699, -161.182, -98.4282, 0.55", "106.114, -160.964, -98.2546, 0.28", "106.939, -160.78, -98.1125, 0.55", "109.396, -159.963, -97.5414, 0.28", "111.558, -159.155, -96.9502, 0.55", "115.669, -157.348, -95.4037, 0.28", "118.853, -155.806, -94.0593, 0.55", "125.654, -152.099, -90.9758, 0.28", "126.651, -151.533, -90.4894, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_26", "dend_11", "dend_0", "dend_32", "dend_27", "dend_21", "dend_12", "dend_4", "dend_1", "dend_42", "dend_33", "dend_31", "dend_28", "dend_23", "dend_22", "dend_16", "dend_13", "dend_6", "dend_5", "dend_3", "dend_2", "dend_48", "dend_43", "dend_39", "dend_34", "dend_30", "dend_29", "dend_25", "dend_24", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_7", "dend_45", "dend_44", "dend_41", "dend_40", "dend_38", "dend_35", "dend_20", "dend_19", "dend_9", "dend_8", "dend_47", "dend_46", "dend_37", "dend_36" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_26", "dend_11", "dend_0", "dend_32", "dend_27", "dend_21", "dend_12", "dend_4", "dend_1", "dend_42", "dend_33", "dend_31", "dend_28", "dend_23", "dend_22", "dend_16", "dend_13", "dend_6", "dend_5", "dend_3", "dend_2", "dend_48", "dend_43", "dend_39", "dend_34", "dend_30", "dend_29", "dend_25", "dend_24", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_7", "dend_45", "dend_44", "dend_41", "dend_40", "dend_38", "dend_35", "dend_20", "dend_19", "dend_9", "dend_8", "dend_47", "dend_46", "dend_37", "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_26", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "axon_1", "axon_1", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.04239E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bSTUT213_L4_BTC_9c68c60c2f_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_32, id: dend_32, parent: dend_26
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_11
create dend_21
public dend_21
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_42, id: dend_42, parent: dend_32
create dend_42
public dend_42
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_48, id: dend_48, parent: dend_42
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_39, id: dend_39, parent: dend_33
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_47
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_1, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_26(0), soma_0(0.49999977243497945)
    connect dend_11(0), soma_0(0.49999977243497945)
    connect dend_0(0), soma_0(0.49999977243497945)
    connect axon_0(0), soma_0(1.0)
    connect dend_32(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_42(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_48(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_39(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.41353, 11.9919, 1.31418, 2.57576 ) }
    soma_0 { pt3dadd( -2.15404, 10.8832, 1.19952, 4.64379 ) }
    soma_0 { pt3dadd( -1.89456, 9.77439, 1.08486, 7.1282 ) }
    soma_0 { pt3dadd( -1.63508, 8.66563, 0.970208, 9.55084 ) }
    soma_0 { pt3dadd( -1.37559, 7.55686, 0.855552, 11.3429 ) }
    soma_0 { pt3dadd( -1.11611, 6.44809, 0.740896, 12.5314 ) }
    soma_0 { pt3dadd( -0.856626, 5.33932, 0.626239, 13.4739 ) }
    soma_0 { pt3dadd( -0.597143, 4.23056, 0.511583, 13.1445 ) }
    soma_0 { pt3dadd( -0.337659, 3.12179, 0.396927, 12.6062 ) }
    soma_0 { pt3dadd( -0.0781762, 2.01302, 0.282271, 12.0679 ) }
    soma_0 { pt3dadd( 0.181307, 0.904256, 0.167615, 11.529 ) }
    soma_0 { pt3dadd( 0.44079, -0.204511, 0.0529586, 10.9839 ) }
    soma_0 { pt3dadd( 0.700273, -1.31328, -0.0616975, 10.4042 ) }
    soma_0 { pt3dadd( 0.959757, -2.42205, -0.176354, 9.22811 ) }
    soma_0 { pt3dadd( 1.21924, -3.53081, -0.29101, 7.93477 ) }
    soma_0 { pt3dadd( 1.47872, -4.63958, -0.405666, 7.09354 ) }
    soma_0 { pt3dadd( 1.73821, -5.74835, -0.520322, 6.0452 ) }
    soma_0 { pt3dadd( 1.99769, -6.85711, -0.634978, 4.95117 ) }
    soma_0 { pt3dadd( 2.25717, -7.96588, -0.749635, 4.10786 ) }
    soma_0 { pt3dadd( 2.51666, -9.07465, -0.864291, 3.50414 ) }
    soma_0 { pt3dadd( 2.77614, -10.1834, -0.978947, 3.28095 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 21/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 1.75135, -9.07039, 1.8584, 2.77 ) }
    dend_26 { pt3dadd( 2.13433, -13.6092, 1.8584, 3.05 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 23/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -5.09865, 9.72061, -3.7416, 1.38 ) }
    dend_11 { pt3dadd( -6.32171, 11.6332, -3.96547, 1.38 ) }
    dend_11 { pt3dadd( -8.23673, 14.6279, -4.31599, 1.66 ) }
    dend_11 { pt3dadd( -9.87185, 17.1849, -4.61527, 1.38 ) }
    dend_11 { pt3dadd( -11.1794, 19.2297, -4.85461, 1.11 ) }
    dend_11 { pt3dadd( -12.2121, 20.8446, -5.04363, 1.11 ) }
    dend_11 { pt3dadd( -14.5994, 24.5779, -5.4806, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 30/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 6.01135, 6.08211, 6.4384, 1.38 ) }
    dend_0 { pt3dadd( 6.01695, 10.6921, 7.74088, 1.38 ) }
    dend_0 { pt3dadd( 6.17483, 13.5414, 8.54875, 1.38 ) }
    dend_0 { pt3dadd( 6.64283, 18.5235, 10.1331, 1.38 ) }
    dend_0 { pt3dadd( 7.28252, 23.8373, 11.9032, 1.38 ) }
    dend_0 { pt3dadd( 7.76399, 27.8368, 13.2355, 1.38 ) }
    dend_0 { pt3dadd( 8.19362, 31.4056, 14.4244, 0.83 ) }
    dend_0 { pt3dadd( 8.4742, 34.8751, 15.6615, 1.38 ) }
    dend_0 { pt3dadd( 8.88511, 38.9922, 17.1941, 1.38 ) }
    dend_0 { pt3dadd( 9.82396, 43.9021, 18.9901, 1.11 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 40/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.77614, -10.1834, -0.978947, 0.694477 ) }
    axon_0 { pt3dadd( 6.19422, -24.7888, -0.978947, 0.694477 ) }
    axon_0 { pt3dadd( 9.61231, -39.3941, -0.978947, 0.694477 ) }
    // Section: dend_32, id: dend_32, parent: dend_26 (entry count 43/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 2.13433, -13.6092, 1.8584, 2.22 ) }
    dend_32 { pt3dadd( 4.42368, -17.7505, 1.3519, 2.22 ) }
    dend_32 { pt3dadd( 5.61462, -19.9048, 1.08841, 1.66 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 46/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 2.13433, -13.6092, 1.8584, 0.83 ) }
    dend_27 { pt3dadd( -0.633681, -15.7031, 3.68611, 0.83 ) }
    dend_27 { pt3dadd( -2.47996, -17.1538, 5.22059, 1.11 ) }
    dend_27 { pt3dadd( -5.0272, -19.1552, 7.33766, 0.83 ) }
    dend_27 { pt3dadd( -6.98371, -20.6924, 8.96377, 0.83 ) }
    dend_27 { pt3dadd( -10.301, -23.2989, 11.7208, 1.38 ) }
    dend_27 { pt3dadd( -13.4717, -25.7902, 14.3561, 1.38 ) }
    dend_27 { pt3dadd( -16.191, -27.728, 16.9268, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_11 (entry count 54/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -14.5994, 24.5779, -5.4806, 0.55 ) }
    dend_21 { pt3dadd( -18.0158, 24.9579, -4.86579, 0.55 ) }
    dend_21 { pt3dadd( -19.68, 24.9303, -4.34454, 0.55 ) }
    dend_21 { pt3dadd( -20.8762, 24.8419, -3.89694, 0.55 ) }
    dend_21 { pt3dadd( -22.8477, 24.6212, -3.12055, 1.11 ) }
    dend_21 { pt3dadd( -26.2951, 24.1369, -1.7699, 0.83 ) }
    dend_21 { pt3dadd( -29.769, 23.5202, -0.381297, 0.83 ) }
    dend_21 { pt3dadd( -33.4264, 22.612, 1.22043, 0.55 ) }
    dend_21 { pt3dadd( -35.4103, 22.0162, 2.09668, 1.38 ) }
    dend_21 { pt3dadd( -36.8494, 21.5087, 2.73641, 0.28 ) }
    dend_21 { pt3dadd( -38.1581, 20.9734, 3.31934, 0.83 ) }
    dend_21 { pt3dadd( -39.7428, 20.3226, 4.05802, 0.28 ) }
    dend_21 { pt3dadd( -40.8473, 19.8562, 4.60649, 0.55 ) }
    dend_21 { pt3dadd( -42.2397, 19.3408, 5.24895, 0.55 ) }
    dend_21 { pt3dadd( -44.4527, 18.5912, 6.26494, 0.55 ) }
    dend_21 { pt3dadd( -46.3624, 17.9563, 7.1311, 0.55 ) }
    dend_21 { pt3dadd( -49.6248, 16.9503, 8.64918, 0.55 ) }
    dend_21 { pt3dadd( -51.0, 16.5572, 9.26263, 0.55 ) }
    dend_21 { pt3dadd( -53.6269, 15.8425, 10.3748, 0.83 ) }
    dend_21 { pt3dadd( -55.4692, 15.3815, 11.1157, 0.83 ) }
    dend_21 { pt3dadd( -56.9296, 15.038, 11.6428, 0.83 ) }
    dend_21 { pt3dadd( -60.0345, 14.3668, 12.715, 0.83 ) }
    dend_21 { pt3dadd( -61.1819, 14.1069, 13.0779, 0.83 ) }
    dend_21 { pt3dadd( -63.9607, 13.4405, 14.035, 0.83 ) }
    dend_21 { pt3dadd( -67.7599, 12.4423, 15.3885, 0.83 ) }
    dend_21 { pt3dadd( -68.7146, 12.2122, 15.7253, 0.83 ) }
    dend_21 { pt3dadd( -70.7931, 11.7546, 16.422, 0.28 ) }
    dend_21 { pt3dadd( -71.9453, 11.476, 16.7394, 0.83 ) }
    dend_21 { pt3dadd( -74.6995, 10.7913, 17.4234, 0.28 ) }
    dend_21 { pt3dadd( -76.6149, 10.3088, 17.7785, 0.83 ) }
    dend_21 { pt3dadd( -78.8372, 9.75381, 18.0771, 0.28 ) }
    dend_21 { pt3dadd( -79.3175, 9.63261, 18.1344, 0.55 ) }
    dend_21 { pt3dadd( -82.0528, 9.02412, 18.35, 0.55 ) }
    dend_21 { pt3dadd( -84.0166, 8.64994, 18.4485, 0.28 ) }
    dend_21 { pt3dadd( -86.2232, 8.25629, 18.3484, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 89/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -14.5994, 24.5779, -5.4806, 1.11 ) }
    dend_12 { pt3dadd( -15.8995, 28.5691, -8.22382, 1.11 ) }
    dend_12 { pt3dadd( -16.6303, 30.7571, -9.50163, 1.11 ) }
    dend_12 { pt3dadd( -17.5117, 33.3959, -11.0428, 1.11 ) }
    dend_12 { pt3dadd( -18.2527, 35.6143, -12.3383, 1.11 ) }
    dend_12 { pt3dadd( -19.1252, 38.2264, -13.8639, 0.83 ) }
    dend_12 { pt3dadd( -20.0187, 40.9015, -15.4262, 0.83 ) }
    dend_12 { pt3dadd( -20.6548, 43.0228, -16.3402, 1.11 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 97/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 9.82396, 43.9021, 18.9901, 0.83 ) }
    dend_4 { pt3dadd( 8.95404, 46.9741, 19.9359, 0.83 ) }
    dend_4 { pt3dadd( 8.30339, 49.2718, 20.6433, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_4 { pt3dadd( 7.79943, 51.0515, 21.1913, 0.83 ) }
    dend_4 { pt3dadd( 7.01298, 53.8287, 22.0463, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 2/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 9.82396, 43.9021, 18.9901, 0.83 ) }
    dend_1 { pt3dadd( 14.4376, 47.7423, 19.0259, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 4/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 9.61231, -39.3941, -0.978947, 0.694477 ) }
    axon_1 { pt3dadd( 13.0304, -53.9995, -0.978947, 0.694477 ) }
    axon_1 { pt3dadd( 16.4485, -68.6049, -0.978947, 0.694477 ) }
    // Section: dend_42, id: dend_42, parent: dend_32 (entry count 7/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 5.61462, -19.9048, 1.08841, 0.83 ) }
    dend_42 { pt3dadd( 6.10156, -21.6604, -1.93496, 0.83 ) }
    dend_42 { pt3dadd( 6.36766, -22.4767, -3.73972, 0.83 ) }
    dend_42 { pt3dadd( 6.68135, -23.3506, -6.01299, 0.83 ) }
    dend_42 { pt3dadd( 7.86127, -26.7608, -15.3701, 0.83 ) }
    dend_42 { pt3dadd( 8.51907, -28.6372, -20.5578, 0.83 ) }
    dend_42 { pt3dadd( 9.50489, -31.4493, -28.3323, 0.55 ) }
    dend_42 { pt3dadd( 9.81414, -32.7036, -32.1347, 0.83 ) }
    dend_42 { pt3dadd( 10.0791, -34.0324, -36.5481, 0.83 ) }
    dend_42 { pt3dadd( 10.3152, -35.1564, -40.7373, 1.11 ) }
    dend_42 { pt3dadd( 10.4219, -35.3308, -41.461, 1.11 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 18/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 5.61462, -19.9048, 1.08841, 1.66 ) }
    dend_33 { pt3dadd( 6.49788, -22.1348, 1.09787, 1.66 ) }
    dend_33 { pt3dadd( 7.77203, -24.8277, 1.06098, 1.11 ) }
    dend_33 { pt3dadd( 8.73649, -26.6146, 1.02089, 1.11 ) }
    dend_33 { pt3dadd( 10.5838, -29.3906, 1.19816, 1.11 ) }
    dend_33 { pt3dadd( 12.1609, -31.7605, 1.3495, 1.11 ) }
    dend_33 { pt3dadd( 13.264, -33.4182, 1.45536, 1.38 ) }
    dend_33 { pt3dadd( 14.5788, -35.1902, 1.57249, 1.11 ) }
    dend_33 { pt3dadd( 15.4158, -36.1755, 1.67598, 1.11 ) }
    dend_33 { pt3dadd( 19.0249, -39.5866, 2.25428, 1.66 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 28/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -16.191, -27.728, 16.9268, 0.28 ) }
    dend_31 { pt3dadd( -15.575, -29.8209, 20.2993, 0.28 ) }
    dend_31 { pt3dadd( -15.3654, -30.6818, 21.839, 1.11 ) }
    dend_31 { pt3dadd( -14.6097, -33.5278, 27.2577, 0.55 ) }
    dend_31 { pt3dadd( -14.3581, -34.4086, 28.8879, 0.83 ) }
    dend_31 { pt3dadd( -13.8012, -36.3584, 32.4966, 0.83 ) }
    dend_31 { pt3dadd( -13.1594, -38.6058, 36.6559, 0.55 ) }
    dend_31 { pt3dadd( -12.7929, -39.8728, 39.119, 1.11 ) }
    dend_31 { pt3dadd( -12.0781, -42.0661, 43.5642, 0.55 ) }
    dend_31 { pt3dadd( -11.8825, -42.8444, 45.1345, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 38/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -16.191, -27.728, 16.9268, 0.83 ) }
    dend_28 { pt3dadd( -19.8131, -27.781, 19.7121, 0.83 ) }
    dend_28 { pt3dadd( -22.5428, -27.7983, 21.7564, 1.11 ) }
    dend_28 { pt3dadd( -25.2638, -27.7261, 23.7001, 0.83 ) }
    dend_28 { pt3dadd( -28.353, -27.5804, 25.7889, 0.83 ) }
    dend_28 { pt3dadd( -32.1628, -27.4007, 28.3648, 0.83 ) }
    dend_28 { pt3dadd( -35.7994, -27.2291, 30.8238, 0.83 ) }
    dend_28 { pt3dadd( -39.8126, -27.0378, 33.4552, 1.11 ) }
    dend_28 { pt3dadd( -44.0895, -26.7702, 36.0736, 1.11 ) }
    dend_28 { pt3dadd( -47.9114, -26.4816, 38.3043, 1.11 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 48/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -86.2232, 8.25629, 18.3484, 0.28 ) }
    dend_23 { pt3dadd( -86.1485, 6.87176, 18.7126, 0.28 ) }
    dend_23 { pt3dadd( -86.122, 6.38021, 18.8418, 0.83 ) }
    dend_23 { pt3dadd( -85.9881, 3.89895, 19.4944, 0.28 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 52/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -86.2232, 8.25629, 18.3484, 0.28 ) }
    dend_22 { pt3dadd( -89.4127, 8.38461, 18.6376, 0.28 ) }
    dend_22 { pt3dadd( -90.4679, 8.36587, 18.4016, 0.55 ) }
    dend_22 { pt3dadd( -92.7327, 8.19907, 17.551, 0.28 ) }
    dend_22 { pt3dadd( -94.733, 7.98207, 16.6768, 0.83 ) }
    dend_22 { pt3dadd( -97.1156, 7.7236, 15.6356, 0.28 ) }
    dend_22 { pt3dadd( -99.4013, 7.47566, 14.6367, 0.28 ) }
    dend_22 { pt3dadd( -103.15, 6.8589, 12.2832, 0.28 ) }
    dend_22 { pt3dadd( -103.894, 6.71207, 11.7086, 0.83 ) }
    dend_22 { pt3dadd( -104.997, 6.45906, 10.6035, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 62/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -20.6548, 43.0228, -16.3402, 0.55 ) }
    dend_16 { pt3dadd( -21.9704, 43.3215, -17.3695, 0.55 ) }
    dend_16 { pt3dadd( -24.2898, 43.8482, -19.1842, 0.55 ) }
    dend_16 { pt3dadd( -26.529, 44.3566, -20.9361, 0.83 ) }
    dend_16 { pt3dadd( -30.5689, 45.274, -24.097, 0.55 ) }
    dend_16 { pt3dadd( -33.1012, 45.849, -26.0783, 1.11 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 68/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -20.6548, 43.0228, -16.3402, 0.55 ) }
    dend_13 { pt3dadd( -19.4488, 46.3646, -17.2025, 0.55 ) }
    dend_13 { pt3dadd( -18.9279, 48.0264, -17.5149, 0.55 ) }
    dend_13 { pt3dadd( -18.529, 49.4582, -17.6462, 0.83 ) }
    dend_13 { pt3dadd( -18.0216, 51.3472, -17.7204, 0.55 ) }
    dend_13 { pt3dadd( -17.7052, 52.5615, -17.7576, 0.83 ) }
    dend_13 { pt3dadd( -17.228, 54.3714, -17.7861, 0.55 ) }
    dend_13 { pt3dadd( -16.8914, 55.7516, -17.7207, 0.83 ) }
    dend_13 { pt3dadd( -16.3399, 57.7346, -17.6793, 0.28 ) }
    dend_13 { pt3dadd( -15.985, 58.8428, -17.6915, 0.83 ) }
    dend_13 { pt3dadd( -15.3273, 60.6671, -17.757, 0.55 ) }
    dend_13 { pt3dadd( -14.7847, 62.0977, -17.8365, 0.83 ) }
    dend_13 { pt3dadd( -13.9054, 64.289, -18.0142, 0.55 ) }
    dend_13 { pt3dadd( -12.8507, 66.7395, -18.2921, 0.83 ) }
    dend_13 { pt3dadd( -11.8293, 69.0088, -18.6425, 0.83 ) }
    dend_13 { pt3dadd( -10.4456, 72.0298, -19.1033, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 84/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 7.01298, 53.8287, 22.0463, 0.83 ) }
    dend_6 { pt3dadd( 8.43087, 58.007, 23.2765, 0.83 ) }
    dend_6 { pt3dadd( 9.76942, 62.6273, 24.5492, 0.83 ) }
    dend_6 { pt3dadd( 10.4648, 65.5046, 25.4133, 0.83 ) }
    dend_6 { pt3dadd( 11.3154, 69.5177, 26.6909, 0.83 ) }
    dend_6 { pt3dadd( 12.2141, 74.0435, 28.1369, 0.83 ) }
    dend_6 { pt3dadd( 13.1147, 79.0688, 29.7161, 0.83 ) }
    dend_6 { pt3dadd( 13.8391, 83.8711, 31.265, 0.83 ) }
    dend_6 { pt3dadd( 14.4608, 88.6517, 32.893, 0.83 ) }
    dend_6 { pt3dadd( 14.7658, 91.5333, 33.8171, 0.55 ) }
    dend_6 { pt3dadd( 15.048, 94.6755, 34.6768, 0.55 ) }
    dend_6 { pt3dadd( 15.3352, 97.2966, 35.2188, 0.83 ) }
    dend_6 { pt3dadd( 15.6742, 99.6256, 35.5192, 0.83 ) }
    dend_6 { pt3dadd( 16.0762, 101.761, 35.6831, 0.55 ) }
    dend_6 { pt3dadd( 16.6844, 104.44, 35.6418, 0.83 ) }
    dend_6 { pt3dadd( 17.2064, 106.609, 35.5437, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_6 { pt3dadd( 17.6402, 108.472, 35.4408, 0.83 ) }
    dend_6 { pt3dadd( 18.2626, 111.371, 35.2802, 0.55 ) }
    dend_6 { pt3dadd( 18.8253, 114.288, 35.0617, 0.83 ) }
    dend_6 { pt3dadd( 19.3325, 116.933, 34.5981, 0.55 ) }
    dend_6 { pt3dadd( 19.5809, 118.371, 34.263, 0.55 ) }
    dend_6 { pt3dadd( 19.9114, 120.601, 33.7059, 0.83 ) }
    dend_6 { pt3dadd( 20.3118, 123.797, 32.8565, 0.83 ) }
    dend_6 { pt3dadd( 20.618, 126.446, 32.1507, 0.55 ) }
    dend_6 { pt3dadd( 21.1943, 132.456, 30.4853, 0.83 ) }
    dend_6 { pt3dadd( 21.4906, 135.947, 29.5109, 0.83 ) }
    dend_6 { pt3dadd( 21.8514, 140.208, 28.3927, 0.83 ) }
    dend_6 { pt3dadd( 22.0648, 142.802, 27.8379, 0.83 ) }
    dend_6 { pt3dadd( 22.1711, 144.893, 27.5188, 0.83 ) }
    dend_6 { pt3dadd( 22.2064, 146.968, 27.3665, 0.55 ) }
    dend_6 { pt3dadd( 22.1671, 149.346, 27.3529, 0.55 ) }
    dend_6 { pt3dadd( 22.0288, 152.064, 27.3004, 0.83 ) }
    dend_6 { pt3dadd( 21.6067, 157.123, 27.1316, 0.83 ) }
    dend_6 { pt3dadd( 21.2638, 161.122, 26.9602, 1.11 ) }
    dend_6 { pt3dadd( 20.9737, 164.162, 26.7963, 0.55 ) }
    dend_6 { pt3dadd( 20.571, 167.502, 26.5944, 1.11 ) }
    dend_6 { pt3dadd( 19.8256, 172.206, 26.2892, 0.83 ) }
    dend_6 { pt3dadd( 19.136, 176.109, 25.9595, 0.83 ) }
    dend_6 { pt3dadd( 18.652, 178.705, 25.6347, 0.83 ) }
    dend_6 { pt3dadd( 18.2335, 181.286, 25.2342, 0.55 ) }
    dend_6 { pt3dadd( 17.7277, 184.904, 24.6033, 0.55 ) }
    dend_6 { pt3dadd( 17.6394, 185.754, 24.4399, 0.55 ) }
    dend_6 { pt3dadd( 17.4307, 188.905, 23.8836, 0.55 ) }
    dend_6 { pt3dadd( 17.3552, 191.2, 23.4255, 0.28 ) }
    dend_6 { pt3dadd( 17.3903, 194.866, 22.5505, 0.55 ) }
    dend_6 { pt3dadd( 17.6493, 199.024, 21.4216, 0.55 ) }
    dend_6 { pt3dadd( 17.8849, 201.361, 20.7376, 0.55 ) }
    dend_6 { pt3dadd( 18.3372, 205.431, 19.5372, 0.83 ) }
    dend_6 { pt3dadd( 18.8634, 209.731, 18.2622, 0.83 ) }
    dend_6 { pt3dadd( 19.2387, 212.779, 17.2113, 0.83 ) }
    dend_6 { pt3dadd( 19.4315, 214.538, 16.4979, 0.55 ) }
    dend_6 { pt3dadd( 19.5992, 216.098, 15.8142, 0.83 ) }
    dend_6 { pt3dadd( 19.7541, 218.611, 14.743, 0.83 ) }
    dend_6 { pt3dadd( 19.7717, 221.809, 13.4182, 0.83 ) }
    dend_6 { pt3dadd( 19.6094, 225.86, 12.0364, 0.83 ) }
    dend_6 { pt3dadd( 19.4355, 228.428, 11.2436, 0.83 ) }
    dend_6 { pt3dadd( 19.24, 230.807, 10.4344, 0.83 ) }
    dend_6 { pt3dadd( 18.9469, 234.169, 9.19446, 0.55 ) }
    dend_6 { pt3dadd( 18.5603, 237.682, 7.8622, 0.55 ) }
    dend_6 { pt3dadd( 18.2739, 240.241, 6.9377, 0.55 ) }
    dend_6 { pt3dadd( 17.9933, 243.082, 5.94034, 0.83 ) }
    dend_6 { pt3dadd( 17.6345, 247.405, 4.3613, 1.11 ) }
    dend_6 { pt3dadd( 17.3909, 251.926, 2.83707, 0.55 ) }
    dend_6 { pt3dadd( 17.3827, 254.559, 2.10805, 0.55 ) }
    dend_6 { pt3dadd( 17.457, 257.621, 1.41142, 0.55 ) }
    dend_6 { pt3dadd( 17.6498, 260.66, 0.848784, 0.83 ) }
    dend_6 { pt3dadd( 18.0952, 264.321, 0.346802, 0.83 ) }
    dend_6 { pt3dadd( 18.9632, 269.354, -0.157072, 0.83 ) }
    dend_6 { pt3dadd( 20.3486, 275.343, -0.77453, 0.83 ) }
    dend_6 { pt3dadd( 21.3093, 278.803, -1.19956, 0.55 ) }
    dend_6 { pt3dadd( 22.3611, 282.216, -1.69469, 0.55 ) }
    dend_6 { pt3dadd( 23.7971, 286.479, -2.37893, 0.83 ) }
    dend_6 { pt3dadd( 24.4479, 288.475, -2.76889, 0.83 ) }
    dend_6 { pt3dadd( 25.301, 291.642, -3.47989, 0.83 ) }
    dend_6 { pt3dadd( 26.0045, 295.415, -4.30454, 0.83 ) }
    dend_6 { pt3dadd( 26.2634, 298.571, -4.87301, 0.28 ) }
    dend_6 { pt3dadd( 26.2347, 300.222, -5.12456, 0.83 ) }
    dend_6 { pt3dadd( 25.8362, 304.97, -5.77425, 0.83 ) }
    dend_6 { pt3dadd( 25.3234, 308.771, -6.21047, 0.83 ) }
    dend_6 { pt3dadd( 24.5591, 312.492, -6.51463, 0.83 ) }
    dend_6 { pt3dadd( 23.5677, 316.34, -6.70575, 0.83 ) }
    dend_6 { pt3dadd( 22.8079, 318.906, -6.78122, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 66/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 7.01298, 53.8287, 22.0463, 0.83 ) }
    dend_5 { pt3dadd( 5.25557, 55.7704, 22.4074, 0.83 ) }
    dend_5 { pt3dadd( 3.97826, 57.4099, 22.7848, 0.55 ) }
    dend_5 { pt3dadd( 1.92838, 60.063, 23.3902, 0.55 ) }
    dend_5 { pt3dadd( 0.0149991, 62.5449, 23.95, 0.55 ) }
    dend_5 { pt3dadd( -2.15786, 65.1489, 24.5138, 0.55 ) }
    dend_5 { pt3dadd( -3.82178, 66.9277, 24.9083, 0.55 ) }
    dend_5 { pt3dadd( -6.8221, 69.6528, 25.5884, 0.55 ) }
    dend_5 { pt3dadd( -9.01269, 71.333, 25.9834, 0.55 ) }
    dend_5 { pt3dadd( -12.0323, 73.1881, 26.2705, 0.55 ) }
    dend_5 { pt3dadd( -16.8678, 75.2321, 26.302, 0.55 ) }
    dend_5 { pt3dadd( -19.7207, 76.013, 26.0829, 0.55 ) }
    dend_5 { pt3dadd( -22.8641, 76.3478, 25.6536, 0.55 ) }
    dend_5 { pt3dadd( -24.7298, 76.2491, 25.2533, 0.55 ) }
    dend_5 { pt3dadd( -26.2332, 75.9421, 24.8346, 0.55 ) }
    dend_5 { pt3dadd( -29.0075, 74.936, 23.8577, 0.28 ) }
    dend_5 { pt3dadd( -30.365, 74.2507, 23.3131, 0.83 ) }
    dend_5 { pt3dadd( -32.2132, 73.1964, 22.5621, 0.55 ) }
    dend_5 { pt3dadd( -33.3995, 72.3497, 22.0197, 0.55 ) }
    dend_5 { pt3dadd( -34.8977, 70.929, 21.2518, 0.55 ) }
    dend_5 { pt3dadd( -36.2684, 69.3545, 20.4751, 0.83 ) }
    dend_5 { pt3dadd( -37.3919, 67.9144, 19.7689, 0.55 ) }
    dend_5 { pt3dadd( -38.2946, 66.6742, 19.1189, 0.55 ) }
    dend_5 { pt3dadd( -40.3214, 63.7333, 17.5219, 0.55 ) }
    dend_5 { pt3dadd( -42.2859, 60.9523, 15.8891, 0.83 ) }
    dend_5 { pt3dadd( -43.774, 58.9152, 14.5525, 0.83 ) }
    dend_5 { pt3dadd( -45.2246, 56.8689, 12.9656, 0.83 ) }
    dend_5 { pt3dadd( -46.9077, 54.6241, 11.0252, 0.55 ) }
    dend_5 { pt3dadd( -47.7423, 53.6317, 10.1325, 0.28 ) }
    dend_5 { pt3dadd( -48.8489, 52.5018, 9.07083, 0.55 ) }
    dend_5 { pt3dadd( -50.1614, 51.3367, 7.82781, 0.28 ) }
    dend_5 { pt3dadd( -53.0524, 49.038, 5.27606, 0.55 ) }
    dend_5 { pt3dadd( -54.8921, 47.7206, 3.76212, 0.55 ) }
    dend_5 { pt3dadd( -56.7557, 46.5033, 2.38679, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_5 { pt3dadd( -58.483, 45.4301, 1.2078, 0.55 ) }
    dend_5 { pt3dadd( -61.5364, 43.4759, -0.740512, 0.55 ) }
    dend_5 { pt3dadd( -62.6343, 42.7643, -1.36954, 0.83 ) }
    dend_5 { pt3dadd( -64.6355, 41.4051, -2.40863, 0.55 ) }
    dend_5 { pt3dadd( -67.3576, 39.2723, -3.91133, 0.55 ) }
    dend_5 { pt3dadd( -69.1972, 37.4921, -4.95696, 0.83 ) }
    dend_5 { pt3dadd( -71.1235, 35.1968, -5.98819, 0.55 ) }
    dend_5 { pt3dadd( -72.3769, 33.3065, -6.61998, 0.55 ) }
    dend_5 { pt3dadd( -73.4867, 31.3299, -7.1653, 0.55 ) }
    dend_5 { pt3dadd( -73.991, 30.2385, -7.40189, 0.83 ) }
    dend_5 { pt3dadd( -75.1136, 27.3483, -7.9371, 0.55 ) }
    dend_5 { pt3dadd( -76.2885, 23.9013, -8.48923, 0.28 ) }
    dend_5 { pt3dadd( -77.9166, 18.8801, -9.22879, 0.28 ) }
    dend_5 { pt3dadd( -78.5535, 16.7528, -9.60231, 0.83 ) }
    dend_5 { pt3dadd( -79.7588, 12.5609, -10.3746, 0.28 ) }
    dend_5 { pt3dadd( -80.193, 11.095, -10.6405, 0.83 ) }
    dend_5 { pt3dadd( -80.4758, 10.185, -10.8029, 0.28 ) }
    dend_5 { pt3dadd( -80.8683, 8.73566, -11.0539, 0.83 ) }
    dend_5 { pt3dadd( -81.6622, 5.85021, -11.5625, 0.28 ) }
    dend_5 { pt3dadd( -82.0262, 4.76615, -11.7603, 0.55 ) }
    dend_5 { pt3dadd( -83.0071, 2.37726, -12.2399, 0.28 ) }
    dend_5 { pt3dadd( -83.6141, 1.01151, -12.5312, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 22/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 14.4376, 47.7423, 19.0259, 0.83 ) }
    dend_3 { pt3dadd( 14.4937, 49.007, 17.2409, 0.83 ) }
    dend_3 { pt3dadd( 14.6093, 50.5994, 15.2346, 0.83 ) }
    dend_3 { pt3dadd( 14.7214, 51.61, 14.0888, 0.83 ) }
    dend_3 { pt3dadd( 15.7412, 57.6813, 7.86552, 0.55 ) }
    dend_3 { pt3dadd( 16.1458, 59.3516, 6.37131, 0.55 ) }
    dend_3 { pt3dadd( 16.4304, 60.254, 5.67208, 0.55 ) }
    dend_3 { pt3dadd( 16.8685, 61.4071, 4.8776, 0.55 ) }
    dend_3 { pt3dadd( 17.4006, 62.5473, 4.30495, 1.11 ) }
    dend_3 { pt3dadd( 18.1265, 63.8769, 3.97364, 0.55 ) }
    dend_3 { pt3dadd( 19.532, 66.1066, 3.95521, 0.55 ) }
    dend_3 { pt3dadd( 20.7403, 68.1031, 4.02692, 0.55 ) }
    dend_3 { pt3dadd( 21.525, 69.3992, 4.12168, 0.55 ) }
    dend_3 { pt3dadd( 22.506, 71.0219, 4.37994, 0.83 ) }
    dend_3 { pt3dadd( 23.621, 72.9828, 4.82695, 0.55 ) }
    dend_3 { pt3dadd( 24.4024, 74.536, 5.25759, 1.11 ) }
    dend_3 { pt3dadd( 25.1635, 76.1463, 5.77983, 0.55 ) }
    dend_3 { pt3dadd( 25.8867, 77.7253, 6.32473, 0.83 ) }
    dend_3 { pt3dadd( 27.0943, 80.4729, 7.25172, 0.55 ) }
    dend_3 { pt3dadd( 27.713, 81.9162, 7.71058, 0.55 ) }
    dend_3 { pt3dadd( 28.5269, 83.9163, 8.292, 0.55 ) }
    dend_3 { pt3dadd( 29.1592, 85.4957, 8.64492, 0.55 ) }
    dend_3 { pt3dadd( 29.5355, 86.48, 8.81581, 0.28 ) }
    dend_3 { pt3dadd( 30.2741, 88.4438, 9.0496, 0.55 ) }
    dend_3 { pt3dadd( 30.8123, 89.9293, 9.13831, 0.28 ) }
    dend_3 { pt3dadd( 31.3207, 91.2824, 9.18424, 0.55 ) }
    dend_3 { pt3dadd( 32.2857, 93.8307, 9.22482, 0.55 ) }
    dend_3 { pt3dadd( 32.7938, 95.2663, 9.2372, 0.55 ) }
    dend_3 { pt3dadd( 33.4943, 97.2645, 9.22666, 0.28 ) }
    dend_3 { pt3dadd( 34.012, 99.3546, 8.66351, 0.83 ) }
    dend_3 { pt3dadd( 34.3683, 101.198, 7.87602, 0.28 ) }
    dend_3 { pt3dadd( 34.4388, 101.607, 7.64095, 0.55 ) }
    dend_3 { pt3dadd( 34.5795, 102.532, 6.90518, 0.28 ) }
    dend_3 { pt3dadd( 34.6609, 103.098, 6.36536, 0.83 ) }
    dend_3 { pt3dadd( 35.6323, 109.883, -0.864038, 0.55 ) }
    dend_3 { pt3dadd( 36.0824, 112.397, -3.65564, 0.55 ) }
    dend_3 { pt3dadd( 36.2419, 113.158, -4.48066, 0.83 ) }
    dend_3 { pt3dadd( 36.7494, 114.933, -6.13133, 0.55 ) }
    dend_3 { pt3dadd( 37.0744, 115.8, -6.75458, 0.55 ) }
    dend_3 { pt3dadd( 37.5541, 116.816, -7.00292, 0.83 ) }
    dend_3 { pt3dadd( 38.24, 118.062, -6.665, 0.28 ) }
    dend_3 { pt3dadd( 38.5021, 118.737, -6.54898, 0.55 ) }
    dend_3 { pt3dadd( 39.1067, 120.625, -6.03761, 0.28 ) }
    dend_3 { pt3dadd( 39.4662, 121.851, -5.51393, 0.55 ) }
    dend_3 { pt3dadd( 39.7592, 122.912, -5.07036, 0.28 ) }
    dend_3 { pt3dadd( 39.9128, 123.971, -4.72392, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 14.4376, 47.7423, 19.0259, 0.55 ) }
    dend_2 { pt3dadd( 16.0208, 46.9976, 20.5009, 0.55 ) }
    dend_2 { pt3dadd( 18.3965, 45.8801, 22.7143, 0.28 ) }
    dend_2 { pt3dadd( 19.6429, 45.2938, 23.8756, 0.55 ) }
    dend_2 { pt3dadd( 21.9326, 44.2167, 26.0089, 0.55 ) }
    dend_2 { pt3dadd( 24.9262, 42.8085, 28.798, 0.55 ) }
    dend_2 { pt3dadd( 26.563, 42.0386, 30.323, 0.28 ) }
    // Section: dend_48, id: dend_48, parent: dend_42 (entry count 75/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 10.4219, -35.3308, -41.461, 0.55 ) }
    dend_48 { pt3dadd( 6.6461, -33.9217, -42.4484, 0.55 ) }
    dend_48 { pt3dadd( 5.48977, -33.579, -43.07, 0.83 ) }
    dend_48 { pt3dadd( 2.80719, -32.8382, -44.6907, 0.55 ) }
    dend_48 { pt3dadd( 1.70606, -32.5587, -45.3416, 0.55 ) }
    dend_48 { pt3dadd( -3.29027, -31.7977, -48.9528, 0.28 ) }
    dend_48 { pt3dadd( -4.32029, -31.7052, -49.729, 0.83 ) }
    dend_48 { pt3dadd( -8.45225, -31.7334, -53.3585, 0.55 ) }
    dend_48 { pt3dadd( -8.89199, -31.7653, -53.7613, 0.55 ) }
    dend_48 { pt3dadd( -10.0619, -31.9236, -54.8697, 0.83 ) }
    dend_48 { pt3dadd( -15.2418, -32.7919, -59.6869, 0.55 ) }
    dend_48 { pt3dadd( -16.2385, -32.9902, -60.581, 0.55 ) }
    dend_48 { pt3dadd( -17.3602, -33.224, -61.6146, 0.83 ) }
    dend_48 { pt3dadd( -19.8193, -33.7004, -64.0282, 0.55 ) }
    dend_48 { pt3dadd( -20.3358, -33.7648, -64.5673, 0.55 ) }
    dend_48 { pt3dadd( -21.2832, -33.8057, -65.6502, 0.55 ) }
    dend_48 { pt3dadd( -25.1009, -33.5942, -70.1501, 0.28 ) }
    dend_48 { pt3dadd( -26.13, -33.495, -71.4416, 0.83 ) }
    dend_48 { pt3dadd( -29.5899, -32.9809, -75.8777, 0.55 ) }
    dend_48 { pt3dadd( -30.4734, -32.7822, -77.038, 0.83 ) }
    dend_48 { pt3dadd( -34.9497, -31.402, -82.9272, 0.55 ) }
    dend_48 { pt3dadd( -36.1798, -30.8671, -84.6382, 0.28 ) }
    dend_48 { pt3dadd( -36.8871, -30.4722, -85.6595, 0.83 ) }
    dend_48 { pt3dadd( -38.0604, -29.6802, -87.4446, 0.55 ) }
    dend_48 { pt3dadd( -38.8645, -28.982, -88.7189, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_48 { pt3dadd( -40.5094, -27.1993, -91.6348, 0.55 ) }
    dend_48 { pt3dadd( -42.3998, -24.3057, -95.5067, 0.28 ) }
    dend_48 { pt3dadd( -42.6551, -23.8579, -96.0918, 0.55 ) }
    dend_48 { pt3dadd( -43.2753, -22.6565, -97.6351, 0.28 ) }
    dend_48 { pt3dadd( -43.5109, -22.167, -98.2628, 0.55 ) }
    dend_48 { pt3dadd( -44.2687, -20.499, -100.353, 0.28 ) }
    dend_48 { pt3dadd( -44.5043, -19.9042, -101.067, 0.55 ) }
    dend_48 { pt3dadd( -45.2566, -18.0397, -103.281, 0.28 ) }
    dend_48 { pt3dadd( -45.5571, -17.3591, -104.141, 0.55 ) }
    dend_48 { pt3dadd( -46.2903, -15.8656, -106.035, 0.28 ) }
    dend_48 { pt3dadd( -46.4781, -15.5331, -106.458, 0.55 ) }
    dend_48 { pt3dadd( -47.2405, -14.1897, -108.038, 0.28 ) }
    dend_48 { pt3dadd( -47.5077, -13.7238, -108.577, 0.55 ) }
    dend_48 { pt3dadd( -48.3867, -12.2748, -110.158, 0.28 ) }
    dend_48 { pt3dadd( -48.9156, -11.578, -111.024, 0.55 ) }
    dend_48 { pt3dadd( -50.605, -9.56953, -113.513, 0.28 ) }
    dend_48 { pt3dadd( -51.3592, -8.76443, -114.544, 0.55 ) }
    dend_48 { pt3dadd( -53.6526, -6.62287, -117.696, 0.28 ) }
    dend_48 { pt3dadd( -54.3741, -5.98871, -118.727, 0.55 ) }
    dend_48 { pt3dadd( -56.8008, -4.01854, -122.51, 0.28 ) }
    dend_48 { pt3dadd( -57.6581, -3.38444, -123.88, 0.28 ) }
    dend_48 { pt3dadd( -58.6989, -2.66239, -125.565, 0.55 ) }
    dend_48 { pt3dadd( -60.5707, -1.42876, -128.453, 0.28 ) }
    dend_48 { pt3dadd( -60.9049, -1.18978, -128.95, 0.55 ) }
    dend_48 { pt3dadd( -62.4049, -0.202132, -131.265, 0.28 ) }
    dend_48 { pt3dadd( -63.1294, 0.27125, -132.362, 0.83 ) }
    dend_48 { pt3dadd( -64.6588, 1.22634, -134.567, 0.55 ) }
    dend_48 { pt3dadd( -65.642, 1.84771, -136.002, 0.55 ) }
    dend_48 { pt3dadd( -67.3315, 2.98618, -138.48, 0.55 ) }
    dend_48 { pt3dadd( -71.4946, 5.78719, -144.955, 0.83 ) }
    dend_48 { pt3dadd( -72.9174, 6.74188, -147.315, 0.28 ) }
    dend_48 { pt3dadd( -73.655, 7.24007, -148.639, 0.55 ) }
    dend_48 { pt3dadd( -76.3372, 9.04667, -153.96, 0.55 ) }
    dend_48 { pt3dadd( -76.9815, 9.52711, -155.418, 0.55 ) }
    dend_48 { pt3dadd( -79.0158, 11.0476, -160.415, 0.83 ) }
    dend_48 { pt3dadd( -80.3443, 11.991, -163.807, 0.28 ) }
    dend_48 { pt3dadd( -81.2564, 12.383, -166.058, 0.55 ) }
    dend_48 { pt3dadd( -82.334, 12.5314, -168.809, 0.28 ) }
    dend_48 { pt3dadd( -82.7875, 12.4764, -169.992, 0.83 ) }
    dend_48 { pt3dadd( -85.3719, 11.6517, -176.598, 0.55 ) }
    dend_48 { pt3dadd( -86.3712, 11.1492, -179.109, 0.55 ) }
    dend_48 { pt3dadd( -88.768, 9.72691, -184.75, 0.55 ) }
    dend_48 { pt3dadd( -92.7185, 7.4629, -192.934, 0.55 ) }
    dend_48 { pt3dadd( -93.7024, 6.9169, -194.802, 0.55 ) }
    dend_48 { pt3dadd( -96.2895, 5.55048, -199.443, 0.55 ) }
    dend_48 { pt3dadd( -99.1279, 4.17508, -204.245, 0.55 ) }
    dend_48 { pt3dadd( -101.448, 3.16603, -207.939, 0.55 ) }
    dend_48 { pt3dadd( -105.193, 1.6844, -213.375, 0.55 ) }
    dend_48 { pt3dadd( -109.228, 0.28181, -218.792, 0.55 ) }
    dend_48 { pt3dadd( -110.144, -0.0128317, -220.004, 0.55 ) }
    dend_48 { pt3dadd( -114.153, -1.34151, -225.309, 0.55 ) }
    dend_48 { pt3dadd( -115.123, -1.66625, -226.582, 0.28 ) }
    dend_48 { pt3dadd( -115.353, -1.74994, -226.891, 0.55 ) }
    dend_48 { pt3dadd( -124.245, -5.34296, -238.908, 0.28 ) }
    dend_48 { pt3dadd( -125.063, -5.6823, -239.981, 0.83 ) }
    dend_48 { pt3dadd( -129.886, -7.81179, -246.276, 0.28 ) }
    dend_48 { pt3dadd( -130.198, -7.95173, -246.678, 0.55 ) }
    dend_48 { pt3dadd( -132.489, -8.94203, -249.6, 0.28 ) }
    dend_48 { pt3dadd( -133.432, -9.35172, -250.777, 0.55 ) }
    dend_48 { pt3dadd( -135.375, -10.2703, -252.897, 0.28 ) }
    dend_48 { pt3dadd( -136.037, -10.5937, -253.633, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 61/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 10.4219, -35.3308, -41.461, 0.55 ) }
    dend_43 { pt3dadd( 12.2881, -35.8773, -44.6722, 0.55 ) }
    dend_43 { pt3dadd( 13.9123, -36.296, -47.1461, 0.55 ) }
    dend_43 { pt3dadd( 17.482, -37.212, -52.9036, 0.83 ) }
    dend_43 { pt3dadd( 18.4278, -37.5073, -54.45, 0.83 ) }
    dend_43 { pt3dadd( 19.5328, -37.8893, -56.241, 0.83 ) }
    dend_43 { pt3dadd( 20.4729, -38.2056, -57.7157, 0.83 ) }
    dend_43 { pt3dadd( 22.1548, -38.7514, -60.2567, 0.83 ) }
    dend_43 { pt3dadd( 24.9545, -39.7735, -64.5174, 0.83 ) }
    dend_43 { pt3dadd( 26.719, -40.3393, -67.0198, 0.83 ) }
    dend_43 { pt3dadd( 28.6216, -40.8797, -69.8513, 0.83 ) }
    dend_43 { pt3dadd( 30.7465, -41.4049, -72.9973, 0.83 ) }
    dend_43 { pt3dadd( 32.6841, -41.8363, -75.8576, 0.83 ) }
    dend_43 { pt3dadd( 35.8679, -42.5008, -80.3772, 0.83 ) }
    dend_43 { pt3dadd( 37.8755, -42.8329, -83.0665, 0.83 ) }
    dend_43 { pt3dadd( 40.4383, -43.1077, -86.5134, 0.83 ) }
    dend_43 { pt3dadd( 42.077, -43.2256, -88.7488, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_33 (entry count 78/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 19.0249, -39.5866, 2.25428, 0.55 ) }
    dend_39 { pt3dadd( 21.2987, -39.4292, 3.51673, 0.55 ) }
    dend_39 { pt3dadd( 23.1821, -39.4009, 4.6142, 0.28 ) }
    dend_39 { pt3dadd( 24.3681, -39.4655, 5.33966, 0.55 ) }
    dend_39 { pt3dadd( 26.373, -39.6411, 6.59348, 1.11 ) }
    dend_39 { pt3dadd( 29.9708, -40.099, 9.04007, 0.55 ) }
    dend_39 { pt3dadd( 31.3364, -40.3107, 10.0314, 0.55 ) }
    dend_39 { pt3dadd( 32.8273, -40.6226, 11.2181, 0.83 ) }
    dend_39 { pt3dadd( 34.3935, -40.9828, 12.5326, 0.28 ) }
    dend_39 { pt3dadd( 34.3935, -40.9828, 12.5326, 0.83 ) }
    dend_39 { pt3dadd( 36.985, -42.0151, 15.0049, 0.28 ) }
    dend_39 { pt3dadd( 37.6774, -42.3394, 15.6835, 1.11 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 90/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 19.0249, -39.5866, 2.25428, 0.83 ) }
    dend_34 { pt3dadd( 21.3088, -43.1572, 1.46965, 0.83 ) }
    dend_34 { pt3dadd( 23.3562, -45.8485, 0.391502, 0.55 ) }
    dend_34 { pt3dadd( 24.7138, -47.3882, -0.579352, 0.83 ) }
    dend_34 { pt3dadd( 25.8215, -48.6444, -1.37151, 0.83 ) }
    dend_34 { pt3dadd( 27.3568, -50.3855, -2.4694, 0.83 ) }
    dend_34 { pt3dadd( 28.7052, -51.9147, -3.43362, 0.83 ) }
    dend_34 { pt3dadd( 31.504, -54.464, -5.79653, 0.83 ) }
    dend_34 { pt3dadd( 33.561, -56.1377, -7.87673, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 99/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -47.9114, -26.4816, 38.3043, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_30 { pt3dadd( -48.1181, -23.8281, 38.9809, 0.55 ) }
    dend_30 { pt3dadd( -48.2806, -20.2075, 39.8362, 0.83 ) }
    dend_30 { pt3dadd( -48.5333, -15.0988, 40.9361, 0.55 ) }
    dend_30 { pt3dadd( -48.5638, -12.6697, 41.4612, 0.55 ) }
    dend_30 { pt3dadd( -48.5132, -9.1701, 42.2195, 1.11 ) }
    dend_30 { pt3dadd( -48.4173, -6.09114, 42.9151, 0.83 ) }
    dend_30 { pt3dadd( -48.2497, -2.87806, 43.6337, 0.55 ) }
    dend_30 { pt3dadd( -48.1459, -1.58549, 43.9309, 0.55 ) }
    dend_30 { pt3dadd( -47.852, 1.4561, 44.8882, 0.55 ) }
    dend_30 { pt3dadd( -47.796, 2.07346, 45.0872, 1.11 ) }
    dend_30 { pt3dadd( -47.5712, 3.42983, 45.8209, 0.55 ) }
    dend_30 { pt3dadd( -47.2368, 4.56497, 46.9619, 0.83 ) }
    dend_30 { pt3dadd( -46.8801, 5.45908, 48.3318, 0.55 ) }
    dend_30 { pt3dadd( -46.4773, 6.43576, 50.0871, 0.55 ) }
    dend_30 { pt3dadd( -46.257, 7.14077, 51.3794, 0.83 ) }
    dend_30 { pt3dadd( -45.5272, 10.9516, 57.0026, 0.55 ) }
    dend_30 { pt3dadd( -45.3571, 12.101, 58.4307, 0.83 ) }
    dend_30 { pt3dadd( -45.2346, 13.7267, 60.1267, 0.55 ) }
    dend_30 { pt3dadd( -45.2628, 15.5519, 61.807, 0.55 ) }
    dend_30 { pt3dadd( -45.461, 17.4333, 63.1755, 1.11 ) }
    dend_30 { pt3dadd( -45.9927, 21.2493, 65.3635, 0.55 ) }
    dend_30 { pt3dadd( -46.1931, 22.5573, 65.9727, 0.55 ) }
    dend_30 { pt3dadd( -46.6382, 26.0172, 67.4955, 0.55 ) }
    dend_30 { pt3dadd( -46.8901, 28.2833, 68.446, 0.55 ) }
    dend_30 { pt3dadd( -47.1652, 31.1669, 69.7143, 1.11 ) }
    dend_30 { pt3dadd( -47.4359, 34.3211, 71.2262, 0.55 ) }
    dend_30 { pt3dadd( -47.5571, 36.1678, 72.2665, 1.11 ) }
    dend_30 { pt3dadd( -47.7184, 38.4472, 73.6008, 0.28 ) }
    dend_30 { pt3dadd( -47.7595, 39.2177, 74.1008, 0.55 ) }
    dend_30 { pt3dadd( -47.8205, 40.4198, 74.9916, 0.28 ) }
    dend_30 { pt3dadd( -47.91, 41.8803, 76.3478, 0.83 ) }
    dend_30 { pt3dadd( -48.1405, 43.9765, 78.5805, 0.28 ) }
    dend_30 { pt3dadd( -48.2073, 44.7163, 79.4672, 0.55 ) }
    dend_30 { pt3dadd( -48.4189, 47.5949, 83.3232, 0.28 ) }
    dend_30 { pt3dadd( -48.4642, 48.678, 84.8194, 0.83 ) }
    dend_30 { pt3dadd( -48.4907, 50.245, 86.965, 0.55 ) }
    dend_30 { pt3dadd( -48.492, 51.853, 89.1376, 0.55 ) }
    dend_30 { pt3dadd( -48.4985, 53.5245, 91.3009, 0.55 ) }
    dend_30 { pt3dadd( -48.4666, 54.8396, 92.9381, 0.83 ) }
    dend_30 { pt3dadd( -48.3988, 56.4529, 94.8065, 0.28 ) }
    dend_30 { pt3dadd( -48.2842, 58.0603, 96.5514, 0.55 ) }
    dend_30 { pt3dadd( -48.0345, 60.2585, 98.5678, 0.55 ) }
    dend_30 { pt3dadd( -47.9509, 60.7147, 98.9265, 0.83 ) }
    dend_30 { pt3dadd( -47.5791, 62.9631, 100.189, 0.28 ) }
    dend_30 { pt3dadd( -47.2988, 64.2943, 100.717, 0.55 ) }
    dend_30 { pt3dadd( -47.0871, 65.4876, 100.961, 0.28 ) }
    dend_30 { pt3dadd( -46.8072, 68.1219, 101.104, 0.55 ) }
    dend_30 { pt3dadd( -46.5848, 71.0241, 100.99, 0.55 ) }
    dend_30 { pt3dadd( -46.3659, 75.2484, 100.684, 0.28 ) }
    dend_30 { pt3dadd( -46.3899, 78.2657, 100.136, 0.83 ) }
    dend_30 { pt3dadd( -46.5385, 82.7589, 99.0501, 0.55 ) }
    dend_30 { pt3dadd( -46.6876, 86.0755, 98.1066, 0.55 ) }
    dend_30 { pt3dadd( -46.7794, 87.4888, 97.6862, 0.55 ) }
    dend_30 { pt3dadd( -47.0186, 89.7141, 96.9634, 0.83 ) }
    dend_30 { pt3dadd( -47.7566, 95.8314, 95.111, 0.28 ) }
    dend_30 { pt3dadd( -47.9607, 97.107, 94.7413, 0.83 ) }
    dend_30 { pt3dadd( -48.2425, 98.8313, 94.3508, 0.28 ) }
    dend_30 { pt3dadd( -48.5236, 100.531, 94.1249, 0.55 ) }
    dend_30 { pt3dadd( -49.4874, 104.589, 94.1148, 0.83 ) }
    dend_30 { pt3dadd( -49.7516, 105.697, 94.5444, 0.83 ) }
    dend_30 { pt3dadd( -49.9656, 107.087, 95.9449, 0.28 ) }
    dend_30 { pt3dadd( -50.0019, 107.654, 96.7679, 0.55 ) }
    dend_30 { pt3dadd( -49.9237, 108.81, 98.9459, 0.28 ) }
    dend_30 { pt3dadd( -49.7039, 109.622, 100.639, 0.55 ) }
    dend_30 { pt3dadd( -48.3451, 111.233, 106.051, 0.28 ) }
    dend_30 { pt3dadd( -48.0012, 111.501, 107.187, 0.55 ) }
    dend_30 { pt3dadd( -47.3374, 111.913, 109.008, 0.28 ) }
    dend_30 { pt3dadd( -46.7355, 112.222, 110.462, 0.83 ) }
    dend_30 { pt3dadd( -45.6623, 112.708, 112.857, 0.83 ) }
    dend_30 { pt3dadd( -42.3929, 114.248, 119.484, 0.28 ) }
    dend_30 { pt3dadd( -41.8957, 114.516, 120.409, 0.55 ) }
    dend_30 { pt3dadd( -40.1155, 115.506, 123.544, 0.28 ) }
    dend_30 { pt3dadd( -39.0907, 116.11, 125.265, 0.83 ) }
    dend_30 { pt3dadd( -37.9743, 116.822, 127.05, 0.28 ) }
    dend_30 { pt3dadd( -37.0936, 117.502, 128.409, 0.83 ) }
    dend_30 { pt3dadd( -35.3875, 119.317, 130.877, 0.28 ) }
    dend_30 { pt3dadd( -34.6339, 120.207, 131.909, 0.83 ) }
    dend_30 { pt3dadd( -33.307, 122.036, 133.621, 0.28 ) }
    dend_30 { pt3dadd( -32.6224, 123.31, 134.462, 0.55 ) }
    dend_30 { pt3dadd( -32.0209, 124.79, 135.129, 0.28 ) }
    dend_30 { pt3dadd( -31.518, 126.76, 135.591, 0.55 ) }
    dend_30 { pt3dadd( -31.1021, 129.389, 135.87, 0.28 ) }
    dend_30 { pt3dadd( -30.977, 130.547, 135.9, 0.83 ) }
    dend_30 { pt3dadd( -30.754, 133.492, 135.847, 0.28 ) }
    dend_30 { pt3dadd( -30.7552, 135.842, 135.622, 0.83 ) }
    dend_30 { pt3dadd( -30.8355, 140.113, 135.112, 0.28 ) }
    dend_30 { pt3dadd( -30.9372, 141.583, 134.823, 0.83 ) }
    dend_30 { pt3dadd( -31.2206, 144.316, 134.12, 0.28 ) }
    dend_30 { pt3dadd( -31.389, 145.467, 133.731, 0.83 ) }
    dend_30 { pt3dadd( -32.5125, 152.366, 131.114, 0.28 ) }
    dend_30 { pt3dadd( -33.0854, 155.164, 129.913, 0.83 ) }
    dend_30 { pt3dadd( -34.5039, 161.673, 126.92, 0.28 ) }
    dend_30 { pt3dadd( -35.0577, 164.08, 125.703, 0.83 ) }
    dend_30 { pt3dadd( -36.1593, 168.521, 123.346, 0.28 ) }
    dend_30 { pt3dadd( -36.5328, 169.928, 122.572, 0.55 ) }
    dend_30 { pt3dadd( -37.6093, 174.06, 120.437, 0.28 ) }
    dend_30 { pt3dadd( -37.9738, 175.399, 119.796, 0.28 ) }
    dend_30 { pt3dadd( -38.7505, 178.54, 118.618, 0.55 ) }
    dend_30 { pt3dadd( -40.2552, 183.291, 117.21, 0.28 ) }
    dend_30 { pt3dadd( -41.42, 186.559, 116.421, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_30 { pt3dadd( -42.6444, 189.645, 115.583, 0.28 ) }
    dend_30 { pt3dadd( -43.2755, 191.173, 115.185, 0.55 ) }
    dend_30 { pt3dadd( -44.2509, 193.536, 114.732, 0.28 ) }
    dend_30 { pt3dadd( -48.5205, 204.145, 113.554, 0.28 ) }
    dend_30 { pt3dadd( -48.981, 205.355, 113.477, 0.83 ) }
    dend_30 { pt3dadd( -51.831, 213.179, 113.203, 0.28 ) }
    dend_30 { pt3dadd( -52.1474, 214.052, 113.149, 0.83 ) }
    dend_30 { pt3dadd( -55.2914, 223.87, 112.935, 0.28 ) }
    dend_30 { pt3dadd( -55.425, 224.707, 113.069, 0.55 ) }
    dend_30 { pt3dadd( -54.5684, 227.177, 115.234, 0.28 ) }
    dend_30 { pt3dadd( -54.3588, 227.99, 115.836, 0.55 ) }
    dend_30 { pt3dadd( -54.0484, 229.157, 116.843, 0.28 ) }
    dend_30 { pt3dadd( -54.1165, 230.639, 117.133, 0.55 ) }
    dend_30 { pt3dadd( -54.5169, 233.364, 117.093, 0.28 ) }
    dend_30 { pt3dadd( -54.7136, 234.658, 117.067, 1.11 ) }
    dend_30 { pt3dadd( -55.255, 237.567, 117.194, 0.28 ) }
    dend_30 { pt3dadd( -55.5347, 238.793, 117.207, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 17/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -47.9114, -26.4816, 38.3043, 0.55 ) }
    dend_29 { pt3dadd( -50.8998, -27.3824, 39.7832, 0.55 ) }
    dend_29 { pt3dadd( -52.1897, -27.7225, 40.4855, 0.55 ) }
    dend_29 { pt3dadd( -54.119, -28.2118, 41.6477, 0.83 ) }
    dend_29 { pt3dadd( -56.0801, -28.7281, 42.8592, 0.55 ) }
    dend_29 { pt3dadd( -57.6989, -29.2851, 43.9296, 0.55 ) }
    dend_29 { pt3dadd( -58.4545, -29.5991, 44.4392, 0.83 ) }
    dend_29 { pt3dadd( -59.5164, -30.1912, 45.2352, 0.55 ) }
    dend_29 { pt3dadd( -61.2001, -31.471, 46.8504, 0.55 ) }
    dend_29 { pt3dadd( -61.9778, -32.2545, 47.7492, 0.55 ) }
    dend_29 { pt3dadd( -63.305, -33.9126, 49.461, 0.55 ) }
    dend_29 { pt3dadd( -63.8396, -34.7502, 50.2744, 0.28 ) }
    dend_29 { pt3dadd( -64.9705, -36.8075, 52.1664, 0.83 ) }
    dend_29 { pt3dadd( -66.1533, -39.3337, 54.5138, 0.55 ) }
    dend_29 { pt3dadd( -66.3465, -39.7887, 54.9522, 0.55 ) }
    dend_29 { pt3dadd( -66.961, -41.1604, 56.3552, 0.83 ) }
    dend_29 { pt3dadd( -67.7359, -42.6194, 57.9916, 0.55 ) }
    dend_29 { pt3dadd( -68.323, -43.6166, 59.1818, 0.83 ) }
    dend_29 { pt3dadd( -70.1061, -46.0541, 62.1827, 0.55 ) }
    dend_29 { pt3dadd( -71.035, -47.0388, 63.394, 0.83 ) }
    dend_29 { pt3dadd( -72.2711, -48.1251, 64.817, 0.28 ) }
    dend_29 { pt3dadd( -73.3127, -48.8329, 65.8465, 0.55 ) }
    dend_29 { pt3dadd( -74.5628, -49.4505, 66.8396, 0.55 ) }
    dend_29 { pt3dadd( -76.5126, -50.1858, 68.1387, 0.28 ) }
    dend_29 { pt3dadd( -77.4255, -50.4264, 68.6076, 0.28 ) }
    dend_29 { pt3dadd( -78.2202, -50.6047, 69.0034, 0.55 ) }
    dend_29 { pt3dadd( -80.3891, -51.181, 70.0553, 0.28 ) }
    dend_29 { pt3dadd( -81.18, -51.4986, 70.4972, 0.55 ) }
    dend_29 { pt3dadd( -81.5685, -51.684, 70.7156, 0.28 ) }
    dend_29 { pt3dadd( -82.5709, -52.2772, 71.3567, 0.28 ) }
    dend_29 { pt3dadd( -83.2367, -52.6789, 71.7862, 0.55 ) }
    dend_29 { pt3dadd( -84.5807, -53.5468, 72.6206, 0.28 ) }
    dend_29 { pt3dadd( -85.9876, -54.5202, 73.4028, 0.55 ) }
    dend_29 { pt3dadd( -87.6981, -55.7336, 74.4035, 0.28 ) }
    dend_29 { pt3dadd( -88.9833, -56.6904, 75.1634, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 52/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -85.9881, 3.89895, 19.4944, 0.28 ) }
    dend_25 { pt3dadd( -88.5607, 5.77736, 19.064, 0.28 ) }
    dend_25 { pt3dadd( -89.2557, 6.35974, 18.9474, 0.55 ) }
    dend_25 { pt3dadd( -90.7547, 7.64867, 18.7164, 0.28 ) }
    dend_25 { pt3dadd( -91.0888, 7.96354, 18.6732, 0.55 ) }
    dend_25 { pt3dadd( -94.2292, 11.1397, 18.341, 0.28 ) }
    dend_25 { pt3dadd( -96.685, 13.6628, 18.1986, 0.28 ) }
    dend_25 { pt3dadd( -98.1365, 15.3264, 18.1901, 0.28 ) }
    dend_25 { pt3dadd( -99.1711, 16.6024, 18.2322, 0.55 ) }
    dend_25 { pt3dadd( -101.472, 19.6582, 18.2804, 0.28 ) }
    dend_25 { pt3dadd( -102.326, 20.8105, 18.3301, 0.55 ) }
    dend_25 { pt3dadd( -103.652, 22.658, 18.5073, 0.28 ) }
    dend_25 { pt3dadd( -104.346, 23.7136, 18.6377, 0.55 ) }
    dend_25 { pt3dadd( -105.44, 25.4632, 18.8886, 0.28 ) }
    dend_25 { pt3dadd( -106.809, 27.8954, 19.2132, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 67/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -85.9881, 3.89895, 19.4944, 0.28 ) }
    dend_24 { pt3dadd( -82.7978, 3.47569, 18.2773, 0.28 ) }
    dend_24 { pt3dadd( -81.8979, 3.39753, 17.8552, 0.83 ) }
    dend_24 { pt3dadd( -77.616, 3.20258, 16.1134, 0.28 ) }
    dend_24 { pt3dadd( -77.1713, 3.18508, 15.9457, 0.83 ) }
    dend_24 { pt3dadd( -73.2924, 3.03372, 14.7696, 0.28 ) }
    dend_24 { pt3dadd( -72.1509, 2.97901, 14.4735, 0.83 ) }
    dend_24 { pt3dadd( -64.705, 2.72074, 12.836, 0.28 ) }
    dend_24 { pt3dadd( -60.525, 2.57166, 12.0814, 0.28 ) }
    dend_24 { pt3dadd( -59.6141, 2.54072, 11.9722, 1.11 ) }
    dend_24 { pt3dadd( -54.8852, 2.34068, 11.6423, 0.28 ) }
    dend_24 { pt3dadd( -53.4942, 2.26581, 11.5461, 0.55 ) }
    dend_24 { pt3dadd( -48.3865, 1.94863, 11.1122, 0.28 ) }
    dend_24 { pt3dadd( -46.0128, 1.74781, 10.9243, 0.28 ) }
    dend_24 { pt3dadd( -44.5211, 1.60401, 10.7259, 0.55 ) }
    dend_24 { pt3dadd( -42.2666, 1.39763, 10.3506, 0.28 ) }
    dend_24 { pt3dadd( -35.5686, 0.68852, 8.738, 0.28 ) }
    dend_24 { pt3dadd( -32.0514, 0.28704, 7.81758, 0.28 ) }
    dend_24 { pt3dadd( -31.287, 0.15031, 7.59689, 0.83 ) }
    dend_24 { pt3dadd( -29.6285, -0.225376, 7.09205, 0.28 ) }
    dend_24 { pt3dadd( -29.6285, -0.225376, 7.09205, 0.83 ) }
    dend_24 { pt3dadd( -26.0422, -1.22408, 6.11021, 0.28 ) }
    dend_24 { pt3dadd( -25.1379, -1.58172, 5.97411, 0.83 ) }
    dend_24 { pt3dadd( -22.4344, -2.91916, 5.26969, 0.28 ) }
    dend_24 { pt3dadd( -20.7928, -3.78132, 4.7755, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 92/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -33.1012, 45.849, -26.0783, 0.28 ) }
    dend_18 { pt3dadd( -34.1811, 44.0655, -27.5496, 0.28 ) }
    dend_18 { pt3dadd( -34.9941, 42.6851, -28.8469, 0.83 ) }
    dend_18 { pt3dadd( -35.8806, 41.173, -30.2397, 0.55 ) }
    dend_18 { pt3dadd( -36.7584, 39.6403, -31.8866, 1.11 ) }
    dend_18 { pt3dadd( -39.0272, 35.3049, -36.9213, 0.28 ) }
    dend_18 { pt3dadd( -39.1787, 35.0118, -37.314, 0.83 ) }
    dend_18 { pt3dadd( -39.8083, 33.7155, -39.36, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_18 { pt3dadd( -40.171, 32.9146, -40.7365, 0.83 ) }
    dend_18 { pt3dadd( -41.4487, 30.0206, -46.0606, 0.28 ) }
    dend_18 { pt3dadd( -41.7864, 29.2872, -47.4091, 0.83 ) }
    dend_18 { pt3dadd( -43.0168, 26.8979, -52.5629, 0.28 ) }
    dend_18 { pt3dadd( -43.23, 26.485, -53.5372, 0.55 ) }
    dend_18 { pt3dadd( -43.5893, 25.7962, -55.2577, 0.55 ) }
    dend_18 { pt3dadd( -43.9475, 25.1023, -57.0965, 0.55 ) }
    dend_18 { pt3dadd( -44.4326, 24.2217, -59.4419, 1.11 ) }
    dend_18 { pt3dadd( -46.273, 20.8065, -69.6799, 0.55 ) }
    dend_18 { pt3dadd( -46.4946, 20.3255, -71.2486, 0.28 ) }
    dend_18 { pt3dadd( -46.5583, 20.2025, -71.7236, 0.55 ) }
    dend_18 { pt3dadd( -46.9951, 19.488, -74.8848, 0.28 ) }
    dend_18 { pt3dadd( -47.1502, 19.1911, -76.2889, 0.83 ) }
    dend_18 { pt3dadd( -47.9558, 17.4934, -84.7322, 0.28 ) }
    dend_18 { pt3dadd( -47.9967, 17.4161, -85.0944, 0.55 ) }
    dend_18 { pt3dadd( -48.931, 15.7056, -93.1673, 0.28 ) }
    dend_18 { pt3dadd( -49.0845, 15.3739, -94.626, 0.55 ) }
    dend_18 { pt3dadd( -49.5676, 14.3371, -98.6979, 0.28 ) }
    dend_18 { pt3dadd( -49.6522, 14.1386, -99.4011, 0.83 ) }
    dend_18 { pt3dadd( -50.0935, 13.087, -102.616, 0.28 ) }
    dend_18 { pt3dadd( -50.3148, 12.5506, -104.209, 0.83 ) }
    dend_18 { pt3dadd( -51.3577, 9.66951, -111.877, 0.28 ) }
    dend_18 { pt3dadd( -51.6574, 8.95433, -113.63, 0.83 ) }
    dend_18 { pt3dadd( -52.9949, 6.14812, -120.004, 0.55 ) }
    dend_18 { pt3dadd( -53.1665, 5.7779, -120.797, 0.83 ) }
    dend_18 { pt3dadd( -54.1133, 3.64907, -125.056, 0.28 ) }
    dend_18 { pt3dadd( -54.4207, 2.95676, -126.311, 0.55 ) }
    dend_18 { pt3dadd( -55.7214, -0.0145447, -131.106, 0.28 ) }
    dend_18 { pt3dadd( -56.1773, -1.1102, -132.826, 0.83 ) }
    dend_18 { pt3dadd( -58.4963, -6.65946, -140.761, 0.28 ) }
    dend_18 { pt3dadd( -58.6119, -6.9427, -141.161, 0.83 ) }
    dend_18 { pt3dadd( -59.3028, -8.74733, -143.591, 0.28 ) }
    dend_18 { pt3dadd( -59.4737, -9.19567, -144.232, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 33/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -33.1012, 45.849, -26.0783, 0.55 ) }
    dend_17 { pt3dadd( -33.9508, 48.0789, -26.5766, 0.55 ) }
    dend_17 { pt3dadd( -34.5892, 49.7597, -27.0019, 0.55 ) }
    dend_17 { pt3dadd( -35.2649, 51.5132, -27.5667, 0.28 ) }
    dend_17 { pt3dadd( -35.7127, 52.6687, -27.9722, 1.38 ) }
    dend_17 { pt3dadd( -36.3961, 54.3456, -28.6353, 0.55 ) }
    dend_17 { pt3dadd( -37.1744, 56.214, -29.4033, 0.55 ) }
    dend_17 { pt3dadd( -37.5182, 57.0115, -29.7154, 0.83 ) }
    dend_17 { pt3dadd( -38.136, 58.4261, -30.3252, 0.28 ) }
    dend_17 { pt3dadd( -38.46, 59.2312, -30.6951, 0.55 ) }
    dend_17 { pt3dadd( -38.9793, 60.6506, -31.3152, 0.28 ) }
    dend_17 { pt3dadd( -39.3294, 61.6878, -31.6945, 0.83 ) }
    dend_17 { pt3dadd( -39.9492, 63.8405, -32.2652, 0.28 ) }
    dend_17 { pt3dadd( -40.2442, 64.9942, -32.5842, 0.55 ) }
    dend_17 { pt3dadd( -40.5356, 66.3733, -32.9594, 0.28 ) }
    dend_17 { pt3dadd( -40.726, 67.5282, -33.351, 0.83 ) }
    dend_17 { pt3dadd( -40.9498, 69.6705, -34.1643, 0.28 ) }
    dend_17 { pt3dadd( -41.0961, 71.5441, -35.0249, 0.83 ) }
    dend_17 { pt3dadd( -41.209, 74.6624, -36.6569, 0.28 ) }
    dend_17 { pt3dadd( -41.198, 75.7333, -37.2712, 0.83 ) }
    dend_17 { pt3dadd( -41.141, 78.6199, -39.2299, 0.28 ) }
    dend_17 { pt3dadd( -41.087, 79.9387, -40.2364, 0.83 ) }
    dend_17 { pt3dadd( -40.9925, 81.5448, -41.5603, 0.28 ) }
    dend_17 { pt3dadd( -40.9273, 82.8037, -42.6597, 0.55 ) }
    dend_17 { pt3dadd( -40.8605, 84.063, -43.751, 0.83 ) }
    dend_17 { pt3dadd( -40.8218, 86.856, -46.1353, 0.28 ) }
    dend_17 { pt3dadd( -40.8602, 87.957, -47.0172, 0.83 ) }
    dend_17 { pt3dadd( -40.979, 89.4538, -48.1714, 0.83 ) }
    dend_17 { pt3dadd( -41.1681, 90.9621, -49.2494, 0.28 ) }
    dend_17 { pt3dadd( -41.4586, 92.1289, -50.0772, 0.83 ) }
    dend_17 { pt3dadd( -41.8506, 93.3128, -50.8338, 0.28 ) }
    dend_17 { pt3dadd( -42.1728, 94.1705, -51.2929, 0.55 ) }
    dend_17 { pt3dadd( -42.47, 94.797, -51.6168, 0.28 ) }
    dend_17 { pt3dadd( -43.1926, 96.1041, -52.1818, 0.55 ) }
    dend_17 { pt3dadd( -44.6187, 98.5716, -52.9625, 0.28 ) }
    dend_17 { pt3dadd( -45.2116, 99.4576, -53.1974, 0.55 ) }
    dend_17 { pt3dadd( -45.9126, 100.421, -53.3998, 0.28 ) }
    dend_17 { pt3dadd( -46.7174, 101.462, -53.5675, 0.83 ) }
    dend_17 { pt3dadd( -47.7974, 102.809, -53.6873, 0.28 ) }
    dend_17 { pt3dadd( -48.8606, 104.133, -53.7098, 0.83 ) }
    dend_17 { pt3dadd( -50.4221, 106.123, -53.5948, 0.28 ) }
    dend_17 { pt3dadd( -51.0416, 106.91, -53.5802, 0.83 ) }
    dend_17 { pt3dadd( -51.7509, 107.841, -53.584, 0.28 ) }
    dend_17 { pt3dadd( -52.6572, 109.121, -53.6375, 0.28 ) }
    dend_17 { pt3dadd( -53.055, 109.731, -53.7358, 0.55 ) }
    dend_17 { pt3dadd( -53.9254, 111.265, -54.1539, 0.28 ) }
    dend_17 { pt3dadd( -54.6049, 112.581, -54.7785, 0.55 ) }
    dend_17 { pt3dadd( -54.9795, 113.327, -55.2446, 0.55 ) }
    dend_17 { pt3dadd( -55.5164, 114.428, -56.0359, 0.83 ) }
    dend_17 { pt3dadd( -56.5662, 116.415, -57.7193, 0.28 ) }
    dend_17 { pt3dadd( -57.3526, 117.844, -59.0573, 0.83 ) }
    dend_17 { pt3dadd( -58.5163, 119.793, -61.1573, 0.28 ) }
    dend_17 { pt3dadd( -58.9762, 120.497, -61.9811, 0.28 ) }
    dend_17 { pt3dadd( -59.6012, 121.471, -63.1653, 0.83 ) }
    dend_17 { pt3dadd( -60.7734, 123.294, -65.4875, 0.28 ) }
    dend_17 { pt3dadd( -61.202, 123.974, -66.3188, 0.83 ) }
    dend_17 { pt3dadd( -62.6941, 126.494, -69.2752, 0.28 ) }
    dend_17 { pt3dadd( -63.4157, 127.725, -70.6877, 1.11 ) }
    dend_17 { pt3dadd( -64.8176, 130.138, -73.5094, 0.28 ) }
    dend_17 { pt3dadd( -65.3708, 131.15, -74.7227, 0.55 ) }
    dend_17 { pt3dadd( -65.8223, 132.108, -75.7826, 0.28 ) }
    dend_17 { pt3dadd( -66.1671, 132.9, -76.5923, 0.55 ) }
    dend_17 { pt3dadd( -66.9473, 135.01, -78.5823, 0.28 ) }
    dend_17 { pt3dadd( -67.2885, 135.842, -79.4462, 0.55 ) }
    dend_17 { pt3dadd( -67.8456, 137.108, -80.8092, 0.28 ) }
    dend_17 { pt3dadd( -68.2085, 137.917, -81.7756, 0.55 ) }
    dend_17 { pt3dadd( -68.6221, 138.876, -83.0093, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_17 { pt3dadd( -69.2009, 140.287, -84.8777, 0.55 ) }
    dend_17 { pt3dadd( -70.1519, 142.913, -88.1716, 0.28 ) }
    dend_17 { pt3dadd( -70.5415, 143.987, -89.5849, 0.55 ) }
    dend_17 { pt3dadd( -71.071, 145.517, -91.6198, 0.28 ) }
    dend_17 { pt3dadd( -71.3396, 146.355, -92.8072, 0.83 ) }
    dend_17 { pt3dadd( -71.6328, 147.493, -94.4105, 0.28 ) }
    dend_17 { pt3dadd( -71.8181, 148.302, -95.5927, 0.83 ) }
    dend_17 { pt3dadd( -72.0896, 149.696, -97.6193, 0.28 ) }
    dend_17 { pt3dadd( -72.2379, 150.312, -98.6084, 0.55 ) }
    dend_17 { pt3dadd( -72.4364, 151.166, -100.051, 0.28 ) }
    dend_17 { pt3dadd( -72.5894, 151.871, -101.331, 0.55 ) }
    dend_17 { pt3dadd( -73.0219, 153.944, -104.915, 0.28 ) }
    dend_17 { pt3dadd( -73.181, 154.675, -106.101, 0.28 ) }
    dend_17 { pt3dadd( -73.6006, 156.353, -108.401, 0.55 ) }
    dend_17 { pt3dadd( -73.9622, 157.79, -110.131, 0.28 ) }
    dend_17 { pt3dadd( -74.1785, 158.593, -110.943, 0.55 ) }
    dend_17 { pt3dadd( -74.8463, 160.797, -112.739, 0.28 ) }
    dend_17 { pt3dadd( -75.3414, 162.112, -113.469, 0.83 ) }
    dend_17 { pt3dadd( -76.2495, 164.055, -114.253, 0.28 ) }
    dend_17 { pt3dadd( -76.6252, 164.665, -114.407, 0.55 ) }
    dend_17 { pt3dadd( -77.3387, 165.583, -114.567, 0.28 ) }
    dend_17 { pt3dadd( -78.1261, 166.43, -114.714, 0.55 ) }
    dend_17 { pt3dadd( -79.9984, 168.137, -114.966, 0.28 ) }
    dend_17 { pt3dadd( -80.4332, 168.513, -114.999, 0.55 ) }
    dend_17 { pt3dadd( -83.205, 170.861, -115.267, 0.28 ) }
    dend_17 { pt3dadd( -83.8893, 171.5, -115.367, 0.55 ) }
    dend_17 { pt3dadd( -84.7876, 172.479, -115.528, 0.28 ) }
    dend_17 { pt3dadd( -85.6671, 173.511, -115.716, 0.55 ) }
    dend_17 { pt3dadd( -87.0094, 175.323, -116.068, 0.28 ) }
    dend_17 { pt3dadd( -87.7876, 176.495, -116.279, 0.55 ) }
    dend_17 { pt3dadd( -89.1431, 179.269, -116.537, 0.28 ) }
    dend_17 { pt3dadd( -89.6037, 180.391, -116.658, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 32/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -10.4456, 72.0298, -19.1033, 0.55 ) }
    dend_15 { pt3dadd( -8.73597, 73.4753, -20.2127, 0.55 ) }
    dend_15 { pt3dadd( -6.57672, 75.7917, -23.2431, 0.55 ) }
    dend_15 { pt3dadd( -5.7985, 76.7694, -24.8285, 0.83 ) }
    dend_15 { pt3dadd( -5.19101, 77.5738, -26.23, 0.83 ) }
    dend_15 { pt3dadd( -3.56124, 79.8531, -30.338, 0.28 ) }
    dend_15 { pt3dadd( -2.9599, 80.7109, -31.8545, 0.83 ) }
    dend_15 { pt3dadd( -1.25584, 83.882, -38.4541, 0.55 ) }
    dend_15 { pt3dadd( -1.02002, 84.5833, -40.1299, 0.28 ) }
    dend_15 { pt3dadd( -0.961497, 84.9071, -40.9798, 0.28 ) }
    dend_15 { pt3dadd( -0.957967, 85.4394, -42.4699, 0.55 ) }
    dend_15 { pt3dadd( -1.0316, 86.0763, -44.2177, 0.55 ) }
    dend_15 { pt3dadd( -1.38443, 88.3244, -49.9512, 0.28 ) }
    dend_15 { pt3dadd( -1.52386, 89.4071, -52.4263, 0.83 ) }
    dend_15 { pt3dadd( -1.76905, 91.7965, -57.5974, 0.83 ) }
    dend_15 { pt3dadd( -1.93609, 93.9151, -62.01, 0.83 ) }
    dend_15 { pt3dadd( -2.07625, 96.637, -67.5503, 0.28 ) }
    dend_15 { pt3dadd( -2.08896, 97.5913, -69.4188, 0.28 ) }
    dend_15 { pt3dadd( -2.04005, 98.1253, -70.3358, 0.55 ) }
    dend_15 { pt3dadd( -1.53033, 100.526, -74.0662, 0.28 ) }
    dend_15 { pt3dadd( -1.41042, 100.889, -74.5721, 0.55 ) }
    dend_15 { pt3dadd( -0.319746, 103.254, -77.7751, 0.28 ) }
    dend_15 { pt3dadd( 0.116632, 104.046, -79.1365, 0.55 ) }
    dend_15 { pt3dadd( 0.553565, 104.742, -80.5535, 0.28 ) }
    dend_15 { pt3dadd( 0.728835, 105.001, -81.1213, 0.55 ) }
    dend_15 { pt3dadd( 2.04893, 106.644, -85.1119, 0.28 ) }
    dend_15 { pt3dadd( 2.48453, 107.118, -86.2984, 0.55 ) }
    dend_15 { pt3dadd( 4.99019, 109.425, -92.5794, 0.28 ) }
    dend_15 { pt3dadd( 5.72987, 110.078, -94.3493, 0.28 ) }
    dend_15 { pt3dadd( 6.52647, 110.76, -96.1171, 0.55 ) }
    dend_15 { pt3dadd( 8.21587, 112.205, -99.9019, 0.28 ) }
    dend_15 { pt3dadd( 8.77117, 112.659, -101.047, 0.55 ) }
    dend_15 { pt3dadd( 11.0749, 114.49, -105.646, 0.28 ) }
    dend_15 { pt3dadd( 12.2703, 115.386, -107.863, 0.28 ) }
    dend_15 { pt3dadd( 13.3224, 116.169, -109.856, 0.83 ) }
    dend_15 { pt3dadd( 17.1258, 118.815, -116.674, 0.28 ) }
    dend_15 { pt3dadd( 18.1503, 119.484, -118.399, 0.28 ) }
    dend_15 { pt3dadd( 19.6183, 120.389, -120.694, 0.55 ) }
    dend_15 { pt3dadd( 20.9329, 121.161, -122.539, 0.28 ) }
    dend_15 { pt3dadd( 21.878, 121.654, -123.869, 0.55 ) }
    dend_15 { pt3dadd( 22.8201, 122.113, -125.079, 0.28 ) }
    dend_15 { pt3dadd( 23.4476, 122.406, -125.586, 0.55 ) }
    dend_15 { pt3dadd( 24.9229, 123.156, -126.794, 0.28 ) }
    dend_15 { pt3dadd( 27.0606, 124.44, -128.192, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 76/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -10.4456, 72.0298, -19.1033, 0.55 ) }
    dend_14 { pt3dadd( -11.6446, 75.6561, -18.0507, 0.55 ) }
    dend_14 { pt3dadd( -12.2843, 78.0916, -17.1663, 0.55 ) }
    dend_14 { pt3dadd( -12.5531, 79.1262, -16.7815, 0.55 ) }
    dend_14 { pt3dadd( -12.9628, 80.7806, -16.1767, 0.55 ) }
    dend_14 { pt3dadd( -13.2955, 82.1761, -15.7334, 0.55 ) }
    dend_14 { pt3dadd( -14.0732, 85.5319, -14.6709, 0.28 ) }
    dend_14 { pt3dadd( -14.3309, 86.7158, -14.2816, 0.55 ) }
    dend_14 { pt3dadd( -14.6402, 88.3786, -13.5974, 0.55 ) }
    dend_14 { pt3dadd( -14.8262, 89.1798, -13.2084, 0.83 ) }
    dend_14 { pt3dadd( -15.3643, 90.9876, -12.2518, 0.28 ) }
    dend_14 { pt3dadd( -15.8448, 92.5056, -11.4607, 0.83 ) }
    dend_14 { pt3dadd( -16.7991, 95.2637, -10.026, 0.28 ) }
    dend_14 { pt3dadd( -16.9115, 95.5816, -9.82011, 0.83 ) }
    dend_14 { pt3dadd( -17.6856, 98.0098, -7.99291, 0.55 ) }
    dend_14 { pt3dadd( -18.0173, 99.1148, -7.06803, 0.55 ) }
    dend_14 { pt3dadd( -18.4669, 100.742, -5.64948, 0.83 ) }
    dend_14 { pt3dadd( -19.2225, 103.709, -2.99734, 0.55 ) }
    dend_14 { pt3dadd( -19.7452, 105.99, -0.929662, 0.83 ) }
    dend_14 { pt3dadd( -19.983, 107.148, 0.148752, 0.28 ) }
    dend_14 { pt3dadd( -20.1462, 108.169, 1.04535, 0.83 ) }
    dend_14 { pt3dadd( -20.3947, 109.687, 2.36325, 0.83 ) }
    dend_14 { pt3dadd( -20.907, 112.348, 4.5672, 0.83 ) }
    dend_14 { pt3dadd( -21.3457, 114.577, 6.03959, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( -21.5226, 115.338, 6.48319, 0.83 ) }
    dend_14 { pt3dadd( -22.1169, 117.634, 7.85606, 0.83 ) }
    dend_14 { pt3dadd( -22.6702, 119.644, 9.08016, 0.28 ) }
    dend_14 { pt3dadd( -22.9685, 120.69, 9.75465, 0.55 ) }
    dend_14 { pt3dadd( -23.5796, 122.766, 11.0014, 0.28 ) }
    dend_14 { pt3dadd( -24.3385, 124.903, 12.3497, 0.55 ) }
    dend_14 { pt3dadd( -25.4392, 127.692, 14.2401, 0.28 ) }
    dend_14 { pt3dadd( -25.7148, 128.316, 14.7016, 0.83 ) }
    dend_14 { pt3dadd( -26.2744, 129.579, 15.6143, 0.28 ) }
    dend_14 { pt3dadd( -26.9592, 131.093, 16.7685, 0.55 ) }
    dend_14 { pt3dadd( -27.9362, 133.301, 18.6657, 0.28 ) }
    dend_14 { pt3dadd( -28.1063, 133.726, 19.0118, 0.55 ) }
    dend_14 { pt3dadd( -28.4622, 134.646, 19.7996, 0.28 ) }
    dend_14 { pt3dadd( -28.8028, 135.61, 20.7408, 0.83 ) }
    dend_14 { pt3dadd( -29.155, 136.883, 22.0655, 0.28 ) }
    dend_14 { pt3dadd( -29.4884, 138.469, 23.8311, 0.55 ) }
    dend_14 { pt3dadd( -29.7007, 139.546, 25.1782, 0.28 ) }
    dend_14 { pt3dadd( -29.83, 140.217, 25.9789, 0.83 ) }
    dend_14 { pt3dadd( -30.0541, 141.643, 27.5911, 0.83 ) }
    dend_14 { pt3dadd( -30.2491, 143.085, 29.1026, 0.55 ) }
    dend_14 { pt3dadd( -30.3161, 143.878, 29.8436, 0.83 ) }
    dend_14 { pt3dadd( -30.6083, 148.333, 33.5733, 0.55 ) }
    dend_14 { pt3dadd( -30.6875, 150.02, 34.8038, 0.83 ) }
    dend_14 { pt3dadd( -30.7902, 155.586, 38.1834, 0.28 ) }
    dend_14 { pt3dadd( -30.7845, 156.776, 38.6344, 0.55 ) }
    dend_14 { pt3dadd( -30.6769, 159.15, 39.0831, 0.28 ) }
    dend_14 { pt3dadd( -30.5651, 160.575, 39.1894, 0.83 ) }
    dend_14 { pt3dadd( -30.2256, 163.507, 38.8517, 0.28 ) }
    dend_14 { pt3dadd( -30.0206, 165.273, 38.4397, 0.55 ) }
    dend_14 { pt3dadd( -29.3743, 170.192, 36.1085, 0.28 ) }
    dend_14 { pt3dadd( -29.1227, 172.35, 34.9769, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 31/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 22.8079, 318.906, -6.78122, 0.55 ) }
    dend_10 { pt3dadd( 23.1517, 321.273, -6.94785, 0.55 ) }
    dend_10 { pt3dadd( 23.4287, 324.105, -7.17771, 0.55 ) }
    dend_10 { pt3dadd( 23.6661, 326.828, -7.4002, 0.83 ) }
    dend_10 { pt3dadd( 23.8123, 328.713, -7.53816, 0.55 ) }
    dend_10 { pt3dadd( 23.9918, 331.057, -7.6765, 1.11 ) }
    dend_10 { pt3dadd( 24.3158, 334.649, -7.84717, 0.55 ) }
    dend_10 { pt3dadd( 24.5839, 337.192, -7.93133, 1.11 ) }
    dend_10 { pt3dadd( 24.8514, 339.109, -8.03296, 0.83 ) }
    dend_10 { pt3dadd( 25.2434, 340.903, -8.14367, 0.55 ) }
    dend_10 { pt3dadd( 26.0151, 343.23, -8.28904, 0.55 ) }
    dend_10 { pt3dadd( 26.9478, 345.213, -8.43685, 0.83 ) }
    dend_10 { pt3dadd( 28.3014, 347.242, -8.68955, 0.55 ) }
    dend_10 { pt3dadd( 29.9616, 349.205, -9.05898, 0.83 ) }
    dend_10 { pt3dadd( 31.427, 350.669, -9.4021, 0.83 ) }
    dend_10 { pt3dadd( 32.7962, 351.851, -9.73847, 0.83 ) }
    dend_10 { pt3dadd( 33.9843, 352.784, -10.0174, 1.11 ) }
    dend_10 { pt3dadd( 36.5371, 354.725, -10.6833, 0.83 ) }
    dend_10 { pt3dadd( 37.6299, 355.568, -10.9733, 0.55 ) }
    dend_10 { pt3dadd( 39.3695, 356.929, -11.3774, 0.83 ) }
    dend_10 { pt3dadd( 41.9048, 359.052, -11.9815, 0.55 ) }
    dend_10 { pt3dadd( 43.5069, 360.375, -12.3467, 1.11 ) }
    dend_10 { pt3dadd( 45.9189, 362.39, -12.8444, 0.55 ) }
    dend_10 { pt3dadd( 46.7489, 363.111, -12.9757, 0.55 ) }
    dend_10 { pt3dadd( 47.8773, 364.127, -13.1483, 0.55 ) }
    dend_10 { pt3dadd( 50.3867, 366.606, -13.4683, 0.55 ) }
    dend_10 { pt3dadd( 51.3381, 367.655, -13.533, 0.28 ) }
    dend_10 { pt3dadd( 51.9164, 368.384, -13.5433, 0.55 ) }
    dend_10 { pt3dadd( 52.9168, 369.806, -13.4753, 0.28 ) }
    dend_10 { pt3dadd( 53.722, 371.071, -13.4303, 0.83 ) }
    dend_10 { pt3dadd( 55.1136, 373.474, -13.3624, 0.55 ) }
    dend_10 { pt3dadd( 55.5598, 374.282, -13.3223, 0.83 ) }
    dend_10 { pt3dadd( 56.4757, 376.024, -13.2673, 0.55 ) }
    dend_10 { pt3dadd( 57.0667, 377.152, -13.2587, 0.83 ) }
    dend_10 { pt3dadd( 58.8575, 380.581, -13.2943, 0.28 ) }
    dend_10 { pt3dadd( 60.0546, 382.846, -13.3702, 0.83 ) }
    dend_10 { pt3dadd( 61.3031, 385.183, -13.4883, 0.28 ) }
    dend_10 { pt3dadd( 62.3926, 387.245, -13.6153, 0.55 ) }
    dend_10 { pt3dadd( 63.5111, 389.424, -13.769, 0.55 ) }
    dend_10 { pt3dadd( 64.4449, 391.405, -13.9794, 0.55 ) }
    dend_10 { pt3dadd( 64.9024, 392.509, -14.1358, 0.28 ) }
    dend_10 { pt3dadd( 65.2937, 393.579, -14.3106, 0.55 ) }
    dend_10 { pt3dadd( 65.9233, 395.664, -14.667, 0.28 ) }
    dend_10 { pt3dadd( 66.2441, 396.895, -14.9491, 0.55 ) }
    dend_10 { pt3dadd( 66.7516, 399.137, -15.5908, 0.28 ) }
    dend_10 { pt3dadd( 67.0689, 400.664, -16.067, 0.28 ) }
    dend_10 { pt3dadd( 67.4946, 402.798, -16.7614, 0.83 ) }
    dend_10 { pt3dadd( 67.8555, 404.711, -17.4198, 0.83 ) }
    dend_10 { pt3dadd( 68.5416, 408.362, -18.6762, 0.55 ) }
    dend_10 { pt3dadd( 68.9596, 410.411, -19.3339, 0.55 ) }
    dend_10 { pt3dadd( 69.2796, 411.738, -19.6894, 0.55 ) }
    dend_10 { pt3dadd( 69.5065, 412.49, -19.8962, 0.28 ) }
    dend_10 { pt3dadd( 69.8717, 413.545, -20.1757, 0.55 ) }
    dend_10 { pt3dadd( 70.2246, 414.441, -20.3661, 0.28 ) }
    dend_10 { pt3dadd( 70.5549, 415.28, -20.5533, 1.11 ) }
    dend_10 { pt3dadd( 71.4692, 417.809, -21.3865, 0.55 ) }
    dend_10 { pt3dadd( 72.0193, 419.658, -22.1008, 0.55 ) }
    dend_10 { pt3dadd( 72.4248, 421.282, -22.8433, 0.28 ) }
    dend_10 { pt3dadd( 72.6125, 422.2, -23.3504, 0.83 ) }
    dend_10 { pt3dadd( 73.1114, 424.835, -25.0313, 0.55 ) }
    dend_10 { pt3dadd( 73.4288, 426.536, -26.1962, 0.83 ) }
    dend_10 { pt3dadd( 73.7737, 428.406, -27.5872, 0.83 ) }
    dend_10 { pt3dadd( 74.1981, 430.289, -29.077, 0.55 ) }
    dend_10 { pt3dadd( 74.6052, 431.762, -30.3151, 0.28 ) }
    dend_10 { pt3dadd( 75.0552, 433.194, -31.5276, 0.55 ) }
    dend_10 { pt3dadd( 75.4958, 434.509, -32.629, 0.55 ) }
    dend_10 { pt3dadd( 76.1069, 436.228, -34.1298, 1.11 ) }
    dend_10 { pt3dadd( 76.9245, 438.493, -36.0608, 0.55 ) }
    dend_10 { pt3dadd( 77.2668, 439.479, -36.8436, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_10 { pt3dadd( 77.6137, 440.545, -37.7091, 0.55 ) }
    dend_10 { pt3dadd( 78.3055, 443.073, -39.8086, 0.55 ) }
    dend_10 { pt3dadd( 78.6521, 444.347, -40.8989, 0.83 ) }
    dend_10 { pt3dadd( 79.3447, 447.059, -43.0738, 0.28 ) }
    dend_10 { pt3dadd( 79.534, 447.875, -43.6952, 0.55 ) }
    dend_10 { pt3dadd( 80.0855, 450.208, -45.3747, 0.28 ) }
    dend_10 { pt3dadd( 80.3758, 451.348, -46.1492, 0.55 ) }
    dend_10 { pt3dadd( 80.8652, 453.145, -47.2327, 0.28 ) }
    dend_10 { pt3dadd( 81.2948, 454.952, -48.2135, 0.55 ) }
    dend_10 { pt3dadd( 81.5064, 455.895, -48.6704, 0.28 ) }
    dend_10 { pt3dadd( 81.8523, 457.449, -49.3317, 0.55 ) }
    dend_10 { pt3dadd( 82.4692, 460.046, -50.1804, 0.55 ) }
    dend_10 { pt3dadd( 82.8132, 461.386, -50.6334, 0.28 ) }
    dend_10 { pt3dadd( 83.0519, 462.571, -51.063, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 14/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 22.8079, 318.906, -6.78122, 0.55 ) }
    dend_7 { pt3dadd( 22.0409, 319.819, -7.41446, 0.55 ) }
    dend_7 { pt3dadd( 21.1252, 320.958, -8.10187, 1.11 ) }
    dend_7 { pt3dadd( 20.08, 322.156, -8.79267, 0.55 ) }
    dend_7 { pt3dadd( 19.7457, 322.551, -9.0406, 0.83 ) }
    dend_7 { pt3dadd( 18.9572, 323.513, -9.65017, 0.55 ) }
    dend_7 { pt3dadd( 18.2978, 324.279, -10.1496, 0.55 ) }
    dend_7 { pt3dadd( 17.7836, 324.866, -10.5387, 0.83 ) }
    dend_7 { pt3dadd( 16.2514, 326.562, -11.687, 0.55 ) }
    dend_7 { pt3dadd( 15.0886, 327.8, -12.4845, 0.55 ) }
    dend_7 { pt3dadd( 14.6828, 328.233, -12.7805, 0.83 ) }
    dend_7 { pt3dadd( 13.5735, 329.395, -13.6038, 0.55 ) }
    dend_7 { pt3dadd( 13.3952, 329.579, -13.7409, 0.83 ) }
    dend_7 { pt3dadd( 12.804, 330.206, -14.1673, 0.28 ) }
    dend_7 { pt3dadd( 12.7058, 330.317, -14.2226, 0.55 ) }
    dend_7 { pt3dadd( 12.0729, 330.991, -14.4426, 0.28 ) }
    dend_7 { pt3dadd( 11.6745, 331.44, -14.5524, 0.55 ) }
    dend_7 { pt3dadd( 11.2202, 331.933, -14.687, 0.55 ) }
    dend_7 { pt3dadd( 9.9823, 333.21, -15.0797, 0.55 ) }
    dend_7 { pt3dadd( 9.14229, 334.082, -15.3674, 0.55 ) }
    dend_7 { pt3dadd( 8.51299, 334.778, -15.6534, 0.83 ) }
    dend_7 { pt3dadd( 7.67724, 335.756, -16.0989, 0.83 ) }
    dend_7 { pt3dadd( 6.67828, 337.075, -16.8355, 0.55 ) }
    dend_7 { pt3dadd( 5.99338, 338.068, -17.4671, 0.55 ) }
    dend_7 { pt3dadd( 5.30428, 339.175, -18.2434, 1.11 ) }
    dend_7 { pt3dadd( 4.61027, 340.531, -19.1826, 0.55 ) }
    dend_7 { pt3dadd( 4.44247, 340.923, -19.4541, 0.83 ) }
    dend_7 { pt3dadd( 3.96757, 342.269, -20.2917, 0.28 ) }
    dend_7 { pt3dadd( 3.80639, 342.991, -20.8423, 0.55 ) }
    dend_7 { pt3dadd( 3.73347, 343.474, -21.2789, 0.28 ) }
    dend_7 { pt3dadd( 3.69091, 343.945, -21.7296, 0.83 ) }
    dend_7 { pt3dadd( 3.66278, 344.952, -22.7141, 0.28 ) }
    dend_7 { pt3dadd( 3.67111, 345.865, -23.6228, 0.83 ) }
    dend_7 { pt3dadd( 3.86352, 349.412, -27.1167, 0.55 ) }
    dend_7 { pt3dadd( 3.92474, 350.095, -27.7911, 0.55 ) }
    dend_7 { pt3dadd( 3.99983, 350.716, -28.3923, 0.83 ) }
    dend_7 { pt3dadd( 4.10548, 351.511, -29.1189, 0.28 ) }
    dend_7 { pt3dadd( 4.16389, 351.903, -29.4243, 0.55 ) }
    dend_7 { pt3dadd( 4.23627, 352.497, -29.793, 0.28 ) }
    dend_7 { pt3dadd( 4.28492, 353.321, -30.0408, 0.55 ) }
    dend_7 { pt3dadd( 4.33323, 354.484, -30.4166, 0.55 ) }
    dend_7 { pt3dadd( 4.35203, 355.148, -30.6309, 0.55 ) }
    dend_7 { pt3dadd( 4.37031, 355.89, -30.8558, 0.83 ) }
    dend_7 { pt3dadd( 4.41645, 357.075, -31.2144, 0.28 ) }
    dend_7 { pt3dadd( 4.45725, 358.072, -31.5026, 0.83 ) }
    dend_7 { pt3dadd( 4.54384, 359.3, -31.817, 0.55 ) }
    dend_7 { pt3dadd( 4.57706, 359.791, -31.926, 0.55 ) }
    dend_7 { pt3dadd( 4.64958, 360.726, -32.0857, 0.83 ) }
    dend_7 { pt3dadd( 4.67583, 361.22, -32.1435, 0.55 ) }
    dend_7 { pt3dadd( 4.701, 362.154, -32.1644, 0.83 ) }
    dend_7 { pt3dadd( 4.66009, 363.018, -32.1824, 0.28 ) }
    dend_7 { pt3dadd( 4.62743, 363.374, -32.2267, 0.28 ) }
    dend_7 { pt3dadd( 4.49285, 364.33, -32.4504, 0.28 ) }
    dend_7 { pt3dadd( 4.43129, 364.74, -32.5887, 0.83 ) }
    dend_7 { pt3dadd( 4.28304, 365.692, -33.0283, 0.55 ) }
    dend_7 { pt3dadd( 4.14383, 366.729, -33.7487, 0.83 ) }
    dend_7 { pt3dadd( 3.92502, 368.13, -34.9697, 0.28 ) }
    dend_7 { pt3dadd( 3.84691, 368.559, -35.4403, 0.55 ) }
    dend_7 { pt3dadd( 3.74539, 368.976, -36.0278, 0.28 ) }
    dend_7 { pt3dadd( 3.63941, 369.273, -36.4811, 0.83 ) }
    dend_7 { pt3dadd( 3.19499, 370.361, -38.1906, 0.83 ) }
    dend_7 { pt3dadd( 3.03599, 370.712, -38.7322, 0.83 ) }
    dend_7 { pt3dadd( 2.47713, 371.807, -40.32, 0.83 ) }
    dend_7 { pt3dadd( 1.7932, 373.074, -42.1006, 0.55 ) }
    dend_7 { pt3dadd( 1.36016, 373.824, -43.1512, 0.55 ) }
    dend_7 { pt3dadd( 0.963606, 374.505, -44.071, 0.55 ) }
    dend_7 { pt3dadd( 0.520569, 375.26, -45.0291, 0.55 ) }
    dend_7 { pt3dadd( -0.0942019, 376.438, -46.4201, 0.55 ) }
    dend_7 { pt3dadd( -0.585716, 377.424, -47.4365, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 83/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 42.077, -43.2256, -88.7488, 0.55 ) }
    dend_45 { pt3dadd( 42.7117, -42.6278, -90.158, 0.55 ) }
    dend_45 { pt3dadd( 43.337, -41.9638, -91.5951, 0.83 ) }
    dend_45 { pt3dadd( 44.5983, -40.5566, -94.5257, 0.28 ) }
    dend_45 { pt3dadd( 45.2388, -39.8115, -95.9874, 0.83 ) }
    dend_45 { pt3dadd( 46.8074, -37.9655, -99.4236, 0.28 ) }
    dend_45 { pt3dadd( 47.3535, -37.3227, -100.564, 0.55 ) }
    dend_45 { pt3dadd( 48.5336, -35.825, -103.191, 0.55 ) }
    dend_45 { pt3dadd( 49.7656, -34.15, -105.838, 0.55 ) }
    dend_45 { pt3dadd( 50.837, -32.6906, -108.0, 0.28 ) }
    dend_45 { pt3dadd( 51.2826, -32.0823, -108.853, 0.28 ) }
    dend_45 { pt3dadd( 51.739, -31.464, -109.682, 0.55 ) }
    dend_45 { pt3dadd( 52.7471, -30.1731, -111.397, 0.28 ) }
    dend_45 { pt3dadd( 54.1805, -28.412, -113.507, 0.55 ) }
    dend_45 { pt3dadd( 55.8158, -26.2498, -116.125, 0.28 ) }
    dend_45 { pt3dadd( 56.236, -25.6926, -116.822, 0.55 ) }
    dend_45 { pt3dadd( 57.9024, -23.325, -119.71, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_45 { pt3dadd( 58.9643, -21.747, -121.621, 0.28 ) }
    dend_45 { pt3dadd( 60.152, -19.9238, -123.884, 0.83 ) }
    dend_45 { pt3dadd( 61.9244, -16.9621, -127.646, 0.55 ) }
    dend_45 { pt3dadd( 62.3432, -16.2406, -128.585, 0.55 ) }
    dend_45 { pt3dadd( 63.1562, -14.8161, -130.615, 0.55 ) }
    dend_45 { pt3dadd( 63.9734, -13.4511, -132.742, 0.83 ) }
    dend_45 { pt3dadd( 65.2099, -11.5421, -135.903, 0.28 ) }
    dend_45 { pt3dadd( 65.6183, -11.0038, -136.812, 0.55 ) }
    dend_45 { pt3dadd( 66.8414, -9.68942, -138.838, 0.28 ) }
    dend_45 { pt3dadd( 67.0748, -9.46211, -139.194, 0.55 ) }
    dend_45 { pt3dadd( 68.2448, -8.53399, -140.691, 0.55 ) }
    dend_45 { pt3dadd( 70.0818, -7.21828, -142.615, 0.28 ) }
    dend_45 { pt3dadd( 70.7803, -6.73989, -143.235, 0.55 ) }
    dend_45 { pt3dadd( 72.5032, -5.63652, -144.663, 0.28 ) }
    dend_45 { pt3dadd( 73.2227, -5.19328, -145.206, 0.55 ) }
    dend_45 { pt3dadd( 74.7908, -4.33029, -146.347, 0.28 ) }
    dend_45 { pt3dadd( 75.7982, -3.8985, -147.069, 0.55 ) }
    dend_45 { pt3dadd( 76.3683, -3.7065, -147.438, 0.55 ) }
    dend_45 { pt3dadd( 77.9823, -3.1374, -148.39, 0.28 ) }
    dend_45 { pt3dadd( 79.0703, -2.72357, -148.953, 0.28 ) }
    dend_45 { pt3dadd( 80.1322, -2.23712, -149.516, 0.55 ) }
    dend_45 { pt3dadd( 82.6904, -0.860094, -150.871, 0.28 ) }
    dend_45 { pt3dadd( 84.4518, 0.28446, -151.812, 0.55 ) }
    dend_45 { pt3dadd( 86.0869, 1.5286, -152.649, 0.55 ) }
    dend_45 { pt3dadd( 87.5679, 2.86856, -153.372, 0.83 ) }
    dend_45 { pt3dadd( 89.7276, 5.1379, -154.349, 0.28 ) }
    dend_45 { pt3dadd( 90.5043, 6.09974, -154.68, 0.28 ) }
    dend_45 { pt3dadd( 91.8165, 8.06381, -155.164, 0.55 ) }
    dend_45 { pt3dadd( 93.075, 10.2011, -155.571, 0.28 ) }
    dend_45 { pt3dadd( 93.6127, 11.1801, -155.711, 0.55 ) }
    dend_45 { pt3dadd( 94.4449, 12.7818, -155.837, 0.55 ) }
    dend_45 { pt3dadd( 95.6608, 15.1816, -155.879, 0.28 ) }
    dend_45 { pt3dadd( 96.3838, 16.6433, -155.893, 0.55 ) }
    dend_45 { pt3dadd( 97.4588, 18.9164, -155.907, 0.28 ) }
    dend_45 { pt3dadd( 98.6232, 21.5004, -155.953, 0.55 ) }
    dend_45 { pt3dadd( 99.7948, 24.1757, -156.024, 0.55 ) }
    dend_45 { pt3dadd( 100.295, 25.3791, -156.063, 0.55 ) }
    dend_45 { pt3dadd( 101.232, 27.8028, -156.194, 0.55 ) }
    dend_45 { pt3dadd( 102.071, 30.0432, -156.412, 0.55 ) }
    dend_45 { pt3dadd( 102.868, 32.3497, -156.701, 0.55 ) }
    dend_45 { pt3dadd( 103.596, 34.5448, -157.003, 0.28 ) }
    dend_45 { pt3dadd( 103.97, 35.6926, -157.212, 0.55 ) }
    dend_45 { pt3dadd( 105.142, 39.3017, -157.92, 0.28 ) }
    dend_45 { pt3dadd( 105.864, 41.7186, -158.474, 0.28 ) }
    dend_45 { pt3dadd( 106.192, 42.9342, -158.777, 0.55 ) }
    dend_45 { pt3dadd( 106.767, 45.0835, -159.351, 0.28 ) }
    dend_45 { pt3dadd( 107.272, 47.0188, -159.884, 0.55 ) }
    dend_45 { pt3dadd( 107.649, 48.5024, -160.279, 0.55 ) }
    dend_45 { pt3dadd( 108.629, 52.694, -161.329, 0.28 ) }
    dend_45 { pt3dadd( 109.166, 55.3026, -161.95, 0.28 ) }
    dend_45 { pt3dadd( 109.364, 56.3682, -162.188, 0.55 ) }
    dend_45 { pt3dadd( 109.727, 58.5237, -162.631, 0.55 ) }
    dend_45 { pt3dadd( 110.216, 61.4551, -163.116, 0.28 ) }
    dend_45 { pt3dadd( 110.591, 63.7276, -163.45, 0.55 ) }
    dend_45 { pt3dadd( 110.937, 65.8322, -163.679, 0.28 ) }
    dend_45 { pt3dadd( 111.171, 67.6467, -163.844, 0.55 ) }
    dend_45 { pt3dadd( 111.302, 68.7413, -163.914, 0.28 ) }
    dend_45 { pt3dadd( 111.41, 69.4899, -163.894, 0.55 ) }
    dend_45 { pt3dadd( 111.75, 71.6724, -163.664, 0.28 ) }
    dend_45 { pt3dadd( 111.958, 72.7462, -163.476, 0.55 ) }
    dend_45 { pt3dadd( 112.764, 76.3051, -162.72, 0.28 ) }
    dend_45 { pt3dadd( 113.381, 78.751, -162.158, 0.55 ) }
    dend_45 { pt3dadd( 114.256, 81.9922, -161.346, 0.28 ) }
    dend_45 { pt3dadd( 114.763, 83.7374, -160.895, 0.55 ) }
    dend_45 { pt3dadd( 115.388, 85.731, -160.348, 0.28 ) }
    dend_45 { pt3dadd( 115.977, 87.5129, -159.827, 0.55 ) }
    dend_45 { pt3dadd( 116.552, 89.1896, -159.328, 0.28 ) }
    dend_45 { pt3dadd( 116.975, 90.4843, -158.951, 0.55 ) }
    dend_45 { pt3dadd( 117.935, 93.7063, -158.081, 0.28 ) }
    dend_45 { pt3dadd( 118.427, 95.351, -157.594, 0.55 ) }
    dend_45 { pt3dadd( 119.089, 97.7162, -156.844, 0.28 ) }
    dend_45 { pt3dadd( 119.331, 98.5977, -156.533, 0.55 ) }
    dend_45 { pt3dadd( 119.897, 100.843, -155.692, 0.28 ) }
    dend_45 { pt3dadd( 120.428, 103.213, -154.799, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 74/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 42.077, -43.2256, -88.7488, 0.28 ) }
    dend_44 { pt3dadd( 43.9541, -43.7164, -89.7751, 0.28 ) }
    dend_44 { pt3dadd( 44.5103, -43.8576, -90.1156, 0.55 ) }
    dend_44 { pt3dadd( 45.2724, -43.9985, -90.6234, 0.55 ) }
    dend_44 { pt3dadd( 46.4419, -44.1796, -91.4053, 0.28 ) }
    dend_44 { pt3dadd( 47.1379, -44.2871, -91.8535, 0.55 ) }
    dend_44 { pt3dadd( 49.5848, -44.6315, -93.3457, 0.28 ) }
    dend_44 { pt3dadd( 50.2526, -44.6818, -93.7181, 0.55 ) }
    dend_44 { pt3dadd( 51.8539, -44.729, -94.5447, 0.28 ) }
    dend_44 { pt3dadd( 52.5454, -44.7178, -94.8681, 0.28 ) }
    dend_44 { pt3dadd( 53.6908, -44.6627, -95.3267, 0.55 ) }
    dend_44 { pt3dadd( 54.7617, -44.614, -95.6911, 0.55 ) }
    dend_44 { pt3dadd( 57.3808, -44.5363, -96.3494, 0.28 ) }
    dend_44 { pt3dadd( 58.3559, -44.5573, -96.5791, 0.55 ) }
    dend_44 { pt3dadd( 59.4547, -44.656, -96.8277, 0.55 ) }
    dend_44 { pt3dadd( 61.4549, -44.9467, -97.3022, 0.28 ) }
    dend_44 { pt3dadd( 62.7539, -45.2294, -97.623, 0.55 ) }
    dend_44 { pt3dadd( 64.3607, -45.7528, -97.998, 0.28 ) }
    dend_44 { pt3dadd( 65.2072, -46.1398, -98.1817, 0.55 ) }
    dend_44 { pt3dadd( 66.7428, -46.9974, -98.4977, 0.28 ) }
    dend_44 { pt3dadd( 67.384, -47.4445, -98.6097, 0.55 ) }
    dend_44 { pt3dadd( 68.0739, -48.0308, -98.6974, 0.55 ) }
    dend_44 { pt3dadd( 68.9496, -48.9314, -98.712, 0.28 ) }
    dend_44 { pt3dadd( 69.435, -49.5253, -98.6747, 0.28 ) }
    dend_44 { pt3dadd( 69.9285, -50.2916, -98.5801, 0.55 ) }
    dend_44 { pt3dadd( 70.502, -51.4421, -98.3919, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_44 { pt3dadd( 70.5728, -51.6177, -98.3592, 0.55 ) }
    dend_44 { pt3dadd( 71.1114, -53.2879, -98.0859, 0.28 ) }
    dend_44 { pt3dadd( 71.1582, -53.4807, -98.0747, 0.83 ) }
    dend_44 { pt3dadd( 71.6924, -56.086, -98.1225, 0.28 ) }
    dend_44 { pt3dadd( 71.7854, -56.578, -98.2287, 0.55 ) }
    dend_44 { pt3dadd( 71.9846, -57.7846, -98.6712, 0.28 ) }
    dend_44 { pt3dadd( 72.097, -58.5302, -99.025, 0.55 ) }
    dend_44 { pt3dadd( 72.3459, -60.2138, -100.067, 0.28 ) }
    dend_44 { pt3dadd( 72.3748, -60.4258, -100.21, 0.55 ) }
    dend_44 { pt3dadd( 72.7045, -62.8786, -102.069, 0.28 ) }
    dend_44 { pt3dadd( 72.7415, -63.2151, -102.316, 0.55 ) }
    dend_44 { pt3dadd( 72.7693, -63.421, -102.468, 0.55 ) }
    dend_44 { pt3dadd( 72.8851, -64.1855, -102.935, 0.28 ) }
    dend_44 { pt3dadd( 72.9906, -64.8302, -103.254, 0.55 ) }
    dend_44 { pt3dadd( 73.2036, -65.9545, -103.706, 0.28 ) }
    dend_44 { pt3dadd( 73.2989, -66.4181, -103.868, 0.55 ) }
    dend_44 { pt3dadd( 73.9539, -69.1947, -104.924, 0.28 ) }
    dend_44 { pt3dadd( 74.0999, -69.7617, -105.147, 0.55 ) }
    dend_44 { pt3dadd( 74.2747, -70.4053, -105.439, 0.28 ) }
    dend_44 { pt3dadd( 74.8694, -72.4725, -106.454, 0.28 ) }
    dend_44 { pt3dadd( 75.0475, -73.1426, -106.765, 0.55 ) }
    dend_44 { pt3dadd( 75.5269, -75.0754, -107.597, 0.28 ) }
    dend_44 { pt3dadd( 75.5576, -75.2395, -107.654, 0.55 ) }
    dend_44 { pt3dadd( 75.8615, -77.3779, -108.351, 0.28 ) }
    dend_44 { pt3dadd( 75.9572, -78.435, -108.6, 0.55 ) }
    dend_44 { pt3dadd( 76.0327, -79.8019, -108.775, 0.28 ) }
    dend_44 { pt3dadd( 76.0701, -80.3797, -108.782, 0.55 ) }
    dend_44 { pt3dadd( 76.1609, -81.5747, -108.697, 0.28 ) }
    dend_44 { pt3dadd( 76.2146, -82.1017, -108.645, 0.55 ) }
    dend_44 { pt3dadd( 76.4828, -84.1423, -108.567, 0.28 ) }
    dend_44 { pt3dadd( 76.7471, -85.8065, -108.618, 0.28 ) }
    dend_44 { pt3dadd( 76.895, -86.523, -108.706, 0.55 ) }
    dend_44 { pt3dadd( 77.3101, -88.2657, -109.005, 0.28 ) }
    dend_44 { pt3dadd( 77.4604, -88.7954, -109.113, 0.55 ) }
    dend_44 { pt3dadd( 78.5014, -92.2837, -109.892, 0.28 ) }
    dend_44 { pt3dadd( 78.9353, -93.5943, -110.236, 0.55 ) }
    dend_44 { pt3dadd( 79.653, -95.5178, -110.773, 0.28 ) }
    dend_44 { pt3dadd( 79.8013, -95.8945, -110.882, 0.55 ) }
    dend_44 { pt3dadd( 80.5782, -97.6791, -111.402, 0.28 ) }
    dend_44 { pt3dadd( 80.6964, -97.9206, -111.466, 0.55 ) }
    dend_44 { pt3dadd( 81.2623, -98.7277, -111.573, 0.28 ) }
    dend_44 { pt3dadd( 81.6723, -99.2266, -111.672, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 42/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 37.6774, -42.3394, 15.6835, 0.55 ) }
    dend_41 { pt3dadd( 38.4495, -42.2108, 16.9032, 0.55 ) }
    dend_41 { pt3dadd( 39.9916, -41.8817, 19.3778, 0.55 ) }
    dend_41 { pt3dadd( 42.8237, -41.2526, 23.8301, 0.55 ) }
    dend_41 { pt3dadd( 45.0089, -40.7794, 27.2048, 0.55 ) }
    dend_41 { pt3dadd( 46.9952, -40.4054, 30.2212, 0.28 ) }
    dend_41 { pt3dadd( 48.1023, -40.2159, 31.8653, 0.83 ) }
    dend_41 { pt3dadd( 49.4825, -40.0166, 33.947, 0.55 ) }
    dend_41 { pt3dadd( 50.5339, -39.9345, 35.4734, 0.28 ) }
    dend_41 { pt3dadd( 51.0751, -39.9154, 36.1286, 0.55 ) }
    dend_41 { pt3dadd( 52.2486, -39.8902, 37.4236, 0.28 ) }
    dend_41 { pt3dadd( 52.6429, -39.8944, 37.854, 0.55 ) }
    dend_41 { pt3dadd( 54.3901, -40.0495, 39.5233, 0.28 ) }
    dend_41 { pt3dadd( 55.5319, -40.3161, 40.4887, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 56/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 37.6774, -42.3394, 15.6835, 0.28 ) }
    dend_40 { pt3dadd( 44.0385, -45.1727, 11.1721, 0.28 ) }
    dend_40 { pt3dadd( 44.9296, -45.4989, 10.6259, 0.83 ) }
    dend_40 { pt3dadd( 48.0247, -46.4655, 8.89971, 0.28 ) }
    dend_40 { pt3dadd( 48.9291, -46.6469, 8.46079, 0.83 ) }
    dend_40 { pt3dadd( 51.0423, -46.9089, 7.51308, 0.28 ) }
    dend_40 { pt3dadd( 51.9372, -46.96, 7.13946, 0.83 ) }
    dend_40 { pt3dadd( 54.584, -46.5759, 6.55163, 0.28 ) }
    dend_40 { pt3dadd( 55.1564, -46.3718, 6.40588, 0.83 ) }
    dend_40 { pt3dadd( 58.0227, -44.8065, 5.6018, 0.28 ) }
    dend_40 { pt3dadd( 58.718, -44.4017, 5.39402, 0.28 ) }
    dend_40 { pt3dadd( 59.7024, -43.7985, 5.08565, 0.55 ) }
    dend_40 { pt3dadd( 61.5427, -42.6687, 4.8743, 0.28 ) }
    dend_40 { pt3dadd( 64.3685, -40.9466, 4.97205, 0.28 ) }
    dend_40 { pt3dadd( 65.0762, -40.529, 5.1487, 0.83 ) }
    dend_40 { pt3dadd( 70.1163, -37.6839, 7.25604, 0.28 ) }
    dend_40 { pt3dadd( 70.9767, -37.2432, 7.71523, 0.55 ) }
    dend_40 { pt3dadd( 77.1505, -34.2837, 11.9428, 0.28 ) }
    dend_40 { pt3dadd( 77.8031, -33.9813, 12.4804, 0.83 ) }
    dend_40 { pt3dadd( 81.6703, -32.1036, 16.267, 0.28 ) }
    dend_40 { pt3dadd( 82.1777, -31.8205, 16.8291, 0.55 ) }
    dend_40 { pt3dadd( 83.6626, -30.8728, 18.7127, 0.28 ) }
    dend_40 { pt3dadd( 85.0587, -29.9538, 20.4585, 0.55 ) }
    dend_40 { pt3dadd( 86.8295, -28.7641, 22.3778, 0.28 ) }
    dend_40 { pt3dadd( 87.548, -28.258, 23.0981, 0.55 ) }
    dend_40 { pt3dadd( 89.8289, -26.3953, 24.9148, 0.28 ) }
    dend_40 { pt3dadd( 90.6517, -25.6222, 25.5963, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 83/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 33.561, -56.1377, -7.87673, 0.55 ) }
    dend_38 { pt3dadd( 34.6996, -56.7449, -8.98809, 0.55 ) }
    dend_38 { pt3dadd( 36.5174, -57.7362, -10.7725, 0.55 ) }
    dend_38 { pt3dadd( 37.8256, -58.4804, -12.08, 0.28 ) }
    dend_38 { pt3dadd( 38.7614, -59.005, -13.0054, 0.55 ) }
    dend_38 { pt3dadd( 40.2439, -59.8023, -14.4121, 0.55 ) }
    dend_38 { pt3dadd( 40.8927, -60.1647, -14.9831, 0.28 ) }
    dend_38 { pt3dadd( 41.333, -60.4251, -15.3916, 0.55 ) }
    dend_38 { pt3dadd( 41.8323, -60.7659, -15.8281, 0.28 ) }
    dend_38 { pt3dadd( 42.5709, -61.3388, -16.4589, 0.55 ) }
    dend_38 { pt3dadd( 43.6928, -62.2286, -17.3029, 0.55 ) }
    dend_38 { pt3dadd( 45.3193, -63.521, -18.4663, 0.55 ) }
    dend_38 { pt3dadd( 47.3403, -65.2088, -20.3095, 1.38 ) }
    dend_38 { pt3dadd( 48.5548, -66.2403, -21.5929, 0.83 ) }
    dend_38 { pt3dadd( 49.5518, -67.0626, -22.7485, 0.55 ) }
    dend_38 { pt3dadd( 50.7638, -68.038, -24.2814, 0.28 ) }
    dend_38 { pt3dadd( 52.2037, -69.1534, -26.2447, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_38 { pt3dadd( 54.7612, -71.028, -30.2555, 0.28 ) }
    dend_38 { pt3dadd( 55.0751, -71.2739, -30.803, 0.28 ) }
    dend_38 { pt3dadd( 55.7943, -71.9322, -32.2906, 0.55 ) }
    dend_38 { pt3dadd( 56.2505, -72.3784, -33.3255, 0.55 ) }
    dend_38 { pt3dadd( 56.6328, -72.8135, -34.3077, 0.55 ) }
    dend_38 { pt3dadd( 57.7205, -74.1602, -36.9472, 0.55 ) }
    dend_38 { pt3dadd( 58.8106, -75.615, -39.4105, 0.28 ) }
    dend_38 { pt3dadd( 59.4508, -76.5712, -40.9456, 0.83 ) }
    dend_38 { pt3dadd( 59.8302, -77.1836, -41.8995, 0.83 ) }
    dend_38 { pt3dadd( 60.8446, -78.8015, -44.3916, 0.55 ) }
    dend_38 { pt3dadd( 61.2775, -79.4592, -45.3611, 0.83 ) }
    dend_38 { pt3dadd( 61.9655, -80.345, -46.5359, 0.28 ) }
    dend_38 { pt3dadd( 62.5154, -80.9269, -47.2821, 0.55 ) }
    dend_38 { pt3dadd( 62.8769, -81.2999, -47.6804, 0.28 ) }
    dend_38 { pt3dadd( 63.0639, -81.4972, -47.849, 0.55 ) }
    dend_38 { pt3dadd( 64.0292, -82.4038, -48.5279, 0.28 ) }
    dend_38 { pt3dadd( 65.0518, -83.4326, -49.3576, 0.28 ) }
    dend_38 { pt3dadd( 65.8414, -84.2384, -49.9881, 0.83 ) }
    dend_38 { pt3dadd( 66.4978, -84.9956, -50.5382, 0.55 ) }
    dend_38 { pt3dadd( 68.1243, -87.0108, -51.9242, 0.28 ) }
    dend_38 { pt3dadd( 68.5813, -87.6541, -52.3664, 0.83 ) }
    dend_38 { pt3dadd( 69.9834, -89.8447, -53.8341, 0.28 ) }
    dend_38 { pt3dadd( 70.4843, -90.7757, -54.4018, 0.83 ) }
    dend_38 { pt3dadd( 71.3497, -92.4532, -55.3304, 0.28 ) }
    dend_38 { pt3dadd( 71.591, -92.9346, -55.5999, 0.83 ) }
    dend_38 { pt3dadd( 72.5751, -95.0038, -56.7052, 0.28 ) }
    dend_38 { pt3dadd( 73.1725, -96.2746, -57.3582, 0.28 ) }
    dend_38 { pt3dadd( 73.7505, -97.348, -57.8575, 0.55 ) }
    dend_38 { pt3dadd( 74.4176, -98.5252, -58.4807, 0.55 ) }
    dend_38 { pt3dadd( 75.552, -100.32, -59.5082, 0.55 ) }
    dend_38 { pt3dadd( 76.1739, -101.233, -60.0495, 0.28 ) }
    dend_38 { pt3dadd( 76.509, -101.702, -60.3453, 0.55 ) }
    dend_38 { pt3dadd( 77.5719, -103.229, -61.4398, 0.28 ) }
    dend_38 { pt3dadd( 78.3781, -104.305, -62.2795, 0.55 ) }
    dend_38 { pt3dadd( 79.2075, -105.466, -63.1837, 0.28 ) }
    dend_38 { pt3dadd( 79.4653, -105.812, -63.4333, 0.83 ) }
    dend_38 { pt3dadd( 80.5502, -107.276, -64.5618, 0.28 ) }
    dend_38 { pt3dadd( 80.8031, -107.598, -64.8298, 0.55 ) }
    dend_38 { pt3dadd( 81.4539, -108.365, -65.5494, 0.55 ) }
    dend_38 { pt3dadd( 82.6317, -109.602, -66.6047, 0.28 ) }
    dend_38 { pt3dadd( 82.6783, -109.649, -66.6477, 0.55 ) }
    dend_38 { pt3dadd( 83.692, -110.643, -67.7064, 0.28 ) }
    dend_38 { pt3dadd( 84.0937, -111.009, -68.1328, 0.55 ) }
    dend_38 { pt3dadd( 85.1237, -112.02, -69.3825, 0.28 ) }
    dend_38 { pt3dadd( 85.7785, -112.673, -70.2561, 0.55 ) }
    dend_38 { pt3dadd( 86.9377, -113.787, -71.8962, 0.55 ) }
    dend_38 { pt3dadd( 87.9205, -114.764, -73.3693, 0.28 ) }
    dend_38 { pt3dadd( 88.5108, -115.386, -74.2867, 0.83 ) }
    dend_38 { pt3dadd( 89.5182, -116.492, -75.8717, 0.28 ) }
    dend_38 { pt3dadd( 89.7505, -116.708, -76.1861, 0.55 ) }
    dend_38 { pt3dadd( 90.6608, -117.415, -77.2901, 0.28 ) }
    dend_38 { pt3dadd( 91.0094, -117.61, -77.5856, 0.55 ) }
    dend_38 { pt3dadd( 92.7793, -118.378, -78.8197, 0.28 ) }
    dend_38 { pt3dadd( 93.3616, -118.581, -79.1873, 0.83 ) }
    dend_38 { pt3dadd( 95.7455, -119.164, -80.3895, 0.28 ) }
    dend_38 { pt3dadd( 96.2003, -119.251, -80.594, 0.55 ) }
    dend_38 { pt3dadd( 98.1232, -119.424, -81.2857, 0.28 ) }
    dend_38 { pt3dadd( 99.7863, -119.426, -81.8517, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 58/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 33.561, -56.1377, -7.87673, 0.55 ) }
    dend_35 { pt3dadd( 33.5917, -57.6804, -10.0577, 0.55 ) }
    dend_35 { pt3dadd( 33.485, -61.0049, -14.6037, 0.55 ) }
    dend_35 { pt3dadd( 33.458, -63.8508, -18.461, 0.28 ) }
    dend_35 { pt3dadd( 33.4705, -65.8789, -21.2951, 0.83 ) }
    dend_35 { pt3dadd( 33.6552, -69.0875, -25.9315, 0.28 ) }
    dend_35 { pt3dadd( 33.6945, -69.814, -27.0564, 0.55 ) }
    dend_35 { pt3dadd( 33.6956, -70.4184, -28.0764, 0.55 ) }
    dend_35 { pt3dadd( 33.7712, -71.5038, -30.2233, 0.55 ) }
    dend_35 { pt3dadd( 33.9893, -73.0744, -33.5426, 0.55 ) }
    dend_35 { pt3dadd( 34.1292, -73.9026, -35.3785, 0.55 ) }
    dend_35 { pt3dadd( 34.8579, -76.0051, -40.3911, 0.83 ) }
    dend_35 { pt3dadd( 35.3325, -77.2421, -43.4987, 0.28 ) }
    dend_35 { pt3dadd( 35.4916, -77.719, -44.7804, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 72/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -59.4737, -9.19567, -144.232, 0.28 ) }
    dend_20 { pt3dadd( -60.3611, -10.0137, -144.367, 0.28 ) }
    dend_20 { pt3dadd( -61.514, -11.0765, -144.541, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 75/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -59.4737, -9.19567, -144.232, 0.28 ) }
    dend_19 { pt3dadd( -59.3827, -12.1386, -148.901, 0.28 ) }
    dend_19 { pt3dadd( -59.3561, -12.999, -150.266, 0.55 ) }
    dend_19 { pt3dadd( -59.2729, -15.6909, -154.537, 0.28 ) }
    dend_19 { pt3dadd( -59.236, -16.8824, -156.427, 0.83 ) }
    dend_19 { pt3dadd( -59.0748, -22.0968, -164.699, 0.28 ) }
    dend_19 { pt3dadd( -59.0483, -22.9538, -166.059, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 82/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -0.585716, 377.424, -47.4365, 0.55 ) }
    dend_9 { pt3dadd( -1.1764, 378.171, -48.7446, 0.55 ) }
    dend_9 { pt3dadd( -1.7975, 379.068, -50.0916, 0.28 ) }
    dend_9 { pt3dadd( -2.41685, 379.962, -51.4349, 0.55 ) }
    dend_9 { pt3dadd( -4.20776, 382.548, -55.319, 0.28 ) }
    dend_9 { pt3dadd( -4.41365, 382.845, -55.7655, 0.55 ) }
    dend_9 { pt3dadd( -5.74159, 384.763, -58.6455, 0.28 ) }
    dend_9 { pt3dadd( -6.38241, 385.57, -60.2277, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 90/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -0.585716, 377.424, -47.4365, 0.28 ) }
    dend_8 { pt3dadd( -2.11552, 376.904, -48.1324, 0.28 ) }
    dend_8 { pt3dadd( -2.96697, 376.616, -48.5198, 0.83 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 93/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 120.428, 103.213, -154.799, 0.28 ) }
    dend_47 { pt3dadd( 117.003, 104.42, -154.606, 0.28 ) }
    dend_47 { pt3dadd( 115.842, 104.829, -154.541, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 96/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 120.428, 103.213, -154.799, 0.28 ) }
    dend_46 { pt3dadd( 120.487, 104.109, -154.707, 0.28 ) }
    dend_46 { pt3dadd( 120.583, 105.798, -154.51, 0.28 ) }
    dend_46 { pt3dadd( 120.6, 106.253, -154.434, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_46 { pt3dadd( 120.624, 107.915, -154.064, 0.28 ) }
    dend_46 { pt3dadd( 120.637, 108.87, -153.851, 0.55 ) }
    dend_46 { pt3dadd( 120.655, 110.104, -153.575, 0.28 ) }
    dend_46 { pt3dadd( 120.652, 110.756, -153.391, 0.55 ) }
    dend_46 { pt3dadd( 120.624, 111.795, -153.017, 0.28 ) }
    dend_46 { pt3dadd( 120.576, 112.636, -152.696, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 6/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 35.4916, -77.719, -44.7804, 0.55 ) }
    dend_37 { pt3dadd( 34.2792, -78.7444, -45.6804, 0.55 ) }
    dend_37 { pt3dadd( 33.721, -79.2479, -46.1207, 0.28 ) }
    dend_37 { pt3dadd( 33.3412, -79.5665, -46.4147, 0.83 ) }
    dend_37 { pt3dadd( 30.9921, -81.4206, -48.0908, 0.28 ) }
    dend_37 { pt3dadd( 30.3326, -81.958, -48.5533, 0.83 ) }
    dend_37 { pt3dadd( 27.5002, -84.3262, -50.4656, 0.28 ) }
    dend_37 { pt3dadd( 27.1067, -84.6528, -50.7271, 0.83 ) }
    dend_37 { pt3dadd( 24.6635, -86.5264, -52.2371, 0.28 ) }
    dend_37 { pt3dadd( 23.9472, -87.0475, -52.6228, 0.55 ) }
    dend_37 { pt3dadd( 20.8128, -89.1538, -54.0779, 0.28 ) }
    dend_37 { pt3dadd( 20.1714, -89.5624, -54.3731, 0.28 ) }
    dend_37 { pt3dadd( 18.7834, -90.3943, -55.0097, 0.83 ) }
    dend_37 { pt3dadd( 14.6744, -92.7648, -56.9279, 0.28 ) }
    dend_37 { pt3dadd( 13.5398, -93.4055, -57.4876, 0.55 ) }
    dend_37 { pt3dadd( 11.3071, -94.6329, -58.6324, 0.55 ) }
    dend_37 { pt3dadd( 9.64384, -95.4969, -59.4778, 0.55 ) }
    dend_37 { pt3dadd( 6.78169, -97.0132, -60.9495, 0.28 ) }
    dend_37 { pt3dadd( 5.98847, -97.4725, -61.3626, 0.83 ) }
    dend_37 { pt3dadd( 3.34766, -99.1181, -62.6788, 0.28 ) }
    dend_37 { pt3dadd( 2.84368, -99.4589, -62.9145, 0.55 ) }
    dend_37 { pt3dadd( 0.671192, -101.054, -63.6907, 0.28 ) }
    dend_37 { pt3dadd( 0.0276432, -101.513, -63.8542, 0.55 ) }
    dend_37 { pt3dadd( -2.39153, -103.296, -64.2718, 0.28 ) }
    dend_37 { pt3dadd( -2.60931, -103.448, -64.3074, 0.83 ) }
    dend_37 { pt3dadd( -3.88361, -104.29, -64.4098, 0.28 ) }
    dend_37 { pt3dadd( -4.90426, -104.944, -64.4267, 0.55 ) }
    dend_37 { pt3dadd( -8.01116, -106.841, -64.4039, 0.28 ) }
    dend_37 { pt3dadd( -8.93296, -107.413, -64.3533, 0.83 ) }
    dend_37 { pt3dadd( -12.855, -109.881, -63.903, 0.28 ) }
    dend_37 { pt3dadd( -14.5303, -110.96, -63.6769, 0.55 ) }
    dend_37 { pt3dadd( -16.7295, -112.434, -63.3845, 0.55 ) }
    dend_37 { pt3dadd( -19.1481, -114.152, -62.9942, 0.28 ) }
    dend_37 { pt3dadd( -21.1285, -115.665, -62.5486, 0.55 ) }
    dend_37 { pt3dadd( -22.5628, -116.792, -62.29, 0.28 ) }
    dend_37 { pt3dadd( -22.7724, -116.969, -62.2553, 0.55 ) }
    dend_37 { pt3dadd( -24.0815, -118.019, -62.1211, 0.28 ) }
    dend_37 { pt3dadd( -25.1175, -118.776, -62.0429, 0.55 ) }
    dend_37 { pt3dadd( -26.2797, -119.536, -61.9878, 0.55 ) }
    dend_37 { pt3dadd( -28.3418, -120.68, -62.0193, 0.28 ) }
    dend_37 { pt3dadd( -29.2292, -121.117, -62.0227, 0.55 ) }
    dend_37 { pt3dadd( -30.504, -121.718, -62.0206, 0.28 ) }
    dend_37 { pt3dadd( -31.3135, -122.069, -61.9967, 0.55 ) }
    dend_37 { pt3dadd( -33.5128, -122.979, -61.9417, 0.28 ) }
    dend_37 { pt3dadd( -34.2609, -123.274, -61.9518, 0.55 ) }
    dend_37 { pt3dadd( -36.1348, -124.04, -61.9766, 0.28 ) }
    dend_37 { pt3dadd( -37.3611, -124.589, -62.1145, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 53/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 35.4916, -77.719, -44.7804, 0.28 ) }
    dend_36 { pt3dadd( 39.5825, -78.1879, -47.8729, 0.28 ) }
    dend_36 { pt3dadd( 40.1421, -78.2955, -48.3716, 0.83 ) }
    dend_36 { pt3dadd( 42.7124, -78.9547, -50.6586, 0.28 ) }
    dend_36 { pt3dadd( 43.6025, -79.1595, -51.47, 0.28 ) }
    dend_36 { pt3dadd( 44.68, -79.4842, -52.5045, 0.55 ) }
    dend_36 { pt3dadd( 46.4034, -80.1865, -54.5816, 0.28 ) }
    dend_36 { pt3dadd( 48.0487, -81.1388, -57.0791, 0.55 ) }
    dend_36 { pt3dadd( 49.0014, -81.8062, -58.5675, 0.55 ) }
    dend_36 { pt3dadd( 50.0672, -82.7974, -60.5671, 0.55 ) }
    dend_36 { pt3dadd( 51.7629, -84.6441, -64.2558, 0.83 ) }
    dend_36 { pt3dadd( 53.5955, -86.9812, -68.9062, 0.28 ) }
    dend_36 { pt3dadd( 54.1822, -87.821, -70.561, 0.28 ) }
    dend_36 { pt3dadd( 54.4393, -88.3192, -71.465, 0.83 ) }
    dend_36 { pt3dadd( 56.0167, -91.7833, -77.6312, 0.28 ) }
    dend_36 { pt3dadd( 56.4023, -92.8704, -79.4411, 0.83 ) }
    dend_36 { pt3dadd( 56.679, -93.8773, -81.0133, 0.83 ) }
    dend_36 { pt3dadd( 57.1847, -95.8007, -83.7344, 0.83 ) }
    dend_36 { pt3dadd( 57.9969, -99.2323, -88.3806, 0.55 ) }
    dend_36 { pt3dadd( 58.684, -102.504, -92.3413, 0.55 ) }
    dend_36 { pt3dadd( 59.5667, -107.04, -97.0235, 0.55 ) }
    dend_36 { pt3dadd( 59.9136, -109.503, -99.2346, 0.55 ) }
    dend_36 { pt3dadd( 60.1516, -111.892, -101.073, 0.28 ) }
    dend_36 { pt3dadd( 60.1777, -112.203, -101.263, 0.55 ) }
    dend_36 { pt3dadd( 60.5135, -116.861, -103.336, 0.28 ) }
    dend_36 { pt3dadd( 60.6138, -118.608, -103.883, 0.55 ) }
    dend_36 { pt3dadd( 61.0249, -123.718, -105.127, 0.28 ) }
    dend_36 { pt3dadd( 61.3696, -126.58, -105.72, 0.55 ) }
    dend_36 { pt3dadd( 61.8721, -129.635, -106.301, 0.28 ) }
    dend_36 { pt3dadd( 62.419, -131.886, -106.657, 0.55 ) }
    dend_36 { pt3dadd( 64.067, -137.042, -107.266, 0.28 ) }
    dend_36 { pt3dadd( 64.5614, -138.256, -107.366, 1.11 ) }
    dend_36 { pt3dadd( 67.7402, -144.198, -107.671, 0.28 ) }
    dend_36 { pt3dadd( 69.6053, -147.023, -107.751, 0.55 ) }
    dend_36 { pt3dadd( 71.8233, -149.539, -107.524, 0.28 ) }
    dend_36 { pt3dadd( 72.7012, -150.279, -107.341, 0.55 ) }
    dend_36 { pt3dadd( 75.3147, -151.995, -106.564, 0.28 ) }
    dend_36 { pt3dadd( 77.1976, -153.023, -105.903, 0.28 ) }
    dend_36 { pt3dadd( 81.1095, -154.656, -104.325, 0.55 ) }
    dend_36 { pt3dadd( 87.0079, -157.031, -101.766, 0.55 ) }
    dend_36 { pt3dadd( 89.323, -157.952, -100.736, 0.28 ) }
    dend_36 { pt3dadd( 89.798, -158.124, -100.546, 0.55 ) }
    dend_36 { pt3dadd( 93.2162, -159.246, -99.3898, 0.28 ) }
    dend_36 { pt3dadd( 93.802, -159.433, -99.2176, 0.55 ) }
    dend_36 { pt3dadd( 96.4265, -160.192, -98.7634, 0.28 ) }
    dend_36 { pt3dadd( 97.5625, -160.485, -98.7286, 0.55 ) }
    dend_36 { pt3dadd( 102.178, -161.156, -98.576, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_36 { pt3dadd( 103.699, -161.182, -98.4282, 0.55 ) }
    dend_36 { pt3dadd( 106.114, -160.964, -98.2546, 0.28 ) }
    dend_36 { pt3dadd( 106.939, -160.78, -98.1125, 0.55 ) }
    dend_36 { pt3dadd( 109.396, -159.963, -97.5414, 0.28 ) }
    dend_36 { pt3dadd( 111.558, -159.155, -96.9502, 0.55 ) }
    dend_36 { pt3dadd( 115.669, -157.348, -95.4037, 0.28 ) }
    dend_36 { pt3dadd( 118.853, -155.806, -94.0593, 0.55 ) }
    dend_36 { pt3dadd( 125.654, -152.099, -90.9758, 0.28 ) }
    dend_36 { pt3dadd( 126.651, -151.533, -90.4894, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
    ModelViewParmSubset_2 = new SectionList()
    dend_26 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_21 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_42 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_6 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_5 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_3 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_48 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_43 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_30 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_29 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_24 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_18 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_17 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_15 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_14 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_10 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_45 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_44 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_40 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_38 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_35 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_37 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_36 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_26 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_32 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_11 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_27 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_33 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_12 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_4 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_16 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_39 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_34 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_31 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_28 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_13 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_41 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_23 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_22 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_25 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_20 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_19 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_47 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_46 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_8 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_9 OneSecGrp_SectionRef_47.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_1, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_26 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    axon_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    axon_1 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 1.04239E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 3
    dend_21 nseg = 3
    dend_42 nseg = 3
    dend_6 nseg = 13
    dend_5 nseg = 7
    dend_3 nseg = 5
    dend_48 nseg = 13
    dend_43 nseg = 3
    dend_30 nseg = 17
    dend_29 nseg = 3
    dend_24 nseg = 3
    dend_18 nseg = 7
    dend_17 nseg = 9
    dend_15 nseg = 7
    dend_14 nseg = 7
    dend_10 nseg = 9
    dend_7 nseg = 5
    dend_45 nseg = 11
    dend_44 nseg = 5
    dend_40 nseg = 3
    dend_38 nseg = 7
    dend_35 nseg = 3
    dend_37 nseg = 5
    dend_36 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bSTUT213_L4_BTC_9c68c60c2f_0_0


