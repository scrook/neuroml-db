// Cell: Cell_482655070
/*
{
  "id" : "Cell_482655070",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "551.654, 542.828, 30.8, 14.1512", "558.73, 542.828, 30.8, 14.1512", "565.805, 542.828, 30.8, 14.1512" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "558.729, 542.828, 30.8, 1.0", "564.571, 556.644, 30.8, 1.0", "570.412, 570.46, 30.8, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000353331920038
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "558.138, 536.519, 33.0882, 1.876", "557.127, 536.184, 33.8402, 0.401", "556.193, 535.904, 34.6606, 0.386", "555.351, 535.351, 35.46, 0.3918", "554.684, 534.48, 35.915, 0.4672", "554.021, 533.551, 36.1376, 0.523", "553.643, 532.472, 36.2107, 0.5776", "553.25, 531.399, 36.1729, 0.4576", "552.624, 530.473, 36.0052, 0.3926" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000353331920038
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "555.234, 547.388, 31.7904, 0.2288", "554.547, 548.303, 32.191, 0.343", "553.512, 548.808, 32.4341, 0.3918", "552.544, 549.655, 32.7379, 0.5388", "551.797, 550.428, 32.9232, 0.537", "551.172, 551.351, 33.105, 0.4936", "550.323, 552.099, 33.1741, 0.3776", "549.299, 552.469, 33.129, 0.335", "548.197, 552.774, 33.045, 0.334" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000353331920038
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "552.559, 542.495, 29.7629, 0.4742", "551.672, 542.542, 29.01, 0.3762", "550.633, 542.16, 28.3637, 0.394", "549.734, 541.475, 27.9029, 0.3734", "549.0, 540.645, 27.558, 0.3676", "548.315, 539.787, 27.2099, 0.4262", "547.453, 539.076, 26.9181, 0.4288", "546.445, 538.591, 26.7336, 0.4908", "545.37, 538.281, 26.5488, 0.5564", "544.288, 537.949, 26.3323, 0.4594", "543.232, 537.514, 26.1324, 0.4268", "542.193, 537.031, 25.9459, 0.3384", "541.268, 536.378, 25.745, 0.3084", "540.351, 535.718, 25.4825, 0.2902", "539.44, 535.298, 25.0565, 0.3032", "538.471, 534.867, 24.564, 0.3286", "537.391, 534.614, 24.0863, 0.3702", "536.284, 534.506, 23.77, 0.4742", "535.201, 534.2, 23.5636, 0.537", "534.172, 533.772, 23.3465, 0.5982", "533.122, 533.345, 23.1696, 0.5206", "531.999, 533.221, 23.0402, 0.3906", "530.856, 533.194, 22.9313, 0.3108", "529.719, 533.072, 22.8223, 0.2944", "528.714, 532.569, 22.7196, 0.3128", "527.718, 532.007, 22.6205, 0.3396", "526.706, 531.477, 22.4883, 0.4228", "525.776, 530.893, 22.2402, 0.415", "524.737, 530.471, 21.9443, 0.5014", "523.729, 530.659, 21.7892, 0.4", "522.663, 530.84, 21.5695, 0.3378", "521.581, 530.608, 21.2632, 0.2986", "520.601, 530.139, 20.8514, 0.3138", "519.698, 530.307, 20.2906, 0.3728", "518.956, 530.992, 19.6846, 0.3328", "518.187, 531.358, 19.0152, 0.2982", "517.075, 531.362, 18.6828, 0.2712", "516.007, 531.205, 18.7777, 0.2684", "514.932, 530.981, 19.1731, 0.2626", "514.464, 530.713, 20.0211, 0.2542", "514.111, 529.701, 20.9454, 0.2288", "513.443, 529.186, 23.305, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000353331920038,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "553.062, 543.556, 33.0702, 0.2288", "552.414, 544.187, 33.0767, 0.2984", "551.339, 543.813, 33.0747, 0.3194", "550.206, 543.744, 33.0579, 0.3538", "549.068, 543.735, 33.1027, 0.4412", "547.927, 543.685, 33.1604, 0.4872", "546.831, 543.384, 33.25, 0.4496", "545.809, 542.955, 33.4144, 0.5184", "544.693, 542.722, 33.5334, 0.4328", "543.622, 542.325, 33.5726, 0.393", "542.534, 542.108, 33.4569, 0.4276", "541.403, 542.216, 33.2842, 0.4238" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000353331920038
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "565.005, 543.76, 28.8702, 0.2288", "566.06, 544.12, 28.5645, 0.3946", "567.068, 544.533, 28.3783, 0.544", "568.193, 544.487, 28.1277, 0.5462", "569.041, 544.773, 27.7422, 0.5116", "569.992, 545.322, 27.3235, 0.406", "570.974, 545.904, 27.0054, 0.4118", "571.992, 546.359, 26.8607, 0.3592", "573.086, 546.125, 26.8226, 0.3416", "573.853, 545.343, 26.713, 0.3772", "574.786, 544.695, 26.6074, 0.341", "575.924, 544.575, 26.5309, 0.3132", "576.948, 544.085, 26.4763, 0.299", "577.292, 543.026, 26.4869, 0.3196", "577.219, 541.912, 26.4256, 0.3598", "577.674, 540.866, 26.3533, 0.424", "578.271, 539.891, 26.2816, 0.5932", "579.029, 539.036, 26.2016, 0.6644", "579.882, 538.275, 26.1112, 0.6002", "580.924, 537.822, 25.9935, 0.5176", "582.017, 537.65, 25.7949, 0.4172", "583.07, 537.232, 25.6567, 0.4324", "583.869, 536.423, 25.5434, 0.3986" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000353331920038
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "564.628, 542.362, 31.9197, 0.2288", "565.768, 542.367, 33.0176, 0.4734", "566.604, 542.822, 33.5362, 0.395", "567.174, 543.193, 34.3221, 0.329", "568.109, 543.766, 35.0288, 0.281", "569.068, 544.39, 35.5482, 0.2866", "570.044, 544.984, 35.8893, 0.2968", "571.062, 545.507, 36.0657, 0.3168", "572.198, 545.571, 36.0816, 0.3472", "573.301, 545.567, 35.9181, 0.4368", "574.44, 545.522, 35.7638, 0.442", "575.546, 545.227, 35.6684, 0.5462", "576.507, 544.608, 35.6331, 0.5088" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000353331920038
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "564.788, 545.354, 28.9719, 0.4576", "565.59, 546.132, 28.4939, 0.4044", "565.565, 547.118, 28.3032, 0.4094", "565.185, 548.142, 28.0568, 0.3532", "565.406, 549.18, 27.751, 0.3366", "566.148, 549.811, 27.1854, 0.3382", "566.392, 550.62, 26.4328, 0.4126", "566.091, 551.655, 25.5811, 0.4322", "565.877, 552.583, 24.7462, 0.3584", "565.896, 551.6, 24.0169, 0.2982", "565.903, 550.795, 23.1454, 0.2712", "566.176, 550.795, 21.9914, 0.2684", "566.754, 550.795, 20.7044, 0.2626", "567.862, 550.751, 19.626, 0.2542", "568.504, 550.2, 18.6681, 0.2288", "569.33, 549.65, 17.4129, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000353331920038
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "554.181, 541.456, 19.5079, 0.2288", "553.039, 541.39, 19.4277, 0.2802" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000353331920038
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "554.315, 546.997, 31.6249, 0.2288", "553.46, 547.739, 31.6182, 0.2778", "553.378, 548.232, 31.6576, 0.2806", "552.703, 548.899, 31.6078, 0.2858", "551.736, 549.245, 31.3611, 0.2952", "550.708, 549.689, 31.0649, 0.3138", "550.015, 550.537, 30.8479, 0.343", "549.276, 551.313, 30.5393, 0.422", "548.461, 552.009, 30.4013, 0.4492", "547.343, 552.185, 30.3075, 0.3908", "546.255, 552.399, 30.2588, 0.3532", "545.2, 552.622, 30.3321, 0.3986", "544.193, 552.909, 30.4688, 0.3816", "543.392, 553.714, 30.5068, 0.3842", "542.762, 554.608, 30.3327, 0.452", "542.088, 555.421, 29.9597, 0.4996", "541.156, 555.905, 29.4442, 0.5098", "540.031, 555.955, 28.9576, 0.4504", "539.172, 556.667, 28.5404, 0.4914", "538.625, 557.666, 28.1954, 0.5206", "538.148, 558.683, 27.8539, 0.5732", "537.63, 559.678, 27.5086, 0.4486", "536.744, 560.376, 27.1801, 0.3816", "535.758, 559.971, 26.7828, 0.3754", "534.641, 559.836, 26.4566, 0.4774", "533.528, 560.062, 26.2291, 0.5726", "532.445, 560.427, 26.0554, 0.5202", "531.379, 560.822, 25.9368, 0.3898", "530.411, 561.276, 25.7753, 0.3094", "529.82, 562.001, 25.3927, 0.2916", "529.502, 563.014, 24.9018, 0.3074", "528.966, 564.018, 24.4474, 0.33", "528.331, 564.943, 24.0269, 0.4028", "527.5, 565.69, 23.6563, 0.3896", "526.531, 566.286, 23.4285, 0.3972", "525.451, 566.628, 23.3115, 0.4836", "524.37, 566.821, 23.2809, 0.5228", "523.375, 567.185, 23.4754, 0.7248", "522.294, 567.482, 23.7531, 0.6996", "521.195, 567.799, 24.0145, 0.764", "520.083, 568.06, 24.254, 0.5734", "518.987, 568.316, 24.5049, 0.5788", "517.966, 568.774, 24.7905, 0.4504", "516.893, 569.102, 25.0409, 0.4264", "515.753, 569.177, 25.2519, 0.4856", "514.619, 569.329, 25.4403, 0.5514", "513.5, 569.536, 25.6303, 0.656", "512.409, 569.837, 25.8525, 0.4782", "511.424, 570.143, 26.2102, 0.3514", "510.544, 570.848, 26.457, 0.2756", "509.676, 571.589, 26.5974, 0.2766" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000353331920038,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "558.241, 548.901, 34.2017, 0.6864", "559.115, 549.627, 34.4907, 0.6718", "559.898, 550.413, 34.6615, 0.4944", "560.69, 551.237, 34.7872, 0.4442", "561.424, 552.115, 34.8536, 0.3718", "562.056, 553.066, 34.8499, 0.366", "562.672, 553.995, 34.7206, 0.4174", "563.375, 554.888, 34.5498, 0.4408", "563.997, 555.849, 34.4053, 0.3744", "564.572, 556.837, 34.3084, 0.3276", "565.273, 557.74, 34.2588, 0.328" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000353331920038
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "570.412, 570.46, 30.8, 1.0", "576.253, 584.276, 30.8, 1.0", "582.095, 598.092, 30.8, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "552.624, 530.473, 36.0052, 0.3926", "551.786, 529.438, 35.8084, 0.4244", "551.065, 528.55, 35.6871, 0.4292", "550.557, 527.526, 35.6286, 0.473", "550.142, 526.463, 35.6465, 0.614", "549.544, 525.522, 35.796, 0.8144", "548.661, 524.82, 35.896, 1.0234" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "552.624, 530.473, 36.0052, 0.3926", "553.122, 529.524, 36.0903, 0.2288", "553.372, 528.489, 37.1686, 0.2902", "554.385, 528.182, 37.5838, 0.3048", "554.635, 529.015, 38.2166, 0.3252", "555.424, 529.728, 38.8172, 0.394", "556.5, 529.86, 39.2165, 0.3728", "557.505, 529.444, 39.4982, 0.368", "557.872, 528.607, 39.9538, 0.4208", "558.271, 527.667, 40.4863, 0.4472", "558.663, 526.658, 41.0318, 0.3872" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "548.197, 552.774, 33.045, 0.334", "547.609, 553.381, 32.842, 0.4114", "546.783, 554.052, 32.6329, 0.3986", "545.958, 554.803, 32.5539, 0.4476", "545.151, 555.596, 32.5632, 0.4138", "544.513, 556.535, 32.5668, 0.4994", "544.161, 557.59, 32.4806, 0.3962", "544.104, 558.709, 32.4349, 0.331", "544.189, 559.839, 32.4156, 0.285", "544.583, 560.901, 32.3378, 0.2938", "545.21, 561.763, 32.1012, 0.31", "545.426, 562.795, 31.7514, 0.3412", "545.343, 563.919, 31.4997, 0.3944", "544.867, 564.921, 31.3706, 0.514", "544.216, 565.859, 31.253, 0.6348", "543.82, 566.886, 31.0428, 0.6622", "544.057, 567.985, 30.8098, 0.5234", "544.392, 568.515, 30.5648, 0.4996", "544.872, 569.537, 30.34, 0.4654", "544.997, 570.633, 30.086, 0.5844", "544.982, 571.738, 29.7867, 0.6048", "544.815, 572.851, 29.5716, 0.4708", "544.591, 573.956, 29.3742, 0.3696", "544.565, 575.09, 29.216, 0.3822", "544.695, 576.198, 29.2006, 0.35", "544.964, 577.302, 29.2583, 0.331", "545.13, 578.406, 29.2592, 0.3268", "545.471, 579.469, 29.337, 0.398", "545.875, 580.53, 29.463, 0.374", "546.284, 581.597, 29.5714, 0.4", "546.448, 582.725, 29.6517, 0.3362", "546.765, 583.822, 29.7223, 0.3042", "547.036, 584.933, 29.7931, 0.2824", "546.831, 586.045, 29.855, 0.289", "546.37, 587.089, 29.9211, 0.3012", "545.984, 588.166, 30.0093, 0.3246", "545.904, 589.285, 30.1731, 0.3642", "545.82, 590.405, 30.3934, 0.4556", "545.38, 591.454, 30.5749, 0.5374", "544.82, 592.449, 30.7255, 0.4294", "544.455, 593.502, 30.9058, 0.3452", "544.077, 594.564, 30.9425, 0.3122", "543.741, 595.646, 30.8672, 0.3402", "543.599, 596.781, 30.763, 0.4166", "543.405, 597.909, 30.6429, 0.4396", "542.924, 598.947, 30.5052, 0.3718", "542.495, 600.006, 30.3369, 0.3242", "542.654, 600.484, 30.1286, 0.3142", "543.0, 601.534, 29.8259, 0.3734", "543.346, 602.612, 29.5238, 0.334", "543.693, 603.701, 29.2561, 0.3", "544.005, 604.789, 28.9828, 0.2748", "544.284, 605.876, 28.6815, 0.2748", "544.177, 606.982, 28.4253, 0.2752", "543.917, 608.096, 28.229, 0.2756", "543.822, 609.212, 28.0482, 0.2766", "544.0, 610.331, 27.8474, 0.2782", "544.185, 611.453, 27.6537, 0.2816", "544.383, 612.578, 27.4902, 0.2872", "544.599, 613.698, 27.3468, 0.299", "545.023, 614.759, 27.2399, 0.3148", "545.45, 615.822, 27.1598, 0.3746", "545.84, 616.871, 27.1575, 0.3362", "545.753, 617.952, 27.2135, 0.3044", "545.464, 619.015, 27.1228, 0.2826", "545.396, 620.118, 26.8931, 0.2894", "545.405, 621.246, 26.5915, 0.3032", "545.435, 622.376, 26.2425, 0.3222", "546.046, 623.337, 25.9237, 0.3886", "546.278, 624.416, 25.6328, 0.3616", "545.982, 625.488, 25.3134, 0.3536", "545.94, 626.577, 24.9507, 0.3634", "546.036, 627.687, 24.5774, 0.4904", "546.698, 628.591, 24.2826, 0.4262", "547.112, 629.648, 24.1287, 0.3886", "547.82, 630.698, 23.9864, 0.3822", "548.138, 631.789, 23.9118, 0.5202", "548.169, 632.929, 23.875, 0.5072", "547.659, 633.787, 23.9458, 0.414", "546.857, 634.278, 24.1606, 0.3488" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "548.197, 552.774, 33.045, 0.334", "546.922, 552.428, 32.513, 0.2288", "545.807, 552.168, 32.6077, 0.2814", "544.693, 551.908, 32.6427, 0.287", "543.742, 551.612, 32.7281, 0.2988", "542.645, 551.522, 32.7432, 0.3142", "541.531, 551.522, 32.8675, 0.3734", "540.392, 551.52, 33.0114, 0.3338" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "541.403, 542.216, 33.2842, 0.4238", "540.49, 541.697, 33.1125, 0.5174", "539.896, 540.732, 32.9484, 0.4306", "539.469, 539.672, 32.8031, 0.3906", "539.101, 538.597, 32.6376, 0.4158", "539.06, 537.482, 32.4232, 0.438", "539.104, 536.339, 32.2462, 0.3692", "539.104, 536.073, 32.1356, 0.3184", "538.827, 534.965, 32.025, 0.3082", "538.593, 534.205, 31.9203, 0.339", "539.072, 532.813, 31.7433, 0.3848", "539.396, 531.777, 31.6985, 0.5246", "539.492, 530.681, 31.75, 0.5156", "539.508, 529.589, 31.6907, 0.4294", "539.544, 528.5, 31.4986, 0.3774", "539.794, 527.406, 31.2847, 0.4454", "540.034, 526.289, 31.0996, 0.458", "540.26, 525.202, 31.0002, 0.5758", "539.938, 524.157, 30.9238, 0.5642", "539.617, 523.084, 30.7628, 0.5152", "539.663, 521.973, 30.5124, 0.5586", "539.93, 520.971, 30.095, 0.6724", "540.271, 519.94, 29.598, 0.7214", "540.398, 518.815, 29.1488, 0.6846", "540.437, 517.673, 28.7977, 0.549", "540.685, 516.56, 28.5438, 0.3962", "540.611, 515.428, 28.3693, 0.321", "540.151, 514.392, 28.2226, 0.3144", "539.999, 513.292, 28.0185, 0.344", "539.69, 512.232, 27.9182, 0.4238", "539.013, 511.621, 27.5806, 0.4526" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "541.403, 542.216, 33.2842, 0.4238", "540.698, 542.222, 33.1019, 0.2288", "539.674, 542.227, 33.7067, 0.3736", "538.638, 542.227, 33.9746, 0.3344", "537.578, 542.571, 34.1435, 0.301", "536.588, 543.069, 34.3045, 0.2762", "535.517, 543.414, 34.4714, 0.2778", "534.581, 543.939, 34.7413, 0.2804", "533.573, 543.663, 35.0736, 0.2856", "532.469, 543.877, 35.4264, 0.2948", "531.518, 544.426, 35.7409, 0.3128", "530.515, 544.891, 35.996, 0.3414", "529.471, 545.528, 36.1547, 0.4186", "528.499, 546.131, 36.2253, 0.4432", "527.58, 546.809, 36.2345, 0.3786", "526.583, 547.371, 36.2057, 0.3368", "525.622, 547.984, 36.1304, 0.3374", "524.698, 548.594, 35.9699, 0.4176", "523.843, 549.351, 35.838, 0.4114", "522.945, 550.059, 35.7602, 0.4652", "522.044, 550.758, 35.7412, 0.4772", "521.325, 551.637, 35.8089, 0.4674", "520.692, 552.514, 36.0371, 0.376", "519.922, 553.273, 36.3432, 0.3322", "518.934, 553.792, 36.5033, 0.3288", "517.896, 554.262, 36.6072, 0.4018", "516.95, 554.903, 36.682, 0.3812", "516.036, 555.592, 36.7366, 0.4134", "515.193, 556.292, 36.8304, 0.3608", "514.648, 557.13, 37.063, 0.3506", "513.831, 557.915, 37.2011, 0.364", "512.924, 558.608, 37.2666, 0.4628", "512.098, 559.385, 37.2408, 0.5144", "511.271, 560.131, 37.144, 0.562", "510.289, 560.601, 37.1017, 0.4278", "509.191, 560.607, 37.0014, 0.3422", "508.236, 560.412, 36.7492, 0.3068", "507.497, 560.235, 36.4314, 0.329", "507.348, 560.917, 36.5831, 0.402", "506.612, 561.649, 36.9239, 0.3816", "505.579, 562.118, 37.2812, 0.4138", "504.57, 562.571, 37.6888, 0.3628", "503.584, 563.148, 38.0201, 0.3484", "502.695, 563.839, 38.2217, 0.3898", "502.062, 564.76, 38.271, 0.3652", "501.033, 565.152, 38.2178, 0.3526", "499.944, 564.925, 38.0447, 0.3988", "498.854, 564.809, 37.8148, 0.3756", "497.816, 565.206, 37.6172, 0.403", "496.911, 565.905, 37.4511, 0.3416", "495.966, 566.532, 37.3094, 0.3142", "494.898, 566.791, 37.1454, 0.302", "493.796, 566.971, 36.9555, 0.32", "492.7, 567.283, 36.7948, 0.3846", "491.657, 567.734, 36.6904, 0.3544", "490.617, 568.117, 36.6923, 0.3388", "489.545, 568.355, 36.668, 0.3424", "488.423, 568.463, 36.6346, 0.4206", "487.288, 568.596, 36.636, 0.447", "486.199, 568.914, 36.6167, 0.3854", "485.153, 569.326, 36.5394, 0.3506", "484.147, 569.715, 36.587, 0.358", "483.2, 570.251, 36.7623, 0.4802", "482.196, 570.778, 36.9155, 0.4078", "481.168, 571.279, 37.0107, 0.3536", "480.096, 571.672, 37.0328, 0.3216", "479.082, 572.112, 36.9144, 0.3872", "478.346, 572.954, 36.7413, 0.3604", "477.688, 573.888, 36.5789, 0.3438", "477.098, 574.782, 36.563, 0.3814", "476.573, 575.74, 36.4277, 0.3484", "476.133, 576.738, 36.1934, 0.328", "475.941, 577.845, 35.9237, 0.3212", "475.69, 578.93, 35.6334, 0.3864", "475.032, 579.866, 35.4015, 0.359", "474.371, 580.795, 35.2313, 0.3412", "473.676, 581.664, 35.2142, 0.3764", "472.918, 582.472, 35.2271, 0.3396", "472.049, 583.167, 35.1207, 0.3104", "471.114, 583.787, 34.9359, 0.2938", "470.135, 584.357, 34.701, 0.3112", "469.302, 585.119, 34.4588, 0.3382", "468.523, 585.952, 34.2311, 0.413", "467.667, 586.711, 34.0645, 0.4328", "466.797, 587.453, 33.9629, 0.3594", "465.888, 588.148, 33.9032, 0.3", "464.974, 588.834, 33.8674, 0.2746", "464.326, 589.764, 33.8386, 0.2746", "463.726, 590.739, 33.8069, 0.2746", "463.305, 591.798, 33.7688, 0.2748", "462.288, 592.162, 33.7254, 0.2748", "461.622, 593.034, 33.6563, 0.2752", "461.345, 594.054, 33.4653, 0.2756", "460.676, 594.983, 33.3119, 0.2766", "459.822, 595.579, 33.3183, 0.2782", "459.092, 596.456, 33.3108, 0.2814", "458.379, 597.35, 33.271, 0.287", "457.424, 597.911, 33.1246, 0.2986", "456.427, 598.411, 32.8815, 0.3138", "455.542, 599.098, 32.5598, 0.3728", "454.699, 599.835, 32.205, 0.3328", "454.0, 600.74, 31.915, 0.2982", "453.22, 601.549, 31.6792, 0.2712", "452.212, 602.089, 31.5034, 0.2684", "451.178, 602.541, 31.3687, 0.2626", "450.036, 602.621, 31.2508, 0.2542", "448.924, 602.778, 31.1097, 0.2288", "447.887, 603.137, 30.5183, 0.2288" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "583.869, 536.423, 25.5434, 0.3986", "584.003, 535.649, 25.4138, 0.4088", "584.466, 534.641, 25.2884, 0.5298", "585.276, 533.849, 25.1953, 0.4888", "586.174, 533.141, 25.1275, 0.555", "587.004, 532.36, 25.0482, 0.447", "587.956, 531.865, 24.9199, 0.4516", "589.012, 531.482, 24.8141, 0.3794", "589.82, 530.773, 24.8423, 0.4098", "590.578, 529.959, 24.9611, 0.354", "591.534, 529.409, 25.1284, 0.3384", "592.447, 528.784, 25.2049, 0.3404", "593.07, 527.865, 25.157, 0.4232", "593.577, 526.843, 25.0434, 0.422", "593.964, 525.769, 24.8779, 0.4832", "594.247, 524.691, 24.6206, 0.5176", "594.132, 523.618, 24.2875, 0.5078", "594.015, 522.505, 23.9503, 0.6172", "594.143, 521.417, 23.7608, 0.6602", "594.57, 520.435, 23.7159, 0.6", "595.187, 519.494, 23.6713, 0.48", "595.818, 518.547, 23.5213, 0.5288", "596.392, 517.63, 23.1577, 0.4454", "596.87, 516.969, 22.4676, 0.4488", "597.611, 517.309, 21.5731, 0.3742", "598.478, 517.358, 20.5638, 0.4002" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "583.869, 536.423, 25.5434, 0.3986", "584.146, 536.49, 24.0971, 0.2288", "585.073, 536.559, 22.4066, 0.3702", "585.926, 536.234, 21.6341, 0.4742", "586.786, 535.663, 20.8053, 0.5366", "587.603, 534.931, 20.0376, 0.5978", "588.596, 534.365, 19.4005, 0.5198", "589.357, 533.651, 18.8057, 0.389", "589.273, 532.793, 18.166, 0.3082", "589.013, 531.801, 17.5688, 0.2894", "589.382, 530.833, 17.1802, 0.3032", "590.346, 530.838, 16.891, 0.3224", "591.385, 531.258, 16.6158, 0.3898", "592.328, 531.885, 16.4084, 0.3588", "593.392, 532.201, 16.2427, 0.3728", "594.435, 531.92, 16.213, 0.2796", "594.422, 530.93, 16.24, 0.2288" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "576.507, 544.608, 35.6331, 0.5088", "577.24, 544.71, 35.7588, 0.2288", "578.155, 544.802, 36.6948, 0.2752", "579.184, 545.086, 37.0028, 0.2756", "579.982, 545.861, 37.2893, 0.2766", "580.801, 546.53, 37.6928, 0.2782", "581.828, 546.63, 38.1562, 0.2814", "582.955, 546.517, 38.5633, 0.287", "584.088, 546.63, 38.9113, 0.2988", "585.151, 546.92, 39.3173, 0.3142", "586.15, 547.39, 39.7488, 0.3736", "587.133, 547.722, 40.2234, 0.3342", "588.176, 547.649, 40.7344, 0.3006", "589.197, 547.938, 41.1513, 0.2756", "589.836, 548.777, 41.356, 0.2766", "590.737, 549.209, 41.3658, 0.2782", "591.806, 549.257, 41.4674, 0.2814", "592.768, 549.357, 41.7402, 0.2872", "593.607, 549.973, 42.075, 0.299", "594.617, 550.492, 42.2724, 0.3146" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "576.507, 544.608, 35.6331, 0.5088", "577.026, 543.953, 35.6628, 0.4156", "577.619, 542.993, 35.789, 0.3578", "578.283, 542.103, 36.0046, 0.3788", "579.137, 541.35, 36.2009, 0.4826", "580.112, 540.756, 36.3639, 0.5894", "581.093, 540.183, 36.4986, 0.5154", "581.83, 539.34, 36.6114, 0.5556", "582.309, 538.302, 36.717, 0.4542", "582.783, 537.29, 36.8738, 0.434", "583.429, 536.391, 37.0868, 0.498", "584.148, 535.506, 37.2663, 0.582", "584.763, 534.542, 37.4044, 0.6774", "585.413, 533.606, 37.5054, 0.6886", "586.187, 532.765, 37.5757, 0.5982", "587.004, 531.965, 37.6242, 0.5138", "587.846, 531.19, 37.6692, 0.41", "588.796, 530.581, 37.728, 0.4194", "589.857, 530.155, 37.8059, 0.3732", "590.878, 529.65, 37.9151, 0.3672", "591.703, 528.923, 38.1049, 0.427", "592.221, 527.949, 38.3485, 0.4226", "592.594, 526.868, 38.5636, 0.5156", "593.098, 525.86, 38.771, 0.4264", "593.852, 525.041, 38.9953, 0.3876", "594.734, 524.33, 39.1824, 0.387", "595.57, 523.56, 39.2658, 0.4974", "596.13, 522.62, 39.2241, 0.6178", "596.424, 521.536, 39.1448, 0.5636", "596.831, 520.477, 39.0981, 0.6656", "597.424, 519.501, 39.0939, 0.5588", "598.099, 518.579, 39.1479, 0.4236", "598.82, 517.701, 39.2946, 0.3262", "599.628, 517.263, 39.6508, 0.3178", "600.648, 517.093, 39.9823, 0.3802", "601.713, 516.746, 40.2595, 0.3464", "602.244, 515.783, 40.4732, 0.3242", "602.69, 514.731, 40.616, 0.3142", "603.349, 513.823, 40.6669, 0.3734", "604.047, 512.924, 40.7226, 0.3338", "604.762, 512.03, 40.777, 0.3", "605.477, 511.137, 40.8388, 0.2746" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "553.039, 541.39, 19.4277, 0.2802", "551.898, 541.301, 19.3955, 0.285", "550.956, 540.805, 19.3484, 0.2938", "549.815, 540.845, 19.283, 0.3112", "548.856, 540.332, 19.2062, 0.337", "548.094, 539.483, 19.0989, 0.4168", "547.424, 538.606, 18.8826, 0.41", "546.989, 537.595, 18.5748, 0.4626", "546.786, 536.487, 18.298, 0.4724", "546.622, 535.36, 18.064, 0.4582", "546.473, 534.242, 17.8092, 0.3594", "546.385, 533.326, 17.4082, 0.3" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "553.039, 541.39, 19.4277, 0.2802", "554.969, 540.825, 19.5079, 0.4576", "555.338, 539.773, 18.9342, 0.3594", "556.003, 539.045, 18.649, 0.3002", "556.836, 538.554, 18.1984, 0.275", "557.779, 537.903, 17.8338, 0.2756", "558.539, 537.054, 17.5475, 0.2764", "559.307, 536.212, 17.3293, 0.278", "560.174, 535.465, 17.1689, 0.2808", "560.991, 534.667, 17.0492, 0.286", "561.671, 533.747, 16.9362, 0.297", "562.193, 532.802, 16.7673, 0.3108", "562.232, 531.667, 16.5246, 0.3672", "561.943, 530.571, 16.2778, 0.322", "561.935, 530.103, 15.7487, 0.2796", "562.465, 529.284, 15.2961, 0.2288", "563.609, 529.284, 14.6045, 0.2288" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "509.676, 571.589, 26.5974, 0.2766", "508.358, 571.431, 26.7808, 0.2784", "507.221, 571.397, 26.9297, 0.2816", "506.112, 571.539, 27.0485, 0.2876", "505.762, 572.427, 27.2712, 0.2986", "505.859, 573.549, 27.4098, 0.3204", "506.092, 574.504, 27.3056, 0.354", "505.992, 575.637, 27.1579, 0.448", "506.201, 576.714, 27.044, 0.4688", "506.141, 577.487, 26.8473, 0.567", "505.657, 578.166, 26.4151, 0.6882", "505.65, 578.834, 26.076, 0.7504", "505.234, 579.88, 25.7705, 0.7392", "504.724, 580.904, 25.5396, 0.647", "504.249, 581.938, 25.3909, 0.5936", "503.67, 582.759, 25.2695, 0.6092", "503.02, 583.482, 25.2786, 0.5408", "502.263, 584.206, 25.2431, 0.429", "501.514, 584.987, 25.1768, 0.3776", "501.26, 586.088, 25.1061, 0.44", "501.355, 587.219, 25.0277, 0.4776", "501.18, 588.319, 24.9208, 0.468", "500.911, 589.403, 24.7303, 0.3774", "500.51, 590.457, 24.5609, 0.3346", "500.046, 591.37, 24.5438, 0.3334", "499.451, 592.34, 24.4743, 0.4102", "498.888, 593.309, 24.3111, 0.398", "498.299, 594.242, 24.0752, 0.439", "497.392, 594.861, 23.8331, 0.4338", "496.311, 595.179, 23.6617, 0.3614", "495.253, 595.57, 23.4412, 0.3038", "494.295, 596.14, 23.214, 0.2818", "493.501, 596.96, 23.0505, 0.2876", "492.668, 597.698, 22.9365, 0.2998", "491.645, 598.162, 22.7982, 0.316", "490.632, 598.561, 22.5926, 0.377", "489.507, 598.685, 22.4461, 0.3408", "488.402, 598.861, 22.4, 0.3124", "487.502, 599.465, 22.3879, 0.2988", "487.132, 600.487, 22.3583, 0.3142", "487.29, 601.615, 22.2889, 0.3734", "487.534, 602.718, 22.151, 0.334", "487.315, 603.682, 21.844, 0.3002", "486.637, 604.403, 21.3577, 0.275", "485.88, 605.183, 20.871, 0.2754", "485.146, 606.053, 20.5274, 0.2762", "484.491, 606.965, 20.3776, 0.2776", "483.846, 607.879, 20.3804, 0.2802", "483.163, 608.794, 20.4365, 0.2852", "482.484, 609.712, 20.5031, 0.294", "482.101, 610.752, 20.5162, 0.3116", "481.92, 611.857, 20.5215, 0.339", "481.523, 612.904, 20.5631, 0.4144", "480.903, 613.86, 20.5927, 0.4356", "480.392, 614.863, 20.6125, 0.3644", "480.172, 615.981, 20.62, 0.3096", "479.849, 617.056, 20.6208, 0.2922", "479.406, 618.097, 20.6369, 0.3082", "478.966, 619.116, 20.5801, 0.3316", "478.27, 619.919, 20.375, 0.4068", "477.531, 620.741, 20.1284, 0.3908", "477.57, 621.71, 19.971, 0.4306", "478.207, 622.635, 19.864, 0.3946", "479.129, 623.165, 19.6694, 0.4032", "479.941, 623.843, 19.3865, 0.5118", "479.921, 624.873, 19.093, 0.492", "479.117, 625.42, 18.6938, 0.3848", "478.075, 625.8, 18.4692, 0.3", "477.047, 626.055, 18.5012, 0.2746", "476.099, 626.609, 18.699, 0.2746", "475.023, 626.934, 18.9055, 0.2746", "474.529, 627.812, 18.9659, 0.2746", "474.372, 628.842, 19.0001, 0.2746", "473.589, 629.65, 19.1233, 0.2746", "472.81, 630.44, 19.3323, 0.2746", "472.413, 631.485, 19.669, 0.2746", "472.379, 632.602, 20.1268, 0.2744", "472.792, 633.64, 20.6761, 0.2744", "473.394, 634.583, 21.3279, 0.2742", "473.529, 635.3, 22.2218, 0.274", "472.991, 635.514, 23.382, 0.2736", "472.29, 635.624, 24.6735, 0.2728", "471.921, 635.438, 25.9956, 0.2712", "472.598, 635.771, 27.0999, 0.2684", "473.305, 636.609, 27.8891, 0.2626", "473.991, 637.44, 28.1806, 0.2542", "473.259, 637.337, 27.9388, 0.2288", "472.471, 636.865, 26.32, 0.2288" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "509.676, 571.589, 26.5974, 0.2766", "509.557, 572.549, 26.2962, 0.2288", "510.114, 573.519, 26.3085, 0.2824", "510.378, 574.606, 26.2449, 0.2888", "509.832, 575.553, 26.3147, 0.3022" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "565.273, 557.74, 34.2588, 0.328", "565.62, 557.947, 34.2538, 0.363", "566.635, 558.358, 34.1947, 0.4896", "567.75, 558.495, 34.2821, 0.4264", "568.648, 559.06, 34.5363, 0.3814", "568.919, 560.134, 34.8849, 0.405", "569.236, 561.233, 35.2136, 0.3872", "569.393, 562.363, 35.5449, 0.4238" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "565.273, 557.74, 34.2588, 0.328", "564.901, 559.083, 34.188, 0.2288", "564.203, 559.933, 34.4702, 0.3342", "563.224, 560.448, 34.6329, 0.3742", "562.223, 560.951, 34.7679, 0.5114", "561.198, 561.432, 34.9006, 0.4616", "560.361, 562.174, 35.0414, 0.4724", "559.494, 562.916, 35.1518, 0.4486", "558.627, 563.661, 35.226, 0.3896", "557.94, 564.567, 35.2713, 0.351", "557.216, 565.451, 35.3049, 0.3944", "556.294, 566.114, 35.3298, 0.374", "555.56, 566.972, 35.3525, 0.3686", "554.831, 567.853, 35.3797, 0.4294", "554.056, 568.693, 35.415, 0.4268", "553.057, 569.217, 35.4673, 0.5246", "551.951, 569.375, 35.5888, 0.4376", "550.828, 569.491, 35.6695, 0.4334", "549.801, 569.956, 35.7269, 0.3506", "548.716, 570.306, 35.8089, 0.332", "547.612, 570.61, 35.9318, 0.3286", "546.516, 570.75, 36.1684, 0.4012", "545.463, 570.875, 36.5448, 0.3802", "544.609, 571.574, 36.9306, 0.4112", "544.227, 572.641, 37.2445, 0.358", "544.036, 573.754, 37.4315, 0.3396", "543.589, 574.787, 37.639, 0.3734" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "548.661, 524.82, 35.896, 1.0234", "547.297, 523.637, 35.9716, 1.056", "546.445, 522.873, 36.099, 0.7802", "545.469, 522.349, 36.3446, 0.7564", "544.361, 522.243, 36.6713, 0.6334", "543.252, 522.247, 37.0978, 0.56", "542.141, 522.305, 37.6048, 0.5884", "541.031, 522.533, 38.0416, 0.7588", "540.0, 522.196, 38.5202, 0.7316", "539.331, 521.443, 39.1135, 0.7446", "539.008, 520.38, 39.6799, 0.6892", "538.692, 519.33, 40.234, 0.7442", "537.864, 518.576, 40.7187, 0.7672", "536.87, 518.055, 41.137, 0.7354" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "548.661, 524.82, 35.896, 1.0234", "549.247, 524.73, 33.469, 0.2288", "550.158, 524.184, 32.6119, 0.29", "551.154, 523.688, 32.2336, 0.3044", "551.901, 522.832, 31.8679, 0.3246", "552.289, 521.768, 31.4745, 0.3928", "552.146, 520.69, 31.2099, 0.371", "551.991, 519.61, 30.795, 0.3632", "552.757, 518.867, 30.2156, 0.4186", "553.619, 518.154, 29.5842, 0.4122", "554.101, 517.413, 28.7028, 0.4724", "554.432, 516.791, 27.6153, 0.4618", "555.333, 516.359, 26.4891, 0.5776", "555.87, 515.374, 25.5227, 0.5924", "555.796, 514.771, 24.6884, 0.447", "555.577, 513.68, 23.9786, 0.3308", "556.227, 512.801, 23.3491, 0.2844", "556.026, 511.749, 22.8064, 0.2926", "555.094, 511.132, 22.3164, 0.3092", "554.827, 510.192, 21.7529, 0.3334", "555.28, 509.208, 21.146, 0.4102", "555.419, 508.204, 20.5071, 0.3978", "554.896, 507.261, 19.9395, 0.4388", "554.133, 506.414, 19.4803, 0.4334", "553.806, 505.53, 18.9927, 0.3604", "554.19, 504.72, 18.4762, 0.3022", "554.594, 503.698, 18.1631, 0.2786", "554.096, 502.817, 18.1811, 0.2822", "553.625, 502.11, 18.5637, 0.2884", "553.297, 501.348, 19.2012, 0.3012", "553.474, 500.236, 19.7612, 0.3186", "553.336, 499.164, 20.0157, 0.3816", "553.109, 498.091, 20.0043, 0.3502", "552.7, 497.027, 19.8593, 0.3248", "552.31, 495.953, 19.6419, 0.3474", "551.984, 494.893, 19.3415, 0.2796", "551.414, 493.916, 19.1002, 0.2288" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "558.663, 526.658, 41.0318, 0.3872", "558.93, 525.903, 42.8789, 0.2288", "559.273, 524.928, 44.7485, 0.2814", "560.086, 524.233, 45.4838, 0.287", "560.786, 523.928, 46.4876, 0.2988", "561.715, 524.042, 47.5986, 0.3142", "562.348, 524.855, 48.692, 0.3734", "562.859, 525.788, 49.7328, 0.3338", "563.784, 526.425, 50.6134, 0.3", "564.903, 526.504, 51.3324, 0.2746", "565.987, 526.153, 51.9456, 0.2746", "566.815, 525.578, 52.6546, 0.2746", "567.797, 525.296, 53.4528, 0.2746", "568.583, 525.436, 54.448, 0.2746", "569.172, 525.81, 55.5946, 0.2746", "569.976, 526.494, 56.6104, 0.2746", "571.117, 526.4, 57.4036, 0.2744", "572.221, 526.263, 58.0686, 0.2744", "573.302, 526.319, 58.6415, 0.2742", "574.39, 526.617, 59.0209, 0.274", "575.318, 526.658, 59.5456, 0.2736", "576.409, 526.658, 60.1322, 0.2728", "577.4, 526.658, 60.8238, 0.2712", "578.523, 526.658, 61.4583, 0.2684", "579.648, 526.656, 62.0264, 0.2626", "580.781, 526.594, 62.4926, 0.2542", "581.917, 526.529, 62.8432, 0.2288", "582.986, 526.199, 63.2971, 0.2288" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "558.663, 526.658, 41.0318, 0.3872", "558.768, 526.906, 41.4697, 0.3464", "559.214, 527.959, 41.8197, 0.386", "560.049, 528.42, 42.124, 0.3582", "560.94, 528.899, 42.2008, 0.3396", "561.964, 529.242, 42.4385, 0.3736", "563.023, 529.098, 42.786, 0.3344", "563.945, 528.964, 43.3882, 0.3008", "564.911, 529.077, 44.1818, 0.276", "564.701, 530.034, 44.9775, 0.2774", "565.043, 530.951, 45.8209, 0.2798", "565.955, 531.605, 46.5273, 0.2842", "566.916, 531.363, 47.1999, 0.2924", "567.333, 530.662, 47.9856, 0.3074", "568.393, 530.329, 48.6254, 0.3374", "569.442, 530.696, 49.2114, 0.3814", "570.111, 531.473, 49.8977, 0.5186", "570.982, 532.198, 50.5089, 0.5046", "571.88, 532.797, 51.1353, 0.4088", "572.781, 533.278, 51.8675, 0.3396", "573.682, 533.788, 52.6826, 0.3734", "574.556, 534.406, 53.4276, 0.3338", "575.651, 534.427, 54.1528, 0.3", "576.768, 534.405, 54.8288, 0.2746", "577.815, 534.477, 55.5579, 0.2746", "578.898, 534.591, 56.2806, 0.2746", "579.984, 534.706, 56.9988, 0.2746", "581.042, 534.506, 57.6943, 0.2746", "582.083, 534.12, 58.3414, 0.2746", "582.961, 533.578, 58.97, 0.2748", "584.077, 533.673, 59.4798, 0.2748", "585.122, 534.137, 59.8626, 0.2752", "586.06, 534.767, 60.1588, 0.2756", "587.133, 535.066, 60.4237, 0.2766", "588.257, 535.265, 60.6858, 0.2782", "589.344, 535.233, 61.0182, 0.2814", "590.4, 534.995, 61.4706, 0.287", "591.508, 534.9, 61.9466, 0.2988", "592.458, 534.322, 62.3846, 0.3142", "593.466, 534.003, 62.888, 0.3734", "594.555, 534.28, 63.3492, 0.3338", "595.682, 534.48, 63.7484, 0.3", "596.745, 534.797, 64.1628, 0.2746", "597.786, 534.953, 64.7063, 0.2746", "598.75, 535.33, 65.2879, 0.2746", "599.711, 535.813, 65.8081, 0.2746", "599.931, 535.772, 66.5706, 0.2746", "599.997, 534.905, 67.2627, 0.2746", "600.589, 534.113, 67.4772, 0.2746", "601.273, 534.166, 67.1994, 0.2746", "601.867, 534.771, 66.6117, 0.2746", "602.945, 534.892, 66.0212, 0.2746", "604.088, 534.9, 65.5385, 0.2746", "605.117, 534.846, 65.3083, 0.2746", "605.852, 534.323, 65.406, 0.2746", "606.711, 533.606, 65.5698, 0.2746", "607.656, 533.091, 65.6373, 0.2746", "608.534, 532.705, 65.4228, 0.2746", "609.494, 532.135, 65.1874, 0.2746", "610.466, 531.536, 64.9771, 0.2744", "611.44, 530.935, 64.806, 0.2744", "612.398, 530.309, 64.6962, 0.2742", "613.333, 529.65, 64.6394, 0.274", "614.268, 528.991, 64.6201, 0.2736", "615.203, 528.333, 64.5974, 0.2728", "616.138, 527.675, 64.5672, 0.2712", "617.073, 527.016, 64.5336, 0.2684", "618.008, 526.357, 64.5002, 0.2626", "618.943, 525.699, 64.4686, 0.2542", "619.88, 525.04, 64.4398, 0.2288", "620.815, 524.381, 64.3832, 0.2288" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "546.857, 634.278, 24.1606, 0.3488", "546.807, 635.093, 24.07, 0.3908", "546.96, 635.958, 23.8038, 0.3658", "547.391, 636.737, 23.4059, 0.361", "548.117, 637.588, 22.9911, 0.3782", "548.773, 638.524, 22.6184, 0.5126", "549.192, 639.552, 22.2591, 0.4936", "549.44, 640.646, 21.9259, 0.3876", "549.427, 641.747, 21.6162, 0.3052", "549.189, 642.855, 21.3285, 0.2844", "548.974, 643.962, 21.1263, 0.2926", "548.742, 645.063, 21.0242, 0.309", "548.231, 646.085, 20.9252, 0.3334", "547.721, 647.109, 20.8134, 0.4086", "547.517, 648.18, 20.5535, 0.4012", "547.362, 649.259, 20.237, 0.4152", "547.809, 650.243, 19.8442, 0.535", "548.414, 651.157, 19.4078, 0.5298", "549.167, 652.006, 19.0319, 0.4802", "549.638, 652.782, 18.5423, 0.353", "549.924, 653.779, 18.1098, 0.2882", "549.516, 654.812, 17.8235, 0.2542", "548.969, 655.815, 17.6722, 0.2288", "548.638, 656.719, 18.0849, 0.2288" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "546.857, 634.278, 24.1606, 0.3488", "547.278, 633.821, 27.1894, 0.2288", "547.979, 633.987, 28.9215, 0.2752", "548.604, 634.923, 29.5613, 0.2758", "549.046, 635.908, 30.2148, 0.2768", "548.729, 636.755, 31.0304, 0.2796", "548.864, 637.691, 31.8704, 0.2796", "548.468, 638.709, 32.6304, 0.305", "548.181, 639.774, 33.9091, 0.2288" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "540.392, 551.52, 33.0114, 0.3338", "539.878, 551.513, 33.7652, 0.6864", "538.81, 551.468, 34.6777, 0.4528", "537.726, 551.266, 35.0619, 0.3416", "536.604, 551.092, 35.4217, 0.3056", "535.461, 551.101, 35.7686, 0.3266", "534.508, 550.724, 36.1696, 0.3976", "533.718, 549.975, 36.6551, 0.3734", "532.971, 549.166, 37.1524, 0.3988", "532.236, 548.358, 37.648, 0.3338", "531.262, 548.182, 38.2466, 0.3", "530.153, 548.185, 38.7055, 0.2746", "529.057, 548.367, 39.0566, 0.2746", "527.938, 548.442, 39.4279, 0.2746", "526.823, 548.399, 39.8227, 0.2746", "525.716, 548.183, 40.2329, 0.2746", "524.622, 547.918, 40.6526, 0.2746", "523.562, 547.53, 41.0906, 0.2746", "522.609, 547.007, 41.5433, 0.2744", "521.891, 546.196, 42.0274, 0.2744", "521.091, 545.411, 42.4446, 0.2742", "520.244, 544.642, 42.7571, 0.274", "519.353, 543.926, 42.9848, 0.2736", "518.439, 543.239, 43.1455, 0.2728", "517.455, 542.726, 43.3042, 0.2712", "516.434, 542.312, 43.4983, 0.2684", "515.372, 542.183, 43.7472, 0.2626", "514.461, 541.645, 43.7892, 0.2542", "513.685, 540.874, 43.8141, 0.2288", "513.375, 540.396, 42.9517, 0.2288" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "540.392, 551.52, 33.0114, 0.3338", "539.767, 551.816, 33.1226, 0.3", "538.948, 552.534, 33.1836, 0.2746", "538.06, 553.102, 33.2153, 0.2746", "537.138, 553.27, 33.3995, 0.2748", "536.028, 553.27, 33.5258, 0.275", "534.939, 553.595, 33.6101, 0.2754", "533.844, 553.347, 33.6176, 0.276", "532.713, 553.463, 33.5798, 0.2772", "531.625, 553.815, 33.5163, 0.2794", "530.672, 554.045, 33.6143, 0.2836" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "539.013, 511.621, 27.5806, 0.4526", "538.568, 511.534, 27.1387, 0.2288", "537.577, 511.061, 26.7956, 0.2912", "536.628, 510.512, 26.6062, 0.3068", "535.575, 510.15, 26.3364, 0.3286", "534.456, 509.93, 26.0761, 0.4016", "533.331, 509.854, 25.7852, 0.3808", "532.284, 509.73, 25.3842, 0.4126", "531.205, 509.526, 24.9864, 0.3588", "530.12, 509.611, 24.7456, 0.3484", "529.012, 509.817, 24.5659, 0.354", "527.874, 509.853, 24.3699, 0.4728", "526.755, 509.678, 24.1747, 0.3942", "525.827, 509.303, 23.7773, 0.327", "524.955, 509.308, 23.1038, 0.2776", "524.03, 509.598, 22.2683, 0.2804", "523.214, 509.445, 21.3051, 0.2852", "522.223, 509.021, 20.4636, 0.2944", "521.263, 508.69, 19.9993, 0.3112", "520.544, 507.864, 19.7421, 0.343", "520.044, 506.839, 19.5472, 0.3994", "520.177, 505.742, 19.2963, 0.5168", "519.948, 504.837, 18.831, 0.6712", "519.116, 504.498, 18.1726, 0.5788", "518.18, 504.757, 17.4199, 0.414" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "539.013, 511.621, 27.5806, 0.4526", "539.06, 511.093, 27.5671, 0.3972", "539.133, 510.02, 27.4551, 0.3646", "539.19, 508.951, 27.116, 0.4222", "539.314, 507.977, 26.5181, 0.4138", "538.768, 507.091, 25.796, 0.4994", "538.119, 506.171, 25.0542, 0.3962" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "598.478, 517.358, 20.5638, 0.4002", "599.648, 516.692, 19.7714, 0.3364", "600.692, 516.246, 19.2425, 0.3048", "601.802, 515.981, 18.9296, 0.2836", "602.838, 515.557, 18.8026, 0.291", "603.719, 514.893, 18.8534, 0.3064", "604.602, 514.199, 18.9141, 0.328", "605.708, 513.96, 18.8519, 0.4002", "606.784, 513.738, 18.6193, 0.3782", "607.922, 513.825, 18.3429, 0.4078", "608.971, 514.214, 17.9879, 0.3504", "609.987, 513.757, 17.5944, 0.3318", "611.109, 513.55, 17.2493, 0.328", "612.214, 513.589, 16.8827, 0.4002", "613.181, 513.796, 16.5911, 0.3784", "614.296, 514.035, 16.3532, 0.408", "615.411, 514.273, 16.1692, 0.3506", "616.539, 514.119, 16.0602, 0.332", "617.667, 513.932, 16.0132, 0.3286", "618.778, 513.67, 16.0192, 0.4", "619.87, 513.328, 16.0548, 0.384", "620.958, 513.027, 16.1414, 0.3896", "622.028, 512.777, 16.3279, 0.4558", "623.104, 512.41, 16.4977, 0.5378", "623.927, 511.695, 16.6103, 0.4302", "624.664, 510.835, 16.6658, 0.3466", "625.632, 510.224, 16.6608, 0.315", "626.62, 509.677, 16.5932, 0.3442", "627.728, 509.461, 16.4363, 0.4298", "628.836, 509.247, 16.2414, 0.4352", "629.964, 509.073, 16.0799, 0.504", "631.093, 508.899, 15.9561, 0.5748", "632.219, 508.801, 15.8355, 0.5242", "632.862, 508.383, 15.9994, 0.397", "632.934, 507.251, 16.1815, 0.3238", "633.227, 506.198, 16.3055, 0.3136", "634.268, 505.728, 16.358, 0.3724", "635.156, 505.112, 16.2473, 0.332", "636.051, 504.622, 16.0331, 0.2966", "637.168, 504.376, 15.7833, 0.2684", "638.275, 504.186, 15.5135, 0.2626", "639.367, 504.098, 15.1849, 0.2542", "640.481, 503.947, 14.9256, 0.2288", "641.606, 503.759, 14.6941, 0.2288" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "598.478, 517.358, 20.5638, 0.4002", "597.864, 517.143, 18.3543, 0.2288", "597.216, 516.486, 18.0224, 0.2748", "597.448, 515.38, 17.9004, 0.275", "597.838, 514.313, 17.7632, 0.2752", "598.58, 513.448, 17.6107, 0.2758", "599.32, 512.582, 17.4557, 0.2768", "600.062, 511.717, 17.3121, 0.2788", "600.804, 510.85, 17.2038, 0.2824", "601.543, 509.979, 17.1601, 0.2882", "602.283, 509.108, 17.1683, 0.305", "603.023, 508.237, 17.2136, 0.305", "603.763, 507.366, 17.3816, 0.4576" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "594.617, 550.492, 42.2724, 0.3146", "595.195, 551.329, 42.1831, 0.2288", "595.792, 552.144, 41.9168, 0.2782", "596.689, 552.725, 41.6889, 0.2814", "597.82, 552.791, 41.5458, 0.287", "598.781, 553.172, 41.617, 0.2988", "599.771, 553.699, 41.7855, 0.3142", "600.817, 554.162, 42.0104, 0.3736", "601.867, 554.575, 42.296, 0.3342", "602.919, 554.969, 42.614, 0.3006", "603.846, 555.619, 42.8865, 0.2756", "604.932, 555.956, 43.1066, 0.2766", "606.068, 555.83, 43.3034, 0.2782", "607.093, 555.509, 43.6008, 0.2814", "608.224, 555.509, 43.8906, 0.2872", "609.369, 555.509, 44.1297, 0.299", "610.474, 555.509, 44.4301, 0.3148", "611.5, 555.967, 44.7104, 0.3746", "612.349, 556.621, 44.8582, 0.3362", "613.349, 556.987, 45.0632, 0.304", "614.44, 557.3, 45.2628, 0.2822", "615.542, 557.098, 45.4451, 0.2886", "616.656, 556.99, 45.6173, 0.3016", "617.638, 557.378, 45.88, 0.3194", "618.581, 557.972, 46.2148, 0.3834", "619.581, 558.431, 46.5304, 0.352", "620.706, 558.589, 46.874, 0.3348", "621.812, 558.81, 47.2324, 0.3336", "622.851, 559.286, 47.5448, 0.4104", "623.854, 559.798, 47.8803, 0.3982", "624.804, 560.368, 48.3308, 0.4396", "625.596, 560.712, 49.0244, 0.4348", "626.469, 561.193, 49.8232, 0.3632", "627.562, 561.456, 50.5456, 0.3074", "628.658, 561.705, 51.1686, 0.2882", "629.513, 562.448, 51.718, 0.2994", "630.44, 562.793, 52.3558, 0.3228", "631.343, 562.523, 53.1014, 0.3536", "632.289, 562.823, 53.823, 0.4722", "633.208, 563.419, 54.5101, 0.3932", "634.164, 563.973, 55.1197, 0.3254", "635.206, 564.118, 55.6699, 0.2746", "636.254, 563.789, 56.1324, 0.2746", "637.326, 563.815, 56.3822, 0.2746", "638.439, 563.879, 56.677, 0.2746", "639.51, 563.799, 57.0489, 0.2746", "640.63, 563.752, 57.3944, 0.2746", "641.737, 563.545, 57.6859, 0.2746", "642.672, 562.926, 57.9494, 0.2746", "643.503, 562.144, 58.2142, 0.2746", "644.395, 561.448, 58.5144, 0.2746", "645.328, 560.982, 58.9008, 0.2746", "646.291, 560.623, 59.3944, 0.2746", "647.013, 559.759, 59.8606, 0.2746", "647.661, 558.817, 60.282, 0.2746", "647.917, 558.56, 60.6626, 0.2746", "648.486, 557.686, 61.136, 0.2746", "649.065, 557.323, 61.8346, 0.2746", "649.948, 557.01, 62.526, 0.2746", "650.926, 556.429, 63.0459, 0.2746", "651.961, 555.95, 63.359, 0.2746", "652.867, 555.3, 63.4502, 0.2746", "653.301, 554.465, 63.1672, 0.2744", "654.195, 553.869, 62.7388, 0.2744", "655.203, 553.5, 62.3935, 0.2742", "655.828, 552.633, 62.1309, 0.274", "656.69, 552.316, 61.6857, 0.2736", "657.736, 552.26, 61.1652, 0.2728", "658.562, 551.884, 60.5875, 0.2712", "659.651, 551.586, 60.0928, 0.2684", "660.755, 551.449, 59.6982, 0.2626", "661.883, 551.638, 59.458, 0.2542", "663.012, 551.826, 59.3659, 0.2288", "664.044, 551.845, 59.9063, 0.2288" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "594.617, 550.492, 42.2724, 0.3146", "595.705, 550.608, 44.3061, 0.3746", "596.78, 550.614, 45.2138, 0.3358", "597.921, 550.659, 45.5546, 0.3036", "599.036, 550.905, 45.9043, 0.2814", "600.148, 551.06, 46.3268, 0.2872", "601.201, 551.04, 46.8866, 0.299", "602.31, 550.932, 47.4639, 0.3148", "603.419, 550.723, 47.9886, 0.3746", "604.448, 551.068, 48.5722, 0.336", "605.294, 551.767, 49.1711, 0.304", "605.874, 552.739, 49.7182, 0.2818", "606.424, 553.721, 50.1696, 0.2882", "607.344, 554.365, 50.5971, 0.2994", "608.091, 555.034, 51.1846, 0.3228", "609.023, 555.649, 51.7516, 0.3536", "609.992, 556.251, 52.2852, 0.4722", "610.747, 557.065, 52.8615, 0.3932", "611.491, 557.87, 53.4862, 0.3254", "612.346, 558.421, 54.2094, 0.2746", "613.284, 558.905, 54.9433, 0.2746", "614.318, 559.312, 55.641, 0.2746", "615.344, 559.781, 56.2394, 0.2746", "616.369, 560.292, 56.7087, 0.2746", "617.379, 560.798, 57.1253, 0.2746", "618.377, 561.298, 57.5509, 0.2746", "619.396, 561.752, 57.9992, 0.2746", "620.424, 562.186, 58.4741, 0.2746", "621.192, 562.982, 58.9476, 0.2746", "621.888, 563.874, 59.4051, 0.2746", "622.534, 564.773, 59.8461, 0.2746", "623.471, 565.375, 60.2857, 0.2746", "624.232, 566.188, 60.6645, 0.2746", "624.901, 567.116, 60.9686, 0.2746", "625.564, 568.049, 61.217, 0.2746", "626.221, 568.986, 61.4267, 0.2746", "626.773, 569.963, 61.6736, 0.2746", "627.273, 570.96, 61.978, 0.2746", "627.882, 571.893, 62.3241, 0.2746", "628.521, 572.803, 62.6853, 0.2746", "629.159, 573.674, 63.0336, 0.2746", "629.492, 574.722, 63.3002, 0.2746", "629.646, 575.735, 63.2999, 0.2746", "629.393, 576.716, 63.1364, 0.2746", "629.393, 577.858, 63.0042, 0.2746", "629.195, 578.956, 62.9322, 0.2746", "628.781, 580.017, 62.9468, 0.2746", "628.422, 581.062, 63.1378, 0.2746", "628.625, 582.057, 63.5533, 0.2746", "629.348, 582.908, 64.0721, 0.2746", "630.24, 583.486, 64.4857, 0.2746", "630.614, 584.542, 64.9678, 0.2746", "630.728, 585.524, 65.613, 0.2746", "631.557, 586.228, 66.2861, 0.2746", "631.904, 586.713, 67.2456, 0.2746", "632.325, 587.649, 68.1873, 0.2746", "632.362, 588.791, 68.9744, 0.2746", "633.164, 589.373, 69.7749, 0.2746", "634.02, 589.917, 70.562, 0.2746", "634.895, 590.506, 71.2564, 0.2746", "635.81, 591.193, 71.7206, 0.2744", "636.749, 591.843, 72.0328, 0.2744", "637.741, 592.414, 72.2268, 0.2742", "638.765, 592.901, 72.3153, 0.274", "639.879, 593.163, 72.3397, 0.2736", "640.992, 593.424, 72.3397, 0.2728", "642.128, 593.553, 72.3397, 0.2712", "643.267, 593.673, 72.3397, 0.2684", "644.388, 593.869, 72.3397, 0.2626", "645.44, 594.293, 72.3397, 0.2542", "646.099, 595.143, 72.3397, 0.2288", "646.557, 596.189, 72.3397, 0.2288" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "605.477, 511.137, 40.8388, 0.2746", "606.265, 510.797, 40.9133, 0.2746", "607.315, 510.343, 41.0024, 0.2746", "608.344, 509.882, 41.1606, 0.2746", "609.359, 509.416, 41.3963, 0.2746", "610.432, 509.046, 41.6192, 0.2746", "611.523, 508.704, 41.7998, 0.2746", "612.547, 508.245, 41.9824, 0.2746", "613.508, 507.68, 42.1921, 0.2746", "614.401, 506.985, 42.3343, 0.2746", "615.273, 506.243, 42.3881, 0.2746", "616.195, 505.608, 42.3114, 0.2746", "617.135, 505.01, 42.1246, 0.2746", "618.005, 504.289, 41.904, 0.2746", "618.815, 503.545, 41.6674, 0.2748", "619.732, 503.214, 41.3678, 0.2748", "620.562, 502.521, 41.2919, 0.2752", "621.043, 502.238, 41.6962, 0.2758", "621.838, 501.54, 42.1652, 0.2766", "622.734, 500.839, 42.5743, 0.2786", "623.672, 500.284, 43.0125, 0.2818", "624.76, 500.317, 43.402, 0.2882", "625.846, 499.956, 43.6414, 0.2994", "626.789, 499.637, 43.5809, 0.323", "627.872, 499.374, 43.5761, 0.3536", "628.977, 499.105, 43.6388, 0.4724", "630.096, 498.865, 43.7242, 0.3932", "631.146, 498.476, 43.8774, 0.3254", "632.096, 497.865, 44.1339, 0.2748", "633.01, 497.232, 44.4906, 0.2748", "633.911, 496.592, 44.8913, 0.2752", "634.893, 496.184, 45.3418, 0.2756", "635.93, 495.717, 45.6873, 0.2766", "636.776, 495.052, 45.834, 0.2782", "637.672, 494.387, 45.8889, 0.2814", "638.664, 493.851, 45.9519, 0.287", "639.697, 493.638, 46.1278, 0.2988", "640.825, 493.455, 46.3145, 0.3142", "641.867, 493.071, 46.5682, 0.3734", "642.848, 492.539, 46.8922, 0.3338", "643.706, 491.806, 47.1685, 0.3", "644.529, 491.009, 47.3656, 0.2746", "645.411, 490.302, 47.5476, 0.2746", "646.307, 489.629, 47.719, 0.2746", "647.198, 489.005, 47.728, 0.2746", "648.192, 488.646, 47.6826, 0.2748", "649.289, 488.469, 47.7053, 0.2748", "650.253, 487.866, 47.8486, 0.2752", "651.08, 487.323, 48.26, 0.2756", "651.866, 487.273, 49.0224, 0.2766", "652.776, 487.444, 49.9475, 0.2782", "653.81, 487.432, 50.8824, 0.2814", "654.664, 486.86, 51.7922, 0.287", "655.779, 486.671, 52.5207, 0.2988", "656.905, 486.48, 53.0491, 0.3142", "658.023, 486.279, 53.4495, 0.3734", "659.125, 486.059, 53.8241, 0.3338", "660.237, 485.899, 54.171, 0.3", "661.372, 485.899, 54.4793, 0.2746", "662.413, 485.728, 54.8699, 0.2746", "662.711, 484.658, 55.1883, 0.2746", "663.26, 483.687, 55.4364, 0.2746", "664.224, 483.072, 55.6262, 0.2746", "665.226, 482.674, 55.8995, 0.2746", "666.195, 482.117, 56.1408, 0.2746", "667.143, 481.478, 56.3326, 0.2746", "668.111, 480.89, 56.4469, 0.2746", "669.033, 480.3, 56.5449, 0.2746", "670.044, 479.945, 56.7274, 0.2746", "671.169, 480.098, 56.8999, 0.2746", "671.734, 479.09, 57.5361, 0.2746", "672.552, 478.5, 57.9737, 0.2746", "673.643, 478.161, 58.305, 0.2746", "674.744, 477.846, 58.5346, 0.2746", "675.859, 477.594, 58.683, 0.2746", "676.909, 477.141, 58.7588, 0.2746", "677.96, 476.688, 58.7762, 0.2746", "678.874, 476.008, 58.7762, 0.2746", "679.767, 475.293, 58.7762, 0.2746", "680.797, 474.806, 58.7765, 0.2746", "681.846, 474.352, 58.7768, 0.2746", "682.866, 473.835, 58.777, 0.2746", "683.874, 473.293, 58.7773, 0.2746", "684.956, 472.956, 58.7779, 0.2746", "686.076, 472.72, 58.7787, 0.2746", "687.133, 472.345, 58.7798, 0.2746", "688.049, 471.659, 58.7815, 0.2746", "688.997, 471.026, 58.7838, 0.2746", "690.02, 470.513, 58.7868, 0.2746", "690.932, 469.892, 58.7913, 0.2746", "691.53, 468.928, 58.7972, 0.2746", "692.479, 468.465, 58.8059, 0.2746", "693.622, 468.434, 58.8176, 0.2746", "694.767, 468.434, 58.8344, 0.2746", "695.911, 468.434, 58.8577, 0.2746", "697.038, 468.368, 58.8904, 0.2746", "697.802, 467.657, 58.9352, 0.2746", "697.857, 466.515, 58.9977, 0.2744", "698.091, 465.424, 59.0901, 0.2744", "699.216, 465.229, 59.2194, 0.2742", "700.361, 465.229, 59.3874, 0.274", "701.505, 465.229, 59.5913, 0.2736", "701.518, 465.005, 59.9511, 0.2728", "701.555, 464.399, 60.6304, 0.2712", "702.455, 463.774, 61.1918, 0.2684", "703.543, 463.435, 61.6154, 0.2626", "704.681, 463.336, 61.9108, 0.2542", "705.648, 462.739, 62.0894, 0.2288", "706.542, 462.024, 62.167, 0.2288" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "605.477, 511.137, 40.8388, 0.2746", "605.669, 509.841, 40.691, 0.2288", "605.851, 508.714, 41.0774, 0.2746", "606.383, 507.733, 41.2843, 0.2746", "606.94, 506.762, 41.55, 0.2746", "607.516, 505.78, 41.7813, 0.2746", "607.961, 504.726, 41.9807, 0.2746", "608.614, 503.887, 42.2268, 0.2746", "609.655, 503.615, 42.502, 0.2746", "610.599, 502.979, 42.6994, 0.2746", "611.437, 502.201, 42.8414, 0.2746", "611.812, 501.21, 42.9467, 0.2746", "611.866, 500.068, 43.0226, 0.2746", "612.366, 499.092, 43.0744, 0.2746", "613.081, 498.198, 43.1169, 0.2746", "613.719, 497.253, 43.1827, 0.2748", "614.322, 496.284, 43.2757, 0.275", "615.146, 495.615, 43.4714, 0.2752", "615.703, 494.628, 43.6013, 0.2758", "615.958, 493.583, 43.5856, 0.2768", "616.01, 492.467, 43.5728, 0.2786", "616.487, 491.571, 43.6722, 0.2822", "617.526, 491.356, 43.647, 0.2888", "617.797, 490.34, 43.7394, 0.3008", "617.841, 489.197, 43.818, 0.3238", "618.577, 488.334, 43.8824, 0.3626", "619.299, 487.448, 43.9172, 0.4528", "619.888, 486.494, 43.8659, 0.5322", "620.421, 485.514, 43.7461, 0.4196", "620.757, 484.45, 43.7206, 0.3274", "621.065, 483.372, 43.8052, 0.2782", "621.589, 482.362, 43.8998, 0.2814", "622.138, 481.36, 43.9838, 0.2872", "622.539, 480.304, 44.098, 0.299", "622.911, 479.239, 44.2215, 0.3144", "623.51, 478.404, 44.1288, 0.374", "623.536, 477.321, 43.9701, 0.335", "623.08, 476.326, 43.7002, 0.3022", "622.598, 475.323, 43.4616, 0.2786", "622.372, 474.267, 43.3558, 0.2822", "622.372, 473.145, 43.2502, 0.2888", "622.307, 472.042, 43.0685, 0.3006", "621.966, 471.094, 42.7717, 0.3236", "622.018, 469.957, 42.511, 0.3624", "622.051, 468.828, 42.2985, 0.4526", "621.963, 467.736, 42.2573, 0.5316", "621.913, 466.62, 42.3035, 0.4186", "621.913, 465.476, 42.3382, 0.3254", "621.913, 464.332, 42.3391, 0.2746", "622.172, 463.259, 42.2164, 0.2746", "622.58, 462.226, 41.9588, 0.2746", "623.101, 461.238, 41.6186, 0.2746", "623.659, 460.264, 41.2518, 0.2746", "624.065, 459.213, 40.9466, 0.2746", "624.661, 458.378, 40.5994, 0.2746", "624.661, 457.366, 40.563, 0.2746", "624.661, 456.246, 40.5647, 0.2746", "625.034, 455.243, 40.542, 0.2746", "625.698, 454.334, 40.5191, 0.2746", "626.326, 453.379, 40.476, 0.2746", "626.747, 452.317, 40.4034, 0.2746", "627.143, 451.244, 40.2772, 0.2746", "627.302, 450.134, 40.0826, 0.2748", "627.37, 449.01, 39.8182, 0.275", "627.572, 447.918, 39.4954, 0.2754", "627.974, 446.875, 39.1308, 0.2762", "628.307, 445.796, 38.7909, 0.2776", "628.573, 444.684, 38.5249, 0.2802", "628.833, 443.572, 38.3214, 0.285", "629.065, 442.46, 38.1394, 0.2936", "629.343, 441.36, 37.9938, 0.3106", "629.753, 440.295, 37.9305, 0.3372", "630.281, 439.296, 37.9061, 0.4112", "630.997, 438.404, 37.8792, 0.4294", "631.513, 437.388, 37.8204, 0.353", "632.018, 436.379, 37.7664, 0.2882", "632.362, 435.354, 37.7698, 0.2542", "632.562, 434.265, 37.6572, 0.2288", "633.362, 433.69, 37.3002, 0.2288" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "546.385, 533.326, 17.4082, 0.3", "547.258, 532.709, 17.0159, 0.2748", "548.32, 532.317, 16.7422, 0.2748", "549.244, 532.114, 16.7458, 0.2752", "548.719, 531.621, 17.0642, 0.2756", "547.891, 530.972, 17.4016, 0.2766", "547.427, 530.174, 17.4717, 0.2782", "547.544, 529.331, 17.2289, 0.2814", "548.089, 528.423, 16.9041, 0.2868", "548.831, 527.59, 16.6923, 0.2984", "549.716, 526.889, 16.5731, 0.3136", "550.344, 525.97, 16.5571, 0.3724", "550.576, 524.909, 16.7152, 0.332", "550.278, 523.958, 17.0309, 0.2966", "550.245, 522.872, 17.2516, 0.2684", "550.453, 521.859, 17.1831, 0.2626", "550.336, 520.797, 16.9324, 0.2542", "550.065, 519.704, 16.6325, 0.2288", "550.034, 518.575, 16.24, 0.2288" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "546.385, 533.326, 17.4082, 0.3", "546.297, 533.516, 16.1647, 0.2288", "545.273, 533.044, 16.1505, 0.3122", "544.294, 533.331, 16.162, 0.3384", "543.354, 533.739, 16.1671, 0.4208", "542.77, 532.755, 16.1689, 0.4112", "542.182, 531.777, 16.1418, 0.4944", "541.784, 531.183, 16.1437, 0.387", "541.0, 530.35, 16.12, 0.3136", "539.875, 530.261, 16.1419, 0.2542", "538.822, 529.992, 16.1712, 0.2288", "537.96, 529.256, 16.0591, 0.2288" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "509.832, 575.553, 26.3147, 0.3022", "509.232, 576.328, 26.2654, 0.4576", "508.589, 577.216, 25.5831, 0.3632", "508.153, 578.147, 25.202, 0.3074", "508.402, 579.237, 24.9697, 0.2882", "508.743, 580.323, 24.7622, 0.3008", "509.232, 581.334, 24.6811, 0.318", "509.661, 582.391, 24.5916, 0.3806", "509.876, 583.509, 24.4954, 0.347", "510.284, 584.558, 24.4523, 0.3254", "510.973, 585.451, 24.3076, 0.3162", "511.725, 586.237, 24.0181, 0.3774", "512.038, 587.158, 23.5392, 0.3414", "512.034, 588.293, 23.1377, 0.3138", "511.917, 589.373, 22.9458, 0.3", "511.398, 590.38, 22.7506, 0.3226", "511.444, 591.521, 22.598, 0.3592", "511.433, 592.639, 22.4202, 0.4526", "510.963, 593.657, 22.2153, 0.502", "510.303, 594.592, 22.0354, 0.5082", "509.653, 595.532, 21.8768, 0.4774", "508.889, 596.383, 21.7559, 0.3958", "508.188, 597.278, 21.6576, 0.3636", "507.846, 598.365, 21.561, 0.4128", "507.413, 599.353, 21.4247, 0.4326", "506.848, 600.252, 21.3056, 0.359", "506.661, 601.341, 21.1307, 0.2994", "507.047, 602.377, 20.9624, 0.2736", "507.707, 603.213, 20.9404, 0.2728", "507.719, 604.276, 20.8155, 0.2712", "508.258, 605.233, 20.652, 0.2684", "508.999, 606.103, 20.5033, 0.2626", "509.388, 607.081, 20.2777, 0.2542", "509.893, 608.089, 20.1013, 0.2288", "510.17, 609.091, 20.3456, 0.2288" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "509.832, 575.553, 26.3147, 0.3022", "508.714, 575.585, 26.4798, 0.3204", "507.697, 575.113, 26.5227, 0.3852", "506.746, 575.002, 26.501, 0.3556", "505.743, 575.259, 26.5079, 0.3414", "504.723, 574.786, 26.4137, 0.347", "503.346, 574.647, 26.4237, 0.4292", "502.259, 574.304, 26.4013, 0.4626", "501.17, 574.003, 26.2665, 0.4156", "500.122, 574.062, 25.9276, 0.3998", "499.084, 574.448, 25.4926, 0.4818", "498.034, 574.883, 25.058, 0.551", "496.974, 575.187, 24.5618, 0.624", "495.836, 575.256, 24.1466, 0.5692", "494.721, 575.027, 23.8008, 0.4774", "493.613, 575.035, 23.4412, 0.4868", "492.474, 575.04, 23.1292, 0.5478", "491.354, 575.083, 22.8763, 0.4496", "490.393, 575.682, 22.6399, 0.3774", "489.456, 576.203, 22.3564, 0.3976", "488.312, 576.22, 22.1414, 0.3734", "487.173, 576.148, 21.9932, 0.3988", "486.055, 575.909, 21.8882, 0.3338", "484.978, 575.57, 21.8226, 0.3", "484.197, 574.784, 21.8053, 0.2746", "483.57, 573.912, 21.7997, 0.2746", "482.933, 574.095, 21.6325, 0.2746", "482.503, 574.904, 21.5741, 0.2748", "481.72, 575.398, 21.7569, 0.2748", "480.668, 575.702, 21.9555, 0.2752", "479.542, 575.871, 22.0996, 0.2756", "478.627, 576.433, 22.0763, 0.2766", "477.743, 577.09, 21.8632, 0.2782", "476.759, 577.649, 21.5454, 0.2814", "475.802, 578.256, 21.1369, 0.287", "474.874, 578.704, 20.5826, 0.2988", "474.004, 579.359, 20.0073, 0.3142", "473.297, 580.209, 19.4514, 0.3734", "472.697, 581.175, 18.9908, 0.3338", "472.017, 582.09, 18.6525, 0.3", "471.233, 582.905, 18.3291, 0.2746", "470.23, 583.448, 18.0564, 0.2746", "469.249, 584.005, 17.7431, 0.2746", "468.284, 584.562, 17.3666, 0.2746", "467.19, 584.886, 17.0, 0.2746", "466.514, 584.855, 16.5521, 0.2746", "465.471, 584.818, 16.0339, 0.2746", "464.358, 584.839, 15.598, 0.2746", "463.454, 585.201, 15.3932, 0.2744", "462.374, 585.276, 15.2243, 0.2744", "461.241, 585.241, 15.0625, 0.2742", "460.112, 585.067, 14.935, 0.274", "458.983, 584.894, 14.8206, 0.2736", "457.845, 584.818, 14.7152, 0.2728", "456.703, 584.775, 14.6012, 0.2712", "456.132, 583.915, 14.4998, 0.2684", "456.104, 582.773, 14.4066, 0.2626", "455.719, 581.706, 14.3148, 0.2542", "455.072, 580.768, 14.2193, 0.2288", "454.298, 580.239, 13.5638, 0.2288" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "569.393, 562.363, 35.5449, 0.4238", "569.622, 562.843, 35.8999, 0.3824", "569.817, 563.899, 36.2062, 0.3792", "569.999, 564.99, 36.461, 0.4728", "570.445, 566.036, 36.7886, 0.394", "570.838, 566.977, 37.3274, 0.3268", "570.695, 567.747, 38.1338, 0.2772", "570.107, 568.39, 39.121, 0.2794", "569.466, 569.175, 40.1324, 0.2838", "569.089, 570.213, 41.0105, 0.2912", "568.753, 571.284, 41.6312, 0.3068", "568.781, 572.357, 42.1378, 0.3288", "569.096, 573.326, 42.688, 0.4016", "569.159, 574.375, 43.253, 0.3808", "568.854, 575.445, 43.6946, 0.4124", "568.448, 576.507, 44.0474, 0.36", "568.216, 577.586, 44.4679, 0.3432", "567.643, 578.536, 44.9025, 0.3802", "566.68, 579.004, 45.4014, 0.3464", "565.731, 579.53, 45.9841, 0.3242", "565.432, 580.524, 46.653, 0.3144", "564.713, 581.343, 47.3278, 0.374", "563.794, 581.977, 47.969, 0.3348", "563.292, 582.989, 48.5103, 0.3016", "563.072, 584.099, 49.0073, 0.2776", "562.489, 585.061, 49.4883, 0.2802", "562.043, 585.98, 50.0752, 0.285", "561.403, 586.481, 50.5635, 0.2938", "560.455, 587.077, 50.9832, 0.3112", "560.281, 588.009, 51.4945, 0.3382", "561.031, 588.761, 52.0299, 0.413", "562.044, 589.195, 52.5445, 0.4328", "562.521, 590.025, 53.079, 0.3594", "561.966, 590.994, 53.5464, 0.3", "561.236, 591.867, 53.9098, 0.2746", "560.616, 592.749, 54.1901, 0.2746", "559.487, 592.749, 54.4849, 0.2746", "558.344, 592.749, 54.745, 0.2746", "557.247, 592.935, 55.0234, 0.2746", "556.244, 593.444, 55.344, 0.2746", "555.289, 593.968, 55.7449, 0.2746", "554.236, 594.295, 56.1711, 0.2746", "553.221, 594.748, 56.5928, 0.2746", "552.478, 595.409, 57.1052, 0.2746", "551.576, 595.751, 57.6481, 0.2746", "550.828, 596.492, 58.0434, 0.2746", "549.872, 597.059, 58.3607, 0.2746", "548.786, 597.404, 58.6242, 0.2746", "547.661, 597.555, 58.868, 0.2746" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "569.393, 562.363, 35.5449, 0.4238", "569.82, 562.317, 35.4178, 0.2288", "570.953, 562.196, 35.0414, 0.2814", "572.086, 562.075, 34.8888, 0.287", "573.172, 561.774, 34.6816, 0.2988", "574.255, 561.471, 34.445, 0.3142", "575.378, 561.669, 34.274, 0.3734", "576.503, 561.881, 34.172, 0.3338", "577.63, 562.067, 34.1354, 0.3", "578.763, 562.231, 34.1494, 0.2746", "579.888, 562.416, 34.202, 0.2746", "580.935, 562.731, 34.3608, 0.2746", "581.965, 562.837, 34.6371, 0.2746", "583.057, 562.837, 34.7964, 0.2746", "584.171, 562.837, 34.7945, 0.2746", "585.172, 562.837, 34.566, 0.2746", "586.062, 563.223, 34.4123, 0.2746", "587.016, 563.571, 34.4182, 0.2746", "588.018, 564.007, 34.3196, 0.2746", "589.051, 564.211, 34.1289, 0.2748", "590.044, 564.426, 34.0973, 0.275", "591.028, 564.802, 34.2504, 0.2754", "592.102, 565.076, 34.2656, 0.276", "593.174, 565.419, 34.2023, 0.2772", "594.297, 565.626, 34.1774, 0.2792", "595.431, 565.77, 34.1748, 0.2834", "596.551, 565.968, 34.1692, 0.2908", "597.642, 566.258, 34.2311, 0.3046", "598.739, 566.516, 34.3742, 0.331", "599.823, 566.836, 34.5089, 0.376", "600.896, 567.226, 34.5635, 0.4774", "601.942, 567.677, 34.5699, 0.5788", "602.942, 568.225, 34.5688, 0.5016", "603.904, 568.806, 34.4602, 0.5004", "604.859, 569.395, 34.2527, 0.4966", "605.826, 570.006, 34.0536, 0.4978", "606.792, 570.617, 33.8688, 0.4584", "607.903, 570.887, 33.6955, 0.3596", "609.015, 571.153, 33.5317, 0.3006", "609.898, 571.685, 33.2606, 0.2758", "610.974, 571.915, 33.0176, 0.2768", "611.831, 571.24, 32.8594, 0.2786", "612.395, 570.401, 32.6936, 0.2822", "613.142, 569.572, 32.4965, 0.2886", "614.112, 569.247, 32.1846, 0.3016", "615.156, 569.615, 31.9116, 0.3192", "616.104, 570.24, 31.6756, 0.383", "617.096, 570.765, 31.4093, 0.3514", "618.06, 571.343, 31.173, 0.3336", "618.958, 572.05, 31.0388, 0.3314", "619.942, 572.579, 30.998, 0.4066", "621.038, 572.871, 31.0274, 0.39", "622.106, 573.223, 31.057, 0.4292", "623.12, 573.688, 30.9924, 0.3924", "624.088, 574.262, 30.8927, 0.3978", "625.003, 574.948, 30.8115, 0.508", "625.848, 575.708, 30.7726, 0.454", "626.619, 576.546, 30.7919, 0.4646", "627.682, 576.952, 30.8042, 0.4046", "628.755, 577.343, 30.8143, 0.4514", "629.602, 578.055, 30.9184, 0.4578", "630.427, 578.8, 31.071, 0.4004", "631.322, 579.464, 31.0912, 0.4018", "632.253, 580.076, 31.078, 0.3396", "633.245, 580.599, 31.1525, 0.3104", "634.242, 581.138, 31.2424, 0.2938", "635.245, 581.688, 31.2945, 0.3112", "636.166, 582.352, 31.3158, 0.3382", "636.966, 583.169, 31.3132, 0.413", "637.896, 583.823, 31.2558, 0.4328", "638.961, 583.902, 31.0349, 0.3594", "640.01, 584.272, 30.8288, 0.3002", "641.021, 584.809, 30.662, 0.2748", "642.047, 585.31, 30.5298, 0.275", "643.109, 585.736, 30.427, 0.2754", "644.167, 586.172, 30.3464, 0.2762", "645.198, 586.664, 30.2742, 0.2774", "646.241, 587.115, 30.1834, 0.2798", "647.369, 587.18, 30.0308, 0.2844", "648.497, 587.245, 29.8385, 0.2926", "649.599, 587.517, 29.6727, 0.3092", "650.69, 587.858, 29.5543, 0.3334", "651.763, 588.252, 29.4795, 0.4102", "652.872, 588.458, 29.4381, 0.398", "653.995, 588.344, 29.4171, 0.439", "655.033, 587.905, 29.4291, 0.434", "656.03, 587.513, 29.5285, 0.3616", "657.13, 587.224, 29.5532, 0.3042", "658.181, 587.092, 29.384, 0.2822", "658.924, 586.63, 29.0704, 0.289", "659.201, 585.577, 28.8134, 0.3008", "659.991, 584.906, 28.4682, 0.3254", "660.992, 584.851, 27.9295, 0.3582", "661.961, 585.284, 27.3806, 0.4808", "662.773, 585.965, 26.7993, 0.4088", "663.857, 586.159, 26.2984, 0.3554", "664.497, 585.398, 25.8388, 0.3248", "663.789, 584.664, 25.3933, 0.3942", "663.638, 583.652, 25.0109, 0.3672", "664.477, 583.059, 24.8736, 0.387", "665.614, 582.987, 24.8015, 0.3136", "666.403, 583.487, 24.6406, 0.2542", "667.252, 583.902, 24.8668, 0.2288" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "543.589, 574.787, 37.639, 0.3734", "543.422, 575.631, 37.8034, 0.2288", "543.203, 576.736, 38.1035, 0.2872", "543.143, 577.869, 38.2222, 0.299", "543.143, 579.013, 38.3141, 0.3148", "543.143, 580.157, 38.3788, 0.3746", "542.906, 581.271, 38.4446, 0.336", "542.653, 582.383, 38.4972, 0.3038", "542.43, 583.503, 38.4843, 0.2818", "542.206, 584.623, 38.4269, 0.2876", "541.789, 585.686, 38.3538, 0.2998", "541.174, 586.646, 38.2668, 0.316", "540.874, 587.733, 38.1646, 0.377", "541.039, 588.863, 38.0492, 0.3408", "541.318, 589.92, 37.8375, 0.3124", "541.609, 590.987, 37.5735, 0.2988", "541.718, 592.112, 37.3313, 0.3142", "541.14, 592.951, 37.1104, 0.3736", "540.273, 593.687, 36.8964, 0.334", "539.5, 594.427, 36.6092, 0.3004", "538.52, 594.847, 36.3432, 0.2752", "537.403, 594.815, 36.0268, 0.2756", "536.765, 595.261, 35.6367, 0.2766", "536.75, 596.341, 35.1218, 0.2784", "536.544, 597.333, 34.4484, 0.2818", "535.859, 598.092, 33.714, 0.2878", "534.805, 598.456, 33.0075, 0.3002", "533.82, 598.233, 32.312, 0.317", "533.055, 597.492, 31.5767, 0.3786", "532.138, 597.306, 30.7972, 0.3436", "531.057, 597.147, 30.0852, 0.318", "529.966, 596.815, 29.4851, 0.308", "528.885, 596.908, 28.9069, 0.3358", "527.893, 597.025, 28.2444, 0.3912", "526.898, 597.303, 27.5557, 0.4766", "525.844, 597.703, 26.9758, 0.7174", "524.82, 598.208, 26.5159, 0.765", "523.723, 598.516, 26.1574, 0.729", "522.612, 598.791, 25.8726, 0.579", "521.536, 599.061, 25.5571, 0.4774", "520.466, 599.339, 25.1937, 0.3474", "519.464, 599.89, 24.8795, 0.2796", "518.461, 600.441, 24.6083, 0.2288", "517.497, 600.847, 23.7364, 0.2288" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "543.589, 574.787, 37.639, 0.3734", "542.711, 575.276, 37.8958, 0.3338", "541.729, 575.592, 38.1298, 0.3", "540.711, 576.093, 38.344, 0.2746", "540.042, 576.991, 38.5372, 0.2746", "539.76, 578.095, 38.7128, 0.2746", "539.171, 578.981, 38.8906, 0.2746", "539.005, 580.093, 39.1306, 0.2746", "538.776, 581.188, 39.4184, 0.2746", "538.304, 582.227, 39.6852, 0.2746", "537.767, 583.203, 39.9389, 0.2746", "536.814, 583.774, 40.215, 0.2746", "535.745, 583.91, 40.5933, 0.2746", "534.727, 584.352, 41.0276, 0.2746", "533.75, 584.86, 41.4831, 0.2746", "532.992, 585.715, 41.8667, 0.2746", "532.159, 586.462, 42.2156, 0.2746", "531.51, 587.034, 42.7193, 0.2746", "530.589, 587.685, 43.104, 0.2746", "529.76, 588.381, 43.2813, 0.2746", "529.128, 589.568, 43.4538, 0.2746", "528.59, 590.575, 43.6296, 0.2746", "527.88, 591.456, 43.8396, 0.2746", "527.169, 592.335, 44.0756, 0.2746", "526.63, 593.33, 44.3545, 0.2746", "526.168, 594.35, 44.6594, 0.2746", "525.836, 595.377, 44.9599, 0.2746", "524.971, 596.088, 45.2696, 0.2746", "524.227, 596.858, 45.3782, 0.2746", "523.476, 597.644, 45.3849, 0.2746", "523.109, 598.62, 45.5524, 0.2746", "522.539, 599.598, 45.7498, 0.2746", "521.904, 600.522, 45.9558, 0.2746", "520.997, 601.214, 46.1051, 0.2746", "520.09, 601.908, 46.2367, 0.2746", "519.177, 602.599, 46.3641, 0.2746", "518.392, 603.418, 46.501, 0.2746", "517.669, 604.301, 46.683, 0.2746", "516.943, 605.153, 46.9599, 0.2746", "516.214, 605.994, 47.3239, 0.2748", "515.305, 606.648, 47.7246, 0.2748", "514.44, 607.352, 48.1314, 0.2752", "513.732, 608.229, 48.5136, 0.2756", "512.909, 608.974, 48.8034, 0.2766", "511.926, 609.54, 48.937, 0.2782", "510.993, 610.165, 49.0515, 0.2814", "510.081, 610.812, 49.1943, 0.287", "509.263, 611.578, 49.2313, 0.2988", "508.303, 612.053, 49.1448, 0.3142", "507.216, 611.985, 49.0868, 0.3734", "506.088, 611.841, 49.0745, 0.3338", "505.002, 612.188, 49.1011, 0.3", "503.921, 612.485, 49.2408, 0.2746", "502.842, 612.754, 49.511, 0.2746", "501.923, 612.869, 49.7725, 0.2746", "500.834, 613.169, 50.0528, 0.2746", "499.743, 613.163, 50.4025, 0.2746", "498.868, 612.459, 50.6878, 0.2746", "497.794, 612.069, 50.9102, 0.2746", "496.711, 611.699, 51.0888, 0.2746", "495.625, 611.364, 51.2697, 0.2746", "494.532, 611.116, 51.5082, 0.2746", "493.523, 610.721, 51.7728, 0.2746", "492.694, 609.969, 52.0052, 0.2746", "491.618, 609.631, 52.2175, 0.2744", "490.509, 609.548, 52.4698, 0.2744", "489.4, 609.513, 52.7526, 0.2742", "488.266, 609.369, 52.9799, 0.274", "487.135, 609.204, 53.1712, 0.2736", "485.999, 609.091, 53.342, 0.2728", "484.87, 609.06, 53.4761, 0.2712", "483.949, 608.667, 53.6057, 0.2684", "483.134, 608.173, 53.968, 0.2626", "482.035, 608.074, 54.39, 0.2542", "480.931, 607.887, 54.7848, 0.2288", "479.945, 608.174, 55.3851, 0.2288" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_32",
    "id" : "apic_32",
    "points3d" : [ "536.87, 518.055, 41.137, 0.7354", "535.695, 518.334, 40.0971, 0.2288", "534.755, 518.414, 38.689, 0.3748", "533.836, 518.028, 38.0593, 0.3366", "532.849, 517.531, 37.4791, 0.305", "531.753, 517.373, 36.9345, 0.284", "530.628, 517.175, 36.4876, 0.292", "529.505, 517.112, 36.1315, 0.3066", "528.385, 517.336, 35.8579, 0.3358", "527.267, 517.566, 35.623, 0.3786", "526.188, 517.916, 35.3693, 0.5132", "525.109, 518.258, 35.0986, 0.4948", "523.994, 518.126, 34.79, 0.3898", "522.885, 518.054, 34.4747, 0.3092", "521.872, 518.222, 34.3087, 0.2918", "521.166, 517.487, 34.1368, 0.3062", "520.333, 517.04, 33.8257, 0.3354", "519.202, 517.04, 33.6322, 0.3778", "518.07, 516.943, 33.4891, 0.5118", "517.159, 516.397, 33.4082, 0.492", "516.56, 515.528, 33.215, 0.3848", "515.807, 515.569, 32.8006, 0.3002", "514.734, 515.667, 32.2812, 0.2748", "513.655, 515.787, 31.8811, 0.275", "512.637, 516.224, 31.4236, 0.2754", "511.691, 516.429, 30.8087, 0.276", "511.493, 516.124, 29.9586, 0.2772", "510.858, 516.023, 29.0374, 0.2796", "509.876, 515.484, 28.3962, 0.2838", "509.312, 515.208, 28.3136, 0.292", "508.906, 514.845, 28.6684, 0.3064", "507.85, 514.689, 28.9024, 0.3354", "506.888, 514.096, 29.12, 0.378", "505.945, 513.449, 29.2676, 0.5122", "504.995, 512.925, 29.3933, 0.4926", "503.858, 512.918, 29.4014, 0.3856", "502.79, 513.046, 29.1875, 0.3016", "501.706, 513.248, 28.8812, 0.2776", "500.644, 513.377, 28.474, 0.2804", "499.633, 513.408, 27.957, 0.2852", "498.767, 513.673, 27.6174, 0.2954", "498.13, 512.995, 27.5851, 0.3078", "497.096, 512.533, 27.5971, 0.3616", "495.964, 512.461, 27.6253, 0.3136", "494.896, 512.255, 27.5659, 0.2542", "494.142, 511.544, 27.1272, 0.2288" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "536.87, 518.055, 41.137, 0.7354", "535.814, 517.444, 41.3913, 0.8086", "535.002, 516.65, 41.4873, 0.7608", "534.476, 515.691, 41.4, 0.6474", "534.171, 514.593, 41.2832, 0.5588", "533.646, 513.576, 41.188, 0.489", "533.031, 512.614, 41.1314, 0.5882", "532.263, 511.767, 41.1323, 0.5762", "531.484, 510.93, 41.1933, 0.5916", "530.81, 510.009, 41.3101, 0.4358", "530.352, 508.963, 41.4683, 0.3568", "529.917, 507.965, 41.7057, 0.335", "528.969, 507.546, 42.1145, 0.376", "527.916, 507.278, 42.5718, 0.5148", "526.979, 506.621, 42.961, 0.4664", "525.979, 506.083, 43.2928, 0.489", "525.017, 505.481, 43.5893, 0.4432", "524.258, 504.682, 43.9197, 0.5548", "523.661, 503.733, 44.2476, 0.4946", "523.275, 502.709, 44.6256, 0.5344", "523.026, 501.608, 44.9814, 0.5606", "522.65, 500.532, 45.2721, 0.6116", "521.966, 499.628, 45.5087, 0.6928", "521.258, 498.731, 45.7111, 0.6812", "520.56, 497.824, 45.9085, 0.7592", "519.836, 496.941, 46.1258, 0.6498", "518.952, 496.246, 46.4232, 0.5358" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "530.672, 554.045, 33.6143, 0.2836", "530.143, 554.344, 35.6835, 0.2288", "529.293, 555.029, 36.5649, 0.318", "528.51, 555.841, 36.925, 0.3808", "527.663, 556.569, 37.3548, 0.3472", "526.778, 557.26, 37.8288, 0.3258", "525.909, 557.972, 38.3298, 0.3172", "525.184, 558.833, 38.8058, 0.379", "524.51, 559.753, 39.2465, 0.3444", "524.041, 560.709, 39.7622, 0.3192", "523.778, 561.767, 40.3242, 0.3112", "523.266, 562.751, 40.8682, 0.3382", "522.677, 563.717, 41.3972, 0.413", "522.195, 564.682, 41.9812, 0.4328", "521.468, 565.468, 42.5846, 0.3594", "520.411, 565.755, 43.1152, 0.3002", "519.49, 566.289, 43.6447, 0.2748", "518.755, 567.144, 44.1034, 0.2752", "517.896, 567.888, 44.4822, 0.2756", "517.453, 568.873, 44.879, 0.2766", "517.239, 569.022, 45.2214, 0.2782", "516.302, 569.672, 45.5666, 0.2814", "515.486, 570.426, 45.9393, 0.2872", "514.93, 571.399, 46.3848, 0.2978", "514.562, 572.431, 46.9048, 0.3186", "514.388, 573.521, 47.4944, 0.3522", "514.268, 574.613, 48.1474, 0.4382", "513.945, 575.653, 48.7861, 0.4818", "513.237, 576.466, 49.4446, 0.4396", "512.346, 576.994, 50.1721, 0.5", "511.54, 577.678, 50.9116, 0.3974", "510.67, 578.373, 51.604, 0.3332", "509.833, 579.049, 52.288, 0.2888", "509.26, 579.987, 52.8637, 0.302", "508.939, 581.086, 53.3464, 0.3202", "509.293, 581.971, 53.7709, 0.3842", "509.924, 582.879, 54.1173, 0.356", "510.507, 583.742, 54.5457, 0.3304", "510.87, 584.815, 54.9301, 0.3814", "511.087, 585.276, 56.5152, 0.2288" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "530.672, 554.045, 33.6143, 0.2836", "529.51, 554.371, 33.4088, 0.2912", "528.526, 554.76, 33.0739, 0.3052", "527.465, 555.121, 32.7536, 0.3334", "526.455, 555.533, 32.4293, 0.373", "525.633, 556.328, 32.083, 0.5092", "524.992, 557.157, 31.6232, 0.4574", "524.008, 557.674, 31.1679, 0.4648", "523.34, 557.528, 30.5368, 0.4344", "522.523, 557.487, 29.7954, 0.3624", "521.612, 557.961, 29.2942, 0.3056", "521.054, 558.929, 29.052, 0.2852", "520.424, 559.721, 29.1533, 0.294", "519.831, 560.537, 29.3961, 0.3114", "519.177, 561.359, 29.6596, 0.3386", "518.075, 561.507, 29.9306, 0.4136", "516.982, 561.798, 30.0829, 0.4338", "515.938, 561.615, 30.2268, 0.3612", "514.913, 561.997, 30.2131, 0.3036", "514.083, 562.52, 29.9048, 0.2814", "513.247, 563.236, 29.5243, 0.287", "512.659, 564.145, 29.0422, 0.2988", "511.826, 564.88, 28.6051, 0.3142", "510.757, 564.892, 28.2531, 0.3738", "509.69, 564.766, 27.8826, 0.3344", "508.893, 565.09, 27.5056, 0.301", "508.765, 566.08, 27.3692, 0.2766", "508.262, 566.914, 27.3792, 0.2782", "507.461, 567.682, 27.2752, 0.2814", "506.53, 568.31, 27.1278, 0.2872", "505.489, 568.688, 27.0582, 0.299", "504.821, 568.5, 26.7907, 0.3146", "504.395, 568.833, 26.1474, 0.3744", "504.641, 569.496, 25.534, 0.3358", "504.439, 570.554, 25.0782, 0.3036", "504.475, 571.666, 24.6051, 0.2814", "504.616, 572.748, 23.983, 0.2868", "505.308, 573.389, 23.1679, 0.2984", "505.201, 573.867, 22.1668, 0.3136", "504.363, 574.274, 21.0787, 0.3724", "503.518, 574.286, 19.9116, 0.332", "502.842, 573.769, 18.8385, 0.2966", "502.842, 572.644, 18.116, 0.2684", "502.513, 571.691, 17.765, 0.2626", "501.434, 571.94, 17.5745, 0.2542", "500.379, 572.102, 17.368, 0.2288", "499.637, 572.912, 16.9546, 0.2288" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "518.18, 504.757, 17.4199, 0.414", "517.645, 505.711, 17.0335, 0.307", "517.461, 506.795, 16.8542, 0.2874", "517.429, 507.938, 16.808, 0.2994", "517.556, 509.058, 16.8579, 0.3156", "517.966, 510.126, 16.9517, 0.376", "518.698, 510.598, 16.9873, 0.3388", "518.943, 511.648, 17.0159, 0.309", "519.263, 512.666, 17.2076, 0.2912", "519.909, 513.527, 17.53, 0.3054", "520.536, 514.459, 17.7658, 0.3324", "520.708, 515.469, 17.8178, 0.3786", "520.87, 516.58, 17.9715, 0.4836", "521.133, 517.541, 18.3244, 0.5838", "521.052, 518.468, 18.837, 0.542", "521.081, 519.58, 19.2939, 0.4248", "521.726, 520.52, 19.6079, 0.3998", "522.052, 521.595, 19.743, 0.3358", "522.064, 522.693, 19.7548, 0.3034", "522.182, 523.397, 19.4231, 0.2808", "522.89, 524.24, 19.0929, 0.286", "523.655, 524.888, 19.0318, 0.297", "524.421, 525.218, 19.3534, 0.3108", "525.188, 525.89, 19.8602, 0.3672", "526.151, 526.441, 20.411, 0.322", "526.809, 527.363, 20.8793, 0.2796", "527.437, 528.32, 21.2083, 0.2288", "527.961, 529.336, 21.4757, 0.2288" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "518.18, 504.757, 17.4199, 0.414", "517.101, 504.268, 15.2015, 0.6864", "516.364, 503.441, 15.644, 0.446", "516.145, 502.474, 15.9669, 0.329", "515.953, 501.381, 16.1231, 0.2814", "515.713, 500.272, 16.1816, 0.287", "515.695, 498.982, 16.1169, 0.2988", "515.565, 497.875, 16.1449, 0.314", "514.81, 497.045, 16.2376, 0.3734", "514.643, 496.478, 16.2974, 0.3338", "514.491, 495.446, 16.3049, 0.2998", "514.418, 494.37, 16.3583, 0.2742", "513.987, 493.42, 16.6721, 0.274", "513.458, 492.899, 17.3835, 0.2736", "513.336, 492.163, 18.3966, 0.2728", "513.023, 491.327, 19.6009, 0.2712", "512.09, 490.896, 20.7644, 0.2684", "511.318, 490.26, 21.8838, 0.2626", "511.329, 489.772, 23.0696, 0.2542", "510.428, 489.563, 24.0922, 0.2288", "509.816, 488.694, 25.0603, 0.2288" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "538.119, 506.171, 25.0542, 0.3962", "538.74, 505.417, 25.146, 0.2288", "539.237, 504.411, 24.259, 0.3066", "539.469, 503.336, 23.8644, 0.3286", "539.328, 502.249, 23.3803, 0.4012", "539.24, 501.121, 22.9022, 0.3802", "538.63, 500.236, 22.3731, 0.4114", "538.031, 499.31, 21.8618, 0.357", "537.57, 498.275, 21.4503, 0.344", "536.973, 497.299, 21.1846, 0.3516", "536.182, 496.473, 21.0364, 0.4388", "535.409, 495.648, 21.0184, 0.4754", "534.839, 494.689, 21.1149, 0.4638", "534.544, 493.592, 21.1633, 0.3698", "534.828, 492.549, 21.0679, 0.3192", "535.708, 491.872, 20.9146, 0.3112", "535.891, 490.761, 20.7881, 0.3382", "535.672, 489.647, 20.6323, 0.413", "535.317, 488.594, 20.3703, 0.4328", "534.891, 487.577, 20.0452, 0.3594", "534.633, 486.612, 19.7565, 0.3", "535.471, 485.895, 19.5008, 0.2746", "536.354, 485.255, 19.25, 0.2746", "536.7, 484.243, 18.9645, 0.2748", "536.112, 483.534, 18.7218, 0.2748", "535.458, 482.819, 18.4552, 0.2752", "535.135, 481.784, 18.0965, 0.2756", "534.651, 480.771, 17.7729, 0.2764", "534.179, 479.742, 17.5642, 0.2782", "533.914, 478.677, 17.3499, 0.2812", "533.372, 477.771, 17.0643, 0.2868", "532.497, 477.077, 16.8589, 0.297", "531.776, 476.241, 16.794, 0.3172", "530.888, 475.564, 16.7485, 0.3494", "529.872, 475.135, 16.603, 0.4334", "529.007, 474.487, 16.3693, 0.4716", "528.073, 473.855, 16.1961, 0.426", "527.096, 473.273, 16.0859, 0.4498", "526.208, 472.558, 15.9851, 0.4254", "525.421, 471.734, 15.874, 0.4848", "524.888, 470.733, 15.7632, 0.5442", "524.271, 469.774, 15.6916, 0.4416", "523.521, 469.068, 15.4532, 0.3704", "522.862, 468.147, 15.2537, 0.3474", "521.932, 467.5, 15.1658, 0.4604", "521.112, 466.703, 15.1164, 0.3728", "520.45, 465.77, 15.0956, 0.2796", "519.833, 464.807, 15.12, 0.2288" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "538.119, 506.171, 25.0542, 0.3962", "538.249, 505.958, 24.2873, 0.3312", "537.964, 505.553, 23.3727, 0.2852", "537.443, 505.472, 22.3038, 0.294", "536.512, 505.324, 21.4736, 0.3116", "535.37, 505.338, 20.917, 0.339", "534.234, 505.442, 20.5592, 0.4144", "533.172, 505.087, 20.3063, 0.4352", "532.096, 504.836, 20.154, 0.364", "531.2, 504.732, 20.3039, 0.3086", "530.281, 504.666, 20.6176, 0.2906", "529.45, 503.911, 20.9235, 0.304", "528.601, 503.438, 21.0501, 0.33", "527.961, 502.639, 21.2518, 0.373", "526.919, 502.578, 21.53, 0.478", "525.818, 502.553, 21.8702, 0.55", "525.294, 501.637, 22.1465, 0.5926", "524.335, 501.205, 22.5229, 0.655", "523.219, 501.116, 22.9323, 0.6228", "522.088, 501.008, 23.2851, 0.5946", "520.974, 501.191, 23.6453, 0.6182", "519.887, 500.962, 24.0619, 0.5226", "518.784, 500.688, 24.4492, 0.564", "517.724, 500.366, 24.8857, 0.4946", "516.664, 500.06, 25.3344, 0.3892", "515.88, 499.675, 25.8479, 0.3084", "515.278, 499.151, 26.428, 0.29", "514.398, 498.798, 26.826, 0.3044", "513.424, 498.467, 27.0237, 0.3246", "512.375, 498.199, 27.096, 0.3926", "511.424, 497.604, 27.1617, 0.3706", "510.392, 497.315, 27.1425, 0.3624", "509.622, 497.602, 27.3626, 0.4168", "508.724, 497.543, 27.6919, 0.41", "507.909, 497.228, 27.7732, 0.4626", "506.919, 496.665, 27.8473, 0.4724", "506.181, 495.809, 27.928, 0.4584", "505.301, 495.125, 28.0417, 0.3596", "504.219, 494.764, 28.1168, 0.3004", "503.09, 494.576, 28.1966, 0.2754", "501.953, 494.454, 28.3055, 0.2762", "500.855, 494.207, 28.4612, 0.2776", "499.822, 493.789, 28.6726, 0.2802", "498.785, 493.373, 28.7879, 0.285", "497.842, 492.786, 28.9324, 0.2938", "497.38, 492.05, 29.1819, 0.3112", "496.608, 491.766, 29.169, 0.3382", "495.865, 490.982, 29.0903, 0.413", "494.609, 490.598, 29.0242, 0.4328", "493.516, 490.262, 28.9867, 0.3594", "492.627, 489.595, 29.0139, 0.3002", "491.814, 488.81, 29.115, 0.2752", "490.96, 488.059, 29.2401, 0.2756", "489.878, 487.772, 29.3527, 0.2766", "488.777, 488.085, 29.4451, 0.2782", "487.716, 488.474, 29.5201, 0.2814", "486.708, 488.981, 29.5826, 0.287", "485.591, 489.105, 29.678, 0.2988", "484.538, 488.848, 29.8682, 0.3142", "483.878, 488.051, 29.9163, 0.3734", "482.915, 487.497, 30.0244, 0.3338", "481.876, 487.071, 30.2005, 0.3", "480.769, 486.819, 30.3649, 0.2746", "479.669, 486.516, 30.4984, 0.2746", "478.699, 486.994, 30.6141, 0.2746", "477.855, 487.706, 30.7342, 0.2746", "476.723, 487.862, 30.8554, 0.2746", "475.594, 488.036, 31.0027, 0.2746", "474.467, 488.163, 31.1895, 0.2746", "473.351, 487.954, 31.4356, 0.2746", "472.234, 487.744, 31.7254, 0.2746", "471.178, 487.362, 32.0656, 0.2746", "470.126, 486.968, 32.4341, 0.2746", "469.001, 486.901, 32.8042, 0.2746", "467.877, 486.835, 33.1601, 0.2746", "466.77, 487.035, 33.4454, 0.2746", "465.673, 487.355, 33.6476, 0.2746", "464.553, 487.564, 33.7767, 0.2746", "463.413, 487.64, 33.8467, 0.2746", "462.272, 487.718, 33.8761, 0.2746", "461.128, 487.731, 33.8806, 0.2746", "459.984, 487.731, 33.8741, 0.2746", "458.84, 487.731, 33.8615, 0.2746", "457.696, 487.731, 33.8425, 0.2746", "456.552, 487.731, 33.8164, 0.2746", "455.484, 488.053, 33.7795, 0.2746", "454.488, 488.616, 33.7263, 0.2746", "453.527, 489.211, 33.6529, 0.2746", "452.444, 489.579, 33.5546, 0.2746", "451.4, 489.997, 33.4253, 0.2746", "450.703, 490.811, 33.2083, 0.2748", "449.926, 491.461, 32.8798, 0.2748", "449.527, 492.526, 32.5545, 0.2752", "449.252, 493.612, 32.1703, 0.2756", "448.829, 494.567, 31.7223, 0.2766", "447.786, 495.009, 31.2978, 0.2782", "446.656, 495.066, 30.8538, 0.2814", "445.978, 495.877, 30.317, 0.287", "445.451, 496.83, 29.7237, 0.2988", "444.891, 497.736, 29.0984, 0.3142", "443.953, 498.37, 28.4995, 0.3734", "443.09, 499.073, 27.9065, 0.3338", "442.353, 499.898, 27.306, 0.3", "441.625, 500.658, 26.668, 0.2746", "440.924, 501.498, 26.0523, 0.2746", "439.98, 501.968, 25.4969, 0.2744", "439.17, 502.542, 25.0736, 0.2744", "438.779, 503.617, 24.7519, 0.2742", "438.284, 504.648, 24.4972, 0.274", "437.428, 505.381, 24.27, 0.2736", "436.632, 506.204, 24.0274, 0.2728", "435.736, 506.871, 23.6556, 0.2712", "434.796, 507.469, 23.1512, 0.2684", "433.956, 508.11, 22.5076, 0.2626", "433.047, 508.423, 21.7272, 0.2542", "432.431, 509.136, 20.9244, 0.2288", "432.316, 510.17, 19.2153, 0.2288" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "547.661, 597.555, 58.868, 0.2746", "546.539, 597.431, 59.3718, 0.2288", "546.362, 596.325, 59.7358, 0.2746", "545.602, 595.571, 59.9312, 0.2746", "545.155, 594.58, 60.1177, 0.2746", "544.685, 593.681, 60.2958, 0.2744", "543.581, 593.451, 60.4699, 0.2744", "542.528, 593.263, 60.7113, 0.2742", "541.487, 593.429, 61.0179, 0.274", "540.414, 593.108, 61.3015, 0.2736", "539.474, 592.587, 61.6171, 0.2728", "538.354, 592.48, 61.9203, 0.2712", "537.351, 591.955, 62.2241, 0.2684", "536.267, 591.586, 62.4607, 0.2626", "535.216, 591.135, 62.6452, 0.2542", "534.18, 590.788, 62.8788, 0.2288", "533.093, 590.994, 63.4729, 0.2288" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "547.661, 597.555, 58.868, 0.2746", "546.52, 597.575, 59.1004, 0.2746", "545.44, 597.908, 59.2922, 0.2746", "544.359, 598.239, 59.4073, 0.2746", "543.416, 598.846, 59.5045, 0.2746", "542.586, 599.63, 59.6411, 0.2746", "541.867, 600.505, 59.8522, 0.2746", "541.153, 601.369, 60.156, 0.2746", "540.437, 601.432, 60.5192, 0.2746", "539.33, 601.529, 60.958, 0.2746", "538.221, 601.626, 61.4351, 0.2746", "537.099, 601.691, 61.8864, 0.2746", "535.955, 601.71, 62.2555, 0.2746", "534.81, 601.728, 62.5674, 0.2746", "533.692, 601.862, 62.8998, 0.2746", "532.586, 602.054, 63.2797, 0.2746", "531.497, 602.303, 63.7098, 0.2746", "530.421, 602.597, 64.1872, 0.2746", "529.495, 603.073, 64.7357, 0.2746", "528.617, 603.413, 65.3036, 0.2746", "527.518, 603.095, 65.744, 0.2746", "526.419, 602.778, 66.0778, 0.2746", "525.318, 602.461, 66.3295, 0.2746", "524.211, 602.401, 66.5619, 0.2746", "523.096, 602.538, 66.8142, 0.2746", "521.981, 602.675, 67.0888, 0.2746", "520.956, 603.167, 67.3277, 0.2746", "519.94, 603.693, 67.5234, 0.2746", "518.947, 604.256, 67.6774, 0.2746", "517.992, 604.884, 67.7914, 0.2746", "517.034, 605.511, 67.8751, 0.2746", "516.08, 606.139, 67.9414, 0.2746", "515.124, 606.767, 68.0028, 0.2746", "514.169, 607.395, 68.0596, 0.2746", "513.224, 608.041, 68.1083, 0.2746", "512.315, 608.735, 68.1419, 0.2746", "511.406, 609.428, 68.1638, 0.2746", "510.496, 610.122, 68.1761, 0.2746", "509.586, 610.816, 68.182, 0.2746", "508.676, 611.509, 68.1831, 0.2746", "507.767, 612.202, 68.182, 0.2746", "506.855, 612.896, 68.1792, 0.2746", "506.267, 613.869, 68.1727, 0.2746", "505.704, 614.866, 68.1626, 0.2746", "505.143, 615.862, 68.1495, 0.2746", "504.582, 616.859, 68.1338, 0.2746", "504.02, 617.855, 68.1167, 0.2746", "503.47, 618.857, 68.0935, 0.2746", "502.928, 619.864, 68.0638, 0.2746", "502.385, 620.87, 68.0338, 0.2746", "501.844, 621.877, 68.0095, 0.2746", "501.022, 622.653, 68.0212, 0.2746", "500.138, 623.379, 68.0702, 0.2746", "499.255, 624.105, 68.1514, 0.2746", "498.372, 624.831, 68.2601, 0.2746", "497.48, 625.545, 68.3872, 0.2746", "496.566, 626.234, 68.5219, 0.2746", "495.654, 626.923, 68.6739, 0.2746", "494.741, 627.613, 68.8618, 0.2746", "493.828, 628.302, 69.1037, 0.2746", "492.915, 628.992, 69.4165, 0.2746", "492.002, 629.68, 69.811, 0.2746", "492.609, 629.227, 70.4914, 0.2746", "492.811, 628.797, 71.4711, 0.2746", "491.864, 629.186, 72.5309, 0.2746", "491.523, 629.932, 73.7024, 0.2746", "490.48, 630.144, 74.797, 0.2744", "489.401, 630.33, 75.7887, 0.2744", "488.322, 630.517, 76.6668, 0.2742", "487.243, 630.704, 77.462, 0.274", "486.161, 630.45, 78.1267, 0.2736", "485.079, 630.081, 78.6848, 0.2728", "483.997, 629.71, 79.2263, 0.2712", "483.055, 629.825, 79.9394, 0.2684", "482.152, 630.075, 80.8231, 0.2626", "481.198, 629.966, 81.7802, 0.2542", "480.219, 629.682, 82.7478, 0.2288", "479.24, 629.397, 84.7731, 0.2288" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "518.952, 496.246, 46.4232, 0.5358", "518.148, 495.786, 46.9493, 0.5798", "517.122, 495.537, 47.5583, 0.5654" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "518.952, 496.246, 46.4232, 0.5358", "519.395, 495.732, 46.0687, 0.2288", "520.218, 494.97, 46.1373, 0.3112", "521.21, 494.4, 46.1594, 0.3382", "522.205, 493.839, 46.1569, 0.413", "523.211, 493.297, 46.1138, 0.4328", "524.195, 492.721, 46.0485, 0.3594", "525.133, 492.065, 45.9889, 0.3002", "526.188, 491.681, 45.9208, 0.2748", "527.302, 491.428, 45.8508, 0.2752", "528.314, 490.935, 45.7926, 0.2756", "529.276, 490.319, 45.7512, 0.2766", "530.201, 489.674, 45.799, 0.2782", "531.109, 489.02, 45.9326, 0.2814", "532.081, 488.419, 46.0449, 0.287", "533.057, 487.819, 46.137, 0.2988", "534.137, 487.48, 46.1633, 0.3142", "535.224, 487.159, 46.139, 0.3736", "536.08, 486.423, 46.1138, 0.334", "536.898, 485.628, 46.1174, 0.3004", "537.546, 484.835, 46.3649, 0.2752", "538.393, 484.16, 46.6847, 0.2758", "539.424, 483.849, 46.8866, 0.2768", "540.297, 483.167, 47.1881, 0.2786", "541.141, 482.441, 47.5398, 0.282", "541.482, 481.451, 47.9388, 0.288", "542.276, 480.638, 48.2258, 0.3008", "543.344, 480.723, 48.4366, 0.3178", "544.471, 480.808, 48.5825, 0.3802", "545.317, 480.124, 48.697, 0.3464", "545.974, 479.293, 48.8538, 0.3242", "547.047, 479.029, 48.8771, 0.3142", "548.046, 479.392, 48.7388, 0.3734", "549.021, 479.081, 48.4812, 0.3338", "550.031, 478.603, 48.3227, 0.3", "551.159, 478.414, 48.1992, 0.2746", "552.273, 478.193, 48.144, 0.2746", "553.343, 477.845, 48.2462, 0.2746", "554.404, 477.467, 48.4473, 0.2746", "555.453, 477.017, 48.6637, 0.2746", "556.523, 476.64, 48.8653, 0.2746", "557.643, 476.457, 49.0616, 0.2746", "558.755, 476.252, 49.2316, 0.2748", "559.682, 475.582, 49.3105, 0.2748", "560.622, 474.945, 49.3181, 0.2752", "561.734, 474.755, 49.2232, 0.2756", "562.846, 474.567, 49.0588, 0.2766", "563.724, 473.871, 48.9188, 0.2782", "564.773, 473.894, 48.82, 0.2814", "565.77, 474.383, 48.7721, 0.287", "566.854, 474.704, 48.7721, 0.2988", "567.901, 475.17, 48.8146, 0.3142", "568.951, 475.623, 48.8838, 0.3734", "569.997, 476.06, 49.0081, 0.334", "571.064, 476.279, 49.2422, 0.3002", "572.161, 475.969, 49.432, 0.275", "573.185, 475.458, 49.5779, 0.2752", "574.208, 474.945, 49.6835, 0.2758", "575.232, 474.434, 49.7538, 0.2768", "576.281, 473.984, 49.7963, 0.2786", "577.364, 473.616, 49.8226, 0.2822", "578.378, 473.141, 49.8529, 0.2888", "579.26, 472.45, 49.8868, 0.3006", "580.333, 472.185, 49.9772, 0.3236", "581.44, 472.244, 50.1371, 0.3624", "582.533, 472.312, 50.1948, 0.4526", "583.576, 472.081, 50.1567, 0.5316", "584.516, 471.478, 50.1833, 0.4188", "585.432, 470.812, 50.2463, 0.3258", "586.432, 470.341, 50.2594, 0.2752", "587.518, 470.063, 50.1718, 0.2756", "588.573, 469.672, 50.0674, 0.2766", "589.596, 469.16, 49.9895, 0.2782", "590.663, 468.793, 49.9335, 0.2814", "591.796, 468.643, 49.9195, 0.2872", "592.927, 468.491, 49.9467, 0.299", "594.046, 468.252, 49.9811, 0.3146", "595.167, 468.024, 50.0055, 0.3744", "596.302, 467.898, 49.9954, 0.3358", "597.437, 467.772, 49.9624, 0.3036", "598.495, 467.381, 49.9363, 0.2814", "599.518, 466.87, 49.9321, 0.287", "600.52, 466.317, 49.9531, 0.2988", "601.262, 465.476, 49.9962, 0.3142", "602.154, 464.819, 50.1192, 0.3736", "603.223, 464.588, 50.3261, 0.3342", "604.271, 464.133, 50.4829, 0.3006", "605.31, 463.651, 50.5912, 0.2756", "606.25, 463.032, 50.626, 0.2766", "607.091, 462.276, 50.5694, 0.2782", "607.953, 461.546, 50.5263, 0.2814", "608.836, 460.849, 50.5358, 0.287", "609.943, 460.562, 50.5296, 0.2988", "611.049, 460.275, 50.5089, 0.3142", "612.062, 459.803, 50.4112, 0.3734", "613.042, 459.271, 50.2314, 0.3338", "614.0, 458.649, 50.0702, 0.3", "614.955, 458.02, 49.9335, 0.2746", "615.991, 457.589, 49.8954, 0.2746", "617.039, 457.195, 49.9276, 0.2748", "618.161, 457.117, 49.8632, 0.275", "619.219, 456.946, 49.7106, 0.2754", "619.742, 455.981, 49.4427, 0.2762", "620.554, 455.203, 49.1784, 0.2776", "621.489, 454.757, 49.0778, 0.2802", "622.604, 454.666, 48.995, 0.285", "623.655, 454.328, 48.8393, 0.2938", "624.333, 453.539, 48.5934, 0.3112", "625.117, 452.752, 48.5058, 0.3384", "625.966, 452.025, 48.5204, 0.413", "626.958, 451.454, 48.5444, 0.433", "627.911, 450.834, 48.5962, 0.3596", "628.645, 449.96, 48.6688, 0.3006", "629.494, 449.277, 48.7455, 0.2756", "630.5, 448.875, 48.8821, 0.2766", "631.607, 448.8, 48.9919, 0.2784", "632.752, 448.756, 49.0238, 0.2816", "633.364, 447.849, 48.9787, 0.2874", "633.414, 446.716, 48.8118, 0.2996", "634.046, 446.163, 48.3417, 0.3158", "634.904, 445.585, 47.8433, 0.3764", "635.89, 445.143, 47.5104, 0.3396", "636.801, 444.49, 47.1825, 0.3104", "637.708, 443.819, 46.9084, 0.2938", "638.614, 443.12, 46.7398, 0.3112", "639.392, 442.316, 46.6872, 0.3382", "640.148, 441.534, 46.7435, 0.413", "641.159, 441.782, 46.7634, 0.4328", "642.2, 441.496, 46.8395, 0.3594", "643.301, 441.252, 46.8199, 0.3", "644.4, 441.002, 46.727, 0.2746", "645.484, 440.633, 46.6533, 0.2746", "646.565, 440.265, 46.6066, 0.2746", "647.612, 439.802, 46.5996, 0.2746", "648.648, 439.319, 46.6259, 0.2746", "649.43, 438.543, 46.7482, 0.2746", "650.116, 437.657, 46.9515, 0.2746", "650.731, 436.696, 47.1372, 0.2746", "651.395, 435.764, 47.2744, 0.2746", "652.271, 435.163, 47.3659, 0.2746", "653.388, 434.943, 47.4205, 0.2746", "654.464, 434.553, 47.4491, 0.2746", "654.979, 433.634, 47.4566, 0.2746", "655.734, 432.915, 47.3544, 0.2746", "656.82, 432.74, 47.3105, 0.2746", "657.812, 432.392, 47.4818, 0.2746", "658.81, 432.049, 47.7982, 0.2746", "659.911, 431.768, 48.0561, 0.2746", "660.676, 430.918, 48.256, 0.2746", "661.32, 429.98, 48.3941, 0.2746", "662.031, 429.095, 48.4504, 0.2746", "662.878, 428.341, 48.4299, 0.2746", "664.013, 428.199, 48.3672, 0.2746", "665.148, 428.057, 48.2924, 0.2746", "666.046, 427.449, 48.1032, 0.2746", "666.692, 426.554, 47.889, 0.2746", "667.43, 425.727, 47.7142, 0.2746", "667.716, 424.656, 47.5807, 0.2746", "668.286, 423.814, 47.4855, 0.2746", "669.346, 423.409, 47.4278, 0.2746", "670.443, 423.087, 47.4037, 0.2746", "671.439, 422.549, 47.3379, 0.2746", "672.443, 422.031, 47.2545, 0.2746", "673.5, 421.63, 47.2612, 0.2746", "674.572, 421.357, 47.3567, 0.2746", "675.669, 421.23, 47.465, 0.2746", "676.633, 420.687, 47.4762, 0.2746", "677.263, 419.759, 47.4222, 0.2746", "677.734, 418.736, 47.318, 0.2746", "677.974, 417.701, 47.3701, 0.2746", "678.5, 416.691, 47.4513, 0.2746", "679.01, 415.669, 47.5488, 0.2746", "679.375, 414.646, 47.742, 0.2746", "680.041, 413.76, 47.8576, 0.2746", "680.211, 412.669, 47.8276, 0.2746", "680.598, 411.683, 47.6104, 0.2744", "680.838, 410.606, 47.3404, 0.2744", "680.667, 409.585, 47.2377, 0.2742", "680.531, 408.452, 47.1321, 0.274", "680.494, 407.358, 47.1358, 0.2736", "679.914, 406.59, 46.9972, 0.2728", "679.534, 405.77, 46.6934, 0.2712", "678.723, 405.079, 46.3022, 0.2684", "677.773, 404.465, 45.9452, 0.2626", "677.383, 403.468, 45.6842, 0.2542", "677.193, 402.344, 45.5333, 0.2288", "676.969, 401.226, 45.589, 0.2288" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "517.122, 495.537, 47.5583, 0.5654", "516.63, 495.171, 48.1256, 0.548", "515.955, 494.35, 48.6013, 0.4696", "515.583, 493.286, 48.8813, 0.55", "515.148, 492.246, 49.0358, 0.5166", "514.438, 491.363, 49.1288, 0.425", "513.481, 490.79, 49.2229, 0.4002", "512.409, 490.476, 49.3968, 0.3364", "511.446, 489.958, 49.6283, 0.3046", "510.64, 489.155, 49.8725, 0.2832", "509.932, 488.262, 50.1208, 0.2904", "509.086, 487.542, 50.3087, 0.3048", "508.046, 487.096, 50.4627, 0.3254", "506.961, 486.748, 50.6503, 0.3946", "505.971, 486.298, 50.9555, 0.3728", "505.129, 485.633, 51.3769, 0.3738", "504.776, 484.625, 51.7938, 0.4032", "504.48, 483.73, 52.2402, 0.5538", "503.691, 482.972, 52.5692, 0.5952", "502.794, 482.333, 52.9262, 0.452", "501.691, 482.209, 53.2064, 0.34", "500.683, 481.736, 53.4884, 0.3028", "499.57, 481.474, 53.699, 0.3218", "498.776, 480.853, 53.8801, 0.3872", "498.496, 479.893, 53.8798, 0.3606", "498.579, 478.857, 53.9521, 0.3444", "499.56, 478.557, 54.1204, 0.3826", "499.477, 477.493, 54.3693, 0.3506", "498.359, 477.336, 54.6137, 0.3318", "497.388, 477.174, 54.9948, 0.3284", "496.334, 476.922, 55.3224, 0.4", "495.368, 476.418, 55.5758, 0.384", "494.457, 475.847, 55.7077, 0.3884", "494.023, 474.838, 55.9258, 0.4596", "493.312, 473.982, 56.1658, 0.5152", "492.318, 473.422, 56.3741, 0.532", "491.539, 472.707, 56.7146, 0.5238", "490.665, 471.978, 57.0248, 0.4714", "489.832, 471.233, 57.2468, 0.5534", "489.012, 470.479, 57.4918, 0.5232", "488.217, 469.758, 57.7713, 0.437", "487.62, 468.867, 58.0798, 0.4236", "487.471, 467.742, 58.3282, 0.3744", "486.599, 467.155, 58.5584, 0.4006", "485.562, 466.671, 58.7804, 0.3372", "484.527, 466.188, 58.9893, 0.3062", "483.452, 465.841, 59.1962, 0.2862", "482.341, 465.727, 59.4572, 0.2958", "481.312, 465.45, 59.8178, 0.315", "480.518, 464.745, 60.254, 0.3442", "479.611, 464.084, 60.5956, 0.43", "478.559, 463.631, 60.8474, 0.4356", "477.538, 463.127, 61.028, 0.5036", "476.589, 462.493, 61.1666, 0.58", "475.703, 461.787, 61.2531, 0.5042", "474.931, 460.948, 61.2749, 0.5054", "474.077, 460.191, 61.3052, 0.504", "473.206, 459.449, 61.355, 0.519", "472.461, 458.586, 61.4505, 0.4628", "471.739, 457.703, 61.5894, 0.5378", "470.928, 456.913, 61.7968, 0.493", "470.104, 456.138, 62.0542, 0.3864", "469.204, 455.439, 62.3179, 0.303", "468.319, 454.717, 62.5587, 0.28", "467.443, 453.982, 62.7662, 0.2846", "466.484, 453.38, 62.9978, 0.2932", "465.506, 452.81, 63.259, 0.3088", "464.543, 452.195, 63.5043, 0.34", "463.652, 451.505, 63.7753, 0.3866", "462.846, 450.729, 64.1071, 0.5282", "462.048, 449.919, 64.4162, 0.522", "461.252, 449.098, 64.6828, 0.4424", "460.449, 448.31, 64.9872, 0.3966", "459.642, 447.532, 65.3447, 0.5044", "458.816, 446.917, 65.6726, 0.4546", "457.898, 446.236, 65.9806, 0.4298", "456.99, 445.618, 66.3734, 0.514", "456.156, 444.922, 66.8136, 0.4958", "455.587, 443.945, 67.2283, 0.3918", "455.199, 442.909, 67.5959, 0.313", "455.048, 441.799, 67.8913, 0.2998", "454.289, 441.106, 68.1853, 0.3162", "453.199, 440.941, 68.479, 0.3772", "452.183, 440.516, 68.7, 0.3408", "451.269, 439.827, 68.8626, 0.3128", "450.354, 439.142, 68.9847, 0.2982", "449.525, 438.354, 69.0816, 0.3194", "448.703, 437.558, 69.1639, 0.3534", "447.678, 437.056, 69.2524, 0.441", "446.643, 436.573, 69.3655, 0.4854", "445.674, 435.974, 69.5338, 0.4538", "444.73, 435.367, 69.7813, 0.4904", "443.815, 434.81, 70.1593, 0.5546", "442.792, 434.353, 70.5407, 0.462", "441.73, 433.933, 70.8809, 0.4016", "440.829, 433.264, 71.1626, 0.436", "440.006, 432.467, 71.3854, 0.4764", "439.233, 431.629, 71.5851, 0.436", "438.482, 430.77, 71.7828, 0.4624", "437.749, 429.905, 72.0216, 0.4782", "437.022, 429.038, 72.3016, 0.4394", "436.109, 428.399, 72.6382, 0.4682", "435.221, 427.727, 72.9887, 0.4904", "434.451, 426.88, 73.2609, 0.4552", "433.681, 426.034, 73.4698, 0.5302", "432.913, 425.187, 73.6322, 0.448", "432.161, 424.326, 73.7694, 0.4524", "431.476, 423.41, 73.9007, 0.3872", "430.747, 422.544, 74.069, 0.394", "429.879, 421.848, 74.3506, 0.4714", "429.001, 421.157, 74.7051, 0.5308", "428.116, 420.471, 75.0971, 0.5918", "427.139, 419.928, 75.4984, 0.484", "426.122, 419.449, 75.8881, 0.4424", "425.305, 418.667, 76.1202, 0.5122", "424.487, 417.886, 76.2493, 0.6152", "423.645, 417.13, 76.4128, 0.7042", "422.789, 416.385, 76.6052, 0.908", "421.906, 415.663, 76.8146, 0.869", "421.071, 414.888, 77.0381, 0.7602", "420.255, 414.086, 77.2702, 0.735", "419.441, 413.285, 77.5183, 0.7476", "418.508, 413.03, 77.9492, 0.7108", "417.444, 412.699, 78.4053, 0.7068", "416.651, 411.934, 78.8035, 0.8438", "415.822, 411.154, 79.1339, 0.8562", "414.928, 410.439, 79.4119, 0.9072", "414.0, 409.776, 79.6659, 0.637", "413.049, 409.144, 79.9168, 0.5344", "412.241, 408.405, 80.2662, 0.469", "411.484, 407.627, 80.7229, 0.4284", "410.506, 407.044, 81.1605, 0.4186", "409.589, 406.438, 81.5917, 0.54", "409.085, 405.653, 82.161, 0.545", "408.345, 404.936, 82.5129, 0.4798", "407.509, 404.165, 82.752, 0.4914", "406.534, 403.601, 82.9833, 0.5564", "405.553, 403.069, 83.2541, 0.4654", "404.74, 402.288, 83.4803, 0.408", "403.97, 401.441, 83.6559, 0.448", "403.066, 400.747, 83.8244, 0.4984", "402.131, 400.089, 83.9737, 0.4764", "401.337, 399.306, 84.1828, 0.5402", "400.577, 398.49, 84.4558, 0.608", "399.796, 397.655, 84.6857, 0.7504", "399.062, 396.802, 84.875, 0.7042", "398.638, 395.862, 85.0287, 0.5232", "397.969, 395.222, 85.4319, 0.4208", "396.969, 394.361, 85.6976, 0.4724", "396.163, 393.618, 85.9345, 0.5396", "395.38, 392.935, 86.3601, 0.5734", "394.671, 392.168, 86.9131, 0.6186", "393.911, 391.404, 87.4829, 0.5596", "393.053, 390.648, 87.9315, 0.4574", "392.236, 389.863, 88.3319, 0.4608", "391.488, 389.029, 88.7074, 0.4458", "390.711, 388.203, 88.9871, 0.5222", "389.915, 387.38, 89.171, 0.6156", "389.189, 386.499, 89.3001, 0.5656", "388.502, 385.584, 89.4032, 0.6396", "387.73, 384.744, 89.4897, 0.6558", "386.909, 383.949, 89.5742, 0.5848", "386.199, 383.057, 89.6773, 0.4878", "385.387, 382.271, 89.8472, 0.3672", "384.53, 381.526, 90.0847, 0.3148", "383.672, 380.781, 90.3773, 0.3018", "382.816, 380.038, 90.7119, 0.326", "381.958, 379.293, 91.0736, 0.3652", "381.135, 378.538, 91.4855, 0.4652", "380.32, 377.781, 91.9268, 0.519", "379.505, 377.025, 92.3776, 0.5702", "378.633, 376.323, 92.7912, 0.4442", "377.658, 375.724, 93.1078, 0.3676", "376.685, 375.125, 93.3495, 0.3784", "375.71, 374.524, 93.5354, 0.343", "374.763, 373.896, 93.7096, 0.3168", "373.884, 373.193, 93.9378, 0.3066", "373.006, 372.49, 94.2127, 0.3288", "372.127, 371.787, 94.5216, 0.4006", "371.182, 371.152, 94.7932, 0.385", "370.22, 370.534, 95.0118, 0.3918", "369.258, 369.916, 95.1793, 0.4598", "368.362, 369.207, 95.2994, 0.5452", "367.479, 368.48, 95.3876, 0.4436", "366.596, 367.753, 95.459, 0.3738", "365.714, 367.026, 95.5273, 0.3536", "364.783, 366.361, 95.5895, 0.4724", "363.846, 365.704, 95.6511, 0.3934", "362.91, 365.046, 95.718, 0.3256", "361.974, 364.388, 95.7967, 0.275", "361.333, 363.454, 95.9174, 0.2754", "360.73, 362.486, 96.0806, 0.276", "360.129, 361.517, 96.2819, 0.2772", "359.526, 360.548, 96.516, 0.2794", "358.924, 359.589, 96.8066, 0.2838", "358.321, 358.63, 97.1384, 0.2912", "357.72, 357.673, 97.496, 0.3066", "357.084, 356.739, 97.8687, 0.3286", "356.355, 355.872, 98.2484, 0.4014", "355.63, 355.006, 98.6258, 0.3806", "354.902, 354.139, 98.9934, 0.412", "354.061, 353.382, 99.3317, 0.3592", "353.155, 352.688, 99.6349, 0.3418", "352.249, 351.995, 99.9141, 0.3774", "351.342, 351.302, 100.177, 0.3414", "350.581, 350.468, 100.455, 0.3138", "349.853, 349.602, 100.752, 0.3012", "349.127, 348.735, 101.062, 0.3188", "348.415, 347.855, 101.37, 0.382", "347.783, 346.905, 101.641, 0.3496", "347.148, 345.956, 101.876, 0.3304", "346.517, 345.006, 102.076, 0.3256", "345.819, 344.111, 102.241, 0.3946", "344.971, 343.342, 102.362, 0.3742", "344.125, 342.572, 102.459, 0.3694", "343.279, 341.802, 102.546, 0.4296", "342.428, 341.039, 102.644, 0.435", "341.57, 340.287, 102.776, 0.5022", "340.711, 339.536, 102.943, 0.5774", "339.853, 338.784, 103.138, 0.4992", "338.989, 338.046, 103.368, 0.4962", "338.122, 337.319, 103.633, 0.4874", "337.256, 336.592, 103.913, 0.4872", "336.39, 335.865, 104.192, 0.408", "335.684, 334.97, 104.409, 0.4158", "334.997, 334.055, 104.566, 0.365", "334.311, 333.14, 104.676, 0.3586", "333.625, 332.224, 104.757, 0.3788", "332.888, 331.349, 104.829, 0.49", "332.146, 330.479, 104.911, 0.567", "331.403, 329.608, 105.02, 0.649", "330.661, 328.739, 105.157, 0.64", "329.933, 327.892, 105.407, 0.4886", "329.207, 327.05, 105.746, 0.404", "328.48, 326.207, 106.146, 0.4402", "327.73, 325.367, 106.545, 0.4842", "326.948, 324.532, 106.881, 0.4504", "326.165, 323.698, 107.163, 0.49", "325.384, 322.864, 107.396, 0.524", "324.577, 322.073, 107.634, 0.5496", "323.743, 321.324, 107.917, 0.55", "322.909, 320.577, 108.237, 0.5506", "322.075, 319.829, 108.576, 0.5518", "321.185, 319.113, 108.836, 0.554", "320.29, 318.398, 109.018, 0.5594", "319.398, 317.684, 109.133, 0.5618", "318.504, 316.969, 109.195, 0.6036", "317.921, 315.989, 109.226, 0.4994", "317.35, 314.997, 109.246, 0.5024", "316.78, 314.005, 109.272, 0.4704", "316.21, 313.014, 109.309, 0.5936", "315.385, 312.234, 109.362, 0.6232", "314.514, 311.492, 109.436, 0.4986", "313.644, 310.749, 109.535, 0.4522", "312.773, 310.007, 109.659, 0.385", "311.927, 309.278, 109.887, 0.3976", "311.085, 308.552, 110.201, 0.4418", "310.241, 307.824, 110.566, 0.6508", "309.476, 307.014, 110.921, 0.6512", "308.848, 306.059, 111.19, 0.471", "308.219, 305.103, 111.383, 0.3284", "307.591, 304.147, 111.509, 0.2802", "306.997, 303.17, 111.595, 0.285", "306.487, 302.146, 111.669, 0.2936", "305.975, 301.124, 111.755, 0.311", "305.464, 300.1, 111.868, 0.337", "304.915, 299.109, 112.022, 0.4156", "304.129, 298.322, 112.292, 0.4142", "303.342, 297.535, 112.644, 0.439", "302.555, 296.749, 113.049, 0.5802", "301.686, 296.026, 113.423, 0.608", "300.771, 295.34, 113.731, 0.6528", "299.855, 294.653, 113.987, 0.5384", "298.941, 293.967, 114.202, 0.5992", "297.973, 293.398, 114.459, 0.5318", "296.975, 292.898, 114.792, 0.5932", "295.978, 292.4, 115.19, 0.7192", "294.979, 291.901, 115.635, 0.6638", "293.975, 291.362, 116.044, 0.5926", "292.97, 290.821, 116.417, 0.5354", "291.965, 290.28, 116.757, 0.5238", "290.96, 289.739, 117.08, 0.5012" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "517.122, 495.537, 47.5583, 0.5654", "517.003, 495.995, 49.1056, 0.2288", "517.451, 496.935, 49.4192, 0.4394", "518.302, 497.584, 49.555, 0.4454", "518.964, 498.481, 49.6896, 0.5598", "519.497, 499.483, 49.8187, 0.4988", "520.176, 500.384, 49.8775, 0.567", "520.901, 501.253, 49.8823, 0.5002", "521.216, 502.348, 49.8658, 0.3998", "521.114, 503.203, 49.7392, 0.329", "521.57, 504.242, 49.5838, 0.323", "522.02, 505.275, 49.5135, 0.3896", "522.81, 506.066, 49.5334, 0.3652", "523.513, 506.913, 49.5412, 0.3524", "523.731, 507.986, 49.4631, 0.3986", "524.179, 508.922, 49.3083, 0.3752", "525.133, 509.297, 49.2055, 0.402", "525.463, 510.248, 49.0871, 0.3398", "525.922, 511.28, 49.0342, 0.3108", "526.114, 512.386, 48.9126, 0.2946", "526.172, 513.526, 48.7981, 0.3118", "526.359, 514.649, 48.6864, 0.344", "526.451, 515.714, 48.5033, 0.401", "527.112, 516.529, 48.377, 0.52", "527.708, 517.395, 48.4512, 0.677", "528.453, 518.257, 48.5887, 0.5896", "529.237, 519.035, 48.8636, 0.4348", "529.984, 519.883, 49.1467, 0.3406", "530.75, 520.687, 49.434, 0.3754", "531.681, 521.333, 49.7319, 0.3376", "532.367, 522.149, 50.0178, 0.3068", "533.003, 522.528, 50.5476, 0.287", "533.753, 523.124, 51.0941, 0.2988", "534.112, 524.146, 51.3596, 0.3142", "534.201, 525.22, 51.4018, 0.3734", "535.028, 525.721, 51.2557, 0.3338", "535.533, 526.67, 51.1286, 0.3", "535.536, 527.445, 51.273, 0.2746", "535.81, 528.462, 51.4242, 0.2746", "536.456, 529.359, 51.4632, 0.2746", "537.431, 529.959, 51.4251, 0.2746", "538.346, 530.644, 51.2806, 0.2746", "538.956, 531.516, 50.8813, 0.2746", "539.617, 532.285, 50.3322, 0.2746", "540.594, 532.245, 49.6485, 0.2744", "541.192, 532.101, 48.7642, 0.2744", "542.099, 532.127, 47.8428, 0.2742", "543.143, 532.332, 46.9935, 0.274", "544.234, 532.537, 46.4215, 0.2736", "544.792, 533.083, 46.1964, 0.2728", "545.31, 534.064, 46.0208, 0.2712", "546.281, 533.919, 45.8718, 0.2684", "547.005, 533.414, 45.5524, 0.2626", "547.562, 532.558, 45.1604, 0.2542", "548.466, 531.935, 44.94, 0.2288", "549.265, 532.33, 44.9366, 0.2288" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_25",
    "id" : "apic_25",
    "points3d" : [ "290.96, 289.739, 117.08, 0.5012", "290.639, 289.371, 116.875, 0.2288", "289.888, 288.513, 117.052, 0.2752", "289.139, 287.656, 117.16, 0.2758", "288.203, 287.191, 117.203, 0.2766", "287.134, 287.012, 117.139, 0.2784", "286.039, 286.988, 117.218, 0.2818", "284.94, 286.988, 117.445, 0.288", "283.808, 286.988, 117.729, 0.2994", "282.672, 286.988, 118.055, 0.3216", "281.533, 286.937, 118.379, 0.3576", "280.411, 286.796, 118.698, 0.4486", "279.355, 286.427, 119.049, 0.4996", "278.301, 286.056, 119.425, 0.4798", "277.245, 285.686, 119.822, 0.5404", "276.17, 285.349, 120.197, 0.638", "275.062, 285.061, 120.503, 0.6618", "273.954, 284.774, 120.754, 0.554", "272.846, 284.485, 120.97, 0.405", "271.741, 284.197, 121.179, 0.3386", "270.747, 283.691, 121.474, 0.3418", "269.786, 283.127, 121.873, 0.4196", "268.827, 282.562, 122.356, 0.4452", "267.858, 282.018, 122.896, 0.3822", "266.852, 281.57, 123.48, 0.3434", "265.846, 281.123, 124.074, 0.3508", "264.841, 280.677, 124.652, 0.4372", "263.833, 280.181, 125.142, 0.4722", "262.824, 279.643, 125.503, 0.4582", "261.815, 279.104, 125.773, 0.3594", "260.795, 278.619, 126.033, 0.3", "259.767, 278.185, 126.345, 0.2746", "258.737, 277.753, 126.706, 0.2746", "257.708, 277.319, 127.112, 0.2746", "256.734, 276.736, 127.488, 0.2746", "255.783, 276.102, 127.811, 0.2746", "254.832, 275.467, 128.091, 0.2746", "253.775, 275.091, 128.412, 0.2746", "252.7, 274.758, 128.786, 0.2748", "251.625, 274.425, 129.213, 0.275", "250.551, 274.092, 129.689, 0.2754", "249.452, 273.994, 130.223, 0.2762", "248.349, 273.928, 130.792, 0.2774", "247.245, 273.863, 131.365, 0.2798", "246.129, 273.746, 131.898, 0.2844", "245.008, 273.608, 132.374, 0.2928", "243.888, 273.471, 132.794, 0.3094", "242.767, 273.335, 133.155, 0.3338", "241.664, 273.116, 133.442, 0.4108", "240.605, 272.687, 133.612, 0.3988", "239.546, 272.258, 133.699, 0.4408", "238.486, 271.83, 133.731, 0.437", "237.441, 271.373, 133.743, 0.3674", "236.442, 270.825, 133.79, 0.3148", "235.442, 270.277, 133.87, 0.303", "234.445, 269.724, 133.977, 0.3222", "233.471, 269.125, 134.065, 0.388", "232.496, 268.524, 134.129, 0.362", "231.523, 267.925, 134.17, 0.3468", "230.548, 267.325, 134.189, 0.3872" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "290.96, 289.739, 117.08, 0.5012", "290.542, 289.201, 117.42, 0.4646", "289.851, 288.311, 117.816, 0.3714", "289.159, 287.422, 118.27, 0.3222", "288.628, 286.455, 118.785, 0.3168", "288.249, 285.415, 119.361, 0.3472", "287.872, 284.374, 119.972, 0.4368", "287.509, 283.332, 120.6, 0.442", "287.186, 282.284, 121.23, 0.5462", "286.864, 281.236, 121.844, 0.5082", "286.54, 280.189, 122.426, 0.416", "286.145, 279.145, 122.897, 0.3524", "285.674, 278.108, 123.205, 0.3984", "285.202, 277.07, 123.397, 0.3748", "284.659, 276.082, 123.544, 0.4016", "283.902, 275.241, 123.751, 0.339", "283.146, 274.4, 124.026, 0.3094", "282.388, 273.559, 124.375, 0.292", "281.495, 272.908, 124.804, 0.3066", "280.514, 272.375, 125.294, 0.3348", "279.535, 271.843, 125.813, 0.3828", "278.555, 271.311, 126.338, 0.4912", "277.635, 270.659, 126.842, 0.599", "276.661, 270.094, 127.293, 0.564", "275.608, 269.65, 127.657, 0.4962", "274.711, 269.049, 128.044, 0.3838", "273.971, 268.291, 128.496, 0.3402", "273.466, 267.282, 128.915, 0.3746", "272.958, 266.265, 129.269, 0.3358", "272.477, 265.228, 129.539, 0.3036", "272.052, 264.167, 129.745, 0.2814", "271.628, 263.104, 129.902, 0.2872", "271.202, 262.042, 130.036, 0.299", "270.773, 260.983, 130.181, 0.3146", "270.174, 260.044, 130.436, 0.3744", "269.577, 259.103, 130.776, 0.3358", "268.978, 258.163, 131.169, 0.3036", "268.419, 257.186, 131.55, 0.2814", "267.908, 256.163, 131.862, 0.2872", "267.396, 255.139, 132.118, 0.299", "266.885, 254.117, 132.329, 0.3144", "266.341, 253.121, 132.546, 0.374", "265.71, 252.204, 132.847, 0.335", "265.078, 251.286, 133.22, 0.302", "264.448, 250.369, 133.648, 0.2784", "263.562, 249.693, 134.045, 0.2818", "262.577, 249.113, 134.391, 0.2878", "261.732, 248.343, 134.707, 0.3002", "260.902, 247.556, 135.021, 0.3168", "260.094, 246.748, 135.377, 0.3786", "259.67, 245.818, 135.887, 0.3434", "259.48, 244.811, 136.587, 0.3172" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_31",
    "id" : "apic_31",
    "points3d" : [ "230.548, 267.325, 134.189, 0.3872", "230.12, 266.96, 134.193, 0.359", "229.25, 266.218, 134.19, 0.3486", "228.379, 265.475, 134.186, 0.3542", "227.508, 264.734, 134.181, 0.4734", "226.626, 264.005, 134.174, 0.3952", "225.733, 263.29, 134.163, 0.3292", "224.841, 262.577, 134.149, 0.2814", "223.947, 261.862, 134.13, 0.2872", "223.031, 261.176, 134.101, 0.299", "222.095, 260.518, 134.06, 0.3148", "221.159, 259.861, 134.006, 0.3746", "220.223, 259.203, 133.94, 0.336", "219.285, 258.575, 133.826, 0.3038", "218.345, 257.977, 133.644, 0.2818", "217.405, 257.379, 133.43, 0.2876", "216.465, 256.781, 133.218, 0.3", "215.547, 256.171, 133.219, 0.3164", "214.63, 255.56, 133.409, 0.3776", "213.714, 254.95, 133.748, 0.3416", "213.102, 254.0, 134.113, 0.3142", "212.462, 253.073, 134.466, 0.3006", "211.475, 252.503, 134.785, 0.3236", "210.523, 251.905, 135.071, 0.3624", "209.74, 251.193, 135.428, 0.4526", "208.697, 250.938, 135.76, 0.5316", "207.903, 250.305, 135.892, 0.4186", "207.335, 249.401, 135.924, 0.3254", "206.442, 248.686, 135.937, 0.2746", "205.501, 248.041, 135.944, 0.2746", "204.508, 247.471, 135.953, 0.2748", "203.539, 246.889, 136.027, 0.2748", "202.599, 246.291, 136.208, 0.2752", "201.643, 245.704, 136.428, 0.2756", "200.722, 245.186, 136.645, 0.2766", "200.298, 244.199, 136.655, 0.2782", "200.13, 243.081, 136.598, 0.2814", "200.13, 241.948, 136.45, 0.287", "200.13, 240.819, 136.221, 0.2988", "200.13, 239.687, 135.974, 0.3142", "200.13, 238.55, 135.768, 0.3734", "200.13, 237.461, 135.54, 0.3338", "200.112, 236.326, 135.428, 0.3", "199.51, 235.465, 135.546, 0.2746", "199.255, 234.411, 135.714, 0.2746", "199.177, 233.27, 135.912, 0.2746", "198.848, 232.195, 136.192, 0.2746", "198.458, 231.138, 136.547, 0.2746", "198.374, 229.999, 136.872, 0.2746", "198.292, 228.859, 137.177, 0.2746", "198.014, 227.859, 137.654, 0.2746", "197.708, 226.845, 138.226, 0.2746", "197.288, 225.783, 138.742, 0.2746", "196.921, 224.711, 139.222, 0.2746", "196.901, 223.574, 139.699, 0.2748", "196.881, 222.437, 140.179, 0.2748", "196.892, 221.308, 140.687, 0.2752", "196.92, 220.182, 141.266, 0.2756", "196.904, 219.081, 141.965, 0.2766", "196.881, 217.984, 142.761, 0.2782", "196.728, 217.038, 143.72, 0.2814", "196.499, 216.18, 144.839, 0.287", "196.465, 215.341, 146.077, 0.2988", "196.113, 214.359, 147.195, 0.314", "196.008, 213.312, 148.002, 0.3734", "196.008, 212.509, 148.937, 0.3338", "196.229, 211.613, 149.837, 0.2998", "197.005, 211.578, 150.795, 0.2744", "197.829, 211.557, 151.751, 0.2742", "198.298, 210.699, 152.476, 0.274", "198.076, 210.089, 152.623, 0.2736", "197.774, 209.188, 152.434, 0.2728", "197.517, 208.088, 152.179, 0.2712", "197.381, 206.953, 151.916, 0.2684", "197.381, 205.818, 151.749, 0.2626", "197.587, 204.758, 151.749, 0.2542", "198.112, 203.816, 151.664, 0.2288", "198.756, 202.878, 151.461, 0.2288" ],
    "parent" : "apic_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_26",
    "id" : "apic_26",
    "points3d" : [ "230.548, 267.325, 134.189, 0.3872", "231.043, 267.591, 135.69, 0.4576", "229.999, 267.424, 136.488, 0.3662", "229.075, 267.084, 136.922, 0.3124", "227.969, 266.959, 137.363, 0.2988", "226.84, 266.786, 137.721, 0.3142", "225.718, 266.585, 138.009, 0.3734", "224.614, 266.585, 138.341, 0.334", "223.501, 266.645, 138.658, 0.3", "222.37, 266.815, 138.892, 0.2746", "221.238, 266.986, 139.086, 0.2748", "220.103, 266.992, 139.214, 0.2748", "219.102, 266.575, 139.341, 0.2752", "218.393, 265.902, 139.668, 0.2758", "217.647, 265.123, 139.972, 0.2766", "217.06, 264.222, 140.193, 0.2786", "216.294, 263.608, 140.627, 0.2818", "215.858, 263.279, 141.385, 0.2882", "215.142, 262.566, 142.11, 0.2996", "214.326, 261.954, 142.518, 0.323", "213.905, 260.984, 142.868, 0.3538", "213.513, 260.021, 143.263, 0.4726" ],
    "parent" : "apic_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_22",
    "id" : "apic_22",
    "points3d" : [ "259.48, 244.811, 136.587, 0.3172", "259.202, 245.417, 136.316, 0.4576", "258.29, 245.891, 136.035, 0.3728", "257.147, 245.917, 135.943, 0.325", "256.007, 245.858, 135.891, 0.3208", "254.941, 245.441, 135.878, 0.362", "253.879, 245.016, 135.902, 0.4282", "252.814, 244.623, 135.98, 0.6006", "251.736, 244.315, 136.161, 0.679", "250.64, 244.094, 136.375, 0.6222", "249.496, 244.094, 136.546, 0.5828", "248.369, 243.992, 136.669, 0.4194", "247.288, 243.632, 136.726, 0.3268", "246.255, 243.19, 136.798, 0.277", "245.256, 242.692, 136.933, 0.279", "244.225, 242.241, 137.013, 0.283", "243.181, 241.806, 137.03, 0.2902", "242.214, 241.226, 137.006, 0.3032", "241.227, 240.701, 136.986, 0.3298", "240.13, 240.475, 137.098, 0.3664", "239.322, 240.087, 137.462, 0.4956", "238.42, 239.539, 137.897, 0.4374", "237.596, 238.747, 138.251, 0.4034", "236.759, 237.98, 138.5, 0.4392", "235.778, 237.447, 138.571, 0.4818", "234.839, 236.842, 138.52, 0.4474", "234.116, 235.972, 138.454, 0.4782", "233.377, 235.132, 138.452, 0.5322", "232.551, 234.583, 138.656, 0.4196", "231.534, 234.075, 138.869, 0.3274", "230.756, 233.333, 138.928, 0.2782", "229.66, 233.113, 138.911, 0.2814", "228.616, 232.86, 138.811, 0.287", "227.802, 232.156, 138.825, 0.2988", "226.983, 231.461, 138.749, 0.3142", "226.059, 230.813, 138.787, 0.3734", "225.061, 230.284, 138.885, 0.3338", "224.0, 229.858, 138.983, 0.3", "222.958, 229.39, 139.073, 0.2746", "221.95, 228.85, 139.149, 0.2746", "221.056, 228.183, 139.235, 0.2746", "220.427, 227.228, 139.324, 0.2746", "219.832, 226.253, 139.441, 0.2746", "219.322, 225.233, 139.615, 0.2746", "218.741, 224.263, 139.851, 0.2746", "217.984, 223.422, 140.165, 0.2746", "217.345, 222.5, 140.535, 0.2746", "216.838, 221.488, 140.946, 0.2746", "216.585, 220.429, 141.425, 0.2746", "216.115, 219.53, 142.007, 0.2746", "215.515, 218.57, 142.54, 0.2746", "214.785, 217.99, 142.879, 0.2746" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "259.48, 244.811, 136.587, 0.3172", "259.411, 244.25, 137.466, 0.3078", "258.918, 243.42, 138.389, 0.3306", "258.224, 242.551, 139.24, 0.4052", "257.528, 241.681, 140.003, 0.3876", "256.802, 240.838, 140.661, 0.425", "255.896, 240.145, 141.179, 0.383", "254.99, 239.452, 141.602, 0.388", "254.082, 238.758, 141.977, 0.4528", "253.253, 238.007, 142.36, 0.5322", "252.585, 237.133, 142.81, 0.4198", "251.955, 236.238, 143.32, 0.3278", "251.399, 235.305, 143.887, 0.2788", "250.658, 234.477, 144.339, 0.2824" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_28",
    "id" : "apic_28",
    "points3d" : [ "213.513, 260.021, 143.263, 0.4726", "212.71, 259.304, 143.6, 0.3938", "211.887, 258.549, 143.869, 0.3266", "211.1, 257.762, 144.007, 0.2768", "210.251, 257.125, 144.038, 0.2786", "209.309, 256.523, 144.082, 0.282", "208.301, 256.416, 144.365, 0.2882", "207.54, 256.009, 144.934, 0.3008", "206.675, 255.595, 145.649, 0.318", "205.715, 254.976, 146.253, 0.3806", "204.779, 254.318, 146.737, 0.347", "203.844, 253.66, 147.09, 0.3254" ],
    "parent" : "apic_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_27",
    "id" : "apic_27",
    "points3d" : [ "213.513, 260.021, 143.263, 0.4726", "212.799, 259.575, 143.659, 0.2288", "212.133, 259.504, 145.163, 0.2764", "211.888, 260.594, 145.77, 0.2778", "210.946, 260.881, 146.388, 0.2808", "210.211, 260.182, 147.13, 0.286", "209.194, 260.17, 147.96, 0.2958", "208.337, 260.615, 148.872, 0.3138", "207.485, 261.285, 149.682, 0.3488", "206.57, 261.971, 150.331, 0.404", "205.649, 262.624, 150.878, 0.555", "204.688, 263.06, 151.471, 0.5978", "203.693, 263.502, 152.053, 0.4564", "202.642, 263.953, 152.552, 0.3496", "201.662, 264.438, 153.061, 0.3142", "200.806, 264.987, 153.677, 0.3734", "199.804, 265.438, 154.223, 0.3338", "198.733, 265.842, 154.64, 0.3", "197.704, 266.319, 154.991, 0.2746", "196.707, 266.857, 155.317, 0.2746", "195.83, 267.416, 155.623, 0.2746", "194.74, 267.204, 155.771, 0.2746", "193.714, 267.307, 155.974, 0.2746", "192.627, 267.459, 156.202, 0.2748", "191.614, 267.937, 156.462, 0.2748", "191.073, 268.716, 156.956, 0.275", "190.964, 269.542, 157.721, 0.2754", "190.686, 269.557, 158.767, 0.2762", "190.0, 269.856, 159.812, 0.2778", "189.301, 270.551, 160.72, 0.2806", "188.603, 270.863, 161.085, 0.2852", "187.848, 271.658, 161.212, 0.2966", "186.799, 271.983, 161.238, 0.305", "185.68, 272.03, 161.276, 0.3814", "184.559, 272.03, 161.634, 0.2288" ],
    "parent" : "apic_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_24",
    "id" : "apic_24",
    "points3d" : [ "214.785, 217.99, 142.879, 0.2746", "214.785, 217.219, 143.447, 0.2746", "215.033, 216.255, 144.185, 0.2746", "215.609, 215.67, 145.11, 0.2746", "215.983, 214.94, 146.129, 0.2746", "216.158, 214.018, 147.112, 0.2746", "216.158, 213.19, 148.019, 0.2746", "216.158, 212.084, 148.532, 0.2746", "215.741, 211.157, 148.537, 0.2746", "215.077, 211.121, 147.88, 0.2746", "214.398, 211.121, 146.782, 0.2746", "214.632, 211.121, 145.331, 0.2746", "214.577, 211.001, 143.727, 0.2746", "214.596, 210.404, 142.268, 0.2746", "215.35, 209.597, 141.295, 0.2746", "215.7, 208.568, 140.85, 0.2746", "215.701, 207.452, 140.802, 0.2746", "215.953, 206.473, 141.16, 0.2746", "216.264, 205.502, 141.744, 0.2746", "216.834, 204.567, 142.356, 0.2746", "217.349, 203.548, 142.804, 0.2746", "217.861, 202.526, 143.085, 0.2746", "218.832, 201.993, 143.217, 0.2746", "219.391, 201.047, 143.149, 0.2746", "219.682, 200.167, 143.054, 0.2746", "220.31, 199.451, 143.085, 0.2746", "221.017, 198.825, 142.831, 0.2746", "221.717, 198.397, 142.328, 0.2746", "222.485, 197.676, 141.982, 0.2746", "223.436, 197.043, 141.665, 0.2746", "224.451, 197.092, 141.22, 0.2746", "225.009, 197.088, 140.527, 0.2746", "225.306, 196.173, 139.886, 0.2746", "225.318, 195.034, 139.474, 0.2746", "225.318, 193.89, 139.252, 0.2746", "225.318, 192.994, 139.4, 0.2746", "225.439, 192.182, 139.923, 0.2746", "226.03, 191.253, 140.456, 0.2746", "226.64, 190.359, 140.995, 0.2746", "226.479, 189.39, 141.334, 0.2746", "226.291, 188.269, 141.494, 0.2746", "226.203, 187.135, 141.532, 0.2746", "226.203, 185.992, 141.523, 0.2746", "226.203, 184.848, 141.526, 0.2746", "225.895, 183.763, 141.555, 0.2746", "225.47, 182.701, 141.634, 0.2746", "224.996, 181.66, 141.765, 0.2744", "224.734, 180.562, 141.944, 0.2744", "224.199, 179.631, 142.213, 0.2742", "223.436, 178.876, 142.638, 0.274", "222.413, 178.399, 143.106, 0.2736", "222.041, 177.72, 143.791, 0.2728", "221.358, 176.886, 144.423, 0.2712", "220.271, 176.75, 145.028, 0.2684", "219.327, 176.434, 145.642, 0.2626", "218.342, 175.887, 146.153, 0.2542", "217.255, 175.583, 146.525, 0.2288", "216.13, 175.376, 146.94, 0.2288" ],
    "parent" : "apic_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_23",
    "id" : "apic_23",
    "points3d" : [ "214.785, 217.99, 142.879, 0.2746", "213.815, 217.789, 140.443, 0.2288", "212.738, 217.54, 141.648, 0.2746", "211.68, 217.283, 142.171, 0.2746", "210.621, 217.027, 142.816, 0.2746", "209.561, 216.771, 143.55, 0.2744", "208.55, 216.292, 144.26, 0.2744", "207.772, 215.54, 145.034, 0.2742", "207.02, 214.767, 145.864, 0.274", "206.269, 213.994, 146.736, 0.2736", "205.504, 213.247, 147.65, 0.2728", "204.697, 212.585, 148.636, 0.2712", "203.891, 211.923, 149.654, 0.2684", "203.016, 211.439, 150.65, 0.2626", "201.955, 211.451, 151.586, 0.2542", "200.894, 211.464, 152.445, 0.2288", "199.833, 211.476, 154.094, 0.2288" ],
    "parent" : "apic_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "250.658, 234.477, 144.339, 0.2824", "250.421, 234.53, 144.737, 0.2892", "249.309, 234.782, 145.123, 0.3016", "248.195, 235.035, 145.507, 0.3258", "247.241, 235.367, 146.044, 0.3652", "246.317, 235.704, 146.73, 0.4634", "245.197, 235.794, 147.405, 0.5234", "244.078, 235.932, 148.043, 0.5422", "242.962, 236.143, 148.628, 0.5664", "241.89, 236.309, 149.071, 0.436", "240.859, 235.989, 149.496, 0.3572", "240.017, 236.092, 150.124, 0.3354", "239.726, 237.145, 150.809, 0.3778", "238.969, 237.871, 151.592, 0.512", "238.074, 238.534, 152.421, 0.4922", "236.985, 238.749, 153.275, 0.385", "236.386, 239.588, 154.198, 0.3006", "235.567, 239.729, 155.183, 0.2756", "235.057, 239.977, 156.357, 0.2766", "234.736, 240.721, 157.564, 0.2782", "234.019, 241.499, 158.608, 0.2814" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "250.658, 234.477, 144.339, 0.2824", "250.591, 234.097, 144.026, 0.2288", "250.505, 233.031, 145.016, 0.3084", "250.505, 232.154, 145.572, 0.3378", "250.313, 231.121, 146.102, 0.3888", "249.971, 230.073, 146.621, 0.501", "249.503, 229.137, 147.239, 0.6244", "249.135, 228.142, 147.9, 0.5758", "249.242, 227.055, 148.522, 0.6894", "249.645, 226.004, 148.94, 0.5978", "249.987, 224.938, 149.221, 0.5214", "249.535, 224.091, 149.675, 0.3834", "249.164, 223.204, 150.249, 0.3396", "249.352, 222.263, 150.902, 0.3736", "249.924, 221.311, 151.447, 0.334", "250.048, 220.255, 151.751, 0.3004", "250.048, 219.156, 151.881, 0.2752", "250.048, 218.046, 151.945, 0.2758", "250.11, 217.048, 152.195, 0.2766", "250.455, 216.159, 152.655, 0.2786" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_30",
    "id" : "apic_30",
    "points3d" : [ "203.844, 253.66, 147.09, 0.3254", "204.061, 252.901, 145.266, 0.2288", "204.264, 252.043, 144.14, 0.2752", "204.462, 251.057, 143.652, 0.2756", "204.694, 250.123, 143.137, 0.2766", "204.71, 249.075, 142.845, 0.2782", "204.71, 248.378, 143.075, 0.2814", "204.682, 247.314, 143.547, 0.2872", "204.149, 246.486, 143.989, 0.299", "203.842, 245.923, 144.485, 0.3144", "203.307, 245.115, 145.181, 0.374", "202.832, 244.179, 145.893, 0.335", "202.129, 243.942, 146.674, 0.3022", "201.098, 243.793, 147.469, 0.2784", "200.001, 243.469, 148.18, 0.2818", "199.526, 242.484, 148.825, 0.288", "198.793, 241.678, 149.475, 0.3004", "198.096, 240.851, 150.061, 0.3172", "197.811, 240.346, 150.971, 0.3792", "197.343, 239.629, 152.093, 0.3444", "196.75, 238.88, 153.36, 0.3194", "195.959, 238.272, 154.678, 0.3114", "195.081, 237.73, 155.994, 0.3388", "194.205, 237.437, 157.349, 0.414", "193.26, 237.212, 158.639, 0.4346", "192.182, 237.042, 159.782, 0.3628", "191.422, 236.309, 160.888, 0.3066", "190.362, 236.296, 161.999, 0.2864", "189.296, 236.117, 163.042, 0.2978", "188.845, 235.686, 164.319, 0.3122", "188.703, 235.014, 165.768, 0.37", "188.866, 234.186, 167.244, 0.3276", "189.593, 233.331, 168.496, 0.2882", "190.094, 232.708, 169.693, 0.2542", "190.422, 232.199, 170.911, 0.2288", "190.97, 231.271, 172.937, 0.2288" ],
    "parent" : "apic_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_29",
    "id" : "apic_29",
    "points3d" : [ "203.844, 253.66, 147.09, 0.3254", "203.534, 253.318, 147.385, 0.3164", "203.025, 252.347, 147.67, 0.3776", "202.05, 251.847, 147.834, 0.3416", "201.158, 251.279, 148.034, 0.3144", "200.174, 250.71, 148.247, 0.3012", "199.292, 249.993, 148.45, 0.325", "198.262, 249.884, 148.651, 0.3634", "197.327, 250.432, 148.954, 0.4616", "196.479, 251.069, 149.407, 0.5124", "195.689, 251.82, 149.881, 0.558", "194.938, 252.681, 150.277, 0.4206", "194.227, 253.558, 150.666, 0.329", "193.248, 253.872, 151.049, 0.2814", "192.47, 254.422, 151.466, 0.287", "191.714, 255.009, 151.618, 0.2988", "190.64, 255.39, 151.863, 0.3142", "189.675, 255.543, 152.336, 0.3734", "188.754, 255.888, 153.001, 0.3338", "188.072, 256.71, 153.727, 0.3", "187.077, 256.904, 154.559, 0.2746", "186.162, 256.925, 155.503, 0.2746", "185.029, 257.037, 156.259, 0.2746", "184.109, 257.63, 156.812, 0.2746", "183.406, 258.521, 157.228, 0.2746", "182.74, 259.436, 157.57, 0.2748", "181.724, 259.702, 157.844, 0.2748", "180.728, 260.181, 158.037, 0.2752", "180.423, 261.237, 158.176, 0.2756", "179.687, 262.041, 158.328, 0.2766", "178.852, 262.821, 158.429, 0.2782", "177.75, 263.07, 158.439, 0.2814", "176.867, 263.786, 158.439, 0.287", "176.02, 264.555, 158.439, 0.2988", "175.474, 265.518, 158.507, 0.314", "174.998, 266.527, 158.636, 0.3734", "174.498, 267.481, 158.674, 0.3338", "173.744, 268.31, 158.614, 0.2996", "173.078, 269.203, 158.483, 0.274", "172.48, 270.143, 158.319, 0.2736", "171.948, 271.147, 158.234, 0.2728", "171.374, 272.135, 158.281, 0.2712", "170.378, 272.532, 158.582, 0.2684", "169.466, 272.823, 159.092, 0.2626", "168.687, 273.425, 159.771, 0.2542", "167.775, 273.948, 160.465, 0.2288", "166.698, 274.32, 161.634, 0.2288" ],
    "parent" : "apic_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_21",
    "id" : "apic_21",
    "points3d" : [ "234.019, 241.499, 158.608, 0.2814", "233.731, 241.903, 159.376, 0.287", "232.751, 242.242, 159.894, 0.2988", "231.713, 242.037, 160.26, 0.3142", "230.63, 241.957, 160.355, 0.3734", "229.57, 242.199, 160.243, 0.3338", "228.576, 242.594, 159.989, 0.3", "227.484, 242.665, 159.639, 0.2746", "226.385, 242.764, 159.269, 0.2746", "225.257, 242.955, 159.003, 0.2746", "224.129, 243.146, 158.854, 0.2748", "223.11, 243.595, 158.886, 0.2748", "222.112, 244.094, 159.071, 0.2752", "221.266, 244.864, 159.272, 0.2756", "220.415, 245.626, 159.47, 0.2766", "219.323, 245.968, 159.652, 0.2782", "218.231, 246.309, 159.822, 0.2814", "217.158, 246.587, 160.065, 0.287", "216.089, 246.848, 160.388, 0.2988", "215.129, 247.417, 160.721, 0.3142", "214.192, 248.051, 161.03, 0.3734", "213.166, 248.536, 161.255, 0.3338", "212.082, 248.674, 161.47, 0.3", "211.022, 248.755, 161.456, 0.2746", "210.038, 249.138, 161.278, 0.2746", "209.016, 249.65, 161.138, 0.2746", "207.992, 250.16, 161.058, 0.2746", "206.962, 250.606, 161.127, 0.2746", "206.023, 251.131, 161.27, 0.2746", "205.309, 251.932, 161.358, 0.2746", "204.307, 252.302, 161.582, 0.2746", "203.322, 252.497, 162.003, 0.2746", "202.266, 252.853, 162.427, 0.2746", "201.144, 253.068, 162.788, 0.2746", "200.044, 253.195, 163.127, 0.2746", "199.02, 252.887, 163.53, 0.2746", "197.915, 252.818, 163.912, 0.2746", "196.99, 253.121, 164.151, 0.2746", "195.9, 253.239, 164.316, 0.2746", "194.803, 253.467, 164.526, 0.2746", "193.726, 253.775, 164.797, 0.2746", "192.606, 253.951, 165.057, 0.2746", "191.469, 254.072, 165.296, 0.2746", "190.363, 254.169, 165.561, 0.2746", "189.403, 254.328, 165.974, 0.2746", "188.474, 254.912, 166.342, 0.2746", "187.547, 255.58, 166.577, 0.2746", "186.732, 256.255, 166.599, 0.2746", "185.812, 256.922, 166.555, 0.2746", "185.36, 257.834, 166.497, 0.2746", "184.336, 257.834, 166.583, 0.2746", "183.321, 257.834, 166.637, 0.2746", "182.352, 258.037, 166.449, 0.2746", "181.359, 258.539, 166.216, 0.2746", "180.424, 259.154, 165.907, 0.2746", "179.482, 259.775, 165.574, 0.2746", "178.533, 260.41, 165.273, 0.2746", "177.755, 261.246, 165.074, 0.2746", "176.956, 262.064, 164.96, 0.2746", "176.134, 262.86, 164.879, 0.2746", "175.273, 263.612, 164.815, 0.2746", "174.381, 264.327, 164.743, 0.2746", "173.41, 264.914, 164.632, 0.2746", "172.373, 265.393, 164.466, 0.2746", "171.426, 265.988, 164.22, 0.2746", "170.469, 266.462, 164.046, 0.2746", "169.561, 266.904, 163.662, 0.2746", "168.818, 267.68, 163.217, 0.2746", "168.23, 268.636, 162.812, 0.2746", "167.747, 269.643, 162.422, 0.2746", "166.761, 269.74, 161.921, 0.2746", "165.668, 269.721, 161.458, 0.2746", "164.594, 269.507, 161.253, 0.2746", "163.526, 269.531, 161.135, 0.2746", "162.934, 270.344, 160.915, 0.2746", "162.144, 271.104, 160.758, 0.2746", "161.074, 271.511, 160.665, 0.2746", "160.006, 271.918, 160.595, 0.2746", "158.911, 272.25, 160.536, 0.2746", "157.782, 272.418, 160.505, 0.2746", "156.689, 272.742, 160.504, 0.2744", "155.857, 273.5, 160.504, 0.2744", "155.306, 274.5, 160.504, 0.2742", "154.707, 275.475, 160.504, 0.274", "154.245, 276.501, 160.504, 0.2736", "153.77, 277.363, 160.504, 0.2728", "152.665, 277.653, 160.504, 0.2712", "151.562, 277.912, 160.504, 0.2684", "150.419, 277.946, 160.504, 0.2626", "149.275, 277.946, 160.504, 0.2542", "148.131, 277.946, 160.504, 0.2288", "146.987, 277.946, 160.504, 0.2288" ],
    "parent" : "apic_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_20",
    "id" : "apic_20",
    "points3d" : [ "234.019, 241.499, 158.608, 0.2814", "233.66, 242.443, 161.105, 0.2288", "233.282, 243.438, 162.588, 0.3734", "232.768, 244.373, 163.221, 0.3338", "232.041, 245.216, 163.939, 0.3", "231.715, 246.243, 164.699, 0.2746", "231.356, 247.008, 165.632, 0.2746", "231.902, 247.874, 166.564, 0.2746", "232.592, 248.366, 167.601, 0.2746", "232.941, 249.221, 168.65, 0.2744", "233.656, 249.54, 169.716, 0.2744", "234.693, 249.136, 170.565, 0.2742", "235.711, 248.727, 171.114, 0.274", "236.591, 248.267, 171.337, 0.2736", "237.507, 247.795, 171.382, 0.2728", "238.317, 247.343, 171.711, 0.2712", "239.095, 247.3, 172.418, 0.2684", "239.766, 247.3, 173.453, 0.2626", "240.274, 247.3, 174.738, 0.2542", "241.062, 247.3, 176.03, 0.2288", "241.804, 246.842, 177.458, 0.2288" ],
    "parent" : "apic_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "250.455, 216.159, 152.655, 0.2786", "250.365, 215.483, 153.507, 0.4576", "250.231, 214.458, 154.531, 0.557", "250.048, 213.665, 155.094, 0.4186" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "250.455, 216.159, 152.655, 0.2786", "250.92, 216.046, 153.202, 0.2818", "251.934, 215.798, 153.901, 0.2882", "253.025, 215.7, 154.583, 0.2994", "254.163, 215.7, 155.187, 0.3228", "255.144, 215.629, 155.839, 0.3536", "255.93, 215.304, 156.358, 0.4724", "256.443, 216.04, 156.736, 0.3932", "256.885, 216.159, 157.434, 0.3254", "257.765, 216.159, 158.241, 0.2746", "258.866, 216.159, 158.937, 0.2748", "259.935, 215.893, 159.381, 0.275", "260.921, 215.453, 159.575, 0.2752", "261.816, 214.923, 159.607, 0.2758", "262.732, 214.277, 159.629, 0.277", "263.437, 213.426, 159.806, 0.279", "263.996, 212.547, 160.184, 0.2828", "264.659, 212.022, 160.817, 0.2898", "265.566, 211.577, 161.468, 0.3038", "266.159, 210.599, 161.97, 0.3234", "266.956, 209.826, 162.251, 0.3908", "267.782, 209.083, 162.346, 0.3658", "268.609, 208.4, 162.399, 0.3612", "269.746, 208.303, 162.444, 0.3786", "270.198, 207.572, 162.711, 0.5134", "270.198, 206.706, 163.223, 0.495", "270.483, 205.697, 163.631, 0.39", "271.117, 205.625, 163.656, 0.3098", "272.159, 205.329, 163.645, 0.2926", "273.147, 204.824, 163.788, 0.308", "273.948, 204.442, 164.268, 0.3372", "274.659, 203.736, 164.967, 0.3874", "275.436, 203.114, 165.887, 0.5008", "276.188, 202.513, 166.967, 0.6106", "276.747, 201.738, 168.077, 0.6164", "277.467, 200.87, 168.988, 0.444", "278.243, 200.033, 169.676, 0.3254", "278.909, 199.109, 170.244, 0.2746", "279.336, 198.133, 170.79, 0.2746", "279.661, 197.229, 171.47, 0.2746", "279.821, 196.591, 172.075, 0.2746", "280.099, 195.481, 172.667, 0.2746", "280.579, 194.508, 173.277, 0.2746", "280.301, 193.641, 174.085, 0.2746", "280.502, 192.98, 175.15, 0.2746", "280.786, 192.428, 176.406, 0.2746", "281.096, 191.578, 177.702, 0.2746", "281.497, 190.542, 178.794, 0.2744", "282.053, 189.546, 179.629, 0.2744", "281.832, 188.701, 180.321, 0.2742", "281.553, 187.642, 180.917, 0.274", "281.278, 186.584, 181.451, 0.2736", "281.0, 185.526, 181.953, 0.2728", "280.424, 184.809, 182.316, 0.2712", "279.708, 183.916, 182.562, 0.2684", "279.014, 183.008, 182.707, 0.2626", "278.334, 182.088, 182.779, 0.2542", "277.854, 181.051, 182.802, 0.2288", "277.372, 180.012, 182.798, 0.2288" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "250.048, 213.665, 155.094, 0.4186", "250.048, 212.605, 155.56, 0.3254", "250.581, 211.708, 155.741, 0.2746", "251.388, 210.9, 155.81, 0.2746", "252.13, 210.061, 155.721, 0.2746", "252.831, 209.2, 155.507, 0.2746", "253.255, 208.138, 155.324, 0.2746", "253.68, 207.075, 155.227, 0.2746", "254.027, 205.986, 155.223, 0.2746", "254.37, 204.894, 155.285, 0.2746", "254.676, 203.799, 155.444, 0.2746", "254.968, 202.703, 155.69, 0.2746", "255.118, 201.608, 156.04, 0.2748", "255.611, 200.679, 156.462, 0.2748", "256.47, 200.016, 156.759, 0.2752", "257.516, 199.867, 157.071, 0.2756", "258.265, 200.029, 157.588, 0.2766", "258.092, 199.32, 158.331, 0.2782", "257.832, 198.35, 159.074, 0.2814", "257.884, 197.273, 159.546, 0.287", "257.838, 196.138, 159.867, 0.2988", "258.45, 195.267, 160.196, 0.314", "259.147, 194.431, 160.524, 0.3734", "259.902, 193.597, 160.787, 0.3338", "260.682, 192.764, 160.998, 0.3", "261.484, 191.949, 161.149, 0.2744", "262.293, 191.141, 161.224, 0.2744", "263.077, 190.617, 161.038, 0.2742", "263.988, 190.094, 160.905, 0.274", "264.921, 189.467, 160.862, 0.2736", "265.387, 188.51, 160.952, 0.2728", "265.747, 187.426, 161.05, 0.2712", "266.264, 186.434, 161.138, 0.2684", "266.939, 185.519, 161.196, 0.2626", "267.348, 184.46, 161.193, 0.2542", "267.45, 183.336, 161.109, 0.2288", "267.45, 182.269, 160.504, 0.2288" ],
    "parent" : "apic_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "250.048, 213.665, 155.094, 0.4186", "249.362, 213.258, 158.615, 0.2288", "248.386, 213.631, 159.785, 0.2746", "247.563, 214.19, 160.302, 0.2746", "246.794, 214.609, 161.003, 0.2746", "246.005, 215.376, 161.608, 0.2748", "245.374, 216.29, 161.978, 0.2748", "244.712, 217.168, 162.167, 0.2752", "244.321, 218.24, 162.291, 0.2756", "243.848, 219.253, 162.434, 0.2766", "243.167, 220.111, 162.727, 0.2782", "242.728, 221.062, 163.21, 0.2814", "242.282, 222.073, 163.798, 0.287", "241.736, 223.063, 164.373, 0.2988", "240.732, 223.548, 164.98, 0.314", "239.768, 223.97, 165.715, 0.3734", "239.016, 224.731, 166.513, 0.3338", "238.649, 225.692, 167.353, 0.2998", "238.924, 226.573, 168.354, 0.2742", "238.972, 227.65, 169.367, 0.274", "238.36, 228.428, 170.445, 0.2736", "237.677, 229.122, 171.577, 0.2728", "237.214, 229.849, 172.742, 0.2712", "236.767, 229.91, 174.026, 0.2684", "236.365, 230.322, 175.291, 0.2626", "235.567, 230.988, 176.075, 0.2542", "235.258, 232.014, 176.713, 0.2288", "234.934, 233.103, 177.458, 0.2288" ],
    "parent" : "apic_16",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_264",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_265",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_42", "dend_41", "dend_32", "dend_27", "dend_20", "dend_19", "dend_14", "dend_9", "dend_0", "apic_4", "apic_1", "dend_48", "dend_43", "dend_34", "dend_33", "dend_29", "dend_28", "dend_24", "dend_21", "dend_16", "dend_15", "dend_13", "dend_10", "dend_4", "dend_1", "apic_6", "apic_5", "apic_3", "apic_2", "dend_50", "dend_49", "dend_47", "dend_44", "dend_38", "dend_35", "dend_31", "dend_30", "dend_26", "dend_25", "dend_23", "dend_22", "dend_18", "dend_17", "dend_12", "dend_11", "dend_6", "dend_5", "dend_3", "dend_2", "apic_32", "apic_7", "dend_46", "dend_45", "dend_40", "dend_39", "dend_37", "dend_36", "dend_8", "dend_7", "apic_9", "apic_8", "apic_11", "apic_10", "apic_25", "apic_12", "apic_31", "apic_26", "apic_22", "apic_13", "apic_28", "apic_27", "apic_24", "apic_23", "apic_19", "apic_14", "apic_30", "apic_29", "apic_21", "apic_20", "apic_16", "apic_15", "apic_18", "apic_17" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_42", "dend_41", "dend_32", "dend_27", "dend_20", "dend_19", "dend_14", "dend_9", "dend_0", "dend_48", "dend_43", "dend_34", "dend_33", "dend_29", "dend_28", "dend_24", "dend_21", "dend_16", "dend_15", "dend_13", "dend_10", "dend_4", "dend_1", "dend_50", "dend_49", "dend_47", "dend_44", "dend_38", "dend_35", "dend_31", "dend_30", "dend_26", "dend_25", "dend_23", "dend_22", "dend_18", "dend_17", "dend_12", "dend_11", "dend_6", "dend_5", "dend_3", "dend_2", "dend_46", "dend_45", "dend_40", "dend_39", "dend_37", "dend_36", "dend_8", "dend_7" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_4", "apic_1", "apic_6", "apic_5", "apic_3", "apic_2", "apic_32", "apic_7", "apic_9", "apic_8", "apic_11", "apic_10", "apic_25", "apic_12", "apic_31", "apic_26", "apic_22", "apic_13", "apic_28", "apic_27", "apic_24", "apic_23", "apic_19", "apic_14", "apic_30", "apic_29", "apic_21", "apic_20", "apic_16", "apic_15", "apic_18", "apic_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10841",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "apic_9", "apic_9", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_16", "apic_16", "apic_16", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "dend",
    "value" : "2.0"
  }, {
    "group" : "apic",
    "value" : "2.0"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0041499287",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "9.927991E-5",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.19932647",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "8.594747E-4",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0024345957",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "5.0742977E-4",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0720436",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.011013924",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "2.8589647E-4",
    "erev" : "-76.950294"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "2.037068E-4",
    "erev" : "-76.950294"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "1.1581363E-5",
    "erev" : "-76.950294"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "6.7255314E-4",
    "erev" : "-76.950294"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "4.2996096E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.007396372",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_482655070",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_482655070

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: soma_0
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_4, id: apic_4, parent: apic_0
create apic_4
public apic_4
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_48, id: dend_48, parent: dend_42
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: apic_6, id: apic_6, parent: apic_4
create apic_6
public apic_6
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: apic_3, id: apic_3, parent: apic_1
create apic_3
public apic_3
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_43
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_32, id: apic_32, parent: apic_6
create apic_32
public apic_32
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: apic_9, id: apic_9, parent: apic_7
create apic_9
public apic_9
// Section: apic_8, id: apic_8, parent: apic_7
create apic_8
public apic_8
// Section: apic_11, id: apic_11, parent: apic_9
create apic_11
public apic_11
// Section: apic_10, id: apic_10, parent: apic_9
create apic_10
public apic_10
// Section: apic_25, id: apic_25, parent: apic_11
create apic_25
public apic_25
// Section: apic_12, id: apic_12, parent: apic_11
create apic_12
public apic_12
// Section: apic_31, id: apic_31, parent: apic_25
create apic_31
public apic_31
// Section: apic_26, id: apic_26, parent: apic_25
create apic_26
public apic_26
// Section: apic_22, id: apic_22, parent: apic_12
create apic_22
public apic_22
// Section: apic_13, id: apic_13, parent: apic_12
create apic_13
public apic_13
// Section: apic_28, id: apic_28, parent: apic_26
create apic_28
public apic_28
// Section: apic_27, id: apic_27, parent: apic_26
create apic_27
public apic_27
// Section: apic_24, id: apic_24, parent: apic_22
create apic_24
public apic_24
// Section: apic_23, id: apic_23, parent: apic_22
create apic_23
public apic_23
// Section: apic_19, id: apic_19, parent: apic_13
create apic_19
public apic_19
// Section: apic_14, id: apic_14, parent: apic_13
create apic_14
public apic_14
// Section: apic_30, id: apic_30, parent: apic_28
create apic_30
public apic_30
// Section: apic_29, id: apic_29, parent: apic_28
create apic_29
public apic_29
// Section: apic_21, id: apic_21, parent: apic_19
create apic_21
public apic_21
// Section: apic_20, id: apic_20, parent: apic_19
create apic_20
public apic_20
// Section: apic_16, id: apic_16, parent: apic_14
create apic_16
public apic_16
// Section: apic_15, id: apic_15, parent: apic_14
create apic_15
public apic_15
// Section: apic_18, id: apic_18, parent: apic_16
create apic_18
public apic_18
// Section: apic_17, id: apic_17, parent: apic_16
create apic_17
public apic_17

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_264, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_264
// Group: {name=ModelViewParmSubset_265, groups=[], sections=[apic_0, dend_42, dend_41, dend_32, dend_27, dend_20, dend_19, dend_14, dend_9, dend_0, apic_4, apic_1, dend_48, dend_43, dend_34, dend_33, dend_29, dend_28, dend_24, dend_21, dend_16, dend_15, dend_13, dend_10, dend_4, dend_1, apic_6, apic_5, apic_3, apic_2, dend_50, dend_49, dend_47, dend_44, dend_38, dend_35, dend_31, dend_30, dend_26, dend_25, dend_23, dend_22, dend_18, dend_17, dend_12, dend_11, dend_6, dend_5, dend_3, dend_2, apic_32, apic_7, dend_46, dend_45, dend_40, dend_39, dend_37, dend_36, dend_8, dend_7, apic_9, apic_8, apic_11, apic_10, apic_25, apic_12, apic_31, apic_26, apic_22, apic_13, apic_28, apic_27, apic_24, apic_23, apic_19, apic_14, apic_30, apic_29, apic_21, apic_20, apic_16, apic_15, apic_18, apic_17]}
objref ModelViewParmSubset_265
// Group: {name=dend, groups=[], sections=[dend_42, dend_41, dend_32, dend_27, dend_20, dend_19, dend_14, dend_9, dend_0, dend_48, dend_43, dend_34, dend_33, dend_29, dend_28, dend_24, dend_21, dend_16, dend_15, dend_13, dend_10, dend_4, dend_1, dend_50, dend_49, dend_47, dend_44, dend_38, dend_35, dend_31, dend_30, dend_26, dend_25, dend_23, dend_22, dend_18, dend_17, dend_12, dend_11, dend_6, dend_5, dend_3, dend_2, dend_46, dend_45, dend_40, dend_39, dend_37, dend_36, dend_8, dend_7]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=apic, groups=[], sections=[apic_0, apic_4, apic_1, apic_6, apic_5, apic_3, apic_2, apic_32, apic_7, apic_9, apic_8, apic_11, apic_10, apic_25, apic_12, apic_31, apic_26, apic_22, apic_13, apic_28, apic_27, apic_24, apic_23, apic_19, apic_14, apic_30, apic_29, apic_21, apic_20, apic_16, apic_15, apic_18, apic_17]}
objref apic
// Group: {name=OneSecGrp_SectionRef_10841, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_10841
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, apic_9, apic_9, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_482655070
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5000353331920038)
    connect apic_0(0), soma_0(0.5000353331920038)
    connect dend_42(0), soma_0(0.5000353331920038)
    connect dend_41(0), soma_0(0.5000353331920038)
    connect dend_32(0), soma_0(0.5000353331920038)
    connect dend_27(0), soma_0(0.5000353331920038)
    connect dend_20(0), soma_0(0.5000353331920038)
    connect dend_19(0), soma_0(0.5000353331920038)
    connect dend_14(0), soma_0(0.5000353331920038)
    connect dend_9(0), soma_0(0.5000353331920038)
    connect dend_0(0), soma_0(0.5000353331920038)
    connect axon_1(0), axon_0(1.0)
    connect apic_4(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_48(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect apic_6(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect apic_3(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_32(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect apic_9(0), apic_7(1.0)
    connect apic_8(0), apic_7(1.0)
    connect apic_11(0), apic_9(1.0)
    connect apic_10(0), apic_9(1.0)
    connect apic_25(0), apic_11(1.0)
    connect apic_12(0), apic_11(1.0)
    connect apic_31(0), apic_25(1.0)
    connect apic_26(0), apic_25(1.0)
    connect apic_22(0), apic_12(1.0)
    connect apic_13(0), apic_12(1.0)
    connect apic_28(0), apic_26(1.0)
    connect apic_27(0), apic_26(1.0)
    connect apic_24(0), apic_22(1.0)
    connect apic_23(0), apic_22(1.0)
    connect apic_19(0), apic_13(1.0)
    connect apic_14(0), apic_13(1.0)
    connect apic_30(0), apic_28(1.0)
    connect apic_29(0), apic_28(1.0)
    connect apic_21(0), apic_19(1.0)
    connect apic_20(0), apic_19(1.0)
    connect apic_16(0), apic_14(1.0)
    connect apic_15(0), apic_14(1.0)
    connect apic_18(0), apic_16(1.0)
    connect apic_17(0), apic_16(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 551.654, 542.828, 30.8, 14.1512 ) }
    soma_0 { pt3dadd( 558.73, 542.828, 30.8, 14.1512 ) }
    soma_0 { pt3dadd( 565.805, 542.828, 30.8, 14.1512 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 558.729, 542.828, 30.8, 1.0 ) }
    axon_0 { pt3dadd( 564.571, 556.644, 30.8, 1.0 ) }
    axon_0 { pt3dadd( 570.412, 570.46, 30.8, 1.0 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 6/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 558.138, 536.519, 33.0882, 1.876 ) }
    apic_0 { pt3dadd( 557.127, 536.184, 33.8402, 0.401 ) }
    apic_0 { pt3dadd( 556.193, 535.904, 34.6606, 0.386 ) }
    apic_0 { pt3dadd( 555.351, 535.351, 35.46, 0.3918 ) }
    apic_0 { pt3dadd( 554.684, 534.48, 35.915, 0.4672 ) }
    apic_0 { pt3dadd( 554.021, 533.551, 36.1376, 0.523 ) }
    apic_0 { pt3dadd( 553.643, 532.472, 36.2107, 0.5776 ) }
    apic_0 { pt3dadd( 553.25, 531.399, 36.1729, 0.4576 ) }
    apic_0 { pt3dadd( 552.624, 530.473, 36.0052, 0.3926 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 15/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 555.234, 547.388, 31.7904, 0.2288 ) }
    dend_42 { pt3dadd( 554.547, 548.303, 32.191, 0.343 ) }
    dend_42 { pt3dadd( 553.512, 548.808, 32.4341, 0.3918 ) }
    dend_42 { pt3dadd( 552.544, 549.655, 32.7379, 0.5388 ) }
    dend_42 { pt3dadd( 551.797, 550.428, 32.9232, 0.537 ) }
    dend_42 { pt3dadd( 551.172, 551.351, 33.105, 0.4936 ) }
    dend_42 { pt3dadd( 550.323, 552.099, 33.1741, 0.3776 ) }
    dend_42 { pt3dadd( 549.299, 552.469, 33.129, 0.335 ) }
    dend_42 { pt3dadd( 548.197, 552.774, 33.045, 0.334 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 24/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 552.559, 542.495, 29.7629, 0.4742 ) }
    dend_41 { pt3dadd( 551.672, 542.542, 29.01, 0.3762 ) }
    dend_41 { pt3dadd( 550.633, 542.16, 28.3637, 0.394 ) }
    dend_41 { pt3dadd( 549.734, 541.475, 27.9029, 0.3734 ) }
    dend_41 { pt3dadd( 549.0, 540.645, 27.558, 0.3676 ) }
    dend_41 { pt3dadd( 548.315, 539.787, 27.2099, 0.4262 ) }
    dend_41 { pt3dadd( 547.453, 539.076, 26.9181, 0.4288 ) }
    dend_41 { pt3dadd( 546.445, 538.591, 26.7336, 0.4908 ) }
    dend_41 { pt3dadd( 545.37, 538.281, 26.5488, 0.5564 ) }
    dend_41 { pt3dadd( 544.288, 537.949, 26.3323, 0.4594 ) }
    dend_41 { pt3dadd( 543.232, 537.514, 26.1324, 0.4268 ) }
    dend_41 { pt3dadd( 542.193, 537.031, 25.9459, 0.3384 ) }
    dend_41 { pt3dadd( 541.268, 536.378, 25.745, 0.3084 ) }
    dend_41 { pt3dadd( 540.351, 535.718, 25.4825, 0.2902 ) }
    dend_41 { pt3dadd( 539.44, 535.298, 25.0565, 0.3032 ) }
    dend_41 { pt3dadd( 538.471, 534.867, 24.564, 0.3286 ) }
    dend_41 { pt3dadd( 537.391, 534.614, 24.0863, 0.3702 ) }
    dend_41 { pt3dadd( 536.284, 534.506, 23.77, 0.4742 ) }
    dend_41 { pt3dadd( 535.201, 534.2, 23.5636, 0.537 ) }
    dend_41 { pt3dadd( 534.172, 533.772, 23.3465, 0.5982 ) }
    dend_41 { pt3dadd( 533.122, 533.345, 23.1696, 0.5206 ) }
    dend_41 { pt3dadd( 531.999, 533.221, 23.0402, 0.3906 ) }
    dend_41 { pt3dadd( 530.856, 533.194, 22.9313, 0.3108 ) }
    dend_41 { pt3dadd( 529.719, 533.072, 22.8223, 0.2944 ) }
    dend_41 { pt3dadd( 528.714, 532.569, 22.7196, 0.3128 ) }
    dend_41 { pt3dadd( 527.718, 532.007, 22.6205, 0.3396 ) }
    dend_41 { pt3dadd( 526.706, 531.477, 22.4883, 0.4228 ) }
    dend_41 { pt3dadd( 525.776, 530.893, 22.2402, 0.415 ) }
    dend_41 { pt3dadd( 524.737, 530.471, 21.9443, 0.5014 ) }
    dend_41 { pt3dadd( 523.729, 530.659, 21.7892, 0.4 ) }
    dend_41 { pt3dadd( 522.663, 530.84, 21.5695, 0.3378 ) }
    dend_41 { pt3dadd( 521.581, 530.608, 21.2632, 0.2986 ) }
    dend_41 { pt3dadd( 520.601, 530.139, 20.8514, 0.3138 ) }
    dend_41 { pt3dadd( 519.698, 530.307, 20.2906, 0.3728 ) }
    dend_41 { pt3dadd( 518.956, 530.992, 19.6846, 0.3328 ) }
    dend_41 { pt3dadd( 518.187, 531.358, 19.0152, 0.2982 ) }
    dend_41 { pt3dadd( 517.075, 531.362, 18.6828, 0.2712 ) }
    dend_41 { pt3dadd( 516.007, 531.205, 18.7777, 0.2684 ) }
    dend_41 { pt3dadd( 514.932, 530.981, 19.1731, 0.2626 ) }
    dend_41 { pt3dadd( 514.464, 530.713, 20.0211, 0.2542 ) }
    dend_41 { pt3dadd( 514.111, 529.701, 20.9454, 0.2288 ) }
    dend_41 { pt3dadd( 513.443, 529.186, 23.305, 0.2288 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 66/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 553.062, 543.556, 33.0702, 0.2288 ) }
    dend_32 { pt3dadd( 552.414, 544.187, 33.0767, 0.2984 ) }
    dend_32 { pt3dadd( 551.339, 543.813, 33.0747, 0.3194 ) }
    dend_32 { pt3dadd( 550.206, 543.744, 33.0579, 0.3538 ) }
    dend_32 { pt3dadd( 549.068, 543.735, 33.1027, 0.4412 ) }
    dend_32 { pt3dadd( 547.927, 543.685, 33.1604, 0.4872 ) }
    dend_32 { pt3dadd( 546.831, 543.384, 33.25, 0.4496 ) }
    dend_32 { pt3dadd( 545.809, 542.955, 33.4144, 0.5184 ) }
    dend_32 { pt3dadd( 544.693, 542.722, 33.5334, 0.4328 ) }
    dend_32 { pt3dadd( 543.622, 542.325, 33.5726, 0.393 ) }
    dend_32 { pt3dadd( 542.534, 542.108, 33.4569, 0.4276 ) }
    dend_32 { pt3dadd( 541.403, 542.216, 33.2842, 0.4238 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 78/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 565.005, 543.76, 28.8702, 0.2288 ) }
    dend_27 { pt3dadd( 566.06, 544.12, 28.5645, 0.3946 ) }
    dend_27 { pt3dadd( 567.068, 544.533, 28.3783, 0.544 ) }
    dend_27 { pt3dadd( 568.193, 544.487, 28.1277, 0.5462 ) }
    dend_27 { pt3dadd( 569.041, 544.773, 27.7422, 0.5116 ) }
    dend_27 { pt3dadd( 569.992, 545.322, 27.3235, 0.406 ) }
    dend_27 { pt3dadd( 570.974, 545.904, 27.0054, 0.4118 ) }
    dend_27 { pt3dadd( 571.992, 546.359, 26.8607, 0.3592 ) }
    dend_27 { pt3dadd( 573.086, 546.125, 26.8226, 0.3416 ) }
    dend_27 { pt3dadd( 573.853, 545.343, 26.713, 0.3772 ) }
    dend_27 { pt3dadd( 574.786, 544.695, 26.6074, 0.341 ) }
    dend_27 { pt3dadd( 575.924, 544.575, 26.5309, 0.3132 ) }
    dend_27 { pt3dadd( 576.948, 544.085, 26.4763, 0.299 ) }
    dend_27 { pt3dadd( 577.292, 543.026, 26.4869, 0.3196 ) }
    dend_27 { pt3dadd( 577.219, 541.912, 26.4256, 0.3598 ) }
    dend_27 { pt3dadd( 577.674, 540.866, 26.3533, 0.424 ) }
    dend_27 { pt3dadd( 578.271, 539.891, 26.2816, 0.5932 ) }
    dend_27 { pt3dadd( 579.029, 539.036, 26.2016, 0.6644 ) }
    dend_27 { pt3dadd( 579.882, 538.275, 26.1112, 0.6002 ) }
    dend_27 { pt3dadd( 580.924, 537.822, 25.9935, 0.5176 ) }
    dend_27 { pt3dadd( 582.017, 537.65, 25.7949, 0.4172 ) }
    dend_27 { pt3dadd( 583.07, 537.232, 25.6567, 0.4324 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_27 { pt3dadd( 583.869, 536.423, 25.5434, 0.3986 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 1/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 564.628, 542.362, 31.9197, 0.2288 ) }
    dend_20 { pt3dadd( 565.768, 542.367, 33.0176, 0.4734 ) }
    dend_20 { pt3dadd( 566.604, 542.822, 33.5362, 0.395 ) }
    dend_20 { pt3dadd( 567.174, 543.193, 34.3221, 0.329 ) }
    dend_20 { pt3dadd( 568.109, 543.766, 35.0288, 0.281 ) }
    dend_20 { pt3dadd( 569.068, 544.39, 35.5482, 0.2866 ) }
    dend_20 { pt3dadd( 570.044, 544.984, 35.8893, 0.2968 ) }
    dend_20 { pt3dadd( 571.062, 545.507, 36.0657, 0.3168 ) }
    dend_20 { pt3dadd( 572.198, 545.571, 36.0816, 0.3472 ) }
    dend_20 { pt3dadd( 573.301, 545.567, 35.9181, 0.4368 ) }
    dend_20 { pt3dadd( 574.44, 545.522, 35.7638, 0.442 ) }
    dend_20 { pt3dadd( 575.546, 545.227, 35.6684, 0.5462 ) }
    dend_20 { pt3dadd( 576.507, 544.608, 35.6331, 0.5088 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 14/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 564.788, 545.354, 28.9719, 0.4576 ) }
    dend_19 { pt3dadd( 565.59, 546.132, 28.4939, 0.4044 ) }
    dend_19 { pt3dadd( 565.565, 547.118, 28.3032, 0.4094 ) }
    dend_19 { pt3dadd( 565.185, 548.142, 28.0568, 0.3532 ) }
    dend_19 { pt3dadd( 565.406, 549.18, 27.751, 0.3366 ) }
    dend_19 { pt3dadd( 566.148, 549.811, 27.1854, 0.3382 ) }
    dend_19 { pt3dadd( 566.392, 550.62, 26.4328, 0.4126 ) }
    dend_19 { pt3dadd( 566.091, 551.655, 25.5811, 0.4322 ) }
    dend_19 { pt3dadd( 565.877, 552.583, 24.7462, 0.3584 ) }
    dend_19 { pt3dadd( 565.896, 551.6, 24.0169, 0.2982 ) }
    dend_19 { pt3dadd( 565.903, 550.795, 23.1454, 0.2712 ) }
    dend_19 { pt3dadd( 566.176, 550.795, 21.9914, 0.2684 ) }
    dend_19 { pt3dadd( 566.754, 550.795, 20.7044, 0.2626 ) }
    dend_19 { pt3dadd( 567.862, 550.751, 19.626, 0.2542 ) }
    dend_19 { pt3dadd( 568.504, 550.2, 18.6681, 0.2288 ) }
    dend_19 { pt3dadd( 569.33, 549.65, 17.4129, 0.2288 ) }
    // Section: dend_14, id: dend_14, parent: soma_0 (entry count 30/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 554.181, 541.456, 19.5079, 0.2288 ) }
    dend_14 { pt3dadd( 553.039, 541.39, 19.4277, 0.2802 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 32/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 554.315, 546.997, 31.6249, 0.2288 ) }
    dend_9 { pt3dadd( 553.46, 547.739, 31.6182, 0.2778 ) }
    dend_9 { pt3dadd( 553.378, 548.232, 31.6576, 0.2806 ) }
    dend_9 { pt3dadd( 552.703, 548.899, 31.6078, 0.2858 ) }
    dend_9 { pt3dadd( 551.736, 549.245, 31.3611, 0.2952 ) }
    dend_9 { pt3dadd( 550.708, 549.689, 31.0649, 0.3138 ) }
    dend_9 { pt3dadd( 550.015, 550.537, 30.8479, 0.343 ) }
    dend_9 { pt3dadd( 549.276, 551.313, 30.5393, 0.422 ) }
    dend_9 { pt3dadd( 548.461, 552.009, 30.4013, 0.4492 ) }
    dend_9 { pt3dadd( 547.343, 552.185, 30.3075, 0.3908 ) }
    dend_9 { pt3dadd( 546.255, 552.399, 30.2588, 0.3532 ) }
    dend_9 { pt3dadd( 545.2, 552.622, 30.3321, 0.3986 ) }
    dend_9 { pt3dadd( 544.193, 552.909, 30.4688, 0.3816 ) }
    dend_9 { pt3dadd( 543.392, 553.714, 30.5068, 0.3842 ) }
    dend_9 { pt3dadd( 542.762, 554.608, 30.3327, 0.452 ) }
    dend_9 { pt3dadd( 542.088, 555.421, 29.9597, 0.4996 ) }
    dend_9 { pt3dadd( 541.156, 555.905, 29.4442, 0.5098 ) }
    dend_9 { pt3dadd( 540.031, 555.955, 28.9576, 0.4504 ) }
    dend_9 { pt3dadd( 539.172, 556.667, 28.5404, 0.4914 ) }
    dend_9 { pt3dadd( 538.625, 557.666, 28.1954, 0.5206 ) }
    dend_9 { pt3dadd( 538.148, 558.683, 27.8539, 0.5732 ) }
    dend_9 { pt3dadd( 537.63, 559.678, 27.5086, 0.4486 ) }
    dend_9 { pt3dadd( 536.744, 560.376, 27.1801, 0.3816 ) }
    dend_9 { pt3dadd( 535.758, 559.971, 26.7828, 0.3754 ) }
    dend_9 { pt3dadd( 534.641, 559.836, 26.4566, 0.4774 ) }
    dend_9 { pt3dadd( 533.528, 560.062, 26.2291, 0.5726 ) }
    dend_9 { pt3dadd( 532.445, 560.427, 26.0554, 0.5202 ) }
    dend_9 { pt3dadd( 531.379, 560.822, 25.9368, 0.3898 ) }
    dend_9 { pt3dadd( 530.411, 561.276, 25.7753, 0.3094 ) }
    dend_9 { pt3dadd( 529.82, 562.001, 25.3927, 0.2916 ) }
    dend_9 { pt3dadd( 529.502, 563.014, 24.9018, 0.3074 ) }
    dend_9 { pt3dadd( 528.966, 564.018, 24.4474, 0.33 ) }
    dend_9 { pt3dadd( 528.331, 564.943, 24.0269, 0.4028 ) }
    dend_9 { pt3dadd( 527.5, 565.69, 23.6563, 0.3896 ) }
    dend_9 { pt3dadd( 526.531, 566.286, 23.4285, 0.3972 ) }
    dend_9 { pt3dadd( 525.451, 566.628, 23.3115, 0.4836 ) }
    dend_9 { pt3dadd( 524.37, 566.821, 23.2809, 0.5228 ) }
    dend_9 { pt3dadd( 523.375, 567.185, 23.4754, 0.7248 ) }
    dend_9 { pt3dadd( 522.294, 567.482, 23.7531, 0.6996 ) }
    dend_9 { pt3dadd( 521.195, 567.799, 24.0145, 0.764 ) }
    dend_9 { pt3dadd( 520.083, 568.06, 24.254, 0.5734 ) }
    dend_9 { pt3dadd( 518.987, 568.316, 24.5049, 0.5788 ) }
    dend_9 { pt3dadd( 517.966, 568.774, 24.7905, 0.4504 ) }
    dend_9 { pt3dadd( 516.893, 569.102, 25.0409, 0.4264 ) }
    dend_9 { pt3dadd( 515.753, 569.177, 25.2519, 0.4856 ) }
    dend_9 { pt3dadd( 514.619, 569.329, 25.4403, 0.5514 ) }
    dend_9 { pt3dadd( 513.5, 569.536, 25.6303, 0.656 ) }
    dend_9 { pt3dadd( 512.409, 569.837, 25.8525, 0.4782 ) }
    dend_9 { pt3dadd( 511.424, 570.143, 26.2102, 0.3514 ) }
    dend_9 { pt3dadd( 510.544, 570.848, 26.457, 0.2756 ) }
    dend_9 { pt3dadd( 509.676, 571.589, 26.5974, 0.2766 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 83/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 558.241, 548.901, 34.2017, 0.6864 ) }
    dend_0 { pt3dadd( 559.115, 549.627, 34.4907, 0.6718 ) }
    dend_0 { pt3dadd( 559.898, 550.413, 34.6615, 0.4944 ) }
    dend_0 { pt3dadd( 560.69, 551.237, 34.7872, 0.4442 ) }
    dend_0 { pt3dadd( 561.424, 552.115, 34.8536, 0.3718 ) }
    dend_0 { pt3dadd( 562.056, 553.066, 34.8499, 0.366 ) }
    dend_0 { pt3dadd( 562.672, 553.995, 34.7206, 0.4174 ) }
    dend_0 { pt3dadd( 563.375, 554.888, 34.5498, 0.4408 ) }
    dend_0 { pt3dadd( 563.997, 555.849, 34.4053, 0.3744 ) }
    dend_0 { pt3dadd( 564.572, 556.837, 34.3084, 0.3276 ) }
    dend_0 { pt3dadd( 565.273, 557.74, 34.2588, 0.328 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 94/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 570.412, 570.46, 30.8, 1.0 ) }
    axon_1 { pt3dadd( 576.253, 584.276, 30.8, 1.0 ) }
    axon_1 { pt3dadd( 582.095, 598.092, 30.8, 1.0 ) }
    // Section: apic_4, id: apic_4, parent: apic_0 (entry count 97/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 552.624, 530.473, 36.0052, 0.3926 ) }
    apic_4 { pt3dadd( 551.786, 529.438, 35.8084, 0.4244 ) }
    apic_4 { pt3dadd( 551.065, 528.55, 35.6871, 0.4292 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    apic_4 { pt3dadd( 550.557, 527.526, 35.6286, 0.473 ) }
    apic_4 { pt3dadd( 550.142, 526.463, 35.6465, 0.614 ) }
    apic_4 { pt3dadd( 549.544, 525.522, 35.796, 0.8144 ) }
    apic_4 { pt3dadd( 548.661, 524.82, 35.896, 1.0234 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 4/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 552.624, 530.473, 36.0052, 0.3926 ) }
    apic_1 { pt3dadd( 553.122, 529.524, 36.0903, 0.2288 ) }
    apic_1 { pt3dadd( 553.372, 528.489, 37.1686, 0.2902 ) }
    apic_1 { pt3dadd( 554.385, 528.182, 37.5838, 0.3048 ) }
    apic_1 { pt3dadd( 554.635, 529.015, 38.2166, 0.3252 ) }
    apic_1 { pt3dadd( 555.424, 529.728, 38.8172, 0.394 ) }
    apic_1 { pt3dadd( 556.5, 529.86, 39.2165, 0.3728 ) }
    apic_1 { pt3dadd( 557.505, 529.444, 39.4982, 0.368 ) }
    apic_1 { pt3dadd( 557.872, 528.607, 39.9538, 0.4208 ) }
    apic_1 { pt3dadd( 558.271, 527.667, 40.4863, 0.4472 ) }
    apic_1 { pt3dadd( 558.663, 526.658, 41.0318, 0.3872 ) }
    // Section: dend_48, id: dend_48, parent: dend_42 (entry count 15/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 548.197, 552.774, 33.045, 0.334 ) }
    dend_48 { pt3dadd( 547.609, 553.381, 32.842, 0.4114 ) }
    dend_48 { pt3dadd( 546.783, 554.052, 32.6329, 0.3986 ) }
    dend_48 { pt3dadd( 545.958, 554.803, 32.5539, 0.4476 ) }
    dend_48 { pt3dadd( 545.151, 555.596, 32.5632, 0.4138 ) }
    dend_48 { pt3dadd( 544.513, 556.535, 32.5668, 0.4994 ) }
    dend_48 { pt3dadd( 544.161, 557.59, 32.4806, 0.3962 ) }
    dend_48 { pt3dadd( 544.104, 558.709, 32.4349, 0.331 ) }
    dend_48 { pt3dadd( 544.189, 559.839, 32.4156, 0.285 ) }
    dend_48 { pt3dadd( 544.583, 560.901, 32.3378, 0.2938 ) }
    dend_48 { pt3dadd( 545.21, 561.763, 32.1012, 0.31 ) }
    dend_48 { pt3dadd( 545.426, 562.795, 31.7514, 0.3412 ) }
    dend_48 { pt3dadd( 545.343, 563.919, 31.4997, 0.3944 ) }
    dend_48 { pt3dadd( 544.867, 564.921, 31.3706, 0.514 ) }
    dend_48 { pt3dadd( 544.216, 565.859, 31.253, 0.6348 ) }
    dend_48 { pt3dadd( 543.82, 566.886, 31.0428, 0.6622 ) }
    dend_48 { pt3dadd( 544.057, 567.985, 30.8098, 0.5234 ) }
    dend_48 { pt3dadd( 544.392, 568.515, 30.5648, 0.4996 ) }
    dend_48 { pt3dadd( 544.872, 569.537, 30.34, 0.4654 ) }
    dend_48 { pt3dadd( 544.997, 570.633, 30.086, 0.5844 ) }
    dend_48 { pt3dadd( 544.982, 571.738, 29.7867, 0.6048 ) }
    dend_48 { pt3dadd( 544.815, 572.851, 29.5716, 0.4708 ) }
    dend_48 { pt3dadd( 544.591, 573.956, 29.3742, 0.3696 ) }
    dend_48 { pt3dadd( 544.565, 575.09, 29.216, 0.3822 ) }
    dend_48 { pt3dadd( 544.695, 576.198, 29.2006, 0.35 ) }
    dend_48 { pt3dadd( 544.964, 577.302, 29.2583, 0.331 ) }
    dend_48 { pt3dadd( 545.13, 578.406, 29.2592, 0.3268 ) }
    dend_48 { pt3dadd( 545.471, 579.469, 29.337, 0.398 ) }
    dend_48 { pt3dadd( 545.875, 580.53, 29.463, 0.374 ) }
    dend_48 { pt3dadd( 546.284, 581.597, 29.5714, 0.4 ) }
    dend_48 { pt3dadd( 546.448, 582.725, 29.6517, 0.3362 ) }
    dend_48 { pt3dadd( 546.765, 583.822, 29.7223, 0.3042 ) }
    dend_48 { pt3dadd( 547.036, 584.933, 29.7931, 0.2824 ) }
    dend_48 { pt3dadd( 546.831, 586.045, 29.855, 0.289 ) }
    dend_48 { pt3dadd( 546.37, 587.089, 29.9211, 0.3012 ) }
    dend_48 { pt3dadd( 545.984, 588.166, 30.0093, 0.3246 ) }
    dend_48 { pt3dadd( 545.904, 589.285, 30.1731, 0.3642 ) }
    dend_48 { pt3dadd( 545.82, 590.405, 30.3934, 0.4556 ) }
    dend_48 { pt3dadd( 545.38, 591.454, 30.5749, 0.5374 ) }
    dend_48 { pt3dadd( 544.82, 592.449, 30.7255, 0.4294 ) }
    dend_48 { pt3dadd( 544.455, 593.502, 30.9058, 0.3452 ) }
    dend_48 { pt3dadd( 544.077, 594.564, 30.9425, 0.3122 ) }
    dend_48 { pt3dadd( 543.741, 595.646, 30.8672, 0.3402 ) }
    dend_48 { pt3dadd( 543.599, 596.781, 30.763, 0.4166 ) }
    dend_48 { pt3dadd( 543.405, 597.909, 30.6429, 0.4396 ) }
    dend_48 { pt3dadd( 542.924, 598.947, 30.5052, 0.3718 ) }
    dend_48 { pt3dadd( 542.495, 600.006, 30.3369, 0.3242 ) }
    dend_48 { pt3dadd( 542.654, 600.484, 30.1286, 0.3142 ) }
    dend_48 { pt3dadd( 543.0, 601.534, 29.8259, 0.3734 ) }
    dend_48 { pt3dadd( 543.346, 602.612, 29.5238, 0.334 ) }
    dend_48 { pt3dadd( 543.693, 603.701, 29.2561, 0.3 ) }
    dend_48 { pt3dadd( 544.005, 604.789, 28.9828, 0.2748 ) }
    dend_48 { pt3dadd( 544.284, 605.876, 28.6815, 0.2748 ) }
    dend_48 { pt3dadd( 544.177, 606.982, 28.4253, 0.2752 ) }
    dend_48 { pt3dadd( 543.917, 608.096, 28.229, 0.2756 ) }
    dend_48 { pt3dadd( 543.822, 609.212, 28.0482, 0.2766 ) }
    dend_48 { pt3dadd( 544.0, 610.331, 27.8474, 0.2782 ) }
    dend_48 { pt3dadd( 544.185, 611.453, 27.6537, 0.2816 ) }
    dend_48 { pt3dadd( 544.383, 612.578, 27.4902, 0.2872 ) }
    dend_48 { pt3dadd( 544.599, 613.698, 27.3468, 0.299 ) }
    dend_48 { pt3dadd( 545.023, 614.759, 27.2399, 0.3148 ) }
    dend_48 { pt3dadd( 545.45, 615.822, 27.1598, 0.3746 ) }
    dend_48 { pt3dadd( 545.84, 616.871, 27.1575, 0.3362 ) }
    dend_48 { pt3dadd( 545.753, 617.952, 27.2135, 0.3044 ) }
    dend_48 { pt3dadd( 545.464, 619.015, 27.1228, 0.2826 ) }
    dend_48 { pt3dadd( 545.396, 620.118, 26.8931, 0.2894 ) }
    dend_48 { pt3dadd( 545.405, 621.246, 26.5915, 0.3032 ) }
    dend_48 { pt3dadd( 545.435, 622.376, 26.2425, 0.3222 ) }
    dend_48 { pt3dadd( 546.046, 623.337, 25.9237, 0.3886 ) }
    dend_48 { pt3dadd( 546.278, 624.416, 25.6328, 0.3616 ) }
    dend_48 { pt3dadd( 545.982, 625.488, 25.3134, 0.3536 ) }
    dend_48 { pt3dadd( 545.94, 626.577, 24.9507, 0.3634 ) }
    dend_48 { pt3dadd( 546.036, 627.687, 24.5774, 0.4904 ) }
    dend_48 { pt3dadd( 546.698, 628.591, 24.2826, 0.4262 ) }
    dend_48 { pt3dadd( 547.112, 629.648, 24.1287, 0.3886 ) }
    dend_48 { pt3dadd( 547.82, 630.698, 23.9864, 0.3822 ) }
    dend_48 { pt3dadd( 548.138, 631.789, 23.9118, 0.5202 ) }
    dend_48 { pt3dadd( 548.169, 632.929, 23.875, 0.5072 ) }
    dend_48 { pt3dadd( 547.659, 633.787, 23.9458, 0.414 ) }
    dend_48 { pt3dadd( 546.857, 634.278, 24.1606, 0.3488 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 95/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 548.197, 552.774, 33.045, 0.334 ) }
    dend_43 { pt3dadd( 546.922, 552.428, 32.513, 0.2288 ) }
    dend_43 { pt3dadd( 545.807, 552.168, 32.6077, 0.2814 ) }
    dend_43 { pt3dadd( 544.693, 551.908, 32.6427, 0.287 ) }
    dend_43 { pt3dadd( 543.742, 551.612, 32.7281, 0.2988 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_43 { pt3dadd( 542.645, 551.522, 32.7432, 0.3142 ) }
    dend_43 { pt3dadd( 541.531, 551.522, 32.8675, 0.3734 ) }
    dend_43 { pt3dadd( 540.392, 551.52, 33.0114, 0.3338 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 3/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 541.403, 542.216, 33.2842, 0.4238 ) }
    dend_34 { pt3dadd( 540.49, 541.697, 33.1125, 0.5174 ) }
    dend_34 { pt3dadd( 539.896, 540.732, 32.9484, 0.4306 ) }
    dend_34 { pt3dadd( 539.469, 539.672, 32.8031, 0.3906 ) }
    dend_34 { pt3dadd( 539.101, 538.597, 32.6376, 0.4158 ) }
    dend_34 { pt3dadd( 539.06, 537.482, 32.4232, 0.438 ) }
    dend_34 { pt3dadd( 539.104, 536.339, 32.2462, 0.3692 ) }
    dend_34 { pt3dadd( 539.104, 536.073, 32.1356, 0.3184 ) }
    dend_34 { pt3dadd( 538.827, 534.965, 32.025, 0.3082 ) }
    dend_34 { pt3dadd( 538.593, 534.205, 31.9203, 0.339 ) }
    dend_34 { pt3dadd( 539.072, 532.813, 31.7433, 0.3848 ) }
    dend_34 { pt3dadd( 539.396, 531.777, 31.6985, 0.5246 ) }
    dend_34 { pt3dadd( 539.492, 530.681, 31.75, 0.5156 ) }
    dend_34 { pt3dadd( 539.508, 529.589, 31.6907, 0.4294 ) }
    dend_34 { pt3dadd( 539.544, 528.5, 31.4986, 0.3774 ) }
    dend_34 { pt3dadd( 539.794, 527.406, 31.2847, 0.4454 ) }
    dend_34 { pt3dadd( 540.034, 526.289, 31.0996, 0.458 ) }
    dend_34 { pt3dadd( 540.26, 525.202, 31.0002, 0.5758 ) }
    dend_34 { pt3dadd( 539.938, 524.157, 30.9238, 0.5642 ) }
    dend_34 { pt3dadd( 539.617, 523.084, 30.7628, 0.5152 ) }
    dend_34 { pt3dadd( 539.663, 521.973, 30.5124, 0.5586 ) }
    dend_34 { pt3dadd( 539.93, 520.971, 30.095, 0.6724 ) }
    dend_34 { pt3dadd( 540.271, 519.94, 29.598, 0.7214 ) }
    dend_34 { pt3dadd( 540.398, 518.815, 29.1488, 0.6846 ) }
    dend_34 { pt3dadd( 540.437, 517.673, 28.7977, 0.549 ) }
    dend_34 { pt3dadd( 540.685, 516.56, 28.5438, 0.3962 ) }
    dend_34 { pt3dadd( 540.611, 515.428, 28.3693, 0.321 ) }
    dend_34 { pt3dadd( 540.151, 514.392, 28.2226, 0.3144 ) }
    dend_34 { pt3dadd( 539.999, 513.292, 28.0185, 0.344 ) }
    dend_34 { pt3dadd( 539.69, 512.232, 27.9182, 0.4238 ) }
    dend_34 { pt3dadd( 539.013, 511.621, 27.5806, 0.4526 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 34/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 541.403, 542.216, 33.2842, 0.4238 ) }
    dend_33 { pt3dadd( 540.698, 542.222, 33.1019, 0.2288 ) }
    dend_33 { pt3dadd( 539.674, 542.227, 33.7067, 0.3736 ) }
    dend_33 { pt3dadd( 538.638, 542.227, 33.9746, 0.3344 ) }
    dend_33 { pt3dadd( 537.578, 542.571, 34.1435, 0.301 ) }
    dend_33 { pt3dadd( 536.588, 543.069, 34.3045, 0.2762 ) }
    dend_33 { pt3dadd( 535.517, 543.414, 34.4714, 0.2778 ) }
    dend_33 { pt3dadd( 534.581, 543.939, 34.7413, 0.2804 ) }
    dend_33 { pt3dadd( 533.573, 543.663, 35.0736, 0.2856 ) }
    dend_33 { pt3dadd( 532.469, 543.877, 35.4264, 0.2948 ) }
    dend_33 { pt3dadd( 531.518, 544.426, 35.7409, 0.3128 ) }
    dend_33 { pt3dadd( 530.515, 544.891, 35.996, 0.3414 ) }
    dend_33 { pt3dadd( 529.471, 545.528, 36.1547, 0.4186 ) }
    dend_33 { pt3dadd( 528.499, 546.131, 36.2253, 0.4432 ) }
    dend_33 { pt3dadd( 527.58, 546.809, 36.2345, 0.3786 ) }
    dend_33 { pt3dadd( 526.583, 547.371, 36.2057, 0.3368 ) }
    dend_33 { pt3dadd( 525.622, 547.984, 36.1304, 0.3374 ) }
    dend_33 { pt3dadd( 524.698, 548.594, 35.9699, 0.4176 ) }
    dend_33 { pt3dadd( 523.843, 549.351, 35.838, 0.4114 ) }
    dend_33 { pt3dadd( 522.945, 550.059, 35.7602, 0.4652 ) }
    dend_33 { pt3dadd( 522.044, 550.758, 35.7412, 0.4772 ) }
    dend_33 { pt3dadd( 521.325, 551.637, 35.8089, 0.4674 ) }
    dend_33 { pt3dadd( 520.692, 552.514, 36.0371, 0.376 ) }
    dend_33 { pt3dadd( 519.922, 553.273, 36.3432, 0.3322 ) }
    dend_33 { pt3dadd( 518.934, 553.792, 36.5033, 0.3288 ) }
    dend_33 { pt3dadd( 517.896, 554.262, 36.6072, 0.4018 ) }
    dend_33 { pt3dadd( 516.95, 554.903, 36.682, 0.3812 ) }
    dend_33 { pt3dadd( 516.036, 555.592, 36.7366, 0.4134 ) }
    dend_33 { pt3dadd( 515.193, 556.292, 36.8304, 0.3608 ) }
    dend_33 { pt3dadd( 514.648, 557.13, 37.063, 0.3506 ) }
    dend_33 { pt3dadd( 513.831, 557.915, 37.2011, 0.364 ) }
    dend_33 { pt3dadd( 512.924, 558.608, 37.2666, 0.4628 ) }
    dend_33 { pt3dadd( 512.098, 559.385, 37.2408, 0.5144 ) }
    dend_33 { pt3dadd( 511.271, 560.131, 37.144, 0.562 ) }
    dend_33 { pt3dadd( 510.289, 560.601, 37.1017, 0.4278 ) }
    dend_33 { pt3dadd( 509.191, 560.607, 37.0014, 0.3422 ) }
    dend_33 { pt3dadd( 508.236, 560.412, 36.7492, 0.3068 ) }
    dend_33 { pt3dadd( 507.497, 560.235, 36.4314, 0.329 ) }
    dend_33 { pt3dadd( 507.348, 560.917, 36.5831, 0.402 ) }
    dend_33 { pt3dadd( 506.612, 561.649, 36.9239, 0.3816 ) }
    dend_33 { pt3dadd( 505.579, 562.118, 37.2812, 0.4138 ) }
    dend_33 { pt3dadd( 504.57, 562.571, 37.6888, 0.3628 ) }
    dend_33 { pt3dadd( 503.584, 563.148, 38.0201, 0.3484 ) }
    dend_33 { pt3dadd( 502.695, 563.839, 38.2217, 0.3898 ) }
    dend_33 { pt3dadd( 502.062, 564.76, 38.271, 0.3652 ) }
    dend_33 { pt3dadd( 501.033, 565.152, 38.2178, 0.3526 ) }
    dend_33 { pt3dadd( 499.944, 564.925, 38.0447, 0.3988 ) }
    dend_33 { pt3dadd( 498.854, 564.809, 37.8148, 0.3756 ) }
    dend_33 { pt3dadd( 497.816, 565.206, 37.6172, 0.403 ) }
    dend_33 { pt3dadd( 496.911, 565.905, 37.4511, 0.3416 ) }
    dend_33 { pt3dadd( 495.966, 566.532, 37.3094, 0.3142 ) }
    dend_33 { pt3dadd( 494.898, 566.791, 37.1454, 0.302 ) }
    dend_33 { pt3dadd( 493.796, 566.971, 36.9555, 0.32 ) }
    dend_33 { pt3dadd( 492.7, 567.283, 36.7948, 0.3846 ) }
    dend_33 { pt3dadd( 491.657, 567.734, 36.6904, 0.3544 ) }
    dend_33 { pt3dadd( 490.617, 568.117, 36.6923, 0.3388 ) }
    dend_33 { pt3dadd( 489.545, 568.355, 36.668, 0.3424 ) }
    dend_33 { pt3dadd( 488.423, 568.463, 36.6346, 0.4206 ) }
    dend_33 { pt3dadd( 487.288, 568.596, 36.636, 0.447 ) }
    dend_33 { pt3dadd( 486.199, 568.914, 36.6167, 0.3854 ) }
    dend_33 { pt3dadd( 485.153, 569.326, 36.5394, 0.3506 ) }
    dend_33 { pt3dadd( 484.147, 569.715, 36.587, 0.358 ) }
    dend_33 { pt3dadd( 483.2, 570.251, 36.7623, 0.4802 ) }
    dend_33 { pt3dadd( 482.196, 570.778, 36.9155, 0.4078 ) }
    dend_33 { pt3dadd( 481.168, 571.279, 37.0107, 0.3536 ) }
    dend_33 { pt3dadd( 480.096, 571.672, 37.0328, 0.3216 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_33 { pt3dadd( 479.082, 572.112, 36.9144, 0.3872 ) }
    dend_33 { pt3dadd( 478.346, 572.954, 36.7413, 0.3604 ) }
    dend_33 { pt3dadd( 477.688, 573.888, 36.5789, 0.3438 ) }
    dend_33 { pt3dadd( 477.098, 574.782, 36.563, 0.3814 ) }
    dend_33 { pt3dadd( 476.573, 575.74, 36.4277, 0.3484 ) }
    dend_33 { pt3dadd( 476.133, 576.738, 36.1934, 0.328 ) }
    dend_33 { pt3dadd( 475.941, 577.845, 35.9237, 0.3212 ) }
    dend_33 { pt3dadd( 475.69, 578.93, 35.6334, 0.3864 ) }
    dend_33 { pt3dadd( 475.032, 579.866, 35.4015, 0.359 ) }
    dend_33 { pt3dadd( 474.371, 580.795, 35.2313, 0.3412 ) }
    dend_33 { pt3dadd( 473.676, 581.664, 35.2142, 0.3764 ) }
    dend_33 { pt3dadd( 472.918, 582.472, 35.2271, 0.3396 ) }
    dend_33 { pt3dadd( 472.049, 583.167, 35.1207, 0.3104 ) }
    dend_33 { pt3dadd( 471.114, 583.787, 34.9359, 0.2938 ) }
    dend_33 { pt3dadd( 470.135, 584.357, 34.701, 0.3112 ) }
    dend_33 { pt3dadd( 469.302, 585.119, 34.4588, 0.3382 ) }
    dend_33 { pt3dadd( 468.523, 585.952, 34.2311, 0.413 ) }
    dend_33 { pt3dadd( 467.667, 586.711, 34.0645, 0.4328 ) }
    dend_33 { pt3dadd( 466.797, 587.453, 33.9629, 0.3594 ) }
    dend_33 { pt3dadd( 465.888, 588.148, 33.9032, 0.3 ) }
    dend_33 { pt3dadd( 464.974, 588.834, 33.8674, 0.2746 ) }
    dend_33 { pt3dadd( 464.326, 589.764, 33.8386, 0.2746 ) }
    dend_33 { pt3dadd( 463.726, 590.739, 33.8069, 0.2746 ) }
    dend_33 { pt3dadd( 463.305, 591.798, 33.7688, 0.2748 ) }
    dend_33 { pt3dadd( 462.288, 592.162, 33.7254, 0.2748 ) }
    dend_33 { pt3dadd( 461.622, 593.034, 33.6563, 0.2752 ) }
    dend_33 { pt3dadd( 461.345, 594.054, 33.4653, 0.2756 ) }
    dend_33 { pt3dadd( 460.676, 594.983, 33.3119, 0.2766 ) }
    dend_33 { pt3dadd( 459.822, 595.579, 33.3183, 0.2782 ) }
    dend_33 { pt3dadd( 459.092, 596.456, 33.3108, 0.2814 ) }
    dend_33 { pt3dadd( 458.379, 597.35, 33.271, 0.287 ) }
    dend_33 { pt3dadd( 457.424, 597.911, 33.1246, 0.2986 ) }
    dend_33 { pt3dadd( 456.427, 598.411, 32.8815, 0.3138 ) }
    dend_33 { pt3dadd( 455.542, 599.098, 32.5598, 0.3728 ) }
    dend_33 { pt3dadd( 454.699, 599.835, 32.205, 0.3328 ) }
    dend_33 { pt3dadd( 454.0, 600.74, 31.915, 0.2982 ) }
    dend_33 { pt3dadd( 453.22, 601.549, 31.6792, 0.2712 ) }
    dend_33 { pt3dadd( 452.212, 602.089, 31.5034, 0.2684 ) }
    dend_33 { pt3dadd( 451.178, 602.541, 31.3687, 0.2626 ) }
    dend_33 { pt3dadd( 450.036, 602.621, 31.2508, 0.2542 ) }
    dend_33 { pt3dadd( 448.924, 602.778, 31.1097, 0.2288 ) }
    dend_33 { pt3dadd( 447.887, 603.137, 30.5183, 0.2288 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 42/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 583.869, 536.423, 25.5434, 0.3986 ) }
    dend_29 { pt3dadd( 584.003, 535.649, 25.4138, 0.4088 ) }
    dend_29 { pt3dadd( 584.466, 534.641, 25.2884, 0.5298 ) }
    dend_29 { pt3dadd( 585.276, 533.849, 25.1953, 0.4888 ) }
    dend_29 { pt3dadd( 586.174, 533.141, 25.1275, 0.555 ) }
    dend_29 { pt3dadd( 587.004, 532.36, 25.0482, 0.447 ) }
    dend_29 { pt3dadd( 587.956, 531.865, 24.9199, 0.4516 ) }
    dend_29 { pt3dadd( 589.012, 531.482, 24.8141, 0.3794 ) }
    dend_29 { pt3dadd( 589.82, 530.773, 24.8423, 0.4098 ) }
    dend_29 { pt3dadd( 590.578, 529.959, 24.9611, 0.354 ) }
    dend_29 { pt3dadd( 591.534, 529.409, 25.1284, 0.3384 ) }
    dend_29 { pt3dadd( 592.447, 528.784, 25.2049, 0.3404 ) }
    dend_29 { pt3dadd( 593.07, 527.865, 25.157, 0.4232 ) }
    dend_29 { pt3dadd( 593.577, 526.843, 25.0434, 0.422 ) }
    dend_29 { pt3dadd( 593.964, 525.769, 24.8779, 0.4832 ) }
    dend_29 { pt3dadd( 594.247, 524.691, 24.6206, 0.5176 ) }
    dend_29 { pt3dadd( 594.132, 523.618, 24.2875, 0.5078 ) }
    dend_29 { pt3dadd( 594.015, 522.505, 23.9503, 0.6172 ) }
    dend_29 { pt3dadd( 594.143, 521.417, 23.7608, 0.6602 ) }
    dend_29 { pt3dadd( 594.57, 520.435, 23.7159, 0.6 ) }
    dend_29 { pt3dadd( 595.187, 519.494, 23.6713, 0.48 ) }
    dend_29 { pt3dadd( 595.818, 518.547, 23.5213, 0.5288 ) }
    dend_29 { pt3dadd( 596.392, 517.63, 23.1577, 0.4454 ) }
    dend_29 { pt3dadd( 596.87, 516.969, 22.4676, 0.4488 ) }
    dend_29 { pt3dadd( 597.611, 517.309, 21.5731, 0.3742 ) }
    dend_29 { pt3dadd( 598.478, 517.358, 20.5638, 0.4002 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 68/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 583.869, 536.423, 25.5434, 0.3986 ) }
    dend_28 { pt3dadd( 584.146, 536.49, 24.0971, 0.2288 ) }
    dend_28 { pt3dadd( 585.073, 536.559, 22.4066, 0.3702 ) }
    dend_28 { pt3dadd( 585.926, 536.234, 21.6341, 0.4742 ) }
    dend_28 { pt3dadd( 586.786, 535.663, 20.8053, 0.5366 ) }
    dend_28 { pt3dadd( 587.603, 534.931, 20.0376, 0.5978 ) }
    dend_28 { pt3dadd( 588.596, 534.365, 19.4005, 0.5198 ) }
    dend_28 { pt3dadd( 589.357, 533.651, 18.8057, 0.389 ) }
    dend_28 { pt3dadd( 589.273, 532.793, 18.166, 0.3082 ) }
    dend_28 { pt3dadd( 589.013, 531.801, 17.5688, 0.2894 ) }
    dend_28 { pt3dadd( 589.382, 530.833, 17.1802, 0.3032 ) }
    dend_28 { pt3dadd( 590.346, 530.838, 16.891, 0.3224 ) }
    dend_28 { pt3dadd( 591.385, 531.258, 16.6158, 0.3898 ) }
    dend_28 { pt3dadd( 592.328, 531.885, 16.4084, 0.3588 ) }
    dend_28 { pt3dadd( 593.392, 532.201, 16.2427, 0.3728 ) }
    dend_28 { pt3dadd( 594.435, 531.92, 16.213, 0.2796 ) }
    dend_28 { pt3dadd( 594.422, 530.93, 16.24, 0.2288 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 85/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 576.507, 544.608, 35.6331, 0.5088 ) }
    dend_24 { pt3dadd( 577.24, 544.71, 35.7588, 0.2288 ) }
    dend_24 { pt3dadd( 578.155, 544.802, 36.6948, 0.2752 ) }
    dend_24 { pt3dadd( 579.184, 545.086, 37.0028, 0.2756 ) }
    dend_24 { pt3dadd( 579.982, 545.861, 37.2893, 0.2766 ) }
    dend_24 { pt3dadd( 580.801, 546.53, 37.6928, 0.2782 ) }
    dend_24 { pt3dadd( 581.828, 546.63, 38.1562, 0.2814 ) }
    dend_24 { pt3dadd( 582.955, 546.517, 38.5633, 0.287 ) }
    dend_24 { pt3dadd( 584.088, 546.63, 38.9113, 0.2988 ) }
    dend_24 { pt3dadd( 585.151, 546.92, 39.3173, 0.3142 ) }
    dend_24 { pt3dadd( 586.15, 547.39, 39.7488, 0.3736 ) }
    dend_24 { pt3dadd( 587.133, 547.722, 40.2234, 0.3342 ) }
    dend_24 { pt3dadd( 588.176, 547.649, 40.7344, 0.3006 ) }
    dend_24 { pt3dadd( 589.197, 547.938, 41.1513, 0.2756 ) }
    dend_24 { pt3dadd( 589.836, 548.777, 41.356, 0.2766 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_24 { pt3dadd( 590.737, 549.209, 41.3658, 0.2782 ) }
    dend_24 { pt3dadd( 591.806, 549.257, 41.4674, 0.2814 ) }
    dend_24 { pt3dadd( 592.768, 549.357, 41.7402, 0.2872 ) }
    dend_24 { pt3dadd( 593.607, 549.973, 42.075, 0.299 ) }
    dend_24 { pt3dadd( 594.617, 550.492, 42.2724, 0.3146 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 5/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 576.507, 544.608, 35.6331, 0.5088 ) }
    dend_21 { pt3dadd( 577.026, 543.953, 35.6628, 0.4156 ) }
    dend_21 { pt3dadd( 577.619, 542.993, 35.789, 0.3578 ) }
    dend_21 { pt3dadd( 578.283, 542.103, 36.0046, 0.3788 ) }
    dend_21 { pt3dadd( 579.137, 541.35, 36.2009, 0.4826 ) }
    dend_21 { pt3dadd( 580.112, 540.756, 36.3639, 0.5894 ) }
    dend_21 { pt3dadd( 581.093, 540.183, 36.4986, 0.5154 ) }
    dend_21 { pt3dadd( 581.83, 539.34, 36.6114, 0.5556 ) }
    dend_21 { pt3dadd( 582.309, 538.302, 36.717, 0.4542 ) }
    dend_21 { pt3dadd( 582.783, 537.29, 36.8738, 0.434 ) }
    dend_21 { pt3dadd( 583.429, 536.391, 37.0868, 0.498 ) }
    dend_21 { pt3dadd( 584.148, 535.506, 37.2663, 0.582 ) }
    dend_21 { pt3dadd( 584.763, 534.542, 37.4044, 0.6774 ) }
    dend_21 { pt3dadd( 585.413, 533.606, 37.5054, 0.6886 ) }
    dend_21 { pt3dadd( 586.187, 532.765, 37.5757, 0.5982 ) }
    dend_21 { pt3dadd( 587.004, 531.965, 37.6242, 0.5138 ) }
    dend_21 { pt3dadd( 587.846, 531.19, 37.6692, 0.41 ) }
    dend_21 { pt3dadd( 588.796, 530.581, 37.728, 0.4194 ) }
    dend_21 { pt3dadd( 589.857, 530.155, 37.8059, 0.3732 ) }
    dend_21 { pt3dadd( 590.878, 529.65, 37.9151, 0.3672 ) }
    dend_21 { pt3dadd( 591.703, 528.923, 38.1049, 0.427 ) }
    dend_21 { pt3dadd( 592.221, 527.949, 38.3485, 0.4226 ) }
    dend_21 { pt3dadd( 592.594, 526.868, 38.5636, 0.5156 ) }
    dend_21 { pt3dadd( 593.098, 525.86, 38.771, 0.4264 ) }
    dend_21 { pt3dadd( 593.852, 525.041, 38.9953, 0.3876 ) }
    dend_21 { pt3dadd( 594.734, 524.33, 39.1824, 0.387 ) }
    dend_21 { pt3dadd( 595.57, 523.56, 39.2658, 0.4974 ) }
    dend_21 { pt3dadd( 596.13, 522.62, 39.2241, 0.6178 ) }
    dend_21 { pt3dadd( 596.424, 521.536, 39.1448, 0.5636 ) }
    dend_21 { pt3dadd( 596.831, 520.477, 39.0981, 0.6656 ) }
    dend_21 { pt3dadd( 597.424, 519.501, 39.0939, 0.5588 ) }
    dend_21 { pt3dadd( 598.099, 518.579, 39.1479, 0.4236 ) }
    dend_21 { pt3dadd( 598.82, 517.701, 39.2946, 0.3262 ) }
    dend_21 { pt3dadd( 599.628, 517.263, 39.6508, 0.3178 ) }
    dend_21 { pt3dadd( 600.648, 517.093, 39.9823, 0.3802 ) }
    dend_21 { pt3dadd( 601.713, 516.746, 40.2595, 0.3464 ) }
    dend_21 { pt3dadd( 602.244, 515.783, 40.4732, 0.3242 ) }
    dend_21 { pt3dadd( 602.69, 514.731, 40.616, 0.3142 ) }
    dend_21 { pt3dadd( 603.349, 513.823, 40.6669, 0.3734 ) }
    dend_21 { pt3dadd( 604.047, 512.924, 40.7226, 0.3338 ) }
    dend_21 { pt3dadd( 604.762, 512.03, 40.777, 0.3 ) }
    dend_21 { pt3dadd( 605.477, 511.137, 40.8388, 0.2746 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 47/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 553.039, 541.39, 19.4277, 0.2802 ) }
    dend_16 { pt3dadd( 551.898, 541.301, 19.3955, 0.285 ) }
    dend_16 { pt3dadd( 550.956, 540.805, 19.3484, 0.2938 ) }
    dend_16 { pt3dadd( 549.815, 540.845, 19.283, 0.3112 ) }
    dend_16 { pt3dadd( 548.856, 540.332, 19.2062, 0.337 ) }
    dend_16 { pt3dadd( 548.094, 539.483, 19.0989, 0.4168 ) }
    dend_16 { pt3dadd( 547.424, 538.606, 18.8826, 0.41 ) }
    dend_16 { pt3dadd( 546.989, 537.595, 18.5748, 0.4626 ) }
    dend_16 { pt3dadd( 546.786, 536.487, 18.298, 0.4724 ) }
    dend_16 { pt3dadd( 546.622, 535.36, 18.064, 0.4582 ) }
    dend_16 { pt3dadd( 546.473, 534.242, 17.8092, 0.3594 ) }
    dend_16 { pt3dadd( 546.385, 533.326, 17.4082, 0.3 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 59/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 553.039, 541.39, 19.4277, 0.2802 ) }
    dend_15 { pt3dadd( 554.969, 540.825, 19.5079, 0.4576 ) }
    dend_15 { pt3dadd( 555.338, 539.773, 18.9342, 0.3594 ) }
    dend_15 { pt3dadd( 556.003, 539.045, 18.649, 0.3002 ) }
    dend_15 { pt3dadd( 556.836, 538.554, 18.1984, 0.275 ) }
    dend_15 { pt3dadd( 557.779, 537.903, 17.8338, 0.2756 ) }
    dend_15 { pt3dadd( 558.539, 537.054, 17.5475, 0.2764 ) }
    dend_15 { pt3dadd( 559.307, 536.212, 17.3293, 0.278 ) }
    dend_15 { pt3dadd( 560.174, 535.465, 17.1689, 0.2808 ) }
    dend_15 { pt3dadd( 560.991, 534.667, 17.0492, 0.286 ) }
    dend_15 { pt3dadd( 561.671, 533.747, 16.9362, 0.297 ) }
    dend_15 { pt3dadd( 562.193, 532.802, 16.7673, 0.3108 ) }
    dend_15 { pt3dadd( 562.232, 531.667, 16.5246, 0.3672 ) }
    dend_15 { pt3dadd( 561.943, 530.571, 16.2778, 0.322 ) }
    dend_15 { pt3dadd( 561.935, 530.103, 15.7487, 0.2796 ) }
    dend_15 { pt3dadd( 562.465, 529.284, 15.2961, 0.2288 ) }
    dend_15 { pt3dadd( 563.609, 529.284, 14.6045, 0.2288 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 76/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 509.676, 571.589, 26.5974, 0.2766 ) }
    dend_13 { pt3dadd( 508.358, 571.431, 26.7808, 0.2784 ) }
    dend_13 { pt3dadd( 507.221, 571.397, 26.9297, 0.2816 ) }
    dend_13 { pt3dadd( 506.112, 571.539, 27.0485, 0.2876 ) }
    dend_13 { pt3dadd( 505.762, 572.427, 27.2712, 0.2986 ) }
    dend_13 { pt3dadd( 505.859, 573.549, 27.4098, 0.3204 ) }
    dend_13 { pt3dadd( 506.092, 574.504, 27.3056, 0.354 ) }
    dend_13 { pt3dadd( 505.992, 575.637, 27.1579, 0.448 ) }
    dend_13 { pt3dadd( 506.201, 576.714, 27.044, 0.4688 ) }
    dend_13 { pt3dadd( 506.141, 577.487, 26.8473, 0.567 ) }
    dend_13 { pt3dadd( 505.657, 578.166, 26.4151, 0.6882 ) }
    dend_13 { pt3dadd( 505.65, 578.834, 26.076, 0.7504 ) }
    dend_13 { pt3dadd( 505.234, 579.88, 25.7705, 0.7392 ) }
    dend_13 { pt3dadd( 504.724, 580.904, 25.5396, 0.647 ) }
    dend_13 { pt3dadd( 504.249, 581.938, 25.3909, 0.5936 ) }
    dend_13 { pt3dadd( 503.67, 582.759, 25.2695, 0.6092 ) }
    dend_13 { pt3dadd( 503.02, 583.482, 25.2786, 0.5408 ) }
    dend_13 { pt3dadd( 502.263, 584.206, 25.2431, 0.429 ) }
    dend_13 { pt3dadd( 501.514, 584.987, 25.1768, 0.3776 ) }
    dend_13 { pt3dadd( 501.26, 586.088, 25.1061, 0.44 ) }
    dend_13 { pt3dadd( 501.355, 587.219, 25.0277, 0.4776 ) }
    dend_13 { pt3dadd( 501.18, 588.319, 24.9208, 0.468 ) }
    dend_13 { pt3dadd( 500.911, 589.403, 24.7303, 0.3774 ) }
    dend_13 { pt3dadd( 500.51, 590.457, 24.5609, 0.3346 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_13 { pt3dadd( 500.046, 591.37, 24.5438, 0.3334 ) }
    dend_13 { pt3dadd( 499.451, 592.34, 24.4743, 0.4102 ) }
    dend_13 { pt3dadd( 498.888, 593.309, 24.3111, 0.398 ) }
    dend_13 { pt3dadd( 498.299, 594.242, 24.0752, 0.439 ) }
    dend_13 { pt3dadd( 497.392, 594.861, 23.8331, 0.4338 ) }
    dend_13 { pt3dadd( 496.311, 595.179, 23.6617, 0.3614 ) }
    dend_13 { pt3dadd( 495.253, 595.57, 23.4412, 0.3038 ) }
    dend_13 { pt3dadd( 494.295, 596.14, 23.214, 0.2818 ) }
    dend_13 { pt3dadd( 493.501, 596.96, 23.0505, 0.2876 ) }
    dend_13 { pt3dadd( 492.668, 597.698, 22.9365, 0.2998 ) }
    dend_13 { pt3dadd( 491.645, 598.162, 22.7982, 0.316 ) }
    dend_13 { pt3dadd( 490.632, 598.561, 22.5926, 0.377 ) }
    dend_13 { pt3dadd( 489.507, 598.685, 22.4461, 0.3408 ) }
    dend_13 { pt3dadd( 488.402, 598.861, 22.4, 0.3124 ) }
    dend_13 { pt3dadd( 487.502, 599.465, 22.3879, 0.2988 ) }
    dend_13 { pt3dadd( 487.132, 600.487, 22.3583, 0.3142 ) }
    dend_13 { pt3dadd( 487.29, 601.615, 22.2889, 0.3734 ) }
    dend_13 { pt3dadd( 487.534, 602.718, 22.151, 0.334 ) }
    dend_13 { pt3dadd( 487.315, 603.682, 21.844, 0.3002 ) }
    dend_13 { pt3dadd( 486.637, 604.403, 21.3577, 0.275 ) }
    dend_13 { pt3dadd( 485.88, 605.183, 20.871, 0.2754 ) }
    dend_13 { pt3dadd( 485.146, 606.053, 20.5274, 0.2762 ) }
    dend_13 { pt3dadd( 484.491, 606.965, 20.3776, 0.2776 ) }
    dend_13 { pt3dadd( 483.846, 607.879, 20.3804, 0.2802 ) }
    dend_13 { pt3dadd( 483.163, 608.794, 20.4365, 0.2852 ) }
    dend_13 { pt3dadd( 482.484, 609.712, 20.5031, 0.294 ) }
    dend_13 { pt3dadd( 482.101, 610.752, 20.5162, 0.3116 ) }
    dend_13 { pt3dadd( 481.92, 611.857, 20.5215, 0.339 ) }
    dend_13 { pt3dadd( 481.523, 612.904, 20.5631, 0.4144 ) }
    dend_13 { pt3dadd( 480.903, 613.86, 20.5927, 0.4356 ) }
    dend_13 { pt3dadd( 480.392, 614.863, 20.6125, 0.3644 ) }
    dend_13 { pt3dadd( 480.172, 615.981, 20.62, 0.3096 ) }
    dend_13 { pt3dadd( 479.849, 617.056, 20.6208, 0.2922 ) }
    dend_13 { pt3dadd( 479.406, 618.097, 20.6369, 0.3082 ) }
    dend_13 { pt3dadd( 478.966, 619.116, 20.5801, 0.3316 ) }
    dend_13 { pt3dadd( 478.27, 619.919, 20.375, 0.4068 ) }
    dend_13 { pt3dadd( 477.531, 620.741, 20.1284, 0.3908 ) }
    dend_13 { pt3dadd( 477.57, 621.71, 19.971, 0.4306 ) }
    dend_13 { pt3dadd( 478.207, 622.635, 19.864, 0.3946 ) }
    dend_13 { pt3dadd( 479.129, 623.165, 19.6694, 0.4032 ) }
    dend_13 { pt3dadd( 479.941, 623.843, 19.3865, 0.5118 ) }
    dend_13 { pt3dadd( 479.921, 624.873, 19.093, 0.492 ) }
    dend_13 { pt3dadd( 479.117, 625.42, 18.6938, 0.3848 ) }
    dend_13 { pt3dadd( 478.075, 625.8, 18.4692, 0.3 ) }
    dend_13 { pt3dadd( 477.047, 626.055, 18.5012, 0.2746 ) }
    dend_13 { pt3dadd( 476.099, 626.609, 18.699, 0.2746 ) }
    dend_13 { pt3dadd( 475.023, 626.934, 18.9055, 0.2746 ) }
    dend_13 { pt3dadd( 474.529, 627.812, 18.9659, 0.2746 ) }
    dend_13 { pt3dadd( 474.372, 628.842, 19.0001, 0.2746 ) }
    dend_13 { pt3dadd( 473.589, 629.65, 19.1233, 0.2746 ) }
    dend_13 { pt3dadd( 472.81, 630.44, 19.3323, 0.2746 ) }
    dend_13 { pt3dadd( 472.413, 631.485, 19.669, 0.2746 ) }
    dend_13 { pt3dadd( 472.379, 632.602, 20.1268, 0.2744 ) }
    dend_13 { pt3dadd( 472.792, 633.64, 20.6761, 0.2744 ) }
    dend_13 { pt3dadd( 473.394, 634.583, 21.3279, 0.2742 ) }
    dend_13 { pt3dadd( 473.529, 635.3, 22.2218, 0.274 ) }
    dend_13 { pt3dadd( 472.991, 635.514, 23.382, 0.2736 ) }
    dend_13 { pt3dadd( 472.29, 635.624, 24.6735, 0.2728 ) }
    dend_13 { pt3dadd( 471.921, 635.438, 25.9956, 0.2712 ) }
    dend_13 { pt3dadd( 472.598, 635.771, 27.0999, 0.2684 ) }
    dend_13 { pt3dadd( 473.305, 636.609, 27.8891, 0.2626 ) }
    dend_13 { pt3dadd( 473.991, 637.44, 28.1806, 0.2542 ) }
    dend_13 { pt3dadd( 473.259, 637.337, 27.9388, 0.2288 ) }
    dend_13 { pt3dadd( 472.471, 636.865, 26.32, 0.2288 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 64/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 509.676, 571.589, 26.5974, 0.2766 ) }
    dend_10 { pt3dadd( 509.557, 572.549, 26.2962, 0.2288 ) }
    dend_10 { pt3dadd( 510.114, 573.519, 26.3085, 0.2824 ) }
    dend_10 { pt3dadd( 510.378, 574.606, 26.2449, 0.2888 ) }
    dend_10 { pt3dadd( 509.832, 575.553, 26.3147, 0.3022 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 69/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 565.273, 557.74, 34.2588, 0.328 ) }
    dend_4 { pt3dadd( 565.62, 557.947, 34.2538, 0.363 ) }
    dend_4 { pt3dadd( 566.635, 558.358, 34.1947, 0.4896 ) }
    dend_4 { pt3dadd( 567.75, 558.495, 34.2821, 0.4264 ) }
    dend_4 { pt3dadd( 568.648, 559.06, 34.5363, 0.3814 ) }
    dend_4 { pt3dadd( 568.919, 560.134, 34.8849, 0.405 ) }
    dend_4 { pt3dadd( 569.236, 561.233, 35.2136, 0.3872 ) }
    dend_4 { pt3dadd( 569.393, 562.363, 35.5449, 0.4238 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 77/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 565.273, 557.74, 34.2588, 0.328 ) }
    dend_1 { pt3dadd( 564.901, 559.083, 34.188, 0.2288 ) }
    dend_1 { pt3dadd( 564.203, 559.933, 34.4702, 0.3342 ) }
    dend_1 { pt3dadd( 563.224, 560.448, 34.6329, 0.3742 ) }
    dend_1 { pt3dadd( 562.223, 560.951, 34.7679, 0.5114 ) }
    dend_1 { pt3dadd( 561.198, 561.432, 34.9006, 0.4616 ) }
    dend_1 { pt3dadd( 560.361, 562.174, 35.0414, 0.4724 ) }
    dend_1 { pt3dadd( 559.494, 562.916, 35.1518, 0.4486 ) }
    dend_1 { pt3dadd( 558.627, 563.661, 35.226, 0.3896 ) }
    dend_1 { pt3dadd( 557.94, 564.567, 35.2713, 0.351 ) }
    dend_1 { pt3dadd( 557.216, 565.451, 35.3049, 0.3944 ) }
    dend_1 { pt3dadd( 556.294, 566.114, 35.3298, 0.374 ) }
    dend_1 { pt3dadd( 555.56, 566.972, 35.3525, 0.3686 ) }
    dend_1 { pt3dadd( 554.831, 567.853, 35.3797, 0.4294 ) }
    dend_1 { pt3dadd( 554.056, 568.693, 35.415, 0.4268 ) }
    dend_1 { pt3dadd( 553.057, 569.217, 35.4673, 0.5246 ) }
    dend_1 { pt3dadd( 551.951, 569.375, 35.5888, 0.4376 ) }
    dend_1 { pt3dadd( 550.828, 569.491, 35.6695, 0.4334 ) }
    dend_1 { pt3dadd( 549.801, 569.956, 35.7269, 0.3506 ) }
    dend_1 { pt3dadd( 548.716, 570.306, 35.8089, 0.332 ) }
    dend_1 { pt3dadd( 547.612, 570.61, 35.9318, 0.3286 ) }
    dend_1 { pt3dadd( 546.516, 570.75, 36.1684, 0.4012 ) }
    dend_1 { pt3dadd( 545.463, 570.875, 36.5448, 0.3802 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_1 { pt3dadd( 544.609, 571.574, 36.9306, 0.4112 ) }
    dend_1 { pt3dadd( 544.227, 572.641, 37.2445, 0.358 ) }
    dend_1 { pt3dadd( 544.036, 573.754, 37.4315, 0.3396 ) }
    dend_1 { pt3dadd( 543.589, 574.787, 37.639, 0.3734 ) }
    // Section: apic_6, id: apic_6, parent: apic_4 (entry count 4/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 548.661, 524.82, 35.896, 1.0234 ) }
    apic_6 { pt3dadd( 547.297, 523.637, 35.9716, 1.056 ) }
    apic_6 { pt3dadd( 546.445, 522.873, 36.099, 0.7802 ) }
    apic_6 { pt3dadd( 545.469, 522.349, 36.3446, 0.7564 ) }
    apic_6 { pt3dadd( 544.361, 522.243, 36.6713, 0.6334 ) }
    apic_6 { pt3dadd( 543.252, 522.247, 37.0978, 0.56 ) }
    apic_6 { pt3dadd( 542.141, 522.305, 37.6048, 0.5884 ) }
    apic_6 { pt3dadd( 541.031, 522.533, 38.0416, 0.7588 ) }
    apic_6 { pt3dadd( 540.0, 522.196, 38.5202, 0.7316 ) }
    apic_6 { pt3dadd( 539.331, 521.443, 39.1135, 0.7446 ) }
    apic_6 { pt3dadd( 539.008, 520.38, 39.6799, 0.6892 ) }
    apic_6 { pt3dadd( 538.692, 519.33, 40.234, 0.7442 ) }
    apic_6 { pt3dadd( 537.864, 518.576, 40.7187, 0.7672 ) }
    apic_6 { pt3dadd( 536.87, 518.055, 41.137, 0.7354 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 18/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 548.661, 524.82, 35.896, 1.0234 ) }
    apic_5 { pt3dadd( 549.247, 524.73, 33.469, 0.2288 ) }
    apic_5 { pt3dadd( 550.158, 524.184, 32.6119, 0.29 ) }
    apic_5 { pt3dadd( 551.154, 523.688, 32.2336, 0.3044 ) }
    apic_5 { pt3dadd( 551.901, 522.832, 31.8679, 0.3246 ) }
    apic_5 { pt3dadd( 552.289, 521.768, 31.4745, 0.3928 ) }
    apic_5 { pt3dadd( 552.146, 520.69, 31.2099, 0.371 ) }
    apic_5 { pt3dadd( 551.991, 519.61, 30.795, 0.3632 ) }
    apic_5 { pt3dadd( 552.757, 518.867, 30.2156, 0.4186 ) }
    apic_5 { pt3dadd( 553.619, 518.154, 29.5842, 0.4122 ) }
    apic_5 { pt3dadd( 554.101, 517.413, 28.7028, 0.4724 ) }
    apic_5 { pt3dadd( 554.432, 516.791, 27.6153, 0.4618 ) }
    apic_5 { pt3dadd( 555.333, 516.359, 26.4891, 0.5776 ) }
    apic_5 { pt3dadd( 555.87, 515.374, 25.5227, 0.5924 ) }
    apic_5 { pt3dadd( 555.796, 514.771, 24.6884, 0.447 ) }
    apic_5 { pt3dadd( 555.577, 513.68, 23.9786, 0.3308 ) }
    apic_5 { pt3dadd( 556.227, 512.801, 23.3491, 0.2844 ) }
    apic_5 { pt3dadd( 556.026, 511.749, 22.8064, 0.2926 ) }
    apic_5 { pt3dadd( 555.094, 511.132, 22.3164, 0.3092 ) }
    apic_5 { pt3dadd( 554.827, 510.192, 21.7529, 0.3334 ) }
    apic_5 { pt3dadd( 555.28, 509.208, 21.146, 0.4102 ) }
    apic_5 { pt3dadd( 555.419, 508.204, 20.5071, 0.3978 ) }
    apic_5 { pt3dadd( 554.896, 507.261, 19.9395, 0.4388 ) }
    apic_5 { pt3dadd( 554.133, 506.414, 19.4803, 0.4334 ) }
    apic_5 { pt3dadd( 553.806, 505.53, 18.9927, 0.3604 ) }
    apic_5 { pt3dadd( 554.19, 504.72, 18.4762, 0.3022 ) }
    apic_5 { pt3dadd( 554.594, 503.698, 18.1631, 0.2786 ) }
    apic_5 { pt3dadd( 554.096, 502.817, 18.1811, 0.2822 ) }
    apic_5 { pt3dadd( 553.625, 502.11, 18.5637, 0.2884 ) }
    apic_5 { pt3dadd( 553.297, 501.348, 19.2012, 0.3012 ) }
    apic_5 { pt3dadd( 553.474, 500.236, 19.7612, 0.3186 ) }
    apic_5 { pt3dadd( 553.336, 499.164, 20.0157, 0.3816 ) }
    apic_5 { pt3dadd( 553.109, 498.091, 20.0043, 0.3502 ) }
    apic_5 { pt3dadd( 552.7, 497.027, 19.8593, 0.3248 ) }
    apic_5 { pt3dadd( 552.31, 495.953, 19.6419, 0.3474 ) }
    apic_5 { pt3dadd( 551.984, 494.893, 19.3415, 0.2796 ) }
    apic_5 { pt3dadd( 551.414, 493.916, 19.1002, 0.2288 ) }
    // Section: apic_3, id: apic_3, parent: apic_1 (entry count 55/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 558.663, 526.658, 41.0318, 0.3872 ) }
    apic_3 { pt3dadd( 558.93, 525.903, 42.8789, 0.2288 ) }
    apic_3 { pt3dadd( 559.273, 524.928, 44.7485, 0.2814 ) }
    apic_3 { pt3dadd( 560.086, 524.233, 45.4838, 0.287 ) }
    apic_3 { pt3dadd( 560.786, 523.928, 46.4876, 0.2988 ) }
    apic_3 { pt3dadd( 561.715, 524.042, 47.5986, 0.3142 ) }
    apic_3 { pt3dadd( 562.348, 524.855, 48.692, 0.3734 ) }
    apic_3 { pt3dadd( 562.859, 525.788, 49.7328, 0.3338 ) }
    apic_3 { pt3dadd( 563.784, 526.425, 50.6134, 0.3 ) }
    apic_3 { pt3dadd( 564.903, 526.504, 51.3324, 0.2746 ) }
    apic_3 { pt3dadd( 565.987, 526.153, 51.9456, 0.2746 ) }
    apic_3 { pt3dadd( 566.815, 525.578, 52.6546, 0.2746 ) }
    apic_3 { pt3dadd( 567.797, 525.296, 53.4528, 0.2746 ) }
    apic_3 { pt3dadd( 568.583, 525.436, 54.448, 0.2746 ) }
    apic_3 { pt3dadd( 569.172, 525.81, 55.5946, 0.2746 ) }
    apic_3 { pt3dadd( 569.976, 526.494, 56.6104, 0.2746 ) }
    apic_3 { pt3dadd( 571.117, 526.4, 57.4036, 0.2744 ) }
    apic_3 { pt3dadd( 572.221, 526.263, 58.0686, 0.2744 ) }
    apic_3 { pt3dadd( 573.302, 526.319, 58.6415, 0.2742 ) }
    apic_3 { pt3dadd( 574.39, 526.617, 59.0209, 0.274 ) }
    apic_3 { pt3dadd( 575.318, 526.658, 59.5456, 0.2736 ) }
    apic_3 { pt3dadd( 576.409, 526.658, 60.1322, 0.2728 ) }
    apic_3 { pt3dadd( 577.4, 526.658, 60.8238, 0.2712 ) }
    apic_3 { pt3dadd( 578.523, 526.658, 61.4583, 0.2684 ) }
    apic_3 { pt3dadd( 579.648, 526.656, 62.0264, 0.2626 ) }
    apic_3 { pt3dadd( 580.781, 526.594, 62.4926, 0.2542 ) }
    apic_3 { pt3dadd( 581.917, 526.529, 62.8432, 0.2288 ) }
    apic_3 { pt3dadd( 582.986, 526.199, 63.2971, 0.2288 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 83/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 558.663, 526.658, 41.0318, 0.3872 ) }
    apic_2 { pt3dadd( 558.768, 526.906, 41.4697, 0.3464 ) }
    apic_2 { pt3dadd( 559.214, 527.959, 41.8197, 0.386 ) }
    apic_2 { pt3dadd( 560.049, 528.42, 42.124, 0.3582 ) }
    apic_2 { pt3dadd( 560.94, 528.899, 42.2008, 0.3396 ) }
    apic_2 { pt3dadd( 561.964, 529.242, 42.4385, 0.3736 ) }
    apic_2 { pt3dadd( 563.023, 529.098, 42.786, 0.3344 ) }
    apic_2 { pt3dadd( 563.945, 528.964, 43.3882, 0.3008 ) }
    apic_2 { pt3dadd( 564.911, 529.077, 44.1818, 0.276 ) }
    apic_2 { pt3dadd( 564.701, 530.034, 44.9775, 0.2774 ) }
    apic_2 { pt3dadd( 565.043, 530.951, 45.8209, 0.2798 ) }
    apic_2 { pt3dadd( 565.955, 531.605, 46.5273, 0.2842 ) }
    apic_2 { pt3dadd( 566.916, 531.363, 47.1999, 0.2924 ) }
    apic_2 { pt3dadd( 567.333, 530.662, 47.9856, 0.3074 ) }
    apic_2 { pt3dadd( 568.393, 530.329, 48.6254, 0.3374 ) }
    apic_2 { pt3dadd( 569.442, 530.696, 49.2114, 0.3814 ) }
    apic_2 { pt3dadd( 570.111, 531.473, 49.8977, 0.5186 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    apic_2 { pt3dadd( 570.982, 532.198, 50.5089, 0.5046 ) }
    apic_2 { pt3dadd( 571.88, 532.797, 51.1353, 0.4088 ) }
    apic_2 { pt3dadd( 572.781, 533.278, 51.8675, 0.3396 ) }
    apic_2 { pt3dadd( 573.682, 533.788, 52.6826, 0.3734 ) }
    apic_2 { pt3dadd( 574.556, 534.406, 53.4276, 0.3338 ) }
    apic_2 { pt3dadd( 575.651, 534.427, 54.1528, 0.3 ) }
    apic_2 { pt3dadd( 576.768, 534.405, 54.8288, 0.2746 ) }
    apic_2 { pt3dadd( 577.815, 534.477, 55.5579, 0.2746 ) }
    apic_2 { pt3dadd( 578.898, 534.591, 56.2806, 0.2746 ) }
    apic_2 { pt3dadd( 579.984, 534.706, 56.9988, 0.2746 ) }
    apic_2 { pt3dadd( 581.042, 534.506, 57.6943, 0.2746 ) }
    apic_2 { pt3dadd( 582.083, 534.12, 58.3414, 0.2746 ) }
    apic_2 { pt3dadd( 582.961, 533.578, 58.97, 0.2748 ) }
    apic_2 { pt3dadd( 584.077, 533.673, 59.4798, 0.2748 ) }
    apic_2 { pt3dadd( 585.122, 534.137, 59.8626, 0.2752 ) }
    apic_2 { pt3dadd( 586.06, 534.767, 60.1588, 0.2756 ) }
    apic_2 { pt3dadd( 587.133, 535.066, 60.4237, 0.2766 ) }
    apic_2 { pt3dadd( 588.257, 535.265, 60.6858, 0.2782 ) }
    apic_2 { pt3dadd( 589.344, 535.233, 61.0182, 0.2814 ) }
    apic_2 { pt3dadd( 590.4, 534.995, 61.4706, 0.287 ) }
    apic_2 { pt3dadd( 591.508, 534.9, 61.9466, 0.2988 ) }
    apic_2 { pt3dadd( 592.458, 534.322, 62.3846, 0.3142 ) }
    apic_2 { pt3dadd( 593.466, 534.003, 62.888, 0.3734 ) }
    apic_2 { pt3dadd( 594.555, 534.28, 63.3492, 0.3338 ) }
    apic_2 { pt3dadd( 595.682, 534.48, 63.7484, 0.3 ) }
    apic_2 { pt3dadd( 596.745, 534.797, 64.1628, 0.2746 ) }
    apic_2 { pt3dadd( 597.786, 534.953, 64.7063, 0.2746 ) }
    apic_2 { pt3dadd( 598.75, 535.33, 65.2879, 0.2746 ) }
    apic_2 { pt3dadd( 599.711, 535.813, 65.8081, 0.2746 ) }
    apic_2 { pt3dadd( 599.931, 535.772, 66.5706, 0.2746 ) }
    apic_2 { pt3dadd( 599.997, 534.905, 67.2627, 0.2746 ) }
    apic_2 { pt3dadd( 600.589, 534.113, 67.4772, 0.2746 ) }
    apic_2 { pt3dadd( 601.273, 534.166, 67.1994, 0.2746 ) }
    apic_2 { pt3dadd( 601.867, 534.771, 66.6117, 0.2746 ) }
    apic_2 { pt3dadd( 602.945, 534.892, 66.0212, 0.2746 ) }
    apic_2 { pt3dadd( 604.088, 534.9, 65.5385, 0.2746 ) }
    apic_2 { pt3dadd( 605.117, 534.846, 65.3083, 0.2746 ) }
    apic_2 { pt3dadd( 605.852, 534.323, 65.406, 0.2746 ) }
    apic_2 { pt3dadd( 606.711, 533.606, 65.5698, 0.2746 ) }
    apic_2 { pt3dadd( 607.656, 533.091, 65.6373, 0.2746 ) }
    apic_2 { pt3dadd( 608.534, 532.705, 65.4228, 0.2746 ) }
    apic_2 { pt3dadd( 609.494, 532.135, 65.1874, 0.2746 ) }
    apic_2 { pt3dadd( 610.466, 531.536, 64.9771, 0.2744 ) }
    apic_2 { pt3dadd( 611.44, 530.935, 64.806, 0.2744 ) }
    apic_2 { pt3dadd( 612.398, 530.309, 64.6962, 0.2742 ) }
    apic_2 { pt3dadd( 613.333, 529.65, 64.6394, 0.274 ) }
    apic_2 { pt3dadd( 614.268, 528.991, 64.6201, 0.2736 ) }
    apic_2 { pt3dadd( 615.203, 528.333, 64.5974, 0.2728 ) }
    apic_2 { pt3dadd( 616.138, 527.675, 64.5672, 0.2712 ) }
    apic_2 { pt3dadd( 617.073, 527.016, 64.5336, 0.2684 ) }
    apic_2 { pt3dadd( 618.008, 526.357, 64.5002, 0.2626 ) }
    apic_2 { pt3dadd( 618.943, 525.699, 64.4686, 0.2542 ) }
    apic_2 { pt3dadd( 619.88, 525.04, 64.4398, 0.2288 ) }
    apic_2 { pt3dadd( 620.815, 524.381, 64.3832, 0.2288 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 54/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 546.857, 634.278, 24.1606, 0.3488 ) }
    dend_50 { pt3dadd( 546.807, 635.093, 24.07, 0.3908 ) }
    dend_50 { pt3dadd( 546.96, 635.958, 23.8038, 0.3658 ) }
    dend_50 { pt3dadd( 547.391, 636.737, 23.4059, 0.361 ) }
    dend_50 { pt3dadd( 548.117, 637.588, 22.9911, 0.3782 ) }
    dend_50 { pt3dadd( 548.773, 638.524, 22.6184, 0.5126 ) }
    dend_50 { pt3dadd( 549.192, 639.552, 22.2591, 0.4936 ) }
    dend_50 { pt3dadd( 549.44, 640.646, 21.9259, 0.3876 ) }
    dend_50 { pt3dadd( 549.427, 641.747, 21.6162, 0.3052 ) }
    dend_50 { pt3dadd( 549.189, 642.855, 21.3285, 0.2844 ) }
    dend_50 { pt3dadd( 548.974, 643.962, 21.1263, 0.2926 ) }
    dend_50 { pt3dadd( 548.742, 645.063, 21.0242, 0.309 ) }
    dend_50 { pt3dadd( 548.231, 646.085, 20.9252, 0.3334 ) }
    dend_50 { pt3dadd( 547.721, 647.109, 20.8134, 0.4086 ) }
    dend_50 { pt3dadd( 547.517, 648.18, 20.5535, 0.4012 ) }
    dend_50 { pt3dadd( 547.362, 649.259, 20.237, 0.4152 ) }
    dend_50 { pt3dadd( 547.809, 650.243, 19.8442, 0.535 ) }
    dend_50 { pt3dadd( 548.414, 651.157, 19.4078, 0.5298 ) }
    dend_50 { pt3dadd( 549.167, 652.006, 19.0319, 0.4802 ) }
    dend_50 { pt3dadd( 549.638, 652.782, 18.5423, 0.353 ) }
    dend_50 { pt3dadd( 549.924, 653.779, 18.1098, 0.2882 ) }
    dend_50 { pt3dadd( 549.516, 654.812, 17.8235, 0.2542 ) }
    dend_50 { pt3dadd( 548.969, 655.815, 17.6722, 0.2288 ) }
    dend_50 { pt3dadd( 548.638, 656.719, 18.0849, 0.2288 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 78/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 546.857, 634.278, 24.1606, 0.3488 ) }
    dend_49 { pt3dadd( 547.278, 633.821, 27.1894, 0.2288 ) }
    dend_49 { pt3dadd( 547.979, 633.987, 28.9215, 0.2752 ) }
    dend_49 { pt3dadd( 548.604, 634.923, 29.5613, 0.2758 ) }
    dend_49 { pt3dadd( 549.046, 635.908, 30.2148, 0.2768 ) }
    dend_49 { pt3dadd( 548.729, 636.755, 31.0304, 0.2796 ) }
    dend_49 { pt3dadd( 548.864, 637.691, 31.8704, 0.2796 ) }
    dend_49 { pt3dadd( 548.468, 638.709, 32.6304, 0.305 ) }
    dend_49 { pt3dadd( 548.181, 639.774, 33.9091, 0.2288 ) }
    // Section: dend_47, id: dend_47, parent: dend_43 (entry count 87/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 540.392, 551.52, 33.0114, 0.3338 ) }
    dend_47 { pt3dadd( 539.878, 551.513, 33.7652, 0.6864 ) }
    dend_47 { pt3dadd( 538.81, 551.468, 34.6777, 0.4528 ) }
    dend_47 { pt3dadd( 537.726, 551.266, 35.0619, 0.3416 ) }
    dend_47 { pt3dadd( 536.604, 551.092, 35.4217, 0.3056 ) }
    dend_47 { pt3dadd( 535.461, 551.101, 35.7686, 0.3266 ) }
    dend_47 { pt3dadd( 534.508, 550.724, 36.1696, 0.3976 ) }
    dend_47 { pt3dadd( 533.718, 549.975, 36.6551, 0.3734 ) }
    dend_47 { pt3dadd( 532.971, 549.166, 37.1524, 0.3988 ) }
    dend_47 { pt3dadd( 532.236, 548.358, 37.648, 0.3338 ) }
    dend_47 { pt3dadd( 531.262, 548.182, 38.2466, 0.3 ) }
    dend_47 { pt3dadd( 530.153, 548.185, 38.7055, 0.2746 ) }
    dend_47 { pt3dadd( 529.057, 548.367, 39.0566, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_47 { pt3dadd( 527.938, 548.442, 39.4279, 0.2746 ) }
    dend_47 { pt3dadd( 526.823, 548.399, 39.8227, 0.2746 ) }
    dend_47 { pt3dadd( 525.716, 548.183, 40.2329, 0.2746 ) }
    dend_47 { pt3dadd( 524.622, 547.918, 40.6526, 0.2746 ) }
    dend_47 { pt3dadd( 523.562, 547.53, 41.0906, 0.2746 ) }
    dend_47 { pt3dadd( 522.609, 547.007, 41.5433, 0.2744 ) }
    dend_47 { pt3dadd( 521.891, 546.196, 42.0274, 0.2744 ) }
    dend_47 { pt3dadd( 521.091, 545.411, 42.4446, 0.2742 ) }
    dend_47 { pt3dadd( 520.244, 544.642, 42.7571, 0.274 ) }
    dend_47 { pt3dadd( 519.353, 543.926, 42.9848, 0.2736 ) }
    dend_47 { pt3dadd( 518.439, 543.239, 43.1455, 0.2728 ) }
    dend_47 { pt3dadd( 517.455, 542.726, 43.3042, 0.2712 ) }
    dend_47 { pt3dadd( 516.434, 542.312, 43.4983, 0.2684 ) }
    dend_47 { pt3dadd( 515.372, 542.183, 43.7472, 0.2626 ) }
    dend_47 { pt3dadd( 514.461, 541.645, 43.7892, 0.2542 ) }
    dend_47 { pt3dadd( 513.685, 540.874, 43.8141, 0.2288 ) }
    dend_47 { pt3dadd( 513.375, 540.396, 42.9517, 0.2288 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 17/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 540.392, 551.52, 33.0114, 0.3338 ) }
    dend_44 { pt3dadd( 539.767, 551.816, 33.1226, 0.3 ) }
    dend_44 { pt3dadd( 538.948, 552.534, 33.1836, 0.2746 ) }
    dend_44 { pt3dadd( 538.06, 553.102, 33.2153, 0.2746 ) }
    dend_44 { pt3dadd( 537.138, 553.27, 33.3995, 0.2748 ) }
    dend_44 { pt3dadd( 536.028, 553.27, 33.5258, 0.275 ) }
    dend_44 { pt3dadd( 534.939, 553.595, 33.6101, 0.2754 ) }
    dend_44 { pt3dadd( 533.844, 553.347, 33.6176, 0.276 ) }
    dend_44 { pt3dadd( 532.713, 553.463, 33.5798, 0.2772 ) }
    dend_44 { pt3dadd( 531.625, 553.815, 33.5163, 0.2794 ) }
    dend_44 { pt3dadd( 530.672, 554.045, 33.6143, 0.2836 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 28/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 539.013, 511.621, 27.5806, 0.4526 ) }
    dend_38 { pt3dadd( 538.568, 511.534, 27.1387, 0.2288 ) }
    dend_38 { pt3dadd( 537.577, 511.061, 26.7956, 0.2912 ) }
    dend_38 { pt3dadd( 536.628, 510.512, 26.6062, 0.3068 ) }
    dend_38 { pt3dadd( 535.575, 510.15, 26.3364, 0.3286 ) }
    dend_38 { pt3dadd( 534.456, 509.93, 26.0761, 0.4016 ) }
    dend_38 { pt3dadd( 533.331, 509.854, 25.7852, 0.3808 ) }
    dend_38 { pt3dadd( 532.284, 509.73, 25.3842, 0.4126 ) }
    dend_38 { pt3dadd( 531.205, 509.526, 24.9864, 0.3588 ) }
    dend_38 { pt3dadd( 530.12, 509.611, 24.7456, 0.3484 ) }
    dend_38 { pt3dadd( 529.012, 509.817, 24.5659, 0.354 ) }
    dend_38 { pt3dadd( 527.874, 509.853, 24.3699, 0.4728 ) }
    dend_38 { pt3dadd( 526.755, 509.678, 24.1747, 0.3942 ) }
    dend_38 { pt3dadd( 525.827, 509.303, 23.7773, 0.327 ) }
    dend_38 { pt3dadd( 524.955, 509.308, 23.1038, 0.2776 ) }
    dend_38 { pt3dadd( 524.03, 509.598, 22.2683, 0.2804 ) }
    dend_38 { pt3dadd( 523.214, 509.445, 21.3051, 0.2852 ) }
    dend_38 { pt3dadd( 522.223, 509.021, 20.4636, 0.2944 ) }
    dend_38 { pt3dadd( 521.263, 508.69, 19.9993, 0.3112 ) }
    dend_38 { pt3dadd( 520.544, 507.864, 19.7421, 0.343 ) }
    dend_38 { pt3dadd( 520.044, 506.839, 19.5472, 0.3994 ) }
    dend_38 { pt3dadd( 520.177, 505.742, 19.2963, 0.5168 ) }
    dend_38 { pt3dadd( 519.948, 504.837, 18.831, 0.6712 ) }
    dend_38 { pt3dadd( 519.116, 504.498, 18.1726, 0.5788 ) }
    dend_38 { pt3dadd( 518.18, 504.757, 17.4199, 0.414 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 53/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 539.013, 511.621, 27.5806, 0.4526 ) }
    dend_35 { pt3dadd( 539.06, 511.093, 27.5671, 0.3972 ) }
    dend_35 { pt3dadd( 539.133, 510.02, 27.4551, 0.3646 ) }
    dend_35 { pt3dadd( 539.19, 508.951, 27.116, 0.4222 ) }
    dend_35 { pt3dadd( 539.314, 507.977, 26.5181, 0.4138 ) }
    dend_35 { pt3dadd( 538.768, 507.091, 25.796, 0.4994 ) }
    dend_35 { pt3dadd( 538.119, 506.171, 25.0542, 0.3962 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 60/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 598.478, 517.358, 20.5638, 0.4002 ) }
    dend_31 { pt3dadd( 599.648, 516.692, 19.7714, 0.3364 ) }
    dend_31 { pt3dadd( 600.692, 516.246, 19.2425, 0.3048 ) }
    dend_31 { pt3dadd( 601.802, 515.981, 18.9296, 0.2836 ) }
    dend_31 { pt3dadd( 602.838, 515.557, 18.8026, 0.291 ) }
    dend_31 { pt3dadd( 603.719, 514.893, 18.8534, 0.3064 ) }
    dend_31 { pt3dadd( 604.602, 514.199, 18.9141, 0.328 ) }
    dend_31 { pt3dadd( 605.708, 513.96, 18.8519, 0.4002 ) }
    dend_31 { pt3dadd( 606.784, 513.738, 18.6193, 0.3782 ) }
    dend_31 { pt3dadd( 607.922, 513.825, 18.3429, 0.4078 ) }
    dend_31 { pt3dadd( 608.971, 514.214, 17.9879, 0.3504 ) }
    dend_31 { pt3dadd( 609.987, 513.757, 17.5944, 0.3318 ) }
    dend_31 { pt3dadd( 611.109, 513.55, 17.2493, 0.328 ) }
    dend_31 { pt3dadd( 612.214, 513.589, 16.8827, 0.4002 ) }
    dend_31 { pt3dadd( 613.181, 513.796, 16.5911, 0.3784 ) }
    dend_31 { pt3dadd( 614.296, 514.035, 16.3532, 0.408 ) }
    dend_31 { pt3dadd( 615.411, 514.273, 16.1692, 0.3506 ) }
    dend_31 { pt3dadd( 616.539, 514.119, 16.0602, 0.332 ) }
    dend_31 { pt3dadd( 617.667, 513.932, 16.0132, 0.3286 ) }
    dend_31 { pt3dadd( 618.778, 513.67, 16.0192, 0.4 ) }
    dend_31 { pt3dadd( 619.87, 513.328, 16.0548, 0.384 ) }
    dend_31 { pt3dadd( 620.958, 513.027, 16.1414, 0.3896 ) }
    dend_31 { pt3dadd( 622.028, 512.777, 16.3279, 0.4558 ) }
    dend_31 { pt3dadd( 623.104, 512.41, 16.4977, 0.5378 ) }
    dend_31 { pt3dadd( 623.927, 511.695, 16.6103, 0.4302 ) }
    dend_31 { pt3dadd( 624.664, 510.835, 16.6658, 0.3466 ) }
    dend_31 { pt3dadd( 625.632, 510.224, 16.6608, 0.315 ) }
    dend_31 { pt3dadd( 626.62, 509.677, 16.5932, 0.3442 ) }
    dend_31 { pt3dadd( 627.728, 509.461, 16.4363, 0.4298 ) }
    dend_31 { pt3dadd( 628.836, 509.247, 16.2414, 0.4352 ) }
    dend_31 { pt3dadd( 629.964, 509.073, 16.0799, 0.504 ) }
    dend_31 { pt3dadd( 631.093, 508.899, 15.9561, 0.5748 ) }
    dend_31 { pt3dadd( 632.219, 508.801, 15.8355, 0.5242 ) }
    dend_31 { pt3dadd( 632.862, 508.383, 15.9994, 0.397 ) }
    dend_31 { pt3dadd( 632.934, 507.251, 16.1815, 0.3238 ) }
    dend_31 { pt3dadd( 633.227, 506.198, 16.3055, 0.3136 ) }
    dend_31 { pt3dadd( 634.268, 505.728, 16.358, 0.3724 ) }
    dend_31 { pt3dadd( 635.156, 505.112, 16.2473, 0.332 ) }
    dend_31 { pt3dadd( 636.051, 504.622, 16.0331, 0.2966 ) }
    dend_31 { pt3dadd( 637.168, 504.376, 15.7833, 0.2684 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_31 { pt3dadd( 638.275, 504.186, 15.5135, 0.2626 ) }
    dend_31 { pt3dadd( 639.367, 504.098, 15.1849, 0.2542 ) }
    dend_31 { pt3dadd( 640.481, 503.947, 14.9256, 0.2288 ) }
    dend_31 { pt3dadd( 641.606, 503.759, 14.6941, 0.2288 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 4/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 598.478, 517.358, 20.5638, 0.4002 ) }
    dend_30 { pt3dadd( 597.864, 517.143, 18.3543, 0.2288 ) }
    dend_30 { pt3dadd( 597.216, 516.486, 18.0224, 0.2748 ) }
    dend_30 { pt3dadd( 597.448, 515.38, 17.9004, 0.275 ) }
    dend_30 { pt3dadd( 597.838, 514.313, 17.7632, 0.2752 ) }
    dend_30 { pt3dadd( 598.58, 513.448, 17.6107, 0.2758 ) }
    dend_30 { pt3dadd( 599.32, 512.582, 17.4557, 0.2768 ) }
    dend_30 { pt3dadd( 600.062, 511.717, 17.3121, 0.2788 ) }
    dend_30 { pt3dadd( 600.804, 510.85, 17.2038, 0.2824 ) }
    dend_30 { pt3dadd( 601.543, 509.979, 17.1601, 0.2882 ) }
    dend_30 { pt3dadd( 602.283, 509.108, 17.1683, 0.305 ) }
    dend_30 { pt3dadd( 603.023, 508.237, 17.2136, 0.305 ) }
    dend_30 { pt3dadd( 603.763, 507.366, 17.3816, 0.4576 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 17/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 594.617, 550.492, 42.2724, 0.3146 ) }
    dend_26 { pt3dadd( 595.195, 551.329, 42.1831, 0.2288 ) }
    dend_26 { pt3dadd( 595.792, 552.144, 41.9168, 0.2782 ) }
    dend_26 { pt3dadd( 596.689, 552.725, 41.6889, 0.2814 ) }
    dend_26 { pt3dadd( 597.82, 552.791, 41.5458, 0.287 ) }
    dend_26 { pt3dadd( 598.781, 553.172, 41.617, 0.2988 ) }
    dend_26 { pt3dadd( 599.771, 553.699, 41.7855, 0.3142 ) }
    dend_26 { pt3dadd( 600.817, 554.162, 42.0104, 0.3736 ) }
    dend_26 { pt3dadd( 601.867, 554.575, 42.296, 0.3342 ) }
    dend_26 { pt3dadd( 602.919, 554.969, 42.614, 0.3006 ) }
    dend_26 { pt3dadd( 603.846, 555.619, 42.8865, 0.2756 ) }
    dend_26 { pt3dadd( 604.932, 555.956, 43.1066, 0.2766 ) }
    dend_26 { pt3dadd( 606.068, 555.83, 43.3034, 0.2782 ) }
    dend_26 { pt3dadd( 607.093, 555.509, 43.6008, 0.2814 ) }
    dend_26 { pt3dadd( 608.224, 555.509, 43.8906, 0.2872 ) }
    dend_26 { pt3dadd( 609.369, 555.509, 44.1297, 0.299 ) }
    dend_26 { pt3dadd( 610.474, 555.509, 44.4301, 0.3148 ) }
    dend_26 { pt3dadd( 611.5, 555.967, 44.7104, 0.3746 ) }
    dend_26 { pt3dadd( 612.349, 556.621, 44.8582, 0.3362 ) }
    dend_26 { pt3dadd( 613.349, 556.987, 45.0632, 0.304 ) }
    dend_26 { pt3dadd( 614.44, 557.3, 45.2628, 0.2822 ) }
    dend_26 { pt3dadd( 615.542, 557.098, 45.4451, 0.2886 ) }
    dend_26 { pt3dadd( 616.656, 556.99, 45.6173, 0.3016 ) }
    dend_26 { pt3dadd( 617.638, 557.378, 45.88, 0.3194 ) }
    dend_26 { pt3dadd( 618.581, 557.972, 46.2148, 0.3834 ) }
    dend_26 { pt3dadd( 619.581, 558.431, 46.5304, 0.352 ) }
    dend_26 { pt3dadd( 620.706, 558.589, 46.874, 0.3348 ) }
    dend_26 { pt3dadd( 621.812, 558.81, 47.2324, 0.3336 ) }
    dend_26 { pt3dadd( 622.851, 559.286, 47.5448, 0.4104 ) }
    dend_26 { pt3dadd( 623.854, 559.798, 47.8803, 0.3982 ) }
    dend_26 { pt3dadd( 624.804, 560.368, 48.3308, 0.4396 ) }
    dend_26 { pt3dadd( 625.596, 560.712, 49.0244, 0.4348 ) }
    dend_26 { pt3dadd( 626.469, 561.193, 49.8232, 0.3632 ) }
    dend_26 { pt3dadd( 627.562, 561.456, 50.5456, 0.3074 ) }
    dend_26 { pt3dadd( 628.658, 561.705, 51.1686, 0.2882 ) }
    dend_26 { pt3dadd( 629.513, 562.448, 51.718, 0.2994 ) }
    dend_26 { pt3dadd( 630.44, 562.793, 52.3558, 0.3228 ) }
    dend_26 { pt3dadd( 631.343, 562.523, 53.1014, 0.3536 ) }
    dend_26 { pt3dadd( 632.289, 562.823, 53.823, 0.4722 ) }
    dend_26 { pt3dadd( 633.208, 563.419, 54.5101, 0.3932 ) }
    dend_26 { pt3dadd( 634.164, 563.973, 55.1197, 0.3254 ) }
    dend_26 { pt3dadd( 635.206, 564.118, 55.6699, 0.2746 ) }
    dend_26 { pt3dadd( 636.254, 563.789, 56.1324, 0.2746 ) }
    dend_26 { pt3dadd( 637.326, 563.815, 56.3822, 0.2746 ) }
    dend_26 { pt3dadd( 638.439, 563.879, 56.677, 0.2746 ) }
    dend_26 { pt3dadd( 639.51, 563.799, 57.0489, 0.2746 ) }
    dend_26 { pt3dadd( 640.63, 563.752, 57.3944, 0.2746 ) }
    dend_26 { pt3dadd( 641.737, 563.545, 57.6859, 0.2746 ) }
    dend_26 { pt3dadd( 642.672, 562.926, 57.9494, 0.2746 ) }
    dend_26 { pt3dadd( 643.503, 562.144, 58.2142, 0.2746 ) }
    dend_26 { pt3dadd( 644.395, 561.448, 58.5144, 0.2746 ) }
    dend_26 { pt3dadd( 645.328, 560.982, 58.9008, 0.2746 ) }
    dend_26 { pt3dadd( 646.291, 560.623, 59.3944, 0.2746 ) }
    dend_26 { pt3dadd( 647.013, 559.759, 59.8606, 0.2746 ) }
    dend_26 { pt3dadd( 647.661, 558.817, 60.282, 0.2746 ) }
    dend_26 { pt3dadd( 647.917, 558.56, 60.6626, 0.2746 ) }
    dend_26 { pt3dadd( 648.486, 557.686, 61.136, 0.2746 ) }
    dend_26 { pt3dadd( 649.065, 557.323, 61.8346, 0.2746 ) }
    dend_26 { pt3dadd( 649.948, 557.01, 62.526, 0.2746 ) }
    dend_26 { pt3dadd( 650.926, 556.429, 63.0459, 0.2746 ) }
    dend_26 { pt3dadd( 651.961, 555.95, 63.359, 0.2746 ) }
    dend_26 { pt3dadd( 652.867, 555.3, 63.4502, 0.2746 ) }
    dend_26 { pt3dadd( 653.301, 554.465, 63.1672, 0.2744 ) }
    dend_26 { pt3dadd( 654.195, 553.869, 62.7388, 0.2744 ) }
    dend_26 { pt3dadd( 655.203, 553.5, 62.3935, 0.2742 ) }
    dend_26 { pt3dadd( 655.828, 552.633, 62.1309, 0.274 ) }
    dend_26 { pt3dadd( 656.69, 552.316, 61.6857, 0.2736 ) }
    dend_26 { pt3dadd( 657.736, 552.26, 61.1652, 0.2728 ) }
    dend_26 { pt3dadd( 658.562, 551.884, 60.5875, 0.2712 ) }
    dend_26 { pt3dadd( 659.651, 551.586, 60.0928, 0.2684 ) }
    dend_26 { pt3dadd( 660.755, 551.449, 59.6982, 0.2626 ) }
    dend_26 { pt3dadd( 661.883, 551.638, 59.458, 0.2542 ) }
    dend_26 { pt3dadd( 663.012, 551.826, 59.3659, 0.2288 ) }
    dend_26 { pt3dadd( 664.044, 551.845, 59.9063, 0.2288 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 91/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 594.617, 550.492, 42.2724, 0.3146 ) }
    dend_25 { pt3dadd( 595.705, 550.608, 44.3061, 0.3746 ) }
    dend_25 { pt3dadd( 596.78, 550.614, 45.2138, 0.3358 ) }
    dend_25 { pt3dadd( 597.921, 550.659, 45.5546, 0.3036 ) }
    dend_25 { pt3dadd( 599.036, 550.905, 45.9043, 0.2814 ) }
    dend_25 { pt3dadd( 600.148, 551.06, 46.3268, 0.2872 ) }
    dend_25 { pt3dadd( 601.201, 551.04, 46.8866, 0.299 ) }
    dend_25 { pt3dadd( 602.31, 550.932, 47.4639, 0.3148 ) }
    dend_25 { pt3dadd( 603.419, 550.723, 47.9886, 0.3746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_25 { pt3dadd( 604.448, 551.068, 48.5722, 0.336 ) }
    dend_25 { pt3dadd( 605.294, 551.767, 49.1711, 0.304 ) }
    dend_25 { pt3dadd( 605.874, 552.739, 49.7182, 0.2818 ) }
    dend_25 { pt3dadd( 606.424, 553.721, 50.1696, 0.2882 ) }
    dend_25 { pt3dadd( 607.344, 554.365, 50.5971, 0.2994 ) }
    dend_25 { pt3dadd( 608.091, 555.034, 51.1846, 0.3228 ) }
    dend_25 { pt3dadd( 609.023, 555.649, 51.7516, 0.3536 ) }
    dend_25 { pt3dadd( 609.992, 556.251, 52.2852, 0.4722 ) }
    dend_25 { pt3dadd( 610.747, 557.065, 52.8615, 0.3932 ) }
    dend_25 { pt3dadd( 611.491, 557.87, 53.4862, 0.3254 ) }
    dend_25 { pt3dadd( 612.346, 558.421, 54.2094, 0.2746 ) }
    dend_25 { pt3dadd( 613.284, 558.905, 54.9433, 0.2746 ) }
    dend_25 { pt3dadd( 614.318, 559.312, 55.641, 0.2746 ) }
    dend_25 { pt3dadd( 615.344, 559.781, 56.2394, 0.2746 ) }
    dend_25 { pt3dadd( 616.369, 560.292, 56.7087, 0.2746 ) }
    dend_25 { pt3dadd( 617.379, 560.798, 57.1253, 0.2746 ) }
    dend_25 { pt3dadd( 618.377, 561.298, 57.5509, 0.2746 ) }
    dend_25 { pt3dadd( 619.396, 561.752, 57.9992, 0.2746 ) }
    dend_25 { pt3dadd( 620.424, 562.186, 58.4741, 0.2746 ) }
    dend_25 { pt3dadd( 621.192, 562.982, 58.9476, 0.2746 ) }
    dend_25 { pt3dadd( 621.888, 563.874, 59.4051, 0.2746 ) }
    dend_25 { pt3dadd( 622.534, 564.773, 59.8461, 0.2746 ) }
    dend_25 { pt3dadd( 623.471, 565.375, 60.2857, 0.2746 ) }
    dend_25 { pt3dadd( 624.232, 566.188, 60.6645, 0.2746 ) }
    dend_25 { pt3dadd( 624.901, 567.116, 60.9686, 0.2746 ) }
    dend_25 { pt3dadd( 625.564, 568.049, 61.217, 0.2746 ) }
    dend_25 { pt3dadd( 626.221, 568.986, 61.4267, 0.2746 ) }
    dend_25 { pt3dadd( 626.773, 569.963, 61.6736, 0.2746 ) }
    dend_25 { pt3dadd( 627.273, 570.96, 61.978, 0.2746 ) }
    dend_25 { pt3dadd( 627.882, 571.893, 62.3241, 0.2746 ) }
    dend_25 { pt3dadd( 628.521, 572.803, 62.6853, 0.2746 ) }
    dend_25 { pt3dadd( 629.159, 573.674, 63.0336, 0.2746 ) }
    dend_25 { pt3dadd( 629.492, 574.722, 63.3002, 0.2746 ) }
    dend_25 { pt3dadd( 629.646, 575.735, 63.2999, 0.2746 ) }
    dend_25 { pt3dadd( 629.393, 576.716, 63.1364, 0.2746 ) }
    dend_25 { pt3dadd( 629.393, 577.858, 63.0042, 0.2746 ) }
    dend_25 { pt3dadd( 629.195, 578.956, 62.9322, 0.2746 ) }
    dend_25 { pt3dadd( 628.781, 580.017, 62.9468, 0.2746 ) }
    dend_25 { pt3dadd( 628.422, 581.062, 63.1378, 0.2746 ) }
    dend_25 { pt3dadd( 628.625, 582.057, 63.5533, 0.2746 ) }
    dend_25 { pt3dadd( 629.348, 582.908, 64.0721, 0.2746 ) }
    dend_25 { pt3dadd( 630.24, 583.486, 64.4857, 0.2746 ) }
    dend_25 { pt3dadd( 630.614, 584.542, 64.9678, 0.2746 ) }
    dend_25 { pt3dadd( 630.728, 585.524, 65.613, 0.2746 ) }
    dend_25 { pt3dadd( 631.557, 586.228, 66.2861, 0.2746 ) }
    dend_25 { pt3dadd( 631.904, 586.713, 67.2456, 0.2746 ) }
    dend_25 { pt3dadd( 632.325, 587.649, 68.1873, 0.2746 ) }
    dend_25 { pt3dadd( 632.362, 588.791, 68.9744, 0.2746 ) }
    dend_25 { pt3dadd( 633.164, 589.373, 69.7749, 0.2746 ) }
    dend_25 { pt3dadd( 634.02, 589.917, 70.562, 0.2746 ) }
    dend_25 { pt3dadd( 634.895, 590.506, 71.2564, 0.2746 ) }
    dend_25 { pt3dadd( 635.81, 591.193, 71.7206, 0.2744 ) }
    dend_25 { pt3dadd( 636.749, 591.843, 72.0328, 0.2744 ) }
    dend_25 { pt3dadd( 637.741, 592.414, 72.2268, 0.2742 ) }
    dend_25 { pt3dadd( 638.765, 592.901, 72.3153, 0.274 ) }
    dend_25 { pt3dadd( 639.879, 593.163, 72.3397, 0.2736 ) }
    dend_25 { pt3dadd( 640.992, 593.424, 72.3397, 0.2728 ) }
    dend_25 { pt3dadd( 642.128, 593.553, 72.3397, 0.2712 ) }
    dend_25 { pt3dadd( 643.267, 593.673, 72.3397, 0.2684 ) }
    dend_25 { pt3dadd( 644.388, 593.869, 72.3397, 0.2626 ) }
    dend_25 { pt3dadd( 645.44, 594.293, 72.3397, 0.2542 ) }
    dend_25 { pt3dadd( 646.099, 595.143, 72.3397, 0.2288 ) }
    dend_25 { pt3dadd( 646.557, 596.189, 72.3397, 0.2288 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 63/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 605.477, 511.137, 40.8388, 0.2746 ) }
    dend_23 { pt3dadd( 606.265, 510.797, 40.9133, 0.2746 ) }
    dend_23 { pt3dadd( 607.315, 510.343, 41.0024, 0.2746 ) }
    dend_23 { pt3dadd( 608.344, 509.882, 41.1606, 0.2746 ) }
    dend_23 { pt3dadd( 609.359, 509.416, 41.3963, 0.2746 ) }
    dend_23 { pt3dadd( 610.432, 509.046, 41.6192, 0.2746 ) }
    dend_23 { pt3dadd( 611.523, 508.704, 41.7998, 0.2746 ) }
    dend_23 { pt3dadd( 612.547, 508.245, 41.9824, 0.2746 ) }
    dend_23 { pt3dadd( 613.508, 507.68, 42.1921, 0.2746 ) }
    dend_23 { pt3dadd( 614.401, 506.985, 42.3343, 0.2746 ) }
    dend_23 { pt3dadd( 615.273, 506.243, 42.3881, 0.2746 ) }
    dend_23 { pt3dadd( 616.195, 505.608, 42.3114, 0.2746 ) }
    dend_23 { pt3dadd( 617.135, 505.01, 42.1246, 0.2746 ) }
    dend_23 { pt3dadd( 618.005, 504.289, 41.904, 0.2746 ) }
    dend_23 { pt3dadd( 618.815, 503.545, 41.6674, 0.2748 ) }
    dend_23 { pt3dadd( 619.732, 503.214, 41.3678, 0.2748 ) }
    dend_23 { pt3dadd( 620.562, 502.521, 41.2919, 0.2752 ) }
    dend_23 { pt3dadd( 621.043, 502.238, 41.6962, 0.2758 ) }
    dend_23 { pt3dadd( 621.838, 501.54, 42.1652, 0.2766 ) }
    dend_23 { pt3dadd( 622.734, 500.839, 42.5743, 0.2786 ) }
    dend_23 { pt3dadd( 623.672, 500.284, 43.0125, 0.2818 ) }
    dend_23 { pt3dadd( 624.76, 500.317, 43.402, 0.2882 ) }
    dend_23 { pt3dadd( 625.846, 499.956, 43.6414, 0.2994 ) }
    dend_23 { pt3dadd( 626.789, 499.637, 43.5809, 0.323 ) }
    dend_23 { pt3dadd( 627.872, 499.374, 43.5761, 0.3536 ) }
    dend_23 { pt3dadd( 628.977, 499.105, 43.6388, 0.4724 ) }
    dend_23 { pt3dadd( 630.096, 498.865, 43.7242, 0.3932 ) }
    dend_23 { pt3dadd( 631.146, 498.476, 43.8774, 0.3254 ) }
    dend_23 { pt3dadd( 632.096, 497.865, 44.1339, 0.2748 ) }
    dend_23 { pt3dadd( 633.01, 497.232, 44.4906, 0.2748 ) }
    dend_23 { pt3dadd( 633.911, 496.592, 44.8913, 0.2752 ) }
    dend_23 { pt3dadd( 634.893, 496.184, 45.3418, 0.2756 ) }
    dend_23 { pt3dadd( 635.93, 495.717, 45.6873, 0.2766 ) }
    dend_23 { pt3dadd( 636.776, 495.052, 45.834, 0.2782 ) }
    dend_23 { pt3dadd( 637.672, 494.387, 45.8889, 0.2814 ) }
    dend_23 { pt3dadd( 638.664, 493.851, 45.9519, 0.287 ) }
    dend_23 { pt3dadd( 639.697, 493.638, 46.1278, 0.2988 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_23 { pt3dadd( 640.825, 493.455, 46.3145, 0.3142 ) }
    dend_23 { pt3dadd( 641.867, 493.071, 46.5682, 0.3734 ) }
    dend_23 { pt3dadd( 642.848, 492.539, 46.8922, 0.3338 ) }
    dend_23 { pt3dadd( 643.706, 491.806, 47.1685, 0.3 ) }
    dend_23 { pt3dadd( 644.529, 491.009, 47.3656, 0.2746 ) }
    dend_23 { pt3dadd( 645.411, 490.302, 47.5476, 0.2746 ) }
    dend_23 { pt3dadd( 646.307, 489.629, 47.719, 0.2746 ) }
    dend_23 { pt3dadd( 647.198, 489.005, 47.728, 0.2746 ) }
    dend_23 { pt3dadd( 648.192, 488.646, 47.6826, 0.2748 ) }
    dend_23 { pt3dadd( 649.289, 488.469, 47.7053, 0.2748 ) }
    dend_23 { pt3dadd( 650.253, 487.866, 47.8486, 0.2752 ) }
    dend_23 { pt3dadd( 651.08, 487.323, 48.26, 0.2756 ) }
    dend_23 { pt3dadd( 651.866, 487.273, 49.0224, 0.2766 ) }
    dend_23 { pt3dadd( 652.776, 487.444, 49.9475, 0.2782 ) }
    dend_23 { pt3dadd( 653.81, 487.432, 50.8824, 0.2814 ) }
    dend_23 { pt3dadd( 654.664, 486.86, 51.7922, 0.287 ) }
    dend_23 { pt3dadd( 655.779, 486.671, 52.5207, 0.2988 ) }
    dend_23 { pt3dadd( 656.905, 486.48, 53.0491, 0.3142 ) }
    dend_23 { pt3dadd( 658.023, 486.279, 53.4495, 0.3734 ) }
    dend_23 { pt3dadd( 659.125, 486.059, 53.8241, 0.3338 ) }
    dend_23 { pt3dadd( 660.237, 485.899, 54.171, 0.3 ) }
    dend_23 { pt3dadd( 661.372, 485.899, 54.4793, 0.2746 ) }
    dend_23 { pt3dadd( 662.413, 485.728, 54.8699, 0.2746 ) }
    dend_23 { pt3dadd( 662.711, 484.658, 55.1883, 0.2746 ) }
    dend_23 { pt3dadd( 663.26, 483.687, 55.4364, 0.2746 ) }
    dend_23 { pt3dadd( 664.224, 483.072, 55.6262, 0.2746 ) }
    dend_23 { pt3dadd( 665.226, 482.674, 55.8995, 0.2746 ) }
    dend_23 { pt3dadd( 666.195, 482.117, 56.1408, 0.2746 ) }
    dend_23 { pt3dadd( 667.143, 481.478, 56.3326, 0.2746 ) }
    dend_23 { pt3dadd( 668.111, 480.89, 56.4469, 0.2746 ) }
    dend_23 { pt3dadd( 669.033, 480.3, 56.5449, 0.2746 ) }
    dend_23 { pt3dadd( 670.044, 479.945, 56.7274, 0.2746 ) }
    dend_23 { pt3dadd( 671.169, 480.098, 56.8999, 0.2746 ) }
    dend_23 { pt3dadd( 671.734, 479.09, 57.5361, 0.2746 ) }
    dend_23 { pt3dadd( 672.552, 478.5, 57.9737, 0.2746 ) }
    dend_23 { pt3dadd( 673.643, 478.161, 58.305, 0.2746 ) }
    dend_23 { pt3dadd( 674.744, 477.846, 58.5346, 0.2746 ) }
    dend_23 { pt3dadd( 675.859, 477.594, 58.683, 0.2746 ) }
    dend_23 { pt3dadd( 676.909, 477.141, 58.7588, 0.2746 ) }
    dend_23 { pt3dadd( 677.96, 476.688, 58.7762, 0.2746 ) }
    dend_23 { pt3dadd( 678.874, 476.008, 58.7762, 0.2746 ) }
    dend_23 { pt3dadd( 679.767, 475.293, 58.7762, 0.2746 ) }
    dend_23 { pt3dadd( 680.797, 474.806, 58.7765, 0.2746 ) }
    dend_23 { pt3dadd( 681.846, 474.352, 58.7768, 0.2746 ) }
    dend_23 { pt3dadd( 682.866, 473.835, 58.777, 0.2746 ) }
    dend_23 { pt3dadd( 683.874, 473.293, 58.7773, 0.2746 ) }
    dend_23 { pt3dadd( 684.956, 472.956, 58.7779, 0.2746 ) }
    dend_23 { pt3dadd( 686.076, 472.72, 58.7787, 0.2746 ) }
    dend_23 { pt3dadd( 687.133, 472.345, 58.7798, 0.2746 ) }
    dend_23 { pt3dadd( 688.049, 471.659, 58.7815, 0.2746 ) }
    dend_23 { pt3dadd( 688.997, 471.026, 58.7838, 0.2746 ) }
    dend_23 { pt3dadd( 690.02, 470.513, 58.7868, 0.2746 ) }
    dend_23 { pt3dadd( 690.932, 469.892, 58.7913, 0.2746 ) }
    dend_23 { pt3dadd( 691.53, 468.928, 58.7972, 0.2746 ) }
    dend_23 { pt3dadd( 692.479, 468.465, 58.8059, 0.2746 ) }
    dend_23 { pt3dadd( 693.622, 468.434, 58.8176, 0.2746 ) }
    dend_23 { pt3dadd( 694.767, 468.434, 58.8344, 0.2746 ) }
    dend_23 { pt3dadd( 695.911, 468.434, 58.8577, 0.2746 ) }
    dend_23 { pt3dadd( 697.038, 468.368, 58.8904, 0.2746 ) }
    dend_23 { pt3dadd( 697.802, 467.657, 58.9352, 0.2746 ) }
    dend_23 { pt3dadd( 697.857, 466.515, 58.9977, 0.2744 ) }
    dend_23 { pt3dadd( 698.091, 465.424, 59.0901, 0.2744 ) }
    dend_23 { pt3dadd( 699.216, 465.229, 59.2194, 0.2742 ) }
    dend_23 { pt3dadd( 700.361, 465.229, 59.3874, 0.274 ) }
    dend_23 { pt3dadd( 701.505, 465.229, 59.5913, 0.2736 ) }
    dend_23 { pt3dadd( 701.518, 465.005, 59.9511, 0.2728 ) }
    dend_23 { pt3dadd( 701.555, 464.399, 60.6304, 0.2712 ) }
    dend_23 { pt3dadd( 702.455, 463.774, 61.1918, 0.2684 ) }
    dend_23 { pt3dadd( 703.543, 463.435, 61.6154, 0.2626 ) }
    dend_23 { pt3dadd( 704.681, 463.336, 61.9108, 0.2542 ) }
    dend_23 { pt3dadd( 705.648, 462.739, 62.0894, 0.2288 ) }
    dend_23 { pt3dadd( 706.542, 462.024, 62.167, 0.2288 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 72/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 605.477, 511.137, 40.8388, 0.2746 ) }
    dend_22 { pt3dadd( 605.669, 509.841, 40.691, 0.2288 ) }
    dend_22 { pt3dadd( 605.851, 508.714, 41.0774, 0.2746 ) }
    dend_22 { pt3dadd( 606.383, 507.733, 41.2843, 0.2746 ) }
    dend_22 { pt3dadd( 606.94, 506.762, 41.55, 0.2746 ) }
    dend_22 { pt3dadd( 607.516, 505.78, 41.7813, 0.2746 ) }
    dend_22 { pt3dadd( 607.961, 504.726, 41.9807, 0.2746 ) }
    dend_22 { pt3dadd( 608.614, 503.887, 42.2268, 0.2746 ) }
    dend_22 { pt3dadd( 609.655, 503.615, 42.502, 0.2746 ) }
    dend_22 { pt3dadd( 610.599, 502.979, 42.6994, 0.2746 ) }
    dend_22 { pt3dadd( 611.437, 502.201, 42.8414, 0.2746 ) }
    dend_22 { pt3dadd( 611.812, 501.21, 42.9467, 0.2746 ) }
    dend_22 { pt3dadd( 611.866, 500.068, 43.0226, 0.2746 ) }
    dend_22 { pt3dadd( 612.366, 499.092, 43.0744, 0.2746 ) }
    dend_22 { pt3dadd( 613.081, 498.198, 43.1169, 0.2746 ) }
    dend_22 { pt3dadd( 613.719, 497.253, 43.1827, 0.2748 ) }
    dend_22 { pt3dadd( 614.322, 496.284, 43.2757, 0.275 ) }
    dend_22 { pt3dadd( 615.146, 495.615, 43.4714, 0.2752 ) }
    dend_22 { pt3dadd( 615.703, 494.628, 43.6013, 0.2758 ) }
    dend_22 { pt3dadd( 615.958, 493.583, 43.5856, 0.2768 ) }
    dend_22 { pt3dadd( 616.01, 492.467, 43.5728, 0.2786 ) }
    dend_22 { pt3dadd( 616.487, 491.571, 43.6722, 0.2822 ) }
    dend_22 { pt3dadd( 617.526, 491.356, 43.647, 0.2888 ) }
    dend_22 { pt3dadd( 617.797, 490.34, 43.7394, 0.3008 ) }
    dend_22 { pt3dadd( 617.841, 489.197, 43.818, 0.3238 ) }
    dend_22 { pt3dadd( 618.577, 488.334, 43.8824, 0.3626 ) }
    dend_22 { pt3dadd( 619.299, 487.448, 43.9172, 0.4528 ) }
    dend_22 { pt3dadd( 619.888, 486.494, 43.8659, 0.5322 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_22 { pt3dadd( 620.421, 485.514, 43.7461, 0.4196 ) }
    dend_22 { pt3dadd( 620.757, 484.45, 43.7206, 0.3274 ) }
    dend_22 { pt3dadd( 621.065, 483.372, 43.8052, 0.2782 ) }
    dend_22 { pt3dadd( 621.589, 482.362, 43.8998, 0.2814 ) }
    dend_22 { pt3dadd( 622.138, 481.36, 43.9838, 0.2872 ) }
    dend_22 { pt3dadd( 622.539, 480.304, 44.098, 0.299 ) }
    dend_22 { pt3dadd( 622.911, 479.239, 44.2215, 0.3144 ) }
    dend_22 { pt3dadd( 623.51, 478.404, 44.1288, 0.374 ) }
    dend_22 { pt3dadd( 623.536, 477.321, 43.9701, 0.335 ) }
    dend_22 { pt3dadd( 623.08, 476.326, 43.7002, 0.3022 ) }
    dend_22 { pt3dadd( 622.598, 475.323, 43.4616, 0.2786 ) }
    dend_22 { pt3dadd( 622.372, 474.267, 43.3558, 0.2822 ) }
    dend_22 { pt3dadd( 622.372, 473.145, 43.2502, 0.2888 ) }
    dend_22 { pt3dadd( 622.307, 472.042, 43.0685, 0.3006 ) }
    dend_22 { pt3dadd( 621.966, 471.094, 42.7717, 0.3236 ) }
    dend_22 { pt3dadd( 622.018, 469.957, 42.511, 0.3624 ) }
    dend_22 { pt3dadd( 622.051, 468.828, 42.2985, 0.4526 ) }
    dend_22 { pt3dadd( 621.963, 467.736, 42.2573, 0.5316 ) }
    dend_22 { pt3dadd( 621.913, 466.62, 42.3035, 0.4186 ) }
    dend_22 { pt3dadd( 621.913, 465.476, 42.3382, 0.3254 ) }
    dend_22 { pt3dadd( 621.913, 464.332, 42.3391, 0.2746 ) }
    dend_22 { pt3dadd( 622.172, 463.259, 42.2164, 0.2746 ) }
    dend_22 { pt3dadd( 622.58, 462.226, 41.9588, 0.2746 ) }
    dend_22 { pt3dadd( 623.101, 461.238, 41.6186, 0.2746 ) }
    dend_22 { pt3dadd( 623.659, 460.264, 41.2518, 0.2746 ) }
    dend_22 { pt3dadd( 624.065, 459.213, 40.9466, 0.2746 ) }
    dend_22 { pt3dadd( 624.661, 458.378, 40.5994, 0.2746 ) }
    dend_22 { pt3dadd( 624.661, 457.366, 40.563, 0.2746 ) }
    dend_22 { pt3dadd( 624.661, 456.246, 40.5647, 0.2746 ) }
    dend_22 { pt3dadd( 625.034, 455.243, 40.542, 0.2746 ) }
    dend_22 { pt3dadd( 625.698, 454.334, 40.5191, 0.2746 ) }
    dend_22 { pt3dadd( 626.326, 453.379, 40.476, 0.2746 ) }
    dend_22 { pt3dadd( 626.747, 452.317, 40.4034, 0.2746 ) }
    dend_22 { pt3dadd( 627.143, 451.244, 40.2772, 0.2746 ) }
    dend_22 { pt3dadd( 627.302, 450.134, 40.0826, 0.2748 ) }
    dend_22 { pt3dadd( 627.37, 449.01, 39.8182, 0.275 ) }
    dend_22 { pt3dadd( 627.572, 447.918, 39.4954, 0.2754 ) }
    dend_22 { pt3dadd( 627.974, 446.875, 39.1308, 0.2762 ) }
    dend_22 { pt3dadd( 628.307, 445.796, 38.7909, 0.2776 ) }
    dend_22 { pt3dadd( 628.573, 444.684, 38.5249, 0.2802 ) }
    dend_22 { pt3dadd( 628.833, 443.572, 38.3214, 0.285 ) }
    dend_22 { pt3dadd( 629.065, 442.46, 38.1394, 0.2936 ) }
    dend_22 { pt3dadd( 629.343, 441.36, 37.9938, 0.3106 ) }
    dend_22 { pt3dadd( 629.753, 440.295, 37.9305, 0.3372 ) }
    dend_22 { pt3dadd( 630.281, 439.296, 37.9061, 0.4112 ) }
    dend_22 { pt3dadd( 630.997, 438.404, 37.8792, 0.4294 ) }
    dend_22 { pt3dadd( 631.513, 437.388, 37.8204, 0.353 ) }
    dend_22 { pt3dadd( 632.018, 436.379, 37.7664, 0.2882 ) }
    dend_22 { pt3dadd( 632.362, 435.354, 37.7698, 0.2542 ) }
    dend_22 { pt3dadd( 632.562, 434.265, 37.6572, 0.2288 ) }
    dend_22 { pt3dadd( 633.362, 433.69, 37.3002, 0.2288 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 51/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 546.385, 533.326, 17.4082, 0.3 ) }
    dend_18 { pt3dadd( 547.258, 532.709, 17.0159, 0.2748 ) }
    dend_18 { pt3dadd( 548.32, 532.317, 16.7422, 0.2748 ) }
    dend_18 { pt3dadd( 549.244, 532.114, 16.7458, 0.2752 ) }
    dend_18 { pt3dadd( 548.719, 531.621, 17.0642, 0.2756 ) }
    dend_18 { pt3dadd( 547.891, 530.972, 17.4016, 0.2766 ) }
    dend_18 { pt3dadd( 547.427, 530.174, 17.4717, 0.2782 ) }
    dend_18 { pt3dadd( 547.544, 529.331, 17.2289, 0.2814 ) }
    dend_18 { pt3dadd( 548.089, 528.423, 16.9041, 0.2868 ) }
    dend_18 { pt3dadd( 548.831, 527.59, 16.6923, 0.2984 ) }
    dend_18 { pt3dadd( 549.716, 526.889, 16.5731, 0.3136 ) }
    dend_18 { pt3dadd( 550.344, 525.97, 16.5571, 0.3724 ) }
    dend_18 { pt3dadd( 550.576, 524.909, 16.7152, 0.332 ) }
    dend_18 { pt3dadd( 550.278, 523.958, 17.0309, 0.2966 ) }
    dend_18 { pt3dadd( 550.245, 522.872, 17.2516, 0.2684 ) }
    dend_18 { pt3dadd( 550.453, 521.859, 17.1831, 0.2626 ) }
    dend_18 { pt3dadd( 550.336, 520.797, 16.9324, 0.2542 ) }
    dend_18 { pt3dadd( 550.065, 519.704, 16.6325, 0.2288 ) }
    dend_18 { pt3dadd( 550.034, 518.575, 16.24, 0.2288 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 70/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 546.385, 533.326, 17.4082, 0.3 ) }
    dend_17 { pt3dadd( 546.297, 533.516, 16.1647, 0.2288 ) }
    dend_17 { pt3dadd( 545.273, 533.044, 16.1505, 0.3122 ) }
    dend_17 { pt3dadd( 544.294, 533.331, 16.162, 0.3384 ) }
    dend_17 { pt3dadd( 543.354, 533.739, 16.1671, 0.4208 ) }
    dend_17 { pt3dadd( 542.77, 532.755, 16.1689, 0.4112 ) }
    dend_17 { pt3dadd( 542.182, 531.777, 16.1418, 0.4944 ) }
    dend_17 { pt3dadd( 541.784, 531.183, 16.1437, 0.387 ) }
    dend_17 { pt3dadd( 541.0, 530.35, 16.12, 0.3136 ) }
    dend_17 { pt3dadd( 539.875, 530.261, 16.1419, 0.2542 ) }
    dend_17 { pt3dadd( 538.822, 529.992, 16.1712, 0.2288 ) }
    dend_17 { pt3dadd( 537.96, 529.256, 16.0591, 0.2288 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 82/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 509.832, 575.553, 26.3147, 0.3022 ) }
    dend_12 { pt3dadd( 509.232, 576.328, 26.2654, 0.4576 ) }
    dend_12 { pt3dadd( 508.589, 577.216, 25.5831, 0.3632 ) }
    dend_12 { pt3dadd( 508.153, 578.147, 25.202, 0.3074 ) }
    dend_12 { pt3dadd( 508.402, 579.237, 24.9697, 0.2882 ) }
    dend_12 { pt3dadd( 508.743, 580.323, 24.7622, 0.3008 ) }
    dend_12 { pt3dadd( 509.232, 581.334, 24.6811, 0.318 ) }
    dend_12 { pt3dadd( 509.661, 582.391, 24.5916, 0.3806 ) }
    dend_12 { pt3dadd( 509.876, 583.509, 24.4954, 0.347 ) }
    dend_12 { pt3dadd( 510.284, 584.558, 24.4523, 0.3254 ) }
    dend_12 { pt3dadd( 510.973, 585.451, 24.3076, 0.3162 ) }
    dend_12 { pt3dadd( 511.725, 586.237, 24.0181, 0.3774 ) }
    dend_12 { pt3dadd( 512.038, 587.158, 23.5392, 0.3414 ) }
    dend_12 { pt3dadd( 512.034, 588.293, 23.1377, 0.3138 ) }
    dend_12 { pt3dadd( 511.917, 589.373, 22.9458, 0.3 ) }
    dend_12 { pt3dadd( 511.398, 590.38, 22.7506, 0.3226 ) }
    dend_12 { pt3dadd( 511.444, 591.521, 22.598, 0.3592 ) }
    dend_12 { pt3dadd( 511.433, 592.639, 22.4202, 0.4526 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_12 { pt3dadd( 510.963, 593.657, 22.2153, 0.502 ) }
    dend_12 { pt3dadd( 510.303, 594.592, 22.0354, 0.5082 ) }
    dend_12 { pt3dadd( 509.653, 595.532, 21.8768, 0.4774 ) }
    dend_12 { pt3dadd( 508.889, 596.383, 21.7559, 0.3958 ) }
    dend_12 { pt3dadd( 508.188, 597.278, 21.6576, 0.3636 ) }
    dend_12 { pt3dadd( 507.846, 598.365, 21.561, 0.4128 ) }
    dend_12 { pt3dadd( 507.413, 599.353, 21.4247, 0.4326 ) }
    dend_12 { pt3dadd( 506.848, 600.252, 21.3056, 0.359 ) }
    dend_12 { pt3dadd( 506.661, 601.341, 21.1307, 0.2994 ) }
    dend_12 { pt3dadd( 507.047, 602.377, 20.9624, 0.2736 ) }
    dend_12 { pt3dadd( 507.707, 603.213, 20.9404, 0.2728 ) }
    dend_12 { pt3dadd( 507.719, 604.276, 20.8155, 0.2712 ) }
    dend_12 { pt3dadd( 508.258, 605.233, 20.652, 0.2684 ) }
    dend_12 { pt3dadd( 508.999, 606.103, 20.5033, 0.2626 ) }
    dend_12 { pt3dadd( 509.388, 607.081, 20.2777, 0.2542 ) }
    dend_12 { pt3dadd( 509.893, 608.089, 20.1013, 0.2288 ) }
    dend_12 { pt3dadd( 510.17, 609.091, 20.3456, 0.2288 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 17/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 509.832, 575.553, 26.3147, 0.3022 ) }
    dend_11 { pt3dadd( 508.714, 575.585, 26.4798, 0.3204 ) }
    dend_11 { pt3dadd( 507.697, 575.113, 26.5227, 0.3852 ) }
    dend_11 { pt3dadd( 506.746, 575.002, 26.501, 0.3556 ) }
    dend_11 { pt3dadd( 505.743, 575.259, 26.5079, 0.3414 ) }
    dend_11 { pt3dadd( 504.723, 574.786, 26.4137, 0.347 ) }
    dend_11 { pt3dadd( 503.346, 574.647, 26.4237, 0.4292 ) }
    dend_11 { pt3dadd( 502.259, 574.304, 26.4013, 0.4626 ) }
    dend_11 { pt3dadd( 501.17, 574.003, 26.2665, 0.4156 ) }
    dend_11 { pt3dadd( 500.122, 574.062, 25.9276, 0.3998 ) }
    dend_11 { pt3dadd( 499.084, 574.448, 25.4926, 0.4818 ) }
    dend_11 { pt3dadd( 498.034, 574.883, 25.058, 0.551 ) }
    dend_11 { pt3dadd( 496.974, 575.187, 24.5618, 0.624 ) }
    dend_11 { pt3dadd( 495.836, 575.256, 24.1466, 0.5692 ) }
    dend_11 { pt3dadd( 494.721, 575.027, 23.8008, 0.4774 ) }
    dend_11 { pt3dadd( 493.613, 575.035, 23.4412, 0.4868 ) }
    dend_11 { pt3dadd( 492.474, 575.04, 23.1292, 0.5478 ) }
    dend_11 { pt3dadd( 491.354, 575.083, 22.8763, 0.4496 ) }
    dend_11 { pt3dadd( 490.393, 575.682, 22.6399, 0.3774 ) }
    dend_11 { pt3dadd( 489.456, 576.203, 22.3564, 0.3976 ) }
    dend_11 { pt3dadd( 488.312, 576.22, 22.1414, 0.3734 ) }
    dend_11 { pt3dadd( 487.173, 576.148, 21.9932, 0.3988 ) }
    dend_11 { pt3dadd( 486.055, 575.909, 21.8882, 0.3338 ) }
    dend_11 { pt3dadd( 484.978, 575.57, 21.8226, 0.3 ) }
    dend_11 { pt3dadd( 484.197, 574.784, 21.8053, 0.2746 ) }
    dend_11 { pt3dadd( 483.57, 573.912, 21.7997, 0.2746 ) }
    dend_11 { pt3dadd( 482.933, 574.095, 21.6325, 0.2746 ) }
    dend_11 { pt3dadd( 482.503, 574.904, 21.5741, 0.2748 ) }
    dend_11 { pt3dadd( 481.72, 575.398, 21.7569, 0.2748 ) }
    dend_11 { pt3dadd( 480.668, 575.702, 21.9555, 0.2752 ) }
    dend_11 { pt3dadd( 479.542, 575.871, 22.0996, 0.2756 ) }
    dend_11 { pt3dadd( 478.627, 576.433, 22.0763, 0.2766 ) }
    dend_11 { pt3dadd( 477.743, 577.09, 21.8632, 0.2782 ) }
    dend_11 { pt3dadd( 476.759, 577.649, 21.5454, 0.2814 ) }
    dend_11 { pt3dadd( 475.802, 578.256, 21.1369, 0.287 ) }
    dend_11 { pt3dadd( 474.874, 578.704, 20.5826, 0.2988 ) }
    dend_11 { pt3dadd( 474.004, 579.359, 20.0073, 0.3142 ) }
    dend_11 { pt3dadd( 473.297, 580.209, 19.4514, 0.3734 ) }
    dend_11 { pt3dadd( 472.697, 581.175, 18.9908, 0.3338 ) }
    dend_11 { pt3dadd( 472.017, 582.09, 18.6525, 0.3 ) }
    dend_11 { pt3dadd( 471.233, 582.905, 18.3291, 0.2746 ) }
    dend_11 { pt3dadd( 470.23, 583.448, 18.0564, 0.2746 ) }
    dend_11 { pt3dadd( 469.249, 584.005, 17.7431, 0.2746 ) }
    dend_11 { pt3dadd( 468.284, 584.562, 17.3666, 0.2746 ) }
    dend_11 { pt3dadd( 467.19, 584.886, 17.0, 0.2746 ) }
    dend_11 { pt3dadd( 466.514, 584.855, 16.5521, 0.2746 ) }
    dend_11 { pt3dadd( 465.471, 584.818, 16.0339, 0.2746 ) }
    dend_11 { pt3dadd( 464.358, 584.839, 15.598, 0.2746 ) }
    dend_11 { pt3dadd( 463.454, 585.201, 15.3932, 0.2744 ) }
    dend_11 { pt3dadd( 462.374, 585.276, 15.2243, 0.2744 ) }
    dend_11 { pt3dadd( 461.241, 585.241, 15.0625, 0.2742 ) }
    dend_11 { pt3dadd( 460.112, 585.067, 14.935, 0.274 ) }
    dend_11 { pt3dadd( 458.983, 584.894, 14.8206, 0.2736 ) }
    dend_11 { pt3dadd( 457.845, 584.818, 14.7152, 0.2728 ) }
    dend_11 { pt3dadd( 456.703, 584.775, 14.6012, 0.2712 ) }
    dend_11 { pt3dadd( 456.132, 583.915, 14.4998, 0.2684 ) }
    dend_11 { pt3dadd( 456.104, 582.773, 14.4066, 0.2626 ) }
    dend_11 { pt3dadd( 455.719, 581.706, 14.3148, 0.2542 ) }
    dend_11 { pt3dadd( 455.072, 580.768, 14.2193, 0.2288 ) }
    dend_11 { pt3dadd( 454.298, 580.239, 13.5638, 0.2288 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 77/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 569.393, 562.363, 35.5449, 0.4238 ) }
    dend_6 { pt3dadd( 569.622, 562.843, 35.8999, 0.3824 ) }
    dend_6 { pt3dadd( 569.817, 563.899, 36.2062, 0.3792 ) }
    dend_6 { pt3dadd( 569.999, 564.99, 36.461, 0.4728 ) }
    dend_6 { pt3dadd( 570.445, 566.036, 36.7886, 0.394 ) }
    dend_6 { pt3dadd( 570.838, 566.977, 37.3274, 0.3268 ) }
    dend_6 { pt3dadd( 570.695, 567.747, 38.1338, 0.2772 ) }
    dend_6 { pt3dadd( 570.107, 568.39, 39.121, 0.2794 ) }
    dend_6 { pt3dadd( 569.466, 569.175, 40.1324, 0.2838 ) }
    dend_6 { pt3dadd( 569.089, 570.213, 41.0105, 0.2912 ) }
    dend_6 { pt3dadd( 568.753, 571.284, 41.6312, 0.3068 ) }
    dend_6 { pt3dadd( 568.781, 572.357, 42.1378, 0.3288 ) }
    dend_6 { pt3dadd( 569.096, 573.326, 42.688, 0.4016 ) }
    dend_6 { pt3dadd( 569.159, 574.375, 43.253, 0.3808 ) }
    dend_6 { pt3dadd( 568.854, 575.445, 43.6946, 0.4124 ) }
    dend_6 { pt3dadd( 568.448, 576.507, 44.0474, 0.36 ) }
    dend_6 { pt3dadd( 568.216, 577.586, 44.4679, 0.3432 ) }
    dend_6 { pt3dadd( 567.643, 578.536, 44.9025, 0.3802 ) }
    dend_6 { pt3dadd( 566.68, 579.004, 45.4014, 0.3464 ) }
    dend_6 { pt3dadd( 565.731, 579.53, 45.9841, 0.3242 ) }
    dend_6 { pt3dadd( 565.432, 580.524, 46.653, 0.3144 ) }
    dend_6 { pt3dadd( 564.713, 581.343, 47.3278, 0.374 ) }
    dend_6 { pt3dadd( 563.794, 581.977, 47.969, 0.3348 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_6 { pt3dadd( 563.292, 582.989, 48.5103, 0.3016 ) }
    dend_6 { pt3dadd( 563.072, 584.099, 49.0073, 0.2776 ) }
    dend_6 { pt3dadd( 562.489, 585.061, 49.4883, 0.2802 ) }
    dend_6 { pt3dadd( 562.043, 585.98, 50.0752, 0.285 ) }
    dend_6 { pt3dadd( 561.403, 586.481, 50.5635, 0.2938 ) }
    dend_6 { pt3dadd( 560.455, 587.077, 50.9832, 0.3112 ) }
    dend_6 { pt3dadd( 560.281, 588.009, 51.4945, 0.3382 ) }
    dend_6 { pt3dadd( 561.031, 588.761, 52.0299, 0.413 ) }
    dend_6 { pt3dadd( 562.044, 589.195, 52.5445, 0.4328 ) }
    dend_6 { pt3dadd( 562.521, 590.025, 53.079, 0.3594 ) }
    dend_6 { pt3dadd( 561.966, 590.994, 53.5464, 0.3 ) }
    dend_6 { pt3dadd( 561.236, 591.867, 53.9098, 0.2746 ) }
    dend_6 { pt3dadd( 560.616, 592.749, 54.1901, 0.2746 ) }
    dend_6 { pt3dadd( 559.487, 592.749, 54.4849, 0.2746 ) }
    dend_6 { pt3dadd( 558.344, 592.749, 54.745, 0.2746 ) }
    dend_6 { pt3dadd( 557.247, 592.935, 55.0234, 0.2746 ) }
    dend_6 { pt3dadd( 556.244, 593.444, 55.344, 0.2746 ) }
    dend_6 { pt3dadd( 555.289, 593.968, 55.7449, 0.2746 ) }
    dend_6 { pt3dadd( 554.236, 594.295, 56.1711, 0.2746 ) }
    dend_6 { pt3dadd( 553.221, 594.748, 56.5928, 0.2746 ) }
    dend_6 { pt3dadd( 552.478, 595.409, 57.1052, 0.2746 ) }
    dend_6 { pt3dadd( 551.576, 595.751, 57.6481, 0.2746 ) }
    dend_6 { pt3dadd( 550.828, 596.492, 58.0434, 0.2746 ) }
    dend_6 { pt3dadd( 549.872, 597.059, 58.3607, 0.2746 ) }
    dend_6 { pt3dadd( 548.786, 597.404, 58.6242, 0.2746 ) }
    dend_6 { pt3dadd( 547.661, 597.555, 58.868, 0.2746 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 26/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 569.393, 562.363, 35.5449, 0.4238 ) }
    dend_5 { pt3dadd( 569.82, 562.317, 35.4178, 0.2288 ) }
    dend_5 { pt3dadd( 570.953, 562.196, 35.0414, 0.2814 ) }
    dend_5 { pt3dadd( 572.086, 562.075, 34.8888, 0.287 ) }
    dend_5 { pt3dadd( 573.172, 561.774, 34.6816, 0.2988 ) }
    dend_5 { pt3dadd( 574.255, 561.471, 34.445, 0.3142 ) }
    dend_5 { pt3dadd( 575.378, 561.669, 34.274, 0.3734 ) }
    dend_5 { pt3dadd( 576.503, 561.881, 34.172, 0.3338 ) }
    dend_5 { pt3dadd( 577.63, 562.067, 34.1354, 0.3 ) }
    dend_5 { pt3dadd( 578.763, 562.231, 34.1494, 0.2746 ) }
    dend_5 { pt3dadd( 579.888, 562.416, 34.202, 0.2746 ) }
    dend_5 { pt3dadd( 580.935, 562.731, 34.3608, 0.2746 ) }
    dend_5 { pt3dadd( 581.965, 562.837, 34.6371, 0.2746 ) }
    dend_5 { pt3dadd( 583.057, 562.837, 34.7964, 0.2746 ) }
    dend_5 { pt3dadd( 584.171, 562.837, 34.7945, 0.2746 ) }
    dend_5 { pt3dadd( 585.172, 562.837, 34.566, 0.2746 ) }
    dend_5 { pt3dadd( 586.062, 563.223, 34.4123, 0.2746 ) }
    dend_5 { pt3dadd( 587.016, 563.571, 34.4182, 0.2746 ) }
    dend_5 { pt3dadd( 588.018, 564.007, 34.3196, 0.2746 ) }
    dend_5 { pt3dadd( 589.051, 564.211, 34.1289, 0.2748 ) }
    dend_5 { pt3dadd( 590.044, 564.426, 34.0973, 0.275 ) }
    dend_5 { pt3dadd( 591.028, 564.802, 34.2504, 0.2754 ) }
    dend_5 { pt3dadd( 592.102, 565.076, 34.2656, 0.276 ) }
    dend_5 { pt3dadd( 593.174, 565.419, 34.2023, 0.2772 ) }
    dend_5 { pt3dadd( 594.297, 565.626, 34.1774, 0.2792 ) }
    dend_5 { pt3dadd( 595.431, 565.77, 34.1748, 0.2834 ) }
    dend_5 { pt3dadd( 596.551, 565.968, 34.1692, 0.2908 ) }
    dend_5 { pt3dadd( 597.642, 566.258, 34.2311, 0.3046 ) }
    dend_5 { pt3dadd( 598.739, 566.516, 34.3742, 0.331 ) }
    dend_5 { pt3dadd( 599.823, 566.836, 34.5089, 0.376 ) }
    dend_5 { pt3dadd( 600.896, 567.226, 34.5635, 0.4774 ) }
    dend_5 { pt3dadd( 601.942, 567.677, 34.5699, 0.5788 ) }
    dend_5 { pt3dadd( 602.942, 568.225, 34.5688, 0.5016 ) }
    dend_5 { pt3dadd( 603.904, 568.806, 34.4602, 0.5004 ) }
    dend_5 { pt3dadd( 604.859, 569.395, 34.2527, 0.4966 ) }
    dend_5 { pt3dadd( 605.826, 570.006, 34.0536, 0.4978 ) }
    dend_5 { pt3dadd( 606.792, 570.617, 33.8688, 0.4584 ) }
    dend_5 { pt3dadd( 607.903, 570.887, 33.6955, 0.3596 ) }
    dend_5 { pt3dadd( 609.015, 571.153, 33.5317, 0.3006 ) }
    dend_5 { pt3dadd( 609.898, 571.685, 33.2606, 0.2758 ) }
    dend_5 { pt3dadd( 610.974, 571.915, 33.0176, 0.2768 ) }
    dend_5 { pt3dadd( 611.831, 571.24, 32.8594, 0.2786 ) }
    dend_5 { pt3dadd( 612.395, 570.401, 32.6936, 0.2822 ) }
    dend_5 { pt3dadd( 613.142, 569.572, 32.4965, 0.2886 ) }
    dend_5 { pt3dadd( 614.112, 569.247, 32.1846, 0.3016 ) }
    dend_5 { pt3dadd( 615.156, 569.615, 31.9116, 0.3192 ) }
    dend_5 { pt3dadd( 616.104, 570.24, 31.6756, 0.383 ) }
    dend_5 { pt3dadd( 617.096, 570.765, 31.4093, 0.3514 ) }
    dend_5 { pt3dadd( 618.06, 571.343, 31.173, 0.3336 ) }
    dend_5 { pt3dadd( 618.958, 572.05, 31.0388, 0.3314 ) }
    dend_5 { pt3dadd( 619.942, 572.579, 30.998, 0.4066 ) }
    dend_5 { pt3dadd( 621.038, 572.871, 31.0274, 0.39 ) }
    dend_5 { pt3dadd( 622.106, 573.223, 31.057, 0.4292 ) }
    dend_5 { pt3dadd( 623.12, 573.688, 30.9924, 0.3924 ) }
    dend_5 { pt3dadd( 624.088, 574.262, 30.8927, 0.3978 ) }
    dend_5 { pt3dadd( 625.003, 574.948, 30.8115, 0.508 ) }
    dend_5 { pt3dadd( 625.848, 575.708, 30.7726, 0.454 ) }
    dend_5 { pt3dadd( 626.619, 576.546, 30.7919, 0.4646 ) }
    dend_5 { pt3dadd( 627.682, 576.952, 30.8042, 0.4046 ) }
    dend_5 { pt3dadd( 628.755, 577.343, 30.8143, 0.4514 ) }
    dend_5 { pt3dadd( 629.602, 578.055, 30.9184, 0.4578 ) }
    dend_5 { pt3dadd( 630.427, 578.8, 31.071, 0.4004 ) }
    dend_5 { pt3dadd( 631.322, 579.464, 31.0912, 0.4018 ) }
    dend_5 { pt3dadd( 632.253, 580.076, 31.078, 0.3396 ) }
    dend_5 { pt3dadd( 633.245, 580.599, 31.1525, 0.3104 ) }
    dend_5 { pt3dadd( 634.242, 581.138, 31.2424, 0.2938 ) }
    dend_5 { pt3dadd( 635.245, 581.688, 31.2945, 0.3112 ) }
    dend_5 { pt3dadd( 636.166, 582.352, 31.3158, 0.3382 ) }
    dend_5 { pt3dadd( 636.966, 583.169, 31.3132, 0.413 ) }
    dend_5 { pt3dadd( 637.896, 583.823, 31.2558, 0.4328 ) }
    dend_5 { pt3dadd( 638.961, 583.902, 31.0349, 0.3594 ) }
    dend_5 { pt3dadd( 640.01, 584.272, 30.8288, 0.3002 ) }
    dend_5 { pt3dadd( 641.021, 584.809, 30.662, 0.2748 ) }
    dend_5 { pt3dadd( 642.047, 585.31, 30.5298, 0.275 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_5 { pt3dadd( 643.109, 585.736, 30.427, 0.2754 ) }
    dend_5 { pt3dadd( 644.167, 586.172, 30.3464, 0.2762 ) }
    dend_5 { pt3dadd( 645.198, 586.664, 30.2742, 0.2774 ) }
    dend_5 { pt3dadd( 646.241, 587.115, 30.1834, 0.2798 ) }
    dend_5 { pt3dadd( 647.369, 587.18, 30.0308, 0.2844 ) }
    dend_5 { pt3dadd( 648.497, 587.245, 29.8385, 0.2926 ) }
    dend_5 { pt3dadd( 649.599, 587.517, 29.6727, 0.3092 ) }
    dend_5 { pt3dadd( 650.69, 587.858, 29.5543, 0.3334 ) }
    dend_5 { pt3dadd( 651.763, 588.252, 29.4795, 0.4102 ) }
    dend_5 { pt3dadd( 652.872, 588.458, 29.4381, 0.398 ) }
    dend_5 { pt3dadd( 653.995, 588.344, 29.4171, 0.439 ) }
    dend_5 { pt3dadd( 655.033, 587.905, 29.4291, 0.434 ) }
    dend_5 { pt3dadd( 656.03, 587.513, 29.5285, 0.3616 ) }
    dend_5 { pt3dadd( 657.13, 587.224, 29.5532, 0.3042 ) }
    dend_5 { pt3dadd( 658.181, 587.092, 29.384, 0.2822 ) }
    dend_5 { pt3dadd( 658.924, 586.63, 29.0704, 0.289 ) }
    dend_5 { pt3dadd( 659.201, 585.577, 28.8134, 0.3008 ) }
    dend_5 { pt3dadd( 659.991, 584.906, 28.4682, 0.3254 ) }
    dend_5 { pt3dadd( 660.992, 584.851, 27.9295, 0.3582 ) }
    dend_5 { pt3dadd( 661.961, 585.284, 27.3806, 0.4808 ) }
    dend_5 { pt3dadd( 662.773, 585.965, 26.7993, 0.4088 ) }
    dend_5 { pt3dadd( 663.857, 586.159, 26.2984, 0.3554 ) }
    dend_5 { pt3dadd( 664.497, 585.398, 25.8388, 0.3248 ) }
    dend_5 { pt3dadd( 663.789, 584.664, 25.3933, 0.3942 ) }
    dend_5 { pt3dadd( 663.638, 583.652, 25.0109, 0.3672 ) }
    dend_5 { pt3dadd( 664.477, 583.059, 24.8736, 0.387 ) }
    dend_5 { pt3dadd( 665.614, 582.987, 24.8015, 0.3136 ) }
    dend_5 { pt3dadd( 666.403, 583.487, 24.6406, 0.2542 ) }
    dend_5 { pt3dadd( 667.252, 583.902, 24.8668, 0.2288 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 29/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 543.589, 574.787, 37.639, 0.3734 ) }
    dend_3 { pt3dadd( 543.422, 575.631, 37.8034, 0.2288 ) }
    dend_3 { pt3dadd( 543.203, 576.736, 38.1035, 0.2872 ) }
    dend_3 { pt3dadd( 543.143, 577.869, 38.2222, 0.299 ) }
    dend_3 { pt3dadd( 543.143, 579.013, 38.3141, 0.3148 ) }
    dend_3 { pt3dadd( 543.143, 580.157, 38.3788, 0.3746 ) }
    dend_3 { pt3dadd( 542.906, 581.271, 38.4446, 0.336 ) }
    dend_3 { pt3dadd( 542.653, 582.383, 38.4972, 0.3038 ) }
    dend_3 { pt3dadd( 542.43, 583.503, 38.4843, 0.2818 ) }
    dend_3 { pt3dadd( 542.206, 584.623, 38.4269, 0.2876 ) }
    dend_3 { pt3dadd( 541.789, 585.686, 38.3538, 0.2998 ) }
    dend_3 { pt3dadd( 541.174, 586.646, 38.2668, 0.316 ) }
    dend_3 { pt3dadd( 540.874, 587.733, 38.1646, 0.377 ) }
    dend_3 { pt3dadd( 541.039, 588.863, 38.0492, 0.3408 ) }
    dend_3 { pt3dadd( 541.318, 589.92, 37.8375, 0.3124 ) }
    dend_3 { pt3dadd( 541.609, 590.987, 37.5735, 0.2988 ) }
    dend_3 { pt3dadd( 541.718, 592.112, 37.3313, 0.3142 ) }
    dend_3 { pt3dadd( 541.14, 592.951, 37.1104, 0.3736 ) }
    dend_3 { pt3dadd( 540.273, 593.687, 36.8964, 0.334 ) }
    dend_3 { pt3dadd( 539.5, 594.427, 36.6092, 0.3004 ) }
    dend_3 { pt3dadd( 538.52, 594.847, 36.3432, 0.2752 ) }
    dend_3 { pt3dadd( 537.403, 594.815, 36.0268, 0.2756 ) }
    dend_3 { pt3dadd( 536.765, 595.261, 35.6367, 0.2766 ) }
    dend_3 { pt3dadd( 536.75, 596.341, 35.1218, 0.2784 ) }
    dend_3 { pt3dadd( 536.544, 597.333, 34.4484, 0.2818 ) }
    dend_3 { pt3dadd( 535.859, 598.092, 33.714, 0.2878 ) }
    dend_3 { pt3dadd( 534.805, 598.456, 33.0075, 0.3002 ) }
    dend_3 { pt3dadd( 533.82, 598.233, 32.312, 0.317 ) }
    dend_3 { pt3dadd( 533.055, 597.492, 31.5767, 0.3786 ) }
    dend_3 { pt3dadd( 532.138, 597.306, 30.7972, 0.3436 ) }
    dend_3 { pt3dadd( 531.057, 597.147, 30.0852, 0.318 ) }
    dend_3 { pt3dadd( 529.966, 596.815, 29.4851, 0.308 ) }
    dend_3 { pt3dadd( 528.885, 596.908, 28.9069, 0.3358 ) }
    dend_3 { pt3dadd( 527.893, 597.025, 28.2444, 0.3912 ) }
    dend_3 { pt3dadd( 526.898, 597.303, 27.5557, 0.4766 ) }
    dend_3 { pt3dadd( 525.844, 597.703, 26.9758, 0.7174 ) }
    dend_3 { pt3dadd( 524.82, 598.208, 26.5159, 0.765 ) }
    dend_3 { pt3dadd( 523.723, 598.516, 26.1574, 0.729 ) }
    dend_3 { pt3dadd( 522.612, 598.791, 25.8726, 0.579 ) }
    dend_3 { pt3dadd( 521.536, 599.061, 25.5571, 0.4774 ) }
    dend_3 { pt3dadd( 520.466, 599.339, 25.1937, 0.3474 ) }
    dend_3 { pt3dadd( 519.464, 599.89, 24.8795, 0.2796 ) }
    dend_3 { pt3dadd( 518.461, 600.441, 24.6083, 0.2288 ) }
    dend_3 { pt3dadd( 517.497, 600.847, 23.7364, 0.2288 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 73/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 543.589, 574.787, 37.639, 0.3734 ) }
    dend_2 { pt3dadd( 542.711, 575.276, 37.8958, 0.3338 ) }
    dend_2 { pt3dadd( 541.729, 575.592, 38.1298, 0.3 ) }
    dend_2 { pt3dadd( 540.711, 576.093, 38.344, 0.2746 ) }
    dend_2 { pt3dadd( 540.042, 576.991, 38.5372, 0.2746 ) }
    dend_2 { pt3dadd( 539.76, 578.095, 38.7128, 0.2746 ) }
    dend_2 { pt3dadd( 539.171, 578.981, 38.8906, 0.2746 ) }
    dend_2 { pt3dadd( 539.005, 580.093, 39.1306, 0.2746 ) }
    dend_2 { pt3dadd( 538.776, 581.188, 39.4184, 0.2746 ) }
    dend_2 { pt3dadd( 538.304, 582.227, 39.6852, 0.2746 ) }
    dend_2 { pt3dadd( 537.767, 583.203, 39.9389, 0.2746 ) }
    dend_2 { pt3dadd( 536.814, 583.774, 40.215, 0.2746 ) }
    dend_2 { pt3dadd( 535.745, 583.91, 40.5933, 0.2746 ) }
    dend_2 { pt3dadd( 534.727, 584.352, 41.0276, 0.2746 ) }
    dend_2 { pt3dadd( 533.75, 584.86, 41.4831, 0.2746 ) }
    dend_2 { pt3dadd( 532.992, 585.715, 41.8667, 0.2746 ) }
    dend_2 { pt3dadd( 532.159, 586.462, 42.2156, 0.2746 ) }
    dend_2 { pt3dadd( 531.51, 587.034, 42.7193, 0.2746 ) }
    dend_2 { pt3dadd( 530.589, 587.685, 43.104, 0.2746 ) }
    dend_2 { pt3dadd( 529.76, 588.381, 43.2813, 0.2746 ) }
    dend_2 { pt3dadd( 529.128, 589.568, 43.4538, 0.2746 ) }
    dend_2 { pt3dadd( 528.59, 590.575, 43.6296, 0.2746 ) }
    dend_2 { pt3dadd( 527.88, 591.456, 43.8396, 0.2746 ) }
    dend_2 { pt3dadd( 527.169, 592.335, 44.0756, 0.2746 ) }
    dend_2 { pt3dadd( 526.63, 593.33, 44.3545, 0.2746 ) }
    dend_2 { pt3dadd( 526.168, 594.35, 44.6594, 0.2746 ) }
    dend_2 { pt3dadd( 525.836, 595.377, 44.9599, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_2 { pt3dadd( 524.971, 596.088, 45.2696, 0.2746 ) }
    dend_2 { pt3dadd( 524.227, 596.858, 45.3782, 0.2746 ) }
    dend_2 { pt3dadd( 523.476, 597.644, 45.3849, 0.2746 ) }
    dend_2 { pt3dadd( 523.109, 598.62, 45.5524, 0.2746 ) }
    dend_2 { pt3dadd( 522.539, 599.598, 45.7498, 0.2746 ) }
    dend_2 { pt3dadd( 521.904, 600.522, 45.9558, 0.2746 ) }
    dend_2 { pt3dadd( 520.997, 601.214, 46.1051, 0.2746 ) }
    dend_2 { pt3dadd( 520.09, 601.908, 46.2367, 0.2746 ) }
    dend_2 { pt3dadd( 519.177, 602.599, 46.3641, 0.2746 ) }
    dend_2 { pt3dadd( 518.392, 603.418, 46.501, 0.2746 ) }
    dend_2 { pt3dadd( 517.669, 604.301, 46.683, 0.2746 ) }
    dend_2 { pt3dadd( 516.943, 605.153, 46.9599, 0.2746 ) }
    dend_2 { pt3dadd( 516.214, 605.994, 47.3239, 0.2748 ) }
    dend_2 { pt3dadd( 515.305, 606.648, 47.7246, 0.2748 ) }
    dend_2 { pt3dadd( 514.44, 607.352, 48.1314, 0.2752 ) }
    dend_2 { pt3dadd( 513.732, 608.229, 48.5136, 0.2756 ) }
    dend_2 { pt3dadd( 512.909, 608.974, 48.8034, 0.2766 ) }
    dend_2 { pt3dadd( 511.926, 609.54, 48.937, 0.2782 ) }
    dend_2 { pt3dadd( 510.993, 610.165, 49.0515, 0.2814 ) }
    dend_2 { pt3dadd( 510.081, 610.812, 49.1943, 0.287 ) }
    dend_2 { pt3dadd( 509.263, 611.578, 49.2313, 0.2988 ) }
    dend_2 { pt3dadd( 508.303, 612.053, 49.1448, 0.3142 ) }
    dend_2 { pt3dadd( 507.216, 611.985, 49.0868, 0.3734 ) }
    dend_2 { pt3dadd( 506.088, 611.841, 49.0745, 0.3338 ) }
    dend_2 { pt3dadd( 505.002, 612.188, 49.1011, 0.3 ) }
    dend_2 { pt3dadd( 503.921, 612.485, 49.2408, 0.2746 ) }
    dend_2 { pt3dadd( 502.842, 612.754, 49.511, 0.2746 ) }
    dend_2 { pt3dadd( 501.923, 612.869, 49.7725, 0.2746 ) }
    dend_2 { pt3dadd( 500.834, 613.169, 50.0528, 0.2746 ) }
    dend_2 { pt3dadd( 499.743, 613.163, 50.4025, 0.2746 ) }
    dend_2 { pt3dadd( 498.868, 612.459, 50.6878, 0.2746 ) }
    dend_2 { pt3dadd( 497.794, 612.069, 50.9102, 0.2746 ) }
    dend_2 { pt3dadd( 496.711, 611.699, 51.0888, 0.2746 ) }
    dend_2 { pt3dadd( 495.625, 611.364, 51.2697, 0.2746 ) }
    dend_2 { pt3dadd( 494.532, 611.116, 51.5082, 0.2746 ) }
    dend_2 { pt3dadd( 493.523, 610.721, 51.7728, 0.2746 ) }
    dend_2 { pt3dadd( 492.694, 609.969, 52.0052, 0.2746 ) }
    dend_2 { pt3dadd( 491.618, 609.631, 52.2175, 0.2744 ) }
    dend_2 { pt3dadd( 490.509, 609.548, 52.4698, 0.2744 ) }
    dend_2 { pt3dadd( 489.4, 609.513, 52.7526, 0.2742 ) }
    dend_2 { pt3dadd( 488.266, 609.369, 52.9799, 0.274 ) }
    dend_2 { pt3dadd( 487.135, 609.204, 53.1712, 0.2736 ) }
    dend_2 { pt3dadd( 485.999, 609.091, 53.342, 0.2728 ) }
    dend_2 { pt3dadd( 484.87, 609.06, 53.4761, 0.2712 ) }
    dend_2 { pt3dadd( 483.949, 608.667, 53.6057, 0.2684 ) }
    dend_2 { pt3dadd( 483.134, 608.173, 53.968, 0.2626 ) }
    dend_2 { pt3dadd( 482.035, 608.074, 54.39, 0.2542 ) }
    dend_2 { pt3dadd( 480.931, 607.887, 54.7848, 0.2288 ) }
    dend_2 { pt3dadd( 479.945, 608.174, 55.3851, 0.2288 ) }
    // Section: apic_32, id: apic_32, parent: apic_6 (entry count 49/100)
    apic_32 { pt3dclear() }
    apic_32 { pt3dadd( 536.87, 518.055, 41.137, 0.7354 ) }
    apic_32 { pt3dadd( 535.695, 518.334, 40.0971, 0.2288 ) }
    apic_32 { pt3dadd( 534.755, 518.414, 38.689, 0.3748 ) }
    apic_32 { pt3dadd( 533.836, 518.028, 38.0593, 0.3366 ) }
    apic_32 { pt3dadd( 532.849, 517.531, 37.4791, 0.305 ) }
    apic_32 { pt3dadd( 531.753, 517.373, 36.9345, 0.284 ) }
    apic_32 { pt3dadd( 530.628, 517.175, 36.4876, 0.292 ) }
    apic_32 { pt3dadd( 529.505, 517.112, 36.1315, 0.3066 ) }
    apic_32 { pt3dadd( 528.385, 517.336, 35.8579, 0.3358 ) }
    apic_32 { pt3dadd( 527.267, 517.566, 35.623, 0.3786 ) }
    apic_32 { pt3dadd( 526.188, 517.916, 35.3693, 0.5132 ) }
    apic_32 { pt3dadd( 525.109, 518.258, 35.0986, 0.4948 ) }
    apic_32 { pt3dadd( 523.994, 518.126, 34.79, 0.3898 ) }
    apic_32 { pt3dadd( 522.885, 518.054, 34.4747, 0.3092 ) }
    apic_32 { pt3dadd( 521.872, 518.222, 34.3087, 0.2918 ) }
    apic_32 { pt3dadd( 521.166, 517.487, 34.1368, 0.3062 ) }
    apic_32 { pt3dadd( 520.333, 517.04, 33.8257, 0.3354 ) }
    apic_32 { pt3dadd( 519.202, 517.04, 33.6322, 0.3778 ) }
    apic_32 { pt3dadd( 518.07, 516.943, 33.4891, 0.5118 ) }
    apic_32 { pt3dadd( 517.159, 516.397, 33.4082, 0.492 ) }
    apic_32 { pt3dadd( 516.56, 515.528, 33.215, 0.3848 ) }
    apic_32 { pt3dadd( 515.807, 515.569, 32.8006, 0.3002 ) }
    apic_32 { pt3dadd( 514.734, 515.667, 32.2812, 0.2748 ) }
    apic_32 { pt3dadd( 513.655, 515.787, 31.8811, 0.275 ) }
    apic_32 { pt3dadd( 512.637, 516.224, 31.4236, 0.2754 ) }
    apic_32 { pt3dadd( 511.691, 516.429, 30.8087, 0.276 ) }
    apic_32 { pt3dadd( 511.493, 516.124, 29.9586, 0.2772 ) }
    apic_32 { pt3dadd( 510.858, 516.023, 29.0374, 0.2796 ) }
    apic_32 { pt3dadd( 509.876, 515.484, 28.3962, 0.2838 ) }
    apic_32 { pt3dadd( 509.312, 515.208, 28.3136, 0.292 ) }
    apic_32 { pt3dadd( 508.906, 514.845, 28.6684, 0.3064 ) }
    apic_32 { pt3dadd( 507.85, 514.689, 28.9024, 0.3354 ) }
    apic_32 { pt3dadd( 506.888, 514.096, 29.12, 0.378 ) }
    apic_32 { pt3dadd( 505.945, 513.449, 29.2676, 0.5122 ) }
    apic_32 { pt3dadd( 504.995, 512.925, 29.3933, 0.4926 ) }
    apic_32 { pt3dadd( 503.858, 512.918, 29.4014, 0.3856 ) }
    apic_32 { pt3dadd( 502.79, 513.046, 29.1875, 0.3016 ) }
    apic_32 { pt3dadd( 501.706, 513.248, 28.8812, 0.2776 ) }
    apic_32 { pt3dadd( 500.644, 513.377, 28.474, 0.2804 ) }
    apic_32 { pt3dadd( 499.633, 513.408, 27.957, 0.2852 ) }
    apic_32 { pt3dadd( 498.767, 513.673, 27.6174, 0.2954 ) }
    apic_32 { pt3dadd( 498.13, 512.995, 27.5851, 0.3078 ) }
    apic_32 { pt3dadd( 497.096, 512.533, 27.5971, 0.3616 ) }
    apic_32 { pt3dadd( 495.964, 512.461, 27.6253, 0.3136 ) }
    apic_32 { pt3dadd( 494.896, 512.255, 27.5659, 0.2542 ) }
    apic_32 { pt3dadd( 494.142, 511.544, 27.1272, 0.2288 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 95/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 536.87, 518.055, 41.137, 0.7354 ) }
    apic_7 { pt3dadd( 535.814, 517.444, 41.3913, 0.8086 ) }
    apic_7 { pt3dadd( 535.002, 516.65, 41.4873, 0.7608 ) }
    apic_7 { pt3dadd( 534.476, 515.691, 41.4, 0.6474 ) }
    apic_7 { pt3dadd( 534.171, 514.593, 41.2832, 0.5588 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    apic_7 { pt3dadd( 533.646, 513.576, 41.188, 0.489 ) }
    apic_7 { pt3dadd( 533.031, 512.614, 41.1314, 0.5882 ) }
    apic_7 { pt3dadd( 532.263, 511.767, 41.1323, 0.5762 ) }
    apic_7 { pt3dadd( 531.484, 510.93, 41.1933, 0.5916 ) }
    apic_7 { pt3dadd( 530.81, 510.009, 41.3101, 0.4358 ) }
    apic_7 { pt3dadd( 530.352, 508.963, 41.4683, 0.3568 ) }
    apic_7 { pt3dadd( 529.917, 507.965, 41.7057, 0.335 ) }
    apic_7 { pt3dadd( 528.969, 507.546, 42.1145, 0.376 ) }
    apic_7 { pt3dadd( 527.916, 507.278, 42.5718, 0.5148 ) }
    apic_7 { pt3dadd( 526.979, 506.621, 42.961, 0.4664 ) }
    apic_7 { pt3dadd( 525.979, 506.083, 43.2928, 0.489 ) }
    apic_7 { pt3dadd( 525.017, 505.481, 43.5893, 0.4432 ) }
    apic_7 { pt3dadd( 524.258, 504.682, 43.9197, 0.5548 ) }
    apic_7 { pt3dadd( 523.661, 503.733, 44.2476, 0.4946 ) }
    apic_7 { pt3dadd( 523.275, 502.709, 44.6256, 0.5344 ) }
    apic_7 { pt3dadd( 523.026, 501.608, 44.9814, 0.5606 ) }
    apic_7 { pt3dadd( 522.65, 500.532, 45.2721, 0.6116 ) }
    apic_7 { pt3dadd( 521.966, 499.628, 45.5087, 0.6928 ) }
    apic_7 { pt3dadd( 521.258, 498.731, 45.7111, 0.6812 ) }
    apic_7 { pt3dadd( 520.56, 497.824, 45.9085, 0.7592 ) }
    apic_7 { pt3dadd( 519.836, 496.941, 46.1258, 0.6498 ) }
    apic_7 { pt3dadd( 518.952, 496.246, 46.4232, 0.5358 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 22/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 530.672, 554.045, 33.6143, 0.2836 ) }
    dend_46 { pt3dadd( 530.143, 554.344, 35.6835, 0.2288 ) }
    dend_46 { pt3dadd( 529.293, 555.029, 36.5649, 0.318 ) }
    dend_46 { pt3dadd( 528.51, 555.841, 36.925, 0.3808 ) }
    dend_46 { pt3dadd( 527.663, 556.569, 37.3548, 0.3472 ) }
    dend_46 { pt3dadd( 526.778, 557.26, 37.8288, 0.3258 ) }
    dend_46 { pt3dadd( 525.909, 557.972, 38.3298, 0.3172 ) }
    dend_46 { pt3dadd( 525.184, 558.833, 38.8058, 0.379 ) }
    dend_46 { pt3dadd( 524.51, 559.753, 39.2465, 0.3444 ) }
    dend_46 { pt3dadd( 524.041, 560.709, 39.7622, 0.3192 ) }
    dend_46 { pt3dadd( 523.778, 561.767, 40.3242, 0.3112 ) }
    dend_46 { pt3dadd( 523.266, 562.751, 40.8682, 0.3382 ) }
    dend_46 { pt3dadd( 522.677, 563.717, 41.3972, 0.413 ) }
    dend_46 { pt3dadd( 522.195, 564.682, 41.9812, 0.4328 ) }
    dend_46 { pt3dadd( 521.468, 565.468, 42.5846, 0.3594 ) }
    dend_46 { pt3dadd( 520.411, 565.755, 43.1152, 0.3002 ) }
    dend_46 { pt3dadd( 519.49, 566.289, 43.6447, 0.2748 ) }
    dend_46 { pt3dadd( 518.755, 567.144, 44.1034, 0.2752 ) }
    dend_46 { pt3dadd( 517.896, 567.888, 44.4822, 0.2756 ) }
    dend_46 { pt3dadd( 517.453, 568.873, 44.879, 0.2766 ) }
    dend_46 { pt3dadd( 517.239, 569.022, 45.2214, 0.2782 ) }
    dend_46 { pt3dadd( 516.302, 569.672, 45.5666, 0.2814 ) }
    dend_46 { pt3dadd( 515.486, 570.426, 45.9393, 0.2872 ) }
    dend_46 { pt3dadd( 514.93, 571.399, 46.3848, 0.2978 ) }
    dend_46 { pt3dadd( 514.562, 572.431, 46.9048, 0.3186 ) }
    dend_46 { pt3dadd( 514.388, 573.521, 47.4944, 0.3522 ) }
    dend_46 { pt3dadd( 514.268, 574.613, 48.1474, 0.4382 ) }
    dend_46 { pt3dadd( 513.945, 575.653, 48.7861, 0.4818 ) }
    dend_46 { pt3dadd( 513.237, 576.466, 49.4446, 0.4396 ) }
    dend_46 { pt3dadd( 512.346, 576.994, 50.1721, 0.5 ) }
    dend_46 { pt3dadd( 511.54, 577.678, 50.9116, 0.3974 ) }
    dend_46 { pt3dadd( 510.67, 578.373, 51.604, 0.3332 ) }
    dend_46 { pt3dadd( 509.833, 579.049, 52.288, 0.2888 ) }
    dend_46 { pt3dadd( 509.26, 579.987, 52.8637, 0.302 ) }
    dend_46 { pt3dadd( 508.939, 581.086, 53.3464, 0.3202 ) }
    dend_46 { pt3dadd( 509.293, 581.971, 53.7709, 0.3842 ) }
    dend_46 { pt3dadd( 509.924, 582.879, 54.1173, 0.356 ) }
    dend_46 { pt3dadd( 510.507, 583.742, 54.5457, 0.3304 ) }
    dend_46 { pt3dadd( 510.87, 584.815, 54.9301, 0.3814 ) }
    dend_46 { pt3dadd( 511.087, 585.276, 56.5152, 0.2288 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 62/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 530.672, 554.045, 33.6143, 0.2836 ) }
    dend_45 { pt3dadd( 529.51, 554.371, 33.4088, 0.2912 ) }
    dend_45 { pt3dadd( 528.526, 554.76, 33.0739, 0.3052 ) }
    dend_45 { pt3dadd( 527.465, 555.121, 32.7536, 0.3334 ) }
    dend_45 { pt3dadd( 526.455, 555.533, 32.4293, 0.373 ) }
    dend_45 { pt3dadd( 525.633, 556.328, 32.083, 0.5092 ) }
    dend_45 { pt3dadd( 524.992, 557.157, 31.6232, 0.4574 ) }
    dend_45 { pt3dadd( 524.008, 557.674, 31.1679, 0.4648 ) }
    dend_45 { pt3dadd( 523.34, 557.528, 30.5368, 0.4344 ) }
    dend_45 { pt3dadd( 522.523, 557.487, 29.7954, 0.3624 ) }
    dend_45 { pt3dadd( 521.612, 557.961, 29.2942, 0.3056 ) }
    dend_45 { pt3dadd( 521.054, 558.929, 29.052, 0.2852 ) }
    dend_45 { pt3dadd( 520.424, 559.721, 29.1533, 0.294 ) }
    dend_45 { pt3dadd( 519.831, 560.537, 29.3961, 0.3114 ) }
    dend_45 { pt3dadd( 519.177, 561.359, 29.6596, 0.3386 ) }
    dend_45 { pt3dadd( 518.075, 561.507, 29.9306, 0.4136 ) }
    dend_45 { pt3dadd( 516.982, 561.798, 30.0829, 0.4338 ) }
    dend_45 { pt3dadd( 515.938, 561.615, 30.2268, 0.3612 ) }
    dend_45 { pt3dadd( 514.913, 561.997, 30.2131, 0.3036 ) }
    dend_45 { pt3dadd( 514.083, 562.52, 29.9048, 0.2814 ) }
    dend_45 { pt3dadd( 513.247, 563.236, 29.5243, 0.287 ) }
    dend_45 { pt3dadd( 512.659, 564.145, 29.0422, 0.2988 ) }
    dend_45 { pt3dadd( 511.826, 564.88, 28.6051, 0.3142 ) }
    dend_45 { pt3dadd( 510.757, 564.892, 28.2531, 0.3738 ) }
    dend_45 { pt3dadd( 509.69, 564.766, 27.8826, 0.3344 ) }
    dend_45 { pt3dadd( 508.893, 565.09, 27.5056, 0.301 ) }
    dend_45 { pt3dadd( 508.765, 566.08, 27.3692, 0.2766 ) }
    dend_45 { pt3dadd( 508.262, 566.914, 27.3792, 0.2782 ) }
    dend_45 { pt3dadd( 507.461, 567.682, 27.2752, 0.2814 ) }
    dend_45 { pt3dadd( 506.53, 568.31, 27.1278, 0.2872 ) }
    dend_45 { pt3dadd( 505.489, 568.688, 27.0582, 0.299 ) }
    dend_45 { pt3dadd( 504.821, 568.5, 26.7907, 0.3146 ) }
    dend_45 { pt3dadd( 504.395, 568.833, 26.1474, 0.3744 ) }
    dend_45 { pt3dadd( 504.641, 569.496, 25.534, 0.3358 ) }
    dend_45 { pt3dadd( 504.439, 570.554, 25.0782, 0.3036 ) }
    dend_45 { pt3dadd( 504.475, 571.666, 24.6051, 0.2814 ) }
    dend_45 { pt3dadd( 504.616, 572.748, 23.983, 0.2868 ) }
    dend_45 { pt3dadd( 505.308, 573.389, 23.1679, 0.2984 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_45 { pt3dadd( 505.201, 573.867, 22.1668, 0.3136 ) }
    dend_45 { pt3dadd( 504.363, 574.274, 21.0787, 0.3724 ) }
    dend_45 { pt3dadd( 503.518, 574.286, 19.9116, 0.332 ) }
    dend_45 { pt3dadd( 502.842, 573.769, 18.8385, 0.2966 ) }
    dend_45 { pt3dadd( 502.842, 572.644, 18.116, 0.2684 ) }
    dend_45 { pt3dadd( 502.513, 571.691, 17.765, 0.2626 ) }
    dend_45 { pt3dadd( 501.434, 571.94, 17.5745, 0.2542 ) }
    dend_45 { pt3dadd( 500.379, 572.102, 17.368, 0.2288 ) }
    dend_45 { pt3dadd( 499.637, 572.912, 16.9546, 0.2288 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 9/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 518.18, 504.757, 17.4199, 0.414 ) }
    dend_40 { pt3dadd( 517.645, 505.711, 17.0335, 0.307 ) }
    dend_40 { pt3dadd( 517.461, 506.795, 16.8542, 0.2874 ) }
    dend_40 { pt3dadd( 517.429, 507.938, 16.808, 0.2994 ) }
    dend_40 { pt3dadd( 517.556, 509.058, 16.8579, 0.3156 ) }
    dend_40 { pt3dadd( 517.966, 510.126, 16.9517, 0.376 ) }
    dend_40 { pt3dadd( 518.698, 510.598, 16.9873, 0.3388 ) }
    dend_40 { pt3dadd( 518.943, 511.648, 17.0159, 0.309 ) }
    dend_40 { pt3dadd( 519.263, 512.666, 17.2076, 0.2912 ) }
    dend_40 { pt3dadd( 519.909, 513.527, 17.53, 0.3054 ) }
    dend_40 { pt3dadd( 520.536, 514.459, 17.7658, 0.3324 ) }
    dend_40 { pt3dadd( 520.708, 515.469, 17.8178, 0.3786 ) }
    dend_40 { pt3dadd( 520.87, 516.58, 17.9715, 0.4836 ) }
    dend_40 { pt3dadd( 521.133, 517.541, 18.3244, 0.5838 ) }
    dend_40 { pt3dadd( 521.052, 518.468, 18.837, 0.542 ) }
    dend_40 { pt3dadd( 521.081, 519.58, 19.2939, 0.4248 ) }
    dend_40 { pt3dadd( 521.726, 520.52, 19.6079, 0.3998 ) }
    dend_40 { pt3dadd( 522.052, 521.595, 19.743, 0.3358 ) }
    dend_40 { pt3dadd( 522.064, 522.693, 19.7548, 0.3034 ) }
    dend_40 { pt3dadd( 522.182, 523.397, 19.4231, 0.2808 ) }
    dend_40 { pt3dadd( 522.89, 524.24, 19.0929, 0.286 ) }
    dend_40 { pt3dadd( 523.655, 524.888, 19.0318, 0.297 ) }
    dend_40 { pt3dadd( 524.421, 525.218, 19.3534, 0.3108 ) }
    dend_40 { pt3dadd( 525.188, 525.89, 19.8602, 0.3672 ) }
    dend_40 { pt3dadd( 526.151, 526.441, 20.411, 0.322 ) }
    dend_40 { pt3dadd( 526.809, 527.363, 20.8793, 0.2796 ) }
    dend_40 { pt3dadd( 527.437, 528.32, 21.2083, 0.2288 ) }
    dend_40 { pt3dadd( 527.961, 529.336, 21.4757, 0.2288 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 37/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 518.18, 504.757, 17.4199, 0.414 ) }
    dend_39 { pt3dadd( 517.101, 504.268, 15.2015, 0.6864 ) }
    dend_39 { pt3dadd( 516.364, 503.441, 15.644, 0.446 ) }
    dend_39 { pt3dadd( 516.145, 502.474, 15.9669, 0.329 ) }
    dend_39 { pt3dadd( 515.953, 501.381, 16.1231, 0.2814 ) }
    dend_39 { pt3dadd( 515.713, 500.272, 16.1816, 0.287 ) }
    dend_39 { pt3dadd( 515.695, 498.982, 16.1169, 0.2988 ) }
    dend_39 { pt3dadd( 515.565, 497.875, 16.1449, 0.314 ) }
    dend_39 { pt3dadd( 514.81, 497.045, 16.2376, 0.3734 ) }
    dend_39 { pt3dadd( 514.643, 496.478, 16.2974, 0.3338 ) }
    dend_39 { pt3dadd( 514.491, 495.446, 16.3049, 0.2998 ) }
    dend_39 { pt3dadd( 514.418, 494.37, 16.3583, 0.2742 ) }
    dend_39 { pt3dadd( 513.987, 493.42, 16.6721, 0.274 ) }
    dend_39 { pt3dadd( 513.458, 492.899, 17.3835, 0.2736 ) }
    dend_39 { pt3dadd( 513.336, 492.163, 18.3966, 0.2728 ) }
    dend_39 { pt3dadd( 513.023, 491.327, 19.6009, 0.2712 ) }
    dend_39 { pt3dadd( 512.09, 490.896, 20.7644, 0.2684 ) }
    dend_39 { pt3dadd( 511.318, 490.26, 21.8838, 0.2626 ) }
    dend_39 { pt3dadd( 511.329, 489.772, 23.0696, 0.2542 ) }
    dend_39 { pt3dadd( 510.428, 489.563, 24.0922, 0.2288 ) }
    dend_39 { pt3dadd( 509.816, 488.694, 25.0603, 0.2288 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 58/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 538.119, 506.171, 25.0542, 0.3962 ) }
    dend_37 { pt3dadd( 538.74, 505.417, 25.146, 0.2288 ) }
    dend_37 { pt3dadd( 539.237, 504.411, 24.259, 0.3066 ) }
    dend_37 { pt3dadd( 539.469, 503.336, 23.8644, 0.3286 ) }
    dend_37 { pt3dadd( 539.328, 502.249, 23.3803, 0.4012 ) }
    dend_37 { pt3dadd( 539.24, 501.121, 22.9022, 0.3802 ) }
    dend_37 { pt3dadd( 538.63, 500.236, 22.3731, 0.4114 ) }
    dend_37 { pt3dadd( 538.031, 499.31, 21.8618, 0.357 ) }
    dend_37 { pt3dadd( 537.57, 498.275, 21.4503, 0.344 ) }
    dend_37 { pt3dadd( 536.973, 497.299, 21.1846, 0.3516 ) }
    dend_37 { pt3dadd( 536.182, 496.473, 21.0364, 0.4388 ) }
    dend_37 { pt3dadd( 535.409, 495.648, 21.0184, 0.4754 ) }
    dend_37 { pt3dadd( 534.839, 494.689, 21.1149, 0.4638 ) }
    dend_37 { pt3dadd( 534.544, 493.592, 21.1633, 0.3698 ) }
    dend_37 { pt3dadd( 534.828, 492.549, 21.0679, 0.3192 ) }
    dend_37 { pt3dadd( 535.708, 491.872, 20.9146, 0.3112 ) }
    dend_37 { pt3dadd( 535.891, 490.761, 20.7881, 0.3382 ) }
    dend_37 { pt3dadd( 535.672, 489.647, 20.6323, 0.413 ) }
    dend_37 { pt3dadd( 535.317, 488.594, 20.3703, 0.4328 ) }
    dend_37 { pt3dadd( 534.891, 487.577, 20.0452, 0.3594 ) }
    dend_37 { pt3dadd( 534.633, 486.612, 19.7565, 0.3 ) }
    dend_37 { pt3dadd( 535.471, 485.895, 19.5008, 0.2746 ) }
    dend_37 { pt3dadd( 536.354, 485.255, 19.25, 0.2746 ) }
    dend_37 { pt3dadd( 536.7, 484.243, 18.9645, 0.2748 ) }
    dend_37 { pt3dadd( 536.112, 483.534, 18.7218, 0.2748 ) }
    dend_37 { pt3dadd( 535.458, 482.819, 18.4552, 0.2752 ) }
    dend_37 { pt3dadd( 535.135, 481.784, 18.0965, 0.2756 ) }
    dend_37 { pt3dadd( 534.651, 480.771, 17.7729, 0.2764 ) }
    dend_37 { pt3dadd( 534.179, 479.742, 17.5642, 0.2782 ) }
    dend_37 { pt3dadd( 533.914, 478.677, 17.3499, 0.2812 ) }
    dend_37 { pt3dadd( 533.372, 477.771, 17.0643, 0.2868 ) }
    dend_37 { pt3dadd( 532.497, 477.077, 16.8589, 0.297 ) }
    dend_37 { pt3dadd( 531.776, 476.241, 16.794, 0.3172 ) }
    dend_37 { pt3dadd( 530.888, 475.564, 16.7485, 0.3494 ) }
    dend_37 { pt3dadd( 529.872, 475.135, 16.603, 0.4334 ) }
    dend_37 { pt3dadd( 529.007, 474.487, 16.3693, 0.4716 ) }
    dend_37 { pt3dadd( 528.073, 473.855, 16.1961, 0.426 ) }
    dend_37 { pt3dadd( 527.096, 473.273, 16.0859, 0.4498 ) }
    dend_37 { pt3dadd( 526.208, 472.558, 15.9851, 0.4254 ) }
    dend_37 { pt3dadd( 525.421, 471.734, 15.874, 0.4848 ) }
    dend_37 { pt3dadd( 524.888, 470.733, 15.7632, 0.5442 ) }
    dend_37 { pt3dadd( 524.271, 469.774, 15.6916, 0.4416 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_37 { pt3dadd( 523.521, 469.068, 15.4532, 0.3704 ) }
    dend_37 { pt3dadd( 522.862, 468.147, 15.2537, 0.3474 ) }
    dend_37 { pt3dadd( 521.932, 467.5, 15.1658, 0.4604 ) }
    dend_37 { pt3dadd( 521.112, 466.703, 15.1164, 0.3728 ) }
    dend_37 { pt3dadd( 520.45, 465.77, 15.0956, 0.2796 ) }
    dend_37 { pt3dadd( 519.833, 464.807, 15.12, 0.2288 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 6/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 538.119, 506.171, 25.0542, 0.3962 ) }
    dend_36 { pt3dadd( 538.249, 505.958, 24.2873, 0.3312 ) }
    dend_36 { pt3dadd( 537.964, 505.553, 23.3727, 0.2852 ) }
    dend_36 { pt3dadd( 537.443, 505.472, 22.3038, 0.294 ) }
    dend_36 { pt3dadd( 536.512, 505.324, 21.4736, 0.3116 ) }
    dend_36 { pt3dadd( 535.37, 505.338, 20.917, 0.339 ) }
    dend_36 { pt3dadd( 534.234, 505.442, 20.5592, 0.4144 ) }
    dend_36 { pt3dadd( 533.172, 505.087, 20.3063, 0.4352 ) }
    dend_36 { pt3dadd( 532.096, 504.836, 20.154, 0.364 ) }
    dend_36 { pt3dadd( 531.2, 504.732, 20.3039, 0.3086 ) }
    dend_36 { pt3dadd( 530.281, 504.666, 20.6176, 0.2906 ) }
    dend_36 { pt3dadd( 529.45, 503.911, 20.9235, 0.304 ) }
    dend_36 { pt3dadd( 528.601, 503.438, 21.0501, 0.33 ) }
    dend_36 { pt3dadd( 527.961, 502.639, 21.2518, 0.373 ) }
    dend_36 { pt3dadd( 526.919, 502.578, 21.53, 0.478 ) }
    dend_36 { pt3dadd( 525.818, 502.553, 21.8702, 0.55 ) }
    dend_36 { pt3dadd( 525.294, 501.637, 22.1465, 0.5926 ) }
    dend_36 { pt3dadd( 524.335, 501.205, 22.5229, 0.655 ) }
    dend_36 { pt3dadd( 523.219, 501.116, 22.9323, 0.6228 ) }
    dend_36 { pt3dadd( 522.088, 501.008, 23.2851, 0.5946 ) }
    dend_36 { pt3dadd( 520.974, 501.191, 23.6453, 0.6182 ) }
    dend_36 { pt3dadd( 519.887, 500.962, 24.0619, 0.5226 ) }
    dend_36 { pt3dadd( 518.784, 500.688, 24.4492, 0.564 ) }
    dend_36 { pt3dadd( 517.724, 500.366, 24.8857, 0.4946 ) }
    dend_36 { pt3dadd( 516.664, 500.06, 25.3344, 0.3892 ) }
    dend_36 { pt3dadd( 515.88, 499.675, 25.8479, 0.3084 ) }
    dend_36 { pt3dadd( 515.278, 499.151, 26.428, 0.29 ) }
    dend_36 { pt3dadd( 514.398, 498.798, 26.826, 0.3044 ) }
    dend_36 { pt3dadd( 513.424, 498.467, 27.0237, 0.3246 ) }
    dend_36 { pt3dadd( 512.375, 498.199, 27.096, 0.3926 ) }
    dend_36 { pt3dadd( 511.424, 497.604, 27.1617, 0.3706 ) }
    dend_36 { pt3dadd( 510.392, 497.315, 27.1425, 0.3624 ) }
    dend_36 { pt3dadd( 509.622, 497.602, 27.3626, 0.4168 ) }
    dend_36 { pt3dadd( 508.724, 497.543, 27.6919, 0.41 ) }
    dend_36 { pt3dadd( 507.909, 497.228, 27.7732, 0.4626 ) }
    dend_36 { pt3dadd( 506.919, 496.665, 27.8473, 0.4724 ) }
    dend_36 { pt3dadd( 506.181, 495.809, 27.928, 0.4584 ) }
    dend_36 { pt3dadd( 505.301, 495.125, 28.0417, 0.3596 ) }
    dend_36 { pt3dadd( 504.219, 494.764, 28.1168, 0.3004 ) }
    dend_36 { pt3dadd( 503.09, 494.576, 28.1966, 0.2754 ) }
    dend_36 { pt3dadd( 501.953, 494.454, 28.3055, 0.2762 ) }
    dend_36 { pt3dadd( 500.855, 494.207, 28.4612, 0.2776 ) }
    dend_36 { pt3dadd( 499.822, 493.789, 28.6726, 0.2802 ) }
    dend_36 { pt3dadd( 498.785, 493.373, 28.7879, 0.285 ) }
    dend_36 { pt3dadd( 497.842, 492.786, 28.9324, 0.2938 ) }
    dend_36 { pt3dadd( 497.38, 492.05, 29.1819, 0.3112 ) }
    dend_36 { pt3dadd( 496.608, 491.766, 29.169, 0.3382 ) }
    dend_36 { pt3dadd( 495.865, 490.982, 29.0903, 0.413 ) }
    dend_36 { pt3dadd( 494.609, 490.598, 29.0242, 0.4328 ) }
    dend_36 { pt3dadd( 493.516, 490.262, 28.9867, 0.3594 ) }
    dend_36 { pt3dadd( 492.627, 489.595, 29.0139, 0.3002 ) }
    dend_36 { pt3dadd( 491.814, 488.81, 29.115, 0.2752 ) }
    dend_36 { pt3dadd( 490.96, 488.059, 29.2401, 0.2756 ) }
    dend_36 { pt3dadd( 489.878, 487.772, 29.3527, 0.2766 ) }
    dend_36 { pt3dadd( 488.777, 488.085, 29.4451, 0.2782 ) }
    dend_36 { pt3dadd( 487.716, 488.474, 29.5201, 0.2814 ) }
    dend_36 { pt3dadd( 486.708, 488.981, 29.5826, 0.287 ) }
    dend_36 { pt3dadd( 485.591, 489.105, 29.678, 0.2988 ) }
    dend_36 { pt3dadd( 484.538, 488.848, 29.8682, 0.3142 ) }
    dend_36 { pt3dadd( 483.878, 488.051, 29.9163, 0.3734 ) }
    dend_36 { pt3dadd( 482.915, 487.497, 30.0244, 0.3338 ) }
    dend_36 { pt3dadd( 481.876, 487.071, 30.2005, 0.3 ) }
    dend_36 { pt3dadd( 480.769, 486.819, 30.3649, 0.2746 ) }
    dend_36 { pt3dadd( 479.669, 486.516, 30.4984, 0.2746 ) }
    dend_36 { pt3dadd( 478.699, 486.994, 30.6141, 0.2746 ) }
    dend_36 { pt3dadd( 477.855, 487.706, 30.7342, 0.2746 ) }
    dend_36 { pt3dadd( 476.723, 487.862, 30.8554, 0.2746 ) }
    dend_36 { pt3dadd( 475.594, 488.036, 31.0027, 0.2746 ) }
    dend_36 { pt3dadd( 474.467, 488.163, 31.1895, 0.2746 ) }
    dend_36 { pt3dadd( 473.351, 487.954, 31.4356, 0.2746 ) }
    dend_36 { pt3dadd( 472.234, 487.744, 31.7254, 0.2746 ) }
    dend_36 { pt3dadd( 471.178, 487.362, 32.0656, 0.2746 ) }
    dend_36 { pt3dadd( 470.126, 486.968, 32.4341, 0.2746 ) }
    dend_36 { pt3dadd( 469.001, 486.901, 32.8042, 0.2746 ) }
    dend_36 { pt3dadd( 467.877, 486.835, 33.1601, 0.2746 ) }
    dend_36 { pt3dadd( 466.77, 487.035, 33.4454, 0.2746 ) }
    dend_36 { pt3dadd( 465.673, 487.355, 33.6476, 0.2746 ) }
    dend_36 { pt3dadd( 464.553, 487.564, 33.7767, 0.2746 ) }
    dend_36 { pt3dadd( 463.413, 487.64, 33.8467, 0.2746 ) }
    dend_36 { pt3dadd( 462.272, 487.718, 33.8761, 0.2746 ) }
    dend_36 { pt3dadd( 461.128, 487.731, 33.8806, 0.2746 ) }
    dend_36 { pt3dadd( 459.984, 487.731, 33.8741, 0.2746 ) }
    dend_36 { pt3dadd( 458.84, 487.731, 33.8615, 0.2746 ) }
    dend_36 { pt3dadd( 457.696, 487.731, 33.8425, 0.2746 ) }
    dend_36 { pt3dadd( 456.552, 487.731, 33.8164, 0.2746 ) }
    dend_36 { pt3dadd( 455.484, 488.053, 33.7795, 0.2746 ) }
    dend_36 { pt3dadd( 454.488, 488.616, 33.7263, 0.2746 ) }
    dend_36 { pt3dadd( 453.527, 489.211, 33.6529, 0.2746 ) }
    dend_36 { pt3dadd( 452.444, 489.579, 33.5546, 0.2746 ) }
    dend_36 { pt3dadd( 451.4, 489.997, 33.4253, 0.2746 ) }
    dend_36 { pt3dadd( 450.703, 490.811, 33.2083, 0.2748 ) }
    dend_36 { pt3dadd( 449.926, 491.461, 32.8798, 0.2748 ) }
    dend_36 { pt3dadd( 449.527, 492.526, 32.5545, 0.2752 ) }
    dend_36 { pt3dadd( 449.252, 493.612, 32.1703, 0.2756 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_36 { pt3dadd( 448.829, 494.567, 31.7223, 0.2766 ) }
    dend_36 { pt3dadd( 447.786, 495.009, 31.2978, 0.2782 ) }
    dend_36 { pt3dadd( 446.656, 495.066, 30.8538, 0.2814 ) }
    dend_36 { pt3dadd( 445.978, 495.877, 30.317, 0.287 ) }
    dend_36 { pt3dadd( 445.451, 496.83, 29.7237, 0.2988 ) }
    dend_36 { pt3dadd( 444.891, 497.736, 29.0984, 0.3142 ) }
    dend_36 { pt3dadd( 443.953, 498.37, 28.4995, 0.3734 ) }
    dend_36 { pt3dadd( 443.09, 499.073, 27.9065, 0.3338 ) }
    dend_36 { pt3dadd( 442.353, 499.898, 27.306, 0.3 ) }
    dend_36 { pt3dadd( 441.625, 500.658, 26.668, 0.2746 ) }
    dend_36 { pt3dadd( 440.924, 501.498, 26.0523, 0.2746 ) }
    dend_36 { pt3dadd( 439.98, 501.968, 25.4969, 0.2744 ) }
    dend_36 { pt3dadd( 439.17, 502.542, 25.0736, 0.2744 ) }
    dend_36 { pt3dadd( 438.779, 503.617, 24.7519, 0.2742 ) }
    dend_36 { pt3dadd( 438.284, 504.648, 24.4972, 0.274 ) }
    dend_36 { pt3dadd( 437.428, 505.381, 24.27, 0.2736 ) }
    dend_36 { pt3dadd( 436.632, 506.204, 24.0274, 0.2728 ) }
    dend_36 { pt3dadd( 435.736, 506.871, 23.6556, 0.2712 ) }
    dend_36 { pt3dadd( 434.796, 507.469, 23.1512, 0.2684 ) }
    dend_36 { pt3dadd( 433.956, 508.11, 22.5076, 0.2626 ) }
    dend_36 { pt3dadd( 433.047, 508.423, 21.7272, 0.2542 ) }
    dend_36 { pt3dadd( 432.431, 509.136, 20.9244, 0.2288 ) }
    dend_36 { pt3dadd( 432.316, 510.17, 19.2153, 0.2288 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 23/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 547.661, 597.555, 58.868, 0.2746 ) }
    dend_8 { pt3dadd( 546.539, 597.431, 59.3718, 0.2288 ) }
    dend_8 { pt3dadd( 546.362, 596.325, 59.7358, 0.2746 ) }
    dend_8 { pt3dadd( 545.602, 595.571, 59.9312, 0.2746 ) }
    dend_8 { pt3dadd( 545.155, 594.58, 60.1177, 0.2746 ) }
    dend_8 { pt3dadd( 544.685, 593.681, 60.2958, 0.2744 ) }
    dend_8 { pt3dadd( 543.581, 593.451, 60.4699, 0.2744 ) }
    dend_8 { pt3dadd( 542.528, 593.263, 60.7113, 0.2742 ) }
    dend_8 { pt3dadd( 541.487, 593.429, 61.0179, 0.274 ) }
    dend_8 { pt3dadd( 540.414, 593.108, 61.3015, 0.2736 ) }
    dend_8 { pt3dadd( 539.474, 592.587, 61.6171, 0.2728 ) }
    dend_8 { pt3dadd( 538.354, 592.48, 61.9203, 0.2712 ) }
    dend_8 { pt3dadd( 537.351, 591.955, 62.2241, 0.2684 ) }
    dend_8 { pt3dadd( 536.267, 591.586, 62.4607, 0.2626 ) }
    dend_8 { pt3dadd( 535.216, 591.135, 62.6452, 0.2542 ) }
    dend_8 { pt3dadd( 534.18, 590.788, 62.8788, 0.2288 ) }
    dend_8 { pt3dadd( 533.093, 590.994, 63.4729, 0.2288 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 40/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 547.661, 597.555, 58.868, 0.2746 ) }
    dend_7 { pt3dadd( 546.52, 597.575, 59.1004, 0.2746 ) }
    dend_7 { pt3dadd( 545.44, 597.908, 59.2922, 0.2746 ) }
    dend_7 { pt3dadd( 544.359, 598.239, 59.4073, 0.2746 ) }
    dend_7 { pt3dadd( 543.416, 598.846, 59.5045, 0.2746 ) }
    dend_7 { pt3dadd( 542.586, 599.63, 59.6411, 0.2746 ) }
    dend_7 { pt3dadd( 541.867, 600.505, 59.8522, 0.2746 ) }
    dend_7 { pt3dadd( 541.153, 601.369, 60.156, 0.2746 ) }
    dend_7 { pt3dadd( 540.437, 601.432, 60.5192, 0.2746 ) }
    dend_7 { pt3dadd( 539.33, 601.529, 60.958, 0.2746 ) }
    dend_7 { pt3dadd( 538.221, 601.626, 61.4351, 0.2746 ) }
    dend_7 { pt3dadd( 537.099, 601.691, 61.8864, 0.2746 ) }
    dend_7 { pt3dadd( 535.955, 601.71, 62.2555, 0.2746 ) }
    dend_7 { pt3dadd( 534.81, 601.728, 62.5674, 0.2746 ) }
    dend_7 { pt3dadd( 533.692, 601.862, 62.8998, 0.2746 ) }
    dend_7 { pt3dadd( 532.586, 602.054, 63.2797, 0.2746 ) }
    dend_7 { pt3dadd( 531.497, 602.303, 63.7098, 0.2746 ) }
    dend_7 { pt3dadd( 530.421, 602.597, 64.1872, 0.2746 ) }
    dend_7 { pt3dadd( 529.495, 603.073, 64.7357, 0.2746 ) }
    dend_7 { pt3dadd( 528.617, 603.413, 65.3036, 0.2746 ) }
    dend_7 { pt3dadd( 527.518, 603.095, 65.744, 0.2746 ) }
    dend_7 { pt3dadd( 526.419, 602.778, 66.0778, 0.2746 ) }
    dend_7 { pt3dadd( 525.318, 602.461, 66.3295, 0.2746 ) }
    dend_7 { pt3dadd( 524.211, 602.401, 66.5619, 0.2746 ) }
    dend_7 { pt3dadd( 523.096, 602.538, 66.8142, 0.2746 ) }
    dend_7 { pt3dadd( 521.981, 602.675, 67.0888, 0.2746 ) }
    dend_7 { pt3dadd( 520.956, 603.167, 67.3277, 0.2746 ) }
    dend_7 { pt3dadd( 519.94, 603.693, 67.5234, 0.2746 ) }
    dend_7 { pt3dadd( 518.947, 604.256, 67.6774, 0.2746 ) }
    dend_7 { pt3dadd( 517.992, 604.884, 67.7914, 0.2746 ) }
    dend_7 { pt3dadd( 517.034, 605.511, 67.8751, 0.2746 ) }
    dend_7 { pt3dadd( 516.08, 606.139, 67.9414, 0.2746 ) }
    dend_7 { pt3dadd( 515.124, 606.767, 68.0028, 0.2746 ) }
    dend_7 { pt3dadd( 514.169, 607.395, 68.0596, 0.2746 ) }
    dend_7 { pt3dadd( 513.224, 608.041, 68.1083, 0.2746 ) }
    dend_7 { pt3dadd( 512.315, 608.735, 68.1419, 0.2746 ) }
    dend_7 { pt3dadd( 511.406, 609.428, 68.1638, 0.2746 ) }
    dend_7 { pt3dadd( 510.496, 610.122, 68.1761, 0.2746 ) }
    dend_7 { pt3dadd( 509.586, 610.816, 68.182, 0.2746 ) }
    dend_7 { pt3dadd( 508.676, 611.509, 68.1831, 0.2746 ) }
    dend_7 { pt3dadd( 507.767, 612.202, 68.182, 0.2746 ) }
    dend_7 { pt3dadd( 506.855, 612.896, 68.1792, 0.2746 ) }
    dend_7 { pt3dadd( 506.267, 613.869, 68.1727, 0.2746 ) }
    dend_7 { pt3dadd( 505.704, 614.866, 68.1626, 0.2746 ) }
    dend_7 { pt3dadd( 505.143, 615.862, 68.1495, 0.2746 ) }
    dend_7 { pt3dadd( 504.582, 616.859, 68.1338, 0.2746 ) }
    dend_7 { pt3dadd( 504.02, 617.855, 68.1167, 0.2746 ) }
    dend_7 { pt3dadd( 503.47, 618.857, 68.0935, 0.2746 ) }
    dend_7 { pt3dadd( 502.928, 619.864, 68.0638, 0.2746 ) }
    dend_7 { pt3dadd( 502.385, 620.87, 68.0338, 0.2746 ) }
    dend_7 { pt3dadd( 501.844, 621.877, 68.0095, 0.2746 ) }
    dend_7 { pt3dadd( 501.022, 622.653, 68.0212, 0.2746 ) }
    dend_7 { pt3dadd( 500.138, 623.379, 68.0702, 0.2746 ) }
    dend_7 { pt3dadd( 499.255, 624.105, 68.1514, 0.2746 ) }
    dend_7 { pt3dadd( 498.372, 624.831, 68.2601, 0.2746 ) }
    dend_7 { pt3dadd( 497.48, 625.545, 68.3872, 0.2746 ) }
    dend_7 { pt3dadd( 496.566, 626.234, 68.5219, 0.2746 ) }
    dend_7 { pt3dadd( 495.654, 626.923, 68.6739, 0.2746 ) }
    dend_7 { pt3dadd( 494.741, 627.613, 68.8618, 0.2746 ) }
    dend_7 { pt3dadd( 493.828, 628.302, 69.1037, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_7 { pt3dadd( 492.915, 628.992, 69.4165, 0.2746 ) }
    dend_7 { pt3dadd( 492.002, 629.68, 69.811, 0.2746 ) }
    dend_7 { pt3dadd( 492.609, 629.227, 70.4914, 0.2746 ) }
    dend_7 { pt3dadd( 492.811, 628.797, 71.4711, 0.2746 ) }
    dend_7 { pt3dadd( 491.864, 629.186, 72.5309, 0.2746 ) }
    dend_7 { pt3dadd( 491.523, 629.932, 73.7024, 0.2746 ) }
    dend_7 { pt3dadd( 490.48, 630.144, 74.797, 0.2744 ) }
    dend_7 { pt3dadd( 489.401, 630.33, 75.7887, 0.2744 ) }
    dend_7 { pt3dadd( 488.322, 630.517, 76.6668, 0.2742 ) }
    dend_7 { pt3dadd( 487.243, 630.704, 77.462, 0.274 ) }
    dend_7 { pt3dadd( 486.161, 630.45, 78.1267, 0.2736 ) }
    dend_7 { pt3dadd( 485.079, 630.081, 78.6848, 0.2728 ) }
    dend_7 { pt3dadd( 483.997, 629.71, 79.2263, 0.2712 ) }
    dend_7 { pt3dadd( 483.055, 629.825, 79.9394, 0.2684 ) }
    dend_7 { pt3dadd( 482.152, 630.075, 80.8231, 0.2626 ) }
    dend_7 { pt3dadd( 481.198, 629.966, 81.7802, 0.2542 ) }
    dend_7 { pt3dadd( 480.219, 629.682, 82.7478, 0.2288 ) }
    dend_7 { pt3dadd( 479.24, 629.397, 84.7731, 0.2288 ) }
    // Section: apic_9, id: apic_9, parent: apic_7 (entry count 18/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 518.952, 496.246, 46.4232, 0.5358 ) }
    apic_9 { pt3dadd( 518.148, 495.786, 46.9493, 0.5798 ) }
    apic_9 { pt3dadd( 517.122, 495.537, 47.5583, 0.5654 ) }
    // Section: apic_8, id: apic_8, parent: apic_7 (entry count 21/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 518.952, 496.246, 46.4232, 0.5358 ) }
    apic_8 { pt3dadd( 519.395, 495.732, 46.0687, 0.2288 ) }
    apic_8 { pt3dadd( 520.218, 494.97, 46.1373, 0.3112 ) }
    apic_8 { pt3dadd( 521.21, 494.4, 46.1594, 0.3382 ) }
    apic_8 { pt3dadd( 522.205, 493.839, 46.1569, 0.413 ) }
    apic_8 { pt3dadd( 523.211, 493.297, 46.1138, 0.4328 ) }
    apic_8 { pt3dadd( 524.195, 492.721, 46.0485, 0.3594 ) }
    apic_8 { pt3dadd( 525.133, 492.065, 45.9889, 0.3002 ) }
    apic_8 { pt3dadd( 526.188, 491.681, 45.9208, 0.2748 ) }
    apic_8 { pt3dadd( 527.302, 491.428, 45.8508, 0.2752 ) }
    apic_8 { pt3dadd( 528.314, 490.935, 45.7926, 0.2756 ) }
    apic_8 { pt3dadd( 529.276, 490.319, 45.7512, 0.2766 ) }
    apic_8 { pt3dadd( 530.201, 489.674, 45.799, 0.2782 ) }
    apic_8 { pt3dadd( 531.109, 489.02, 45.9326, 0.2814 ) }
    apic_8 { pt3dadd( 532.081, 488.419, 46.0449, 0.287 ) }
    apic_8 { pt3dadd( 533.057, 487.819, 46.137, 0.2988 ) }
    apic_8 { pt3dadd( 534.137, 487.48, 46.1633, 0.3142 ) }
    apic_8 { pt3dadd( 535.224, 487.159, 46.139, 0.3736 ) }
    apic_8 { pt3dadd( 536.08, 486.423, 46.1138, 0.334 ) }
    apic_8 { pt3dadd( 536.898, 485.628, 46.1174, 0.3004 ) }
    apic_8 { pt3dadd( 537.546, 484.835, 46.3649, 0.2752 ) }
    apic_8 { pt3dadd( 538.393, 484.16, 46.6847, 0.2758 ) }
    apic_8 { pt3dadd( 539.424, 483.849, 46.8866, 0.2768 ) }
    apic_8 { pt3dadd( 540.297, 483.167, 47.1881, 0.2786 ) }
    apic_8 { pt3dadd( 541.141, 482.441, 47.5398, 0.282 ) }
    apic_8 { pt3dadd( 541.482, 481.451, 47.9388, 0.288 ) }
    apic_8 { pt3dadd( 542.276, 480.638, 48.2258, 0.3008 ) }
    apic_8 { pt3dadd( 543.344, 480.723, 48.4366, 0.3178 ) }
    apic_8 { pt3dadd( 544.471, 480.808, 48.5825, 0.3802 ) }
    apic_8 { pt3dadd( 545.317, 480.124, 48.697, 0.3464 ) }
    apic_8 { pt3dadd( 545.974, 479.293, 48.8538, 0.3242 ) }
    apic_8 { pt3dadd( 547.047, 479.029, 48.8771, 0.3142 ) }
    apic_8 { pt3dadd( 548.046, 479.392, 48.7388, 0.3734 ) }
    apic_8 { pt3dadd( 549.021, 479.081, 48.4812, 0.3338 ) }
    apic_8 { pt3dadd( 550.031, 478.603, 48.3227, 0.3 ) }
    apic_8 { pt3dadd( 551.159, 478.414, 48.1992, 0.2746 ) }
    apic_8 { pt3dadd( 552.273, 478.193, 48.144, 0.2746 ) }
    apic_8 { pt3dadd( 553.343, 477.845, 48.2462, 0.2746 ) }
    apic_8 { pt3dadd( 554.404, 477.467, 48.4473, 0.2746 ) }
    apic_8 { pt3dadd( 555.453, 477.017, 48.6637, 0.2746 ) }
    apic_8 { pt3dadd( 556.523, 476.64, 48.8653, 0.2746 ) }
    apic_8 { pt3dadd( 557.643, 476.457, 49.0616, 0.2746 ) }
    apic_8 { pt3dadd( 558.755, 476.252, 49.2316, 0.2748 ) }
    apic_8 { pt3dadd( 559.682, 475.582, 49.3105, 0.2748 ) }
    apic_8 { pt3dadd( 560.622, 474.945, 49.3181, 0.2752 ) }
    apic_8 { pt3dadd( 561.734, 474.755, 49.2232, 0.2756 ) }
    apic_8 { pt3dadd( 562.846, 474.567, 49.0588, 0.2766 ) }
    apic_8 { pt3dadd( 563.724, 473.871, 48.9188, 0.2782 ) }
    apic_8 { pt3dadd( 564.773, 473.894, 48.82, 0.2814 ) }
    apic_8 { pt3dadd( 565.77, 474.383, 48.7721, 0.287 ) }
    apic_8 { pt3dadd( 566.854, 474.704, 48.7721, 0.2988 ) }
    apic_8 { pt3dadd( 567.901, 475.17, 48.8146, 0.3142 ) }
    apic_8 { pt3dadd( 568.951, 475.623, 48.8838, 0.3734 ) }
    apic_8 { pt3dadd( 569.997, 476.06, 49.0081, 0.334 ) }
    apic_8 { pt3dadd( 571.064, 476.279, 49.2422, 0.3002 ) }
    apic_8 { pt3dadd( 572.161, 475.969, 49.432, 0.275 ) }
    apic_8 { pt3dadd( 573.185, 475.458, 49.5779, 0.2752 ) }
    apic_8 { pt3dadd( 574.208, 474.945, 49.6835, 0.2758 ) }
    apic_8 { pt3dadd( 575.232, 474.434, 49.7538, 0.2768 ) }
    apic_8 { pt3dadd( 576.281, 473.984, 49.7963, 0.2786 ) }
    apic_8 { pt3dadd( 577.364, 473.616, 49.8226, 0.2822 ) }
    apic_8 { pt3dadd( 578.378, 473.141, 49.8529, 0.2888 ) }
    apic_8 { pt3dadd( 579.26, 472.45, 49.8868, 0.3006 ) }
    apic_8 { pt3dadd( 580.333, 472.185, 49.9772, 0.3236 ) }
    apic_8 { pt3dadd( 581.44, 472.244, 50.1371, 0.3624 ) }
    apic_8 { pt3dadd( 582.533, 472.312, 50.1948, 0.4526 ) }
    apic_8 { pt3dadd( 583.576, 472.081, 50.1567, 0.5316 ) }
    apic_8 { pt3dadd( 584.516, 471.478, 50.1833, 0.4188 ) }
    apic_8 { pt3dadd( 585.432, 470.812, 50.2463, 0.3258 ) }
    apic_8 { pt3dadd( 586.432, 470.341, 50.2594, 0.2752 ) }
    apic_8 { pt3dadd( 587.518, 470.063, 50.1718, 0.2756 ) }
    apic_8 { pt3dadd( 588.573, 469.672, 50.0674, 0.2766 ) }
    apic_8 { pt3dadd( 589.596, 469.16, 49.9895, 0.2782 ) }
    apic_8 { pt3dadd( 590.663, 468.793, 49.9335, 0.2814 ) }
    apic_8 { pt3dadd( 591.796, 468.643, 49.9195, 0.2872 ) }
    apic_8 { pt3dadd( 592.927, 468.491, 49.9467, 0.299 ) }
    apic_8 { pt3dadd( 594.046, 468.252, 49.9811, 0.3146 ) }
    apic_8 { pt3dadd( 595.167, 468.024, 50.0055, 0.3744 ) }
    apic_8 { pt3dadd( 596.302, 467.898, 49.9954, 0.3358 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    apic_8 { pt3dadd( 597.437, 467.772, 49.9624, 0.3036 ) }
    apic_8 { pt3dadd( 598.495, 467.381, 49.9363, 0.2814 ) }
    apic_8 { pt3dadd( 599.518, 466.87, 49.9321, 0.287 ) }
    apic_8 { pt3dadd( 600.52, 466.317, 49.9531, 0.2988 ) }
    apic_8 { pt3dadd( 601.262, 465.476, 49.9962, 0.3142 ) }
    apic_8 { pt3dadd( 602.154, 464.819, 50.1192, 0.3736 ) }
    apic_8 { pt3dadd( 603.223, 464.588, 50.3261, 0.3342 ) }
    apic_8 { pt3dadd( 604.271, 464.133, 50.4829, 0.3006 ) }
    apic_8 { pt3dadd( 605.31, 463.651, 50.5912, 0.2756 ) }
    apic_8 { pt3dadd( 606.25, 463.032, 50.626, 0.2766 ) }
    apic_8 { pt3dadd( 607.091, 462.276, 50.5694, 0.2782 ) }
    apic_8 { pt3dadd( 607.953, 461.546, 50.5263, 0.2814 ) }
    apic_8 { pt3dadd( 608.836, 460.849, 50.5358, 0.287 ) }
    apic_8 { pt3dadd( 609.943, 460.562, 50.5296, 0.2988 ) }
    apic_8 { pt3dadd( 611.049, 460.275, 50.5089, 0.3142 ) }
    apic_8 { pt3dadd( 612.062, 459.803, 50.4112, 0.3734 ) }
    apic_8 { pt3dadd( 613.042, 459.271, 50.2314, 0.3338 ) }
    apic_8 { pt3dadd( 614.0, 458.649, 50.0702, 0.3 ) }
    apic_8 { pt3dadd( 614.955, 458.02, 49.9335, 0.2746 ) }
    apic_8 { pt3dadd( 615.991, 457.589, 49.8954, 0.2746 ) }
    apic_8 { pt3dadd( 617.039, 457.195, 49.9276, 0.2748 ) }
    apic_8 { pt3dadd( 618.161, 457.117, 49.8632, 0.275 ) }
    apic_8 { pt3dadd( 619.219, 456.946, 49.7106, 0.2754 ) }
    apic_8 { pt3dadd( 619.742, 455.981, 49.4427, 0.2762 ) }
    apic_8 { pt3dadd( 620.554, 455.203, 49.1784, 0.2776 ) }
    apic_8 { pt3dadd( 621.489, 454.757, 49.0778, 0.2802 ) }
    apic_8 { pt3dadd( 622.604, 454.666, 48.995, 0.285 ) }
    apic_8 { pt3dadd( 623.655, 454.328, 48.8393, 0.2938 ) }
    apic_8 { pt3dadd( 624.333, 453.539, 48.5934, 0.3112 ) }
    apic_8 { pt3dadd( 625.117, 452.752, 48.5058, 0.3384 ) }
    apic_8 { pt3dadd( 625.966, 452.025, 48.5204, 0.413 ) }
    apic_8 { pt3dadd( 626.958, 451.454, 48.5444, 0.433 ) }
    apic_8 { pt3dadd( 627.911, 450.834, 48.5962, 0.3596 ) }
    apic_8 { pt3dadd( 628.645, 449.96, 48.6688, 0.3006 ) }
    apic_8 { pt3dadd( 629.494, 449.277, 48.7455, 0.2756 ) }
    apic_8 { pt3dadd( 630.5, 448.875, 48.8821, 0.2766 ) }
    apic_8 { pt3dadd( 631.607, 448.8, 48.9919, 0.2784 ) }
    apic_8 { pt3dadd( 632.752, 448.756, 49.0238, 0.2816 ) }
    apic_8 { pt3dadd( 633.364, 447.849, 48.9787, 0.2874 ) }
    apic_8 { pt3dadd( 633.414, 446.716, 48.8118, 0.2996 ) }
    apic_8 { pt3dadd( 634.046, 446.163, 48.3417, 0.3158 ) }
    apic_8 { pt3dadd( 634.904, 445.585, 47.8433, 0.3764 ) }
    apic_8 { pt3dadd( 635.89, 445.143, 47.5104, 0.3396 ) }
    apic_8 { pt3dadd( 636.801, 444.49, 47.1825, 0.3104 ) }
    apic_8 { pt3dadd( 637.708, 443.819, 46.9084, 0.2938 ) }
    apic_8 { pt3dadd( 638.614, 443.12, 46.7398, 0.3112 ) }
    apic_8 { pt3dadd( 639.392, 442.316, 46.6872, 0.3382 ) }
    apic_8 { pt3dadd( 640.148, 441.534, 46.7435, 0.413 ) }
    apic_8 { pt3dadd( 641.159, 441.782, 46.7634, 0.4328 ) }
    apic_8 { pt3dadd( 642.2, 441.496, 46.8395, 0.3594 ) }
    apic_8 { pt3dadd( 643.301, 441.252, 46.8199, 0.3 ) }
    apic_8 { pt3dadd( 644.4, 441.002, 46.727, 0.2746 ) }
    apic_8 { pt3dadd( 645.484, 440.633, 46.6533, 0.2746 ) }
    apic_8 { pt3dadd( 646.565, 440.265, 46.6066, 0.2746 ) }
    apic_8 { pt3dadd( 647.612, 439.802, 46.5996, 0.2746 ) }
    apic_8 { pt3dadd( 648.648, 439.319, 46.6259, 0.2746 ) }
    apic_8 { pt3dadd( 649.43, 438.543, 46.7482, 0.2746 ) }
    apic_8 { pt3dadd( 650.116, 437.657, 46.9515, 0.2746 ) }
    apic_8 { pt3dadd( 650.731, 436.696, 47.1372, 0.2746 ) }
    apic_8 { pt3dadd( 651.395, 435.764, 47.2744, 0.2746 ) }
    apic_8 { pt3dadd( 652.271, 435.163, 47.3659, 0.2746 ) }
    apic_8 { pt3dadd( 653.388, 434.943, 47.4205, 0.2746 ) }
    apic_8 { pt3dadd( 654.464, 434.553, 47.4491, 0.2746 ) }
    apic_8 { pt3dadd( 654.979, 433.634, 47.4566, 0.2746 ) }
    apic_8 { pt3dadd( 655.734, 432.915, 47.3544, 0.2746 ) }
    apic_8 { pt3dadd( 656.82, 432.74, 47.3105, 0.2746 ) }
    apic_8 { pt3dadd( 657.812, 432.392, 47.4818, 0.2746 ) }
    apic_8 { pt3dadd( 658.81, 432.049, 47.7982, 0.2746 ) }
    apic_8 { pt3dadd( 659.911, 431.768, 48.0561, 0.2746 ) }
    apic_8 { pt3dadd( 660.676, 430.918, 48.256, 0.2746 ) }
    apic_8 { pt3dadd( 661.32, 429.98, 48.3941, 0.2746 ) }
    apic_8 { pt3dadd( 662.031, 429.095, 48.4504, 0.2746 ) }
    apic_8 { pt3dadd( 662.878, 428.341, 48.4299, 0.2746 ) }
    apic_8 { pt3dadd( 664.013, 428.199, 48.3672, 0.2746 ) }
    apic_8 { pt3dadd( 665.148, 428.057, 48.2924, 0.2746 ) }
    apic_8 { pt3dadd( 666.046, 427.449, 48.1032, 0.2746 ) }
    apic_8 { pt3dadd( 666.692, 426.554, 47.889, 0.2746 ) }
    apic_8 { pt3dadd( 667.43, 425.727, 47.7142, 0.2746 ) }
    apic_8 { pt3dadd( 667.716, 424.656, 47.5807, 0.2746 ) }
    apic_8 { pt3dadd( 668.286, 423.814, 47.4855, 0.2746 ) }
    apic_8 { pt3dadd( 669.346, 423.409, 47.4278, 0.2746 ) }
    apic_8 { pt3dadd( 670.443, 423.087, 47.4037, 0.2746 ) }
    apic_8 { pt3dadd( 671.439, 422.549, 47.3379, 0.2746 ) }
    apic_8 { pt3dadd( 672.443, 422.031, 47.2545, 0.2746 ) }
    apic_8 { pt3dadd( 673.5, 421.63, 47.2612, 0.2746 ) }
    apic_8 { pt3dadd( 674.572, 421.357, 47.3567, 0.2746 ) }
    apic_8 { pt3dadd( 675.669, 421.23, 47.465, 0.2746 ) }
    apic_8 { pt3dadd( 676.633, 420.687, 47.4762, 0.2746 ) }
    apic_8 { pt3dadd( 677.263, 419.759, 47.4222, 0.2746 ) }
    apic_8 { pt3dadd( 677.734, 418.736, 47.318, 0.2746 ) }
    apic_8 { pt3dadd( 677.974, 417.701, 47.3701, 0.2746 ) }
    apic_8 { pt3dadd( 678.5, 416.691, 47.4513, 0.2746 ) }
    apic_8 { pt3dadd( 679.01, 415.669, 47.5488, 0.2746 ) }
    apic_8 { pt3dadd( 679.375, 414.646, 47.742, 0.2746 ) }
    apic_8 { pt3dadd( 680.041, 413.76, 47.8576, 0.2746 ) }
    apic_8 { pt3dadd( 680.211, 412.669, 47.8276, 0.2746 ) }
    apic_8 { pt3dadd( 680.598, 411.683, 47.6104, 0.2744 ) }
    apic_8 { pt3dadd( 680.838, 410.606, 47.3404, 0.2744 ) }
    apic_8 { pt3dadd( 680.667, 409.585, 47.2377, 0.2742 ) }
    apic_8 { pt3dadd( 680.531, 408.452, 47.1321, 0.274 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    apic_8 { pt3dadd( 680.494, 407.358, 47.1358, 0.2736 ) }
    apic_8 { pt3dadd( 679.914, 406.59, 46.9972, 0.2728 ) }
    apic_8 { pt3dadd( 679.534, 405.77, 46.6934, 0.2712 ) }
    apic_8 { pt3dadd( 678.723, 405.079, 46.3022, 0.2684 ) }
    apic_8 { pt3dadd( 677.773, 404.465, 45.9452, 0.2626 ) }
    apic_8 { pt3dadd( 677.383, 403.468, 45.6842, 0.2542 ) }
    apic_8 { pt3dadd( 677.193, 402.344, 45.5333, 0.2288 ) }
    apic_8 { pt3dadd( 676.969, 401.226, 45.589, 0.2288 ) }
    // Section: apic_11, id: apic_11, parent: apic_9 (entry count 8/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 517.122, 495.537, 47.5583, 0.5654 ) }
    apic_11 { pt3dadd( 516.63, 495.171, 48.1256, 0.548 ) }
    apic_11 { pt3dadd( 515.955, 494.35, 48.6013, 0.4696 ) }
    apic_11 { pt3dadd( 515.583, 493.286, 48.8813, 0.55 ) }
    apic_11 { pt3dadd( 515.148, 492.246, 49.0358, 0.5166 ) }
    apic_11 { pt3dadd( 514.438, 491.363, 49.1288, 0.425 ) }
    apic_11 { pt3dadd( 513.481, 490.79, 49.2229, 0.4002 ) }
    apic_11 { pt3dadd( 512.409, 490.476, 49.3968, 0.3364 ) }
    apic_11 { pt3dadd( 511.446, 489.958, 49.6283, 0.3046 ) }
    apic_11 { pt3dadd( 510.64, 489.155, 49.8725, 0.2832 ) }
    apic_11 { pt3dadd( 509.932, 488.262, 50.1208, 0.2904 ) }
    apic_11 { pt3dadd( 509.086, 487.542, 50.3087, 0.3048 ) }
    apic_11 { pt3dadd( 508.046, 487.096, 50.4627, 0.3254 ) }
    apic_11 { pt3dadd( 506.961, 486.748, 50.6503, 0.3946 ) }
    apic_11 { pt3dadd( 505.971, 486.298, 50.9555, 0.3728 ) }
    apic_11 { pt3dadd( 505.129, 485.633, 51.3769, 0.3738 ) }
    apic_11 { pt3dadd( 504.776, 484.625, 51.7938, 0.4032 ) }
    apic_11 { pt3dadd( 504.48, 483.73, 52.2402, 0.5538 ) }
    apic_11 { pt3dadd( 503.691, 482.972, 52.5692, 0.5952 ) }
    apic_11 { pt3dadd( 502.794, 482.333, 52.9262, 0.452 ) }
    apic_11 { pt3dadd( 501.691, 482.209, 53.2064, 0.34 ) }
    apic_11 { pt3dadd( 500.683, 481.736, 53.4884, 0.3028 ) }
    apic_11 { pt3dadd( 499.57, 481.474, 53.699, 0.3218 ) }
    apic_11 { pt3dadd( 498.776, 480.853, 53.8801, 0.3872 ) }
    apic_11 { pt3dadd( 498.496, 479.893, 53.8798, 0.3606 ) }
    apic_11 { pt3dadd( 498.579, 478.857, 53.9521, 0.3444 ) }
    apic_11 { pt3dadd( 499.56, 478.557, 54.1204, 0.3826 ) }
    apic_11 { pt3dadd( 499.477, 477.493, 54.3693, 0.3506 ) }
    apic_11 { pt3dadd( 498.359, 477.336, 54.6137, 0.3318 ) }
    apic_11 { pt3dadd( 497.388, 477.174, 54.9948, 0.3284 ) }
    apic_11 { pt3dadd( 496.334, 476.922, 55.3224, 0.4 ) }
    apic_11 { pt3dadd( 495.368, 476.418, 55.5758, 0.384 ) }
    apic_11 { pt3dadd( 494.457, 475.847, 55.7077, 0.3884 ) }
    apic_11 { pt3dadd( 494.023, 474.838, 55.9258, 0.4596 ) }
    apic_11 { pt3dadd( 493.312, 473.982, 56.1658, 0.5152 ) }
    apic_11 { pt3dadd( 492.318, 473.422, 56.3741, 0.532 ) }
    apic_11 { pt3dadd( 491.539, 472.707, 56.7146, 0.5238 ) }
    apic_11 { pt3dadd( 490.665, 471.978, 57.0248, 0.4714 ) }
    apic_11 { pt3dadd( 489.832, 471.233, 57.2468, 0.5534 ) }
    apic_11 { pt3dadd( 489.012, 470.479, 57.4918, 0.5232 ) }
    apic_11 { pt3dadd( 488.217, 469.758, 57.7713, 0.437 ) }
    apic_11 { pt3dadd( 487.62, 468.867, 58.0798, 0.4236 ) }
    apic_11 { pt3dadd( 487.471, 467.742, 58.3282, 0.3744 ) }
    apic_11 { pt3dadd( 486.599, 467.155, 58.5584, 0.4006 ) }
    apic_11 { pt3dadd( 485.562, 466.671, 58.7804, 0.3372 ) }
    apic_11 { pt3dadd( 484.527, 466.188, 58.9893, 0.3062 ) }
    apic_11 { pt3dadd( 483.452, 465.841, 59.1962, 0.2862 ) }
    apic_11 { pt3dadd( 482.341, 465.727, 59.4572, 0.2958 ) }
    apic_11 { pt3dadd( 481.312, 465.45, 59.8178, 0.315 ) }
    apic_11 { pt3dadd( 480.518, 464.745, 60.254, 0.3442 ) }
    apic_11 { pt3dadd( 479.611, 464.084, 60.5956, 0.43 ) }
    apic_11 { pt3dadd( 478.559, 463.631, 60.8474, 0.4356 ) }
    apic_11 { pt3dadd( 477.538, 463.127, 61.028, 0.5036 ) }
    apic_11 { pt3dadd( 476.589, 462.493, 61.1666, 0.58 ) }
    apic_11 { pt3dadd( 475.703, 461.787, 61.2531, 0.5042 ) }
    apic_11 { pt3dadd( 474.931, 460.948, 61.2749, 0.5054 ) }
    apic_11 { pt3dadd( 474.077, 460.191, 61.3052, 0.504 ) }
    apic_11 { pt3dadd( 473.206, 459.449, 61.355, 0.519 ) }
    apic_11 { pt3dadd( 472.461, 458.586, 61.4505, 0.4628 ) }
    apic_11 { pt3dadd( 471.739, 457.703, 61.5894, 0.5378 ) }
    apic_11 { pt3dadd( 470.928, 456.913, 61.7968, 0.493 ) }
    apic_11 { pt3dadd( 470.104, 456.138, 62.0542, 0.3864 ) }
    apic_11 { pt3dadd( 469.204, 455.439, 62.3179, 0.303 ) }
    apic_11 { pt3dadd( 468.319, 454.717, 62.5587, 0.28 ) }
    apic_11 { pt3dadd( 467.443, 453.982, 62.7662, 0.2846 ) }
    apic_11 { pt3dadd( 466.484, 453.38, 62.9978, 0.2932 ) }
    apic_11 { pt3dadd( 465.506, 452.81, 63.259, 0.3088 ) }
    apic_11 { pt3dadd( 464.543, 452.195, 63.5043, 0.34 ) }
    apic_11 { pt3dadd( 463.652, 451.505, 63.7753, 0.3866 ) }
    apic_11 { pt3dadd( 462.846, 450.729, 64.1071, 0.5282 ) }
    apic_11 { pt3dadd( 462.048, 449.919, 64.4162, 0.522 ) }
    apic_11 { pt3dadd( 461.252, 449.098, 64.6828, 0.4424 ) }
    apic_11 { pt3dadd( 460.449, 448.31, 64.9872, 0.3966 ) }
    apic_11 { pt3dadd( 459.642, 447.532, 65.3447, 0.5044 ) }
    apic_11 { pt3dadd( 458.816, 446.917, 65.6726, 0.4546 ) }
    apic_11 { pt3dadd( 457.898, 446.236, 65.9806, 0.4298 ) }
    apic_11 { pt3dadd( 456.99, 445.618, 66.3734, 0.514 ) }
    apic_11 { pt3dadd( 456.156, 444.922, 66.8136, 0.4958 ) }
    apic_11 { pt3dadd( 455.587, 443.945, 67.2283, 0.3918 ) }
    apic_11 { pt3dadd( 455.199, 442.909, 67.5959, 0.313 ) }
    apic_11 { pt3dadd( 455.048, 441.799, 67.8913, 0.2998 ) }
    apic_11 { pt3dadd( 454.289, 441.106, 68.1853, 0.3162 ) }
    apic_11 { pt3dadd( 453.199, 440.941, 68.479, 0.3772 ) }
    apic_11 { pt3dadd( 452.183, 440.516, 68.7, 0.3408 ) }
    apic_11 { pt3dadd( 451.269, 439.827, 68.8626, 0.3128 ) }
    apic_11 { pt3dadd( 450.354, 439.142, 68.9847, 0.2982 ) }
    apic_11 { pt3dadd( 449.525, 438.354, 69.0816, 0.3194 ) }
    apic_11 { pt3dadd( 448.703, 437.558, 69.1639, 0.3534 ) }
    apic_11 { pt3dadd( 447.678, 437.056, 69.2524, 0.441 ) }
    apic_11 { pt3dadd( 446.643, 436.573, 69.3655, 0.4854 ) }
    apic_11 { pt3dadd( 445.674, 435.974, 69.5338, 0.4538 ) }
    apic_11 { pt3dadd( 444.73, 435.367, 69.7813, 0.4904 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    apic_11 { pt3dadd( 443.815, 434.81, 70.1593, 0.5546 ) }
    apic_11 { pt3dadd( 442.792, 434.353, 70.5407, 0.462 ) }
    apic_11 { pt3dadd( 441.73, 433.933, 70.8809, 0.4016 ) }
    apic_11 { pt3dadd( 440.829, 433.264, 71.1626, 0.436 ) }
    apic_11 { pt3dadd( 440.006, 432.467, 71.3854, 0.4764 ) }
    apic_11 { pt3dadd( 439.233, 431.629, 71.5851, 0.436 ) }
    apic_11 { pt3dadd( 438.482, 430.77, 71.7828, 0.4624 ) }
    apic_11 { pt3dadd( 437.749, 429.905, 72.0216, 0.4782 ) }
    apic_11 { pt3dadd( 437.022, 429.038, 72.3016, 0.4394 ) }
    apic_11 { pt3dadd( 436.109, 428.399, 72.6382, 0.4682 ) }
    apic_11 { pt3dadd( 435.221, 427.727, 72.9887, 0.4904 ) }
    apic_11 { pt3dadd( 434.451, 426.88, 73.2609, 0.4552 ) }
    apic_11 { pt3dadd( 433.681, 426.034, 73.4698, 0.5302 ) }
    apic_11 { pt3dadd( 432.913, 425.187, 73.6322, 0.448 ) }
    apic_11 { pt3dadd( 432.161, 424.326, 73.7694, 0.4524 ) }
    apic_11 { pt3dadd( 431.476, 423.41, 73.9007, 0.3872 ) }
    apic_11 { pt3dadd( 430.747, 422.544, 74.069, 0.394 ) }
    apic_11 { pt3dadd( 429.879, 421.848, 74.3506, 0.4714 ) }
    apic_11 { pt3dadd( 429.001, 421.157, 74.7051, 0.5308 ) }
    apic_11 { pt3dadd( 428.116, 420.471, 75.0971, 0.5918 ) }
    apic_11 { pt3dadd( 427.139, 419.928, 75.4984, 0.484 ) }
    apic_11 { pt3dadd( 426.122, 419.449, 75.8881, 0.4424 ) }
    apic_11 { pt3dadd( 425.305, 418.667, 76.1202, 0.5122 ) }
    apic_11 { pt3dadd( 424.487, 417.886, 76.2493, 0.6152 ) }
    apic_11 { pt3dadd( 423.645, 417.13, 76.4128, 0.7042 ) }
    apic_11 { pt3dadd( 422.789, 416.385, 76.6052, 0.908 ) }
    apic_11 { pt3dadd( 421.906, 415.663, 76.8146, 0.869 ) }
    apic_11 { pt3dadd( 421.071, 414.888, 77.0381, 0.7602 ) }
    apic_11 { pt3dadd( 420.255, 414.086, 77.2702, 0.735 ) }
    apic_11 { pt3dadd( 419.441, 413.285, 77.5183, 0.7476 ) }
    apic_11 { pt3dadd( 418.508, 413.03, 77.9492, 0.7108 ) }
    apic_11 { pt3dadd( 417.444, 412.699, 78.4053, 0.7068 ) }
    apic_11 { pt3dadd( 416.651, 411.934, 78.8035, 0.8438 ) }
    apic_11 { pt3dadd( 415.822, 411.154, 79.1339, 0.8562 ) }
    apic_11 { pt3dadd( 414.928, 410.439, 79.4119, 0.9072 ) }
    apic_11 { pt3dadd( 414.0, 409.776, 79.6659, 0.637 ) }
    apic_11 { pt3dadd( 413.049, 409.144, 79.9168, 0.5344 ) }
    apic_11 { pt3dadd( 412.241, 408.405, 80.2662, 0.469 ) }
    apic_11 { pt3dadd( 411.484, 407.627, 80.7229, 0.4284 ) }
    apic_11 { pt3dadd( 410.506, 407.044, 81.1605, 0.4186 ) }
    apic_11 { pt3dadd( 409.589, 406.438, 81.5917, 0.54 ) }
    apic_11 { pt3dadd( 409.085, 405.653, 82.161, 0.545 ) }
    apic_11 { pt3dadd( 408.345, 404.936, 82.5129, 0.4798 ) }
    apic_11 { pt3dadd( 407.509, 404.165, 82.752, 0.4914 ) }
    apic_11 { pt3dadd( 406.534, 403.601, 82.9833, 0.5564 ) }
    apic_11 { pt3dadd( 405.553, 403.069, 83.2541, 0.4654 ) }
    apic_11 { pt3dadd( 404.74, 402.288, 83.4803, 0.408 ) }
    apic_11 { pt3dadd( 403.97, 401.441, 83.6559, 0.448 ) }
    apic_11 { pt3dadd( 403.066, 400.747, 83.8244, 0.4984 ) }
    apic_11 { pt3dadd( 402.131, 400.089, 83.9737, 0.4764 ) }
    apic_11 { pt3dadd( 401.337, 399.306, 84.1828, 0.5402 ) }
    apic_11 { pt3dadd( 400.577, 398.49, 84.4558, 0.608 ) }
    apic_11 { pt3dadd( 399.796, 397.655, 84.6857, 0.7504 ) }
    apic_11 { pt3dadd( 399.062, 396.802, 84.875, 0.7042 ) }
    apic_11 { pt3dadd( 398.638, 395.862, 85.0287, 0.5232 ) }
    apic_11 { pt3dadd( 397.969, 395.222, 85.4319, 0.4208 ) }
    apic_11 { pt3dadd( 396.969, 394.361, 85.6976, 0.4724 ) }
    apic_11 { pt3dadd( 396.163, 393.618, 85.9345, 0.5396 ) }
    apic_11 { pt3dadd( 395.38, 392.935, 86.3601, 0.5734 ) }
    apic_11 { pt3dadd( 394.671, 392.168, 86.9131, 0.6186 ) }
    apic_11 { pt3dadd( 393.911, 391.404, 87.4829, 0.5596 ) }
    apic_11 { pt3dadd( 393.053, 390.648, 87.9315, 0.4574 ) }
    apic_11 { pt3dadd( 392.236, 389.863, 88.3319, 0.4608 ) }
    apic_11 { pt3dadd( 391.488, 389.029, 88.7074, 0.4458 ) }
    apic_11 { pt3dadd( 390.711, 388.203, 88.9871, 0.5222 ) }
    apic_11 { pt3dadd( 389.915, 387.38, 89.171, 0.6156 ) }
    apic_11 { pt3dadd( 389.189, 386.499, 89.3001, 0.5656 ) }
    apic_11 { pt3dadd( 388.502, 385.584, 89.4032, 0.6396 ) }
    apic_11 { pt3dadd( 387.73, 384.744, 89.4897, 0.6558 ) }
    apic_11 { pt3dadd( 386.909, 383.949, 89.5742, 0.5848 ) }
    apic_11 { pt3dadd( 386.199, 383.057, 89.6773, 0.4878 ) }
    apic_11 { pt3dadd( 385.387, 382.271, 89.8472, 0.3672 ) }
    apic_11 { pt3dadd( 384.53, 381.526, 90.0847, 0.3148 ) }
    apic_11 { pt3dadd( 383.672, 380.781, 90.3773, 0.3018 ) }
    apic_11 { pt3dadd( 382.816, 380.038, 90.7119, 0.326 ) }
    apic_11 { pt3dadd( 381.958, 379.293, 91.0736, 0.3652 ) }
    apic_11 { pt3dadd( 381.135, 378.538, 91.4855, 0.4652 ) }
    apic_11 { pt3dadd( 380.32, 377.781, 91.9268, 0.519 ) }
    apic_11 { pt3dadd( 379.505, 377.025, 92.3776, 0.5702 ) }
    apic_11 { pt3dadd( 378.633, 376.323, 92.7912, 0.4442 ) }
    apic_11 { pt3dadd( 377.658, 375.724, 93.1078, 0.3676 ) }
    apic_11 { pt3dadd( 376.685, 375.125, 93.3495, 0.3784 ) }
    apic_11 { pt3dadd( 375.71, 374.524, 93.5354, 0.343 ) }
    apic_11 { pt3dadd( 374.763, 373.896, 93.7096, 0.3168 ) }
    apic_11 { pt3dadd( 373.884, 373.193, 93.9378, 0.3066 ) }
    apic_11 { pt3dadd( 373.006, 372.49, 94.2127, 0.3288 ) }
    apic_11 { pt3dadd( 372.127, 371.787, 94.5216, 0.4006 ) }
    apic_11 { pt3dadd( 371.182, 371.152, 94.7932, 0.385 ) }
    apic_11 { pt3dadd( 370.22, 370.534, 95.0118, 0.3918 ) }
    apic_11 { pt3dadd( 369.258, 369.916, 95.1793, 0.4598 ) }
    apic_11 { pt3dadd( 368.362, 369.207, 95.2994, 0.5452 ) }
    apic_11 { pt3dadd( 367.479, 368.48, 95.3876, 0.4436 ) }
    apic_11 { pt3dadd( 366.596, 367.753, 95.459, 0.3738 ) }
    apic_11 { pt3dadd( 365.714, 367.026, 95.5273, 0.3536 ) }
    apic_11 { pt3dadd( 364.783, 366.361, 95.5895, 0.4724 ) }
    apic_11 { pt3dadd( 363.846, 365.704, 95.6511, 0.3934 ) }
    apic_11 { pt3dadd( 362.91, 365.046, 95.718, 0.3256 ) }
    apic_11 { pt3dadd( 361.974, 364.388, 95.7967, 0.275 ) }
    apic_11 { pt3dadd( 361.333, 363.454, 95.9174, 0.2754 ) }
    apic_11 { pt3dadd( 360.73, 362.486, 96.0806, 0.276 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    apic_11 { pt3dadd( 360.129, 361.517, 96.2819, 0.2772 ) }
    apic_11 { pt3dadd( 359.526, 360.548, 96.516, 0.2794 ) }
    apic_11 { pt3dadd( 358.924, 359.589, 96.8066, 0.2838 ) }
    apic_11 { pt3dadd( 358.321, 358.63, 97.1384, 0.2912 ) }
    apic_11 { pt3dadd( 357.72, 357.673, 97.496, 0.3066 ) }
    apic_11 { pt3dadd( 357.084, 356.739, 97.8687, 0.3286 ) }
    apic_11 { pt3dadd( 356.355, 355.872, 98.2484, 0.4014 ) }
    apic_11 { pt3dadd( 355.63, 355.006, 98.6258, 0.3806 ) }
    apic_11 { pt3dadd( 354.902, 354.139, 98.9934, 0.412 ) }
    apic_11 { pt3dadd( 354.061, 353.382, 99.3317, 0.3592 ) }
    apic_11 { pt3dadd( 353.155, 352.688, 99.6349, 0.3418 ) }
    apic_11 { pt3dadd( 352.249, 351.995, 99.9141, 0.3774 ) }
    apic_11 { pt3dadd( 351.342, 351.302, 100.177, 0.3414 ) }
    apic_11 { pt3dadd( 350.581, 350.468, 100.455, 0.3138 ) }
    apic_11 { pt3dadd( 349.853, 349.602, 100.752, 0.3012 ) }
    apic_11 { pt3dadd( 349.127, 348.735, 101.062, 0.3188 ) }
    apic_11 { pt3dadd( 348.415, 347.855, 101.37, 0.382 ) }
    apic_11 { pt3dadd( 347.783, 346.905, 101.641, 0.3496 ) }
    apic_11 { pt3dadd( 347.148, 345.956, 101.876, 0.3304 ) }
    apic_11 { pt3dadd( 346.517, 345.006, 102.076, 0.3256 ) }
    apic_11 { pt3dadd( 345.819, 344.111, 102.241, 0.3946 ) }
    apic_11 { pt3dadd( 344.971, 343.342, 102.362, 0.3742 ) }
    apic_11 { pt3dadd( 344.125, 342.572, 102.459, 0.3694 ) }
    apic_11 { pt3dadd( 343.279, 341.802, 102.546, 0.4296 ) }
    apic_11 { pt3dadd( 342.428, 341.039, 102.644, 0.435 ) }
    apic_11 { pt3dadd( 341.57, 340.287, 102.776, 0.5022 ) }
    apic_11 { pt3dadd( 340.711, 339.536, 102.943, 0.5774 ) }
    apic_11 { pt3dadd( 339.853, 338.784, 103.138, 0.4992 ) }
    apic_11 { pt3dadd( 338.989, 338.046, 103.368, 0.4962 ) }
    apic_11 { pt3dadd( 338.122, 337.319, 103.633, 0.4874 ) }
    apic_11 { pt3dadd( 337.256, 336.592, 103.913, 0.4872 ) }
    apic_11 { pt3dadd( 336.39, 335.865, 104.192, 0.408 ) }
    apic_11 { pt3dadd( 335.684, 334.97, 104.409, 0.4158 ) }
    apic_11 { pt3dadd( 334.997, 334.055, 104.566, 0.365 ) }
    apic_11 { pt3dadd( 334.311, 333.14, 104.676, 0.3586 ) }
    apic_11 { pt3dadd( 333.625, 332.224, 104.757, 0.3788 ) }
    apic_11 { pt3dadd( 332.888, 331.349, 104.829, 0.49 ) }
    apic_11 { pt3dadd( 332.146, 330.479, 104.911, 0.567 ) }
    apic_11 { pt3dadd( 331.403, 329.608, 105.02, 0.649 ) }
    apic_11 { pt3dadd( 330.661, 328.739, 105.157, 0.64 ) }
    apic_11 { pt3dadd( 329.933, 327.892, 105.407, 0.4886 ) }
    apic_11 { pt3dadd( 329.207, 327.05, 105.746, 0.404 ) }
    apic_11 { pt3dadd( 328.48, 326.207, 106.146, 0.4402 ) }
    apic_11 { pt3dadd( 327.73, 325.367, 106.545, 0.4842 ) }
    apic_11 { pt3dadd( 326.948, 324.532, 106.881, 0.4504 ) }
    apic_11 { pt3dadd( 326.165, 323.698, 107.163, 0.49 ) }
    apic_11 { pt3dadd( 325.384, 322.864, 107.396, 0.524 ) }
    apic_11 { pt3dadd( 324.577, 322.073, 107.634, 0.5496 ) }
    apic_11 { pt3dadd( 323.743, 321.324, 107.917, 0.55 ) }
    apic_11 { pt3dadd( 322.909, 320.577, 108.237, 0.5506 ) }
    apic_11 { pt3dadd( 322.075, 319.829, 108.576, 0.5518 ) }
    apic_11 { pt3dadd( 321.185, 319.113, 108.836, 0.554 ) }
    apic_11 { pt3dadd( 320.29, 318.398, 109.018, 0.5594 ) }
    apic_11 { pt3dadd( 319.398, 317.684, 109.133, 0.5618 ) }
    apic_11 { pt3dadd( 318.504, 316.969, 109.195, 0.6036 ) }
    apic_11 { pt3dadd( 317.921, 315.989, 109.226, 0.4994 ) }
    apic_11 { pt3dadd( 317.35, 314.997, 109.246, 0.5024 ) }
    apic_11 { pt3dadd( 316.78, 314.005, 109.272, 0.4704 ) }
    apic_11 { pt3dadd( 316.21, 313.014, 109.309, 0.5936 ) }
    apic_11 { pt3dadd( 315.385, 312.234, 109.362, 0.6232 ) }
    apic_11 { pt3dadd( 314.514, 311.492, 109.436, 0.4986 ) }
    apic_11 { pt3dadd( 313.644, 310.749, 109.535, 0.4522 ) }
    apic_11 { pt3dadd( 312.773, 310.007, 109.659, 0.385 ) }
    apic_11 { pt3dadd( 311.927, 309.278, 109.887, 0.3976 ) }
    apic_11 { pt3dadd( 311.085, 308.552, 110.201, 0.4418 ) }
    apic_11 { pt3dadd( 310.241, 307.824, 110.566, 0.6508 ) }
    apic_11 { pt3dadd( 309.476, 307.014, 110.921, 0.6512 ) }
    apic_11 { pt3dadd( 308.848, 306.059, 111.19, 0.471 ) }
    apic_11 { pt3dadd( 308.219, 305.103, 111.383, 0.3284 ) }
    apic_11 { pt3dadd( 307.591, 304.147, 111.509, 0.2802 ) }
    apic_11 { pt3dadd( 306.997, 303.17, 111.595, 0.285 ) }
    apic_11 { pt3dadd( 306.487, 302.146, 111.669, 0.2936 ) }
    apic_11 { pt3dadd( 305.975, 301.124, 111.755, 0.311 ) }
    apic_11 { pt3dadd( 305.464, 300.1, 111.868, 0.337 ) }
    apic_11 { pt3dadd( 304.915, 299.109, 112.022, 0.4156 ) }
    apic_11 { pt3dadd( 304.129, 298.322, 112.292, 0.4142 ) }
    apic_11 { pt3dadd( 303.342, 297.535, 112.644, 0.439 ) }
    apic_11 { pt3dadd( 302.555, 296.749, 113.049, 0.5802 ) }
    apic_11 { pt3dadd( 301.686, 296.026, 113.423, 0.608 ) }
    apic_11 { pt3dadd( 300.771, 295.34, 113.731, 0.6528 ) }
    apic_11 { pt3dadd( 299.855, 294.653, 113.987, 0.5384 ) }
    apic_11 { pt3dadd( 298.941, 293.967, 114.202, 0.5992 ) }
    apic_11 { pt3dadd( 297.973, 293.398, 114.459, 0.5318 ) }
    apic_11 { pt3dadd( 296.975, 292.898, 114.792, 0.5932 ) }
    apic_11 { pt3dadd( 295.978, 292.4, 115.19, 0.7192 ) }
    apic_11 { pt3dadd( 294.979, 291.901, 115.635, 0.6638 ) }
    apic_11 { pt3dadd( 293.975, 291.362, 116.044, 0.5926 ) }
    apic_11 { pt3dadd( 292.97, 290.821, 116.417, 0.5354 ) }
    apic_11 { pt3dadd( 291.965, 290.28, 116.757, 0.5238 ) }
    apic_11 { pt3dadd( 290.96, 289.739, 117.08, 0.5012 ) }
    // Section: apic_10, id: apic_10, parent: apic_9 (entry count 90/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 517.122, 495.537, 47.5583, 0.5654 ) }
    apic_10 { pt3dadd( 517.003, 495.995, 49.1056, 0.2288 ) }
    apic_10 { pt3dadd( 517.451, 496.935, 49.4192, 0.4394 ) }
    apic_10 { pt3dadd( 518.302, 497.584, 49.555, 0.4454 ) }
    apic_10 { pt3dadd( 518.964, 498.481, 49.6896, 0.5598 ) }
    apic_10 { pt3dadd( 519.497, 499.483, 49.8187, 0.4988 ) }
    apic_10 { pt3dadd( 520.176, 500.384, 49.8775, 0.567 ) }
    apic_10 { pt3dadd( 520.901, 501.253, 49.8823, 0.5002 ) }
    apic_10 { pt3dadd( 521.216, 502.348, 49.8658, 0.3998 ) }
    apic_10 { pt3dadd( 521.114, 503.203, 49.7392, 0.329 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    apic_10 { pt3dadd( 521.57, 504.242, 49.5838, 0.323 ) }
    apic_10 { pt3dadd( 522.02, 505.275, 49.5135, 0.3896 ) }
    apic_10 { pt3dadd( 522.81, 506.066, 49.5334, 0.3652 ) }
    apic_10 { pt3dadd( 523.513, 506.913, 49.5412, 0.3524 ) }
    apic_10 { pt3dadd( 523.731, 507.986, 49.4631, 0.3986 ) }
    apic_10 { pt3dadd( 524.179, 508.922, 49.3083, 0.3752 ) }
    apic_10 { pt3dadd( 525.133, 509.297, 49.2055, 0.402 ) }
    apic_10 { pt3dadd( 525.463, 510.248, 49.0871, 0.3398 ) }
    apic_10 { pt3dadd( 525.922, 511.28, 49.0342, 0.3108 ) }
    apic_10 { pt3dadd( 526.114, 512.386, 48.9126, 0.2946 ) }
    apic_10 { pt3dadd( 526.172, 513.526, 48.7981, 0.3118 ) }
    apic_10 { pt3dadd( 526.359, 514.649, 48.6864, 0.344 ) }
    apic_10 { pt3dadd( 526.451, 515.714, 48.5033, 0.401 ) }
    apic_10 { pt3dadd( 527.112, 516.529, 48.377, 0.52 ) }
    apic_10 { pt3dadd( 527.708, 517.395, 48.4512, 0.677 ) }
    apic_10 { pt3dadd( 528.453, 518.257, 48.5887, 0.5896 ) }
    apic_10 { pt3dadd( 529.237, 519.035, 48.8636, 0.4348 ) }
    apic_10 { pt3dadd( 529.984, 519.883, 49.1467, 0.3406 ) }
    apic_10 { pt3dadd( 530.75, 520.687, 49.434, 0.3754 ) }
    apic_10 { pt3dadd( 531.681, 521.333, 49.7319, 0.3376 ) }
    apic_10 { pt3dadd( 532.367, 522.149, 50.0178, 0.3068 ) }
    apic_10 { pt3dadd( 533.003, 522.528, 50.5476, 0.287 ) }
    apic_10 { pt3dadd( 533.753, 523.124, 51.0941, 0.2988 ) }
    apic_10 { pt3dadd( 534.112, 524.146, 51.3596, 0.3142 ) }
    apic_10 { pt3dadd( 534.201, 525.22, 51.4018, 0.3734 ) }
    apic_10 { pt3dadd( 535.028, 525.721, 51.2557, 0.3338 ) }
    apic_10 { pt3dadd( 535.533, 526.67, 51.1286, 0.3 ) }
    apic_10 { pt3dadd( 535.536, 527.445, 51.273, 0.2746 ) }
    apic_10 { pt3dadd( 535.81, 528.462, 51.4242, 0.2746 ) }
    apic_10 { pt3dadd( 536.456, 529.359, 51.4632, 0.2746 ) }
    apic_10 { pt3dadd( 537.431, 529.959, 51.4251, 0.2746 ) }
    apic_10 { pt3dadd( 538.346, 530.644, 51.2806, 0.2746 ) }
    apic_10 { pt3dadd( 538.956, 531.516, 50.8813, 0.2746 ) }
    apic_10 { pt3dadd( 539.617, 532.285, 50.3322, 0.2746 ) }
    apic_10 { pt3dadd( 540.594, 532.245, 49.6485, 0.2744 ) }
    apic_10 { pt3dadd( 541.192, 532.101, 48.7642, 0.2744 ) }
    apic_10 { pt3dadd( 542.099, 532.127, 47.8428, 0.2742 ) }
    apic_10 { pt3dadd( 543.143, 532.332, 46.9935, 0.274 ) }
    apic_10 { pt3dadd( 544.234, 532.537, 46.4215, 0.2736 ) }
    apic_10 { pt3dadd( 544.792, 533.083, 46.1964, 0.2728 ) }
    apic_10 { pt3dadd( 545.31, 534.064, 46.0208, 0.2712 ) }
    apic_10 { pt3dadd( 546.281, 533.919, 45.8718, 0.2684 ) }
    apic_10 { pt3dadd( 547.005, 533.414, 45.5524, 0.2626 ) }
    apic_10 { pt3dadd( 547.562, 532.558, 45.1604, 0.2542 ) }
    apic_10 { pt3dadd( 548.466, 531.935, 44.94, 0.2288 ) }
    apic_10 { pt3dadd( 549.265, 532.33, 44.9366, 0.2288 ) }
    // Section: apic_25, id: apic_25, parent: apic_11 (entry count 46/100)
    apic_25 { pt3dclear() }
    apic_25 { pt3dadd( 290.96, 289.739, 117.08, 0.5012 ) }
    apic_25 { pt3dadd( 290.639, 289.371, 116.875, 0.2288 ) }
    apic_25 { pt3dadd( 289.888, 288.513, 117.052, 0.2752 ) }
    apic_25 { pt3dadd( 289.139, 287.656, 117.16, 0.2758 ) }
    apic_25 { pt3dadd( 288.203, 287.191, 117.203, 0.2766 ) }
    apic_25 { pt3dadd( 287.134, 287.012, 117.139, 0.2784 ) }
    apic_25 { pt3dadd( 286.039, 286.988, 117.218, 0.2818 ) }
    apic_25 { pt3dadd( 284.94, 286.988, 117.445, 0.288 ) }
    apic_25 { pt3dadd( 283.808, 286.988, 117.729, 0.2994 ) }
    apic_25 { pt3dadd( 282.672, 286.988, 118.055, 0.3216 ) }
    apic_25 { pt3dadd( 281.533, 286.937, 118.379, 0.3576 ) }
    apic_25 { pt3dadd( 280.411, 286.796, 118.698, 0.4486 ) }
    apic_25 { pt3dadd( 279.355, 286.427, 119.049, 0.4996 ) }
    apic_25 { pt3dadd( 278.301, 286.056, 119.425, 0.4798 ) }
    apic_25 { pt3dadd( 277.245, 285.686, 119.822, 0.5404 ) }
    apic_25 { pt3dadd( 276.17, 285.349, 120.197, 0.638 ) }
    apic_25 { pt3dadd( 275.062, 285.061, 120.503, 0.6618 ) }
    apic_25 { pt3dadd( 273.954, 284.774, 120.754, 0.554 ) }
    apic_25 { pt3dadd( 272.846, 284.485, 120.97, 0.405 ) }
    apic_25 { pt3dadd( 271.741, 284.197, 121.179, 0.3386 ) }
    apic_25 { pt3dadd( 270.747, 283.691, 121.474, 0.3418 ) }
    apic_25 { pt3dadd( 269.786, 283.127, 121.873, 0.4196 ) }
    apic_25 { pt3dadd( 268.827, 282.562, 122.356, 0.4452 ) }
    apic_25 { pt3dadd( 267.858, 282.018, 122.896, 0.3822 ) }
    apic_25 { pt3dadd( 266.852, 281.57, 123.48, 0.3434 ) }
    apic_25 { pt3dadd( 265.846, 281.123, 124.074, 0.3508 ) }
    apic_25 { pt3dadd( 264.841, 280.677, 124.652, 0.4372 ) }
    apic_25 { pt3dadd( 263.833, 280.181, 125.142, 0.4722 ) }
    apic_25 { pt3dadd( 262.824, 279.643, 125.503, 0.4582 ) }
    apic_25 { pt3dadd( 261.815, 279.104, 125.773, 0.3594 ) }
    apic_25 { pt3dadd( 260.795, 278.619, 126.033, 0.3 ) }
    apic_25 { pt3dadd( 259.767, 278.185, 126.345, 0.2746 ) }
    apic_25 { pt3dadd( 258.737, 277.753, 126.706, 0.2746 ) }
    apic_25 { pt3dadd( 257.708, 277.319, 127.112, 0.2746 ) }
    apic_25 { pt3dadd( 256.734, 276.736, 127.488, 0.2746 ) }
    apic_25 { pt3dadd( 255.783, 276.102, 127.811, 0.2746 ) }
    apic_25 { pt3dadd( 254.832, 275.467, 128.091, 0.2746 ) }
    apic_25 { pt3dadd( 253.775, 275.091, 128.412, 0.2746 ) }
    apic_25 { pt3dadd( 252.7, 274.758, 128.786, 0.2748 ) }
    apic_25 { pt3dadd( 251.625, 274.425, 129.213, 0.275 ) }
    apic_25 { pt3dadd( 250.551, 274.092, 129.689, 0.2754 ) }
    apic_25 { pt3dadd( 249.452, 273.994, 130.223, 0.2762 ) }
    apic_25 { pt3dadd( 248.349, 273.928, 130.792, 0.2774 ) }
    apic_25 { pt3dadd( 247.245, 273.863, 131.365, 0.2798 ) }
    apic_25 { pt3dadd( 246.129, 273.746, 131.898, 0.2844 ) }
    apic_25 { pt3dadd( 245.008, 273.608, 132.374, 0.2928 ) }
    apic_25 { pt3dadd( 243.888, 273.471, 132.794, 0.3094 ) }
    apic_25 { pt3dadd( 242.767, 273.335, 133.155, 0.3338 ) }
    apic_25 { pt3dadd( 241.664, 273.116, 133.442, 0.4108 ) }
    apic_25 { pt3dadd( 240.605, 272.687, 133.612, 0.3988 ) }
    apic_25 { pt3dadd( 239.546, 272.258, 133.699, 0.4408 ) }
    apic_25 { pt3dadd( 238.486, 271.83, 133.731, 0.437 ) }
    apic_25 { pt3dadd( 237.441, 271.373, 133.743, 0.3674 ) }
    apic_25 { pt3dadd( 236.442, 270.825, 133.79, 0.3148 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    apic_25 { pt3dadd( 235.442, 270.277, 133.87, 0.303 ) }
    apic_25 { pt3dadd( 234.445, 269.724, 133.977, 0.3222 ) }
    apic_25 { pt3dadd( 233.471, 269.125, 134.065, 0.388 ) }
    apic_25 { pt3dadd( 232.496, 268.524, 134.129, 0.362 ) }
    apic_25 { pt3dadd( 231.523, 267.925, 134.17, 0.3468 ) }
    apic_25 { pt3dadd( 230.548, 267.325, 134.189, 0.3872 ) }
    // Section: apic_12, id: apic_12, parent: apic_11 (entry count 6/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 290.96, 289.739, 117.08, 0.5012 ) }
    apic_12 { pt3dadd( 290.542, 289.201, 117.42, 0.4646 ) }
    apic_12 { pt3dadd( 289.851, 288.311, 117.816, 0.3714 ) }
    apic_12 { pt3dadd( 289.159, 287.422, 118.27, 0.3222 ) }
    apic_12 { pt3dadd( 288.628, 286.455, 118.785, 0.3168 ) }
    apic_12 { pt3dadd( 288.249, 285.415, 119.361, 0.3472 ) }
    apic_12 { pt3dadd( 287.872, 284.374, 119.972, 0.4368 ) }
    apic_12 { pt3dadd( 287.509, 283.332, 120.6, 0.442 ) }
    apic_12 { pt3dadd( 287.186, 282.284, 121.23, 0.5462 ) }
    apic_12 { pt3dadd( 286.864, 281.236, 121.844, 0.5082 ) }
    apic_12 { pt3dadd( 286.54, 280.189, 122.426, 0.416 ) }
    apic_12 { pt3dadd( 286.145, 279.145, 122.897, 0.3524 ) }
    apic_12 { pt3dadd( 285.674, 278.108, 123.205, 0.3984 ) }
    apic_12 { pt3dadd( 285.202, 277.07, 123.397, 0.3748 ) }
    apic_12 { pt3dadd( 284.659, 276.082, 123.544, 0.4016 ) }
    apic_12 { pt3dadd( 283.902, 275.241, 123.751, 0.339 ) }
    apic_12 { pt3dadd( 283.146, 274.4, 124.026, 0.3094 ) }
    apic_12 { pt3dadd( 282.388, 273.559, 124.375, 0.292 ) }
    apic_12 { pt3dadd( 281.495, 272.908, 124.804, 0.3066 ) }
    apic_12 { pt3dadd( 280.514, 272.375, 125.294, 0.3348 ) }
    apic_12 { pt3dadd( 279.535, 271.843, 125.813, 0.3828 ) }
    apic_12 { pt3dadd( 278.555, 271.311, 126.338, 0.4912 ) }
    apic_12 { pt3dadd( 277.635, 270.659, 126.842, 0.599 ) }
    apic_12 { pt3dadd( 276.661, 270.094, 127.293, 0.564 ) }
    apic_12 { pt3dadd( 275.608, 269.65, 127.657, 0.4962 ) }
    apic_12 { pt3dadd( 274.711, 269.049, 128.044, 0.3838 ) }
    apic_12 { pt3dadd( 273.971, 268.291, 128.496, 0.3402 ) }
    apic_12 { pt3dadd( 273.466, 267.282, 128.915, 0.3746 ) }
    apic_12 { pt3dadd( 272.958, 266.265, 129.269, 0.3358 ) }
    apic_12 { pt3dadd( 272.477, 265.228, 129.539, 0.3036 ) }
    apic_12 { pt3dadd( 272.052, 264.167, 129.745, 0.2814 ) }
    apic_12 { pt3dadd( 271.628, 263.104, 129.902, 0.2872 ) }
    apic_12 { pt3dadd( 271.202, 262.042, 130.036, 0.299 ) }
    apic_12 { pt3dadd( 270.773, 260.983, 130.181, 0.3146 ) }
    apic_12 { pt3dadd( 270.174, 260.044, 130.436, 0.3744 ) }
    apic_12 { pt3dadd( 269.577, 259.103, 130.776, 0.3358 ) }
    apic_12 { pt3dadd( 268.978, 258.163, 131.169, 0.3036 ) }
    apic_12 { pt3dadd( 268.419, 257.186, 131.55, 0.2814 ) }
    apic_12 { pt3dadd( 267.908, 256.163, 131.862, 0.2872 ) }
    apic_12 { pt3dadd( 267.396, 255.139, 132.118, 0.299 ) }
    apic_12 { pt3dadd( 266.885, 254.117, 132.329, 0.3144 ) }
    apic_12 { pt3dadd( 266.341, 253.121, 132.546, 0.374 ) }
    apic_12 { pt3dadd( 265.71, 252.204, 132.847, 0.335 ) }
    apic_12 { pt3dadd( 265.078, 251.286, 133.22, 0.302 ) }
    apic_12 { pt3dadd( 264.448, 250.369, 133.648, 0.2784 ) }
    apic_12 { pt3dadd( 263.562, 249.693, 134.045, 0.2818 ) }
    apic_12 { pt3dadd( 262.577, 249.113, 134.391, 0.2878 ) }
    apic_12 { pt3dadd( 261.732, 248.343, 134.707, 0.3002 ) }
    apic_12 { pt3dadd( 260.902, 247.556, 135.021, 0.3168 ) }
    apic_12 { pt3dadd( 260.094, 246.748, 135.377, 0.3786 ) }
    apic_12 { pt3dadd( 259.67, 245.818, 135.887, 0.3434 ) }
    apic_12 { pt3dadd( 259.48, 244.811, 136.587, 0.3172 ) }
    // Section: apic_31, id: apic_31, parent: apic_25 (entry count 58/100)
    apic_31 { pt3dclear() }
    apic_31 { pt3dadd( 230.548, 267.325, 134.189, 0.3872 ) }
    apic_31 { pt3dadd( 230.12, 266.96, 134.193, 0.359 ) }
    apic_31 { pt3dadd( 229.25, 266.218, 134.19, 0.3486 ) }
    apic_31 { pt3dadd( 228.379, 265.475, 134.186, 0.3542 ) }
    apic_31 { pt3dadd( 227.508, 264.734, 134.181, 0.4734 ) }
    apic_31 { pt3dadd( 226.626, 264.005, 134.174, 0.3952 ) }
    apic_31 { pt3dadd( 225.733, 263.29, 134.163, 0.3292 ) }
    apic_31 { pt3dadd( 224.841, 262.577, 134.149, 0.2814 ) }
    apic_31 { pt3dadd( 223.947, 261.862, 134.13, 0.2872 ) }
    apic_31 { pt3dadd( 223.031, 261.176, 134.101, 0.299 ) }
    apic_31 { pt3dadd( 222.095, 260.518, 134.06, 0.3148 ) }
    apic_31 { pt3dadd( 221.159, 259.861, 134.006, 0.3746 ) }
    apic_31 { pt3dadd( 220.223, 259.203, 133.94, 0.336 ) }
    apic_31 { pt3dadd( 219.285, 258.575, 133.826, 0.3038 ) }
    apic_31 { pt3dadd( 218.345, 257.977, 133.644, 0.2818 ) }
    apic_31 { pt3dadd( 217.405, 257.379, 133.43, 0.2876 ) }
    apic_31 { pt3dadd( 216.465, 256.781, 133.218, 0.3 ) }
    apic_31 { pt3dadd( 215.547, 256.171, 133.219, 0.3164 ) }
    apic_31 { pt3dadd( 214.63, 255.56, 133.409, 0.3776 ) }
    apic_31 { pt3dadd( 213.714, 254.95, 133.748, 0.3416 ) }
    apic_31 { pt3dadd( 213.102, 254.0, 134.113, 0.3142 ) }
    apic_31 { pt3dadd( 212.462, 253.073, 134.466, 0.3006 ) }
    apic_31 { pt3dadd( 211.475, 252.503, 134.785, 0.3236 ) }
    apic_31 { pt3dadd( 210.523, 251.905, 135.071, 0.3624 ) }
    apic_31 { pt3dadd( 209.74, 251.193, 135.428, 0.4526 ) }
    apic_31 { pt3dadd( 208.697, 250.938, 135.76, 0.5316 ) }
    apic_31 { pt3dadd( 207.903, 250.305, 135.892, 0.4186 ) }
    apic_31 { pt3dadd( 207.335, 249.401, 135.924, 0.3254 ) }
    apic_31 { pt3dadd( 206.442, 248.686, 135.937, 0.2746 ) }
    apic_31 { pt3dadd( 205.501, 248.041, 135.944, 0.2746 ) }
    apic_31 { pt3dadd( 204.508, 247.471, 135.953, 0.2748 ) }
    apic_31 { pt3dadd( 203.539, 246.889, 136.027, 0.2748 ) }
    apic_31 { pt3dadd( 202.599, 246.291, 136.208, 0.2752 ) }
    apic_31 { pt3dadd( 201.643, 245.704, 136.428, 0.2756 ) }
    apic_31 { pt3dadd( 200.722, 245.186, 136.645, 0.2766 ) }
    apic_31 { pt3dadd( 200.298, 244.199, 136.655, 0.2782 ) }
    apic_31 { pt3dadd( 200.13, 243.081, 136.598, 0.2814 ) }
    apic_31 { pt3dadd( 200.13, 241.948, 136.45, 0.287 ) }
    apic_31 { pt3dadd( 200.13, 240.819, 136.221, 0.2988 ) }
    apic_31 { pt3dadd( 200.13, 239.687, 135.974, 0.3142 ) }
    apic_31 { pt3dadd( 200.13, 238.55, 135.768, 0.3734 ) }
    apic_31 { pt3dadd( 200.13, 237.461, 135.54, 0.3338 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    apic_31 { pt3dadd( 200.112, 236.326, 135.428, 0.3 ) }
    apic_31 { pt3dadd( 199.51, 235.465, 135.546, 0.2746 ) }
    apic_31 { pt3dadd( 199.255, 234.411, 135.714, 0.2746 ) }
    apic_31 { pt3dadd( 199.177, 233.27, 135.912, 0.2746 ) }
    apic_31 { pt3dadd( 198.848, 232.195, 136.192, 0.2746 ) }
    apic_31 { pt3dadd( 198.458, 231.138, 136.547, 0.2746 ) }
    apic_31 { pt3dadd( 198.374, 229.999, 136.872, 0.2746 ) }
    apic_31 { pt3dadd( 198.292, 228.859, 137.177, 0.2746 ) }
    apic_31 { pt3dadd( 198.014, 227.859, 137.654, 0.2746 ) }
    apic_31 { pt3dadd( 197.708, 226.845, 138.226, 0.2746 ) }
    apic_31 { pt3dadd( 197.288, 225.783, 138.742, 0.2746 ) }
    apic_31 { pt3dadd( 196.921, 224.711, 139.222, 0.2746 ) }
    apic_31 { pt3dadd( 196.901, 223.574, 139.699, 0.2748 ) }
    apic_31 { pt3dadd( 196.881, 222.437, 140.179, 0.2748 ) }
    apic_31 { pt3dadd( 196.892, 221.308, 140.687, 0.2752 ) }
    apic_31 { pt3dadd( 196.92, 220.182, 141.266, 0.2756 ) }
    apic_31 { pt3dadd( 196.904, 219.081, 141.965, 0.2766 ) }
    apic_31 { pt3dadd( 196.881, 217.984, 142.761, 0.2782 ) }
    apic_31 { pt3dadd( 196.728, 217.038, 143.72, 0.2814 ) }
    apic_31 { pt3dadd( 196.499, 216.18, 144.839, 0.287 ) }
    apic_31 { pt3dadd( 196.465, 215.341, 146.077, 0.2988 ) }
    apic_31 { pt3dadd( 196.113, 214.359, 147.195, 0.314 ) }
    apic_31 { pt3dadd( 196.008, 213.312, 148.002, 0.3734 ) }
    apic_31 { pt3dadd( 196.008, 212.509, 148.937, 0.3338 ) }
    apic_31 { pt3dadd( 196.229, 211.613, 149.837, 0.2998 ) }
    apic_31 { pt3dadd( 197.005, 211.578, 150.795, 0.2744 ) }
    apic_31 { pt3dadd( 197.829, 211.557, 151.751, 0.2742 ) }
    apic_31 { pt3dadd( 198.298, 210.699, 152.476, 0.274 ) }
    apic_31 { pt3dadd( 198.076, 210.089, 152.623, 0.2736 ) }
    apic_31 { pt3dadd( 197.774, 209.188, 152.434, 0.2728 ) }
    apic_31 { pt3dadd( 197.517, 208.088, 152.179, 0.2712 ) }
    apic_31 { pt3dadd( 197.381, 206.953, 151.916, 0.2684 ) }
    apic_31 { pt3dadd( 197.381, 205.818, 151.749, 0.2626 ) }
    apic_31 { pt3dadd( 197.587, 204.758, 151.749, 0.2542 ) }
    apic_31 { pt3dadd( 198.112, 203.816, 151.664, 0.2288 ) }
    apic_31 { pt3dadd( 198.756, 202.878, 151.461, 0.2288 ) }
    // Section: apic_26, id: apic_26, parent: apic_25 (entry count 36/100)
    apic_26 { pt3dclear() }
    apic_26 { pt3dadd( 230.548, 267.325, 134.189, 0.3872 ) }
    apic_26 { pt3dadd( 231.043, 267.591, 135.69, 0.4576 ) }
    apic_26 { pt3dadd( 229.999, 267.424, 136.488, 0.3662 ) }
    apic_26 { pt3dadd( 229.075, 267.084, 136.922, 0.3124 ) }
    apic_26 { pt3dadd( 227.969, 266.959, 137.363, 0.2988 ) }
    apic_26 { pt3dadd( 226.84, 266.786, 137.721, 0.3142 ) }
    apic_26 { pt3dadd( 225.718, 266.585, 138.009, 0.3734 ) }
    apic_26 { pt3dadd( 224.614, 266.585, 138.341, 0.334 ) }
    apic_26 { pt3dadd( 223.501, 266.645, 138.658, 0.3 ) }
    apic_26 { pt3dadd( 222.37, 266.815, 138.892, 0.2746 ) }
    apic_26 { pt3dadd( 221.238, 266.986, 139.086, 0.2748 ) }
    apic_26 { pt3dadd( 220.103, 266.992, 139.214, 0.2748 ) }
    apic_26 { pt3dadd( 219.102, 266.575, 139.341, 0.2752 ) }
    apic_26 { pt3dadd( 218.393, 265.902, 139.668, 0.2758 ) }
    apic_26 { pt3dadd( 217.647, 265.123, 139.972, 0.2766 ) }
    apic_26 { pt3dadd( 217.06, 264.222, 140.193, 0.2786 ) }
    apic_26 { pt3dadd( 216.294, 263.608, 140.627, 0.2818 ) }
    apic_26 { pt3dadd( 215.858, 263.279, 141.385, 0.2882 ) }
    apic_26 { pt3dadd( 215.142, 262.566, 142.11, 0.2996 ) }
    apic_26 { pt3dadd( 214.326, 261.954, 142.518, 0.323 ) }
    apic_26 { pt3dadd( 213.905, 260.984, 142.868, 0.3538 ) }
    apic_26 { pt3dadd( 213.513, 260.021, 143.263, 0.4726 ) }
    // Section: apic_22, id: apic_22, parent: apic_12 (entry count 58/100)
    apic_22 { pt3dclear() }
    apic_22 { pt3dadd( 259.48, 244.811, 136.587, 0.3172 ) }
    apic_22 { pt3dadd( 259.202, 245.417, 136.316, 0.4576 ) }
    apic_22 { pt3dadd( 258.29, 245.891, 136.035, 0.3728 ) }
    apic_22 { pt3dadd( 257.147, 245.917, 135.943, 0.325 ) }
    apic_22 { pt3dadd( 256.007, 245.858, 135.891, 0.3208 ) }
    apic_22 { pt3dadd( 254.941, 245.441, 135.878, 0.362 ) }
    apic_22 { pt3dadd( 253.879, 245.016, 135.902, 0.4282 ) }
    apic_22 { pt3dadd( 252.814, 244.623, 135.98, 0.6006 ) }
    apic_22 { pt3dadd( 251.736, 244.315, 136.161, 0.679 ) }
    apic_22 { pt3dadd( 250.64, 244.094, 136.375, 0.6222 ) }
    apic_22 { pt3dadd( 249.496, 244.094, 136.546, 0.5828 ) }
    apic_22 { pt3dadd( 248.369, 243.992, 136.669, 0.4194 ) }
    apic_22 { pt3dadd( 247.288, 243.632, 136.726, 0.3268 ) }
    apic_22 { pt3dadd( 246.255, 243.19, 136.798, 0.277 ) }
    apic_22 { pt3dadd( 245.256, 242.692, 136.933, 0.279 ) }
    apic_22 { pt3dadd( 244.225, 242.241, 137.013, 0.283 ) }
    apic_22 { pt3dadd( 243.181, 241.806, 137.03, 0.2902 ) }
    apic_22 { pt3dadd( 242.214, 241.226, 137.006, 0.3032 ) }
    apic_22 { pt3dadd( 241.227, 240.701, 136.986, 0.3298 ) }
    apic_22 { pt3dadd( 240.13, 240.475, 137.098, 0.3664 ) }
    apic_22 { pt3dadd( 239.322, 240.087, 137.462, 0.4956 ) }
    apic_22 { pt3dadd( 238.42, 239.539, 137.897, 0.4374 ) }
    apic_22 { pt3dadd( 237.596, 238.747, 138.251, 0.4034 ) }
    apic_22 { pt3dadd( 236.759, 237.98, 138.5, 0.4392 ) }
    apic_22 { pt3dadd( 235.778, 237.447, 138.571, 0.4818 ) }
    apic_22 { pt3dadd( 234.839, 236.842, 138.52, 0.4474 ) }
    apic_22 { pt3dadd( 234.116, 235.972, 138.454, 0.4782 ) }
    apic_22 { pt3dadd( 233.377, 235.132, 138.452, 0.5322 ) }
    apic_22 { pt3dadd( 232.551, 234.583, 138.656, 0.4196 ) }
    apic_22 { pt3dadd( 231.534, 234.075, 138.869, 0.3274 ) }
    apic_22 { pt3dadd( 230.756, 233.333, 138.928, 0.2782 ) }
    apic_22 { pt3dadd( 229.66, 233.113, 138.911, 0.2814 ) }
    apic_22 { pt3dadd( 228.616, 232.86, 138.811, 0.287 ) }
    apic_22 { pt3dadd( 227.802, 232.156, 138.825, 0.2988 ) }
    apic_22 { pt3dadd( 226.983, 231.461, 138.749, 0.3142 ) }
    apic_22 { pt3dadd( 226.059, 230.813, 138.787, 0.3734 ) }
    apic_22 { pt3dadd( 225.061, 230.284, 138.885, 0.3338 ) }
    apic_22 { pt3dadd( 224.0, 229.858, 138.983, 0.3 ) }
    apic_22 { pt3dadd( 222.958, 229.39, 139.073, 0.2746 ) }
    apic_22 { pt3dadd( 221.95, 228.85, 139.149, 0.2746 ) }
    apic_22 { pt3dadd( 221.056, 228.183, 139.235, 0.2746 ) }
    apic_22 { pt3dadd( 220.427, 227.228, 139.324, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    apic_22 { pt3dadd( 219.832, 226.253, 139.441, 0.2746 ) }
    apic_22 { pt3dadd( 219.322, 225.233, 139.615, 0.2746 ) }
    apic_22 { pt3dadd( 218.741, 224.263, 139.851, 0.2746 ) }
    apic_22 { pt3dadd( 217.984, 223.422, 140.165, 0.2746 ) }
    apic_22 { pt3dadd( 217.345, 222.5, 140.535, 0.2746 ) }
    apic_22 { pt3dadd( 216.838, 221.488, 140.946, 0.2746 ) }
    apic_22 { pt3dadd( 216.585, 220.429, 141.425, 0.2746 ) }
    apic_22 { pt3dadd( 216.115, 219.53, 142.007, 0.2746 ) }
    apic_22 { pt3dadd( 215.515, 218.57, 142.54, 0.2746 ) }
    apic_22 { pt3dadd( 214.785, 217.99, 142.879, 0.2746 ) }
    // Section: apic_13, id: apic_13, parent: apic_12 (entry count 10/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 259.48, 244.811, 136.587, 0.3172 ) }
    apic_13 { pt3dadd( 259.411, 244.25, 137.466, 0.3078 ) }
    apic_13 { pt3dadd( 258.918, 243.42, 138.389, 0.3306 ) }
    apic_13 { pt3dadd( 258.224, 242.551, 139.24, 0.4052 ) }
    apic_13 { pt3dadd( 257.528, 241.681, 140.003, 0.3876 ) }
    apic_13 { pt3dadd( 256.802, 240.838, 140.661, 0.425 ) }
    apic_13 { pt3dadd( 255.896, 240.145, 141.179, 0.383 ) }
    apic_13 { pt3dadd( 254.99, 239.452, 141.602, 0.388 ) }
    apic_13 { pt3dadd( 254.082, 238.758, 141.977, 0.4528 ) }
    apic_13 { pt3dadd( 253.253, 238.007, 142.36, 0.5322 ) }
    apic_13 { pt3dadd( 252.585, 237.133, 142.81, 0.4198 ) }
    apic_13 { pt3dadd( 251.955, 236.238, 143.32, 0.3278 ) }
    apic_13 { pt3dadd( 251.399, 235.305, 143.887, 0.2788 ) }
    apic_13 { pt3dadd( 250.658, 234.477, 144.339, 0.2824 ) }
    // Section: apic_28, id: apic_28, parent: apic_26 (entry count 24/100)
    apic_28 { pt3dclear() }
    apic_28 { pt3dadd( 213.513, 260.021, 143.263, 0.4726 ) }
    apic_28 { pt3dadd( 212.71, 259.304, 143.6, 0.3938 ) }
    apic_28 { pt3dadd( 211.887, 258.549, 143.869, 0.3266 ) }
    apic_28 { pt3dadd( 211.1, 257.762, 144.007, 0.2768 ) }
    apic_28 { pt3dadd( 210.251, 257.125, 144.038, 0.2786 ) }
    apic_28 { pt3dadd( 209.309, 256.523, 144.082, 0.282 ) }
    apic_28 { pt3dadd( 208.301, 256.416, 144.365, 0.2882 ) }
    apic_28 { pt3dadd( 207.54, 256.009, 144.934, 0.3008 ) }
    apic_28 { pt3dadd( 206.675, 255.595, 145.649, 0.318 ) }
    apic_28 { pt3dadd( 205.715, 254.976, 146.253, 0.3806 ) }
    apic_28 { pt3dadd( 204.779, 254.318, 146.737, 0.347 ) }
    apic_28 { pt3dadd( 203.844, 253.66, 147.09, 0.3254 ) }
    // Section: apic_27, id: apic_27, parent: apic_26 (entry count 36/100)
    apic_27 { pt3dclear() }
    apic_27 { pt3dadd( 213.513, 260.021, 143.263, 0.4726 ) }
    apic_27 { pt3dadd( 212.799, 259.575, 143.659, 0.2288 ) }
    apic_27 { pt3dadd( 212.133, 259.504, 145.163, 0.2764 ) }
    apic_27 { pt3dadd( 211.888, 260.594, 145.77, 0.2778 ) }
    apic_27 { pt3dadd( 210.946, 260.881, 146.388, 0.2808 ) }
    apic_27 { pt3dadd( 210.211, 260.182, 147.13, 0.286 ) }
    apic_27 { pt3dadd( 209.194, 260.17, 147.96, 0.2958 ) }
    apic_27 { pt3dadd( 208.337, 260.615, 148.872, 0.3138 ) }
    apic_27 { pt3dadd( 207.485, 261.285, 149.682, 0.3488 ) }
    apic_27 { pt3dadd( 206.57, 261.971, 150.331, 0.404 ) }
    apic_27 { pt3dadd( 205.649, 262.624, 150.878, 0.555 ) }
    apic_27 { pt3dadd( 204.688, 263.06, 151.471, 0.5978 ) }
    apic_27 { pt3dadd( 203.693, 263.502, 152.053, 0.4564 ) }
    apic_27 { pt3dadd( 202.642, 263.953, 152.552, 0.3496 ) }
    apic_27 { pt3dadd( 201.662, 264.438, 153.061, 0.3142 ) }
    apic_27 { pt3dadd( 200.806, 264.987, 153.677, 0.3734 ) }
    apic_27 { pt3dadd( 199.804, 265.438, 154.223, 0.3338 ) }
    apic_27 { pt3dadd( 198.733, 265.842, 154.64, 0.3 ) }
    apic_27 { pt3dadd( 197.704, 266.319, 154.991, 0.2746 ) }
    apic_27 { pt3dadd( 196.707, 266.857, 155.317, 0.2746 ) }
    apic_27 { pt3dadd( 195.83, 267.416, 155.623, 0.2746 ) }
    apic_27 { pt3dadd( 194.74, 267.204, 155.771, 0.2746 ) }
    apic_27 { pt3dadd( 193.714, 267.307, 155.974, 0.2746 ) }
    apic_27 { pt3dadd( 192.627, 267.459, 156.202, 0.2748 ) }
    apic_27 { pt3dadd( 191.614, 267.937, 156.462, 0.2748 ) }
    apic_27 { pt3dadd( 191.073, 268.716, 156.956, 0.275 ) }
    apic_27 { pt3dadd( 190.964, 269.542, 157.721, 0.2754 ) }
    apic_27 { pt3dadd( 190.686, 269.557, 158.767, 0.2762 ) }
    apic_27 { pt3dadd( 190.0, 269.856, 159.812, 0.2778 ) }
    apic_27 { pt3dadd( 189.301, 270.551, 160.72, 0.2806 ) }
    apic_27 { pt3dadd( 188.603, 270.863, 161.085, 0.2852 ) }
    apic_27 { pt3dadd( 187.848, 271.658, 161.212, 0.2966 ) }
    apic_27 { pt3dadd( 186.799, 271.983, 161.238, 0.305 ) }
    apic_27 { pt3dadd( 185.68, 272.03, 161.276, 0.3814 ) }
    apic_27 { pt3dadd( 184.559, 272.03, 161.634, 0.2288 ) }
    // Section: apic_24, id: apic_24, parent: apic_22 (entry count 71/100)
    apic_24 { pt3dclear() }
    apic_24 { pt3dadd( 214.785, 217.99, 142.879, 0.2746 ) }
    apic_24 { pt3dadd( 214.785, 217.219, 143.447, 0.2746 ) }
    apic_24 { pt3dadd( 215.033, 216.255, 144.185, 0.2746 ) }
    apic_24 { pt3dadd( 215.609, 215.67, 145.11, 0.2746 ) }
    apic_24 { pt3dadd( 215.983, 214.94, 146.129, 0.2746 ) }
    apic_24 { pt3dadd( 216.158, 214.018, 147.112, 0.2746 ) }
    apic_24 { pt3dadd( 216.158, 213.19, 148.019, 0.2746 ) }
    apic_24 { pt3dadd( 216.158, 212.084, 148.532, 0.2746 ) }
    apic_24 { pt3dadd( 215.741, 211.157, 148.537, 0.2746 ) }
    apic_24 { pt3dadd( 215.077, 211.121, 147.88, 0.2746 ) }
    apic_24 { pt3dadd( 214.398, 211.121, 146.782, 0.2746 ) }
    apic_24 { pt3dadd( 214.632, 211.121, 145.331, 0.2746 ) }
    apic_24 { pt3dadd( 214.577, 211.001, 143.727, 0.2746 ) }
    apic_24 { pt3dadd( 214.596, 210.404, 142.268, 0.2746 ) }
    apic_24 { pt3dadd( 215.35, 209.597, 141.295, 0.2746 ) }
    apic_24 { pt3dadd( 215.7, 208.568, 140.85, 0.2746 ) }
    apic_24 { pt3dadd( 215.701, 207.452, 140.802, 0.2746 ) }
    apic_24 { pt3dadd( 215.953, 206.473, 141.16, 0.2746 ) }
    apic_24 { pt3dadd( 216.264, 205.502, 141.744, 0.2746 ) }
    apic_24 { pt3dadd( 216.834, 204.567, 142.356, 0.2746 ) }
    apic_24 { pt3dadd( 217.349, 203.548, 142.804, 0.2746 ) }
    apic_24 { pt3dadd( 217.861, 202.526, 143.085, 0.2746 ) }
    apic_24 { pt3dadd( 218.832, 201.993, 143.217, 0.2746 ) }
    apic_24 { pt3dadd( 219.391, 201.047, 143.149, 0.2746 ) }
    apic_24 { pt3dadd( 219.682, 200.167, 143.054, 0.2746 ) }
    apic_24 { pt3dadd( 220.31, 199.451, 143.085, 0.2746 ) }
    apic_24 { pt3dadd( 221.017, 198.825, 142.831, 0.2746 ) }
    apic_24 { pt3dadd( 221.717, 198.397, 142.328, 0.2746 ) }
    apic_24 { pt3dadd( 222.485, 197.676, 141.982, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    apic_24 { pt3dadd( 223.436, 197.043, 141.665, 0.2746 ) }
    apic_24 { pt3dadd( 224.451, 197.092, 141.22, 0.2746 ) }
    apic_24 { pt3dadd( 225.009, 197.088, 140.527, 0.2746 ) }
    apic_24 { pt3dadd( 225.306, 196.173, 139.886, 0.2746 ) }
    apic_24 { pt3dadd( 225.318, 195.034, 139.474, 0.2746 ) }
    apic_24 { pt3dadd( 225.318, 193.89, 139.252, 0.2746 ) }
    apic_24 { pt3dadd( 225.318, 192.994, 139.4, 0.2746 ) }
    apic_24 { pt3dadd( 225.439, 192.182, 139.923, 0.2746 ) }
    apic_24 { pt3dadd( 226.03, 191.253, 140.456, 0.2746 ) }
    apic_24 { pt3dadd( 226.64, 190.359, 140.995, 0.2746 ) }
    apic_24 { pt3dadd( 226.479, 189.39, 141.334, 0.2746 ) }
    apic_24 { pt3dadd( 226.291, 188.269, 141.494, 0.2746 ) }
    apic_24 { pt3dadd( 226.203, 187.135, 141.532, 0.2746 ) }
    apic_24 { pt3dadd( 226.203, 185.992, 141.523, 0.2746 ) }
    apic_24 { pt3dadd( 226.203, 184.848, 141.526, 0.2746 ) }
    apic_24 { pt3dadd( 225.895, 183.763, 141.555, 0.2746 ) }
    apic_24 { pt3dadd( 225.47, 182.701, 141.634, 0.2746 ) }
    apic_24 { pt3dadd( 224.996, 181.66, 141.765, 0.2744 ) }
    apic_24 { pt3dadd( 224.734, 180.562, 141.944, 0.2744 ) }
    apic_24 { pt3dadd( 224.199, 179.631, 142.213, 0.2742 ) }
    apic_24 { pt3dadd( 223.436, 178.876, 142.638, 0.274 ) }
    apic_24 { pt3dadd( 222.413, 178.399, 143.106, 0.2736 ) }
    apic_24 { pt3dadd( 222.041, 177.72, 143.791, 0.2728 ) }
    apic_24 { pt3dadd( 221.358, 176.886, 144.423, 0.2712 ) }
    apic_24 { pt3dadd( 220.271, 176.75, 145.028, 0.2684 ) }
    apic_24 { pt3dadd( 219.327, 176.434, 145.642, 0.2626 ) }
    apic_24 { pt3dadd( 218.342, 175.887, 146.153, 0.2542 ) }
    apic_24 { pt3dadd( 217.255, 175.583, 146.525, 0.2288 ) }
    apic_24 { pt3dadd( 216.13, 175.376, 146.94, 0.2288 ) }
    // Section: apic_23, id: apic_23, parent: apic_22 (entry count 29/100)
    apic_23 { pt3dclear() }
    apic_23 { pt3dadd( 214.785, 217.99, 142.879, 0.2746 ) }
    apic_23 { pt3dadd( 213.815, 217.789, 140.443, 0.2288 ) }
    apic_23 { pt3dadd( 212.738, 217.54, 141.648, 0.2746 ) }
    apic_23 { pt3dadd( 211.68, 217.283, 142.171, 0.2746 ) }
    apic_23 { pt3dadd( 210.621, 217.027, 142.816, 0.2746 ) }
    apic_23 { pt3dadd( 209.561, 216.771, 143.55, 0.2744 ) }
    apic_23 { pt3dadd( 208.55, 216.292, 144.26, 0.2744 ) }
    apic_23 { pt3dadd( 207.772, 215.54, 145.034, 0.2742 ) }
    apic_23 { pt3dadd( 207.02, 214.767, 145.864, 0.274 ) }
    apic_23 { pt3dadd( 206.269, 213.994, 146.736, 0.2736 ) }
    apic_23 { pt3dadd( 205.504, 213.247, 147.65, 0.2728 ) }
    apic_23 { pt3dadd( 204.697, 212.585, 148.636, 0.2712 ) }
    apic_23 { pt3dadd( 203.891, 211.923, 149.654, 0.2684 ) }
    apic_23 { pt3dadd( 203.016, 211.439, 150.65, 0.2626 ) }
    apic_23 { pt3dadd( 201.955, 211.451, 151.586, 0.2542 ) }
    apic_23 { pt3dadd( 200.894, 211.464, 152.445, 0.2288 ) }
    apic_23 { pt3dadd( 199.833, 211.476, 154.094, 0.2288 ) }
    // Section: apic_19, id: apic_19, parent: apic_13 (entry count 46/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( 250.658, 234.477, 144.339, 0.2824 ) }
    apic_19 { pt3dadd( 250.421, 234.53, 144.737, 0.2892 ) }
    apic_19 { pt3dadd( 249.309, 234.782, 145.123, 0.3016 ) }
    apic_19 { pt3dadd( 248.195, 235.035, 145.507, 0.3258 ) }
    apic_19 { pt3dadd( 247.241, 235.367, 146.044, 0.3652 ) }
    apic_19 { pt3dadd( 246.317, 235.704, 146.73, 0.4634 ) }
    apic_19 { pt3dadd( 245.197, 235.794, 147.405, 0.5234 ) }
    apic_19 { pt3dadd( 244.078, 235.932, 148.043, 0.5422 ) }
    apic_19 { pt3dadd( 242.962, 236.143, 148.628, 0.5664 ) }
    apic_19 { pt3dadd( 241.89, 236.309, 149.071, 0.436 ) }
    apic_19 { pt3dadd( 240.859, 235.989, 149.496, 0.3572 ) }
    apic_19 { pt3dadd( 240.017, 236.092, 150.124, 0.3354 ) }
    apic_19 { pt3dadd( 239.726, 237.145, 150.809, 0.3778 ) }
    apic_19 { pt3dadd( 238.969, 237.871, 151.592, 0.512 ) }
    apic_19 { pt3dadd( 238.074, 238.534, 152.421, 0.4922 ) }
    apic_19 { pt3dadd( 236.985, 238.749, 153.275, 0.385 ) }
    apic_19 { pt3dadd( 236.386, 239.588, 154.198, 0.3006 ) }
    apic_19 { pt3dadd( 235.567, 239.729, 155.183, 0.2756 ) }
    apic_19 { pt3dadd( 235.057, 239.977, 156.357, 0.2766 ) }
    apic_19 { pt3dadd( 234.736, 240.721, 157.564, 0.2782 ) }
    apic_19 { pt3dadd( 234.019, 241.499, 158.608, 0.2814 ) }
    // Section: apic_14, id: apic_14, parent: apic_13 (entry count 67/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 250.658, 234.477, 144.339, 0.2824 ) }
    apic_14 { pt3dadd( 250.591, 234.097, 144.026, 0.2288 ) }
    apic_14 { pt3dadd( 250.505, 233.031, 145.016, 0.3084 ) }
    apic_14 { pt3dadd( 250.505, 232.154, 145.572, 0.3378 ) }
    apic_14 { pt3dadd( 250.313, 231.121, 146.102, 0.3888 ) }
    apic_14 { pt3dadd( 249.971, 230.073, 146.621, 0.501 ) }
    apic_14 { pt3dadd( 249.503, 229.137, 147.239, 0.6244 ) }
    apic_14 { pt3dadd( 249.135, 228.142, 147.9, 0.5758 ) }
    apic_14 { pt3dadd( 249.242, 227.055, 148.522, 0.6894 ) }
    apic_14 { pt3dadd( 249.645, 226.004, 148.94, 0.5978 ) }
    apic_14 { pt3dadd( 249.987, 224.938, 149.221, 0.5214 ) }
    apic_14 { pt3dadd( 249.535, 224.091, 149.675, 0.3834 ) }
    apic_14 { pt3dadd( 249.164, 223.204, 150.249, 0.3396 ) }
    apic_14 { pt3dadd( 249.352, 222.263, 150.902, 0.3736 ) }
    apic_14 { pt3dadd( 249.924, 221.311, 151.447, 0.334 ) }
    apic_14 { pt3dadd( 250.048, 220.255, 151.751, 0.3004 ) }
    apic_14 { pt3dadd( 250.048, 219.156, 151.881, 0.2752 ) }
    apic_14 { pt3dadd( 250.048, 218.046, 151.945, 0.2758 ) }
    apic_14 { pt3dadd( 250.11, 217.048, 152.195, 0.2766 ) }
    apic_14 { pt3dadd( 250.455, 216.159, 152.655, 0.2786 ) }
    // Section: apic_30, id: apic_30, parent: apic_28 (entry count 87/100)
    apic_30 { pt3dclear() }
    apic_30 { pt3dadd( 203.844, 253.66, 147.09, 0.3254 ) }
    apic_30 { pt3dadd( 204.061, 252.901, 145.266, 0.2288 ) }
    apic_30 { pt3dadd( 204.264, 252.043, 144.14, 0.2752 ) }
    apic_30 { pt3dadd( 204.462, 251.057, 143.652, 0.2756 ) }
    apic_30 { pt3dadd( 204.694, 250.123, 143.137, 0.2766 ) }
    apic_30 { pt3dadd( 204.71, 249.075, 142.845, 0.2782 ) }
    apic_30 { pt3dadd( 204.71, 248.378, 143.075, 0.2814 ) }
    apic_30 { pt3dadd( 204.682, 247.314, 143.547, 0.2872 ) }
    apic_30 { pt3dadd( 204.149, 246.486, 143.989, 0.299 ) }
    apic_30 { pt3dadd( 203.842, 245.923, 144.485, 0.3144 ) }
    apic_30 { pt3dadd( 203.307, 245.115, 145.181, 0.374 ) }
    apic_30 { pt3dadd( 202.832, 244.179, 145.893, 0.335 ) }
    apic_30 { pt3dadd( 202.129, 243.942, 146.674, 0.3022 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    apic_30 { pt3dadd( 201.098, 243.793, 147.469, 0.2784 ) }
    apic_30 { pt3dadd( 200.001, 243.469, 148.18, 0.2818 ) }
    apic_30 { pt3dadd( 199.526, 242.484, 148.825, 0.288 ) }
    apic_30 { pt3dadd( 198.793, 241.678, 149.475, 0.3004 ) }
    apic_30 { pt3dadd( 198.096, 240.851, 150.061, 0.3172 ) }
    apic_30 { pt3dadd( 197.811, 240.346, 150.971, 0.3792 ) }
    apic_30 { pt3dadd( 197.343, 239.629, 152.093, 0.3444 ) }
    apic_30 { pt3dadd( 196.75, 238.88, 153.36, 0.3194 ) }
    apic_30 { pt3dadd( 195.959, 238.272, 154.678, 0.3114 ) }
    apic_30 { pt3dadd( 195.081, 237.73, 155.994, 0.3388 ) }
    apic_30 { pt3dadd( 194.205, 237.437, 157.349, 0.414 ) }
    apic_30 { pt3dadd( 193.26, 237.212, 158.639, 0.4346 ) }
    apic_30 { pt3dadd( 192.182, 237.042, 159.782, 0.3628 ) }
    apic_30 { pt3dadd( 191.422, 236.309, 160.888, 0.3066 ) }
    apic_30 { pt3dadd( 190.362, 236.296, 161.999, 0.2864 ) }
    apic_30 { pt3dadd( 189.296, 236.117, 163.042, 0.2978 ) }
    apic_30 { pt3dadd( 188.845, 235.686, 164.319, 0.3122 ) }
    apic_30 { pt3dadd( 188.703, 235.014, 165.768, 0.37 ) }
    apic_30 { pt3dadd( 188.866, 234.186, 167.244, 0.3276 ) }
    apic_30 { pt3dadd( 189.593, 233.331, 168.496, 0.2882 ) }
    apic_30 { pt3dadd( 190.094, 232.708, 169.693, 0.2542 ) }
    apic_30 { pt3dadd( 190.422, 232.199, 170.911, 0.2288 ) }
    apic_30 { pt3dadd( 190.97, 231.271, 172.937, 0.2288 ) }
    // Section: apic_29, id: apic_29, parent: apic_28 (entry count 23/100)
    apic_29 { pt3dclear() }
    apic_29 { pt3dadd( 203.844, 253.66, 147.09, 0.3254 ) }
    apic_29 { pt3dadd( 203.534, 253.318, 147.385, 0.3164 ) }
    apic_29 { pt3dadd( 203.025, 252.347, 147.67, 0.3776 ) }
    apic_29 { pt3dadd( 202.05, 251.847, 147.834, 0.3416 ) }
    apic_29 { pt3dadd( 201.158, 251.279, 148.034, 0.3144 ) }
    apic_29 { pt3dadd( 200.174, 250.71, 148.247, 0.3012 ) }
    apic_29 { pt3dadd( 199.292, 249.993, 148.45, 0.325 ) }
    apic_29 { pt3dadd( 198.262, 249.884, 148.651, 0.3634 ) }
    apic_29 { pt3dadd( 197.327, 250.432, 148.954, 0.4616 ) }
    apic_29 { pt3dadd( 196.479, 251.069, 149.407, 0.5124 ) }
    apic_29 { pt3dadd( 195.689, 251.82, 149.881, 0.558 ) }
    apic_29 { pt3dadd( 194.938, 252.681, 150.277, 0.4206 ) }
    apic_29 { pt3dadd( 194.227, 253.558, 150.666, 0.329 ) }
    apic_29 { pt3dadd( 193.248, 253.872, 151.049, 0.2814 ) }
    apic_29 { pt3dadd( 192.47, 254.422, 151.466, 0.287 ) }
    apic_29 { pt3dadd( 191.714, 255.009, 151.618, 0.2988 ) }
    apic_29 { pt3dadd( 190.64, 255.39, 151.863, 0.3142 ) }
    apic_29 { pt3dadd( 189.675, 255.543, 152.336, 0.3734 ) }
    apic_29 { pt3dadd( 188.754, 255.888, 153.001, 0.3338 ) }
    apic_29 { pt3dadd( 188.072, 256.71, 153.727, 0.3 ) }
    apic_29 { pt3dadd( 187.077, 256.904, 154.559, 0.2746 ) }
    apic_29 { pt3dadd( 186.162, 256.925, 155.503, 0.2746 ) }
    apic_29 { pt3dadd( 185.029, 257.037, 156.259, 0.2746 ) }
    apic_29 { pt3dadd( 184.109, 257.63, 156.812, 0.2746 ) }
    apic_29 { pt3dadd( 183.406, 258.521, 157.228, 0.2746 ) }
    apic_29 { pt3dadd( 182.74, 259.436, 157.57, 0.2748 ) }
    apic_29 { pt3dadd( 181.724, 259.702, 157.844, 0.2748 ) }
    apic_29 { pt3dadd( 180.728, 260.181, 158.037, 0.2752 ) }
    apic_29 { pt3dadd( 180.423, 261.237, 158.176, 0.2756 ) }
    apic_29 { pt3dadd( 179.687, 262.041, 158.328, 0.2766 ) }
    apic_29 { pt3dadd( 178.852, 262.821, 158.429, 0.2782 ) }
    apic_29 { pt3dadd( 177.75, 263.07, 158.439, 0.2814 ) }
    apic_29 { pt3dadd( 176.867, 263.786, 158.439, 0.287 ) }
    apic_29 { pt3dadd( 176.02, 264.555, 158.439, 0.2988 ) }
    apic_29 { pt3dadd( 175.474, 265.518, 158.507, 0.314 ) }
    apic_29 { pt3dadd( 174.998, 266.527, 158.636, 0.3734 ) }
    apic_29 { pt3dadd( 174.498, 267.481, 158.674, 0.3338 ) }
    apic_29 { pt3dadd( 173.744, 268.31, 158.614, 0.2996 ) }
    apic_29 { pt3dadd( 173.078, 269.203, 158.483, 0.274 ) }
    apic_29 { pt3dadd( 172.48, 270.143, 158.319, 0.2736 ) }
    apic_29 { pt3dadd( 171.948, 271.147, 158.234, 0.2728 ) }
    apic_29 { pt3dadd( 171.374, 272.135, 158.281, 0.2712 ) }
    apic_29 { pt3dadd( 170.378, 272.532, 158.582, 0.2684 ) }
    apic_29 { pt3dadd( 169.466, 272.823, 159.092, 0.2626 ) }
    apic_29 { pt3dadd( 168.687, 273.425, 159.771, 0.2542 ) }
    apic_29 { pt3dadd( 167.775, 273.948, 160.465, 0.2288 ) }
    apic_29 { pt3dadd( 166.698, 274.32, 161.634, 0.2288 ) }
    // Section: apic_21, id: apic_21, parent: apic_19 (entry count 70/100)
    apic_21 { pt3dclear() }
    apic_21 { pt3dadd( 234.019, 241.499, 158.608, 0.2814 ) }
    apic_21 { pt3dadd( 233.731, 241.903, 159.376, 0.287 ) }
    apic_21 { pt3dadd( 232.751, 242.242, 159.894, 0.2988 ) }
    apic_21 { pt3dadd( 231.713, 242.037, 160.26, 0.3142 ) }
    apic_21 { pt3dadd( 230.63, 241.957, 160.355, 0.3734 ) }
    apic_21 { pt3dadd( 229.57, 242.199, 160.243, 0.3338 ) }
    apic_21 { pt3dadd( 228.576, 242.594, 159.989, 0.3 ) }
    apic_21 { pt3dadd( 227.484, 242.665, 159.639, 0.2746 ) }
    apic_21 { pt3dadd( 226.385, 242.764, 159.269, 0.2746 ) }
    apic_21 { pt3dadd( 225.257, 242.955, 159.003, 0.2746 ) }
    apic_21 { pt3dadd( 224.129, 243.146, 158.854, 0.2748 ) }
    apic_21 { pt3dadd( 223.11, 243.595, 158.886, 0.2748 ) }
    apic_21 { pt3dadd( 222.112, 244.094, 159.071, 0.2752 ) }
    apic_21 { pt3dadd( 221.266, 244.864, 159.272, 0.2756 ) }
    apic_21 { pt3dadd( 220.415, 245.626, 159.47, 0.2766 ) }
    apic_21 { pt3dadd( 219.323, 245.968, 159.652, 0.2782 ) }
    apic_21 { pt3dadd( 218.231, 246.309, 159.822, 0.2814 ) }
    apic_21 { pt3dadd( 217.158, 246.587, 160.065, 0.287 ) }
    apic_21 { pt3dadd( 216.089, 246.848, 160.388, 0.2988 ) }
    apic_21 { pt3dadd( 215.129, 247.417, 160.721, 0.3142 ) }
    apic_21 { pt3dadd( 214.192, 248.051, 161.03, 0.3734 ) }
    apic_21 { pt3dadd( 213.166, 248.536, 161.255, 0.3338 ) }
    apic_21 { pt3dadd( 212.082, 248.674, 161.47, 0.3 ) }
    apic_21 { pt3dadd( 211.022, 248.755, 161.456, 0.2746 ) }
    apic_21 { pt3dadd( 210.038, 249.138, 161.278, 0.2746 ) }
    apic_21 { pt3dadd( 209.016, 249.65, 161.138, 0.2746 ) }
    apic_21 { pt3dadd( 207.992, 250.16, 161.058, 0.2746 ) }
    apic_21 { pt3dadd( 206.962, 250.606, 161.127, 0.2746 ) }
    apic_21 { pt3dadd( 206.023, 251.131, 161.27, 0.2746 ) }
    apic_21 { pt3dadd( 205.309, 251.932, 161.358, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    apic_21 { pt3dadd( 204.307, 252.302, 161.582, 0.2746 ) }
    apic_21 { pt3dadd( 203.322, 252.497, 162.003, 0.2746 ) }
    apic_21 { pt3dadd( 202.266, 252.853, 162.427, 0.2746 ) }
    apic_21 { pt3dadd( 201.144, 253.068, 162.788, 0.2746 ) }
    apic_21 { pt3dadd( 200.044, 253.195, 163.127, 0.2746 ) }
    apic_21 { pt3dadd( 199.02, 252.887, 163.53, 0.2746 ) }
    apic_21 { pt3dadd( 197.915, 252.818, 163.912, 0.2746 ) }
    apic_21 { pt3dadd( 196.99, 253.121, 164.151, 0.2746 ) }
    apic_21 { pt3dadd( 195.9, 253.239, 164.316, 0.2746 ) }
    apic_21 { pt3dadd( 194.803, 253.467, 164.526, 0.2746 ) }
    apic_21 { pt3dadd( 193.726, 253.775, 164.797, 0.2746 ) }
    apic_21 { pt3dadd( 192.606, 253.951, 165.057, 0.2746 ) }
    apic_21 { pt3dadd( 191.469, 254.072, 165.296, 0.2746 ) }
    apic_21 { pt3dadd( 190.363, 254.169, 165.561, 0.2746 ) }
    apic_21 { pt3dadd( 189.403, 254.328, 165.974, 0.2746 ) }
    apic_21 { pt3dadd( 188.474, 254.912, 166.342, 0.2746 ) }
    apic_21 { pt3dadd( 187.547, 255.58, 166.577, 0.2746 ) }
    apic_21 { pt3dadd( 186.732, 256.255, 166.599, 0.2746 ) }
    apic_21 { pt3dadd( 185.812, 256.922, 166.555, 0.2746 ) }
    apic_21 { pt3dadd( 185.36, 257.834, 166.497, 0.2746 ) }
    apic_21 { pt3dadd( 184.336, 257.834, 166.583, 0.2746 ) }
    apic_21 { pt3dadd( 183.321, 257.834, 166.637, 0.2746 ) }
    apic_21 { pt3dadd( 182.352, 258.037, 166.449, 0.2746 ) }
    apic_21 { pt3dadd( 181.359, 258.539, 166.216, 0.2746 ) }
    apic_21 { pt3dadd( 180.424, 259.154, 165.907, 0.2746 ) }
    apic_21 { pt3dadd( 179.482, 259.775, 165.574, 0.2746 ) }
    apic_21 { pt3dadd( 178.533, 260.41, 165.273, 0.2746 ) }
    apic_21 { pt3dadd( 177.755, 261.246, 165.074, 0.2746 ) }
    apic_21 { pt3dadd( 176.956, 262.064, 164.96, 0.2746 ) }
    apic_21 { pt3dadd( 176.134, 262.86, 164.879, 0.2746 ) }
    apic_21 { pt3dadd( 175.273, 263.612, 164.815, 0.2746 ) }
    apic_21 { pt3dadd( 174.381, 264.327, 164.743, 0.2746 ) }
    apic_21 { pt3dadd( 173.41, 264.914, 164.632, 0.2746 ) }
    apic_21 { pt3dadd( 172.373, 265.393, 164.466, 0.2746 ) }
    apic_21 { pt3dadd( 171.426, 265.988, 164.22, 0.2746 ) }
    apic_21 { pt3dadd( 170.469, 266.462, 164.046, 0.2746 ) }
    apic_21 { pt3dadd( 169.561, 266.904, 163.662, 0.2746 ) }
    apic_21 { pt3dadd( 168.818, 267.68, 163.217, 0.2746 ) }
    apic_21 { pt3dadd( 168.23, 268.636, 162.812, 0.2746 ) }
    apic_21 { pt3dadd( 167.747, 269.643, 162.422, 0.2746 ) }
    apic_21 { pt3dadd( 166.761, 269.74, 161.921, 0.2746 ) }
    apic_21 { pt3dadd( 165.668, 269.721, 161.458, 0.2746 ) }
    apic_21 { pt3dadd( 164.594, 269.507, 161.253, 0.2746 ) }
    apic_21 { pt3dadd( 163.526, 269.531, 161.135, 0.2746 ) }
    apic_21 { pt3dadd( 162.934, 270.344, 160.915, 0.2746 ) }
    apic_21 { pt3dadd( 162.144, 271.104, 160.758, 0.2746 ) }
    apic_21 { pt3dadd( 161.074, 271.511, 160.665, 0.2746 ) }
    apic_21 { pt3dadd( 160.006, 271.918, 160.595, 0.2746 ) }
    apic_21 { pt3dadd( 158.911, 272.25, 160.536, 0.2746 ) }
    apic_21 { pt3dadd( 157.782, 272.418, 160.505, 0.2746 ) }
    apic_21 { pt3dadd( 156.689, 272.742, 160.504, 0.2744 ) }
    apic_21 { pt3dadd( 155.857, 273.5, 160.504, 0.2744 ) }
    apic_21 { pt3dadd( 155.306, 274.5, 160.504, 0.2742 ) }
    apic_21 { pt3dadd( 154.707, 275.475, 160.504, 0.274 ) }
    apic_21 { pt3dadd( 154.245, 276.501, 160.504, 0.2736 ) }
    apic_21 { pt3dadd( 153.77, 277.363, 160.504, 0.2728 ) }
    apic_21 { pt3dadd( 152.665, 277.653, 160.504, 0.2712 ) }
    apic_21 { pt3dadd( 151.562, 277.912, 160.504, 0.2684 ) }
    apic_21 { pt3dadd( 150.419, 277.946, 160.504, 0.2626 ) }
    apic_21 { pt3dadd( 149.275, 277.946, 160.504, 0.2542 ) }
    apic_21 { pt3dadd( 148.131, 277.946, 160.504, 0.2288 ) }
    apic_21 { pt3dadd( 146.987, 277.946, 160.504, 0.2288 ) }
    // Section: apic_20, id: apic_20, parent: apic_19 (entry count 62/100)
    apic_20 { pt3dclear() }
    apic_20 { pt3dadd( 234.019, 241.499, 158.608, 0.2814 ) }
    apic_20 { pt3dadd( 233.66, 242.443, 161.105, 0.2288 ) }
    apic_20 { pt3dadd( 233.282, 243.438, 162.588, 0.3734 ) }
    apic_20 { pt3dadd( 232.768, 244.373, 163.221, 0.3338 ) }
    apic_20 { pt3dadd( 232.041, 245.216, 163.939, 0.3 ) }
    apic_20 { pt3dadd( 231.715, 246.243, 164.699, 0.2746 ) }
    apic_20 { pt3dadd( 231.356, 247.008, 165.632, 0.2746 ) }
    apic_20 { pt3dadd( 231.902, 247.874, 166.564, 0.2746 ) }
    apic_20 { pt3dadd( 232.592, 248.366, 167.601, 0.2746 ) }
    apic_20 { pt3dadd( 232.941, 249.221, 168.65, 0.2744 ) }
    apic_20 { pt3dadd( 233.656, 249.54, 169.716, 0.2744 ) }
    apic_20 { pt3dadd( 234.693, 249.136, 170.565, 0.2742 ) }
    apic_20 { pt3dadd( 235.711, 248.727, 171.114, 0.274 ) }
    apic_20 { pt3dadd( 236.591, 248.267, 171.337, 0.2736 ) }
    apic_20 { pt3dadd( 237.507, 247.795, 171.382, 0.2728 ) }
    apic_20 { pt3dadd( 238.317, 247.343, 171.711, 0.2712 ) }
    apic_20 { pt3dadd( 239.095, 247.3, 172.418, 0.2684 ) }
    apic_20 { pt3dadd( 239.766, 247.3, 173.453, 0.2626 ) }
    apic_20 { pt3dadd( 240.274, 247.3, 174.738, 0.2542 ) }
    apic_20 { pt3dadd( 241.062, 247.3, 176.03, 0.2288 ) }
    apic_20 { pt3dadd( 241.804, 246.842, 177.458, 0.2288 ) }
    // Section: apic_16, id: apic_16, parent: apic_14 (entry count 83/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( 250.455, 216.159, 152.655, 0.2786 ) }
    apic_16 { pt3dadd( 250.365, 215.483, 153.507, 0.4576 ) }
    apic_16 { pt3dadd( 250.231, 214.458, 154.531, 0.557 ) }
    apic_16 { pt3dadd( 250.048, 213.665, 155.094, 0.4186 ) }
    // Section: apic_15, id: apic_15, parent: apic_14 (entry count 87/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( 250.455, 216.159, 152.655, 0.2786 ) }
    apic_15 { pt3dadd( 250.92, 216.046, 153.202, 0.2818 ) }
    apic_15 { pt3dadd( 251.934, 215.798, 153.901, 0.2882 ) }
    apic_15 { pt3dadd( 253.025, 215.7, 154.583, 0.2994 ) }
    apic_15 { pt3dadd( 254.163, 215.7, 155.187, 0.3228 ) }
    apic_15 { pt3dadd( 255.144, 215.629, 155.839, 0.3536 ) }
    apic_15 { pt3dadd( 255.93, 215.304, 156.358, 0.4724 ) }
    apic_15 { pt3dadd( 256.443, 216.04, 156.736, 0.3932 ) }
    apic_15 { pt3dadd( 256.885, 216.159, 157.434, 0.3254 ) }
    apic_15 { pt3dadd( 257.765, 216.159, 158.241, 0.2746 ) }
    apic_15 { pt3dadd( 258.866, 216.159, 158.937, 0.2748 ) }
    apic_15 { pt3dadd( 259.935, 215.893, 159.381, 0.275 ) }
    apic_15 { pt3dadd( 260.921, 215.453, 159.575, 0.2752 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    apic_15 { pt3dadd( 261.816, 214.923, 159.607, 0.2758 ) }
    apic_15 { pt3dadd( 262.732, 214.277, 159.629, 0.277 ) }
    apic_15 { pt3dadd( 263.437, 213.426, 159.806, 0.279 ) }
    apic_15 { pt3dadd( 263.996, 212.547, 160.184, 0.2828 ) }
    apic_15 { pt3dadd( 264.659, 212.022, 160.817, 0.2898 ) }
    apic_15 { pt3dadd( 265.566, 211.577, 161.468, 0.3038 ) }
    apic_15 { pt3dadd( 266.159, 210.599, 161.97, 0.3234 ) }
    apic_15 { pt3dadd( 266.956, 209.826, 162.251, 0.3908 ) }
    apic_15 { pt3dadd( 267.782, 209.083, 162.346, 0.3658 ) }
    apic_15 { pt3dadd( 268.609, 208.4, 162.399, 0.3612 ) }
    apic_15 { pt3dadd( 269.746, 208.303, 162.444, 0.3786 ) }
    apic_15 { pt3dadd( 270.198, 207.572, 162.711, 0.5134 ) }
    apic_15 { pt3dadd( 270.198, 206.706, 163.223, 0.495 ) }
    apic_15 { pt3dadd( 270.483, 205.697, 163.631, 0.39 ) }
    apic_15 { pt3dadd( 271.117, 205.625, 163.656, 0.3098 ) }
    apic_15 { pt3dadd( 272.159, 205.329, 163.645, 0.2926 ) }
    apic_15 { pt3dadd( 273.147, 204.824, 163.788, 0.308 ) }
    apic_15 { pt3dadd( 273.948, 204.442, 164.268, 0.3372 ) }
    apic_15 { pt3dadd( 274.659, 203.736, 164.967, 0.3874 ) }
    apic_15 { pt3dadd( 275.436, 203.114, 165.887, 0.5008 ) }
    apic_15 { pt3dadd( 276.188, 202.513, 166.967, 0.6106 ) }
    apic_15 { pt3dadd( 276.747, 201.738, 168.077, 0.6164 ) }
    apic_15 { pt3dadd( 277.467, 200.87, 168.988, 0.444 ) }
    apic_15 { pt3dadd( 278.243, 200.033, 169.676, 0.3254 ) }
    apic_15 { pt3dadd( 278.909, 199.109, 170.244, 0.2746 ) }
    apic_15 { pt3dadd( 279.336, 198.133, 170.79, 0.2746 ) }
    apic_15 { pt3dadd( 279.661, 197.229, 171.47, 0.2746 ) }
    apic_15 { pt3dadd( 279.821, 196.591, 172.075, 0.2746 ) }
    apic_15 { pt3dadd( 280.099, 195.481, 172.667, 0.2746 ) }
    apic_15 { pt3dadd( 280.579, 194.508, 173.277, 0.2746 ) }
    apic_15 { pt3dadd( 280.301, 193.641, 174.085, 0.2746 ) }
    apic_15 { pt3dadd( 280.502, 192.98, 175.15, 0.2746 ) }
    apic_15 { pt3dadd( 280.786, 192.428, 176.406, 0.2746 ) }
    apic_15 { pt3dadd( 281.096, 191.578, 177.702, 0.2746 ) }
    apic_15 { pt3dadd( 281.497, 190.542, 178.794, 0.2744 ) }
    apic_15 { pt3dadd( 282.053, 189.546, 179.629, 0.2744 ) }
    apic_15 { pt3dadd( 281.832, 188.701, 180.321, 0.2742 ) }
    apic_15 { pt3dadd( 281.553, 187.642, 180.917, 0.274 ) }
    apic_15 { pt3dadd( 281.278, 186.584, 181.451, 0.2736 ) }
    apic_15 { pt3dadd( 281.0, 185.526, 181.953, 0.2728 ) }
    apic_15 { pt3dadd( 280.424, 184.809, 182.316, 0.2712 ) }
    apic_15 { pt3dadd( 279.708, 183.916, 182.562, 0.2684 ) }
    apic_15 { pt3dadd( 279.014, 183.008, 182.707, 0.2626 ) }
    apic_15 { pt3dadd( 278.334, 182.088, 182.779, 0.2542 ) }
    apic_15 { pt3dadd( 277.854, 181.051, 182.802, 0.2288 ) }
    apic_15 { pt3dadd( 277.372, 180.012, 182.798, 0.2288 ) }
    // Section: apic_18, id: apic_18, parent: apic_16 (entry count 46/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( 250.048, 213.665, 155.094, 0.4186 ) }
    apic_18 { pt3dadd( 250.048, 212.605, 155.56, 0.3254 ) }
    apic_18 { pt3dadd( 250.581, 211.708, 155.741, 0.2746 ) }
    apic_18 { pt3dadd( 251.388, 210.9, 155.81, 0.2746 ) }
    apic_18 { pt3dadd( 252.13, 210.061, 155.721, 0.2746 ) }
    apic_18 { pt3dadd( 252.831, 209.2, 155.507, 0.2746 ) }
    apic_18 { pt3dadd( 253.255, 208.138, 155.324, 0.2746 ) }
    apic_18 { pt3dadd( 253.68, 207.075, 155.227, 0.2746 ) }
    apic_18 { pt3dadd( 254.027, 205.986, 155.223, 0.2746 ) }
    apic_18 { pt3dadd( 254.37, 204.894, 155.285, 0.2746 ) }
    apic_18 { pt3dadd( 254.676, 203.799, 155.444, 0.2746 ) }
    apic_18 { pt3dadd( 254.968, 202.703, 155.69, 0.2746 ) }
    apic_18 { pt3dadd( 255.118, 201.608, 156.04, 0.2748 ) }
    apic_18 { pt3dadd( 255.611, 200.679, 156.462, 0.2748 ) }
    apic_18 { pt3dadd( 256.47, 200.016, 156.759, 0.2752 ) }
    apic_18 { pt3dadd( 257.516, 199.867, 157.071, 0.2756 ) }
    apic_18 { pt3dadd( 258.265, 200.029, 157.588, 0.2766 ) }
    apic_18 { pt3dadd( 258.092, 199.32, 158.331, 0.2782 ) }
    apic_18 { pt3dadd( 257.832, 198.35, 159.074, 0.2814 ) }
    apic_18 { pt3dadd( 257.884, 197.273, 159.546, 0.287 ) }
    apic_18 { pt3dadd( 257.838, 196.138, 159.867, 0.2988 ) }
    apic_18 { pt3dadd( 258.45, 195.267, 160.196, 0.314 ) }
    apic_18 { pt3dadd( 259.147, 194.431, 160.524, 0.3734 ) }
    apic_18 { pt3dadd( 259.902, 193.597, 160.787, 0.3338 ) }
    apic_18 { pt3dadd( 260.682, 192.764, 160.998, 0.3 ) }
    apic_18 { pt3dadd( 261.484, 191.949, 161.149, 0.2744 ) }
    apic_18 { pt3dadd( 262.293, 191.141, 161.224, 0.2744 ) }
    apic_18 { pt3dadd( 263.077, 190.617, 161.038, 0.2742 ) }
    apic_18 { pt3dadd( 263.988, 190.094, 160.905, 0.274 ) }
    apic_18 { pt3dadd( 264.921, 189.467, 160.862, 0.2736 ) }
    apic_18 { pt3dadd( 265.387, 188.51, 160.952, 0.2728 ) }
    apic_18 { pt3dadd( 265.747, 187.426, 161.05, 0.2712 ) }
    apic_18 { pt3dadd( 266.264, 186.434, 161.138, 0.2684 ) }
    apic_18 { pt3dadd( 266.939, 185.519, 161.196, 0.2626 ) }
    apic_18 { pt3dadd( 267.348, 184.46, 161.193, 0.2542 ) }
    apic_18 { pt3dadd( 267.45, 183.336, 161.109, 0.2288 ) }
    apic_18 { pt3dadd( 267.45, 182.269, 160.504, 0.2288 ) }
    // Section: apic_17, id: apic_17, parent: apic_16 (entry count 83/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( 250.048, 213.665, 155.094, 0.4186 ) }
    apic_17 { pt3dadd( 249.362, 213.258, 158.615, 0.2288 ) }
    apic_17 { pt3dadd( 248.386, 213.631, 159.785, 0.2746 ) }
    apic_17 { pt3dadd( 247.563, 214.19, 160.302, 0.2746 ) }
    apic_17 { pt3dadd( 246.794, 214.609, 161.003, 0.2746 ) }
    apic_17 { pt3dadd( 246.005, 215.376, 161.608, 0.2748 ) }
    apic_17 { pt3dadd( 245.374, 216.29, 161.978, 0.2748 ) }
    apic_17 { pt3dadd( 244.712, 217.168, 162.167, 0.2752 ) }
    apic_17 { pt3dadd( 244.321, 218.24, 162.291, 0.2756 ) }
    apic_17 { pt3dadd( 243.848, 219.253, 162.434, 0.2766 ) }
    apic_17 { pt3dadd( 243.167, 220.111, 162.727, 0.2782 ) }
    apic_17 { pt3dadd( 242.728, 221.062, 163.21, 0.2814 ) }
    apic_17 { pt3dadd( 242.282, 222.073, 163.798, 0.287 ) }
    apic_17 { pt3dadd( 241.736, 223.063, 164.373, 0.2988 ) }
    apic_17 { pt3dadd( 240.732, 223.548, 164.98, 0.314 ) }
    apic_17 { pt3dadd( 239.768, 223.97, 165.715, 0.3734 ) }
    apic_17 { pt3dadd( 239.016, 224.731, 166.513, 0.3338 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    apic_17 { pt3dadd( 238.649, 225.692, 167.353, 0.2998 ) }
    apic_17 { pt3dadd( 238.924, 226.573, 168.354, 0.2742 ) }
    apic_17 { pt3dadd( 238.972, 227.65, 169.367, 0.274 ) }
    apic_17 { pt3dadd( 238.36, 228.428, 170.445, 0.2736 ) }
    apic_17 { pt3dadd( 237.677, 229.122, 171.577, 0.2728 ) }
    apic_17 { pt3dadd( 237.214, 229.849, 172.742, 0.2712 ) }
    apic_17 { pt3dadd( 236.767, 229.91, 174.026, 0.2684 ) }
    apic_17 { pt3dadd( 236.365, 230.322, 175.291, 0.2626 ) }
    apic_17 { pt3dadd( 235.567, 230.988, 176.075, 0.2542 ) }
    apic_17 { pt3dadd( 235.258, 232.014, 176.713, 0.2288 ) }
    apic_17 { pt3dadd( 234.934, 233.103, 177.458, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_264, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_264 = new SectionList()
    soma_0 ModelViewParmSubset_264.append()
    axon_0 ModelViewParmSubset_264.append()
    axon_1 ModelViewParmSubset_264.append()

    // Group: {name=ModelViewParmSubset_265, groups=[], sections=[apic_0, dend_42, dend_41, dend_32, dend_27, dend_20, dend_19, dend_14, dend_9, dend_0, apic_4, apic_1, dend_48, dend_43, dend_34, dend_33, dend_29, dend_28, dend_24, dend_21, dend_16, dend_15, dend_13, dend_10, dend_4, dend_1, apic_6, apic_5, apic_3, apic_2, dend_50, dend_49, dend_47, dend_44, dend_38, dend_35, dend_31, dend_30, dend_26, dend_25, dend_23, dend_22, dend_18, dend_17, dend_12, dend_11, dend_6, dend_5, dend_3, dend_2, apic_32, apic_7, dend_46, dend_45, dend_40, dend_39, dend_37, dend_36, dend_8, dend_7, apic_9, apic_8, apic_11, apic_10, apic_25, apic_12, apic_31, apic_26, apic_22, apic_13, apic_28, apic_27, apic_24, apic_23, apic_19, apic_14, apic_30, apic_29, apic_21, apic_20, apic_16, apic_15, apic_18, apic_17]}
    ModelViewParmSubset_265 = new SectionList()
    apic_0 ModelViewParmSubset_265.append()
    dend_42 ModelViewParmSubset_265.append()
    dend_41 ModelViewParmSubset_265.append()
    dend_32 ModelViewParmSubset_265.append()
    dend_27 ModelViewParmSubset_265.append()
    dend_20 ModelViewParmSubset_265.append()
    dend_19 ModelViewParmSubset_265.append()
    dend_14 ModelViewParmSubset_265.append()
    dend_9 ModelViewParmSubset_265.append()
    dend_0 ModelViewParmSubset_265.append()
    apic_4 ModelViewParmSubset_265.append()
    apic_1 ModelViewParmSubset_265.append()
    dend_48 ModelViewParmSubset_265.append()
    dend_43 ModelViewParmSubset_265.append()
    dend_34 ModelViewParmSubset_265.append()
    dend_33 ModelViewParmSubset_265.append()
    dend_29 ModelViewParmSubset_265.append()
    dend_28 ModelViewParmSubset_265.append()
    dend_24 ModelViewParmSubset_265.append()
    dend_21 ModelViewParmSubset_265.append()
    dend_16 ModelViewParmSubset_265.append()
    dend_15 ModelViewParmSubset_265.append()
    dend_13 ModelViewParmSubset_265.append()
    dend_10 ModelViewParmSubset_265.append()
    dend_4 ModelViewParmSubset_265.append()
    dend_1 ModelViewParmSubset_265.append()
    apic_6 ModelViewParmSubset_265.append()
    apic_5 ModelViewParmSubset_265.append()
    apic_3 ModelViewParmSubset_265.append()
    apic_2 ModelViewParmSubset_265.append()
    dend_50 ModelViewParmSubset_265.append()
    dend_49 ModelViewParmSubset_265.append()
    dend_47 ModelViewParmSubset_265.append()
    dend_44 ModelViewParmSubset_265.append()
    dend_38 ModelViewParmSubset_265.append()
    dend_35 ModelViewParmSubset_265.append()
    dend_31 ModelViewParmSubset_265.append()
    dend_30 ModelViewParmSubset_265.append()
    dend_26 ModelViewParmSubset_265.append()
    dend_25 ModelViewParmSubset_265.append()
    dend_23 ModelViewParmSubset_265.append()
    dend_22 ModelViewParmSubset_265.append()
    dend_18 ModelViewParmSubset_265.append()
    dend_17 ModelViewParmSubset_265.append()
    dend_12 ModelViewParmSubset_265.append()
    dend_11 ModelViewParmSubset_265.append()
    dend_6 ModelViewParmSubset_265.append()
    dend_5 ModelViewParmSubset_265.append()
    dend_3 ModelViewParmSubset_265.append()
    dend_2 ModelViewParmSubset_265.append()
    apic_32 ModelViewParmSubset_265.append()
    apic_7 ModelViewParmSubset_265.append()
    dend_46 ModelViewParmSubset_265.append()
    dend_45 ModelViewParmSubset_265.append()
    dend_40 ModelViewParmSubset_265.append()
    dend_39 ModelViewParmSubset_265.append()
    dend_37 ModelViewParmSubset_265.append()
    dend_36 ModelViewParmSubset_265.append()
    dend_8 ModelViewParmSubset_265.append()
    dend_7 ModelViewParmSubset_265.append()
    apic_9 ModelViewParmSubset_265.append()
    apic_8 ModelViewParmSubset_265.append()
    apic_11 ModelViewParmSubset_265.append()
    apic_10 ModelViewParmSubset_265.append()
    apic_25 ModelViewParmSubset_265.append()
    apic_12 ModelViewParmSubset_265.append()
    apic_31 ModelViewParmSubset_265.append()
    apic_26 ModelViewParmSubset_265.append()
    apic_22 ModelViewParmSubset_265.append()
    apic_13 ModelViewParmSubset_265.append()
    apic_28 ModelViewParmSubset_265.append()
    apic_27 ModelViewParmSubset_265.append()
    apic_24 ModelViewParmSubset_265.append()
    apic_23 ModelViewParmSubset_265.append()
    apic_19 ModelViewParmSubset_265.append()
    apic_14 ModelViewParmSubset_265.append()
    apic_30 ModelViewParmSubset_265.append()
    apic_29 ModelViewParmSubset_265.append()
    apic_21 ModelViewParmSubset_265.append()
    apic_20 ModelViewParmSubset_265.append()
    apic_16 ModelViewParmSubset_265.append()
    apic_15 ModelViewParmSubset_265.append()
    apic_18 ModelViewParmSubset_265.append()
    apic_17 ModelViewParmSubset_265.append()

    // Group: {name=dend, groups=[], sections=[dend_42, dend_41, dend_32, dend_27, dend_20, dend_19, dend_14, dend_9, dend_0, dend_48, dend_43, dend_34, dend_33, dend_29, dend_28, dend_24, dend_21, dend_16, dend_15, dend_13, dend_10, dend_4, dend_1, dend_50, dend_49, dend_47, dend_44, dend_38, dend_35, dend_31, dend_30, dend_26, dend_25, dend_23, dend_22, dend_18, dend_17, dend_12, dend_11, dend_6, dend_5, dend_3, dend_2, dend_46, dend_45, dend_40, dend_39, dend_37, dend_36, dend_8, dend_7]}
    dend = new SectionList()
    dend_42 dend.append()
    dend_41 dend.append()
    dend_32 dend.append()
    dend_27 dend.append()
    dend_20 dend.append()
    dend_19 dend.append()
    dend_14 dend.append()
    dend_9 dend.append()
    dend_0 dend.append()
    dend_48 dend.append()
    dend_43 dend.append()
    dend_34 dend.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_33 dend.append()
    dend_29 dend.append()
    dend_28 dend.append()
    dend_24 dend.append()
    dend_21 dend.append()
    dend_16 dend.append()
    dend_15 dend.append()
    dend_13 dend.append()
    dend_10 dend.append()
    dend_4 dend.append()
    dend_1 dend.append()
    dend_50 dend.append()
    dend_49 dend.append()
    dend_47 dend.append()
    dend_44 dend.append()
    dend_38 dend.append()
    dend_35 dend.append()
    dend_31 dend.append()
    dend_30 dend.append()
    dend_26 dend.append()
    dend_25 dend.append()
    dend_23 dend.append()
    dend_22 dend.append()
    dend_18 dend.append()
    dend_17 dend.append()
    dend_12 dend.append()
    dend_11 dend.append()
    dend_6 dend.append()
    dend_5 dend.append()
    dend_3 dend.append()
    dend_2 dend.append()
    dend_46 dend.append()
    dend_45 dend.append()
    dend_40 dend.append()
    dend_39 dend.append()
    dend_37 dend.append()
    dend_36 dend.append()
    dend_8 dend.append()
    dend_7 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_4, apic_1, apic_6, apic_5, apic_3, apic_2, apic_32, apic_7, apic_9, apic_8, apic_11, apic_10, apic_25, apic_12, apic_31, apic_26, apic_22, apic_13, apic_28, apic_27, apic_24, apic_23, apic_19, apic_14, apic_30, apic_29, apic_21, apic_20, apic_16, apic_15, apic_18, apic_17]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_4 apic.append()
    apic_1 apic.append()
    apic_6 apic.append()
    apic_5 apic.append()
    apic_3 apic.append()
    apic_2 apic.append()
    apic_32 apic.append()
    apic_7 apic.append()
    apic_9 apic.append()
    apic_8 apic.append()
    apic_11 apic.append()
    apic_10 apic.append()
    apic_25 apic.append()
    apic_12 apic.append()
    apic_31 apic.append()
    apic_26 apic.append()
    apic_22 apic.append()
    apic_13 apic.append()
    apic_28 apic.append()
    apic_27 apic.append()
    apic_24 apic.append()
    apic_23 apic.append()
    apic_19 apic.append()
    apic_14 apic.append()
    apic_30 apic.append()
    apic_29 apic.append()
    apic_21 apic.append()
    apic_20 apic.append()
    apic_16 apic.append()
    apic_15 apic.append()
    apic_18 apic.append()
    apic_17 apic.append()

    // Group: {name=OneSecGrp_SectionRef_10841, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_10841 = new SectionList()
    soma_0 OneSecGrp_SectionRef_10841.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, apic_9, apic_9, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec dend cm = 2.0  // units: uF/cm2
    forsec apic cm = 2.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 0.0041499287  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 9.927991E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.19932647  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 8.594747E-4  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 0.0024345957  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 5.0742977E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 0.0720436  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.011013924  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 2.8589647E-4  // units: S cm-2
        e_pas_nml2 = -76.950294  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 2.037068E-4  // units: S cm-2
        e_pas_nml2 = -76.950294  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 1.1581363E-5  // units: S cm-2
        e_pas_nml2 = -76.950294  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 6.7255314E-4  // units: S cm-2
        e_pas_nml2 = -76.950294  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 4.2996096E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.007396372  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_482655070
    forsec soma {
        insert CaDynamics_482655070
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_41 nseg = 3
    dend_9 nseg = 3
    dend_48 nseg = 5
    dend_33 nseg = 7
    dend_21 nseg = 3
    dend_13 nseg = 5
    apic_5 nseg = 3
    apic_2 nseg = 5
    dend_31 nseg = 3
    dend_26 nseg = 5
    dend_25 nseg = 5
    dend_23 nseg = 7
    dend_22 nseg = 5
    dend_11 nseg = 3
    dend_6 nseg = 3
    dend_5 nseg = 5
    dend_3 nseg = 3
    dend_2 nseg = 5
    apic_32 nseg = 3
    dend_46 nseg = 3
    dend_45 nseg = 3
    dend_37 nseg = 3
    dend_36 nseg = 7
    dend_7 nseg = 5
    apic_8 nseg = 11
    apic_11 nseg = 17
    apic_10 nseg = 3
    apic_25 nseg = 3
    apic_12 nseg = 3
    apic_31 nseg = 5
    apic_22 nseg = 3
    apic_27 nseg = 3
    apic_24 nseg = 3
    apic_30 nseg = 3
    apic_29 nseg = 3
    apic_21 nseg = 5
    apic_15 nseg = 3
    apic_18 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_482655070


