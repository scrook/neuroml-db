// Cell: dNAC222_L23_ChC_2a16475c82_0_0
/*
{
  "id" : "dNAC222_L23_ChC_2a16475c82_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-4.96523, -8.50396, 0.0192879, 2.77292", "-4.44098, -7.63716, 0.0179479, 3.51612", "-3.91674, -6.77037, 0.0166079, 5.09768", "-3.3925, -5.90357, 0.0152679, 6.03936", "-2.86825, -5.03677, 0.0139278, 6.97148", "-2.34401, -4.16997, 0.0125878, 7.92835", "-1.81976, -3.30317, 0.0112478, 9.28613", "-1.29552, -2.43637, 0.00990778, 9.94241", "-0.771277, -1.56957, 0.00856776, 10.1843", "-0.247034, -0.702773, 0.00722774, 10.3452", "0.27721, 0.164025, 0.00588772, 10.228", "0.801453, 1.03082, 0.0045477, 9.54324", "1.3257, 1.89762, 0.00320768, 8.78219", "1.84994, 2.76442, 0.00186766, 7.98349", "2.37418, 3.63122, 5.27637E-4, 7.19659", "2.89843, 4.49802, -8.12382E-4, 6.4097", "3.42267, 5.36482, -0.0021524, 5.30941", "3.94692, 6.23162, -0.00349242, 4.2542", "4.47116, 7.09842, -0.00483244, 3.4094", "4.9954, 7.96521, -0.00617246, 2.28943", "5.51965, 8.83201, -0.00751248, 1.46335" ]
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-4.16275, -8.65838, 5.04691, 2.4", "-4.67438, -13.6462, 3.63633, 2.22", "-5.08899, -17.688, 2.49327, 2.22", "-5.59037, -22.5758, 1.11095, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999991157
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "6.23725, 3.80562, -2.37309, 0.55", "7.67752, 5.14866, -3.24626, 0.55", "9.23446, 6.60049, -4.19015, 2.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999991157
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "4.56725, 7.52012, -2.03309, 1.94", "4.79636, 9.24064, -3.53869, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999991157
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "5.51965, 8.83201, -0.00751248, 0.83", "13.2824, 21.6671, -0.00751248, 0.83", "21.0451, 34.5022, -0.00751248, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-5.59037, -22.5758, 1.11095, 0.83", "-3.04098, -23.8953, 0.474671, 0.83", "-0.979057, -24.9625, -0.0399448, 0.83", "2.07423, -26.5428, -0.801986, 0.83", "3.92801, -27.5023, -1.26465, 1.11" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-5.59037, -22.5758, 1.11095, 2.22", "-5.97742, -24.626, -0.909642, 2.22" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "9.23446, 6.60049, -4.19015, 0.55", "10.8182, 8.13863, -4.49236, 0.55", "12.2662, 9.5859, -4.73648, 1.11", "13.8639, 11.2398, -4.9733, 0.55", "14.8396, 12.3288, -5.11026, 0.55", "16.436, 14.2093, -5.47068, 0.83", "17.6185, 15.7096, -5.87966, 0.55", "18.3759, 16.8276, -6.24402, 0.55", "19.4907, 18.6843, -6.93471, 1.11", "20.4388, 20.5071, -7.71418, 1.11", "21.539, 22.8998, -8.95844, 0.55", "22.4614, 25.3314, -10.3704, 0.83", "22.9865, 26.8974, -11.3749, 0.55", "23.1687, 27.5162, -11.789, 0.55", "23.6506, 29.3787, -13.0755, 1.11", "24.1022, 31.3011, -14.3623, 0.28", "24.2937, 32.1564, -14.8477, 0.55", "24.7214, 34.0889, -15.9371, 0.28", "24.9378, 35.1066, -16.5163, 0.83", "25.3403, 36.9801, -17.5939, 0.28", "25.498, 37.8358, -18.0655, 0.83", "25.7724, 39.8049, -19.136, 0.83", "26.1645, 42.6321, -20.8316, 0.28", "26.2675, 43.4624, -21.3778, 0.55", "26.4237, 44.6779, -22.2307, 0.28", "26.5745, 45.8109, -23.0309, 1.11", "27.0032, 48.9668, -25.2686, 0.28", "27.2418, 50.6699, -26.4645, 0.83", "27.5321, 52.5945, -27.6987, 0.28", "27.6904, 53.5019, -28.2395, 0.55", "28.0333, 55.136, -29.205, 0.28", "28.1965, 55.7881, -29.5568, 0.55", "28.4464, 56.7945, -30.0198, 0.28", "28.6697, 57.7459, -30.4727, 0.83", "29.0144, 59.3445, -31.2209, 0.83", "29.7534, 63.2957, -33.1994, 0.28", "30.0248, 65.0543, -34.0487, 0.55", "30.2311, 66.8416, -34.885, 0.28", "30.5288, 70.1183, -36.3547, 0.55", "30.7405, 72.7833, -37.4504, 0.28", "30.8052, 74.1933, -37.9627, 0.55", "30.915, 76.3052, -38.6219, 0.28", "31.0576, 78.1501, -39.255, 0.55", "31.1553, 79.1134, -39.5261, 0.55", "31.5279, 82.1241, -40.0908, 0.28", "31.712, 83.2915, -40.298, 0.55", "32.3231, 86.5478, -40.8039, 0.28", "32.5476, 87.6496, -40.9677, 0.55", "33.0905, 90.1757, -41.2603, 0.28", "33.5555, 92.4548, -41.5489, 0.55", "34.1628, 95.5504, -41.9499, 0.28", "34.3188, 96.3849, -42.0535, 0.55", "34.7121, 98.4707, -42.3543, 0.28", "35.1427, 100.64, -42.7935, 0.55", "35.6796, 103.184, -43.4847, 0.28", "36.0535, 104.979, -44.0221, 0.55", "36.5283, 107.205, -44.7499, 0.28", "37.1519, 110.129, -45.7705, 0.55", "37.6979, 112.609, -46.7048, 0.28", "37.9512, 113.727, -47.1382, 0.55", "38.5566, 116.325, -48.1248, 0.55", "39.0364, 118.32, -48.8355, 0.28", "39.2972, 119.428, -49.1863, 0.55", "39.6129, 120.896, -49.5309, 0.28", "39.8622, 122.033, -49.7283, 0.55", "40.0895, 123.072, -49.8387, 0.55", "40.4866, 124.98, -49.8735, 0.28", "40.6172, 125.715, -49.8577, 0.55", "41.0051, 127.879, -49.8382, 0.28", "41.2191, 129.051, -49.8204, 0.83", "41.5043, 130.547, -49.9057, 0.28", "41.7545, 131.48, -50.0697, 0.55", "42.2372, 132.88, -50.4869, 0.28", "42.6739, 133.804, -50.7859, 0.55", "43.848, 135.735, -51.4237, 0.28", "44.8732, 137.237, -51.9473, 0.55", "46.6111, 139.512, -52.7468, 0.28", "47.5354, 140.619, -53.1316, 0.55", "49.4876, 142.717, -53.8436, 0.28", "50.9161, 144.135, -54.4333, 0.28", "51.3081, 144.478, -54.6137, 0.28", "53.2261, 145.997, -55.5003, 0.28", "54.6831, 147.119, -56.194, 0.83", "58.3569, 149.885, -58.104, 0.28", "60.1112, 151.154, -59.1476, 0.55", "62.7971, 152.993, -60.8262, 0.28", "63.6009, 153.521, -61.334, 0.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "9.23446, 6.60049, -4.19015, 0.55", "10.4238, 9.69073, -4.38968, 0.55", "11.7169, 13.0258, -4.44403, 0.55", "12.4279, 14.9447, -4.36436, 0.55", "13.6186, 18.402, -4.3267, 0.55", "14.3382, 20.6003, -4.2943, 0.28", "15.345, 23.4888, -4.24561, 1.11", "16.3418, 26.5209, -4.22747, 0.55", "16.9306, 28.5453, -4.23824, 0.55", "17.9216, 32.4084, -4.12979, 0.83", "18.617, 35.196, -4.0223, 0.55", "19.527, 39.1177, -3.78834, 0.55", "20.3336, 42.8657, -3.63501, 0.55", "21.035, 46.3381, -3.61175, 0.55", "21.864, 50.4544, -3.55539, 0.83" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "4.79636, 9.24064, -3.53869, 0.83", "6.81639, 10.8592, -3.35605, 0.83", "9.31749, 12.8634, -3.12993, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "4.79636, 9.24064, -3.53869, 1.11", "3.74728, 13.2487, -2.97131, 1.11", "3.13024, 15.6061, -2.63759, 0.83", "1.87269, 20.4107, -1.95746, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "21.0451, 34.5022, -0.00751248, 0.28", "28.8079, 47.3373, -0.00751248, 0.28", "36.5706, 60.1724, -0.00751248, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "3.92801, -27.5023, -1.26465, 0.55", "5.05223, -28.2596, -0.934015, 0.55", "6.1657, -29.0097, -0.606536, 0.55", "7.08799, -29.6309, -0.335286, 0.28", "7.99911, -30.2447, -0.0673205, 0.55", "9.15013, -31.02, 0.271201, 0.55", "10.0109, -31.5998, 0.524338, 0.55" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "3.92801, -27.5023, -1.26465, 0.55", "5.6406, -28.331, -1.85798, 0.55", "7.81719, -29.32, -2.73098, 0.55", "9.32731, -29.9495, -3.34544, 0.83", "11.482, -30.8862, -4.31779, 0.55", "13.467, -31.7462, -5.24611, 0.55", "15.9304, -32.7878, -6.38464, 0.83", "17.6494, -33.4674, -7.25252, 0.28", "19.3378, -34.0721, -8.13838, 0.55", "21.2862, -34.8229, -9.34975, 0.28", "22.3863, -35.2994, -10.1438, 0.55", "24.0341, -36.1021, -11.5347, 0.55", "25.4546, -36.8692, -12.8233, 0.55", "26.943, -37.7048, -14.2225, 0.55", "29.5874, -39.1679, -16.8466, 0.55", "30.7809, -39.8401, -18.0697, 0.28", "31.5736, -40.3394, -18.9058, 0.55", "32.6977, -41.0993, -20.1111, 0.55", "34.1142, -42.1115, -21.5823, 0.55", "35.8771, -43.3876, -23.2964, 0.55", "37.6902, -44.6687, -24.9203, 0.55", "39.0105, -45.6241, -26.0872, 0.55", "40.5507, -46.7533, -27.4589, 0.55", "41.8258, -47.7154, -28.6464, 0.55", "43.0111, -48.6691, -29.7891, 0.55", "44.7654, -50.0546, -31.4464, 0.55", "46.0604, -51.0041, -32.6605, 0.55", "47.4925, -52.0245, -34.0674, 0.83", "48.9448, -53.0723, -35.522, 0.83", "50.1969, -53.9884, -36.8119, 0.55", "51.5404, -55.0229, -38.355, 0.55", "52.4106, -55.702, -39.3835, 0.83", "53.9373, -56.8009, -41.1767, 0.28", "55.0258, -57.5005, -42.4083, 0.55", "57.5076, -58.8947, -44.9896, 0.55", "59.8911, -60.1052, -47.4046, 0.55", "60.9709, -60.6226, -48.473, 0.28", "62.445, -61.2345, -49.7953, 0.55", "64.894, -62.1447, -51.8066, 0.28", "66.3727, -62.7069, -52.9029, 0.28", "67.6249, -63.2095, -53.816, 0.28", "69.1473, -63.9346, -54.9608, 0.55", "70.3585, -64.6525, -55.9769, 0.55", "72.0552, -65.9809, -57.6142, 0.55", "73.6575, -67.5022, -59.4119, 0.55", "75.3793, -69.2729, -61.6095, 0.55", "76.4071, -70.3769, -62.9174, 0.28", "77.1644, -71.2337, -63.9017, 0.55", "78.6516, -73.0234, -65.9052, 0.55", "80.0945, -74.7456, -67.7521, 0.55", "81.3967, -76.252, -69.3676, 0.83", "82.5527, -77.5405, -70.5783, 0.83", "83.1397, -78.1359, -71.1604, 0.83", "84.5008, -79.3798, -72.4142, 0.28", "85.5482, -80.1599, -73.2054, 0.83", "87.7716, -81.5205, -74.6145, 0.28", "89.2568, -82.2912, -75.5377, 0.83", "91.4569, -83.2383, -76.7242, 0.55", "93.0489, -83.7745, -77.4189, 0.55", "96.7626, -84.7702, -78.6091, 0.55", "98.7584, -85.215, -78.9673, 0.55", "100.894, -85.6088, -79.0511, 0.55", "104.435, -86.1944, -78.6266, 0.55", "105.8, -86.4576, -78.2528, 0.55", "107.456, -86.8219, -77.6396, 0.83", "110.553, -87.686, -76.244, 0.28", "111.551, -88.0215, -75.7776, 0.55", "114.569, -89.113, -74.3874, 0.28", "117.078, -90.2032, -73.4559, 0.55", "118.062, -90.6987, -73.1683, 0.55", "120.047, -91.8002, -72.8142, 0.28", "121.124, -92.4753, -72.805, 0.28", "122.088, -93.1151, -72.9051, 0.55", "123.949, -94.3512, -73.372, 0.28", "125.0, -94.9963, -73.709, 0.28", "125.682, -95.3748, -73.9401, 0.55", "127.636, -96.2587, -74.6088, 0.28", "129.498, -97.0202, -75.2107, 0.55", "131.142, -97.5516, -75.7045, 0.28", "132.688, -97.9702, -76.1483, 0.55", "135.132, -98.5628, -76.833, 0.28", "137.108, -98.9811, -77.366, 0.28", "139.645, -99.4315, -77.9838, 0.55", "141.805, -99.779, -78.4593, 0.55" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-5.97742, -24.626, -0.909642, 0.55", "-7.65022, -26.5209, -2.21887, 0.55", "-8.55696, -27.4381, -2.84478, 0.55", "-10.056, -28.9683, -3.79377, 0.83", "-12.6634, -31.8661, -5.48868, 0.55", "-14.4253, -33.9509, -6.60042, 0.55", "-16.2733, -36.1943, -7.74124, 0.83", "-17.9312, -38.3233, -8.74558, 0.55", "-19.1743, -39.8885, -9.38816, 1.11", "-20.5548, -41.6324, -9.92597, 0.28", "-22.0501, -43.6775, -10.287, 0.55", "-22.7357, -44.7449, -10.4671, 0.28", "-24.0794, -46.7689, -10.7561, 0.55", "-25.0557, -48.0615, -10.8756, 0.28", "-27.2856, -50.5691, -11.0366, 0.83", "-29.8205, -52.993, -11.0776, 0.55", "-32.4868, -55.4389, -11.0988, 0.55", "-34.9378, -57.6001, -11.0943, 0.55", "-37.6553, -59.8226, -11.0889, 0.55", "-39.9705, -61.5775, -11.09, 0.55", "-42.6302, -63.2778, -10.988, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-5.97742, -24.626, -0.909642, 1.66", "-4.94343, -26.851, -0.708336, 1.66", "-3.42492, -30.1187, -0.412701, 0.83", "-1.51983, -34.2181, -0.0418041, 0.83", "0.194155, -37.9063, 0.291887, 0.83", "1.51184, -40.7418, 0.548424, 1.11" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "21.864, 50.4544, -3.55539, 0.55", "22.7459, 52.4834, -4.60717, 0.55", "23.9465, 54.9391, -5.95853, 0.55", "25.3027, 57.668, -7.33288, 0.28", "26.4967, 60.0729, -8.44367, 0.83", "27.3049, 61.7344, -9.16799, 0.55", "28.3806, 63.9303, -10.0753, 0.55", "29.7264, 66.5129, -11.0871, 0.55", "31.3378, 69.3549, -11.9018, 0.83", "32.4861, 71.3153, -12.1969, 0.28", "32.796, 71.8519, -12.2255, 0.28", "33.9143, 73.825, -12.1941, 0.55", "34.9248, 75.6476, -12.0854, 0.55", "36.9723, 79.3893, -11.8673, 0.55", "37.9733, 81.2381, -11.8133, 0.55", "40.0579, 85.1614, -11.8202, 0.55", "41.3142, 87.5817, -11.8899, 0.55", "42.7964, 90.5434, -12.0818, 0.55", "44.4114, 93.8673, -12.5899, 0.55", "45.1899, 95.3843, -12.9856, 0.55", "45.8481, 96.5177, -13.4242, 0.28", "46.3231, 97.2034, -13.7795, 0.55", "47.1905, 98.2397, -14.4031, 0.28", "48.9085, 100.057, -15.5667, 0.55", "51.7862, 102.863, -17.2426, 0.55", "54.0619, 105.098, -18.6363, 0.55", "55.3711, 106.361, -19.4326, 0.55", "58.3818, 109.202, -21.3586, 0.55", "59.589, 110.393, -22.1393, 0.55", "60.6089, 111.493, -22.7948, 0.28", "61.9356, 113.19, -23.7617, 0.55", "63.0456, 114.86, -24.563, 0.55", "64.1378, 116.99, -25.5001, 0.55", "65.0732, 119.424, -26.3982, 0.55", "66.0311, 122.311, -27.4412, 0.55", "66.5217, 123.897, -27.9914, 0.55", "66.9815, 125.417, -28.4465, 0.55", "67.5838, 127.275, -29.0607, 0.55", "68.7027, 130.07, -30.0709, 0.55", "70.1638, 132.747, -31.3289, 0.55", "70.9805, 133.892, -32.0507, 0.55", "71.776, 134.828, -32.7449, 0.55", "74.0917, 137.224, -34.7861, 0.55", "75.0246, 138.083, -35.5689, 0.55", "76.5944, 139.448, -36.9128, 0.55", "78.4232, 141.009, -38.4041, 0.55", "79.4996, 141.957, -39.3026, 0.28", "80.2749, 142.653, -40.0084, 0.28", "81.1039, 143.428, -40.7991, 0.55", "83.2706, 145.405, -42.8821, 0.55", "85.5074, 147.412, -45.0824, 0.55", "86.5744, 148.286, -46.1729, 0.83", "89.2521, 150.627, -49.7451, 0.55", "90.6878, 151.9, -52.0914, 0.55", "91.718, 152.873, -54.0014, 0.55", "93.2607, 154.407, -57.2914, 0.55", "95.2843, 156.497, -61.8896, 0.55", "98.5033, 159.767, -69.6496, 0.55", "100.858, 162.203, -75.6401, 0.55", "101.718, 163.102, -77.9713, 0.55", "103.506, 165.002, -83.1272, 0.55", "104.488, 166.021, -86.009, 0.55", "106.091, 167.752, -90.6351, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "21.864, 50.4544, -3.55539, 0.28", "21.7203, 53.1236, -2.72671, 0.28", "21.6703, 54.5182, -2.2812, 0.83", "21.6482, 56.7097, -1.55438, 0.55", "21.6478, 58.88, -0.837636, 0.55", "21.6751, 61.7653, 0.0770813, 0.28", "21.7105, 63.6738, 0.652019, 0.28", "21.7521, 64.4065, 0.852, 0.55", "21.8516, 65.9166, 1.26655, 0.28", "21.9323, 66.7825, 1.48351, 0.55", "22.066, 67.8613, 1.73049, 0.28", "22.2586, 68.9568, 1.84642, 0.55", "22.53, 70.549, 1.90888, 0.28", "22.53, 70.549, 1.90888, 0.55", "23.0352, 72.4813, 1.83783, 0.55", "23.6374, 74.2527, 1.63481, 0.83", "24.5752, 76.4427, 1.22211, 0.55", "25.1248, 77.5454, 0.958834, 0.55", "26.1978, 79.5067, 0.503696, 0.55", "27.2611, 81.3472, 0.123935, 0.28", "28.9951, 84.2425, -0.378429, 0.83", "30.0946, 86.0862, -0.6163, 0.28", "30.8846, 87.3945, -0.646343, 0.55", "32.1794, 89.5786, -0.605719, 0.28", "32.7442, 90.5974, -0.518255, 0.55", "33.5997, 92.3504, -0.176253, 0.28", "33.9678, 93.2758, 0.117075, 0.55", "34.7232, 95.3424, 0.816739, 0.28", "35.3457, 96.9444, 1.38483, 0.55", "36.0033, 98.5568, 1.94061, 0.28", "36.6785, 100.274, 2.50111, 0.55", "37.4166, 102.104, 3.05426, 0.28", "38.4762, 104.786, 3.74503, 0.55", "39.1811, 106.416, 4.11501, 0.28", "39.5209, 107.157, 4.32256, 0.55", "40.2147, 108.565, 4.74159, 0.28", "40.7548, 109.58, 5.04824, 0.55", "41.5533, 111.059, 5.489, 0.55", "42.3232, 112.508, 6.00139, 0.55", "43.6444, 114.979, 7.01262, 0.55", "44.7185, 117.058, 7.96157, 0.55", "45.8079, 119.208, 8.95782, 0.55", "47.1257, 121.989, 10.198, 0.55", "48.4598, 124.949, 11.4538, 0.55", "49.1886, 126.651, 12.1037, 0.28", "49.9088, 128.242, 12.6628, 0.55", "50.6504, 129.868, 13.1813, 0.55", "51.1245, 130.886, 13.4646, 0.83", "52.2377, 133.358, 14.007, 0.28", "53.258, 135.657, 13.6551, 0.55", "54.2432, 137.844, 12.6721, 0.28", "54.5727, 138.593, 12.1764, 0.55", "55.5868, 141.03, 10.3889, 0.55", "56.073, 142.306, 9.35442, 0.55", "59.1991, 151.178, 1.74536, 0.28", "59.7817, 152.949, 0.253851, 0.28", "60.2905, 154.598, -1.06199, 0.55", "60.9556, 156.737, -2.7578, 0.55", "61.2576, 157.71, -3.50281, 0.55", "61.9404, 159.91, -4.49127, 0.55", "62.681, 162.458, -4.06732, 0.55", "62.9909, 163.573, -3.92293, 0.55", "68.9024, 171.782, -2.2264, 0.55", "75.8249, 179.41, -1.98184, 0.55", "81.5659, 187.757, -0.460389, 0.55", "87.3362, 196.123, 0.817868, 0.55", "91.5699, 205.1, 3.11976, 0.55", "96.8905, 213.106, 6.75252, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "9.31749, 12.8634, -3.12993, 0.55", "11.6296, 14.2703, -3.19093, 0.55", "13.8016, 15.6318, -3.11754, 0.83", "16.0392, 17.077, -2.97187, 0.28", "17.6433, 18.1239, -2.76578, 0.55", "19.5091, 19.3346, -2.46574, 0.28", "20.9167, 20.2073, -2.2534, 0.83", "23.0476, 21.4868, -1.86086, 0.55", "24.7798, 22.4926, -1.477, 0.83", "27.0001, 23.6992, -0.942772, 0.28", "28.4713, 24.4261, -0.616416, 0.55", "31.0989, 25.6324, -0.0879507, 0.28", "33.2585, 26.5826, 0.265205, 0.83", "35.0182, 27.3284, 0.467352, 0.28", "37.1711, 28.2002, 0.638555, 0.55", "39.7147, 29.2043, 0.747876, 0.28", "40.8312, 29.647, 0.774118, 0.83", "43.3251, 30.6636, 0.81423, 0.28", "44.1038, 30.9744, 0.797568, 0.55", "46.5075, 31.9286, 0.646771, 0.83", "48.573, 32.7273, 0.483242, 0.28", "50.1072, 33.3155, 0.326887, 0.83", "51.4964, 33.8756, 0.164954, 0.28", "52.0435, 34.1034, 0.103338, 0.55", "53.7419, 34.8622, -0.0780254, 0.28", "55.5694, 35.7535, -0.325683, 0.83", "57.4986, 36.7729, -0.576706, 0.28", "58.2804, 37.2218, -0.652513, 0.55", "60.2473, 38.4119, -0.806996, 0.28", "61.633, 39.346, -0.874184, 0.55", "64.3745, 41.3319, -0.96382, 0.28", "65.2778, 42.0518, -0.966041, 0.83", "67.2852, 43.7361, -0.896521, 0.28", "68.5297, 44.8402, -0.829227, 0.83", "71.499, 47.6844, -0.607443, 0.28", "72.7027, 48.8943, -0.422284, 0.83", "74.8739, 51.1103, 0.0457678, 0.28", "75.5966, 51.8447, 0.228053, 0.55", "76.5856, 52.8538, 0.536011, 0.28", "77.016, 53.2823, 0.712663, 0.55", "79.1609, 55.2987, 1.86601, 0.28", "80.3874, 56.4087, 2.51198, 0.55", "82.0811, 57.8783, 3.30704, 0.28", "82.6772, 58.3713, 3.6035, 0.83", "85.5297, 60.6031, 4.98199, 0.28", "86.8811, 61.635, 5.62355, 0.55", "88.8363, 63.1222, 6.51037, 0.28", "90.2076, 64.1545, 7.12536, 0.83", "93.4899, 66.5546, 8.47878, 0.28", "95.6779, 68.1334, 9.45956, 0.55", "97.2374, 69.2444, 10.1794, 0.28", "98.0248, 69.8021, 10.5752, 0.55", "99.7051, 70.9618, 11.5111, 0.28", "100.497, 71.5015, 11.9448, 0.55", "103.703, 73.6526, 13.4894, 0.28", "104.972, 74.4809, 14.0775, 0.83", "107.938, 76.2917, 15.4788, 0.28", "108.891, 76.8399, 15.9712, 0.28", "109.879, 77.3757, 16.4744, 0.55", "111.321, 78.1473, 17.1955, 0.28", "112.524, 78.7537, 17.7091, 0.55", "115.142, 80.0056, 18.9334, 0.28", "116.891, 80.7963, 19.8377, 0.83", "118.37, 81.4913, 20.7437, 0.28", "119.579, 82.0572, 21.6412, 0.55", "128.49, 87.3223, 22.309, 0.55", "137.937, 91.6861, 21.954, 0.55", "147.133, 96.2373, 23.701, 0.55", "157.159, 98.9206, 25.0889, 0.55", "167.025, 102.342, 25.4793, 0.55", "176.681, 106.028, 24.0179, 0.55", "186.147, 109.789, 21.7527, 0.55", "195.918, 111.463, 18.3272, 0.55", "205.916, 112.46, 15.2904, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "9.31749, 12.8634, -3.12993, 0.55", "9.37077, 16.5594, -1.61898, 0.55", "9.59301, 21.4554, 0.382033, 0.83", "9.79598, 23.4215, 1.21165, 0.55", "9.98185, 25.4399, 2.12965, 0.83", "10.244, 29.4748, 4.24059, 0.83", "10.3949, 31.567, 5.43866, 0.55", "10.6119, 33.6665, 6.80794, 0.55", "10.7438, 35.1322, 7.95605, 0.55", "11.0864, 37.9074, 10.2867, 0.55", "11.3158, 40.9115, 13.016, 0.55", "11.3425, 42.029, 13.9253, 0.55", "12.8664, 50.362, 18.2805, 0.55", "14.5007, 58.5675, 22.8627, 0.55", "15.277, 67.274, 26.5282, 0.55", "16.276, 75.8203, 30.554, 0.55", "16.7265, 85.0342, 32.3271, 0.55", "19.0352, 93.8256, 34.9492, 0.55", "22.8891, 102.096, 37.6439, 0.55", "25.6525, 110.753, 40.3272, 0.55", "27.1852, 119.717, 42.8543, 0.55", "28.5779, 128.839, 44.6933, 0.55", "28.1693, 137.972, 46.9074, 0.55", "26.7576, 147.135, 48.3298, 0.55", "24.2429, 156.08, 49.7183, 0.55", "21.65, 164.943, 51.5277, 0.55", "18.7511, 173.85, 51.9497, 0.55", "16.1774, 182.832, 52.7534, 0.55", "14.118, 191.834, 54.5077, 0.55", "12.2317, 200.87, 56.2668, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "1.87269, 20.4107, -1.95746, 0.28", "0.528562, 20.534, -1.75846, 0.28", "-0.0454651, 20.5842, -1.69499, 0.55", "-3.03403, 20.8457, -1.36455, 0.28", "-3.84583, 20.9167, -1.27479, 0.55", "-6.90331, 21.1843, -0.93673, 0.28", "-8.48336, 21.3225, -0.762026, 0.28", "-9.12335, 21.368, -0.716717, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "1.87269, 20.4107, -1.95746, 0.83", "2.4808, 23.6623, -0.922068, 0.83", "3.1939, 27.4754, 0.292099, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "10.0109, -31.5998, 0.524338, 0.55", "13.0165, -32.0022, 3.62478, 0.55", "14.8661, -31.9467, 5.39393, 0.55", "18.1273, -31.5011, 8.30528, 0.55", "19.998, -31.0603, 9.93491, 0.55", "22.8865, -30.3796, 12.4513, 0.55", "25.2456, -29.8236, 14.5065, 0.55", "28.2363, -28.87, 16.8789, 0.55", "30.8886, -27.7457, 18.9722, 0.55", "35.4314, -25.4232, 22.2738, 0.55", "44.6917, -21.9382, 30.3715, 0.55", "52.9489, -17.4969, 39.0179, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "10.0109, -31.5998, 0.524338, 0.55", "12.3917, -33.0758, 1.04367, 0.55", "15.2999, -34.8661, 1.67802, 0.28", "17.4995, -36.2336, 2.11772, 0.83", "20.1632, -37.9167, 2.69491, 0.28", "22.4201, -39.3889, 3.20136, 0.28", "23.676, -40.2322, 3.48018, 0.55", "25.2154, -41.3988, 3.80977, 0.28", "25.7296, -41.8527, 3.95374, 0.55", "27.4815, -43.5391, 4.57007, 0.28", "27.9082, -43.9668, 4.72598, 0.83", "28.8984, -45.0909, 5.18842, 0.28", "29.5775, -45.8919, 5.54869, 0.55", "31.4731, -48.2066, 6.62876, 0.28", "31.9814, -48.8191, 6.93821, 0.55", "33.1683, -50.2531, 7.66628, 0.28", "33.9862, -51.2004, 8.21895, 0.55", "35.4221, -52.8322, 9.34003, 0.28", "36.1205, -53.6255, 10.0626, 0.55", "37.4003, -55.0586, 11.4625, 0.28", "37.8749, -55.5486, 11.9834, 0.55", "39.2733, -56.9153, 13.4595, 0.28", "40.091, -57.6394, 14.2566, 0.55", "43.9232, -60.6931, 17.4601, 0.28", "45.4155, -61.6246, 18.4865, 0.55", "46.9158, -62.3468, 19.2769, 0.28", "48.3628, -62.8496, 19.7946, 0.55", "50.7942, -63.3846, 20.311, 0.28", "52.4399, -63.6535, 20.5238, 0.55", "55.6297, -63.8977, 20.6438, 0.28", "57.4274, -63.9849, 20.7955, 0.55", "59.9704, -64.0591, 21.0228, 0.28", "61.5354, -63.9944, 21.1473, 0.55", "71.6604, -68.3804, 23.2187, 0.55", "80.7467, -73.7675, 26.919, 0.55", "90.9757, -77.784, 29.2953, 0.55", "100.787, -81.1665, 33.7009, 0.55", "109.86, -85.3597, 38.8685, 0.55", "118.081, -88.3803, 45.9988, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-42.6302, -63.2778, -10.988, 0.28", "-44.2034, -63.4645, -10.0593, 0.28", "-44.8081, -63.5585, -9.72602, 0.55", "-48.0683, -63.7128, -7.56384, 0.28", "-49.3888, -63.7866, -6.62018, 0.55", "-53.3796, -64.1979, -3.62359, 0.28", "-53.9312, -64.2801, -3.19552, 0.55", "-55.4316, -64.6183, -1.91985, 0.55", "-59.3557, -65.733, 1.76151, 0.55", "-60.4469, -66.1384, 2.86594, 0.28", "-61.6055, -66.5446, 3.93088, 0.55", "-62.4984, -66.8875, 4.62419, 0.28", "-63.3475, -67.2307, 5.3048, 0.55", "-64.8172, -67.9244, 6.52352, 0.28", "-65.6624, -68.4151, 7.10908, 0.55", "-68.2919, -69.5556, 8.87064, 0.28", "-70.3035, -70.203, 10.191, 0.55", "-79.4975, -70.8596, 17.0493, 0.55", "-88.8165, -69.326, 23.6482, 0.55", "-98.4563, -66.3035, 29.1761, 0.55", "-107.57, -64.0495, 35.8559, 0.55", "-117.339, -63.219, 41.8992, 0.55", "-127.621, -62.2546, 47.0034, 0.55", "-137.521, -63.3398, 52.719, 0.55", "-146.481, -62.1276, 59.8554, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-42.6302, -63.2778, -10.988, 0.28", "-43.5055, -64.0495, -11.143, 0.28", "-43.7339, -64.2402, -11.1877, 0.55", "-44.4649, -64.8748, -11.3094, 0.28", "-45.285, -65.5652, -11.441, 0.55", "-46.8005, -66.7988, -11.6138, 0.55", "-47.8539, -67.6493, -11.7087, 0.28", "-49.0336, -68.5738, -11.7664, 0.55", "-50.534, -69.7563, -11.7923, 0.55", "-52.273, -71.1797, -11.7434, 0.55", "-53.2077, -71.9563, -11.6894, 0.28", "-53.7103, -72.3884, -11.6432, 0.55", "-54.3012, -72.9203, -11.5826, 0.28", "-55.2205, -73.7383, -11.5091, 0.55", "-56.011, -74.4532, -11.5056, 0.28", "-56.6703, -75.0303, -11.4684, 0.55", "-57.3332, -75.5973, -11.4251, 0.28", "-58.5005, -76.5292, -11.3309, 0.55", "-60.0237, -77.6746, -11.2154, 0.55", "-60.7631, -78.2112, -11.151, 0.55", "-63.0697, -79.8518, -10.9435, 0.55", "-64.1024, -80.5995, -10.8375, 0.55", "-65.2381, -81.4527, -10.7044, 0.28", "-66.1407, -82.1849, -10.597, 0.28", "-66.7995, -82.7805, -10.5343, 0.55", "-67.4003, -83.4077, -10.5217, 0.55", "-68.0023, -84.1496, -10.6193, 0.28", "-68.4473, -84.757, -10.6998, 0.55", "-68.8245, -85.305, -10.7743, 0.28", "-69.4415, -86.1447, -10.8835, 0.55", "-70.2393, -87.1257, -11.0161, 0.55", "-70.9662, -87.981, -11.1449, 0.55", "-71.862, -88.985, -11.305, 0.28", "-72.754, -89.9003, -11.4589, 0.55", "-73.4657, -90.5765, -11.5642, 0.55", "-74.1866, -91.1997, -11.6805, 0.55", "-75.0824, -91.9268, -11.8281, 0.83", "-79.3194, -95.287, -12.087, 0.83" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "1.51184, -40.7418, 0.548424, 0.83", "3.08985, -41.6073, 0.452099, 0.83", "4.80612, -42.4744, 0.364316, 0.83", "7.42452, -43.6994, 0.252229, 0.83", "10.4216, -45.0088, 0.147113, 0.83", "13.9036, -46.4876, 0.0484369, 0.83", "16.7139, -47.6812, -0.0312038, 0.83", "21.1336, -49.496, -0.171908, 0.83", "23.1375, -50.3078, -0.240574, 0.55", "24.9411, -50.9593, -0.298485, 0.55", "26.667, -51.5689, -0.327971, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "1.51184, -40.7418, 0.548424, 1.11", "0.583584, -41.8731, -1.05786, 1.11", "-2.06296, -45.0984, -5.63751, 0.83", "-3.07674, -46.3338, -7.39178, 0.83", "-3.85293, -47.2798, -8.73493, 0.83", "-4.81715, -48.4548, -10.4035, 0.83" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "106.091, 167.752, -90.6351, 0.55", "107.271, 167.839, -90.6048, 0.55", "109.725, 167.853, -90.863, 0.55", "110.542, 167.85, -90.9845, 0.55", "112.287, 167.839, -91.2946, 0.55", "114.959, 167.859, -91.8974, 0.55", "117.615, 167.878, -92.4967, 0.55", "121.882, 167.873, -93.6276, 0.55", "122.853, 167.844, -93.9351, 0.83", "124.731, 167.781, -94.5915, 0.28", "126.774, 167.765, -95.4093, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "106.091, 167.752, -90.6351, 0.55", "107.564, 169.097, -93.2837, 0.55", "109.57, 170.928, -96.8882, 0.55", "111.99, 173.136, -101.238, 0.28", "112.729, 173.811, -102.565, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "96.8905, 213.106, 6.75252, 0.55", "97.6911, 224.204, 7.00439, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "96.8905, 213.106, 6.75252, 0.55", "108.109, 220.823, 5.98923, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "205.916, 112.46, 15.2904, 0.55", "212.507, 116.765, 19.3439, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "205.916, 112.46, 15.2904, 0.55", "215.573, 116.787, 12.0345, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "12.2317, 200.87, 56.2668, 0.55", "12.2613, 207.932, 58.215, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "12.2317, 200.87, 56.2668, 0.55", "12.4258, 211.226, 59.756, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "3.1939, 27.4754, 0.292099, 0.83", "4.32395, 29.5722, 0.236336, 0.83", "5.49346, 31.9517, 0.314479, 0.83", "6.37856, 34.1034, 0.528064, 0.28", "6.6838, 34.9411, 0.595445, 1.11", "7.59698, 37.5705, 0.823673, 0.28", "8.2274, 39.4488, 0.9554, 0.83", "8.96164, 41.8877, 1.09076, 0.28", "9.72716, 44.4823, 1.23748, 0.83", "10.7293, 47.8577, 1.47372, 0.55", "11.2039, 49.4834, 1.61872, 1.11", "11.9847, 52.145, 1.89815, 0.55", "12.699, 54.5924, 2.10603, 0.83", "13.389, 56.8766, 2.21239, 0.28", "14.0562, 59.0444, 2.28043, 0.83", "14.5964, 60.8556, 2.47273, 0.28", "14.8766, 61.868, 2.61157, 0.55", "15.4175, 63.9122, 2.93694, 0.28", "15.7708, 65.3278, 3.15384, 0.83", "16.4108, 67.9071, 3.48432, 0.83", "17.2007, 70.7952, 3.85011, 0.28", "17.5841, 72.2309, 4.17475, 0.55", "17.8756, 73.5387, 4.55429, 0.28", "18.058, 74.3917, 4.82584, 0.55", "18.3639, 75.998, 5.30449, 0.28", "18.5775, 77.2654, 5.61854, 0.83", "19.1443, 80.8199, 6.2346, 0.55", "19.3392, 82.118, 6.45511, 0.83", "19.5748, 83.8708, 6.74829, 0.55", "19.8092, 85.9258, 6.92229, 0.55", "19.9999, 87.7056, 6.94635, 0.28", "20.142, 88.906, 6.91459, 0.55", "20.3975, 90.7816, 6.76356, 0.28", "20.4362, 91.0677, 6.7486, 0.55", "20.7377, 93.5938, 6.67418, 0.28", "20.9835, 95.2936, 6.62172, 0.55", "21.2397, 96.7409, 6.64285, 0.28", "21.5702, 98.3053, 6.72417, 0.83", "22.0421, 100.01, 6.85314, 0.83", "22.4207, 101.22, 6.98534, 0.28", "22.9694, 102.683, 7.30838, 0.55", "23.7208, 104.648, 7.6458, 0.28", "23.8288, 104.93, 7.6806, 0.55", "24.6594, 107.019, 7.85946, 0.28", "24.8767, 107.611, 7.9194, 0.55", "25.6242, 110.328, 8.13953, 0.28", "26.2093, 112.908, 8.37494, 0.55", "26.3871, 113.94, 8.47286, 0.28", "26.5981, 115.422, 8.65582, 0.55", "26.937, 118.386, 9.1646, 0.55", "27.1257, 120.219, 9.52001, 0.28", "27.3121, 122.221, 9.93723, 0.55", "27.5233, 124.043, 10.4957, 0.28", "27.5907, 124.588, 10.6847, 0.55", "27.7309, 125.938, 11.1953, 0.28", "27.8419, 127.085, 11.6229, 0.83", "31.7929, 137.016, 12.1994, 0.83", "35.5044, 146.912, 13.9046, 0.83", "37.6297, 157.16, 15.975, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "3.1939, 27.4754, 0.292099, 0.55", "2.07112, 29.3306, 1.23335, 0.55", "1.84619, 29.7232, 1.42464, 0.55", "0.708757, 31.8291, 2.38013, 0.83", "-0.531446, 34.1917, 3.32178, 0.55", "-0.980988, 35.0659, 3.64509, 0.55", "-1.56696, 36.2672, 4.05413, 0.55", "-2.20694, 37.6522, 4.40485, 0.83", "-3.07297, 39.4398, 4.76431, 0.28", "-3.63361, 40.6119, 4.90595, 0.55", "-4.02763, 41.4599, 4.93791, 0.28", "-4.69382, 42.8053, 4.97473, 0.83", "-5.71648, 44.8004, 5.04719, 0.55", "-6.18219, 45.7187, 5.10435, 0.55", "-7.35099, 48.1191, 5.35303, 0.55", "-7.98173, 49.419, 5.46658, 0.28", "-8.71189, 51.0026, 5.6987, 0.55", "-9.38786, 52.5281, 5.9023, 0.28", "-10.0571, 54.1133, 6.10065, 0.28", "-10.6496, 55.5079, 6.22925, 0.55", "-11.7969, 58.08, 6.40812, 0.55", "-13.2624, 61.4207, 6.38328, 0.28", "-14.3987, 64.0214, 6.30816, 0.83", "-15.303, 66.1329, 6.28539, 0.55", "-16.1901, 68.2467, 6.30964, 0.55", "-16.7778, 69.7988, 6.35649, 0.55", "-17.6448, 72.4159, 6.52469, 0.28", "-18.3111, 74.6248, 6.66927, 0.55", "-18.7572, 76.491, 6.94068, 0.55", "-18.9601, 77.5163, 7.10937, 0.28", "-19.1523, 78.4603, 7.28835, 0.83", "-19.5657, 80.1272, 7.6513, 0.28", "-20.0224, 81.5442, 8.00598, 0.55", "-20.8334, 83.607, 8.49469, 0.55", "-21.601, 85.2056, 8.89123, 0.55", "-22.1796, 86.2459, 9.23423, 0.28", "-22.4649, 86.6968, 9.40993, 0.55", "-23.1032, 87.6777, 9.8821, 0.55", "-24.3846, 89.4941, 10.8463, 0.28", "-25.5909, 91.0423, 11.7364, 0.55", "-26.7695, 92.4238, 12.4588, 0.28", "-27.2625, 92.9795, 12.7652, 0.55", "-28.3969, 94.1893, 13.4912, 0.28", "-29.8822, 95.6417, 14.4169, 0.55", "-31.2525, 96.8024, 15.1969, 0.28", "-32.3107, 97.6385, 15.7915, 0.55", "-35.0053, 99.8343, 17.4351, 0.55", "-35.9031, 100.547, 18.009, 0.55", "-37.1013, 101.482, 18.7818, 0.55", "-38.3271, 102.519, 19.5924, 0.55", "-40.5574, 104.536, 21.2124, 0.55", "-42.0557, 105.926, 22.3885, 0.55", "-43.1081, 106.849, 23.0583, 0.55", "-45.0633, 108.609, 24.2988, 0.55", "-46.7558, 110.173, 25.4105, 0.55", "-48.5058, 111.832, 26.5815, 0.83", "-50.6076, 113.708, 27.9239, 0.28", "-53.2114, 115.924, 29.282, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "52.9489, -17.4969, 39.0179, 0.55", "60.1222, -15.1292, 46.8628, 0.55", "67.6389, -14.22, 54.7217, 0.55", "74.528, -12.5577, 63.009, 0.55", "80.8331, -12.1305, 71.9095, 0.55", "87.8307, -10.7153, 80.1562, 0.55", "93.4375, -7.70402, 88.9744, 0.55", "98.9684, -3.94373, 97.5188, 0.55", "106.218, 0.615241, 104.124, 0.55", "112.858, 5.49371, 111.109, 0.55", "118.882, 11.7367, 117.417, 0.55" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "52.9489, -17.4969, 39.0179, 0.55", "58.8996, -15.5122, 45.155, 0.55", "65.5193, -15.0761, 50.9456, 0.55", "72.0843, -15.6274, 56.7908, 0.55", "79.3559, -16.8559, 61.5871, 0.55", "86.3015, -17.8974, 66.893, 0.55", "92.5587, -19.1349, 72.9606, 0.55", "97.9017, -20.3727, 79.8508, 0.55", "102.823, -20.5847, 87.1494, 0.55", "106.758, -20.8513, 95.0191, 0.55", "109.858, -20.6962, 103.246, 0.55" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "118.081, -88.3803, 45.9988, 0.55", "126.207, -93.0989, 51.0996, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "118.081, -88.3803, 45.9988, 0.55", "126.633, -92.038, 46.8931, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-146.481, -62.1276, 59.8554, 0.55", "-153.566, -62.5673, 65.5799, 0.55", "-159.566, -64.1416, 72.2301, 0.55", "-165.632, -67.0424, 78.2782, 0.55" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-146.481, -62.1276, 59.8554, 0.55", "-155.652, -61.5049, 64.492, 0.55", "-164.854, -61.8642, 69.0569, 0.55", "-174.884, -62.2395, 71.3517, 0.55" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "26.667, -51.5689, -0.327971, 0.55", "29.8465, -51.5499, -0.768257, 0.55", "32.5027, -51.5686, -1.09876, 0.55", "35.3783, -51.5213, -1.42282, 0.55", "38.5003, -51.4738, -1.70775, 0.55", "42.4531, -51.32, -2.01756, 0.55", "45.3469, -51.1645, -2.22124, 0.55", "48.6389, -50.8321, -2.44144, 0.55", "50.4608, -50.5557, -2.53813, 0.55", "54.1451, -49.6849, -2.66548, 0.55", "56.004, -49.1148, -2.67902, 0.55", "57.4034, -48.6049, -2.65729, 0.55", "60.6723, -47.2358, -2.59108, 0.55", "62.8789, -46.1695, -2.54812, 0.83", "64.3341, -45.4002, -2.51404, 0.55", "66.2576, -44.2531, -2.45727, 0.55", "70.3686, -41.6081, -2.32029, 0.55", "71.5332, -40.7923, -2.27355, 0.55", "72.2579, -40.2269, -2.24494, 0.83", "74.5865, -38.2262, -2.15262, 0.55", "76.0425, -36.8279, -2.06494, 0.55", "77.8072, -34.9154, -1.8672, 0.55", "79.6967, -32.5494, -1.56176, 0.55", "82.1871, -29.2409, -1.04331, 0.55", "83.2355, -27.7924, -0.782229, 0.28", "85.0502, -25.1873, -0.218147, 0.55", "86.7038, -22.7849, 0.366158, 0.28", "87.4742, -21.641, 0.658996, 0.55", "88.4334, -20.1429, 1.03162, 0.28", "88.7737, -19.6323, 1.12817, 0.55", "89.9946, -17.9932, 1.28103, 0.55", "92.4919, -15.0859, 1.32274, 0.55", "94.0779, -13.3946, 1.26127, 0.55", "95.5237, -11.9669, 1.18893, 0.55", "98.5582, -9.09192, 1.00039, 0.55", "101.678, -6.1757, 0.73089, 0.55", "104.196, -3.84635, 0.449047, 0.55", "105.898, -2.33489, 0.246309, 0.55", "107.167, -1.26667, 0.114756, 0.83", "107.858, -0.698461, 0.053962, 0.83", "109.534, 0.657652, -0.0269288, 0.55", "110.224, 1.24248, -0.0609133, 0.83", "112.177, 2.98318, -0.171996, 0.28", "113.844, 4.47176, -0.247185, 0.55", "114.898, 5.4089, -0.248036, 0.55", "116.39, 6.74421, -0.215105, 0.55", "118.254, 8.38769, -0.122388, 0.28", "119.702, 9.63113, -0.0503401, 0.55", "121.302, 10.8992, 0.009049, 0.83", "122.862, 11.9778, 0.0516592, 0.55", "125.11, 13.2181, 0.218577, 0.28", "127.712, 14.4234, 0.479818, 0.55", "129.757, 15.2044, 0.730654, 0.55", "132.57, 16.1009, 1.08275, 0.55", "135.137, 16.7945, 1.40563, 0.55", "138.79, 17.6783, 1.87221, 0.55", "140.898, 18.1249, 2.20549, 0.55", "144.018, 18.8495, 2.73031, 0.55", "145.436, 19.2752, 2.98147, 0.28", "147.936, 20.3088, 3.4353, 0.55", "148.861, 20.7446, 3.58485, 0.28", "149.691, 21.1887, 3.68166, 0.83", "152.385, 22.6035, 4.07107, 0.55", "154.468, 23.8872, 4.40928, 0.28", "156.135, 25.0986, 4.71718, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "26.667, -51.5689, -0.327971, 0.55", "28.0029, -52.9055, -0.329459, 0.55", "29.492, -54.3823, -0.290693, 0.55", "31.2912, -56.209, 0.00180966, 0.28", "32.0006, -56.9346, 0.16306, 0.28", "32.9165, -57.9216, 0.567328, 0.55", "33.8066, -58.8974, 1.04686, 0.28", "34.8939, -60.0905, 1.74489, 0.55", "36.5908, -62.039, 3.03078, 0.28", "37.5641, -63.1324, 3.85578, 0.55", "40.0432, -65.8043, 5.98748, 0.55", "41.5714, -67.4584, 7.28763, 0.55", "42.529, -68.4473, 8.03882, 0.28", "42.9673, -68.8996, 8.3726, 0.55", "44.8242, -70.7818, 9.65238, 0.28", "45.6373, -71.6338, 10.236, 0.55", "47.1352, -73.2133, 11.2627, 0.55", "48.5197, -74.6904, 12.3136, 0.55", "49.925, -76.2511, 13.4437, 0.28", "50.2652, -76.6338, 13.7172, 0.55", "51.8037, -78.5173, 15.0489, 0.28", "51.9367, -78.6806, 15.1804, 0.55", "52.7317, -79.7264, 16.1669, 0.28", "53.06, -80.2879, 16.6815, 0.55", "59.0723, -85.5423, 21.8763, 0.55", "63.5471, -92.0602, 27.0372, 0.55", "66.3717, -99.5629, 31.8745, 0.55", "70.1572, -107.216, 35.6824, 0.55", "74.547, -114.175, 40.2417, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-4.81715, -48.4548, -10.4035, 0.55", "-5.41453, -48.1002, -11.7653, 0.55", "-6.79116, -47.3088, -14.6996, 0.55", "-8.90071, -45.9408, -18.8141, 0.28", "-9.48159, -45.5641, -19.947, 0.83", "-11.4104, -44.3132, -23.709, 0.55", "-13.142, -43.1902, -27.0862, 0.55", "-13.6745, -42.8559, -28.2257, 0.28", "-14.6927, -42.344, -30.5075, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-4.81715, -48.4548, -10.4035, 0.83", "-6.16777, -50.4753, -10.6333, 0.83", "-7.84162, -52.9795, -10.9181, 0.83" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "37.6297, 157.16, 15.975, 0.83", "40.946, 166.582, 16.4029, 0.83", "44.7623, 175.763, 15.1205, 0.83" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "37.6297, 157.16, 15.975, 0.55", "38.1284, 171.153, 19.0983, 0.83", "38.6037, 185.365, 20.7441, 0.83", "38.2308, 199.247, 24.4043, 0.83", "39.7458, 213.17, 27.5319, 0.83", "40.6028, 227.057, 31.0736, 0.83", "38.9368, 241.141, 33.1754, 0.83", "36.1674, 255.152, 34.5186, 0.83" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-53.2114, 115.924, 29.282, 0.28", "-57.4402, 115.101, 31.1791, 0.28", "-58.7257, 114.851, 31.7558, 0.28", "-60.46, 114.514, 32.5338, 0.55", "-62.0511, 114.204, 33.2476, 0.28", "-63.6689, 113.89, 33.9733, 0.28", "-66.5499, 113.329, 35.2657, 0.83", "-75.7116, 110.682, 38.883, 0.83", "-84.413, 108.718, 43.868, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-53.2114, 115.924, 29.282, 0.28", "-55.799, 117.976, 30.5478, 0.28", "-58.5114, 120.006, 31.9425, 0.55", "-60.8791, 121.791, 33.2557, 0.55", "-61.4728, 122.226, 33.6147, 0.55", "-62.8385, 123.289, 34.5147, 0.28", "-64.1173, 124.287, 35.3484, 0.55", "-65.6958, 125.44, 36.5129, 0.28", "-66.7473, 126.134, 37.3114, 0.28", "-68.8172, 127.473, 38.9907, 0.55", "-70.9747, 128.833, 40.7829, 0.28", "-73.0707, 130.126, 42.5692, 0.55", "-75.8353, 131.788, 44.8229, 0.28", "-76.9435, 132.446, 45.726, 0.55", "-83.9699, 136.962, 52.0702, 0.55", "-91.1553, 140.674, 58.8052, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-7.84162, -52.9795, -10.9181, 0.55", "-7.60854, -54.5164, -11.1691, 0.55", "-7.415, -56.7821, -11.5544, 0.55", "-7.19291, -60.3036, -12.2098, 0.55", "-7.1997, -64.3657, -13.0198, 0.55", "-7.33182, -67.3923, -13.7313, 0.55", "-7.57759, -69.6477, -14.3394, 0.55", "-7.9284, -71.1724, -14.814, 0.55", "-8.6771, -73.741, -15.6615, 0.55", "-9.74229, -76.7987, -16.7364, 0.55", "-10.5918, -79.3326, -17.7039, 0.55", "-11.5398, -82.3456, -18.8441, 0.55", "-12.7028, -86.7663, -20.5534, 0.55", "-13.4469, -90.0452, -21.8015, 0.55", "-14.3063, -94.4865, -23.3946, 0.55", "-14.7954, -98.2449, -24.6523, 0.55", "-15.0344, -100.74, -25.3556, 0.55", "-15.1783, -103.736, -26.0596, 0.55", "-15.2088, -105.424, -26.3875, 0.55", "-15.2559, -109.203, -26.9667, 0.55", "-15.1849, -110.664, -27.0988, 0.55", "-15.0684, -114.123, -27.2415, 0.55", "-14.8814, -116.868, -27.2894, 0.55", "-14.7249, -118.685, -27.2345, 0.55", "-14.6052, -119.915, -27.1825, 0.55", "-14.3042, -121.81, -27.0608, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-7.84162, -52.9795, -10.9181, 0.55", "-9.0202, -56.2253, -10.3851, 0.55", "-10.2749, -60.3347, -9.76654, 0.55", "-11.1321, -63.508, -9.36647, 0.55", "-12.5586, -69.256, -8.73635, 0.55", "-13.1707, -71.5592, -8.52151, 0.55", "-13.9452, -74.3567, -8.26566, 0.55", "-14.6415, -76.9348, -8.03857, 0.55", "-16.1927, -82.2206, -7.55667, 0.55", "-17.1912, -84.9428, -7.18618, 0.55", "-18.4373, -87.8147, -6.51504, 0.55", "-20.3731, -91.6102, -5.37849, 0.55", "-22.1011, -94.6078, -4.28009, 0.55", "-23.6738, -97.1218, -3.2226, 0.55", "-25.6133, -100.102, -1.76921, 0.55", "-27.9665, -103.848, 0.254645, 0.55", "-28.8539, -105.515, 1.17098, 0.55", "-29.33, -106.619, 1.76754, 0.83", "-29.9566, -108.894, 2.89922, 0.83", "-30.1877, -110.775, 3.69187, 0.83", "-30.017, -114.99, 5.32174, 0.55", "-29.6098, -117.984, 6.34503, 0.83", "-29.3138, -120.01, 7.16688, 0.55", "-29.0821, -121.896, 7.99043, 0.55", "-28.7316, -125.235, 9.5676, 0.55", "-28.6666, -127.422, 10.6651, 0.55", "-28.8664, -129.16, 11.5278, 0.55", "-29.9913, -133.295, 13.5597, 0.55", "-30.7803, -135.575, 14.5871, 0.55", "-31.4991, -137.527, 15.344, 0.55", "-32.5387, -140.673, 16.3863, 0.55", "-33.702, -144.47, 17.4006, 0.55", "-34.3695, -146.91, 17.9538, 0.55", "-35.0871, -149.971, 18.54, 0.55", "-36.3358, -155.608, 19.5159, 0.55", "-37.4456, -160.908, 20.233, 0.55", "-37.9166, -163.457, 20.551, 0.55", "-38.5978, -167.4, 21.0599, 0.55", "-39.6943, -173.296, 21.8304, 0.83", "-41.0554, -179.581, 22.6175, 0.83", "-41.6726, -182.214, 22.9126, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "36.1674, 255.152, 34.5186, 0.83", "36.0143, 262.419, 35.8414, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "36.1674, 255.152, 34.5186, 0.55", "36.016, 264.903, 36.3743, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-14.3042, -121.81, -27.0608, 0.55", "-13.6408, -122.742, -27.5149, 0.55", "-12.9712, -123.685, -27.9448, 0.55", "-11.8479, -125.327, -28.6452, 0.55", "-10.7549, -126.912, -29.3221, 0.55", "-10.005, -127.967, -29.7579, 0.55", "-9.26731, -128.981, -30.1593, 0.55", "-8.11733, -130.682, -30.7663, 0.55", "-7.29006, -131.92, -31.1617, 0.55", "-6.92229, -132.5, -31.3237, 0.55", "-5.76827, -134.392, -31.8062, 0.83", "-4.97557, -135.711, -32.1431, 0.55", "-3.93073, -137.363, -32.5519, 0.55", "-3.10637, -138.677, -32.8639, 0.55", "-2.09781, -140.312, -33.2315, 0.55", "-0.858745, -142.379, -33.6709, 0.55", "-0.0901384, -143.702, -33.9575, 0.55", "0.633186, -144.985, -34.2497, 0.55", "1.10954, -145.837, -34.4316, 0.55", "1.45098, -146.552, -34.5465, 0.28", "1.65057, -147.085, -34.5899, 0.55", "1.83726, -147.708, -34.6285, 0.28", "2.05237, -148.649, -34.6982, 0.55", "2.37473, -150.028, -34.8433, 0.28", "2.78777, -151.488, -34.9731, 0.55", "3.19862, -152.838, -35.0986, 0.55", "3.5137, -153.907, -35.2088, 0.55", "3.95615, -155.262, -35.3795, 0.55", "4.35306, -156.471, -35.4786, 0.55", "4.96509, -158.39, -35.6838, 0.83", "5.30892, -159.44, -35.791, 0.28", "5.77331, -160.999, -35.9399, 0.28", "6.18309, -162.525, -36.0797, 0.28", "6.95769, -165.558, -36.3743, 0.55", "7.48553, -167.773, -36.6188, 1.66", "8.06222, -170.201, -36.9178, 0.55", "8.65227, -172.544, -37.203, 0.55", "9.29903, -175.175, -37.5277, 0.28", "9.73552, -177.189, -37.7841, 0.55", "10.1767, -179.413, -38.0729, 0.28", "10.4009, -180.723, -38.1816, 0.83", "10.6393, -182.408, -38.2951, 0.55", "10.8574, -184.021, -38.3582, 0.55", "10.987, -185.622, -38.3843, 0.83", "11.0485, -187.218, -38.3917, 0.28", "11.0485, -187.218, -38.3917, 0.55", "11.0262, -188.244, -38.4288, 0.28", "11.0089, -188.634, -38.4483, 0.55", "11.0159, -189.737, -38.5528, 0.28", "11.0667, -190.715, -38.7148, 0.55", "11.2238, -192.501, -39.1656, 0.28", "11.2717, -192.931, -39.2757, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-14.3042, -121.81, -27.0608, 0.55", "-14.0474, -123.649, -27.1124, 0.55", "-13.9374, -124.551, -27.1233, 0.28", "-13.7988, -125.481, -27.1307, 0.55", "-13.2837, -128.209, -27.1613, 0.28", "-13.2143, -128.508, -27.187, 0.55", "-12.6119, -130.847, -27.4727, 0.28", "-12.2992, -131.901, -27.6285, 0.55", "-11.8767, -133.338, -27.8764, 0.28", "-11.3748, -135.264, -28.2503, 0.55", "-10.7759, -137.925, -28.8242, 0.28", "-10.6704, -138.572, -28.9796, 0.55", "-10.5977, -140.053, -29.3616, 0.28", "-10.5836, -140.691, -29.5341, 0.55", "-10.7094, -142.481, -30.0085, 0.28", "-10.8653, -143.345, -30.2132, 0.55", "-11.3459, -145.059, -30.4864, 0.28", "-11.9991, -147.139, -30.8823, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-41.6726, -182.214, 22.9126, 0.55", "-42.5012, -183.804, 22.346, 0.55", "-44.6315, -187.891, 20.8895, 0.55", "-46.9451, -192.329, 19.3076, 0.55", "-48.5342, -195.378, 18.2212, 0.55", "-55.5132, -206.208, 14.9549, 0.55", "-62.5528, -216.959, 11.5248, 0.55", "-72.502, -225.614, 8.86, 0.55", "-82.6743, -233.681, 5.1671, 0.55", "-93.3017, -241.175, 1.42537, 0.55", "-105.08, -247.636, -0.55435, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-41.6726, -182.214, 22.9126, 0.55", "-42.2733, -183.606, 23.2937, 0.55", "-42.8685, -185.387, 23.7576, 0.55", "-44.1702, -189.28, 24.7719, 0.55", "-45.4256, -193.036, 25.7502, 0.55", "-46.2701, -195.562, 26.4084, 0.55", "-47.1122, -198.081, 27.0646, 0.55", "-48.1602, -201.242, 27.9681, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-11.9991, -147.139, -30.8823, 0.28", "-13.1024, -150.475, -31.8559, 0.28", "-13.3969, -151.508, -32.1742, 0.55", "-14.2396, -154.388, -33.0767, 0.28", "-14.6253, -155.706, -33.4899, 0.55", "-15.4957, -158.68, -34.4219, 0.28", "-16.0886, -160.705, -35.0569, 0.83", "-16.5612, -162.847, -35.7981, 0.28", "-16.8711, -164.445, -36.3645, 0.83" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-11.9991, -147.139, -30.8823, 0.55", "-11.9777, -148.781, -30.417, 0.55", "-11.9525, -151.067, -29.6475, 0.55", "-12.0045, -153.607, -28.8628, 0.55", "-12.0395, -155.344, -28.3439, 0.55", "-12.0601, -156.666, -27.9663, 0.28", "-12.1298, -159.184, -27.297, 0.55", "-12.222, -161.821, -26.6067, 0.28", "-12.3255, -164.939, -26.0426, 0.55", "-12.3907, -166.687, -25.8516, 0.28", "-12.4716, -167.964, -25.7955, 0.55", "-12.5916, -169.383, -25.7752, 0.28", "-12.7057, -170.636, -25.8089, 0.55", "-12.9451, -173.895, -26.1396, 0.28", "-13.1223, -176.615, -26.5067, 0.28", "-13.2635, -178.265, -26.7924, 0.83" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-48.1602, -201.242, 27.9681, 0.28", "-45.4661, -201.862, 28.6765, 0.28", "-44.7513, -202.026, 28.8645, 0.55", "-42.7007, -202.497, 29.4037, 0.28", "-41.3175, -202.815, 29.7674, 0.55", "-39.159, -203.311, 30.3351, 0.28", "-38.1308, -203.548, 30.6054, 0.55", "-26.4532, -207.184, 33.1347, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-48.1602, -201.242, 27.9681, 0.55", "-48.6196, -204.125, 27.9159, 0.55", "-48.7274, -212.838, 28.7608, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-26.4532, -207.184, 33.1347, 0.55", "-21.2143, -208.828, 32.5814, 0.55", "-15.7724, -209.781, 32.2536, 0.55", "-10.2939, -210.52, 31.9349, 0.55", "-4.81638, -210.273, 31.15, 0.55", "0.714744, -209.998, 31.0484, 0.55", "6.10243, -208.922, 30.4552, 0.55", "11.3111, -207.165, 30.7654, 0.55", "15.9728, -204.354, 31.1303, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-26.4532, -207.184, 33.1347, 0.55", "-16.2869, -210.274, 32.4933, 0.55", "-6.21047, -213.476, 33.6847, 0.55", "4.00063, -215.705, 35.8077, 0.55", "14.4348, -217.909, 36.0241, 0.55", "24.276, -221.642, 37.4522, 0.55", "33.5547, -226.69, 37.1757, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_28", "dend_19", "dend_0", "dend_54", "dend_29", "dend_27", "dend_20", "dend_12", "dend_1", "dend_56", "dend_55", "dend_49", "dend_30", "dend_24", "dend_21", "dend_16", "dend_13", "dend_11", "dend_2", "dend_60", "dend_57", "dend_51", "dend_50", "dend_46", "dend_31", "dend_26", "dend_25", "dend_23", "dend_22", "dend_18", "dend_17", "dend_15", "dend_14", "dend_6", "dend_3", "dend_62", "dend_61", "dend_59", "dend_58", "dend_53", "dend_52", "dend_48", "dend_47", "dend_45", "dend_32", "dend_10", "dend_7", "dend_5", "dend_4", "dend_40", "dend_33", "dend_9", "dend_8", "dend_44", "dend_41", "dend_39", "dend_34", "dend_43", "dend_42", "dend_36", "dend_35", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_28", "dend_19", "dend_0", "dend_54", "dend_29", "dend_27", "dend_20", "dend_12", "dend_1", "dend_56", "dend_55", "dend_49", "dend_30", "dend_24", "dend_21", "dend_16", "dend_13", "dend_11", "dend_2", "dend_60", "dend_57", "dend_51", "dend_50", "dend_46", "dend_31", "dend_26", "dend_25", "dend_23", "dend_22", "dend_18", "dend_17", "dend_15", "dend_14", "dend_6", "dend_3", "dend_62", "dend_61", "dend_59", "dend_58", "dend_53", "dend_52", "dend_48", "dend_47", "dend_45", "dend_32", "dend_10", "dend_7", "dend_5", "dend_4", "dend_40", "dend_33", "dend_9", "dend_8", "dend_44", "dend_41", "dend_39", "dend_34", "dend_43", "dend_42", "dend_36", "dend_35", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_28", "dend_28", "dend_28", "dend_19", "dend_19", "dend_0", "axon_0", "axon_0", "dend_54", "dend_54", "dend_54", "dend_54", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_12", "dend_12", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_22", "dend_18", "dend_17", "dend_15", "dend_14", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_59", "dend_58", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_32", "dend_32", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_9", "dend_8", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L23_ChC_2a16475c82_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_54, id: dend_54, parent: dend_28
create dend_54
public dend_54
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_19
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_49, id: dend_49, parent: dend_29
create dend_49
public dend_49
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_46, id: dend_46, parent: dend_30
create dend_46
public dend_46
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_31
create dend_45
public dend_45
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_39, id: dend_39, parent: dend_33
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_28, dend_19, dend_0, dend_54, dend_29, dend_27, dend_20, dend_12, dend_1, dend_56, dend_55, dend_49, dend_30, dend_24, dend_21, dend_16, dend_13, dend_11, dend_2, dend_60, dend_57, dend_51, dend_50, dend_46, dend_31, dend_26, dend_25, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_6, dend_3, dend_62, dend_61, dend_59, dend_58, dend_53, dend_52, dend_48, dend_47, dend_45, dend_32, dend_10, dend_7, dend_5, dend_4, dend_40, dend_33, dend_9, dend_8, dend_44, dend_41, dend_39, dend_34, dend_43, dend_42, dend_36, dend_35, dend_38, dend_37]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_28, dend_19, dend_0, dend_54, dend_29, dend_27, dend_20, dend_12, dend_1, dend_56, dend_55, dend_49, dend_30, dend_24, dend_21, dend_16, dend_13, dend_11, dend_2, dend_60, dend_57, dend_51, dend_50, dend_46, dend_31, dend_26, dend_25, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_6, dend_3, dend_62, dend_61, dend_59, dend_58, dend_53, dend_52, dend_48, dend_47, dend_45, dend_32, dend_10, dend_7, dend_5, dend_4, dend_40, dend_33, dend_9, dend_8, dend_44, dend_41, dend_39, dend_34, dend_43, dend_42, dend_36, dend_35, dend_38, dend_37]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_56
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_28, dend_28, dend_28, dend_19, dend_19, dend_0, axon_0, axon_0, dend_54, dend_54, dend_54, dend_54, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_12, dend_12, dend_1, dend_1, dend_1, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_30, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_58, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_32, dend_32, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_9, dend_8, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_28(0), soma_0(0.4999999999991157)
    connect dend_19(0), soma_0(0.4999999999991157)
    connect dend_0(0), soma_0(0.4999999999991157)
    connect axon_0(0), soma_0(1.0)
    connect dend_54(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_49(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_46(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_39(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -4.96523, -8.50396, 0.0192879, 2.77292 ) }
    soma_0 { pt3dadd( -4.44098, -7.63716, 0.0179479, 3.51612 ) }
    soma_0 { pt3dadd( -3.91674, -6.77037, 0.0166079, 5.09768 ) }
    soma_0 { pt3dadd( -3.3925, -5.90357, 0.0152679, 6.03936 ) }
    soma_0 { pt3dadd( -2.86825, -5.03677, 0.0139278, 6.97148 ) }
    soma_0 { pt3dadd( -2.34401, -4.16997, 0.0125878, 7.92835 ) }
    soma_0 { pt3dadd( -1.81976, -3.30317, 0.0112478, 9.28613 ) }
    soma_0 { pt3dadd( -1.29552, -2.43637, 0.00990778, 9.94241 ) }
    soma_0 { pt3dadd( -0.771277, -1.56957, 0.00856776, 10.1843 ) }
    soma_0 { pt3dadd( -0.247034, -0.702773, 0.00722774, 10.3452 ) }
    soma_0 { pt3dadd( 0.27721, 0.164025, 0.00588772, 10.228 ) }
    soma_0 { pt3dadd( 0.801453, 1.03082, 0.0045477, 9.54324 ) }
    soma_0 { pt3dadd( 1.3257, 1.89762, 0.00320768, 8.78219 ) }
    soma_0 { pt3dadd( 1.84994, 2.76442, 0.00186766, 7.98349 ) }
    soma_0 { pt3dadd( 2.37418, 3.63122, 5.27637E-4, 7.19659 ) }
    soma_0 { pt3dadd( 2.89843, 4.49802, -8.12382E-4, 6.4097 ) }
    soma_0 { pt3dadd( 3.42267, 5.36482, -0.0021524, 5.30941 ) }
    soma_0 { pt3dadd( 3.94692, 6.23162, -0.00349242, 4.2542 ) }
    soma_0 { pt3dadd( 4.47116, 7.09842, -0.00483244, 3.4094 ) }
    soma_0 { pt3dadd( 4.9954, 7.96521, -0.00617246, 2.28943 ) }
    soma_0 { pt3dadd( 5.51965, 8.83201, -0.00751248, 1.46335 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 21/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -4.16275, -8.65838, 5.04691, 2.4 ) }
    dend_28 { pt3dadd( -4.67438, -13.6462, 3.63633, 2.22 ) }
    dend_28 { pt3dadd( -5.08899, -17.688, 2.49327, 2.22 ) }
    dend_28 { pt3dadd( -5.59037, -22.5758, 1.11095, 2.49 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 25/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 6.23725, 3.80562, -2.37309, 0.55 ) }
    dend_19 { pt3dadd( 7.67752, 5.14866, -3.24626, 0.55 ) }
    dend_19 { pt3dadd( 9.23446, 6.60049, -4.19015, 2.22 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 28/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 4.56725, 7.52012, -2.03309, 1.94 ) }
    dend_0 { pt3dadd( 4.79636, 9.24064, -3.53869, 1.94 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 30/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 5.51965, 8.83201, -0.00751248, 0.83 ) }
    axon_0 { pt3dadd( 13.2824, 21.6671, -0.00751248, 0.83 ) }
    axon_0 { pt3dadd( 21.0451, 34.5022, -0.00751248, 0.83 ) }
    // Section: dend_54, id: dend_54, parent: dend_28 (entry count 33/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -5.59037, -22.5758, 1.11095, 0.83 ) }
    dend_54 { pt3dadd( -3.04098, -23.8953, 0.474671, 0.83 ) }
    dend_54 { pt3dadd( -0.979057, -24.9625, -0.0399448, 0.83 ) }
    dend_54 { pt3dadd( 2.07423, -26.5428, -0.801986, 0.83 ) }
    dend_54 { pt3dadd( 3.92801, -27.5023, -1.26465, 1.11 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 38/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -5.59037, -22.5758, 1.11095, 2.22 ) }
    dend_29 { pt3dadd( -5.97742, -24.626, -0.909642, 2.22 ) }
    // Section: dend_27, id: dend_27, parent: dend_19 (entry count 40/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 9.23446, 6.60049, -4.19015, 0.55 ) }
    dend_27 { pt3dadd( 10.8182, 8.13863, -4.49236, 0.55 ) }
    dend_27 { pt3dadd( 12.2662, 9.5859, -4.73648, 1.11 ) }
    dend_27 { pt3dadd( 13.8639, 11.2398, -4.9733, 0.55 ) }
    dend_27 { pt3dadd( 14.8396, 12.3288, -5.11026, 0.55 ) }
    dend_27 { pt3dadd( 16.436, 14.2093, -5.47068, 0.83 ) }
    dend_27 { pt3dadd( 17.6185, 15.7096, -5.87966, 0.55 ) }
    dend_27 { pt3dadd( 18.3759, 16.8276, -6.24402, 0.55 ) }
    dend_27 { pt3dadd( 19.4907, 18.6843, -6.93471, 1.11 ) }
    dend_27 { pt3dadd( 20.4388, 20.5071, -7.71418, 1.11 ) }
    dend_27 { pt3dadd( 21.539, 22.8998, -8.95844, 0.55 ) }
    dend_27 { pt3dadd( 22.4614, 25.3314, -10.3704, 0.83 ) }
    dend_27 { pt3dadd( 22.9865, 26.8974, -11.3749, 0.55 ) }
    dend_27 { pt3dadd( 23.1687, 27.5162, -11.789, 0.55 ) }
    dend_27 { pt3dadd( 23.6506, 29.3787, -13.0755, 1.11 ) }
    dend_27 { pt3dadd( 24.1022, 31.3011, -14.3623, 0.28 ) }
    dend_27 { pt3dadd( 24.2937, 32.1564, -14.8477, 0.55 ) }
    dend_27 { pt3dadd( 24.7214, 34.0889, -15.9371, 0.28 ) }
    dend_27 { pt3dadd( 24.9378, 35.1066, -16.5163, 0.83 ) }
    dend_27 { pt3dadd( 25.3403, 36.9801, -17.5939, 0.28 ) }
    dend_27 { pt3dadd( 25.498, 37.8358, -18.0655, 0.83 ) }
    dend_27 { pt3dadd( 25.7724, 39.8049, -19.136, 0.83 ) }
    dend_27 { pt3dadd( 26.1645, 42.6321, -20.8316, 0.28 ) }
    dend_27 { pt3dadd( 26.2675, 43.4624, -21.3778, 0.55 ) }
    dend_27 { pt3dadd( 26.4237, 44.6779, -22.2307, 0.28 ) }
    dend_27 { pt3dadd( 26.5745, 45.8109, -23.0309, 1.11 ) }
    dend_27 { pt3dadd( 27.0032, 48.9668, -25.2686, 0.28 ) }
    dend_27 { pt3dadd( 27.2418, 50.6699, -26.4645, 0.83 ) }
    dend_27 { pt3dadd( 27.5321, 52.5945, -27.6987, 0.28 ) }
    dend_27 { pt3dadd( 27.6904, 53.5019, -28.2395, 0.55 ) }
    dend_27 { pt3dadd( 28.0333, 55.136, -29.205, 0.28 ) }
    dend_27 { pt3dadd( 28.1965, 55.7881, -29.5568, 0.55 ) }
    dend_27 { pt3dadd( 28.4464, 56.7945, -30.0198, 0.28 ) }
    dend_27 { pt3dadd( 28.6697, 57.7459, -30.4727, 0.83 ) }
    dend_27 { pt3dadd( 29.0144, 59.3445, -31.2209, 0.83 ) }
    dend_27 { pt3dadd( 29.7534, 63.2957, -33.1994, 0.28 ) }
    dend_27 { pt3dadd( 30.0248, 65.0543, -34.0487, 0.55 ) }
    dend_27 { pt3dadd( 30.2311, 66.8416, -34.885, 0.28 ) }
    dend_27 { pt3dadd( 30.5288, 70.1183, -36.3547, 0.55 ) }
    dend_27 { pt3dadd( 30.7405, 72.7833, -37.4504, 0.28 ) }
    dend_27 { pt3dadd( 30.8052, 74.1933, -37.9627, 0.55 ) }
    dend_27 { pt3dadd( 30.915, 76.3052, -38.6219, 0.28 ) }
    dend_27 { pt3dadd( 31.0576, 78.1501, -39.255, 0.55 ) }
    dend_27 { pt3dadd( 31.1553, 79.1134, -39.5261, 0.55 ) }
    dend_27 { pt3dadd( 31.5279, 82.1241, -40.0908, 0.28 ) }
    dend_27 { pt3dadd( 31.712, 83.2915, -40.298, 0.55 ) }
    dend_27 { pt3dadd( 32.3231, 86.5478, -40.8039, 0.28 ) }
    dend_27 { pt3dadd( 32.5476, 87.6496, -40.9677, 0.55 ) }
    dend_27 { pt3dadd( 33.0905, 90.1757, -41.2603, 0.28 ) }
    dend_27 { pt3dadd( 33.5555, 92.4548, -41.5489, 0.55 ) }
    dend_27 { pt3dadd( 34.1628, 95.5504, -41.9499, 0.28 ) }
    dend_27 { pt3dadd( 34.3188, 96.3849, -42.0535, 0.55 ) }
    dend_27 { pt3dadd( 34.7121, 98.4707, -42.3543, 0.28 ) }
    dend_27 { pt3dadd( 35.1427, 100.64, -42.7935, 0.55 ) }
    dend_27 { pt3dadd( 35.6796, 103.184, -43.4847, 0.28 ) }
    dend_27 { pt3dadd( 36.0535, 104.979, -44.0221, 0.55 ) }
    dend_27 { pt3dadd( 36.5283, 107.205, -44.7499, 0.28 ) }
    dend_27 { pt3dadd( 37.1519, 110.129, -45.7705, 0.55 ) }
    dend_27 { pt3dadd( 37.6979, 112.609, -46.7048, 0.28 ) }
    dend_27 { pt3dadd( 37.9512, 113.727, -47.1382, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_27 { pt3dadd( 38.5566, 116.325, -48.1248, 0.55 ) }
    dend_27 { pt3dadd( 39.0364, 118.32, -48.8355, 0.28 ) }
    dend_27 { pt3dadd( 39.2972, 119.428, -49.1863, 0.55 ) }
    dend_27 { pt3dadd( 39.6129, 120.896, -49.5309, 0.28 ) }
    dend_27 { pt3dadd( 39.8622, 122.033, -49.7283, 0.55 ) }
    dend_27 { pt3dadd( 40.0895, 123.072, -49.8387, 0.55 ) }
    dend_27 { pt3dadd( 40.4866, 124.98, -49.8735, 0.28 ) }
    dend_27 { pt3dadd( 40.6172, 125.715, -49.8577, 0.55 ) }
    dend_27 { pt3dadd( 41.0051, 127.879, -49.8382, 0.28 ) }
    dend_27 { pt3dadd( 41.2191, 129.051, -49.8204, 0.83 ) }
    dend_27 { pt3dadd( 41.5043, 130.547, -49.9057, 0.28 ) }
    dend_27 { pt3dadd( 41.7545, 131.48, -50.0697, 0.55 ) }
    dend_27 { pt3dadd( 42.2372, 132.88, -50.4869, 0.28 ) }
    dend_27 { pt3dadd( 42.6739, 133.804, -50.7859, 0.55 ) }
    dend_27 { pt3dadd( 43.848, 135.735, -51.4237, 0.28 ) }
    dend_27 { pt3dadd( 44.8732, 137.237, -51.9473, 0.55 ) }
    dend_27 { pt3dadd( 46.6111, 139.512, -52.7468, 0.28 ) }
    dend_27 { pt3dadd( 47.5354, 140.619, -53.1316, 0.55 ) }
    dend_27 { pt3dadd( 49.4876, 142.717, -53.8436, 0.28 ) }
    dend_27 { pt3dadd( 50.9161, 144.135, -54.4333, 0.28 ) }
    dend_27 { pt3dadd( 51.3081, 144.478, -54.6137, 0.28 ) }
    dend_27 { pt3dadd( 53.2261, 145.997, -55.5003, 0.28 ) }
    dend_27 { pt3dadd( 54.6831, 147.119, -56.194, 0.83 ) }
    dend_27 { pt3dadd( 58.3569, 149.885, -58.104, 0.28 ) }
    dend_27 { pt3dadd( 60.1112, 151.154, -59.1476, 0.55 ) }
    dend_27 { pt3dadd( 62.7971, 152.993, -60.8262, 0.28 ) }
    dend_27 { pt3dadd( 63.6009, 153.521, -61.334, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 27/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 9.23446, 6.60049, -4.19015, 0.55 ) }
    dend_20 { pt3dadd( 10.4238, 9.69073, -4.38968, 0.55 ) }
    dend_20 { pt3dadd( 11.7169, 13.0258, -4.44403, 0.55 ) }
    dend_20 { pt3dadd( 12.4279, 14.9447, -4.36436, 0.55 ) }
    dend_20 { pt3dadd( 13.6186, 18.402, -4.3267, 0.55 ) }
    dend_20 { pt3dadd( 14.3382, 20.6003, -4.2943, 0.28 ) }
    dend_20 { pt3dadd( 15.345, 23.4888, -4.24561, 1.11 ) }
    dend_20 { pt3dadd( 16.3418, 26.5209, -4.22747, 0.55 ) }
    dend_20 { pt3dadd( 16.9306, 28.5453, -4.23824, 0.55 ) }
    dend_20 { pt3dadd( 17.9216, 32.4084, -4.12979, 0.83 ) }
    dend_20 { pt3dadd( 18.617, 35.196, -4.0223, 0.55 ) }
    dend_20 { pt3dadd( 19.527, 39.1177, -3.78834, 0.55 ) }
    dend_20 { pt3dadd( 20.3336, 42.8657, -3.63501, 0.55 ) }
    dend_20 { pt3dadd( 21.035, 46.3381, -3.61175, 0.55 ) }
    dend_20 { pt3dadd( 21.864, 50.4544, -3.55539, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 42/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 4.79636, 9.24064, -3.53869, 0.83 ) }
    dend_12 { pt3dadd( 6.81639, 10.8592, -3.35605, 0.83 ) }
    dend_12 { pt3dadd( 9.31749, 12.8634, -3.12993, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 45/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 4.79636, 9.24064, -3.53869, 1.11 ) }
    dend_1 { pt3dadd( 3.74728, 13.2487, -2.97131, 1.11 ) }
    dend_1 { pt3dadd( 3.13024, 15.6061, -2.63759, 0.83 ) }
    dend_1 { pt3dadd( 1.87269, 20.4107, -1.95746, 1.11 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 49/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 21.0451, 34.5022, -0.00751248, 0.28 ) }
    axon_1 { pt3dadd( 28.8079, 47.3373, -0.00751248, 0.28 ) }
    axon_1 { pt3dadd( 36.5706, 60.1724, -0.00751248, 0.28 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 52/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 3.92801, -27.5023, -1.26465, 0.55 ) }
    dend_56 { pt3dadd( 5.05223, -28.2596, -0.934015, 0.55 ) }
    dend_56 { pt3dadd( 6.1657, -29.0097, -0.606536, 0.55 ) }
    dend_56 { pt3dadd( 7.08799, -29.6309, -0.335286, 0.28 ) }
    dend_56 { pt3dadd( 7.99911, -30.2447, -0.0673205, 0.55 ) }
    dend_56 { pt3dadd( 9.15013, -31.02, 0.271201, 0.55 ) }
    dend_56 { pt3dadd( 10.0109, -31.5998, 0.524338, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 59/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 3.92801, -27.5023, -1.26465, 0.55 ) }
    dend_55 { pt3dadd( 5.6406, -28.331, -1.85798, 0.55 ) }
    dend_55 { pt3dadd( 7.81719, -29.32, -2.73098, 0.55 ) }
    dend_55 { pt3dadd( 9.32731, -29.9495, -3.34544, 0.83 ) }
    dend_55 { pt3dadd( 11.482, -30.8862, -4.31779, 0.55 ) }
    dend_55 { pt3dadd( 13.467, -31.7462, -5.24611, 0.55 ) }
    dend_55 { pt3dadd( 15.9304, -32.7878, -6.38464, 0.83 ) }
    dend_55 { pt3dadd( 17.6494, -33.4674, -7.25252, 0.28 ) }
    dend_55 { pt3dadd( 19.3378, -34.0721, -8.13838, 0.55 ) }
    dend_55 { pt3dadd( 21.2862, -34.8229, -9.34975, 0.28 ) }
    dend_55 { pt3dadd( 22.3863, -35.2994, -10.1438, 0.55 ) }
    dend_55 { pt3dadd( 24.0341, -36.1021, -11.5347, 0.55 ) }
    dend_55 { pt3dadd( 25.4546, -36.8692, -12.8233, 0.55 ) }
    dend_55 { pt3dadd( 26.943, -37.7048, -14.2225, 0.55 ) }
    dend_55 { pt3dadd( 29.5874, -39.1679, -16.8466, 0.55 ) }
    dend_55 { pt3dadd( 30.7809, -39.8401, -18.0697, 0.28 ) }
    dend_55 { pt3dadd( 31.5736, -40.3394, -18.9058, 0.55 ) }
    dend_55 { pt3dadd( 32.6977, -41.0993, -20.1111, 0.55 ) }
    dend_55 { pt3dadd( 34.1142, -42.1115, -21.5823, 0.55 ) }
    dend_55 { pt3dadd( 35.8771, -43.3876, -23.2964, 0.55 ) }
    dend_55 { pt3dadd( 37.6902, -44.6687, -24.9203, 0.55 ) }
    dend_55 { pt3dadd( 39.0105, -45.6241, -26.0872, 0.55 ) }
    dend_55 { pt3dadd( 40.5507, -46.7533, -27.4589, 0.55 ) }
    dend_55 { pt3dadd( 41.8258, -47.7154, -28.6464, 0.55 ) }
    dend_55 { pt3dadd( 43.0111, -48.6691, -29.7891, 0.55 ) }
    dend_55 { pt3dadd( 44.7654, -50.0546, -31.4464, 0.55 ) }
    dend_55 { pt3dadd( 46.0604, -51.0041, -32.6605, 0.55 ) }
    dend_55 { pt3dadd( 47.4925, -52.0245, -34.0674, 0.83 ) }
    dend_55 { pt3dadd( 48.9448, -53.0723, -35.522, 0.83 ) }
    dend_55 { pt3dadd( 50.1969, -53.9884, -36.8119, 0.55 ) }
    dend_55 { pt3dadd( 51.5404, -55.0229, -38.355, 0.55 ) }
    dend_55 { pt3dadd( 52.4106, -55.702, -39.3835, 0.83 ) }
    dend_55 { pt3dadd( 53.9373, -56.8009, -41.1767, 0.28 ) }
    dend_55 { pt3dadd( 55.0258, -57.5005, -42.4083, 0.55 ) }
    dend_55 { pt3dadd( 57.5076, -58.8947, -44.9896, 0.55 ) }
    dend_55 { pt3dadd( 59.8911, -60.1052, -47.4046, 0.55 ) }
    dend_55 { pt3dadd( 60.9709, -60.6226, -48.473, 0.28 ) }
    dend_55 { pt3dadd( 62.445, -61.2345, -49.7953, 0.55 ) }
    dend_55 { pt3dadd( 64.894, -62.1447, -51.8066, 0.28 ) }
    dend_55 { pt3dadd( 66.3727, -62.7069, -52.9029, 0.28 ) }
    dend_55 { pt3dadd( 67.6249, -63.2095, -53.816, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_55 { pt3dadd( 69.1473, -63.9346, -54.9608, 0.55 ) }
    dend_55 { pt3dadd( 70.3585, -64.6525, -55.9769, 0.55 ) }
    dend_55 { pt3dadd( 72.0552, -65.9809, -57.6142, 0.55 ) }
    dend_55 { pt3dadd( 73.6575, -67.5022, -59.4119, 0.55 ) }
    dend_55 { pt3dadd( 75.3793, -69.2729, -61.6095, 0.55 ) }
    dend_55 { pt3dadd( 76.4071, -70.3769, -62.9174, 0.28 ) }
    dend_55 { pt3dadd( 77.1644, -71.2337, -63.9017, 0.55 ) }
    dend_55 { pt3dadd( 78.6516, -73.0234, -65.9052, 0.55 ) }
    dend_55 { pt3dadd( 80.0945, -74.7456, -67.7521, 0.55 ) }
    dend_55 { pt3dadd( 81.3967, -76.252, -69.3676, 0.83 ) }
    dend_55 { pt3dadd( 82.5527, -77.5405, -70.5783, 0.83 ) }
    dend_55 { pt3dadd( 83.1397, -78.1359, -71.1604, 0.83 ) }
    dend_55 { pt3dadd( 84.5008, -79.3798, -72.4142, 0.28 ) }
    dend_55 { pt3dadd( 85.5482, -80.1599, -73.2054, 0.83 ) }
    dend_55 { pt3dadd( 87.7716, -81.5205, -74.6145, 0.28 ) }
    dend_55 { pt3dadd( 89.2568, -82.2912, -75.5377, 0.83 ) }
    dend_55 { pt3dadd( 91.4569, -83.2383, -76.7242, 0.55 ) }
    dend_55 { pt3dadd( 93.0489, -83.7745, -77.4189, 0.55 ) }
    dend_55 { pt3dadd( 96.7626, -84.7702, -78.6091, 0.55 ) }
    dend_55 { pt3dadd( 98.7584, -85.215, -78.9673, 0.55 ) }
    dend_55 { pt3dadd( 100.894, -85.6088, -79.0511, 0.55 ) }
    dend_55 { pt3dadd( 104.435, -86.1944, -78.6266, 0.55 ) }
    dend_55 { pt3dadd( 105.8, -86.4576, -78.2528, 0.55 ) }
    dend_55 { pt3dadd( 107.456, -86.8219, -77.6396, 0.83 ) }
    dend_55 { pt3dadd( 110.553, -87.686, -76.244, 0.28 ) }
    dend_55 { pt3dadd( 111.551, -88.0215, -75.7776, 0.55 ) }
    dend_55 { pt3dadd( 114.569, -89.113, -74.3874, 0.28 ) }
    dend_55 { pt3dadd( 117.078, -90.2032, -73.4559, 0.55 ) }
    dend_55 { pt3dadd( 118.062, -90.6987, -73.1683, 0.55 ) }
    dend_55 { pt3dadd( 120.047, -91.8002, -72.8142, 0.28 ) }
    dend_55 { pt3dadd( 121.124, -92.4753, -72.805, 0.28 ) }
    dend_55 { pt3dadd( 122.088, -93.1151, -72.9051, 0.55 ) }
    dend_55 { pt3dadd( 123.949, -94.3512, -73.372, 0.28 ) }
    dend_55 { pt3dadd( 125.0, -94.9963, -73.709, 0.28 ) }
    dend_55 { pt3dadd( 125.682, -95.3748, -73.9401, 0.55 ) }
    dend_55 { pt3dadd( 127.636, -96.2587, -74.6088, 0.28 ) }
    dend_55 { pt3dadd( 129.498, -97.0202, -75.2107, 0.55 ) }
    dend_55 { pt3dadd( 131.142, -97.5516, -75.7045, 0.28 ) }
    dend_55 { pt3dadd( 132.688, -97.9702, -76.1483, 0.55 ) }
    dend_55 { pt3dadd( 135.132, -98.5628, -76.833, 0.28 ) }
    dend_55 { pt3dadd( 137.108, -98.9811, -77.366, 0.28 ) }
    dend_55 { pt3dadd( 139.645, -99.4315, -77.9838, 0.55 ) }
    dend_55 { pt3dadd( 141.805, -99.779, -78.4593, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_29 (entry count 43/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -5.97742, -24.626, -0.909642, 0.55 ) }
    dend_49 { pt3dadd( -7.65022, -26.5209, -2.21887, 0.55 ) }
    dend_49 { pt3dadd( -8.55696, -27.4381, -2.84478, 0.55 ) }
    dend_49 { pt3dadd( -10.056, -28.9683, -3.79377, 0.83 ) }
    dend_49 { pt3dadd( -12.6634, -31.8661, -5.48868, 0.55 ) }
    dend_49 { pt3dadd( -14.4253, -33.9509, -6.60042, 0.55 ) }
    dend_49 { pt3dadd( -16.2733, -36.1943, -7.74124, 0.83 ) }
    dend_49 { pt3dadd( -17.9312, -38.3233, -8.74558, 0.55 ) }
    dend_49 { pt3dadd( -19.1743, -39.8885, -9.38816, 1.11 ) }
    dend_49 { pt3dadd( -20.5548, -41.6324, -9.92597, 0.28 ) }
    dend_49 { pt3dadd( -22.0501, -43.6775, -10.287, 0.55 ) }
    dend_49 { pt3dadd( -22.7357, -44.7449, -10.4671, 0.28 ) }
    dend_49 { pt3dadd( -24.0794, -46.7689, -10.7561, 0.55 ) }
    dend_49 { pt3dadd( -25.0557, -48.0615, -10.8756, 0.28 ) }
    dend_49 { pt3dadd( -27.2856, -50.5691, -11.0366, 0.83 ) }
    dend_49 { pt3dadd( -29.8205, -52.993, -11.0776, 0.55 ) }
    dend_49 { pt3dadd( -32.4868, -55.4389, -11.0988, 0.55 ) }
    dend_49 { pt3dadd( -34.9378, -57.6001, -11.0943, 0.55 ) }
    dend_49 { pt3dadd( -37.6553, -59.8226, -11.0889, 0.55 ) }
    dend_49 { pt3dadd( -39.9705, -61.5775, -11.09, 0.55 ) }
    dend_49 { pt3dadd( -42.6302, -63.2778, -10.988, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 64/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -5.97742, -24.626, -0.909642, 1.66 ) }
    dend_30 { pt3dadd( -4.94343, -26.851, -0.708336, 1.66 ) }
    dend_30 { pt3dadd( -3.42492, -30.1187, -0.412701, 0.83 ) }
    dend_30 { pt3dadd( -1.51983, -34.2181, -0.0418041, 0.83 ) }
    dend_30 { pt3dadd( 0.194155, -37.9063, 0.291887, 0.83 ) }
    dend_30 { pt3dadd( 1.51184, -40.7418, 0.548424, 1.11 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 70/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 21.864, 50.4544, -3.55539, 0.55 ) }
    dend_24 { pt3dadd( 22.7459, 52.4834, -4.60717, 0.55 ) }
    dend_24 { pt3dadd( 23.9465, 54.9391, -5.95853, 0.55 ) }
    dend_24 { pt3dadd( 25.3027, 57.668, -7.33288, 0.28 ) }
    dend_24 { pt3dadd( 26.4967, 60.0729, -8.44367, 0.83 ) }
    dend_24 { pt3dadd( 27.3049, 61.7344, -9.16799, 0.55 ) }
    dend_24 { pt3dadd( 28.3806, 63.9303, -10.0753, 0.55 ) }
    dend_24 { pt3dadd( 29.7264, 66.5129, -11.0871, 0.55 ) }
    dend_24 { pt3dadd( 31.3378, 69.3549, -11.9018, 0.83 ) }
    dend_24 { pt3dadd( 32.4861, 71.3153, -12.1969, 0.28 ) }
    dend_24 { pt3dadd( 32.796, 71.8519, -12.2255, 0.28 ) }
    dend_24 { pt3dadd( 33.9143, 73.825, -12.1941, 0.55 ) }
    dend_24 { pt3dadd( 34.9248, 75.6476, -12.0854, 0.55 ) }
    dend_24 { pt3dadd( 36.9723, 79.3893, -11.8673, 0.55 ) }
    dend_24 { pt3dadd( 37.9733, 81.2381, -11.8133, 0.55 ) }
    dend_24 { pt3dadd( 40.0579, 85.1614, -11.8202, 0.55 ) }
    dend_24 { pt3dadd( 41.3142, 87.5817, -11.8899, 0.55 ) }
    dend_24 { pt3dadd( 42.7964, 90.5434, -12.0818, 0.55 ) }
    dend_24 { pt3dadd( 44.4114, 93.8673, -12.5899, 0.55 ) }
    dend_24 { pt3dadd( 45.1899, 95.3843, -12.9856, 0.55 ) }
    dend_24 { pt3dadd( 45.8481, 96.5177, -13.4242, 0.28 ) }
    dend_24 { pt3dadd( 46.3231, 97.2034, -13.7795, 0.55 ) }
    dend_24 { pt3dadd( 47.1905, 98.2397, -14.4031, 0.28 ) }
    dend_24 { pt3dadd( 48.9085, 100.057, -15.5667, 0.55 ) }
    dend_24 { pt3dadd( 51.7862, 102.863, -17.2426, 0.55 ) }
    dend_24 { pt3dadd( 54.0619, 105.098, -18.6363, 0.55 ) }
    dend_24 { pt3dadd( 55.3711, 106.361, -19.4326, 0.55 ) }
    dend_24 { pt3dadd( 58.3818, 109.202, -21.3586, 0.55 ) }
    dend_24 { pt3dadd( 59.589, 110.393, -22.1393, 0.55 ) }
    dend_24 { pt3dadd( 60.6089, 111.493, -22.7948, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_24 { pt3dadd( 61.9356, 113.19, -23.7617, 0.55 ) }
    dend_24 { pt3dadd( 63.0456, 114.86, -24.563, 0.55 ) }
    dend_24 { pt3dadd( 64.1378, 116.99, -25.5001, 0.55 ) }
    dend_24 { pt3dadd( 65.0732, 119.424, -26.3982, 0.55 ) }
    dend_24 { pt3dadd( 66.0311, 122.311, -27.4412, 0.55 ) }
    dend_24 { pt3dadd( 66.5217, 123.897, -27.9914, 0.55 ) }
    dend_24 { pt3dadd( 66.9815, 125.417, -28.4465, 0.55 ) }
    dend_24 { pt3dadd( 67.5838, 127.275, -29.0607, 0.55 ) }
    dend_24 { pt3dadd( 68.7027, 130.07, -30.0709, 0.55 ) }
    dend_24 { pt3dadd( 70.1638, 132.747, -31.3289, 0.55 ) }
    dend_24 { pt3dadd( 70.9805, 133.892, -32.0507, 0.55 ) }
    dend_24 { pt3dadd( 71.776, 134.828, -32.7449, 0.55 ) }
    dend_24 { pt3dadd( 74.0917, 137.224, -34.7861, 0.55 ) }
    dend_24 { pt3dadd( 75.0246, 138.083, -35.5689, 0.55 ) }
    dend_24 { pt3dadd( 76.5944, 139.448, -36.9128, 0.55 ) }
    dend_24 { pt3dadd( 78.4232, 141.009, -38.4041, 0.55 ) }
    dend_24 { pt3dadd( 79.4996, 141.957, -39.3026, 0.28 ) }
    dend_24 { pt3dadd( 80.2749, 142.653, -40.0084, 0.28 ) }
    dend_24 { pt3dadd( 81.1039, 143.428, -40.7991, 0.55 ) }
    dend_24 { pt3dadd( 83.2706, 145.405, -42.8821, 0.55 ) }
    dend_24 { pt3dadd( 85.5074, 147.412, -45.0824, 0.55 ) }
    dend_24 { pt3dadd( 86.5744, 148.286, -46.1729, 0.83 ) }
    dend_24 { pt3dadd( 89.2521, 150.627, -49.7451, 0.55 ) }
    dend_24 { pt3dadd( 90.6878, 151.9, -52.0914, 0.55 ) }
    dend_24 { pt3dadd( 91.718, 152.873, -54.0014, 0.55 ) }
    dend_24 { pt3dadd( 93.2607, 154.407, -57.2914, 0.55 ) }
    dend_24 { pt3dadd( 95.2843, 156.497, -61.8896, 0.55 ) }
    dend_24 { pt3dadd( 98.5033, 159.767, -69.6496, 0.55 ) }
    dend_24 { pt3dadd( 100.858, 162.203, -75.6401, 0.55 ) }
    dend_24 { pt3dadd( 101.718, 163.102, -77.9713, 0.55 ) }
    dend_24 { pt3dadd( 103.506, 165.002, -83.1272, 0.55 ) }
    dend_24 { pt3dadd( 104.488, 166.021, -86.009, 0.55 ) }
    dend_24 { pt3dadd( 106.091, 167.752, -90.6351, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 33/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 21.864, 50.4544, -3.55539, 0.28 ) }
    dend_21 { pt3dadd( 21.7203, 53.1236, -2.72671, 0.28 ) }
    dend_21 { pt3dadd( 21.6703, 54.5182, -2.2812, 0.83 ) }
    dend_21 { pt3dadd( 21.6482, 56.7097, -1.55438, 0.55 ) }
    dend_21 { pt3dadd( 21.6478, 58.88, -0.837636, 0.55 ) }
    dend_21 { pt3dadd( 21.6751, 61.7653, 0.0770813, 0.28 ) }
    dend_21 { pt3dadd( 21.7105, 63.6738, 0.652019, 0.28 ) }
    dend_21 { pt3dadd( 21.7521, 64.4065, 0.852, 0.55 ) }
    dend_21 { pt3dadd( 21.8516, 65.9166, 1.26655, 0.28 ) }
    dend_21 { pt3dadd( 21.9323, 66.7825, 1.48351, 0.55 ) }
    dend_21 { pt3dadd( 22.066, 67.8613, 1.73049, 0.28 ) }
    dend_21 { pt3dadd( 22.2586, 68.9568, 1.84642, 0.55 ) }
    dend_21 { pt3dadd( 22.53, 70.549, 1.90888, 0.28 ) }
    dend_21 { pt3dadd( 22.53, 70.549, 1.90888, 0.55 ) }
    dend_21 { pt3dadd( 23.0352, 72.4813, 1.83783, 0.55 ) }
    dend_21 { pt3dadd( 23.6374, 74.2527, 1.63481, 0.83 ) }
    dend_21 { pt3dadd( 24.5752, 76.4427, 1.22211, 0.55 ) }
    dend_21 { pt3dadd( 25.1248, 77.5454, 0.958834, 0.55 ) }
    dend_21 { pt3dadd( 26.1978, 79.5067, 0.503696, 0.55 ) }
    dend_21 { pt3dadd( 27.2611, 81.3472, 0.123935, 0.28 ) }
    dend_21 { pt3dadd( 28.9951, 84.2425, -0.378429, 0.83 ) }
    dend_21 { pt3dadd( 30.0946, 86.0862, -0.6163, 0.28 ) }
    dend_21 { pt3dadd( 30.8846, 87.3945, -0.646343, 0.55 ) }
    dend_21 { pt3dadd( 32.1794, 89.5786, -0.605719, 0.28 ) }
    dend_21 { pt3dadd( 32.7442, 90.5974, -0.518255, 0.55 ) }
    dend_21 { pt3dadd( 33.5997, 92.3504, -0.176253, 0.28 ) }
    dend_21 { pt3dadd( 33.9678, 93.2758, 0.117075, 0.55 ) }
    dend_21 { pt3dadd( 34.7232, 95.3424, 0.816739, 0.28 ) }
    dend_21 { pt3dadd( 35.3457, 96.9444, 1.38483, 0.55 ) }
    dend_21 { pt3dadd( 36.0033, 98.5568, 1.94061, 0.28 ) }
    dend_21 { pt3dadd( 36.6785, 100.274, 2.50111, 0.55 ) }
    dend_21 { pt3dadd( 37.4166, 102.104, 3.05426, 0.28 ) }
    dend_21 { pt3dadd( 38.4762, 104.786, 3.74503, 0.55 ) }
    dend_21 { pt3dadd( 39.1811, 106.416, 4.11501, 0.28 ) }
    dend_21 { pt3dadd( 39.5209, 107.157, 4.32256, 0.55 ) }
    dend_21 { pt3dadd( 40.2147, 108.565, 4.74159, 0.28 ) }
    dend_21 { pt3dadd( 40.7548, 109.58, 5.04824, 0.55 ) }
    dend_21 { pt3dadd( 41.5533, 111.059, 5.489, 0.55 ) }
    dend_21 { pt3dadd( 42.3232, 112.508, 6.00139, 0.55 ) }
    dend_21 { pt3dadd( 43.6444, 114.979, 7.01262, 0.55 ) }
    dend_21 { pt3dadd( 44.7185, 117.058, 7.96157, 0.55 ) }
    dend_21 { pt3dadd( 45.8079, 119.208, 8.95782, 0.55 ) }
    dend_21 { pt3dadd( 47.1257, 121.989, 10.198, 0.55 ) }
    dend_21 { pt3dadd( 48.4598, 124.949, 11.4538, 0.55 ) }
    dend_21 { pt3dadd( 49.1886, 126.651, 12.1037, 0.28 ) }
    dend_21 { pt3dadd( 49.9088, 128.242, 12.6628, 0.55 ) }
    dend_21 { pt3dadd( 50.6504, 129.868, 13.1813, 0.55 ) }
    dend_21 { pt3dadd( 51.1245, 130.886, 13.4646, 0.83 ) }
    dend_21 { pt3dadd( 52.2377, 133.358, 14.007, 0.28 ) }
    dend_21 { pt3dadd( 53.258, 135.657, 13.6551, 0.55 ) }
    dend_21 { pt3dadd( 54.2432, 137.844, 12.6721, 0.28 ) }
    dend_21 { pt3dadd( 54.5727, 138.593, 12.1764, 0.55 ) }
    dend_21 { pt3dadd( 55.5868, 141.03, 10.3889, 0.55 ) }
    dend_21 { pt3dadd( 56.073, 142.306, 9.35442, 0.55 ) }
    dend_21 { pt3dadd( 59.1991, 151.178, 1.74536, 0.28 ) }
    dend_21 { pt3dadd( 59.7817, 152.949, 0.253851, 0.28 ) }
    dend_21 { pt3dadd( 60.2905, 154.598, -1.06199, 0.55 ) }
    dend_21 { pt3dadd( 60.9556, 156.737, -2.7578, 0.55 ) }
    dend_21 { pt3dadd( 61.2576, 157.71, -3.50281, 0.55 ) }
    dend_21 { pt3dadd( 61.9404, 159.91, -4.49127, 0.55 ) }
    dend_21 { pt3dadd( 62.681, 162.458, -4.06732, 0.55 ) }
    dend_21 { pt3dadd( 62.9909, 163.573, -3.92293, 0.55 ) }
    dend_21 { pt3dadd( 68.9024, 171.782, -2.2264, 0.55 ) }
    dend_21 { pt3dadd( 75.8249, 179.41, -1.98184, 0.55 ) }
    dend_21 { pt3dadd( 81.5659, 187.757, -0.460389, 0.55 ) }
    dend_21 { pt3dadd( 87.3362, 196.123, 0.817868, 0.55 ) }
    dend_21 { pt3dadd( 91.5699, 205.1, 3.11976, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_21 { pt3dadd( 96.8905, 213.106, 6.75252, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 1/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 9.31749, 12.8634, -3.12993, 0.55 ) }
    dend_16 { pt3dadd( 11.6296, 14.2703, -3.19093, 0.55 ) }
    dend_16 { pt3dadd( 13.8016, 15.6318, -3.11754, 0.83 ) }
    dend_16 { pt3dadd( 16.0392, 17.077, -2.97187, 0.28 ) }
    dend_16 { pt3dadd( 17.6433, 18.1239, -2.76578, 0.55 ) }
    dend_16 { pt3dadd( 19.5091, 19.3346, -2.46574, 0.28 ) }
    dend_16 { pt3dadd( 20.9167, 20.2073, -2.2534, 0.83 ) }
    dend_16 { pt3dadd( 23.0476, 21.4868, -1.86086, 0.55 ) }
    dend_16 { pt3dadd( 24.7798, 22.4926, -1.477, 0.83 ) }
    dend_16 { pt3dadd( 27.0001, 23.6992, -0.942772, 0.28 ) }
    dend_16 { pt3dadd( 28.4713, 24.4261, -0.616416, 0.55 ) }
    dend_16 { pt3dadd( 31.0989, 25.6324, -0.0879507, 0.28 ) }
    dend_16 { pt3dadd( 33.2585, 26.5826, 0.265205, 0.83 ) }
    dend_16 { pt3dadd( 35.0182, 27.3284, 0.467352, 0.28 ) }
    dend_16 { pt3dadd( 37.1711, 28.2002, 0.638555, 0.55 ) }
    dend_16 { pt3dadd( 39.7147, 29.2043, 0.747876, 0.28 ) }
    dend_16 { pt3dadd( 40.8312, 29.647, 0.774118, 0.83 ) }
    dend_16 { pt3dadd( 43.3251, 30.6636, 0.81423, 0.28 ) }
    dend_16 { pt3dadd( 44.1038, 30.9744, 0.797568, 0.55 ) }
    dend_16 { pt3dadd( 46.5075, 31.9286, 0.646771, 0.83 ) }
    dend_16 { pt3dadd( 48.573, 32.7273, 0.483242, 0.28 ) }
    dend_16 { pt3dadd( 50.1072, 33.3155, 0.326887, 0.83 ) }
    dend_16 { pt3dadd( 51.4964, 33.8756, 0.164954, 0.28 ) }
    dend_16 { pt3dadd( 52.0435, 34.1034, 0.103338, 0.55 ) }
    dend_16 { pt3dadd( 53.7419, 34.8622, -0.0780254, 0.28 ) }
    dend_16 { pt3dadd( 55.5694, 35.7535, -0.325683, 0.83 ) }
    dend_16 { pt3dadd( 57.4986, 36.7729, -0.576706, 0.28 ) }
    dend_16 { pt3dadd( 58.2804, 37.2218, -0.652513, 0.55 ) }
    dend_16 { pt3dadd( 60.2473, 38.4119, -0.806996, 0.28 ) }
    dend_16 { pt3dadd( 61.633, 39.346, -0.874184, 0.55 ) }
    dend_16 { pt3dadd( 64.3745, 41.3319, -0.96382, 0.28 ) }
    dend_16 { pt3dadd( 65.2778, 42.0518, -0.966041, 0.83 ) }
    dend_16 { pt3dadd( 67.2852, 43.7361, -0.896521, 0.28 ) }
    dend_16 { pt3dadd( 68.5297, 44.8402, -0.829227, 0.83 ) }
    dend_16 { pt3dadd( 71.499, 47.6844, -0.607443, 0.28 ) }
    dend_16 { pt3dadd( 72.7027, 48.8943, -0.422284, 0.83 ) }
    dend_16 { pt3dadd( 74.8739, 51.1103, 0.0457678, 0.28 ) }
    dend_16 { pt3dadd( 75.5966, 51.8447, 0.228053, 0.55 ) }
    dend_16 { pt3dadd( 76.5856, 52.8538, 0.536011, 0.28 ) }
    dend_16 { pt3dadd( 77.016, 53.2823, 0.712663, 0.55 ) }
    dend_16 { pt3dadd( 79.1609, 55.2987, 1.86601, 0.28 ) }
    dend_16 { pt3dadd( 80.3874, 56.4087, 2.51198, 0.55 ) }
    dend_16 { pt3dadd( 82.0811, 57.8783, 3.30704, 0.28 ) }
    dend_16 { pt3dadd( 82.6772, 58.3713, 3.6035, 0.83 ) }
    dend_16 { pt3dadd( 85.5297, 60.6031, 4.98199, 0.28 ) }
    dend_16 { pt3dadd( 86.8811, 61.635, 5.62355, 0.55 ) }
    dend_16 { pt3dadd( 88.8363, 63.1222, 6.51037, 0.28 ) }
    dend_16 { pt3dadd( 90.2076, 64.1545, 7.12536, 0.83 ) }
    dend_16 { pt3dadd( 93.4899, 66.5546, 8.47878, 0.28 ) }
    dend_16 { pt3dadd( 95.6779, 68.1334, 9.45956, 0.55 ) }
    dend_16 { pt3dadd( 97.2374, 69.2444, 10.1794, 0.28 ) }
    dend_16 { pt3dadd( 98.0248, 69.8021, 10.5752, 0.55 ) }
    dend_16 { pt3dadd( 99.7051, 70.9618, 11.5111, 0.28 ) }
    dend_16 { pt3dadd( 100.497, 71.5015, 11.9448, 0.55 ) }
    dend_16 { pt3dadd( 103.703, 73.6526, 13.4894, 0.28 ) }
    dend_16 { pt3dadd( 104.972, 74.4809, 14.0775, 0.83 ) }
    dend_16 { pt3dadd( 107.938, 76.2917, 15.4788, 0.28 ) }
    dend_16 { pt3dadd( 108.891, 76.8399, 15.9712, 0.28 ) }
    dend_16 { pt3dadd( 109.879, 77.3757, 16.4744, 0.55 ) }
    dend_16 { pt3dadd( 111.321, 78.1473, 17.1955, 0.28 ) }
    dend_16 { pt3dadd( 112.524, 78.7537, 17.7091, 0.55 ) }
    dend_16 { pt3dadd( 115.142, 80.0056, 18.9334, 0.28 ) }
    dend_16 { pt3dadd( 116.891, 80.7963, 19.8377, 0.83 ) }
    dend_16 { pt3dadd( 118.37, 81.4913, 20.7437, 0.28 ) }
    dend_16 { pt3dadd( 119.579, 82.0572, 21.6412, 0.55 ) }
    dend_16 { pt3dadd( 128.49, 87.3223, 22.309, 0.55 ) }
    dend_16 { pt3dadd( 137.937, 91.6861, 21.954, 0.55 ) }
    dend_16 { pt3dadd( 147.133, 96.2373, 23.701, 0.55 ) }
    dend_16 { pt3dadd( 157.159, 98.9206, 25.0889, 0.55 ) }
    dend_16 { pt3dadd( 167.025, 102.342, 25.4793, 0.55 ) }
    dend_16 { pt3dadd( 176.681, 106.028, 24.0179, 0.55 ) }
    dend_16 { pt3dadd( 186.147, 109.789, 21.7527, 0.55 ) }
    dend_16 { pt3dadd( 195.918, 111.463, 18.3272, 0.55 ) }
    dend_16 { pt3dadd( 205.916, 112.46, 15.2904, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 75/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 9.31749, 12.8634, -3.12993, 0.55 ) }
    dend_13 { pt3dadd( 9.37077, 16.5594, -1.61898, 0.55 ) }
    dend_13 { pt3dadd( 9.59301, 21.4554, 0.382033, 0.83 ) }
    dend_13 { pt3dadd( 9.79598, 23.4215, 1.21165, 0.55 ) }
    dend_13 { pt3dadd( 9.98185, 25.4399, 2.12965, 0.83 ) }
    dend_13 { pt3dadd( 10.244, 29.4748, 4.24059, 0.83 ) }
    dend_13 { pt3dadd( 10.3949, 31.567, 5.43866, 0.55 ) }
    dend_13 { pt3dadd( 10.6119, 33.6665, 6.80794, 0.55 ) }
    dend_13 { pt3dadd( 10.7438, 35.1322, 7.95605, 0.55 ) }
    dend_13 { pt3dadd( 11.0864, 37.9074, 10.2867, 0.55 ) }
    dend_13 { pt3dadd( 11.3158, 40.9115, 13.016, 0.55 ) }
    dend_13 { pt3dadd( 11.3425, 42.029, 13.9253, 0.55 ) }
    dend_13 { pt3dadd( 12.8664, 50.362, 18.2805, 0.55 ) }
    dend_13 { pt3dadd( 14.5007, 58.5675, 22.8627, 0.55 ) }
    dend_13 { pt3dadd( 15.277, 67.274, 26.5282, 0.55 ) }
    dend_13 { pt3dadd( 16.276, 75.8203, 30.554, 0.55 ) }
    dend_13 { pt3dadd( 16.7265, 85.0342, 32.3271, 0.55 ) }
    dend_13 { pt3dadd( 19.0352, 93.8256, 34.9492, 0.55 ) }
    dend_13 { pt3dadd( 22.8891, 102.096, 37.6439, 0.55 ) }
    dend_13 { pt3dadd( 25.6525, 110.753, 40.3272, 0.55 ) }
    dend_13 { pt3dadd( 27.1852, 119.717, 42.8543, 0.55 ) }
    dend_13 { pt3dadd( 28.5779, 128.839, 44.6933, 0.55 ) }
    dend_13 { pt3dadd( 28.1693, 137.972, 46.9074, 0.55 ) }
    dend_13 { pt3dadd( 26.7576, 147.135, 48.3298, 0.55 ) }
    dend_13 { pt3dadd( 24.2429, 156.08, 49.7183, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_13 { pt3dadd( 21.65, 164.943, 51.5277, 0.55 ) }
    dend_13 { pt3dadd( 18.7511, 173.85, 51.9497, 0.55 ) }
    dend_13 { pt3dadd( 16.1774, 182.832, 52.7534, 0.55 ) }
    dend_13 { pt3dadd( 14.118, 191.834, 54.5077, 0.55 ) }
    dend_13 { pt3dadd( 12.2317, 200.87, 56.2668, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 5/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 1.87269, 20.4107, -1.95746, 0.28 ) }
    dend_11 { pt3dadd( 0.528562, 20.534, -1.75846, 0.28 ) }
    dend_11 { pt3dadd( -0.0454651, 20.5842, -1.69499, 0.55 ) }
    dend_11 { pt3dadd( -3.03403, 20.8457, -1.36455, 0.28 ) }
    dend_11 { pt3dadd( -3.84583, 20.9167, -1.27479, 0.55 ) }
    dend_11 { pt3dadd( -6.90331, 21.1843, -0.93673, 0.28 ) }
    dend_11 { pt3dadd( -8.48336, 21.3225, -0.762026, 0.28 ) }
    dend_11 { pt3dadd( -9.12335, 21.368, -0.716717, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 13/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 1.87269, 20.4107, -1.95746, 0.83 ) }
    dend_2 { pt3dadd( 2.4808, 23.6623, -0.922068, 0.83 ) }
    dend_2 { pt3dadd( 3.1939, 27.4754, 0.292099, 0.83 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 16/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 10.0109, -31.5998, 0.524338, 0.55 ) }
    dend_60 { pt3dadd( 13.0165, -32.0022, 3.62478, 0.55 ) }
    dend_60 { pt3dadd( 14.8661, -31.9467, 5.39393, 0.55 ) }
    dend_60 { pt3dadd( 18.1273, -31.5011, 8.30528, 0.55 ) }
    dend_60 { pt3dadd( 19.998, -31.0603, 9.93491, 0.55 ) }
    dend_60 { pt3dadd( 22.8865, -30.3796, 12.4513, 0.55 ) }
    dend_60 { pt3dadd( 25.2456, -29.8236, 14.5065, 0.55 ) }
    dend_60 { pt3dadd( 28.2363, -28.87, 16.8789, 0.55 ) }
    dend_60 { pt3dadd( 30.8886, -27.7457, 18.9722, 0.55 ) }
    dend_60 { pt3dadd( 35.4314, -25.4232, 22.2738, 0.55 ) }
    dend_60 { pt3dadd( 44.6917, -21.9382, 30.3715, 0.55 ) }
    dend_60 { pt3dadd( 52.9489, -17.4969, 39.0179, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 28/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 10.0109, -31.5998, 0.524338, 0.55 ) }
    dend_57 { pt3dadd( 12.3917, -33.0758, 1.04367, 0.55 ) }
    dend_57 { pt3dadd( 15.2999, -34.8661, 1.67802, 0.28 ) }
    dend_57 { pt3dadd( 17.4995, -36.2336, 2.11772, 0.83 ) }
    dend_57 { pt3dadd( 20.1632, -37.9167, 2.69491, 0.28 ) }
    dend_57 { pt3dadd( 22.4201, -39.3889, 3.20136, 0.28 ) }
    dend_57 { pt3dadd( 23.676, -40.2322, 3.48018, 0.55 ) }
    dend_57 { pt3dadd( 25.2154, -41.3988, 3.80977, 0.28 ) }
    dend_57 { pt3dadd( 25.7296, -41.8527, 3.95374, 0.55 ) }
    dend_57 { pt3dadd( 27.4815, -43.5391, 4.57007, 0.28 ) }
    dend_57 { pt3dadd( 27.9082, -43.9668, 4.72598, 0.83 ) }
    dend_57 { pt3dadd( 28.8984, -45.0909, 5.18842, 0.28 ) }
    dend_57 { pt3dadd( 29.5775, -45.8919, 5.54869, 0.55 ) }
    dend_57 { pt3dadd( 31.4731, -48.2066, 6.62876, 0.28 ) }
    dend_57 { pt3dadd( 31.9814, -48.8191, 6.93821, 0.55 ) }
    dend_57 { pt3dadd( 33.1683, -50.2531, 7.66628, 0.28 ) }
    dend_57 { pt3dadd( 33.9862, -51.2004, 8.21895, 0.55 ) }
    dend_57 { pt3dadd( 35.4221, -52.8322, 9.34003, 0.28 ) }
    dend_57 { pt3dadd( 36.1205, -53.6255, 10.0626, 0.55 ) }
    dend_57 { pt3dadd( 37.4003, -55.0586, 11.4625, 0.28 ) }
    dend_57 { pt3dadd( 37.8749, -55.5486, 11.9834, 0.55 ) }
    dend_57 { pt3dadd( 39.2733, -56.9153, 13.4595, 0.28 ) }
    dend_57 { pt3dadd( 40.091, -57.6394, 14.2566, 0.55 ) }
    dend_57 { pt3dadd( 43.9232, -60.6931, 17.4601, 0.28 ) }
    dend_57 { pt3dadd( 45.4155, -61.6246, 18.4865, 0.55 ) }
    dend_57 { pt3dadd( 46.9158, -62.3468, 19.2769, 0.28 ) }
    dend_57 { pt3dadd( 48.3628, -62.8496, 19.7946, 0.55 ) }
    dend_57 { pt3dadd( 50.7942, -63.3846, 20.311, 0.28 ) }
    dend_57 { pt3dadd( 52.4399, -63.6535, 20.5238, 0.55 ) }
    dend_57 { pt3dadd( 55.6297, -63.8977, 20.6438, 0.28 ) }
    dend_57 { pt3dadd( 57.4274, -63.9849, 20.7955, 0.55 ) }
    dend_57 { pt3dadd( 59.9704, -64.0591, 21.0228, 0.28 ) }
    dend_57 { pt3dadd( 61.5354, -63.9944, 21.1473, 0.55 ) }
    dend_57 { pt3dadd( 71.6604, -68.3804, 23.2187, 0.55 ) }
    dend_57 { pt3dadd( 80.7467, -73.7675, 26.919, 0.55 ) }
    dend_57 { pt3dadd( 90.9757, -77.784, 29.2953, 0.55 ) }
    dend_57 { pt3dadd( 100.787, -81.1665, 33.7009, 0.55 ) }
    dend_57 { pt3dadd( 109.86, -85.3597, 38.8685, 0.55 ) }
    dend_57 { pt3dadd( 118.081, -88.3803, 45.9988, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 67/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -42.6302, -63.2778, -10.988, 0.28 ) }
    dend_51 { pt3dadd( -44.2034, -63.4645, -10.0593, 0.28 ) }
    dend_51 { pt3dadd( -44.8081, -63.5585, -9.72602, 0.55 ) }
    dend_51 { pt3dadd( -48.0683, -63.7128, -7.56384, 0.28 ) }
    dend_51 { pt3dadd( -49.3888, -63.7866, -6.62018, 0.55 ) }
    dend_51 { pt3dadd( -53.3796, -64.1979, -3.62359, 0.28 ) }
    dend_51 { pt3dadd( -53.9312, -64.2801, -3.19552, 0.55 ) }
    dend_51 { pt3dadd( -55.4316, -64.6183, -1.91985, 0.55 ) }
    dend_51 { pt3dadd( -59.3557, -65.733, 1.76151, 0.55 ) }
    dend_51 { pt3dadd( -60.4469, -66.1384, 2.86594, 0.28 ) }
    dend_51 { pt3dadd( -61.6055, -66.5446, 3.93088, 0.55 ) }
    dend_51 { pt3dadd( -62.4984, -66.8875, 4.62419, 0.28 ) }
    dend_51 { pt3dadd( -63.3475, -67.2307, 5.3048, 0.55 ) }
    dend_51 { pt3dadd( -64.8172, -67.9244, 6.52352, 0.28 ) }
    dend_51 { pt3dadd( -65.6624, -68.4151, 7.10908, 0.55 ) }
    dend_51 { pt3dadd( -68.2919, -69.5556, 8.87064, 0.28 ) }
    dend_51 { pt3dadd( -70.3035, -70.203, 10.191, 0.55 ) }
    dend_51 { pt3dadd( -79.4975, -70.8596, 17.0493, 0.55 ) }
    dend_51 { pt3dadd( -88.8165, -69.326, 23.6482, 0.55 ) }
    dend_51 { pt3dadd( -98.4563, -66.3035, 29.1761, 0.55 ) }
    dend_51 { pt3dadd( -107.57, -64.0495, 35.8559, 0.55 ) }
    dend_51 { pt3dadd( -117.339, -63.219, 41.8992, 0.55 ) }
    dend_51 { pt3dadd( -127.621, -62.2546, 47.0034, 0.55 ) }
    dend_51 { pt3dadd( -137.521, -63.3398, 52.719, 0.55 ) }
    dend_51 { pt3dadd( -146.481, -62.1276, 59.8554, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 92/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -42.6302, -63.2778, -10.988, 0.28 ) }
    dend_50 { pt3dadd( -43.5055, -64.0495, -11.143, 0.28 ) }
    dend_50 { pt3dadd( -43.7339, -64.2402, -11.1877, 0.55 ) }
    dend_50 { pt3dadd( -44.4649, -64.8748, -11.3094, 0.28 ) }
    dend_50 { pt3dadd( -45.285, -65.5652, -11.441, 0.55 ) }
    dend_50 { pt3dadd( -46.8005, -66.7988, -11.6138, 0.55 ) }
    dend_50 { pt3dadd( -47.8539, -67.6493, -11.7087, 0.28 ) }
    dend_50 { pt3dadd( -49.0336, -68.5738, -11.7664, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_50 { pt3dadd( -50.534, -69.7563, -11.7923, 0.55 ) }
    dend_50 { pt3dadd( -52.273, -71.1797, -11.7434, 0.55 ) }
    dend_50 { pt3dadd( -53.2077, -71.9563, -11.6894, 0.28 ) }
    dend_50 { pt3dadd( -53.7103, -72.3884, -11.6432, 0.55 ) }
    dend_50 { pt3dadd( -54.3012, -72.9203, -11.5826, 0.28 ) }
    dend_50 { pt3dadd( -55.2205, -73.7383, -11.5091, 0.55 ) }
    dend_50 { pt3dadd( -56.011, -74.4532, -11.5056, 0.28 ) }
    dend_50 { pt3dadd( -56.6703, -75.0303, -11.4684, 0.55 ) }
    dend_50 { pt3dadd( -57.3332, -75.5973, -11.4251, 0.28 ) }
    dend_50 { pt3dadd( -58.5005, -76.5292, -11.3309, 0.55 ) }
    dend_50 { pt3dadd( -60.0237, -77.6746, -11.2154, 0.55 ) }
    dend_50 { pt3dadd( -60.7631, -78.2112, -11.151, 0.55 ) }
    dend_50 { pt3dadd( -63.0697, -79.8518, -10.9435, 0.55 ) }
    dend_50 { pt3dadd( -64.1024, -80.5995, -10.8375, 0.55 ) }
    dend_50 { pt3dadd( -65.2381, -81.4527, -10.7044, 0.28 ) }
    dend_50 { pt3dadd( -66.1407, -82.1849, -10.597, 0.28 ) }
    dend_50 { pt3dadd( -66.7995, -82.7805, -10.5343, 0.55 ) }
    dend_50 { pt3dadd( -67.4003, -83.4077, -10.5217, 0.55 ) }
    dend_50 { pt3dadd( -68.0023, -84.1496, -10.6193, 0.28 ) }
    dend_50 { pt3dadd( -68.4473, -84.757, -10.6998, 0.55 ) }
    dend_50 { pt3dadd( -68.8245, -85.305, -10.7743, 0.28 ) }
    dend_50 { pt3dadd( -69.4415, -86.1447, -10.8835, 0.55 ) }
    dend_50 { pt3dadd( -70.2393, -87.1257, -11.0161, 0.55 ) }
    dend_50 { pt3dadd( -70.9662, -87.981, -11.1449, 0.55 ) }
    dend_50 { pt3dadd( -71.862, -88.985, -11.305, 0.28 ) }
    dend_50 { pt3dadd( -72.754, -89.9003, -11.4589, 0.55 ) }
    dend_50 { pt3dadd( -73.4657, -90.5765, -11.5642, 0.55 ) }
    dend_50 { pt3dadd( -74.1866, -91.1997, -11.6805, 0.55 ) }
    dend_50 { pt3dadd( -75.0824, -91.9268, -11.8281, 0.83 ) }
    dend_50 { pt3dadd( -79.3194, -95.287, -12.087, 0.83 ) }
    // Section: dend_46, id: dend_46, parent: dend_30 (entry count 30/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 1.51184, -40.7418, 0.548424, 0.83 ) }
    dend_46 { pt3dadd( 3.08985, -41.6073, 0.452099, 0.83 ) }
    dend_46 { pt3dadd( 4.80612, -42.4744, 0.364316, 0.83 ) }
    dend_46 { pt3dadd( 7.42452, -43.6994, 0.252229, 0.83 ) }
    dend_46 { pt3dadd( 10.4216, -45.0088, 0.147113, 0.83 ) }
    dend_46 { pt3dadd( 13.9036, -46.4876, 0.0484369, 0.83 ) }
    dend_46 { pt3dadd( 16.7139, -47.6812, -0.0312038, 0.83 ) }
    dend_46 { pt3dadd( 21.1336, -49.496, -0.171908, 0.83 ) }
    dend_46 { pt3dadd( 23.1375, -50.3078, -0.240574, 0.55 ) }
    dend_46 { pt3dadd( 24.9411, -50.9593, -0.298485, 0.55 ) }
    dend_46 { pt3dadd( 26.667, -51.5689, -0.327971, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 41/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 1.51184, -40.7418, 0.548424, 1.11 ) }
    dend_31 { pt3dadd( 0.583584, -41.8731, -1.05786, 1.11 ) }
    dend_31 { pt3dadd( -2.06296, -45.0984, -5.63751, 0.83 ) }
    dend_31 { pt3dadd( -3.07674, -46.3338, -7.39178, 0.83 ) }
    dend_31 { pt3dadd( -3.85293, -47.2798, -8.73493, 0.83 ) }
    dend_31 { pt3dadd( -4.81715, -48.4548, -10.4035, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 47/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 106.091, 167.752, -90.6351, 0.55 ) }
    dend_26 { pt3dadd( 107.271, 167.839, -90.6048, 0.55 ) }
    dend_26 { pt3dadd( 109.725, 167.853, -90.863, 0.55 ) }
    dend_26 { pt3dadd( 110.542, 167.85, -90.9845, 0.55 ) }
    dend_26 { pt3dadd( 112.287, 167.839, -91.2946, 0.55 ) }
    dend_26 { pt3dadd( 114.959, 167.859, -91.8974, 0.55 ) }
    dend_26 { pt3dadd( 117.615, 167.878, -92.4967, 0.55 ) }
    dend_26 { pt3dadd( 121.882, 167.873, -93.6276, 0.55 ) }
    dend_26 { pt3dadd( 122.853, 167.844, -93.9351, 0.83 ) }
    dend_26 { pt3dadd( 124.731, 167.781, -94.5915, 0.28 ) }
    dend_26 { pt3dadd( 126.774, 167.765, -95.4093, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 58/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 106.091, 167.752, -90.6351, 0.55 ) }
    dend_25 { pt3dadd( 107.564, 169.097, -93.2837, 0.55 ) }
    dend_25 { pt3dadd( 109.57, 170.928, -96.8882, 0.55 ) }
    dend_25 { pt3dadd( 111.99, 173.136, -101.238, 0.28 ) }
    dend_25 { pt3dadd( 112.729, 173.811, -102.565, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 63/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 96.8905, 213.106, 6.75252, 0.55 ) }
    dend_23 { pt3dadd( 97.6911, 224.204, 7.00439, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 65/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 96.8905, 213.106, 6.75252, 0.55 ) }
    dend_22 { pt3dadd( 108.109, 220.823, 5.98923, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 67/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 205.916, 112.46, 15.2904, 0.55 ) }
    dend_18 { pt3dadd( 212.507, 116.765, 19.3439, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 69/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 205.916, 112.46, 15.2904, 0.55 ) }
    dend_17 { pt3dadd( 215.573, 116.787, 12.0345, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 71/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 12.2317, 200.87, 56.2668, 0.55 ) }
    dend_15 { pt3dadd( 12.2613, 207.932, 58.215, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 73/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 12.2317, 200.87, 56.2668, 0.55 ) }
    dend_14 { pt3dadd( 12.4258, 211.226, 59.756, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 75/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 3.1939, 27.4754, 0.292099, 0.83 ) }
    dend_6 { pt3dadd( 4.32395, 29.5722, 0.236336, 0.83 ) }
    dend_6 { pt3dadd( 5.49346, 31.9517, 0.314479, 0.83 ) }
    dend_6 { pt3dadd( 6.37856, 34.1034, 0.528064, 0.28 ) }
    dend_6 { pt3dadd( 6.6838, 34.9411, 0.595445, 1.11 ) }
    dend_6 { pt3dadd( 7.59698, 37.5705, 0.823673, 0.28 ) }
    dend_6 { pt3dadd( 8.2274, 39.4488, 0.9554, 0.83 ) }
    dend_6 { pt3dadd( 8.96164, 41.8877, 1.09076, 0.28 ) }
    dend_6 { pt3dadd( 9.72716, 44.4823, 1.23748, 0.83 ) }
    dend_6 { pt3dadd( 10.7293, 47.8577, 1.47372, 0.55 ) }
    dend_6 { pt3dadd( 11.2039, 49.4834, 1.61872, 1.11 ) }
    dend_6 { pt3dadd( 11.9847, 52.145, 1.89815, 0.55 ) }
    dend_6 { pt3dadd( 12.699, 54.5924, 2.10603, 0.83 ) }
    dend_6 { pt3dadd( 13.389, 56.8766, 2.21239, 0.28 ) }
    dend_6 { pt3dadd( 14.0562, 59.0444, 2.28043, 0.83 ) }
    dend_6 { pt3dadd( 14.5964, 60.8556, 2.47273, 0.28 ) }
    dend_6 { pt3dadd( 14.8766, 61.868, 2.61157, 0.55 ) }
    dend_6 { pt3dadd( 15.4175, 63.9122, 2.93694, 0.28 ) }
    dend_6 { pt3dadd( 15.7708, 65.3278, 3.15384, 0.83 ) }
    dend_6 { pt3dadd( 16.4108, 67.9071, 3.48432, 0.83 ) }
    dend_6 { pt3dadd( 17.2007, 70.7952, 3.85011, 0.28 ) }
    dend_6 { pt3dadd( 17.5841, 72.2309, 4.17475, 0.55 ) }
    dend_6 { pt3dadd( 17.8756, 73.5387, 4.55429, 0.28 ) }
    dend_6 { pt3dadd( 18.058, 74.3917, 4.82584, 0.55 ) }
    dend_6 { pt3dadd( 18.3639, 75.998, 5.30449, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_6 { pt3dadd( 18.5775, 77.2654, 5.61854, 0.83 ) }
    dend_6 { pt3dadd( 19.1443, 80.8199, 6.2346, 0.55 ) }
    dend_6 { pt3dadd( 19.3392, 82.118, 6.45511, 0.83 ) }
    dend_6 { pt3dadd( 19.5748, 83.8708, 6.74829, 0.55 ) }
    dend_6 { pt3dadd( 19.8092, 85.9258, 6.92229, 0.55 ) }
    dend_6 { pt3dadd( 19.9999, 87.7056, 6.94635, 0.28 ) }
    dend_6 { pt3dadd( 20.142, 88.906, 6.91459, 0.55 ) }
    dend_6 { pt3dadd( 20.3975, 90.7816, 6.76356, 0.28 ) }
    dend_6 { pt3dadd( 20.4362, 91.0677, 6.7486, 0.55 ) }
    dend_6 { pt3dadd( 20.7377, 93.5938, 6.67418, 0.28 ) }
    dend_6 { pt3dadd( 20.9835, 95.2936, 6.62172, 0.55 ) }
    dend_6 { pt3dadd( 21.2397, 96.7409, 6.64285, 0.28 ) }
    dend_6 { pt3dadd( 21.5702, 98.3053, 6.72417, 0.83 ) }
    dend_6 { pt3dadd( 22.0421, 100.01, 6.85314, 0.83 ) }
    dend_6 { pt3dadd( 22.4207, 101.22, 6.98534, 0.28 ) }
    dend_6 { pt3dadd( 22.9694, 102.683, 7.30838, 0.55 ) }
    dend_6 { pt3dadd( 23.7208, 104.648, 7.6458, 0.28 ) }
    dend_6 { pt3dadd( 23.8288, 104.93, 7.6806, 0.55 ) }
    dend_6 { pt3dadd( 24.6594, 107.019, 7.85946, 0.28 ) }
    dend_6 { pt3dadd( 24.8767, 107.611, 7.9194, 0.55 ) }
    dend_6 { pt3dadd( 25.6242, 110.328, 8.13953, 0.28 ) }
    dend_6 { pt3dadd( 26.2093, 112.908, 8.37494, 0.55 ) }
    dend_6 { pt3dadd( 26.3871, 113.94, 8.47286, 0.28 ) }
    dend_6 { pt3dadd( 26.5981, 115.422, 8.65582, 0.55 ) }
    dend_6 { pt3dadd( 26.937, 118.386, 9.1646, 0.55 ) }
    dend_6 { pt3dadd( 27.1257, 120.219, 9.52001, 0.28 ) }
    dend_6 { pt3dadd( 27.3121, 122.221, 9.93723, 0.55 ) }
    dend_6 { pt3dadd( 27.5233, 124.043, 10.4957, 0.28 ) }
    dend_6 { pt3dadd( 27.5907, 124.588, 10.6847, 0.55 ) }
    dend_6 { pt3dadd( 27.7309, 125.938, 11.1953, 0.28 ) }
    dend_6 { pt3dadd( 27.8419, 127.085, 11.6229, 0.83 ) }
    dend_6 { pt3dadd( 31.7929, 137.016, 12.1994, 0.83 ) }
    dend_6 { pt3dadd( 35.5044, 146.912, 13.9046, 0.83 ) }
    dend_6 { pt3dadd( 37.6297, 157.16, 15.975, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 34/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 3.1939, 27.4754, 0.292099, 0.55 ) }
    dend_3 { pt3dadd( 2.07112, 29.3306, 1.23335, 0.55 ) }
    dend_3 { pt3dadd( 1.84619, 29.7232, 1.42464, 0.55 ) }
    dend_3 { pt3dadd( 0.708757, 31.8291, 2.38013, 0.83 ) }
    dend_3 { pt3dadd( -0.531446, 34.1917, 3.32178, 0.55 ) }
    dend_3 { pt3dadd( -0.980988, 35.0659, 3.64509, 0.55 ) }
    dend_3 { pt3dadd( -1.56696, 36.2672, 4.05413, 0.55 ) }
    dend_3 { pt3dadd( -2.20694, 37.6522, 4.40485, 0.83 ) }
    dend_3 { pt3dadd( -3.07297, 39.4398, 4.76431, 0.28 ) }
    dend_3 { pt3dadd( -3.63361, 40.6119, 4.90595, 0.55 ) }
    dend_3 { pt3dadd( -4.02763, 41.4599, 4.93791, 0.28 ) }
    dend_3 { pt3dadd( -4.69382, 42.8053, 4.97473, 0.83 ) }
    dend_3 { pt3dadd( -5.71648, 44.8004, 5.04719, 0.55 ) }
    dend_3 { pt3dadd( -6.18219, 45.7187, 5.10435, 0.55 ) }
    dend_3 { pt3dadd( -7.35099, 48.1191, 5.35303, 0.55 ) }
    dend_3 { pt3dadd( -7.98173, 49.419, 5.46658, 0.28 ) }
    dend_3 { pt3dadd( -8.71189, 51.0026, 5.6987, 0.55 ) }
    dend_3 { pt3dadd( -9.38786, 52.5281, 5.9023, 0.28 ) }
    dend_3 { pt3dadd( -10.0571, 54.1133, 6.10065, 0.28 ) }
    dend_3 { pt3dadd( -10.6496, 55.5079, 6.22925, 0.55 ) }
    dend_3 { pt3dadd( -11.7969, 58.08, 6.40812, 0.55 ) }
    dend_3 { pt3dadd( -13.2624, 61.4207, 6.38328, 0.28 ) }
    dend_3 { pt3dadd( -14.3987, 64.0214, 6.30816, 0.83 ) }
    dend_3 { pt3dadd( -15.303, 66.1329, 6.28539, 0.55 ) }
    dend_3 { pt3dadd( -16.1901, 68.2467, 6.30964, 0.55 ) }
    dend_3 { pt3dadd( -16.7778, 69.7988, 6.35649, 0.55 ) }
    dend_3 { pt3dadd( -17.6448, 72.4159, 6.52469, 0.28 ) }
    dend_3 { pt3dadd( -18.3111, 74.6248, 6.66927, 0.55 ) }
    dend_3 { pt3dadd( -18.7572, 76.491, 6.94068, 0.55 ) }
    dend_3 { pt3dadd( -18.9601, 77.5163, 7.10937, 0.28 ) }
    dend_3 { pt3dadd( -19.1523, 78.4603, 7.28835, 0.83 ) }
    dend_3 { pt3dadd( -19.5657, 80.1272, 7.6513, 0.28 ) }
    dend_3 { pt3dadd( -20.0224, 81.5442, 8.00598, 0.55 ) }
    dend_3 { pt3dadd( -20.8334, 83.607, 8.49469, 0.55 ) }
    dend_3 { pt3dadd( -21.601, 85.2056, 8.89123, 0.55 ) }
    dend_3 { pt3dadd( -22.1796, 86.2459, 9.23423, 0.28 ) }
    dend_3 { pt3dadd( -22.4649, 86.6968, 9.40993, 0.55 ) }
    dend_3 { pt3dadd( -23.1032, 87.6777, 9.8821, 0.55 ) }
    dend_3 { pt3dadd( -24.3846, 89.4941, 10.8463, 0.28 ) }
    dend_3 { pt3dadd( -25.5909, 91.0423, 11.7364, 0.55 ) }
    dend_3 { pt3dadd( -26.7695, 92.4238, 12.4588, 0.28 ) }
    dend_3 { pt3dadd( -27.2625, 92.9795, 12.7652, 0.55 ) }
    dend_3 { pt3dadd( -28.3969, 94.1893, 13.4912, 0.28 ) }
    dend_3 { pt3dadd( -29.8822, 95.6417, 14.4169, 0.55 ) }
    dend_3 { pt3dadd( -31.2525, 96.8024, 15.1969, 0.28 ) }
    dend_3 { pt3dadd( -32.3107, 97.6385, 15.7915, 0.55 ) }
    dend_3 { pt3dadd( -35.0053, 99.8343, 17.4351, 0.55 ) }
    dend_3 { pt3dadd( -35.9031, 100.547, 18.009, 0.55 ) }
    dend_3 { pt3dadd( -37.1013, 101.482, 18.7818, 0.55 ) }
    dend_3 { pt3dadd( -38.3271, 102.519, 19.5924, 0.55 ) }
    dend_3 { pt3dadd( -40.5574, 104.536, 21.2124, 0.55 ) }
    dend_3 { pt3dadd( -42.0557, 105.926, 22.3885, 0.55 ) }
    dend_3 { pt3dadd( -43.1081, 106.849, 23.0583, 0.55 ) }
    dend_3 { pt3dadd( -45.0633, 108.609, 24.2988, 0.55 ) }
    dend_3 { pt3dadd( -46.7558, 110.173, 25.4105, 0.55 ) }
    dend_3 { pt3dadd( -48.5058, 111.832, 26.5815, 0.83 ) }
    dend_3 { pt3dadd( -50.6076, 113.708, 27.9239, 0.28 ) }
    dend_3 { pt3dadd( -53.2114, 115.924, 29.282, 1.11 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 92/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 52.9489, -17.4969, 39.0179, 0.55 ) }
    dend_62 { pt3dadd( 60.1222, -15.1292, 46.8628, 0.55 ) }
    dend_62 { pt3dadd( 67.6389, -14.22, 54.7217, 0.55 ) }
    dend_62 { pt3dadd( 74.528, -12.5577, 63.009, 0.55 ) }
    dend_62 { pt3dadd( 80.8331, -12.1305, 71.9095, 0.55 ) }
    dend_62 { pt3dadd( 87.8307, -10.7153, 80.1562, 0.55 ) }
    dend_62 { pt3dadd( 93.4375, -7.70402, 88.9744, 0.55 ) }
    dend_62 { pt3dadd( 98.9684, -3.94373, 97.5188, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_62 { pt3dadd( 106.218, 0.615241, 104.124, 0.55 ) }
    dend_62 { pt3dadd( 112.858, 5.49371, 111.109, 0.55 ) }
    dend_62 { pt3dadd( 118.882, 11.7367, 117.417, 0.55 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 52.9489, -17.4969, 39.0179, 0.55 ) }
    dend_61 { pt3dadd( 58.8996, -15.5122, 45.155, 0.55 ) }
    dend_61 { pt3dadd( 65.5193, -15.0761, 50.9456, 0.55 ) }
    dend_61 { pt3dadd( 72.0843, -15.6274, 56.7908, 0.55 ) }
    dend_61 { pt3dadd( 79.3559, -16.8559, 61.5871, 0.55 ) }
    dend_61 { pt3dadd( 86.3015, -17.8974, 66.893, 0.55 ) }
    dend_61 { pt3dadd( 92.5587, -19.1349, 72.9606, 0.55 ) }
    dend_61 { pt3dadd( 97.9017, -20.3727, 79.8508, 0.55 ) }
    dend_61 { pt3dadd( 102.823, -20.5847, 87.1494, 0.55 ) }
    dend_61 { pt3dadd( 106.758, -20.8513, 95.0191, 0.55 ) }
    dend_61 { pt3dadd( 109.858, -20.6962, 103.246, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 14/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 118.081, -88.3803, 45.9988, 0.55 ) }
    dend_59 { pt3dadd( 126.207, -93.0989, 51.0996, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 16/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 118.081, -88.3803, 45.9988, 0.55 ) }
    dend_58 { pt3dadd( 126.633, -92.038, 46.8931, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 18/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -146.481, -62.1276, 59.8554, 0.55 ) }
    dend_53 { pt3dadd( -153.566, -62.5673, 65.5799, 0.55 ) }
    dend_53 { pt3dadd( -159.566, -64.1416, 72.2301, 0.55 ) }
    dend_53 { pt3dadd( -165.632, -67.0424, 78.2782, 0.55 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 22/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -146.481, -62.1276, 59.8554, 0.55 ) }
    dend_52 { pt3dadd( -155.652, -61.5049, 64.492, 0.55 ) }
    dend_52 { pt3dadd( -164.854, -61.8642, 69.0569, 0.55 ) }
    dend_52 { pt3dadd( -174.884, -62.2395, 71.3517, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 26/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 26.667, -51.5689, -0.327971, 0.55 ) }
    dend_48 { pt3dadd( 29.8465, -51.5499, -0.768257, 0.55 ) }
    dend_48 { pt3dadd( 32.5027, -51.5686, -1.09876, 0.55 ) }
    dend_48 { pt3dadd( 35.3783, -51.5213, -1.42282, 0.55 ) }
    dend_48 { pt3dadd( 38.5003, -51.4738, -1.70775, 0.55 ) }
    dend_48 { pt3dadd( 42.4531, -51.32, -2.01756, 0.55 ) }
    dend_48 { pt3dadd( 45.3469, -51.1645, -2.22124, 0.55 ) }
    dend_48 { pt3dadd( 48.6389, -50.8321, -2.44144, 0.55 ) }
    dend_48 { pt3dadd( 50.4608, -50.5557, -2.53813, 0.55 ) }
    dend_48 { pt3dadd( 54.1451, -49.6849, -2.66548, 0.55 ) }
    dend_48 { pt3dadd( 56.004, -49.1148, -2.67902, 0.55 ) }
    dend_48 { pt3dadd( 57.4034, -48.6049, -2.65729, 0.55 ) }
    dend_48 { pt3dadd( 60.6723, -47.2358, -2.59108, 0.55 ) }
    dend_48 { pt3dadd( 62.8789, -46.1695, -2.54812, 0.83 ) }
    dend_48 { pt3dadd( 64.3341, -45.4002, -2.51404, 0.55 ) }
    dend_48 { pt3dadd( 66.2576, -44.2531, -2.45727, 0.55 ) }
    dend_48 { pt3dadd( 70.3686, -41.6081, -2.32029, 0.55 ) }
    dend_48 { pt3dadd( 71.5332, -40.7923, -2.27355, 0.55 ) }
    dend_48 { pt3dadd( 72.2579, -40.2269, -2.24494, 0.83 ) }
    dend_48 { pt3dadd( 74.5865, -38.2262, -2.15262, 0.55 ) }
    dend_48 { pt3dadd( 76.0425, -36.8279, -2.06494, 0.55 ) }
    dend_48 { pt3dadd( 77.8072, -34.9154, -1.8672, 0.55 ) }
    dend_48 { pt3dadd( 79.6967, -32.5494, -1.56176, 0.55 ) }
    dend_48 { pt3dadd( 82.1871, -29.2409, -1.04331, 0.55 ) }
    dend_48 { pt3dadd( 83.2355, -27.7924, -0.782229, 0.28 ) }
    dend_48 { pt3dadd( 85.0502, -25.1873, -0.218147, 0.55 ) }
    dend_48 { pt3dadd( 86.7038, -22.7849, 0.366158, 0.28 ) }
    dend_48 { pt3dadd( 87.4742, -21.641, 0.658996, 0.55 ) }
    dend_48 { pt3dadd( 88.4334, -20.1429, 1.03162, 0.28 ) }
    dend_48 { pt3dadd( 88.7737, -19.6323, 1.12817, 0.55 ) }
    dend_48 { pt3dadd( 89.9946, -17.9932, 1.28103, 0.55 ) }
    dend_48 { pt3dadd( 92.4919, -15.0859, 1.32274, 0.55 ) }
    dend_48 { pt3dadd( 94.0779, -13.3946, 1.26127, 0.55 ) }
    dend_48 { pt3dadd( 95.5237, -11.9669, 1.18893, 0.55 ) }
    dend_48 { pt3dadd( 98.5582, -9.09192, 1.00039, 0.55 ) }
    dend_48 { pt3dadd( 101.678, -6.1757, 0.73089, 0.55 ) }
    dend_48 { pt3dadd( 104.196, -3.84635, 0.449047, 0.55 ) }
    dend_48 { pt3dadd( 105.898, -2.33489, 0.246309, 0.55 ) }
    dend_48 { pt3dadd( 107.167, -1.26667, 0.114756, 0.83 ) }
    dend_48 { pt3dadd( 107.858, -0.698461, 0.053962, 0.83 ) }
    dend_48 { pt3dadd( 109.534, 0.657652, -0.0269288, 0.55 ) }
    dend_48 { pt3dadd( 110.224, 1.24248, -0.0609133, 0.83 ) }
    dend_48 { pt3dadd( 112.177, 2.98318, -0.171996, 0.28 ) }
    dend_48 { pt3dadd( 113.844, 4.47176, -0.247185, 0.55 ) }
    dend_48 { pt3dadd( 114.898, 5.4089, -0.248036, 0.55 ) }
    dend_48 { pt3dadd( 116.39, 6.74421, -0.215105, 0.55 ) }
    dend_48 { pt3dadd( 118.254, 8.38769, -0.122388, 0.28 ) }
    dend_48 { pt3dadd( 119.702, 9.63113, -0.0503401, 0.55 ) }
    dend_48 { pt3dadd( 121.302, 10.8992, 0.009049, 0.83 ) }
    dend_48 { pt3dadd( 122.862, 11.9778, 0.0516592, 0.55 ) }
    dend_48 { pt3dadd( 125.11, 13.2181, 0.218577, 0.28 ) }
    dend_48 { pt3dadd( 127.712, 14.4234, 0.479818, 0.55 ) }
    dend_48 { pt3dadd( 129.757, 15.2044, 0.730654, 0.55 ) }
    dend_48 { pt3dadd( 132.57, 16.1009, 1.08275, 0.55 ) }
    dend_48 { pt3dadd( 135.137, 16.7945, 1.40563, 0.55 ) }
    dend_48 { pt3dadd( 138.79, 17.6783, 1.87221, 0.55 ) }
    dend_48 { pt3dadd( 140.898, 18.1249, 2.20549, 0.55 ) }
    dend_48 { pt3dadd( 144.018, 18.8495, 2.73031, 0.55 ) }
    dend_48 { pt3dadd( 145.436, 19.2752, 2.98147, 0.28 ) }
    dend_48 { pt3dadd( 147.936, 20.3088, 3.4353, 0.55 ) }
    dend_48 { pt3dadd( 148.861, 20.7446, 3.58485, 0.28 ) }
    dend_48 { pt3dadd( 149.691, 21.1887, 3.68166, 0.83 ) }
    dend_48 { pt3dadd( 152.385, 22.6035, 4.07107, 0.55 ) }
    dend_48 { pt3dadd( 154.468, 23.8872, 4.40928, 0.28 ) }
    dend_48 { pt3dadd( 156.135, 25.0986, 4.71718, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 91/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 26.667, -51.5689, -0.327971, 0.55 ) }
    dend_47 { pt3dadd( 28.0029, -52.9055, -0.329459, 0.55 ) }
    dend_47 { pt3dadd( 29.492, -54.3823, -0.290693, 0.55 ) }
    dend_47 { pt3dadd( 31.2912, -56.209, 0.00180966, 0.28 ) }
    dend_47 { pt3dadd( 32.0006, -56.9346, 0.16306, 0.28 ) }
    dend_47 { pt3dadd( 32.9165, -57.9216, 0.567328, 0.55 ) }
    dend_47 { pt3dadd( 33.8066, -58.8974, 1.04686, 0.28 ) }
    dend_47 { pt3dadd( 34.8939, -60.0905, 1.74489, 0.55 ) }
    dend_47 { pt3dadd( 36.5908, -62.039, 3.03078, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_47 { pt3dadd( 37.5641, -63.1324, 3.85578, 0.55 ) }
    dend_47 { pt3dadd( 40.0432, -65.8043, 5.98748, 0.55 ) }
    dend_47 { pt3dadd( 41.5714, -67.4584, 7.28763, 0.55 ) }
    dend_47 { pt3dadd( 42.529, -68.4473, 8.03882, 0.28 ) }
    dend_47 { pt3dadd( 42.9673, -68.8996, 8.3726, 0.55 ) }
    dend_47 { pt3dadd( 44.8242, -70.7818, 9.65238, 0.28 ) }
    dend_47 { pt3dadd( 45.6373, -71.6338, 10.236, 0.55 ) }
    dend_47 { pt3dadd( 47.1352, -73.2133, 11.2627, 0.55 ) }
    dend_47 { pt3dadd( 48.5197, -74.6904, 12.3136, 0.55 ) }
    dend_47 { pt3dadd( 49.925, -76.2511, 13.4437, 0.28 ) }
    dend_47 { pt3dadd( 50.2652, -76.6338, 13.7172, 0.55 ) }
    dend_47 { pt3dadd( 51.8037, -78.5173, 15.0489, 0.28 ) }
    dend_47 { pt3dadd( 51.9367, -78.6806, 15.1804, 0.55 ) }
    dend_47 { pt3dadd( 52.7317, -79.7264, 16.1669, 0.28 ) }
    dend_47 { pt3dadd( 53.06, -80.2879, 16.6815, 0.55 ) }
    dend_47 { pt3dadd( 59.0723, -85.5423, 21.8763, 0.55 ) }
    dend_47 { pt3dadd( 63.5471, -92.0602, 27.0372, 0.55 ) }
    dend_47 { pt3dadd( 66.3717, -99.5629, 31.8745, 0.55 ) }
    dend_47 { pt3dadd( 70.1572, -107.216, 35.6824, 0.55 ) }
    dend_47 { pt3dadd( 74.547, -114.175, 40.2417, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_31 (entry count 20/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -4.81715, -48.4548, -10.4035, 0.55 ) }
    dend_45 { pt3dadd( -5.41453, -48.1002, -11.7653, 0.55 ) }
    dend_45 { pt3dadd( -6.79116, -47.3088, -14.6996, 0.55 ) }
    dend_45 { pt3dadd( -8.90071, -45.9408, -18.8141, 0.28 ) }
    dend_45 { pt3dadd( -9.48159, -45.5641, -19.947, 0.83 ) }
    dend_45 { pt3dadd( -11.4104, -44.3132, -23.709, 0.55 ) }
    dend_45 { pt3dadd( -13.142, -43.1902, -27.0862, 0.55 ) }
    dend_45 { pt3dadd( -13.6745, -42.8559, -28.2257, 0.28 ) }
    dend_45 { pt3dadd( -14.6927, -42.344, -30.5075, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 29/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -4.81715, -48.4548, -10.4035, 0.83 ) }
    dend_32 { pt3dadd( -6.16777, -50.4753, -10.6333, 0.83 ) }
    dend_32 { pt3dadd( -7.84162, -52.9795, -10.9181, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 32/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 37.6297, 157.16, 15.975, 0.83 ) }
    dend_10 { pt3dadd( 40.946, 166.582, 16.4029, 0.83 ) }
    dend_10 { pt3dadd( 44.7623, 175.763, 15.1205, 0.83 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 35/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 37.6297, 157.16, 15.975, 0.55 ) }
    dend_7 { pt3dadd( 38.1284, 171.153, 19.0983, 0.83 ) }
    dend_7 { pt3dadd( 38.6037, 185.365, 20.7441, 0.83 ) }
    dend_7 { pt3dadd( 38.2308, 199.247, 24.4043, 0.83 ) }
    dend_7 { pt3dadd( 39.7458, 213.17, 27.5319, 0.83 ) }
    dend_7 { pt3dadd( 40.6028, 227.057, 31.0736, 0.83 ) }
    dend_7 { pt3dadd( 38.9368, 241.141, 33.1754, 0.83 ) }
    dend_7 { pt3dadd( 36.1674, 255.152, 34.5186, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 43/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -53.2114, 115.924, 29.282, 0.28 ) }
    dend_5 { pt3dadd( -57.4402, 115.101, 31.1791, 0.28 ) }
    dend_5 { pt3dadd( -58.7257, 114.851, 31.7558, 0.28 ) }
    dend_5 { pt3dadd( -60.46, 114.514, 32.5338, 0.55 ) }
    dend_5 { pt3dadd( -62.0511, 114.204, 33.2476, 0.28 ) }
    dend_5 { pt3dadd( -63.6689, 113.89, 33.9733, 0.28 ) }
    dend_5 { pt3dadd( -66.5499, 113.329, 35.2657, 0.83 ) }
    dend_5 { pt3dadd( -75.7116, 110.682, 38.883, 0.83 ) }
    dend_5 { pt3dadd( -84.413, 108.718, 43.868, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 52/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -53.2114, 115.924, 29.282, 0.28 ) }
    dend_4 { pt3dadd( -55.799, 117.976, 30.5478, 0.28 ) }
    dend_4 { pt3dadd( -58.5114, 120.006, 31.9425, 0.55 ) }
    dend_4 { pt3dadd( -60.8791, 121.791, 33.2557, 0.55 ) }
    dend_4 { pt3dadd( -61.4728, 122.226, 33.6147, 0.55 ) }
    dend_4 { pt3dadd( -62.8385, 123.289, 34.5147, 0.28 ) }
    dend_4 { pt3dadd( -64.1173, 124.287, 35.3484, 0.55 ) }
    dend_4 { pt3dadd( -65.6958, 125.44, 36.5129, 0.28 ) }
    dend_4 { pt3dadd( -66.7473, 126.134, 37.3114, 0.28 ) }
    dend_4 { pt3dadd( -68.8172, 127.473, 38.9907, 0.55 ) }
    dend_4 { pt3dadd( -70.9747, 128.833, 40.7829, 0.28 ) }
    dend_4 { pt3dadd( -73.0707, 130.126, 42.5692, 0.55 ) }
    dend_4 { pt3dadd( -75.8353, 131.788, 44.8229, 0.28 ) }
    dend_4 { pt3dadd( -76.9435, 132.446, 45.726, 0.55 ) }
    dend_4 { pt3dadd( -83.9699, 136.962, 52.0702, 0.55 ) }
    dend_4 { pt3dadd( -91.1553, 140.674, 58.8052, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 68/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -7.84162, -52.9795, -10.9181, 0.55 ) }
    dend_40 { pt3dadd( -7.60854, -54.5164, -11.1691, 0.55 ) }
    dend_40 { pt3dadd( -7.415, -56.7821, -11.5544, 0.55 ) }
    dend_40 { pt3dadd( -7.19291, -60.3036, -12.2098, 0.55 ) }
    dend_40 { pt3dadd( -7.1997, -64.3657, -13.0198, 0.55 ) }
    dend_40 { pt3dadd( -7.33182, -67.3923, -13.7313, 0.55 ) }
    dend_40 { pt3dadd( -7.57759, -69.6477, -14.3394, 0.55 ) }
    dend_40 { pt3dadd( -7.9284, -71.1724, -14.814, 0.55 ) }
    dend_40 { pt3dadd( -8.6771, -73.741, -15.6615, 0.55 ) }
    dend_40 { pt3dadd( -9.74229, -76.7987, -16.7364, 0.55 ) }
    dend_40 { pt3dadd( -10.5918, -79.3326, -17.7039, 0.55 ) }
    dend_40 { pt3dadd( -11.5398, -82.3456, -18.8441, 0.55 ) }
    dend_40 { pt3dadd( -12.7028, -86.7663, -20.5534, 0.55 ) }
    dend_40 { pt3dadd( -13.4469, -90.0452, -21.8015, 0.55 ) }
    dend_40 { pt3dadd( -14.3063, -94.4865, -23.3946, 0.55 ) }
    dend_40 { pt3dadd( -14.7954, -98.2449, -24.6523, 0.55 ) }
    dend_40 { pt3dadd( -15.0344, -100.74, -25.3556, 0.55 ) }
    dend_40 { pt3dadd( -15.1783, -103.736, -26.0596, 0.55 ) }
    dend_40 { pt3dadd( -15.2088, -105.424, -26.3875, 0.55 ) }
    dend_40 { pt3dadd( -15.2559, -109.203, -26.9667, 0.55 ) }
    dend_40 { pt3dadd( -15.1849, -110.664, -27.0988, 0.55 ) }
    dend_40 { pt3dadd( -15.0684, -114.123, -27.2415, 0.55 ) }
    dend_40 { pt3dadd( -14.8814, -116.868, -27.2894, 0.55 ) }
    dend_40 { pt3dadd( -14.7249, -118.685, -27.2345, 0.55 ) }
    dend_40 { pt3dadd( -14.6052, -119.915, -27.1825, 0.55 ) }
    dend_40 { pt3dadd( -14.3042, -121.81, -27.0608, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 94/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -7.84162, -52.9795, -10.9181, 0.55 ) }
    dend_33 { pt3dadd( -9.0202, -56.2253, -10.3851, 0.55 ) }
    dend_33 { pt3dadd( -10.2749, -60.3347, -9.76654, 0.55 ) }
    dend_33 { pt3dadd( -11.1321, -63.508, -9.36647, 0.55 ) }
    dend_33 { pt3dadd( -12.5586, -69.256, -8.73635, 0.55 ) }
    dend_33 { pt3dadd( -13.1707, -71.5592, -8.52151, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_33 { pt3dadd( -13.9452, -74.3567, -8.26566, 0.55 ) }
    dend_33 { pt3dadd( -14.6415, -76.9348, -8.03857, 0.55 ) }
    dend_33 { pt3dadd( -16.1927, -82.2206, -7.55667, 0.55 ) }
    dend_33 { pt3dadd( -17.1912, -84.9428, -7.18618, 0.55 ) }
    dend_33 { pt3dadd( -18.4373, -87.8147, -6.51504, 0.55 ) }
    dend_33 { pt3dadd( -20.3731, -91.6102, -5.37849, 0.55 ) }
    dend_33 { pt3dadd( -22.1011, -94.6078, -4.28009, 0.55 ) }
    dend_33 { pt3dadd( -23.6738, -97.1218, -3.2226, 0.55 ) }
    dend_33 { pt3dadd( -25.6133, -100.102, -1.76921, 0.55 ) }
    dend_33 { pt3dadd( -27.9665, -103.848, 0.254645, 0.55 ) }
    dend_33 { pt3dadd( -28.8539, -105.515, 1.17098, 0.55 ) }
    dend_33 { pt3dadd( -29.33, -106.619, 1.76754, 0.83 ) }
    dend_33 { pt3dadd( -29.9566, -108.894, 2.89922, 0.83 ) }
    dend_33 { pt3dadd( -30.1877, -110.775, 3.69187, 0.83 ) }
    dend_33 { pt3dadd( -30.017, -114.99, 5.32174, 0.55 ) }
    dend_33 { pt3dadd( -29.6098, -117.984, 6.34503, 0.83 ) }
    dend_33 { pt3dadd( -29.3138, -120.01, 7.16688, 0.55 ) }
    dend_33 { pt3dadd( -29.0821, -121.896, 7.99043, 0.55 ) }
    dend_33 { pt3dadd( -28.7316, -125.235, 9.5676, 0.55 ) }
    dend_33 { pt3dadd( -28.6666, -127.422, 10.6651, 0.55 ) }
    dend_33 { pt3dadd( -28.8664, -129.16, 11.5278, 0.55 ) }
    dend_33 { pt3dadd( -29.9913, -133.295, 13.5597, 0.55 ) }
    dend_33 { pt3dadd( -30.7803, -135.575, 14.5871, 0.55 ) }
    dend_33 { pt3dadd( -31.4991, -137.527, 15.344, 0.55 ) }
    dend_33 { pt3dadd( -32.5387, -140.673, 16.3863, 0.55 ) }
    dend_33 { pt3dadd( -33.702, -144.47, 17.4006, 0.55 ) }
    dend_33 { pt3dadd( -34.3695, -146.91, 17.9538, 0.55 ) }
    dend_33 { pt3dadd( -35.0871, -149.971, 18.54, 0.55 ) }
    dend_33 { pt3dadd( -36.3358, -155.608, 19.5159, 0.55 ) }
    dend_33 { pt3dadd( -37.4456, -160.908, 20.233, 0.55 ) }
    dend_33 { pt3dadd( -37.9166, -163.457, 20.551, 0.55 ) }
    dend_33 { pt3dadd( -38.5978, -167.4, 21.0599, 0.55 ) }
    dend_33 { pt3dadd( -39.6943, -173.296, 21.8304, 0.83 ) }
    dend_33 { pt3dadd( -41.0554, -179.581, 22.6175, 0.83 ) }
    dend_33 { pt3dadd( -41.6726, -182.214, 22.9126, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 35/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 36.1674, 255.152, 34.5186, 0.83 ) }
    dend_9 { pt3dadd( 36.0143, 262.419, 35.8414, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 37/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 36.1674, 255.152, 34.5186, 0.55 ) }
    dend_8 { pt3dadd( 36.016, 264.903, 36.3743, 0.83 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 39/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -14.3042, -121.81, -27.0608, 0.55 ) }
    dend_44 { pt3dadd( -13.6408, -122.742, -27.5149, 0.55 ) }
    dend_44 { pt3dadd( -12.9712, -123.685, -27.9448, 0.55 ) }
    dend_44 { pt3dadd( -11.8479, -125.327, -28.6452, 0.55 ) }
    dend_44 { pt3dadd( -10.7549, -126.912, -29.3221, 0.55 ) }
    dend_44 { pt3dadd( -10.005, -127.967, -29.7579, 0.55 ) }
    dend_44 { pt3dadd( -9.26731, -128.981, -30.1593, 0.55 ) }
    dend_44 { pt3dadd( -8.11733, -130.682, -30.7663, 0.55 ) }
    dend_44 { pt3dadd( -7.29006, -131.92, -31.1617, 0.55 ) }
    dend_44 { pt3dadd( -6.92229, -132.5, -31.3237, 0.55 ) }
    dend_44 { pt3dadd( -5.76827, -134.392, -31.8062, 0.83 ) }
    dend_44 { pt3dadd( -4.97557, -135.711, -32.1431, 0.55 ) }
    dend_44 { pt3dadd( -3.93073, -137.363, -32.5519, 0.55 ) }
    dend_44 { pt3dadd( -3.10637, -138.677, -32.8639, 0.55 ) }
    dend_44 { pt3dadd( -2.09781, -140.312, -33.2315, 0.55 ) }
    dend_44 { pt3dadd( -0.858745, -142.379, -33.6709, 0.55 ) }
    dend_44 { pt3dadd( -0.0901384, -143.702, -33.9575, 0.55 ) }
    dend_44 { pt3dadd( 0.633186, -144.985, -34.2497, 0.55 ) }
    dend_44 { pt3dadd( 1.10954, -145.837, -34.4316, 0.55 ) }
    dend_44 { pt3dadd( 1.45098, -146.552, -34.5465, 0.28 ) }
    dend_44 { pt3dadd( 1.65057, -147.085, -34.5899, 0.55 ) }
    dend_44 { pt3dadd( 1.83726, -147.708, -34.6285, 0.28 ) }
    dend_44 { pt3dadd( 2.05237, -148.649, -34.6982, 0.55 ) }
    dend_44 { pt3dadd( 2.37473, -150.028, -34.8433, 0.28 ) }
    dend_44 { pt3dadd( 2.78777, -151.488, -34.9731, 0.55 ) }
    dend_44 { pt3dadd( 3.19862, -152.838, -35.0986, 0.55 ) }
    dend_44 { pt3dadd( 3.5137, -153.907, -35.2088, 0.55 ) }
    dend_44 { pt3dadd( 3.95615, -155.262, -35.3795, 0.55 ) }
    dend_44 { pt3dadd( 4.35306, -156.471, -35.4786, 0.55 ) }
    dend_44 { pt3dadd( 4.96509, -158.39, -35.6838, 0.83 ) }
    dend_44 { pt3dadd( 5.30892, -159.44, -35.791, 0.28 ) }
    dend_44 { pt3dadd( 5.77331, -160.999, -35.9399, 0.28 ) }
    dend_44 { pt3dadd( 6.18309, -162.525, -36.0797, 0.28 ) }
    dend_44 { pt3dadd( 6.95769, -165.558, -36.3743, 0.55 ) }
    dend_44 { pt3dadd( 7.48553, -167.773, -36.6188, 1.66 ) }
    dend_44 { pt3dadd( 8.06222, -170.201, -36.9178, 0.55 ) }
    dend_44 { pt3dadd( 8.65227, -172.544, -37.203, 0.55 ) }
    dend_44 { pt3dadd( 9.29903, -175.175, -37.5277, 0.28 ) }
    dend_44 { pt3dadd( 9.73552, -177.189, -37.7841, 0.55 ) }
    dend_44 { pt3dadd( 10.1767, -179.413, -38.0729, 0.28 ) }
    dend_44 { pt3dadd( 10.4009, -180.723, -38.1816, 0.83 ) }
    dend_44 { pt3dadd( 10.6393, -182.408, -38.2951, 0.55 ) }
    dend_44 { pt3dadd( 10.8574, -184.021, -38.3582, 0.55 ) }
    dend_44 { pt3dadd( 10.987, -185.622, -38.3843, 0.83 ) }
    dend_44 { pt3dadd( 11.0485, -187.218, -38.3917, 0.28 ) }
    dend_44 { pt3dadd( 11.0485, -187.218, -38.3917, 0.55 ) }
    dend_44 { pt3dadd( 11.0262, -188.244, -38.4288, 0.28 ) }
    dend_44 { pt3dadd( 11.0089, -188.634, -38.4483, 0.55 ) }
    dend_44 { pt3dadd( 11.0159, -189.737, -38.5528, 0.28 ) }
    dend_44 { pt3dadd( 11.0667, -190.715, -38.7148, 0.55 ) }
    dend_44 { pt3dadd( 11.2238, -192.501, -39.1656, 0.28 ) }
    dend_44 { pt3dadd( 11.2717, -192.931, -39.2757, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 91/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -14.3042, -121.81, -27.0608, 0.55 ) }
    dend_41 { pt3dadd( -14.0474, -123.649, -27.1124, 0.55 ) }
    dend_41 { pt3dadd( -13.9374, -124.551, -27.1233, 0.28 ) }
    dend_41 { pt3dadd( -13.7988, -125.481, -27.1307, 0.55 ) }
    dend_41 { pt3dadd( -13.2837, -128.209, -27.1613, 0.28 ) }
    dend_41 { pt3dadd( -13.2143, -128.508, -27.187, 0.55 ) }
    dend_41 { pt3dadd( -12.6119, -130.847, -27.4727, 0.28 ) }
    dend_41 { pt3dadd( -12.2992, -131.901, -27.6285, 0.55 ) }
    dend_41 { pt3dadd( -11.8767, -133.338, -27.8764, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_41 { pt3dadd( -11.3748, -135.264, -28.2503, 0.55 ) }
    dend_41 { pt3dadd( -10.7759, -137.925, -28.8242, 0.28 ) }
    dend_41 { pt3dadd( -10.6704, -138.572, -28.9796, 0.55 ) }
    dend_41 { pt3dadd( -10.5977, -140.053, -29.3616, 0.28 ) }
    dend_41 { pt3dadd( -10.5836, -140.691, -29.5341, 0.55 ) }
    dend_41 { pt3dadd( -10.7094, -142.481, -30.0085, 0.28 ) }
    dend_41 { pt3dadd( -10.8653, -143.345, -30.2132, 0.55 ) }
    dend_41 { pt3dadd( -11.3459, -145.059, -30.4864, 0.28 ) }
    dend_41 { pt3dadd( -11.9991, -147.139, -30.8823, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_33 (entry count 9/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -41.6726, -182.214, 22.9126, 0.55 ) }
    dend_39 { pt3dadd( -42.5012, -183.804, 22.346, 0.55 ) }
    dend_39 { pt3dadd( -44.6315, -187.891, 20.8895, 0.55 ) }
    dend_39 { pt3dadd( -46.9451, -192.329, 19.3076, 0.55 ) }
    dend_39 { pt3dadd( -48.5342, -195.378, 18.2212, 0.55 ) }
    dend_39 { pt3dadd( -55.5132, -206.208, 14.9549, 0.55 ) }
    dend_39 { pt3dadd( -62.5528, -216.959, 11.5248, 0.55 ) }
    dend_39 { pt3dadd( -72.502, -225.614, 8.86, 0.55 ) }
    dend_39 { pt3dadd( -82.6743, -233.681, 5.1671, 0.55 ) }
    dend_39 { pt3dadd( -93.3017, -241.175, 1.42537, 0.55 ) }
    dend_39 { pt3dadd( -105.08, -247.636, -0.55435, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 20/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -41.6726, -182.214, 22.9126, 0.55 ) }
    dend_34 { pt3dadd( -42.2733, -183.606, 23.2937, 0.55 ) }
    dend_34 { pt3dadd( -42.8685, -185.387, 23.7576, 0.55 ) }
    dend_34 { pt3dadd( -44.1702, -189.28, 24.7719, 0.55 ) }
    dend_34 { pt3dadd( -45.4256, -193.036, 25.7502, 0.55 ) }
    dend_34 { pt3dadd( -46.2701, -195.562, 26.4084, 0.55 ) }
    dend_34 { pt3dadd( -47.1122, -198.081, 27.0646, 0.55 ) }
    dend_34 { pt3dadd( -48.1602, -201.242, 27.9681, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 28/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -11.9991, -147.139, -30.8823, 0.28 ) }
    dend_43 { pt3dadd( -13.1024, -150.475, -31.8559, 0.28 ) }
    dend_43 { pt3dadd( -13.3969, -151.508, -32.1742, 0.55 ) }
    dend_43 { pt3dadd( -14.2396, -154.388, -33.0767, 0.28 ) }
    dend_43 { pt3dadd( -14.6253, -155.706, -33.4899, 0.55 ) }
    dend_43 { pt3dadd( -15.4957, -158.68, -34.4219, 0.28 ) }
    dend_43 { pt3dadd( -16.0886, -160.705, -35.0569, 0.83 ) }
    dend_43 { pt3dadd( -16.5612, -162.847, -35.7981, 0.28 ) }
    dend_43 { pt3dadd( -16.8711, -164.445, -36.3645, 0.83 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 37/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -11.9991, -147.139, -30.8823, 0.55 ) }
    dend_42 { pt3dadd( -11.9777, -148.781, -30.417, 0.55 ) }
    dend_42 { pt3dadd( -11.9525, -151.067, -29.6475, 0.55 ) }
    dend_42 { pt3dadd( -12.0045, -153.607, -28.8628, 0.55 ) }
    dend_42 { pt3dadd( -12.0395, -155.344, -28.3439, 0.55 ) }
    dend_42 { pt3dadd( -12.0601, -156.666, -27.9663, 0.28 ) }
    dend_42 { pt3dadd( -12.1298, -159.184, -27.297, 0.55 ) }
    dend_42 { pt3dadd( -12.222, -161.821, -26.6067, 0.28 ) }
    dend_42 { pt3dadd( -12.3255, -164.939, -26.0426, 0.55 ) }
    dend_42 { pt3dadd( -12.3907, -166.687, -25.8516, 0.28 ) }
    dend_42 { pt3dadd( -12.4716, -167.964, -25.7955, 0.55 ) }
    dend_42 { pt3dadd( -12.5916, -169.383, -25.7752, 0.28 ) }
    dend_42 { pt3dadd( -12.7057, -170.636, -25.8089, 0.55 ) }
    dend_42 { pt3dadd( -12.9451, -173.895, -26.1396, 0.28 ) }
    dend_42 { pt3dadd( -13.1223, -176.615, -26.5067, 0.28 ) }
    dend_42 { pt3dadd( -13.2635, -178.265, -26.7924, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 53/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -48.1602, -201.242, 27.9681, 0.28 ) }
    dend_36 { pt3dadd( -45.4661, -201.862, 28.6765, 0.28 ) }
    dend_36 { pt3dadd( -44.7513, -202.026, 28.8645, 0.55 ) }
    dend_36 { pt3dadd( -42.7007, -202.497, 29.4037, 0.28 ) }
    dend_36 { pt3dadd( -41.3175, -202.815, 29.7674, 0.55 ) }
    dend_36 { pt3dadd( -39.159, -203.311, 30.3351, 0.28 ) }
    dend_36 { pt3dadd( -38.1308, -203.548, 30.6054, 0.55 ) }
    dend_36 { pt3dadd( -26.4532, -207.184, 33.1347, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 61/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -48.1602, -201.242, 27.9681, 0.55 ) }
    dend_35 { pt3dadd( -48.6196, -204.125, 27.9159, 0.55 ) }
    dend_35 { pt3dadd( -48.7274, -212.838, 28.7608, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 64/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -26.4532, -207.184, 33.1347, 0.55 ) }
    dend_38 { pt3dadd( -21.2143, -208.828, 32.5814, 0.55 ) }
    dend_38 { pt3dadd( -15.7724, -209.781, 32.2536, 0.55 ) }
    dend_38 { pt3dadd( -10.2939, -210.52, 31.9349, 0.55 ) }
    dend_38 { pt3dadd( -4.81638, -210.273, 31.15, 0.55 ) }
    dend_38 { pt3dadd( 0.714744, -209.998, 31.0484, 0.55 ) }
    dend_38 { pt3dadd( 6.10243, -208.922, 30.4552, 0.55 ) }
    dend_38 { pt3dadd( 11.3111, -207.165, 30.7654, 0.55 ) }
    dend_38 { pt3dadd( 15.9728, -204.354, 31.1303, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 73/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -26.4532, -207.184, 33.1347, 0.55 ) }
    dend_37 { pt3dadd( -16.2869, -210.274, 32.4933, 0.55 ) }
    dend_37 { pt3dadd( -6.21047, -213.476, 33.6847, 0.55 ) }
    dend_37 { pt3dadd( 4.00063, -215.705, 35.8077, 0.55 ) }
    dend_37 { pt3dadd( 14.4348, -217.909, 36.0241, 0.55 ) }
    dend_37 { pt3dadd( 24.276, -221.642, 37.4522, 0.55 ) }
    dend_37 { pt3dadd( 33.5547, -226.69, 37.1757, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_28, dend_19, dend_0, dend_54, dend_29, dend_27, dend_20, dend_12, dend_1, dend_56, dend_55, dend_49, dend_30, dend_24, dend_21, dend_16, dend_13, dend_11, dend_2, dend_60, dend_57, dend_51, dend_50, dend_46, dend_31, dend_26, dend_25, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_6, dend_3, dend_62, dend_61, dend_59, dend_58, dend_53, dend_52, dend_48, dend_47, dend_45, dend_32, dend_10, dend_7, dend_5, dend_4, dend_40, dend_33, dend_9, dend_8, dend_44, dend_41, dend_39, dend_34, dend_43, dend_42, dend_36, dend_35, dend_38, dend_37]}
    ModelViewParmSubset_2 = new SectionList()
    dend_28 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_28, dend_19, dend_0, dend_54, dend_29, dend_27, dend_20, dend_12, dend_1, dend_56, dend_55, dend_49, dend_30, dend_24, dend_21, dend_16, dend_13, dend_11, dend_2, dend_60, dend_57, dend_51, dend_50, dend_46, dend_31, dend_26, dend_25, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_6, dend_3, dend_62, dend_61, dend_59, dend_58, dend_53, dend_52, dend_48, dend_47, dend_45, dend_32, dend_10, dend_7, dend_5, dend_4, dend_40, dend_33, dend_9, dend_8, dend_44, dend_41, dend_39, dend_34, dend_43, dend_42, dend_36, dend_35, dend_38, dend_37]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_60 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_6 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_62 ModelViewParmSubset_3.append()
    dend_61 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_27 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_20 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_55 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_49 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_24 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_21 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_16 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_13 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_60 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_57 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_51 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_50 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_6 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_3 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_62 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_61 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_48 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_47 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_7 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_4 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_40 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_33 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_44 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_39 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_38 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_37 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_19 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_12 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_28 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_29 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_11 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_54 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_56 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_30 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_31 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_32 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_46 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_45 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_41 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_5 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_43 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_58 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_10 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_59 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_42 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_34 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_15 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_14 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_35 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_52 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_36 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_25 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_18 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_17 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_26 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_23 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_22 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_9 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_8 OneSecGrp_SectionRef_56.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_28, dend_28, dend_28, dend_19, dend_19, dend_0, axon_0, axon_0, dend_54, dend_54, dend_54, dend_54, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_12, dend_12, dend_1, dend_1, dend_1, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_30, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_23, dend_22, dend_18, dend_17, dend_15, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_58, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_32, dend_32, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_9, dend_8, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    axon_1 all.append()
    axon_1 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_27 nseg = 9
    dend_20 nseg = 3
    dend_55 nseg = 9
    dend_49 nseg = 3
    dend_24 nseg = 9
    dend_21 nseg = 9
    dend_16 nseg = 11
    dend_13 nseg = 11
    dend_60 nseg = 3
    dend_57 nseg = 7
    dend_51 nseg = 7
    dend_50 nseg = 3
    dend_6 nseg = 7
    dend_3 nseg = 5
    dend_62 nseg = 5
    dend_61 nseg = 5
    dend_48 nseg = 7
    dend_47 nseg = 5
    dend_7 nseg = 5
    dend_4 nseg = 3
    dend_40 nseg = 3
    dend_33 nseg = 7
    dend_44 nseg = 3
    dend_39 nseg = 5
    dend_38 nseg = 3
    dend_37 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L23_ChC_2a16475c82_0_0


