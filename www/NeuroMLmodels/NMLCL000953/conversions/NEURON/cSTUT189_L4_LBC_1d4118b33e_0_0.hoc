// Cell: cSTUT189_L4_LBC_1d4118b33e_0_0
/*
{
  "id" : "cSTUT189_L4_LBC_1d4118b33e_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.249825, 8.0397, -0.595555, 3.11201", "0.290738, 7.07177, -0.519528, 5.39316", "0.331651, 6.10384, -0.443501, 8.6287", "0.372564, 5.13592, -0.367474, 11.3904", "0.413476, 4.16799, -0.291447, 13.019", "0.454389, 3.20006, -0.215419, 13.3273", "0.495302, 2.23214, -0.139392, 13.3013", "0.536214, 1.26421, -0.0633652, 13.2159", "0.577127, 0.296285, 0.0126619, 13.0569", "0.61804, -0.671641, 0.0886891, 12.4161", "0.658952, -1.63957, 0.164716, 11.4623", "0.699865, -2.60749, 0.240743, 10.5802", "0.740778, -3.57542, 0.31677, 9.69807", "0.78169, -4.54335, 0.392798, 8.81594", "0.822603, -5.51127, 0.468825, 7.87592", "0.863516, -6.4792, 0.544852, 6.92606", "0.904428, -7.44713, 0.620879, 5.96715", "0.945341, -8.41505, 0.696906, 5.00824", "0.986254, -9.38298, 0.772933, 4.04933", "1.02717, -10.3509, 0.84896, 3.09042", "1.06808, -11.3188, 0.924988, 1.90631" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "0.470259, -13.0398, 4.01899, 2.0", "0.244267, -16.5463, 5.317, 2.0", "0.0229438, -19.9802, 6.58819, 2.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000081952127813
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "7.00026, 2.24014, -2.58101, 1.33", "9.10165, 4.40382, -2.20963, 1.33", "10.4351, 5.7768, -1.97397, 1.33", "12.0166, 7.40519, -1.69447, 1.33", "12.4951, 7.89786, -1.60991, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000081952127813
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "6.92026, 0.460142, 5.51899, 1.33", "10.3754, 1.55957, 6.20162, 1.33", "15.8088, 3.43875, 7.13906, 1.33", "20.5586, 5.27766, 7.78064, 1.33", "30.5728, 9.37376, 8.71783, 0.67", "33.8555, 10.4849, 8.95816, 0.67", "36.9105, 11.519, 9.18184, 0.67", "40.9034, 12.8732, 9.37828, 1.33", "47.3007, 15.1128, 9.43067, 0.67", "58.6197, 19.1505, 9.49135, 0.67", "71.6898, 23.0581, 9.51833, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000081952127813,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "4.11026, -2.55985, 5.51899, 1.33", "7.9914, -3.25954, 7.03809, 1.33", "11.7131, -3.93048, 8.4948, 1.33", "15.2094, -4.56077, 9.86326, 0.33", "22.941, -6.9697, 11.6111, 0.33", "30.6323, -9.53495, 13.3136, 0.33", "38.6393, -11.6128, 13.7669, 0.33", "46.8303, -12.8402, 13.5753, 0.33", "55.0907, -12.7795, 14.207, 0.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000081952127813,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-5.96974, 2.65014, 2.81899, 1.33", "-9.07326, 4.58393, 2.4766, 0.67", "-10.8687, 5.70266, 2.27852, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000081952127813
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.88974, 6.85014, 1.31899, 2.67", "-2.1859, 14.0916, -0.93055, 2.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000081952127813
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.06808, -11.3188, 0.924988, 1.33", "1.70154, -26.3054, 0.924988, 1.33", "2.335, -41.292, 0.924988, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "0.0229438, -19.9802, 6.58819, 2.0", "-0.200891, -22.8579, 7.47679, 2.0", "-0.720867, -29.5427, 9.54105, 1.33", "-0.999813, -33.1288, 10.6484, 1.33", "-1.31853, -37.2263, 11.9137, 1.33", "-1.90531, -44.7699, 14.2432, 1.33", "-2.35987, -50.6138, 16.0477, 1.33" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "0.0229438, -19.9802, 6.58819, 1.33", "1.8489, -23.1584, 7.20317, 1.33", "3.64781, -26.2895, 7.80904, 1.33", "4.20893, -27.2662, 7.99803, 1.33", "5.24622, -29.0716, 8.34739, 2.0" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "12.4951, 7.89786, -1.60991, 0.67", "15.7087, 9.76566, -2.24476, 0.67", "18.5897, 11.4401, -2.8139, 0.67", "20.1862, 12.3681, -3.12929, 0.33" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "12.4951, 7.89786, -1.60991, 0.67", "18.3749, 12.8588, -3.17522, 0.67", "22.492, 16.3324, -4.27124, 1.33", "25.375, 18.7648, -5.03874, 0.67", "30.3689, 22.9783, -6.36821, 1.33" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "71.6898, 23.0581, 9.51833, 0.67", "76.0297, 22.5628, 9.50733, 0.67", "77.6233, 22.4749, 9.50996, 0.33", "79.231, 22.3914, 9.55124, 0.67", "80.5194, 22.3439, 9.60232, 0.33", "81.5325, 22.3422, 9.64752, 0.33", "82.0332, 22.3086, 9.63898, 0.67", "83.7918, 22.0138, 9.5727, 0.33", "85.5794, 21.6579, 9.45794, 1.33", "87.3183, 21.2777, 9.32257, 0.67", "88.416, 21.0019, 9.23448, 0.33", "92.21, 19.8361, 8.95666, 0.67", "94.9756, 18.8613, 8.74926, 1.33", "97.3101, 17.9149, 8.57987, 0.33", "98.0485, 17.5881, 8.53988, 0.67", "99.2072, 17.0367, 8.5422, 0.33", "100.573, 16.3836, 8.62567, 0.67", "102.451, 15.5457, 8.88722, 0.33", "103.421, 15.1269, 9.01638, 0.33", "105.736, 14.2377, 9.36556, 1.33", "108.443, 13.3103, 9.79107, 0.33", "109.365, 13.0364, 9.93816, 0.67", "110.745, 12.7129, 10.155, 0.33", "113.592, 12.15, 10.5718, 1.33", "116.339, 11.5861, 11.0545, 0.33", "118.338, 11.1602, 11.4434, 0.67", "121.166, 10.5536, 12.0238, 0.33", "122.399, 10.2811, 12.305, 0.33", "123.373, 10.0597, 12.5465, 0.67", "130.978, 8.11802, 14.7176, 0.33", "131.973, 7.83865, 15.0122, 0.67", "133.141, 7.4832, 15.3937, 0.33", "134.314, 7.10728, 15.8182, 0.67", "136.017, 6.51917, 16.4901, 0.33", "136.915, 6.22485, 16.8796, 0.33", "147.29, 3.54776, 16.8479, 0.33" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "71.6898, 23.0581, 9.51833, 0.33", "73.6855, 21.1369, 9.12667, 0.33", "74.2212, 20.6066, 9.06574, 0.67", "75.6818, 19.0923, 8.78297, 0.33", "76.1811, 18.524, 8.68415, 0.33", "76.5854, 17.9112, 8.55094, 0.67", "77.2581, 16.682, 8.28921, 0.33", "77.5464, 15.9916, 8.13977, 0.67", "78.897, 12.3772, 7.28063, 0.33", "79.2626, 11.2635, 6.99438, 0.67", "80.3181, 7.95481, 6.08357, 0.33", "80.6526, 6.81854, 5.7527, 1.33", "81.4392, 3.80555, 4.82623, 0.33", "81.8661, 1.6896, 4.18248, 0.67", "87.7265, -5.93604, 1.18043, 0.67", "93.823, -13.7809, -0.492318, 0.67", "100.6, -21.2276, -0.839818, 0.67" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "55.0907, -12.7795, 14.207, 0.67", "63.9242, -17.5594, 14.7875, 0.67", "72.6649, -21.9811, 17.0823, 0.67" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "55.0907, -12.7795, 14.207, 0.33", "63.9108, -12.7725, 15.9546, 0.67", "72.4437, -11.4337, 18.4536, 0.67" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-10.8687, 5.70266, 2.27852, 0.67", "-15.6606, 5.01729, 5.05918, 0.67", "-19.1733, 4.20616, 6.85517, 0.67", "-22.2246, 3.50159, 8.41521, 0.67", "-27.5831, 2.26423, 11.1549, 0.67", "-31.3922, 1.38467, 13.1025, 0.67", "-36.3668, 0.235971, 15.6459, 0.67", "-39.4666, -0.627004, 17.1317, 0.67" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-10.8687, 5.70266, 2.27852, 0.67", "-12.1498, 7.42995, 2.03545, 0.67", "-13.8186, 10.1073, 1.21712, 0.67", "-14.7579, 11.4933, 0.645902, 0.67", "-15.92, 13.2046, -0.0864966, 0.67", "-17.0251, 14.8911, -0.794668, 0.67", "-18.8038, 17.8265, -2.10769, 0.67", "-20.1957, 20.1528, -3.28372, 0.67", "-21.6021, 22.3518, -4.55905, 0.33", "-22.7854, 24.2167, -5.65429, 0.33", "-23.3719, 25.1084, -6.19535, 0.67", "-24.6124, 26.8139, -7.22311, 0.33", "-26.4071, 28.703, -8.47332, 0.33", "-28.4635, 30.6052, -9.84723, 0.33", "-29.2049, 31.1926, -10.417, 0.67", "-30.3229, 31.9252, -11.3064, 0.33", "-30.5277, 32.0378, -11.4684, 0.67", "-33.6102, 33.537, -13.8768, 0.33", "-34.9584, 34.1863, -15.005, 1.33", "-37.3793, 35.2132, -17.051, 0.33", "-37.8093, 35.3906, -17.4281, 0.67", "-42.4622, 37.2996, -21.6109, 0.33", "-43.7065, 37.8183, -22.6978, 0.67" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-2.1859, 14.0916, -0.93055, 2.0", "-4.59187, 16.0542, -0.459008, 2.0" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-2.1859, 14.0916, -0.93055, 2.0", "-1.26355, 16.9435, 1.04151, 2.0", "-0.0228186, 20.78, 3.69429, 1.33", "0.774753, 23.2461, 5.39956, 0.67", "1.04303, 24.0757, 5.97314, 1.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "2.335, -41.292, 0.924988, 0.67", "2.96846, -56.2787, 0.924988, 0.67", "3.60193, -71.2653, 0.924988, 0.67" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "-2.35987, -50.6138, 16.0477, 1.33", "-1.53545, -55.9769, 15.5168, 1.33", "-0.954999, -60.3454, 15.1152, 1.33", "-0.339117, -64.2122, 14.9998, 1.33", "0.282446, -68.3585, 14.8258, 1.33", "0.722422, -72.3273, 14.6605, 1.33", "1.09396, -76.1798, 14.5037, 1.33", "1.4288, -80.9497, 14.3729, 1.33", "1.82329, -90.7132, 14.3382, 1.33", "2.2007, -104.234, 14.4179, 1.33", "2.43062, -113.153, 14.4095, 1.33", "2.51433, -118.169, 14.3541, 1.33", "2.49477, -126.862, 14.1445, 1.33", "2.40293, -132.401, 13.9718, 1.33", "2.20643, -137.229, 13.755, 1.33", "1.72375, -148.756, 13.3539, 1.33", "1.59227, -154.568, 13.0286, 1.33", "1.43175, -160.74, 12.4981, 1.33" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "-2.35987, -50.6138, 16.0477, 0.67", "-3.75845, -51.8039, 15.8125, 0.67", "-4.39107, -52.4765, 15.6328, 0.67", "-5.36894, -53.4574, 15.4, 0.67", "-6.02237, -54.1128, 15.2444, 0.67", "-6.87276, -54.9658, 15.0419, 0.67", "-8.47241, -56.5704, 14.6611, 0.33", "-9.53211, -57.8321, 14.2901, 0.67", "-11.0809, -59.7983, 13.682, 0.67" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "5.24622, -29.0716, 8.34739, 0.67", "7.19063, -31.5389, 6.1015, 0.67", "8.08889, -32.7302, 5.17162, 0.67", "12.3081, -39.0831, 0.916835, 0.67", "15.0038, -43.4448, -2.00016, 0.67", "17.9016, -48.1077, -5.01354, 0.33", "19.4111, -50.5915, -6.53674, 1.33", "20.5504, -52.484, -7.53574, 1.33", "22.6313, -56.4807, -9.27999, 0.67", "24.2552, -60.7141, -10.3647, 0.67", "25.1596, -63.5761, -10.6966, 0.67", "25.8289, -65.9806, -10.8135, 0.67", "27.6476, -71.8866, -10.5134, 0.67", "28.7191, -75.077, -9.88705, 0.33", "30.7012, -80.3408, -7.93465, 0.67", "31.8112, -83.0773, -6.6754, 0.33", "33.9735, -87.5292, -4.95092, 0.67", "37.293, -92.8207, -3.58921, 0.33", "37.655, -93.3013, -3.54914, 2.0", "39.3436, -95.4643, -3.78337, 0.33", "40.9757, -97.5197, -4.33035, 1.33", "44.279, -101.861, -5.89549, 0.33", "46.5643, -105.238, -7.22604, 0.67", "47.7808, -107.038, -8.30211, 0.33", "48.546, -108.178, -9.00813, 0.67" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "5.24622, -29.0716, 8.34739, 0.67", "5.9624, -30.0434, 3.7251, 0.67", "6.6139, -31.0932, -0.259988, 0.67", "7.17799, -32.1428, -3.72361, 0.67", "7.67887, -33.165, -6.61313, 0.67", "8.18718, -34.2062, -9.19307, 1.33", "8.82097, -35.5592, -12.208, 0.33", "9.05493, -36.0685, -13.0791, 1.33", "10.2548, -38.5225, -16.8207, 0.33", "10.6009, -39.491, -18.0803, 0.33", "10.9144, -40.4583, -19.2459, 0.33", "11.134, -41.0786, -19.8787, 0.67", "12.3704, -44.1598, -22.5861, 0.33", "12.4789, -44.3801, -22.7562, 0.67", "13.0969, -45.333, -23.3636, 0.33", "13.4251, -45.7331, -23.6246, 1.33", "15.0045, -47.4982, -24.7747, 0.33", "15.7872, -48.2641, -25.2258, 2.0", "17.3865, -49.6244, -25.7866, 0.33", "18.9842, -50.8674, -26.3486, 0.33", "19.9201, -51.4775, -26.6647, 2.0" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "20.1862, 12.3681, -3.12929, 0.67", "22.9114, 14.1408, -3.61136, 0.67", "24.2359, 14.9428, -3.78723, 0.33", "25.6067, 15.6106, -3.79084, 0.67", "28.135, 16.5398, -3.63823, 0.33", "29.9099, 17.0622, -3.47995, 2.0", "31.3817, 17.4788, -3.33087, 0.33", "34.3997, 18.061, -2.84073, 0.33", "37.36, 18.56, -2.22269, 0.67", "39.4328, 18.9052, -1.69986, 0.33", "40.0737, 19.0279, -1.51443, 0.67", "43.1334, 19.791, -0.586145, 0.33", "44.9138, 20.3439, 0.0898199, 1.33", "46.5639, 21.023, 0.885101, 0.33", "47.4024, 21.5311, 1.39686, 0.67", "48.9589, 22.6394, 2.49902, 0.33", "50.5277, 23.869, 3.76559, 1.33", "52.4463, 25.5918, 5.78381, 0.67", "53.4256, 26.6992, 7.03313, 0.33", "53.9406, 27.5532, 8.04194, 0.67", "61.3592, 32.7463, 9.41511, 0.67", "69.8942, 36.0388, 8.96474, 0.67" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "20.1862, 12.3681, -3.12929, 0.33", "21.9086, 11.9099, -4.0779, 0.33", "23.0458, 11.6146, -4.65341, 0.67", "24.7189, 11.2537, -5.63297, 0.33", "25.0689, 11.1853, -5.84185, 0.33", "25.7378, 11.1043, -6.29079, 2.0", "26.9622, 10.9977, -7.14015, 0.33", "27.505, 10.9873, -7.54394, 0.67", "29.1529, 11.0144, -8.97662, 0.33", "29.5537, 11.0273, -9.35198, 0.67", "30.9964, 11.0241, -10.806, 0.33", "31.3565, 10.9933, -11.2131, 2.0", "32.4144, 10.8265, -12.4898, 0.33", "32.736, 10.7425, -12.8816, 0.67", "33.363, 10.4953, -13.6011, 0.33", "34.0827, 10.1541, -14.2777, 1.33", "35.3241, 9.49956, -15.2435, 0.33", "35.4472, 9.43976, -15.3282, 0.67", "36.0049, 9.17976, -15.6095, 0.33", "36.1956, 9.09446, -15.7, 0.67", "38.1794, 8.31007, -16.4731, 0.33", "39.8947, 7.70556, -16.8432, 0.67", "40.6687, 7.4769, -16.8924, 0.33", "41.4603, 7.23961, -16.9459, 0.67" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "30.3689, 22.9783, -6.36821, 0.67", "32.1633, 28.0413, -5.5867, 0.67", "34.2675, 33.8108, -4.96786, 0.67", "35.8016, 37.9291, -4.63543, 0.67", "36.53, 39.7064, -4.55477, 0.33", "38.0864, 43.4714, -4.4993, 0.67", "39.5407, 46.9197, -4.52124, 0.67", "40.6306, 49.1183, -4.8047, 0.67", "41.0654, 49.9136, -4.96877, 0.33", "42.3001, 52.0836, -5.56194, 0.67", "43.5487, 54.2721, -6.15923, 0.33", "44.3506, 55.5697, -6.48657, 0.33", "46.9751, 59.361, -7.18415, 0.67", "48.7123, 61.8915, -7.54866, 0.33", "49.666, 63.3297, -7.68545, 0.33", "50.3505, 64.427, -7.72578, 0.33", "51.5631, 66.2787, -7.75964, 0.33", "52.4393, 67.7086, -7.75589, 0.67", "53.2447, 69.0383, -7.68753, 0.33", "53.7847, 69.9972, -7.64751, 0.67", "54.4994, 71.3742, -7.72405, 0.33", "55.5109, 73.3155, -8.00155, 0.67", "56.0115, 74.3785, -8.29748, 0.33", "56.5622, 75.548, -8.73229, 0.67", "57.3681, 77.1729, -9.38138, 0.33", "58.245, 79.0346, -10.1314, 0.67", "58.9644, 80.6183, -10.7283, 0.67", "59.6809, 82.2723, -11.4303, 0.33", "60.1369, 83.3184, -11.8886, 0.67", "60.7777, 84.9096, -12.6017, 0.33", "61.3897, 86.3831, -13.2501, 0.67", "62.0259, 88.0937, -13.9315, 0.33", "62.9936, 90.8948, -15.0116, 0.33", "63.2857, 91.6572, -15.3169, 1.33", "65.5454, 97.2541, -17.6171, 0.33", "65.8837, 98.0228, -17.9758, 1.33", "66.8616, 100.134, -19.0144, 0.33", "67.2885, 101.056, -19.4616, 0.67", "69.5035, 105.3, -21.5465, 0.33", "70.0984, 106.353, -22.0999, 2.0", "71.6723, 108.761, -23.5795, 0.33", "72.4317, 109.865, -24.3039, 0.67", "73.699, 111.563, -25.5144, 0.33", "75.0892, 113.512, -26.9686, 0.67", "76.4164, 115.592, -28.4802, 0.33", "77.5881, 117.403, -29.8491, 1.33" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "30.3689, 22.9783, -6.36821, 0.33", "32.8728, 25.1339, -10.6077, 0.33", "34.9051, 26.9921, -14.7346, 0.67", "35.8529, 27.9257, -16.8249, 0.33", "36.5054, 28.6781, -18.486, 2.67", "38.8751, 31.6481, -25.0704, 0.33", "39.7316, 32.7651, -27.4128, 0.67", "41.2441, 34.7891, -31.8428, 0.33", "41.5772, 35.2727, -32.7751, 0.67", "43.1144, 37.6853, -37.2689, 0.33", "43.7521, 38.7946, -39.3019, 1.33", "44.7866, 40.6198, -42.462, 0.33", "45.1777, 41.2355, -43.4406, 0.67", "47.2177, 44.2264, -47.8445, 0.33", "49.0222, 46.7976, -51.5706, 1.33", "53.619, 53.2624, -60.7967, 0.33", "54.0698, 53.9134, -61.7326, 0.67", "55.801, 56.5092, -65.6299, 0.33", "56.3451, 57.3507, -66.8925, 0.67", "58.5978, 60.7251, -71.8261, 0.33", "59.4769, 62.073, -73.5628, 0.67" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "100.6, -21.2276, -0.839818, 0.33", "107.387, -31.8844, -2.34767, 0.33" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "100.6, -21.2276, -0.839818, 0.33", "105.903, -29.7132, -1.34667, 0.33" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "72.6649, -21.9811, 17.0823, 0.33", "85.0792, -29.0549, 20.6027, 0.33", "96.7085, -36.8804, 25.0825, 0.33", "107.611, -46.1961, 28.3815, 0.33", "119.476, -54.5554, 30.8096, 0.33", "131.611, -61.9941, 34.544, 0.33", "142.845, -69.8407, 39.9088, 0.33", "153.828, -78.2806, 44.8772, 0.33", "164.637, -85.5862, 51.6842, 0.33" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "72.6649, -21.9811, 17.0823, 0.33", "80.499, -25.9925, 18.0399, 0.33", "88.4345, -29.8917, 18.4941, 0.33", "95.4689, -35.1808, 19.455, 0.33", "102.468, -39.9957, 21.945, 0.33", "110.097, -44.3177, 23.1693, 0.33", "118.419, -47.1429, 24.2427, 0.33", "126.795, -49.8891, 23.414, 0.33", "135.338, -51.3975, 21.6491, 0.33" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "72.4437, -11.4337, 18.4536, 0.33", "80.3748, -10.9484, 22.1128, 0.33" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "72.4437, -11.4337, 18.4536, 0.33", "84.1758, -11.1692, 16.4246, 0.33" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-39.4666, -0.627004, 17.1317, 0.67", "-38.0019, -1.99969, 15.7374, 0.67", "-36.3468, -3.55071, 14.1619, 0.33", "-35.044, -4.77163, 12.9217, 0.33", "-33.6721, -6.05733, 11.6158, 0.67", "-26.7821, -10.7971, 7.70664, 0.67", "-20.8935, -15.2832, 2.19133, 0.67", "-16.5245, -20.7183, -3.85776, 0.67", "-10.9978, -26.1673, -8.85616, 0.67", "-6.90336, -33.5427, -12.6056, 0.67" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-39.4666, -0.627004, 17.1317, 0.67", "-42.8208, -0.213338, 18.7309, 0.67", "-52.0605, 0.787032, 21.533, 0.67", "-61.2337, 3.44081, 23.2744, 0.67", "-69.9951, 7.57495, 23.8836, 0.67", "-79.1741, 10.7274, 23.7022, 0.67", "-88.1253, 14.2696, 24.9484, 0.67" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-43.7065, 37.8183, -22.6978, 0.33", "-45.0526, 37.2225, -23.7392, 0.33", "-45.6686, 36.9247, -24.1779, 0.67", "-47.8819, 35.8009, -25.7029, 0.33", "-49.2905, 35.0857, -26.6734, 0.67", "-52.8067, 33.3004, -29.0961, 0.67", "-54.2805, 32.5522, -30.1115, 0.67", "-56.5591, 31.329, -31.8383, 0.33", "-56.8112, 31.1804, -32.0457, 0.67" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-43.7065, 37.8183, -22.6978, 0.33", "-43.2351, 39.1813, -25.4498, 0.33", "-42.4291, 41.512, -30.1557, 0.67", "-41.907, 43.0218, -33.2041, 0.33", "-41.1594, 45.1836, -37.5689, 0.67" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-4.59187, 16.0542, -0.459008, 2.0", "-7.04867, 19.8747, -1.20522, 2.0", "-8.88647, 22.7325, -1.76342, 2.0" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-4.59187, 16.0542, -0.459008, 1.33", "-5.88311, 16.2815, 0.125418, 1.33", "-6.52212, 16.4256, 0.397796, 1.33", "-7.48256, 16.6969, 0.777972, 1.33", "-8.67619, 17.1234, 1.23533, 0.67", "-9.56513, 17.5438, 1.63578, 0.67", "-10.9384, 18.1932, 2.2544, 0.67", "-11.8359, 18.6761, 2.641, 0.67", "-12.6161, 19.1463, 2.98406, 0.67", "-13.272, 19.6318, 3.26388, 0.67", "-14.4901, 20.8234, 3.94776, 0.67" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "1.04303, 24.0757, 5.97314, 0.67", "2.50133, 30.4347, 5.53989, 0.67", "3.35895, 34.0832, 5.28365, 0.67", "4.1958, 37.279, 5.16003, 0.67", "5.54654, 41.8335, 5.08889, 0.67", "7.86727, 48.7938, 5.04146, 0.67", "9.15134, 52.255, 5.04492, 0.33", "10.0019, 54.1003, 5.1573, 0.33", "11.5323, 57.1241, 5.37134, 0.67", "12.918, 59.5086, 5.56417, 0.67", "13.9128, 61.0253, 5.70016, 0.67", "14.9508, 62.3354, 5.83421, 0.33", "15.8036, 63.3715, 5.96047, 0.67", "16.754, 64.7531, 6.00907, 0.33", "17.3129, 65.8117, 5.82267, 0.33", "17.772, 66.9023, 5.55757, 0.67", "18.579, 69.0845, 4.88093, 0.33", "19.3429, 71.1618, 4.15742, 1.33", "20.1525, 73.3313, 3.38768, 0.33", "21.5943, 77.2185, 2.04877, 1.33", "22.9586, 80.8759, 0.862329, 0.33", "23.8844, 83.2265, 0.124061, 1.33", "24.5276, 84.743, -0.324351, 1.33", "25.5504, 87.3377, -1.00595, 0.67", "26.3434, 89.3907, -1.50871, 1.33", "27.0408, 91.2768, -1.83712, 0.33", "27.3469, 92.1165, -2.00978, 0.67", "27.9401, 93.458, -2.38214, 0.33", "28.4168, 94.2853, -2.70968, 0.33", "29.806, 95.9582, -3.65436, 0.67", "30.9015, 97.1007, -4.31773, 0.33", "32.137, 98.4654, -5.05245, 1.33", "34.3929, 101.027, -6.30704, 0.33", "35.5359, 102.449, -6.93784, 2.0", "38.0207, 105.775, -8.25306, 0.33", "39.0941, 107.462, -8.79031, 0.67", "39.7166, 109.822, -9.5448, 0.33", "39.7166, 109.822, -9.5448, 0.67", "39.0762, 111.762, -10.1245, 0.33", "38.4235, 113.241, -10.691, 0.33", "38.1786, 113.892, -10.9825, 0.67", "37.4891, 117.11, -12.4981, 0.33", "37.4448, 119.014, -13.2804, 0.67", "37.7394, 122.808, -14.6201, 0.33", "37.8574, 123.4, -14.7904, 0.67", "39.0457, 127.772, -15.8932, 0.33", "39.7828, 130.192, -16.3393, 0.33", "40.9627, 133.683, -16.7277, 0.67", "42.0751, 136.424, -17.0021, 0.33", "43.4934, 139.541, -17.1592, 0.33", "44.141, 140.925, -17.219, 0.67", "45.237, 143.273, -17.2648, 0.33", "45.6688, 144.175, -17.2868, 0.67", "47.5667, 148.116, -17.3732, 0.33", "48.8325, 150.681, -17.3583, 0.33", "49.4269, 151.997, -17.3527, 1.33", "50.106, 153.67, -17.2404, 0.33", "50.2325, 153.984, -17.226, 0.67", "50.6745, 155.288, -17.1017, 0.33", "50.8656, 156.284, -16.8796, 0.67", "51.3286, 158.976, -16.1173, 0.33", "51.6912, 161.618, -15.2957, 1.33" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "1.04303, 24.0757, 5.97314, 0.67", "3.37917, 26.7, 5.46668, 0.67", "5.1172, 28.4803, 5.2275, 0.67", "6.48167, 29.8722, 5.08359, 0.33", "8.53349, 31.8305, 4.89271, 0.67", "10.9282, 34.1665, 4.68359, 0.67", "12.9222, 36.1426, 4.51535, 0.33", "14.73, 38.0398, 4.30279, 0.67", "16.1377, 39.3967, 4.1854, 0.33", "18.2379, 41.1983, 4.0576, 0.67", "19.8299, 42.5731, 4.00397, 0.33", "20.1077, 42.8447, 4.00323, 0.67", "21.979, 44.6943, 4.0907, 0.33", "25.2014, 47.8678, 4.28464, 0.67", "26.6224, 49.2539, 4.50933, 0.33", "28.1905, 50.7697, 4.86184, 0.33", "30.1869, 52.611, 5.36834, 0.67", "34.2674, 56.3021, 6.48282, 0.67", "36.3684, 58.1584, 6.96865, 0.67", "38.5613, 60.0805, 7.50933, 0.33", "40.053, 61.2888, 7.87112, 0.33", "41.7352, 62.5072, 8.23632, 0.67", "44.6398, 64.5107, 8.74396, 0.33", "47.5217, 66.8, 8.76715, 0.67" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "1.43175, -160.74, 12.4981, 1.33", "1.70037, -162.345, 15.1733, 1.33" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "1.43175, -160.74, 12.4981, 0.33", "2.20123, -163.924, 12.1122, 0.33", "2.62617, -165.652, 11.8937, 0.33", "3.80261, -169.988, 11.5694, 0.33", "4.30399, -171.814, 11.4813, 0.33", "5.92185, -177.605, 10.6127, 0.33", "6.15375, -178.563, 10.4286, 0.33", "6.64532, -180.856, 9.9034, 0.67", "7.61319, -184.604, 8.65499, 0.33", "8.04428, -186.037, 8.05207, 0.67", "9.55922, -191.832, 5.11042, 0.33", "9.96105, -193.926, 3.97796, 0.33", "10.3073, -195.632, 2.9963, 2.0", "11.2445, -200.047, 0.207603, 0.33", "11.5519, -201.53, -0.818662, 2.0", "12.7939, -207.031, -4.57231, 0.33", "13.3695, -209.294, -5.95099, 0.33", "13.7093, -210.416, -6.67159, 0.67" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "-11.0809, -59.7983, 13.682, 0.33", "-11.945, -58.1827, 13.3645, 0.33", "-12.5483, -57.0548, 13.1428, 0.67" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "-11.0809, -59.7983, 13.682, 0.33", "-11.4558, -63.6728, 14.343, 0.33" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "48.546, -108.178, -9.00813, 0.33", "48.581, -109.831, -10.3442, 0.33", "48.6657, -111.908, -11.9115, 0.67", "48.7139, -113.297, -12.7932, 0.33", "48.6231, -115.46, -13.8899, 1.33", "48.4709, -118.328, -15.1283, 0.33", "48.4131, -119.489, -15.6838, 0.33", "48.3877, -120.103, -15.9827, 0.67", "48.2573, -122.672, -17.2615, 0.33", "48.0216, -126.143, -19.1595, 0.33", "47.8974, -127.473, -19.8856, 2.67", "47.4656, -131.702, -22.25, 0.33", "47.3938, -132.342, -22.6536, 0.67", "47.1556, -134.701, -24.3826, 0.33", "47.1556, -134.701, -24.3826, 0.67" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "48.546, -108.178, -9.00813, 0.33", "50.9835, -109.25, -10.5823, 0.33", "52.0966, -109.726, -11.4177, 0.67", "55.3647, -111.124, -13.8706, 0.33", "57.4272, -112.005, -15.4186, 0.67", "59.6628, -112.961, -17.0965, 0.33", "63.7033, -114.689, -20.1291, 0.33", "65.3135, -115.411, -21.4178, 0.33" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "19.9201, -51.4775, -26.6647, 0.33", "22.0579, -52.033, -28.5656, 0.33", "23.3042, -52.4048, -29.7977, 1.33", "24.4433, -52.7851, -30.933, 0.33", "25.0424, -53.0174, -31.6349, 0.67", "27.7791, -54.1542, -34.9604, 0.33", "29.5268, -54.932, -37.2198, 0.67", "32.0216, -56.2454, -40.3745, 0.33", "32.4125, -56.4691, -40.8704, 1.33", "34.713, -57.9489, -43.7943, 0.33", "35.4144, -58.4926, -44.6936, 1.33", "37.2376, -60.1893, -46.9148, 0.67", "38.6483, -61.8405, -48.7515, 0.33", "39.435, -62.8421, -49.6151, 0.33", "40.0823, -63.7662, -50.4276, 0.67", "41.0289, -65.2341, -51.6465, 0.33", "41.2167, -65.5425, -51.9469, 0.67", "42.5361, -67.6448, -54.334, 0.33", "42.9974, -68.3164, -55.2142, 0.67", "44.8955, -70.6685, -58.8252, 0.33", "46.0224, -71.9682, -60.9264, 0.67", "47.8237, -73.8413, -64.2982, 0.33", "48.5111, -74.5495, -65.6264, 0.67", "48.8888, -74.9203, -66.3679, 0.33", "49.7668, -75.8331, -68.1262, 1.33" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "19.9201, -51.4775, -26.6647, 0.33", "21.0562, -52.693, -30.2112, 0.33", "21.2364, -52.8938, -30.8207, 1.33", "22.7471, -54.6565, -36.0501, 0.33", "23.2051, -55.4589, -38.1342, 0.67", "24.0125, -57.3884, -42.7197, 0.33", "24.1193, -57.6435, -43.3261, 0.67", "24.5214, -59.2179, -47.013, 0.33", "24.7134, -60.1014, -49.0982, 1.33", "25.0552, -62.4494, -54.3848, 0.33", "25.0704, -62.9569, -55.4022, 0.67" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-8.88647, 22.7325, -1.76342, 1.33", "-10.2574, 23.3736, -2.01889, 1.33", "-12.4268, 24.3881, -2.42315, 1.33" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-8.88647, 22.7325, -1.76342, 0.67", "-6.38369, 25.6429, -2.83873, 0.67", "-1.90834, 30.8472, -4.76154, 0.67", "0.937139, 34.1561, -5.98408, 0.67", "1.41636, 34.7134, -6.18998, 1.33" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-14.4901, 20.8234, 3.94776, 0.67", "-14.7805, 25.1081, 2.04711, 0.67", "-15.0032, 27.5358, 0.895192, 0.67", "-15.1385, 28.6205, 0.33507, 0.67", "-15.6108, 31.9096, -1.20516, 0.67", "-16.1305, 35.2627, -2.67747, 0.67", "-16.6196, 38.0275, -3.67405, 0.67", "-17.0263, 40.0748, -4.323, 0.33", "-17.4614, 42.0924, -4.83205, 1.33", "-17.9926, 45.0781, -5.27379, 0.33", "-18.2421, 46.9015, -5.33901, 0.67", "-18.7279, 50.5242, -5.13056, 0.33", "-18.9962, 52.9364, -4.86001, 0.33", "-19.0542, 53.8022, -4.75495, 0.67", "-19.1306, 56.1606, -4.4222, 0.33", "-19.1294, 57.7449, -4.29037, 0.67", "-19.0934, 58.6198, -4.23964, 0.33", "-18.9869, 59.565, -4.34213, 0.67", "-18.6446, 66.5559, -6.26611, 0.67" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-14.4901, 20.8234, 3.94776, 0.67", "-15.7948, 23.3638, 4.93354, 0.67", "-17.1235, 25.9509, 5.93743, 0.67", "-18.4177, 28.4709, 6.91526, 0.67", "-22.3945, 35.5378, 9.69611, 0.67", "-26.7537, 42.6887, 11.5266, 0.67", "-32.4213, 48.9548, 12.9768, 0.67", "-38.3347, 54.3915, 15.9706, 0.67", "-44.453, 59.1798, 19.5939, 0.67" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "47.5217, 66.8, 8.76715, 0.33", "48.7699, 67.8072, 8.18003, 0.33", "50.0163, 68.8129, 7.59377, 0.33", "53.0953, 71.2971, 6.14558, 0.67", "54.8778, 72.7354, 5.30715, 0.33", "56.67, 74.1814, 4.4642, 0.67", "58.3066, 75.5019, 3.6944, 0.33", "67.7786, 81.4256, 1.18426, 0.33" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "47.5217, 66.8, 8.76715, 0.33", "48.8614, 66.4086, 9.14937, 0.33", "49.7395, 66.121, 9.38063, 0.67", "52.0981, 65.3081, 9.94014, 0.33", "56.4534, 63.7998, 10.8981, 0.33", "57.097, 63.6042, 11.005, 0.67", "59.0494, 63.0469, 11.2694, 0.33", "59.3685, 62.9516, 11.2988, 0.67", "60.701, 62.5609, 11.3746, 0.33", "61.4246, 62.3497, 11.4037, 0.67", "66.382, 61.0768, 11.6239, 0.33", "68.049, 60.6721, 11.7037, 0.33", "71.3442, 59.9284, 11.8693, 0.67", "74.1616, 59.2867, 12.0209, 0.67", "75.5868, 58.95, 12.1072, 0.67", "85.0495, 55.4586, 12.4786, 0.67" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "1.70037, -162.345, 15.1733, 1.33", "2.11414, -168.068, 13.8716, 1.33", "2.40857, -172.436, 13.2999, 1.33", "2.65179, -175.207, 13.0691, 1.33", "3.02481, -180.309, 12.8044, 0.67", "3.06302, -180.918, 12.7822, 0.67", "3.13492, -182.27, 12.7461, 0.67", "3.19495, -188.437, 12.9151, 0.67", "3.21744, -191.375, 13.0427, 0.67", "3.23774, -194.362, 13.1922, 0.67", "3.23924, -196.927, 13.3575, 0.67", "3.22754, -198.386, 13.4176, 1.33", "3.10953, -201.64, 13.4606, 0.67", "3.01081, -203.378, 13.4725, 0.67", "2.72469, -206.586, 13.5884, 0.67", "2.54767, -208.562, 13.6994, 2.0", "2.17677, -212.413, 13.9799, 0.67", "1.64786, -218.124, 14.4397, 0.67", "1.37595, -220.973, 14.6888, 1.33", "0.936209, -224.5, 15.0604, 0.67", "0.738512, -225.842, 15.2187, 0.67", "0.511898, -227.55, 15.4064, 1.33", "0.289748, -230.232, 15.7266, 0.67", "0.183455, -232.792, 15.9772, 1.33", "0.0346075, -237.436, 16.2923, 0.67", "-0.0427565, -240.101, 16.4346, 0.67", "-0.0862476, -241.641, 16.492, 0.67", "-0.173229, -244.714, 16.5669, 0.67", "-0.252326, -247.621, 16.5913, 0.33", "-0.290343, -250.616, 16.5432, 1.33", "-0.292671, -252.994, 16.4222, 0.67", "-0.293177, -255.318, 16.2167, 0.33", "-0.278765, -256.174, 16.1372, 0.67", "-0.275898, -257.287, 16.0006, 0.33", "-0.205614, -258.635, 15.8784, 1.33", "-0.0157969, -259.97, 15.7386, 0.33", "0.388193, -262.076, 15.5422, 0.67", "0.907481, -264.741, 15.2638, 0.33" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "1.70037, -162.345, 15.1733, 0.67", "0.550014, -164.013, 15.5561, 0.67", "-1.08097, -166.379, 16.0988, 0.67", "-2.32911, -168.189, 16.5141, 0.67", "-3.0059, -169.171, 16.7393, 0.67", "-4.59488, -171.476, 17.2681, 0.33", "-5.57626, -172.899, 17.5946, 0.67" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-12.4268, 24.3881, -2.42315, 0.67", "-13.3021, 21.4986, -2.55509, 0.67", "-14.0314, 19.091, -2.66502, 0.67", "-14.8525, 16.3806, -2.78877, 0.67", "-15.3049, 14.8871, -2.85696, 0.67" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-12.4268, 24.3881, -2.42315, 0.67", "-11.4033, 27.7846, -3.53864, 0.67", "-9.72708, 35.6988, -5.63148, 0.67", "-9.27402, 38.0469, -6.19313, 0.67", "-8.50207, 43.6507, -7.37624, 0.67", "-8.08751, 47.5107, -8.12557, 0.67", "-7.26472, 54.3442, -9.51691, 0.67", "-5.94615, 65.0506, -11.6175, 0.67", "-5.66245, 67.4939, -12.0823, 0.67", "-5.27718, 73.1266, -12.9721, 0.67", "-5.26748, 74.8897, -13.146, 0.33", "-5.5946, 80.5623, -13.7411, 1.33" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "1.41636, 34.7134, -6.18998, 1.33", "1.42346, 36.1519, -5.90643, 1.33", "1.65121, 38.6605, -5.27372, 0.67", "1.87331, 40.0523, -5.01011, 0.67", "2.18075, 41.5631, -4.78644, 0.33", "2.71035, 44.4401, -4.47332, 0.67", "3.3157, 47.869, -4.17753, 0.67", "4.12921, 51.9351, -3.93206, 0.67", "4.71513, 54.4136, -4.02446, 0.33", "4.94116, 55.5245, -4.16286, 0.67", "5.31256, 57.5705, -4.5194, 0.33", "5.4162, 58.327, -4.68111, 0.33", "5.46997, 58.8279, -4.81593, 0.67", "5.57212, 62.2936, -5.58791, 0.67", "5.66405, 65.3747, -6.10978, 0.33", "5.7997, 68.4693, -6.5734, 0.67", "5.90031, 70.2817, -6.83762, 0.33", "5.95139, 72.3897, -7.18823, 0.33", "5.93238, 74.7485, -7.58913, 0.33", "5.81987, 77.3128, -8.08303, 0.67", "5.78208, 78.0139, -8.28028, 0.67", "5.5714, 81.7239, -9.67995, 0.33", "5.52147, 83.1291, -10.225, 0.33", "5.48568, 83.6282, -10.4247, 0.67", "5.26506, 86.6274, -11.6222, 0.33", "5.22973, 87.1163, -11.7944, 1.33", "5.0732, 89.7262, -12.6073, 0.33", "5.00833, 91.912, -13.1237, 0.67", "4.94645, 93.0442, -13.3671, 0.33", "4.85277, 93.9356, -13.5583, 0.67", "4.6912, 94.9545, -13.8158, 0.33", "4.46185, 96.4283, -14.2411, 0.33", "4.08139, 98.7992, -14.9475, 0.33", "3.79945, 100.814, -15.6695, 0.33", "3.7213, 101.588, -15.9329, 0.67", "3.46948, 104.703, -16.9245, 0.33", "3.40813, 106.667, -17.6385, 0.67", "3.43645, 108.527, -18.3178, 0.33", "3.49149, 110.115, -18.8789, 0.67", "3.61002, 112.78, -19.7973, 0.33", "3.64527, 113.678, -20.1088, 0.67", "3.69153, 117.188, -21.2818, 0.33", "3.65569, 119.614, -22.1219, 0.33", "3.68806, 121.069, -22.6579, 1.33", "3.83558, 124.213, -23.714, 0.33", "3.87417, 124.949, -23.9516, 0.67", "3.951, 126.55, -24.4002, 0.33", "3.97191, 127.119, -24.5193, 0.67", "4.23587, 131.724, -25.4269, 0.33", "4.31858, 133.257, -25.6718, 0.67", "4.3591, 134.413, -25.7944, 0.33", "4.35566, 135.347, -25.8778, 0.67", "4.3383, 136.282, -25.9444, 0.33", "4.22582, 138.153, -25.9909, 0.33", "4.05306, 139.063, -25.9093, 0.67", "3.84198, 140.341, -25.8586, 0.33", "3.62913, 141.915, -25.7992, 0.67" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "1.41636, 34.7134, -6.18998, 0.67", "4.28376, 35.5084, -9.55783, 0.67" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "85.0495, 55.4586, 12.4786, 0.33", "93.6406, 53.4564, 10.7832, 0.33", "102.454, 52.478, 9.34937, 0.33", "111.399, 51.6561, 9.37355, 0.33", "119.974, 48.9845, 9.28878, 0.33", "128.655, 47.4141, 10.9837, 0.33", "137.342, 45.8143, 12.613, 0.33", "146.078, 44.7965, 14.4437, 0.33", "154.386, 45.0179, 17.8505, 0.33", "162.24, 45.9313, 22.1126, 0.33", "170.194, 47.8255, 25.8319, 0.33" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "85.0495, 55.4586, 12.4786, 0.33", "98.0705, 51.544, 13.0005, 0.33", "110.736, 47.5419, 15.9512, 0.33", "124.039, 44.8489, 16.8996, 0.33", "136.809, 40.1899, 16.2942, 0.33", "148.885, 34.4397, 13.7915, 0.33", "161.083, 30.1671, 9.5406, 0.33", "173.369, 27.0881, 4.56775, 0.33", "186.342, 23.8047, 2.10727, 0.33", "199.616, 20.9501, 1.21116, 0.33", "212.645, 17.4554, -0.567325, 0.33" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-15.3049, 14.8871, -2.85696, 0.67", "-19.0965, 9.53456, -7.65678, 0.67", "-20.7485, 7.52054, -9.39991, 0.67", "-22.3066, 5.77994, -10.8182, 0.67", "-24.7225, 3.41771, -12.7816, 1.33", "-27.4785, 1.02109, -14.7523, 0.67", "-30.0283, -1.18212, -16.3926, 0.33", "-30.9905, -1.907, -16.8589, 0.33", "-32.404, -2.81891, -17.4678, 1.33", "-37.7121, -5.98372, -19.6324, 0.33", "-40.3008, -7.36715, -20.6121, 2.0", "-43.103, -8.82844, -21.487, 0.67", "-47.0962, -10.9347, -22.5924, 0.67", "-50.5682, -12.6723, -23.5483, 0.67", "-52.1223, -13.3131, -23.9236, 0.33", "-54.1413, -14.0161, -24.2698, 0.67", "-56.8689, -14.8424, -24.8574, 0.33", "-58.9059, -15.3253, -25.3305, 2.0", "-65.1534, -16.8891, -27.0097, 0.33", "-67.874, -17.6821, -28.0874, 0.33", "-69.3737, -18.0425, -28.8666, 1.33", "-73.0766, -18.832, -31.2251, 0.67", "-74.1177, -19.0725, -32.1229, 1.33", "-76.6201, -19.9793, -34.6803, 0.67", "-78.5845, -21.1325, -36.9515, 1.33", "-80.9694, -22.9948, -39.9871, 0.33", "-81.0396, -23.0566, -40.0773, 0.67", "-83.9087, -25.8997, -43.7287, 0.33", "-86.3592, -28.5499, -46.8671, 0.33", "-87.2601, -29.5836, -47.9385, 1.33", "-89.1294, -32.222, -50.1765, 0.33", "-89.5402, -32.9483, -50.6569, 0.67" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-15.3049, 14.8871, -2.85696, 0.67", "-16.1572, 12.1139, -9.16803, 0.67", "-16.3166, 11.6125, -10.5956, 0.67", "-16.3661, 11.4095, -11.2694, 0.67", "-16.5852, 10.0902, -16.0837, 0.33", "-16.6358, 9.42736, -18.6061, 2.0", "-16.5866, 8.37902, -22.3455, 0.67", "-16.3704, 7.85868, -24.6619, 0.33", "-16.1351, 7.49021, -26.4152, 1.33", "-15.1751, 6.3387, -31.9378, 0.33", "-14.366, 5.47581, -35.4119, 0.33", "-13.7842, 4.92649, -37.4736, 1.33", "-13.3168, 4.53727, -38.8612, 0.67", "-12.9658, 4.2457, -39.8152, 1.33", "-11.5363, 3.05447, -43.7222, 0.33", "-10.9965, 2.70877, -44.9413, 0.33", "-10.7422, 2.54516, -45.5825, 0.67", "-10.1136, 2.13445, -47.5892, 0.33", "-9.94122, 2.0258, -48.2263, 1.33", "-9.11632, 1.61581, -51.2324, 0.33", "-8.59651, 1.54766, -52.7836, 0.67", "-7.9792, 1.63481, -54.6476, 0.33", "-7.53386, 1.80117, -55.9403, 0.67", "-6.91679, 2.14858, -57.5127, 0.33", "-6.58211, 2.42618, -58.389, 0.67", "-6.02399, 3.05871, -59.7337, 0.33", "-5.81953, 3.32662, -60.2494, 0.67", "-5.17012, 4.0775, -61.8408, 0.33", "-5.0119, 4.21758, -62.3268, 0.67", "-4.53371, 4.60419, -64.6825, 0.33", "-4.63214, 4.58224, -65.3905, 0.67", "-5.41771, 4.40063, -67.018, 0.33", "-5.90205, 4.29768, -67.718, 0.67", "-7.90536, 3.9399, -70.0232, 0.33", "-8.63211, 3.80053, -70.7786, 1.33", "-12.7953, 2.95522, -74.5705, 0.67", "-15.2007, 2.48094, -76.6043, 0.33", "-15.9503, 2.35789, -77.1789, 0.67", "-16.6377, 2.31316, -77.684, 0.67" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-5.5946, 80.5623, -13.7411, 0.33", "-4.5753, 85.4293, -14.2897, 0.33", "-4.45077, 86.0259, -14.3603, 0.67", "-3.99748, 88.1976, -14.5733, 0.33", "-3.66709, 89.5388, -14.6716, 0.67", "-2.71708, 93.0888, -14.8375, 0.33", "-2.10566, 95.182, -14.9193, 0.33", "-1.30859, 97.7278, -14.9656, 0.33", "-0.53429, 100.037, -15.098, 1.33", "2.06245, 107.578, -15.6455, 0.33", "2.87443, 109.891, -15.8387, 0.67", "4.01733, 113.169, -16.2407, 0.33", "5.3698, 117.178, -17.0562, 0.67", "7.415, 123.71, -18.784, 0.33", "7.82795, 125.225, -19.3281, 0.67", "8.25384, 127.048, -20.1467, 0.33", "9.01355, 130.914, -22.0478, 1.33", "10.2423, 138.402, -25.9429, 0.33", "10.3748, 139.466, -26.5384, 0.67", "10.6796, 143.35, -28.7313, 0.33", "10.7454, 144.259, -29.2668, 0.67", "10.883, 146.653, -30.6945, 0.33", "10.9187, 147.805, -31.3371, 0.67", "10.6754, 151.41, -33.4107, 0.33", "10.607, 152.664, -34.1288, 0.67" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-5.5946, 80.5623, -13.7411, 0.67", "-7.05648, 84.5925, -19.3082, 0.67", "-8.07739, 87.439, -23.4151, 0.67", "-9.51285, 90.612, -28.9091, 0.33", "-10.3673, 92.3298, -32.1348, 0.67", "-11.2188, 93.9462, -35.1268, 0.33", "-11.4733, 94.4293, -36.0211, 0.67", "-12.9153, 97.2215, -41.436, 0.67", "-14.6137, 100.1, -48.1674, 0.67", "-14.9772, 100.575, -49.3344, 1.33", "-15.8852, 101.503, -51.7708, 0.67" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "4.28376, 35.5084, -9.55783, 0.67", "5.57305, 36.9383, -12.0236, 0.67", "7.33534, 38.8927, -15.394, 0.67", "8.79453, 40.511, -18.1847, 0.67", "9.40562, 41.1887, -19.3535, 0.67", "10.85, 42.7906, -22.116, 0.67", "11.2327, 43.215, -22.8478, 0.67" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "4.28376, 35.5084, -9.55783, 0.67", "9.28686, 38.0672, -8.70769, 0.67", "12.5318, 39.9109, -8.23037, 0.67", "14.6814, 41.1059, -8.4137, 0.67", "18.1262, 43.0766, -9.08001, 0.33", "22.0704, 45.4082, -10.2829, 0.67", "25.3973, 47.3765, -11.4643, 0.67", "29.5958, 49.9997, -13.5146, 0.67", "37.2514, 55.2087, -17.9, 0.67", "39.3536, 56.8574, -19.2496, 0.67", "42.7698, 60.0755, -21.6883, 0.67", "43.6649, 61.0729, -22.4262, 0.33", "44.7237, 62.7195, -23.3334, 0.33", "45.6535, 64.8387, -23.9404, 1.33", "46.3139, 67.151, -23.9386, 0.33", "47.0621, 70.4666, -23.7374, 0.33", "47.308, 71.7051, -23.5724, 0.67", "48.0811, 75.0853, -23.2199, 0.33", "48.6358, 76.8951, -23.062, 0.67", "49.5722, 79.0899, -22.8884, 0.33", "50.4274, 80.6093, -22.8934, 1.33", "52.7736, 84.227, -23.1452, 0.67", "54.532, 86.7714, -23.3874, 0.33", "55.6289, 88.1862, -23.5483, 0.67", "58.3515, 91.5141, -23.9368, 0.67", "61.4611, 95.1602, -24.5169, 0.33", "63.1756, 97.1992, -24.9005, 0.33", "64.1319, 98.3585, -25.1531, 0.67", "65.8955, 100.768, -25.8096, 0.33", "66.3889, 101.558, -26.0503, 0.67", "68.1291, 104.563, -27.4027, 0.33", "68.7018, 105.575, -27.895, 0.67", "69.552, 107.067, -28.7225, 0.33", "71.6091, 110.746, -30.8717, 1.33", "73.5502, 114.463, -32.9611, 0.33", "76.3327, 119.638, -35.7479, 0.33", "76.7526, 120.433, -36.1249, 0.67", "77.3733, 121.716, -36.6452, 0.33", "77.7303, 122.482, -36.9238, 0.67", "78.9229, 125.374, -37.6804, 0.33", "80.041, 128.664, -38.3044, 1.33", "80.6094, 130.738, -38.3316, 0.33", "81.3023, 133.332, -38.4635, 1.33" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-15.8852, 101.503, -51.7708, 0.33", "-17.2619, 103.275, -54.4504, 0.33", "-20.1278, 106.641, -59.2512, 0.33", "-21.7112, 108.439, -61.5463, 1.33", "-23.8068, 110.819, -64.5839, 0.33", "-24.9845, 112.157, -66.2909, 0.33", "-25.6963, 112.965, -67.3227, 1.33", "-28.1704, 115.051, -70.0047, 0.33", "-29.7283, 116.165, -71.0017, 0.67" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-15.8852, 101.503, -51.7708, 0.33", "-17.9403, 102.116, -54.3855, 0.33", "-22.1599, 103.453, -58.8653, 0.67", "-24.6797, 104.252, -61.5406, 0.33", "-25.4576, 104.499, -62.3664, 0.67", "-28.0197, 105.311, -65.0866, 0.33", "-29.1039, 105.655, -66.2377, 0.67", "-30.5742, 106.145, -67.739, 0.67" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "11.2327, 43.215, -22.8478, 0.33", "16.1179, 45.6325, -24.8193, 0.33", "19.1832, 47.0485, -25.7647, 2.0", "24.2824, 49.3179, -27.0529, 0.33", "26.0717, 50.1319, -27.457, 1.33", "28.6677, 51.2676, -27.994, 0.33", "30.1336, 51.9083, -28.2548, 0.67", "35.3675, 54.1441, -28.8162, 0.33", "37.9208, 55.0669, -28.9667, 1.33", "41.8431, 56.1799, -29.0794, 0.33", "44.2152, 56.7053, -29.1538, 0.67", "47.4031, 57.2881, -29.2423, 0.33", "49.0846, 57.5192, -29.2339, 0.67", "51.5169, 57.5521, -29.2375, 0.33", "52.8528, 57.4761, -29.2812, 0.67", "55.0869, 57.2204, -29.3429, 0.33", "56.072, 57.1146, -29.462, 0.67", "58.4469, 56.9589, -29.952, 0.33", "63.0145, 56.9272, -31.1446, 1.33", "67.4005, 57.0447, -32.554, 0.33", "69.3038, 57.1282, -33.2219, 1.33", "74.9177, 57.4877, -35.5271, 0.33", "79.181, 57.7635, -37.4098, 0.33", "81.2424, 57.927, -38.3725, 1.33", "84.6191, 58.2419, -39.9581, 0.33", "86.0734, 58.4085, -40.6578, 0.67", "90.7789, 59.0385, -42.8324, 0.33", "92.0287, 59.2246, -43.3094, 0.67", "96.1084, 59.817, -44.6975, 0.33", "96.5286, 59.9012, -44.8594, 0.67", "98.236, 60.3755, -45.5619, 0.33", "99.3347, 60.7287, -46.0729, 0.67", "101.104, 61.3734, -46.933, 0.33", "101.104, 61.3734, -46.933, 0.67", "106.899, 63.888, -50.176, 0.33", "108.227, 64.4661, -50.9176, 1.33", "112.0, 66.1454, -52.8752, 0.33", "112.266, 66.2628, -53.0106, 0.67", "113.922, 66.978, -53.626, 0.33", "114.826, 67.376, -53.8336, 0.33", "115.733, 67.7776, -53.9429, 0.67", "118.673, 69.0977, -54.2894, 0.33", "121.104, 70.329, -54.4878, 1.33", "127.107, 73.485, -54.918, 0.33", "128.885, 74.4098, -55.0308, 0.67", "134.5, 77.3039, -55.3119, 0.33", "135.174, 77.6545, -55.3265, 0.67", "139.343, 79.7977, -55.4105, 0.33", "140.231, 80.2702, -55.384, 0.67", "141.811, 81.1393, -55.3383, 0.33", "142.368, 81.4349, -55.3088, 0.67", "144.869, 82.7702, -54.867, 0.33", "147.774, 84.1422, -54.5611, 0.67" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "11.2327, 43.215, -22.8478, 0.33", "11.493, 46.2763, -25.0889, 0.33", "11.5351, 46.6707, -25.3665, 0.67", "11.7185, 49.7599, -27.5026, 0.33", "12.0416, 52.278, -29.0263, 0.33", "12.0968, 52.6747, -29.2805, 0.67", "12.4447, 55.3775, -30.9654, 0.33", "12.6241, 56.5486, -31.7103, 0.67", "12.9027, 58.9499, -33.2005, 0.33", "13.1107, 62.4735, -35.4352, 0.33", "12.9568, 65.5018, -37.5553, 0.67", "12.8327, 67.0309, -38.7225, 0.33", "12.7236, 67.9609, -39.4963, 1.33", "12.3206, 70.838, -41.9252, 0.33", "11.944, 72.8368, -43.7379, 1.33", "11.1562, 75.2216, -46.1374, 0.33", "10.5615, 77.0661, -47.9004, 0.33" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_48", "dend_43", "dend_36", "dend_29", "dend_0", "apic_8", "apic_1", "dend_52", "dend_49", "dend_47", "dend_44", "dend_40", "dend_37", "dend_33", "dend_30", "dend_8", "dend_1", "apic_12", "apic_9", "apic_5", "apic_2", "dend_54", "dend_53", "dend_51", "dend_50", "dend_46", "dend_45", "dend_42", "dend_41", "dend_39", "dend_38", "dend_35", "dend_34", "dend_32", "dend_31", "dend_12", "dend_9", "dend_7", "dend_2", "apic_14", "apic_13", "apic_11", "apic_10", "apic_7", "apic_6", "apic_4", "apic_3", "dend_20", "dend_13", "dend_11", "dend_10", "dend_6", "dend_3", "apic_16", "apic_15", "dend_26", "dend_21", "dend_19", "dend_14", "dend_5", "dend_4", "dend_28", "dend_27", "dend_25", "dend_22", "dend_16", "dend_15", "dend_24", "dend_23", "dend_18", "dend_17" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_48", "dend_43", "dend_36", "dend_29", "dend_0", "apic_8", "apic_1", "dend_52", "dend_49", "dend_47", "dend_44", "dend_40", "dend_37", "dend_33", "dend_30", "dend_8", "dend_1", "apic_12", "apic_9", "apic_5", "apic_2", "dend_54", "dend_53", "dend_51", "dend_50", "dend_46", "dend_45", "dend_42", "dend_41", "dend_39", "dend_38", "dend_35", "dend_34", "dend_32", "dend_31", "dend_12", "dend_9", "dend_7", "dend_2", "apic_14", "apic_13", "apic_11", "apic_10", "apic_7", "apic_6", "apic_4", "apic_3", "dend_20", "dend_13", "dend_11", "dend_10", "dend_6", "dend_3", "apic_16", "apic_15", "dend_26", "dend_21", "dend_19", "dend_14", "dend_5", "dend_4", "dend_28", "dend_27", "dend_25", "dend_22", "dend_16", "dend_15", "dend_24", "dend_23", "dend_18", "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "apic_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "apic_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "apic_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "apic_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "apic_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "apic_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "apic_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "apic_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "apic_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "apic_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "apic_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "apic_15" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4", "apic_5", "apic_6", "apic_7", "apic_8", "apic_9", "apic_10", "apic_11", "apic_12", "apic_13", "apic_14", "apic_15", "apic_16" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "dend_48", "dend_48", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_29", "dend_29", "dend_0", "axon_0", "axon_0", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_1", "apic_1", "apic_1", "apic_1", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_40", "dend_40", "dend_37", "dend_37", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_8", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_46", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_39", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "apic_14", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_11", "apic_11", "apic_10", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_20", "dend_20", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.6794998E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cSTUT189_L4_LBC_1d4118b33e_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_48, id: dend_48, parent: soma_0
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_36, id: dend_36, parent: soma_0
create dend_36
public dend_36
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_8, id: apic_8, parent: apic_0
create apic_8
public apic_8
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_43
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_33, id: dend_33, parent: dend_29
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_8, id: dend_8, parent: dend_0
create dend_8
public dend_8
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_12, id: apic_12, parent: apic_8
create apic_12
public apic_12
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9
// Section: apic_5, id: apic_5, parent: apic_1
create apic_5
public apic_5
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_14, id: apic_14, parent: apic_12
create apic_14
public apic_14
// Section: apic_13, id: apic_13, parent: apic_12
create apic_13
public apic_13
// Section: apic_11, id: apic_11, parent: apic_9
create apic_11
public apic_11
// Section: apic_10, id: apic_10, parent: apic_9
create apic_10
public apic_10
// Section: apic_7, id: apic_7, parent: apic_5
create apic_7
public apic_7
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6
// Section: apic_4, id: apic_4, parent: apic_2
create apic_4
public apic_4
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_20, id: dend_20, parent: dend_12
create dend_20
public dend_20
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_16, id: apic_16, parent: apic_14
create apic_16
public apic_16
// Section: apic_15, id: apic_15, parent: apic_14
create apic_15
public apic_15
// Section: dend_26, id: dend_26, parent: dend_20
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_13
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_48, dend_43, dend_36, dend_29, dend_0, apic_8, apic_1, dend_52, dend_49, dend_47, dend_44, dend_40, dend_37, dend_33, dend_30, dend_8, dend_1, apic_12, apic_9, apic_5, apic_2, dend_54, dend_53, dend_51, dend_50, dend_46, dend_45, dend_42, dend_41, dend_39, dend_38, dend_35, dend_34, dend_32, dend_31, dend_12, dend_9, dend_7, dend_2, apic_14, apic_13, apic_11, apic_10, apic_7, apic_6, apic_4, apic_3, dend_20, dend_13, dend_11, dend_10, dend_6, dend_3, apic_16, apic_15, dend_26, dend_21, dend_19, dend_14, dend_5, dend_4, dend_28, dend_27, dend_25, dend_22, dend_16, dend_15, dend_24, dend_23, dend_18, dend_17]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_48, dend_43, dend_36, dend_29, dend_0, apic_8, apic_1, dend_52, dend_49, dend_47, dend_44, dend_40, dend_37, dend_33, dend_30, dend_8, dend_1, apic_12, apic_9, apic_5, apic_2, dend_54, dend_53, dend_51, dend_50, dend_46, dend_45, dend_42, dend_41, dend_39, dend_38, dend_35, dend_34, dend_32, dend_31, dend_12, dend_9, dend_7, dend_2, apic_14, apic_13, apic_11, apic_10, apic_7, apic_6, apic_4, apic_3, dend_20, dend_13, dend_11, dend_10, dend_6, dend_3, apic_16, apic_15, dend_26, dend_21, dend_19, dend_14, dend_5, dend_4, dend_28, dend_27, dend_25, dend_22, dend_16, dend_15, dend_24, dend_23, dend_18, dend_17]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[apic_12]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[apic_5]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[apic_13]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[apic_16]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_8]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[apic_9]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[apic_11]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[apic_10]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[apic_6]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[apic_7]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[apic_14]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[apic_15]}
objref OneSecGrp_SectionRef_59
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_29, dend_29, dend_0, axon_0, axon_0, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_1, apic_1, apic_1, apic_1, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_8, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_14, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_11, apic_11, apic_10, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.45000081952127813)
    connect dend_48(0), soma_0(0.45000081952127813)
    connect dend_43(0), soma_0(0.45000081952127813)
    connect dend_36(0), soma_0(0.45000081952127813)
    connect dend_29(0), soma_0(0.45000081952127813)
    connect dend_0(0), soma_0(0.45000081952127813)
    connect axon_0(0), soma_0(1.0)
    connect apic_8(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_33(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_8(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_12(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)
    connect apic_5(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_14(0), apic_12(1.0)
    connect apic_13(0), apic_12(1.0)
    connect apic_11(0), apic_9(1.0)
    connect apic_10(0), apic_9(1.0)
    connect apic_7(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)
    connect apic_4(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_20(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_16(0), apic_14(1.0)
    connect apic_15(0), apic_14(1.0)
    connect dend_26(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.249825, 8.0397, -0.595555, 3.11201 ) }
    soma_0 { pt3dadd( 0.290738, 7.07177, -0.519528, 5.39316 ) }
    soma_0 { pt3dadd( 0.331651, 6.10384, -0.443501, 8.6287 ) }
    soma_0 { pt3dadd( 0.372564, 5.13592, -0.367474, 11.3904 ) }
    soma_0 { pt3dadd( 0.413476, 4.16799, -0.291447, 13.019 ) }
    soma_0 { pt3dadd( 0.454389, 3.20006, -0.215419, 13.3273 ) }
    soma_0 { pt3dadd( 0.495302, 2.23214, -0.139392, 13.3013 ) }
    soma_0 { pt3dadd( 0.536214, 1.26421, -0.0633652, 13.2159 ) }
    soma_0 { pt3dadd( 0.577127, 0.296285, 0.0126619, 13.0569 ) }
    soma_0 { pt3dadd( 0.61804, -0.671641, 0.0886891, 12.4161 ) }
    soma_0 { pt3dadd( 0.658952, -1.63957, 0.164716, 11.4623 ) }
    soma_0 { pt3dadd( 0.699865, -2.60749, 0.240743, 10.5802 ) }
    soma_0 { pt3dadd( 0.740778, -3.57542, 0.31677, 9.69807 ) }
    soma_0 { pt3dadd( 0.78169, -4.54335, 0.392798, 8.81594 ) }
    soma_0 { pt3dadd( 0.822603, -5.51127, 0.468825, 7.87592 ) }
    soma_0 { pt3dadd( 0.863516, -6.4792, 0.544852, 6.92606 ) }
    soma_0 { pt3dadd( 0.904428, -7.44713, 0.620879, 5.96715 ) }
    soma_0 { pt3dadd( 0.945341, -8.41505, 0.696906, 5.00824 ) }
    soma_0 { pt3dadd( 0.986254, -9.38298, 0.772933, 4.04933 ) }
    soma_0 { pt3dadd( 1.02717, -10.3509, 0.84896, 3.09042 ) }
    soma_0 { pt3dadd( 1.06808, -11.3188, 0.924988, 1.90631 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 0.470259, -13.0398, 4.01899, 2.0 ) }
    apic_0 { pt3dadd( 0.244267, -16.5463, 5.317, 2.0 ) }
    apic_0 { pt3dadd( 0.0229438, -19.9802, 6.58819, 2.67 ) }
    // Section: dend_48, id: dend_48, parent: soma_0 (entry count 24/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 7.00026, 2.24014, -2.58101, 1.33 ) }
    dend_48 { pt3dadd( 9.10165, 4.40382, -2.20963, 1.33 ) }
    dend_48 { pt3dadd( 10.4351, 5.7768, -1.97397, 1.33 ) }
    dend_48 { pt3dadd( 12.0166, 7.40519, -1.69447, 1.33 ) }
    dend_48 { pt3dadd( 12.4951, 7.89786, -1.60991, 1.33 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 29/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 6.92026, 0.460142, 5.51899, 1.33 ) }
    dend_43 { pt3dadd( 10.3754, 1.55957, 6.20162, 1.33 ) }
    dend_43 { pt3dadd( 15.8088, 3.43875, 7.13906, 1.33 ) }
    dend_43 { pt3dadd( 20.5586, 5.27766, 7.78064, 1.33 ) }
    dend_43 { pt3dadd( 30.5728, 9.37376, 8.71783, 0.67 ) }
    dend_43 { pt3dadd( 33.8555, 10.4849, 8.95816, 0.67 ) }
    dend_43 { pt3dadd( 36.9105, 11.519, 9.18184, 0.67 ) }
    dend_43 { pt3dadd( 40.9034, 12.8732, 9.37828, 1.33 ) }
    dend_43 { pt3dadd( 47.3007, 15.1128, 9.43067, 0.67 ) }
    dend_43 { pt3dadd( 58.6197, 19.1505, 9.49135, 0.67 ) }
    dend_43 { pt3dadd( 71.6898, 23.0581, 9.51833, 0.67 ) }
    // Section: dend_36, id: dend_36, parent: soma_0 (entry count 40/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 4.11026, -2.55985, 5.51899, 1.33 ) }
    dend_36 { pt3dadd( 7.9914, -3.25954, 7.03809, 1.33 ) }
    dend_36 { pt3dadd( 11.7131, -3.93048, 8.4948, 1.33 ) }
    dend_36 { pt3dadd( 15.2094, -4.56077, 9.86326, 0.33 ) }
    dend_36 { pt3dadd( 22.941, -6.9697, 11.6111, 0.33 ) }
    dend_36 { pt3dadd( 30.6323, -9.53495, 13.3136, 0.33 ) }
    dend_36 { pt3dadd( 38.6393, -11.6128, 13.7669, 0.33 ) }
    dend_36 { pt3dadd( 46.8303, -12.8402, 13.5753, 0.33 ) }
    dend_36 { pt3dadd( 55.0907, -12.7795, 14.207, 0.33 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 49/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -5.96974, 2.65014, 2.81899, 1.33 ) }
    dend_29 { pt3dadd( -9.07326, 4.58393, 2.4766, 0.67 ) }
    dend_29 { pt3dadd( -10.8687, 5.70266, 2.27852, 1.33 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 52/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.88974, 6.85014, 1.31899, 2.67 ) }
    dend_0 { pt3dadd( -2.1859, 14.0916, -0.93055, 2.67 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 54/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.06808, -11.3188, 0.924988, 1.33 ) }
    axon_0 { pt3dadd( 1.70154, -26.3054, 0.924988, 1.33 ) }
    axon_0 { pt3dadd( 2.335, -41.292, 0.924988, 1.33 ) }
    // Section: apic_8, id: apic_8, parent: apic_0 (entry count 57/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 0.0229438, -19.9802, 6.58819, 2.0 ) }
    apic_8 { pt3dadd( -0.200891, -22.8579, 7.47679, 2.0 ) }
    apic_8 { pt3dadd( -0.720867, -29.5427, 9.54105, 1.33 ) }
    apic_8 { pt3dadd( -0.999813, -33.1288, 10.6484, 1.33 ) }
    apic_8 { pt3dadd( -1.31853, -37.2263, 11.9137, 1.33 ) }
    apic_8 { pt3dadd( -1.90531, -44.7699, 14.2432, 1.33 ) }
    apic_8 { pt3dadd( -2.35987, -50.6138, 16.0477, 1.33 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 64/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 0.0229438, -19.9802, 6.58819, 1.33 ) }
    apic_1 { pt3dadd( 1.8489, -23.1584, 7.20317, 1.33 ) }
    apic_1 { pt3dadd( 3.64781, -26.2895, 7.80904, 1.33 ) }
    apic_1 { pt3dadd( 4.20893, -27.2662, 7.99803, 1.33 ) }
    apic_1 { pt3dadd( 5.24622, -29.0716, 8.34739, 2.0 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 69/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 12.4951, 7.89786, -1.60991, 0.67 ) }
    dend_52 { pt3dadd( 15.7087, 9.76566, -2.24476, 0.67 ) }
    dend_52 { pt3dadd( 18.5897, 11.4401, -2.8139, 0.67 ) }
    dend_52 { pt3dadd( 20.1862, 12.3681, -3.12929, 0.33 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 73/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 12.4951, 7.89786, -1.60991, 0.67 ) }
    dend_49 { pt3dadd( 18.3749, 12.8588, -3.17522, 0.67 ) }
    dend_49 { pt3dadd( 22.492, 16.3324, -4.27124, 1.33 ) }
    dend_49 { pt3dadd( 25.375, 18.7648, -5.03874, 0.67 ) }
    dend_49 { pt3dadd( 30.3689, 22.9783, -6.36821, 1.33 ) }
    // Section: dend_47, id: dend_47, parent: dend_43 (entry count 78/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 71.6898, 23.0581, 9.51833, 0.67 ) }
    dend_47 { pt3dadd( 76.0297, 22.5628, 9.50733, 0.67 ) }
    dend_47 { pt3dadd( 77.6233, 22.4749, 9.50996, 0.33 ) }
    dend_47 { pt3dadd( 79.231, 22.3914, 9.55124, 0.67 ) }
    dend_47 { pt3dadd( 80.5194, 22.3439, 9.60232, 0.33 ) }
    dend_47 { pt3dadd( 81.5325, 22.3422, 9.64752, 0.33 ) }
    dend_47 { pt3dadd( 82.0332, 22.3086, 9.63898, 0.67 ) }
    dend_47 { pt3dadd( 83.7918, 22.0138, 9.5727, 0.33 ) }
    dend_47 { pt3dadd( 85.5794, 21.6579, 9.45794, 1.33 ) }
    dend_47 { pt3dadd( 87.3183, 21.2777, 9.32257, 0.67 ) }
    dend_47 { pt3dadd( 88.416, 21.0019, 9.23448, 0.33 ) }
    dend_47 { pt3dadd( 92.21, 19.8361, 8.95666, 0.67 ) }
    dend_47 { pt3dadd( 94.9756, 18.8613, 8.74926, 1.33 ) }
    dend_47 { pt3dadd( 97.3101, 17.9149, 8.57987, 0.33 ) }
    dend_47 { pt3dadd( 98.0485, 17.5881, 8.53988, 0.67 ) }
    dend_47 { pt3dadd( 99.2072, 17.0367, 8.5422, 0.33 ) }
    dend_47 { pt3dadd( 100.573, 16.3836, 8.62567, 0.67 ) }
    dend_47 { pt3dadd( 102.451, 15.5457, 8.88722, 0.33 ) }
    dend_47 { pt3dadd( 103.421, 15.1269, 9.01638, 0.33 ) }
    dend_47 { pt3dadd( 105.736, 14.2377, 9.36556, 1.33 ) }
    dend_47 { pt3dadd( 108.443, 13.3103, 9.79107, 0.33 ) }
    dend_47 { pt3dadd( 109.365, 13.0364, 9.93816, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_47 { pt3dadd( 110.745, 12.7129, 10.155, 0.33 ) }
    dend_47 { pt3dadd( 113.592, 12.15, 10.5718, 1.33 ) }
    dend_47 { pt3dadd( 116.339, 11.5861, 11.0545, 0.33 ) }
    dend_47 { pt3dadd( 118.338, 11.1602, 11.4434, 0.67 ) }
    dend_47 { pt3dadd( 121.166, 10.5536, 12.0238, 0.33 ) }
    dend_47 { pt3dadd( 122.399, 10.2811, 12.305, 0.33 ) }
    dend_47 { pt3dadd( 123.373, 10.0597, 12.5465, 0.67 ) }
    dend_47 { pt3dadd( 130.978, 8.11802, 14.7176, 0.33 ) }
    dend_47 { pt3dadd( 131.973, 7.83865, 15.0122, 0.67 ) }
    dend_47 { pt3dadd( 133.141, 7.4832, 15.3937, 0.33 ) }
    dend_47 { pt3dadd( 134.314, 7.10728, 15.8182, 0.67 ) }
    dend_47 { pt3dadd( 136.017, 6.51917, 16.4901, 0.33 ) }
    dend_47 { pt3dadd( 136.915, 6.22485, 16.8796, 0.33 ) }
    dend_47 { pt3dadd( 147.29, 3.54776, 16.8479, 0.33 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 14/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 71.6898, 23.0581, 9.51833, 0.33 ) }
    dend_44 { pt3dadd( 73.6855, 21.1369, 9.12667, 0.33 ) }
    dend_44 { pt3dadd( 74.2212, 20.6066, 9.06574, 0.67 ) }
    dend_44 { pt3dadd( 75.6818, 19.0923, 8.78297, 0.33 ) }
    dend_44 { pt3dadd( 76.1811, 18.524, 8.68415, 0.33 ) }
    dend_44 { pt3dadd( 76.5854, 17.9112, 8.55094, 0.67 ) }
    dend_44 { pt3dadd( 77.2581, 16.682, 8.28921, 0.33 ) }
    dend_44 { pt3dadd( 77.5464, 15.9916, 8.13977, 0.67 ) }
    dend_44 { pt3dadd( 78.897, 12.3772, 7.28063, 0.33 ) }
    dend_44 { pt3dadd( 79.2626, 11.2635, 6.99438, 0.67 ) }
    dend_44 { pt3dadd( 80.3181, 7.95481, 6.08357, 0.33 ) }
    dend_44 { pt3dadd( 80.6526, 6.81854, 5.7527, 1.33 ) }
    dend_44 { pt3dadd( 81.4392, 3.80555, 4.82623, 0.33 ) }
    dend_44 { pt3dadd( 81.8661, 1.6896, 4.18248, 0.67 ) }
    dend_44 { pt3dadd( 87.7265, -5.93604, 1.18043, 0.67 ) }
    dend_44 { pt3dadd( 93.823, -13.7809, -0.492318, 0.67 ) }
    dend_44 { pt3dadd( 100.6, -21.2276, -0.839818, 0.67 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 31/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 55.0907, -12.7795, 14.207, 0.67 ) }
    dend_40 { pt3dadd( 63.9242, -17.5594, 14.7875, 0.67 ) }
    dend_40 { pt3dadd( 72.6649, -21.9811, 17.0823, 0.67 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 34/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 55.0907, -12.7795, 14.207, 0.33 ) }
    dend_37 { pt3dadd( 63.9108, -12.7725, 15.9546, 0.67 ) }
    dend_37 { pt3dadd( 72.4437, -11.4337, 18.4536, 0.67 ) }
    // Section: dend_33, id: dend_33, parent: dend_29 (entry count 37/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -10.8687, 5.70266, 2.27852, 0.67 ) }
    dend_33 { pt3dadd( -15.6606, 5.01729, 5.05918, 0.67 ) }
    dend_33 { pt3dadd( -19.1733, 4.20616, 6.85517, 0.67 ) }
    dend_33 { pt3dadd( -22.2246, 3.50159, 8.41521, 0.67 ) }
    dend_33 { pt3dadd( -27.5831, 2.26423, 11.1549, 0.67 ) }
    dend_33 { pt3dadd( -31.3922, 1.38467, 13.1025, 0.67 ) }
    dend_33 { pt3dadd( -36.3668, 0.235971, 15.6459, 0.67 ) }
    dend_33 { pt3dadd( -39.4666, -0.627004, 17.1317, 0.67 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 45/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -10.8687, 5.70266, 2.27852, 0.67 ) }
    dend_30 { pt3dadd( -12.1498, 7.42995, 2.03545, 0.67 ) }
    dend_30 { pt3dadd( -13.8186, 10.1073, 1.21712, 0.67 ) }
    dend_30 { pt3dadd( -14.7579, 11.4933, 0.645902, 0.67 ) }
    dend_30 { pt3dadd( -15.92, 13.2046, -0.0864966, 0.67 ) }
    dend_30 { pt3dadd( -17.0251, 14.8911, -0.794668, 0.67 ) }
    dend_30 { pt3dadd( -18.8038, 17.8265, -2.10769, 0.67 ) }
    dend_30 { pt3dadd( -20.1957, 20.1528, -3.28372, 0.67 ) }
    dend_30 { pt3dadd( -21.6021, 22.3518, -4.55905, 0.33 ) }
    dend_30 { pt3dadd( -22.7854, 24.2167, -5.65429, 0.33 ) }
    dend_30 { pt3dadd( -23.3719, 25.1084, -6.19535, 0.67 ) }
    dend_30 { pt3dadd( -24.6124, 26.8139, -7.22311, 0.33 ) }
    dend_30 { pt3dadd( -26.4071, 28.703, -8.47332, 0.33 ) }
    dend_30 { pt3dadd( -28.4635, 30.6052, -9.84723, 0.33 ) }
    dend_30 { pt3dadd( -29.2049, 31.1926, -10.417, 0.67 ) }
    dend_30 { pt3dadd( -30.3229, 31.9252, -11.3064, 0.33 ) }
    dend_30 { pt3dadd( -30.5277, 32.0378, -11.4684, 0.67 ) }
    dend_30 { pt3dadd( -33.6102, 33.537, -13.8768, 0.33 ) }
    dend_30 { pt3dadd( -34.9584, 34.1863, -15.005, 1.33 ) }
    dend_30 { pt3dadd( -37.3793, 35.2132, -17.051, 0.33 ) }
    dend_30 { pt3dadd( -37.8093, 35.3906, -17.4281, 0.67 ) }
    dend_30 { pt3dadd( -42.4622, 37.2996, -21.6109, 0.33 ) }
    dend_30 { pt3dadd( -43.7065, 37.8183, -22.6978, 0.67 ) }
    // Section: dend_8, id: dend_8, parent: dend_0 (entry count 68/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -2.1859, 14.0916, -0.93055, 2.0 ) }
    dend_8 { pt3dadd( -4.59187, 16.0542, -0.459008, 2.0 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 70/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -2.1859, 14.0916, -0.93055, 2.0 ) }
    dend_1 { pt3dadd( -1.26355, 16.9435, 1.04151, 2.0 ) }
    dend_1 { pt3dadd( -0.0228186, 20.78, 3.69429, 1.33 ) }
    dend_1 { pt3dadd( 0.774753, 23.2461, 5.39956, 0.67 ) }
    dend_1 { pt3dadd( 1.04303, 24.0757, 5.97314, 1.33 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 75/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 2.335, -41.292, 0.924988, 0.67 ) }
    axon_1 { pt3dadd( 2.96846, -56.2787, 0.924988, 0.67 ) }
    axon_1 { pt3dadd( 3.60193, -71.2653, 0.924988, 0.67 ) }
    // Section: apic_12, id: apic_12, parent: apic_8 (entry count 78/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( -2.35987, -50.6138, 16.0477, 1.33 ) }
    apic_12 { pt3dadd( -1.53545, -55.9769, 15.5168, 1.33 ) }
    apic_12 { pt3dadd( -0.954999, -60.3454, 15.1152, 1.33 ) }
    apic_12 { pt3dadd( -0.339117, -64.2122, 14.9998, 1.33 ) }
    apic_12 { pt3dadd( 0.282446, -68.3585, 14.8258, 1.33 ) }
    apic_12 { pt3dadd( 0.722422, -72.3273, 14.6605, 1.33 ) }
    apic_12 { pt3dadd( 1.09396, -76.1798, 14.5037, 1.33 ) }
    apic_12 { pt3dadd( 1.4288, -80.9497, 14.3729, 1.33 ) }
    apic_12 { pt3dadd( 1.82329, -90.7132, 14.3382, 1.33 ) }
    apic_12 { pt3dadd( 2.2007, -104.234, 14.4179, 1.33 ) }
    apic_12 { pt3dadd( 2.43062, -113.153, 14.4095, 1.33 ) }
    apic_12 { pt3dadd( 2.51433, -118.169, 14.3541, 1.33 ) }
    apic_12 { pt3dadd( 2.49477, -126.862, 14.1445, 1.33 ) }
    apic_12 { pt3dadd( 2.40293, -132.401, 13.9718, 1.33 ) }
    apic_12 { pt3dadd( 2.20643, -137.229, 13.755, 1.33 ) }
    apic_12 { pt3dadd( 1.72375, -148.756, 13.3539, 1.33 ) }
    apic_12 { pt3dadd( 1.59227, -154.568, 13.0286, 1.33 ) }
    apic_12 { pt3dadd( 1.43175, -160.74, 12.4981, 1.33 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 96/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( -2.35987, -50.6138, 16.0477, 0.67 ) }
    apic_9 { pt3dadd( -3.75845, -51.8039, 15.8125, 0.67 ) }
    apic_9 { pt3dadd( -4.39107, -52.4765, 15.6328, 0.67 ) }
    apic_9 { pt3dadd( -5.36894, -53.4574, 15.4, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    apic_9 { pt3dadd( -6.02237, -54.1128, 15.2444, 0.67 ) }
    apic_9 { pt3dadd( -6.87276, -54.9658, 15.0419, 0.67 ) }
    apic_9 { pt3dadd( -8.47241, -56.5704, 14.6611, 0.33 ) }
    apic_9 { pt3dadd( -9.53211, -57.8321, 14.2901, 0.67 ) }
    apic_9 { pt3dadd( -11.0809, -59.7983, 13.682, 0.67 ) }
    // Section: apic_5, id: apic_5, parent: apic_1 (entry count 5/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 5.24622, -29.0716, 8.34739, 0.67 ) }
    apic_5 { pt3dadd( 7.19063, -31.5389, 6.1015, 0.67 ) }
    apic_5 { pt3dadd( 8.08889, -32.7302, 5.17162, 0.67 ) }
    apic_5 { pt3dadd( 12.3081, -39.0831, 0.916835, 0.67 ) }
    apic_5 { pt3dadd( 15.0038, -43.4448, -2.00016, 0.67 ) }
    apic_5 { pt3dadd( 17.9016, -48.1077, -5.01354, 0.33 ) }
    apic_5 { pt3dadd( 19.4111, -50.5915, -6.53674, 1.33 ) }
    apic_5 { pt3dadd( 20.5504, -52.484, -7.53574, 1.33 ) }
    apic_5 { pt3dadd( 22.6313, -56.4807, -9.27999, 0.67 ) }
    apic_5 { pt3dadd( 24.2552, -60.7141, -10.3647, 0.67 ) }
    apic_5 { pt3dadd( 25.1596, -63.5761, -10.6966, 0.67 ) }
    apic_5 { pt3dadd( 25.8289, -65.9806, -10.8135, 0.67 ) }
    apic_5 { pt3dadd( 27.6476, -71.8866, -10.5134, 0.67 ) }
    apic_5 { pt3dadd( 28.7191, -75.077, -9.88705, 0.33 ) }
    apic_5 { pt3dadd( 30.7012, -80.3408, -7.93465, 0.67 ) }
    apic_5 { pt3dadd( 31.8112, -83.0773, -6.6754, 0.33 ) }
    apic_5 { pt3dadd( 33.9735, -87.5292, -4.95092, 0.67 ) }
    apic_5 { pt3dadd( 37.293, -92.8207, -3.58921, 0.33 ) }
    apic_5 { pt3dadd( 37.655, -93.3013, -3.54914, 2.0 ) }
    apic_5 { pt3dadd( 39.3436, -95.4643, -3.78337, 0.33 ) }
    apic_5 { pt3dadd( 40.9757, -97.5197, -4.33035, 1.33 ) }
    apic_5 { pt3dadd( 44.279, -101.861, -5.89549, 0.33 ) }
    apic_5 { pt3dadd( 46.5643, -105.238, -7.22604, 0.67 ) }
    apic_5 { pt3dadd( 47.7808, -107.038, -8.30211, 0.33 ) }
    apic_5 { pt3dadd( 48.546, -108.178, -9.00813, 0.67 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 30/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 5.24622, -29.0716, 8.34739, 0.67 ) }
    apic_2 { pt3dadd( 5.9624, -30.0434, 3.7251, 0.67 ) }
    apic_2 { pt3dadd( 6.6139, -31.0932, -0.259988, 0.67 ) }
    apic_2 { pt3dadd( 7.17799, -32.1428, -3.72361, 0.67 ) }
    apic_2 { pt3dadd( 7.67887, -33.165, -6.61313, 0.67 ) }
    apic_2 { pt3dadd( 8.18718, -34.2062, -9.19307, 1.33 ) }
    apic_2 { pt3dadd( 8.82097, -35.5592, -12.208, 0.33 ) }
    apic_2 { pt3dadd( 9.05493, -36.0685, -13.0791, 1.33 ) }
    apic_2 { pt3dadd( 10.2548, -38.5225, -16.8207, 0.33 ) }
    apic_2 { pt3dadd( 10.6009, -39.491, -18.0803, 0.33 ) }
    apic_2 { pt3dadd( 10.9144, -40.4583, -19.2459, 0.33 ) }
    apic_2 { pt3dadd( 11.134, -41.0786, -19.8787, 0.67 ) }
    apic_2 { pt3dadd( 12.3704, -44.1598, -22.5861, 0.33 ) }
    apic_2 { pt3dadd( 12.4789, -44.3801, -22.7562, 0.67 ) }
    apic_2 { pt3dadd( 13.0969, -45.333, -23.3636, 0.33 ) }
    apic_2 { pt3dadd( 13.4251, -45.7331, -23.6246, 1.33 ) }
    apic_2 { pt3dadd( 15.0045, -47.4982, -24.7747, 0.33 ) }
    apic_2 { pt3dadd( 15.7872, -48.2641, -25.2258, 2.0 ) }
    apic_2 { pt3dadd( 17.3865, -49.6244, -25.7866, 0.33 ) }
    apic_2 { pt3dadd( 18.9842, -50.8674, -26.3486, 0.33 ) }
    apic_2 { pt3dadd( 19.9201, -51.4775, -26.6647, 2.0 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 51/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 20.1862, 12.3681, -3.12929, 0.67 ) }
    dend_54 { pt3dadd( 22.9114, 14.1408, -3.61136, 0.67 ) }
    dend_54 { pt3dadd( 24.2359, 14.9428, -3.78723, 0.33 ) }
    dend_54 { pt3dadd( 25.6067, 15.6106, -3.79084, 0.67 ) }
    dend_54 { pt3dadd( 28.135, 16.5398, -3.63823, 0.33 ) }
    dend_54 { pt3dadd( 29.9099, 17.0622, -3.47995, 2.0 ) }
    dend_54 { pt3dadd( 31.3817, 17.4788, -3.33087, 0.33 ) }
    dend_54 { pt3dadd( 34.3997, 18.061, -2.84073, 0.33 ) }
    dend_54 { pt3dadd( 37.36, 18.56, -2.22269, 0.67 ) }
    dend_54 { pt3dadd( 39.4328, 18.9052, -1.69986, 0.33 ) }
    dend_54 { pt3dadd( 40.0737, 19.0279, -1.51443, 0.67 ) }
    dend_54 { pt3dadd( 43.1334, 19.791, -0.586145, 0.33 ) }
    dend_54 { pt3dadd( 44.9138, 20.3439, 0.0898199, 1.33 ) }
    dend_54 { pt3dadd( 46.5639, 21.023, 0.885101, 0.33 ) }
    dend_54 { pt3dadd( 47.4024, 21.5311, 1.39686, 0.67 ) }
    dend_54 { pt3dadd( 48.9589, 22.6394, 2.49902, 0.33 ) }
    dend_54 { pt3dadd( 50.5277, 23.869, 3.76559, 1.33 ) }
    dend_54 { pt3dadd( 52.4463, 25.5918, 5.78381, 0.67 ) }
    dend_54 { pt3dadd( 53.4256, 26.6992, 7.03313, 0.33 ) }
    dend_54 { pt3dadd( 53.9406, 27.5532, 8.04194, 0.67 ) }
    dend_54 { pt3dadd( 61.3592, 32.7463, 9.41511, 0.67 ) }
    dend_54 { pt3dadd( 69.8942, 36.0388, 8.96474, 0.67 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 73/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 20.1862, 12.3681, -3.12929, 0.33 ) }
    dend_53 { pt3dadd( 21.9086, 11.9099, -4.0779, 0.33 ) }
    dend_53 { pt3dadd( 23.0458, 11.6146, -4.65341, 0.67 ) }
    dend_53 { pt3dadd( 24.7189, 11.2537, -5.63297, 0.33 ) }
    dend_53 { pt3dadd( 25.0689, 11.1853, -5.84185, 0.33 ) }
    dend_53 { pt3dadd( 25.7378, 11.1043, -6.29079, 2.0 ) }
    dend_53 { pt3dadd( 26.9622, 10.9977, -7.14015, 0.33 ) }
    dend_53 { pt3dadd( 27.505, 10.9873, -7.54394, 0.67 ) }
    dend_53 { pt3dadd( 29.1529, 11.0144, -8.97662, 0.33 ) }
    dend_53 { pt3dadd( 29.5537, 11.0273, -9.35198, 0.67 ) }
    dend_53 { pt3dadd( 30.9964, 11.0241, -10.806, 0.33 ) }
    dend_53 { pt3dadd( 31.3565, 10.9933, -11.2131, 2.0 ) }
    dend_53 { pt3dadd( 32.4144, 10.8265, -12.4898, 0.33 ) }
    dend_53 { pt3dadd( 32.736, 10.7425, -12.8816, 0.67 ) }
    dend_53 { pt3dadd( 33.363, 10.4953, -13.6011, 0.33 ) }
    dend_53 { pt3dadd( 34.0827, 10.1541, -14.2777, 1.33 ) }
    dend_53 { pt3dadd( 35.3241, 9.49956, -15.2435, 0.33 ) }
    dend_53 { pt3dadd( 35.4472, 9.43976, -15.3282, 0.67 ) }
    dend_53 { pt3dadd( 36.0049, 9.17976, -15.6095, 0.33 ) }
    dend_53 { pt3dadd( 36.1956, 9.09446, -15.7, 0.67 ) }
    dend_53 { pt3dadd( 38.1794, 8.31007, -16.4731, 0.33 ) }
    dend_53 { pt3dadd( 39.8947, 7.70556, -16.8432, 0.67 ) }
    dend_53 { pt3dadd( 40.6687, 7.4769, -16.8924, 0.33 ) }
    dend_53 { pt3dadd( 41.4603, 7.23961, -16.9459, 0.67 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 97/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 30.3689, 22.9783, -6.36821, 0.67 ) }
    dend_51 { pt3dadd( 32.1633, 28.0413, -5.5867, 0.67 ) }
    dend_51 { pt3dadd( 34.2675, 33.8108, -4.96786, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_51 { pt3dadd( 35.8016, 37.9291, -4.63543, 0.67 ) }
    dend_51 { pt3dadd( 36.53, 39.7064, -4.55477, 0.33 ) }
    dend_51 { pt3dadd( 38.0864, 43.4714, -4.4993, 0.67 ) }
    dend_51 { pt3dadd( 39.5407, 46.9197, -4.52124, 0.67 ) }
    dend_51 { pt3dadd( 40.6306, 49.1183, -4.8047, 0.67 ) }
    dend_51 { pt3dadd( 41.0654, 49.9136, -4.96877, 0.33 ) }
    dend_51 { pt3dadd( 42.3001, 52.0836, -5.56194, 0.67 ) }
    dend_51 { pt3dadd( 43.5487, 54.2721, -6.15923, 0.33 ) }
    dend_51 { pt3dadd( 44.3506, 55.5697, -6.48657, 0.33 ) }
    dend_51 { pt3dadd( 46.9751, 59.361, -7.18415, 0.67 ) }
    dend_51 { pt3dadd( 48.7123, 61.8915, -7.54866, 0.33 ) }
    dend_51 { pt3dadd( 49.666, 63.3297, -7.68545, 0.33 ) }
    dend_51 { pt3dadd( 50.3505, 64.427, -7.72578, 0.33 ) }
    dend_51 { pt3dadd( 51.5631, 66.2787, -7.75964, 0.33 ) }
    dend_51 { pt3dadd( 52.4393, 67.7086, -7.75589, 0.67 ) }
    dend_51 { pt3dadd( 53.2447, 69.0383, -7.68753, 0.33 ) }
    dend_51 { pt3dadd( 53.7847, 69.9972, -7.64751, 0.67 ) }
    dend_51 { pt3dadd( 54.4994, 71.3742, -7.72405, 0.33 ) }
    dend_51 { pt3dadd( 55.5109, 73.3155, -8.00155, 0.67 ) }
    dend_51 { pt3dadd( 56.0115, 74.3785, -8.29748, 0.33 ) }
    dend_51 { pt3dadd( 56.5622, 75.548, -8.73229, 0.67 ) }
    dend_51 { pt3dadd( 57.3681, 77.1729, -9.38138, 0.33 ) }
    dend_51 { pt3dadd( 58.245, 79.0346, -10.1314, 0.67 ) }
    dend_51 { pt3dadd( 58.9644, 80.6183, -10.7283, 0.67 ) }
    dend_51 { pt3dadd( 59.6809, 82.2723, -11.4303, 0.33 ) }
    dend_51 { pt3dadd( 60.1369, 83.3184, -11.8886, 0.67 ) }
    dend_51 { pt3dadd( 60.7777, 84.9096, -12.6017, 0.33 ) }
    dend_51 { pt3dadd( 61.3897, 86.3831, -13.2501, 0.67 ) }
    dend_51 { pt3dadd( 62.0259, 88.0937, -13.9315, 0.33 ) }
    dend_51 { pt3dadd( 62.9936, 90.8948, -15.0116, 0.33 ) }
    dend_51 { pt3dadd( 63.2857, 91.6572, -15.3169, 1.33 ) }
    dend_51 { pt3dadd( 65.5454, 97.2541, -17.6171, 0.33 ) }
    dend_51 { pt3dadd( 65.8837, 98.0228, -17.9758, 1.33 ) }
    dend_51 { pt3dadd( 66.8616, 100.134, -19.0144, 0.33 ) }
    dend_51 { pt3dadd( 67.2885, 101.056, -19.4616, 0.67 ) }
    dend_51 { pt3dadd( 69.5035, 105.3, -21.5465, 0.33 ) }
    dend_51 { pt3dadd( 70.0984, 106.353, -22.0999, 2.0 ) }
    dend_51 { pt3dadd( 71.6723, 108.761, -23.5795, 0.33 ) }
    dend_51 { pt3dadd( 72.4317, 109.865, -24.3039, 0.67 ) }
    dend_51 { pt3dadd( 73.699, 111.563, -25.5144, 0.33 ) }
    dend_51 { pt3dadd( 75.0892, 113.512, -26.9686, 0.67 ) }
    dend_51 { pt3dadd( 76.4164, 115.592, -28.4802, 0.33 ) }
    dend_51 { pt3dadd( 77.5881, 117.403, -29.8491, 1.33 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 43/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 30.3689, 22.9783, -6.36821, 0.33 ) }
    dend_50 { pt3dadd( 32.8728, 25.1339, -10.6077, 0.33 ) }
    dend_50 { pt3dadd( 34.9051, 26.9921, -14.7346, 0.67 ) }
    dend_50 { pt3dadd( 35.8529, 27.9257, -16.8249, 0.33 ) }
    dend_50 { pt3dadd( 36.5054, 28.6781, -18.486, 2.67 ) }
    dend_50 { pt3dadd( 38.8751, 31.6481, -25.0704, 0.33 ) }
    dend_50 { pt3dadd( 39.7316, 32.7651, -27.4128, 0.67 ) }
    dend_50 { pt3dadd( 41.2441, 34.7891, -31.8428, 0.33 ) }
    dend_50 { pt3dadd( 41.5772, 35.2727, -32.7751, 0.67 ) }
    dend_50 { pt3dadd( 43.1144, 37.6853, -37.2689, 0.33 ) }
    dend_50 { pt3dadd( 43.7521, 38.7946, -39.3019, 1.33 ) }
    dend_50 { pt3dadd( 44.7866, 40.6198, -42.462, 0.33 ) }
    dend_50 { pt3dadd( 45.1777, 41.2355, -43.4406, 0.67 ) }
    dend_50 { pt3dadd( 47.2177, 44.2264, -47.8445, 0.33 ) }
    dend_50 { pt3dadd( 49.0222, 46.7976, -51.5706, 1.33 ) }
    dend_50 { pt3dadd( 53.619, 53.2624, -60.7967, 0.33 ) }
    dend_50 { pt3dadd( 54.0698, 53.9134, -61.7326, 0.67 ) }
    dend_50 { pt3dadd( 55.801, 56.5092, -65.6299, 0.33 ) }
    dend_50 { pt3dadd( 56.3451, 57.3507, -66.8925, 0.67 ) }
    dend_50 { pt3dadd( 58.5978, 60.7251, -71.8261, 0.33 ) }
    dend_50 { pt3dadd( 59.4769, 62.073, -73.5628, 0.67 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 64/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 100.6, -21.2276, -0.839818, 0.33 ) }
    dend_46 { pt3dadd( 107.387, -31.8844, -2.34767, 0.33 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 66/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 100.6, -21.2276, -0.839818, 0.33 ) }
    dend_45 { pt3dadd( 105.903, -29.7132, -1.34667, 0.33 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 68/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 72.6649, -21.9811, 17.0823, 0.33 ) }
    dend_42 { pt3dadd( 85.0792, -29.0549, 20.6027, 0.33 ) }
    dend_42 { pt3dadd( 96.7085, -36.8804, 25.0825, 0.33 ) }
    dend_42 { pt3dadd( 107.611, -46.1961, 28.3815, 0.33 ) }
    dend_42 { pt3dadd( 119.476, -54.5554, 30.8096, 0.33 ) }
    dend_42 { pt3dadd( 131.611, -61.9941, 34.544, 0.33 ) }
    dend_42 { pt3dadd( 142.845, -69.8407, 39.9088, 0.33 ) }
    dend_42 { pt3dadd( 153.828, -78.2806, 44.8772, 0.33 ) }
    dend_42 { pt3dadd( 164.637, -85.5862, 51.6842, 0.33 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 77/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 72.6649, -21.9811, 17.0823, 0.33 ) }
    dend_41 { pt3dadd( 80.499, -25.9925, 18.0399, 0.33 ) }
    dend_41 { pt3dadd( 88.4345, -29.8917, 18.4941, 0.33 ) }
    dend_41 { pt3dadd( 95.4689, -35.1808, 19.455, 0.33 ) }
    dend_41 { pt3dadd( 102.468, -39.9957, 21.945, 0.33 ) }
    dend_41 { pt3dadd( 110.097, -44.3177, 23.1693, 0.33 ) }
    dend_41 { pt3dadd( 118.419, -47.1429, 24.2427, 0.33 ) }
    dend_41 { pt3dadd( 126.795, -49.8891, 23.414, 0.33 ) }
    dend_41 { pt3dadd( 135.338, -51.3975, 21.6491, 0.33 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 86/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 72.4437, -11.4337, 18.4536, 0.33 ) }
    dend_39 { pt3dadd( 80.3748, -10.9484, 22.1128, 0.33 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 88/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 72.4437, -11.4337, 18.4536, 0.33 ) }
    dend_38 { pt3dadd( 84.1758, -11.1692, 16.4246, 0.33 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 90/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -39.4666, -0.627004, 17.1317, 0.67 ) }
    dend_35 { pt3dadd( -38.0019, -1.99969, 15.7374, 0.67 ) }
    dend_35 { pt3dadd( -36.3468, -3.55071, 14.1619, 0.33 ) }
    dend_35 { pt3dadd( -35.044, -4.77163, 12.9217, 0.33 ) }
    dend_35 { pt3dadd( -33.6721, -6.05733, 11.6158, 0.67 ) }
    dend_35 { pt3dadd( -26.7821, -10.7971, 7.70664, 0.67 ) }
    dend_35 { pt3dadd( -20.8935, -15.2832, 2.19133, 0.67 ) }
    dend_35 { pt3dadd( -16.5245, -20.7183, -3.85776, 0.67 ) }
    dend_35 { pt3dadd( -10.9978, -26.1673, -8.85616, 0.67 ) }
    dend_35 { pt3dadd( -6.90336, -33.5427, -12.6056, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 0/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -39.4666, -0.627004, 17.1317, 0.67 ) }
    dend_34 { pt3dadd( -42.8208, -0.213338, 18.7309, 0.67 ) }
    dend_34 { pt3dadd( -52.0605, 0.787032, 21.533, 0.67 ) }
    dend_34 { pt3dadd( -61.2337, 3.44081, 23.2744, 0.67 ) }
    dend_34 { pt3dadd( -69.9951, 7.57495, 23.8836, 0.67 ) }
    dend_34 { pt3dadd( -79.1741, 10.7274, 23.7022, 0.67 ) }
    dend_34 { pt3dadd( -88.1253, 14.2696, 24.9484, 0.67 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 7/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -43.7065, 37.8183, -22.6978, 0.33 ) }
    dend_32 { pt3dadd( -45.0526, 37.2225, -23.7392, 0.33 ) }
    dend_32 { pt3dadd( -45.6686, 36.9247, -24.1779, 0.67 ) }
    dend_32 { pt3dadd( -47.8819, 35.8009, -25.7029, 0.33 ) }
    dend_32 { pt3dadd( -49.2905, 35.0857, -26.6734, 0.67 ) }
    dend_32 { pt3dadd( -52.8067, 33.3004, -29.0961, 0.67 ) }
    dend_32 { pt3dadd( -54.2805, 32.5522, -30.1115, 0.67 ) }
    dend_32 { pt3dadd( -56.5591, 31.329, -31.8383, 0.33 ) }
    dend_32 { pt3dadd( -56.8112, 31.1804, -32.0457, 0.67 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 16/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -43.7065, 37.8183, -22.6978, 0.33 ) }
    dend_31 { pt3dadd( -43.2351, 39.1813, -25.4498, 0.33 ) }
    dend_31 { pt3dadd( -42.4291, 41.512, -30.1557, 0.67 ) }
    dend_31 { pt3dadd( -41.907, 43.0218, -33.2041, 0.33 ) }
    dend_31 { pt3dadd( -41.1594, 45.1836, -37.5689, 0.67 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 21/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -4.59187, 16.0542, -0.459008, 2.0 ) }
    dend_12 { pt3dadd( -7.04867, 19.8747, -1.20522, 2.0 ) }
    dend_12 { pt3dadd( -8.88647, 22.7325, -1.76342, 2.0 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 24/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -4.59187, 16.0542, -0.459008, 1.33 ) }
    dend_9 { pt3dadd( -5.88311, 16.2815, 0.125418, 1.33 ) }
    dend_9 { pt3dadd( -6.52212, 16.4256, 0.397796, 1.33 ) }
    dend_9 { pt3dadd( -7.48256, 16.6969, 0.777972, 1.33 ) }
    dend_9 { pt3dadd( -8.67619, 17.1234, 1.23533, 0.67 ) }
    dend_9 { pt3dadd( -9.56513, 17.5438, 1.63578, 0.67 ) }
    dend_9 { pt3dadd( -10.9384, 18.1932, 2.2544, 0.67 ) }
    dend_9 { pt3dadd( -11.8359, 18.6761, 2.641, 0.67 ) }
    dend_9 { pt3dadd( -12.6161, 19.1463, 2.98406, 0.67 ) }
    dend_9 { pt3dadd( -13.272, 19.6318, 3.26388, 0.67 ) }
    dend_9 { pt3dadd( -14.4901, 20.8234, 3.94776, 0.67 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 35/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 1.04303, 24.0757, 5.97314, 0.67 ) }
    dend_7 { pt3dadd( 2.50133, 30.4347, 5.53989, 0.67 ) }
    dend_7 { pt3dadd( 3.35895, 34.0832, 5.28365, 0.67 ) }
    dend_7 { pt3dadd( 4.1958, 37.279, 5.16003, 0.67 ) }
    dend_7 { pt3dadd( 5.54654, 41.8335, 5.08889, 0.67 ) }
    dend_7 { pt3dadd( 7.86727, 48.7938, 5.04146, 0.67 ) }
    dend_7 { pt3dadd( 9.15134, 52.255, 5.04492, 0.33 ) }
    dend_7 { pt3dadd( 10.0019, 54.1003, 5.1573, 0.33 ) }
    dend_7 { pt3dadd( 11.5323, 57.1241, 5.37134, 0.67 ) }
    dend_7 { pt3dadd( 12.918, 59.5086, 5.56417, 0.67 ) }
    dend_7 { pt3dadd( 13.9128, 61.0253, 5.70016, 0.67 ) }
    dend_7 { pt3dadd( 14.9508, 62.3354, 5.83421, 0.33 ) }
    dend_7 { pt3dadd( 15.8036, 63.3715, 5.96047, 0.67 ) }
    dend_7 { pt3dadd( 16.754, 64.7531, 6.00907, 0.33 ) }
    dend_7 { pt3dadd( 17.3129, 65.8117, 5.82267, 0.33 ) }
    dend_7 { pt3dadd( 17.772, 66.9023, 5.55757, 0.67 ) }
    dend_7 { pt3dadd( 18.579, 69.0845, 4.88093, 0.33 ) }
    dend_7 { pt3dadd( 19.3429, 71.1618, 4.15742, 1.33 ) }
    dend_7 { pt3dadd( 20.1525, 73.3313, 3.38768, 0.33 ) }
    dend_7 { pt3dadd( 21.5943, 77.2185, 2.04877, 1.33 ) }
    dend_7 { pt3dadd( 22.9586, 80.8759, 0.862329, 0.33 ) }
    dend_7 { pt3dadd( 23.8844, 83.2265, 0.124061, 1.33 ) }
    dend_7 { pt3dadd( 24.5276, 84.743, -0.324351, 1.33 ) }
    dend_7 { pt3dadd( 25.5504, 87.3377, -1.00595, 0.67 ) }
    dend_7 { pt3dadd( 26.3434, 89.3907, -1.50871, 1.33 ) }
    dend_7 { pt3dadd( 27.0408, 91.2768, -1.83712, 0.33 ) }
    dend_7 { pt3dadd( 27.3469, 92.1165, -2.00978, 0.67 ) }
    dend_7 { pt3dadd( 27.9401, 93.458, -2.38214, 0.33 ) }
    dend_7 { pt3dadd( 28.4168, 94.2853, -2.70968, 0.33 ) }
    dend_7 { pt3dadd( 29.806, 95.9582, -3.65436, 0.67 ) }
    dend_7 { pt3dadd( 30.9015, 97.1007, -4.31773, 0.33 ) }
    dend_7 { pt3dadd( 32.137, 98.4654, -5.05245, 1.33 ) }
    dend_7 { pt3dadd( 34.3929, 101.027, -6.30704, 0.33 ) }
    dend_7 { pt3dadd( 35.5359, 102.449, -6.93784, 2.0 ) }
    dend_7 { pt3dadd( 38.0207, 105.775, -8.25306, 0.33 ) }
    dend_7 { pt3dadd( 39.0941, 107.462, -8.79031, 0.67 ) }
    dend_7 { pt3dadd( 39.7166, 109.822, -9.5448, 0.33 ) }
    dend_7 { pt3dadd( 39.7166, 109.822, -9.5448, 0.67 ) }
    dend_7 { pt3dadd( 39.0762, 111.762, -10.1245, 0.33 ) }
    dend_7 { pt3dadd( 38.4235, 113.241, -10.691, 0.33 ) }
    dend_7 { pt3dadd( 38.1786, 113.892, -10.9825, 0.67 ) }
    dend_7 { pt3dadd( 37.4891, 117.11, -12.4981, 0.33 ) }
    dend_7 { pt3dadd( 37.4448, 119.014, -13.2804, 0.67 ) }
    dend_7 { pt3dadd( 37.7394, 122.808, -14.6201, 0.33 ) }
    dend_7 { pt3dadd( 37.8574, 123.4, -14.7904, 0.67 ) }
    dend_7 { pt3dadd( 39.0457, 127.772, -15.8932, 0.33 ) }
    dend_7 { pt3dadd( 39.7828, 130.192, -16.3393, 0.33 ) }
    dend_7 { pt3dadd( 40.9627, 133.683, -16.7277, 0.67 ) }
    dend_7 { pt3dadd( 42.0751, 136.424, -17.0021, 0.33 ) }
    dend_7 { pt3dadd( 43.4934, 139.541, -17.1592, 0.33 ) }
    dend_7 { pt3dadd( 44.141, 140.925, -17.219, 0.67 ) }
    dend_7 { pt3dadd( 45.237, 143.273, -17.2648, 0.33 ) }
    dend_7 { pt3dadd( 45.6688, 144.175, -17.2868, 0.67 ) }
    dend_7 { pt3dadd( 47.5667, 148.116, -17.3732, 0.33 ) }
    dend_7 { pt3dadd( 48.8325, 150.681, -17.3583, 0.33 ) }
    dend_7 { pt3dadd( 49.4269, 151.997, -17.3527, 1.33 ) }
    dend_7 { pt3dadd( 50.106, 153.67, -17.2404, 0.33 ) }
    dend_7 { pt3dadd( 50.2325, 153.984, -17.226, 0.67 ) }
    dend_7 { pt3dadd( 50.6745, 155.288, -17.1017, 0.33 ) }
    dend_7 { pt3dadd( 50.8656, 156.284, -16.8796, 0.67 ) }
    dend_7 { pt3dadd( 51.3286, 158.976, -16.1173, 0.33 ) }
    dend_7 { pt3dadd( 51.6912, 161.618, -15.2957, 1.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 97/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 1.04303, 24.0757, 5.97314, 0.67 ) }
    dend_2 { pt3dadd( 3.37917, 26.7, 5.46668, 0.67 ) }
    dend_2 { pt3dadd( 5.1172, 28.4803, 5.2275, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_2 { pt3dadd( 6.48167, 29.8722, 5.08359, 0.33 ) }
    dend_2 { pt3dadd( 8.53349, 31.8305, 4.89271, 0.67 ) }
    dend_2 { pt3dadd( 10.9282, 34.1665, 4.68359, 0.67 ) }
    dend_2 { pt3dadd( 12.9222, 36.1426, 4.51535, 0.33 ) }
    dend_2 { pt3dadd( 14.73, 38.0398, 4.30279, 0.67 ) }
    dend_2 { pt3dadd( 16.1377, 39.3967, 4.1854, 0.33 ) }
    dend_2 { pt3dadd( 18.2379, 41.1983, 4.0576, 0.67 ) }
    dend_2 { pt3dadd( 19.8299, 42.5731, 4.00397, 0.33 ) }
    dend_2 { pt3dadd( 20.1077, 42.8447, 4.00323, 0.67 ) }
    dend_2 { pt3dadd( 21.979, 44.6943, 4.0907, 0.33 ) }
    dend_2 { pt3dadd( 25.2014, 47.8678, 4.28464, 0.67 ) }
    dend_2 { pt3dadd( 26.6224, 49.2539, 4.50933, 0.33 ) }
    dend_2 { pt3dadd( 28.1905, 50.7697, 4.86184, 0.33 ) }
    dend_2 { pt3dadd( 30.1869, 52.611, 5.36834, 0.67 ) }
    dend_2 { pt3dadd( 34.2674, 56.3021, 6.48282, 0.67 ) }
    dend_2 { pt3dadd( 36.3684, 58.1584, 6.96865, 0.67 ) }
    dend_2 { pt3dadd( 38.5613, 60.0805, 7.50933, 0.33 ) }
    dend_2 { pt3dadd( 40.053, 61.2888, 7.87112, 0.33 ) }
    dend_2 { pt3dadd( 41.7352, 62.5072, 8.23632, 0.67 ) }
    dend_2 { pt3dadd( 44.6398, 64.5107, 8.74396, 0.33 ) }
    dend_2 { pt3dadd( 47.5217, 66.8, 8.76715, 0.67 ) }
    // Section: apic_14, id: apic_14, parent: apic_12 (entry count 21/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 1.43175, -160.74, 12.4981, 1.33 ) }
    apic_14 { pt3dadd( 1.70037, -162.345, 15.1733, 1.33 ) }
    // Section: apic_13, id: apic_13, parent: apic_12 (entry count 23/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 1.43175, -160.74, 12.4981, 0.33 ) }
    apic_13 { pt3dadd( 2.20123, -163.924, 12.1122, 0.33 ) }
    apic_13 { pt3dadd( 2.62617, -165.652, 11.8937, 0.33 ) }
    apic_13 { pt3dadd( 3.80261, -169.988, 11.5694, 0.33 ) }
    apic_13 { pt3dadd( 4.30399, -171.814, 11.4813, 0.33 ) }
    apic_13 { pt3dadd( 5.92185, -177.605, 10.6127, 0.33 ) }
    apic_13 { pt3dadd( 6.15375, -178.563, 10.4286, 0.33 ) }
    apic_13 { pt3dadd( 6.64532, -180.856, 9.9034, 0.67 ) }
    apic_13 { pt3dadd( 7.61319, -184.604, 8.65499, 0.33 ) }
    apic_13 { pt3dadd( 8.04428, -186.037, 8.05207, 0.67 ) }
    apic_13 { pt3dadd( 9.55922, -191.832, 5.11042, 0.33 ) }
    apic_13 { pt3dadd( 9.96105, -193.926, 3.97796, 0.33 ) }
    apic_13 { pt3dadd( 10.3073, -195.632, 2.9963, 2.0 ) }
    apic_13 { pt3dadd( 11.2445, -200.047, 0.207603, 0.33 ) }
    apic_13 { pt3dadd( 11.5519, -201.53, -0.818662, 2.0 ) }
    apic_13 { pt3dadd( 12.7939, -207.031, -4.57231, 0.33 ) }
    apic_13 { pt3dadd( 13.3695, -209.294, -5.95099, 0.33 ) }
    apic_13 { pt3dadd( 13.7093, -210.416, -6.67159, 0.67 ) }
    // Section: apic_11, id: apic_11, parent: apic_9 (entry count 41/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( -11.0809, -59.7983, 13.682, 0.33 ) }
    apic_11 { pt3dadd( -11.945, -58.1827, 13.3645, 0.33 ) }
    apic_11 { pt3dadd( -12.5483, -57.0548, 13.1428, 0.67 ) }
    // Section: apic_10, id: apic_10, parent: apic_9 (entry count 44/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( -11.0809, -59.7983, 13.682, 0.33 ) }
    apic_10 { pt3dadd( -11.4558, -63.6728, 14.343, 0.33 ) }
    // Section: apic_7, id: apic_7, parent: apic_5 (entry count 46/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 48.546, -108.178, -9.00813, 0.33 ) }
    apic_7 { pt3dadd( 48.581, -109.831, -10.3442, 0.33 ) }
    apic_7 { pt3dadd( 48.6657, -111.908, -11.9115, 0.67 ) }
    apic_7 { pt3dadd( 48.7139, -113.297, -12.7932, 0.33 ) }
    apic_7 { pt3dadd( 48.6231, -115.46, -13.8899, 1.33 ) }
    apic_7 { pt3dadd( 48.4709, -118.328, -15.1283, 0.33 ) }
    apic_7 { pt3dadd( 48.4131, -119.489, -15.6838, 0.33 ) }
    apic_7 { pt3dadd( 48.3877, -120.103, -15.9827, 0.67 ) }
    apic_7 { pt3dadd( 48.2573, -122.672, -17.2615, 0.33 ) }
    apic_7 { pt3dadd( 48.0216, -126.143, -19.1595, 0.33 ) }
    apic_7 { pt3dadd( 47.8974, -127.473, -19.8856, 2.67 ) }
    apic_7 { pt3dadd( 47.4656, -131.702, -22.25, 0.33 ) }
    apic_7 { pt3dadd( 47.3938, -132.342, -22.6536, 0.67 ) }
    apic_7 { pt3dadd( 47.1556, -134.701, -24.3826, 0.33 ) }
    apic_7 { pt3dadd( 47.1556, -134.701, -24.3826, 0.67 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 61/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 48.546, -108.178, -9.00813, 0.33 ) }
    apic_6 { pt3dadd( 50.9835, -109.25, -10.5823, 0.33 ) }
    apic_6 { pt3dadd( 52.0966, -109.726, -11.4177, 0.67 ) }
    apic_6 { pt3dadd( 55.3647, -111.124, -13.8706, 0.33 ) }
    apic_6 { pt3dadd( 57.4272, -112.005, -15.4186, 0.67 ) }
    apic_6 { pt3dadd( 59.6628, -112.961, -17.0965, 0.33 ) }
    apic_6 { pt3dadd( 63.7033, -114.689, -20.1291, 0.33 ) }
    apic_6 { pt3dadd( 65.3135, -115.411, -21.4178, 0.33 ) }
    // Section: apic_4, id: apic_4, parent: apic_2 (entry count 69/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 19.9201, -51.4775, -26.6647, 0.33 ) }
    apic_4 { pt3dadd( 22.0579, -52.033, -28.5656, 0.33 ) }
    apic_4 { pt3dadd( 23.3042, -52.4048, -29.7977, 1.33 ) }
    apic_4 { pt3dadd( 24.4433, -52.7851, -30.933, 0.33 ) }
    apic_4 { pt3dadd( 25.0424, -53.0174, -31.6349, 0.67 ) }
    apic_4 { pt3dadd( 27.7791, -54.1542, -34.9604, 0.33 ) }
    apic_4 { pt3dadd( 29.5268, -54.932, -37.2198, 0.67 ) }
    apic_4 { pt3dadd( 32.0216, -56.2454, -40.3745, 0.33 ) }
    apic_4 { pt3dadd( 32.4125, -56.4691, -40.8704, 1.33 ) }
    apic_4 { pt3dadd( 34.713, -57.9489, -43.7943, 0.33 ) }
    apic_4 { pt3dadd( 35.4144, -58.4926, -44.6936, 1.33 ) }
    apic_4 { pt3dadd( 37.2376, -60.1893, -46.9148, 0.67 ) }
    apic_4 { pt3dadd( 38.6483, -61.8405, -48.7515, 0.33 ) }
    apic_4 { pt3dadd( 39.435, -62.8421, -49.6151, 0.33 ) }
    apic_4 { pt3dadd( 40.0823, -63.7662, -50.4276, 0.67 ) }
    apic_4 { pt3dadd( 41.0289, -65.2341, -51.6465, 0.33 ) }
    apic_4 { pt3dadd( 41.2167, -65.5425, -51.9469, 0.67 ) }
    apic_4 { pt3dadd( 42.5361, -67.6448, -54.334, 0.33 ) }
    apic_4 { pt3dadd( 42.9974, -68.3164, -55.2142, 0.67 ) }
    apic_4 { pt3dadd( 44.8955, -70.6685, -58.8252, 0.33 ) }
    apic_4 { pt3dadd( 46.0224, -71.9682, -60.9264, 0.67 ) }
    apic_4 { pt3dadd( 47.8237, -73.8413, -64.2982, 0.33 ) }
    apic_4 { pt3dadd( 48.5111, -74.5495, -65.6264, 0.67 ) }
    apic_4 { pt3dadd( 48.8888, -74.9203, -66.3679, 0.33 ) }
    apic_4 { pt3dadd( 49.7668, -75.8331, -68.1262, 1.33 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 94/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 19.9201, -51.4775, -26.6647, 0.33 ) }
    apic_3 { pt3dadd( 21.0562, -52.693, -30.2112, 0.33 ) }
    apic_3 { pt3dadd( 21.2364, -52.8938, -30.8207, 1.33 ) }
    apic_3 { pt3dadd( 22.7471, -54.6565, -36.0501, 0.33 ) }
    apic_3 { pt3dadd( 23.2051, -55.4589, -38.1342, 0.67 ) }
    apic_3 { pt3dadd( 24.0125, -57.3884, -42.7197, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    apic_3 { pt3dadd( 24.1193, -57.6435, -43.3261, 0.67 ) }
    apic_3 { pt3dadd( 24.5214, -59.2179, -47.013, 0.33 ) }
    apic_3 { pt3dadd( 24.7134, -60.1014, -49.0982, 1.33 ) }
    apic_3 { pt3dadd( 25.0552, -62.4494, -54.3848, 0.33 ) }
    apic_3 { pt3dadd( 25.0704, -62.9569, -55.4022, 0.67 ) }
    // Section: dend_20, id: dend_20, parent: dend_12 (entry count 5/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -8.88647, 22.7325, -1.76342, 1.33 ) }
    dend_20 { pt3dadd( -10.2574, 23.3736, -2.01889, 1.33 ) }
    dend_20 { pt3dadd( -12.4268, 24.3881, -2.42315, 1.33 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 8/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -8.88647, 22.7325, -1.76342, 0.67 ) }
    dend_13 { pt3dadd( -6.38369, 25.6429, -2.83873, 0.67 ) }
    dend_13 { pt3dadd( -1.90834, 30.8472, -4.76154, 0.67 ) }
    dend_13 { pt3dadd( 0.937139, 34.1561, -5.98408, 0.67 ) }
    dend_13 { pt3dadd( 1.41636, 34.7134, -6.18998, 1.33 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 13/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -14.4901, 20.8234, 3.94776, 0.67 ) }
    dend_11 { pt3dadd( -14.7805, 25.1081, 2.04711, 0.67 ) }
    dend_11 { pt3dadd( -15.0032, 27.5358, 0.895192, 0.67 ) }
    dend_11 { pt3dadd( -15.1385, 28.6205, 0.33507, 0.67 ) }
    dend_11 { pt3dadd( -15.6108, 31.9096, -1.20516, 0.67 ) }
    dend_11 { pt3dadd( -16.1305, 35.2627, -2.67747, 0.67 ) }
    dend_11 { pt3dadd( -16.6196, 38.0275, -3.67405, 0.67 ) }
    dend_11 { pt3dadd( -17.0263, 40.0748, -4.323, 0.33 ) }
    dend_11 { pt3dadd( -17.4614, 42.0924, -4.83205, 1.33 ) }
    dend_11 { pt3dadd( -17.9926, 45.0781, -5.27379, 0.33 ) }
    dend_11 { pt3dadd( -18.2421, 46.9015, -5.33901, 0.67 ) }
    dend_11 { pt3dadd( -18.7279, 50.5242, -5.13056, 0.33 ) }
    dend_11 { pt3dadd( -18.9962, 52.9364, -4.86001, 0.33 ) }
    dend_11 { pt3dadd( -19.0542, 53.8022, -4.75495, 0.67 ) }
    dend_11 { pt3dadd( -19.1306, 56.1606, -4.4222, 0.33 ) }
    dend_11 { pt3dadd( -19.1294, 57.7449, -4.29037, 0.67 ) }
    dend_11 { pt3dadd( -19.0934, 58.6198, -4.23964, 0.33 ) }
    dend_11 { pt3dadd( -18.9869, 59.565, -4.34213, 0.67 ) }
    dend_11 { pt3dadd( -18.6446, 66.5559, -6.26611, 0.67 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 32/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -14.4901, 20.8234, 3.94776, 0.67 ) }
    dend_10 { pt3dadd( -15.7948, 23.3638, 4.93354, 0.67 ) }
    dend_10 { pt3dadd( -17.1235, 25.9509, 5.93743, 0.67 ) }
    dend_10 { pt3dadd( -18.4177, 28.4709, 6.91526, 0.67 ) }
    dend_10 { pt3dadd( -22.3945, 35.5378, 9.69611, 0.67 ) }
    dend_10 { pt3dadd( -26.7537, 42.6887, 11.5266, 0.67 ) }
    dend_10 { pt3dadd( -32.4213, 48.9548, 12.9768, 0.67 ) }
    dend_10 { pt3dadd( -38.3347, 54.3915, 15.9706, 0.67 ) }
    dend_10 { pt3dadd( -44.453, 59.1798, 19.5939, 0.67 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 41/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 47.5217, 66.8, 8.76715, 0.33 ) }
    dend_6 { pt3dadd( 48.7699, 67.8072, 8.18003, 0.33 ) }
    dend_6 { pt3dadd( 50.0163, 68.8129, 7.59377, 0.33 ) }
    dend_6 { pt3dadd( 53.0953, 71.2971, 6.14558, 0.67 ) }
    dend_6 { pt3dadd( 54.8778, 72.7354, 5.30715, 0.33 ) }
    dend_6 { pt3dadd( 56.67, 74.1814, 4.4642, 0.67 ) }
    dend_6 { pt3dadd( 58.3066, 75.5019, 3.6944, 0.33 ) }
    dend_6 { pt3dadd( 67.7786, 81.4256, 1.18426, 0.33 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 49/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 47.5217, 66.8, 8.76715, 0.33 ) }
    dend_3 { pt3dadd( 48.8614, 66.4086, 9.14937, 0.33 ) }
    dend_3 { pt3dadd( 49.7395, 66.121, 9.38063, 0.67 ) }
    dend_3 { pt3dadd( 52.0981, 65.3081, 9.94014, 0.33 ) }
    dend_3 { pt3dadd( 56.4534, 63.7998, 10.8981, 0.33 ) }
    dend_3 { pt3dadd( 57.097, 63.6042, 11.005, 0.67 ) }
    dend_3 { pt3dadd( 59.0494, 63.0469, 11.2694, 0.33 ) }
    dend_3 { pt3dadd( 59.3685, 62.9516, 11.2988, 0.67 ) }
    dend_3 { pt3dadd( 60.701, 62.5609, 11.3746, 0.33 ) }
    dend_3 { pt3dadd( 61.4246, 62.3497, 11.4037, 0.67 ) }
    dend_3 { pt3dadd( 66.382, 61.0768, 11.6239, 0.33 ) }
    dend_3 { pt3dadd( 68.049, 60.6721, 11.7037, 0.33 ) }
    dend_3 { pt3dadd( 71.3442, 59.9284, 11.8693, 0.67 ) }
    dend_3 { pt3dadd( 74.1616, 59.2867, 12.0209, 0.67 ) }
    dend_3 { pt3dadd( 75.5868, 58.95, 12.1072, 0.67 ) }
    dend_3 { pt3dadd( 85.0495, 55.4586, 12.4786, 0.67 ) }
    // Section: apic_16, id: apic_16, parent: apic_14 (entry count 65/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( 1.70037, -162.345, 15.1733, 1.33 ) }
    apic_16 { pt3dadd( 2.11414, -168.068, 13.8716, 1.33 ) }
    apic_16 { pt3dadd( 2.40857, -172.436, 13.2999, 1.33 ) }
    apic_16 { pt3dadd( 2.65179, -175.207, 13.0691, 1.33 ) }
    apic_16 { pt3dadd( 3.02481, -180.309, 12.8044, 0.67 ) }
    apic_16 { pt3dadd( 3.06302, -180.918, 12.7822, 0.67 ) }
    apic_16 { pt3dadd( 3.13492, -182.27, 12.7461, 0.67 ) }
    apic_16 { pt3dadd( 3.19495, -188.437, 12.9151, 0.67 ) }
    apic_16 { pt3dadd( 3.21744, -191.375, 13.0427, 0.67 ) }
    apic_16 { pt3dadd( 3.23774, -194.362, 13.1922, 0.67 ) }
    apic_16 { pt3dadd( 3.23924, -196.927, 13.3575, 0.67 ) }
    apic_16 { pt3dadd( 3.22754, -198.386, 13.4176, 1.33 ) }
    apic_16 { pt3dadd( 3.10953, -201.64, 13.4606, 0.67 ) }
    apic_16 { pt3dadd( 3.01081, -203.378, 13.4725, 0.67 ) }
    apic_16 { pt3dadd( 2.72469, -206.586, 13.5884, 0.67 ) }
    apic_16 { pt3dadd( 2.54767, -208.562, 13.6994, 2.0 ) }
    apic_16 { pt3dadd( 2.17677, -212.413, 13.9799, 0.67 ) }
    apic_16 { pt3dadd( 1.64786, -218.124, 14.4397, 0.67 ) }
    apic_16 { pt3dadd( 1.37595, -220.973, 14.6888, 1.33 ) }
    apic_16 { pt3dadd( 0.936209, -224.5, 15.0604, 0.67 ) }
    apic_16 { pt3dadd( 0.738512, -225.842, 15.2187, 0.67 ) }
    apic_16 { pt3dadd( 0.511898, -227.55, 15.4064, 1.33 ) }
    apic_16 { pt3dadd( 0.289748, -230.232, 15.7266, 0.67 ) }
    apic_16 { pt3dadd( 0.183455, -232.792, 15.9772, 1.33 ) }
    apic_16 { pt3dadd( 0.0346075, -237.436, 16.2923, 0.67 ) }
    apic_16 { pt3dadd( -0.0427565, -240.101, 16.4346, 0.67 ) }
    apic_16 { pt3dadd( -0.0862476, -241.641, 16.492, 0.67 ) }
    apic_16 { pt3dadd( -0.173229, -244.714, 16.5669, 0.67 ) }
    apic_16 { pt3dadd( -0.252326, -247.621, 16.5913, 0.33 ) }
    apic_16 { pt3dadd( -0.290343, -250.616, 16.5432, 1.33 ) }
    apic_16 { pt3dadd( -0.292671, -252.994, 16.4222, 0.67 ) }
    apic_16 { pt3dadd( -0.293177, -255.318, 16.2167, 0.33 ) }
    apic_16 { pt3dadd( -0.278765, -256.174, 16.1372, 0.67 ) }
    apic_16 { pt3dadd( -0.275898, -257.287, 16.0006, 0.33 ) }
    apic_16 { pt3dadd( -0.205614, -258.635, 15.8784, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    apic_16 { pt3dadd( -0.0157969, -259.97, 15.7386, 0.33 ) }
    apic_16 { pt3dadd( 0.388193, -262.076, 15.5422, 0.67 ) }
    apic_16 { pt3dadd( 0.907481, -264.741, 15.2638, 0.33 ) }
    // Section: apic_15, id: apic_15, parent: apic_14 (entry count 3/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( 1.70037, -162.345, 15.1733, 0.67 ) }
    apic_15 { pt3dadd( 0.550014, -164.013, 15.5561, 0.67 ) }
    apic_15 { pt3dadd( -1.08097, -166.379, 16.0988, 0.67 ) }
    apic_15 { pt3dadd( -2.32911, -168.189, 16.5141, 0.67 ) }
    apic_15 { pt3dadd( -3.0059, -169.171, 16.7393, 0.67 ) }
    apic_15 { pt3dadd( -4.59488, -171.476, 17.2681, 0.33 ) }
    apic_15 { pt3dadd( -5.57626, -172.899, 17.5946, 0.67 ) }
    // Section: dend_26, id: dend_26, parent: dend_20 (entry count 10/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -12.4268, 24.3881, -2.42315, 0.67 ) }
    dend_26 { pt3dadd( -13.3021, 21.4986, -2.55509, 0.67 ) }
    dend_26 { pt3dadd( -14.0314, 19.091, -2.66502, 0.67 ) }
    dend_26 { pt3dadd( -14.8525, 16.3806, -2.78877, 0.67 ) }
    dend_26 { pt3dadd( -15.3049, 14.8871, -2.85696, 0.67 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 15/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -12.4268, 24.3881, -2.42315, 0.67 ) }
    dend_21 { pt3dadd( -11.4033, 27.7846, -3.53864, 0.67 ) }
    dend_21 { pt3dadd( -9.72708, 35.6988, -5.63148, 0.67 ) }
    dend_21 { pt3dadd( -9.27402, 38.0469, -6.19313, 0.67 ) }
    dend_21 { pt3dadd( -8.50207, 43.6507, -7.37624, 0.67 ) }
    dend_21 { pt3dadd( -8.08751, 47.5107, -8.12557, 0.67 ) }
    dend_21 { pt3dadd( -7.26472, 54.3442, -9.51691, 0.67 ) }
    dend_21 { pt3dadd( -5.94615, 65.0506, -11.6175, 0.67 ) }
    dend_21 { pt3dadd( -5.66245, 67.4939, -12.0823, 0.67 ) }
    dend_21 { pt3dadd( -5.27718, 73.1266, -12.9721, 0.67 ) }
    dend_21 { pt3dadd( -5.26748, 74.8897, -13.146, 0.33 ) }
    dend_21 { pt3dadd( -5.5946, 80.5623, -13.7411, 1.33 ) }
    // Section: dend_19, id: dend_19, parent: dend_13 (entry count 27/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 1.41636, 34.7134, -6.18998, 1.33 ) }
    dend_19 { pt3dadd( 1.42346, 36.1519, -5.90643, 1.33 ) }
    dend_19 { pt3dadd( 1.65121, 38.6605, -5.27372, 0.67 ) }
    dend_19 { pt3dadd( 1.87331, 40.0523, -5.01011, 0.67 ) }
    dend_19 { pt3dadd( 2.18075, 41.5631, -4.78644, 0.33 ) }
    dend_19 { pt3dadd( 2.71035, 44.4401, -4.47332, 0.67 ) }
    dend_19 { pt3dadd( 3.3157, 47.869, -4.17753, 0.67 ) }
    dend_19 { pt3dadd( 4.12921, 51.9351, -3.93206, 0.67 ) }
    dend_19 { pt3dadd( 4.71513, 54.4136, -4.02446, 0.33 ) }
    dend_19 { pt3dadd( 4.94116, 55.5245, -4.16286, 0.67 ) }
    dend_19 { pt3dadd( 5.31256, 57.5705, -4.5194, 0.33 ) }
    dend_19 { pt3dadd( 5.4162, 58.327, -4.68111, 0.33 ) }
    dend_19 { pt3dadd( 5.46997, 58.8279, -4.81593, 0.67 ) }
    dend_19 { pt3dadd( 5.57212, 62.2936, -5.58791, 0.67 ) }
    dend_19 { pt3dadd( 5.66405, 65.3747, -6.10978, 0.33 ) }
    dend_19 { pt3dadd( 5.7997, 68.4693, -6.5734, 0.67 ) }
    dend_19 { pt3dadd( 5.90031, 70.2817, -6.83762, 0.33 ) }
    dend_19 { pt3dadd( 5.95139, 72.3897, -7.18823, 0.33 ) }
    dend_19 { pt3dadd( 5.93238, 74.7485, -7.58913, 0.33 ) }
    dend_19 { pt3dadd( 5.81987, 77.3128, -8.08303, 0.67 ) }
    dend_19 { pt3dadd( 5.78208, 78.0139, -8.28028, 0.67 ) }
    dend_19 { pt3dadd( 5.5714, 81.7239, -9.67995, 0.33 ) }
    dend_19 { pt3dadd( 5.52147, 83.1291, -10.225, 0.33 ) }
    dend_19 { pt3dadd( 5.48568, 83.6282, -10.4247, 0.67 ) }
    dend_19 { pt3dadd( 5.26506, 86.6274, -11.6222, 0.33 ) }
    dend_19 { pt3dadd( 5.22973, 87.1163, -11.7944, 1.33 ) }
    dend_19 { pt3dadd( 5.0732, 89.7262, -12.6073, 0.33 ) }
    dend_19 { pt3dadd( 5.00833, 91.912, -13.1237, 0.67 ) }
    dend_19 { pt3dadd( 4.94645, 93.0442, -13.3671, 0.33 ) }
    dend_19 { pt3dadd( 4.85277, 93.9356, -13.5583, 0.67 ) }
    dend_19 { pt3dadd( 4.6912, 94.9545, -13.8158, 0.33 ) }
    dend_19 { pt3dadd( 4.46185, 96.4283, -14.2411, 0.33 ) }
    dend_19 { pt3dadd( 4.08139, 98.7992, -14.9475, 0.33 ) }
    dend_19 { pt3dadd( 3.79945, 100.814, -15.6695, 0.33 ) }
    dend_19 { pt3dadd( 3.7213, 101.588, -15.9329, 0.67 ) }
    dend_19 { pt3dadd( 3.46948, 104.703, -16.9245, 0.33 ) }
    dend_19 { pt3dadd( 3.40813, 106.667, -17.6385, 0.67 ) }
    dend_19 { pt3dadd( 3.43645, 108.527, -18.3178, 0.33 ) }
    dend_19 { pt3dadd( 3.49149, 110.115, -18.8789, 0.67 ) }
    dend_19 { pt3dadd( 3.61002, 112.78, -19.7973, 0.33 ) }
    dend_19 { pt3dadd( 3.64527, 113.678, -20.1088, 0.67 ) }
    dend_19 { pt3dadd( 3.69153, 117.188, -21.2818, 0.33 ) }
    dend_19 { pt3dadd( 3.65569, 119.614, -22.1219, 0.33 ) }
    dend_19 { pt3dadd( 3.68806, 121.069, -22.6579, 1.33 ) }
    dend_19 { pt3dadd( 3.83558, 124.213, -23.714, 0.33 ) }
    dend_19 { pt3dadd( 3.87417, 124.949, -23.9516, 0.67 ) }
    dend_19 { pt3dadd( 3.951, 126.55, -24.4002, 0.33 ) }
    dend_19 { pt3dadd( 3.97191, 127.119, -24.5193, 0.67 ) }
    dend_19 { pt3dadd( 4.23587, 131.724, -25.4269, 0.33 ) }
    dend_19 { pt3dadd( 4.31858, 133.257, -25.6718, 0.67 ) }
    dend_19 { pt3dadd( 4.3591, 134.413, -25.7944, 0.33 ) }
    dend_19 { pt3dadd( 4.35566, 135.347, -25.8778, 0.67 ) }
    dend_19 { pt3dadd( 4.3383, 136.282, -25.9444, 0.33 ) }
    dend_19 { pt3dadd( 4.22582, 138.153, -25.9909, 0.33 ) }
    dend_19 { pt3dadd( 4.05306, 139.063, -25.9093, 0.67 ) }
    dend_19 { pt3dadd( 3.84198, 140.341, -25.8586, 0.33 ) }
    dend_19 { pt3dadd( 3.62913, 141.915, -25.7992, 0.67 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 84/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 1.41636, 34.7134, -6.18998, 0.67 ) }
    dend_14 { pt3dadd( 4.28376, 35.5084, -9.55783, 0.67 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 86/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 85.0495, 55.4586, 12.4786, 0.33 ) }
    dend_5 { pt3dadd( 93.6406, 53.4564, 10.7832, 0.33 ) }
    dend_5 { pt3dadd( 102.454, 52.478, 9.34937, 0.33 ) }
    dend_5 { pt3dadd( 111.399, 51.6561, 9.37355, 0.33 ) }
    dend_5 { pt3dadd( 119.974, 48.9845, 9.28878, 0.33 ) }
    dend_5 { pt3dadd( 128.655, 47.4141, 10.9837, 0.33 ) }
    dend_5 { pt3dadd( 137.342, 45.8143, 12.613, 0.33 ) }
    dend_5 { pt3dadd( 146.078, 44.7965, 14.4437, 0.33 ) }
    dend_5 { pt3dadd( 154.386, 45.0179, 17.8505, 0.33 ) }
    dend_5 { pt3dadd( 162.24, 45.9313, 22.1126, 0.33 ) }
    dend_5 { pt3dadd( 170.194, 47.8255, 25.8319, 0.33 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 97/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 85.0495, 55.4586, 12.4786, 0.33 ) }
    dend_4 { pt3dadd( 98.0705, 51.544, 13.0005, 0.33 ) }
    dend_4 { pt3dadd( 110.736, 47.5419, 15.9512, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_4 { pt3dadd( 124.039, 44.8489, 16.8996, 0.33 ) }
    dend_4 { pt3dadd( 136.809, 40.1899, 16.2942, 0.33 ) }
    dend_4 { pt3dadd( 148.885, 34.4397, 13.7915, 0.33 ) }
    dend_4 { pt3dadd( 161.083, 30.1671, 9.5406, 0.33 ) }
    dend_4 { pt3dadd( 173.369, 27.0881, 4.56775, 0.33 ) }
    dend_4 { pt3dadd( 186.342, 23.8047, 2.10727, 0.33 ) }
    dend_4 { pt3dadd( 199.616, 20.9501, 1.21116, 0.33 ) }
    dend_4 { pt3dadd( 212.645, 17.4554, -0.567325, 0.33 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 8/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -15.3049, 14.8871, -2.85696, 0.67 ) }
    dend_28 { pt3dadd( -19.0965, 9.53456, -7.65678, 0.67 ) }
    dend_28 { pt3dadd( -20.7485, 7.52054, -9.39991, 0.67 ) }
    dend_28 { pt3dadd( -22.3066, 5.77994, -10.8182, 0.67 ) }
    dend_28 { pt3dadd( -24.7225, 3.41771, -12.7816, 1.33 ) }
    dend_28 { pt3dadd( -27.4785, 1.02109, -14.7523, 0.67 ) }
    dend_28 { pt3dadd( -30.0283, -1.18212, -16.3926, 0.33 ) }
    dend_28 { pt3dadd( -30.9905, -1.907, -16.8589, 0.33 ) }
    dend_28 { pt3dadd( -32.404, -2.81891, -17.4678, 1.33 ) }
    dend_28 { pt3dadd( -37.7121, -5.98372, -19.6324, 0.33 ) }
    dend_28 { pt3dadd( -40.3008, -7.36715, -20.6121, 2.0 ) }
    dend_28 { pt3dadd( -43.103, -8.82844, -21.487, 0.67 ) }
    dend_28 { pt3dadd( -47.0962, -10.9347, -22.5924, 0.67 ) }
    dend_28 { pt3dadd( -50.5682, -12.6723, -23.5483, 0.67 ) }
    dend_28 { pt3dadd( -52.1223, -13.3131, -23.9236, 0.33 ) }
    dend_28 { pt3dadd( -54.1413, -14.0161, -24.2698, 0.67 ) }
    dend_28 { pt3dadd( -56.8689, -14.8424, -24.8574, 0.33 ) }
    dend_28 { pt3dadd( -58.9059, -15.3253, -25.3305, 2.0 ) }
    dend_28 { pt3dadd( -65.1534, -16.8891, -27.0097, 0.33 ) }
    dend_28 { pt3dadd( -67.874, -17.6821, -28.0874, 0.33 ) }
    dend_28 { pt3dadd( -69.3737, -18.0425, -28.8666, 1.33 ) }
    dend_28 { pt3dadd( -73.0766, -18.832, -31.2251, 0.67 ) }
    dend_28 { pt3dadd( -74.1177, -19.0725, -32.1229, 1.33 ) }
    dend_28 { pt3dadd( -76.6201, -19.9793, -34.6803, 0.67 ) }
    dend_28 { pt3dadd( -78.5845, -21.1325, -36.9515, 1.33 ) }
    dend_28 { pt3dadd( -80.9694, -22.9948, -39.9871, 0.33 ) }
    dend_28 { pt3dadd( -81.0396, -23.0566, -40.0773, 0.67 ) }
    dend_28 { pt3dadd( -83.9087, -25.8997, -43.7287, 0.33 ) }
    dend_28 { pt3dadd( -86.3592, -28.5499, -46.8671, 0.33 ) }
    dend_28 { pt3dadd( -87.2601, -29.5836, -47.9385, 1.33 ) }
    dend_28 { pt3dadd( -89.1294, -32.222, -50.1765, 0.33 ) }
    dend_28 { pt3dadd( -89.5402, -32.9483, -50.6569, 0.67 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 40/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -15.3049, 14.8871, -2.85696, 0.67 ) }
    dend_27 { pt3dadd( -16.1572, 12.1139, -9.16803, 0.67 ) }
    dend_27 { pt3dadd( -16.3166, 11.6125, -10.5956, 0.67 ) }
    dend_27 { pt3dadd( -16.3661, 11.4095, -11.2694, 0.67 ) }
    dend_27 { pt3dadd( -16.5852, 10.0902, -16.0837, 0.33 ) }
    dend_27 { pt3dadd( -16.6358, 9.42736, -18.6061, 2.0 ) }
    dend_27 { pt3dadd( -16.5866, 8.37902, -22.3455, 0.67 ) }
    dend_27 { pt3dadd( -16.3704, 7.85868, -24.6619, 0.33 ) }
    dend_27 { pt3dadd( -16.1351, 7.49021, -26.4152, 1.33 ) }
    dend_27 { pt3dadd( -15.1751, 6.3387, -31.9378, 0.33 ) }
    dend_27 { pt3dadd( -14.366, 5.47581, -35.4119, 0.33 ) }
    dend_27 { pt3dadd( -13.7842, 4.92649, -37.4736, 1.33 ) }
    dend_27 { pt3dadd( -13.3168, 4.53727, -38.8612, 0.67 ) }
    dend_27 { pt3dadd( -12.9658, 4.2457, -39.8152, 1.33 ) }
    dend_27 { pt3dadd( -11.5363, 3.05447, -43.7222, 0.33 ) }
    dend_27 { pt3dadd( -10.9965, 2.70877, -44.9413, 0.33 ) }
    dend_27 { pt3dadd( -10.7422, 2.54516, -45.5825, 0.67 ) }
    dend_27 { pt3dadd( -10.1136, 2.13445, -47.5892, 0.33 ) }
    dend_27 { pt3dadd( -9.94122, 2.0258, -48.2263, 1.33 ) }
    dend_27 { pt3dadd( -9.11632, 1.61581, -51.2324, 0.33 ) }
    dend_27 { pt3dadd( -8.59651, 1.54766, -52.7836, 0.67 ) }
    dend_27 { pt3dadd( -7.9792, 1.63481, -54.6476, 0.33 ) }
    dend_27 { pt3dadd( -7.53386, 1.80117, -55.9403, 0.67 ) }
    dend_27 { pt3dadd( -6.91679, 2.14858, -57.5127, 0.33 ) }
    dend_27 { pt3dadd( -6.58211, 2.42618, -58.389, 0.67 ) }
    dend_27 { pt3dadd( -6.02399, 3.05871, -59.7337, 0.33 ) }
    dend_27 { pt3dadd( -5.81953, 3.32662, -60.2494, 0.67 ) }
    dend_27 { pt3dadd( -5.17012, 4.0775, -61.8408, 0.33 ) }
    dend_27 { pt3dadd( -5.0119, 4.21758, -62.3268, 0.67 ) }
    dend_27 { pt3dadd( -4.53371, 4.60419, -64.6825, 0.33 ) }
    dend_27 { pt3dadd( -4.63214, 4.58224, -65.3905, 0.67 ) }
    dend_27 { pt3dadd( -5.41771, 4.40063, -67.018, 0.33 ) }
    dend_27 { pt3dadd( -5.90205, 4.29768, -67.718, 0.67 ) }
    dend_27 { pt3dadd( -7.90536, 3.9399, -70.0232, 0.33 ) }
    dend_27 { pt3dadd( -8.63211, 3.80053, -70.7786, 1.33 ) }
    dend_27 { pt3dadd( -12.7953, 2.95522, -74.5705, 0.67 ) }
    dend_27 { pt3dadd( -15.2007, 2.48094, -76.6043, 0.33 ) }
    dend_27 { pt3dadd( -15.9503, 2.35789, -77.1789, 0.67 ) }
    dend_27 { pt3dadd( -16.6377, 2.31316, -77.684, 0.67 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 79/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -5.5946, 80.5623, -13.7411, 0.33 ) }
    dend_25 { pt3dadd( -4.5753, 85.4293, -14.2897, 0.33 ) }
    dend_25 { pt3dadd( -4.45077, 86.0259, -14.3603, 0.67 ) }
    dend_25 { pt3dadd( -3.99748, 88.1976, -14.5733, 0.33 ) }
    dend_25 { pt3dadd( -3.66709, 89.5388, -14.6716, 0.67 ) }
    dend_25 { pt3dadd( -2.71708, 93.0888, -14.8375, 0.33 ) }
    dend_25 { pt3dadd( -2.10566, 95.182, -14.9193, 0.33 ) }
    dend_25 { pt3dadd( -1.30859, 97.7278, -14.9656, 0.33 ) }
    dend_25 { pt3dadd( -0.53429, 100.037, -15.098, 1.33 ) }
    dend_25 { pt3dadd( 2.06245, 107.578, -15.6455, 0.33 ) }
    dend_25 { pt3dadd( 2.87443, 109.891, -15.8387, 0.67 ) }
    dend_25 { pt3dadd( 4.01733, 113.169, -16.2407, 0.33 ) }
    dend_25 { pt3dadd( 5.3698, 117.178, -17.0562, 0.67 ) }
    dend_25 { pt3dadd( 7.415, 123.71, -18.784, 0.33 ) }
    dend_25 { pt3dadd( 7.82795, 125.225, -19.3281, 0.67 ) }
    dend_25 { pt3dadd( 8.25384, 127.048, -20.1467, 0.33 ) }
    dend_25 { pt3dadd( 9.01355, 130.914, -22.0478, 1.33 ) }
    dend_25 { pt3dadd( 10.2423, 138.402, -25.9429, 0.33 ) }
    dend_25 { pt3dadd( 10.3748, 139.466, -26.5384, 0.67 ) }
    dend_25 { pt3dadd( 10.6796, 143.35, -28.7313, 0.33 ) }
    dend_25 { pt3dadd( 10.7454, 144.259, -29.2668, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_25 { pt3dadd( 10.883, 146.653, -30.6945, 0.33 ) }
    dend_25 { pt3dadd( 10.9187, 147.805, -31.3371, 0.67 ) }
    dend_25 { pt3dadd( 10.6754, 151.41, -33.4107, 0.33 ) }
    dend_25 { pt3dadd( 10.607, 152.664, -34.1288, 0.67 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 4/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -5.5946, 80.5623, -13.7411, 0.67 ) }
    dend_22 { pt3dadd( -7.05648, 84.5925, -19.3082, 0.67 ) }
    dend_22 { pt3dadd( -8.07739, 87.439, -23.4151, 0.67 ) }
    dend_22 { pt3dadd( -9.51285, 90.612, -28.9091, 0.33 ) }
    dend_22 { pt3dadd( -10.3673, 92.3298, -32.1348, 0.67 ) }
    dend_22 { pt3dadd( -11.2188, 93.9462, -35.1268, 0.33 ) }
    dend_22 { pt3dadd( -11.4733, 94.4293, -36.0211, 0.67 ) }
    dend_22 { pt3dadd( -12.9153, 97.2215, -41.436, 0.67 ) }
    dend_22 { pt3dadd( -14.6137, 100.1, -48.1674, 0.67 ) }
    dend_22 { pt3dadd( -14.9772, 100.575, -49.3344, 1.33 ) }
    dend_22 { pt3dadd( -15.8852, 101.503, -51.7708, 0.67 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 15/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 4.28376, 35.5084, -9.55783, 0.67 ) }
    dend_16 { pt3dadd( 5.57305, 36.9383, -12.0236, 0.67 ) }
    dend_16 { pt3dadd( 7.33534, 38.8927, -15.394, 0.67 ) }
    dend_16 { pt3dadd( 8.79453, 40.511, -18.1847, 0.67 ) }
    dend_16 { pt3dadd( 9.40562, 41.1887, -19.3535, 0.67 ) }
    dend_16 { pt3dadd( 10.85, 42.7906, -22.116, 0.67 ) }
    dend_16 { pt3dadd( 11.2327, 43.215, -22.8478, 0.67 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 22/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 4.28376, 35.5084, -9.55783, 0.67 ) }
    dend_15 { pt3dadd( 9.28686, 38.0672, -8.70769, 0.67 ) }
    dend_15 { pt3dadd( 12.5318, 39.9109, -8.23037, 0.67 ) }
    dend_15 { pt3dadd( 14.6814, 41.1059, -8.4137, 0.67 ) }
    dend_15 { pt3dadd( 18.1262, 43.0766, -9.08001, 0.33 ) }
    dend_15 { pt3dadd( 22.0704, 45.4082, -10.2829, 0.67 ) }
    dend_15 { pt3dadd( 25.3973, 47.3765, -11.4643, 0.67 ) }
    dend_15 { pt3dadd( 29.5958, 49.9997, -13.5146, 0.67 ) }
    dend_15 { pt3dadd( 37.2514, 55.2087, -17.9, 0.67 ) }
    dend_15 { pt3dadd( 39.3536, 56.8574, -19.2496, 0.67 ) }
    dend_15 { pt3dadd( 42.7698, 60.0755, -21.6883, 0.67 ) }
    dend_15 { pt3dadd( 43.6649, 61.0729, -22.4262, 0.33 ) }
    dend_15 { pt3dadd( 44.7237, 62.7195, -23.3334, 0.33 ) }
    dend_15 { pt3dadd( 45.6535, 64.8387, -23.9404, 1.33 ) }
    dend_15 { pt3dadd( 46.3139, 67.151, -23.9386, 0.33 ) }
    dend_15 { pt3dadd( 47.0621, 70.4666, -23.7374, 0.33 ) }
    dend_15 { pt3dadd( 47.308, 71.7051, -23.5724, 0.67 ) }
    dend_15 { pt3dadd( 48.0811, 75.0853, -23.2199, 0.33 ) }
    dend_15 { pt3dadd( 48.6358, 76.8951, -23.062, 0.67 ) }
    dend_15 { pt3dadd( 49.5722, 79.0899, -22.8884, 0.33 ) }
    dend_15 { pt3dadd( 50.4274, 80.6093, -22.8934, 1.33 ) }
    dend_15 { pt3dadd( 52.7736, 84.227, -23.1452, 0.67 ) }
    dend_15 { pt3dadd( 54.532, 86.7714, -23.3874, 0.33 ) }
    dend_15 { pt3dadd( 55.6289, 88.1862, -23.5483, 0.67 ) }
    dend_15 { pt3dadd( 58.3515, 91.5141, -23.9368, 0.67 ) }
    dend_15 { pt3dadd( 61.4611, 95.1602, -24.5169, 0.33 ) }
    dend_15 { pt3dadd( 63.1756, 97.1992, -24.9005, 0.33 ) }
    dend_15 { pt3dadd( 64.1319, 98.3585, -25.1531, 0.67 ) }
    dend_15 { pt3dadd( 65.8955, 100.768, -25.8096, 0.33 ) }
    dend_15 { pt3dadd( 66.3889, 101.558, -26.0503, 0.67 ) }
    dend_15 { pt3dadd( 68.1291, 104.563, -27.4027, 0.33 ) }
    dend_15 { pt3dadd( 68.7018, 105.575, -27.895, 0.67 ) }
    dend_15 { pt3dadd( 69.552, 107.067, -28.7225, 0.33 ) }
    dend_15 { pt3dadd( 71.6091, 110.746, -30.8717, 1.33 ) }
    dend_15 { pt3dadd( 73.5502, 114.463, -32.9611, 0.33 ) }
    dend_15 { pt3dadd( 76.3327, 119.638, -35.7479, 0.33 ) }
    dend_15 { pt3dadd( 76.7526, 120.433, -36.1249, 0.67 ) }
    dend_15 { pt3dadd( 77.3733, 121.716, -36.6452, 0.33 ) }
    dend_15 { pt3dadd( 77.7303, 122.482, -36.9238, 0.67 ) }
    dend_15 { pt3dadd( 78.9229, 125.374, -37.6804, 0.33 ) }
    dend_15 { pt3dadd( 80.041, 128.664, -38.3044, 1.33 ) }
    dend_15 { pt3dadd( 80.6094, 130.738, -38.3316, 0.33 ) }
    dend_15 { pt3dadd( 81.3023, 133.332, -38.4635, 1.33 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 65/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -15.8852, 101.503, -51.7708, 0.33 ) }
    dend_24 { pt3dadd( -17.2619, 103.275, -54.4504, 0.33 ) }
    dend_24 { pt3dadd( -20.1278, 106.641, -59.2512, 0.33 ) }
    dend_24 { pt3dadd( -21.7112, 108.439, -61.5463, 1.33 ) }
    dend_24 { pt3dadd( -23.8068, 110.819, -64.5839, 0.33 ) }
    dend_24 { pt3dadd( -24.9845, 112.157, -66.2909, 0.33 ) }
    dend_24 { pt3dadd( -25.6963, 112.965, -67.3227, 1.33 ) }
    dend_24 { pt3dadd( -28.1704, 115.051, -70.0047, 0.33 ) }
    dend_24 { pt3dadd( -29.7283, 116.165, -71.0017, 0.67 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 74/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -15.8852, 101.503, -51.7708, 0.33 ) }
    dend_23 { pt3dadd( -17.9403, 102.116, -54.3855, 0.33 ) }
    dend_23 { pt3dadd( -22.1599, 103.453, -58.8653, 0.67 ) }
    dend_23 { pt3dadd( -24.6797, 104.252, -61.5406, 0.33 ) }
    dend_23 { pt3dadd( -25.4576, 104.499, -62.3664, 0.67 ) }
    dend_23 { pt3dadd( -28.0197, 105.311, -65.0866, 0.33 ) }
    dend_23 { pt3dadd( -29.1039, 105.655, -66.2377, 0.67 ) }
    dend_23 { pt3dadd( -30.5742, 106.145, -67.739, 0.67 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 82/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 11.2327, 43.215, -22.8478, 0.33 ) }
    dend_18 { pt3dadd( 16.1179, 45.6325, -24.8193, 0.33 ) }
    dend_18 { pt3dadd( 19.1832, 47.0485, -25.7647, 2.0 ) }
    dend_18 { pt3dadd( 24.2824, 49.3179, -27.0529, 0.33 ) }
    dend_18 { pt3dadd( 26.0717, 50.1319, -27.457, 1.33 ) }
    dend_18 { pt3dadd( 28.6677, 51.2676, -27.994, 0.33 ) }
    dend_18 { pt3dadd( 30.1336, 51.9083, -28.2548, 0.67 ) }
    dend_18 { pt3dadd( 35.3675, 54.1441, -28.8162, 0.33 ) }
    dend_18 { pt3dadd( 37.9208, 55.0669, -28.9667, 1.33 ) }
    dend_18 { pt3dadd( 41.8431, 56.1799, -29.0794, 0.33 ) }
    dend_18 { pt3dadd( 44.2152, 56.7053, -29.1538, 0.67 ) }
    dend_18 { pt3dadd( 47.4031, 57.2881, -29.2423, 0.33 ) }
    dend_18 { pt3dadd( 49.0846, 57.5192, -29.2339, 0.67 ) }
    dend_18 { pt3dadd( 51.5169, 57.5521, -29.2375, 0.33 ) }
    dend_18 { pt3dadd( 52.8528, 57.4761, -29.2812, 0.67 ) }
    dend_18 { pt3dadd( 55.0869, 57.2204, -29.3429, 0.33 ) }
    dend_18 { pt3dadd( 56.072, 57.1146, -29.462, 0.67 ) }
    dend_18 { pt3dadd( 58.4469, 56.9589, -29.952, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_18 { pt3dadd( 63.0145, 56.9272, -31.1446, 1.33 ) }
    dend_18 { pt3dadd( 67.4005, 57.0447, -32.554, 0.33 ) }
    dend_18 { pt3dadd( 69.3038, 57.1282, -33.2219, 1.33 ) }
    dend_18 { pt3dadd( 74.9177, 57.4877, -35.5271, 0.33 ) }
    dend_18 { pt3dadd( 79.181, 57.7635, -37.4098, 0.33 ) }
    dend_18 { pt3dadd( 81.2424, 57.927, -38.3725, 1.33 ) }
    dend_18 { pt3dadd( 84.6191, 58.2419, -39.9581, 0.33 ) }
    dend_18 { pt3dadd( 86.0734, 58.4085, -40.6578, 0.67 ) }
    dend_18 { pt3dadd( 90.7789, 59.0385, -42.8324, 0.33 ) }
    dend_18 { pt3dadd( 92.0287, 59.2246, -43.3094, 0.67 ) }
    dend_18 { pt3dadd( 96.1084, 59.817, -44.6975, 0.33 ) }
    dend_18 { pt3dadd( 96.5286, 59.9012, -44.8594, 0.67 ) }
    dend_18 { pt3dadd( 98.236, 60.3755, -45.5619, 0.33 ) }
    dend_18 { pt3dadd( 99.3347, 60.7287, -46.0729, 0.67 ) }
    dend_18 { pt3dadd( 101.104, 61.3734, -46.933, 0.33 ) }
    dend_18 { pt3dadd( 101.104, 61.3734, -46.933, 0.67 ) }
    dend_18 { pt3dadd( 106.899, 63.888, -50.176, 0.33 ) }
    dend_18 { pt3dadd( 108.227, 64.4661, -50.9176, 1.33 ) }
    dend_18 { pt3dadd( 112.0, 66.1454, -52.8752, 0.33 ) }
    dend_18 { pt3dadd( 112.266, 66.2628, -53.0106, 0.67 ) }
    dend_18 { pt3dadd( 113.922, 66.978, -53.626, 0.33 ) }
    dend_18 { pt3dadd( 114.826, 67.376, -53.8336, 0.33 ) }
    dend_18 { pt3dadd( 115.733, 67.7776, -53.9429, 0.67 ) }
    dend_18 { pt3dadd( 118.673, 69.0977, -54.2894, 0.33 ) }
    dend_18 { pt3dadd( 121.104, 70.329, -54.4878, 1.33 ) }
    dend_18 { pt3dadd( 127.107, 73.485, -54.918, 0.33 ) }
    dend_18 { pt3dadd( 128.885, 74.4098, -55.0308, 0.67 ) }
    dend_18 { pt3dadd( 134.5, 77.3039, -55.3119, 0.33 ) }
    dend_18 { pt3dadd( 135.174, 77.6545, -55.3265, 0.67 ) }
    dend_18 { pt3dadd( 139.343, 79.7977, -55.4105, 0.33 ) }
    dend_18 { pt3dadd( 140.231, 80.2702, -55.384, 0.67 ) }
    dend_18 { pt3dadd( 141.811, 81.1393, -55.3383, 0.33 ) }
    dend_18 { pt3dadd( 142.368, 81.4349, -55.3088, 0.67 ) }
    dend_18 { pt3dadd( 144.869, 82.7702, -54.867, 0.33 ) }
    dend_18 { pt3dadd( 147.774, 84.1422, -54.5611, 0.67 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 35/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 11.2327, 43.215, -22.8478, 0.33 ) }
    dend_17 { pt3dadd( 11.493, 46.2763, -25.0889, 0.33 ) }
    dend_17 { pt3dadd( 11.5351, 46.6707, -25.3665, 0.67 ) }
    dend_17 { pt3dadd( 11.7185, 49.7599, -27.5026, 0.33 ) }
    dend_17 { pt3dadd( 12.0416, 52.278, -29.0263, 0.33 ) }
    dend_17 { pt3dadd( 12.0968, 52.6747, -29.2805, 0.67 ) }
    dend_17 { pt3dadd( 12.4447, 55.3775, -30.9654, 0.33 ) }
    dend_17 { pt3dadd( 12.6241, 56.5486, -31.7103, 0.67 ) }
    dend_17 { pt3dadd( 12.9027, 58.9499, -33.2005, 0.33 ) }
    dend_17 { pt3dadd( 13.1107, 62.4735, -35.4352, 0.33 ) }
    dend_17 { pt3dadd( 12.9568, 65.5018, -37.5553, 0.67 ) }
    dend_17 { pt3dadd( 12.8327, 67.0309, -38.7225, 0.33 ) }
    dend_17 { pt3dadd( 12.7236, 67.9609, -39.4963, 1.33 ) }
    dend_17 { pt3dadd( 12.3206, 70.838, -41.9252, 0.33 ) }
    dend_17 { pt3dadd( 11.944, 72.8368, -43.7379, 1.33 ) }
    dend_17 { pt3dadd( 11.1562, 75.2216, -46.1374, 0.33 ) }
    dend_17 { pt3dadd( 10.5615, 77.0661, -47.9004, 0.33 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_48, dend_43, dend_36, dend_29, dend_0, apic_8, apic_1, dend_52, dend_49, dend_47, dend_44, dend_40, dend_37, dend_33, dend_30, dend_8, dend_1, apic_12, apic_9, apic_5, apic_2, dend_54, dend_53, dend_51, dend_50, dend_46, dend_45, dend_42, dend_41, dend_39, dend_38, dend_35, dend_34, dend_32, dend_31, dend_12, dend_9, dend_7, dend_2, apic_14, apic_13, apic_11, apic_10, apic_7, apic_6, apic_4, apic_3, dend_20, dend_13, dend_11, dend_10, dend_6, dend_3, apic_16, apic_15, dend_26, dend_21, dend_19, dend_14, dend_5, dend_4, dend_28, dend_27, dend_25, dend_22, dend_16, dend_15, dend_24, dend_23, dend_18, dend_17]}
    ModelViewParmSubset_2 = new SectionList()
    apic_0 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    apic_8 ModelViewParmSubset_2.append()
    apic_1 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    apic_12 ModelViewParmSubset_2.append()
    apic_9 ModelViewParmSubset_2.append()
    apic_5 ModelViewParmSubset_2.append()
    apic_2 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    apic_14 ModelViewParmSubset_2.append()
    apic_13 ModelViewParmSubset_2.append()
    apic_11 ModelViewParmSubset_2.append()
    apic_10 ModelViewParmSubset_2.append()
    apic_7 ModelViewParmSubset_2.append()
    apic_6 ModelViewParmSubset_2.append()
    apic_4 ModelViewParmSubset_2.append()
    apic_3 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    apic_16 ModelViewParmSubset_2.append()
    apic_15 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_48, dend_43, dend_36, dend_29, dend_0, apic_8, apic_1, dend_52, dend_49, dend_47, dend_44, dend_40, dend_37, dend_33, dend_30, dend_8, dend_1, apic_12, apic_9, apic_5, apic_2, dend_54, dend_53, dend_51, dend_50, dend_46, dend_45, dend_42, dend_41, dend_39, dend_38, dend_35, dend_34, dend_32, dend_31, dend_12, dend_9, dend_7, dend_2, apic_14, apic_13, apic_11, apic_10, apic_7, apic_6, apic_4, apic_3, dend_20, dend_13, dend_11, dend_10, dend_6, dend_3, apic_16, apic_15, dend_26, dend_21, dend_19, dend_14, dend_5, dend_4, dend_28, dend_27, dend_25, dend_22, dend_16, dend_15, dend_24, dend_23, dend_18, dend_17]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    apic_0 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    apic_8 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    apic_12 ModelViewParmSubset_4.append()
    apic_9 ModelViewParmSubset_4.append()
    apic_5 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    apic_14 ModelViewParmSubset_4.append()
    apic_13 ModelViewParmSubset_4.append()
    apic_11 ModelViewParmSubset_4.append()
    apic_10 ModelViewParmSubset_4.append()
    apic_7 ModelViewParmSubset_4.append()
    apic_6 ModelViewParmSubset_4.append()
    apic_4 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    apic_16 ModelViewParmSubset_4.append()
    apic_15 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_43 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_36 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_47 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_44 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_30 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[apic_12]}
    OneSecGrp_SectionRef_22 = new SectionList()
    apic_12 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[apic_5]}
    OneSecGrp_SectionRef_24 = new SectionList()
    apic_5 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_25 = new SectionList()
    apic_2 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_54 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_51 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_50 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_42 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_41 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_35 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_34 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_7 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_2 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[apic_13]}
    OneSecGrp_SectionRef_45 = new SectionList()
    apic_13 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_50 = new SectionList()
    apic_4 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_11 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_10 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[apic_16]}
    OneSecGrp_SectionRef_58 = new SectionList()
    apic_16 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_21 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_19 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_5 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_4 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_28 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_27 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_25 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_22 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_15 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_18 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_17 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_29 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_48 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_8 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_52 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_10 = new SectionList()
    apic_1 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_12 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_20 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_9 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_49 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_26 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_13 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_33 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_8]}
    OneSecGrp_SectionRef_9 = new SectionList()
    apic_8 OneSecGrp_SectionRef_9.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_14 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_53 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[apic_9]}
    OneSecGrp_SectionRef_23 = new SectionList()
    apic_9 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[apic_11]}
    OneSecGrp_SectionRef_46 = new SectionList()
    apic_11 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[apic_10]}
    OneSecGrp_SectionRef_47 = new SectionList()
    apic_10 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_16 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_37 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_40 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_31 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_32 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_39 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_38 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_51 = new SectionList()
    apic_3 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_3 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_45 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_46 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[apic_6]}
    OneSecGrp_SectionRef_49 = new SectionList()
    apic_6 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[apic_7]}
    OneSecGrp_SectionRef_48 = new SectionList()
    apic_7 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_23 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[apic_14]}
    OneSecGrp_SectionRef_44 = new SectionList()
    apic_14 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_24 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[apic_15]}
    OneSecGrp_SectionRef_59 = new SectionList()
    apic_15 OneSecGrp_SectionRef_59.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()
    apic_5 apical.append()
    apic_6 apical.append()
    apic_7 apical.append()
    apic_8 apical.append()
    apic_9 apical.append()
    apic_10 apical.append()
    apic_11 apical.append()
    apic_12 apical.append()
    apic_13 apical.append()
    apic_14 apical.append()
    apic_15 apical.append()
    apic_16 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_29, dend_29, dend_0, axon_0, axon_0, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_1, apic_1, apic_1, apic_1, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_8, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_14, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_11, apic_11, apic_10, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_8 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_14 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_10 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.6794998E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cSTUT_7_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cSTUT_7_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_43 nseg = 3
    dend_36 nseg = 3
    dend_47 nseg = 3
    dend_44 nseg = 3
    dend_30 nseg = 3
    apic_12 nseg = 5
    apic_5 nseg = 5
    apic_2 nseg = 3
    dend_54 nseg = 3
    dend_51 nseg = 5
    dend_50 nseg = 5
    dend_42 nseg = 5
    dend_41 nseg = 3
    dend_35 nseg = 3
    dend_34 nseg = 3
    dend_7 nseg = 7
    dend_2 nseg = 3
    apic_13 nseg = 3
    apic_4 nseg = 3
    dend_11 nseg = 3
    dend_10 nseg = 3
    apic_16 nseg = 5
    dend_21 nseg = 3
    dend_19 nseg = 5
    dend_5 nseg = 5
    dend_4 nseg = 7
    dend_28 nseg = 5
    dend_27 nseg = 5
    dend_25 nseg = 3
    dend_22 nseg = 3
    dend_15 nseg = 7
    dend_18 nseg = 7
    dend_17 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cSTUT189_L4_LBC_1d4118b33e_0_0


