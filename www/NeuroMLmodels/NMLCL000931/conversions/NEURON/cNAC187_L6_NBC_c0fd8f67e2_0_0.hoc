// Cell: cNAC187_L6_NBC_c0fd8f67e2_0_0
/*
{
  "id" : "cNAC187_L6_NBC_c0fd8f67e2_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-8.47614, -8.41033, 1.41903, 3.98524", "-7.69742, -7.5116, 1.27705, 6.91431", "-6.9187, -6.61288, 1.13506, 10.5717", "-6.13998, -5.71415, 0.993075, 11.4108", "-5.36126, -4.81542, 0.851088, 12.9455", "-4.58254, -3.9167, 0.709102, 14.3822", "-3.80382, -3.01797, 0.567115, 17.7461", "-3.0251, -2.11925, 0.425128, 19.1269", "-2.24638, -1.22052, 0.283142, 19.8374", "-1.46766, -0.321792, 0.141155, 20.315", "-0.688937, 0.576934, -8.31366E-4, 20.3008", "0.0897826, 1.47566, -0.142818, 20.2673", "0.868503, 2.37439, -0.284805, 20.201", "1.64722, 3.27311, -0.426791, 19.9171", "2.42594, 4.17184, -0.568778, 19.4209", "3.20466, 5.07057, -0.710764, 18.1336", "3.98338, 5.96929, -0.852751, 16.68", "4.7621, 6.86802, -0.994738, 14.9484", "5.54082, 7.76675, -1.13672, 12.9099", "6.31954, 8.66547, -1.27871, 7.73682", "7.09826, 9.5642, -1.4207, 4.34608" ]
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-11.4502, -2.36613, 0.989666, 1.47", "-11.4502, -2.36613, 0.989666, 1.47", "-12.2263, -2.73133, 1.23292, 1.47", "-13.5076, -3.35749, 1.69045, 1.11", "-14.7687, -4.00199, 2.33301, 1.11", "-16.2341, -4.77146, 3.20932, 1.11", "-17.4579, -5.4562, 4.12786, 1.11", "-18.5395, -6.10574, 5.12547, 1.4", "-18.8166, -6.28496, 5.46556, 1.4", "-20.1105, -7.11844, 7.41811, 1.4", "-20.1633, -7.15236, 7.50931, 1.4", "-21.2573, -7.81863, 9.63718, 1.4", "-21.2968, -7.83815, 9.70901, 1.4", "-22.6457, -8.45632, 11.7476, 1.4", "-23.6828, -8.95467, 13.0578, 1.4", "-23.7304, -8.98016, 13.1053, 1.4", "-25.1816, -9.82648, 14.3614, 0.88", "-26.0818, -10.3848, 15.0118, 0.88", "-27.1535, -11.1042, 15.7606, 0.74", "-28.4739, -12.0416, 16.5305, 0.74", "-29.6093, -12.8383, 17.0924, 0.74", "-29.7026, -12.9004, 17.1324, 0.74", "-30.7455, -13.5277, 17.5032, 0.74", "-32.313, -14.42, 18.0522, 1.11", "-34.2226, -15.4304, 18.6573, 1.11", "-36.122, -16.4289, 19.1326, 1.11", "-37.1736, -17.0242, 19.3422, 1.11", "-38.2266, -17.7087, 19.5432, 1.47", "-38.9252, -18.2357, 19.6591, 1.47", "-40.249, -19.4039, 19.8665, 0.81", "-41.4093, -20.6264, 20.1786, 0.81", "-42.5713, -21.9393, 20.5699, 0.81", "-43.7341, -23.2497, 20.9775, 1.11", "-44.3143, -23.8938, 21.185, 1.47", "-45.0714, -24.6724, 21.4708, 1.47", "-46.6744, -26.2405, 22.0897, 0.74", "-48.129, -27.5981, 22.6142, 0.74", "-49.4275, -28.7694, 22.9858, 0.74", "-49.4875, -28.824, 23.0011, 0.74", "-50.4316, -29.7209, 23.2279, 1.03", "-51.6306, -30.9044, 23.4968, 1.03", "-52.7674, -32.099, 23.7061, 1.18", "-53.8895, -33.3588, 23.9163, 1.18", "-55.3796, -35.0966, 24.2061, 0.88", "-56.9276, -36.9273, 24.4903, 0.88", "-56.9799, -36.9899, 24.4986, 0.88", "-58.6185, -38.9421, 24.7451, 0.88", "-58.6717, -39.0041, 24.7523, 0.88", "-59.7587, -40.2338, 24.8747, 1.62", "-60.4988, -41.0495, 24.9368, 1.99", "-61.725, -42.4023, 25.0326, 1.99", "-63.7663, -44.7263, 25.2954, 2.21", "-65.5192, -46.7348, 25.6514, 2.21", "-66.5041, -47.8516, 25.9582, 2.5", "-67.1516, -48.5714, 26.2135, 2.5", "-68.5993, -50.1574, 26.8991, 1.84", "-70.3694, -52.0668, 27.8898, 1.47", "-71.7062, -53.5346, 28.7688, 1.25", "-73.2279, -55.2357, 29.8778, 0.29", "-73.9336, -56.092, 30.4554, 0.29", "-74.7887, -57.189, 31.2074, 0.29", "-74.8577, -57.2798, 31.2764, 0.29", "-75.4947, -58.1712, 31.9436, 0.29", "-75.5729, -58.2979, 32.0379, 0.29", "-76.467, -59.8963, 33.2491, 0.29", "-76.5012, -59.9504, 33.3013, 0.29", "-77.5339, -61.2601, 34.7228, 0.29", "-77.7953, -61.5368, 35.0311, 0.74", "-78.074, -61.7934, 35.3095, 1.03", "-78.4198, -62.1054, 35.6308, 1.03", "-79.3064, -62.9263, 36.3205, 0.66", "-80.0219, -63.679, 36.8417, 0.66", "-80.724, -64.517, 37.2659, 0.88", "-81.285, -65.1894, 37.5691, 0.88", "-82.2073, -66.2843, 38.0458, 0.52", "-83.2649, -67.507, 38.5379, 0.52", "-83.3238, -67.576, 38.5621, 0.52", "-84.4017, -68.8318, 38.9729, 0.81", "-85.0322, -69.5448, 39.1645, 0.81", "-86.2457, -70.9086, 39.4914, 0.29", "-87.1255, -71.8982, 39.6777, 0.37", "-87.6258, -72.4771, 39.7921, 1.03", "-88.4799, -73.5743, 39.9944, 0.22", "-89.6192, -75.1191, 40.2802, 0.22", "-89.7274, -75.2766, 40.3068, 0.59", "-90.4418, -76.3834, 40.4511, 0.59", "-91.0866, -77.412, 40.5841, 0.44", "-91.8673, -78.6173, 40.7296, 0.81" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999996701105516,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "9.20986, 1.24387, 4.05967, 1.84", "9.46991, 1.15304, 4.11585, 1.62", "10.6503, 0.740734, 4.37087, 1.62", "10.7036, 0.722138, 4.38238, 1.62", "12.1212, 0.226998, 4.68864, 1.62", "12.182, 0.205745, 4.70178, 1.62", "12.5092, 0.0914843, 4.77245, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999996701105516
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-1.70014, 9.08138, 5.17967, 2.8", "-1.70014, 9.08138, 5.17967, 2.8", "-1.13991, 10.7494, 5.45314, 1.84", "-0.577404, 12.2896, 5.74091, 1.84", "0.145609, 14.0045, 6.05846, 1.84", "0.191271, 14.0997, 6.07532, 1.84", "1.26712, 16.0711, 6.40346, 1.84", "2.73641, 18.3609, 6.76266, 1.84", "2.84995, 18.5099, 6.78485, 1.84", "4.36705, 20.3565, 7.01813, 2.28", "5.36999, 21.5886, 7.25069, 2.28", "6.47622, 23.0278, 7.56568, 1.62", "7.38127, 24.3224, 7.9244, 1.62", "8.59763, 26.2301, 8.51319, 1.62", "9.50944, 27.8618, 9.15784, 1.62", "10.7953, 30.4261, 10.2981, 1.84", "11.5024, 32.0405, 11.0875, 2.06", "12.4134, 34.5297, 12.4319, 2.06", "12.4336, 34.5966, 12.4721, 2.06", "12.9381, 36.8368, 13.98, 2.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999996701105516
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-11.9802, -2.86013, 0.929666, 1.92", "-11.9802, -2.86013, 0.929666, 1.92", "-13.0137, -2.87658, 0.677395, 1.55", "-14.5522, -2.89647, 0.280143, 1.55", "-16.1595, -2.90882, -0.131118, 1.4", "-17.6656, -2.91849, -0.558982, 1.4", "-17.7343, -2.91904, -0.581053, 1.4", "-19.1619, -2.92125, -1.08866, 1.4", "-19.2862, -2.91981, -1.14197, 1.4", "-20.1217, -2.89791, -1.55186, 1.33", "-21.4258, -2.84153, -2.25977, 1.33", "-22.3156, -2.7848, -2.78596, 1.33", "-22.7477, -2.75174, -3.05297, 1.4", "-23.9516, -2.63828, -3.80036, 1.4", "-24.0131, -2.63177, -3.83731, 1.4", "-24.8766, -2.52945, -4.32984, 1.25", "-26.0528, -2.37277, -4.89862, 1.11", "-26.1351, -2.36166, -4.93113, 1.11", "-26.9599, -2.2616, -5.20731, 1.11", "-27.6013, -2.18378, -5.37195, 0.88", "-27.9856, -2.14092, -5.45971, 0.74", "-28.1803, -2.12615, -5.49453, 0.66", "-28.9197, -2.11565, -5.56478, 0.66", "-29.0539, -2.12506, -5.57851, 0.66", "-29.6154, -2.2285, -5.63863, 0.88", "-30.254, -2.41227, -5.70144, 0.88", "-30.6991, -2.56466, -5.74573, 0.96", "-31.1821, -2.7387, -5.78904, 0.96", "-31.9082, -2.99459, -5.84364, 0.96", "-32.5827, -3.20784, -5.9227, 0.37", "-33.2622, -3.38215, -6.01797, 0.37", "-33.6862, -3.45158, -6.09306, 1.11", "-34.6688, -3.49914, -6.2876, 1.77", "-35.3924, -3.45228, -6.44038, 2.06", "-36.3262, -3.29112, -6.64506, 2.06", "-37.0568, -3.09242, -6.80112, 1.69", "-37.5817, -2.91064, -6.90449, 1.33", "-38.3003, -2.63418, -7.02312, 1.11", "-38.7281, -2.44487, -7.07874, 1.03", "-39.0757, -2.28258, -7.10443, 1.03", "-39.6293, -2.01993, -7.14792, 0.81", "-40.0062, -1.84103, -7.20373, 0.81", "-40.4172, -1.64818, -7.28441, 0.29", "-40.9944, -1.37542, -7.41793, 0.29", "-41.3339, -1.21702, -7.50518, 1.03", "-42.3889, -0.727167, -7.80727, 1.33", "-42.8784, -0.499371, -7.96612, 1.62", "-43.5846, -0.160367, -8.2208, 1.62", "-43.8479, -0.0308073, -8.32588, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999996701105516
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "2.58986, 10.2403, -3.07033, 4.86", "2.58986, 10.2403, -3.07033, 4.86", "3.44021, 11.8717, -3.07033, 3.83", "4.05259, 12.8665, -3.07033, 3.83", "4.96697, 14.2035, -3.07033, 3.83", "6.34318, 16.0312, -3.07033, 3.83", "6.75893, 16.5435, -3.07033, 3.83", "7.75433, 17.6815, -3.07033, 2.36", "8.47741, 18.3831, -3.07033, 2.06", "9.09114, 18.895, -3.07033, 1.84", "9.79009, 19.3411, -3.07033, 1.62", "10.1817, 19.5267, -3.07033, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999996701105516
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "2.28986, -8.03763, -0.0103344, 2.5", "2.28986, -8.03763, -0.0103344, 2.5", "2.2518, -9.96694, -0.0103344, 2.21", "2.2516, -10.9311, -0.0103344, 1.62", "2.25892, -11.8715, -0.0072806, 1.62", "2.27212, -13.26, -1.10701E-4, 1.84", "2.2925, -14.5894, -0.0048256, 1.92", "2.31392, -15.4112, -0.0127501, 2.06", "2.37274, -17.2105, 0.0139076, 2.06", "2.37601, -17.2814, 0.0162807, 2.06", "2.46473, -18.8421, 0.0900237, 2.06", "2.59526, -20.5647, 0.190953, 2.06", "2.723, -22.1148, 0.327852, 1.84", "2.84498, -23.548, 0.488402, 1.55", "2.94914, -24.7125, 0.643272, 1.4", "3.10193, -26.1717, 0.879177, 1.4", "3.12867, -26.3897, 0.922593, 1.4", "3.33096, -27.7896, 1.25658, 1.25", "3.34351, -27.8679, 1.27519, 1.25", "3.53935, -28.9587, 1.50882, 1.25", "3.88261, -30.8808, 1.89041, 1.25", "3.89528, -30.9498, 1.90272, 1.25", "4.42648, -33.9122, 2.35537, 1.25", "4.61888, -35.0163, 2.49342, 1.62", "4.89401, -36.6166, 2.66881, 1.62", "5.23407, -38.6598, 2.8531, 1.62", "5.38182, -39.624, 2.9154, 1.62", "5.54177, -40.8861, 2.97847, 1.69", "5.60975, -41.6983, 2.99911, 1.92", "5.66109, -42.8542, 3.02676, 1.92", "5.66263, -43.8208, 3.04695, 1.4", "5.63842, -44.6368, 3.0644, 1.33", "5.56268, -46.2137, 3.09432, 1.33", "5.48425, -47.4085, 3.11313, 1.47", "5.43047, -48.4535, 3.12402, 1.55", "5.42135, -48.6876, 3.12559, 1.55", "5.41172, -49.3574, 3.12778, 1.33", "5.43491, -50.6943, 3.12778, 1.33", "5.43864, -50.7653, 3.12778, 1.33", "5.88923, -56.0169, 3.20832, 1.18", "6.00378, -56.9772, 3.23379, 1.33", "6.19927, -58.3112, 3.29988, 1.62", "6.41729, -59.5842, 3.38761, 1.77", "6.67013, -60.8292, 3.49819, 1.77", "7.00603, -62.1794, 3.64414, 1.62", "7.44347, -63.5367, 3.8741, 1.62", "7.88385, -64.8285, 4.12102, 1.47", "7.90679, -64.8949, 4.13434, 1.4", "8.27379, -65.9918, 4.34504, 1.55", "8.68343, -67.361, 4.57342, 1.47", "8.96337, -68.4563, 4.7132, 1.4", "9.22809, -69.6474, 4.81753, 1.25", "9.4909, -70.9098, 4.87709, 1.25", "9.72822, -72.1845, 4.90875, 1.69", "10.0395, -74.0038, 4.92245, 1.92", "10.2885, -75.5384, 4.90598, 1.92", "10.5114, -76.8718, 4.86758, 1.55", "10.7846, -78.4971, 4.8209, 1.47", "11.3017, -81.4271, 4.71048, 1.47", "11.3153, -81.4969, 4.70871, 1.47", "11.5085, -82.399, 4.69798, 1.11", "12.2075, -85.4449, 4.7165, 1.11", "12.4065, -86.264, 4.76938, 1.33", "12.6793, -87.2752, 4.88301, 1.47", "13.086, -88.5405, 5.08629, 1.47", "13.5789, -89.9316, 5.34736, 1.47", "13.609, -90.0056, 5.36564, 1.47", "14.2883, -91.4779, 5.81277, 1.33", "14.8427, -92.6175, 6.17578, 1.4", "15.3648, -93.6646, 6.48779, 1.62", "15.7191, -94.3758, 6.66723, 1.62", "16.3417, -95.6706, 6.94402, 1.03", "16.823, -96.7926, 7.1401, 0.96", "16.8475, -96.859, 7.15014, 0.96", "17.4569, -98.7951, 7.47838, 0.96", "17.4781, -98.8727, 7.49199, 0.96", "17.8426, -100.375, 7.79924, 0.96", "18.1872, -101.994, 8.15288, 0.74", "18.5136, -103.741, 8.5733, 0.74", "18.616, -104.542, 8.75926, 0.96", "18.6569, -105.128, 8.88427, 0.96", "18.7294, -106.337, 9.10065, 0.74", "18.7664, -107.073, 9.20977, 0.52", "18.823, -108.395, 9.35075, 0.52", "18.9347, -110.819, 9.52839, 0.52", "19.0467, -112.967, 9.6495, 0.52", "19.1537, -114.562, 9.69193, 0.52", "19.2044, -115.199, 9.68579, 0.74", "19.3086, -116.161, 9.66916, 0.74", "19.4445, -117.128, 9.6267, 0.66", "19.5872, -117.927, 9.56733, 1.25", "19.7497, -118.902, 9.46818, 1.62", "19.8648, -119.712, 9.37559, 1.62", "19.9735, -120.564, 9.27663, 1.47", "20.1465, -122.048, 9.11248, 1.03", "20.23, -122.856, 9.0337, 1.03", "20.2719, -123.376, 8.99956, 1.03", "20.3208, -124.295, 8.96857, 1.03", "20.347, -125.19, 8.9613, 0.66", "20.349, -126.45, 8.98429, 0.66", "20.3445, -127.488, 9.00098, 1.03", "20.3362, -128.332, 8.99018, 1.25", "20.3353, -128.403, 8.98739, 1.25", "20.3194, -129.512, 8.90937, 1.25", "20.3197, -129.572, 8.90294, 1.25", "20.3727, -130.925, 8.67439, 0.88", "20.4273, -131.394, 8.57857, 0.66", "20.4398, -131.463, 8.56419, 0.66", "20.6525, -132.334, 8.40712, 0.52", "20.6815, -132.429, 8.39272, 0.52", "20.9389, -133.161, 8.34331, 0.37", "21.4427, -134.489, 8.31645, 0.37", "21.753, -135.261, 8.30455, 0.96", "22.0828, -136.054, 8.2987, 1.77", "22.3382, -136.635, 8.30403, 1.99", "22.7544, -137.565, 8.33768, 1.99" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999996701105516,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-6.78014, -8.73112, 2.67967, 1.18", "-6.78014, -8.73112, 2.67967, 1.18", "-6.77527, -9.42688, 2.96574, 1.18", "-6.77355, -9.47596, 2.98569, 1.18", "-6.67196, -10.4306, 3.33356, 1.03", "-6.52966, -11.385, 3.82127, 1.03", "-6.37819, -12.384, 4.42235, 1.03", "-6.22746, -13.3324, 5.08173, 1.03", "-6.22045, -13.3738, 5.11523, 1.03", "-6.06855, -14.3985, 6.1494, 1.03", "-5.98536, -15.7047, 7.98253, 1.03", "-6.05469, -15.9884, 8.65931, 1.03", "-6.14401, -16.0447, 8.9953, 1.03", "-6.25951, -16.0619, 9.26384, 1.03", "-6.8246, -16.1314, 10.2305, 1.03", "-7.30096, -16.2068, 10.8493, 1.03", "-7.33923, -16.2236, 10.8852, 1.03", "-8.13869, -16.6884, 11.6237, 1.03", "-8.42309, -16.8954, 11.8909, 1.25", "-8.81603, -17.2336, 12.2781, 1.25", "-9.58768, -18.0123, 13.0081, 1.25", "-10.2416, -18.7662, 13.7647, 1.25", "-10.2679, -18.8002, 13.7979, 1.25", "-10.8903, -19.7155, 14.6659, 1.25", "-11.2404, -20.2683, 15.2332, 1.4", "-11.6177, -20.8634, 15.86, 1.4", "-12.3487, -22.0285, 17.093, 1.18", "-12.5223, -22.2792, 17.371, 1.18", "-12.9752, -22.8264, 17.9777, 0.88", "-13.7054, -23.5477, 18.8094, 0.88", "-14.2868, -24.0346, 19.3899, 0.88", "-14.7578, -24.3575, 19.7985, 0.88", "-15.471, -24.7403, 20.2508, 1.18", "-16.0838, -24.9918, 20.6345, 1.4", "-16.7928, -25.183, 21.0425, 1.4", "-16.8338, -25.1889, 21.0656, 1.4", "-17.3048, -25.1903, 21.355, 0.96", "-17.9148, -25.0814, 21.7934, 0.96", "-18.6113, -24.7717, 22.6408, 0.81", "-18.8016, -24.6254, 22.9785, 0.81", "-18.8244, -24.6006, 23.0315, 0.81", "-18.9798, -24.3618, 23.5525, 0.66", "-19.1025, -23.9187, 24.5919, 1.18", "-18.984, -23.599, 25.9392, 0.96", "-18.9665, -23.615, 25.9977, 0.96", "-18.8637, -23.8229, 26.3395, 1.03", "-18.8533, -23.8615, 26.3869, 1.03", "-18.7728, -24.4317, 26.9357, 1.03", "-18.7212, -25.6628, 27.8679, 0.88", "-18.7325, -26.483, 28.4123, 0.66", "-18.7334, -27.0069, 28.805, 0.66", "-18.7198, -27.5281, 29.2554, 0.52", "-18.6756, -27.7614, 29.4836, 0.52", "-18.6497, -27.7951, 29.5293, 0.52", "-18.2653, -27.8534, 29.7029, 0.52", "-17.2696, -27.9563, 30.0273, 0.37", "-16.5717, -28.011, 30.2324, 0.37", "-15.4082, -28.0747, 30.5165, 0.37", "-15.3465, -28.0768, 30.5309, 0.37", "-14.9833, -28.0914, 30.6102, 0.37", "-14.8667, -28.1001, 30.6308, 0.37" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999996701105516,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-5.64014, -9.75713, 1.67967, 2.5", "-5.64014, -9.75713, 1.67967, 2.5", "-5.50777, -11.3647, 1.57453, 2.21", "-5.34395, -13.6675, 1.42227, 1.99", "-5.21694, -15.7908, 1.28692, 2.06", "-5.06716, -18.3833, 1.12742, 2.21", "-4.99316, -19.6642, 1.04861, 2.21", "-4.93482, -20.8605, 0.973026, 2.28", "-4.89093, -22.3939, 0.870478, 2.5", "-4.89119, -23.7941, 0.776798, 2.5", "-4.902, -24.4264, 0.746426, 2.5" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999996701105516
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-9.68014, 5.05337, -0.320334, 2.21", "-9.68014, 5.05337, -0.320334, 2.21", "-11.2831, 5.7677, -0.120213, 1.55", "-12.7418, 6.45243, 0.15366, 1.4", "-14.3161, 7.22244, 0.473898, 1.4", "-15.899, 8.03121, 0.776496, 1.4", "-17.0503, 8.63242, 0.981336, 1.4", "-17.1267, 8.67234, 0.994168, 1.4", "-18.9354, 9.59569, 1.27419, 1.18", "-21.5402, 10.8502, 1.61652, 1.18", "-24.1047, 12.0591, 1.90942, 1.18", "-25.443, 12.6753, 2.05728, 1.55", "-26.7, 13.2407, 2.18025, 1.99", "-28.6024, 14.061, 2.31609, 1.99", "-30.2515, 14.7083, 2.32749, 2.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999996701105516
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "7.09826, 9.5642, -1.4207, 1.05453", "16.9209, 20.9006, -1.4207, 1.05453", "26.7436, 32.2371, -1.4207, 1.05453" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-91.8673, -78.6173, 40.7296, 0.96", "-91.2582, -79.1708, 40.8418, 0.96", "-90.6054, -79.7638, 40.962, 0.96", "-90.5245, -79.8373, 40.9769, 0.96", "-89.7617, -80.5303, 41.1174, 0.96", "-88.5713, -81.6119, 41.3366, 0.37", "-88.0833, -82.0552, 41.4265, 0.37", "-78.7536, -88.2631, 42.1017, 0.37", "-68.8062, -93.5739, 42.3096, 0.37", "-58.8962, -98.9398, 41.9029, 0.37", "-48.2374, -102.144, 39.5781, 0.37", "-37.7587, -104.707, 35.9231, 0.37" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-91.8673, -78.6173, 40.7296, 0.29", "-92.8099, -79.4022, 40.9421, 0.29", "-94.1917, -80.5527, 41.2536, 0.29", "-100.809, -87.1931, 43.2922, 0.29" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "12.5092, 0.0914843, 4.77245, 1.62", "13.1727, 0.204102, 4.88475, 1.62", "13.4141, 0.182306, 5.8763, 1.62", "13.7077, 0.129882, 7.37645, 1.47", "13.7212, 0.126573, 7.43382, 1.47", "13.927, 0.0796963, 8.10493, 1.47", "13.9464, 0.0753993, 8.16049, 1.47", "16.3362, -0.565723, 14.9927, 1.18", "16.3627, -0.574455, 15.0713, 1.18", "16.7537, -0.71864, 16.1295, 1.18", "17.2786, -0.90918, 17.3093, 1.18", "17.3084, -0.918853, 17.3593, 1.18", "18.1891, -1.08791, 18.1357, 1.18", "18.3129, -1.09635, 18.1606, 1.18", "19.5188, -1.14407, 18.4576, 1.18", "19.6559, -1.14462, 18.4999, 1.18", "21.0573, -1.13751, 18.9874, 1.18", "21.7393, -1.12878, 19.2356, 1.03", "23.4961, -1.08629, 19.961, 1.03", "23.5505, -1.08489, 19.9839, 1.03", "24.3774, -1.08687, 20.3772, 1.03", "24.8824, -1.10533, 20.6205, 1.55", "24.9355, -1.10971, 20.6458, 1.55", "26.1771, -1.25822, 21.3475, 1.55", "26.8461, -1.34684, 21.797, 1.55", "28.4264, -1.57472, 22.8864, 1.55", "28.9033, -1.64097, 23.2387, 1.55", "29.0391, -1.65866, 23.3443, 1.55", "30.1635, -1.76748, 24.2702, 1.47", "31.4073, -1.87387, 25.2219, 1.25", "32.2299, -1.92111, 25.8176, 0.88", "33.5947, -1.90535, 26.4368, 0.88", "33.6301, -1.90054, 26.4009, 0.88", "34.3997, -1.74733, 25.3316, 0.74", "37.2985, -0.980181, 20.4338, 0.66", "37.4213, -0.938611, 20.1828, 0.66", "37.6277, -0.855279, 19.6451, 0.37", "37.783, -0.789795, 19.1489, 0.37", "37.8011, -0.782511, 19.0843, 0.37", "37.849, -0.766839, 18.8451, 0.52", "38.2779, -0.376584, 18.9238, 0.74" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "12.5092, 0.0914843, 4.77245, 0.29", "12.5411, -0.413134, 4.71671, 0.29", "12.55, -0.947651, 4.65751, 0.29", "12.5443, -1.0164, 4.64985, 0.29", "12.4794, -1.78758, 4.56395, 0.29", "12.4743, -1.84773, 4.55725, 0.29", "12.4328, -2.34177, 4.50221, 0.29", "12.4269, -2.40186, 4.49552, 0.29", "12.2742, -3.0383, 4.42399, 0.29", "13.1914, -11.6672, 4.60242, 0.29" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "12.9381, 36.8368, 13.98, 1.03", "12.7882, 38.3379, 14.2633, 1.03", "12.6838, 39.5947, 14.4577, 1.03", "12.6103, 40.6544, 14.6506, 1.03", "12.6029, 40.773, 14.6738, 1.03", "12.5145, 42.749, 15.0071, 1.03", "12.4833, 43.681, 15.1473, 0.74", "12.4632, 44.6158, 15.4117, 0.59", "12.4654, 45.5252, 15.8201, 0.59", "12.4664, 45.5786, 15.8498, 0.59", "12.5013, 46.347, 16.3722, 1.18", "12.5053, 46.3873, 16.4062, 1.18", "12.8333, 49.3519, 18.9799, 0.74", "12.8999, 49.9497, 19.4741, 1.18", "12.9813, 50.6573, 20.0194, 1.18", "12.9895, 50.713, 20.0616, 1.18", "13.1109, 51.452, 20.616, 0.88", "13.2294, 52.1087, 21.0533, 0.66", "13.4393, 52.9889, 21.4558, 0.66", "13.4627, 53.0791, 21.5038, 0.66", "13.7187, 54.0837, 22.0926, 0.66", "13.7346, 54.1661, 22.1498, 0.66", "13.8111, 54.9167, 22.7302, 0.96", "13.8172, 55.2874, 23.0019, 1.11", "13.8131, 55.9056, 23.3319, 1.11", "13.8095, 56.0314, 23.3837, 1.11", "13.7531, 57.2243, 23.733, 0.96", "13.7148, 58.0868, 23.968, 0.88", "13.6596, 59.1887, 24.2282, 0.88", "13.5415, 60.8666, 24.6073, 0.88", "13.5285, 61.0459, 24.644, 0.88", "13.469, 61.9818, 24.7997, 0.88", "13.4111, 62.9801, 24.9045, 0.59", "13.364, 63.6916, 24.973, 0.59", "13.3333, 64.0751, 25.0065, 1.18", "13.2836, 64.645, 25.0388, 1.18", "13.2185, 65.4623, 25.0478, 1.18", "13.1136, 66.8531, 25.0042, 0.66", "13.016, 68.4854, 24.8813, 0.66", "13.009, 68.6201, 24.8754, 0.66", "12.9293, 70.2662, 24.8427, 0.66", "12.8865, 71.1729, 24.8431, 0.66", "12.8841, 71.2332, 24.845, 0.66", "12.8548, 72.2354, 24.9111, 0.66", "12.8116, 73.8425, 25.0687, 1.18", "12.8056, 74.2196, 25.1148, 1.69", "12.8061, 74.339, 25.1342, 1.69", "12.8361, 75.5495, 25.3235, 1.69", "12.8558, 76.116, 25.4087, 1.69", "12.8912, 76.7937, 25.497, 0.22", "12.9023, 76.9357, 25.509, 0.37", "12.9237, 77.1637, 25.5289, 0.37", "13.098, 78.9764, 25.725, 0.37", "13.1544, 79.5477, 25.796, 0.74", "13.2038, 80.0581, 25.8655, 0.74", "13.2481, 80.5657, 25.9354, 0.37", "13.2886, 81.4387, 26.1035, 0.37", "13.2983, 82.0648, 26.2409, 0.29", "13.3016, 82.5035, 26.3401, 0.29", "13.3084, 83.0585, 26.4522, 0.81", "13.3204, 83.8043, 26.6019, 1.03", "13.3983, 85.4969, 26.9247, 1.03", "13.5126, 86.7873, 27.2016, 1.47", "13.6535, 87.9642, 27.4893, 3.02", "13.7764, 88.8158, 27.7249, 3.02", "13.7877, 88.8813, 27.7446, 3.02", "13.9863, 89.8442, 28.0532, 2.65", "14.2668, 90.9728, 28.4049, 2.65", "14.5601, 92.2955, 28.8694, 0.52", "14.57, 92.3522, 28.889, 0.52", "14.584, 92.4788, 28.9277, 0.66", "14.5877, 92.5372, 28.9438, 0.66", "14.5531, 93.5311, 29.1411, 0.66", "14.4549, 94.4296, 29.1323, 0.66", "14.4069, 94.7857, 29.0772, 0.59", "14.372, 95.0106, 29.0421, 0.59" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "12.9381, 36.8368, 13.98, 1.18", "12.5923, 37.6269, 15.2089, 1.18", "11.8897, 39.3075, 17.5449, 0.88", "11.6394, 39.9444, 18.3586, 0.88", "11.6074, 40.0391, 18.4664, 0.88", "11.2818, 41.1578, 19.6115, 0.88", "11.2681, 41.2187, 19.6675, 0.88", "11.2001, 42.0128, 20.172, 0.88", "11.2224, 42.2694, 20.2585, 0.88", "11.3721, 43.0445, 20.4758, 0.88", "11.5265, 43.4299, 20.611, 0.88", "11.893, 44.0353, 20.8311, 0.88", "11.9381, 44.1, 20.8592, 0.88", "12.3095, 44.5702, 21.0788, 0.88", "12.3593, 44.6309, 21.1089, 0.88", "13.9321, 46.4434, 22.0434, 1.33", "14.5536, 47.1418, 22.4061, 1.33", "14.6022, 47.198, 22.4458, 1.33", "15.1873, 47.9014, 23.0207, 1.47", "15.2287, 47.9583, 23.0669, 1.47", "15.5235, 48.3982, 23.4143, 1.47", "15.5618, 48.4629, 23.4744, 1.47", "16.6487, 50.3277, 25.3113, 1.47", "16.7154, 50.4403, 25.4175, 1.47", "17.4441, 51.6908, 26.5714, 1.47", "17.4909, 51.7713, 26.6457, 1.47", "18.4268, 53.4566, 28.1829, 1.47", "18.9543, 54.4115, 29.021, 0.74", "19.3374, 55.1413, 29.5829, 0.74", "19.4011, 55.2712, 29.6898, 1.18", "20.0135, 56.6394, 30.8981, 1.18", "20.2673, 57.4058, 31.5215, 0.96", "20.2751, 57.4645, 31.5612, 0.96", "20.202, 58.391, 32.3724, 0.96", "20.0184, 59.2104, 33.266, 0.96", "19.9886, 59.3389, 33.4155, 0.96", "19.8543, 60.0311, 34.2336, 1.33", "19.7574, 60.7773, 35.1675, 1.33", "19.7649, 62.6863, 37.6057, 1.33", "19.9315, 63.847, 39.1755, 0.52", "20.1426, 64.5246, 39.9819, 0.52", "20.4987, 65.2854, 40.7765, 0.52", "20.5349, 65.3438, 40.825, 0.52", "21.2004, 66.3628, 41.3851, 0.52", "21.2373, 66.4347, 41.4038, 0.52", "21.7045, 67.994, 41.729, 0.52", "21.7153, 68.7902, 41.9382, 1.77", "21.5312, 69.6881, 42.2093, 1.77", "21.2705, 70.3409, 42.4261, 1.77", "20.5534, 71.4584, 42.841, 0.66", "20.019, 72.0281, 43.1386, 0.66", "19.3311, 72.4895, 43.4968, 0.66", "19.1629, 72.5744, 43.5695, 0.66", "18.5986, 72.8213, 43.776, 0.52", "18.4486, 72.9092, 43.8313, 0.52", "17.1785, 73.8516, 44.2765, 0.52", "17.0453, 73.9633, 44.3271, 0.52", "16.1953, 74.7633, 44.6665, 0.22", "15.3011, 75.6646, 45.0197, 0.22", "13.8707, 77.2956, 45.5676, 0.22", "13.6556, 77.5702, 45.6385, 0.88", "15.1235, 87.0116, 52.7691, 0.88", "14.7471, 96.626, 59.7786, 0.88", "16.2666, 105.67, 67.4475, 0.88", "17.8789, 114.634, 75.2027, 0.88" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-43.8479, -0.0308073, -8.32588, 0.81", "-44.1451, -0.172209, -8.59695, 0.81", "-45.1915, -0.672945, -9.61951, 0.74", "-46.1343, -1.06299, -10.4971, 0.74", "-48.3892, -1.80496, -12.3762, 1.69", "-49.1232, -2.00149, -12.9817, 2.14", "-49.5696, -2.10324, -13.3417, 2.14", "-52.314, -2.58012, -15.6057, 0.66", "-53.2205, -2.71578, -16.3967, 0.52", "-54.5317, -2.87033, -17.5621, 0.52", "-56.134, -2.98833, -18.9435, 0.52", "-56.5387, -3.02196, -19.3629, 1.33", "-57.7281, -3.12069, -20.7672, 1.84", "-59.0833, -3.14275, -22.5699, 0.29", "-60.2772, -3.12425, -24.4033, 0.29", "-60.3218, -3.11965, -24.4824, 0.29", "-61.8932, -2.74785, -27.4275, 0.29", "-61.9323, -2.73161, -27.5075, 0.29", "-62.5424, -2.32409, -28.8439, 0.22", "-62.7922, -2.0442, -29.4812, 0.22", "-63.035, -1.63366, -30.3597, 1.4", "-63.0614, -1.59121, -30.4334, 1.4", "-64.014, -0.157271, -31.7604, 2.58" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-43.8479, -0.0308073, -8.32588, 0.52", "-44.6511, 0.526291, -8.56985, 0.52", "-44.7282, 0.577426, -8.58671, 0.52", "-45.159, 0.855683, -8.66799, 0.52", "-45.2185, 0.892794, -8.67795, 0.52", "-46.2356, 1.5002, -8.8287, 0.52", "-46.35, 1.56639, -8.84432, 0.52", "-47.1262, 1.96832, -8.87743, 0.52", "-47.1901, 1.99855, -8.88554, 0.52", "-47.4312, 2.09511, -8.94403, 0.81", "-47.8062, 2.23373, -9.05546, 1.03", "-47.8706, 2.25526, -9.07793, 1.03", "-48.616, 2.49681, -9.34705, 1.03", "-49.4937, 2.76848, -9.66759, 0.44", "-50.2149, 2.98839, -9.9165, 0.29", "-51.7351, 3.43016, -10.4079, 0.22", "-52.5948, 3.67881, -10.6841, 1.33", "-52.6442, 3.69309, -10.6993, 1.33", "-53.1352, 3.83304, -10.8342, 2.06", "-53.7913, 4.01912, -10.9457, 2.28", "-54.2342, 4.14188, -10.995, 2.28" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "10.1817, 19.5267, -3.07033, 0.88", "10.5359, 19.9861, -3.16118, 0.88", "10.9681, 20.4678, -3.3007, 0.81", "11.0243, 20.5108, -3.31144, 0.81", "11.5259, 20.8351, -3.38269, 0.81", "11.5744, 20.8565, -3.39473, 0.81", "12.3798, 21.1811, -3.62358, 1.25", "12.4834, 21.2126, -3.66513, 1.25", "13.394, 21.5327, -4.09384, 1.25", "13.4325, 21.5488, -4.11671, 1.25", "14.56, 22.1295, -4.89951, 0.66", "14.9252, 22.3613, -5.1724, 0.66", "15.6432, 22.9125, -5.75651, 1.03", "16.3187, 23.5523, -6.36738, 1.03", "16.8857, 24.2151, -6.95178, 0.88", "17.1813, 24.627, -7.26094, 0.66", "17.3883, 24.9985, -7.47672, 0.66", "17.4074, 25.0348, -7.49822, 0.66", "17.9534, 26.1855, -8.13603, 0.66", "17.9704, 26.2215, -8.15962, 0.66", "18.163, 26.678, -8.46665, 1.25", "18.3444, 27.1486, -8.81341, 1.69", "18.651, 28.1225, -9.53243, 1.84", "18.7189, 28.3945, -9.72304, 1.84", "18.8223, 29.2016, -10.261, 1.4", "18.8494, 29.563, -10.505, 0.96", "18.8512, 30.0025, -10.7966, 0.81", "18.8016, 30.7027, -11.2202, 0.66", "18.7273, 31.2558, -11.4986, 0.59", "18.6287, 31.9572, -11.8193, 0.59", "18.5183, 32.817, -12.1578, 0.59", "18.4627, 33.425, -12.382, 1.33", "18.4348, 34.0992, -12.6447, 2.06", "18.4544, 34.9012, -12.9783, 2.73", "18.5417, 35.8521, -13.3685, 3.17", "18.6554, 36.6371, -13.6802, 3.17", "18.7848, 37.3986, -13.9651, 2.5", "19.032, 38.5738, -14.4172, 0.88", "19.2741, 39.5015, -14.7749, 0.52", "19.5251, 40.3135, -15.0887, 0.44", "19.5402, 40.3538, -15.1048, 0.44", "19.8272, 41.0228, -15.3729, 0.44", "19.8701, 41.1172, -15.406, 0.44", "20.1442, 41.7521, -15.5923, 0.44", "20.1687, 41.8134, -15.6149, 0.44", "20.3928, 42.4801, -15.9249, 0.44", "20.4029, 42.5185, -15.9482, 0.44", "20.5349, 43.3526, -16.516, 0.44", "20.5791, 44.1536, -17.1035, 1.18", "20.5702, 44.6557, -17.4924, 1.77", "20.5623, 45.0138, -17.8216, 2.06", "20.5175, 46.0507, -18.857, 0.37", "20.4991, 46.7741, -19.6182, 0.37", "20.4859, 47.5697, -20.506, 0.37", "20.4857, 47.5968, -20.5351, 0.37", "20.5097, 49.0211, -22.01, 1.77", "20.5413, 49.537, -22.5322, 2.36", "20.5729, 49.8964, -22.8661, 1.55", "20.6131, 50.1779, -23.1008, 0.29", "20.7542, 51.03, -23.5984, 0.29", "20.8359, 51.5715, -23.8238, 0.96", "20.8425, 51.6219, -23.8354, 0.96", "20.9341, 52.2224, -23.96, 0.96", "21.0663, 52.802, -24.1322, 0.15", "21.3792, 53.9499, -24.5701, 0.15", "21.3926, 53.9959, -24.5915, 0.66", "21.4147, 54.0757, -24.6314, 0.66", "21.5173, 54.4098, -24.8917, 0.66", "21.8405, 55.5921, -26.0026, 0.22", "22.1696, 56.9276, -27.4349, 0.22", "22.2705, 57.3598, -27.9414, 1.4", "22.35, 57.7385, -28.3833, 1.69", "22.6704, 59.423, -30.3484, 0.22", "22.8401, 60.3792, -31.4732, 0.22", "22.9721, 61.2054, -32.383, 0.29", "23.0636, 61.5703, -32.8161, 1.47", "23.1806, 61.9513, -33.2475, 1.69", "23.193, 61.9822, -33.28, 1.69", "23.5143, 62.6417, -33.844, 0.15", "24.0366, 63.3728, -34.5614, 0.15", "24.5033, 63.9715, -35.1258, 0.15", "24.5033, 63.9715, -35.1258, 1.03", "24.946, 64.5952, -35.6736, 1.84", "24.9657, 64.628, -35.7001, 1.84", "25.3614, 65.4833, -36.3036, 1.84", "25.532, 66.0736, -36.6897, 0.15", "25.5385, 66.1075, -36.7086, 0.15", "25.7615, 67.6052, -37.4695, 0.15", "25.7678, 67.6642, -37.4953, 0.74", "25.8226, 68.1987, -37.7051, 0.74", "26.0061, 70.0556, -38.3189, 0.22", "26.0894, 70.378, -38.458, 0.74", "26.1627, 70.522, -38.5268, 0.74", "26.5178, 70.9586, -38.779, 0.22", "26.8461, 71.2885, -38.9812, 0.96", "27.1738, 71.5427, -39.1636, 1.18", "28.9815, 72.7082, -40.1481, 0.15", "30.3026, 73.5548, -40.9211, 0.15", "30.7424, 73.8306, -41.1868, 0.88", "31.1356, 74.0732, -41.4301, 0.88", "32.27, 74.7845, -42.1462, 0.22", "32.6449, 75.0484, -42.406, 0.88", "33.0116, 75.3597, -42.6771, 1.11", "33.0458, 75.3893, -42.7061, 1.11", "33.2724, 75.6133, -42.8982, 1.11", "33.2997, 75.6428, -42.9221, 1.11", "34.6004, 77.203, -44.1233, 0.15", "34.6264, 77.2335, -44.1473, 0.15", "34.9, 77.542, -44.4058, 0.74", "35.2274, 77.9127, -44.7238, 0.74", "35.2532, 77.9418, -44.7498, 0.74", "35.8071, 78.6036, -45.328, 0.74", "35.8271, 78.6376, -45.3525, 0.74" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "10.1817, 19.5267, -3.07033, 1.4", "10.4114, 19.3279, -3.09657, 1.4", "11.7444, 18.1381, -3.11688, 1.4", "12.2746, 17.6092, -3.07592, 0.96", "13.0206, 16.7342, -2.9538, 0.96", "13.074, 16.6638, -2.95222, 0.96", "13.7319, 15.7367, -3.03005, 0.96", "14.1715, 15.0618, -3.10811, 0.96", "14.9391, 13.9158, -3.40557, 0.96", "15.8262, 12.6917, -3.92651, 0.96", "17.0932, 11.087, -4.79437, 1.25", "17.9677, 10.0728, -5.39965, 1.25", "18.5825, 9.42027, -5.83687, 1.25", "20.5264, 7.54197, -7.15319, 1.03", "21.7081, 6.52429, -7.8759, 1.03", "22.4834, 5.92491, -8.28291, 1.03", "23.3475, 5.31101, -8.6331, 1.25", "24.5852, 4.50198, -9.02478, 1.25", "25.4406, 3.95644, -9.30343, 1.25", "26.1529, 3.45764, -9.50196, 1.25", "26.2175, 3.40442, -9.53475, 1.25", "27.1183, 2.43352, -10.2922, 1.25", "27.6752, 1.58245, -11.0035, 0.88", "28.4373, 0.103577, -12.2583, 1.33", "28.757, -0.63713, -12.8988, 1.33", "29.4696, -2.44868, -14.4608, 1.03", "29.7849, -3.32088, -15.1785, 0.74", "30.1136, -4.184, -15.8607, 0.74", "30.6444, -5.18972, -16.6413, 0.74", "30.7026, -5.23182, -16.6741, 0.74", "31.379, -5.53073, -16.9528, 1.03", "31.5274, -5.58689, -17.0149, 1.03", "33.1853, -6.1781, -17.8757, 1.03", "34.106, -6.49332, -18.3793, 1.25", "35.6476, -7.07081, -19.2804, 1.33", "37.4014, -7.79344, -20.3624, 1.33", "39.0318, -8.56585, -21.4632, 1.33", "40.0863, -9.12372, -22.2426, 1.33" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "10.1817, 19.5267, -3.07033, 1.55", "10.6614, 19.745, -2.95386, 1.55", "11.7635, 20.2465, -2.68628, 1.55", "13.4347, 21.007, -2.28051, 1.33", "14.6982, 21.582, -1.97371, 1.62", "16.0507, 22.1974, -1.64531, 1.84", "16.1196, 22.2288, -1.62859, 1.84" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "22.7544, -137.565, 8.33768, 0.22", "22.6013, -139.043, 6.47133, 0.22", "22.6008, -139.076, 6.43843, 0.22", "22.6401, -139.609, 6.01885, 0.22", "22.6714, -139.814, 5.89179, 0.22", "22.714, -140.03, 5.78371, 0.96", "22.8541, -140.646, 5.52323, 1.03", "22.9712, -141.021, 5.44657, 1.4", "23.1079, -141.442, 5.35398, 1.69", "23.2886, -141.982, 5.23219, 1.47", "23.4391, -142.437, 5.12892, 0.88", "23.6196, -143.025, 5.00977, 0.66", "23.9043, -143.995, 4.83825, 0.52", "23.9164, -144.039, 4.83082, 0.52", "24.0613, -144.609, 4.74071, 0.52", "24.3255, -145.743, 4.58106, 0.52", "24.5645, -146.866, 4.45001, 0.29", "24.6493, -147.299, 4.41328, 0.74", "24.7336, -147.778, 4.38779, 1.18", "24.8107, -148.251, 4.36907, 1.55", "24.8795, -148.821, 4.35929, 1.84", "24.9096, -149.297, 4.36577, 1.99", "24.9178, -149.751, 4.37475, 1.62", "24.9095, -150.418, 4.39245, 0.66", "24.8852, -151.09, 4.41378, 0.44", "24.84, -151.97, 4.44506, 0.37", "24.7754, -152.88, 4.47692, 0.29", "24.7367, -153.301, 4.49155, 0.29", "24.7084, -153.544, 4.49225, 0.44", "24.6756, -153.784, 4.4839, 0.44", "24.6268, -154.115, 4.44739, 0.81", "24.5878, -154.421, 4.38769, 0.81", "24.5427, -154.692, 4.32686, 0.81", "24.4288, -155.266, 4.20588, 0.59", "24.3433, -155.598, 4.14582, 0.52", "24.2023, -156.055, 4.079, 0.15", "24.0166, -156.594, 4.01891, 0.15", "23.6863, -157.461, 3.93325, 0.15", "23.5168, -157.878, 3.90253, 0.74", "23.3108, -158.425, 3.88241, 1.25", "23.183, -158.797, 3.86206, 1.47", "23.0994, -159.069, 3.84508, 1.33", "22.9501, -159.665, 3.79261, 0.22", "22.7986, -160.531, 3.69769, 0.22", "22.6661, -161.663, 3.5648, 0.22", "22.6466, -162.07, 3.51865, 0.74", "22.647, -162.404, 3.48436, 0.96", "22.669, -162.844, 3.44788, 0.96", "22.7133, -163.229, 3.4272, 0.81", "22.7668, -163.561, 3.41105, 0.22", "22.9223, -164.409, 3.3859, 0.22", "22.9674, -164.652, 3.38515, 1.03", "23.0623, -165.141, 3.39372, 1.55", "23.1385, -165.496, 3.40336, 1.92", "23.1914, -165.733, 3.41119, 1.92", "23.2818, -166.114, 3.42582, 1.92", "23.4592, -166.813, 3.45324, 0.22", "23.7739, -168.021, 3.49844, 0.22", "24.0929, -169.231, 3.54207, 0.22", "24.1042, -169.276, 3.54248, 0.22", "24.3194, -170.101, 3.53057, 0.22", "24.5363, -170.89, 3.50093, 2.21", "24.6972, -171.461, 3.46788, 2.73", "24.7751, -171.742, 3.44615, 2.73", "25.1222, -173.006, 3.35371, 0.22", "25.3338, -173.796, 3.30097, 0.22", "25.6217, -174.918, 3.233, 0.22", "25.8868, -176.001, 3.18003, 0.22", "25.897, -176.045, 3.18024, 0.22", "25.9981, -176.559, 3.21654, 0.22", "26.03, -176.768, 3.25019, 1.03", "26.0745, -177.292, 3.36558, 1.47", "26.0784, -177.519, 3.42715, 1.47", "26.0641, -178.398, 3.68029, 0.15", "26.037, -179.138, 3.88218, 0.15", "26.0091, -179.556, 3.99935, 0.15", "25.9939, -179.809, 4.06714, 0.74", "25.9838, -180.179, 4.14981, 0.74", "25.9981, -180.519, 4.20823, 0.88", "26.0263, -180.817, 4.25959, 0.88", "26.1075, -181.388, 4.37132, 0.15", "26.2508, -182.184, 4.53241, 0.15", "26.4979, -183.325, 4.76142, 0.15", "26.8343, -184.658, 5.02629, 0.15", "27.0201, -185.287, 5.16064, 0.88", "27.1705, -185.746, 5.26272, 1.18", "27.3135, -186.142, 5.34836, 1.33", "27.4187, -186.44, 5.41365, 1.47", "27.5332, -186.779, 5.48458, 1.18", "27.6999, -187.374, 5.58221, 0.44", "27.7978, -187.786, 5.63269, 0.22", "27.9485, -188.544, 5.72113, 0.22", "28.1551, -189.712, 5.88078, 0.22", "28.1659, -189.775, 5.88977, 0.22", "28.3244, -190.665, 6.03, 0.22", "28.3702, -190.911, 6.06868, 0.52", "28.4822, -191.432, 6.15409, 0.52", "28.6329, -192.07, 6.26363, 1.25", "28.7543, -192.521, 6.33779, 1.84", "28.9212, -193.121, 6.41792, 2.21", "29.0523, -193.536, 6.45381, 1.99", "29.2984, -194.275, 6.49168, 0.52", "29.4372, -194.688, 6.50136, 0.52", "29.589, -195.145, 6.49139, 0.22", "29.8394, -195.909, 6.46171, 0.22", "30.2255, -197.089, 6.38018, 0.22", "30.3295, -197.384, 6.36258, 1.25" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "22.7544, -137.565, 8.33768, 0.52", "23.1682, -137.65, 8.5165, 0.52", "23.8576, -137.772, 8.8195, 0.52", "24.8069, -137.929, 9.23729, 0.52", "25.481, -138.046, 9.52362, 0.74", "26.1522, -138.165, 9.8043, 0.74", "26.9615, -138.322, 10.166, 0.44", "27.578, -138.447, 10.4562, 0.44", "27.6256, -138.458, 10.4792, 0.44", "28.0661, -138.615, 10.6778, 0.37", "28.1106, -138.635, 10.701, 0.37", "28.7369, -138.963, 10.9993, 0.59", "29.1881, -139.248, 11.162, 0.88", "29.3823, -139.389, 11.2274, 1.11", "29.7176, -139.652, 11.328, 1.25", "29.7581, -139.686, 11.3381, 1.25", "30.0999, -139.974, 11.4046, 1.25", "30.4938, -140.297, 11.4556, 0.88", "30.9224, -140.635, 11.5526, 0.59", "31.2283, -140.876, 11.6629, 0.52", "31.6788, -141.225, 11.8648, 0.29", "32.1186, -141.569, 12.0852, 0.29", "32.9846, -142.257, 12.5637, 0.29", "33.6494, -142.791, 13.0046, 1.11", "34.1941, -143.241, 13.4059, 1.47", "34.4849, -143.485, 13.6272, 1.84", "34.8845, -143.835, 13.9705, 1.99", "35.3118, -144.218, 14.3568, 1.47", "35.9833, -144.846, 14.9781, 0.88", "36.345, -145.164, 15.269, 0.88", "36.836, -145.564, 15.6353, 0.88", "37.5537, -146.075, 16.2092, 0.29", "37.8894, -146.278, 16.4868, 0.29", "37.9325, -146.299, 16.5256, 0.29", "38.3793, -146.476, 16.9275, 0.29", "38.4175, -146.489, 16.9636, 0.29", "39.2287, -146.754, 17.7229, 0.29", "39.3161, -146.784, 17.7934, 0.29", "40.0537, -147.079, 18.393, 0.44", "40.4592, -147.253, 18.7006, 1.03", "40.8029, -147.422, 18.9416, 1.33", "41.1527, -147.607, 19.1519, 1.33", "41.6521, -147.899, 19.388, 0.88", "42.2749, -148.281, 19.6417, 0.29", "42.7357, -148.581, 19.7852, 0.22", "43.0854, -148.839, 19.8934, 0.22", "43.3252, -149.034, 19.965, 0.44", "43.5252, -149.217, 20.0181, 0.66", "43.7778, -149.463, 20.0681, 0.66", "44.0444, -149.726, 20.0975, 0.66", "44.4544, -150.118, 20.143, 0.29", "44.499, -150.157, 20.1574, 0.29", "44.8039, -150.422, 20.3255, 0.22", "45.2262, -150.792, 20.6289, 0.22", "45.2943, -150.852, 20.6859, 0.22", "45.7528, -151.256, 21.0965, 0.22", "46.5655, -151.996, 21.8162, 1.18", "46.9669, -152.382, 22.1691, 1.62", "47.0665, -152.484, 22.2637, 1.84", "47.2663, -152.709, 22.466, 1.84", "47.5803, -153.057, 22.7505, 1.55", "48.0221, -153.549, 23.0996, 0.44", "48.0562, -153.584, 23.1204, 0.44", "48.5634, -154.085, 23.4345, 0.44", "48.5985, -154.12, 23.4543, 0.44", "49.4021, -154.929, 23.8777, 0.29", "50.1478, -155.684, 24.2341, 0.29", "50.6925, -156.241, 24.4598, 0.22", "50.7586, -156.31, 24.4821, 0.22", "51.3682, -156.977, 24.6177, 0.22", "51.6017, -157.262, 24.654, 0.66", "51.8107, -157.551, 24.6677, 0.96", "51.9838, -157.815, 24.6687, 0.52", "52.1376, -158.075, 24.6752, 0.29", "52.452, -158.648, 24.7442, 0.29", "52.7823, -159.34, 24.8785, 0.29", "52.8895, -159.595, 24.9276, 0.59", "53.0578, -160.07, 25.0118, 0.59", "53.1905, -160.487, 25.0825, 0.59", "53.4722, -161.541, 25.2456, 0.15", "53.705, -162.619, 25.4003, 0.15", "53.8426, -163.416, 25.503, 0.15", "53.9428, -164.213, 25.5865, 0.15", "53.9452, -164.271, 25.5909, 0.15", "53.8812, -164.848, 25.5991, 0.15", "53.8418, -164.964, 25.6017, 0.44", "53.8191, -165.011, 25.605, 0.44", "53.7658, -165.109, 25.6152, 0.44", "53.3487, -165.86, 25.7097, 0.22", "52.7595, -167.113, 25.8235, 0.22", "52.2661, -168.613, 25.9163, 0.22", "52.2599, -168.664, 25.9186, 0.22", "52.2642, -168.937, 25.9276, 1.03", "52.3336, -169.247, 25.931, 1.33", "52.9568, -170.509, 25.9269, 0.22", "53.7618, -171.656, 25.903, 0.22", "54.9306, -173.032, 25.8454, 0.22", "54.9656, -173.072, 25.8439, 0.22", "56.0226, -174.18, 25.8152, 0.22", "57.0463, -175.148, 25.8101, 0.22", "57.0882, -175.181, 25.8118, 0.22", "57.4923, -175.445, 25.8243, 1.47", "62.6945, -180.69, 27.4799, 1.47" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-14.8667, -28.1001, 30.6308, 0.22", "-15.4029, -28.9662, 30.3509, 0.22", "-16.0974, -30.2301, 30.0226, 0.22", "-16.1982, -30.4136, 29.9749, 0.22", "-16.6201, -31.1815, 29.7755, 0.22", "-16.6675, -31.2678, 29.753, 0.22", "-16.8254, -31.5551, 29.6784, 0.44", "-17.1519, -32.3094, 29.5128, 0.44", "-24.53, -42.5198, 28.0716, 0.44" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-14.8667, -28.1001, 30.6308, 0.29", "-14.2702, -27.713, 30.6155, 0.29", "-13.2728, -27.0656, 30.5897, 0.29", "-13.1909, -27.0124, 30.5876, 0.29", "-12.3143, -26.4435, 30.565, 0.29", "-12.0065, -26.2437, 30.5571, 0.66", "-11.4545, -25.8854, 30.5429, 0.66", "-2.71982, -21.2619, 31.259, 0.66", "5.49462, -15.8084, 31.1019, 0.66", "12.5101, -9.15662, 29.5919, 0.66", "20.8442, -3.90618, 28.8893, 0.66", "27.395, 2.98124, 26.6232, 0.66", "34.2918, 9.05999, 23.131, 0.66", "41.5777, 15.1597, 20.6229, 0.66", "49.6055, 20.7457, 19.4034, 0.66" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-4.902, -24.4264, 0.746426, 1.18", "-4.42111, -25.0924, 0.957431, 1.18", "-3.85104, -25.907, 1.22482, 0.66", "-3.49452, -26.4295, 1.39375, 0.66", "-3.3147, -26.6981, 1.47944, 0.81", "-2.96525, -27.2274, 1.64337, 0.74", "-2.41303, -28.0749, 1.89965, 0.74", "-2.38933, -28.1138, 1.91313, 0.74", "-2.22446, -28.3778, 2.01751, 0.96", "-2.19567, -28.4211, 2.03352, 0.96", "-2.03085, -28.6443, 2.1087, 0.96", "-1.99814, -28.6859, 2.12186, 0.96", "-1.35311, -29.4726, 2.36529, 0.74", "-1.32865, -29.504, 2.37442, 0.74", "-0.95715, -29.9951, 2.51188, 0.74", "-0.354576, -30.8492, 2.74911, 0.88", "-0.214555, -31.068, 2.80374, 0.88", "-0.195047, -31.1028, 2.81098, 0.88", "0.0553861, -31.6367, 2.89183, 0.66", "0.0727291, -31.6801, 2.89769, 0.66", "0.337525, -32.4911, 3.00666, 0.52", "0.528903, -33.2124, 3.08975, 0.52", "0.632987, -33.6336, 3.12709, 0.88", "0.735958, -34.0867, 3.16038, 1.11", "0.888027, -34.8107, 3.23212, 1.11", "0.975518, -35.2688, 3.28355, 0.52", "1.13613, -36.2797, 3.38197, 0.52", "1.24468, -37.0205, 3.42705, 0.52", "1.31495, -37.5032, 3.44181, 0.88", "1.41204, -38.1718, 3.45772, 1.03", "1.58898, -39.3091, 3.47129, 0.81", "1.79723, -40.4328, 3.5265, 0.66", "1.9997, -41.4264, 3.60364, 0.52", "2.15763, -42.1428, 3.67088, 0.52", "2.58655, -43.8517, 3.93481, 0.52", "2.68403, -44.2036, 4.00565, 0.52", "3.1677, -45.7686, 4.44472, 0.44", "3.48693, -46.698, 4.78464, 1.62", "3.64503, -47.1244, 4.96704, 1.99", "4.12276, -48.367, 5.4849, 1.25", "4.22735, -48.6457, 5.58392, 0.29", "4.42024, -49.21, 5.7439, 0.29", "4.43535, -49.2608, 5.75271, 0.29", "4.67874, -50.1422, 5.86121, 0.29", "4.97728, -51.435, 6.00687, 0.29", "5.17318, -52.5973, 6.20002, 0.29", "5.18783, -52.7057, 6.22571, 1.47", "5.26293, -53.3657, 6.4155, 1.92", "5.28288, -53.5552, 6.47709, 1.92", "5.38303, -54.5899, 6.88465, 0.37", "5.69325, -56.9503, 7.94151, 0.29", "5.7644, -57.392, 8.15254, 1.4", "5.80842, -57.6295, 8.27248, 1.62", "5.88469, -57.976, 8.44929, 1.62", "6.10583, -58.8145, 8.87787, 0.29", "6.33784, -59.4852, 9.1982, 0.29", "6.35789, -59.5305, 9.22022, 0.29", "6.78195, -60.4713, 9.75945, 0.29", "7.07156, -61.1228, 10.1332, 0.29", "7.3436, -61.7537, 10.4862, 1.47", "7.54949, -62.2479, 10.748, 1.77", "7.66409, -62.5433, 10.896, 1.77", "8.07366, -63.6028, 11.3747, 0.22", "8.52208, -64.7479, 11.8233, 0.22", "8.65937, -65.135, 11.9667, 0.22", "8.7142, -65.3211, 12.0224, 0.81", "8.85527, -65.8359, 12.1404, 1.03", "8.91714, -66.0735, 12.1759, 1.03", "8.92924, -66.1188, 12.1781, 1.03", "8.99194, -66.3561, 12.19, 0.15", "9.23641, -67.2269, 12.2292, 0.15", "9.62377, -68.4826, 12.3176, 0.15", "9.73449, -68.8204, 12.3485, 1.25", "9.8868, -69.283, 12.3907, 1.62", "9.91825, -69.3783, 12.3994, 1.62", "9.94955, -69.4736, 12.408, 1.62", "10.1695, -70.1725, 12.4678, 0.22", "10.396, -70.9982, 12.5617, 0.22", "10.8158, -72.5951, 12.7634, 0.22", "10.8267, -72.6403, 12.7694, 0.22", "10.8829, -72.8775, 12.8003, 0.74", "11.0055, -73.4115, 12.8663, 0.74", "11.1819, -74.2591, 12.956, 0.15", "11.1915, -74.3047, 12.9612, 0.15", "11.2833, -74.6631, 13.003, 0.44", "11.3672, -74.9498, 13.0294, 0.44", "11.4765, -75.2884, 13.0557, 0.15", "11.6258, -75.708, 13.0734, 0.15", "11.7485, -76.0185, 13.063, 1.18", "11.9694, -76.5709, 13.0434, 1.62", "12.0266, -76.7073, 13.0379, 1.62", "14.9945, -82.7465, 13.4815, 1.62" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-4.902, -24.4264, 0.746426, 1.77", "-5.20686, -25.2671, 0.457573, 1.77", "-5.54288, -26.2883, 0.111651, 1.77", "-5.89536, -27.4075, -0.248709, 1.69", "-6.28902, -28.6934, -0.635059, 1.55", "-6.70543, -30.1118, -1.03365, 1.55", "-7.11817, -31.5534, -1.41982, 1.33", "-7.36395, -32.4932, -1.65496, 1.47", "-7.59656, -33.4269, -1.87028, 2.06", "-7.81929, -34.3935, -2.07077, 2.36", "-7.92923, -34.9177, -2.17036, 2.28", "-7.98066, -35.152, -2.20002, 2.28" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-30.2515, 14.7083, 2.32749, 1.03", "-30.2847, 14.7432, 2.34607, 1.03", "-30.8583, 15.3282, 2.63425, 0.88", "-31.4014, 15.866, 2.87615, 0.88", "-31.9351, 16.3815, 3.09681, 0.88", "-33.0171, 17.3902, 3.4971, 0.88", "-33.642, 17.9646, 3.70776, 0.96", "-34.1017, 18.3747, 3.84037, 0.66", "-34.5498, 18.7518, 3.95814, 0.59", "-34.6419, 18.8274, 3.98151, 0.59", "-35.2893, 19.3706, 4.12508, 0.59", "-35.6602, 19.7106, 4.19916, 0.59", "-35.9896, 20.0766, 4.28573, 0.88", "-36.4349, 20.6834, 4.42605, 1.03", "-36.7516, 21.1839, 4.5393, 1.11", "-36.9475, 21.5507, 4.61332, 1.11", "-37.1741, 22.0757, 4.70243, 0.66", "-37.6194, 23.2145, 4.85956, 0.66", "-37.8161, 23.7807, 4.91688, 0.96", "-37.8323, 23.8333, 4.92033, 0.96", "-38.091, 24.746, 4.97693, 0.96", "-38.3728, 25.7872, 5.03771, 0.96", "-38.4913, 26.2685, 5.06382, 0.74", "-38.7512, 27.4112, 5.12653, 0.52", "-38.8634, 27.9737, 5.15791, 0.52", "-39.1092, 29.4721, 5.24328, 0.52", "-39.117, 29.5344, 5.2469, 0.52", "-39.1771, 30.2791, 5.29137, 0.52", "-39.19, 30.6824, 5.31723, 1.11", "-39.177, 31.2568, 5.35915, 1.47", "-39.1366, 31.8389, 5.40677, 1.33", "-39.1292, 31.9011, 5.41241, 1.33", "-39.0732, 32.4067, 5.45922, 1.33", "-39.0201, 32.8804, 5.50461, 0.88", "-38.9739, 33.3088, 5.54574, 0.88", "-38.9165, 33.9429, 5.60539, 0.52", "-38.8742, 34.516, 5.65765, 0.52", "-38.8408, 35.0888, 5.7094, 0.96", "-38.8388, 35.1435, 5.71441, 0.96", "-38.8326, 35.66, 5.75768, 1.11", "-38.8366, 36.1687, 5.80053, 1.11", "-38.8362, 36.2313, 5.80631, 1.11", "-38.8268, 36.5217, 5.83475, 0.81", "-38.8082, 36.8683, 5.86909, 0.66", "-38.778, 37.3886, 5.91878, 0.66", "-38.7743, 37.4354, 5.92301, 0.66", "-38.729, 37.9025, 5.96026, 0.88", "-38.7164, 38.3647, 5.99088, 0.88", "-38.7307, 38.8225, 6.0187, 0.66", "-38.7654, 39.339, 6.04909, 0.44", "-38.8413, 40.1519, 6.09758, 0.22", "-38.8696, 40.3909, 6.11127, 0.22", "-39.1007, 41.9748, 6.20214, 0.22", "-39.178, 42.4353, 6.22877, 0.22", "-39.3075, 43.1172, 6.26857, 0.22", "-39.3595, 43.3392, 6.28154, 0.59", "-39.3908, 43.4531, 6.28826, 0.59", "-39.5107, 43.8933, 6.31511, 0.74", "-39.6619, 44.5244, 6.31432, 1.25", "-39.8067, 45.1471, 6.28752, 1.99", "-39.9659, 45.8248, 6.24096, 2.43", "-40.0246, 46.1164, 6.22076, 2.43", "-40.1396, 46.7903, 6.18174, 2.28", "-40.3181, 47.8743, 6.12604, 0.74", "-40.3279, 47.9364, 6.12417, 0.74", "-40.439, 48.6834, 6.11672, 0.66", "-40.6281, 50.1031, 6.13307, 0.66", "-40.8118, 51.4218, 6.17503, 0.66", "-40.8882, 51.9322, 6.20483, 0.66", "-41.0131, 52.7219, 6.31236, 0.66", "-41.0994, 53.2217, 6.39885, 1.11", "-41.2356, 53.943, 6.54283, 1.11", "-41.248, 54.0034, 6.55567, 1.11", "-41.3599, 54.5648, 6.67864, 0.96", "-41.5365, 55.5109, 6.8714, 0.22", "-42.092, 58.4544, 7.427, 0.15", "-42.2037, 59.035, 7.53038, 2.06", "-42.4143, 60.1196, 7.7101, 2.73", "-42.5885, 61.0349, 7.84674, 0.22", "-42.9049, 62.7313, 8.05576, 0.22", "-43.0028, 63.2914, 8.09919, 0.66", "-43.0959, 63.8685, 8.14124, 1.03", "-43.1559, 64.2683, 8.1626, 0.88", "-43.2129, 64.6688, 8.17555, 0.52", "-43.2466, 64.9164, 8.17803, 0.15", "-43.3946, 66.1749, 8.1805, 0.15", "-43.513, 67.2846, 8.1898, 0.15", "-43.6006, 68.0003, 8.20482, 1.33", "-43.6868, 68.6254, 8.24295, 2.21", "-43.7549, 69.0821, 8.28701, 2.21", "-43.8184, 69.4743, 8.34334, 2.21", "-43.962, 70.2759, 8.49127, 0.15", "-44.3691, 72.2511, 8.95874, 0.15", "-44.542, 73.0038, 9.16913, 0.15", "-44.6957, 73.6014, 9.35026, 1.69", "-44.8659, 74.2422, 9.53657, 2.06", "-45.0213, 74.7976, 9.71074, 2.06", "-45.1915, 75.4074, 9.90989, 1.69", "-45.2056, 75.4582, 9.92648, 1.69", "-45.3774, 76.1108, 10.1117, 0.15", "-45.8678, 78.1981, 10.6258, 0.15", "-46.0191, 78.9301, 10.7694, 0.81", "-46.1017, 79.376, 10.8456, 1.18", "-46.1978, 79.962, 10.9301, 0.88", "-46.2688, 80.4198, 10.9911, 0.15", "-46.468, 81.9001, 11.1661, 0.15", "-46.6095, 83.5888, 11.3158, 0.15", "-46.6242, 83.876, 11.3332, 0.81", "-46.6344, 84.2758, 11.3569, 0.96", "-46.6323, 84.5173, 11.3711, 0.96", "-46.6126, 85.0296, 11.4006, 0.22", "-46.4135, 87.2297, 11.526, 0.22", "-46.4051, 87.292, 11.5295, 0.22", "-46.3397, 87.7679, 11.5497, 0.96", "-46.3002, 88.0534, 11.5593, 1.25", "-46.2602, 88.3414, 11.5672, 1.25", "-46.1973, 88.7929, 11.5754, 0.81", "-46.0988, 89.4246, 11.606, 0.15", "-45.786, 91.1941, 11.7529, 0.15", "-45.6616, 91.7657, 11.7961, 1.99", "-45.5271, 92.3024, 11.8332, 2.95", "-45.5124, 92.3554, 11.8367, 2.95", "-45.2689, 93.1302, 11.8413, 2.95", "-44.9628, 94.0749, 11.7944, 0.22", "-44.5311, 95.4555, 11.6714, 0.22", "-44.3918, 95.9598, 11.6135, 1.25", "-44.2783, 96.4105, 11.5437, 1.69", "-44.0267, 97.4878, 11.3427, 0.15", "-43.6985, 99.0402, 10.9996, 0.15", "-43.5057, 100.043, 10.7821, 0.15", "-43.353, 101.073, 10.7273, 2.14", "-43.2926, 101.525, 10.7755, 2.14", "-43.2825, 101.61, 10.8001, 2.14", "-43.2011, 102.409, 11.2078, 0.15", "-43.1636, 102.79, 11.4809, 0.15", "-42.9555, 104.933, 13.2422, 0.15", "-42.9258, 105.277, 13.5208, 0.88", "-42.8942, 105.662, 13.7826, 1.03", "-42.8905, 105.709, 13.8114, 1.03", "-42.8566, 106.172, 14.0503, 0.29", "-42.7926, 106.881, 14.3152, 0.15", "-42.6814, 107.834, 14.4846, 0.15", "-42.4901, 108.966, 14.6669, 0.15", "-42.3679, 109.493, 14.7461, 0.74", "-42.2233, 109.988, 14.8162, 0.74", "-42.1373, 110.225, 14.848, 0.15", "-41.6734, 111.303, 14.9709, 0.15", "-40.6524, 112.82, 15.1307, 0.15", "-39.994, 113.559, 15.2032, 0.15", "-39.6055, 113.944, 15.2443, 1.77", "-39.1742, 114.332, 15.2926, 2.28", "-38.8993, 114.564, 15.3238, 2.14", "-35.2644, 117.341, 15.7453, 0.15", "-33.5874, 118.513, 15.9512, 0.15", "-33.2007, 118.773, 15.9991, 0.59", "-33.1602, 118.8, 16.0043, 0.59", "-34.8555, 126.271, 17.8684, 0.59", "-37.5927, 133.435, 19.8277, 0.59", "-40.1575, 140.762, 21.306, 0.59" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-30.2515, 14.7083, 2.32749, 0.66", "-31.1595, 14.3511, 2.08966, 0.66", "-31.9227, 14.0457, 1.84867, 0.66", "-32.9972, 13.6181, 1.48185, 0.81", "-34.264, 13.1007, 1.00893, 1.03", "-35.7105, 12.503, 0.454582, 1.03", "-36.7431, 12.0731, 0.0606664, 0.88", "-37.5392, 11.7466, -0.264674, 0.52", "-38.1008, 11.5131, -0.500223, 0.81", "-38.8624, 11.1956, -0.811286, 1.33", "-39.4174, 10.9686, -1.02544, 1.33", "-40.0093, 10.7511, -1.19865, 1.11", "-40.5559, 10.5793, -1.32183, 0.88", "-41.2552, 10.3853, -1.44876, 0.59", "-42.5652, 10.0493, -1.71382, 0.59", "-43.1448, 9.90763, -1.83743, 0.81", "-44.2787, 9.61934, -2.1052, 0.81", "-44.8445, 9.47015, -2.24176, 0.81", "-45.4416, 9.30482, -2.3866, 0.81", "-46.5702, 8.96019, -2.67501, 0.81", "-47.1326, 8.76151, -2.82716, 0.52", "-47.853, 8.46153, -3.00678, 0.52", "-48.7879, 8.00713, -3.23558, 0.52", "-48.8326, 7.98374, -3.24525, 0.52", "-49.4555, 7.64853, -3.35531, 1.11", "-49.9907, 7.3522, -3.4148, 1.25", "-50.873, 6.8569, -3.51706, 1.25", "-51.3676, 6.54795, -3.57626, 0.74", "-51.7178, 6.3051, -3.61733, 0.52", "-51.8039, 6.23857, -3.62586, 0.52", "-52.1707, 5.91663, -3.64992, 0.52", "-52.2471, 5.83972, -3.65225, 0.52", "-52.6575, 5.35449, -3.66616, 0.52", "-52.6901, 5.31607, -3.66726, 0.52", "-53.1825, 4.79216, -3.6828, 0.52", "-53.2203, 4.75829, -3.68387, 0.52", "-53.6996, 4.3794, -3.69907, 0.52", "-54.101, 4.09501, -3.71032, 0.74", "-54.6127, 3.77252, -3.7232, 0.81", "-55.166, 3.42919, -3.73658, 0.81", "-55.986, 2.92669, -3.7558, 0.37", "-56.6564, 2.49382, -3.74133, 1.18", "-57.3632, 1.99358, -3.70016, 2.06", "-57.9257, 1.55818, -3.65318, 2.58", "-58.4272, 1.13683, -3.60213, 2.58", "-58.8455, 0.766921, -3.55521, 1.99", "-59.6899, 0.0139608, -3.45879, 0.52", "-60.6914, -0.849915, -3.34995, 0.52", "-61.4957, -1.51854, -3.22369, 0.52", "-62.0325, -1.93185, -3.12305, 0.96", "-62.7546, -2.43397, -2.96752, 1.47", "-63.5419, -2.91841, -2.79103, 1.69", "-64.0715, -3.20592, -2.66333, 1.69", "-65.1164, -3.70779, -2.36632, 1.69", "-65.6923, -3.96729, -2.18475, 1.18", "-66.3184, -4.24166, -1.97147, 0.88", "-67.0642, -4.56454, -1.71311, 0.44", "-68.0014, -4.97802, -1.40084, 0.44", "-68.6714, -5.27065, -1.21012, 0.44", "-68.7183, -5.28999, -1.20068, 0.44", "-69.4243, -5.55278, -1.04168, 0.44", "-70.1652, -5.77843, -0.873039, 0.44", "-70.3518, -5.8241, -0.828879, 0.88", "-70.9433, -5.92754, -0.712515, 1.18", "-71.4676, -6.00859, -0.604839, 1.18", "-72.2206, -6.12208, -0.45267, 0.81", "-72.6451, -6.1943, -0.376516, 0.52", "-72.9853, -6.26042, -0.317401, 0.29", "-74.3233, -6.5619, -0.102588, 0.29", "-74.9058, -6.71887, -0.0190869, 0.22", "-74.9548, -6.73422, -0.0135099, 0.22", "-76.13, -7.13239, 0.0429332, 0.22", "-76.2042, -7.15792, 0.0445942, 0.22", "-76.5037, -7.26357, 0.037155, 0.37", "-76.8462, -7.3883, 0.00990903, 1.03", "-77.3351, -7.55649, -0.0503915, 1.4", "-77.8602, -7.72636, -0.138392, 1.4", "-78.4763, -7.92218, -0.262118, 1.4", "-79.1509, -8.16327, -0.402809, 0.22", "-79.733, -8.39021, -0.525551, 0.15", "-80.5014, -8.717, -0.686067, 0.15", "-81.1488, -9.02341, -0.81523, 0.15", "-81.6418, -9.28859, -0.903643, 0.15", "-82.3576, -9.71533, -1.02195, 0.15", "-82.7993, -9.99676, -1.08084, 0.29", "-83.1225, -10.2144, -1.11241, 1.03", "-83.6097, -10.5561, -1.14313, 1.55", "-84.0474, -10.8664, -1.15817, 1.55", "-84.6823, -11.3103, -1.17906, 0.15", "-85.4175, -11.8161, -1.20216, 0.15", "-86.7826, -12.7625, -1.24357, 0.15", "-87.3186, -13.1324, -1.25865, 1.33", "-87.908, -13.5342, -1.2728, 2.73", "-88.3946, -13.8593, -1.28435, 3.39", "-88.4462, -13.8943, -1.28558, 3.39" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "26.7436, 32.2371, -1.4207, 0.978482", "36.5663, 43.5735, -1.4207, 0.978482", "46.389, 54.91, -1.4207, 0.978482" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "38.2779, -0.376584, 18.9238, 0.15", "39.9148, -1.17171, 20.5513, 0.15", "40.7381, -1.46861, 21.4463, 0.15", "41.0971, -1.5637, 21.8562, 0.15", "41.1502, -1.56839, 21.9203, 0.15", "41.3868, -1.54135, 22.2405, 0.15", "41.4257, -1.51232, 22.3074, 0.15", "41.3904, -0.54013, 22.7578, 0.15", "41.3774, -0.382088, 22.8197, 0.15", "41.2764, 0.388149, 23.1069, 0.15", "41.1583, 1.10121, 23.3544, 0.15", "40.9952, 1.87708, 23.5925, 1.03", "40.812, 2.66669, 23.7812, 1.4", "40.7037, 3.06909, 23.8277, 1.4", "43.6491, 8.30051, 33.9111, 1.4", "44.753, 12.5887, 44.82, 1.4" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "38.2779, -0.376584, 18.9238, 0.29", "38.0924, 0.158565, 18.8929, 0.29", "38.0677, 0.229766, 18.8887, 0.29", "37.8879, 0.748518, 18.8588, 0.29", "37.5373, 1.75961, 18.8004, 0.29", "34.665, 11.8251, 16.2253, 0.29", "33.8983, 22.4548, 15.0259, 0.29", "31.9704, 32.6059, 12.0015, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "14.372, 95.0106, 29.0421, 0.52", "14.1877, 95.6635, 29.1579, 0.52", "14.0618, 96.1866, 29.2268, 0.52", "14.0517, 96.2484, 29.2356, 0.52", "14.0043, 96.8375, 29.3084, 0.52", "13.9976, 97.0069, 29.3464, 0.52", "13.9844, 97.6196, 29.51, 0.52", "13.9856, 97.7343, 29.5398, 0.52", "13.9884, 98.3418, 29.7384, 0.44", "13.9826, 99.2186, 30.0633, 0.44", "13.9195, 100.103, 30.449, 0.22", "13.9126, 100.153, 30.4728, 0.22", "13.8192, 100.685, 30.7514, 0.22", "13.7079, 101.188, 31.0245, 0.22", "13.6906, 101.241, 31.0552, 0.22", "13.2642, 102.166, 31.6272, 0.22", "13.2116, 102.264, 31.6744, 0.22", "11.9658, 108.977, 35.8367, 0.22" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "14.372, 95.0106, 29.0421, 0.15", "16.1953, 96.5525, 31.9563, 0.15", "16.71, 97.1113, 32.5369, 0.15", "16.7552, 97.1661, 32.5776, 0.15", "17.0781, 97.6306, 32.8304, 0.88", "17.3733, 98.1305, 33.017, 1.33", "17.6627, 98.6447, 33.1752, 1.4", "18.0834, 99.525, 33.1896, 0.29", "18.1206, 99.5962, 33.183, 0.29", "18.8642, 100.88, 32.9334, 0.22", "19.6872, 102.144, 32.5586, 0.22", "19.8501, 102.383, 32.4484, 0.52", "20.3463, 103.14, 31.875, 0.59", "20.854, 103.974, 30.9835, 0.29", "21.0585, 104.404, 30.3455, 0.29", "21.1784, 104.802, 29.6342, 0.29", "21.2324, 105.443, 28.6047, 0.66", "21.1965, 106.618, 27.1582, 0.66", "21.1941, 106.685, 27.0943, 0.66", "21.1755, 107.844, 26.2092, 0.37", "21.2138, 109.054, 25.4246, 0.37", "21.3635, 110.46, 24.6719, 0.29", "21.6956, 112.014, 24.0399, 0.22", "22.0643, 113.165, 23.7166, 0.22", "22.3685, 113.937, 23.5531, 1.33", "22.7059, 114.647, 23.4611, 1.4", "22.9916, 115.18, 23.4135, 1.4", "23.4451, 115.926, 23.4447, 0.81", "24.0876, 116.977, 23.657, 0.59", "24.5128, 117.756, 23.8844, 0.22", "24.587, 117.903, 23.9374, 0.22", "25.0933, 119.025, 24.5106, 0.22", "25.5572, 120.241, 25.2287, 0.52", "25.6083, 120.382, 25.3312, 0.52", "25.7856, 120.89, 25.7356, 0.52", "25.808, 120.959, 25.7939, 0.52", "26.2922, 122.648, 27.1557, 0.52", "26.4662, 123.308, 27.6616, 0.81", "26.7911, 124.743, 28.5707, 1.33", "26.8378, 124.951, 28.691, 1.33", "26.9804, 125.588, 29.0545, 1.33", "27.1715, 126.549, 29.5443, 1.33", "27.2113, 126.886, 29.6521, 1.33", "27.2532, 127.632, 29.8319, 1.03", "27.2213, 128.044, 29.8418, 0.81", "29.5599, 139.136, 31.0995, 0.81", "30.4955, 150.461, 31.5895, 0.81", "29.9668, 161.81, 31.4101, 0.81", "29.452, 173.036, 33.154, 0.81" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "14.372, 95.0106, 29.0421, 0.22", "13.7712, 94.6948, 29.6069, 0.22", "13.5605, 94.584, 29.8051, 0.22" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "17.8789, 114.634, 75.2027, 0.29", "18.8163, 121.937, 81.9709, 0.29", "21.3905, 129.124, 88.4182, 0.29", "24.0485, 135.528, 95.6943, 0.29", "28.4127, 140.501, 103.363, 0.29", "33.8415, 146.018, 109.829, 0.29", "40.7886, 151.83, 114.187, 0.29" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "17.8789, 114.634, 75.2027, 0.15", "17.4566, 122.318, 79.0909, 0.29", "14.994, 129.532, 83.2837, 0.29", "11.764, 137.052, 86.2015, 0.29", "10.1662, 145.042, 89.0072, 0.29", "9.75314, 153.336, 91.1035, 0.29", "10.0872, 161.768, 92.3701, 0.29" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-54.2342, 4.14188, -10.995, 0.52", "-55.3743, 2.90579, -11.4946, 0.52", "-56.3435, 2.19435, -11.8281, 0.52", "-56.4167, 2.14069, -11.8533, 0.52", "-56.798, 1.8608, -11.9845, 0.88", "-57.541, 1.31544, -12.2401, 0.22", "-58.4528, 0.646204, -12.5539, 1.18", "-59.4757, 0.223077, -12.7649, 1.18" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-54.2342, 4.14188, -10.995, 0.22", "-55.5584, 4.86231, -11.3213, 0.22", "-57.115, 5.68504, -11.6609, 0.22", "-57.371, 5.81918, -11.7245, 0.22", "-58.1244, 6.21555, -11.9176, 0.22", "-58.2692, 6.28989, -11.954, 0.22", "-59.8304, 7.08014, -12.3399, 0.22", "-59.9099, 7.11738, -12.3551, 0.22", "-61.0801, 7.56945, -12.6167, 1.62", "-61.9589, 7.86064, -12.8171, 2.06", "-62.5935, 8.02146, -12.9445, 2.06", "-62.7724, 8.05886, -12.9773, 2.06", "-64.2293, 8.28846, -13.2207, 0.15", "-65.9715, 8.51341, -13.4738, 0.15", "-67.1157, 8.62129, -13.608, 0.15", "-69.6693, 8.79062, -13.8843, 0.15", "-69.7475, 8.79469, -13.8921, 0.15", "-70.2013, 8.81011, -13.9282, 0.88", "-70.8694, 8.81786, -13.9618, 1.11", "-71.4535, 8.8088, -13.9582, 1.11", "-72.0507, 8.80042, -13.9547, 0.22", "-72.1293, 8.80101, -13.9543, 0.22", "-73.6245, 8.83925, -14.0077, 0.22", "-73.7027, 8.84478, -14.0133, 0.22", "-73.9581, 8.87368, -14.0395, 0.44", "-74.3836, 8.93899, -14.0913, 0.44", "-75.5984, 9.15489, -14.2834, 0.22", "-76.3247, 9.3014, -14.4071, 0.88", "-77.1349, 9.48057, -14.5543, 1.55", "-77.8161, 9.62915, -14.666, 1.84", "-78.7839, 9.8419, -14.8145, 0.29", "-79.2934, 9.95722, -14.8837, 0.22", "-81.1871, 10.4195, -15.1547, 0.22", "-81.4244, 10.4787, -15.1869, 0.22", "-83.0229, 10.8801, -15.4159, 0.22", "-83.1442, 10.9115, -15.4338, 0.22", "-84.4515, 11.2585, -15.6593, 0.22", "-85.2281, 11.4506, -15.7918, 1.18", "-85.5507, 11.5232, -15.8536, 1.62", "-86.2335, 11.6581, -15.9912, 1.92", "-86.7184, 11.7373, -16.0408, 1.92", "-87.623, 11.8788, -16.0858, 0.22", "-89.999, 12.2472, -16.1085, 0.22", "-90.0877, 12.2612, -16.1065, 0.22", "-90.3993, 12.322, -16.0706, 0.59", "-93.6349, 13.0702, -15.4782, 0.22", "-94.653, 13.3209, -15.2553, 1.11", "-95.2483, 13.4779, -15.1054, 1.84", "-95.8704, 13.6505, -14.9394, 1.84", "-98.2797, 14.3224, -14.3122, 0.22", "-100.835, 14.9854, -13.7015, 0.15", "-102.892, 15.4609, -13.2657, 0.15", "-103.06, 15.4915, -13.2266, 0.44", "-103.299, 15.5247, -13.1735, 0.44", "-103.783, 15.5706, -13.0808, 0.44", "-105.786, 15.6265, -12.8602, 0.15", "-105.864, 15.6238, -12.8469, 0.15", "-107.409, 15.5255, -12.4982, 1.47", "-108.056, 15.4765, -12.3406, 2.14", "-108.463, 15.4447, -12.2292, 2.43" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "16.1196, 22.2288, -1.62859, 1.03", "16.4575, 22.8617, -1.34123, 1.03", "16.6352, 23.1812, -1.18945, 0.96", "16.8791, 23.6077, -0.96248, 0.81", "17.1208, 24.0234, -0.740338, 0.81", "17.4886, 24.6769, -0.409251, 0.81", "17.8096, 25.2519, -0.0981885, 0.81", "17.8539, 25.3343, -0.0512609, 0.81", "18.0935, 25.7868, 0.216896, 1.11", "18.3149, 26.2071, 0.458536, 1.25", "18.5851, 26.722, 0.757871, 1.25", "18.9339, 27.3857, 1.14513, 1.03", "19.2549, 27.9887, 1.50805, 0.81", "19.6923, 28.7846, 1.97191, 0.81", "20.0464, 29.3995, 2.30593, 0.81", "20.0694, 29.4372, 2.32564, 0.81", "20.3202, 29.8367, 2.50483, 1.18", "20.4393, 30.036, 2.57073, 1.18", "20.6428, 30.4199, 2.67077, 1.18", "20.9362, 31.0687, 2.83765, 1.47", "21.1505, 31.653, 3.02247, 1.18", "21.3603, 32.308, 3.25157, 0.74", "21.4948, 32.8411, 3.45306, 0.74", "21.6288, 33.7465, 3.83416, 0.74", "21.6951, 34.5702, 4.212, 0.88", "21.7207, 35.7849, 4.8472, 0.88", "21.7186, 35.854, 4.88612, 0.88", "21.6563, 36.8273, 5.47097, 0.88", "21.536, 38.1884, 6.3236, 0.88", "21.5313, 38.2354, 6.35399, 0.88", "21.4603, 38.9635, 6.7992, 0.66", "21.4281, 39.4388, 7.08941, 0.66", "21.4181, 40.0693, 7.46277, 0.66", "21.4215, 40.1098, 7.48857, 0.66", "21.5551, 40.6499, 7.89355, 1.03", "21.6795, 41.0541, 8.22139, 1.4", "21.8012, 41.3533, 8.49028, 1.55", "21.9423, 41.6377, 8.76096, 1.69", "22.2297, 42.1867, 9.26538, 1.47", "22.6012, 42.8204, 9.88756, 1.33", "22.6231, 42.8558, 9.92639, 1.33", "22.9139, 43.3024, 10.4683, 0.81", "23.2335, 43.8518, 11.1661, 0.66", "23.3879, 44.227, 11.6166, 0.66", "23.5985, 45.0387, 12.4997, 0.66", "23.6438, 45.3439, 12.817, 0.66", "23.6512, 45.4171, 12.8923, 0.66", "23.6653, 45.9669, 13.4688, 0.66", "23.6628, 46.697, 14.1976, 0.66", "23.663, 46.7707, 14.2602, 0.66", "23.6965, 47.3096, 14.5683, 0.88", "23.7885, 47.811, 14.7688, 1.03", "23.8036, 47.8702, 14.787, 1.03", "24.0666, 48.6037, 14.9384, 1.03", "24.0909, 48.6623, 14.9467, 1.03", "24.3919, 49.3957, 15.0089, 1.03", "24.838, 50.4978, 15.0611, 1.03", "24.8588, 50.5498, 15.0631, 1.03", "25.2348, 51.5046, 15.0932, 0.66", "25.8601, 53.0721, 15.1283, 0.66", "26.1066, 53.6797, 15.1415, 0.66", "26.1286, 53.7313, 15.1422, 0.66", "26.3447, 54.2037, 15.1456, 0.88", "26.5248, 54.5902, 15.1546, 1.18", "26.7915, 55.1353, 15.1758, 1.4", "27.0299, 55.5922, 15.2084, 1.4", "27.1968, 55.9211, 15.2475, 1.4", "27.4615, 56.463, 15.3153, 0.81", "27.6488, 56.9192, 15.4005, 0.66", "27.7898, 57.2931, 15.5351, 0.52", "27.8419, 57.4471, 15.6029, 0.52", "28.0791, 58.1596, 15.9442, 0.52", "28.0954, 58.2079, 15.9675, 0.52", "28.4441, 59.1789, 16.3786, 0.52", "28.8953, 60.2927, 16.7403, 0.44", "29.1939, 60.9766, 16.9218, 0.66", "29.3682, 61.3506, 16.9962, 0.81", "29.732, 62.0766, 17.0933, 0.81", "30.1308, 62.8152, 17.1353, 0.66", "30.7406, 63.8394, 17.0825, 0.52", "30.7691, 63.8878, 17.0766, 0.52", "31.1793, 64.5569, 17.0204, 0.52", "31.209, 64.6048, 17.0167, 0.52", "31.5334, 65.1211, 16.9858, 0.88", "31.864, 65.6549, 16.9749, 1.18", "31.8938, 65.7029, 16.9738, 1.18", "32.2171, 66.2255, 16.9606, 1.18", "32.5388, 66.7524, 16.9485, 0.74", "32.8812, 67.3352, 16.9397, 0.37", "33.4101, 68.2481, 16.9298, 0.37", "33.6294, 68.5952, 16.9218, 0.37", "33.7552, 68.7698, 16.9139, 0.74", "34.0465, 69.1132, 16.8877, 1.03", "34.0924, 69.1592, 16.8827, 1.03", "34.5767, 69.5704, 16.8157, 1.25", "35.1875, 70.0313, 16.72, 1.25", "35.4859, 70.2648, 16.6749, 1.47", "35.7286, 70.4767, 16.6425, 1.47", "35.8166, 70.5614, 16.6353, 1.47", "36.1579, 70.9429, 16.6312, 1.25", "36.5173, 71.4096, 16.6518, 1.03", "36.8754, 71.9334, 16.7046, 0.88", "37.4945, 72.9096, 16.8325, 0.59", "37.8534, 73.5053, 16.9181, 0.37", "38.2509, 74.1662, 17.0552, 0.37", "38.5332, 74.6339, 17.177, 0.52", "38.7548, 74.9953, 17.2868, 0.66", "39.0834, 75.5143, 17.4618, 0.66", "39.6733, 76.4208, 17.7961, 0.66", "40.1776, 77.1836, 18.0745, 0.66", "40.2073, 77.2287, 18.0908, 0.66", "40.4647, 77.6411, 18.236, 1.25", "40.7057, 78.0646, 18.3727, 1.69", "40.9525, 78.5886, 18.5326, 1.84", "41.0476, 78.849, 18.6099, 1.99", "41.1854, 79.3419, 18.734, 1.11", "41.2401, 79.5601, 18.7879, 0.88", "41.2729, 79.7272, 18.8294, 0.66", "41.355, 80.2282, 18.9665, 0.44", "41.4821, 81.119, 19.2197, 0.29", "41.5724, 81.7872, 19.4119, 0.29", "41.8178, 83.6666, 19.974, 0.29", "41.9465, 84.6396, 20.267, 0.22", "42.012, 85.0892, 20.4202, 0.29", "42.0723, 85.4664, 20.5602, 0.44", "42.2093, 86.2754, 20.8769, 0.44", "42.3449, 86.9393, 21.1689, 0.44", "42.4327, 87.2829, 21.3397, 1.11", "42.7697, 88.1856, 21.8294, 1.77", "42.9718, 88.632, 22.065, 1.92", "43.2419, 89.0673, 22.3646, 2.14", "43.4244, 89.3104, 22.543, 1.99", "43.6177, 89.5401, 22.708, 1.99", "44.326, 90.3528, 23.2595, 0.37", "44.8686, 90.9648, 23.6403, 0.37", "46.3053, 92.552, 24.598, 0.29", "46.7523, 93.0371, 24.9056, 1.11", "47.0724, 93.3731, 25.1989, 1.92", "47.3723, 93.6876, 25.52, 2.28", "47.5397, 93.8559, 25.7075, 2.43", "47.8972, 94.1681, 26.1535, 2.43", "48.5016, 94.6938, 27.0048, 2.43", "49.9504, 95.919, 29.2436, 0.37", "50.2286, 96.1632, 29.708, 0.37", "50.5641, 96.4823, 30.3041, 0.37", "51.0605, 97.0358, 31.25, 0.59", "51.337, 97.4582, 31.8472, 0.81", "51.365, 97.5498, 31.9212, 0.81", "51.399, 98.184, 32.16, 0.81", "51.3972, 98.8756, 32.3766, 0.81", "51.3785, 99.3865, 32.5115, 0.59", "51.3549, 100.01, 32.6403, 0.44", "51.3367, 101.041, 32.8443, 0.44", "51.3278, 102.293, 33.0879, 0.44", "51.3365, 103.098, 33.2403, 1.03", "51.3437, 103.556, 33.3276, 1.62", "51.3426, 103.619, 33.3383, 1.62", "51.3071, 104.266, 33.4388, 2.14", "51.2907, 104.431, 33.4611, 2.36", "51.2039, 104.947, 33.5221, 2.36", "51.0439, 105.64, 33.5994, 1.77", "50.811, 106.444, 33.7014, 0.52", "50.7967, 106.49, 33.7071, 0.52", "50.7187, 106.707, 33.7325, 0.37", "50.5633, 107.095, 33.7788, 0.37", "50.4917, 107.243, 33.7978, 0.29", "50.0767, 107.976, 33.9266, 0.29", "53.7022, 115.008, 35.2665, 0.29", "56.4054, 122.372, 36.7979, 0.29", "58.9303, 129.956, 37.0004, 0.29" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "16.1196, 22.2288, -1.62859, 1.33", "17.3523, 21.7496, -2.11871, 1.33", "18.6767, 21.2334, -2.62099, 0.96", "20.1579, 20.636, -3.17651, 0.88", "20.2225, 20.6087, -3.20092, 0.88", "21.8221, 19.909, -3.81483, 0.88", "23.3468, 19.2304, -4.40495, 0.81", "23.4109, 19.2021, -4.42941, 0.81", "24.2298, 18.8301, -4.74273, 0.81", "25.0447, 18.4732, -5.05891, 0.81", "25.9566, 18.0889, -5.41934, 0.81", "26.0216, 18.0645, -5.44571, 0.81", "27.2122, 17.6747, -5.94768, 0.81", "27.5057, 17.5914, -6.06789, 0.81", "28.6807, 17.312, -6.53441, 0.81", "29.3907, 17.1689, -6.83315, 0.66", "30.6771, 16.9346, -7.40295, 0.66", "31.4643, 16.7984, -7.76845, 0.88", "32.1585, 16.6914, -8.10494, 0.88", "32.5881, 16.6349, -8.32501, 0.88", "33.4356, 16.5635, -8.81175, 0.74", "33.7051, 16.5506, -8.98111, 0.74", "34.3542, 16.5369, -9.43971, 0.66", "35.0481, 16.5384, -9.9564, 0.37", "35.9384, 16.543, -10.6712, 0.29", "36.7636, 16.5514, -11.3497, 0.29", "36.8213, 16.552, -11.3973, 0.29", "37.3143, 16.5571, -11.8379, 0.44", "37.8871, 16.5508, -12.3822, 0.44", "38.6278, 16.507, -13.1049, 0.44", "38.9171, 16.4725, -13.371, 1.03", "38.9728, 16.4623, -13.4196, 1.03", "39.8025, 16.2991, -14.109, 1.55", "40.3295, 16.191, -14.5099, 1.84", "40.6397, 16.1276, -14.7338, 1.84", "41.2311, 16.0041, -15.1235, 1.55", "42.1099, 15.8158, -15.686, 0.59", "42.5767, 15.719, -15.9683, 0.37", "43.383, 15.5398, -16.4202, 0.22", "43.6585, 15.481, -16.5713, 0.44", "44.1465, 15.3726, -16.827, 0.88", "44.2105, 15.3569, -16.8618, 0.88", "44.6259, 15.2606, -17.0809, 1.11", "44.9981, 15.1787, -17.2947, 1.11", "45.1961, 15.1393, -17.4139, 1.11", "45.8783, 15.0122, -17.7446, 0.52", "46.6056, 14.8761, -18.0093, 0.22", "47.3827, 14.7222, -18.2316, 0.22", "47.6256, 14.6744, -18.2864, 0.52", "48.3245, 14.541, -18.4103, 0.96", "49.626, 14.284, -18.5817, 1.25", "50.4218, 14.1245, -18.6399, 1.55", "50.7513, 14.0536, -18.6472, 1.69", "51.2814, 13.9316, -18.6605, 1.33", "51.5222, 13.8799, -18.6678, 1.03", "51.6059, 13.8654, -18.6763, 1.03", "51.8333, 13.8329, -18.7256, 0.88", "52.2126, 13.7803, -18.8224, 0.88", "52.6626, 13.7139, -18.9393, 0.52", "53.3485, 13.6094, -19.1206, 0.29", "54.5602, 13.4288, -19.4494, 0.29", "54.966, 13.3676, -19.5643, 0.88", "55.5764, 13.2653, -19.7529, 1.33", "55.6449, 13.2539, -19.7802, 1.33", "56.1415, 13.1713, -20.0133, 1.33", "56.4106, 13.1269, -20.159, 1.55", "56.8292, 13.0573, -20.3989, 1.55", "57.8806, 12.8342, -21.0038, 0.22", "59.0612, 12.5393, -21.7515, 0.29", "59.1216, 12.5224, -21.7916, 0.29", "59.8907, 12.2799, -22.3204, 0.29", "59.9491, 12.259, -22.3614, 0.29", "61.5148, 11.6272, -23.4808, 0.29", "62.3248, 11.2626, -24.0601, 1.11", "62.6876, 11.0738, -24.3268, 1.62", "63.1179, 10.8264, -24.7214, 1.84", "63.3889, 10.651, -25.028, 2.06", "63.6397, 10.4625, -25.3554, 1.84", "63.7912, 10.3278, -25.5949, 1.55", "64.2431, 9.91043, -26.2401, 1.11", "65.0356, 9.1818, -27.3889, 0.29", "65.2486, 8.99064, -27.6903, 0.15", "65.8981, 8.44372, -28.5409, 0.15", "65.9886, 8.37095, -28.6476, 0.15", "67.0391, 7.53652, -29.7198, 0.15", "67.5891, 7.12679, -30.2056, 0.88", "67.9318, 6.88439, -30.467, 1.69", "68.3933, 6.5648, -30.8192, 1.99", "68.9115, 6.22136, -31.2086, 1.99", "69.5173, 5.82759, -31.6503, 0.88", "70.2366, 5.3743, -32.1517, 0.22", "71.5381, 4.54146, -33.0859, 0.22", "71.8927, 4.32308, -33.355, 0.59", "72.2589, 4.09604, -33.6441, 0.96", "72.5981, 3.88999, -33.9179, 1.11", "72.9248, 3.69874, -34.1695, 1.11", "73.9327, 3.08839, -34.9697, 0.15", "74.4132, 2.79168, -35.377, 0.15", "75.2403, 2.2693, -36.0858, 0.15", "75.2884, 2.23733, -36.1317, 0.15", "76.6277, 1.28749, -37.4651, 0.15", "77.2506, 0.822625, -38.0847, 1.25", "77.7364, 0.446632, -38.5549, 1.62", "78.0377, 0.198682, -38.8571, 1.62", "78.9258, -0.545007, -39.7621, 0.15", "79.9334, -1.43524, -40.7994, 0.15", "80.2134, -1.70936, -41.0835, 0.66", "80.4812, -1.97579, -41.3277, 1.03", "80.7703, -2.27647, -41.5861, 1.03", "80.9365, -2.45198, -41.7228, 1.03", "81.3941, -2.94965, -42.044, 0.15", "82.2859, -3.97165, -42.7283, 0.15", "82.341, -4.0359, -42.7734, 0.52", "82.4597, -4.18161, -42.874, 0.52", "82.799, -4.6145, -43.1676, 0.59", "82.9659, -4.83299, -43.3099, 0.59" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "30.3295, -197.384, 6.36258, 0.81", "30.8216, -197.852, 5.99364, 0.81", "31.5213, -198.573, 5.47021, 0.52", "32.7641, -199.892, 4.5462, 0.44", "33.6924, -200.9, 3.85894, 0.44", "34.0731, -201.323, 3.58029, 0.81", "34.7096, -202.035, 3.11869, 0.15", "36.4176, -204.142, 1.69903, 0.15", "36.5424, -204.313, 1.58131, 0.44", "36.6306, -204.445, 1.48878, 0.44", "36.9257, -204.909, 1.13969, 0.96", "37.0068, -205.039, 1.03826, 0.96", "37.7521, -206.192, 0.155687, 0.96", "37.7945, -206.258, 0.0971925, 0.96", "38.1858, -206.834, -0.387432, 0.96", "38.6243, -207.439, -0.876356, 0.96", "39.1414, -208.114, -1.37552, 0.29", "39.7961, -208.905, -1.85807, 0.29", "39.8481, -208.965, -1.89042, 0.29", "40.115, -209.287, -2.06964, 0.52", "40.1875, -209.381, -2.12222, 0.52", "40.4993, -209.801, -2.3602, 0.52", "41.4215, -211.057, -3.06846, 0.22", "41.7731, -211.589, -3.3558, 0.37", "41.8189, -211.668, -3.38975, 0.37", "42.0323, -212.065, -3.53077, 0.37", "42.1181, -212.233, -3.57952, 0.37", "42.2398, -212.481, -3.63703, 0.37", "42.5983, -213.227, -3.76688, 0.22", "43.4354, -214.894, -4.00635, 0.22", "43.6518, -215.327, -4.06734, 1.55", "44.0773, -216.175, -4.1857, 2.06", "44.1095, -216.239, -4.19449, 2.06", "44.2806, -216.569, -4.24102, 2.58", "44.6959, -217.318, -4.35252, 2.87", "52.5705, -225.901, -8.0962, 2.87" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "30.3295, -197.384, 6.36258, 0.96", "30.3199, -197.746, 6.38556, 0.96", "30.3131, -198.104, 6.40666, 0.66", "30.2921, -198.518, 6.39224, 0.52", "30.2449, -199.033, 6.35504, 0.37", "30.1944, -199.566, 6.314, 0.37", "30.1502, -200.085, 6.27366, 0.74", "30.1183, -200.491, 6.23989, 0.74", "30.0572, -201.221, 6.09336, 0.15", "29.9984, -201.97, 5.88765, 0.15", "29.8884, -203.198, 5.4916, 0.15", "29.8596, -203.548, 5.35581, 0.88", "29.8235, -204.031, 5.1529, 0.96", "29.7246, -205.674, 4.44375, 0.15", "29.6912, -206.435, 4.10905, 0.15", "29.6725, -206.925, 3.87285, 0.15", "29.6713, -208.363, 3.17902, 0.15", "29.698, -208.746, 2.99385, 1.11", "29.758, -209.168, 2.79778, 1.11", "29.8175, -209.39, 2.71086, 0.15", "29.8335, -209.434, 2.69186, 0.15", "30.428, -210.647, 2.14404, 0.15", "30.9999, -211.642, 1.69665, 0.15", "31.0276, -211.687, 1.67489, 0.15", "31.5362, -212.467, 1.28018, 0.15", "31.8426, -212.919, 1.04805, 1.84", "32.2316, -213.483, 0.747898, 2.28" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "14.9945, -82.7465, 13.4815, 0.59", "16.7702, -91.3052, 21.9974, 0.59", "18.764, -98.4663, 31.7938, 0.59", "20.5109, -106.414, 40.9486, 0.59", "22.6432, -115.037, 49.3052, 0.59", "22.8594, -124.785, 56.4981, 0.59", "23.8023, -134.396, 63.8262, 0.59" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "14.9945, -82.7465, 13.4815, 0.52", "17.891, -91.0149, 9.76471, 0.59", "21.757, -98.7256, 5.64122, 0.59", "24.6095, -106.156, 0.298702, 0.59", "26.254, -114.501, -3.96657, 0.59", "29.4939, -121.809, -9.27061, 0.59", "31.8947, -129.049, -15.1037, 0.59", "33.7559, -136.067, -21.4186, 0.59" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-7.98066, -35.152, -2.20002, 1.4", "-8.2213, -37.3738, -4.77, 1.4", "-8.37546, -38.2364, -5.49678, 0.52", "-8.38891, -38.2929, -5.53639, 0.52", "-8.68374, -39.2912, -6.17322, 0.81", "-8.89606, -39.9106, -6.60571, 1.03", "-9.19504, -40.712, -7.28873, 1.25", "-9.67703, -41.6996, -8.04554, 0.66", "-9.98094, -42.2715, -8.56697, 0.66", "-10.2113, -42.6545, -8.99633, 0.66", "-10.6559, -43.2969, -10.0151, 0.66", "-11.1955, -43.9881, -11.4521, 0.66", "-11.2154, -44.0146, -11.5161, 0.66", "-11.3971, -44.3101, -12.1819, 0.66", "-11.4056, -44.3439, -12.2339, 0.66", "-11.5079, -45.2344, -13.0549, 0.44", "-11.5122, -45.287, -13.0858, 0.44", "-11.6517, -46.1739, -13.4678, 0.44", "-11.8092, -46.9653, -13.8402, 0.59", "-12.0698, -48.1912, -14.4414, 0.88", "-12.2735, -49.001, -14.8375, 0.88", "-12.2882, -49.0541, -14.8639, 0.88", "-12.6843, -50.435, -15.6408, 0.88", "-13.0693, -51.6118, -16.3895, 0.66", "-13.3278, -52.2926, -16.8581, 0.59", "-13.4955, -52.7092, -17.1351, 0.59", "-13.8205, -53.5887, -17.7613, 0.59", "-14.0913, -54.375, -18.316, 0.22", "-14.2437, -54.8641, -18.6504, 0.22", "-14.4192, -55.445, -19.0663, 0.22", "-14.6668, -56.3101, -19.7103, 0.22", "-14.9584, -57.4339, -20.5632, 1.47", "-15.0739, -58.0062, -21.0162, 2.28", "-15.1411, -58.4189, -21.3372, 2.28", "-15.3285, -60.1606, -22.7521, 0.59", "-15.3564, -60.8661, -23.3719, 0.59", "-15.3547, -60.9089, -23.4169, 0.59", "-15.3445, -61.9491, -24.4924, 0.59", "-15.3484, -62.8639, -25.463, 0.44", "-15.3564, -63.6146, -26.2635, 1.55", "-15.3837, -64.7574, -27.4423, 1.55", "-15.4131, -66.5125, -29.3251, 0.29", "-15.5041, -68.2404, -31.1324, 0.22", "-15.508, -68.2836, -31.1766, 0.22", "-15.5522, -68.7294, -31.6306, 1.18", "-15.605, -69.0604, -31.9381, 1.4", "-15.8728, -70.2375, -32.9346, 0.22", "-16.1634, -71.6082, -34.0917, 0.22", "-16.1715, -71.6621, -34.1364, 0.22", "-16.2709, -72.2349, -34.5718, 1.84", "-16.3402, -72.569, -34.8015, 1.84", "-16.3531, -72.6272, -34.8383, 1.84", "-16.7109, -74.3719, -35.8974, 0.22", "-17.2, -76.5782, -37.1683, 0.22", "-17.2505, -76.7804, -37.2775, 0.96", "-17.4063, -77.3507, -37.5623, 0.96", "-17.4217, -77.4044, -37.5871, 0.96", "-17.8467, -78.7434, -38.1439, 0.22", "-18.8723, -81.5345, -38.996, 0.22", "-19.0143, -81.921, -39.1066, 1.55", "-19.1975, -82.404, -39.2185, 1.84", "-19.4038, -82.9346, -39.3205, 1.11", "-19.5925, -83.4066, -39.3913, 0.22", "-20.7208, -86.1846, -39.6363, 0.22", "-20.7454, -86.2492, -39.6404, 0.22", "-21.5855, -88.6254, -39.7566, 0.22", "-21.6076, -88.6909, -39.7588, 0.22", "-21.7463, -89.1288, -39.7662, 1.25", "-21.9007, -89.6772, -39.764, 1.25", "-22.082, -90.4627, -39.7373, 0.15", "-22.4599, -92.8006, -39.7847, 0.15", "-22.4655, -92.8605, -39.7881, 0.15", "-22.4887, -93.1827, -39.8169, 0.96", "-22.5159, -93.7415, -39.883, 0.96", "-22.5169, -94.3059, -39.9852, 0.15", "-22.413, -96.8036, -40.5637, 0.15", "-22.3837, -97.1705, -40.6604, 1.11", "-22.3405, -97.6626, -40.7883, 1.25", "-22.3366, -97.7212, -40.8024, 1.25", "-22.1887, -100.494, -41.5137, 0.15", "-22.1867, -100.553, -41.5286, 0.15", "-22.1779, -100.851, -41.6194, 0.37", "-22.1927, -101.281, -41.7651, 0.37", "-22.3059, -102.996, -42.4839, 0.22", "-22.4148, -104.207, -43.0432, 1.47", "-22.4761, -104.716, -43.2912, 1.47", "-22.6527, -106.11, -44.0028, 0.15", "-23.0392, -109.019, -45.5578, 0.15", "-23.4168, -111.539, -46.9587, 0.15", "-23.4253, -111.591, -46.9889, 0.15", "-23.5912, -112.498, -47.5039, 0.15", "-23.8432, -113.456, -47.9991, 1.62", "-23.8614, -113.509, -48.0229, 1.62", "-24.1127, -114.134, -48.3011, 1.62", "-24.1385, -114.186, -48.3205, 1.62", "-24.5474, -114.964, -48.6037, 0.15", "-26.6045, -118.474, -49.9645, 0.15", "-26.6518, -118.549, -49.9929, 0.52", "-26.6841, -118.598, -50.012, 0.52", "-27.0009, -119.054, -50.1962, 0.52", "-27.106, -119.194, -50.2545, 0.15", "-28.663, -121.047, -51.048, 0.15", "-28.8714, -121.297, -51.2353, 0.81", "-29.173, -121.707, -51.5849, 0.81", "-29.1975, -121.748, -51.6253, 0.81", "-29.2949, -121.928, -51.8259, 0.15", "-29.3158, -121.964, -51.8718, 0.15", "-30.4622, -123.538, -54.016, 0.15", "-30.4622, -123.538, -54.016, 0.44", "-30.9503, -124.063, -54.7424, 0.22", "-31.6366, -124.776, -55.7239, 0.22", "-32.8212, -125.945, -57.3213, 0.22", "-34.5099, -127.465, -59.3606, 0.22", "-34.7613, -127.656, -59.6054, 0.81", "-35.1046, -127.909, -59.9267, 0.81" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-7.98066, -35.152, -2.20002, 2.28", "-7.96672, -35.3884, -2.10921, 2.28", "-7.96303, -35.4352, -2.09238, 2.28", "-7.8973, -36.2477, -1.82235, 1.62", "-7.81265, -37.2801, -1.51711, 1.4", "-7.72261, -38.2275, -1.25915, 1.55", "-7.63755, -39.0773, -1.03627, 1.55", "-7.56627, -39.6663, -0.889777, 1.55", "-7.47935, -40.3175, -0.73551, 1.33", "-7.27439, -41.6777, -0.434285, 1.18", "-7.04829, -43.2267, -0.116243, 1.18", "-7.04204, -43.275, -0.106423, 1.18", "-6.83837, -45.0326, 0.250402, 1.18", "-6.8343, -45.081, 0.260944, 1.18", "-6.76879, -46.2765, 0.532857, 0.88", "-6.72657, -48.9243, 1.13763, 0.88", "-6.74101, -49.4784, 1.25965, 1.18", "-6.78323, -50.2408, 1.42011, 1.4", "-6.88443, -51.3193, 1.63727, 1.4", "-6.98204, -52.2352, 1.81338, 1.47", "-7.07126, -52.9585, 1.94324, 1.77", "-7.1428, -53.6771, 2.05773, 1.77", "-7.19729, -54.4465, 2.17328, 1.92", "-7.19843, -54.4956, 2.1803, 1.92", "-7.16181, -55.2673, 2.28844, 1.55", "-7.05051, -56.2323, 2.45987, 1.47", "-6.75865, -57.8474, 2.80235, 1.11", "-6.74603, -57.9014, 2.8154, 1.11", "-6.58099, -58.5099, 2.97526, 0.96", "-6.37964, -59.1692, 3.14515, 1.18", "-6.09531, -59.9684, 3.35304, 1.47", "-5.66069, -61.0496, 3.60806, 0.96", "-5.36633, -61.7458, 3.74767, 1.11", "-5.34807, -61.7918, 3.75507, 1.11", "-5.0972, -62.4987, 3.83668, 1.4", "-4.84992, -63.4245, 3.93514, 1.84", "-4.72628, -64.1394, 4.01167, 2.14", "-4.6776, -64.6597, 4.07131, 2.14", "-4.67449, -65.1714, 4.14919, 1.99", "-4.72812, -65.8919, 4.26722, 1.18", "-4.93894, -67.1169, 4.45549, 1.03", "-5.2008, -68.2709, 4.60945, 0.88", "-5.43046, -69.2827, 4.73558, 0.74", "-5.67317, -70.4324, 4.86723, 0.59", "-5.89059, -71.7121, 5.0059, 0.59", "-6.04362, -73.1242, 5.15804, 0.59", "-6.12304, -74.5564, 5.34239, 0.59", "-6.09985, -75.8181, 5.56712, 0.59", "-6.05217, -76.3121, 5.67631, 1.18", "-5.79927, -77.7943, 6.03976, 1.18", "-5.48869, -79.1316, 6.42113, 0.88", "-5.23264, -80.067, 6.71985, 1.25", "-4.55678, -82.5233, 7.52911, 1.25", "-4.27985, -83.5991, 7.87539, 0.81", "-4.11333, -84.2922, 8.08464, 1.47", "-3.93983, -85.0903, 8.30468, 1.84", "-3.83125, -85.6495, 8.43897, 2.14", "-3.70847, -86.46, 8.58616, 0.74", "-3.60956, -88.3161, 8.84416, 0.52", "-3.62284, -89.1953, 8.94064, 0.52", "-3.63884, -89.5867, 8.98014, 0.88", "-3.65877, -89.9498, 9.01103, 1.18", "-3.74132, -91.1777, 9.09521, 1.18", "-3.81729, -92.3012, 9.17201, 0.66", "-3.91326, -93.6508, 9.26186, 0.59", "-3.98805, -95.0941, 9.37216, 0.88", "-3.9937, -95.4584, 9.40675, 1.33", "-3.97741, -96.5674, 9.52918, 1.33", "-3.88314, -98.0709, 9.71106, 1.33", "-3.79411, -98.996, 9.82556, 1.62", "-3.68167, -100.02, 9.94644, 1.62", "-3.54271, -100.981, 10.0399, 1.55", "-3.53267, -101.036, 10.0446, 1.55", "-3.37513, -101.768, 10.1015, 1.11", "-3.06632, -103.107, 10.1816, 0.66", "-2.76737, -104.376, 10.2241, 0.66", "-2.58838, -105.216, 10.2316, 1.47", "-2.57933, -105.273, 10.2311, 1.47", "-2.4464, -106.304, 10.2159, 1.47", "-2.44098, -106.353, 10.2137, 1.47", "-2.34807, -107.45, 10.1261, 1.77", "-2.2643, -108.323, 10.0283, 2.21", "-2.18196, -109.209, 9.92953, 2.21", "-2.17799, -109.251, 9.92534, 2.21", "-2.04646, -110.655, 9.83259, 2.36", "-1.9361, -111.908, 9.78804, 2.36", "-1.84279, -113.124, 9.77122, 1.99", "-1.78288, -114.002, 9.77412, 1.03", "-1.68741, -116.128, 9.81459, 0.66", "-1.64015, -118.572, 9.90503, 0.66", "-1.64901, -119.606, 9.96782, 0.81", "-1.66382, -120.295, 10.0189, 0.96", "-1.70253, -120.969, 10.0948, 0.74", "-1.79095, -122.351, 10.2825, 0.74", "-1.84256, -123.064, 10.3981, 1.11", "-1.84615, -123.12, 10.4074, 1.11", "-1.8732, -123.942, 10.5295, 1.4", "-1.88374, -125.589, 10.7479, 1.4", "-1.85846, -127.349, 10.9489, 1.18", "-1.85672, -127.399, 10.9539, 1.18", "-1.75601, -129.094, 11.0371, 0.74", "-1.70134, -129.734, 11.0437, 1.18", "-1.62531, -130.313, 11.0161, 1.62", "-1.46435, -131.174, 10.9021, 1.77", "-1.28103, -132.029, 10.7641, 1.77", "-1.0088, -133.215, 10.5774, 0.59", "-0.548761, -135.03, 10.2911, 0.59", "-0.126133, -136.651, 10.0513, 0.59", "0.200874, -137.889, 9.88264, 0.59", "0.365637, -138.523, 9.80038, 1.62", "0.595794, -139.502, 9.68632, 1.77", "1.02594, -141.6, 9.50156, 1.77", "1.15972, -142.333, 9.44488, 1.03", "1.35249, -143.677, 9.38859, 0.66", "1.50019, -144.99, 9.37775, 0.29", "1.57087, -145.857, 9.38179, 0.29", "1.59833, -146.454, 9.39617, 0.29", "1.59135, -146.864, 9.42421, 1.03", "1.56224, -147.488, 9.47468, 1.25", "1.48269, -148.324, 9.55629, 1.25", "1.39074, -149.031, 9.64762, 0.37", "1.38382, -149.087, 9.6547, 0.37", "1.19737, -150.437, 9.79278, 0.29", "1.19053, -150.493, 9.7954, 0.29", "1.14537, -150.931, 9.80026, 1.33", "1.06316, -151.759, 9.79295, 2.21", "0.970388, -152.898, 9.76215, 2.21", "0.873433, -154.267, 9.72129, 1.84", "0.802606, -155.552, 9.67243, 1.4", "0.750919, -156.636, 9.62681, 1.4" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-88.4462, -13.8943, -1.28558, 0.66", "-89.5203, -15.832, -0.539794, 0.66", "-89.552, -15.8925, -0.515714, 0.66", "-89.8354, -16.7014, -0.182446, 0.22", "-89.9398, -17.0961, 0.0853134, 0.22", "-90.1313, -17.7295, 0.544681, 0.22", "-90.1496, -17.7862, 0.586957, 0.22", "-90.3531, -18.4015, 1.06002, 1.11", "-90.7169, -19.5404, 1.95897, 2.06", "-91.395, -22.1396, 3.88641, 0.22", "-91.5428, -22.7237, 4.30845, 0.22", "-91.5573, -22.7821, 4.34976, 0.22", "-91.6249, -23.099, 4.54536, 0.22", "-91.638, -23.1727, 4.58061, 0.22", "-91.6882, -24.6721, 5.02187, 0.22", "-91.6792, -24.7424, 5.0211, 0.22", "-91.5901, -25.3716, 5.04918, 0.66", "-91.545, -25.7675, 5.11061, 0.66", "-91.5405, -25.8472, 5.12843, 0.66", "-91.5756, -27.1758, 5.48427, 0.22", "-91.7243, -28.2846, 5.82169, 0.22", "-91.7364, -28.3544, 5.82847, 0.22", "-91.8979, -29.276, 5.87767, 0.74", "-92.0029, -29.9247, 5.88908, 1.03", "-92.0465, -30.2523, 5.88574, 1.03", "-92.0714, -30.7183, 5.84131, 0.15", "-92.0251, -32.9245, 5.58347, 0.15", "-91.9207, -34.3052, 5.43834, 1.03", "-91.8433, -34.9629, 5.36879, 1.47", "-91.7101, -35.7331, 5.30301, 0.22", "-91.2815, -37.7196, 5.15673, 0.22", "-91.2551, -37.8162, 5.15097, 0.22", "-90.8382, -39.0689, 5.24646, 0.22", "-90.8165, -39.1365, 5.25406, 0.22", "-90.6383, -39.732, 5.38709, 1.11", "-90.5658, -40.0085, 5.47201, 1.11", "-90.5347, -40.15, 5.52588, 1.11", "-90.0503, -42.4448, 6.08164, 0.22", "-89.8727, -43.3104, 6.24969, 0.22", "-89.8372, -43.4743, 6.28605, 0.81", "-89.7426, -43.9291, 6.3891, 0.81", "-89.5825, -44.8165, 6.61131, 0.15", "-89.3856, -46.2209, 6.94389, 0.15", "-89.2778, -47.1587, 7.13473, 0.88", "-89.1271, -48.8561, 7.55393, 1.55", "-89.1081, -49.46, 7.73297, 1.92", "-89.1477, -51.051, 8.51468, 0.15", "-89.1822, -51.5545, 8.83528, 0.15", "-89.1982, -51.7473, 8.95754, 0.59", "-89.211, -51.8948, 9.04472, 0.59", "-89.3195, -53.2132, 9.82458, 0.59", "-89.4062, -56.3655, 11.5103, 0.22", "-89.4049, -56.4307, 11.5415, 0.22", "-89.255, -58.5795, 12.4767, 0.22", "-89.2484, -58.6555, 12.5081, 0.52", "-89.2406, -58.723, 12.5319, 0.52", "-88.9054, -60.6376, 12.8697, 0.15", "-88.8926, -60.7066, 12.8617, 0.15", "-88.6102, -62.1556, 12.7841, 1.18", "-89.5964, -71.9193, 15.7907, 1.18", "-90.369, -80.8501, 21.0295, 1.18", "-90.2156, -90.1816, 25.4784, 1.18", "-92.2829, -99.8623, 28.1662, 1.18", "-95.9942, -109.311, 29.3201, 1.18", "-97.5628, -119.325, 29.8423, 1.18" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-88.4462, -13.8943, -1.28558, 0.22", "-89.7231, -14.3516, -1.52611, 0.22", "-89.7844, -14.3743, -1.53725, 0.22", "-90.8968, -14.7822, -1.71813, 0.22", "-91.2535, -14.9107, -1.77131, 0.81", "-91.6753, -15.0579, -1.81831, 0.81", "-91.7528, -15.0833, -1.82814, 0.81", "-91.999, -15.158, -1.85402, 0.81", "-92.5978, -15.3329, -1.92295, 0.15", "-92.717, -15.3663, -1.93743, 0.15", "-95.0801, -16.0515, -2.22258, 0.15", "-95.5768, -16.1947, -2.28952, 0.81", "-95.9296, -16.2954, -2.33929, 0.96", "-96.2428, -16.3843, -2.38517, 0.96", "-97.0479, -16.6175, -2.50754, 0.15", "-98.6229, -17.1294, -2.74532, 0.15", "-98.96, -17.2602, -2.77805, 0.74", "-99.3633, -17.431, -2.79716, 1.11", "-99.5403, -17.5102, -2.80135, 1.11", "-100.117, -17.7869, -2.77393, 0.22", "-102.295, -18.782, -2.4937, 0.15", "-103.279, -19.1889, -2.30412, 1.33", "-103.617, -19.3098, -2.2293, 1.62", "-103.679, -19.3283, -2.21328, 1.62", "-104.8, -19.5966, -1.89643, 0.15", "-106.895, -19.962, -1.2508, 0.15", "-107.615, -20.0294, -1.02257, 0.66", "-108.573, -20.0922, -0.76757, 0.66", "-109.474, -20.147, -0.547497, 1.69", "-110.02, -20.1754, -0.427488, 2.14", "-110.259, -20.1856, -0.386803, 2.14", "-111.246, -20.2626, -0.226411, 0.15", "-112.233, -20.3811, -0.0947825, 0.15", "-112.414, -20.4088, -0.0851295, 0.81", "-112.463, -20.4191, -0.0889235, 0.81", "-112.964, -20.541, -0.179121, 1.11", "-113.373, -20.6542, -0.28227, 0.66", "-113.486, -20.6902, -0.318639, 0.66", "-114.061, -20.8966, -0.527091, 0.15", "-115.817, -21.5739, -1.16712, 0.15", "-116.582, -21.8852, -1.44739, 1.62", "-116.958, -22.0478, -1.58428, 2.06", "-117.218, -22.1624, -1.68265, 1.99", "-117.945, -22.4749, -1.94374, 0.15", "-118.548, -22.7124, -2.15161, 0.29", "-118.699, -22.7647, -2.2071, 0.59", "-119.102, -22.892, -2.34288, 0.59", "-119.746, -23.0755, -2.55469, 0.22", "-120.36, -23.2188, -2.78876, 0.22", "-122.024, -23.5766, -3.45441, 0.15", "-122.382, -23.6515, -3.6015, 0.74", "-122.825, -23.7442, -3.78117, 0.74", "-123.125, -23.8084, -3.89966, 0.74", "-124.194, -24.0612, -4.29781, 0.15", "-125.843, -24.4278, -5.00342, 0.15", "-125.902, -24.4394, -5.03103, 0.15", "-126.182, -24.4853, -5.1637, 0.59", "-126.406, -24.5163, -5.26986, 0.88", "-126.786, -24.5626, -5.41656, 1.18", "-127.804, -24.7195, -5.65581, 1.18", "-127.861, -24.7266, -5.66791, 1.18", "-128.463, -24.8174, -5.777, 0.15", "-128.52, -24.8271, -5.7855, 0.15", "-129.777, -25.068, -5.94203, 0.15", "-131.113, -25.4601, -6.09055, 0.15", "-131.175, -25.4827, -6.09604, 0.15", "-131.471, -25.6006, -6.12904, 0.66", "-131.704, -25.704, -6.16164, 0.66", "-131.904, -25.8019, -6.19442, 0.22", "-133.865, -26.9068, -6.59347, 0.22", "-133.913, -26.9361, -6.60429, 0.22", "-134.197, -27.1224, -6.67141, 0.74", "-134.481, -27.316, -6.7536, 1.03", "-134.783, -27.5297, -6.85339, 1.03", "-134.989, -27.681, -6.9291, 1.03", "-135.379, -27.9587, -7.10077, 0.15", "-136.55, -28.7836, -7.62779, 0.15", "-137.031, -29.1013, -7.86665, 0.37", "-137.33, -29.2887, -8.02068, 0.37", "-137.479, -29.3771, -8.09773, 0.37", "-138.478, -29.9632, -8.61692, 0.15", "-139.312, -30.4373, -9.07256, 0.15", "-139.972, -30.8295, -9.44836, 0.15", "-140.425, -31.1212, -9.71679, 1.4", "-140.679, -31.2988, -9.88136, 1.77", "-141.153, -31.6642, -10.213, 2.06", "-141.735, -32.2397, -10.6834, 0.15", "-142.287, -32.8916, -11.2175, 0.15", "-142.488, -33.18, -11.4383, 0.59", "-142.628, -33.4052, -11.6128, 0.74", "-142.758, -33.6311, -11.7857, 0.74", "-143.285, -34.5021, -12.6029, 0.15", "-143.596, -34.9601, -13.0755, 1.25", "-143.871, -35.3194, -13.4919, 1.62", "-143.99, -35.4467, -13.6743, 1.62", "-144.134, -35.5786, -13.8968, 0.15", "-145.121, -36.3632, -15.3901, 0.15", "-145.886, -36.9463, -16.4894, 0.15", "-145.912, -36.9662, -16.5259, 0.15", "-146.64, -37.5215, -17.5516, 1.4", "-146.937, -37.7593, -17.9667, 1.69", "-147.306, -38.0999, -18.4311, 0.22", "-148.277, -39.1438, -19.3375, 0.22", "-149.042, -40.032, -19.8753, 0.15", "-149.285, -40.3293, -20.021, 1.33", "-149.537, -40.6647, -20.1234, 1.55", "-150.774, -42.3351, -20.4702, 0.22", "-151.521, -43.3913, -20.4666, 0.22", "-151.853, -43.8962, -20.2586, 1.84" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "31.9704, 32.6059, 12.0015, 0.22", "31.6874, 35.1571, 2.41478, 0.22", "32.7016, 37.2287, -7.25245, 0.22", "34.13, 39.3126, -16.8639, 0.22", "33.9399, 41.8732, -26.4501, 0.22", "35.9474, 45.1658, -35.5629, 0.22", "38.428, 48.1662, -44.6727, 0.22" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "31.9704, 32.6059, 12.0015, 0.29", "30.2957, 39.7557, 18.2388, 0.22", "28.7168, 46.7247, 24.7214, 0.22" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "13.5605, 94.584, 29.8051, 0.37", "13.7449, 94.1315, 29.9006, 0.37", "13.9155, 93.7128, 29.9889, 0.37", "13.937, 93.6601, 30.0001, 0.37", "16.6752, 86.4826, 33.2632, 0.37" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "13.5605, 94.584, 29.8051, 0.29", "13.1513, 94.8747, 29.8163, 0.29", "12.7315, 95.1729, 29.8278, 0.22", "12.552, 95.3005, 29.8327, 0.22", "12.2079, 95.545, 29.8421, 0.22", "12.0079, 95.6871, 29.8476, 0.22", "11.5059, 96.0438, 29.8613, 0.22", "5.39879, 101.273, 31.1644, 0.22" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-108.463, 15.4447, -12.2292, 0.29", "-108.348, 13.7236, -11.4543, 0.29", "-108.343, 13.6271, -11.4051, 0.29", "-108.294, 10.8211, -9.90423, 0.29", "-108.327, 9.04597, -8.93134, 0.29", "-108.33, 8.97458, -8.89181, 0.29", "-108.675, 5.36284, -6.69344, 0.22", "-108.702, 5.23756, -6.60899, 0.22", "-109.046, 4.01191, -5.74168, 0.22", "-109.197, 3.58869, -5.41521, 1.55", "-109.382, 3.13143, -5.05572, 1.55", "-110.419, 0.694572, -3.19736, 0.22", "-111.941, -2.4532, -0.967644, 0.15", "-111.996, -2.56996, -0.883779, 0.59" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-108.463, 15.4447, -12.2292, 0.22", "-110.029, 16.9785, -12.6527, 0.22", "-112.16, 19.0691, -13.0585, 0.22", "-113.248, 20.1395, -13.214, 0.22", "-113.308, 20.198, -13.2205, 0.22", "-113.384, 20.2709, -13.2269, 0.59", "-113.796, 20.6466, -13.2515, 0.59", "-115.098, 21.6218, -13.2898, 0.15", "-115.154, 21.6521, -13.279, 0.15", "-115.67, 21.8798, -13.1496, 1.11", "-115.73, 21.8991, -13.1352, 1.11", "-116.733, 22.0853, -12.9062, 2.06", "-117.564, 22.1597, -12.7218, 2.36", "-119.082, 22.2228, -12.3179, 0.15", "-119.225, 22.2288, -12.2728, 0.15", "-120.652, 22.2738, -11.7947, 0.15", "-122.031, 22.3467, -11.3498, 0.15", "-122.114, 22.3543, -11.3276, 0.15", "-123.46, 22.5495, -10.9892, 0.74", "-124.374, 22.7073, -10.7941, 0.74", "-125.205, 22.8745, -10.6286, 0.15", "-127.294, 23.3733, -10.2554, 0.15", "-129.945, 24.1403, -9.75496, 0.15", "-131.211, 24.5327, -9.51347, 1.4", "-131.807, 24.7273, -9.41203, 1.77", "-132.393, 24.9409, -9.29928, 1.77", "-133.439, 25.3593, -9.07545, 0.22", "-135.052, 26.0429, -8.73997, 0.22", "-135.129, 26.0769, -8.7246, 0.22", "-136.887, 26.838, -8.4053, 0.22", "-137.079, 26.9221, -8.3692, 0.88", "-137.734, 27.2091, -8.25021, 1.03", "-139.595, 27.9598, -7.98493, 0.22", "-139.656, 27.9811, -7.97933, 0.22", "-140.373, 28.2439, -7.90803, 0.22", "-140.68, 28.3623, -7.87279, 0.44", "-140.995, 28.4858, -7.84023, 0.44", "-142.494, 29.0637, -7.86884, 0.15", "-142.593, 29.0997, -7.88426, 0.44", "-143.121, 29.253, -8.04527, 0.44", "-143.414, 29.3215, -8.1608, 0.44", "-143.482, 29.3359, -8.18998, 0.15", "-145.134, 29.6754, -8.93203, 0.15", "-145.191, 29.6869, -8.95916, 0.15", "-146.627, 30.026, -9.59256, 0.15", "-147.26, 30.1723, -9.88163, 1.03", "-147.768, 30.2947, -10.1147, 1.33", "-148.594, 30.5036, -10.4732, 0.15", "-148.661, 30.5205, -10.504, 0.15", "-150.069, 30.8878, -11.219, 0.15", "-150.89, 31.1322, -11.6744, 0.66", "-151.232, 31.2354, -11.8868, 0.81", "-151.811, 31.3992, -12.3038, 0.15", "-152.853, 31.7177, -13.1772, 0.15", "-152.939, 31.7463, -13.2566, 0.15", "-153.635, 32.022, -14.1524, 0.15", "-153.687, 32.0547, -14.2364, 0.15", "-154.08, 32.4043, -15.0401, 0.66", "-154.271, 32.634, -15.4999, 0.66", "-154.296, 32.6704, -15.558, 0.66", "-154.917, 33.5407, -16.7364, 0.15", "-155.323, 34.0692, -17.3339, 1.47", "-155.64, 34.4496, -17.7007, 1.92", "-155.932, 34.7785, -17.9651, 1.92", "-156.469, 35.3273, -18.3635, 0.15", "-157.467, 36.1944, -18.8827, 0.15", "-158.262, 36.8202, -19.1905, 0.15", "-158.585, 37.0467, -19.2994, 0.88", "-159.033, 37.3423, -19.4392, 1.11", "-159.461, 37.6136, -19.5657, 0.15", "-162.274, 39.276, -20.3211, 0.15", "-162.348, 39.3133, -20.34, 0.15", "-163.351, 39.7586, -20.5851, 0.15", "-163.813, 39.9435, -20.6932, 0.88", "-164.275, 40.1104, -20.7999, 1.18", "-164.861, 40.3186, -20.9354, 0.15", "-166.893, 41.0384, -21.4167, 0.15", "-167.417, 41.2403, -21.5443, 0.81", "-167.922, 41.4626, -21.6757, 1.03", "-168.391, 41.6855, -21.7999, 0.15", "-171.317, 43.1983, -22.5961, 0.15", "-171.785, 43.4676, -22.7279, 0.74", "-172.333, 43.8252, -22.877, 0.96", "-173.798, 44.8138, -23.2914, 0.15", "-173.995, 44.9519, -23.3495, 0.44", "-174.111, 45.0368, -23.3851, 0.44", "-174.243, 45.1495, -23.4318, 0.44", "-174.503, 45.3736, -23.5221, 0.44" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "32.2316, -213.483, 0.747898, 0.15", "33.6463, -214.824, 0.342906, 0.15", "35.7489, -216.837, -0.230677, 0.15", "35.8235, -216.909, -0.250455, 0.15", "38.7919, -219.891, -1.08204, 0.15", "39.4809, -220.633, -1.2819, 0.15", "39.5391, -220.702, -1.29917, 0.15", "39.9793, -221.301, -1.43339, 1.25", "40.1877, -221.631, -1.54378, 1.25", "40.6791, -222.511, -2.00614, 0.22", "41.1748, -223.591, -2.7282, 0.22", "41.8514, -225.104, -3.81382, 0.22", "42.3369, -226.203, -4.6435, 0.22", "43.0117, -227.795, -5.95291, 1.03", "43.5409, -229.015, -7.07215, 1.18" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "32.2316, -213.483, 0.747898, 0.15", "32.2843, -214.253, 0.778175, 0.15", "32.3759, -215.587, 0.830663, 0.15", "32.3811, -215.664, 0.833679, 0.15", "32.4161, -216.174, 0.853718, 1.03" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "0.750919, -156.636, 9.62681, 0.59", "1.15516, -157.956, 9.70241, 0.59", "1.67653, -159.659, 9.83102, 0.59", "1.69973, -159.733, 9.83909, 0.59", "2.19231, -161.261, 10.0554, 0.44", "2.72326, -162.884, 10.3119, 0.44", "2.74757, -162.957, 10.3242, 0.44", "2.92654, -163.49, 10.4459, 1.03", "3.40201, -164.791, 10.7307, 1.03", "3.79018, -165.889, 10.95, 0.66", "3.95335, -166.378, 11.04, 0.37", "3.9733, -166.443, 11.0498, 0.37", "4.37616, -167.886, 11.2436, 0.37", "4.5935, -168.73, 11.3125, 1.03", "4.79609, -169.589, 11.3415, 1.62", "4.97506, -170.44, 11.3465, 1.62", "5.15699, -171.564, 11.333, 1.25", "5.28655, -172.57, 11.3091, 1.03", "5.45654, -173.858, 11.2092, 0.88", "5.54097, -174.431, 11.1279, 0.66", "5.65678, -175.2, 10.9632, 0.66", "5.8923, -176.568, 10.5456, 0.66", "5.90392, -176.632, 10.5222, 0.66", "6.29183, -178.798, 9.68248, 0.59", "6.50438, -179.939, 9.22023, 1.4", "6.67141, -180.888, 8.84246, 1.84", "6.86077, -181.95, 8.42105, 2.14", "6.98849, -182.677, 8.14398, 2.14", "7.13708, -183.84, 7.76371, 0.66", "7.18735, -184.495, 7.60043, 0.22", "7.31086, -186.204, 7.27627, 0.22", "7.31517, -186.262, 7.26681, 0.22", "7.34483, -186.788, 7.21166, 1.03", "7.40251, -187.706, 7.12615, 1.03", "7.49209, -189.151, 7.02337, 1.11", "7.53367, -189.728, 7.01122, 0.59", "7.56639, -190.145, 7.01206, 0.15", "7.69701, -191.852, 6.99606, 0.15", "7.70251, -191.92, 6.9958, 0.15", "7.7523, -192.493, 6.99948, 0.15", "7.8269, -193.256, 6.95619, 0.15", "7.9622, -194.436, 6.83145, 0.15", "8.07727, -195.395, 6.7109, 1.4", "8.23668, -196.679, 6.52452, 2.28", "8.39225, -197.739, 6.37359, 2.65", "8.78034, -199.718, 6.05667, 0.22", "9.01464, -200.754, 5.87694, 0.22", "9.39903, -202.255, 5.62066, 0.22", "9.4183, -202.33, 5.60896, 0.22", "9.90475, -204.111, 5.31792, 0.22", "10.248, -205.292, 5.16679, 0.22", "10.3798, -205.69, 5.1317, 0.96", "10.6319, -206.283, 5.02759, 1.11", "10.923, -206.833, 4.87486, 1.11", "11.31, -207.559, 4.66083, 0.15", "11.7991, -208.469, 4.37568, 0.15", "12.2985, -209.408, 4.1226, 0.74", "13.0936, -210.805, 3.74939, 0.74", "13.4476, -211.412, 3.59815, 0.15", "14.4233, -213.073, 3.23079, 0.15", "14.6795, -213.585, 3.15211, 1.47", "15.1162, -214.676, 3.05323, 2.28", "15.4071, -215.697, 3.02728, 2.43", "15.5879, -216.581, 3.0395, 2.43", "15.7888, -217.9, 3.06756, 0.15", "16.0769, -220.373, 3.03079, 0.15", "16.1709, -221.645, 2.98363, 0.15", "16.142, -223.169, 2.87161, 0.15", "16.1093, -223.532, 2.83879, 0.88", "15.9977, -224.325, 2.73169, 1.25", "15.7829, -225.417, 2.54221, 0.44", "15.6902, -225.826, 2.44854, 0.15", "14.9179, -228.989, 1.64422, 0.15", "14.9006, -229.054, 1.62864, 0.15", "14.7385, -229.553, 1.51759, 0.81", "14.4819, -230.224, 1.39269, 0.81", "14.4544, -230.287, 1.38482, 0.81", "14.1173, -230.979, 1.30429, 0.81", "13.7173, -231.7, 1.23248, 0.15", "13.1031, -232.762, 1.16956, 0.15", "12.7988, -233.277, 1.15225, 1.18", "12.5001, -233.785, 1.13493, 1.62", "12.2487, -234.241, 1.1067, 1.62", "11.8113, -235.18, 1.0334, 0.22", "11.0573, -237.046, 0.849725, 0.22", "10.8603, -237.679, 0.747358, 0.81", "10.6833, -238.445, 0.591718, 1.03", "10.5218, -239.463, 0.344452, 0.15", "10.3102, -242.185, -0.392097, 0.15", "10.3175, -242.655, -0.534172, 0.88", "10.6134, -244.61, -1.24589, 0.22", "10.9169, -245.779, -1.63968, 0.22", "11.0564, -246.169, -1.75953, 0.66", "11.245, -246.583, -1.84414, 0.96", "11.2794, -246.642, -1.85137, 0.96", "11.8693, -247.756, -1.88173, 0.15", "12.8049, -249.744, -1.7475, 0.15", "12.8997, -249.95, -1.73967, 0.52", "13.5738, -251.579, -1.67157, 0.15", "13.9461, -252.543, -1.63202, 1.18", "14.3152, -253.567, -1.58323, 1.84", "14.5536, -254.298, -1.54038, 1.84", "14.9367, -255.559, -1.51439, 0.15", "15.6001, -257.87, -1.48288, 0.15", "15.6803, -258.163, -1.48641, 0.59", "15.7729, -258.512, -1.48888, 0.74", "15.846, -258.793, -1.48793, 0.15", "16.4675, -261.445, -1.47896, 0.15", "16.6025, -262.275, -1.42498, 1.03", "16.7193, -263.225, -1.34427, 1.77", "16.7903, -264.007, -1.25831, 1.77", "16.844, -264.93, -1.13192, 0.81", "16.8486, -265.63, -0.996563, 0.15", "16.7072, -268.412, -0.28082, 0.15", "16.7013, -268.477, -0.262275, 0.15", "16.6396, -268.946, -0.109393, 1.18", "16.5032, -269.881, 0.208729, 1.62", "16.3776, -270.753, 0.51621, 0.88" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "0.750919, -156.636, 9.62681, 0.52", "0.328494, -157.984, 8.50516, 0.52", "0.0906851, -158.743, 7.87371, 0.52", "-0.0901468, -159.32, 7.39356, 0.52", "-0.16443, -159.557, 7.19632, 0.81", "-0.182632, -159.615, 7.14799, 0.81", "-0.332794, -160.094, 6.74927, 0.81" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "38.428, 48.1662, -44.6727, 0.37", "39.126, 52.0701, -56.1744, 0.37", "38.4987, 58.0026, -66.674, 0.37", "36.8882, 63.2501, -77.4729, 0.37", "37.0736, 68.3164, -88.4794, 0.37", "35.2588, 73.0439, -99.5109, 0.37" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "38.428, 48.1662, -44.6727, 0.29", "40.5525, 49.6588, -53.9763, 0.37", "43.9369, 53.0165, -62.3043, 0.37", "48.6746, 56.616, -69.8216, 0.37", "53.3944, 60.4803, -77.2017, 0.37" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "16.6752, 86.4826, 33.2632, 0.22", "20.0212, 79.3498, 35.9603, 0.22", "25.2086, 73.4136, 38.8966, 0.22", "30.1333, 67.806, 42.8519, 0.22", "34.7027, 61.8628, 46.6931, 0.22", "39.522, 57.0004, 51.7383, 0.22", "43.8006, 52.1003, 57.2223, 0.22", "47.8345, 48.1347, 63.6551, 0.22" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "16.6752, 86.4826, 33.2632, 0.29", "20.8453, 76.0935, 37.5993, 0.22", "24.7805, 67.1026, 44.7628, 0.22", "30.0948, 57.9591, 50.6654, 0.22", "35.0973, 49.2932, 57.5758, 0.22", "40.1833, 39.6903, 62.8311, 0.22" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "5.39879, 101.273, 31.1644, 0.37", "-1.30508, 106.07, 35.5258, 0.37" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "5.39879, 101.273, 31.1644, 0.29", "-0.535458, 105.696, 34.5456, 0.37" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "16.3776, -270.753, 0.51621, 0.29", "15.8834, -271.661, 0.693307, 0.29", "15.1267, -272.901, 0.937108, 0.29", "13.934, -274.689, 1.26586, 0.29", "13.6101, -275.151, 1.34728, 0.74", "13.1709, -275.711, 1.4731, 1.11", "12.5031, -276.374, 1.58278, 1.11", "11.9989, -276.76, 1.64631, 0.88", "11.6125, -276.99, 1.65888, 0.52", "11.5548, -277.019, 1.6556, 0.52", "10.3544, -277.604, 1.53596, 0.22", "7.50006, -278.961, 1.17079, 0.15", "7.23448, -279.102, 1.12028, 0.44", "6.84046, -279.329, 1.03633, 0.66", "6.78701, -279.363, 1.0232, 0.66", "6.44583, -279.607, 0.922696, 0.66", "6.30925, -279.725, 0.869502, 0.15", "4.85392, -281.264, 0.338621, 0.15", "4.81134, -281.309, 0.323358, 0.15", "4.59242, -281.546, 0.24546, 0.74", "4.19521, -281.978, 0.104306, 1.11", "3.73343, -282.491, -0.0585716, 0.88", "3.68683, -282.545, -0.0748274, 0.88" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "16.3776, -270.753, 0.51621, 0.15", "16.4083, -271.861, 0.931246, 0.15", "16.3452, -274.311, 1.7413, 0.15", "16.3322, -274.854, 1.8875, 0.44", "16.3221, -275.449, 2.0326, 0.44", "16.3157, -276.602, 2.28133, 0.15", "16.3217, -278.472, 2.65426, 0.15", "16.3526, -279.628, 2.81841, 0.15", "16.3639, -280.624, 2.94654, 0.74", "16.3809, -281.342, 3.03573, 1.33", "16.4117, -282.119, 3.10853, 0.74", "16.4366, -282.459, 3.1158, 0.15", "16.6388, -284.585, 3.10967, 0.15", "16.6597, -284.78, 3.09843, 0.44", "16.6533, -286.127, 2.91249, 0.15", "16.6485, -286.2, 2.90109, 0.15", "16.5523, -287.1, 2.75922, 0.66", "16.5132, -287.372, 2.71725, 0.88", "16.3464, -288.273, 2.57639, 0.15", "15.5969, -292.418, 2.13584, 0.15", "15.5329, -293.151, 2.133, 1.03", "15.52, -293.559, 2.15962, 1.03", "15.5339, -293.952, 2.22561, 0.22", "15.5413, -294.006, 2.23925, 0.22", "16.0339, -295.807, 2.89572, 0.22", "17.5952, -298.422, 4.2748, 0.22", "17.6325, -298.469, 4.3023, 0.22", "18.5039, -299.336, 4.8848, 0.22", "19.1925, -299.802, 5.33964, 0.96", "19.5034, -299.92, 5.54673, 0.15", "21.3431, -300.01, 6.7787, 0.15", "21.6209, -299.956, 6.96495, 0.66", "21.8889, -299.891, 7.14092, 0.15", "23.5683, -299.367, 8.2251, 0.15", "23.8522, -299.264, 8.4213, 0.44", "24.0746, -299.176, 8.58846, 0.15", "24.8963, -298.824, 9.32527, 0.15", "25.2581, -298.676, 9.65439, 0.59" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "35.2588, 73.0439, -99.5109, 0.22", "34.3903, 77.957, -107.657, 0.22", "35.719, 84.0438, -114.766, 0.22", "36.8798, 88.9694, -122.837, 0.22", "38.4011, 94.3066, -130.544, 0.22", "39.0683, 99.344, -138.602, 0.22", "38.5113, 104.97, -146.251, 0.22" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "35.2588, 73.0439, -99.5109, 0.29", "35.029, 75.8046, -106.416, 0.22", "34.2846, 77.8064, -113.574, 0.22", "32.3512, 80.2862, -120.329, 0.22", "30.0351, 84.3336, -126.033, 0.22", "28.001, 87.9778, -132.135, 0.22", "26.65, 93.1449, -137.099, 0.22", "26.3257, 98.5001, -142.018, 0.22" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "53.3944, 60.4803, -77.2017, 0.22", "57.6458, 62.2832, -83.2398, 0.22", "60.9263, 63.3672, -90.0155, 0.22", "63.3234, 64.5695, -97.1126, 0.22", "65.097, 65.6561, -104.403, 0.22", "65.4936, 66.222, -111.952, 0.22", "66.3661, 67.1327, -119.42, 0.22", "67.2521, 68.792, -126.724, 0.22" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "53.3944, 60.4803, -77.2017, 0.29", "57.3031, 64.1754, -86.4142, 0.22", "61.8324, 66.8828, -95.7306, 0.22", "64.4058, 69.8257, -105.687, 0.22", "66.6787, 73.9262, -115.247, 0.22", "70.0113, 76.4974, -125.095, 0.22", "74.7243, 78.554, -134.51, 0.22" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_66", "dend_53", "dend_39", "dend_32", "dend_26", "dend_19", "dend_16", "dend_5", "dend_0", "dend_68", "dend_67", "dend_55", "dend_54", "dend_43", "dend_40", "dend_38", "dend_33", "dend_31", "dend_30", "dend_27", "dend_21", "dend_20", "dend_18", "dend_17", "dend_13", "dend_6", "dend_4", "dend_1", "dend_65", "dend_56", "dend_52", "dend_51", "dend_44", "dend_42", "dend_41", "dend_37", "dend_34", "dend_29", "dend_28", "dend_25", "dend_22", "dend_15", "dend_14", "dend_12", "dend_7", "dend_3", "dend_2", "dend_58", "dend_57", "dend_48", "dend_45", "dend_36", "dend_35", "dend_24", "dend_23", "dend_9", "dend_8", "dend_62", "dend_59", "dend_50", "dend_49", "dend_47", "dend_46", "dend_11", "dend_10", "dend_64", "dend_63", "dend_61", "dend_60" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_66", "dend_53", "dend_39", "dend_32", "dend_26", "dend_19", "dend_16", "dend_5", "dend_0", "dend_68", "dend_67", "dend_55", "dend_54", "dend_43", "dend_40", "dend_38", "dend_33", "dend_31", "dend_30", "dend_27", "dend_21", "dend_20", "dend_18", "dend_17", "dend_13", "dend_6", "dend_4", "dend_1", "dend_65", "dend_56", "dend_52", "dend_51", "dend_44", "dend_42", "dend_41", "dend_37", "dend_34", "dend_29", "dend_28", "dend_25", "dend_22", "dend_15", "dend_14", "dend_12", "dend_7", "dend_3", "dend_2", "dend_58", "dend_57", "dend_48", "dend_45", "dend_36", "dend_35", "dend_24", "dend_23", "dend_9", "dend_8", "dend_62", "dend_59", "dend_50", "dend_49", "dend_47", "dend_46", "dend_11", "dend_10", "dend_64", "dend_63", "dend_61", "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_67", "dend_67", "dend_67", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_44", "dend_44", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_59", "dend_59", "dend_59", "dend_59", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_47", "dend_46", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L6_NBC_c0fd8f67e2_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_66, id: dend_66, parent: soma_0
create dend_66
public dend_66
// Section: dend_53, id: dend_53, parent: soma_0
create dend_53
public dend_53
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: soma_0
create dend_16
public dend_16
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_32
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_26
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_13, id: dend_13, parent: dend_5
create dend_13
public dend_13
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_65, id: dend_65, parent: dend_55
create dend_65
public dend_65
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_52, id: dend_52, parent: dend_43
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_43
create dend_51
public dend_51
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_6
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_62, id: dend_62, parent: dend_58
create dend_62
public dend_62
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_66, dend_53, dend_39, dend_32, dend_26, dend_19, dend_16, dend_5, dend_0, dend_68, dend_67, dend_55, dend_54, dend_43, dend_40, dend_38, dend_33, dend_31, dend_30, dend_27, dend_21, dend_20, dend_18, dend_17, dend_13, dend_6, dend_4, dend_1, dend_65, dend_56, dend_52, dend_51, dend_44, dend_42, dend_41, dend_37, dend_34, dend_29, dend_28, dend_25, dend_22, dend_15, dend_14, dend_12, dend_7, dend_3, dend_2, dend_58, dend_57, dend_48, dend_45, dend_36, dend_35, dend_24, dend_23, dend_9, dend_8, dend_62, dend_59, dend_50, dend_49, dend_47, dend_46, dend_11, dend_10, dend_64, dend_63, dend_61, dend_60]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_66, dend_53, dend_39, dend_32, dend_26, dend_19, dend_16, dend_5, dend_0, dend_68, dend_67, dend_55, dend_54, dend_43, dend_40, dend_38, dend_33, dend_31, dend_30, dend_27, dend_21, dend_20, dend_18, dend_17, dend_13, dend_6, dend_4, dend_1, dend_65, dend_56, dend_52, dend_51, dend_44, dend_42, dend_41, dend_37, dend_34, dend_29, dend_28, dend_25, dend_22, dend_15, dend_14, dend_12, dend_7, dend_3, dend_2, dend_58, dend_57, dend_48, dend_45, dend_36, dend_35, dend_24, dend_23, dend_9, dend_8, dend_62, dend_59, dend_50, dend_49, dend_47, dend_46, dend_11, dend_10, dend_64, dend_63, dend_61, dend_60]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_68
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_46, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_66(0), soma_0(0.44999996701105516)
    connect dend_53(0), soma_0(0.44999996701105516)
    connect dend_39(0), soma_0(0.44999996701105516)
    connect dend_32(0), soma_0(0.44999996701105516)
    connect dend_26(0), soma_0(0.44999996701105516)
    connect dend_19(0), soma_0(0.44999996701105516)
    connect dend_16(0), soma_0(0.44999996701105516)
    connect dend_5(0), soma_0(0.44999996701105516)
    connect dend_0(0), soma_0(0.44999996701105516)
    connect axon_0(0), soma_0(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_26(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_13(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_65(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_52(0), dend_43(1.0)
    connect dend_51(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_62(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -8.47614, -8.41033, 1.41903, 3.98524 ) }
    soma_0 { pt3dadd( -7.69742, -7.5116, 1.27705, 6.91431 ) }
    soma_0 { pt3dadd( -6.9187, -6.61288, 1.13506, 10.5717 ) }
    soma_0 { pt3dadd( -6.13998, -5.71415, 0.993075, 11.4108 ) }
    soma_0 { pt3dadd( -5.36126, -4.81542, 0.851088, 12.9455 ) }
    soma_0 { pt3dadd( -4.58254, -3.9167, 0.709102, 14.3822 ) }
    soma_0 { pt3dadd( -3.80382, -3.01797, 0.567115, 17.7461 ) }
    soma_0 { pt3dadd( -3.0251, -2.11925, 0.425128, 19.1269 ) }
    soma_0 { pt3dadd( -2.24638, -1.22052, 0.283142, 19.8374 ) }
    soma_0 { pt3dadd( -1.46766, -0.321792, 0.141155, 20.315 ) }
    soma_0 { pt3dadd( -0.688937, 0.576934, -8.31366E-4, 20.3008 ) }
    soma_0 { pt3dadd( 0.0897826, 1.47566, -0.142818, 20.2673 ) }
    soma_0 { pt3dadd( 0.868503, 2.37439, -0.284805, 20.201 ) }
    soma_0 { pt3dadd( 1.64722, 3.27311, -0.426791, 19.9171 ) }
    soma_0 { pt3dadd( 2.42594, 4.17184, -0.568778, 19.4209 ) }
    soma_0 { pt3dadd( 3.20466, 5.07057, -0.710764, 18.1336 ) }
    soma_0 { pt3dadd( 3.98338, 5.96929, -0.852751, 16.68 ) }
    soma_0 { pt3dadd( 4.7621, 6.86802, -0.994738, 14.9484 ) }
    soma_0 { pt3dadd( 5.54082, 7.76675, -1.13672, 12.9099 ) }
    soma_0 { pt3dadd( 6.31954, 8.66547, -1.27871, 7.73682 ) }
    soma_0 { pt3dadd( 7.09826, 9.5642, -1.4207, 4.34608 ) }
    // Section: dend_66, id: dend_66, parent: soma_0 (entry count 21/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -11.4502, -2.36613, 0.989666, 1.47 ) }
    dend_66 { pt3dadd( -11.4502, -2.36613, 0.989666, 1.47 ) }
    dend_66 { pt3dadd( -12.2263, -2.73133, 1.23292, 1.47 ) }
    dend_66 { pt3dadd( -13.5076, -3.35749, 1.69045, 1.11 ) }
    dend_66 { pt3dadd( -14.7687, -4.00199, 2.33301, 1.11 ) }
    dend_66 { pt3dadd( -16.2341, -4.77146, 3.20932, 1.11 ) }
    dend_66 { pt3dadd( -17.4579, -5.4562, 4.12786, 1.11 ) }
    dend_66 { pt3dadd( -18.5395, -6.10574, 5.12547, 1.4 ) }
    dend_66 { pt3dadd( -18.8166, -6.28496, 5.46556, 1.4 ) }
    dend_66 { pt3dadd( -20.1105, -7.11844, 7.41811, 1.4 ) }
    dend_66 { pt3dadd( -20.1633, -7.15236, 7.50931, 1.4 ) }
    dend_66 { pt3dadd( -21.2573, -7.81863, 9.63718, 1.4 ) }
    dend_66 { pt3dadd( -21.2968, -7.83815, 9.70901, 1.4 ) }
    dend_66 { pt3dadd( -22.6457, -8.45632, 11.7476, 1.4 ) }
    dend_66 { pt3dadd( -23.6828, -8.95467, 13.0578, 1.4 ) }
    dend_66 { pt3dadd( -23.7304, -8.98016, 13.1053, 1.4 ) }
    dend_66 { pt3dadd( -25.1816, -9.82648, 14.3614, 0.88 ) }
    dend_66 { pt3dadd( -26.0818, -10.3848, 15.0118, 0.88 ) }
    dend_66 { pt3dadd( -27.1535, -11.1042, 15.7606, 0.74 ) }
    dend_66 { pt3dadd( -28.4739, -12.0416, 16.5305, 0.74 ) }
    dend_66 { pt3dadd( -29.6093, -12.8383, 17.0924, 0.74 ) }
    dend_66 { pt3dadd( -29.7026, -12.9004, 17.1324, 0.74 ) }
    dend_66 { pt3dadd( -30.7455, -13.5277, 17.5032, 0.74 ) }
    dend_66 { pt3dadd( -32.313, -14.42, 18.0522, 1.11 ) }
    dend_66 { pt3dadd( -34.2226, -15.4304, 18.6573, 1.11 ) }
    dend_66 { pt3dadd( -36.122, -16.4289, 19.1326, 1.11 ) }
    dend_66 { pt3dadd( -37.1736, -17.0242, 19.3422, 1.11 ) }
    dend_66 { pt3dadd( -38.2266, -17.7087, 19.5432, 1.47 ) }
    dend_66 { pt3dadd( -38.9252, -18.2357, 19.6591, 1.47 ) }
    dend_66 { pt3dadd( -40.249, -19.4039, 19.8665, 0.81 ) }
    dend_66 { pt3dadd( -41.4093, -20.6264, 20.1786, 0.81 ) }
    dend_66 { pt3dadd( -42.5713, -21.9393, 20.5699, 0.81 ) }
    dend_66 { pt3dadd( -43.7341, -23.2497, 20.9775, 1.11 ) }
    dend_66 { pt3dadd( -44.3143, -23.8938, 21.185, 1.47 ) }
    dend_66 { pt3dadd( -45.0714, -24.6724, 21.4708, 1.47 ) }
    dend_66 { pt3dadd( -46.6744, -26.2405, 22.0897, 0.74 ) }
    dend_66 { pt3dadd( -48.129, -27.5981, 22.6142, 0.74 ) }
    dend_66 { pt3dadd( -49.4275, -28.7694, 22.9858, 0.74 ) }
    dend_66 { pt3dadd( -49.4875, -28.824, 23.0011, 0.74 ) }
    dend_66 { pt3dadd( -50.4316, -29.7209, 23.2279, 1.03 ) }
    dend_66 { pt3dadd( -51.6306, -30.9044, 23.4968, 1.03 ) }
    dend_66 { pt3dadd( -52.7674, -32.099, 23.7061, 1.18 ) }
    dend_66 { pt3dadd( -53.8895, -33.3588, 23.9163, 1.18 ) }
    dend_66 { pt3dadd( -55.3796, -35.0966, 24.2061, 0.88 ) }
    dend_66 { pt3dadd( -56.9276, -36.9273, 24.4903, 0.88 ) }
    dend_66 { pt3dadd( -56.9799, -36.9899, 24.4986, 0.88 ) }
    dend_66 { pt3dadd( -58.6185, -38.9421, 24.7451, 0.88 ) }
    dend_66 { pt3dadd( -58.6717, -39.0041, 24.7523, 0.88 ) }
    dend_66 { pt3dadd( -59.7587, -40.2338, 24.8747, 1.62 ) }
    dend_66 { pt3dadd( -60.4988, -41.0495, 24.9368, 1.99 ) }
    dend_66 { pt3dadd( -61.725, -42.4023, 25.0326, 1.99 ) }
    dend_66 { pt3dadd( -63.7663, -44.7263, 25.2954, 2.21 ) }
    dend_66 { pt3dadd( -65.5192, -46.7348, 25.6514, 2.21 ) }
    dend_66 { pt3dadd( -66.5041, -47.8516, 25.9582, 2.5 ) }
    dend_66 { pt3dadd( -67.1516, -48.5714, 26.2135, 2.5 ) }
    dend_66 { pt3dadd( -68.5993, -50.1574, 26.8991, 1.84 ) }
    dend_66 { pt3dadd( -70.3694, -52.0668, 27.8898, 1.47 ) }
    dend_66 { pt3dadd( -71.7062, -53.5346, 28.7688, 1.25 ) }
    dend_66 { pt3dadd( -73.2279, -55.2357, 29.8778, 0.29 ) }
    dend_66 { pt3dadd( -73.9336, -56.092, 30.4554, 0.29 ) }
    dend_66 { pt3dadd( -74.7887, -57.189, 31.2074, 0.29 ) }
    dend_66 { pt3dadd( -74.8577, -57.2798, 31.2764, 0.29 ) }
    dend_66 { pt3dadd( -75.4947, -58.1712, 31.9436, 0.29 ) }
    dend_66 { pt3dadd( -75.5729, -58.2979, 32.0379, 0.29 ) }
    dend_66 { pt3dadd( -76.467, -59.8963, 33.2491, 0.29 ) }
    dend_66 { pt3dadd( -76.5012, -59.9504, 33.3013, 0.29 ) }
    dend_66 { pt3dadd( -77.5339, -61.2601, 34.7228, 0.29 ) }
    dend_66 { pt3dadd( -77.7953, -61.5368, 35.0311, 0.74 ) }
    dend_66 { pt3dadd( -78.074, -61.7934, 35.3095, 1.03 ) }
    dend_66 { pt3dadd( -78.4198, -62.1054, 35.6308, 1.03 ) }
    dend_66 { pt3dadd( -79.3064, -62.9263, 36.3205, 0.66 ) }
    dend_66 { pt3dadd( -80.0219, -63.679, 36.8417, 0.66 ) }
    dend_66 { pt3dadd( -80.724, -64.517, 37.2659, 0.88 ) }
    dend_66 { pt3dadd( -81.285, -65.1894, 37.5691, 0.88 ) }
    dend_66 { pt3dadd( -82.2073, -66.2843, 38.0458, 0.52 ) }
    dend_66 { pt3dadd( -83.2649, -67.507, 38.5379, 0.52 ) }
    dend_66 { pt3dadd( -83.3238, -67.576, 38.5621, 0.52 ) }
    dend_66 { pt3dadd( -84.4017, -68.8318, 38.9729, 0.81 ) }
    dend_66 { pt3dadd( -85.0322, -69.5448, 39.1645, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_66 { pt3dadd( -86.2457, -70.9086, 39.4914, 0.29 ) }
    dend_66 { pt3dadd( -87.1255, -71.8982, 39.6777, 0.37 ) }
    dend_66 { pt3dadd( -87.6258, -72.4771, 39.7921, 1.03 ) }
    dend_66 { pt3dadd( -88.4799, -73.5743, 39.9944, 0.22 ) }
    dend_66 { pt3dadd( -89.6192, -75.1191, 40.2802, 0.22 ) }
    dend_66 { pt3dadd( -89.7274, -75.2766, 40.3068, 0.59 ) }
    dend_66 { pt3dadd( -90.4418, -76.3834, 40.4511, 0.59 ) }
    dend_66 { pt3dadd( -91.0866, -77.412, 40.5841, 0.44 ) }
    dend_66 { pt3dadd( -91.8673, -78.6173, 40.7296, 0.81 ) }
    // Section: dend_53, id: dend_53, parent: soma_0 (entry count 9/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 9.20986, 1.24387, 4.05967, 1.84 ) }
    dend_53 { pt3dadd( 9.46991, 1.15304, 4.11585, 1.62 ) }
    dend_53 { pt3dadd( 10.6503, 0.740734, 4.37087, 1.62 ) }
    dend_53 { pt3dadd( 10.7036, 0.722138, 4.38238, 1.62 ) }
    dend_53 { pt3dadd( 12.1212, 0.226998, 4.68864, 1.62 ) }
    dend_53 { pt3dadd( 12.182, 0.205745, 4.70178, 1.62 ) }
    dend_53 { pt3dadd( 12.5092, 0.0914843, 4.77245, 1.62 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 16/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -1.70014, 9.08138, 5.17967, 2.8 ) }
    dend_39 { pt3dadd( -1.70014, 9.08138, 5.17967, 2.8 ) }
    dend_39 { pt3dadd( -1.13991, 10.7494, 5.45314, 1.84 ) }
    dend_39 { pt3dadd( -0.577404, 12.2896, 5.74091, 1.84 ) }
    dend_39 { pt3dadd( 0.145609, 14.0045, 6.05846, 1.84 ) }
    dend_39 { pt3dadd( 0.191271, 14.0997, 6.07532, 1.84 ) }
    dend_39 { pt3dadd( 1.26712, 16.0711, 6.40346, 1.84 ) }
    dend_39 { pt3dadd( 2.73641, 18.3609, 6.76266, 1.84 ) }
    dend_39 { pt3dadd( 2.84995, 18.5099, 6.78485, 1.84 ) }
    dend_39 { pt3dadd( 4.36705, 20.3565, 7.01813, 2.28 ) }
    dend_39 { pt3dadd( 5.36999, 21.5886, 7.25069, 2.28 ) }
    dend_39 { pt3dadd( 6.47622, 23.0278, 7.56568, 1.62 ) }
    dend_39 { pt3dadd( 7.38127, 24.3224, 7.9244, 1.62 ) }
    dend_39 { pt3dadd( 8.59763, 26.2301, 8.51319, 1.62 ) }
    dend_39 { pt3dadd( 9.50944, 27.8618, 9.15784, 1.62 ) }
    dend_39 { pt3dadd( 10.7953, 30.4261, 10.2981, 1.84 ) }
    dend_39 { pt3dadd( 11.5024, 32.0405, 11.0875, 2.06 ) }
    dend_39 { pt3dadd( 12.4134, 34.5297, 12.4319, 2.06 ) }
    dend_39 { pt3dadd( 12.4336, 34.5966, 12.4721, 2.06 ) }
    dend_39 { pt3dadd( 12.9381, 36.8368, 13.98, 2.36 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 36/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -11.9802, -2.86013, 0.929666, 1.92 ) }
    dend_32 { pt3dadd( -11.9802, -2.86013, 0.929666, 1.92 ) }
    dend_32 { pt3dadd( -13.0137, -2.87658, 0.677395, 1.55 ) }
    dend_32 { pt3dadd( -14.5522, -2.89647, 0.280143, 1.55 ) }
    dend_32 { pt3dadd( -16.1595, -2.90882, -0.131118, 1.4 ) }
    dend_32 { pt3dadd( -17.6656, -2.91849, -0.558982, 1.4 ) }
    dend_32 { pt3dadd( -17.7343, -2.91904, -0.581053, 1.4 ) }
    dend_32 { pt3dadd( -19.1619, -2.92125, -1.08866, 1.4 ) }
    dend_32 { pt3dadd( -19.2862, -2.91981, -1.14197, 1.4 ) }
    dend_32 { pt3dadd( -20.1217, -2.89791, -1.55186, 1.33 ) }
    dend_32 { pt3dadd( -21.4258, -2.84153, -2.25977, 1.33 ) }
    dend_32 { pt3dadd( -22.3156, -2.7848, -2.78596, 1.33 ) }
    dend_32 { pt3dadd( -22.7477, -2.75174, -3.05297, 1.4 ) }
    dend_32 { pt3dadd( -23.9516, -2.63828, -3.80036, 1.4 ) }
    dend_32 { pt3dadd( -24.0131, -2.63177, -3.83731, 1.4 ) }
    dend_32 { pt3dadd( -24.8766, -2.52945, -4.32984, 1.25 ) }
    dend_32 { pt3dadd( -26.0528, -2.37277, -4.89862, 1.11 ) }
    dend_32 { pt3dadd( -26.1351, -2.36166, -4.93113, 1.11 ) }
    dend_32 { pt3dadd( -26.9599, -2.2616, -5.20731, 1.11 ) }
    dend_32 { pt3dadd( -27.6013, -2.18378, -5.37195, 0.88 ) }
    dend_32 { pt3dadd( -27.9856, -2.14092, -5.45971, 0.74 ) }
    dend_32 { pt3dadd( -28.1803, -2.12615, -5.49453, 0.66 ) }
    dend_32 { pt3dadd( -28.9197, -2.11565, -5.56478, 0.66 ) }
    dend_32 { pt3dadd( -29.0539, -2.12506, -5.57851, 0.66 ) }
    dend_32 { pt3dadd( -29.6154, -2.2285, -5.63863, 0.88 ) }
    dend_32 { pt3dadd( -30.254, -2.41227, -5.70144, 0.88 ) }
    dend_32 { pt3dadd( -30.6991, -2.56466, -5.74573, 0.96 ) }
    dend_32 { pt3dadd( -31.1821, -2.7387, -5.78904, 0.96 ) }
    dend_32 { pt3dadd( -31.9082, -2.99459, -5.84364, 0.96 ) }
    dend_32 { pt3dadd( -32.5827, -3.20784, -5.9227, 0.37 ) }
    dend_32 { pt3dadd( -33.2622, -3.38215, -6.01797, 0.37 ) }
    dend_32 { pt3dadd( -33.6862, -3.45158, -6.09306, 1.11 ) }
    dend_32 { pt3dadd( -34.6688, -3.49914, -6.2876, 1.77 ) }
    dend_32 { pt3dadd( -35.3924, -3.45228, -6.44038, 2.06 ) }
    dend_32 { pt3dadd( -36.3262, -3.29112, -6.64506, 2.06 ) }
    dend_32 { pt3dadd( -37.0568, -3.09242, -6.80112, 1.69 ) }
    dend_32 { pt3dadd( -37.5817, -2.91064, -6.90449, 1.33 ) }
    dend_32 { pt3dadd( -38.3003, -2.63418, -7.02312, 1.11 ) }
    dend_32 { pt3dadd( -38.7281, -2.44487, -7.07874, 1.03 ) }
    dend_32 { pt3dadd( -39.0757, -2.28258, -7.10443, 1.03 ) }
    dend_32 { pt3dadd( -39.6293, -2.01993, -7.14792, 0.81 ) }
    dend_32 { pt3dadd( -40.0062, -1.84103, -7.20373, 0.81 ) }
    dend_32 { pt3dadd( -40.4172, -1.64818, -7.28441, 0.29 ) }
    dend_32 { pt3dadd( -40.9944, -1.37542, -7.41793, 0.29 ) }
    dend_32 { pt3dadd( -41.3339, -1.21702, -7.50518, 1.03 ) }
    dend_32 { pt3dadd( -42.3889, -0.727167, -7.80727, 1.33 ) }
    dend_32 { pt3dadd( -42.8784, -0.499371, -7.96612, 1.62 ) }
    dend_32 { pt3dadd( -43.5846, -0.160367, -8.2208, 1.62 ) }
    dend_32 { pt3dadd( -43.8479, -0.0308073, -8.32588, 1.62 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 85/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 2.58986, 10.2403, -3.07033, 4.86 ) }
    dend_26 { pt3dadd( 2.58986, 10.2403, -3.07033, 4.86 ) }
    dend_26 { pt3dadd( 3.44021, 11.8717, -3.07033, 3.83 ) }
    dend_26 { pt3dadd( 4.05259, 12.8665, -3.07033, 3.83 ) }
    dend_26 { pt3dadd( 4.96697, 14.2035, -3.07033, 3.83 ) }
    dend_26 { pt3dadd( 6.34318, 16.0312, -3.07033, 3.83 ) }
    dend_26 { pt3dadd( 6.75893, 16.5435, -3.07033, 3.83 ) }
    dend_26 { pt3dadd( 7.75433, 17.6815, -3.07033, 2.36 ) }
    dend_26 { pt3dadd( 8.47741, 18.3831, -3.07033, 2.06 ) }
    dend_26 { pt3dadd( 9.09114, 18.895, -3.07033, 1.84 ) }
    dend_26 { pt3dadd( 9.79009, 19.3411, -3.07033, 1.62 ) }
    dend_26 { pt3dadd( 10.1817, 19.5267, -3.07033, 1.62 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 97/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 2.28986, -8.03763, -0.0103344, 2.5 ) }
    dend_19 { pt3dadd( 2.28986, -8.03763, -0.0103344, 2.5 ) }
    dend_19 { pt3dadd( 2.2518, -9.96694, -0.0103344, 2.21 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_19 { pt3dadd( 2.2516, -10.9311, -0.0103344, 1.62 ) }
    dend_19 { pt3dadd( 2.25892, -11.8715, -0.0072806, 1.62 ) }
    dend_19 { pt3dadd( 2.27212, -13.26, -1.10701E-4, 1.84 ) }
    dend_19 { pt3dadd( 2.2925, -14.5894, -0.0048256, 1.92 ) }
    dend_19 { pt3dadd( 2.31392, -15.4112, -0.0127501, 2.06 ) }
    dend_19 { pt3dadd( 2.37274, -17.2105, 0.0139076, 2.06 ) }
    dend_19 { pt3dadd( 2.37601, -17.2814, 0.0162807, 2.06 ) }
    dend_19 { pt3dadd( 2.46473, -18.8421, 0.0900237, 2.06 ) }
    dend_19 { pt3dadd( 2.59526, -20.5647, 0.190953, 2.06 ) }
    dend_19 { pt3dadd( 2.723, -22.1148, 0.327852, 1.84 ) }
    dend_19 { pt3dadd( 2.84498, -23.548, 0.488402, 1.55 ) }
    dend_19 { pt3dadd( 2.94914, -24.7125, 0.643272, 1.4 ) }
    dend_19 { pt3dadd( 3.10193, -26.1717, 0.879177, 1.4 ) }
    dend_19 { pt3dadd( 3.12867, -26.3897, 0.922593, 1.4 ) }
    dend_19 { pt3dadd( 3.33096, -27.7896, 1.25658, 1.25 ) }
    dend_19 { pt3dadd( 3.34351, -27.8679, 1.27519, 1.25 ) }
    dend_19 { pt3dadd( 3.53935, -28.9587, 1.50882, 1.25 ) }
    dend_19 { pt3dadd( 3.88261, -30.8808, 1.89041, 1.25 ) }
    dend_19 { pt3dadd( 3.89528, -30.9498, 1.90272, 1.25 ) }
    dend_19 { pt3dadd( 4.42648, -33.9122, 2.35537, 1.25 ) }
    dend_19 { pt3dadd( 4.61888, -35.0163, 2.49342, 1.62 ) }
    dend_19 { pt3dadd( 4.89401, -36.6166, 2.66881, 1.62 ) }
    dend_19 { pt3dadd( 5.23407, -38.6598, 2.8531, 1.62 ) }
    dend_19 { pt3dadd( 5.38182, -39.624, 2.9154, 1.62 ) }
    dend_19 { pt3dadd( 5.54177, -40.8861, 2.97847, 1.69 ) }
    dend_19 { pt3dadd( 5.60975, -41.6983, 2.99911, 1.92 ) }
    dend_19 { pt3dadd( 5.66109, -42.8542, 3.02676, 1.92 ) }
    dend_19 { pt3dadd( 5.66263, -43.8208, 3.04695, 1.4 ) }
    dend_19 { pt3dadd( 5.63842, -44.6368, 3.0644, 1.33 ) }
    dend_19 { pt3dadd( 5.56268, -46.2137, 3.09432, 1.33 ) }
    dend_19 { pt3dadd( 5.48425, -47.4085, 3.11313, 1.47 ) }
    dend_19 { pt3dadd( 5.43047, -48.4535, 3.12402, 1.55 ) }
    dend_19 { pt3dadd( 5.42135, -48.6876, 3.12559, 1.55 ) }
    dend_19 { pt3dadd( 5.41172, -49.3574, 3.12778, 1.33 ) }
    dend_19 { pt3dadd( 5.43491, -50.6943, 3.12778, 1.33 ) }
    dend_19 { pt3dadd( 5.43864, -50.7653, 3.12778, 1.33 ) }
    dend_19 { pt3dadd( 5.88923, -56.0169, 3.20832, 1.18 ) }
    dend_19 { pt3dadd( 6.00378, -56.9772, 3.23379, 1.33 ) }
    dend_19 { pt3dadd( 6.19927, -58.3112, 3.29988, 1.62 ) }
    dend_19 { pt3dadd( 6.41729, -59.5842, 3.38761, 1.77 ) }
    dend_19 { pt3dadd( 6.67013, -60.8292, 3.49819, 1.77 ) }
    dend_19 { pt3dadd( 7.00603, -62.1794, 3.64414, 1.62 ) }
    dend_19 { pt3dadd( 7.44347, -63.5367, 3.8741, 1.62 ) }
    dend_19 { pt3dadd( 7.88385, -64.8285, 4.12102, 1.47 ) }
    dend_19 { pt3dadd( 7.90679, -64.8949, 4.13434, 1.4 ) }
    dend_19 { pt3dadd( 8.27379, -65.9918, 4.34504, 1.55 ) }
    dend_19 { pt3dadd( 8.68343, -67.361, 4.57342, 1.47 ) }
    dend_19 { pt3dadd( 8.96337, -68.4563, 4.7132, 1.4 ) }
    dend_19 { pt3dadd( 9.22809, -69.6474, 4.81753, 1.25 ) }
    dend_19 { pt3dadd( 9.4909, -70.9098, 4.87709, 1.25 ) }
    dend_19 { pt3dadd( 9.72822, -72.1845, 4.90875, 1.69 ) }
    dend_19 { pt3dadd( 10.0395, -74.0038, 4.92245, 1.92 ) }
    dend_19 { pt3dadd( 10.2885, -75.5384, 4.90598, 1.92 ) }
    dend_19 { pt3dadd( 10.5114, -76.8718, 4.86758, 1.55 ) }
    dend_19 { pt3dadd( 10.7846, -78.4971, 4.8209, 1.47 ) }
    dend_19 { pt3dadd( 11.3017, -81.4271, 4.71048, 1.47 ) }
    dend_19 { pt3dadd( 11.3153, -81.4969, 4.70871, 1.47 ) }
    dend_19 { pt3dadd( 11.5085, -82.399, 4.69798, 1.11 ) }
    dend_19 { pt3dadd( 12.2075, -85.4449, 4.7165, 1.11 ) }
    dend_19 { pt3dadd( 12.4065, -86.264, 4.76938, 1.33 ) }
    dend_19 { pt3dadd( 12.6793, -87.2752, 4.88301, 1.47 ) }
    dend_19 { pt3dadd( 13.086, -88.5405, 5.08629, 1.47 ) }
    dend_19 { pt3dadd( 13.5789, -89.9316, 5.34736, 1.47 ) }
    dend_19 { pt3dadd( 13.609, -90.0056, 5.36564, 1.47 ) }
    dend_19 { pt3dadd( 14.2883, -91.4779, 5.81277, 1.33 ) }
    dend_19 { pt3dadd( 14.8427, -92.6175, 6.17578, 1.4 ) }
    dend_19 { pt3dadd( 15.3648, -93.6646, 6.48779, 1.62 ) }
    dend_19 { pt3dadd( 15.7191, -94.3758, 6.66723, 1.62 ) }
    dend_19 { pt3dadd( 16.3417, -95.6706, 6.94402, 1.03 ) }
    dend_19 { pt3dadd( 16.823, -96.7926, 7.1401, 0.96 ) }
    dend_19 { pt3dadd( 16.8475, -96.859, 7.15014, 0.96 ) }
    dend_19 { pt3dadd( 17.4569, -98.7951, 7.47838, 0.96 ) }
    dend_19 { pt3dadd( 17.4781, -98.8727, 7.49199, 0.96 ) }
    dend_19 { pt3dadd( 17.8426, -100.375, 7.79924, 0.96 ) }
    dend_19 { pt3dadd( 18.1872, -101.994, 8.15288, 0.74 ) }
    dend_19 { pt3dadd( 18.5136, -103.741, 8.5733, 0.74 ) }
    dend_19 { pt3dadd( 18.616, -104.542, 8.75926, 0.96 ) }
    dend_19 { pt3dadd( 18.6569, -105.128, 8.88427, 0.96 ) }
    dend_19 { pt3dadd( 18.7294, -106.337, 9.10065, 0.74 ) }
    dend_19 { pt3dadd( 18.7664, -107.073, 9.20977, 0.52 ) }
    dend_19 { pt3dadd( 18.823, -108.395, 9.35075, 0.52 ) }
    dend_19 { pt3dadd( 18.9347, -110.819, 9.52839, 0.52 ) }
    dend_19 { pt3dadd( 19.0467, -112.967, 9.6495, 0.52 ) }
    dend_19 { pt3dadd( 19.1537, -114.562, 9.69193, 0.52 ) }
    dend_19 { pt3dadd( 19.2044, -115.199, 9.68579, 0.74 ) }
    dend_19 { pt3dadd( 19.3086, -116.161, 9.66916, 0.74 ) }
    dend_19 { pt3dadd( 19.4445, -117.128, 9.6267, 0.66 ) }
    dend_19 { pt3dadd( 19.5872, -117.927, 9.56733, 1.25 ) }
    dend_19 { pt3dadd( 19.7497, -118.902, 9.46818, 1.62 ) }
    dend_19 { pt3dadd( 19.8648, -119.712, 9.37559, 1.62 ) }
    dend_19 { pt3dadd( 19.9735, -120.564, 9.27663, 1.47 ) }
    dend_19 { pt3dadd( 20.1465, -122.048, 9.11248, 1.03 ) }
    dend_19 { pt3dadd( 20.23, -122.856, 9.0337, 1.03 ) }
    dend_19 { pt3dadd( 20.2719, -123.376, 8.99956, 1.03 ) }
    dend_19 { pt3dadd( 20.3208, -124.295, 8.96857, 1.03 ) }
    dend_19 { pt3dadd( 20.347, -125.19, 8.9613, 0.66 ) }
    dend_19 { pt3dadd( 20.349, -126.45, 8.98429, 0.66 ) }
    dend_19 { pt3dadd( 20.3445, -127.488, 9.00098, 1.03 ) }
    dend_19 { pt3dadd( 20.3362, -128.332, 8.99018, 1.25 ) }
    dend_19 { pt3dadd( 20.3353, -128.403, 8.98739, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_19 { pt3dadd( 20.3194, -129.512, 8.90937, 1.25 ) }
    dend_19 { pt3dadd( 20.3197, -129.572, 8.90294, 1.25 ) }
    dend_19 { pt3dadd( 20.3727, -130.925, 8.67439, 0.88 ) }
    dend_19 { pt3dadd( 20.4273, -131.394, 8.57857, 0.66 ) }
    dend_19 { pt3dadd( 20.4398, -131.463, 8.56419, 0.66 ) }
    dend_19 { pt3dadd( 20.6525, -132.334, 8.40712, 0.52 ) }
    dend_19 { pt3dadd( 20.6815, -132.429, 8.39272, 0.52 ) }
    dend_19 { pt3dadd( 20.9389, -133.161, 8.34331, 0.37 ) }
    dend_19 { pt3dadd( 21.4427, -134.489, 8.31645, 0.37 ) }
    dend_19 { pt3dadd( 21.753, -135.261, 8.30455, 0.96 ) }
    dend_19 { pt3dadd( 22.0828, -136.054, 8.2987, 1.77 ) }
    dend_19 { pt3dadd( 22.3382, -136.635, 8.30403, 1.99 ) }
    dend_19 { pt3dadd( 22.7544, -137.565, 8.33768, 1.99 ) }
    // Section: dend_16, id: dend_16, parent: soma_0 (entry count 13/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -6.78014, -8.73112, 2.67967, 1.18 ) }
    dend_16 { pt3dadd( -6.78014, -8.73112, 2.67967, 1.18 ) }
    dend_16 { pt3dadd( -6.77527, -9.42688, 2.96574, 1.18 ) }
    dend_16 { pt3dadd( -6.77355, -9.47596, 2.98569, 1.18 ) }
    dend_16 { pt3dadd( -6.67196, -10.4306, 3.33356, 1.03 ) }
    dend_16 { pt3dadd( -6.52966, -11.385, 3.82127, 1.03 ) }
    dend_16 { pt3dadd( -6.37819, -12.384, 4.42235, 1.03 ) }
    dend_16 { pt3dadd( -6.22746, -13.3324, 5.08173, 1.03 ) }
    dend_16 { pt3dadd( -6.22045, -13.3738, 5.11523, 1.03 ) }
    dend_16 { pt3dadd( -6.06855, -14.3985, 6.1494, 1.03 ) }
    dend_16 { pt3dadd( -5.98536, -15.7047, 7.98253, 1.03 ) }
    dend_16 { pt3dadd( -6.05469, -15.9884, 8.65931, 1.03 ) }
    dend_16 { pt3dadd( -6.14401, -16.0447, 8.9953, 1.03 ) }
    dend_16 { pt3dadd( -6.25951, -16.0619, 9.26384, 1.03 ) }
    dend_16 { pt3dadd( -6.8246, -16.1314, 10.2305, 1.03 ) }
    dend_16 { pt3dadd( -7.30096, -16.2068, 10.8493, 1.03 ) }
    dend_16 { pt3dadd( -7.33923, -16.2236, 10.8852, 1.03 ) }
    dend_16 { pt3dadd( -8.13869, -16.6884, 11.6237, 1.03 ) }
    dend_16 { pt3dadd( -8.42309, -16.8954, 11.8909, 1.25 ) }
    dend_16 { pt3dadd( -8.81603, -17.2336, 12.2781, 1.25 ) }
    dend_16 { pt3dadd( -9.58768, -18.0123, 13.0081, 1.25 ) }
    dend_16 { pt3dadd( -10.2416, -18.7662, 13.7647, 1.25 ) }
    dend_16 { pt3dadd( -10.2679, -18.8002, 13.7979, 1.25 ) }
    dend_16 { pt3dadd( -10.8903, -19.7155, 14.6659, 1.25 ) }
    dend_16 { pt3dadd( -11.2404, -20.2683, 15.2332, 1.4 ) }
    dend_16 { pt3dadd( -11.6177, -20.8634, 15.86, 1.4 ) }
    dend_16 { pt3dadd( -12.3487, -22.0285, 17.093, 1.18 ) }
    dend_16 { pt3dadd( -12.5223, -22.2792, 17.371, 1.18 ) }
    dend_16 { pt3dadd( -12.9752, -22.8264, 17.9777, 0.88 ) }
    dend_16 { pt3dadd( -13.7054, -23.5477, 18.8094, 0.88 ) }
    dend_16 { pt3dadd( -14.2868, -24.0346, 19.3899, 0.88 ) }
    dend_16 { pt3dadd( -14.7578, -24.3575, 19.7985, 0.88 ) }
    dend_16 { pt3dadd( -15.471, -24.7403, 20.2508, 1.18 ) }
    dend_16 { pt3dadd( -16.0838, -24.9918, 20.6345, 1.4 ) }
    dend_16 { pt3dadd( -16.7928, -25.183, 21.0425, 1.4 ) }
    dend_16 { pt3dadd( -16.8338, -25.1889, 21.0656, 1.4 ) }
    dend_16 { pt3dadd( -17.3048, -25.1903, 21.355, 0.96 ) }
    dend_16 { pt3dadd( -17.9148, -25.0814, 21.7934, 0.96 ) }
    dend_16 { pt3dadd( -18.6113, -24.7717, 22.6408, 0.81 ) }
    dend_16 { pt3dadd( -18.8016, -24.6254, 22.9785, 0.81 ) }
    dend_16 { pt3dadd( -18.8244, -24.6006, 23.0315, 0.81 ) }
    dend_16 { pt3dadd( -18.9798, -24.3618, 23.5525, 0.66 ) }
    dend_16 { pt3dadd( -19.1025, -23.9187, 24.5919, 1.18 ) }
    dend_16 { pt3dadd( -18.984, -23.599, 25.9392, 0.96 ) }
    dend_16 { pt3dadd( -18.9665, -23.615, 25.9977, 0.96 ) }
    dend_16 { pt3dadd( -18.8637, -23.8229, 26.3395, 1.03 ) }
    dend_16 { pt3dadd( -18.8533, -23.8615, 26.3869, 1.03 ) }
    dend_16 { pt3dadd( -18.7728, -24.4317, 26.9357, 1.03 ) }
    dend_16 { pt3dadd( -18.7212, -25.6628, 27.8679, 0.88 ) }
    dend_16 { pt3dadd( -18.7325, -26.483, 28.4123, 0.66 ) }
    dend_16 { pt3dadd( -18.7334, -27.0069, 28.805, 0.66 ) }
    dend_16 { pt3dadd( -18.7198, -27.5281, 29.2554, 0.52 ) }
    dend_16 { pt3dadd( -18.6756, -27.7614, 29.4836, 0.52 ) }
    dend_16 { pt3dadd( -18.6497, -27.7951, 29.5293, 0.52 ) }
    dend_16 { pt3dadd( -18.2653, -27.8534, 29.7029, 0.52 ) }
    dend_16 { pt3dadd( -17.2696, -27.9563, 30.0273, 0.37 ) }
    dend_16 { pt3dadd( -16.5717, -28.011, 30.2324, 0.37 ) }
    dend_16 { pt3dadd( -15.4082, -28.0747, 30.5165, 0.37 ) }
    dend_16 { pt3dadd( -15.3465, -28.0768, 30.5309, 0.37 ) }
    dend_16 { pt3dadd( -14.9833, -28.0914, 30.6102, 0.37 ) }
    dend_16 { pt3dadd( -14.8667, -28.1001, 30.6308, 0.37 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 74/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -5.64014, -9.75713, 1.67967, 2.5 ) }
    dend_5 { pt3dadd( -5.64014, -9.75713, 1.67967, 2.5 ) }
    dend_5 { pt3dadd( -5.50777, -11.3647, 1.57453, 2.21 ) }
    dend_5 { pt3dadd( -5.34395, -13.6675, 1.42227, 1.99 ) }
    dend_5 { pt3dadd( -5.21694, -15.7908, 1.28692, 2.06 ) }
    dend_5 { pt3dadd( -5.06716, -18.3833, 1.12742, 2.21 ) }
    dend_5 { pt3dadd( -4.99316, -19.6642, 1.04861, 2.21 ) }
    dend_5 { pt3dadd( -4.93482, -20.8605, 0.973026, 2.28 ) }
    dend_5 { pt3dadd( -4.89093, -22.3939, 0.870478, 2.5 ) }
    dend_5 { pt3dadd( -4.89119, -23.7941, 0.776798, 2.5 ) }
    dend_5 { pt3dadd( -4.902, -24.4264, 0.746426, 2.5 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 85/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -9.68014, 5.05337, -0.320334, 2.21 ) }
    dend_0 { pt3dadd( -9.68014, 5.05337, -0.320334, 2.21 ) }
    dend_0 { pt3dadd( -11.2831, 5.7677, -0.120213, 1.55 ) }
    dend_0 { pt3dadd( -12.7418, 6.45243, 0.15366, 1.4 ) }
    dend_0 { pt3dadd( -14.3161, 7.22244, 0.473898, 1.4 ) }
    dend_0 { pt3dadd( -15.899, 8.03121, 0.776496, 1.4 ) }
    dend_0 { pt3dadd( -17.0503, 8.63242, 0.981336, 1.4 ) }
    dend_0 { pt3dadd( -17.1267, 8.67234, 0.994168, 1.4 ) }
    dend_0 { pt3dadd( -18.9354, 9.59569, 1.27419, 1.18 ) }
    dend_0 { pt3dadd( -21.5402, 10.8502, 1.61652, 1.18 ) }
    dend_0 { pt3dadd( -24.1047, 12.0591, 1.90942, 1.18 ) }
    dend_0 { pt3dadd( -25.443, 12.6753, 2.05728, 1.55 ) }
    dend_0 { pt3dadd( -26.7, 13.2407, 2.18025, 1.99 ) }
    dend_0 { pt3dadd( -28.6024, 14.061, 2.31609, 1.99 ) }
    dend_0 { pt3dadd( -30.2515, 14.7083, 2.32749, 2.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 0/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 7.09826, 9.5642, -1.4207, 1.05453 ) }
    axon_0 { pt3dadd( 16.9209, 20.9006, -1.4207, 1.05453 ) }
    axon_0 { pt3dadd( 26.7436, 32.2371, -1.4207, 1.05453 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 3/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -91.8673, -78.6173, 40.7296, 0.96 ) }
    dend_68 { pt3dadd( -91.2582, -79.1708, 40.8418, 0.96 ) }
    dend_68 { pt3dadd( -90.6054, -79.7638, 40.962, 0.96 ) }
    dend_68 { pt3dadd( -90.5245, -79.8373, 40.9769, 0.96 ) }
    dend_68 { pt3dadd( -89.7617, -80.5303, 41.1174, 0.96 ) }
    dend_68 { pt3dadd( -88.5713, -81.6119, 41.3366, 0.37 ) }
    dend_68 { pt3dadd( -88.0833, -82.0552, 41.4265, 0.37 ) }
    dend_68 { pt3dadd( -78.7536, -88.2631, 42.1017, 0.37 ) }
    dend_68 { pt3dadd( -68.8062, -93.5739, 42.3096, 0.37 ) }
    dend_68 { pt3dadd( -58.8962, -98.9398, 41.9029, 0.37 ) }
    dend_68 { pt3dadd( -48.2374, -102.144, 39.5781, 0.37 ) }
    dend_68 { pt3dadd( -37.7587, -104.707, 35.9231, 0.37 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 15/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -91.8673, -78.6173, 40.7296, 0.29 ) }
    dend_67 { pt3dadd( -92.8099, -79.4022, 40.9421, 0.29 ) }
    dend_67 { pt3dadd( -94.1917, -80.5527, 41.2536, 0.29 ) }
    dend_67 { pt3dadd( -100.809, -87.1931, 43.2922, 0.29 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 19/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 12.5092, 0.0914843, 4.77245, 1.62 ) }
    dend_55 { pt3dadd( 13.1727, 0.204102, 4.88475, 1.62 ) }
    dend_55 { pt3dadd( 13.4141, 0.182306, 5.8763, 1.62 ) }
    dend_55 { pt3dadd( 13.7077, 0.129882, 7.37645, 1.47 ) }
    dend_55 { pt3dadd( 13.7212, 0.126573, 7.43382, 1.47 ) }
    dend_55 { pt3dadd( 13.927, 0.0796963, 8.10493, 1.47 ) }
    dend_55 { pt3dadd( 13.9464, 0.0753993, 8.16049, 1.47 ) }
    dend_55 { pt3dadd( 16.3362, -0.565723, 14.9927, 1.18 ) }
    dend_55 { pt3dadd( 16.3627, -0.574455, 15.0713, 1.18 ) }
    dend_55 { pt3dadd( 16.7537, -0.71864, 16.1295, 1.18 ) }
    dend_55 { pt3dadd( 17.2786, -0.90918, 17.3093, 1.18 ) }
    dend_55 { pt3dadd( 17.3084, -0.918853, 17.3593, 1.18 ) }
    dend_55 { pt3dadd( 18.1891, -1.08791, 18.1357, 1.18 ) }
    dend_55 { pt3dadd( 18.3129, -1.09635, 18.1606, 1.18 ) }
    dend_55 { pt3dadd( 19.5188, -1.14407, 18.4576, 1.18 ) }
    dend_55 { pt3dadd( 19.6559, -1.14462, 18.4999, 1.18 ) }
    dend_55 { pt3dadd( 21.0573, -1.13751, 18.9874, 1.18 ) }
    dend_55 { pt3dadd( 21.7393, -1.12878, 19.2356, 1.03 ) }
    dend_55 { pt3dadd( 23.4961, -1.08629, 19.961, 1.03 ) }
    dend_55 { pt3dadd( 23.5505, -1.08489, 19.9839, 1.03 ) }
    dend_55 { pt3dadd( 24.3774, -1.08687, 20.3772, 1.03 ) }
    dend_55 { pt3dadd( 24.8824, -1.10533, 20.6205, 1.55 ) }
    dend_55 { pt3dadd( 24.9355, -1.10971, 20.6458, 1.55 ) }
    dend_55 { pt3dadd( 26.1771, -1.25822, 21.3475, 1.55 ) }
    dend_55 { pt3dadd( 26.8461, -1.34684, 21.797, 1.55 ) }
    dend_55 { pt3dadd( 28.4264, -1.57472, 22.8864, 1.55 ) }
    dend_55 { pt3dadd( 28.9033, -1.64097, 23.2387, 1.55 ) }
    dend_55 { pt3dadd( 29.0391, -1.65866, 23.3443, 1.55 ) }
    dend_55 { pt3dadd( 30.1635, -1.76748, 24.2702, 1.47 ) }
    dend_55 { pt3dadd( 31.4073, -1.87387, 25.2219, 1.25 ) }
    dend_55 { pt3dadd( 32.2299, -1.92111, 25.8176, 0.88 ) }
    dend_55 { pt3dadd( 33.5947, -1.90535, 26.4368, 0.88 ) }
    dend_55 { pt3dadd( 33.6301, -1.90054, 26.4009, 0.88 ) }
    dend_55 { pt3dadd( 34.3997, -1.74733, 25.3316, 0.74 ) }
    dend_55 { pt3dadd( 37.2985, -0.980181, 20.4338, 0.66 ) }
    dend_55 { pt3dadd( 37.4213, -0.938611, 20.1828, 0.66 ) }
    dend_55 { pt3dadd( 37.6277, -0.855279, 19.6451, 0.37 ) }
    dend_55 { pt3dadd( 37.783, -0.789795, 19.1489, 0.37 ) }
    dend_55 { pt3dadd( 37.8011, -0.782511, 19.0843, 0.37 ) }
    dend_55 { pt3dadd( 37.849, -0.766839, 18.8451, 0.52 ) }
    dend_55 { pt3dadd( 38.2779, -0.376584, 18.9238, 0.74 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 60/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 12.5092, 0.0914843, 4.77245, 0.29 ) }
    dend_54 { pt3dadd( 12.5411, -0.413134, 4.71671, 0.29 ) }
    dend_54 { pt3dadd( 12.55, -0.947651, 4.65751, 0.29 ) }
    dend_54 { pt3dadd( 12.5443, -1.0164, 4.64985, 0.29 ) }
    dend_54 { pt3dadd( 12.4794, -1.78758, 4.56395, 0.29 ) }
    dend_54 { pt3dadd( 12.4743, -1.84773, 4.55725, 0.29 ) }
    dend_54 { pt3dadd( 12.4328, -2.34177, 4.50221, 0.29 ) }
    dend_54 { pt3dadd( 12.4269, -2.40186, 4.49552, 0.29 ) }
    dend_54 { pt3dadd( 12.2742, -3.0383, 4.42399, 0.29 ) }
    dend_54 { pt3dadd( 13.1914, -11.6672, 4.60242, 0.29 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 70/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 12.9381, 36.8368, 13.98, 1.03 ) }
    dend_43 { pt3dadd( 12.7882, 38.3379, 14.2633, 1.03 ) }
    dend_43 { pt3dadd( 12.6838, 39.5947, 14.4577, 1.03 ) }
    dend_43 { pt3dadd( 12.6103, 40.6544, 14.6506, 1.03 ) }
    dend_43 { pt3dadd( 12.6029, 40.773, 14.6738, 1.03 ) }
    dend_43 { pt3dadd( 12.5145, 42.749, 15.0071, 1.03 ) }
    dend_43 { pt3dadd( 12.4833, 43.681, 15.1473, 0.74 ) }
    dend_43 { pt3dadd( 12.4632, 44.6158, 15.4117, 0.59 ) }
    dend_43 { pt3dadd( 12.4654, 45.5252, 15.8201, 0.59 ) }
    dend_43 { pt3dadd( 12.4664, 45.5786, 15.8498, 0.59 ) }
    dend_43 { pt3dadd( 12.5013, 46.347, 16.3722, 1.18 ) }
    dend_43 { pt3dadd( 12.5053, 46.3873, 16.4062, 1.18 ) }
    dend_43 { pt3dadd( 12.8333, 49.3519, 18.9799, 0.74 ) }
    dend_43 { pt3dadd( 12.8999, 49.9497, 19.4741, 1.18 ) }
    dend_43 { pt3dadd( 12.9813, 50.6573, 20.0194, 1.18 ) }
    dend_43 { pt3dadd( 12.9895, 50.713, 20.0616, 1.18 ) }
    dend_43 { pt3dadd( 13.1109, 51.452, 20.616, 0.88 ) }
    dend_43 { pt3dadd( 13.2294, 52.1087, 21.0533, 0.66 ) }
    dend_43 { pt3dadd( 13.4393, 52.9889, 21.4558, 0.66 ) }
    dend_43 { pt3dadd( 13.4627, 53.0791, 21.5038, 0.66 ) }
    dend_43 { pt3dadd( 13.7187, 54.0837, 22.0926, 0.66 ) }
    dend_43 { pt3dadd( 13.7346, 54.1661, 22.1498, 0.66 ) }
    dend_43 { pt3dadd( 13.8111, 54.9167, 22.7302, 0.96 ) }
    dend_43 { pt3dadd( 13.8172, 55.2874, 23.0019, 1.11 ) }
    dend_43 { pt3dadd( 13.8131, 55.9056, 23.3319, 1.11 ) }
    dend_43 { pt3dadd( 13.8095, 56.0314, 23.3837, 1.11 ) }
    dend_43 { pt3dadd( 13.7531, 57.2243, 23.733, 0.96 ) }
    dend_43 { pt3dadd( 13.7148, 58.0868, 23.968, 0.88 ) }
    dend_43 { pt3dadd( 13.6596, 59.1887, 24.2282, 0.88 ) }
    dend_43 { pt3dadd( 13.5415, 60.8666, 24.6073, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_43 { pt3dadd( 13.5285, 61.0459, 24.644, 0.88 ) }
    dend_43 { pt3dadd( 13.469, 61.9818, 24.7997, 0.88 ) }
    dend_43 { pt3dadd( 13.4111, 62.9801, 24.9045, 0.59 ) }
    dend_43 { pt3dadd( 13.364, 63.6916, 24.973, 0.59 ) }
    dend_43 { pt3dadd( 13.3333, 64.0751, 25.0065, 1.18 ) }
    dend_43 { pt3dadd( 13.2836, 64.645, 25.0388, 1.18 ) }
    dend_43 { pt3dadd( 13.2185, 65.4623, 25.0478, 1.18 ) }
    dend_43 { pt3dadd( 13.1136, 66.8531, 25.0042, 0.66 ) }
    dend_43 { pt3dadd( 13.016, 68.4854, 24.8813, 0.66 ) }
    dend_43 { pt3dadd( 13.009, 68.6201, 24.8754, 0.66 ) }
    dend_43 { pt3dadd( 12.9293, 70.2662, 24.8427, 0.66 ) }
    dend_43 { pt3dadd( 12.8865, 71.1729, 24.8431, 0.66 ) }
    dend_43 { pt3dadd( 12.8841, 71.2332, 24.845, 0.66 ) }
    dend_43 { pt3dadd( 12.8548, 72.2354, 24.9111, 0.66 ) }
    dend_43 { pt3dadd( 12.8116, 73.8425, 25.0687, 1.18 ) }
    dend_43 { pt3dadd( 12.8056, 74.2196, 25.1148, 1.69 ) }
    dend_43 { pt3dadd( 12.8061, 74.339, 25.1342, 1.69 ) }
    dend_43 { pt3dadd( 12.8361, 75.5495, 25.3235, 1.69 ) }
    dend_43 { pt3dadd( 12.8558, 76.116, 25.4087, 1.69 ) }
    dend_43 { pt3dadd( 12.8912, 76.7937, 25.497, 0.22 ) }
    dend_43 { pt3dadd( 12.9023, 76.9357, 25.509, 0.37 ) }
    dend_43 { pt3dadd( 12.9237, 77.1637, 25.5289, 0.37 ) }
    dend_43 { pt3dadd( 13.098, 78.9764, 25.725, 0.37 ) }
    dend_43 { pt3dadd( 13.1544, 79.5477, 25.796, 0.74 ) }
    dend_43 { pt3dadd( 13.2038, 80.0581, 25.8655, 0.74 ) }
    dend_43 { pt3dadd( 13.2481, 80.5657, 25.9354, 0.37 ) }
    dend_43 { pt3dadd( 13.2886, 81.4387, 26.1035, 0.37 ) }
    dend_43 { pt3dadd( 13.2983, 82.0648, 26.2409, 0.29 ) }
    dend_43 { pt3dadd( 13.3016, 82.5035, 26.3401, 0.29 ) }
    dend_43 { pt3dadd( 13.3084, 83.0585, 26.4522, 0.81 ) }
    dend_43 { pt3dadd( 13.3204, 83.8043, 26.6019, 1.03 ) }
    dend_43 { pt3dadd( 13.3983, 85.4969, 26.9247, 1.03 ) }
    dend_43 { pt3dadd( 13.5126, 86.7873, 27.2016, 1.47 ) }
    dend_43 { pt3dadd( 13.6535, 87.9642, 27.4893, 3.02 ) }
    dend_43 { pt3dadd( 13.7764, 88.8158, 27.7249, 3.02 ) }
    dend_43 { pt3dadd( 13.7877, 88.8813, 27.7446, 3.02 ) }
    dend_43 { pt3dadd( 13.9863, 89.8442, 28.0532, 2.65 ) }
    dend_43 { pt3dadd( 14.2668, 90.9728, 28.4049, 2.65 ) }
    dend_43 { pt3dadd( 14.5601, 92.2955, 28.8694, 0.52 ) }
    dend_43 { pt3dadd( 14.57, 92.3522, 28.889, 0.52 ) }
    dend_43 { pt3dadd( 14.584, 92.4788, 28.9277, 0.66 ) }
    dend_43 { pt3dadd( 14.5877, 92.5372, 28.9438, 0.66 ) }
    dend_43 { pt3dadd( 14.5531, 93.5311, 29.1411, 0.66 ) }
    dend_43 { pt3dadd( 14.4549, 94.4296, 29.1323, 0.66 ) }
    dend_43 { pt3dadd( 14.4069, 94.7857, 29.0772, 0.59 ) }
    dend_43 { pt3dadd( 14.372, 95.0106, 29.0421, 0.59 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 46/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 12.9381, 36.8368, 13.98, 1.18 ) }
    dend_40 { pt3dadd( 12.5923, 37.6269, 15.2089, 1.18 ) }
    dend_40 { pt3dadd( 11.8897, 39.3075, 17.5449, 0.88 ) }
    dend_40 { pt3dadd( 11.6394, 39.9444, 18.3586, 0.88 ) }
    dend_40 { pt3dadd( 11.6074, 40.0391, 18.4664, 0.88 ) }
    dend_40 { pt3dadd( 11.2818, 41.1578, 19.6115, 0.88 ) }
    dend_40 { pt3dadd( 11.2681, 41.2187, 19.6675, 0.88 ) }
    dend_40 { pt3dadd( 11.2001, 42.0128, 20.172, 0.88 ) }
    dend_40 { pt3dadd( 11.2224, 42.2694, 20.2585, 0.88 ) }
    dend_40 { pt3dadd( 11.3721, 43.0445, 20.4758, 0.88 ) }
    dend_40 { pt3dadd( 11.5265, 43.4299, 20.611, 0.88 ) }
    dend_40 { pt3dadd( 11.893, 44.0353, 20.8311, 0.88 ) }
    dend_40 { pt3dadd( 11.9381, 44.1, 20.8592, 0.88 ) }
    dend_40 { pt3dadd( 12.3095, 44.5702, 21.0788, 0.88 ) }
    dend_40 { pt3dadd( 12.3593, 44.6309, 21.1089, 0.88 ) }
    dend_40 { pt3dadd( 13.9321, 46.4434, 22.0434, 1.33 ) }
    dend_40 { pt3dadd( 14.5536, 47.1418, 22.4061, 1.33 ) }
    dend_40 { pt3dadd( 14.6022, 47.198, 22.4458, 1.33 ) }
    dend_40 { pt3dadd( 15.1873, 47.9014, 23.0207, 1.47 ) }
    dend_40 { pt3dadd( 15.2287, 47.9583, 23.0669, 1.47 ) }
    dend_40 { pt3dadd( 15.5235, 48.3982, 23.4143, 1.47 ) }
    dend_40 { pt3dadd( 15.5618, 48.4629, 23.4744, 1.47 ) }
    dend_40 { pt3dadd( 16.6487, 50.3277, 25.3113, 1.47 ) }
    dend_40 { pt3dadd( 16.7154, 50.4403, 25.4175, 1.47 ) }
    dend_40 { pt3dadd( 17.4441, 51.6908, 26.5714, 1.47 ) }
    dend_40 { pt3dadd( 17.4909, 51.7713, 26.6457, 1.47 ) }
    dend_40 { pt3dadd( 18.4268, 53.4566, 28.1829, 1.47 ) }
    dend_40 { pt3dadd( 18.9543, 54.4115, 29.021, 0.74 ) }
    dend_40 { pt3dadd( 19.3374, 55.1413, 29.5829, 0.74 ) }
    dend_40 { pt3dadd( 19.4011, 55.2712, 29.6898, 1.18 ) }
    dend_40 { pt3dadd( 20.0135, 56.6394, 30.8981, 1.18 ) }
    dend_40 { pt3dadd( 20.2673, 57.4058, 31.5215, 0.96 ) }
    dend_40 { pt3dadd( 20.2751, 57.4645, 31.5612, 0.96 ) }
    dend_40 { pt3dadd( 20.202, 58.391, 32.3724, 0.96 ) }
    dend_40 { pt3dadd( 20.0184, 59.2104, 33.266, 0.96 ) }
    dend_40 { pt3dadd( 19.9886, 59.3389, 33.4155, 0.96 ) }
    dend_40 { pt3dadd( 19.8543, 60.0311, 34.2336, 1.33 ) }
    dend_40 { pt3dadd( 19.7574, 60.7773, 35.1675, 1.33 ) }
    dend_40 { pt3dadd( 19.7649, 62.6863, 37.6057, 1.33 ) }
    dend_40 { pt3dadd( 19.9315, 63.847, 39.1755, 0.52 ) }
    dend_40 { pt3dadd( 20.1426, 64.5246, 39.9819, 0.52 ) }
    dend_40 { pt3dadd( 20.4987, 65.2854, 40.7765, 0.52 ) }
    dend_40 { pt3dadd( 20.5349, 65.3438, 40.825, 0.52 ) }
    dend_40 { pt3dadd( 21.2004, 66.3628, 41.3851, 0.52 ) }
    dend_40 { pt3dadd( 21.2373, 66.4347, 41.4038, 0.52 ) }
    dend_40 { pt3dadd( 21.7045, 67.994, 41.729, 0.52 ) }
    dend_40 { pt3dadd( 21.7153, 68.7902, 41.9382, 1.77 ) }
    dend_40 { pt3dadd( 21.5312, 69.6881, 42.2093, 1.77 ) }
    dend_40 { pt3dadd( 21.2705, 70.3409, 42.4261, 1.77 ) }
    dend_40 { pt3dadd( 20.5534, 71.4584, 42.841, 0.66 ) }
    dend_40 { pt3dadd( 20.019, 72.0281, 43.1386, 0.66 ) }
    dend_40 { pt3dadd( 19.3311, 72.4895, 43.4968, 0.66 ) }
    dend_40 { pt3dadd( 19.1629, 72.5744, 43.5695, 0.66 ) }
    dend_40 { pt3dadd( 18.5986, 72.8213, 43.776, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_40 { pt3dadd( 18.4486, 72.9092, 43.8313, 0.52 ) }
    dend_40 { pt3dadd( 17.1785, 73.8516, 44.2765, 0.52 ) }
    dend_40 { pt3dadd( 17.0453, 73.9633, 44.3271, 0.52 ) }
    dend_40 { pt3dadd( 16.1953, 74.7633, 44.6665, 0.22 ) }
    dend_40 { pt3dadd( 15.3011, 75.6646, 45.0197, 0.22 ) }
    dend_40 { pt3dadd( 13.8707, 77.2956, 45.5676, 0.22 ) }
    dend_40 { pt3dadd( 13.6556, 77.5702, 45.6385, 0.88 ) }
    dend_40 { pt3dadd( 15.1235, 87.0116, 52.7691, 0.88 ) }
    dend_40 { pt3dadd( 14.7471, 96.626, 59.7786, 0.88 ) }
    dend_40 { pt3dadd( 16.2666, 105.67, 67.4475, 0.88 ) }
    dend_40 { pt3dadd( 17.8789, 114.634, 75.2027, 0.88 ) }
    // Section: dend_38, id: dend_38, parent: dend_32 (entry count 11/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -43.8479, -0.0308073, -8.32588, 0.81 ) }
    dend_38 { pt3dadd( -44.1451, -0.172209, -8.59695, 0.81 ) }
    dend_38 { pt3dadd( -45.1915, -0.672945, -9.61951, 0.74 ) }
    dend_38 { pt3dadd( -46.1343, -1.06299, -10.4971, 0.74 ) }
    dend_38 { pt3dadd( -48.3892, -1.80496, -12.3762, 1.69 ) }
    dend_38 { pt3dadd( -49.1232, -2.00149, -12.9817, 2.14 ) }
    dend_38 { pt3dadd( -49.5696, -2.10324, -13.3417, 2.14 ) }
    dend_38 { pt3dadd( -52.314, -2.58012, -15.6057, 0.66 ) }
    dend_38 { pt3dadd( -53.2205, -2.71578, -16.3967, 0.52 ) }
    dend_38 { pt3dadd( -54.5317, -2.87033, -17.5621, 0.52 ) }
    dend_38 { pt3dadd( -56.134, -2.98833, -18.9435, 0.52 ) }
    dend_38 { pt3dadd( -56.5387, -3.02196, -19.3629, 1.33 ) }
    dend_38 { pt3dadd( -57.7281, -3.12069, -20.7672, 1.84 ) }
    dend_38 { pt3dadd( -59.0833, -3.14275, -22.5699, 0.29 ) }
    dend_38 { pt3dadd( -60.2772, -3.12425, -24.4033, 0.29 ) }
    dend_38 { pt3dadd( -60.3218, -3.11965, -24.4824, 0.29 ) }
    dend_38 { pt3dadd( -61.8932, -2.74785, -27.4275, 0.29 ) }
    dend_38 { pt3dadd( -61.9323, -2.73161, -27.5075, 0.29 ) }
    dend_38 { pt3dadd( -62.5424, -2.32409, -28.8439, 0.22 ) }
    dend_38 { pt3dadd( -62.7922, -2.0442, -29.4812, 0.22 ) }
    dend_38 { pt3dadd( -63.035, -1.63366, -30.3597, 1.4 ) }
    dend_38 { pt3dadd( -63.0614, -1.59121, -30.4334, 1.4 ) }
    dend_38 { pt3dadd( -64.014, -0.157271, -31.7604, 2.58 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 34/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -43.8479, -0.0308073, -8.32588, 0.52 ) }
    dend_33 { pt3dadd( -44.6511, 0.526291, -8.56985, 0.52 ) }
    dend_33 { pt3dadd( -44.7282, 0.577426, -8.58671, 0.52 ) }
    dend_33 { pt3dadd( -45.159, 0.855683, -8.66799, 0.52 ) }
    dend_33 { pt3dadd( -45.2185, 0.892794, -8.67795, 0.52 ) }
    dend_33 { pt3dadd( -46.2356, 1.5002, -8.8287, 0.52 ) }
    dend_33 { pt3dadd( -46.35, 1.56639, -8.84432, 0.52 ) }
    dend_33 { pt3dadd( -47.1262, 1.96832, -8.87743, 0.52 ) }
    dend_33 { pt3dadd( -47.1901, 1.99855, -8.88554, 0.52 ) }
    dend_33 { pt3dadd( -47.4312, 2.09511, -8.94403, 0.81 ) }
    dend_33 { pt3dadd( -47.8062, 2.23373, -9.05546, 1.03 ) }
    dend_33 { pt3dadd( -47.8706, 2.25526, -9.07793, 1.03 ) }
    dend_33 { pt3dadd( -48.616, 2.49681, -9.34705, 1.03 ) }
    dend_33 { pt3dadd( -49.4937, 2.76848, -9.66759, 0.44 ) }
    dend_33 { pt3dadd( -50.2149, 2.98839, -9.9165, 0.29 ) }
    dend_33 { pt3dadd( -51.7351, 3.43016, -10.4079, 0.22 ) }
    dend_33 { pt3dadd( -52.5948, 3.67881, -10.6841, 1.33 ) }
    dend_33 { pt3dadd( -52.6442, 3.69309, -10.6993, 1.33 ) }
    dend_33 { pt3dadd( -53.1352, 3.83304, -10.8342, 2.06 ) }
    dend_33 { pt3dadd( -53.7913, 4.01912, -10.9457, 2.28 ) }
    dend_33 { pt3dadd( -54.2342, 4.14188, -10.995, 2.28 ) }
    // Section: dend_31, id: dend_31, parent: dend_26 (entry count 55/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 10.1817, 19.5267, -3.07033, 0.88 ) }
    dend_31 { pt3dadd( 10.5359, 19.9861, -3.16118, 0.88 ) }
    dend_31 { pt3dadd( 10.9681, 20.4678, -3.3007, 0.81 ) }
    dend_31 { pt3dadd( 11.0243, 20.5108, -3.31144, 0.81 ) }
    dend_31 { pt3dadd( 11.5259, 20.8351, -3.38269, 0.81 ) }
    dend_31 { pt3dadd( 11.5744, 20.8565, -3.39473, 0.81 ) }
    dend_31 { pt3dadd( 12.3798, 21.1811, -3.62358, 1.25 ) }
    dend_31 { pt3dadd( 12.4834, 21.2126, -3.66513, 1.25 ) }
    dend_31 { pt3dadd( 13.394, 21.5327, -4.09384, 1.25 ) }
    dend_31 { pt3dadd( 13.4325, 21.5488, -4.11671, 1.25 ) }
    dend_31 { pt3dadd( 14.56, 22.1295, -4.89951, 0.66 ) }
    dend_31 { pt3dadd( 14.9252, 22.3613, -5.1724, 0.66 ) }
    dend_31 { pt3dadd( 15.6432, 22.9125, -5.75651, 1.03 ) }
    dend_31 { pt3dadd( 16.3187, 23.5523, -6.36738, 1.03 ) }
    dend_31 { pt3dadd( 16.8857, 24.2151, -6.95178, 0.88 ) }
    dend_31 { pt3dadd( 17.1813, 24.627, -7.26094, 0.66 ) }
    dend_31 { pt3dadd( 17.3883, 24.9985, -7.47672, 0.66 ) }
    dend_31 { pt3dadd( 17.4074, 25.0348, -7.49822, 0.66 ) }
    dend_31 { pt3dadd( 17.9534, 26.1855, -8.13603, 0.66 ) }
    dend_31 { pt3dadd( 17.9704, 26.2215, -8.15962, 0.66 ) }
    dend_31 { pt3dadd( 18.163, 26.678, -8.46665, 1.25 ) }
    dend_31 { pt3dadd( 18.3444, 27.1486, -8.81341, 1.69 ) }
    dend_31 { pt3dadd( 18.651, 28.1225, -9.53243, 1.84 ) }
    dend_31 { pt3dadd( 18.7189, 28.3945, -9.72304, 1.84 ) }
    dend_31 { pt3dadd( 18.8223, 29.2016, -10.261, 1.4 ) }
    dend_31 { pt3dadd( 18.8494, 29.563, -10.505, 0.96 ) }
    dend_31 { pt3dadd( 18.8512, 30.0025, -10.7966, 0.81 ) }
    dend_31 { pt3dadd( 18.8016, 30.7027, -11.2202, 0.66 ) }
    dend_31 { pt3dadd( 18.7273, 31.2558, -11.4986, 0.59 ) }
    dend_31 { pt3dadd( 18.6287, 31.9572, -11.8193, 0.59 ) }
    dend_31 { pt3dadd( 18.5183, 32.817, -12.1578, 0.59 ) }
    dend_31 { pt3dadd( 18.4627, 33.425, -12.382, 1.33 ) }
    dend_31 { pt3dadd( 18.4348, 34.0992, -12.6447, 2.06 ) }
    dend_31 { pt3dadd( 18.4544, 34.9012, -12.9783, 2.73 ) }
    dend_31 { pt3dadd( 18.5417, 35.8521, -13.3685, 3.17 ) }
    dend_31 { pt3dadd( 18.6554, 36.6371, -13.6802, 3.17 ) }
    dend_31 { pt3dadd( 18.7848, 37.3986, -13.9651, 2.5 ) }
    dend_31 { pt3dadd( 19.032, 38.5738, -14.4172, 0.88 ) }
    dend_31 { pt3dadd( 19.2741, 39.5015, -14.7749, 0.52 ) }
    dend_31 { pt3dadd( 19.5251, 40.3135, -15.0887, 0.44 ) }
    dend_31 { pt3dadd( 19.5402, 40.3538, -15.1048, 0.44 ) }
    dend_31 { pt3dadd( 19.8272, 41.0228, -15.3729, 0.44 ) }
    dend_31 { pt3dadd( 19.8701, 41.1172, -15.406, 0.44 ) }
    dend_31 { pt3dadd( 20.1442, 41.7521, -15.5923, 0.44 ) }
    dend_31 { pt3dadd( 20.1687, 41.8134, -15.6149, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_31 { pt3dadd( 20.3928, 42.4801, -15.9249, 0.44 ) }
    dend_31 { pt3dadd( 20.4029, 42.5185, -15.9482, 0.44 ) }
    dend_31 { pt3dadd( 20.5349, 43.3526, -16.516, 0.44 ) }
    dend_31 { pt3dadd( 20.5791, 44.1536, -17.1035, 1.18 ) }
    dend_31 { pt3dadd( 20.5702, 44.6557, -17.4924, 1.77 ) }
    dend_31 { pt3dadd( 20.5623, 45.0138, -17.8216, 2.06 ) }
    dend_31 { pt3dadd( 20.5175, 46.0507, -18.857, 0.37 ) }
    dend_31 { pt3dadd( 20.4991, 46.7741, -19.6182, 0.37 ) }
    dend_31 { pt3dadd( 20.4859, 47.5697, -20.506, 0.37 ) }
    dend_31 { pt3dadd( 20.4857, 47.5968, -20.5351, 0.37 ) }
    dend_31 { pt3dadd( 20.5097, 49.0211, -22.01, 1.77 ) }
    dend_31 { pt3dadd( 20.5413, 49.537, -22.5322, 2.36 ) }
    dend_31 { pt3dadd( 20.5729, 49.8964, -22.8661, 1.55 ) }
    dend_31 { pt3dadd( 20.6131, 50.1779, -23.1008, 0.29 ) }
    dend_31 { pt3dadd( 20.7542, 51.03, -23.5984, 0.29 ) }
    dend_31 { pt3dadd( 20.8359, 51.5715, -23.8238, 0.96 ) }
    dend_31 { pt3dadd( 20.8425, 51.6219, -23.8354, 0.96 ) }
    dend_31 { pt3dadd( 20.9341, 52.2224, -23.96, 0.96 ) }
    dend_31 { pt3dadd( 21.0663, 52.802, -24.1322, 0.15 ) }
    dend_31 { pt3dadd( 21.3792, 53.9499, -24.5701, 0.15 ) }
    dend_31 { pt3dadd( 21.3926, 53.9959, -24.5915, 0.66 ) }
    dend_31 { pt3dadd( 21.4147, 54.0757, -24.6314, 0.66 ) }
    dend_31 { pt3dadd( 21.5173, 54.4098, -24.8917, 0.66 ) }
    dend_31 { pt3dadd( 21.8405, 55.5921, -26.0026, 0.22 ) }
    dend_31 { pt3dadd( 22.1696, 56.9276, -27.4349, 0.22 ) }
    dend_31 { pt3dadd( 22.2705, 57.3598, -27.9414, 1.4 ) }
    dend_31 { pt3dadd( 22.35, 57.7385, -28.3833, 1.69 ) }
    dend_31 { pt3dadd( 22.6704, 59.423, -30.3484, 0.22 ) }
    dend_31 { pt3dadd( 22.8401, 60.3792, -31.4732, 0.22 ) }
    dend_31 { pt3dadd( 22.9721, 61.2054, -32.383, 0.29 ) }
    dend_31 { pt3dadd( 23.0636, 61.5703, -32.8161, 1.47 ) }
    dend_31 { pt3dadd( 23.1806, 61.9513, -33.2475, 1.69 ) }
    dend_31 { pt3dadd( 23.193, 61.9822, -33.28, 1.69 ) }
    dend_31 { pt3dadd( 23.5143, 62.6417, -33.844, 0.15 ) }
    dend_31 { pt3dadd( 24.0366, 63.3728, -34.5614, 0.15 ) }
    dend_31 { pt3dadd( 24.5033, 63.9715, -35.1258, 0.15 ) }
    dend_31 { pt3dadd( 24.5033, 63.9715, -35.1258, 1.03 ) }
    dend_31 { pt3dadd( 24.946, 64.5952, -35.6736, 1.84 ) }
    dend_31 { pt3dadd( 24.9657, 64.628, -35.7001, 1.84 ) }
    dend_31 { pt3dadd( 25.3614, 65.4833, -36.3036, 1.84 ) }
    dend_31 { pt3dadd( 25.532, 66.0736, -36.6897, 0.15 ) }
    dend_31 { pt3dadd( 25.5385, 66.1075, -36.7086, 0.15 ) }
    dend_31 { pt3dadd( 25.7615, 67.6052, -37.4695, 0.15 ) }
    dend_31 { pt3dadd( 25.7678, 67.6642, -37.4953, 0.74 ) }
    dend_31 { pt3dadd( 25.8226, 68.1987, -37.7051, 0.74 ) }
    dend_31 { pt3dadd( 26.0061, 70.0556, -38.3189, 0.22 ) }
    dend_31 { pt3dadd( 26.0894, 70.378, -38.458, 0.74 ) }
    dend_31 { pt3dadd( 26.1627, 70.522, -38.5268, 0.74 ) }
    dend_31 { pt3dadd( 26.5178, 70.9586, -38.779, 0.22 ) }
    dend_31 { pt3dadd( 26.8461, 71.2885, -38.9812, 0.96 ) }
    dend_31 { pt3dadd( 27.1738, 71.5427, -39.1636, 1.18 ) }
    dend_31 { pt3dadd( 28.9815, 72.7082, -40.1481, 0.15 ) }
    dend_31 { pt3dadd( 30.3026, 73.5548, -40.9211, 0.15 ) }
    dend_31 { pt3dadd( 30.7424, 73.8306, -41.1868, 0.88 ) }
    dend_31 { pt3dadd( 31.1356, 74.0732, -41.4301, 0.88 ) }
    dend_31 { pt3dadd( 32.27, 74.7845, -42.1462, 0.22 ) }
    dend_31 { pt3dadd( 32.6449, 75.0484, -42.406, 0.88 ) }
    dend_31 { pt3dadd( 33.0116, 75.3597, -42.6771, 1.11 ) }
    dend_31 { pt3dadd( 33.0458, 75.3893, -42.7061, 1.11 ) }
    dend_31 { pt3dadd( 33.2724, 75.6133, -42.8982, 1.11 ) }
    dend_31 { pt3dadd( 33.2997, 75.6428, -42.9221, 1.11 ) }
    dend_31 { pt3dadd( 34.6004, 77.203, -44.1233, 0.15 ) }
    dend_31 { pt3dadd( 34.6264, 77.2335, -44.1473, 0.15 ) }
    dend_31 { pt3dadd( 34.9, 77.542, -44.4058, 0.74 ) }
    dend_31 { pt3dadd( 35.2274, 77.9127, -44.7238, 0.74 ) }
    dend_31 { pt3dadd( 35.2532, 77.9418, -44.7498, 0.74 ) }
    dend_31 { pt3dadd( 35.8071, 78.6036, -45.328, 0.74 ) }
    dend_31 { pt3dadd( 35.8271, 78.6376, -45.3525, 0.74 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 68/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 10.1817, 19.5267, -3.07033, 1.4 ) }
    dend_30 { pt3dadd( 10.4114, 19.3279, -3.09657, 1.4 ) }
    dend_30 { pt3dadd( 11.7444, 18.1381, -3.11688, 1.4 ) }
    dend_30 { pt3dadd( 12.2746, 17.6092, -3.07592, 0.96 ) }
    dend_30 { pt3dadd( 13.0206, 16.7342, -2.9538, 0.96 ) }
    dend_30 { pt3dadd( 13.074, 16.6638, -2.95222, 0.96 ) }
    dend_30 { pt3dadd( 13.7319, 15.7367, -3.03005, 0.96 ) }
    dend_30 { pt3dadd( 14.1715, 15.0618, -3.10811, 0.96 ) }
    dend_30 { pt3dadd( 14.9391, 13.9158, -3.40557, 0.96 ) }
    dend_30 { pt3dadd( 15.8262, 12.6917, -3.92651, 0.96 ) }
    dend_30 { pt3dadd( 17.0932, 11.087, -4.79437, 1.25 ) }
    dend_30 { pt3dadd( 17.9677, 10.0728, -5.39965, 1.25 ) }
    dend_30 { pt3dadd( 18.5825, 9.42027, -5.83687, 1.25 ) }
    dend_30 { pt3dadd( 20.5264, 7.54197, -7.15319, 1.03 ) }
    dend_30 { pt3dadd( 21.7081, 6.52429, -7.8759, 1.03 ) }
    dend_30 { pt3dadd( 22.4834, 5.92491, -8.28291, 1.03 ) }
    dend_30 { pt3dadd( 23.3475, 5.31101, -8.6331, 1.25 ) }
    dend_30 { pt3dadd( 24.5852, 4.50198, -9.02478, 1.25 ) }
    dend_30 { pt3dadd( 25.4406, 3.95644, -9.30343, 1.25 ) }
    dend_30 { pt3dadd( 26.1529, 3.45764, -9.50196, 1.25 ) }
    dend_30 { pt3dadd( 26.2175, 3.40442, -9.53475, 1.25 ) }
    dend_30 { pt3dadd( 27.1183, 2.43352, -10.2922, 1.25 ) }
    dend_30 { pt3dadd( 27.6752, 1.58245, -11.0035, 0.88 ) }
    dend_30 { pt3dadd( 28.4373, 0.103577, -12.2583, 1.33 ) }
    dend_30 { pt3dadd( 28.757, -0.63713, -12.8988, 1.33 ) }
    dend_30 { pt3dadd( 29.4696, -2.44868, -14.4608, 1.03 ) }
    dend_30 { pt3dadd( 29.7849, -3.32088, -15.1785, 0.74 ) }
    dend_30 { pt3dadd( 30.1136, -4.184, -15.8607, 0.74 ) }
    dend_30 { pt3dadd( 30.6444, -5.18972, -16.6413, 0.74 ) }
    dend_30 { pt3dadd( 30.7026, -5.23182, -16.6741, 0.74 ) }
    dend_30 { pt3dadd( 31.379, -5.53073, -16.9528, 1.03 ) }
    dend_30 { pt3dadd( 31.5274, -5.58689, -17.0149, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_30 { pt3dadd( 33.1853, -6.1781, -17.8757, 1.03 ) }
    dend_30 { pt3dadd( 34.106, -6.49332, -18.3793, 1.25 ) }
    dend_30 { pt3dadd( 35.6476, -7.07081, -19.2804, 1.33 ) }
    dend_30 { pt3dadd( 37.4014, -7.79344, -20.3624, 1.33 ) }
    dend_30 { pt3dadd( 39.0318, -8.56585, -21.4632, 1.33 ) }
    dend_30 { pt3dadd( 40.0863, -9.12372, -22.2426, 1.33 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 6/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 10.1817, 19.5267, -3.07033, 1.55 ) }
    dend_27 { pt3dadd( 10.6614, 19.745, -2.95386, 1.55 ) }
    dend_27 { pt3dadd( 11.7635, 20.2465, -2.68628, 1.55 ) }
    dend_27 { pt3dadd( 13.4347, 21.007, -2.28051, 1.33 ) }
    dend_27 { pt3dadd( 14.6982, 21.582, -1.97371, 1.62 ) }
    dend_27 { pt3dadd( 16.0507, 22.1974, -1.64531, 1.84 ) }
    dend_27 { pt3dadd( 16.1196, 22.2288, -1.62859, 1.84 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 13/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 22.7544, -137.565, 8.33768, 0.22 ) }
    dend_21 { pt3dadd( 22.6013, -139.043, 6.47133, 0.22 ) }
    dend_21 { pt3dadd( 22.6008, -139.076, 6.43843, 0.22 ) }
    dend_21 { pt3dadd( 22.6401, -139.609, 6.01885, 0.22 ) }
    dend_21 { pt3dadd( 22.6714, -139.814, 5.89179, 0.22 ) }
    dend_21 { pt3dadd( 22.714, -140.03, 5.78371, 0.96 ) }
    dend_21 { pt3dadd( 22.8541, -140.646, 5.52323, 1.03 ) }
    dend_21 { pt3dadd( 22.9712, -141.021, 5.44657, 1.4 ) }
    dend_21 { pt3dadd( 23.1079, -141.442, 5.35398, 1.69 ) }
    dend_21 { pt3dadd( 23.2886, -141.982, 5.23219, 1.47 ) }
    dend_21 { pt3dadd( 23.4391, -142.437, 5.12892, 0.88 ) }
    dend_21 { pt3dadd( 23.6196, -143.025, 5.00977, 0.66 ) }
    dend_21 { pt3dadd( 23.9043, -143.995, 4.83825, 0.52 ) }
    dend_21 { pt3dadd( 23.9164, -144.039, 4.83082, 0.52 ) }
    dend_21 { pt3dadd( 24.0613, -144.609, 4.74071, 0.52 ) }
    dend_21 { pt3dadd( 24.3255, -145.743, 4.58106, 0.52 ) }
    dend_21 { pt3dadd( 24.5645, -146.866, 4.45001, 0.29 ) }
    dend_21 { pt3dadd( 24.6493, -147.299, 4.41328, 0.74 ) }
    dend_21 { pt3dadd( 24.7336, -147.778, 4.38779, 1.18 ) }
    dend_21 { pt3dadd( 24.8107, -148.251, 4.36907, 1.55 ) }
    dend_21 { pt3dadd( 24.8795, -148.821, 4.35929, 1.84 ) }
    dend_21 { pt3dadd( 24.9096, -149.297, 4.36577, 1.99 ) }
    dend_21 { pt3dadd( 24.9178, -149.751, 4.37475, 1.62 ) }
    dend_21 { pt3dadd( 24.9095, -150.418, 4.39245, 0.66 ) }
    dend_21 { pt3dadd( 24.8852, -151.09, 4.41378, 0.44 ) }
    dend_21 { pt3dadd( 24.84, -151.97, 4.44506, 0.37 ) }
    dend_21 { pt3dadd( 24.7754, -152.88, 4.47692, 0.29 ) }
    dend_21 { pt3dadd( 24.7367, -153.301, 4.49155, 0.29 ) }
    dend_21 { pt3dadd( 24.7084, -153.544, 4.49225, 0.44 ) }
    dend_21 { pt3dadd( 24.6756, -153.784, 4.4839, 0.44 ) }
    dend_21 { pt3dadd( 24.6268, -154.115, 4.44739, 0.81 ) }
    dend_21 { pt3dadd( 24.5878, -154.421, 4.38769, 0.81 ) }
    dend_21 { pt3dadd( 24.5427, -154.692, 4.32686, 0.81 ) }
    dend_21 { pt3dadd( 24.4288, -155.266, 4.20588, 0.59 ) }
    dend_21 { pt3dadd( 24.3433, -155.598, 4.14582, 0.52 ) }
    dend_21 { pt3dadd( 24.2023, -156.055, 4.079, 0.15 ) }
    dend_21 { pt3dadd( 24.0166, -156.594, 4.01891, 0.15 ) }
    dend_21 { pt3dadd( 23.6863, -157.461, 3.93325, 0.15 ) }
    dend_21 { pt3dadd( 23.5168, -157.878, 3.90253, 0.74 ) }
    dend_21 { pt3dadd( 23.3108, -158.425, 3.88241, 1.25 ) }
    dend_21 { pt3dadd( 23.183, -158.797, 3.86206, 1.47 ) }
    dend_21 { pt3dadd( 23.0994, -159.069, 3.84508, 1.33 ) }
    dend_21 { pt3dadd( 22.9501, -159.665, 3.79261, 0.22 ) }
    dend_21 { pt3dadd( 22.7986, -160.531, 3.69769, 0.22 ) }
    dend_21 { pt3dadd( 22.6661, -161.663, 3.5648, 0.22 ) }
    dend_21 { pt3dadd( 22.6466, -162.07, 3.51865, 0.74 ) }
    dend_21 { pt3dadd( 22.647, -162.404, 3.48436, 0.96 ) }
    dend_21 { pt3dadd( 22.669, -162.844, 3.44788, 0.96 ) }
    dend_21 { pt3dadd( 22.7133, -163.229, 3.4272, 0.81 ) }
    dend_21 { pt3dadd( 22.7668, -163.561, 3.41105, 0.22 ) }
    dend_21 { pt3dadd( 22.9223, -164.409, 3.3859, 0.22 ) }
    dend_21 { pt3dadd( 22.9674, -164.652, 3.38515, 1.03 ) }
    dend_21 { pt3dadd( 23.0623, -165.141, 3.39372, 1.55 ) }
    dend_21 { pt3dadd( 23.1385, -165.496, 3.40336, 1.92 ) }
    dend_21 { pt3dadd( 23.1914, -165.733, 3.41119, 1.92 ) }
    dend_21 { pt3dadd( 23.2818, -166.114, 3.42582, 1.92 ) }
    dend_21 { pt3dadd( 23.4592, -166.813, 3.45324, 0.22 ) }
    dend_21 { pt3dadd( 23.7739, -168.021, 3.49844, 0.22 ) }
    dend_21 { pt3dadd( 24.0929, -169.231, 3.54207, 0.22 ) }
    dend_21 { pt3dadd( 24.1042, -169.276, 3.54248, 0.22 ) }
    dend_21 { pt3dadd( 24.3194, -170.101, 3.53057, 0.22 ) }
    dend_21 { pt3dadd( 24.5363, -170.89, 3.50093, 2.21 ) }
    dend_21 { pt3dadd( 24.6972, -171.461, 3.46788, 2.73 ) }
    dend_21 { pt3dadd( 24.7751, -171.742, 3.44615, 2.73 ) }
    dend_21 { pt3dadd( 25.1222, -173.006, 3.35371, 0.22 ) }
    dend_21 { pt3dadd( 25.3338, -173.796, 3.30097, 0.22 ) }
    dend_21 { pt3dadd( 25.6217, -174.918, 3.233, 0.22 ) }
    dend_21 { pt3dadd( 25.8868, -176.001, 3.18003, 0.22 ) }
    dend_21 { pt3dadd( 25.897, -176.045, 3.18024, 0.22 ) }
    dend_21 { pt3dadd( 25.9981, -176.559, 3.21654, 0.22 ) }
    dend_21 { pt3dadd( 26.03, -176.768, 3.25019, 1.03 ) }
    dend_21 { pt3dadd( 26.0745, -177.292, 3.36558, 1.47 ) }
    dend_21 { pt3dadd( 26.0784, -177.519, 3.42715, 1.47 ) }
    dend_21 { pt3dadd( 26.0641, -178.398, 3.68029, 0.15 ) }
    dend_21 { pt3dadd( 26.037, -179.138, 3.88218, 0.15 ) }
    dend_21 { pt3dadd( 26.0091, -179.556, 3.99935, 0.15 ) }
    dend_21 { pt3dadd( 25.9939, -179.809, 4.06714, 0.74 ) }
    dend_21 { pt3dadd( 25.9838, -180.179, 4.14981, 0.74 ) }
    dend_21 { pt3dadd( 25.9981, -180.519, 4.20823, 0.88 ) }
    dend_21 { pt3dadd( 26.0263, -180.817, 4.25959, 0.88 ) }
    dend_21 { pt3dadd( 26.1075, -181.388, 4.37132, 0.15 ) }
    dend_21 { pt3dadd( 26.2508, -182.184, 4.53241, 0.15 ) }
    dend_21 { pt3dadd( 26.4979, -183.325, 4.76142, 0.15 ) }
    dend_21 { pt3dadd( 26.8343, -184.658, 5.02629, 0.15 ) }
    dend_21 { pt3dadd( 27.0201, -185.287, 5.16064, 0.88 ) }
    dend_21 { pt3dadd( 27.1705, -185.746, 5.26272, 1.18 ) }
    dend_21 { pt3dadd( 27.3135, -186.142, 5.34836, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_21 { pt3dadd( 27.4187, -186.44, 5.41365, 1.47 ) }
    dend_21 { pt3dadd( 27.5332, -186.779, 5.48458, 1.18 ) }
    dend_21 { pt3dadd( 27.6999, -187.374, 5.58221, 0.44 ) }
    dend_21 { pt3dadd( 27.7978, -187.786, 5.63269, 0.22 ) }
    dend_21 { pt3dadd( 27.9485, -188.544, 5.72113, 0.22 ) }
    dend_21 { pt3dadd( 28.1551, -189.712, 5.88078, 0.22 ) }
    dend_21 { pt3dadd( 28.1659, -189.775, 5.88977, 0.22 ) }
    dend_21 { pt3dadd( 28.3244, -190.665, 6.03, 0.22 ) }
    dend_21 { pt3dadd( 28.3702, -190.911, 6.06868, 0.52 ) }
    dend_21 { pt3dadd( 28.4822, -191.432, 6.15409, 0.52 ) }
    dend_21 { pt3dadd( 28.6329, -192.07, 6.26363, 1.25 ) }
    dend_21 { pt3dadd( 28.7543, -192.521, 6.33779, 1.84 ) }
    dend_21 { pt3dadd( 28.9212, -193.121, 6.41792, 2.21 ) }
    dend_21 { pt3dadd( 29.0523, -193.536, 6.45381, 1.99 ) }
    dend_21 { pt3dadd( 29.2984, -194.275, 6.49168, 0.52 ) }
    dend_21 { pt3dadd( 29.4372, -194.688, 6.50136, 0.52 ) }
    dend_21 { pt3dadd( 29.589, -195.145, 6.49139, 0.22 ) }
    dend_21 { pt3dadd( 29.8394, -195.909, 6.46171, 0.22 ) }
    dend_21 { pt3dadd( 30.2255, -197.089, 6.38018, 0.22 ) }
    dend_21 { pt3dadd( 30.3295, -197.384, 6.36258, 1.25 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 20/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 22.7544, -137.565, 8.33768, 0.52 ) }
    dend_20 { pt3dadd( 23.1682, -137.65, 8.5165, 0.52 ) }
    dend_20 { pt3dadd( 23.8576, -137.772, 8.8195, 0.52 ) }
    dend_20 { pt3dadd( 24.8069, -137.929, 9.23729, 0.52 ) }
    dend_20 { pt3dadd( 25.481, -138.046, 9.52362, 0.74 ) }
    dend_20 { pt3dadd( 26.1522, -138.165, 9.8043, 0.74 ) }
    dend_20 { pt3dadd( 26.9615, -138.322, 10.166, 0.44 ) }
    dend_20 { pt3dadd( 27.578, -138.447, 10.4562, 0.44 ) }
    dend_20 { pt3dadd( 27.6256, -138.458, 10.4792, 0.44 ) }
    dend_20 { pt3dadd( 28.0661, -138.615, 10.6778, 0.37 ) }
    dend_20 { pt3dadd( 28.1106, -138.635, 10.701, 0.37 ) }
    dend_20 { pt3dadd( 28.7369, -138.963, 10.9993, 0.59 ) }
    dend_20 { pt3dadd( 29.1881, -139.248, 11.162, 0.88 ) }
    dend_20 { pt3dadd( 29.3823, -139.389, 11.2274, 1.11 ) }
    dend_20 { pt3dadd( 29.7176, -139.652, 11.328, 1.25 ) }
    dend_20 { pt3dadd( 29.7581, -139.686, 11.3381, 1.25 ) }
    dend_20 { pt3dadd( 30.0999, -139.974, 11.4046, 1.25 ) }
    dend_20 { pt3dadd( 30.4938, -140.297, 11.4556, 0.88 ) }
    dend_20 { pt3dadd( 30.9224, -140.635, 11.5526, 0.59 ) }
    dend_20 { pt3dadd( 31.2283, -140.876, 11.6629, 0.52 ) }
    dend_20 { pt3dadd( 31.6788, -141.225, 11.8648, 0.29 ) }
    dend_20 { pt3dadd( 32.1186, -141.569, 12.0852, 0.29 ) }
    dend_20 { pt3dadd( 32.9846, -142.257, 12.5637, 0.29 ) }
    dend_20 { pt3dadd( 33.6494, -142.791, 13.0046, 1.11 ) }
    dend_20 { pt3dadd( 34.1941, -143.241, 13.4059, 1.47 ) }
    dend_20 { pt3dadd( 34.4849, -143.485, 13.6272, 1.84 ) }
    dend_20 { pt3dadd( 34.8845, -143.835, 13.9705, 1.99 ) }
    dend_20 { pt3dadd( 35.3118, -144.218, 14.3568, 1.47 ) }
    dend_20 { pt3dadd( 35.9833, -144.846, 14.9781, 0.88 ) }
    dend_20 { pt3dadd( 36.345, -145.164, 15.269, 0.88 ) }
    dend_20 { pt3dadd( 36.836, -145.564, 15.6353, 0.88 ) }
    dend_20 { pt3dadd( 37.5537, -146.075, 16.2092, 0.29 ) }
    dend_20 { pt3dadd( 37.8894, -146.278, 16.4868, 0.29 ) }
    dend_20 { pt3dadd( 37.9325, -146.299, 16.5256, 0.29 ) }
    dend_20 { pt3dadd( 38.3793, -146.476, 16.9275, 0.29 ) }
    dend_20 { pt3dadd( 38.4175, -146.489, 16.9636, 0.29 ) }
    dend_20 { pt3dadd( 39.2287, -146.754, 17.7229, 0.29 ) }
    dend_20 { pt3dadd( 39.3161, -146.784, 17.7934, 0.29 ) }
    dend_20 { pt3dadd( 40.0537, -147.079, 18.393, 0.44 ) }
    dend_20 { pt3dadd( 40.4592, -147.253, 18.7006, 1.03 ) }
    dend_20 { pt3dadd( 40.8029, -147.422, 18.9416, 1.33 ) }
    dend_20 { pt3dadd( 41.1527, -147.607, 19.1519, 1.33 ) }
    dend_20 { pt3dadd( 41.6521, -147.899, 19.388, 0.88 ) }
    dend_20 { pt3dadd( 42.2749, -148.281, 19.6417, 0.29 ) }
    dend_20 { pt3dadd( 42.7357, -148.581, 19.7852, 0.22 ) }
    dend_20 { pt3dadd( 43.0854, -148.839, 19.8934, 0.22 ) }
    dend_20 { pt3dadd( 43.3252, -149.034, 19.965, 0.44 ) }
    dend_20 { pt3dadd( 43.5252, -149.217, 20.0181, 0.66 ) }
    dend_20 { pt3dadd( 43.7778, -149.463, 20.0681, 0.66 ) }
    dend_20 { pt3dadd( 44.0444, -149.726, 20.0975, 0.66 ) }
    dend_20 { pt3dadd( 44.4544, -150.118, 20.143, 0.29 ) }
    dend_20 { pt3dadd( 44.499, -150.157, 20.1574, 0.29 ) }
    dend_20 { pt3dadd( 44.8039, -150.422, 20.3255, 0.22 ) }
    dend_20 { pt3dadd( 45.2262, -150.792, 20.6289, 0.22 ) }
    dend_20 { pt3dadd( 45.2943, -150.852, 20.6859, 0.22 ) }
    dend_20 { pt3dadd( 45.7528, -151.256, 21.0965, 0.22 ) }
    dend_20 { pt3dadd( 46.5655, -151.996, 21.8162, 1.18 ) }
    dend_20 { pt3dadd( 46.9669, -152.382, 22.1691, 1.62 ) }
    dend_20 { pt3dadd( 47.0665, -152.484, 22.2637, 1.84 ) }
    dend_20 { pt3dadd( 47.2663, -152.709, 22.466, 1.84 ) }
    dend_20 { pt3dadd( 47.5803, -153.057, 22.7505, 1.55 ) }
    dend_20 { pt3dadd( 48.0221, -153.549, 23.0996, 0.44 ) }
    dend_20 { pt3dadd( 48.0562, -153.584, 23.1204, 0.44 ) }
    dend_20 { pt3dadd( 48.5634, -154.085, 23.4345, 0.44 ) }
    dend_20 { pt3dadd( 48.5985, -154.12, 23.4543, 0.44 ) }
    dend_20 { pt3dadd( 49.4021, -154.929, 23.8777, 0.29 ) }
    dend_20 { pt3dadd( 50.1478, -155.684, 24.2341, 0.29 ) }
    dend_20 { pt3dadd( 50.6925, -156.241, 24.4598, 0.22 ) }
    dend_20 { pt3dadd( 50.7586, -156.31, 24.4821, 0.22 ) }
    dend_20 { pt3dadd( 51.3682, -156.977, 24.6177, 0.22 ) }
    dend_20 { pt3dadd( 51.6017, -157.262, 24.654, 0.66 ) }
    dend_20 { pt3dadd( 51.8107, -157.551, 24.6677, 0.96 ) }
    dend_20 { pt3dadd( 51.9838, -157.815, 24.6687, 0.52 ) }
    dend_20 { pt3dadd( 52.1376, -158.075, 24.6752, 0.29 ) }
    dend_20 { pt3dadd( 52.452, -158.648, 24.7442, 0.29 ) }
    dend_20 { pt3dadd( 52.7823, -159.34, 24.8785, 0.29 ) }
    dend_20 { pt3dadd( 52.8895, -159.595, 24.9276, 0.59 ) }
    dend_20 { pt3dadd( 53.0578, -160.07, 25.0118, 0.59 ) }
    dend_20 { pt3dadd( 53.1905, -160.487, 25.0825, 0.59 ) }
    dend_20 { pt3dadd( 53.4722, -161.541, 25.2456, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_20 { pt3dadd( 53.705, -162.619, 25.4003, 0.15 ) }
    dend_20 { pt3dadd( 53.8426, -163.416, 25.503, 0.15 ) }
    dend_20 { pt3dadd( 53.9428, -164.213, 25.5865, 0.15 ) }
    dend_20 { pt3dadd( 53.9452, -164.271, 25.5909, 0.15 ) }
    dend_20 { pt3dadd( 53.8812, -164.848, 25.5991, 0.15 ) }
    dend_20 { pt3dadd( 53.8418, -164.964, 25.6017, 0.44 ) }
    dend_20 { pt3dadd( 53.8191, -165.011, 25.605, 0.44 ) }
    dend_20 { pt3dadd( 53.7658, -165.109, 25.6152, 0.44 ) }
    dend_20 { pt3dadd( 53.3487, -165.86, 25.7097, 0.22 ) }
    dend_20 { pt3dadd( 52.7595, -167.113, 25.8235, 0.22 ) }
    dend_20 { pt3dadd( 52.2661, -168.613, 25.9163, 0.22 ) }
    dend_20 { pt3dadd( 52.2599, -168.664, 25.9186, 0.22 ) }
    dend_20 { pt3dadd( 52.2642, -168.937, 25.9276, 1.03 ) }
    dend_20 { pt3dadd( 52.3336, -169.247, 25.931, 1.33 ) }
    dend_20 { pt3dadd( 52.9568, -170.509, 25.9269, 0.22 ) }
    dend_20 { pt3dadd( 53.7618, -171.656, 25.903, 0.22 ) }
    dend_20 { pt3dadd( 54.9306, -173.032, 25.8454, 0.22 ) }
    dend_20 { pt3dadd( 54.9656, -173.072, 25.8439, 0.22 ) }
    dend_20 { pt3dadd( 56.0226, -174.18, 25.8152, 0.22 ) }
    dend_20 { pt3dadd( 57.0463, -175.148, 25.8101, 0.22 ) }
    dend_20 { pt3dadd( 57.0882, -175.181, 25.8118, 0.22 ) }
    dend_20 { pt3dadd( 57.4923, -175.445, 25.8243, 1.47 ) }
    dend_20 { pt3dadd( 62.6945, -180.69, 27.4799, 1.47 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 23/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -14.8667, -28.1001, 30.6308, 0.22 ) }
    dend_18 { pt3dadd( -15.4029, -28.9662, 30.3509, 0.22 ) }
    dend_18 { pt3dadd( -16.0974, -30.2301, 30.0226, 0.22 ) }
    dend_18 { pt3dadd( -16.1982, -30.4136, 29.9749, 0.22 ) }
    dend_18 { pt3dadd( -16.6201, -31.1815, 29.7755, 0.22 ) }
    dend_18 { pt3dadd( -16.6675, -31.2678, 29.753, 0.22 ) }
    dend_18 { pt3dadd( -16.8254, -31.5551, 29.6784, 0.44 ) }
    dend_18 { pt3dadd( -17.1519, -32.3094, 29.5128, 0.44 ) }
    dend_18 { pt3dadd( -24.53, -42.5198, 28.0716, 0.44 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 32/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -14.8667, -28.1001, 30.6308, 0.29 ) }
    dend_17 { pt3dadd( -14.2702, -27.713, 30.6155, 0.29 ) }
    dend_17 { pt3dadd( -13.2728, -27.0656, 30.5897, 0.29 ) }
    dend_17 { pt3dadd( -13.1909, -27.0124, 30.5876, 0.29 ) }
    dend_17 { pt3dadd( -12.3143, -26.4435, 30.565, 0.29 ) }
    dend_17 { pt3dadd( -12.0065, -26.2437, 30.5571, 0.66 ) }
    dend_17 { pt3dadd( -11.4545, -25.8854, 30.5429, 0.66 ) }
    dend_17 { pt3dadd( -2.71982, -21.2619, 31.259, 0.66 ) }
    dend_17 { pt3dadd( 5.49462, -15.8084, 31.1019, 0.66 ) }
    dend_17 { pt3dadd( 12.5101, -9.15662, 29.5919, 0.66 ) }
    dend_17 { pt3dadd( 20.8442, -3.90618, 28.8893, 0.66 ) }
    dend_17 { pt3dadd( 27.395, 2.98124, 26.6232, 0.66 ) }
    dend_17 { pt3dadd( 34.2918, 9.05999, 23.131, 0.66 ) }
    dend_17 { pt3dadd( 41.5777, 15.1597, 20.6229, 0.66 ) }
    dend_17 { pt3dadd( 49.6055, 20.7457, 19.4034, 0.66 ) }
    // Section: dend_13, id: dend_13, parent: dend_5 (entry count 47/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -4.902, -24.4264, 0.746426, 1.18 ) }
    dend_13 { pt3dadd( -4.42111, -25.0924, 0.957431, 1.18 ) }
    dend_13 { pt3dadd( -3.85104, -25.907, 1.22482, 0.66 ) }
    dend_13 { pt3dadd( -3.49452, -26.4295, 1.39375, 0.66 ) }
    dend_13 { pt3dadd( -3.3147, -26.6981, 1.47944, 0.81 ) }
    dend_13 { pt3dadd( -2.96525, -27.2274, 1.64337, 0.74 ) }
    dend_13 { pt3dadd( -2.41303, -28.0749, 1.89965, 0.74 ) }
    dend_13 { pt3dadd( -2.38933, -28.1138, 1.91313, 0.74 ) }
    dend_13 { pt3dadd( -2.22446, -28.3778, 2.01751, 0.96 ) }
    dend_13 { pt3dadd( -2.19567, -28.4211, 2.03352, 0.96 ) }
    dend_13 { pt3dadd( -2.03085, -28.6443, 2.1087, 0.96 ) }
    dend_13 { pt3dadd( -1.99814, -28.6859, 2.12186, 0.96 ) }
    dend_13 { pt3dadd( -1.35311, -29.4726, 2.36529, 0.74 ) }
    dend_13 { pt3dadd( -1.32865, -29.504, 2.37442, 0.74 ) }
    dend_13 { pt3dadd( -0.95715, -29.9951, 2.51188, 0.74 ) }
    dend_13 { pt3dadd( -0.354576, -30.8492, 2.74911, 0.88 ) }
    dend_13 { pt3dadd( -0.214555, -31.068, 2.80374, 0.88 ) }
    dend_13 { pt3dadd( -0.195047, -31.1028, 2.81098, 0.88 ) }
    dend_13 { pt3dadd( 0.0553861, -31.6367, 2.89183, 0.66 ) }
    dend_13 { pt3dadd( 0.0727291, -31.6801, 2.89769, 0.66 ) }
    dend_13 { pt3dadd( 0.337525, -32.4911, 3.00666, 0.52 ) }
    dend_13 { pt3dadd( 0.528903, -33.2124, 3.08975, 0.52 ) }
    dend_13 { pt3dadd( 0.632987, -33.6336, 3.12709, 0.88 ) }
    dend_13 { pt3dadd( 0.735958, -34.0867, 3.16038, 1.11 ) }
    dend_13 { pt3dadd( 0.888027, -34.8107, 3.23212, 1.11 ) }
    dend_13 { pt3dadd( 0.975518, -35.2688, 3.28355, 0.52 ) }
    dend_13 { pt3dadd( 1.13613, -36.2797, 3.38197, 0.52 ) }
    dend_13 { pt3dadd( 1.24468, -37.0205, 3.42705, 0.52 ) }
    dend_13 { pt3dadd( 1.31495, -37.5032, 3.44181, 0.88 ) }
    dend_13 { pt3dadd( 1.41204, -38.1718, 3.45772, 1.03 ) }
    dend_13 { pt3dadd( 1.58898, -39.3091, 3.47129, 0.81 ) }
    dend_13 { pt3dadd( 1.79723, -40.4328, 3.5265, 0.66 ) }
    dend_13 { pt3dadd( 1.9997, -41.4264, 3.60364, 0.52 ) }
    dend_13 { pt3dadd( 2.15763, -42.1428, 3.67088, 0.52 ) }
    dend_13 { pt3dadd( 2.58655, -43.8517, 3.93481, 0.52 ) }
    dend_13 { pt3dadd( 2.68403, -44.2036, 4.00565, 0.52 ) }
    dend_13 { pt3dadd( 3.1677, -45.7686, 4.44472, 0.44 ) }
    dend_13 { pt3dadd( 3.48693, -46.698, 4.78464, 1.62 ) }
    dend_13 { pt3dadd( 3.64503, -47.1244, 4.96704, 1.99 ) }
    dend_13 { pt3dadd( 4.12276, -48.367, 5.4849, 1.25 ) }
    dend_13 { pt3dadd( 4.22735, -48.6457, 5.58392, 0.29 ) }
    dend_13 { pt3dadd( 4.42024, -49.21, 5.7439, 0.29 ) }
    dend_13 { pt3dadd( 4.43535, -49.2608, 5.75271, 0.29 ) }
    dend_13 { pt3dadd( 4.67874, -50.1422, 5.86121, 0.29 ) }
    dend_13 { pt3dadd( 4.97728, -51.435, 6.00687, 0.29 ) }
    dend_13 { pt3dadd( 5.17318, -52.5973, 6.20002, 0.29 ) }
    dend_13 { pt3dadd( 5.18783, -52.7057, 6.22571, 1.47 ) }
    dend_13 { pt3dadd( 5.26293, -53.3657, 6.4155, 1.92 ) }
    dend_13 { pt3dadd( 5.28288, -53.5552, 6.47709, 1.92 ) }
    dend_13 { pt3dadd( 5.38303, -54.5899, 6.88465, 0.37 ) }
    dend_13 { pt3dadd( 5.69325, -56.9503, 7.94151, 0.29 ) }
    dend_13 { pt3dadd( 5.7644, -57.392, 8.15254, 1.4 ) }
    dend_13 { pt3dadd( 5.80842, -57.6295, 8.27248, 1.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_13 { pt3dadd( 5.88469, -57.976, 8.44929, 1.62 ) }
    dend_13 { pt3dadd( 6.10583, -58.8145, 8.87787, 0.29 ) }
    dend_13 { pt3dadd( 6.33784, -59.4852, 9.1982, 0.29 ) }
    dend_13 { pt3dadd( 6.35789, -59.5305, 9.22022, 0.29 ) }
    dend_13 { pt3dadd( 6.78195, -60.4713, 9.75945, 0.29 ) }
    dend_13 { pt3dadd( 7.07156, -61.1228, 10.1332, 0.29 ) }
    dend_13 { pt3dadd( 7.3436, -61.7537, 10.4862, 1.47 ) }
    dend_13 { pt3dadd( 7.54949, -62.2479, 10.748, 1.77 ) }
    dend_13 { pt3dadd( 7.66409, -62.5433, 10.896, 1.77 ) }
    dend_13 { pt3dadd( 8.07366, -63.6028, 11.3747, 0.22 ) }
    dend_13 { pt3dadd( 8.52208, -64.7479, 11.8233, 0.22 ) }
    dend_13 { pt3dadd( 8.65937, -65.135, 11.9667, 0.22 ) }
    dend_13 { pt3dadd( 8.7142, -65.3211, 12.0224, 0.81 ) }
    dend_13 { pt3dadd( 8.85527, -65.8359, 12.1404, 1.03 ) }
    dend_13 { pt3dadd( 8.91714, -66.0735, 12.1759, 1.03 ) }
    dend_13 { pt3dadd( 8.92924, -66.1188, 12.1781, 1.03 ) }
    dend_13 { pt3dadd( 8.99194, -66.3561, 12.19, 0.15 ) }
    dend_13 { pt3dadd( 9.23641, -67.2269, 12.2292, 0.15 ) }
    dend_13 { pt3dadd( 9.62377, -68.4826, 12.3176, 0.15 ) }
    dend_13 { pt3dadd( 9.73449, -68.8204, 12.3485, 1.25 ) }
    dend_13 { pt3dadd( 9.8868, -69.283, 12.3907, 1.62 ) }
    dend_13 { pt3dadd( 9.91825, -69.3783, 12.3994, 1.62 ) }
    dend_13 { pt3dadd( 9.94955, -69.4736, 12.408, 1.62 ) }
    dend_13 { pt3dadd( 10.1695, -70.1725, 12.4678, 0.22 ) }
    dend_13 { pt3dadd( 10.396, -70.9982, 12.5617, 0.22 ) }
    dend_13 { pt3dadd( 10.8158, -72.5951, 12.7634, 0.22 ) }
    dend_13 { pt3dadd( 10.8267, -72.6403, 12.7694, 0.22 ) }
    dend_13 { pt3dadd( 10.8829, -72.8775, 12.8003, 0.74 ) }
    dend_13 { pt3dadd( 11.0055, -73.4115, 12.8663, 0.74 ) }
    dend_13 { pt3dadd( 11.1819, -74.2591, 12.956, 0.15 ) }
    dend_13 { pt3dadd( 11.1915, -74.3047, 12.9612, 0.15 ) }
    dend_13 { pt3dadd( 11.2833, -74.6631, 13.003, 0.44 ) }
    dend_13 { pt3dadd( 11.3672, -74.9498, 13.0294, 0.44 ) }
    dend_13 { pt3dadd( 11.4765, -75.2884, 13.0557, 0.15 ) }
    dend_13 { pt3dadd( 11.6258, -75.708, 13.0734, 0.15 ) }
    dend_13 { pt3dadd( 11.7485, -76.0185, 13.063, 1.18 ) }
    dend_13 { pt3dadd( 11.9694, -76.5709, 13.0434, 1.62 ) }
    dend_13 { pt3dadd( 12.0266, -76.7073, 13.0379, 1.62 ) }
    dend_13 { pt3dadd( 14.9945, -82.7465, 13.4815, 1.62 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 39/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -4.902, -24.4264, 0.746426, 1.77 ) }
    dend_6 { pt3dadd( -5.20686, -25.2671, 0.457573, 1.77 ) }
    dend_6 { pt3dadd( -5.54288, -26.2883, 0.111651, 1.77 ) }
    dend_6 { pt3dadd( -5.89536, -27.4075, -0.248709, 1.69 ) }
    dend_6 { pt3dadd( -6.28902, -28.6934, -0.635059, 1.55 ) }
    dend_6 { pt3dadd( -6.70543, -30.1118, -1.03365, 1.55 ) }
    dend_6 { pt3dadd( -7.11817, -31.5534, -1.41982, 1.33 ) }
    dend_6 { pt3dadd( -7.36395, -32.4932, -1.65496, 1.47 ) }
    dend_6 { pt3dadd( -7.59656, -33.4269, -1.87028, 2.06 ) }
    dend_6 { pt3dadd( -7.81929, -34.3935, -2.07077, 2.36 ) }
    dend_6 { pt3dadd( -7.92923, -34.9177, -2.17036, 2.28 ) }
    dend_6 { pt3dadd( -7.98066, -35.152, -2.20002, 2.28 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 51/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -30.2515, 14.7083, 2.32749, 1.03 ) }
    dend_4 { pt3dadd( -30.2847, 14.7432, 2.34607, 1.03 ) }
    dend_4 { pt3dadd( -30.8583, 15.3282, 2.63425, 0.88 ) }
    dend_4 { pt3dadd( -31.4014, 15.866, 2.87615, 0.88 ) }
    dend_4 { pt3dadd( -31.9351, 16.3815, 3.09681, 0.88 ) }
    dend_4 { pt3dadd( -33.0171, 17.3902, 3.4971, 0.88 ) }
    dend_4 { pt3dadd( -33.642, 17.9646, 3.70776, 0.96 ) }
    dend_4 { pt3dadd( -34.1017, 18.3747, 3.84037, 0.66 ) }
    dend_4 { pt3dadd( -34.5498, 18.7518, 3.95814, 0.59 ) }
    dend_4 { pt3dadd( -34.6419, 18.8274, 3.98151, 0.59 ) }
    dend_4 { pt3dadd( -35.2893, 19.3706, 4.12508, 0.59 ) }
    dend_4 { pt3dadd( -35.6602, 19.7106, 4.19916, 0.59 ) }
    dend_4 { pt3dadd( -35.9896, 20.0766, 4.28573, 0.88 ) }
    dend_4 { pt3dadd( -36.4349, 20.6834, 4.42605, 1.03 ) }
    dend_4 { pt3dadd( -36.7516, 21.1839, 4.5393, 1.11 ) }
    dend_4 { pt3dadd( -36.9475, 21.5507, 4.61332, 1.11 ) }
    dend_4 { pt3dadd( -37.1741, 22.0757, 4.70243, 0.66 ) }
    dend_4 { pt3dadd( -37.6194, 23.2145, 4.85956, 0.66 ) }
    dend_4 { pt3dadd( -37.8161, 23.7807, 4.91688, 0.96 ) }
    dend_4 { pt3dadd( -37.8323, 23.8333, 4.92033, 0.96 ) }
    dend_4 { pt3dadd( -38.091, 24.746, 4.97693, 0.96 ) }
    dend_4 { pt3dadd( -38.3728, 25.7872, 5.03771, 0.96 ) }
    dend_4 { pt3dadd( -38.4913, 26.2685, 5.06382, 0.74 ) }
    dend_4 { pt3dadd( -38.7512, 27.4112, 5.12653, 0.52 ) }
    dend_4 { pt3dadd( -38.8634, 27.9737, 5.15791, 0.52 ) }
    dend_4 { pt3dadd( -39.1092, 29.4721, 5.24328, 0.52 ) }
    dend_4 { pt3dadd( -39.117, 29.5344, 5.2469, 0.52 ) }
    dend_4 { pt3dadd( -39.1771, 30.2791, 5.29137, 0.52 ) }
    dend_4 { pt3dadd( -39.19, 30.6824, 5.31723, 1.11 ) }
    dend_4 { pt3dadd( -39.177, 31.2568, 5.35915, 1.47 ) }
    dend_4 { pt3dadd( -39.1366, 31.8389, 5.40677, 1.33 ) }
    dend_4 { pt3dadd( -39.1292, 31.9011, 5.41241, 1.33 ) }
    dend_4 { pt3dadd( -39.0732, 32.4067, 5.45922, 1.33 ) }
    dend_4 { pt3dadd( -39.0201, 32.8804, 5.50461, 0.88 ) }
    dend_4 { pt3dadd( -38.9739, 33.3088, 5.54574, 0.88 ) }
    dend_4 { pt3dadd( -38.9165, 33.9429, 5.60539, 0.52 ) }
    dend_4 { pt3dadd( -38.8742, 34.516, 5.65765, 0.52 ) }
    dend_4 { pt3dadd( -38.8408, 35.0888, 5.7094, 0.96 ) }
    dend_4 { pt3dadd( -38.8388, 35.1435, 5.71441, 0.96 ) }
    dend_4 { pt3dadd( -38.8326, 35.66, 5.75768, 1.11 ) }
    dend_4 { pt3dadd( -38.8366, 36.1687, 5.80053, 1.11 ) }
    dend_4 { pt3dadd( -38.8362, 36.2313, 5.80631, 1.11 ) }
    dend_4 { pt3dadd( -38.8268, 36.5217, 5.83475, 0.81 ) }
    dend_4 { pt3dadd( -38.8082, 36.8683, 5.86909, 0.66 ) }
    dend_4 { pt3dadd( -38.778, 37.3886, 5.91878, 0.66 ) }
    dend_4 { pt3dadd( -38.7743, 37.4354, 5.92301, 0.66 ) }
    dend_4 { pt3dadd( -38.729, 37.9025, 5.96026, 0.88 ) }
    dend_4 { pt3dadd( -38.7164, 38.3647, 5.99088, 0.88 ) }
    dend_4 { pt3dadd( -38.7307, 38.8225, 6.0187, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_4 { pt3dadd( -38.7654, 39.339, 6.04909, 0.44 ) }
    dend_4 { pt3dadd( -38.8413, 40.1519, 6.09758, 0.22 ) }
    dend_4 { pt3dadd( -38.8696, 40.3909, 6.11127, 0.22 ) }
    dend_4 { pt3dadd( -39.1007, 41.9748, 6.20214, 0.22 ) }
    dend_4 { pt3dadd( -39.178, 42.4353, 6.22877, 0.22 ) }
    dend_4 { pt3dadd( -39.3075, 43.1172, 6.26857, 0.22 ) }
    dend_4 { pt3dadd( -39.3595, 43.3392, 6.28154, 0.59 ) }
    dend_4 { pt3dadd( -39.3908, 43.4531, 6.28826, 0.59 ) }
    dend_4 { pt3dadd( -39.5107, 43.8933, 6.31511, 0.74 ) }
    dend_4 { pt3dadd( -39.6619, 44.5244, 6.31432, 1.25 ) }
    dend_4 { pt3dadd( -39.8067, 45.1471, 6.28752, 1.99 ) }
    dend_4 { pt3dadd( -39.9659, 45.8248, 6.24096, 2.43 ) }
    dend_4 { pt3dadd( -40.0246, 46.1164, 6.22076, 2.43 ) }
    dend_4 { pt3dadd( -40.1396, 46.7903, 6.18174, 2.28 ) }
    dend_4 { pt3dadd( -40.3181, 47.8743, 6.12604, 0.74 ) }
    dend_4 { pt3dadd( -40.3279, 47.9364, 6.12417, 0.74 ) }
    dend_4 { pt3dadd( -40.439, 48.6834, 6.11672, 0.66 ) }
    dend_4 { pt3dadd( -40.6281, 50.1031, 6.13307, 0.66 ) }
    dend_4 { pt3dadd( -40.8118, 51.4218, 6.17503, 0.66 ) }
    dend_4 { pt3dadd( -40.8882, 51.9322, 6.20483, 0.66 ) }
    dend_4 { pt3dadd( -41.0131, 52.7219, 6.31236, 0.66 ) }
    dend_4 { pt3dadd( -41.0994, 53.2217, 6.39885, 1.11 ) }
    dend_4 { pt3dadd( -41.2356, 53.943, 6.54283, 1.11 ) }
    dend_4 { pt3dadd( -41.248, 54.0034, 6.55567, 1.11 ) }
    dend_4 { pt3dadd( -41.3599, 54.5648, 6.67864, 0.96 ) }
    dend_4 { pt3dadd( -41.5365, 55.5109, 6.8714, 0.22 ) }
    dend_4 { pt3dadd( -42.092, 58.4544, 7.427, 0.15 ) }
    dend_4 { pt3dadd( -42.2037, 59.035, 7.53038, 2.06 ) }
    dend_4 { pt3dadd( -42.4143, 60.1196, 7.7101, 2.73 ) }
    dend_4 { pt3dadd( -42.5885, 61.0349, 7.84674, 0.22 ) }
    dend_4 { pt3dadd( -42.9049, 62.7313, 8.05576, 0.22 ) }
    dend_4 { pt3dadd( -43.0028, 63.2914, 8.09919, 0.66 ) }
    dend_4 { pt3dadd( -43.0959, 63.8685, 8.14124, 1.03 ) }
    dend_4 { pt3dadd( -43.1559, 64.2683, 8.1626, 0.88 ) }
    dend_4 { pt3dadd( -43.2129, 64.6688, 8.17555, 0.52 ) }
    dend_4 { pt3dadd( -43.2466, 64.9164, 8.17803, 0.15 ) }
    dend_4 { pt3dadd( -43.3946, 66.1749, 8.1805, 0.15 ) }
    dend_4 { pt3dadd( -43.513, 67.2846, 8.1898, 0.15 ) }
    dend_4 { pt3dadd( -43.6006, 68.0003, 8.20482, 1.33 ) }
    dend_4 { pt3dadd( -43.6868, 68.6254, 8.24295, 2.21 ) }
    dend_4 { pt3dadd( -43.7549, 69.0821, 8.28701, 2.21 ) }
    dend_4 { pt3dadd( -43.8184, 69.4743, 8.34334, 2.21 ) }
    dend_4 { pt3dadd( -43.962, 70.2759, 8.49127, 0.15 ) }
    dend_4 { pt3dadd( -44.3691, 72.2511, 8.95874, 0.15 ) }
    dend_4 { pt3dadd( -44.542, 73.0038, 9.16913, 0.15 ) }
    dend_4 { pt3dadd( -44.6957, 73.6014, 9.35026, 1.69 ) }
    dend_4 { pt3dadd( -44.8659, 74.2422, 9.53657, 2.06 ) }
    dend_4 { pt3dadd( -45.0213, 74.7976, 9.71074, 2.06 ) }
    dend_4 { pt3dadd( -45.1915, 75.4074, 9.90989, 1.69 ) }
    dend_4 { pt3dadd( -45.2056, 75.4582, 9.92648, 1.69 ) }
    dend_4 { pt3dadd( -45.3774, 76.1108, 10.1117, 0.15 ) }
    dend_4 { pt3dadd( -45.8678, 78.1981, 10.6258, 0.15 ) }
    dend_4 { pt3dadd( -46.0191, 78.9301, 10.7694, 0.81 ) }
    dend_4 { pt3dadd( -46.1017, 79.376, 10.8456, 1.18 ) }
    dend_4 { pt3dadd( -46.1978, 79.962, 10.9301, 0.88 ) }
    dend_4 { pt3dadd( -46.2688, 80.4198, 10.9911, 0.15 ) }
    dend_4 { pt3dadd( -46.468, 81.9001, 11.1661, 0.15 ) }
    dend_4 { pt3dadd( -46.6095, 83.5888, 11.3158, 0.15 ) }
    dend_4 { pt3dadd( -46.6242, 83.876, 11.3332, 0.81 ) }
    dend_4 { pt3dadd( -46.6344, 84.2758, 11.3569, 0.96 ) }
    dend_4 { pt3dadd( -46.6323, 84.5173, 11.3711, 0.96 ) }
    dend_4 { pt3dadd( -46.6126, 85.0296, 11.4006, 0.22 ) }
    dend_4 { pt3dadd( -46.4135, 87.2297, 11.526, 0.22 ) }
    dend_4 { pt3dadd( -46.4051, 87.292, 11.5295, 0.22 ) }
    dend_4 { pt3dadd( -46.3397, 87.7679, 11.5497, 0.96 ) }
    dend_4 { pt3dadd( -46.3002, 88.0534, 11.5593, 1.25 ) }
    dend_4 { pt3dadd( -46.2602, 88.3414, 11.5672, 1.25 ) }
    dend_4 { pt3dadd( -46.1973, 88.7929, 11.5754, 0.81 ) }
    dend_4 { pt3dadd( -46.0988, 89.4246, 11.606, 0.15 ) }
    dend_4 { pt3dadd( -45.786, 91.1941, 11.7529, 0.15 ) }
    dend_4 { pt3dadd( -45.6616, 91.7657, 11.7961, 1.99 ) }
    dend_4 { pt3dadd( -45.5271, 92.3024, 11.8332, 2.95 ) }
    dend_4 { pt3dadd( -45.5124, 92.3554, 11.8367, 2.95 ) }
    dend_4 { pt3dadd( -45.2689, 93.1302, 11.8413, 2.95 ) }
    dend_4 { pt3dadd( -44.9628, 94.0749, 11.7944, 0.22 ) }
    dend_4 { pt3dadd( -44.5311, 95.4555, 11.6714, 0.22 ) }
    dend_4 { pt3dadd( -44.3918, 95.9598, 11.6135, 1.25 ) }
    dend_4 { pt3dadd( -44.2783, 96.4105, 11.5437, 1.69 ) }
    dend_4 { pt3dadd( -44.0267, 97.4878, 11.3427, 0.15 ) }
    dend_4 { pt3dadd( -43.6985, 99.0402, 10.9996, 0.15 ) }
    dend_4 { pt3dadd( -43.5057, 100.043, 10.7821, 0.15 ) }
    dend_4 { pt3dadd( -43.353, 101.073, 10.7273, 2.14 ) }
    dend_4 { pt3dadd( -43.2926, 101.525, 10.7755, 2.14 ) }
    dend_4 { pt3dadd( -43.2825, 101.61, 10.8001, 2.14 ) }
    dend_4 { pt3dadd( -43.2011, 102.409, 11.2078, 0.15 ) }
    dend_4 { pt3dadd( -43.1636, 102.79, 11.4809, 0.15 ) }
    dend_4 { pt3dadd( -42.9555, 104.933, 13.2422, 0.15 ) }
    dend_4 { pt3dadd( -42.9258, 105.277, 13.5208, 0.88 ) }
    dend_4 { pt3dadd( -42.8942, 105.662, 13.7826, 1.03 ) }
    dend_4 { pt3dadd( -42.8905, 105.709, 13.8114, 1.03 ) }
    dend_4 { pt3dadd( -42.8566, 106.172, 14.0503, 0.29 ) }
    dend_4 { pt3dadd( -42.7926, 106.881, 14.3152, 0.15 ) }
    dend_4 { pt3dadd( -42.6814, 107.834, 14.4846, 0.15 ) }
    dend_4 { pt3dadd( -42.4901, 108.966, 14.6669, 0.15 ) }
    dend_4 { pt3dadd( -42.3679, 109.493, 14.7461, 0.74 ) }
    dend_4 { pt3dadd( -42.2233, 109.988, 14.8162, 0.74 ) }
    dend_4 { pt3dadd( -42.1373, 110.225, 14.848, 0.15 ) }
    dend_4 { pt3dadd( -41.6734, 111.303, 14.9709, 0.15 ) }
    dend_4 { pt3dadd( -40.6524, 112.82, 15.1307, 0.15 ) }
    dend_4 { pt3dadd( -39.994, 113.559, 15.2032, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_4 { pt3dadd( -39.6055, 113.944, 15.2443, 1.77 ) }
    dend_4 { pt3dadd( -39.1742, 114.332, 15.2926, 2.28 ) }
    dend_4 { pt3dadd( -38.8993, 114.564, 15.3238, 2.14 ) }
    dend_4 { pt3dadd( -35.2644, 117.341, 15.7453, 0.15 ) }
    dend_4 { pt3dadd( -33.5874, 118.513, 15.9512, 0.15 ) }
    dend_4 { pt3dadd( -33.2007, 118.773, 15.9991, 0.59 ) }
    dend_4 { pt3dadd( -33.1602, 118.8, 16.0043, 0.59 ) }
    dend_4 { pt3dadd( -34.8555, 126.271, 17.8684, 0.59 ) }
    dend_4 { pt3dadd( -37.5927, 133.435, 19.8277, 0.59 ) }
    dend_4 { pt3dadd( -40.1575, 140.762, 21.306, 0.59 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 10/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -30.2515, 14.7083, 2.32749, 0.66 ) }
    dend_1 { pt3dadd( -31.1595, 14.3511, 2.08966, 0.66 ) }
    dend_1 { pt3dadd( -31.9227, 14.0457, 1.84867, 0.66 ) }
    dend_1 { pt3dadd( -32.9972, 13.6181, 1.48185, 0.81 ) }
    dend_1 { pt3dadd( -34.264, 13.1007, 1.00893, 1.03 ) }
    dend_1 { pt3dadd( -35.7105, 12.503, 0.454582, 1.03 ) }
    dend_1 { pt3dadd( -36.7431, 12.0731, 0.0606664, 0.88 ) }
    dend_1 { pt3dadd( -37.5392, 11.7466, -0.264674, 0.52 ) }
    dend_1 { pt3dadd( -38.1008, 11.5131, -0.500223, 0.81 ) }
    dend_1 { pt3dadd( -38.8624, 11.1956, -0.811286, 1.33 ) }
    dend_1 { pt3dadd( -39.4174, 10.9686, -1.02544, 1.33 ) }
    dend_1 { pt3dadd( -40.0093, 10.7511, -1.19865, 1.11 ) }
    dend_1 { pt3dadd( -40.5559, 10.5793, -1.32183, 0.88 ) }
    dend_1 { pt3dadd( -41.2552, 10.3853, -1.44876, 0.59 ) }
    dend_1 { pt3dadd( -42.5652, 10.0493, -1.71382, 0.59 ) }
    dend_1 { pt3dadd( -43.1448, 9.90763, -1.83743, 0.81 ) }
    dend_1 { pt3dadd( -44.2787, 9.61934, -2.1052, 0.81 ) }
    dend_1 { pt3dadd( -44.8445, 9.47015, -2.24176, 0.81 ) }
    dend_1 { pt3dadd( -45.4416, 9.30482, -2.3866, 0.81 ) }
    dend_1 { pt3dadd( -46.5702, 8.96019, -2.67501, 0.81 ) }
    dend_1 { pt3dadd( -47.1326, 8.76151, -2.82716, 0.52 ) }
    dend_1 { pt3dadd( -47.853, 8.46153, -3.00678, 0.52 ) }
    dend_1 { pt3dadd( -48.7879, 8.00713, -3.23558, 0.52 ) }
    dend_1 { pt3dadd( -48.8326, 7.98374, -3.24525, 0.52 ) }
    dend_1 { pt3dadd( -49.4555, 7.64853, -3.35531, 1.11 ) }
    dend_1 { pt3dadd( -49.9907, 7.3522, -3.4148, 1.25 ) }
    dend_1 { pt3dadd( -50.873, 6.8569, -3.51706, 1.25 ) }
    dend_1 { pt3dadd( -51.3676, 6.54795, -3.57626, 0.74 ) }
    dend_1 { pt3dadd( -51.7178, 6.3051, -3.61733, 0.52 ) }
    dend_1 { pt3dadd( -51.8039, 6.23857, -3.62586, 0.52 ) }
    dend_1 { pt3dadd( -52.1707, 5.91663, -3.64992, 0.52 ) }
    dend_1 { pt3dadd( -52.2471, 5.83972, -3.65225, 0.52 ) }
    dend_1 { pt3dadd( -52.6575, 5.35449, -3.66616, 0.52 ) }
    dend_1 { pt3dadd( -52.6901, 5.31607, -3.66726, 0.52 ) }
    dend_1 { pt3dadd( -53.1825, 4.79216, -3.6828, 0.52 ) }
    dend_1 { pt3dadd( -53.2203, 4.75829, -3.68387, 0.52 ) }
    dend_1 { pt3dadd( -53.6996, 4.3794, -3.69907, 0.52 ) }
    dend_1 { pt3dadd( -54.101, 4.09501, -3.71032, 0.74 ) }
    dend_1 { pt3dadd( -54.6127, 3.77252, -3.7232, 0.81 ) }
    dend_1 { pt3dadd( -55.166, 3.42919, -3.73658, 0.81 ) }
    dend_1 { pt3dadd( -55.986, 2.92669, -3.7558, 0.37 ) }
    dend_1 { pt3dadd( -56.6564, 2.49382, -3.74133, 1.18 ) }
    dend_1 { pt3dadd( -57.3632, 1.99358, -3.70016, 2.06 ) }
    dend_1 { pt3dadd( -57.9257, 1.55818, -3.65318, 2.58 ) }
    dend_1 { pt3dadd( -58.4272, 1.13683, -3.60213, 2.58 ) }
    dend_1 { pt3dadd( -58.8455, 0.766921, -3.55521, 1.99 ) }
    dend_1 { pt3dadd( -59.6899, 0.0139608, -3.45879, 0.52 ) }
    dend_1 { pt3dadd( -60.6914, -0.849915, -3.34995, 0.52 ) }
    dend_1 { pt3dadd( -61.4957, -1.51854, -3.22369, 0.52 ) }
    dend_1 { pt3dadd( -62.0325, -1.93185, -3.12305, 0.96 ) }
    dend_1 { pt3dadd( -62.7546, -2.43397, -2.96752, 1.47 ) }
    dend_1 { pt3dadd( -63.5419, -2.91841, -2.79103, 1.69 ) }
    dend_1 { pt3dadd( -64.0715, -3.20592, -2.66333, 1.69 ) }
    dend_1 { pt3dadd( -65.1164, -3.70779, -2.36632, 1.69 ) }
    dend_1 { pt3dadd( -65.6923, -3.96729, -2.18475, 1.18 ) }
    dend_1 { pt3dadd( -66.3184, -4.24166, -1.97147, 0.88 ) }
    dend_1 { pt3dadd( -67.0642, -4.56454, -1.71311, 0.44 ) }
    dend_1 { pt3dadd( -68.0014, -4.97802, -1.40084, 0.44 ) }
    dend_1 { pt3dadd( -68.6714, -5.27065, -1.21012, 0.44 ) }
    dend_1 { pt3dadd( -68.7183, -5.28999, -1.20068, 0.44 ) }
    dend_1 { pt3dadd( -69.4243, -5.55278, -1.04168, 0.44 ) }
    dend_1 { pt3dadd( -70.1652, -5.77843, -0.873039, 0.44 ) }
    dend_1 { pt3dadd( -70.3518, -5.8241, -0.828879, 0.88 ) }
    dend_1 { pt3dadd( -70.9433, -5.92754, -0.712515, 1.18 ) }
    dend_1 { pt3dadd( -71.4676, -6.00859, -0.604839, 1.18 ) }
    dend_1 { pt3dadd( -72.2206, -6.12208, -0.45267, 0.81 ) }
    dend_1 { pt3dadd( -72.6451, -6.1943, -0.376516, 0.52 ) }
    dend_1 { pt3dadd( -72.9853, -6.26042, -0.317401, 0.29 ) }
    dend_1 { pt3dadd( -74.3233, -6.5619, -0.102588, 0.29 ) }
    dend_1 { pt3dadd( -74.9058, -6.71887, -0.0190869, 0.22 ) }
    dend_1 { pt3dadd( -74.9548, -6.73422, -0.0135099, 0.22 ) }
    dend_1 { pt3dadd( -76.13, -7.13239, 0.0429332, 0.22 ) }
    dend_1 { pt3dadd( -76.2042, -7.15792, 0.0445942, 0.22 ) }
    dend_1 { pt3dadd( -76.5037, -7.26357, 0.037155, 0.37 ) }
    dend_1 { pt3dadd( -76.8462, -7.3883, 0.00990903, 1.03 ) }
    dend_1 { pt3dadd( -77.3351, -7.55649, -0.0503915, 1.4 ) }
    dend_1 { pt3dadd( -77.8602, -7.72636, -0.138392, 1.4 ) }
    dend_1 { pt3dadd( -78.4763, -7.92218, -0.262118, 1.4 ) }
    dend_1 { pt3dadd( -79.1509, -8.16327, -0.402809, 0.22 ) }
    dend_1 { pt3dadd( -79.733, -8.39021, -0.525551, 0.15 ) }
    dend_1 { pt3dadd( -80.5014, -8.717, -0.686067, 0.15 ) }
    dend_1 { pt3dadd( -81.1488, -9.02341, -0.81523, 0.15 ) }
    dend_1 { pt3dadd( -81.6418, -9.28859, -0.903643, 0.15 ) }
    dend_1 { pt3dadd( -82.3576, -9.71533, -1.02195, 0.15 ) }
    dend_1 { pt3dadd( -82.7993, -9.99676, -1.08084, 0.29 ) }
    dend_1 { pt3dadd( -83.1225, -10.2144, -1.11241, 1.03 ) }
    dend_1 { pt3dadd( -83.6097, -10.5561, -1.14313, 1.55 ) }
    dend_1 { pt3dadd( -84.0474, -10.8664, -1.15817, 1.55 ) }
    dend_1 { pt3dadd( -84.6823, -11.3103, -1.17906, 0.15 ) }
    dend_1 { pt3dadd( -85.4175, -11.8161, -1.20216, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_1 { pt3dadd( -86.7826, -12.7625, -1.24357, 0.15 ) }
    dend_1 { pt3dadd( -87.3186, -13.1324, -1.25865, 1.33 ) }
    dend_1 { pt3dadd( -87.908, -13.5342, -1.2728, 2.73 ) }
    dend_1 { pt3dadd( -88.3946, -13.8593, -1.28435, 3.39 ) }
    dend_1 { pt3dadd( -88.4462, -13.8943, -1.28558, 3.39 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 5/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 26.7436, 32.2371, -1.4207, 0.978482 ) }
    axon_1 { pt3dadd( 36.5663, 43.5735, -1.4207, 0.978482 ) }
    axon_1 { pt3dadd( 46.389, 54.91, -1.4207, 0.978482 ) }
    // Section: dend_65, id: dend_65, parent: dend_55 (entry count 8/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 38.2779, -0.376584, 18.9238, 0.15 ) }
    dend_65 { pt3dadd( 39.9148, -1.17171, 20.5513, 0.15 ) }
    dend_65 { pt3dadd( 40.7381, -1.46861, 21.4463, 0.15 ) }
    dend_65 { pt3dadd( 41.0971, -1.5637, 21.8562, 0.15 ) }
    dend_65 { pt3dadd( 41.1502, -1.56839, 21.9203, 0.15 ) }
    dend_65 { pt3dadd( 41.3868, -1.54135, 22.2405, 0.15 ) }
    dend_65 { pt3dadd( 41.4257, -1.51232, 22.3074, 0.15 ) }
    dend_65 { pt3dadd( 41.3904, -0.54013, 22.7578, 0.15 ) }
    dend_65 { pt3dadd( 41.3774, -0.382088, 22.8197, 0.15 ) }
    dend_65 { pt3dadd( 41.2764, 0.388149, 23.1069, 0.15 ) }
    dend_65 { pt3dadd( 41.1583, 1.10121, 23.3544, 0.15 ) }
    dend_65 { pt3dadd( 40.9952, 1.87708, 23.5925, 1.03 ) }
    dend_65 { pt3dadd( 40.812, 2.66669, 23.7812, 1.4 ) }
    dend_65 { pt3dadd( 40.7037, 3.06909, 23.8277, 1.4 ) }
    dend_65 { pt3dadd( 43.6491, 8.30051, 33.9111, 1.4 ) }
    dend_65 { pt3dadd( 44.753, 12.5887, 44.82, 1.4 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 24/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 38.2779, -0.376584, 18.9238, 0.29 ) }
    dend_56 { pt3dadd( 38.0924, 0.158565, 18.8929, 0.29 ) }
    dend_56 { pt3dadd( 38.0677, 0.229766, 18.8887, 0.29 ) }
    dend_56 { pt3dadd( 37.8879, 0.748518, 18.8588, 0.29 ) }
    dend_56 { pt3dadd( 37.5373, 1.75961, 18.8004, 0.29 ) }
    dend_56 { pt3dadd( 34.665, 11.8251, 16.2253, 0.29 ) }
    dend_56 { pt3dadd( 33.8983, 22.4548, 15.0259, 0.29 ) }
    dend_56 { pt3dadd( 31.9704, 32.6059, 12.0015, 0.29 ) }
    // Section: dend_52, id: dend_52, parent: dend_43 (entry count 32/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 14.372, 95.0106, 29.0421, 0.52 ) }
    dend_52 { pt3dadd( 14.1877, 95.6635, 29.1579, 0.52 ) }
    dend_52 { pt3dadd( 14.0618, 96.1866, 29.2268, 0.52 ) }
    dend_52 { pt3dadd( 14.0517, 96.2484, 29.2356, 0.52 ) }
    dend_52 { pt3dadd( 14.0043, 96.8375, 29.3084, 0.52 ) }
    dend_52 { pt3dadd( 13.9976, 97.0069, 29.3464, 0.52 ) }
    dend_52 { pt3dadd( 13.9844, 97.6196, 29.51, 0.52 ) }
    dend_52 { pt3dadd( 13.9856, 97.7343, 29.5398, 0.52 ) }
    dend_52 { pt3dadd( 13.9884, 98.3418, 29.7384, 0.44 ) }
    dend_52 { pt3dadd( 13.9826, 99.2186, 30.0633, 0.44 ) }
    dend_52 { pt3dadd( 13.9195, 100.103, 30.449, 0.22 ) }
    dend_52 { pt3dadd( 13.9126, 100.153, 30.4728, 0.22 ) }
    dend_52 { pt3dadd( 13.8192, 100.685, 30.7514, 0.22 ) }
    dend_52 { pt3dadd( 13.7079, 101.188, 31.0245, 0.22 ) }
    dend_52 { pt3dadd( 13.6906, 101.241, 31.0552, 0.22 ) }
    dend_52 { pt3dadd( 13.2642, 102.166, 31.6272, 0.22 ) }
    dend_52 { pt3dadd( 13.2116, 102.264, 31.6744, 0.22 ) }
    dend_52 { pt3dadd( 11.9658, 108.977, 35.8367, 0.22 ) }
    // Section: dend_51, id: dend_51, parent: dend_43 (entry count 50/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 14.372, 95.0106, 29.0421, 0.15 ) }
    dend_51 { pt3dadd( 16.1953, 96.5525, 31.9563, 0.15 ) }
    dend_51 { pt3dadd( 16.71, 97.1113, 32.5369, 0.15 ) }
    dend_51 { pt3dadd( 16.7552, 97.1661, 32.5776, 0.15 ) }
    dend_51 { pt3dadd( 17.0781, 97.6306, 32.8304, 0.88 ) }
    dend_51 { pt3dadd( 17.3733, 98.1305, 33.017, 1.33 ) }
    dend_51 { pt3dadd( 17.6627, 98.6447, 33.1752, 1.4 ) }
    dend_51 { pt3dadd( 18.0834, 99.525, 33.1896, 0.29 ) }
    dend_51 { pt3dadd( 18.1206, 99.5962, 33.183, 0.29 ) }
    dend_51 { pt3dadd( 18.8642, 100.88, 32.9334, 0.22 ) }
    dend_51 { pt3dadd( 19.6872, 102.144, 32.5586, 0.22 ) }
    dend_51 { pt3dadd( 19.8501, 102.383, 32.4484, 0.52 ) }
    dend_51 { pt3dadd( 20.3463, 103.14, 31.875, 0.59 ) }
    dend_51 { pt3dadd( 20.854, 103.974, 30.9835, 0.29 ) }
    dend_51 { pt3dadd( 21.0585, 104.404, 30.3455, 0.29 ) }
    dend_51 { pt3dadd( 21.1784, 104.802, 29.6342, 0.29 ) }
    dend_51 { pt3dadd( 21.2324, 105.443, 28.6047, 0.66 ) }
    dend_51 { pt3dadd( 21.1965, 106.618, 27.1582, 0.66 ) }
    dend_51 { pt3dadd( 21.1941, 106.685, 27.0943, 0.66 ) }
    dend_51 { pt3dadd( 21.1755, 107.844, 26.2092, 0.37 ) }
    dend_51 { pt3dadd( 21.2138, 109.054, 25.4246, 0.37 ) }
    dend_51 { pt3dadd( 21.3635, 110.46, 24.6719, 0.29 ) }
    dend_51 { pt3dadd( 21.6956, 112.014, 24.0399, 0.22 ) }
    dend_51 { pt3dadd( 22.0643, 113.165, 23.7166, 0.22 ) }
    dend_51 { pt3dadd( 22.3685, 113.937, 23.5531, 1.33 ) }
    dend_51 { pt3dadd( 22.7059, 114.647, 23.4611, 1.4 ) }
    dend_51 { pt3dadd( 22.9916, 115.18, 23.4135, 1.4 ) }
    dend_51 { pt3dadd( 23.4451, 115.926, 23.4447, 0.81 ) }
    dend_51 { pt3dadd( 24.0876, 116.977, 23.657, 0.59 ) }
    dend_51 { pt3dadd( 24.5128, 117.756, 23.8844, 0.22 ) }
    dend_51 { pt3dadd( 24.587, 117.903, 23.9374, 0.22 ) }
    dend_51 { pt3dadd( 25.0933, 119.025, 24.5106, 0.22 ) }
    dend_51 { pt3dadd( 25.5572, 120.241, 25.2287, 0.52 ) }
    dend_51 { pt3dadd( 25.6083, 120.382, 25.3312, 0.52 ) }
    dend_51 { pt3dadd( 25.7856, 120.89, 25.7356, 0.52 ) }
    dend_51 { pt3dadd( 25.808, 120.959, 25.7939, 0.52 ) }
    dend_51 { pt3dadd( 26.2922, 122.648, 27.1557, 0.52 ) }
    dend_51 { pt3dadd( 26.4662, 123.308, 27.6616, 0.81 ) }
    dend_51 { pt3dadd( 26.7911, 124.743, 28.5707, 1.33 ) }
    dend_51 { pt3dadd( 26.8378, 124.951, 28.691, 1.33 ) }
    dend_51 { pt3dadd( 26.9804, 125.588, 29.0545, 1.33 ) }
    dend_51 { pt3dadd( 27.1715, 126.549, 29.5443, 1.33 ) }
    dend_51 { pt3dadd( 27.2113, 126.886, 29.6521, 1.33 ) }
    dend_51 { pt3dadd( 27.2532, 127.632, 29.8319, 1.03 ) }
    dend_51 { pt3dadd( 27.2213, 128.044, 29.8418, 0.81 ) }
    dend_51 { pt3dadd( 29.5599, 139.136, 31.0995, 0.81 ) }
    dend_51 { pt3dadd( 30.4955, 150.461, 31.5895, 0.81 ) }
    dend_51 { pt3dadd( 29.9668, 161.81, 31.4101, 0.81 ) }
    dend_51 { pt3dadd( 29.452, 173.036, 33.154, 0.81 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 99/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 14.372, 95.0106, 29.0421, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_44 { pt3dadd( 13.7712, 94.6948, 29.6069, 0.22 ) }
    dend_44 { pt3dadd( 13.5605, 94.584, 29.8051, 0.22 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 2/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 17.8789, 114.634, 75.2027, 0.29 ) }
    dend_42 { pt3dadd( 18.8163, 121.937, 81.9709, 0.29 ) }
    dend_42 { pt3dadd( 21.3905, 129.124, 88.4182, 0.29 ) }
    dend_42 { pt3dadd( 24.0485, 135.528, 95.6943, 0.29 ) }
    dend_42 { pt3dadd( 28.4127, 140.501, 103.363, 0.29 ) }
    dend_42 { pt3dadd( 33.8415, 146.018, 109.829, 0.29 ) }
    dend_42 { pt3dadd( 40.7886, 151.83, 114.187, 0.29 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 9/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 17.8789, 114.634, 75.2027, 0.15 ) }
    dend_41 { pt3dadd( 17.4566, 122.318, 79.0909, 0.29 ) }
    dend_41 { pt3dadd( 14.994, 129.532, 83.2837, 0.29 ) }
    dend_41 { pt3dadd( 11.764, 137.052, 86.2015, 0.29 ) }
    dend_41 { pt3dadd( 10.1662, 145.042, 89.0072, 0.29 ) }
    dend_41 { pt3dadd( 9.75314, 153.336, 91.1035, 0.29 ) }
    dend_41 { pt3dadd( 10.0872, 161.768, 92.3701, 0.29 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 16/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -54.2342, 4.14188, -10.995, 0.52 ) }
    dend_37 { pt3dadd( -55.3743, 2.90579, -11.4946, 0.52 ) }
    dend_37 { pt3dadd( -56.3435, 2.19435, -11.8281, 0.52 ) }
    dend_37 { pt3dadd( -56.4167, 2.14069, -11.8533, 0.52 ) }
    dend_37 { pt3dadd( -56.798, 1.8608, -11.9845, 0.88 ) }
    dend_37 { pt3dadd( -57.541, 1.31544, -12.2401, 0.22 ) }
    dend_37 { pt3dadd( -58.4528, 0.646204, -12.5539, 1.18 ) }
    dend_37 { pt3dadd( -59.4757, 0.223077, -12.7649, 1.18 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 24/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -54.2342, 4.14188, -10.995, 0.22 ) }
    dend_34 { pt3dadd( -55.5584, 4.86231, -11.3213, 0.22 ) }
    dend_34 { pt3dadd( -57.115, 5.68504, -11.6609, 0.22 ) }
    dend_34 { pt3dadd( -57.371, 5.81918, -11.7245, 0.22 ) }
    dend_34 { pt3dadd( -58.1244, 6.21555, -11.9176, 0.22 ) }
    dend_34 { pt3dadd( -58.2692, 6.28989, -11.954, 0.22 ) }
    dend_34 { pt3dadd( -59.8304, 7.08014, -12.3399, 0.22 ) }
    dend_34 { pt3dadd( -59.9099, 7.11738, -12.3551, 0.22 ) }
    dend_34 { pt3dadd( -61.0801, 7.56945, -12.6167, 1.62 ) }
    dend_34 { pt3dadd( -61.9589, 7.86064, -12.8171, 2.06 ) }
    dend_34 { pt3dadd( -62.5935, 8.02146, -12.9445, 2.06 ) }
    dend_34 { pt3dadd( -62.7724, 8.05886, -12.9773, 2.06 ) }
    dend_34 { pt3dadd( -64.2293, 8.28846, -13.2207, 0.15 ) }
    dend_34 { pt3dadd( -65.9715, 8.51341, -13.4738, 0.15 ) }
    dend_34 { pt3dadd( -67.1157, 8.62129, -13.608, 0.15 ) }
    dend_34 { pt3dadd( -69.6693, 8.79062, -13.8843, 0.15 ) }
    dend_34 { pt3dadd( -69.7475, 8.79469, -13.8921, 0.15 ) }
    dend_34 { pt3dadd( -70.2013, 8.81011, -13.9282, 0.88 ) }
    dend_34 { pt3dadd( -70.8694, 8.81786, -13.9618, 1.11 ) }
    dend_34 { pt3dadd( -71.4535, 8.8088, -13.9582, 1.11 ) }
    dend_34 { pt3dadd( -72.0507, 8.80042, -13.9547, 0.22 ) }
    dend_34 { pt3dadd( -72.1293, 8.80101, -13.9543, 0.22 ) }
    dend_34 { pt3dadd( -73.6245, 8.83925, -14.0077, 0.22 ) }
    dend_34 { pt3dadd( -73.7027, 8.84478, -14.0133, 0.22 ) }
    dend_34 { pt3dadd( -73.9581, 8.87368, -14.0395, 0.44 ) }
    dend_34 { pt3dadd( -74.3836, 8.93899, -14.0913, 0.44 ) }
    dend_34 { pt3dadd( -75.5984, 9.15489, -14.2834, 0.22 ) }
    dend_34 { pt3dadd( -76.3247, 9.3014, -14.4071, 0.88 ) }
    dend_34 { pt3dadd( -77.1349, 9.48057, -14.5543, 1.55 ) }
    dend_34 { pt3dadd( -77.8161, 9.62915, -14.666, 1.84 ) }
    dend_34 { pt3dadd( -78.7839, 9.8419, -14.8145, 0.29 ) }
    dend_34 { pt3dadd( -79.2934, 9.95722, -14.8837, 0.22 ) }
    dend_34 { pt3dadd( -81.1871, 10.4195, -15.1547, 0.22 ) }
    dend_34 { pt3dadd( -81.4244, 10.4787, -15.1869, 0.22 ) }
    dend_34 { pt3dadd( -83.0229, 10.8801, -15.4159, 0.22 ) }
    dend_34 { pt3dadd( -83.1442, 10.9115, -15.4338, 0.22 ) }
    dend_34 { pt3dadd( -84.4515, 11.2585, -15.6593, 0.22 ) }
    dend_34 { pt3dadd( -85.2281, 11.4506, -15.7918, 1.18 ) }
    dend_34 { pt3dadd( -85.5507, 11.5232, -15.8536, 1.62 ) }
    dend_34 { pt3dadd( -86.2335, 11.6581, -15.9912, 1.92 ) }
    dend_34 { pt3dadd( -86.7184, 11.7373, -16.0408, 1.92 ) }
    dend_34 { pt3dadd( -87.623, 11.8788, -16.0858, 0.22 ) }
    dend_34 { pt3dadd( -89.999, 12.2472, -16.1085, 0.22 ) }
    dend_34 { pt3dadd( -90.0877, 12.2612, -16.1065, 0.22 ) }
    dend_34 { pt3dadd( -90.3993, 12.322, -16.0706, 0.59 ) }
    dend_34 { pt3dadd( -93.6349, 13.0702, -15.4782, 0.22 ) }
    dend_34 { pt3dadd( -94.653, 13.3209, -15.2553, 1.11 ) }
    dend_34 { pt3dadd( -95.2483, 13.4779, -15.1054, 1.84 ) }
    dend_34 { pt3dadd( -95.8704, 13.6505, -14.9394, 1.84 ) }
    dend_34 { pt3dadd( -98.2797, 14.3224, -14.3122, 0.22 ) }
    dend_34 { pt3dadd( -100.835, 14.9854, -13.7015, 0.15 ) }
    dend_34 { pt3dadd( -102.892, 15.4609, -13.2657, 0.15 ) }
    dend_34 { pt3dadd( -103.06, 15.4915, -13.2266, 0.44 ) }
    dend_34 { pt3dadd( -103.299, 15.5247, -13.1735, 0.44 ) }
    dend_34 { pt3dadd( -103.783, 15.5706, -13.0808, 0.44 ) }
    dend_34 { pt3dadd( -105.786, 15.6265, -12.8602, 0.15 ) }
    dend_34 { pt3dadd( -105.864, 15.6238, -12.8469, 0.15 ) }
    dend_34 { pt3dadd( -107.409, 15.5255, -12.4982, 1.47 ) }
    dend_34 { pt3dadd( -108.056, 15.4765, -12.3406, 2.14 ) }
    dend_34 { pt3dadd( -108.463, 15.4447, -12.2292, 2.43 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 84/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 16.1196, 22.2288, -1.62859, 1.03 ) }
    dend_29 { pt3dadd( 16.4575, 22.8617, -1.34123, 1.03 ) }
    dend_29 { pt3dadd( 16.6352, 23.1812, -1.18945, 0.96 ) }
    dend_29 { pt3dadd( 16.8791, 23.6077, -0.96248, 0.81 ) }
    dend_29 { pt3dadd( 17.1208, 24.0234, -0.740338, 0.81 ) }
    dend_29 { pt3dadd( 17.4886, 24.6769, -0.409251, 0.81 ) }
    dend_29 { pt3dadd( 17.8096, 25.2519, -0.0981885, 0.81 ) }
    dend_29 { pt3dadd( 17.8539, 25.3343, -0.0512609, 0.81 ) }
    dend_29 { pt3dadd( 18.0935, 25.7868, 0.216896, 1.11 ) }
    dend_29 { pt3dadd( 18.3149, 26.2071, 0.458536, 1.25 ) }
    dend_29 { pt3dadd( 18.5851, 26.722, 0.757871, 1.25 ) }
    dend_29 { pt3dadd( 18.9339, 27.3857, 1.14513, 1.03 ) }
    dend_29 { pt3dadd( 19.2549, 27.9887, 1.50805, 0.81 ) }
    dend_29 { pt3dadd( 19.6923, 28.7846, 1.97191, 0.81 ) }
    dend_29 { pt3dadd( 20.0464, 29.3995, 2.30593, 0.81 ) }
    dend_29 { pt3dadd( 20.0694, 29.4372, 2.32564, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_29 { pt3dadd( 20.3202, 29.8367, 2.50483, 1.18 ) }
    dend_29 { pt3dadd( 20.4393, 30.036, 2.57073, 1.18 ) }
    dend_29 { pt3dadd( 20.6428, 30.4199, 2.67077, 1.18 ) }
    dend_29 { pt3dadd( 20.9362, 31.0687, 2.83765, 1.47 ) }
    dend_29 { pt3dadd( 21.1505, 31.653, 3.02247, 1.18 ) }
    dend_29 { pt3dadd( 21.3603, 32.308, 3.25157, 0.74 ) }
    dend_29 { pt3dadd( 21.4948, 32.8411, 3.45306, 0.74 ) }
    dend_29 { pt3dadd( 21.6288, 33.7465, 3.83416, 0.74 ) }
    dend_29 { pt3dadd( 21.6951, 34.5702, 4.212, 0.88 ) }
    dend_29 { pt3dadd( 21.7207, 35.7849, 4.8472, 0.88 ) }
    dend_29 { pt3dadd( 21.7186, 35.854, 4.88612, 0.88 ) }
    dend_29 { pt3dadd( 21.6563, 36.8273, 5.47097, 0.88 ) }
    dend_29 { pt3dadd( 21.536, 38.1884, 6.3236, 0.88 ) }
    dend_29 { pt3dadd( 21.5313, 38.2354, 6.35399, 0.88 ) }
    dend_29 { pt3dadd( 21.4603, 38.9635, 6.7992, 0.66 ) }
    dend_29 { pt3dadd( 21.4281, 39.4388, 7.08941, 0.66 ) }
    dend_29 { pt3dadd( 21.4181, 40.0693, 7.46277, 0.66 ) }
    dend_29 { pt3dadd( 21.4215, 40.1098, 7.48857, 0.66 ) }
    dend_29 { pt3dadd( 21.5551, 40.6499, 7.89355, 1.03 ) }
    dend_29 { pt3dadd( 21.6795, 41.0541, 8.22139, 1.4 ) }
    dend_29 { pt3dadd( 21.8012, 41.3533, 8.49028, 1.55 ) }
    dend_29 { pt3dadd( 21.9423, 41.6377, 8.76096, 1.69 ) }
    dend_29 { pt3dadd( 22.2297, 42.1867, 9.26538, 1.47 ) }
    dend_29 { pt3dadd( 22.6012, 42.8204, 9.88756, 1.33 ) }
    dend_29 { pt3dadd( 22.6231, 42.8558, 9.92639, 1.33 ) }
    dend_29 { pt3dadd( 22.9139, 43.3024, 10.4683, 0.81 ) }
    dend_29 { pt3dadd( 23.2335, 43.8518, 11.1661, 0.66 ) }
    dend_29 { pt3dadd( 23.3879, 44.227, 11.6166, 0.66 ) }
    dend_29 { pt3dadd( 23.5985, 45.0387, 12.4997, 0.66 ) }
    dend_29 { pt3dadd( 23.6438, 45.3439, 12.817, 0.66 ) }
    dend_29 { pt3dadd( 23.6512, 45.4171, 12.8923, 0.66 ) }
    dend_29 { pt3dadd( 23.6653, 45.9669, 13.4688, 0.66 ) }
    dend_29 { pt3dadd( 23.6628, 46.697, 14.1976, 0.66 ) }
    dend_29 { pt3dadd( 23.663, 46.7707, 14.2602, 0.66 ) }
    dend_29 { pt3dadd( 23.6965, 47.3096, 14.5683, 0.88 ) }
    dend_29 { pt3dadd( 23.7885, 47.811, 14.7688, 1.03 ) }
    dend_29 { pt3dadd( 23.8036, 47.8702, 14.787, 1.03 ) }
    dend_29 { pt3dadd( 24.0666, 48.6037, 14.9384, 1.03 ) }
    dend_29 { pt3dadd( 24.0909, 48.6623, 14.9467, 1.03 ) }
    dend_29 { pt3dadd( 24.3919, 49.3957, 15.0089, 1.03 ) }
    dend_29 { pt3dadd( 24.838, 50.4978, 15.0611, 1.03 ) }
    dend_29 { pt3dadd( 24.8588, 50.5498, 15.0631, 1.03 ) }
    dend_29 { pt3dadd( 25.2348, 51.5046, 15.0932, 0.66 ) }
    dend_29 { pt3dadd( 25.8601, 53.0721, 15.1283, 0.66 ) }
    dend_29 { pt3dadd( 26.1066, 53.6797, 15.1415, 0.66 ) }
    dend_29 { pt3dadd( 26.1286, 53.7313, 15.1422, 0.66 ) }
    dend_29 { pt3dadd( 26.3447, 54.2037, 15.1456, 0.88 ) }
    dend_29 { pt3dadd( 26.5248, 54.5902, 15.1546, 1.18 ) }
    dend_29 { pt3dadd( 26.7915, 55.1353, 15.1758, 1.4 ) }
    dend_29 { pt3dadd( 27.0299, 55.5922, 15.2084, 1.4 ) }
    dend_29 { pt3dadd( 27.1968, 55.9211, 15.2475, 1.4 ) }
    dend_29 { pt3dadd( 27.4615, 56.463, 15.3153, 0.81 ) }
    dend_29 { pt3dadd( 27.6488, 56.9192, 15.4005, 0.66 ) }
    dend_29 { pt3dadd( 27.7898, 57.2931, 15.5351, 0.52 ) }
    dend_29 { pt3dadd( 27.8419, 57.4471, 15.6029, 0.52 ) }
    dend_29 { pt3dadd( 28.0791, 58.1596, 15.9442, 0.52 ) }
    dend_29 { pt3dadd( 28.0954, 58.2079, 15.9675, 0.52 ) }
    dend_29 { pt3dadd( 28.4441, 59.1789, 16.3786, 0.52 ) }
    dend_29 { pt3dadd( 28.8953, 60.2927, 16.7403, 0.44 ) }
    dend_29 { pt3dadd( 29.1939, 60.9766, 16.9218, 0.66 ) }
    dend_29 { pt3dadd( 29.3682, 61.3506, 16.9962, 0.81 ) }
    dend_29 { pt3dadd( 29.732, 62.0766, 17.0933, 0.81 ) }
    dend_29 { pt3dadd( 30.1308, 62.8152, 17.1353, 0.66 ) }
    dend_29 { pt3dadd( 30.7406, 63.8394, 17.0825, 0.52 ) }
    dend_29 { pt3dadd( 30.7691, 63.8878, 17.0766, 0.52 ) }
    dend_29 { pt3dadd( 31.1793, 64.5569, 17.0204, 0.52 ) }
    dend_29 { pt3dadd( 31.209, 64.6048, 17.0167, 0.52 ) }
    dend_29 { pt3dadd( 31.5334, 65.1211, 16.9858, 0.88 ) }
    dend_29 { pt3dadd( 31.864, 65.6549, 16.9749, 1.18 ) }
    dend_29 { pt3dadd( 31.8938, 65.7029, 16.9738, 1.18 ) }
    dend_29 { pt3dadd( 32.2171, 66.2255, 16.9606, 1.18 ) }
    dend_29 { pt3dadd( 32.5388, 66.7524, 16.9485, 0.74 ) }
    dend_29 { pt3dadd( 32.8812, 67.3352, 16.9397, 0.37 ) }
    dend_29 { pt3dadd( 33.4101, 68.2481, 16.9298, 0.37 ) }
    dend_29 { pt3dadd( 33.6294, 68.5952, 16.9218, 0.37 ) }
    dend_29 { pt3dadd( 33.7552, 68.7698, 16.9139, 0.74 ) }
    dend_29 { pt3dadd( 34.0465, 69.1132, 16.8877, 1.03 ) }
    dend_29 { pt3dadd( 34.0924, 69.1592, 16.8827, 1.03 ) }
    dend_29 { pt3dadd( 34.5767, 69.5704, 16.8157, 1.25 ) }
    dend_29 { pt3dadd( 35.1875, 70.0313, 16.72, 1.25 ) }
    dend_29 { pt3dadd( 35.4859, 70.2648, 16.6749, 1.47 ) }
    dend_29 { pt3dadd( 35.7286, 70.4767, 16.6425, 1.47 ) }
    dend_29 { pt3dadd( 35.8166, 70.5614, 16.6353, 1.47 ) }
    dend_29 { pt3dadd( 36.1579, 70.9429, 16.6312, 1.25 ) }
    dend_29 { pt3dadd( 36.5173, 71.4096, 16.6518, 1.03 ) }
    dend_29 { pt3dadd( 36.8754, 71.9334, 16.7046, 0.88 ) }
    dend_29 { pt3dadd( 37.4945, 72.9096, 16.8325, 0.59 ) }
    dend_29 { pt3dadd( 37.8534, 73.5053, 16.9181, 0.37 ) }
    dend_29 { pt3dadd( 38.2509, 74.1662, 17.0552, 0.37 ) }
    dend_29 { pt3dadd( 38.5332, 74.6339, 17.177, 0.52 ) }
    dend_29 { pt3dadd( 38.7548, 74.9953, 17.2868, 0.66 ) }
    dend_29 { pt3dadd( 39.0834, 75.5143, 17.4618, 0.66 ) }
    dend_29 { pt3dadd( 39.6733, 76.4208, 17.7961, 0.66 ) }
    dend_29 { pt3dadd( 40.1776, 77.1836, 18.0745, 0.66 ) }
    dend_29 { pt3dadd( 40.2073, 77.2287, 18.0908, 0.66 ) }
    dend_29 { pt3dadd( 40.4647, 77.6411, 18.236, 1.25 ) }
    dend_29 { pt3dadd( 40.7057, 78.0646, 18.3727, 1.69 ) }
    dend_29 { pt3dadd( 40.9525, 78.5886, 18.5326, 1.84 ) }
    dend_29 { pt3dadd( 41.0476, 78.849, 18.6099, 1.99 ) }
    dend_29 { pt3dadd( 41.1854, 79.3419, 18.734, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_29 { pt3dadd( 41.2401, 79.5601, 18.7879, 0.88 ) }
    dend_29 { pt3dadd( 41.2729, 79.7272, 18.8294, 0.66 ) }
    dend_29 { pt3dadd( 41.355, 80.2282, 18.9665, 0.44 ) }
    dend_29 { pt3dadd( 41.4821, 81.119, 19.2197, 0.29 ) }
    dend_29 { pt3dadd( 41.5724, 81.7872, 19.4119, 0.29 ) }
    dend_29 { pt3dadd( 41.8178, 83.6666, 19.974, 0.29 ) }
    dend_29 { pt3dadd( 41.9465, 84.6396, 20.267, 0.22 ) }
    dend_29 { pt3dadd( 42.012, 85.0892, 20.4202, 0.29 ) }
    dend_29 { pt3dadd( 42.0723, 85.4664, 20.5602, 0.44 ) }
    dend_29 { pt3dadd( 42.2093, 86.2754, 20.8769, 0.44 ) }
    dend_29 { pt3dadd( 42.3449, 86.9393, 21.1689, 0.44 ) }
    dend_29 { pt3dadd( 42.4327, 87.2829, 21.3397, 1.11 ) }
    dend_29 { pt3dadd( 42.7697, 88.1856, 21.8294, 1.77 ) }
    dend_29 { pt3dadd( 42.9718, 88.632, 22.065, 1.92 ) }
    dend_29 { pt3dadd( 43.2419, 89.0673, 22.3646, 2.14 ) }
    dend_29 { pt3dadd( 43.4244, 89.3104, 22.543, 1.99 ) }
    dend_29 { pt3dadd( 43.6177, 89.5401, 22.708, 1.99 ) }
    dend_29 { pt3dadd( 44.326, 90.3528, 23.2595, 0.37 ) }
    dend_29 { pt3dadd( 44.8686, 90.9648, 23.6403, 0.37 ) }
    dend_29 { pt3dadd( 46.3053, 92.552, 24.598, 0.29 ) }
    dend_29 { pt3dadd( 46.7523, 93.0371, 24.9056, 1.11 ) }
    dend_29 { pt3dadd( 47.0724, 93.3731, 25.1989, 1.92 ) }
    dend_29 { pt3dadd( 47.3723, 93.6876, 25.52, 2.28 ) }
    dend_29 { pt3dadd( 47.5397, 93.8559, 25.7075, 2.43 ) }
    dend_29 { pt3dadd( 47.8972, 94.1681, 26.1535, 2.43 ) }
    dend_29 { pt3dadd( 48.5016, 94.6938, 27.0048, 2.43 ) }
    dend_29 { pt3dadd( 49.9504, 95.919, 29.2436, 0.37 ) }
    dend_29 { pt3dadd( 50.2286, 96.1632, 29.708, 0.37 ) }
    dend_29 { pt3dadd( 50.5641, 96.4823, 30.3041, 0.37 ) }
    dend_29 { pt3dadd( 51.0605, 97.0358, 31.25, 0.59 ) }
    dend_29 { pt3dadd( 51.337, 97.4582, 31.8472, 0.81 ) }
    dend_29 { pt3dadd( 51.365, 97.5498, 31.9212, 0.81 ) }
    dend_29 { pt3dadd( 51.399, 98.184, 32.16, 0.81 ) }
    dend_29 { pt3dadd( 51.3972, 98.8756, 32.3766, 0.81 ) }
    dend_29 { pt3dadd( 51.3785, 99.3865, 32.5115, 0.59 ) }
    dend_29 { pt3dadd( 51.3549, 100.01, 32.6403, 0.44 ) }
    dend_29 { pt3dadd( 51.3367, 101.041, 32.8443, 0.44 ) }
    dend_29 { pt3dadd( 51.3278, 102.293, 33.0879, 0.44 ) }
    dend_29 { pt3dadd( 51.3365, 103.098, 33.2403, 1.03 ) }
    dend_29 { pt3dadd( 51.3437, 103.556, 33.3276, 1.62 ) }
    dend_29 { pt3dadd( 51.3426, 103.619, 33.3383, 1.62 ) }
    dend_29 { pt3dadd( 51.3071, 104.266, 33.4388, 2.14 ) }
    dend_29 { pt3dadd( 51.2907, 104.431, 33.4611, 2.36 ) }
    dend_29 { pt3dadd( 51.2039, 104.947, 33.5221, 2.36 ) }
    dend_29 { pt3dadd( 51.0439, 105.64, 33.5994, 1.77 ) }
    dend_29 { pt3dadd( 50.811, 106.444, 33.7014, 0.52 ) }
    dend_29 { pt3dadd( 50.7967, 106.49, 33.7071, 0.52 ) }
    dend_29 { pt3dadd( 50.7187, 106.707, 33.7325, 0.37 ) }
    dend_29 { pt3dadd( 50.5633, 107.095, 33.7788, 0.37 ) }
    dend_29 { pt3dadd( 50.4917, 107.243, 33.7978, 0.29 ) }
    dend_29 { pt3dadd( 50.0767, 107.976, 33.9266, 0.29 ) }
    dend_29 { pt3dadd( 53.7022, 115.008, 35.2665, 0.29 ) }
    dend_29 { pt3dadd( 56.4054, 122.372, 36.7979, 0.29 ) }
    dend_29 { pt3dadd( 58.9303, 129.956, 37.0004, 0.29 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 54/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 16.1196, 22.2288, -1.62859, 1.33 ) }
    dend_28 { pt3dadd( 17.3523, 21.7496, -2.11871, 1.33 ) }
    dend_28 { pt3dadd( 18.6767, 21.2334, -2.62099, 0.96 ) }
    dend_28 { pt3dadd( 20.1579, 20.636, -3.17651, 0.88 ) }
    dend_28 { pt3dadd( 20.2225, 20.6087, -3.20092, 0.88 ) }
    dend_28 { pt3dadd( 21.8221, 19.909, -3.81483, 0.88 ) }
    dend_28 { pt3dadd( 23.3468, 19.2304, -4.40495, 0.81 ) }
    dend_28 { pt3dadd( 23.4109, 19.2021, -4.42941, 0.81 ) }
    dend_28 { pt3dadd( 24.2298, 18.8301, -4.74273, 0.81 ) }
    dend_28 { pt3dadd( 25.0447, 18.4732, -5.05891, 0.81 ) }
    dend_28 { pt3dadd( 25.9566, 18.0889, -5.41934, 0.81 ) }
    dend_28 { pt3dadd( 26.0216, 18.0645, -5.44571, 0.81 ) }
    dend_28 { pt3dadd( 27.2122, 17.6747, -5.94768, 0.81 ) }
    dend_28 { pt3dadd( 27.5057, 17.5914, -6.06789, 0.81 ) }
    dend_28 { pt3dadd( 28.6807, 17.312, -6.53441, 0.81 ) }
    dend_28 { pt3dadd( 29.3907, 17.1689, -6.83315, 0.66 ) }
    dend_28 { pt3dadd( 30.6771, 16.9346, -7.40295, 0.66 ) }
    dend_28 { pt3dadd( 31.4643, 16.7984, -7.76845, 0.88 ) }
    dend_28 { pt3dadd( 32.1585, 16.6914, -8.10494, 0.88 ) }
    dend_28 { pt3dadd( 32.5881, 16.6349, -8.32501, 0.88 ) }
    dend_28 { pt3dadd( 33.4356, 16.5635, -8.81175, 0.74 ) }
    dend_28 { pt3dadd( 33.7051, 16.5506, -8.98111, 0.74 ) }
    dend_28 { pt3dadd( 34.3542, 16.5369, -9.43971, 0.66 ) }
    dend_28 { pt3dadd( 35.0481, 16.5384, -9.9564, 0.37 ) }
    dend_28 { pt3dadd( 35.9384, 16.543, -10.6712, 0.29 ) }
    dend_28 { pt3dadd( 36.7636, 16.5514, -11.3497, 0.29 ) }
    dend_28 { pt3dadd( 36.8213, 16.552, -11.3973, 0.29 ) }
    dend_28 { pt3dadd( 37.3143, 16.5571, -11.8379, 0.44 ) }
    dend_28 { pt3dadd( 37.8871, 16.5508, -12.3822, 0.44 ) }
    dend_28 { pt3dadd( 38.6278, 16.507, -13.1049, 0.44 ) }
    dend_28 { pt3dadd( 38.9171, 16.4725, -13.371, 1.03 ) }
    dend_28 { pt3dadd( 38.9728, 16.4623, -13.4196, 1.03 ) }
    dend_28 { pt3dadd( 39.8025, 16.2991, -14.109, 1.55 ) }
    dend_28 { pt3dadd( 40.3295, 16.191, -14.5099, 1.84 ) }
    dend_28 { pt3dadd( 40.6397, 16.1276, -14.7338, 1.84 ) }
    dend_28 { pt3dadd( 41.2311, 16.0041, -15.1235, 1.55 ) }
    dend_28 { pt3dadd( 42.1099, 15.8158, -15.686, 0.59 ) }
    dend_28 { pt3dadd( 42.5767, 15.719, -15.9683, 0.37 ) }
    dend_28 { pt3dadd( 43.383, 15.5398, -16.4202, 0.22 ) }
    dend_28 { pt3dadd( 43.6585, 15.481, -16.5713, 0.44 ) }
    dend_28 { pt3dadd( 44.1465, 15.3726, -16.827, 0.88 ) }
    dend_28 { pt3dadd( 44.2105, 15.3569, -16.8618, 0.88 ) }
    dend_28 { pt3dadd( 44.6259, 15.2606, -17.0809, 1.11 ) }
    dend_28 { pt3dadd( 44.9981, 15.1787, -17.2947, 1.11 ) }
    dend_28 { pt3dadd( 45.1961, 15.1393, -17.4139, 1.11 ) }
    dend_28 { pt3dadd( 45.8783, 15.0122, -17.7446, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_28 { pt3dadd( 46.6056, 14.8761, -18.0093, 0.22 ) }
    dend_28 { pt3dadd( 47.3827, 14.7222, -18.2316, 0.22 ) }
    dend_28 { pt3dadd( 47.6256, 14.6744, -18.2864, 0.52 ) }
    dend_28 { pt3dadd( 48.3245, 14.541, -18.4103, 0.96 ) }
    dend_28 { pt3dadd( 49.626, 14.284, -18.5817, 1.25 ) }
    dend_28 { pt3dadd( 50.4218, 14.1245, -18.6399, 1.55 ) }
    dend_28 { pt3dadd( 50.7513, 14.0536, -18.6472, 1.69 ) }
    dend_28 { pt3dadd( 51.2814, 13.9316, -18.6605, 1.33 ) }
    dend_28 { pt3dadd( 51.5222, 13.8799, -18.6678, 1.03 ) }
    dend_28 { pt3dadd( 51.6059, 13.8654, -18.6763, 1.03 ) }
    dend_28 { pt3dadd( 51.8333, 13.8329, -18.7256, 0.88 ) }
    dend_28 { pt3dadd( 52.2126, 13.7803, -18.8224, 0.88 ) }
    dend_28 { pt3dadd( 52.6626, 13.7139, -18.9393, 0.52 ) }
    dend_28 { pt3dadd( 53.3485, 13.6094, -19.1206, 0.29 ) }
    dend_28 { pt3dadd( 54.5602, 13.4288, -19.4494, 0.29 ) }
    dend_28 { pt3dadd( 54.966, 13.3676, -19.5643, 0.88 ) }
    dend_28 { pt3dadd( 55.5764, 13.2653, -19.7529, 1.33 ) }
    dend_28 { pt3dadd( 55.6449, 13.2539, -19.7802, 1.33 ) }
    dend_28 { pt3dadd( 56.1415, 13.1713, -20.0133, 1.33 ) }
    dend_28 { pt3dadd( 56.4106, 13.1269, -20.159, 1.55 ) }
    dend_28 { pt3dadd( 56.8292, 13.0573, -20.3989, 1.55 ) }
    dend_28 { pt3dadd( 57.8806, 12.8342, -21.0038, 0.22 ) }
    dend_28 { pt3dadd( 59.0612, 12.5393, -21.7515, 0.29 ) }
    dend_28 { pt3dadd( 59.1216, 12.5224, -21.7916, 0.29 ) }
    dend_28 { pt3dadd( 59.8907, 12.2799, -22.3204, 0.29 ) }
    dend_28 { pt3dadd( 59.9491, 12.259, -22.3614, 0.29 ) }
    dend_28 { pt3dadd( 61.5148, 11.6272, -23.4808, 0.29 ) }
    dend_28 { pt3dadd( 62.3248, 11.2626, -24.0601, 1.11 ) }
    dend_28 { pt3dadd( 62.6876, 11.0738, -24.3268, 1.62 ) }
    dend_28 { pt3dadd( 63.1179, 10.8264, -24.7214, 1.84 ) }
    dend_28 { pt3dadd( 63.3889, 10.651, -25.028, 2.06 ) }
    dend_28 { pt3dadd( 63.6397, 10.4625, -25.3554, 1.84 ) }
    dend_28 { pt3dadd( 63.7912, 10.3278, -25.5949, 1.55 ) }
    dend_28 { pt3dadd( 64.2431, 9.91043, -26.2401, 1.11 ) }
    dend_28 { pt3dadd( 65.0356, 9.1818, -27.3889, 0.29 ) }
    dend_28 { pt3dadd( 65.2486, 8.99064, -27.6903, 0.15 ) }
    dend_28 { pt3dadd( 65.8981, 8.44372, -28.5409, 0.15 ) }
    dend_28 { pt3dadd( 65.9886, 8.37095, -28.6476, 0.15 ) }
    dend_28 { pt3dadd( 67.0391, 7.53652, -29.7198, 0.15 ) }
    dend_28 { pt3dadd( 67.5891, 7.12679, -30.2056, 0.88 ) }
    dend_28 { pt3dadd( 67.9318, 6.88439, -30.467, 1.69 ) }
    dend_28 { pt3dadd( 68.3933, 6.5648, -30.8192, 1.99 ) }
    dend_28 { pt3dadd( 68.9115, 6.22136, -31.2086, 1.99 ) }
    dend_28 { pt3dadd( 69.5173, 5.82759, -31.6503, 0.88 ) }
    dend_28 { pt3dadd( 70.2366, 5.3743, -32.1517, 0.22 ) }
    dend_28 { pt3dadd( 71.5381, 4.54146, -33.0859, 0.22 ) }
    dend_28 { pt3dadd( 71.8927, 4.32308, -33.355, 0.59 ) }
    dend_28 { pt3dadd( 72.2589, 4.09604, -33.6441, 0.96 ) }
    dend_28 { pt3dadd( 72.5981, 3.88999, -33.9179, 1.11 ) }
    dend_28 { pt3dadd( 72.9248, 3.69874, -34.1695, 1.11 ) }
    dend_28 { pt3dadd( 73.9327, 3.08839, -34.9697, 0.15 ) }
    dend_28 { pt3dadd( 74.4132, 2.79168, -35.377, 0.15 ) }
    dend_28 { pt3dadd( 75.2403, 2.2693, -36.0858, 0.15 ) }
    dend_28 { pt3dadd( 75.2884, 2.23733, -36.1317, 0.15 ) }
    dend_28 { pt3dadd( 76.6277, 1.28749, -37.4651, 0.15 ) }
    dend_28 { pt3dadd( 77.2506, 0.822625, -38.0847, 1.25 ) }
    dend_28 { pt3dadd( 77.7364, 0.446632, -38.5549, 1.62 ) }
    dend_28 { pt3dadd( 78.0377, 0.198682, -38.8571, 1.62 ) }
    dend_28 { pt3dadd( 78.9258, -0.545007, -39.7621, 0.15 ) }
    dend_28 { pt3dadd( 79.9334, -1.43524, -40.7994, 0.15 ) }
    dend_28 { pt3dadd( 80.2134, -1.70936, -41.0835, 0.66 ) }
    dend_28 { pt3dadd( 80.4812, -1.97579, -41.3277, 1.03 ) }
    dend_28 { pt3dadd( 80.7703, -2.27647, -41.5861, 1.03 ) }
    dend_28 { pt3dadd( 80.9365, -2.45198, -41.7228, 1.03 ) }
    dend_28 { pt3dadd( 81.3941, -2.94965, -42.044, 0.15 ) }
    dend_28 { pt3dadd( 82.2859, -3.97165, -42.7283, 0.15 ) }
    dend_28 { pt3dadd( 82.341, -4.0359, -42.7734, 0.52 ) }
    dend_28 { pt3dadd( 82.4597, -4.18161, -42.874, 0.52 ) }
    dend_28 { pt3dadd( 82.799, -4.6145, -43.1676, 0.59 ) }
    dend_28 { pt3dadd( 82.9659, -4.83299, -43.3099, 0.59 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 70/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 30.3295, -197.384, 6.36258, 0.81 ) }
    dend_25 { pt3dadd( 30.8216, -197.852, 5.99364, 0.81 ) }
    dend_25 { pt3dadd( 31.5213, -198.573, 5.47021, 0.52 ) }
    dend_25 { pt3dadd( 32.7641, -199.892, 4.5462, 0.44 ) }
    dend_25 { pt3dadd( 33.6924, -200.9, 3.85894, 0.44 ) }
    dend_25 { pt3dadd( 34.0731, -201.323, 3.58029, 0.81 ) }
    dend_25 { pt3dadd( 34.7096, -202.035, 3.11869, 0.15 ) }
    dend_25 { pt3dadd( 36.4176, -204.142, 1.69903, 0.15 ) }
    dend_25 { pt3dadd( 36.5424, -204.313, 1.58131, 0.44 ) }
    dend_25 { pt3dadd( 36.6306, -204.445, 1.48878, 0.44 ) }
    dend_25 { pt3dadd( 36.9257, -204.909, 1.13969, 0.96 ) }
    dend_25 { pt3dadd( 37.0068, -205.039, 1.03826, 0.96 ) }
    dend_25 { pt3dadd( 37.7521, -206.192, 0.155687, 0.96 ) }
    dend_25 { pt3dadd( 37.7945, -206.258, 0.0971925, 0.96 ) }
    dend_25 { pt3dadd( 38.1858, -206.834, -0.387432, 0.96 ) }
    dend_25 { pt3dadd( 38.6243, -207.439, -0.876356, 0.96 ) }
    dend_25 { pt3dadd( 39.1414, -208.114, -1.37552, 0.29 ) }
    dend_25 { pt3dadd( 39.7961, -208.905, -1.85807, 0.29 ) }
    dend_25 { pt3dadd( 39.8481, -208.965, -1.89042, 0.29 ) }
    dend_25 { pt3dadd( 40.115, -209.287, -2.06964, 0.52 ) }
    dend_25 { pt3dadd( 40.1875, -209.381, -2.12222, 0.52 ) }
    dend_25 { pt3dadd( 40.4993, -209.801, -2.3602, 0.52 ) }
    dend_25 { pt3dadd( 41.4215, -211.057, -3.06846, 0.22 ) }
    dend_25 { pt3dadd( 41.7731, -211.589, -3.3558, 0.37 ) }
    dend_25 { pt3dadd( 41.8189, -211.668, -3.38975, 0.37 ) }
    dend_25 { pt3dadd( 42.0323, -212.065, -3.53077, 0.37 ) }
    dend_25 { pt3dadd( 42.1181, -212.233, -3.57952, 0.37 ) }
    dend_25 { pt3dadd( 42.2398, -212.481, -3.63703, 0.37 ) }
    dend_25 { pt3dadd( 42.5983, -213.227, -3.76688, 0.22 ) }
    dend_25 { pt3dadd( 43.4354, -214.894, -4.00635, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_25 { pt3dadd( 43.6518, -215.327, -4.06734, 1.55 ) }
    dend_25 { pt3dadd( 44.0773, -216.175, -4.1857, 2.06 ) }
    dend_25 { pt3dadd( 44.1095, -216.239, -4.19449, 2.06 ) }
    dend_25 { pt3dadd( 44.2806, -216.569, -4.24102, 2.58 ) }
    dend_25 { pt3dadd( 44.6959, -217.318, -4.35252, 2.87 ) }
    dend_25 { pt3dadd( 52.5705, -225.901, -8.0962, 2.87 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 6/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 30.3295, -197.384, 6.36258, 0.96 ) }
    dend_22 { pt3dadd( 30.3199, -197.746, 6.38556, 0.96 ) }
    dend_22 { pt3dadd( 30.3131, -198.104, 6.40666, 0.66 ) }
    dend_22 { pt3dadd( 30.2921, -198.518, 6.39224, 0.52 ) }
    dend_22 { pt3dadd( 30.2449, -199.033, 6.35504, 0.37 ) }
    dend_22 { pt3dadd( 30.1944, -199.566, 6.314, 0.37 ) }
    dend_22 { pt3dadd( 30.1502, -200.085, 6.27366, 0.74 ) }
    dend_22 { pt3dadd( 30.1183, -200.491, 6.23989, 0.74 ) }
    dend_22 { pt3dadd( 30.0572, -201.221, 6.09336, 0.15 ) }
    dend_22 { pt3dadd( 29.9984, -201.97, 5.88765, 0.15 ) }
    dend_22 { pt3dadd( 29.8884, -203.198, 5.4916, 0.15 ) }
    dend_22 { pt3dadd( 29.8596, -203.548, 5.35581, 0.88 ) }
    dend_22 { pt3dadd( 29.8235, -204.031, 5.1529, 0.96 ) }
    dend_22 { pt3dadd( 29.7246, -205.674, 4.44375, 0.15 ) }
    dend_22 { pt3dadd( 29.6912, -206.435, 4.10905, 0.15 ) }
    dend_22 { pt3dadd( 29.6725, -206.925, 3.87285, 0.15 ) }
    dend_22 { pt3dadd( 29.6713, -208.363, 3.17902, 0.15 ) }
    dend_22 { pt3dadd( 29.698, -208.746, 2.99385, 1.11 ) }
    dend_22 { pt3dadd( 29.758, -209.168, 2.79778, 1.11 ) }
    dend_22 { pt3dadd( 29.8175, -209.39, 2.71086, 0.15 ) }
    dend_22 { pt3dadd( 29.8335, -209.434, 2.69186, 0.15 ) }
    dend_22 { pt3dadd( 30.428, -210.647, 2.14404, 0.15 ) }
    dend_22 { pt3dadd( 30.9999, -211.642, 1.69665, 0.15 ) }
    dend_22 { pt3dadd( 31.0276, -211.687, 1.67489, 0.15 ) }
    dend_22 { pt3dadd( 31.5362, -212.467, 1.28018, 0.15 ) }
    dend_22 { pt3dadd( 31.8426, -212.919, 1.04805, 1.84 ) }
    dend_22 { pt3dadd( 32.2316, -213.483, 0.747898, 2.28 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 33/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 14.9945, -82.7465, 13.4815, 0.59 ) }
    dend_15 { pt3dadd( 16.7702, -91.3052, 21.9974, 0.59 ) }
    dend_15 { pt3dadd( 18.764, -98.4663, 31.7938, 0.59 ) }
    dend_15 { pt3dadd( 20.5109, -106.414, 40.9486, 0.59 ) }
    dend_15 { pt3dadd( 22.6432, -115.037, 49.3052, 0.59 ) }
    dend_15 { pt3dadd( 22.8594, -124.785, 56.4981, 0.59 ) }
    dend_15 { pt3dadd( 23.8023, -134.396, 63.8262, 0.59 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 40/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 14.9945, -82.7465, 13.4815, 0.52 ) }
    dend_14 { pt3dadd( 17.891, -91.0149, 9.76471, 0.59 ) }
    dend_14 { pt3dadd( 21.757, -98.7256, 5.64122, 0.59 ) }
    dend_14 { pt3dadd( 24.6095, -106.156, 0.298702, 0.59 ) }
    dend_14 { pt3dadd( 26.254, -114.501, -3.96657, 0.59 ) }
    dend_14 { pt3dadd( 29.4939, -121.809, -9.27061, 0.59 ) }
    dend_14 { pt3dadd( 31.8947, -129.049, -15.1037, 0.59 ) }
    dend_14 { pt3dadd( 33.7559, -136.067, -21.4186, 0.59 ) }
    // Section: dend_12, id: dend_12, parent: dend_6 (entry count 48/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -7.98066, -35.152, -2.20002, 1.4 ) }
    dend_12 { pt3dadd( -8.2213, -37.3738, -4.77, 1.4 ) }
    dend_12 { pt3dadd( -8.37546, -38.2364, -5.49678, 0.52 ) }
    dend_12 { pt3dadd( -8.38891, -38.2929, -5.53639, 0.52 ) }
    dend_12 { pt3dadd( -8.68374, -39.2912, -6.17322, 0.81 ) }
    dend_12 { pt3dadd( -8.89606, -39.9106, -6.60571, 1.03 ) }
    dend_12 { pt3dadd( -9.19504, -40.712, -7.28873, 1.25 ) }
    dend_12 { pt3dadd( -9.67703, -41.6996, -8.04554, 0.66 ) }
    dend_12 { pt3dadd( -9.98094, -42.2715, -8.56697, 0.66 ) }
    dend_12 { pt3dadd( -10.2113, -42.6545, -8.99633, 0.66 ) }
    dend_12 { pt3dadd( -10.6559, -43.2969, -10.0151, 0.66 ) }
    dend_12 { pt3dadd( -11.1955, -43.9881, -11.4521, 0.66 ) }
    dend_12 { pt3dadd( -11.2154, -44.0146, -11.5161, 0.66 ) }
    dend_12 { pt3dadd( -11.3971, -44.3101, -12.1819, 0.66 ) }
    dend_12 { pt3dadd( -11.4056, -44.3439, -12.2339, 0.66 ) }
    dend_12 { pt3dadd( -11.5079, -45.2344, -13.0549, 0.44 ) }
    dend_12 { pt3dadd( -11.5122, -45.287, -13.0858, 0.44 ) }
    dend_12 { pt3dadd( -11.6517, -46.1739, -13.4678, 0.44 ) }
    dend_12 { pt3dadd( -11.8092, -46.9653, -13.8402, 0.59 ) }
    dend_12 { pt3dadd( -12.0698, -48.1912, -14.4414, 0.88 ) }
    dend_12 { pt3dadd( -12.2735, -49.001, -14.8375, 0.88 ) }
    dend_12 { pt3dadd( -12.2882, -49.0541, -14.8639, 0.88 ) }
    dend_12 { pt3dadd( -12.6843, -50.435, -15.6408, 0.88 ) }
    dend_12 { pt3dadd( -13.0693, -51.6118, -16.3895, 0.66 ) }
    dend_12 { pt3dadd( -13.3278, -52.2926, -16.8581, 0.59 ) }
    dend_12 { pt3dadd( -13.4955, -52.7092, -17.1351, 0.59 ) }
    dend_12 { pt3dadd( -13.8205, -53.5887, -17.7613, 0.59 ) }
    dend_12 { pt3dadd( -14.0913, -54.375, -18.316, 0.22 ) }
    dend_12 { pt3dadd( -14.2437, -54.8641, -18.6504, 0.22 ) }
    dend_12 { pt3dadd( -14.4192, -55.445, -19.0663, 0.22 ) }
    dend_12 { pt3dadd( -14.6668, -56.3101, -19.7103, 0.22 ) }
    dend_12 { pt3dadd( -14.9584, -57.4339, -20.5632, 1.47 ) }
    dend_12 { pt3dadd( -15.0739, -58.0062, -21.0162, 2.28 ) }
    dend_12 { pt3dadd( -15.1411, -58.4189, -21.3372, 2.28 ) }
    dend_12 { pt3dadd( -15.3285, -60.1606, -22.7521, 0.59 ) }
    dend_12 { pt3dadd( -15.3564, -60.8661, -23.3719, 0.59 ) }
    dend_12 { pt3dadd( -15.3547, -60.9089, -23.4169, 0.59 ) }
    dend_12 { pt3dadd( -15.3445, -61.9491, -24.4924, 0.59 ) }
    dend_12 { pt3dadd( -15.3484, -62.8639, -25.463, 0.44 ) }
    dend_12 { pt3dadd( -15.3564, -63.6146, -26.2635, 1.55 ) }
    dend_12 { pt3dadd( -15.3837, -64.7574, -27.4423, 1.55 ) }
    dend_12 { pt3dadd( -15.4131, -66.5125, -29.3251, 0.29 ) }
    dend_12 { pt3dadd( -15.5041, -68.2404, -31.1324, 0.22 ) }
    dend_12 { pt3dadd( -15.508, -68.2836, -31.1766, 0.22 ) }
    dend_12 { pt3dadd( -15.5522, -68.7294, -31.6306, 1.18 ) }
    dend_12 { pt3dadd( -15.605, -69.0604, -31.9381, 1.4 ) }
    dend_12 { pt3dadd( -15.8728, -70.2375, -32.9346, 0.22 ) }
    dend_12 { pt3dadd( -16.1634, -71.6082, -34.0917, 0.22 ) }
    dend_12 { pt3dadd( -16.1715, -71.6621, -34.1364, 0.22 ) }
    dend_12 { pt3dadd( -16.2709, -72.2349, -34.5718, 1.84 ) }
    dend_12 { pt3dadd( -16.3402, -72.569, -34.8015, 1.84 ) }
    dend_12 { pt3dadd( -16.3531, -72.6272, -34.8383, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_12 { pt3dadd( -16.7109, -74.3719, -35.8974, 0.22 ) }
    dend_12 { pt3dadd( -17.2, -76.5782, -37.1683, 0.22 ) }
    dend_12 { pt3dadd( -17.2505, -76.7804, -37.2775, 0.96 ) }
    dend_12 { pt3dadd( -17.4063, -77.3507, -37.5623, 0.96 ) }
    dend_12 { pt3dadd( -17.4217, -77.4044, -37.5871, 0.96 ) }
    dend_12 { pt3dadd( -17.8467, -78.7434, -38.1439, 0.22 ) }
    dend_12 { pt3dadd( -18.8723, -81.5345, -38.996, 0.22 ) }
    dend_12 { pt3dadd( -19.0143, -81.921, -39.1066, 1.55 ) }
    dend_12 { pt3dadd( -19.1975, -82.404, -39.2185, 1.84 ) }
    dend_12 { pt3dadd( -19.4038, -82.9346, -39.3205, 1.11 ) }
    dend_12 { pt3dadd( -19.5925, -83.4066, -39.3913, 0.22 ) }
    dend_12 { pt3dadd( -20.7208, -86.1846, -39.6363, 0.22 ) }
    dend_12 { pt3dadd( -20.7454, -86.2492, -39.6404, 0.22 ) }
    dend_12 { pt3dadd( -21.5855, -88.6254, -39.7566, 0.22 ) }
    dend_12 { pt3dadd( -21.6076, -88.6909, -39.7588, 0.22 ) }
    dend_12 { pt3dadd( -21.7463, -89.1288, -39.7662, 1.25 ) }
    dend_12 { pt3dadd( -21.9007, -89.6772, -39.764, 1.25 ) }
    dend_12 { pt3dadd( -22.082, -90.4627, -39.7373, 0.15 ) }
    dend_12 { pt3dadd( -22.4599, -92.8006, -39.7847, 0.15 ) }
    dend_12 { pt3dadd( -22.4655, -92.8605, -39.7881, 0.15 ) }
    dend_12 { pt3dadd( -22.4887, -93.1827, -39.8169, 0.96 ) }
    dend_12 { pt3dadd( -22.5159, -93.7415, -39.883, 0.96 ) }
    dend_12 { pt3dadd( -22.5169, -94.3059, -39.9852, 0.15 ) }
    dend_12 { pt3dadd( -22.413, -96.8036, -40.5637, 0.15 ) }
    dend_12 { pt3dadd( -22.3837, -97.1705, -40.6604, 1.11 ) }
    dend_12 { pt3dadd( -22.3405, -97.6626, -40.7883, 1.25 ) }
    dend_12 { pt3dadd( -22.3366, -97.7212, -40.8024, 1.25 ) }
    dend_12 { pt3dadd( -22.1887, -100.494, -41.5137, 0.15 ) }
    dend_12 { pt3dadd( -22.1867, -100.553, -41.5286, 0.15 ) }
    dend_12 { pt3dadd( -22.1779, -100.851, -41.6194, 0.37 ) }
    dend_12 { pt3dadd( -22.1927, -101.281, -41.7651, 0.37 ) }
    dend_12 { pt3dadd( -22.3059, -102.996, -42.4839, 0.22 ) }
    dend_12 { pt3dadd( -22.4148, -104.207, -43.0432, 1.47 ) }
    dend_12 { pt3dadd( -22.4761, -104.716, -43.2912, 1.47 ) }
    dend_12 { pt3dadd( -22.6527, -106.11, -44.0028, 0.15 ) }
    dend_12 { pt3dadd( -23.0392, -109.019, -45.5578, 0.15 ) }
    dend_12 { pt3dadd( -23.4168, -111.539, -46.9587, 0.15 ) }
    dend_12 { pt3dadd( -23.4253, -111.591, -46.9889, 0.15 ) }
    dend_12 { pt3dadd( -23.5912, -112.498, -47.5039, 0.15 ) }
    dend_12 { pt3dadd( -23.8432, -113.456, -47.9991, 1.62 ) }
    dend_12 { pt3dadd( -23.8614, -113.509, -48.0229, 1.62 ) }
    dend_12 { pt3dadd( -24.1127, -114.134, -48.3011, 1.62 ) }
    dend_12 { pt3dadd( -24.1385, -114.186, -48.3205, 1.62 ) }
    dend_12 { pt3dadd( -24.5474, -114.964, -48.6037, 0.15 ) }
    dend_12 { pt3dadd( -26.6045, -118.474, -49.9645, 0.15 ) }
    dend_12 { pt3dadd( -26.6518, -118.549, -49.9929, 0.52 ) }
    dend_12 { pt3dadd( -26.6841, -118.598, -50.012, 0.52 ) }
    dend_12 { pt3dadd( -27.0009, -119.054, -50.1962, 0.52 ) }
    dend_12 { pt3dadd( -27.106, -119.194, -50.2545, 0.15 ) }
    dend_12 { pt3dadd( -28.663, -121.047, -51.048, 0.15 ) }
    dend_12 { pt3dadd( -28.8714, -121.297, -51.2353, 0.81 ) }
    dend_12 { pt3dadd( -29.173, -121.707, -51.5849, 0.81 ) }
    dend_12 { pt3dadd( -29.1975, -121.748, -51.6253, 0.81 ) }
    dend_12 { pt3dadd( -29.2949, -121.928, -51.8259, 0.15 ) }
    dend_12 { pt3dadd( -29.3158, -121.964, -51.8718, 0.15 ) }
    dend_12 { pt3dadd( -30.4622, -123.538, -54.016, 0.15 ) }
    dend_12 { pt3dadd( -30.4622, -123.538, -54.016, 0.44 ) }
    dend_12 { pt3dadd( -30.9503, -124.063, -54.7424, 0.22 ) }
    dend_12 { pt3dadd( -31.6366, -124.776, -55.7239, 0.22 ) }
    dend_12 { pt3dadd( -32.8212, -125.945, -57.3213, 0.22 ) }
    dend_12 { pt3dadd( -34.5099, -127.465, -59.3606, 0.22 ) }
    dend_12 { pt3dadd( -34.7613, -127.656, -59.6054, 0.81 ) }
    dend_12 { pt3dadd( -35.1046, -127.909, -59.9267, 0.81 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 63/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -7.98066, -35.152, -2.20002, 2.28 ) }
    dend_7 { pt3dadd( -7.96672, -35.3884, -2.10921, 2.28 ) }
    dend_7 { pt3dadd( -7.96303, -35.4352, -2.09238, 2.28 ) }
    dend_7 { pt3dadd( -7.8973, -36.2477, -1.82235, 1.62 ) }
    dend_7 { pt3dadd( -7.81265, -37.2801, -1.51711, 1.4 ) }
    dend_7 { pt3dadd( -7.72261, -38.2275, -1.25915, 1.55 ) }
    dend_7 { pt3dadd( -7.63755, -39.0773, -1.03627, 1.55 ) }
    dend_7 { pt3dadd( -7.56627, -39.6663, -0.889777, 1.55 ) }
    dend_7 { pt3dadd( -7.47935, -40.3175, -0.73551, 1.33 ) }
    dend_7 { pt3dadd( -7.27439, -41.6777, -0.434285, 1.18 ) }
    dend_7 { pt3dadd( -7.04829, -43.2267, -0.116243, 1.18 ) }
    dend_7 { pt3dadd( -7.04204, -43.275, -0.106423, 1.18 ) }
    dend_7 { pt3dadd( -6.83837, -45.0326, 0.250402, 1.18 ) }
    dend_7 { pt3dadd( -6.8343, -45.081, 0.260944, 1.18 ) }
    dend_7 { pt3dadd( -6.76879, -46.2765, 0.532857, 0.88 ) }
    dend_7 { pt3dadd( -6.72657, -48.9243, 1.13763, 0.88 ) }
    dend_7 { pt3dadd( -6.74101, -49.4784, 1.25965, 1.18 ) }
    dend_7 { pt3dadd( -6.78323, -50.2408, 1.42011, 1.4 ) }
    dend_7 { pt3dadd( -6.88443, -51.3193, 1.63727, 1.4 ) }
    dend_7 { pt3dadd( -6.98204, -52.2352, 1.81338, 1.47 ) }
    dend_7 { pt3dadd( -7.07126, -52.9585, 1.94324, 1.77 ) }
    dend_7 { pt3dadd( -7.1428, -53.6771, 2.05773, 1.77 ) }
    dend_7 { pt3dadd( -7.19729, -54.4465, 2.17328, 1.92 ) }
    dend_7 { pt3dadd( -7.19843, -54.4956, 2.1803, 1.92 ) }
    dend_7 { pt3dadd( -7.16181, -55.2673, 2.28844, 1.55 ) }
    dend_7 { pt3dadd( -7.05051, -56.2323, 2.45987, 1.47 ) }
    dend_7 { pt3dadd( -6.75865, -57.8474, 2.80235, 1.11 ) }
    dend_7 { pt3dadd( -6.74603, -57.9014, 2.8154, 1.11 ) }
    dend_7 { pt3dadd( -6.58099, -58.5099, 2.97526, 0.96 ) }
    dend_7 { pt3dadd( -6.37964, -59.1692, 3.14515, 1.18 ) }
    dend_7 { pt3dadd( -6.09531, -59.9684, 3.35304, 1.47 ) }
    dend_7 { pt3dadd( -5.66069, -61.0496, 3.60806, 0.96 ) }
    dend_7 { pt3dadd( -5.36633, -61.7458, 3.74767, 1.11 ) }
    dend_7 { pt3dadd( -5.34807, -61.7918, 3.75507, 1.11 ) }
    dend_7 { pt3dadd( -5.0972, -62.4987, 3.83668, 1.4 ) }
    dend_7 { pt3dadd( -4.84992, -63.4245, 3.93514, 1.84 ) }
    dend_7 { pt3dadd( -4.72628, -64.1394, 4.01167, 2.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_7 { pt3dadd( -4.6776, -64.6597, 4.07131, 2.14 ) }
    dend_7 { pt3dadd( -4.67449, -65.1714, 4.14919, 1.99 ) }
    dend_7 { pt3dadd( -4.72812, -65.8919, 4.26722, 1.18 ) }
    dend_7 { pt3dadd( -4.93894, -67.1169, 4.45549, 1.03 ) }
    dend_7 { pt3dadd( -5.2008, -68.2709, 4.60945, 0.88 ) }
    dend_7 { pt3dadd( -5.43046, -69.2827, 4.73558, 0.74 ) }
    dend_7 { pt3dadd( -5.67317, -70.4324, 4.86723, 0.59 ) }
    dend_7 { pt3dadd( -5.89059, -71.7121, 5.0059, 0.59 ) }
    dend_7 { pt3dadd( -6.04362, -73.1242, 5.15804, 0.59 ) }
    dend_7 { pt3dadd( -6.12304, -74.5564, 5.34239, 0.59 ) }
    dend_7 { pt3dadd( -6.09985, -75.8181, 5.56712, 0.59 ) }
    dend_7 { pt3dadd( -6.05217, -76.3121, 5.67631, 1.18 ) }
    dend_7 { pt3dadd( -5.79927, -77.7943, 6.03976, 1.18 ) }
    dend_7 { pt3dadd( -5.48869, -79.1316, 6.42113, 0.88 ) }
    dend_7 { pt3dadd( -5.23264, -80.067, 6.71985, 1.25 ) }
    dend_7 { pt3dadd( -4.55678, -82.5233, 7.52911, 1.25 ) }
    dend_7 { pt3dadd( -4.27985, -83.5991, 7.87539, 0.81 ) }
    dend_7 { pt3dadd( -4.11333, -84.2922, 8.08464, 1.47 ) }
    dend_7 { pt3dadd( -3.93983, -85.0903, 8.30468, 1.84 ) }
    dend_7 { pt3dadd( -3.83125, -85.6495, 8.43897, 2.14 ) }
    dend_7 { pt3dadd( -3.70847, -86.46, 8.58616, 0.74 ) }
    dend_7 { pt3dadd( -3.60956, -88.3161, 8.84416, 0.52 ) }
    dend_7 { pt3dadd( -3.62284, -89.1953, 8.94064, 0.52 ) }
    dend_7 { pt3dadd( -3.63884, -89.5867, 8.98014, 0.88 ) }
    dend_7 { pt3dadd( -3.65877, -89.9498, 9.01103, 1.18 ) }
    dend_7 { pt3dadd( -3.74132, -91.1777, 9.09521, 1.18 ) }
    dend_7 { pt3dadd( -3.81729, -92.3012, 9.17201, 0.66 ) }
    dend_7 { pt3dadd( -3.91326, -93.6508, 9.26186, 0.59 ) }
    dend_7 { pt3dadd( -3.98805, -95.0941, 9.37216, 0.88 ) }
    dend_7 { pt3dadd( -3.9937, -95.4584, 9.40675, 1.33 ) }
    dend_7 { pt3dadd( -3.97741, -96.5674, 9.52918, 1.33 ) }
    dend_7 { pt3dadd( -3.88314, -98.0709, 9.71106, 1.33 ) }
    dend_7 { pt3dadd( -3.79411, -98.996, 9.82556, 1.62 ) }
    dend_7 { pt3dadd( -3.68167, -100.02, 9.94644, 1.62 ) }
    dend_7 { pt3dadd( -3.54271, -100.981, 10.0399, 1.55 ) }
    dend_7 { pt3dadd( -3.53267, -101.036, 10.0446, 1.55 ) }
    dend_7 { pt3dadd( -3.37513, -101.768, 10.1015, 1.11 ) }
    dend_7 { pt3dadd( -3.06632, -103.107, 10.1816, 0.66 ) }
    dend_7 { pt3dadd( -2.76737, -104.376, 10.2241, 0.66 ) }
    dend_7 { pt3dadd( -2.58838, -105.216, 10.2316, 1.47 ) }
    dend_7 { pt3dadd( -2.57933, -105.273, 10.2311, 1.47 ) }
    dend_7 { pt3dadd( -2.4464, -106.304, 10.2159, 1.47 ) }
    dend_7 { pt3dadd( -2.44098, -106.353, 10.2137, 1.47 ) }
    dend_7 { pt3dadd( -2.34807, -107.45, 10.1261, 1.77 ) }
    dend_7 { pt3dadd( -2.2643, -108.323, 10.0283, 2.21 ) }
    dend_7 { pt3dadd( -2.18196, -109.209, 9.92953, 2.21 ) }
    dend_7 { pt3dadd( -2.17799, -109.251, 9.92534, 2.21 ) }
    dend_7 { pt3dadd( -2.04646, -110.655, 9.83259, 2.36 ) }
    dend_7 { pt3dadd( -1.9361, -111.908, 9.78804, 2.36 ) }
    dend_7 { pt3dadd( -1.84279, -113.124, 9.77122, 1.99 ) }
    dend_7 { pt3dadd( -1.78288, -114.002, 9.77412, 1.03 ) }
    dend_7 { pt3dadd( -1.68741, -116.128, 9.81459, 0.66 ) }
    dend_7 { pt3dadd( -1.64015, -118.572, 9.90503, 0.66 ) }
    dend_7 { pt3dadd( -1.64901, -119.606, 9.96782, 0.81 ) }
    dend_7 { pt3dadd( -1.66382, -120.295, 10.0189, 0.96 ) }
    dend_7 { pt3dadd( -1.70253, -120.969, 10.0948, 0.74 ) }
    dend_7 { pt3dadd( -1.79095, -122.351, 10.2825, 0.74 ) }
    dend_7 { pt3dadd( -1.84256, -123.064, 10.3981, 1.11 ) }
    dend_7 { pt3dadd( -1.84615, -123.12, 10.4074, 1.11 ) }
    dend_7 { pt3dadd( -1.8732, -123.942, 10.5295, 1.4 ) }
    dend_7 { pt3dadd( -1.88374, -125.589, 10.7479, 1.4 ) }
    dend_7 { pt3dadd( -1.85846, -127.349, 10.9489, 1.18 ) }
    dend_7 { pt3dadd( -1.85672, -127.399, 10.9539, 1.18 ) }
    dend_7 { pt3dadd( -1.75601, -129.094, 11.0371, 0.74 ) }
    dend_7 { pt3dadd( -1.70134, -129.734, 11.0437, 1.18 ) }
    dend_7 { pt3dadd( -1.62531, -130.313, 11.0161, 1.62 ) }
    dend_7 { pt3dadd( -1.46435, -131.174, 10.9021, 1.77 ) }
    dend_7 { pt3dadd( -1.28103, -132.029, 10.7641, 1.77 ) }
    dend_7 { pt3dadd( -1.0088, -133.215, 10.5774, 0.59 ) }
    dend_7 { pt3dadd( -0.548761, -135.03, 10.2911, 0.59 ) }
    dend_7 { pt3dadd( -0.126133, -136.651, 10.0513, 0.59 ) }
    dend_7 { pt3dadd( 0.200874, -137.889, 9.88264, 0.59 ) }
    dend_7 { pt3dadd( 0.365637, -138.523, 9.80038, 1.62 ) }
    dend_7 { pt3dadd( 0.595794, -139.502, 9.68632, 1.77 ) }
    dend_7 { pt3dadd( 1.02594, -141.6, 9.50156, 1.77 ) }
    dend_7 { pt3dadd( 1.15972, -142.333, 9.44488, 1.03 ) }
    dend_7 { pt3dadd( 1.35249, -143.677, 9.38859, 0.66 ) }
    dend_7 { pt3dadd( 1.50019, -144.99, 9.37775, 0.29 ) }
    dend_7 { pt3dadd( 1.57087, -145.857, 9.38179, 0.29 ) }
    dend_7 { pt3dadd( 1.59833, -146.454, 9.39617, 0.29 ) }
    dend_7 { pt3dadd( 1.59135, -146.864, 9.42421, 1.03 ) }
    dend_7 { pt3dadd( 1.56224, -147.488, 9.47468, 1.25 ) }
    dend_7 { pt3dadd( 1.48269, -148.324, 9.55629, 1.25 ) }
    dend_7 { pt3dadd( 1.39074, -149.031, 9.64762, 0.37 ) }
    dend_7 { pt3dadd( 1.38382, -149.087, 9.6547, 0.37 ) }
    dend_7 { pt3dadd( 1.19737, -150.437, 9.79278, 0.29 ) }
    dend_7 { pt3dadd( 1.19053, -150.493, 9.7954, 0.29 ) }
    dend_7 { pt3dadd( 1.14537, -150.931, 9.80026, 1.33 ) }
    dend_7 { pt3dadd( 1.06316, -151.759, 9.79295, 2.21 ) }
    dend_7 { pt3dadd( 0.970388, -152.898, 9.76215, 2.21 ) }
    dend_7 { pt3dadd( 0.873433, -154.267, 9.72129, 1.84 ) }
    dend_7 { pt3dadd( 0.802606, -155.552, 9.67243, 1.4 ) }
    dend_7 { pt3dadd( 0.750919, -156.636, 9.62681, 1.4 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 93/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -88.4462, -13.8943, -1.28558, 0.66 ) }
    dend_3 { pt3dadd( -89.5203, -15.832, -0.539794, 0.66 ) }
    dend_3 { pt3dadd( -89.552, -15.8925, -0.515714, 0.66 ) }
    dend_3 { pt3dadd( -89.8354, -16.7014, -0.182446, 0.22 ) }
    dend_3 { pt3dadd( -89.9398, -17.0961, 0.0853134, 0.22 ) }
    dend_3 { pt3dadd( -90.1313, -17.7295, 0.544681, 0.22 ) }
    dend_3 { pt3dadd( -90.1496, -17.7862, 0.586957, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_3 { pt3dadd( -90.3531, -18.4015, 1.06002, 1.11 ) }
    dend_3 { pt3dadd( -90.7169, -19.5404, 1.95897, 2.06 ) }
    dend_3 { pt3dadd( -91.395, -22.1396, 3.88641, 0.22 ) }
    dend_3 { pt3dadd( -91.5428, -22.7237, 4.30845, 0.22 ) }
    dend_3 { pt3dadd( -91.5573, -22.7821, 4.34976, 0.22 ) }
    dend_3 { pt3dadd( -91.6249, -23.099, 4.54536, 0.22 ) }
    dend_3 { pt3dadd( -91.638, -23.1727, 4.58061, 0.22 ) }
    dend_3 { pt3dadd( -91.6882, -24.6721, 5.02187, 0.22 ) }
    dend_3 { pt3dadd( -91.6792, -24.7424, 5.0211, 0.22 ) }
    dend_3 { pt3dadd( -91.5901, -25.3716, 5.04918, 0.66 ) }
    dend_3 { pt3dadd( -91.545, -25.7675, 5.11061, 0.66 ) }
    dend_3 { pt3dadd( -91.5405, -25.8472, 5.12843, 0.66 ) }
    dend_3 { pt3dadd( -91.5756, -27.1758, 5.48427, 0.22 ) }
    dend_3 { pt3dadd( -91.7243, -28.2846, 5.82169, 0.22 ) }
    dend_3 { pt3dadd( -91.7364, -28.3544, 5.82847, 0.22 ) }
    dend_3 { pt3dadd( -91.8979, -29.276, 5.87767, 0.74 ) }
    dend_3 { pt3dadd( -92.0029, -29.9247, 5.88908, 1.03 ) }
    dend_3 { pt3dadd( -92.0465, -30.2523, 5.88574, 1.03 ) }
    dend_3 { pt3dadd( -92.0714, -30.7183, 5.84131, 0.15 ) }
    dend_3 { pt3dadd( -92.0251, -32.9245, 5.58347, 0.15 ) }
    dend_3 { pt3dadd( -91.9207, -34.3052, 5.43834, 1.03 ) }
    dend_3 { pt3dadd( -91.8433, -34.9629, 5.36879, 1.47 ) }
    dend_3 { pt3dadd( -91.7101, -35.7331, 5.30301, 0.22 ) }
    dend_3 { pt3dadd( -91.2815, -37.7196, 5.15673, 0.22 ) }
    dend_3 { pt3dadd( -91.2551, -37.8162, 5.15097, 0.22 ) }
    dend_3 { pt3dadd( -90.8382, -39.0689, 5.24646, 0.22 ) }
    dend_3 { pt3dadd( -90.8165, -39.1365, 5.25406, 0.22 ) }
    dend_3 { pt3dadd( -90.6383, -39.732, 5.38709, 1.11 ) }
    dend_3 { pt3dadd( -90.5658, -40.0085, 5.47201, 1.11 ) }
    dend_3 { pt3dadd( -90.5347, -40.15, 5.52588, 1.11 ) }
    dend_3 { pt3dadd( -90.0503, -42.4448, 6.08164, 0.22 ) }
    dend_3 { pt3dadd( -89.8727, -43.3104, 6.24969, 0.22 ) }
    dend_3 { pt3dadd( -89.8372, -43.4743, 6.28605, 0.81 ) }
    dend_3 { pt3dadd( -89.7426, -43.9291, 6.3891, 0.81 ) }
    dend_3 { pt3dadd( -89.5825, -44.8165, 6.61131, 0.15 ) }
    dend_3 { pt3dadd( -89.3856, -46.2209, 6.94389, 0.15 ) }
    dend_3 { pt3dadd( -89.2778, -47.1587, 7.13473, 0.88 ) }
    dend_3 { pt3dadd( -89.1271, -48.8561, 7.55393, 1.55 ) }
    dend_3 { pt3dadd( -89.1081, -49.46, 7.73297, 1.92 ) }
    dend_3 { pt3dadd( -89.1477, -51.051, 8.51468, 0.15 ) }
    dend_3 { pt3dadd( -89.1822, -51.5545, 8.83528, 0.15 ) }
    dend_3 { pt3dadd( -89.1982, -51.7473, 8.95754, 0.59 ) }
    dend_3 { pt3dadd( -89.211, -51.8948, 9.04472, 0.59 ) }
    dend_3 { pt3dadd( -89.3195, -53.2132, 9.82458, 0.59 ) }
    dend_3 { pt3dadd( -89.4062, -56.3655, 11.5103, 0.22 ) }
    dend_3 { pt3dadd( -89.4049, -56.4307, 11.5415, 0.22 ) }
    dend_3 { pt3dadd( -89.255, -58.5795, 12.4767, 0.22 ) }
    dend_3 { pt3dadd( -89.2484, -58.6555, 12.5081, 0.52 ) }
    dend_3 { pt3dadd( -89.2406, -58.723, 12.5319, 0.52 ) }
    dend_3 { pt3dadd( -88.9054, -60.6376, 12.8697, 0.15 ) }
    dend_3 { pt3dadd( -88.8926, -60.7066, 12.8617, 0.15 ) }
    dend_3 { pt3dadd( -88.6102, -62.1556, 12.7841, 1.18 ) }
    dend_3 { pt3dadd( -89.5964, -71.9193, 15.7907, 1.18 ) }
    dend_3 { pt3dadd( -90.369, -80.8501, 21.0295, 1.18 ) }
    dend_3 { pt3dadd( -90.2156, -90.1816, 25.4784, 1.18 ) }
    dend_3 { pt3dadd( -92.2829, -99.8623, 28.1662, 1.18 ) }
    dend_3 { pt3dadd( -95.9942, -109.311, 29.3201, 1.18 ) }
    dend_3 { pt3dadd( -97.5628, -119.325, 29.8423, 1.18 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 58/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -88.4462, -13.8943, -1.28558, 0.22 ) }
    dend_2 { pt3dadd( -89.7231, -14.3516, -1.52611, 0.22 ) }
    dend_2 { pt3dadd( -89.7844, -14.3743, -1.53725, 0.22 ) }
    dend_2 { pt3dadd( -90.8968, -14.7822, -1.71813, 0.22 ) }
    dend_2 { pt3dadd( -91.2535, -14.9107, -1.77131, 0.81 ) }
    dend_2 { pt3dadd( -91.6753, -15.0579, -1.81831, 0.81 ) }
    dend_2 { pt3dadd( -91.7528, -15.0833, -1.82814, 0.81 ) }
    dend_2 { pt3dadd( -91.999, -15.158, -1.85402, 0.81 ) }
    dend_2 { pt3dadd( -92.5978, -15.3329, -1.92295, 0.15 ) }
    dend_2 { pt3dadd( -92.717, -15.3663, -1.93743, 0.15 ) }
    dend_2 { pt3dadd( -95.0801, -16.0515, -2.22258, 0.15 ) }
    dend_2 { pt3dadd( -95.5768, -16.1947, -2.28952, 0.81 ) }
    dend_2 { pt3dadd( -95.9296, -16.2954, -2.33929, 0.96 ) }
    dend_2 { pt3dadd( -96.2428, -16.3843, -2.38517, 0.96 ) }
    dend_2 { pt3dadd( -97.0479, -16.6175, -2.50754, 0.15 ) }
    dend_2 { pt3dadd( -98.6229, -17.1294, -2.74532, 0.15 ) }
    dend_2 { pt3dadd( -98.96, -17.2602, -2.77805, 0.74 ) }
    dend_2 { pt3dadd( -99.3633, -17.431, -2.79716, 1.11 ) }
    dend_2 { pt3dadd( -99.5403, -17.5102, -2.80135, 1.11 ) }
    dend_2 { pt3dadd( -100.117, -17.7869, -2.77393, 0.22 ) }
    dend_2 { pt3dadd( -102.295, -18.782, -2.4937, 0.15 ) }
    dend_2 { pt3dadd( -103.279, -19.1889, -2.30412, 1.33 ) }
    dend_2 { pt3dadd( -103.617, -19.3098, -2.2293, 1.62 ) }
    dend_2 { pt3dadd( -103.679, -19.3283, -2.21328, 1.62 ) }
    dend_2 { pt3dadd( -104.8, -19.5966, -1.89643, 0.15 ) }
    dend_2 { pt3dadd( -106.895, -19.962, -1.2508, 0.15 ) }
    dend_2 { pt3dadd( -107.615, -20.0294, -1.02257, 0.66 ) }
    dend_2 { pt3dadd( -108.573, -20.0922, -0.76757, 0.66 ) }
    dend_2 { pt3dadd( -109.474, -20.147, -0.547497, 1.69 ) }
    dend_2 { pt3dadd( -110.02, -20.1754, -0.427488, 2.14 ) }
    dend_2 { pt3dadd( -110.259, -20.1856, -0.386803, 2.14 ) }
    dend_2 { pt3dadd( -111.246, -20.2626, -0.226411, 0.15 ) }
    dend_2 { pt3dadd( -112.233, -20.3811, -0.0947825, 0.15 ) }
    dend_2 { pt3dadd( -112.414, -20.4088, -0.0851295, 0.81 ) }
    dend_2 { pt3dadd( -112.463, -20.4191, -0.0889235, 0.81 ) }
    dend_2 { pt3dadd( -112.964, -20.541, -0.179121, 1.11 ) }
    dend_2 { pt3dadd( -113.373, -20.6542, -0.28227, 0.66 ) }
    dend_2 { pt3dadd( -113.486, -20.6902, -0.318639, 0.66 ) }
    dend_2 { pt3dadd( -114.061, -20.8966, -0.527091, 0.15 ) }
    dend_2 { pt3dadd( -115.817, -21.5739, -1.16712, 0.15 ) }
    dend_2 { pt3dadd( -116.582, -21.8852, -1.44739, 1.62 ) }
    dend_2 { pt3dadd( -116.958, -22.0478, -1.58428, 2.06 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_2 { pt3dadd( -117.218, -22.1624, -1.68265, 1.99 ) }
    dend_2 { pt3dadd( -117.945, -22.4749, -1.94374, 0.15 ) }
    dend_2 { pt3dadd( -118.548, -22.7124, -2.15161, 0.29 ) }
    dend_2 { pt3dadd( -118.699, -22.7647, -2.2071, 0.59 ) }
    dend_2 { pt3dadd( -119.102, -22.892, -2.34288, 0.59 ) }
    dend_2 { pt3dadd( -119.746, -23.0755, -2.55469, 0.22 ) }
    dend_2 { pt3dadd( -120.36, -23.2188, -2.78876, 0.22 ) }
    dend_2 { pt3dadd( -122.024, -23.5766, -3.45441, 0.15 ) }
    dend_2 { pt3dadd( -122.382, -23.6515, -3.6015, 0.74 ) }
    dend_2 { pt3dadd( -122.825, -23.7442, -3.78117, 0.74 ) }
    dend_2 { pt3dadd( -123.125, -23.8084, -3.89966, 0.74 ) }
    dend_2 { pt3dadd( -124.194, -24.0612, -4.29781, 0.15 ) }
    dend_2 { pt3dadd( -125.843, -24.4278, -5.00342, 0.15 ) }
    dend_2 { pt3dadd( -125.902, -24.4394, -5.03103, 0.15 ) }
    dend_2 { pt3dadd( -126.182, -24.4853, -5.1637, 0.59 ) }
    dend_2 { pt3dadd( -126.406, -24.5163, -5.26986, 0.88 ) }
    dend_2 { pt3dadd( -126.786, -24.5626, -5.41656, 1.18 ) }
    dend_2 { pt3dadd( -127.804, -24.7195, -5.65581, 1.18 ) }
    dend_2 { pt3dadd( -127.861, -24.7266, -5.66791, 1.18 ) }
    dend_2 { pt3dadd( -128.463, -24.8174, -5.777, 0.15 ) }
    dend_2 { pt3dadd( -128.52, -24.8271, -5.7855, 0.15 ) }
    dend_2 { pt3dadd( -129.777, -25.068, -5.94203, 0.15 ) }
    dend_2 { pt3dadd( -131.113, -25.4601, -6.09055, 0.15 ) }
    dend_2 { pt3dadd( -131.175, -25.4827, -6.09604, 0.15 ) }
    dend_2 { pt3dadd( -131.471, -25.6006, -6.12904, 0.66 ) }
    dend_2 { pt3dadd( -131.704, -25.704, -6.16164, 0.66 ) }
    dend_2 { pt3dadd( -131.904, -25.8019, -6.19442, 0.22 ) }
    dend_2 { pt3dadd( -133.865, -26.9068, -6.59347, 0.22 ) }
    dend_2 { pt3dadd( -133.913, -26.9361, -6.60429, 0.22 ) }
    dend_2 { pt3dadd( -134.197, -27.1224, -6.67141, 0.74 ) }
    dend_2 { pt3dadd( -134.481, -27.316, -6.7536, 1.03 ) }
    dend_2 { pt3dadd( -134.783, -27.5297, -6.85339, 1.03 ) }
    dend_2 { pt3dadd( -134.989, -27.681, -6.9291, 1.03 ) }
    dend_2 { pt3dadd( -135.379, -27.9587, -7.10077, 0.15 ) }
    dend_2 { pt3dadd( -136.55, -28.7836, -7.62779, 0.15 ) }
    dend_2 { pt3dadd( -137.031, -29.1013, -7.86665, 0.37 ) }
    dend_2 { pt3dadd( -137.33, -29.2887, -8.02068, 0.37 ) }
    dend_2 { pt3dadd( -137.479, -29.3771, -8.09773, 0.37 ) }
    dend_2 { pt3dadd( -138.478, -29.9632, -8.61692, 0.15 ) }
    dend_2 { pt3dadd( -139.312, -30.4373, -9.07256, 0.15 ) }
    dend_2 { pt3dadd( -139.972, -30.8295, -9.44836, 0.15 ) }
    dend_2 { pt3dadd( -140.425, -31.1212, -9.71679, 1.4 ) }
    dend_2 { pt3dadd( -140.679, -31.2988, -9.88136, 1.77 ) }
    dend_2 { pt3dadd( -141.153, -31.6642, -10.213, 2.06 ) }
    dend_2 { pt3dadd( -141.735, -32.2397, -10.6834, 0.15 ) }
    dend_2 { pt3dadd( -142.287, -32.8916, -11.2175, 0.15 ) }
    dend_2 { pt3dadd( -142.488, -33.18, -11.4383, 0.59 ) }
    dend_2 { pt3dadd( -142.628, -33.4052, -11.6128, 0.74 ) }
    dend_2 { pt3dadd( -142.758, -33.6311, -11.7857, 0.74 ) }
    dend_2 { pt3dadd( -143.285, -34.5021, -12.6029, 0.15 ) }
    dend_2 { pt3dadd( -143.596, -34.9601, -13.0755, 1.25 ) }
    dend_2 { pt3dadd( -143.871, -35.3194, -13.4919, 1.62 ) }
    dend_2 { pt3dadd( -143.99, -35.4467, -13.6743, 1.62 ) }
    dend_2 { pt3dadd( -144.134, -35.5786, -13.8968, 0.15 ) }
    dend_2 { pt3dadd( -145.121, -36.3632, -15.3901, 0.15 ) }
    dend_2 { pt3dadd( -145.886, -36.9463, -16.4894, 0.15 ) }
    dend_2 { pt3dadd( -145.912, -36.9662, -16.5259, 0.15 ) }
    dend_2 { pt3dadd( -146.64, -37.5215, -17.5516, 1.4 ) }
    dend_2 { pt3dadd( -146.937, -37.7593, -17.9667, 1.69 ) }
    dend_2 { pt3dadd( -147.306, -38.0999, -18.4311, 0.22 ) }
    dend_2 { pt3dadd( -148.277, -39.1438, -19.3375, 0.22 ) }
    dend_2 { pt3dadd( -149.042, -40.032, -19.8753, 0.15 ) }
    dend_2 { pt3dadd( -149.285, -40.3293, -20.021, 1.33 ) }
    dend_2 { pt3dadd( -149.537, -40.6647, -20.1234, 1.55 ) }
    dend_2 { pt3dadd( -150.774, -42.3351, -20.4702, 0.22 ) }
    dend_2 { pt3dadd( -151.521, -43.3913, -20.4666, 0.22 ) }
    dend_2 { pt3dadd( -151.853, -43.8962, -20.2586, 1.84 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 67/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 31.9704, 32.6059, 12.0015, 0.22 ) }
    dend_58 { pt3dadd( 31.6874, 35.1571, 2.41478, 0.22 ) }
    dend_58 { pt3dadd( 32.7016, 37.2287, -7.25245, 0.22 ) }
    dend_58 { pt3dadd( 34.13, 39.3126, -16.8639, 0.22 ) }
    dend_58 { pt3dadd( 33.9399, 41.8732, -26.4501, 0.22 ) }
    dend_58 { pt3dadd( 35.9474, 45.1658, -35.5629, 0.22 ) }
    dend_58 { pt3dadd( 38.428, 48.1662, -44.6727, 0.22 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 74/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 31.9704, 32.6059, 12.0015, 0.29 ) }
    dend_57 { pt3dadd( 30.2957, 39.7557, 18.2388, 0.22 ) }
    dend_57 { pt3dadd( 28.7168, 46.7247, 24.7214, 0.22 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 77/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 13.5605, 94.584, 29.8051, 0.37 ) }
    dend_48 { pt3dadd( 13.7449, 94.1315, 29.9006, 0.37 ) }
    dend_48 { pt3dadd( 13.9155, 93.7128, 29.9889, 0.37 ) }
    dend_48 { pt3dadd( 13.937, 93.6601, 30.0001, 0.37 ) }
    dend_48 { pt3dadd( 16.6752, 86.4826, 33.2632, 0.37 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 82/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 13.5605, 94.584, 29.8051, 0.29 ) }
    dend_45 { pt3dadd( 13.1513, 94.8747, 29.8163, 0.29 ) }
    dend_45 { pt3dadd( 12.7315, 95.1729, 29.8278, 0.22 ) }
    dend_45 { pt3dadd( 12.552, 95.3005, 29.8327, 0.22 ) }
    dend_45 { pt3dadd( 12.2079, 95.545, 29.8421, 0.22 ) }
    dend_45 { pt3dadd( 12.0079, 95.6871, 29.8476, 0.22 ) }
    dend_45 { pt3dadd( 11.5059, 96.0438, 29.8613, 0.22 ) }
    dend_45 { pt3dadd( 5.39879, 101.273, 31.1644, 0.22 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 90/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -108.463, 15.4447, -12.2292, 0.29 ) }
    dend_36 { pt3dadd( -108.348, 13.7236, -11.4543, 0.29 ) }
    dend_36 { pt3dadd( -108.343, 13.6271, -11.4051, 0.29 ) }
    dend_36 { pt3dadd( -108.294, 10.8211, -9.90423, 0.29 ) }
    dend_36 { pt3dadd( -108.327, 9.04597, -8.93134, 0.29 ) }
    dend_36 { pt3dadd( -108.33, 8.97458, -8.89181, 0.29 ) }
    dend_36 { pt3dadd( -108.675, 5.36284, -6.69344, 0.22 ) }
    dend_36 { pt3dadd( -108.702, 5.23756, -6.60899, 0.22 ) }
    dend_36 { pt3dadd( -109.046, 4.01191, -5.74168, 0.22 ) }
    dend_36 { pt3dadd( -109.197, 3.58869, -5.41521, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_36 { pt3dadd( -109.382, 3.13143, -5.05572, 1.55 ) }
    dend_36 { pt3dadd( -110.419, 0.694572, -3.19736, 0.22 ) }
    dend_36 { pt3dadd( -111.941, -2.4532, -0.967644, 0.15 ) }
    dend_36 { pt3dadd( -111.996, -2.56996, -0.883779, 0.59 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 4/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -108.463, 15.4447, -12.2292, 0.22 ) }
    dend_35 { pt3dadd( -110.029, 16.9785, -12.6527, 0.22 ) }
    dend_35 { pt3dadd( -112.16, 19.0691, -13.0585, 0.22 ) }
    dend_35 { pt3dadd( -113.248, 20.1395, -13.214, 0.22 ) }
    dend_35 { pt3dadd( -113.308, 20.198, -13.2205, 0.22 ) }
    dend_35 { pt3dadd( -113.384, 20.2709, -13.2269, 0.59 ) }
    dend_35 { pt3dadd( -113.796, 20.6466, -13.2515, 0.59 ) }
    dend_35 { pt3dadd( -115.098, 21.6218, -13.2898, 0.15 ) }
    dend_35 { pt3dadd( -115.154, 21.6521, -13.279, 0.15 ) }
    dend_35 { pt3dadd( -115.67, 21.8798, -13.1496, 1.11 ) }
    dend_35 { pt3dadd( -115.73, 21.8991, -13.1352, 1.11 ) }
    dend_35 { pt3dadd( -116.733, 22.0853, -12.9062, 2.06 ) }
    dend_35 { pt3dadd( -117.564, 22.1597, -12.7218, 2.36 ) }
    dend_35 { pt3dadd( -119.082, 22.2228, -12.3179, 0.15 ) }
    dend_35 { pt3dadd( -119.225, 22.2288, -12.2728, 0.15 ) }
    dend_35 { pt3dadd( -120.652, 22.2738, -11.7947, 0.15 ) }
    dend_35 { pt3dadd( -122.031, 22.3467, -11.3498, 0.15 ) }
    dend_35 { pt3dadd( -122.114, 22.3543, -11.3276, 0.15 ) }
    dend_35 { pt3dadd( -123.46, 22.5495, -10.9892, 0.74 ) }
    dend_35 { pt3dadd( -124.374, 22.7073, -10.7941, 0.74 ) }
    dend_35 { pt3dadd( -125.205, 22.8745, -10.6286, 0.15 ) }
    dend_35 { pt3dadd( -127.294, 23.3733, -10.2554, 0.15 ) }
    dend_35 { pt3dadd( -129.945, 24.1403, -9.75496, 0.15 ) }
    dend_35 { pt3dadd( -131.211, 24.5327, -9.51347, 1.4 ) }
    dend_35 { pt3dadd( -131.807, 24.7273, -9.41203, 1.77 ) }
    dend_35 { pt3dadd( -132.393, 24.9409, -9.29928, 1.77 ) }
    dend_35 { pt3dadd( -133.439, 25.3593, -9.07545, 0.22 ) }
    dend_35 { pt3dadd( -135.052, 26.0429, -8.73997, 0.22 ) }
    dend_35 { pt3dadd( -135.129, 26.0769, -8.7246, 0.22 ) }
    dend_35 { pt3dadd( -136.887, 26.838, -8.4053, 0.22 ) }
    dend_35 { pt3dadd( -137.079, 26.9221, -8.3692, 0.88 ) }
    dend_35 { pt3dadd( -137.734, 27.2091, -8.25021, 1.03 ) }
    dend_35 { pt3dadd( -139.595, 27.9598, -7.98493, 0.22 ) }
    dend_35 { pt3dadd( -139.656, 27.9811, -7.97933, 0.22 ) }
    dend_35 { pt3dadd( -140.373, 28.2439, -7.90803, 0.22 ) }
    dend_35 { pt3dadd( -140.68, 28.3623, -7.87279, 0.44 ) }
    dend_35 { pt3dadd( -140.995, 28.4858, -7.84023, 0.44 ) }
    dend_35 { pt3dadd( -142.494, 29.0637, -7.86884, 0.15 ) }
    dend_35 { pt3dadd( -142.593, 29.0997, -7.88426, 0.44 ) }
    dend_35 { pt3dadd( -143.121, 29.253, -8.04527, 0.44 ) }
    dend_35 { pt3dadd( -143.414, 29.3215, -8.1608, 0.44 ) }
    dend_35 { pt3dadd( -143.482, 29.3359, -8.18998, 0.15 ) }
    dend_35 { pt3dadd( -145.134, 29.6754, -8.93203, 0.15 ) }
    dend_35 { pt3dadd( -145.191, 29.6869, -8.95916, 0.15 ) }
    dend_35 { pt3dadd( -146.627, 30.026, -9.59256, 0.15 ) }
    dend_35 { pt3dadd( -147.26, 30.1723, -9.88163, 1.03 ) }
    dend_35 { pt3dadd( -147.768, 30.2947, -10.1147, 1.33 ) }
    dend_35 { pt3dadd( -148.594, 30.5036, -10.4732, 0.15 ) }
    dend_35 { pt3dadd( -148.661, 30.5205, -10.504, 0.15 ) }
    dend_35 { pt3dadd( -150.069, 30.8878, -11.219, 0.15 ) }
    dend_35 { pt3dadd( -150.89, 31.1322, -11.6744, 0.66 ) }
    dend_35 { pt3dadd( -151.232, 31.2354, -11.8868, 0.81 ) }
    dend_35 { pt3dadd( -151.811, 31.3992, -12.3038, 0.15 ) }
    dend_35 { pt3dadd( -152.853, 31.7177, -13.1772, 0.15 ) }
    dend_35 { pt3dadd( -152.939, 31.7463, -13.2566, 0.15 ) }
    dend_35 { pt3dadd( -153.635, 32.022, -14.1524, 0.15 ) }
    dend_35 { pt3dadd( -153.687, 32.0547, -14.2364, 0.15 ) }
    dend_35 { pt3dadd( -154.08, 32.4043, -15.0401, 0.66 ) }
    dend_35 { pt3dadd( -154.271, 32.634, -15.4999, 0.66 ) }
    dend_35 { pt3dadd( -154.296, 32.6704, -15.558, 0.66 ) }
    dend_35 { pt3dadd( -154.917, 33.5407, -16.7364, 0.15 ) }
    dend_35 { pt3dadd( -155.323, 34.0692, -17.3339, 1.47 ) }
    dend_35 { pt3dadd( -155.64, 34.4496, -17.7007, 1.92 ) }
    dend_35 { pt3dadd( -155.932, 34.7785, -17.9651, 1.92 ) }
    dend_35 { pt3dadd( -156.469, 35.3273, -18.3635, 0.15 ) }
    dend_35 { pt3dadd( -157.467, 36.1944, -18.8827, 0.15 ) }
    dend_35 { pt3dadd( -158.262, 36.8202, -19.1905, 0.15 ) }
    dend_35 { pt3dadd( -158.585, 37.0467, -19.2994, 0.88 ) }
    dend_35 { pt3dadd( -159.033, 37.3423, -19.4392, 1.11 ) }
    dend_35 { pt3dadd( -159.461, 37.6136, -19.5657, 0.15 ) }
    dend_35 { pt3dadd( -162.274, 39.276, -20.3211, 0.15 ) }
    dend_35 { pt3dadd( -162.348, 39.3133, -20.34, 0.15 ) }
    dend_35 { pt3dadd( -163.351, 39.7586, -20.5851, 0.15 ) }
    dend_35 { pt3dadd( -163.813, 39.9435, -20.6932, 0.88 ) }
    dend_35 { pt3dadd( -164.275, 40.1104, -20.7999, 1.18 ) }
    dend_35 { pt3dadd( -164.861, 40.3186, -20.9354, 0.15 ) }
    dend_35 { pt3dadd( -166.893, 41.0384, -21.4167, 0.15 ) }
    dend_35 { pt3dadd( -167.417, 41.2403, -21.5443, 0.81 ) }
    dend_35 { pt3dadd( -167.922, 41.4626, -21.6757, 1.03 ) }
    dend_35 { pt3dadd( -168.391, 41.6855, -21.7999, 0.15 ) }
    dend_35 { pt3dadd( -171.317, 43.1983, -22.5961, 0.15 ) }
    dend_35 { pt3dadd( -171.785, 43.4676, -22.7279, 0.74 ) }
    dend_35 { pt3dadd( -172.333, 43.8252, -22.877, 0.96 ) }
    dend_35 { pt3dadd( -173.798, 44.8138, -23.2914, 0.15 ) }
    dend_35 { pt3dadd( -173.995, 44.9519, -23.3495, 0.44 ) }
    dend_35 { pt3dadd( -174.111, 45.0368, -23.3851, 0.44 ) }
    dend_35 { pt3dadd( -174.243, 45.1495, -23.4318, 0.44 ) }
    dend_35 { pt3dadd( -174.503, 45.3736, -23.5221, 0.44 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 92/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 32.2316, -213.483, 0.747898, 0.15 ) }
    dend_24 { pt3dadd( 33.6463, -214.824, 0.342906, 0.15 ) }
    dend_24 { pt3dadd( 35.7489, -216.837, -0.230677, 0.15 ) }
    dend_24 { pt3dadd( 35.8235, -216.909, -0.250455, 0.15 ) }
    dend_24 { pt3dadd( 38.7919, -219.891, -1.08204, 0.15 ) }
    dend_24 { pt3dadd( 39.4809, -220.633, -1.2819, 0.15 ) }
    dend_24 { pt3dadd( 39.5391, -220.702, -1.29917, 0.15 ) }
    dend_24 { pt3dadd( 39.9793, -221.301, -1.43339, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_24 { pt3dadd( 40.1877, -221.631, -1.54378, 1.25 ) }
    dend_24 { pt3dadd( 40.6791, -222.511, -2.00614, 0.22 ) }
    dend_24 { pt3dadd( 41.1748, -223.591, -2.7282, 0.22 ) }
    dend_24 { pt3dadd( 41.8514, -225.104, -3.81382, 0.22 ) }
    dend_24 { pt3dadd( 42.3369, -226.203, -4.6435, 0.22 ) }
    dend_24 { pt3dadd( 43.0117, -227.795, -5.95291, 1.03 ) }
    dend_24 { pt3dadd( 43.5409, -229.015, -7.07215, 1.18 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 7/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 32.2316, -213.483, 0.747898, 0.15 ) }
    dend_23 { pt3dadd( 32.2843, -214.253, 0.778175, 0.15 ) }
    dend_23 { pt3dadd( 32.3759, -215.587, 0.830663, 0.15 ) }
    dend_23 { pt3dadd( 32.3811, -215.664, 0.833679, 0.15 ) }
    dend_23 { pt3dadd( 32.4161, -216.174, 0.853718, 1.03 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 12/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 0.750919, -156.636, 9.62681, 0.59 ) }
    dend_9 { pt3dadd( 1.15516, -157.956, 9.70241, 0.59 ) }
    dend_9 { pt3dadd( 1.67653, -159.659, 9.83102, 0.59 ) }
    dend_9 { pt3dadd( 1.69973, -159.733, 9.83909, 0.59 ) }
    dend_9 { pt3dadd( 2.19231, -161.261, 10.0554, 0.44 ) }
    dend_9 { pt3dadd( 2.72326, -162.884, 10.3119, 0.44 ) }
    dend_9 { pt3dadd( 2.74757, -162.957, 10.3242, 0.44 ) }
    dend_9 { pt3dadd( 2.92654, -163.49, 10.4459, 1.03 ) }
    dend_9 { pt3dadd( 3.40201, -164.791, 10.7307, 1.03 ) }
    dend_9 { pt3dadd( 3.79018, -165.889, 10.95, 0.66 ) }
    dend_9 { pt3dadd( 3.95335, -166.378, 11.04, 0.37 ) }
    dend_9 { pt3dadd( 3.9733, -166.443, 11.0498, 0.37 ) }
    dend_9 { pt3dadd( 4.37616, -167.886, 11.2436, 0.37 ) }
    dend_9 { pt3dadd( 4.5935, -168.73, 11.3125, 1.03 ) }
    dend_9 { pt3dadd( 4.79609, -169.589, 11.3415, 1.62 ) }
    dend_9 { pt3dadd( 4.97506, -170.44, 11.3465, 1.62 ) }
    dend_9 { pt3dadd( 5.15699, -171.564, 11.333, 1.25 ) }
    dend_9 { pt3dadd( 5.28655, -172.57, 11.3091, 1.03 ) }
    dend_9 { pt3dadd( 5.45654, -173.858, 11.2092, 0.88 ) }
    dend_9 { pt3dadd( 5.54097, -174.431, 11.1279, 0.66 ) }
    dend_9 { pt3dadd( 5.65678, -175.2, 10.9632, 0.66 ) }
    dend_9 { pt3dadd( 5.8923, -176.568, 10.5456, 0.66 ) }
    dend_9 { pt3dadd( 5.90392, -176.632, 10.5222, 0.66 ) }
    dend_9 { pt3dadd( 6.29183, -178.798, 9.68248, 0.59 ) }
    dend_9 { pt3dadd( 6.50438, -179.939, 9.22023, 1.4 ) }
    dend_9 { pt3dadd( 6.67141, -180.888, 8.84246, 1.84 ) }
    dend_9 { pt3dadd( 6.86077, -181.95, 8.42105, 2.14 ) }
    dend_9 { pt3dadd( 6.98849, -182.677, 8.14398, 2.14 ) }
    dend_9 { pt3dadd( 7.13708, -183.84, 7.76371, 0.66 ) }
    dend_9 { pt3dadd( 7.18735, -184.495, 7.60043, 0.22 ) }
    dend_9 { pt3dadd( 7.31086, -186.204, 7.27627, 0.22 ) }
    dend_9 { pt3dadd( 7.31517, -186.262, 7.26681, 0.22 ) }
    dend_9 { pt3dadd( 7.34483, -186.788, 7.21166, 1.03 ) }
    dend_9 { pt3dadd( 7.40251, -187.706, 7.12615, 1.03 ) }
    dend_9 { pt3dadd( 7.49209, -189.151, 7.02337, 1.11 ) }
    dend_9 { pt3dadd( 7.53367, -189.728, 7.01122, 0.59 ) }
    dend_9 { pt3dadd( 7.56639, -190.145, 7.01206, 0.15 ) }
    dend_9 { pt3dadd( 7.69701, -191.852, 6.99606, 0.15 ) }
    dend_9 { pt3dadd( 7.70251, -191.92, 6.9958, 0.15 ) }
    dend_9 { pt3dadd( 7.7523, -192.493, 6.99948, 0.15 ) }
    dend_9 { pt3dadd( 7.8269, -193.256, 6.95619, 0.15 ) }
    dend_9 { pt3dadd( 7.9622, -194.436, 6.83145, 0.15 ) }
    dend_9 { pt3dadd( 8.07727, -195.395, 6.7109, 1.4 ) }
    dend_9 { pt3dadd( 8.23668, -196.679, 6.52452, 2.28 ) }
    dend_9 { pt3dadd( 8.39225, -197.739, 6.37359, 2.65 ) }
    dend_9 { pt3dadd( 8.78034, -199.718, 6.05667, 0.22 ) }
    dend_9 { pt3dadd( 9.01464, -200.754, 5.87694, 0.22 ) }
    dend_9 { pt3dadd( 9.39903, -202.255, 5.62066, 0.22 ) }
    dend_9 { pt3dadd( 9.4183, -202.33, 5.60896, 0.22 ) }
    dend_9 { pt3dadd( 9.90475, -204.111, 5.31792, 0.22 ) }
    dend_9 { pt3dadd( 10.248, -205.292, 5.16679, 0.22 ) }
    dend_9 { pt3dadd( 10.3798, -205.69, 5.1317, 0.96 ) }
    dend_9 { pt3dadd( 10.6319, -206.283, 5.02759, 1.11 ) }
    dend_9 { pt3dadd( 10.923, -206.833, 4.87486, 1.11 ) }
    dend_9 { pt3dadd( 11.31, -207.559, 4.66083, 0.15 ) }
    dend_9 { pt3dadd( 11.7991, -208.469, 4.37568, 0.15 ) }
    dend_9 { pt3dadd( 12.2985, -209.408, 4.1226, 0.74 ) }
    dend_9 { pt3dadd( 13.0936, -210.805, 3.74939, 0.74 ) }
    dend_9 { pt3dadd( 13.4476, -211.412, 3.59815, 0.15 ) }
    dend_9 { pt3dadd( 14.4233, -213.073, 3.23079, 0.15 ) }
    dend_9 { pt3dadd( 14.6795, -213.585, 3.15211, 1.47 ) }
    dend_9 { pt3dadd( 15.1162, -214.676, 3.05323, 2.28 ) }
    dend_9 { pt3dadd( 15.4071, -215.697, 3.02728, 2.43 ) }
    dend_9 { pt3dadd( 15.5879, -216.581, 3.0395, 2.43 ) }
    dend_9 { pt3dadd( 15.7888, -217.9, 3.06756, 0.15 ) }
    dend_9 { pt3dadd( 16.0769, -220.373, 3.03079, 0.15 ) }
    dend_9 { pt3dadd( 16.1709, -221.645, 2.98363, 0.15 ) }
    dend_9 { pt3dadd( 16.142, -223.169, 2.87161, 0.15 ) }
    dend_9 { pt3dadd( 16.1093, -223.532, 2.83879, 0.88 ) }
    dend_9 { pt3dadd( 15.9977, -224.325, 2.73169, 1.25 ) }
    dend_9 { pt3dadd( 15.7829, -225.417, 2.54221, 0.44 ) }
    dend_9 { pt3dadd( 15.6902, -225.826, 2.44854, 0.15 ) }
    dend_9 { pt3dadd( 14.9179, -228.989, 1.64422, 0.15 ) }
    dend_9 { pt3dadd( 14.9006, -229.054, 1.62864, 0.15 ) }
    dend_9 { pt3dadd( 14.7385, -229.553, 1.51759, 0.81 ) }
    dend_9 { pt3dadd( 14.4819, -230.224, 1.39269, 0.81 ) }
    dend_9 { pt3dadd( 14.4544, -230.287, 1.38482, 0.81 ) }
    dend_9 { pt3dadd( 14.1173, -230.979, 1.30429, 0.81 ) }
    dend_9 { pt3dadd( 13.7173, -231.7, 1.23248, 0.15 ) }
    dend_9 { pt3dadd( 13.1031, -232.762, 1.16956, 0.15 ) }
    dend_9 { pt3dadd( 12.7988, -233.277, 1.15225, 1.18 ) }
    dend_9 { pt3dadd( 12.5001, -233.785, 1.13493, 1.62 ) }
    dend_9 { pt3dadd( 12.2487, -234.241, 1.1067, 1.62 ) }
    dend_9 { pt3dadd( 11.8113, -235.18, 1.0334, 0.22 ) }
    dend_9 { pt3dadd( 11.0573, -237.046, 0.849725, 0.22 ) }
    dend_9 { pt3dadd( 10.8603, -237.679, 0.747358, 0.81 ) }
    dend_9 { pt3dadd( 10.6833, -238.445, 0.591718, 1.03 ) }
    dend_9 { pt3dadd( 10.5218, -239.463, 0.344452, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_9 { pt3dadd( 10.3102, -242.185, -0.392097, 0.15 ) }
    dend_9 { pt3dadd( 10.3175, -242.655, -0.534172, 0.88 ) }
    dend_9 { pt3dadd( 10.6134, -244.61, -1.24589, 0.22 ) }
    dend_9 { pt3dadd( 10.9169, -245.779, -1.63968, 0.22 ) }
    dend_9 { pt3dadd( 11.0564, -246.169, -1.75953, 0.66 ) }
    dend_9 { pt3dadd( 11.245, -246.583, -1.84414, 0.96 ) }
    dend_9 { pt3dadd( 11.2794, -246.642, -1.85137, 0.96 ) }
    dend_9 { pt3dadd( 11.8693, -247.756, -1.88173, 0.15 ) }
    dend_9 { pt3dadd( 12.8049, -249.744, -1.7475, 0.15 ) }
    dend_9 { pt3dadd( 12.8997, -249.95, -1.73967, 0.52 ) }
    dend_9 { pt3dadd( 13.5738, -251.579, -1.67157, 0.15 ) }
    dend_9 { pt3dadd( 13.9461, -252.543, -1.63202, 1.18 ) }
    dend_9 { pt3dadd( 14.3152, -253.567, -1.58323, 1.84 ) }
    dend_9 { pt3dadd( 14.5536, -254.298, -1.54038, 1.84 ) }
    dend_9 { pt3dadd( 14.9367, -255.559, -1.51439, 0.15 ) }
    dend_9 { pt3dadd( 15.6001, -257.87, -1.48288, 0.15 ) }
    dend_9 { pt3dadd( 15.6803, -258.163, -1.48641, 0.59 ) }
    dend_9 { pt3dadd( 15.7729, -258.512, -1.48888, 0.74 ) }
    dend_9 { pt3dadd( 15.846, -258.793, -1.48793, 0.15 ) }
    dend_9 { pt3dadd( 16.4675, -261.445, -1.47896, 0.15 ) }
    dend_9 { pt3dadd( 16.6025, -262.275, -1.42498, 1.03 ) }
    dend_9 { pt3dadd( 16.7193, -263.225, -1.34427, 1.77 ) }
    dend_9 { pt3dadd( 16.7903, -264.007, -1.25831, 1.77 ) }
    dend_9 { pt3dadd( 16.844, -264.93, -1.13192, 0.81 ) }
    dend_9 { pt3dadd( 16.8486, -265.63, -0.996563, 0.15 ) }
    dend_9 { pt3dadd( 16.7072, -268.412, -0.28082, 0.15 ) }
    dend_9 { pt3dadd( 16.7013, -268.477, -0.262275, 0.15 ) }
    dend_9 { pt3dadd( 16.6396, -268.946, -0.109393, 1.18 ) }
    dend_9 { pt3dadd( 16.5032, -269.881, 0.208729, 1.62 ) }
    dend_9 { pt3dadd( 16.3776, -270.753, 0.51621, 0.88 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 30/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 0.750919, -156.636, 9.62681, 0.52 ) }
    dend_8 { pt3dadd( 0.328494, -157.984, 8.50516, 0.52 ) }
    dend_8 { pt3dadd( 0.0906851, -158.743, 7.87371, 0.52 ) }
    dend_8 { pt3dadd( -0.0901468, -159.32, 7.39356, 0.52 ) }
    dend_8 { pt3dadd( -0.16443, -159.557, 7.19632, 0.81 ) }
    dend_8 { pt3dadd( -0.182632, -159.615, 7.14799, 0.81 ) }
    dend_8 { pt3dadd( -0.332794, -160.094, 6.74927, 0.81 ) }
    // Section: dend_62, id: dend_62, parent: dend_58 (entry count 37/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 38.428, 48.1662, -44.6727, 0.37 ) }
    dend_62 { pt3dadd( 39.126, 52.0701, -56.1744, 0.37 ) }
    dend_62 { pt3dadd( 38.4987, 58.0026, -66.674, 0.37 ) }
    dend_62 { pt3dadd( 36.8882, 63.2501, -77.4729, 0.37 ) }
    dend_62 { pt3dadd( 37.0736, 68.3164, -88.4794, 0.37 ) }
    dend_62 { pt3dadd( 35.2588, 73.0439, -99.5109, 0.37 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 43/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 38.428, 48.1662, -44.6727, 0.29 ) }
    dend_59 { pt3dadd( 40.5525, 49.6588, -53.9763, 0.37 ) }
    dend_59 { pt3dadd( 43.9369, 53.0165, -62.3043, 0.37 ) }
    dend_59 { pt3dadd( 48.6746, 56.616, -69.8216, 0.37 ) }
    dend_59 { pt3dadd( 53.3944, 60.4803, -77.2017, 0.37 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 48/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 16.6752, 86.4826, 33.2632, 0.22 ) }
    dend_50 { pt3dadd( 20.0212, 79.3498, 35.9603, 0.22 ) }
    dend_50 { pt3dadd( 25.2086, 73.4136, 38.8966, 0.22 ) }
    dend_50 { pt3dadd( 30.1333, 67.806, 42.8519, 0.22 ) }
    dend_50 { pt3dadd( 34.7027, 61.8628, 46.6931, 0.22 ) }
    dend_50 { pt3dadd( 39.522, 57.0004, 51.7383, 0.22 ) }
    dend_50 { pt3dadd( 43.8006, 52.1003, 57.2223, 0.22 ) }
    dend_50 { pt3dadd( 47.8345, 48.1347, 63.6551, 0.22 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 56/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 16.6752, 86.4826, 33.2632, 0.29 ) }
    dend_49 { pt3dadd( 20.8453, 76.0935, 37.5993, 0.22 ) }
    dend_49 { pt3dadd( 24.7805, 67.1026, 44.7628, 0.22 ) }
    dend_49 { pt3dadd( 30.0948, 57.9591, 50.6654, 0.22 ) }
    dend_49 { pt3dadd( 35.0973, 49.2932, 57.5758, 0.22 ) }
    dend_49 { pt3dadd( 40.1833, 39.6903, 62.8311, 0.22 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 62/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 5.39879, 101.273, 31.1644, 0.37 ) }
    dend_47 { pt3dadd( -1.30508, 106.07, 35.5258, 0.37 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 64/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 5.39879, 101.273, 31.1644, 0.29 ) }
    dend_46 { pt3dadd( -0.535458, 105.696, 34.5456, 0.37 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 66/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 16.3776, -270.753, 0.51621, 0.29 ) }
    dend_11 { pt3dadd( 15.8834, -271.661, 0.693307, 0.29 ) }
    dend_11 { pt3dadd( 15.1267, -272.901, 0.937108, 0.29 ) }
    dend_11 { pt3dadd( 13.934, -274.689, 1.26586, 0.29 ) }
    dend_11 { pt3dadd( 13.6101, -275.151, 1.34728, 0.74 ) }
    dend_11 { pt3dadd( 13.1709, -275.711, 1.4731, 1.11 ) }
    dend_11 { pt3dadd( 12.5031, -276.374, 1.58278, 1.11 ) }
    dend_11 { pt3dadd( 11.9989, -276.76, 1.64631, 0.88 ) }
    dend_11 { pt3dadd( 11.6125, -276.99, 1.65888, 0.52 ) }
    dend_11 { pt3dadd( 11.5548, -277.019, 1.6556, 0.52 ) }
    dend_11 { pt3dadd( 10.3544, -277.604, 1.53596, 0.22 ) }
    dend_11 { pt3dadd( 7.50006, -278.961, 1.17079, 0.15 ) }
    dend_11 { pt3dadd( 7.23448, -279.102, 1.12028, 0.44 ) }
    dend_11 { pt3dadd( 6.84046, -279.329, 1.03633, 0.66 ) }
    dend_11 { pt3dadd( 6.78701, -279.363, 1.0232, 0.66 ) }
    dend_11 { pt3dadd( 6.44583, -279.607, 0.922696, 0.66 ) }
    dend_11 { pt3dadd( 6.30925, -279.725, 0.869502, 0.15 ) }
    dend_11 { pt3dadd( 4.85392, -281.264, 0.338621, 0.15 ) }
    dend_11 { pt3dadd( 4.81134, -281.309, 0.323358, 0.15 ) }
    dend_11 { pt3dadd( 4.59242, -281.546, 0.24546, 0.74 ) }
    dend_11 { pt3dadd( 4.19521, -281.978, 0.104306, 1.11 ) }
    dend_11 { pt3dadd( 3.73343, -282.491, -0.0585716, 0.88 ) }
    dend_11 { pt3dadd( 3.68683, -282.545, -0.0748274, 0.88 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 89/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 16.3776, -270.753, 0.51621, 0.15 ) }
    dend_10 { pt3dadd( 16.4083, -271.861, 0.931246, 0.15 ) }
    dend_10 { pt3dadd( 16.3452, -274.311, 1.7413, 0.15 ) }
    dend_10 { pt3dadd( 16.3322, -274.854, 1.8875, 0.44 ) }
    dend_10 { pt3dadd( 16.3221, -275.449, 2.0326, 0.44 ) }
    dend_10 { pt3dadd( 16.3157, -276.602, 2.28133, 0.15 ) }
    dend_10 { pt3dadd( 16.3217, -278.472, 2.65426, 0.15 ) }
    dend_10 { pt3dadd( 16.3526, -279.628, 2.81841, 0.15 ) }
    dend_10 { pt3dadd( 16.3639, -280.624, 2.94654, 0.74 ) }
    dend_10 { pt3dadd( 16.3809, -281.342, 3.03573, 1.33 ) }
    dend_10 { pt3dadd( 16.4117, -282.119, 3.10853, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_10 { pt3dadd( 16.4366, -282.459, 3.1158, 0.15 ) }
    dend_10 { pt3dadd( 16.6388, -284.585, 3.10967, 0.15 ) }
    dend_10 { pt3dadd( 16.6597, -284.78, 3.09843, 0.44 ) }
    dend_10 { pt3dadd( 16.6533, -286.127, 2.91249, 0.15 ) }
    dend_10 { pt3dadd( 16.6485, -286.2, 2.90109, 0.15 ) }
    dend_10 { pt3dadd( 16.5523, -287.1, 2.75922, 0.66 ) }
    dend_10 { pt3dadd( 16.5132, -287.372, 2.71725, 0.88 ) }
    dend_10 { pt3dadd( 16.3464, -288.273, 2.57639, 0.15 ) }
    dend_10 { pt3dadd( 15.5969, -292.418, 2.13584, 0.15 ) }
    dend_10 { pt3dadd( 15.5329, -293.151, 2.133, 1.03 ) }
    dend_10 { pt3dadd( 15.52, -293.559, 2.15962, 1.03 ) }
    dend_10 { pt3dadd( 15.5339, -293.952, 2.22561, 0.22 ) }
    dend_10 { pt3dadd( 15.5413, -294.006, 2.23925, 0.22 ) }
    dend_10 { pt3dadd( 16.0339, -295.807, 2.89572, 0.22 ) }
    dend_10 { pt3dadd( 17.5952, -298.422, 4.2748, 0.22 ) }
    dend_10 { pt3dadd( 17.6325, -298.469, 4.3023, 0.22 ) }
    dend_10 { pt3dadd( 18.5039, -299.336, 4.8848, 0.22 ) }
    dend_10 { pt3dadd( 19.1925, -299.802, 5.33964, 0.96 ) }
    dend_10 { pt3dadd( 19.5034, -299.92, 5.54673, 0.15 ) }
    dend_10 { pt3dadd( 21.3431, -300.01, 6.7787, 0.15 ) }
    dend_10 { pt3dadd( 21.6209, -299.956, 6.96495, 0.66 ) }
    dend_10 { pt3dadd( 21.8889, -299.891, 7.14092, 0.15 ) }
    dend_10 { pt3dadd( 23.5683, -299.367, 8.2251, 0.15 ) }
    dend_10 { pt3dadd( 23.8522, -299.264, 8.4213, 0.44 ) }
    dend_10 { pt3dadd( 24.0746, -299.176, 8.58846, 0.15 ) }
    dend_10 { pt3dadd( 24.8963, -298.824, 9.32527, 0.15 ) }
    dend_10 { pt3dadd( 25.2581, -298.676, 9.65439, 0.59 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 27/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 35.2588, 73.0439, -99.5109, 0.22 ) }
    dend_64 { pt3dadd( 34.3903, 77.957, -107.657, 0.22 ) }
    dend_64 { pt3dadd( 35.719, 84.0438, -114.766, 0.22 ) }
    dend_64 { pt3dadd( 36.8798, 88.9694, -122.837, 0.22 ) }
    dend_64 { pt3dadd( 38.4011, 94.3066, -130.544, 0.22 ) }
    dend_64 { pt3dadd( 39.0683, 99.344, -138.602, 0.22 ) }
    dend_64 { pt3dadd( 38.5113, 104.97, -146.251, 0.22 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 34/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 35.2588, 73.0439, -99.5109, 0.29 ) }
    dend_63 { pt3dadd( 35.029, 75.8046, -106.416, 0.22 ) }
    dend_63 { pt3dadd( 34.2846, 77.8064, -113.574, 0.22 ) }
    dend_63 { pt3dadd( 32.3512, 80.2862, -120.329, 0.22 ) }
    dend_63 { pt3dadd( 30.0351, 84.3336, -126.033, 0.22 ) }
    dend_63 { pt3dadd( 28.001, 87.9778, -132.135, 0.22 ) }
    dend_63 { pt3dadd( 26.65, 93.1449, -137.099, 0.22 ) }
    dend_63 { pt3dadd( 26.3257, 98.5001, -142.018, 0.22 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 42/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 53.3944, 60.4803, -77.2017, 0.22 ) }
    dend_61 { pt3dadd( 57.6458, 62.2832, -83.2398, 0.22 ) }
    dend_61 { pt3dadd( 60.9263, 63.3672, -90.0155, 0.22 ) }
    dend_61 { pt3dadd( 63.3234, 64.5695, -97.1126, 0.22 ) }
    dend_61 { pt3dadd( 65.097, 65.6561, -104.403, 0.22 ) }
    dend_61 { pt3dadd( 65.4936, 66.222, -111.952, 0.22 ) }
    dend_61 { pt3dadd( 66.3661, 67.1327, -119.42, 0.22 ) }
    dend_61 { pt3dadd( 67.2521, 68.792, -126.724, 0.22 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 50/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 53.3944, 60.4803, -77.2017, 0.29 ) }
    dend_60 { pt3dadd( 57.3031, 64.1754, -86.4142, 0.22 ) }
    dend_60 { pt3dadd( 61.8324, 66.8828, -95.7306, 0.22 ) }
    dend_60 { pt3dadd( 64.4058, 69.8257, -105.687, 0.22 ) }
    dend_60 { pt3dadd( 66.6787, 73.9262, -115.247, 0.22 ) }
    dend_60 { pt3dadd( 70.0113, 76.4974, -125.095, 0.22 ) }
    dend_60 { pt3dadd( 74.7243, 78.554, -134.51, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_66, dend_53, dend_39, dend_32, dend_26, dend_19, dend_16, dend_5, dend_0, dend_68, dend_67, dend_55, dend_54, dend_43, dend_40, dend_38, dend_33, dend_31, dend_30, dend_27, dend_21, dend_20, dend_18, dend_17, dend_13, dend_6, dend_4, dend_1, dend_65, dend_56, dend_52, dend_51, dend_44, dend_42, dend_41, dend_37, dend_34, dend_29, dend_28, dend_25, dend_22, dend_15, dend_14, dend_12, dend_7, dend_3, dend_2, dend_58, dend_57, dend_48, dend_45, dend_36, dend_35, dend_24, dend_23, dend_9, dend_8, dend_62, dend_59, dend_50, dend_49, dend_47, dend_46, dend_11, dend_10, dend_64, dend_63, dend_61, dend_60]}
    ModelViewParmSubset_2 = new SectionList()
    dend_66 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_66, dend_53, dend_39, dend_32, dend_26, dend_19, dend_16, dend_5, dend_0, dend_68, dend_67, dend_55, dend_54, dend_43, dend_40, dend_38, dend_33, dend_31, dend_30, dend_27, dend_21, dend_20, dend_18, dend_17, dend_13, dend_6, dend_4, dend_1, dend_65, dend_56, dend_52, dend_51, dend_44, dend_42, dend_41, dend_37, dend_34, dend_29, dend_28, dend_25, dend_22, dend_15, dend_14, dend_12, dend_7, dend_3, dend_2, dend_58, dend_57, dend_48, dend_45, dend_36, dend_35, dend_24, dend_23, dend_9, dend_8, dend_62, dend_59, dend_50, dend_49, dend_47, dend_46, dend_11, dend_10, dend_64, dend_63, dend_61, dend_60]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_66 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_19 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_16 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_68 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_55 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_43 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_40 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_21 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_20 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_17 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_13 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_4 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_1 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_51 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_42 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_41 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_34 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_29 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_28 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_15 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_14 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_12 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_7 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_3 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_2 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_58 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_35 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_9 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_62 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_50 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_49 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_64 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_63 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_61 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_60 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_53 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_26 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_5 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_54 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_27 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_0 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_6 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_39 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_32 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_33 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_37 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_18 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_38 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_65 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_56 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_44 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_57 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_48 OneSecGrp_SectionRef_53.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_45 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_52 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_46 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_47 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_36 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_67 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_8 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_59 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_22 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_23 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_24 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_25 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_11 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_10 OneSecGrp_SectionRef_68.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_46, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_66 nseg = 7
    dend_19 nseg = 7
    dend_16 nseg = 3
    dend_68 nseg = 3
    dend_55 nseg = 3
    dend_43 nseg = 3
    dend_40 nseg = 5
    dend_31 nseg = 5
    dend_30 nseg = 3
    dend_21 nseg = 3
    dend_20 nseg = 3
    dend_17 nseg = 5
    dend_13 nseg = 3
    dend_4 nseg = 7
    dend_1 nseg = 3
    dend_51 nseg = 5
    dend_42 nseg = 3
    dend_41 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 7
    dend_28 nseg = 5
    dend_15 nseg = 3
    dend_14 nseg = 3
    dend_12 nseg = 5
    dend_7 nseg = 7
    dend_3 nseg = 5
    dend_2 nseg = 3
    dend_58 nseg = 3
    dend_35 nseg = 3
    dend_9 nseg = 7
    dend_62 nseg = 3
    dend_50 nseg = 3
    dend_49 nseg = 3
    dend_64 nseg = 3
    dend_63 nseg = 3
    dend_61 nseg = 3
    dend_60 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L6_NBC_c0fd8f67e2_0_0


