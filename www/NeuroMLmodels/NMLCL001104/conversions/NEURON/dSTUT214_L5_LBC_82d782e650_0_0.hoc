// Cell: dSTUT214_L5_LBC_82d782e650_0_0
/*
{
  "id" : "dSTUT214_L5_LBC_82d782e650_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-9.18524, -4.81916, 0.0, 3.9822", "-8.34327, -4.32353, 0.0, 6.87607", "-7.5013, -3.82789, 0.0, 10.1189", "-6.65933, -3.33226, 0.0, 12.2867", "-5.81736, -2.83662, 0.0, 13.8376", "-4.97539, -2.34099, 0.0, 14.8265", "-4.13342, -1.84535, 0.0, 15.382", "-3.29145, -1.34972, 0.0, 16.0094", "-2.44948, -0.854082, 0.0, 16.562", "-1.60751, -0.358447, 0.0, 16.8144", "-0.765536, 0.137188, 0.0, 17.0145", "0.0764342, 0.632823, 0.0, 17.0541", "0.918405, 1.12846, 0.0, 16.8224", "1.76037, 1.62409, 0.0, 16.2232", "2.60235, 2.11973, 0.0, 15.3709", "3.44432, 2.61536, 0.0, 14.0738", "4.28629, 3.111, 0.0, 12.5479", "5.12826, 3.60663, 0.0, 11.1251", "5.97023, 4.10227, 0.0, 9.76121", "6.8122, 4.5979, 0.0, 7.58188", "7.65417, 5.09354, 0.0, 4.50057" ]
  }, {
    "name" : "dend_94",
    "id" : "dend_94",
    "points3d" : [ "-4.45607, 3.26886, -15.4, 1.55", "-4.45607, 3.26886, -15.4, 1.55", "-5.72607, 3.65886, -15.4, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999039757195
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-4.93607, -6.92964, -8.99, 1.77", "-4.93607, -6.92964, -8.99, 1.62", "-5.63607, -7.59264, -9.19, 1.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999039757195
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "8.77393, 3.15186, 4.25, 0.96", "8.77393, 3.15186, 4.25, 0.96", "9.74231, 3.23833, 4.11046, 0.81", "10.6885, 3.2679, 3.96619, 0.74", "11.7137, 3.29994, 3.80987, 0.66", "12.7464, 3.33222, 3.6524, 0.66", "13.6962, 3.3619, 3.50757, 1.25", "14.6719, 3.36558, 3.34474, 1.92", "15.323, 3.32315, 3.21255, 1.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999039757195
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "5.38393, 6.75936, 4.97, 0.74", "5.0593, 7.08203, 5.34468, 0.74", "4.55354, 7.51454, 5.79991, 0.74", "3.71377, 8.15335, 6.49187, 0.74", "2.79325, 8.81725, 7.25474, 0.59", "1.78956, 9.54415, 8.11141, 0.74", "0.905022, 10.2165, 8.88178, 0.96", "-0.128407, 11.0369, 9.76421, 0.52", "-0.878336, 11.6788, 10.4295, 0.22", "-1.46394, 12.2637, 11.0385, 0.22", "-1.86315, 12.7799, 11.567, 0.66", "-2.13681, 13.2513, 12.0627, 0.66", "-2.56699, 14.1874, 13.0707, 0.29", "-2.77966, 14.8463, 13.7473, 0.29", "-2.9937, 15.7424, 14.6113, 1.03", "-3.13389, 16.4199, 15.2464, 2.51", "-3.3364, 17.371, 16.1793, 3.32" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999039757195
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-7.87607, 3.60036, 6.38, 0.52", "-8.29074, 3.56314, 6.23306, 0.52", "-9.06852, 3.50813, 5.92979, 0.52", "-9.55157, 3.47863, 5.74554, 0.74", "-10.5309, 3.46978, 5.39151, 1.25", "-11.3367, 3.52171, 5.12095, 1.33", "-12.5154, 3.68407, 4.75547, 0.74", "-13.6188, 3.93682, 4.43901, 0.59", "-14.5077, 4.23098, 4.20119, 0.29", "-15.3775, 4.62541, 3.98589, 0.44", "-16.3481, 5.20444, 3.79187, 0.59", "-17.1522, 5.76515, 3.66024, 0.44", "-17.606, 6.10533, 3.60362, 0.81", "-18.2076, 6.55159, 3.55091, 1.62", "-19.0057, 7.07051, 3.47156, 1.77", "-20.3372, 7.68068, 3.3222, 0.37", "-20.9038, 7.83156, 3.2628, 0.37", "-21.4656, 7.90718, 3.2049, 0.52", "-22.1461, 7.94078, 3.14355, 0.59", "-23.0826, 7.95226, 3.07857, 0.22", "-23.6826, 7.9793, 3.01117, 0.29", "-24.3085, 8.03515, 2.92963, 0.74", "-25.1728, 8.15689, 2.82236, 1.77", "-26.0372, 8.33059, 2.72314, 2.8", "-27.3296, 8.65646, 2.59488, 3.17", "-29.1699, 9.18866, 2.45044, 0.44", "-30.4318, 9.59454, 2.38071, 0.29", "-32.1818, 10.1948, 2.32068, 0.37", "-33.2583, 10.6001, 2.34225, 0.37", "-34.19, 10.9761, 2.41477, 0.52", "-34.7498, 11.2175, 2.49599, 1.03", "-35.7898, 11.683, 2.72603, 1.84", "-36.6093, 12.0565, 2.92342, 1.4", "-37.7409, 12.5405, 3.20123, 0.22", "-38.6832, 12.8551, 3.41607, 0.59", "-38.9875, 12.9365, 3.4803, 0.59", "-40.3586, 13.247, 3.74425, 0.44", "-41.0242, 13.3633, 3.87705, 1.47", "-41.7745, 13.4689, 4.03306, 2.51", "-42.8814, 13.5895, 4.24783, 2.36", "-44.8438, 13.7873, 4.64567, 0.15", "-45.1679, 13.8099, 4.71599, 0.22", "-46.1764, 13.8408, 4.94686, 0.22", "-46.8305, 13.8249, 5.07933, 0.22", "-48.0574, 13.7372, 5.30488, 0.22", "-48.4228, 13.6986, 5.3606, 0.96", "-49.2539, 13.5844, 5.461, 2.06", "-50.2895, 13.4639, 5.5632, 2.58", "-52.4752, 13.3081, 5.71366, 0.22", "-53.109, 13.286, 5.76233, 0.81", "-53.8476, 13.29, 5.8226, 1.77", "-54.3909, 13.3168, 5.86616, 1.99", "-55.869, 13.4615, 5.97791, 0.44", "-57.6587, 13.6721, 6.09986, 0.29", "-58.2448, 13.7491, 6.14066, 0.29", "-58.7782, 13.8141, 6.17353, 0.81", "-59.5286, 13.8972, 6.22368, 1.99", "-60.4236, 13.9767, 6.2863, 2.06", "-62.2175, 14.0907, 6.41162, 0.15", "-62.7179, 14.1021, 6.4449, 0.22", "-63.2136, 14.0979, 6.47346, 0.15", "-63.521, 14.0945, 6.49418, 0.37", "-63.971, 14.094, 6.52717, 0.66", "-64.8641, 14.1465, 6.60362, 0.37", "-65.698, 14.2352, 6.64612, 0.22", "-66.3548, 14.3066, 6.66079, 0.88", "-67.2808, 14.4015, 6.66791, 1.99", "-68.2365, 14.4946, 6.66335, 1.4", "-69.7308, 14.6279, 6.63638, 0.22", "-70.8572, 14.7382, 6.60658, 0.22", "-71.2344, 14.7872, 6.59408, 0.37", "-71.7342, 14.8652, 6.57728, 0.81", "-72.0683, 14.9266, 6.57416, 1.11", "-73.2839, 15.2093, 6.6315, 0.59", "-74.0483, 15.4183, 6.72513, 0.15", "-74.6354, 15.609, 6.85902, 0.66", "-75.1846, 15.7977, 7.00147, 0.66", "-76.3617, 16.2412, 7.32329, 0.15", "-77.0896, 16.5282, 7.52459, 0.88", "-78.0563, 16.9171, 7.7927, 1.7", "-79.9224, 17.6252, 8.26854, 0.22", "-80.6076, 17.8734, 8.43507, 0.29", "-81.5708, 18.2161, 8.64656, 0.29", "-82.2284, 18.438, 8.76589, 0.66", "-82.7485, 18.5993, 8.84556, 0.81", "-83.7833, 18.8612, 9.01025, 0.29", "-84.9368, 19.0538, 9.24734, 0.22", "-85.4075, 19.0961, 9.37024, 1.03", "-86.2673, 19.1127, 9.62936, 1.92", "-86.9252, 19.0983, 9.858, 1.92", "-88.3338, 19.0175, 10.394, 0.37", "-89.6184, 18.8856, 10.9089, 0.29", "-90.2067, 18.7955, 11.1351, 0.22", "-90.8227, 18.6796, 11.3687, 0.59", "-91.6167, 18.5098, 11.6516, 0.22", "-91.887, 18.4462, 11.7346, 0.44", "-92.6358, 18.2534, 11.923, 0.96", "-93.7024, 17.9855, 12.14, 0.22", "-94.7481, 17.7583, 12.345, 0.22", "-94.8922, 17.7266, 12.3706, 0.52", "-95.3249, 17.635, 12.4369, 1.03", "-95.9966, 17.5144, 12.5395, 1.62", "-96.8123, 17.4118, 12.6621, 1.47", "-98.1542, 17.3377, 12.8465, 0.22", "-98.7737, 17.3472, 12.9063, 0.22", "-99.2876, 17.3923, 12.9507, 0.15", "-99.6423, 17.46, 12.9765, 0.15", "-99.936, 17.546, 13.0282, 0.29", "-100.369, 17.7077, 13.1353, 0.29", "-100.901, 17.9325, 13.3013, 0.22", "-101.541, 18.2083, 13.5227, 1.25", "-102.268, 18.5037, 13.7748, 1.99", "-104.098, 19.1764, 14.3884, 0.29", "-105.224, 19.5641, 14.7537, 0.22", "-105.794, 19.756, 14.9309, 0.66", "-106.443, 19.977, 15.1222, 1.62", "-107.559, 20.4136, 15.4009, 0.52", "-108.736, 20.9481, 15.6553, 0.22", "-109.11, 21.1458, 15.7151, 0.59", "-109.727, 21.5072, 15.8286, 1.25", "-110.04, 21.7047, 15.8944, 1.25", "-111.26, 22.5168, 16.2496, 0.15", "-112.29, 23.2236, 16.667, 0.15", "-112.567, 23.4138, 16.8091, 0.66", "-113.121, 23.7768, 17.142, 1.55", "-113.627, 24.0927, 17.4764, 0.96", "-114.779, 24.781, 18.3022, 0.15", "-115.596, 25.2688, 18.946, 0.15", "-116.072, 25.5912, 19.3503, 0.44", "-116.704, 26.0617, 19.9043, 0.88", "-117.068, 26.3625, 20.2169, 0.44", "-117.669, 26.9288, 20.6738, 0.15", "-118.49, 27.8075, 21.1889, 0.74", "-119.232, 28.6639, 21.4536, 0.22", "-119.501, 28.9861, 21.4984, 1.03", "-119.97, 29.5621, 21.5085, 1.99", "-121.156, 31.0527, 21.411, 0.15", "-121.784, 31.8412, 21.2918, 1.25", "-123.034, 33.3866, 20.9375, 0.07", "-123.659, 34.1413, 20.7215, 0.07", "-124.274, 34.885, 20.5023, 0.88", "-124.749, 35.4677, 20.3254, 1.62", "-125.061, 35.8652, 20.1929, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999039757195,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "5.12393, -6.21789, 1.7, 0.88", "5.16306, -6.93004, 1.85025, 0.74", "5.16842, -7.59051, 2.00451, 0.88", "5.15792, -8.3301, 2.18053, 1.25", "5.14248, -9.47848, 2.44604, 0.88", "5.12876, -10.8564, 2.7461, 0.74", "5.12057, -12.1615, 3.01504, 0.66", "5.11635, -13.3478, 3.23333, 0.96", "5.1282, -14.5007, 3.42264, 1.18", "5.18265, -15.5798, 3.58455, 1.25", "5.38716, -16.9931, 3.76479, 0.81", "5.65851, -18.0441, 3.86566, 0.74", "6.09971, -19.3764, 3.96888, 0.52", "6.3718, -20.0832, 4.02061, 1.4", "6.79527, -21.1044, 4.11612, 2.43", "7.40201, -22.5411, 4.28322, 3.1", "8.19976, -24.4076, 4.55559, 0.22", "8.46818, -25.1171, 4.67374, 0.22", "8.61741, -25.6127, 4.77499, 0.74", "8.77616, -26.3132, 4.92294, 1.25", "8.86473, -26.8466, 5.04083, 1.7", "8.99399, -27.8902, 5.2971, 1.03", "9.23372, -29.2569, 5.66994, 0.52", "9.5064, -30.2639, 5.93376, 0.22", "9.65787, -30.6915, 6.03572, 0.22", "9.85826, -31.1295, 6.13971, 0.22", "9.97713, -31.347, 6.19169, 0.22", "10.2702, -31.873, 6.29736, 0.22", "10.619, -32.5471, 6.40365, 0.81", "10.8884, -33.1947, 6.47409, 1.7", "11.3419, -34.3864, 6.56262, 2.88", "11.7603, -35.5729, 6.62101, 2.06", "12.2837, -37.1733, 6.69471, 1.47", "12.6618, -38.4205, 6.75824, 1.33", "13.0977, -39.9401, 6.83376, 0.22", "13.3405, -40.854, 6.88596, 0.15", "13.5393, -41.656, 6.93412, 0.29", "13.7978, -42.6785, 7.0113, 0.29", "14.0303, -43.5185, 7.0872, 1.03", "14.2021, -44.145, 7.14938, 1.99", "14.471, -45.2122, 7.25714, 2.21", "14.728, -46.4526, 7.40234, 0.37", "14.9208, -47.4584, 7.51531, 0.15", "14.9908, -47.8674, 7.55504, 0.15", "15.1252, -48.7302, 7.63768, 0.22", "15.265, -49.6421, 7.73347, 0.37", "15.3887, -50.4642, 7.84135, 0.96", "15.4783, -51.1797, 7.94475, 1.7", "15.5587, -51.9027, 8.05476, 1.99", "15.67, -52.8201, 8.19339, 1.7", "15.9758, -54.8522, 8.47359, 0.37", "16.1521, -55.9511, 8.61188, 0.22", "16.2761, -56.6342, 8.68073, 0.22", "16.412, -57.2832, 8.76584, 0.22", "16.6002, -58.0686, 8.90689, 0.37", "16.7408, -58.6256, 9.03172, 1.03", "16.8985, -59.2142, 9.18808, 1.77", "17.1725, -60.2058, 9.4446, 0.88", "17.5158, -61.4193, 9.7962, 0.29", "17.761, -62.2765, 10.0721, 0.52", "17.937, -62.879, 10.2866, 1.03", "18.2265, -63.8665, 10.6745, 1.55", "18.5761, -65.1079, 11.181, 0.88", "18.8437, -66.1317, 11.6227, 0.22", "18.965, -66.6305, 11.8259, 0.22", "19.0328, -66.9345, 11.9454, 0.22", "19.1524, -67.5477, 12.1987, 0.29", "19.2882, -68.3773, 12.5374, 0.52", "19.3409, -68.8033, 12.6986, 1.18", "19.4186, -69.6308, 12.9585, 1.33", "19.5099, -70.6786, 13.2429, 0.59", "19.6139, -71.6269, 13.4644, 0.22", "19.6989, -72.3355, 13.6143, 0.22", "19.7696, -72.8379, 13.7153, 0.59", "19.9203, -73.7838, 13.8951, 0.29", "20.0888, -74.6563, 14.0693, 1.18", "20.3114, -75.622, 14.2524, 2.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999039757195,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.70607, -8.89914, 3.08, 0.66", "-1.70607, -8.89914, 3.08, 0.66", "-1.51163, -9.68561, 3.08545, 0.66", "-1.29322, -10.826, 3.0342, 0.88", "-1.13694, -11.9953, 2.95541, 1.03", "-0.991916, -13.6027, 2.83206, 0.81", "-0.925076, -15.1001, 2.71559, 0.96", "-0.977326, -16.2607, 2.62347, 1.33", "-1.23505, -17.6807, 2.54028, 1.77", "-1.6572, -18.9216, 2.51932, 2.21", "-2.02446, -19.6691, 2.54999, 2.58", "-3.02389, -21.2284, 2.74996, 2.73", "-4.18195, -22.6982, 3.10677, 0.81", "-5.54382, -24.2579, 3.59245, 0.52", "-6.55244, -25.3, 4.01939, 0.59", "-7.21723, -25.9138, 4.32231, 1.25", "-8.16068, -26.688, 4.78752, 2.73", "-9.19333, -27.3873, 5.36248, 3.24" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999039757195
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "7.65417, 5.09354, 0.0, 0.686328", "20.5808, 12.7029, 0.0, 0.686328", "33.5074, 20.3123, 0.0, 0.686328" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_98",
    "id" : "dend_98",
    "points3d" : [ "-5.72607, 3.65886, -15.4, 0.74", "-7.22337, 3.86426, -15.5229, 0.74", "-7.92327, 4.0267, -15.6907, 0.81", "-8.85801, 4.29518, -16.0704, 0.74", "-9.80183, 4.56626, -16.4538, 0.96", "-10.8137, 4.85691, -16.8648, 1.03", "-12.0324, 5.20696, -17.3598, 1.03", "-13.0209, 5.63065, -17.8839, 1.47", "-14.1336, 6.2071, -18.6095, 2.29" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_95",
    "id" : "dend_95",
    "points3d" : [ "-5.72607, 3.65886, -15.4, 0.37", "-5.48869, 4.68853, -15.2352, 0.37", "-5.54642, 5.62356, -15.0956, 0.22", "-5.71753, 6.35101, -15.0048, 0.22", "-5.96733, 7.2494, -14.9409, 0.66", "-6.03569, 7.50332, -14.9425, 0.66", "-6.29767, 8.50161, -14.9873, 0.96", "-6.57773, 9.42464, -15.0993, 0.52", "-6.83867, 10.3165, -15.2692, 0.81", "-6.99053, 11.0684, -15.4696, 0.88", "-7.02431, 12.1545, -15.8341, 0.81", "-6.91035, 12.9007, -16.1335, 0.22", "-6.71895, 13.5329, -16.4183, 0.29", "-6.46946, 14.2444, -16.7761, 0.37", "-6.29274, 14.9278, -17.1396, 0.15", "-6.30673, 15.4033, -17.386, 0.22", "-6.45885, 15.9494, -17.6632, 0.22", "-6.72901, 16.7286, -18.0284, 0.52", "-6.98068, 17.5109, -18.3404, 0.37", "-7.20836, 18.3126, -18.6331, 0.44", "-7.52475, 19.6099, -19.0603, 0.37", "-7.62418, 20.1567, -19.2349, 0.37", "-7.78313, 21.3341, -19.6078, 0.52", "-7.90902, 22.474, -19.9492, 0.59", "-8.08076, 23.9569, -20.3494, 0.44", "-8.26093, 24.9922, -20.599, 0.29", "-8.51215, 25.9124, -20.7751, 0.22", "-8.83208, 26.5894, -20.8843, 0.88", "-9.33107, 27.338, -20.996, 0.29", "-9.90493, 27.9666, -21.0724, 0.66", "-10.9355, 28.7978, -21.0976, 0.22", "-11.4309, 29.1116, -21.0822, 0.22", "-12.1481, 29.4942, -21.0028, 0.59", "-15.3964, 38.714, -21.1742, 0.59", "-17.4124, 48.045, -23.259, 0.59", "-18.4232, 57.742, -23.5057, 0.59", "-18.3058, 67.3363, -25.2819, 0.59" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-5.63607, -7.59264, -9.19, 1.03", "-6.73007, -8.96302, -9.13529, 1.03", "-7.41613, -9.93012, -9.04832, 0.88", "-8.12266, -10.926, -8.95876, 1.33", "-8.76761, -11.8352, -8.877, 1.92", "-9.53063, -12.9107, -8.78027, 2.29", "-10.602, -14.421, -8.64446, 1.7", "-11.3162, -15.6107, -8.51806, 1.47" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-5.63607, -7.59264, -9.19, 0.37", "-4.94003, -8.74588, -9.03094, 0.37", "-4.49317, -9.38424, -8.94759, 0.59", "-4.12537, -9.83314, -8.91226, 0.52", "-3.34854, -10.6111, -8.89947, 0.37", "-2.41465, -11.2922, -8.95011, 0.37", "-1.66726, -11.7511, -9.03958, 0.37", "-1.22732, -11.962, -9.12137, 0.88", "-0.332886, -12.3406, -9.31788, 1.4", "0.642655, -12.7178, -9.544, 1.18", "2.61511, -13.5058, -10.0213, 0.37", "4.20853, -14.2282, -10.4182, 0.22", "4.92912, -14.613, -10.5867, 0.81", "5.84377, -15.1929, -10.773, 1.92", "7.75361, -16.7126, -11.1191, 0.59", "8.71035, -17.7041, -11.2916, 0.66", "9.26422, -18.4846, -11.3918, 0.52", "9.824, -19.55, -11.5131, 0.59", "10.1686, -20.4307, -11.6151, 0.44", "10.5333, -21.6256, -11.791, 0.44", "10.7364, -22.3995, -11.9154, 0.44", "10.9481, -23.076, -12.048, 0.66", "11.4901, -24.4439, -12.3688, 1.03", "12.218, -25.8872, -12.7601, 0.74", "13.0444, -27.0912, -13.1062, 0.59", "13.815, -27.9628, -13.3526, 0.44", "14.4215, -28.5362, -13.5097, 0.81", "15.0006, -29.0005, -13.6392, 1.47", "15.5969, -29.4154, -13.7548, 1.47", "17.4045, -30.5292, -14.1012, 0.29", "18.4529, -31.1339, -14.2821, 0.37", "19.3121, -31.6146, -14.4278, 0.29", "19.8304, -31.9104, -14.4937, 0.15", "26.8462, -38.6758, -16.1152, 0.15", "34.2653, -44.9424, -18.0252, 0.15" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "15.323, 3.32315, 3.21255, 0.88", "15.6228, 2.20176, 4.1528, 0.88", "15.767, 1.22448, 4.94008, 0.44", "15.8251, 0.668646, 5.36497, 0.44", "15.8998, 0.0125485, 5.83879, 0.59", "15.9897, -0.574606, 6.24246, 0.44", "16.1637, -1.30761, 6.69625, 0.29", "16.2846, -1.67526, 6.89297, 0.29", "16.6169, -2.21474, 7.13072, 0.52", "16.9569, -2.55963, 7.26882, 0.96", "17.4803, -2.93407, 7.41183, 1.92", "18.6133, -3.52694, 7.61089, 2.8", "20.0124, -4.06617, 7.77604, 1.18", "21.082, -4.41803, 7.88765, 0.29", "21.6591, -4.57209, 7.93693, 0.29", "22.2333, -4.69138, 7.97949, 0.74", "23.1446, -4.80133, 8.02477, 1.47", "23.8344, -4.78096, 8.03917, 1.84" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "15.323, 3.32315, 3.21255, 0.44", "16.1612, 3.63476, 2.45821, 0.44", "16.4404, 3.73575, 2.09197, 0.44", "16.7571, 3.77411, 1.63906, 0.44", "17.0772, 3.77704, 1.21182, 0.44", "17.5425, 3.78762, 0.587945, 0.52", "18.1276, 3.82134, -0.203857, 0.37", "19.0353, 3.92148, -1.4546, 1.4", "19.9406, 4.02112, -2.66988, 2.29", "21.1246, 4.07611, -4.06897, 0.22", "21.4465, 4.06697, -4.42177, 0.22", "21.7399, 4.02659, -4.71799, 0.22", "22.2549, 3.93912, -5.10588, 0.37", "22.6745, 3.85914, -5.35046, 0.37", "24.0327, 3.59835, -6.02172, 0.22", "24.9537, 3.41337, -6.39439, 0.74", "26.1527, 3.18039, -6.83705, 2.36", "28.3125, 2.77396, -7.57785, 0.15", "28.8307, 2.68023, -7.74894, 1.11", "29.1699, 2.62128, -7.86919, 1.62", "30.8706, 2.34549, -8.5403, 0.15", "31.7854, 2.21726, -8.91704, 0.15", "32.1423, 2.17604, -9.08508, 0.59", "32.4594, 2.12301, -9.29246, 0.59", "33.4265, 1.93076, -10.0907, 0.22", "34.0645, 1.7914, -10.6941, 0.37", "34.4123, 1.71207, -11.0791, 0.59", "34.7374, 1.66251, -11.4208, 0.22", "35.4297, 1.61281, -12.046, 0.15", "36.2292, 1.58883, -12.6987, 0.15", "36.7345, 1.59024, -13.049, 0.66", "37.2446, 1.58796, -13.3788, 1.47", "38.0595, 1.56767, -13.9307, 1.11", "39.4246, 1.55998, -14.8668, 0.22", "46.2809, -0.96095, -21.6716, 0.22", "53.6785, -3.22415, -27.9873, 0.22", "61.2418, -6.07367, -33.84, 0.22" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-3.3364, 17.371, 16.1793, 0.29", "-4.96373, 18.1184, 17.5999, 0.29", "-6.0867, 18.7381, 18.6138, 0.15", "-6.60479, 19.0839, 19.1341, 0.96", "-7.13532, 19.5064, 19.731, 2.06", "-8.28974, 20.6102, 21.1965, 0.22", "-8.5884, 20.9976, 21.6731, 0.37", "-8.71368, 21.3018, 22.0129, 0.37", "-8.88568, 21.9895, 22.7561, 0.29", "-9.00853, 22.733, 23.5524, 1.99", "-9.0525, 23.2498, 24.1138, 2.06", "-9.12522, 24.6712, 25.7206, 0.15", "-9.20254, 25.6735, 26.8659, 0.15", "-9.26055, 26.2069, 27.4747, 1.18", "-9.31747, 26.6558, 27.9775, 2.14", "-9.50472, 27.9554, 29.4498, 0.15", "-9.64219, 28.673, 30.2542, 0.44", "-9.82043, 29.3836, 31.0479, 0.15", "-9.99473, 30.0249, 31.7668, 0.29", "-10.1544, 30.5769, 32.4345, 0.44", "-10.3308, 31.157, 33.1959, 1.03", "-10.4605, 31.5664, 33.7751, 1.7", "-10.7772, 32.6628, 35.4492, 0.15", "-10.9146, 33.1818, 36.3139, 0.22", "-11.0357, 33.8412, 37.4736, 0.15", "-11.0975, 34.3209, 38.3632, 0.52", "-11.1496, 34.8635, 39.4515, 0.88", "-11.1976, 35.5162, 40.9168, 1.25", "-11.2222, 35.9183, 41.8789, 1.62", "-11.293, 36.7536, 43.8927, 0.15", "-11.3539, 37.1352, 44.819, 0.22", "-11.4865, 37.6769, 46.1131, 0.22", "-11.5869, 38.0062, 46.8688, 0.37", "-11.7176, 38.417, 47.7515, 0.88", "-11.8166, 38.7005, 48.3477, 1.4", "-12.164, 39.5625, 50.1345, 0.37", "-12.4624, 40.3834, 51.6878, 0.22", "-12.6567, 40.999, 52.7366, 0.88", "-12.8122, 41.5173, 53.5742, 1.7" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-3.3364, 17.371, 16.1793, 0.22", "-2.96488, 18.4405, 15.2949, 0.22", "-2.61631, 19.523, 14.4751, 0.15", "-2.39889, 20.1696, 14.0477, 0.15", "-2.15346, 20.8717, 13.6259, 0.44", "-1.73709, 22.0266, 12.9899, 0.15", "-1.48679, 22.6942, 12.6496, 0.66", "-1.24854, 23.3361, 12.3752, 1.7", "-0.849696, 24.3529, 12.0142, 0.22", "-0.441498, 25.3575, 11.6781, 0.22", "-0.20662, 25.9318, 11.4877, 0.44", "0.0234552, 26.4838, 11.3246, 0.81", "0.213302, 26.9517, 11.1867, 0.37", "0.675705, 28.214, 10.7976, 0.22", "0.847524, 28.7818, 10.6223, 0.59", "0.953468, 29.1869, 10.5069, 1.18", "1.13154, 29.9992, 10.3386, 1.11", "1.49743, 31.8725, 10.0525, 0.22", "1.63016, 32.5983, 9.9772, 0.66", "1.77653, 33.3873, 9.93389, 1.7", "1.91019, 34.123, 9.91189, 1.62", "2.42439, 36.9704, 9.87854, 0.15", "2.51514, 37.4759, 9.88526, 0.66", "2.62797, 38.052, 9.90845, 0.22", "2.76207, 38.657, 9.92914, 0.07", "2.94726, 39.4272, 9.94573, 0.07", "3.07178, 39.9332, 9.94462, 0.37", "3.23724, 40.5311, 9.91884, 0.22", "3.62378, 41.8322, 9.85762, 0.15", "3.86506, 42.6044, 9.81506, 0.44", "4.12534, 43.4056, 9.76707, 0.81", "4.49527, 44.4624, 9.69508, 1.84", "5.26144, 46.6192, 9.56331, 0.07", "5.52288, 47.3495, 9.5318, 0.29", "6.0436, 48.7972, 9.49584, 0.07", "6.1866, 49.197, 9.4953, 0.66", "6.42989, 49.8904, 9.51617, 1.33", "6.95305, 51.4592, 9.63009, 0.07", "7.18515, 52.2304, 9.72515, 0.07", "7.28189, 52.5755, 9.77784, 0.22", "7.45979, 53.2382, 9.90172, 0.74", "7.58672, 53.7278, 9.99873, 1.55", "8.07227, 55.6571, 10.4076, 0.07", "8.18763, 56.0876, 10.4963, 0.22", "8.38364, 56.8092, 10.6316, 0.07", "8.5902, 57.5558, 10.7638, 1.03" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-125.061, 35.8652, 20.1929, 0.15", "-125.41, 37.742, 20.8504, 0.15", "-125.593, 38.7305, 21.1967, 0.66", "-125.684, 39.219, 21.3678, 0.66", "-125.919, 40.4884, 21.8125, 0.07", "-126.032, 41.0942, 22.0248, 0.29" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-125.061, 35.8652, 20.1929, 0.07", "-126.003, 36.6134, 19.8976, 0.07", "-126.813, 37.2501, 19.6972, 0.07", "-127.285, 37.6032, 19.63, 0.52", "-127.81, 37.9951, 19.5939, 1.11", "-129.378, 39.2193, 19.5725, 0.07", "-129.69, 39.4782, 19.5795, 0.07", "-130.224, 39.9682, 19.6713, 0.52", "-130.948, 40.6799, 19.8773, 0.15", "-131.423, 41.1733, 20.0445, 0.22", "-131.83, 41.6094, 20.2097, 0.59", "-132.179, 41.9657, 20.3615, 0.59", "-132.88, 42.6143, 20.6661, 0.15", "-133.271, 42.9206, 20.8206, 0.22", "-133.741, 43.2195, 20.9742, 0.66", "-134.193, 43.4588, 21.1031, 1.62", "-134.847, 43.7695, 21.2863, 1.62", "-136.217, 44.4079, 21.661, 0.22", "-136.961, 44.7328, 21.8573, 0.22", "-137.606, 45.0105, 22.0299, 0.22", "-138.316, 45.321, 22.2184, 0.22", "-139.145, 45.7055, 22.4503, 0.22", "-139.895, 46.1131, 22.6629, 1.77" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "20.3114, -75.622, 14.2524, 0.22", "21.4256, -77.1781, 15.0349, 0.22", "22.4095, -78.6116, 15.7725, 0.22", "22.7257, -79.1181, 16.035, 0.66", "23.051, -79.6792, 16.3207, 0.88", "23.4334, -80.4428, 16.702, 0.22", "23.8006, -81.2629, 17.1014, 0.07", "24.0008, -81.8731, 17.378, 0.15", "24.2069, -82.6524, 17.7174, 0.07", "24.328, -83.1623, 17.9483, 0.15", "24.5965, -84.4511, 18.5366, 0.07", "24.6914, -84.9902, 18.763, 0.52", "24.7754, -85.6268, 18.9981, 0.88" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "20.3114, -75.622, 14.2524, 2.8", "20.9575, -76.7763, 14.3663, 2.8", "21.8005, -78.3342, 14.5752, 0.37", "22.2378, -79.2108, 14.7112, 0.22", "22.8154, -80.5016, 14.9172, 0.22", "23.1446, -81.3501, 15.0747, 0.22", "23.4101, -82.1209, 15.235, 0.29", "23.5846, -82.7311, 15.3845, 0.88", "23.822, -83.6828, 15.6549, 0.96", "24.0213, -84.5652, 15.9084, 0.52", "24.3198, -86.0116, 16.3118, 0.37", "24.5092, -86.8925, 16.5304, 0.81", "24.7135, -87.6546, 16.7199, 0.44", "25.0792, -88.8063, 17.0385, 0.29", "25.3429, -89.5535, 17.2789, 0.88", "25.6006, -90.2593, 17.5443, 1.92", "25.9587, -91.2867, 17.9576, 2.06", "26.4867, -92.9122, 18.6275, 0.29", "26.8224, -94.0701, 19.1136, 0.37", "27.0926, -95.092, 19.5124, 0.29", "27.3244, -95.9851, 19.8326, 0.37", "27.6622, -97.2901, 20.1929, 0.37", "27.983, -98.6089, 20.4383, 0.29", "28.0889, -99.108, 20.4635, 0.88", "28.3246, -100.236, 20.3779, 1.84", "28.4715, -100.904, 20.262, 2.06", "28.8946, -102.683, 19.8074, 0.29", "29.0856, -103.467, 19.5662, 0.37", "29.2755, -104.245, 19.313, 0.22", "29.4284, -104.82, 19.1321, 0.22", "29.64, -105.54, 18.9377, 0.37", "29.9695, -106.457, 18.7432, 0.29", "30.1082, -106.8, 18.6974, 1.03", "30.4022, -107.477, 18.6539, 1.62", "30.6774, -108.097, 18.6527, 1.92", "31.2278, -109.332, 18.6981, 0.81", "31.7354, -110.497, 18.7826, 0.22", "32.2371, -111.633, 18.9532, 0.22", "32.7436, -112.807, 19.1924, 0.22", "32.904, -113.19, 19.2889, 1.03", "33.1898, -113.888, 19.4955, 2.14", "33.5999, -114.924, 19.8394, 1.4", "34.2215, -116.449, 20.3959, 0.22", "34.6068, -117.361, 20.7458, 0.29", "34.9062, -118.061, 21.0191, 0.66", "35.1398, -118.59, 21.2096, 0.66", "35.5286, -119.414, 21.475, 0.22", "36.0616, -120.434, 21.7662, 0.22", "36.3127, -120.889, 21.8787, 0.74", "36.6733, -121.507, 22.0406, 1.62", "37.2039, -122.44, 22.2939, 0.96", "37.8199, -123.637, 22.6387, 0.22", "38.1331, -124.336, 22.8493, 0.15", "38.2646, -124.716, 22.9603, 0.15", "38.347, -124.997, 23.0445, 0.44", "38.4675, -125.521, 23.2026, 0.66", "38.6118, -126.356, 23.4507, 0.15", "38.6769, -126.8, 23.5909, 0.15", "38.7607, -127.311, 23.7548, 0.29", "38.8687, -127.814, 23.9348, 0.29", "39.1192, -128.741, 24.2883, 0.07", "39.1996, -129.0, 24.3859, 0.44", "39.4725, -129.846, 24.7012, 1.18", "39.6506, -130.466, 24.9321, 2.06", "39.8308, -131.162, 25.1826, 1.55", "40.2259, -132.8, 25.7434, 0.44", "40.4917, -133.931, 26.1011, 0.66", "40.7364, -134.975, 26.3822, 0.22", "41.0878, -136.432, 26.6892, 0.22", "41.2019, -136.917, 26.7748, 0.96", "41.3341, -137.518, 26.8582, 1.92", "41.447, -138.08, 26.9148, 1.99", "41.8119, -139.859, 27.0435, 0.29", "42.1032, -141.111, 27.1142, 0.15", "42.2512, -141.682, 27.13, 0.74", "42.3625, -142.104, 27.1388, 0.74", "42.6305, -143.161, 27.1519, 0.22", "42.7887, -143.861, 27.156, 0.37", "42.9898, -144.882, 27.1653, 0.22", "43.124, -145.669, 27.1878, 0.22", "43.2005, -146.174, 27.2082, 0.59", "43.2891, -146.911, 27.2437, 1.18", "43.468, -148.909, 27.3759, 0.22", "43.5215, -149.656, 27.4331, 0.44", "43.5778, -150.386, 27.4804, 0.22", "43.6179, -150.893, 27.5144, 0.81", "43.6675, -151.466, 27.5502, 1.47", "43.7393, -152.245, 27.5958, 1.55", "43.8385, -153.334, 27.6508, 0.22", "43.9499, -154.539, 27.7168, 0.15", "44.0653, -155.701, 27.7876, 0.15", "44.1222, -156.27, 27.8445, 0.29", "44.1706, -156.787, 27.9181, 0.59", "44.2061, -157.208, 28.0006, 0.96", "44.2777, -158.004, 28.2257, 0.22", "44.3612, -158.812, 28.5002, 0.15", "44.5025, -159.9, 28.9035, 0.15", "44.5752, -160.491, 29.1234, 0.96", "44.6831, -161.437, 29.4862, 1.92", "44.819, -162.766, 30.0081, 0.66" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-9.19333, -27.3873, 5.36248, 1.03", "-8.53147, -28.5805, 6.21709, 1.03", "-7.85165, -29.7488, 7.09065, 0.37", "-7.34823, -30.5813, 7.69741, 0.66", "-6.83408, -31.4117, 8.25555, 1.11", "-6.31168, -32.2501, 8.76534, 1.55", "-5.71976, -33.2357, 9.28478, 0.52", "-5.15273, -34.2074, 9.7265, 0.44", "-4.50342, -35.4009, 10.1668, 0.88", "-3.94242, -36.4758, 10.5022, 0.74", "-3.43277, -37.4913, 10.7697, 0.44", "-2.85481, -38.6878, 11.0021, 0.37", "-2.56931, -39.3386, 11.0934, 1.18", "-2.04435, -40.6982, 11.183, 2.51" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-9.19333, -27.3873, 5.36248, 1.03", "-10.1162, -27.7051, 5.79415, 1.03", "-11.5166, -28.2904, 6.5149, 0.52", "-12.58, -28.8379, 7.14994, 0.44", "-13.4269, -29.3914, 7.73894, 0.29", "-13.9344, -29.8158, 8.12824, 0.29", "-14.235, -30.137, 8.40334, 0.29", "-14.6491, -30.7764, 8.89841, 0.96", "-14.9981, -31.5469, 9.41407, 2.14", "-15.3726, -32.5934, 10.045, 2.06", "-15.7194, -33.7822, 10.7169, 0.74", "-16.136, -35.367, 11.5525, 0.44", "-16.2862, -35.9734, 11.8574, 0.59", "-16.444, -36.6661, 12.1744, 0.88", "-16.6347, -37.5575, 12.5567, 0.29", "-16.8187, -38.5257, 12.9471, 0.15", "-16.9032, -38.9832, 13.1294, 0.29", "-17.1388, -40.1845, 13.524, 0.22", "-17.2316, -40.6444, 13.6739, 0.66", "-17.4013, -41.4679, 13.9197, 1.7", "-17.5523, -42.154, 14.0965, 2.21", "-17.7305, -42.9135, 14.2903, 1.92", "-18.2089, -44.9554, 14.8176, 0.37", "-18.4099, -45.8486, 15.0562, 1.25", "-18.6271, -46.8874, 15.3431, 0.96", "-18.8784, -48.1998, 15.696, 0.22", "-19.0942, -49.3365, 15.9968, 0.22", "-19.2664, -50.1856, 16.2035, 0.44", "-19.4541, -50.984, 16.392, 1.18", "-19.6535, -51.6614, 16.5235, 2.29", "-19.9962, -52.6217, 16.6863, 2.51", "-20.5152, -53.9308, 16.8547, 0.44", "-21.0419, -55.1576, 16.9511, 0.44", "-21.3, -55.7166, 16.9844, 0.37", "-21.9052, -56.9553, 17.0332, 0.37", "-22.1253, -57.3902, 17.0583, 0.22", "-22.337, -57.8036, 17.0914, 0.22", "-22.68, -58.5255, 17.1599, 0.22", "-22.8476, -58.8844, 17.2066, 0.74", "-23.0737, -59.4039, 17.2977, 1.4", "-23.3816, -60.1929, 17.457, 2.14", "-23.8457, -61.3918, 17.7065, 0.66", "-24.3095, -62.5717, 17.9517, 0.37", "-24.6783, -63.5808, 18.1173, 0.22", "-24.9524, -64.4361, 18.2207, 0.22", "-25.1507, -65.158, 18.2761, 1.11", "-25.3352, -65.8982, 18.3191, 1.25", "-25.563, -66.8711, 18.366, 0.59", "-25.8343, -67.98, 18.3995, 0.22", "-25.9506, -68.4283, 18.4021, 0.22", "-26.3106, -69.5748, 18.4023, 0.29", "-26.8721, -71.091, 18.4332, 0.29", "-27.0971, -71.6314, 18.4725, 0.29", "-27.3646, -72.2134, 18.5432, 0.96", "-27.6123, -72.7037, 18.6254, 1.99", "-27.8252, -73.1057, 18.6904, 2.51", "-28.5174, -74.3833, 18.878, 0.81", "-29.2554, -75.7691, 19.0358, 0.22", "-29.6258, -76.4813, 19.094, 0.22", "-29.9025, -77.0453, 19.1226, 0.22", "-30.0559, -77.372, 19.1279, 0.44", "-30.2955, -77.9084, 19.1147, 0.96", "-30.5706, -78.5542, 19.0697, 0.44", "-30.9442, -79.4692, 18.9482, 0.15", "-31.1811, -80.0653, 18.8672, 0.15", "-31.3644, -80.5431, 18.8053, 0.44", "-31.5679, -81.0679, 18.7505, 0.52", "-31.792, -81.6725, 18.6777, 0.22", "-32.0164, -82.2334, 18.5977, 0.22", "-32.2519, -82.7685, 18.5201, 0.74", "-32.6069, -83.5207, 18.3982, 1.33", "-33.0023, -84.3272, 18.2704, 0.29", "-33.5596, -85.4012, 18.112, 0.22", "-33.9599, -86.1321, 18.0145, 0.22", "-34.5512, -87.1776, 17.901, 0.22", "-34.7827, -87.5843, 17.8637, 0.52", "-35.2982, -88.5022, 17.7994, 1.7", "-35.9852, -89.7458, 17.7362, 0.44", "-36.4993, -90.6797, 17.716, 0.37", "-37.0956, -91.8312, 17.7029, 0.15", "-37.3769, -92.3877, 17.6938, 0.81", "-37.7046, -93.0467, 17.6775, 1.7", "-37.9659, -93.5953, 17.6534, 0.96" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "33.5074, 20.3123, 0.0, 0.15", "46.434, 27.9217, 0.0, 0.15", "59.3606, 35.5311, 0.0, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_100",
    "id" : "dend_100",
    "points3d" : [ "-14.1336, 6.2071, -18.6095, 0.52", "-13.106, 6.36303, -19.2397, 0.52", "-11.9884, 6.71315, -19.9816, 0.37", "-11.0837, 7.30435, -20.6952, 0.22", "-10.7978, 7.69868, -21.0214, 0.29", "-10.6149, 8.03331, -21.2993, 0.29", "-10.3526, 8.49389, -21.7471, 0.66", "-10.0649, 9.03514, -22.3413, 1.03", "-9.87523, 9.56803, -22.8954, 0.81", "-9.67353, 10.224, -23.5301, 0.44", "-9.36016, 11.0601, -24.3072, 0.74", "-9.00536, 11.7886, -24.9379, 0.66", "-8.63912, 12.4238, -25.3961, 0.66", "-7.91868, 13.5214, -26.1901, 0.29", "-7.45622, 14.1788, -26.6177, 0.29", "-6.87876, 15.0057, -27.0214, 0.52", "-6.42279, 15.7531, -27.2189, 0.52", "-5.90868, 16.7005, -27.3101, 1.03", "-0.915866, 24.41, -30.8525, 1.03", "3.7706, 32.0002, -35.0279, 1.03", "8.37538, 38.8295, -40.4807, 1.03", "12.8661, 45.2505, -46.5193, 1.03", "16.6514, 52.4763, -52.0643, 1.03", "19.3283, 59.9543, -57.8959, 1.03", "23.3666, 67.0269, -63.4703, 1.03", "28.083, 74.4544, -67.9113, 1.03", "33.5338, 82.0776, -70.9372, 1.03", "38.9896, 89.4421, -74.568, 1.03", "44.9174, 96.964, -76.8796, 1.03", "51.6168, 103.666, -79.6845, 1.03" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_99",
    "id" : "dend_99",
    "points3d" : [ "-14.1336, 6.2071, -18.6095, 1.25", "-14.1786, 4.8809, -18.9256, 1.25", "-14.1284, 3.56077, -19.1996, 0.59", "-14.0659, 2.50955, -19.4391, 0.81", "-13.9905, 1.25832, -19.7941, 1.11", "-13.8834, -0.0942403, -20.1994, 1.4", "-13.7518, -1.27967, -20.5385, 1.11", "-13.2801, -3.45834, -21.1543, 0.52", "-12.8557, -4.90282, -21.5606, 0.74", "-12.3962, -6.19751, -21.978, 1.7", "-11.8559, -7.46815, -22.4568, 1.84", "-11.1753, -8.78443, -23.0203, 1.92", "-9.91783, -10.925, -23.9916, 0.96", "-9.24173, -11.8878, -24.442, 0.96", "-8.57785, -12.7123, -24.8186, 0.44", "-7.80235, -13.5714, -25.2043, 1.18", "-7.44285, -13.9234, -25.4089, 1.18", "-3.30942, -22.6494, -27.0871, 1.18", "1.2999, -31.2383, -28.1612, 1.18", "4.10379, -40.3904, -30.1679, 1.18", "6.82522, -49.7713, -30.3147, 1.18", "10.4246, -58.7393, -28.752, 1.18", "13.2657, -68.0814, -28.4047, 1.18" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_97",
    "id" : "dend_97",
    "points3d" : [ "-18.3058, 67.3363, -25.2819, 0.07", "-21.2363, 76.6021, -26.3304, 0.07", "-24.2909, 85.8649, -25.6875, 0.07", "-29.45, 94.1819, -24.9014, 0.07", "-35.4793, 101.937, -25.5112, 0.07", "-42.7492, 108.632, -25.615, 0.07", "-50.9063, 114.186, -24.6136, 0.07", "-57.8583, 120.802, -22.2417, 0.07", "-66.3761, 125.328, -19.8118, 0.07" ],
    "parent" : "dend_95",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_96",
    "id" : "dend_96",
    "points3d" : [ "-18.3058, 67.3363, -25.2819, 0.81", "-19.6771, 76.858, -26.9399, 0.07", "-20.089, 86.137, -29.9827, 0.07", "-19.3046, 95.706, -31.7324, 0.07", "-19.1647, 105.296, -33.5322, 0.07", "-18.3492, 114.897, -35.0687, 0.07", "-19.2224, 124.169, -38.0351, 0.07", "-21.3009, 133.457, -40.2553, 0.07" ],
    "parent" : "dend_95",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "-11.3162, -15.6107, -8.51806, 0.37", "-12.5848, -15.5326, -8.64534, 0.37", "-13.5546, -15.4652, -8.88129, 0.37", "-14.1838, -15.492, -9.07171, 0.22", "-14.8535, -15.5995, -9.38514, 0.22", "-15.1916, -15.676, -9.56792, 0.22", "-15.6788, -15.7915, -9.83102, 0.44", "-16.167, -15.9256, -10.1319, 0.52", "-16.91, -16.1408, -10.56, 1.18", "-18.1684, -16.5643, -11.1881, 0.22", "-18.9663, -16.8622, -11.541, 0.22", "-19.5456, -17.0871, -11.7629, 0.22", "-20.1278, -17.3265, -11.9776, 0.22", "-20.8354, -17.6293, -12.2213, 0.29", "-21.4481, -17.9103, -12.4205, 0.59", "-21.9261, -18.1626, -12.5534, 0.96", "-22.6818, -18.643, -12.7704, 0.37", "-23.4186, -19.2154, -13.0081, 0.22", "-24.0439, -19.8077, -13.2337, 0.07", "-24.706, -20.5028, -13.4889, 0.07", "-25.2147, -21.0759, -13.6866, 0.22", "-25.75, -21.7117, -13.8742, 0.07", "-26.1499, -22.2523, -14.0164, 0.07", "-26.4823, -22.7654, -14.0998, 0.74", "-34.8996, -27.8434, -15.5223, 0.74", "-43.9455, -31.967, -16.0557, 0.74", "-52.8279, -36.2733, -17.3187, 0.74", "-62.0119, -40.0732, -18.0011, 0.74" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-11.3162, -15.6107, -8.51806, 0.96", "-11.2496, -17.0037, -8.72678, 0.96", "-11.1988, -18.0683, -8.94905, 0.88", "-11.1464, -19.4635, -9.29371, 0.81", "-11.1258, -20.2872, -9.52827, 1.03", "-11.1329, -21.0509, -9.77024, 1.33", "-11.2076, -22.6, -10.2806, 0.88", "-11.3579, -23.95, -10.7975, 1.03", "-11.5775, -25.1393, -11.2977, 1.62", "-11.9441, -26.8409, -12.0614, 0.37", "-12.1755, -27.7532, -12.477, 0.37", "-12.3942, -28.468, -12.8205, 0.74", "-12.6351, -29.034, -13.1014, 1.25", "-13.0652, -29.7773, -13.4777, 1.77" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "23.8344, -4.78096, 8.03917, 0.15", "24.9039, -3.80811, 7.4989, 0.15", "25.441, -3.3125, 7.23858, 0.15", "25.8837, -2.8796, 6.99471, 0.88", "26.3787, -2.35676, 6.6968, 1.55", "27.517, -1.00969, 5.93191, 0.22", "28.0327, -0.399417, 5.58538, 0.22", "28.3668, 0.0186227, 5.3716, 0.37", "28.9408, 0.757976, 5.0166, 0.07", "29.1837, 1.10666, 4.8433, 0.07", "29.4879, 1.67319, 4.50986, 1.18" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "23.8344, -4.78096, 8.03917, 0.29", "24.6294, -5.24326, 9.21034, 0.29", "25.1839, -5.47635, 9.9473, 0.29", "26.048, -5.71934, 10.9832, 0.66", "26.2999, -5.76414, 11.2593, 0.66", "27.0419, -5.84075, 12.0078, 0.22", "27.4714, -5.87844, 12.4106, 0.22", "28.0961, -5.91109, 12.9825, 0.66", "28.9859, -5.95907, 13.7618, 1.84", "30.0773, -6.05251, 14.7077, 3.02", "31.2851, -6.23189, 15.8077, 1.55", "32.5301, -6.56003, 16.9581, 0.44", "33.4941, -6.9312, 17.8674, 0.44", "34.4937, -7.42703, 18.835, 0.22", "35.3481, -7.92512, 19.6618, 1.03", "36.0157, -8.36343, 20.2836, 2.29", "37.4938, -9.39202, 21.5862, 0.22", "38.234, -9.86816, 22.2226, 0.22", "38.6848, -10.1255, 22.5807, 0.22", "39.2503, -10.4045, 22.9999, 1.47", "40.1653, -10.7902, 23.6215, 2.88", "40.948, -11.0686, 24.1141, 2.14", "43.6064, -11.8959, 25.6619, 0.29", "44.6346, -12.1906, 26.2308, 0.29", "45.2567, -12.3569, 26.5683, 0.29", "45.824, -12.4967, 26.8782, 0.66", "46.6061, -12.6579, 27.2874, 1.03", "47.4328, -12.796, 27.6404, 0.22", "48.3644, -12.8755, 27.9593, 0.22", "49.0003, -12.8836, 28.2071, 0.22", "49.6736, -12.8654, 28.4894, 0.59", "50.4984, -12.8232, 28.8456, 1.4", "51.7876, -12.7577, 29.4078, 0.37", "52.7682, -12.7738, 29.8214, 0.22", "53.6841, -12.846, 30.1625, 0.22", "54.174, -12.9205, 30.3304, 1.33", "54.9668, -13.0855, 30.5859, 2.73", "55.6614, -13.2649, 30.8079, 2.73", "57.9407, -13.9817, 31.5299, 0.22", "58.8191, -14.3084, 31.8017, 0.52", "59.8725, -14.7304, 32.154, 0.15", "60.3996, -14.9498, 32.345, 0.52", "61.0799, -15.2376, 32.6042, 0.96", "62.6294, -15.8945, 33.2197, 0.22", "63.5145, -16.2524, 33.5862, 0.96", "64.4559, -16.6165, 34.02, 2.29", "66.4809, -17.3505, 34.9853, 0.22", "67.0396, -17.5479, 35.258, 0.74", "67.9062, -17.8488, 35.6925, 1.11", "69.6107, -18.429, 36.5652, 0.15", "70.575, -18.7564, 37.0542, 0.44", "71.316, -19.0136, 37.4325, 1.25", "72.9552, -19.5693, 38.3347, 0.15", "73.4249, -19.7308, 38.5965, 0.15", "73.8376, -19.8786, 38.8274, 0.44", "74.3552, -20.0861, 39.1098, 0.66", "75.3354, -20.4779, 39.5865, 0.15", "76.184, -20.8022, 39.9813, 1.03", "76.9383, -21.0856, 40.2957, 2.14", "78.5103, -21.6467, 40.9255, 0.15", "79.0079, -21.8072, 41.1424, 0.15", "79.7915, -22.009, 41.5235, 0.15", "80.6249, -22.1645, 41.9858, 0.15", "81.0232, -22.2114, 42.2405, 0.74", "81.8691, -22.2353, 42.88, 1.92", "83.3275, -22.1565, 44.1577, 0.15", "84.2502, -22.0659, 45.0869, 0.59", "84.9797, -21.977, 45.9124, 0.15", "85.6385, -21.8776, 46.6981, 1.03", "86.3104, -21.7741, 47.4949, 1.33", "87.5161, -21.5916, 48.9207, 0.15", "88.6497, -21.4348, 50.2481, 0.15", "89.2928, -21.3797, 50.9849, 1.03", "90.1347, -21.3436, 51.9331, 1.77", "91.2165, -21.3508, 53.1459, 0.15", "92.12, -21.4061, 54.1256, 0.15", "92.8586, -21.4982, 54.8324, 0.59", "93.8179, -21.6691, 55.6618, 0.15", "94.2871, -21.7689, 56.0556, 0.15", "94.7884, -21.8913, 56.4672, 1.03", "95.4788, -22.0452, 57.004, 1.62", "97.3056, -22.398, 58.3091, 0.15", "97.9519, -22.4901, 58.7458, 0.15", "98.6501, -22.5463, 59.201, 0.81", "99.5845, -22.555, 59.8218, 1.62", "100.949, -22.4859, 60.7471, 0.07", "101.878, -22.3895, 61.406, 0.07", "102.314, -22.3145, 61.7162, 0.59", "102.641, -22.2491, 61.93, 0.59", "103.514, -22.0505, 62.4835, 0.07", "104.164, -21.8986, 62.879, 0.07", "104.507, -21.8183, 63.0784, 0.07", "105.116, -21.6601, 63.4138, 0.59", "105.807, -21.4794, 63.7997, 1.33", "106.809, -21.2356, 64.3586, 0.15", "107.528, -21.0664, 64.7806, 0.52", "108.221, -20.8882, 65.2288, 0.07", "108.681, -20.7734, 65.5444, 0.22", "109.377, -20.5943, 66.0468, 0.07", "110.262, -20.3599, 66.736, 0.66", "111.345, -20.0843, 67.6184, 0.22", "112.061, -19.9254, 68.1971, 0.96", "112.808, -19.8126, 68.8386, 1.62", "114.246, -19.656, 70.0952, 0.15", "115.055, -19.5744, 70.8005, 0.74", "115.797, -19.5057, 71.4443, 1.11", "117.06, -19.4162, 72.4942, 0.22", "118.806, -19.3326, 73.8993, 0.29", "119.227, -19.3213, 74.2196, 0.15", "119.562, -19.3321, 74.4471, 0.15", "120.208, -19.3585, 74.8173, 0.22", "120.541, -19.3606, 74.9815, 0.74", "121.341, -19.3127, 75.2788, 1.47", "122.124, -19.2174, 75.4946, 1.18", "123.526, -19.0213, 75.9162, 0.15", "123.958, -18.9555, 76.0673, 0.37", "124.456, -18.8809, 76.2573, 0.37", "125.412, -18.7336, 76.6175, 0.15", "126.174, -18.5906, 76.9192, 1.25", "126.59, -18.5003, 77.0988, 1.25", "127.878, -18.1959, 77.6547, 0.15", "128.491, -18.065, 77.9146, 0.15", "129.313, -17.912, 78.2413, 0.22", "130.146, -17.7788, 78.5182, 0.15", "130.839, -17.6509, 78.6971, 0.22", "131.5, -17.5122, 78.848, 0.96", "132.422, -17.293, 79.0231, 1.62", "132.995, -17.1538, 79.1193, 1.33", "134.699, -16.7638, 79.393, 0.15", "135.686, -16.5479, 79.5325, 0.15", "136.249, -16.4227, 79.6123, 0.66", "136.968, -16.2572, 79.6964, 1.11", "138.405, -15.9103, 79.8238, 0.15", "139.153, -15.7251, 79.8611, 0.44", "139.503, -15.6352, 79.8611, 0.44", "140.463, -15.4198, 79.8201, 0.15", "141.604, -15.1931, 79.7331, 0.15", "141.981, -15.1178, 79.697, 0.88", "142.958, -14.9221, 79.5579, 1.7", "144.281, -14.6743, 79.3313, 0.15", "145.001, -14.548, 79.2099, 0.29", "145.723, -14.4328, 79.0949, 0.07", "146.554, -14.3214, 78.9978, 0.22", "147.711, -14.1943, 78.8716, 0.15", "148.296, -14.1401, 78.8145, 0.59", "149.186, -14.071, 78.7363, 1.4", "149.787, -14.0292, 78.6916, 1.25", "151.478, -13.9675, 78.5943, 0.15", "152.422, -13.9734, 78.5615, 0.37", "153.298, -13.9994, 78.556, 0.15", "154.024, -14.0288, 78.5846, 0.37", "154.463, -14.0477, 78.6403, 0.37", "155.086, -14.0607, 78.7653, 0.88", "155.68, -14.0737, 78.9189, 1.62", "156.043, -14.081, 79.0353, 1.62", "157.81, -14.1308, 79.6858, 0.07", "159.012, -14.1633, 80.177, 0.07", "159.552, -14.16, 80.4248, 0.66" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "61.2418, -6.07367, -33.84, 0.07", "69.0067, -8.25159, -39.7321, 0.07" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "61.2418, -6.07367, -33.84, 0.81", "68.8998, -7.51654, -40.0981, 0.07" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-12.8122, 41.5173, 53.5742, 0.07", "-11.378, 42.8152, 53.3138, 0.07", "-10.4316, 43.6896, 53.0666, 0.07", "-9.79663, 44.3095, 52.8744, 0.81", "-8.87918, 45.2686, 52.5256, 0.07", "-8.47559, 45.7177, 52.3373, 0.15", "-7.60357, 46.6881, 51.9306, 0.07", "-7.17335, 47.198, 51.6659, 0.66", "-6.84974, 47.616, 51.4146, 0.88", "-6.15479, 48.5932, 50.8146, 0.15", "-5.71789, 49.3137, 50.313, 0.59" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-12.8122, 41.5173, 53.5742, 0.07", "-13.1457, 42.6451, 54.7421, 0.07", "-13.3857, 43.468, 55.6126, 0.07", "-13.5445, 44.0997, 56.3644, 0.07", "-13.687, 44.5998, 57.0477, 0.96", "-13.7411, 44.7523, 57.286, 0.96", "-14.0111, 45.4488, 58.5036, 0.07", "-14.1877, 45.8729, 59.4064, 0.59", "-14.43, 46.4683, 60.8747, 0.22", "-14.6297, 46.9171, 62.1257, 1.25", "-14.9599, 47.5126, 63.9653, 0.22", "-15.204, 47.8987, 65.2573, 0.22", "-15.4992, 48.3315, 66.8021, 0.22", "-15.7647, 48.7177, 68.1903, 0.22", "-15.9534, 48.9743, 69.0994, 1.33", "-16.3621, 49.5957, 71.2087, 0.15", "-16.5554, 49.9326, 72.3834, 0.29", "-16.7396, 50.2886, 73.6043, 0.29", "-16.822, 50.5055, 74.2909, 0.44", "-16.9327, 51.1096, 76.1451, 0.22", "-16.9214, 51.6096, 77.6539, 0.22", "-16.7597, 52.3226, 79.8216, 0.29", "-16.723, 52.4287, 80.1535, 1.11", "-16.4691, 52.9289, 81.9014, 0.29", "-16.2356, 53.2669, 83.3076, 0.29", "-16.1515, 53.3478, 83.7384, 0.29", "-16.0037, 53.4891, 84.9476, 0.29", "-16.0001, 53.5057, 85.2775, 0.29", "-16.0978, 53.5033, 86.462, 0.29", "-16.2694, 53.4452, 87.5119, 0.29", "-16.4199, 53.3949, 88.213, 0.29", "-16.7116, 53.2589, 89.6775, 0.29", "-16.9573, 53.1106, 91.02, 0.29", "-17.2163, 52.9452, 92.4371, 0.29", "-17.4592, 52.7951, 93.7013, 0.29", "-17.7867, 52.6008, 95.5103, 0.29", "-18.0744, 52.4508, 97.2508, 0.52", "-18.2455, 52.3932, 98.4629, 0.52", "-18.3681, 52.4052, 99.4076, 0.52", "-18.4501, 52.4796, 100.104, 0.22", "-18.6693, 52.8496, 102.096, 0.22", "-18.8122, 53.1909, 103.366, 0.22", "-18.9953, 53.6577, 104.793, 0.44", "-19.1676, 54.1734, 106.265, 0.88", "-19.4003, 55.0589, 108.833, 0.15", "-19.499, 55.4996, 110.144, 0.15", "-19.574, 55.7991, 111.004, 0.22", "-19.6462, 56.0033, 111.63, 0.22", "-19.7249, 56.1508, 112.107, 0.22", "-19.8092, 56.287, 112.579, 0.22", "-19.8927, 56.4265, 113.131, 0.22", "-20.0005, 56.6742, 114.007, 0.22", "-20.1852, 57.0288, 115.315, 0.22", "-20.2731, 57.1617, 115.829, 0.22", "-20.4892, 57.468, 117.119, 0.22", "-20.6926, 57.7809, 118.559, 0.22", "-20.7501, 57.9039, 119.228, 0.22", "-20.7607, 58.0918, 120.386, 0.22", "-20.6988, 58.2779, 121.464, 0.22", "-20.6211, 58.4155, 122.416, 0.22", "-20.5255, 58.5254, 123.43, 0.22", "-20.2968, 58.6577, 124.855, 0.22", "-20.0733, 58.7483, 125.835, 0.22", "-19.8131, 58.8756, 126.606, 0.22" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-139.895, 46.1131, 22.6629, 0.29", "-140.92, 47.2333, 22.9538, 0.29", "-141.931, 48.2927, 23.1952, 0.07", "-142.252, 48.6234, 23.2633, 0.15", "-142.723, 49.0831, 23.3683, 0.07", "-143.099, 49.43, 23.4523, 0.29", "-143.896, 50.1339, 23.6225, 0.07", "-144.237, 50.4048, 23.6841, 0.37", "-144.445, 50.5737, 23.7107, 0.37", "-145.158, 51.1611, 23.8082, 0.07", "-145.375, 51.3465, 23.8429, 0.15", "-146.001, 51.9426, 23.989, 0.07", "-146.532, 52.5248, 24.15, 0.07", "-146.854, 52.9752, 24.3004, 0.74", "-147.055, 53.3091, 24.43, 0.74", "-147.5, 54.1876, 24.7947, 0.07", "-147.818, 54.9252, 25.1688, 0.07", "-147.96, 55.2927, 25.4081, 0.29", "-148.327, 56.2712, 26.2396, 0.07", "-148.545, 56.8504, 26.8528, 0.07", "-148.678, 57.2164, 27.3042, 0.66", "-148.946, 57.9471, 28.3024, 0.07", "-149.211, 58.5422, 29.1948, 0.29", "-149.542, 59.2173, 30.3189, 0.22", "-149.902, 59.8937, 31.5033, 1.33", "-150.273, 60.5759, 32.721, 0.07", "-150.494, 60.9984, 33.497, 0.44", "-150.849, 61.751, 34.8555, 0.15", "-150.993, 62.1194, 35.4752, 0.15", "-151.164, 62.683, 36.3401, 1.4", "-151.384, 63.7538, 37.8884, 0.22", "-151.491, 64.4048, 38.8252, 0.15", "-151.536, 64.8981, 39.5169, 0.22", "-151.534, 65.6248, 40.4635, 1.7", "-151.483, 66.8654, 41.9936, 0.07", "-151.419, 67.396, 42.6435, 0.59" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-139.895, 46.1131, 22.6629, 0.96", "-141.216, 46.2699, 22.9856, 0.96", "-142.414, 46.3278, 23.2294, 0.07", "-142.789, 46.3357, 23.2947, 0.07", "-143.317, 46.3385, 23.3841, 0.15", "-143.525, 46.3396, 23.4191, 0.37", "-144.051, 46.3424, 23.508, 0.44", "-145.215, 46.2577, 23.6925, 0.22", "-145.88, 46.1828, 23.7599, 0.96", "-146.498, 46.1371, 23.8215, 1.7" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "44.819, -162.766, 30.0081, 0.07", "45.3235, -164.309, 31.6091, 0.07", "45.5673, -165.079, 32.5335, 0.07", "45.5951, -165.17, 32.6498, 0.59", "45.7182, -165.596, 33.1879, 1.11", "45.9391, -166.4, 34.1566, 0.07", "46.0458, -166.774, 34.5703, 0.52", "46.4841, -168.345, 36.1316, 0.07", "46.5741, -168.667, 36.4341, 0.07", "46.6634, -169.042, 36.7734, 1.03", "46.74, -169.478, 37.1614, 1.25", "46.9029, -170.767, 38.4085, 0.15", "46.9768, -171.611, 39.2857, 0.15", "47.0065, -172.149, 39.8432, 1.03", "47.0076, -173.116, 40.8662, 0.07", "46.9793, -173.741, 41.5454, 0.81", "46.8302, -175.332, 43.304, 0.07", "46.739, -175.915, 43.9312, 0.66", "46.6623, -176.379, 44.4061, 1.18", "46.4784, -177.54, 45.5286, 0.15", "46.3708, -178.265, 46.1396, 0.44", "46.3266, -178.553, 46.3331, 0.44", "46.1203, -179.931, 47.0852, 0.22", "46.0002, -180.935, 47.5937, 0.66", "45.9332, -181.701, 47.9729, 1.47", "45.8918, -182.525, 48.353, 0.52", "45.8558, -183.611, 48.8857, 0.15", "45.8383, -184.718, 49.4434, 0.15", "45.8461, -185.521, 49.8425, 0.15", "45.8538, -186.06, 50.0962, 0.96", "45.8623, -186.578, 50.3527, 1.11", "45.8878, -188.588, 51.3836, 0.07", "45.8834, -188.983, 51.5848, 0.07", "45.844, -189.512, 51.8147, 0.52", "45.7138, -190.728, 52.2926, 0.07", "45.608, -191.674, 52.5995, 0.07", "45.5744, -192.02, 52.6859, 0.22", "45.5477, -192.343, 52.7342, 0.52", "45.4576, -193.669, 52.9357, 0.07", "45.4439, -193.949, 52.9787, 0.52", "45.4365, -194.626, 53.0783, 1.03", "45.4661, -196.134, 53.3315, 0.07", "45.4855, -196.558, 53.4264, 0.15", "45.5193, -197.113, 53.5773, 0.07", "45.5443, -197.414, 53.6709, 0.44", "45.575, -197.814, 53.805, 0.81", "45.6622, -199.208, 54.3232, 0.22", "45.7092, -199.883, 54.6002, 0.81", "45.7498, -200.437, 54.8549, 1.92" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "44.819, -162.766, 30.0081, 0.07", "45.0772, -164.467, 30.3142, 0.07", "45.149, -164.891, 30.3837, 0.22", "45.3698, -166.061, 30.554, 0.07", "45.4275, -166.346, 30.5908, 0.15", "45.782, -167.94, 30.7767, 0.07", "45.88, -168.365, 30.8189, 0.66", "45.9963, -168.797, 30.8474, 0.66", "46.2293, -169.59, 30.8909, 0.07", "46.434, -170.224, 30.9151, 0.74", "46.5964, -170.716, 30.9318, 1.55", "47.0307, -172.098, 30.9696, 0.22", "47.4385, -173.404, 30.9806, 0.07", "47.5552, -173.779, 30.9649, 0.74", "47.8105, -174.576, 30.8814, 1.77", "48.2555, -175.846, 30.6576, 0.22", "48.582, -176.627, 30.423, 0.22", "48.9033, -177.234, 30.1101, 0.22", "49.3469, -177.91, 29.5883, 0.22", "49.6697, -178.327, 29.1972, 0.81", "50.0616, -178.764, 28.7025, 1.55", "50.8121, -179.513, 27.7442, 0.22", "51.3372, -180.02, 27.0475, 0.66", "51.8594, -180.545, 26.2939, 1.25", "52.3467, -181.053, 25.5446, 0.22", "52.8555, -181.628, 24.6884, 0.22", "53.1903, -182.091, 24.0551, 0.22", "53.4987, -182.605, 23.4342, 0.22", "53.8951, -183.349, 22.612, 0.29", "54.0897, -183.741, 22.2059, 1.03", "54.2262, -184.011, 21.9379, 1.92", "55.0912, -185.611, 20.4694, 0.22", "55.6418, -186.556, 19.6804, 0.15", "55.9664, -187.107, 19.2778, 0.74", "56.2814, -187.656, 18.9142, 1.33", "56.8591, -188.689, 18.2688, 0.07", "57.0523, -189.025, 18.0683, 0.22", "57.3577, -189.52, 17.819, 0.15", "57.585, -189.891, 17.6558, 0.22", "57.9838, -190.587, 17.3643, 0.22", "58.2243, -191.057, 17.1698, 0.66", "58.4315, -191.499, 17.008, 1.18", "58.7783, -192.25, 16.7194, 0.15", "59.1138, -192.929, 16.4499, 0.15", "59.5295, -193.679, 16.1583, 0.22", "59.854, -194.235, 15.9671, 0.66", "60.2609, -194.901, 15.7515, 0.15", "60.9382, -195.938, 15.4516, 0.22", "61.2607, -196.4, 15.3384, 0.74", "61.6557, -196.936, 15.2408, 1.18", "62.4938, -198.009, 15.0948, 0.15", "62.8883, -198.52, 15.0395, 0.22", "63.4247, -199.276, 14.9871, 0.15", "63.6517, -199.628, 14.9837, 0.59", "63.7925, -199.876, 14.9835, 0.96", "64.008, -200.322, 14.9835, 0.59", "64.33, -201.048, 14.9835, 0.15", "64.5769, -201.616, 14.9835, 0.37", "65.0268, -202.644, 14.9835, 0.15", "65.1808, -202.972, 14.9835, 0.52", "65.473, -203.573, 14.9835, 0.88", "66.022, -204.614, 14.9835, 0.15", "66.3294, -205.151, 14.9835, 0.29", "66.595, -205.595, 14.9835, 0.22", "66.7885, -205.94, 14.9835, 0.44", "67.069, -206.45, 14.9835, 0.44", "67.7109, -207.626, 14.9835, 0.15" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-2.04435, -40.6982, 11.183, 0.29", "-1.37932, -41.5355, 10.6662, 0.29", "-0.809886, -42.4778, 10.1045, 0.07", "-0.612043, -42.8832, 9.84041, 0.29", "-0.294458, -43.6497, 9.35132, 0.15", "-0.109428, -44.1464, 9.0308, 0.52", "0.106622, -44.7961, 8.62191, 0.59", "0.450972, -46.0314, 7.89771, 0.15", "0.660854, -46.955, 7.37612, 0.74", "0.813221, -47.7153, 6.94547, 1.99", "0.919367, -48.2746, 6.63951, 1.99", "1.25921, -49.9623, 5.76162, 0.15", "1.38017, -50.4583, 5.52517, 0.29", "1.6757, -51.5062, 5.11596, 0.22", "1.76963, -51.8123, 5.0141, 0.81", "1.97587, -52.4581, 4.8208, 1.18", "2.18573, -53.082, 4.65394, 0.59", "2.63652, -54.345, 4.35164, 0.07", "2.90391, -55.0933, 4.18478, 0.07", "3.00729, -55.3619, 4.1351, 0.07", "3.26582, -56.0132, 4.01133, 0.29", "3.64556, -56.9629, 3.83302, 0.22", "3.96848, -57.7309, 3.69404, 0.96", "4.30118, -58.5352, 3.56936, 0.22", "4.77017, -59.7923, 3.36837, 0.15", "5.15029, -60.9364, 3.19106, 0.15", "5.39938, -61.7497, 3.07261, 1.03", "5.68106, -62.751, 2.94741, 2.14", "6.05229, -64.2117, 2.7643, 0.22", "6.32639, -65.4341, 2.61821, 0.22", "6.44078, -66.0748, 2.55191, 0.66", "6.52909, -66.7235, 2.48486, 0.96", "6.6484, -67.8773, 2.35745, 0.52", "6.7294, -69.0978, 2.22673, 0.22", "6.7773, -70.1789, 2.11447, 0.88", "6.81931, -71.8208, 1.9613, 0.22", "6.79854, -73.1975, 1.86021, 0.15", "6.74517, -74.1373, 1.79677, 0.22", "6.60318, -75.6524, 1.71342, 0.15", "6.5179, -76.4588, 1.683, 0.81", "6.44277, -77.1778, 1.66413, 0.81", "6.33714, -78.8695, 1.64938, 0.15", "6.32991, -79.9013, 1.70862, 0.22", "6.35793, -80.4911, 1.74541, 0.88", "6.4342, -81.2421, 1.78262, 1.84", "6.56614, -82.0374, 1.80723, 1.03", "6.89982, -83.5818, 1.77847, 0.22", "7.25483, -84.9588, 1.71458, 0.22", "7.47806, -85.8117, 1.62463, 0.22", "7.64943, -86.5424, 1.52006, 0.81", "7.84126, -87.4085, 1.37606, 1.47", "8.18656, -89.0851, 1.04396, 0.37", "8.36768, -90.0998, 0.786713, 0.44", "8.62983, -91.5923, 0.325424, 0.74", "8.87437, -93.0787, -0.0599277, 0.96" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-2.04435, -40.6982, 11.183, 0.22", "-2.32797, -42.965, 12.773, 0.22", "-2.40332, -43.7782, 13.3926, 0.66", "-2.48065, -44.7521, 14.1399, 1.03", "-2.5553, -45.8382, 14.9534, 0.22", "-2.62, -46.7042, 15.5823, 0.22", "-2.68941, -47.6001, 16.1959, 0.37", "-2.73396, -48.547, 16.795, 0.37", "-2.78095, -49.1798, 17.1864, 0.88", "-2.8281, -49.6778, 17.4787, 1.92", "-2.89907, -50.3531, 17.8429, 2.14", "-3.05867, -52.0216, 18.6871, 0.22", "-3.17116, -53.4064, 19.3884, 0.22", "-3.22356, -54.213, 19.81, 0.88", "-3.24466, -54.9761, 20.248, 1.7", "-3.2315, -55.7364, 20.7213, 2.06", "-3.10359, -57.6794, 22.0175, 0.29", "-2.98472, -58.8276, 22.7967, 0.29", "-2.86108, -59.7259, 23.3999, 0.81", "-2.74588, -60.5546, 23.9088, 1.25", "-2.56117, -62.3617, 24.9546, 0.15", "-2.51632, -63.1175, 25.3484, 0.15", "-2.50368, -63.8052, 25.6627, 0.88", "-2.52092, -64.971, 26.1243, 2.43", "-2.60821, -66.8334, 26.7638, 0.66", "-2.76561, -68.7742, 27.3436, 0.29", "-2.85422, -69.7062, 27.5863, 0.88", "-3.00304, -71.368, 27.9905, 0.22", "-3.04052, -71.9252, 28.1393, 0.52", "-3.06162, -72.6281, 28.3199, 0.88", "-3.03817, -73.335, 28.5026, 0.37", "-2.9465, -74.2752, 28.7182, 0.15", "-2.84008, -75.2604, 28.9524, 0.52", "-2.72115, -76.36, 29.2251, 0.15", "-2.62936, -77.2255, 29.4664, 0.15", "-2.59026, -77.6334, 29.5985, 0.66", "-2.54992, -78.179, 29.7906, 0.96", "-2.45432, -79.693, 30.359, 0.22", "-2.39602, -80.6544, 30.7263, 1.25", "-2.3653, -81.272, 30.9636, 2.43", "-2.3292, -81.9735, 31.2517, 1.99", "-2.2244, -83.8098, 32.038, 0.22", "-2.14308, -85.0309, 32.5737, 0.07", "-2.08814, -85.8511, 32.9504, 0.96", "-2.0248, -87.3613, 33.6867, 0.15", "-2.02915, -87.9525, 33.9987, 0.15", "-2.07687, -88.5288, 34.3373, 0.88", "-2.23335, -89.2049, 34.8263, 1.47", "-2.82335, -90.5518, 35.9843, 0.15", "-3.15706, -91.0376, 36.482, 0.22", "-3.72777, -91.5988, 37.1774, 0.22", "-4.2767, -92.0205, 37.7791, 0.37", "-5.01203, -92.4799, 38.53, 0.81", "-5.73809, -92.8572, 39.1993, 1.25", "-6.45153, -93.1794, 39.7948, 0.22", "-7.35752, -93.6021, 40.5243, 0.22", "-8.12469, -93.9741, 41.1333, 0.66", "-8.80381, -94.3186, 41.6579, 1.11", "-9.87613, -94.899, 42.5037, 0.15", "-10.137, -95.0517, 42.7169, 0.37", "-10.996, -95.5878, 43.4228, 0.15", "-11.6446, -96.0031, 43.932, 0.66", "-12.0873, -96.3138, 44.2525, 1.18", "-13.4117, -97.2896, 45.2551, 0.29", "-14.4917, -98.1274, 46.1327, 0.15", "-14.7865, -98.3829, 46.3906, 0.74", "-15.347, -98.9179, 46.9131, 1.7", "-16.7312, -100.358, 48.3148, 0.22", "-17.8037, -101.629, 49.5567, 0.22", "-18.4317, -102.493, 50.3878, 1.18", "-19.2347, -103.759, 51.6378, 0.07", "-19.5116, -104.279, 52.15, 0.29", "-19.9045, -105.243, 53.1096, 0.66", "-20.1366, -106.094, 53.9793, 0.15", "-20.2118, -106.499, 54.3662, 0.29", "-20.2869, -107.063, 54.9158, 0.37", "-20.3403, -107.722, 55.6106, 1.11", "-20.3531, -108.576, 56.5922, 0.29", "-20.2921, -109.519, 57.7519, 0.88", "-20.1146, -110.752, 59.4361, 0.15", "-19.9551, -111.363, 60.3798, 1.11", "-19.5945, -112.309, 62.0107, 0.66", "-19.177, -113.233, 63.7497, 0.22", "-18.9061, -113.783, 64.7837, 0.96", "-18.4172, -114.71, 66.5066, 0.88", "-17.8846, -115.735, 68.4675, 0.22", "-17.5597, -116.422, 69.7848, 0.74", "-17.3307, -116.957, 70.7927, 1.03", "-16.9231, -118.053, 72.7679, 0.15", "-16.6383, -118.911, 74.2457, 1.33", "-16.1509, -120.532, 76.8957, 0.37", "-15.9221, -121.33, 78.1343, 0.37", "-15.7313, -122.015, 79.1479, 0.22", "-15.6358, -122.349, 79.6337, 0.74", "-15.3721, -123.372, 81.0658, 0.22", "-15.234, -124.081, 81.9285, 0.52", "-15.1607, -124.589, 82.4277, 1.11", "-15.0884, -125.726, 83.4483, 0.07", "-15.0922, -126.377, 83.9875, 0.15", "-15.125, -127.018, 84.4765, 0.66", "-15.224, -127.951, 85.0779, 0.07", "-15.276, -128.355, 85.3209, 0.22", "-15.378, -129.035, 85.7421, 0.07", "-15.4996, -129.65, 86.1277, 1.03", "-15.631, -130.259, 86.5032, 1.4", "-15.9465, -131.704, 87.3735, 0.22", "-16.2083, -132.878, 88.0882, 0.07", "-16.3833, -133.633, 88.5622, 0.59", "-16.6594, -134.814, 89.3404, 0.07", "-16.8339, -135.525, 89.8476, 0.15", "-17.0471, -136.255, 90.4176, 1.18", "-17.2905, -136.988, 91.017, 0.15", "-17.5342, -137.668, 91.6399, 0.88", "-17.8756, -138.569, 92.5258, 0.07", "-18.0682, -139.062, 93.0476, 0.44", "-18.5257, -140.078, 94.2512, 0.15", "-18.847, -140.729, 95.092, 0.96", "-19.5115, -142.032, 96.8435, 0.29", "-19.7526, -142.488, 97.4583, 0.15", "-19.9606, -142.857, 97.9277, 0.52", "-20.5022, -143.814, 99.0544, 0.37", "-20.9792, -144.712, 99.9914, 1.25", "-21.3371, -145.43, 100.639, 0.07", "-21.5659, -145.944, 101.029, 0.22", "-22.03, -147.111, 101.846, 0.07", "-22.156, -147.483, 102.081, 0.59", "-22.3717, -148.23, 102.507, 1.33", "-22.8147, -149.884, 103.406, 0.07", "-23.1139, -151.111, 104.076, 0.07", "-23.237, -151.704, 104.426, 0.59", "-23.3704, -152.538, 104.963, 0.15", "-23.4911, -153.302, 105.489, 0.37" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-37.9659, -93.5953, 17.6534, 0.22", "-39.0077, -94.6582, 18.2762, 0.22", "-39.7207, -95.423, 18.607, 0.22", "-40.0199, -95.7166, 18.7042, 0.15", "-40.4404, -96.1201, 18.8378, 0.44", "-40.8362, -96.4947, 18.9667, 0.96", "-41.2452, -96.8797, 19.1009, 1.11", "-42.0944, -97.679, 19.3402, 0.29", "-43.3008, -98.8604, 19.713, 0.22", "-43.7569, -99.2936, 19.8472, 0.59", "-44.0674, -99.5771, 19.9364, 0.96", "-44.5336, -99.9899, 20.0811, 0.96", "-45.2218, -100.583, 20.3146, 0.22", "-45.8238, -101.106, 20.5449, 0.22", "-46.6164, -101.845, 20.8853, 0.22", "-46.9625, -102.168, 21.044, 0.52", "-47.5447, -102.721, 21.3399, 1.33", "-48.2273, -103.373, 21.7184, 0.22", "-48.8077, -103.937, 22.0569, 0.52", "-49.5481, -104.688, 22.5382, 0.15", "-50.0684, -105.269, 22.9091, 0.15", "-50.3646, -105.619, 23.1201, 0.22", "-50.5034, -105.804, 23.227, 0.37", "-50.8505, -106.295, 23.5154, 0.81", "-51.2981, -106.979, 23.9354, 0.15", "-51.4255, -107.193, 24.0757, 0.07", "-51.6073, -107.532, 24.3038, 0.15", "-51.9417, -108.101, 24.7295, 0.22", "-52.2822, -108.618, 25.1975, 0.15", "-52.5618, -108.971, 25.5872, 0.15", "-52.7769, -109.185, 25.8715, 0.44", "-53.0883, -109.445, 26.2649, 0.66", "-53.9199, -110.076, 27.3351, 0.22", "-54.5142, -110.513, 28.0914, 0.74", "-55.1389, -110.962, 28.8883, 1.7", "-56.0254, -111.592, 30.0202, 0.22", "-56.5083, -111.943, 30.65, 0.15", "-57.0295, -112.319, 31.3474, 0.52", "-57.3231, -112.527, 31.7571, 0.66", "-57.9532, -112.954, 32.6029, 0.22", "-58.48, -113.287, 33.2843, 0.37", "-58.9625, -113.558, 33.8668, 0.22", "-59.408, -113.755, 34.3414, 0.37", "-59.8409, -113.897, 34.7284, 0.37", "-60.2915, -114.021, 35.1101, 0.15", "-60.9692, -114.222, 35.6366, 0.15", "-61.2511, -114.307, 35.8394, 0.74", "-62.0312, -114.578, 36.3589, 1.55", "-63.2798, -115.089, 37.1884, 0.07", "-64.1563, -115.505, 37.7876, 0.15", "-64.8252, -115.866, 38.2623, 0.07", "-65.0462, -116.008, 38.4267, 0.44", "-65.3654, -116.245, 38.6806, 0.44", "-66.0759, -116.864, 39.2809, 0.22", "-66.537, -117.329, 39.6903, 0.88", "-66.8721, -117.693, 39.9742, 1.47", "-67.758, -118.72, 40.7341, 0.07", "-68.2262, -119.291, 41.1303, 0.07", "-68.3714, -119.479, 41.2504, 0.29", "-68.7886, -120.045, 41.5607, 0.81", "-69.3677, -120.827, 41.9348, 0.07", "-69.877, -121.516, 42.2133, 0.07", "-70.4239, -122.278, 42.4321, 0.07", "-70.6302, -122.577, 42.5034, 0.59", "-70.939, -123.034, 42.6039, 0.96", "-71.6834, -124.181, 42.853, 0.15", "-72.0352, -124.756, 42.9781, 0.88", "-72.8802, -126.152, 43.292, 0.07", "-73.2226, -126.75, 43.4505, 0.37", "-73.2543, -126.809, 43.4693, 0.37", "-73.71, -127.747, 43.827, 0.07", "-73.9837, -128.412, 44.1343, 0.88", "-74.3855, -129.489, 44.7212, 0.07", "-74.6221, -130.217, 45.1551, 0.07", "-74.719, -130.562, 45.358, 0.29", "-74.792, -130.837, 45.5208, 0.29", "-75.0452, -131.828, 46.1077, 0.07", "-75.2382, -132.507, 46.509, 0.81", "-75.3781, -132.949, 46.7629, 1.4", "-76.1626, -135.073, 48.0117, 0.07", "-76.3764, -135.587, 48.3291, 0.74", "-76.5585, -135.985, 48.5802, 0.74", "-77.1459, -137.177, 49.3606, 0.07", "-77.381, -137.617, 49.6614, 0.22", "-77.8869, -138.46, 50.2839, 0.07", "-78.2368, -138.969, 50.7074, 0.81", "-78.4735, -139.317, 51.0216, 1.25", "-79.097, -140.218, 51.9579, 0.22", "-79.4025, -140.642, 52.4417, 0.07", "-79.6308, -140.953, 52.8073, 0.44", "-80.4212, -141.968, 54.0291, 0.07", "-80.9185, -142.581, 54.8074, 1.03", "-81.5355, -143.316, 55.8162, 0.07", "-81.7969, -143.612, 56.2571, 0.22" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-37.9659, -93.5953, 17.6534, 0.07", "-38.2875, -94.2942, 17.721, 0.07", "-38.5347, -94.7879, 17.7791, 0.29", "-38.9256, -95.4736, 17.8743, 0.15", "-39.2011, -95.9021, 17.9365, 0.15", "-39.5659, -96.4326, 18.0111, 0.74", "-39.7108, -96.6426, 18.036, 0.74", "-40.3661, -97.5851, 18.0946, 0.15", "-40.8268, -98.2751, 18.0974, 0.15", "-41.1143, -98.7472, 18.0737, 0.29", "-41.4664, -99.3793, 18.0087, 0.15", "-41.6944, -99.8719, 17.9334, 0.29", "-42.0047, -100.774, 17.7794, 0.07", "-42.0721, -101.077, 17.7216, 0.52", "-42.1264, -101.455, 17.6514, 0.88", "-42.1849, -102.02, 17.5759, 0.88", "-42.2994, -103.069, 17.5054, 0.07", "-42.3946, -103.794, 17.4975, 0.07", "-42.4667, -104.233, 17.5122, 0.29", "-42.548, -104.659, 17.5315, 0.74", "-42.7231, -105.405, 17.5689, 0.22", "-43.116, -106.835, 17.6029, 0.22", "-43.2572, -107.246, 17.6021, 0.59", "-43.434, -107.679, 17.5875, 1.11", "-43.52, -107.876, 17.5728, 1.25", "-43.8128, -108.535, 17.4932, 0.74", "-44.1658, -109.326, 17.3545, 0.22", "-44.4607, -110.007, 17.2088, 0.15", "-44.7128, -110.626, 17.0654, 0.15", "-44.8868, -111.082, 16.9585, 0.15", "-45.085, -111.612, 16.843, 0.15", "-45.2626, -112.094, 16.7366, 0.37", "-45.5519, -112.875, 16.5753, 0.22", "-45.756, -113.442, 16.4562, 0.74", "-45.9365, -113.98, 16.3246, 1.25", "-46.2013, -114.82, 16.1119, 0.22", "-46.4791, -115.786, 15.8603, 0.15", "-46.5741, -116.159, 15.766, 0.74", "-46.6937, -116.712, 15.6406, 0.88", "-46.9615, -118.17, 15.3102, 0.15", "-47.0851, -119.027, 15.1096, 0.15", "-47.1128, -119.318, 15.0411, 0.29", "-47.143, -119.913, 14.9181, 0.37", "-47.1747, -120.573, 14.7827, 0.22" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-13.0652, -29.7773, -13.4777, 0.66", "-12.5039, -30.994, -13.0966, 0.66", "-11.8717, -32.013, -12.8698, 0.29", "-11.5554, -32.5099, -12.7855, 0.29", "-11.1766, -33.1669, -12.6947, 0.66", "-10.57, -34.3377, -12.5048, 0.81", "-9.91953, -35.6901, -12.2667, 0.37", "-9.38099, -36.7383, -12.0851, 0.37", "-8.93906, -37.6344, -11.9039, 0.22", "-8.54125, -38.5047, -11.7218, 0.29", "-8.12054, -39.5934, -11.45, 0.29", "-7.96688, -40.1474, -11.274, 1.4", "-7.85823, -40.7702, -11.0089, 2.58", "-7.75499, -41.937, -10.375, 2.58" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-13.0652, -29.7773, -13.4777, 0.59", "-12.843, -30.0201, -14.095, 0.59", "-12.3585, -30.3349, -15.1497, 0.59", "-11.8665, -30.5503, -16.1788, 0.59", "-11.6454, -30.6154, -16.7109, 0.59", "-11.2508, -30.7046, -17.8832, 0.44", "-10.8563, -30.7937, -19.0552, 0.44", "-10.5194, -30.8323, -19.8764, 0.74", "-10.1976, -30.8041, -20.5585, 0.74", "-9.74924, -30.6364, -21.5644, 0.22", "-9.53089, -30.4451, -22.2678, 0.37", "-3.58191, -31.905, -30.1651, 0.37", "1.38276, -32.4918, -38.8248, 0.37", "5.37129, -31.6257, -47.9518, 0.37", "8.22854, -30.7378, -57.4916, 0.37", "10.2691, -29.7915, -67.2329, 0.37" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "159.552, -14.16, 80.4248, 0.07", "159.881, -13.2149, 80.4522, 0.07", "160.134, -12.5106, 80.5282, 0.22", "160.583, -11.3442, 80.6967, 0.07", "160.768, -10.9019, 80.7771, 0.59", "160.937, -10.5237, 80.8513, 0.96", "161.715, -8.82922, 81.1886, 0.07", "162.153, -7.9897, 81.3648, 0.15", "162.763, -6.89905, 81.6111, 0.07", "163.399, -5.82942, 81.829, 0.07", "163.671, -5.39955, 81.903, 0.29", "164.018, -4.88737, 81.9653, 0.96", "164.909, -3.64727, 82.0609, 0.07", "165.473, -2.85515, 82.0803, 0.07", "165.925, -2.20396, 82.1028, 0.29", "166.497, -1.35787, 82.1417, 1.18", "167.531, 0.217452, 82.2617, 0.07", "168.088, 1.10064, 82.3605, 0.07", "168.444, 1.70364, 82.4458, 0.22", "169.13, 2.94429, 82.7147, 0.07", "169.345, 3.35824, 82.8416, 0.29", "169.618, 3.93992, 83.0323, 0.52", "170.198, 5.32918, 83.484, 0.07", "170.323, 5.65518, 83.5982, 0.29", "171.036, 7.5121, 84.4315, 0.07", "171.354, 8.31657, 84.8883, 0.07", "171.641, 9.05316, 85.3315, 1.11", "172.093, 10.2185, 86.0979, 0.07", "172.51, 11.2844, 86.8999, 0.07", "173.117, 12.7492, 88.1207, 0.29", "173.501, 13.5757, 88.9631, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "159.552, -14.16, 80.4248, 0.07", "160.375, -14.7592, 80.6809, 0.07", "160.887, -15.1323, 80.8405, 0.15", "161.44, -15.5348, 81.0125, 1.4", "162.229, -16.1088, 81.2579, 0.52", "162.839, -16.5535, 81.4481, 0.88" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-146.498, 46.1371, 23.8215, 0.22", "-147.942, 46.5844, 23.0997, 0.22", "-148.363, 46.7216, 22.8868, 0.44", "-149.003, 46.9362, 22.5518, 0.66", "-149.999, 47.2889, 22.0169, 0.15", "-150.96, 47.6657, 21.4927, 0.15", "-151.282, 47.8074, 21.32, 0.52", "-151.874, 48.1105, 20.9628, 1.18", "-152.467, 48.4413, 20.5921, 0.37", "-152.998, 48.7737, 20.2634, 0.07", "-153.337, 49.0027, 20.0822, 0.07", "-153.886, 49.3979, 19.7987, 0.15", "-154.573, 49.9214, 19.4248, 0.07", "-154.877, 50.1579, 19.2525, 0.59", "-155.172, 50.3769, 19.076, 1.11", "-156.443, 51.2861, 18.2457, 0.15", "-157.138, 51.7855, 17.744, 0.15", "-157.521, 52.0793, 17.4419, 0.59", "-157.8, 52.32, 17.182, 0.52", "-158.364, 52.8461, 16.5761, 0.15", "-158.699, 53.1932, 16.162, 0.15", "-158.957, 53.5251, 15.7324, 0.15", "-159.182, 53.9137, 15.2622, 0.66", "-159.565, 54.7086, 14.3347, 0.15", "-159.731, 55.1314, 13.8635, 0.37", "-159.89, 55.6321, 13.3388, 0.22", "-160.114, 56.4224, 12.4868, 0.22", "-160.228, 56.882, 11.9678, 0.59" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-146.498, 46.1371, 23.8215, 0.15", "-148.158, 45.94, 24.3973, 0.15", "-148.666, 45.876, 24.5546, 0.59", "-149.115, 45.853, 24.6619, 0.81", "-149.821, 45.8521, 24.8033, 0.15", "-151.026, 45.897, 25.0131, 0.15", "-151.31, 45.9216, 25.0634, 0.59", "-151.684, 45.9781, 25.1098, 1.03", "-153.255, 46.3084, 25.3067, 0.07", "-153.732, 46.4284, 25.3685, 0.74", "-154.199, 46.5679, 25.4278, 0.74", "-155.515, 46.9771, 25.5733, 0.07", "-156.466, 47.261, 25.6916, 0.07", "-157.471, 47.5601, 25.8254, 0.07", "-157.681, 47.6163, 25.8556, 0.88", "-158.441, 47.8129, 25.9618, 1.4", "-159.861, 48.1783, 26.1462, 0.44", "-161.124, 48.5029, 26.2782, 0.07", "-161.78, 48.6755, 26.3572, 0.07", "-162.578, 48.8897, 26.4726, 0.07", "-163.283, 49.0953, 26.5954, 0.07", "-163.773, 49.2521, 26.6922, 0.81", "-165.255, 49.7746, 27.0153, 0.07", "-166.095, 50.0919, 27.2166, 0.96", "-167.544, 50.6102, 27.6322, 0.15", "-168.171, 50.8285, 27.8453, 0.15", "-168.685, 50.9965, 28.0451, 0.74", "-169.259, 51.1801, 28.2918, 1.18", "-170.274, 51.4843, 28.7737, 0.07", "-171.186, 51.7174, 29.1761, 0.15", "-171.917, 51.8698, 29.4723, 0.15", "-172.271, 51.9282, 29.5945, 0.15", "-172.773, 51.9998, 29.7432, 0.81", "-173.599, 52.1288, 29.9258, 1.25", "-174.682, 52.3185, 30.1102, 0.15", "-175.36, 52.4562, 30.2019, 0.15", "-175.937, 52.561, 30.2699, 0.66", "-176.459, 52.6505, 30.3301, 0.22", "-177.524, 52.8623, 30.47, 0.15", "-178.239, 53.0446, 30.5769, 0.96", "-178.663, 53.1686, 30.6549, 1.11", "-179.273, 53.3749, 30.7796, 0.52", "-180.085, 53.7038, 30.9567, 0.15", "-180.628, 53.9834, 31.0733, 0.22", "-180.928, 54.2007, 31.1474, 0.15", "-181.185, 54.4572, 31.212, 0.15", "-181.553, 54.9267, 31.3195, 0.37", "-181.73, 55.1689, 31.3779, 0.37", "-182.302, 55.9018, 31.5648, 0.15", "-182.924, 56.568, 31.7694, 0.22", "-183.337, 56.9725, 31.9219, 0.74", "-183.642, 57.2522, 32.0418, 1.18", "-184.798, 58.2384, 32.562, 0.07", "-185.348, 58.6968, 32.8336, 0.81", "-186.274, 59.4807, 33.3618, 0.15", "-186.705, 59.866, 33.6369, 0.59", "-187.053, 60.2223, 33.9301, 1.18", "-187.981, 61.2633, 34.8866, 0.15", "-188.329, 61.6829, 35.3129, 0.29", "-188.762, 62.2008, 35.8754, 0.52", "-189.052, 62.5351, 36.2486, 0.96", "-190.018, 63.5044, 37.3799, 0.22", "-190.46, 63.8521, 37.8493, 0.29", "-191.083, 64.1689, 38.4292, 0.15", "-191.771, 64.3751, 39.0111, 0.15", "-192.188, 64.4206, 39.3526, 0.88", "-192.577, 64.386, 39.727, 1.4", "-193.505, 64.0533, 40.9633, 0.22", "-193.872, 63.7929, 41.7813, 0.29", "-194.026, 63.5499, 42.4429, 0.15", "-194.119, 63.163, 43.3847, 0.37", "-194.15, 62.6363, 44.6502, 0.15", "-194.097, 62.1922, 45.6767, 0.81", "-193.999, 61.8014, 46.5802, 0.15", "-193.892, 61.4602, 47.4434, 0.66", "-193.711, 60.9357, 48.9467, 0.15", "-193.566, 60.5337, 50.2043, 0.74", "-193.411, 60.098, 51.6966, 0.22", "-193.272, 59.7049, 53.0842, 0.22", "-193.11, 59.1839, 54.9302, 0.81", "-193.018, 58.8551, 56.1115, 1.25", "-192.83, 58.2233, 58.5338, 0.15", "-192.697, 57.8465, 60.1387, 0.44", "-192.618, 57.6756, 60.9791, 0.44", "-192.552, 57.5802, 61.5313, 0.44", "-192.504, 57.5289, 61.8741, 0.44", "-192.391, 57.4287, 62.7303, 0.44", "-192.261, 57.3556, 63.6748, 0.44", "-192.156, 57.3023, 64.2306, 0.44", "-191.823, 57.142, 65.5581, 0.44", "-191.642, 57.0296, 66.1247, 0.44", "-191.006, 56.5166, 67.7089, 0.44", "-190.811, 56.3307, 68.0912, 0.07", "-190.364, 55.8897, 68.8164, 0.07", "-189.836, 55.4012, 69.5447, 0.37", "-189.145, 54.8624, 70.3382, 0.15", "-188.597, 54.5063, 70.9288, 1.47", "-187.765, 53.995, 71.7482, 0.07", "-187.472, 53.8279, 72.0626, 0.22", "-186.732, 53.4447, 72.955, 0.07", "-186.169, 53.1987, 73.7041, 0.44", "-185.573, 53.0217, 74.4544, 0.66" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "45.7498, -200.437, 54.8549, 0.15", "47.131, -202.102, 54.8549, 0.15", "47.4188, -202.466, 54.8549, 0.29", "47.7658, -202.912, 54.8549, 0.66", "48.6164, -204.019, 54.8549, 0.15", "49.011, -204.493, 54.8549, 0.29", "49.8567, -205.475, 54.8549, 0.07", "50.2909, -205.976, 54.8549, 0.07", "50.5695, -206.288, 54.8549, 0.74", "51.0348, -206.796, 54.8549, 1.47", "52.6617, -208.486, 54.8549, 0.22", "53.0338, -208.846, 54.8549, 0.81", "53.5076, -209.251, 54.8549, 1.4" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "45.7498, -200.437, 54.8549, 0.22", "45.7318, -201.695, 56.7568, 0.22", "45.7375, -202.287, 57.5946, 0.29", "45.8037, -202.943, 58.4931, 0.15", "45.9131, -203.635, 59.4251, 0.37", "45.9616, -203.898, 59.773, 0.52", "46.0904, -204.559, 60.6356, 0.22", "46.2209, -205.112, 61.3434, 0.81", "46.4204, -205.894, 62.297, 0.15", "46.4833, -206.119, 62.5711, 0.22", "46.5781, -206.417, 62.9805, 0.52", "46.813, -207.12, 64.0398, 0.15", "46.9956, -207.718, 64.9641, 0.88", "47.0655, -208.001, 65.3932, 0.96", "47.2199, -208.842, 66.659, 0.22", "47.3707, -209.709, 67.9273, 1.33", "47.4658, -210.54, 69.1698, 0.22", "47.485, -210.915, 69.7597, 0.07", "47.4875, -211.189, 70.2159, 0.15", "47.4555, -211.858, 71.4471, 0.15", "47.4347, -212.071, 71.8623, 1.18", "47.3311, -213.099, 73.9628, 0.22", "47.3119, -213.771, 75.4941, 0.22", "47.3362, -214.066, 76.2006, 0.37", "47.4408, -214.626, 77.5578, 0.37", "47.5234, -214.931, 78.284, 1.25", "47.8076, -215.678, 80.0082, 0.15", "48.0521, -216.157, 81.033, 0.15", "48.1832, -216.414, 81.5317, 0.37", "48.5766, -217.233, 82.9724, 0.22", "48.7705, -217.647, 83.6312, 0.81", "49.1656, -218.678, 85.1991, 0.07", "49.2395, -218.961, 85.5892, 0.29", "49.317, -219.376, 86.1327, 0.44", "49.3442, -219.59, 86.4105, 0.22", "49.3589, -219.782, 86.6371, 0.37", "49.368, -221.152, 88.1128, 0.15", "49.2684, -221.788, 88.7305, 1.47" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "8.87437, -93.0787, -0.0599277, 0.59", "8.52771, -92.9623, -2.27886, 0.59", "8.2565, -93.1835, -3.50616, 0.59", "8.19106, -93.3039, -3.7772, 0.59", "8.03831, -94.0492, -4.80207, 0.59", "8.00596, -94.5789, -5.34941, 0.59", "7.96664, -95.2228, -6.0148, 1.11", "7.90855, -96.6276, -6.96395, 0.15", "7.90089, -97.5669, -7.47691, 1.03", "7.97301, -99.2284, -8.26533, 0.15", "8.11589, -100.316, -8.65978, 0.22", "8.85011, -107.47, -15.4135, 0.22", "8.36436, -115.433, -21.1634, 0.22", "8.08838, -123.667, -26.5128, 0.22", "7.19514, -132.613, -30.3875, 0.22" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "8.87437, -93.0787, -0.0599277, 0.07", "8.80974, -95.4568, -0.0745461, 0.07", "8.7963, -96.6429, -0.0809854, 0.07", "8.78978, -97.2187, -0.0841112, 0.81", "8.77823, -98.2383, -0.0896463, 1.62", "8.75883, -99.9499, -0.0989387, 0.15", "8.75066, -100.672, -0.102857, 0.15", "8.76039, -101.101, -0.104756, 0.15" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-47.1747, -120.573, 14.7827, 0.07", "-47.8352, -120.872, 15.1607, 0.07", "-48.5343, -121.187, 15.5609, 0.07", "-48.9714, -121.385, 15.8111, 0.15", "-49.685, -121.707, 16.2196, 0.07", "-50.1797, -121.93, 16.5028, 0.07", "-50.6004, -122.12, 16.7436, 0.22" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-47.1747, -120.573, 14.7827, 0.81", "-47.1653, -121.239, 14.5169, 0.81", "-47.1313, -122.202, 14.1452, 0.22", "-47.0927, -123.152, 13.8034, 0.22", "-47.0907, -123.811, 13.5581, 0.15", "-47.104, -124.697, 13.2263, 0.15", "-47.1058, -124.795, 13.1912, 0.15", "-47.1106, -125.224, 13.0224, 0.66", "-47.1118, -125.695, 12.8209, 1.03", "-47.1205, -126.924, 12.308, 0.22", "-47.1539, -127.542, 12.0448, 0.66", "-47.2092, -128.217, 11.7698, 0.22", "-47.279, -129.034, 11.4537, 0.15", "-47.325, -129.56, 11.2627, 0.15", "-47.3469, -129.918, 11.1494, 0.66", "-47.3634, -130.567, 10.9964, 0.29", "-47.3922, -131.73, 10.7901, 0.15", "-47.418, -132.241, 10.7292, 0.15", "-47.452, -132.675, 10.7062, 0.15", "-47.5275, -133.338, 10.6905, 0.22", "-47.6157, -133.983, 10.6787, 0.59", "-47.7653, -134.856, 10.6671, 1.18", "-47.9364, -135.609, 10.6618, 1.7", "-48.1667, -136.485, 10.6491, 1.99", "-48.4179, -137.367, 10.627, 1.25", "-48.7939, -138.611, 10.5833, 0.22", "-49.0283, -139.37, 10.5508, 0.37", "-49.3133, -140.247, 10.4875, 0.15", "-49.6788, -141.35, 10.3746, 0.22", "-49.8332, -141.783, 10.3189, 0.59", "-50.0182, -142.268, 10.2442, 1.11", "-50.3235, -142.979, 10.1432, 0.52", "-50.8695, -144.188, 9.98992, 0.22", "-51.0958, -144.631, 9.94271, 0.88", "-51.4726, -145.306, 9.87996, 0.96", "-52.0693, -146.332, 9.8026, 0.07", "-52.5469, -147.126, 9.75989, 0.07", "-52.6239, -147.251, 9.75884, 0.44", "-52.8821, -147.687, 9.80884, 0.52" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "-7.75499, -41.937, -10.375, 0.44", "-9.50412, -43.9957, -10.108, 0.44", "-10.3393, -44.9719, -9.96781, 0.66", "-11.0981, -45.8886, -9.83983, 0.66", "-12.1009, -47.1369, -9.68178, 0.44", "-12.6776, -47.8768, -9.59744, 0.81", "-13.1161, -48.4649, -9.53657, 1.33", "-13.9493, -49.6499, -9.41347, 0.74", "-14.6581, -50.7259, -9.30633, 0.37", "-15.0945, -51.4521, -9.24553, 0.22", "-15.5834, -52.3292, -9.20366, 0.96", "-15.9224, -52.9826, -9.21481, 0.15", "-16.1642, -53.5075, -9.22767, 0.29", "-21.3196, -61.8596, -9.42986, 0.29", "-27.809, -69.1506, -8.02701, 0.29" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-7.75499, -41.937, -10.375, 0.59", "-6.73663, -43.224, -10.0271, 0.59", "-6.14404, -44.0633, -9.74101, 0.29", "-5.87628, -44.4425, -9.61173, 0.81", "-5.24383, -45.3383, -9.30637, 0.52", "-4.55706, -46.311, -8.97478, 0.22", "-4.13393, -46.9103, -8.77048, 0.66", "-3.74156, -47.7309, -8.45955, 1.18" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "10.2691, -29.7915, -67.2329, 0.07", "15.3649, -30.4503, -75.8106, 0.07", "20.5828, -29.4174, -84.2753, 0.07" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "10.2691, -29.7915, -67.2329, 0.81", "13.9576, -29.6286, -76.5263, 0.07", "17.6362, -28.437, -85.7445, 0.07", "19.8788, -27.2103, -95.4082, 0.07", "21.9913, -27.4742, -105.179, 0.07", "24.1044, -27.3722, -114.952, 0.07", "27.2287, -27.3665, -124.452, 0.07", "30.5628, -26.88, -133.866, 0.07" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "162.839, -16.5535, 81.4481, 0.15", "163.757, -17.0748, 81.0815, 0.15", "164.289, -17.3667, 80.8654, 0.66", "164.762, -17.6256, 80.6649, 0.66", "166.057, -18.3314, 80.1025, 0.07", "167.036, -18.8804, 79.6467, 0.07", "167.744, -19.2789, 79.3134, 0.96", "169.158, -20.0726, 78.6647, 0.07", "169.639, -20.32, 78.4312, 0.07", "169.927, -20.4537, 78.2831, 0.22", "170.619, -20.7481, 77.8772, 0.07", "171.249, -21.0212, 77.4822, 0.66", "171.474, -21.1213, 77.3304, 0.66", "172.794, -21.7371, 76.355, 0.07", "173.324, -21.9992, 75.934, 0.44", "174.116, -22.4204, 75.2751, 0.22", "174.61, -22.7116, 74.8553, 0.96", "175.543, -23.3658, 74.0169, 0.22", "176.262, -23.959, 73.4023, 0.07", "177.001, -24.654, 72.8199, 0.74", "177.28, -24.9215, 72.6347, 1.03", "177.796, -25.41, 72.3558, 0.59", "178.705, -26.2605, 71.9407, 0.15", "179.839, -27.3189, 71.5304, 0.15", "180.151, -27.5915, 71.4183, 0.59", "181.371, -28.5714, 70.9898, 0.07", "181.758, -28.8412, 70.8364, 0.74", "182.175, -29.084, 70.6407, 0.96", "183.594, -29.764, 69.8875, 0.07", "184.717, -30.2353, 69.2197, 0.07", "185.156, -30.4029, 68.9366, 0.66", "186.123, -30.7037, 68.2429, 0.22", "186.989, -30.9436, 67.5834, 0.66", "187.379, -31.0228, 67.2594, 0.74" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "162.839, -16.5535, 81.4481, 0.07", "164.201, -16.2663, 82.6047, 0.07", "165.081, -16.0921, 83.341, 0.07", "165.649, -15.9871, 83.7998, 0.81", "166.286, -15.8805, 84.3192, 0.22", "166.966, -15.7763, 84.8691, 0.96", "168.582, -15.5713, 86.1572, 0.07", "169.022, -15.5223, 86.4829, 0.07", "169.441, -15.4762, 86.8027, 0.29", "170.163, -15.4013, 87.3976, 1.11", "170.652, -15.3622, 87.8163, 1.55", "171.914, -15.2921, 88.8879, 0.22", "172.948, -15.2491, 89.7786, 0.88", "174.063, -15.1933, 90.832, 0.22", "174.643, -15.1552, 91.4538, 0.22", "175.27, -15.0904, 92.2387, 0.66", "175.447, -15.0623, 92.5081, 1.33", "176.468, -14.8595, 94.3644, 0.22", "177.153, -14.7243, 95.8016, 0.22", "177.748, -14.5997, 97.1749, 0.66", "178.355, -14.4295, 98.6353, 0.88", "178.987, -14.1991, 100.179, 0.37", "179.368, -14.0463, 101.152, 0.37", "179.713, -13.893, 102.086, 0.81", "179.933, -13.8032, 102.63, 1.11", "180.416, -13.634, 103.659, 0.22", "180.825, -13.5222, 104.355, 0.74" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "-27.809, -69.1506, -8.02701, 0.07", "-34.0873, -76.7394, -8.07647, 0.07", "-40.066, -84.5546, -8.15214, 0.07", "-46.6224, -91.9082, -7.79437, 0.07", "-53.0218, -99.2976, -9.06303, 0.07", "-59.264, -106.708, -10.8711, 0.07", "-66.6164, -113.106, -12.5696, 0.07", "-74.1691, -119.204, -14.5295, 0.07", "-81.1881, -125.804, -16.7436, 0.07", "-88.0908, -132.804, -17.6472, 0.07", "-95.1613, -139.698, -17.533, 0.07" ],
    "parent" : "dend_90",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "-27.809, -69.1506, -8.02701, 0.81", "-32.7412, -77.4252, -6.11685, 0.07", "-39.0337, -84.7402, -4.08791, 0.07", "-44.4386, -92.8304, -2.69693, 0.07", "-49.7625, -101.083, -2.57232, 0.07", "-55.7462, -108.83, -1.54075, 0.07", "-62.3941, -116.093, -2.09402, 0.07", "-68.9569, -123.354, -0.880868, 0.07" ],
    "parent" : "dend_90",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "-3.74156, -47.7309, -8.45955, 0.15", "-4.61603, -49.2649, -8.43779, 0.15", "-4.82693, -49.6349, -8.43254, 0.59", "-5.19243, -50.276, -8.42344, 1.33", "-5.58132, -50.9582, -8.41376, 0.22", "-10.3382, -59.442, -9.70222, 0.22", "-15.2608, -67.9279, -9.57463, 0.22", "-19.8314, -76.4857, -11.0136, 0.22", "-25.3001, -84.6485, -11.0254, 0.22" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-3.74156, -47.7309, -8.45955, 0.44", "-3.41718, -48.8584, -8.33556, 0.44", "-3.11217, -49.9672, -8.20103, 0.15", "-2.8925, -50.7546, -8.08712, 0.15", "-2.76291, -51.2027, -8.01214, 0.88", "-2.52542, -52.0326, -7.86646, 1.92", "-1.77013, -54.6718, -7.40317, 0.22", "-1.55838, -55.4524, -7.26013, 0.66", "-1.34429, -56.2018, -7.12241, 1.33", "-1.16034, -56.8789, -7.01006, 2.06", "-0.962496, -57.6334, -6.87246, 1.62", "1.14004, -66.6044, -3.56776, 1.62", "4.26743, -74.7526, 0.946356, 1.62" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "20.5828, -29.4174, -84.2753, 0.07", "25.8187, -29.2982, -92.7941, 0.07", "30.7915, -28.8718, -101.459, 0.07", "35.2034, -29.37, -110.419, 0.07", "39.6379, -32.1371, -118.92, 0.07", "45.9161, -33.4773, -126.582, 0.07", "52.6584, -35.0183, -133.796, 0.07", "59.6646, -37.5142, -140.456, 0.07" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "20.5828, -29.4174, -84.2753, 0.07", "25.5975, -29.0461, -92.9187, 0.07", "31.8714, -27.887, -100.614, 0.07", "39.8564, -27.4943, -106.621, 0.07", "48.4551, -26.0345, -111.501, 0.07", "56.6587, -24.0676, -116.852, 0.07", "65.4285, -20.7676, -120.263, 0.07", "74.5586, -17.9214, -123.113, 0.07", "83.3288, -15.2083, -127.03, 0.07" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "30.5628, -26.88, -133.866, 0.07", "33.622, -26.5199, -143.38, 0.07", "36.2499, -26.8659, -153.022, 0.07", "38.1844, -27.0613, -162.831, 0.07", "38.1775, -27.6963, -172.81, 0.07", "39.164, -29.343, -182.617, 0.07" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "30.5628, -26.88, -133.866, 0.07", "33.3018, -26.3963, -143.471, 0.07", "37.4504, -27.2203, -152.531, 0.07", "42.3048, -28.7236, -161.136, 0.07", "46.9797, -29.0666, -169.969, 0.07", "51.0234, -28.3057, -179.082, 0.07", "54.058, -28.5799, -188.606, 0.07", "55.777, -28.1339, -198.447, 0.07" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "180.825, -13.5222, 104.355, 0.29", "181.812, -13.7289, 106.096, 0.29", "182.465, -13.797, 107.014, 0.52", "182.994, -13.7817, 107.66, 0.52", "183.57, -13.7281, 108.351, 0.52", "183.967, -13.6882, 108.829, 0.52", "184.304, -13.6443, 109.258, 0.52", "185.255, -13.4871, 110.412, 0.15", "186.203, -13.316, 111.668, 0.15", "186.767, -13.2084, 112.378, 0.15", "187.201, -13.1312, 112.899, 0.59", "187.968, -13.0254, 113.826, 0.59", "188.387, -12.9785, 114.367, 0.59", "189.067, -12.9034, 115.349, 0.81", "189.619, -12.8725, 116.137, 0.15", "190.218, -12.8535, 116.939, 0.37" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "180.825, -13.5222, 104.355, 0.15", "181.39, -12.2638, 104.622, 0.15", "181.921, -11.1074, 104.899, 0.15", "182.187, -10.5369, 105.039, 0.52", "182.516, -9.88022, 105.199, 0.88", "182.761, -9.39453, 105.314, 1.11", "183.551, -7.82956, 105.674, 0.07", "184.024, -6.864, 105.896, 0.07", "184.341, -6.19188, 106.034, 1.11", "184.954, -4.86288, 106.307, 0.15", "185.184, -4.34214, 106.414, 0.15", "185.281, -4.11058, 106.462, 0.29", "185.563, -3.39431, 106.599, 0.15", "185.883, -2.57794, 106.736, 0.74", "186.194, -1.77474, 106.9, 0.07", "186.409, -1.22507, 107.03, 0.07", "186.647, -0.661991, 107.192, 0.07", "186.949, 0.0282132, 107.374, 0.74", "187.46, 1.12852, 107.682, 0.07", "187.942, 2.0875, 108.006, 0.07", "188.317, 2.77952, 108.283, 0.44", "189.032, 4.0222, 108.829, 0.07", "189.507, 4.83476, 109.199, 0.59", "189.994, 5.65479, 109.583, 1.11", "190.924, 7.15442, 110.289, 0.15", "191.424, 7.92582, 110.63, 0.15", "191.905, 8.64504, 110.941, 0.96", "192.689, 9.80081, 111.413, 0.07", "192.944, 10.1857, 111.559, 0.22", "193.37, 10.8245, 111.737, 0.07", "193.763, 11.4106, 111.846, 0.22", "194.389, 12.325, 112.001, 0.07", "194.661, 12.6994, 112.069, 0.22", "195.41, 13.6641, 112.263, 0.07", "195.948, 14.3109, 112.404, 0.96", "196.827, 15.3056, 112.633, 0.07", "197.533, 16.0359, 112.809, 0.07", "198.017, 16.5089, 112.924, 0.52", "198.419, 16.8865, 113.004, 0.29", "199.439, 17.8038, 113.152, 0.15", "200.052, 18.3541, 113.214, 0.59", "201.338, 19.4213, 113.294, 0.07", "202.128, 20.037, 113.313, 0.07", "202.816, 20.5451, 113.314, 0.44", "204.498, 21.7817, 113.296, 0.07", "204.925, 22.0879, 113.282, 0.22", "206.393, 23.0981, 113.217, 0.07", "207.037, 23.51, 113.182, 0.29", "207.676, 23.8806, 113.155, 0.52" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "-25.3001, -84.6485, -11.0254, 0.07", "-30.2531, -93.0808, -11.8451, 0.07", "-36.3021, -100.84, -12.136, 0.07", "-41.2711, -109.286, -12.6482, 0.07", "-44.88, -118.248, -14.2263, 0.07" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "-25.3001, -84.6485, -11.0254, 0.81", "-30.2252, -93.1258, -11.4097, 0.07", "-36.0623, -100.944, -12.6869, 0.07", "-42.323, -108.343, -14.4789, 0.07", "-47.0693, -116.601, -16.8734, 0.07", "-49.9817, -125.919, -17.3036, 0.07", "-53.8569, -134.903, -17.0153, 0.07" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "4.26743, -74.7526, 0.946356, 0.22", "6.88334, -83.6653, 4.04389, 0.22", "8.94754, -92.8234, 6.78467, 0.22", "10.0275, -102.405, 8.29143, 0.22", "10.3918, -112.089, 9.38891, 0.22", "12.5934, -121.404, 11.3597, 0.22", "15.2921, -130.364, 14.2352, 0.22" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "4.26743, -74.7526, 0.946356, 0.07", "6.9426, -83.6467, 4.04966, 0.22", "9.16112, -92.1629, 8.38383, 0.22" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "59.6646, -37.5142, -140.456, 0.07", "65.2288, -38.5431, -148.698, 0.07", "69.5793, -41.2868, -157.251, 0.07" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "59.6646, -37.5142, -140.456, 0.07", "65.4784, -38.8944, -148.468, 0.07", "72.0118, -41.4779, -155.56, 0.07", "79.776, -43.4728, -161.521, 0.07", "86.2109, -46.2085, -168.643, 0.07", "92.0436, -49.6045, -175.981, 0.07", "97.8821, -53.8243, -182.85, 0.07", "104.492, -58.0619, -188.967, 0.07", "110.67, -63.2765, -194.731, 0.07", "116.088, -68.7711, -200.967, 0.07" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "83.3288, -15.2083, -127.03, 0.07", "92.7499, -16.0277, -130.275, 0.07", "102.469, -16.5556, -132.564, 0.07", "111.678, -17.6241, -136.307, 0.07" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "83.3288, -15.2083, -127.03, 0.07", "90.0943, -11.8896, -133.56, 0.07", "96.8107, -9.08321, -140.386, 0.07", "104.448, -7.90707, -146.728, 0.07" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "39.164, -29.343, -182.617, 0.07", "41.9803, -29.1326, -192.209, 0.07", "44.1872, -28.1816, -201.914, 0.07", "46.0365, -26.3046, -211.551, 0.07", "46.994, -23.3846, -221.044, 0.07" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "39.164, -29.343, -182.617, 0.07", "38.155, -31.515, -192.313, 0.07", "37.9278, -34.5439, -201.815, 0.07", "37.8242, -36.3766, -211.637, 0.07", "37.7965, -38.4661, -221.404, 0.07" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-53.8569, -134.903, -17.0153, 0.07", "-58.6533, -143.452, -16.6661, 0.07", "-62.5875, -152.358, -15.6326, 0.07", "-67.6438, -160.385, -13.0518, 0.07" ],
    "parent" : "dend_86",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "-53.8569, -134.903, -17.0153, 0.07", "-58.5645, -143.037, -19.8845, 0.07", "-62.6491, -151.289, -23.303, 0.07", "-65.515, -159.343, -28.156, 0.07" ],
    "parent" : "dend_86",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "9.16112, -92.1629, 8.38383, 0.07", "11.7592, -100.901, 11.9802, 0.07", "12.9787, -110.16, 14.865, 0.07", "15.2844, -119.225, 17.7362, 0.07", "17.6574, -128.574, 19.2921, 0.07", "20.6014, -137.344, 22.5207, 0.07" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "9.16112, -92.1629, 8.38383, 0.81", "11.4528, -100.871, 12.2538, 0.07", "13.6457, -109.824, 15.5513, 0.07", "15.1051, -119.216, 17.8038, 0.07", "15.6917, -128.751, 19.8084, 0.07", "17.5972, -138.321, 20.0164, 0.07", "21.0534, -147.27, 21.9674, 0.07" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "104.448, -7.90707, -146.728, 0.07", "112.523, -6.13524, -152.34, 0.07", "120.597, -3.67087, -157.67, 0.07", "129.031, -0.778017, -162.151, 0.07", "136.88, 3.12466, -166.88, 0.07", "145.228, 7.81066, -169.565, 0.07", "152.977, 13.2992, -172.441, 0.07", "160.824, 18.9005, -174.771, 0.07", "168.044, 24.9334, -177.865, 0.07" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "104.448, -7.90707, -146.728, 0.07", "110.308, -4.82181, -154.188, 0.07", "115.929, -2.66176, -162.157, 0.07", "122.672, -0.10365, -169.059, 0.07", "130.283, 2.77637, -174.833, 0.07", "137.05, 6.62648, -181.047, 0.07", "143.67, 11.6935, -186.448, 0.07", "150.788, 17.0058, -190.88, 0.07" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "46.994, -23.3846, -221.044, 0.07", "45.9347, -21.2134, -230.735, 0.07", "44.9211, -17.5984, -239.967, 0.07" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "46.994, -23.3846, -221.044, 0.07", "50.5389, -22.3091, -230.329, 0.07", "55.2229, -22.5007, -239.162, 0.07" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "37.7965, -38.4661, -221.404, 0.07", "37.3393, -40.3953, -231.196, 0.07", "37.6283, -41.7938, -241.088, 0.07" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "37.7965, -38.4661, -221.404, 0.07", "37.7307, -41.5893, -230.877, 0.07", "35.8306, -46.3602, -239.389, 0.07" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "20.6014, -137.344, 22.5207, 0.07", "22.5919, -146.42, 25.5855, 0.07", "26.5414, -154.861, 28.6587, 0.07" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "20.6014, -137.344, 22.5207, 0.07", "23.6056, -146.37, 24.8185, 0.07", "24.8692, -155.3, 28.6302, 0.07", "27.6363, -162.928, 34.2089, 0.07" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "21.0534, -147.27, 21.9674, 0.07", "23.0827, -156.567, 24.1939, 0.07", "26.0463, -165.878, 24.0552, 0.07" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "21.0534, -147.27, 21.9674, 0.07", "23.0302, -156.547, 24.326, 0.07", "24.0807, -165.935, 26.8096, 0.07", "23.6939, -175.597, 28.092, 0.07", "21.7894, -185.164, 27.7853, 0.07", "18.2812, -194.165, 26.2145, 0.07", "15.6211, -203.494, 25.0431, 0.07", "13.3307, -212.57, 22.1944, 0.07", "9.91039, -220.77, 18.0036, 0.07" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "26.5414, -154.861, 28.6587, 0.07", "29.9762, -163.641, 31.3268, 0.07", "33.306, -172.642, 33.2456, 0.07", "37.4786, -181.401, 34.6165, 0.07", "42.1329, -189.737, 36.9084, 0.07", "46.7897, -197.658, 40.4175, 0.07", "51.5148, -205.635, 43.6934, 0.07" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "26.5414, -154.861, 28.6587, 0.07", "29.0739, -163.66, 32.1442, 0.07", "31.8496, -172.345, 35.7428, 0.07", "35.1976, -181.156, 38.4107, 0.07", "37.0573, -190.559, 40.292, 0.07", "39.4148, -199.93, 41.7286, 0.07", "42.1732, -209.239, 42.8395, 0.07" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "9.91039, -220.77, 18.0036, 0.07", "8.78188, -230.414, 17.0647, 0.07", "6.1856, -239.506, 14.5514, 0.07" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "9.91039, -220.77, 18.0036, 0.07", "8.36115, -230.394, 17.5977, 0.07", "6.9907, -239.812, 15.4045, 0.07" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "51.5148, -205.635, 43.6934, 0.07", "60.5788, -209.734, 44.1079, 0.07" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "51.5148, -205.635, 43.6934, 0.07", "53.2455, -214.775, 46.7135, 0.07", "53.3401, -224.298, 48.857, 0.07" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "42.1732, -209.239, 42.8395, 0.07", "46.0818, -217.295, 46.8965, 0.07", "50.0233, -225.635, 50.2569, 0.07" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "42.1732, -209.239, 42.8395, 0.07", "41.0031, -218.657, 40.5335, 0.07", "41.2068, -227.591, 36.5337, 0.07", "40.7536, -236.896, 33.5802, 0.07" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_94", "dend_43", "dend_30", "dend_25", "dend_18", "dend_11", "dend_0", "dend_98", "dend_95", "dend_45", "dend_44", "dend_34", "dend_31", "dend_27", "dend_26", "dend_24", "dend_19", "dend_17", "dend_12", "dend_6", "dend_1", "dend_100", "dend_99", "dend_97", "dend_96", "dend_93", "dend_46", "dend_42", "dend_35", "dend_33", "dend_32", "dend_29", "dend_28", "dend_23", "dend_20", "dend_14", "dend_13", "dend_8", "dend_7", "dend_5", "dend_2", "dend_66", "dend_47", "dend_41", "dend_36", "dend_22", "dend_21", "dend_16", "dend_15", "dend_10", "dend_9", "dend_4", "dend_3", "dend_90", "dend_67", "dend_57", "dend_48", "dend_40", "dend_37", "dend_92", "dend_91", "dend_85", "dend_68", "dend_63", "dend_58", "dend_50", "dend_49", "dend_39", "dend_38", "dend_89", "dend_86", "dend_84", "dend_69", "dend_65", "dend_64", "dend_62", "dend_59", "dend_54", "dend_51", "dend_88", "dend_87", "dend_75", "dend_70", "dend_61", "dend_60", "dend_56", "dend_55", "dend_53", "dend_52", "dend_77", "dend_76", "dend_74", "dend_71", "dend_81", "dend_78", "dend_73", "dend_72", "dend_83", "dend_82", "dend_80", "dend_79" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_94", "dend_43", "dend_30", "dend_25", "dend_18", "dend_11", "dend_0", "dend_98", "dend_95", "dend_45", "dend_44", "dend_34", "dend_31", "dend_27", "dend_26", "dend_24", "dend_19", "dend_17", "dend_12", "dend_6", "dend_1", "dend_100", "dend_99", "dend_97", "dend_96", "dend_93", "dend_46", "dend_42", "dend_35", "dend_33", "dend_32", "dend_29", "dend_28", "dend_23", "dend_20", "dend_14", "dend_13", "dend_8", "dend_7", "dend_5", "dend_2", "dend_66", "dend_47", "dend_41", "dend_36", "dend_22", "dend_21", "dend_16", "dend_15", "dend_10", "dend_9", "dend_4", "dend_3", "dend_90", "dend_67", "dend_57", "dend_48", "dend_40", "dend_37", "dend_92", "dend_91", "dend_85", "dend_68", "dend_63", "dend_58", "dend_50", "dend_49", "dend_39", "dend_38", "dend_89", "dend_86", "dend_84", "dend_69", "dend_65", "dend_64", "dend_62", "dend_59", "dend_54", "dend_51", "dend_88", "dend_87", "dend_75", "dend_70", "dend_61", "dend_60", "dend_56", "dend_55", "dend_53", "dend_52", "dend_77", "dend_76", "dend_74", "dend_71", "dend_81", "dend_78", "dend_73", "dend_72", "dend_83", "dend_82", "dend_80", "dend_79" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_95" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_100" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_99" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_97" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_96" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_98",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_94" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_98" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_101",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_103",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_102",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_100",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_99",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_104",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93", "dend_94", "dend_95", "dend_96", "dend_97", "dend_98", "dend_99", "dend_100" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_94", "dend_94", "dend_43", "dend_43", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_57", "dend_57", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_89", "dend_89", "dend_89", "dend_89", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_69", "dend_69", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_62", "dend_62", "dend_62", "dend_59", "dend_59", "dend_59", "dend_54", "dend_54", "dend_54", "dend_54", "dend_51", "dend_51", "dend_51", "dend_51", "dend_88", "dend_88", "dend_88", "dend_87", "dend_87", "dend_87", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_56", "dend_56", "dend_55", "dend_55", "dend_53", "dend_53", "dend_52", "dend_52", "dend_77", "dend_77", "dend_76", "dend_76", "dend_76", "dend_74", "dend_74", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_73", "dend_73", "dend_72", "dend_72", "dend_83", "dend_82", "dend_82", "dend_80", "dend_80", "dend_79", "dend_79", "dend_79" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.936579E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dSTUT214_L5_LBC_82d782e650_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_94, id: dend_94, parent: soma_0
create dend_94
public dend_94
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_98, id: dend_98, parent: dend_94
create dend_98
public dend_98
// Section: dend_95, id: dend_95, parent: dend_94
create dend_95
public dend_95
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_24, id: dend_24, parent: dend_18
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_11
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_100, id: dend_100, parent: dend_98
create dend_100
public dend_100
// Section: dend_99, id: dend_99, parent: dend_98
create dend_99
public dend_99
// Section: dend_97, id: dend_97, parent: dend_95
create dend_97
public dend_97
// Section: dend_96, id: dend_96, parent: dend_95
create dend_96
public dend_96
// Section: dend_93, id: dend_93, parent: dend_45
create dend_93
public dend_93
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_66, id: dend_66, parent: dend_46
create dend_66
public dend_66
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_41, id: dend_41, parent: dend_35
create dend_41
public dend_41
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_90, id: dend_90, parent: dend_66
create dend_90
public dend_90
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_57, id: dend_57, parent: dend_47
create dend_57
public dend_57
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_92, id: dend_92, parent: dend_90
create dend_92
public dend_92
// Section: dend_91, id: dend_91, parent: dend_90
create dend_91
public dend_91
// Section: dend_85, id: dend_85, parent: dend_67
create dend_85
public dend_85
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_63, id: dend_63, parent: dend_57
create dend_63
public dend_63
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_89, id: dend_89, parent: dend_85
create dend_89
public dend_89
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_84, id: dend_84, parent: dend_68
create dend_84
public dend_84
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_62, id: dend_62, parent: dend_58
create dend_62
public dend_62
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_54, id: dend_54, parent: dend_50
create dend_54
public dend_54
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_88, id: dend_88, parent: dend_86
create dend_88
public dend_88
// Section: dend_87, id: dend_87, parent: dend_86
create dend_87
public dend_87
// Section: dend_75, id: dend_75, parent: dend_69
create dend_75
public dend_75
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_74, id: dend_74, parent: dend_70
create dend_74
public dend_74
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_81, id: dend_81, parent: dend_77
create dend_81
public dend_81
// Section: dend_78, id: dend_78, parent: dend_77
create dend_78
public dend_78
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_83, id: dend_83, parent: dend_81
create dend_83
public dend_83
// Section: dend_82, id: dend_82, parent: dend_81
create dend_82
public dend_82
// Section: dend_80, id: dend_80, parent: dend_78
create dend_80
public dend_80
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_94, dend_43, dend_30, dend_25, dend_18, dend_11, dend_0, dend_98, dend_95, dend_45, dend_44, dend_34, dend_31, dend_27, dend_26, dend_24, dend_19, dend_17, dend_12, dend_6, dend_1, dend_100, dend_99, dend_97, dend_96, dend_93, dend_46, dend_42, dend_35, dend_33, dend_32, dend_29, dend_28, dend_23, dend_20, dend_14, dend_13, dend_8, dend_7, dend_5, dend_2, dend_66, dend_47, dend_41, dend_36, dend_22, dend_21, dend_16, dend_15, dend_10, dend_9, dend_4, dend_3, dend_90, dend_67, dend_57, dend_48, dend_40, dend_37, dend_92, dend_91, dend_85, dend_68, dend_63, dend_58, dend_50, dend_49, dend_39, dend_38, dend_89, dend_86, dend_84, dend_69, dend_65, dend_64, dend_62, dend_59, dend_54, dend_51, dend_88, dend_87, dend_75, dend_70, dend_61, dend_60, dend_56, dend_55, dend_53, dend_52, dend_77, dend_76, dend_74, dend_71, dend_81, dend_78, dend_73, dend_72, dend_83, dend_82, dend_80, dend_79]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_94, dend_43, dend_30, dend_25, dend_18, dend_11, dend_0, dend_98, dend_95, dend_45, dend_44, dend_34, dend_31, dend_27, dend_26, dend_24, dend_19, dend_17, dend_12, dend_6, dend_1, dend_100, dend_99, dend_97, dend_96, dend_93, dend_46, dend_42, dend_35, dend_33, dend_32, dend_29, dend_28, dend_23, dend_20, dend_14, dend_13, dend_8, dend_7, dend_5, dend_2, dend_66, dend_47, dend_41, dend_36, dend_22, dend_21, dend_16, dend_15, dend_10, dend_9, dend_4, dend_3, dend_90, dend_67, dend_57, dend_48, dend_40, dend_37, dend_92, dend_91, dend_85, dend_68, dend_63, dend_58, dend_50, dend_49, dend_39, dend_38, dend_89, dend_86, dend_84, dend_69, dend_65, dend_64, dend_62, dend_59, dend_54, dend_51, dend_88, dend_87, dend_75, dend_70, dend_61, dend_60, dend_56, dend_55, dend_53, dend_52, dend_77, dend_76, dend_74, dend_71, dend_81, dend_78, dend_73, dend_72, dend_83, dend_82, dend_80, dend_79]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_95]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_100]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_99]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_97]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_96]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_96
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_97
// Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_98
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_94]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_98]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_101
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_103
// Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_102
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_100
// Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_99
// Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_104
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_90
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_94, dend_94, dend_43, dend_43, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_57, dend_57, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_89, dend_89, dend_89, dend_89, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_69, dend_69, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_88, dend_88, dend_88, dend_87, dend_87, dend_87, dend_75, dend_75, dend_75, dend_75, dend_75, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_56, dend_56, dend_55, dend_55, dend_53, dend_53, dend_52, dend_52, dend_77, dend_77, dend_76, dend_76, dend_76, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_73, dend_73, dend_72, dend_72, dend_83, dend_82, dend_82, dend_80, dend_80, dend_79, dend_79, dend_79]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_94(0), soma_0(0.4999999039757195)
    connect dend_43(0), soma_0(0.4999999039757195)
    connect dend_30(0), soma_0(0.4999999039757195)
    connect dend_25(0), soma_0(0.4999999039757195)
    connect dend_18(0), soma_0(0.4999999039757195)
    connect dend_11(0), soma_0(0.4999999039757195)
    connect dend_0(0), soma_0(0.4999999039757195)
    connect axon_0(0), soma_0(1.0)
    connect dend_98(0), dend_94(1.0)
    connect dend_95(0), dend_94(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_24(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_100(0), dend_98(1.0)
    connect dend_99(0), dend_98(1.0)
    connect dend_97(0), dend_95(1.0)
    connect dend_96(0), dend_95(1.0)
    connect dend_93(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_66(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_41(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_90(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_57(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_92(0), dend_90(1.0)
    connect dend_91(0), dend_90(1.0)
    connect dend_85(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_63(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_89(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_84(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_62(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_54(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_88(0), dend_86(1.0)
    connect dend_87(0), dend_86(1.0)
    connect dend_75(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_74(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_81(0), dend_77(1.0)
    connect dend_78(0), dend_77(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_83(0), dend_81(1.0)
    connect dend_82(0), dend_81(1.0)
    connect dend_80(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -9.18524, -4.81916, 0.0, 3.9822 ) }
    soma_0 { pt3dadd( -8.34327, -4.32353, 0.0, 6.87607 ) }
    soma_0 { pt3dadd( -7.5013, -3.82789, 0.0, 10.1189 ) }
    soma_0 { pt3dadd( -6.65933, -3.33226, 0.0, 12.2867 ) }
    soma_0 { pt3dadd( -5.81736, -2.83662, 0.0, 13.8376 ) }
    soma_0 { pt3dadd( -4.97539, -2.34099, 0.0, 14.8265 ) }
    soma_0 { pt3dadd( -4.13342, -1.84535, 0.0, 15.382 ) }
    soma_0 { pt3dadd( -3.29145, -1.34972, 0.0, 16.0094 ) }
    soma_0 { pt3dadd( -2.44948, -0.854082, 0.0, 16.562 ) }
    soma_0 { pt3dadd( -1.60751, -0.358447, 0.0, 16.8144 ) }
    soma_0 { pt3dadd( -0.765536, 0.137188, 0.0, 17.0145 ) }
    soma_0 { pt3dadd( 0.0764342, 0.632823, 0.0, 17.0541 ) }
    soma_0 { pt3dadd( 0.918405, 1.12846, 0.0, 16.8224 ) }
    soma_0 { pt3dadd( 1.76037, 1.62409, 0.0, 16.2232 ) }
    soma_0 { pt3dadd( 2.60235, 2.11973, 0.0, 15.3709 ) }
    soma_0 { pt3dadd( 3.44432, 2.61536, 0.0, 14.0738 ) }
    soma_0 { pt3dadd( 4.28629, 3.111, 0.0, 12.5479 ) }
    soma_0 { pt3dadd( 5.12826, 3.60663, 0.0, 11.1251 ) }
    soma_0 { pt3dadd( 5.97023, 4.10227, 0.0, 9.76121 ) }
    soma_0 { pt3dadd( 6.8122, 4.5979, 0.0, 7.58188 ) }
    soma_0 { pt3dadd( 7.65417, 5.09354, 0.0, 4.50057 ) }
    // Section: dend_94, id: dend_94, parent: soma_0 (entry count 21/100)
    dend_94 { pt3dclear() }
    dend_94 { pt3dadd( -4.45607, 3.26886, -15.4, 1.55 ) }
    dend_94 { pt3dadd( -4.45607, 3.26886, -15.4, 1.55 ) }
    dend_94 { pt3dadd( -5.72607, 3.65886, -15.4, 1.33 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 24/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -4.93607, -6.92964, -8.99, 1.77 ) }
    dend_43 { pt3dadd( -4.93607, -6.92964, -8.99, 1.62 ) }
    dend_43 { pt3dadd( -5.63607, -7.59264, -9.19, 1.77 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 27/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 8.77393, 3.15186, 4.25, 0.96 ) }
    dend_30 { pt3dadd( 8.77393, 3.15186, 4.25, 0.96 ) }
    dend_30 { pt3dadd( 9.74231, 3.23833, 4.11046, 0.81 ) }
    dend_30 { pt3dadd( 10.6885, 3.2679, 3.96619, 0.74 ) }
    dend_30 { pt3dadd( 11.7137, 3.29994, 3.80987, 0.66 ) }
    dend_30 { pt3dadd( 12.7464, 3.33222, 3.6524, 0.66 ) }
    dend_30 { pt3dadd( 13.6962, 3.3619, 3.50757, 1.25 ) }
    dend_30 { pt3dadd( 14.6719, 3.36558, 3.34474, 1.92 ) }
    dend_30 { pt3dadd( 15.323, 3.32315, 3.21255, 1.77 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 36/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 5.38393, 6.75936, 4.97, 0.74 ) }
    dend_25 { pt3dadd( 5.0593, 7.08203, 5.34468, 0.74 ) }
    dend_25 { pt3dadd( 4.55354, 7.51454, 5.79991, 0.74 ) }
    dend_25 { pt3dadd( 3.71377, 8.15335, 6.49187, 0.74 ) }
    dend_25 { pt3dadd( 2.79325, 8.81725, 7.25474, 0.59 ) }
    dend_25 { pt3dadd( 1.78956, 9.54415, 8.11141, 0.74 ) }
    dend_25 { pt3dadd( 0.905022, 10.2165, 8.88178, 0.96 ) }
    dend_25 { pt3dadd( -0.128407, 11.0369, 9.76421, 0.52 ) }
    dend_25 { pt3dadd( -0.878336, 11.6788, 10.4295, 0.22 ) }
    dend_25 { pt3dadd( -1.46394, 12.2637, 11.0385, 0.22 ) }
    dend_25 { pt3dadd( -1.86315, 12.7799, 11.567, 0.66 ) }
    dend_25 { pt3dadd( -2.13681, 13.2513, 12.0627, 0.66 ) }
    dend_25 { pt3dadd( -2.56699, 14.1874, 13.0707, 0.29 ) }
    dend_25 { pt3dadd( -2.77966, 14.8463, 13.7473, 0.29 ) }
    dend_25 { pt3dadd( -2.9937, 15.7424, 14.6113, 1.03 ) }
    dend_25 { pt3dadd( -3.13389, 16.4199, 15.2464, 2.51 ) }
    dend_25 { pt3dadd( -3.3364, 17.371, 16.1793, 3.32 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 53/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -7.87607, 3.60036, 6.38, 0.52 ) }
    dend_18 { pt3dadd( -8.29074, 3.56314, 6.23306, 0.52 ) }
    dend_18 { pt3dadd( -9.06852, 3.50813, 5.92979, 0.52 ) }
    dend_18 { pt3dadd( -9.55157, 3.47863, 5.74554, 0.74 ) }
    dend_18 { pt3dadd( -10.5309, 3.46978, 5.39151, 1.25 ) }
    dend_18 { pt3dadd( -11.3367, 3.52171, 5.12095, 1.33 ) }
    dend_18 { pt3dadd( -12.5154, 3.68407, 4.75547, 0.74 ) }
    dend_18 { pt3dadd( -13.6188, 3.93682, 4.43901, 0.59 ) }
    dend_18 { pt3dadd( -14.5077, 4.23098, 4.20119, 0.29 ) }
    dend_18 { pt3dadd( -15.3775, 4.62541, 3.98589, 0.44 ) }
    dend_18 { pt3dadd( -16.3481, 5.20444, 3.79187, 0.59 ) }
    dend_18 { pt3dadd( -17.1522, 5.76515, 3.66024, 0.44 ) }
    dend_18 { pt3dadd( -17.606, 6.10533, 3.60362, 0.81 ) }
    dend_18 { pt3dadd( -18.2076, 6.55159, 3.55091, 1.62 ) }
    dend_18 { pt3dadd( -19.0057, 7.07051, 3.47156, 1.77 ) }
    dend_18 { pt3dadd( -20.3372, 7.68068, 3.3222, 0.37 ) }
    dend_18 { pt3dadd( -20.9038, 7.83156, 3.2628, 0.37 ) }
    dend_18 { pt3dadd( -21.4656, 7.90718, 3.2049, 0.52 ) }
    dend_18 { pt3dadd( -22.1461, 7.94078, 3.14355, 0.59 ) }
    dend_18 { pt3dadd( -23.0826, 7.95226, 3.07857, 0.22 ) }
    dend_18 { pt3dadd( -23.6826, 7.9793, 3.01117, 0.29 ) }
    dend_18 { pt3dadd( -24.3085, 8.03515, 2.92963, 0.74 ) }
    dend_18 { pt3dadd( -25.1728, 8.15689, 2.82236, 1.77 ) }
    dend_18 { pt3dadd( -26.0372, 8.33059, 2.72314, 2.8 ) }
    dend_18 { pt3dadd( -27.3296, 8.65646, 2.59488, 3.17 ) }
    dend_18 { pt3dadd( -29.1699, 9.18866, 2.45044, 0.44 ) }
    dend_18 { pt3dadd( -30.4318, 9.59454, 2.38071, 0.29 ) }
    dend_18 { pt3dadd( -32.1818, 10.1948, 2.32068, 0.37 ) }
    dend_18 { pt3dadd( -33.2583, 10.6001, 2.34225, 0.37 ) }
    dend_18 { pt3dadd( -34.19, 10.9761, 2.41477, 0.52 ) }
    dend_18 { pt3dadd( -34.7498, 11.2175, 2.49599, 1.03 ) }
    dend_18 { pt3dadd( -35.7898, 11.683, 2.72603, 1.84 ) }
    dend_18 { pt3dadd( -36.6093, 12.0565, 2.92342, 1.4 ) }
    dend_18 { pt3dadd( -37.7409, 12.5405, 3.20123, 0.22 ) }
    dend_18 { pt3dadd( -38.6832, 12.8551, 3.41607, 0.59 ) }
    dend_18 { pt3dadd( -38.9875, 12.9365, 3.4803, 0.59 ) }
    dend_18 { pt3dadd( -40.3586, 13.247, 3.74425, 0.44 ) }
    dend_18 { pt3dadd( -41.0242, 13.3633, 3.87705, 1.47 ) }
    dend_18 { pt3dadd( -41.7745, 13.4689, 4.03306, 2.51 ) }
    dend_18 { pt3dadd( -42.8814, 13.5895, 4.24783, 2.36 ) }
    dend_18 { pt3dadd( -44.8438, 13.7873, 4.64567, 0.15 ) }
    dend_18 { pt3dadd( -45.1679, 13.8099, 4.71599, 0.22 ) }
    dend_18 { pt3dadd( -46.1764, 13.8408, 4.94686, 0.22 ) }
    dend_18 { pt3dadd( -46.8305, 13.8249, 5.07933, 0.22 ) }
    dend_18 { pt3dadd( -48.0574, 13.7372, 5.30488, 0.22 ) }
    dend_18 { pt3dadd( -48.4228, 13.6986, 5.3606, 0.96 ) }
    dend_18 { pt3dadd( -49.2539, 13.5844, 5.461, 2.06 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_18 { pt3dadd( -50.2895, 13.4639, 5.5632, 2.58 ) }
    dend_18 { pt3dadd( -52.4752, 13.3081, 5.71366, 0.22 ) }
    dend_18 { pt3dadd( -53.109, 13.286, 5.76233, 0.81 ) }
    dend_18 { pt3dadd( -53.8476, 13.29, 5.8226, 1.77 ) }
    dend_18 { pt3dadd( -54.3909, 13.3168, 5.86616, 1.99 ) }
    dend_18 { pt3dadd( -55.869, 13.4615, 5.97791, 0.44 ) }
    dend_18 { pt3dadd( -57.6587, 13.6721, 6.09986, 0.29 ) }
    dend_18 { pt3dadd( -58.2448, 13.7491, 6.14066, 0.29 ) }
    dend_18 { pt3dadd( -58.7782, 13.8141, 6.17353, 0.81 ) }
    dend_18 { pt3dadd( -59.5286, 13.8972, 6.22368, 1.99 ) }
    dend_18 { pt3dadd( -60.4236, 13.9767, 6.2863, 2.06 ) }
    dend_18 { pt3dadd( -62.2175, 14.0907, 6.41162, 0.15 ) }
    dend_18 { pt3dadd( -62.7179, 14.1021, 6.4449, 0.22 ) }
    dend_18 { pt3dadd( -63.2136, 14.0979, 6.47346, 0.15 ) }
    dend_18 { pt3dadd( -63.521, 14.0945, 6.49418, 0.37 ) }
    dend_18 { pt3dadd( -63.971, 14.094, 6.52717, 0.66 ) }
    dend_18 { pt3dadd( -64.8641, 14.1465, 6.60362, 0.37 ) }
    dend_18 { pt3dadd( -65.698, 14.2352, 6.64612, 0.22 ) }
    dend_18 { pt3dadd( -66.3548, 14.3066, 6.66079, 0.88 ) }
    dend_18 { pt3dadd( -67.2808, 14.4015, 6.66791, 1.99 ) }
    dend_18 { pt3dadd( -68.2365, 14.4946, 6.66335, 1.4 ) }
    dend_18 { pt3dadd( -69.7308, 14.6279, 6.63638, 0.22 ) }
    dend_18 { pt3dadd( -70.8572, 14.7382, 6.60658, 0.22 ) }
    dend_18 { pt3dadd( -71.2344, 14.7872, 6.59408, 0.37 ) }
    dend_18 { pt3dadd( -71.7342, 14.8652, 6.57728, 0.81 ) }
    dend_18 { pt3dadd( -72.0683, 14.9266, 6.57416, 1.11 ) }
    dend_18 { pt3dadd( -73.2839, 15.2093, 6.6315, 0.59 ) }
    dend_18 { pt3dadd( -74.0483, 15.4183, 6.72513, 0.15 ) }
    dend_18 { pt3dadd( -74.6354, 15.609, 6.85902, 0.66 ) }
    dend_18 { pt3dadd( -75.1846, 15.7977, 7.00147, 0.66 ) }
    dend_18 { pt3dadd( -76.3617, 16.2412, 7.32329, 0.15 ) }
    dend_18 { pt3dadd( -77.0896, 16.5282, 7.52459, 0.88 ) }
    dend_18 { pt3dadd( -78.0563, 16.9171, 7.7927, 1.7 ) }
    dend_18 { pt3dadd( -79.9224, 17.6252, 8.26854, 0.22 ) }
    dend_18 { pt3dadd( -80.6076, 17.8734, 8.43507, 0.29 ) }
    dend_18 { pt3dadd( -81.5708, 18.2161, 8.64656, 0.29 ) }
    dend_18 { pt3dadd( -82.2284, 18.438, 8.76589, 0.66 ) }
    dend_18 { pt3dadd( -82.7485, 18.5993, 8.84556, 0.81 ) }
    dend_18 { pt3dadd( -83.7833, 18.8612, 9.01025, 0.29 ) }
    dend_18 { pt3dadd( -84.9368, 19.0538, 9.24734, 0.22 ) }
    dend_18 { pt3dadd( -85.4075, 19.0961, 9.37024, 1.03 ) }
    dend_18 { pt3dadd( -86.2673, 19.1127, 9.62936, 1.92 ) }
    dend_18 { pt3dadd( -86.9252, 19.0983, 9.858, 1.92 ) }
    dend_18 { pt3dadd( -88.3338, 19.0175, 10.394, 0.37 ) }
    dend_18 { pt3dadd( -89.6184, 18.8856, 10.9089, 0.29 ) }
    dend_18 { pt3dadd( -90.2067, 18.7955, 11.1351, 0.22 ) }
    dend_18 { pt3dadd( -90.8227, 18.6796, 11.3687, 0.59 ) }
    dend_18 { pt3dadd( -91.6167, 18.5098, 11.6516, 0.22 ) }
    dend_18 { pt3dadd( -91.887, 18.4462, 11.7346, 0.44 ) }
    dend_18 { pt3dadd( -92.6358, 18.2534, 11.923, 0.96 ) }
    dend_18 { pt3dadd( -93.7024, 17.9855, 12.14, 0.22 ) }
    dend_18 { pt3dadd( -94.7481, 17.7583, 12.345, 0.22 ) }
    dend_18 { pt3dadd( -94.8922, 17.7266, 12.3706, 0.52 ) }
    dend_18 { pt3dadd( -95.3249, 17.635, 12.4369, 1.03 ) }
    dend_18 { pt3dadd( -95.9966, 17.5144, 12.5395, 1.62 ) }
    dend_18 { pt3dadd( -96.8123, 17.4118, 12.6621, 1.47 ) }
    dend_18 { pt3dadd( -98.1542, 17.3377, 12.8465, 0.22 ) }
    dend_18 { pt3dadd( -98.7737, 17.3472, 12.9063, 0.22 ) }
    dend_18 { pt3dadd( -99.2876, 17.3923, 12.9507, 0.15 ) }
    dend_18 { pt3dadd( -99.6423, 17.46, 12.9765, 0.15 ) }
    dend_18 { pt3dadd( -99.936, 17.546, 13.0282, 0.29 ) }
    dend_18 { pt3dadd( -100.369, 17.7077, 13.1353, 0.29 ) }
    dend_18 { pt3dadd( -100.901, 17.9325, 13.3013, 0.22 ) }
    dend_18 { pt3dadd( -101.541, 18.2083, 13.5227, 1.25 ) }
    dend_18 { pt3dadd( -102.268, 18.5037, 13.7748, 1.99 ) }
    dend_18 { pt3dadd( -104.098, 19.1764, 14.3884, 0.29 ) }
    dend_18 { pt3dadd( -105.224, 19.5641, 14.7537, 0.22 ) }
    dend_18 { pt3dadd( -105.794, 19.756, 14.9309, 0.66 ) }
    dend_18 { pt3dadd( -106.443, 19.977, 15.1222, 1.62 ) }
    dend_18 { pt3dadd( -107.559, 20.4136, 15.4009, 0.52 ) }
    dend_18 { pt3dadd( -108.736, 20.9481, 15.6553, 0.22 ) }
    dend_18 { pt3dadd( -109.11, 21.1458, 15.7151, 0.59 ) }
    dend_18 { pt3dadd( -109.727, 21.5072, 15.8286, 1.25 ) }
    dend_18 { pt3dadd( -110.04, 21.7047, 15.8944, 1.25 ) }
    dend_18 { pt3dadd( -111.26, 22.5168, 16.2496, 0.15 ) }
    dend_18 { pt3dadd( -112.29, 23.2236, 16.667, 0.15 ) }
    dend_18 { pt3dadd( -112.567, 23.4138, 16.8091, 0.66 ) }
    dend_18 { pt3dadd( -113.121, 23.7768, 17.142, 1.55 ) }
    dend_18 { pt3dadd( -113.627, 24.0927, 17.4764, 0.96 ) }
    dend_18 { pt3dadd( -114.779, 24.781, 18.3022, 0.15 ) }
    dend_18 { pt3dadd( -115.596, 25.2688, 18.946, 0.15 ) }
    dend_18 { pt3dadd( -116.072, 25.5912, 19.3503, 0.44 ) }
    dend_18 { pt3dadd( -116.704, 26.0617, 19.9043, 0.88 ) }
    dend_18 { pt3dadd( -117.068, 26.3625, 20.2169, 0.44 ) }
    dend_18 { pt3dadd( -117.669, 26.9288, 20.6738, 0.15 ) }
    dend_18 { pt3dadd( -118.49, 27.8075, 21.1889, 0.74 ) }
    dend_18 { pt3dadd( -119.232, 28.6639, 21.4536, 0.22 ) }
    dend_18 { pt3dadd( -119.501, 28.9861, 21.4984, 1.03 ) }
    dend_18 { pt3dadd( -119.97, 29.5621, 21.5085, 1.99 ) }
    dend_18 { pt3dadd( -121.156, 31.0527, 21.411, 0.15 ) }
    dend_18 { pt3dadd( -121.784, 31.8412, 21.2918, 1.25 ) }
    dend_18 { pt3dadd( -123.034, 33.3866, 20.9375, 0.07 ) }
    dend_18 { pt3dadd( -123.659, 34.1413, 20.7215, 0.07 ) }
    dend_18 { pt3dadd( -124.274, 34.885, 20.5023, 0.88 ) }
    dend_18 { pt3dadd( -124.749, 35.4677, 20.3254, 1.62 ) }
    dend_18 { pt3dadd( -125.061, 35.8652, 20.1929, 1.62 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 96/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 5.12393, -6.21789, 1.7, 0.88 ) }
    dend_11 { pt3dadd( 5.16306, -6.93004, 1.85025, 0.74 ) }
    dend_11 { pt3dadd( 5.16842, -7.59051, 2.00451, 0.88 ) }
    dend_11 { pt3dadd( 5.15792, -8.3301, 2.18053, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_11 { pt3dadd( 5.14248, -9.47848, 2.44604, 0.88 ) }
    dend_11 { pt3dadd( 5.12876, -10.8564, 2.7461, 0.74 ) }
    dend_11 { pt3dadd( 5.12057, -12.1615, 3.01504, 0.66 ) }
    dend_11 { pt3dadd( 5.11635, -13.3478, 3.23333, 0.96 ) }
    dend_11 { pt3dadd( 5.1282, -14.5007, 3.42264, 1.18 ) }
    dend_11 { pt3dadd( 5.18265, -15.5798, 3.58455, 1.25 ) }
    dend_11 { pt3dadd( 5.38716, -16.9931, 3.76479, 0.81 ) }
    dend_11 { pt3dadd( 5.65851, -18.0441, 3.86566, 0.74 ) }
    dend_11 { pt3dadd( 6.09971, -19.3764, 3.96888, 0.52 ) }
    dend_11 { pt3dadd( 6.3718, -20.0832, 4.02061, 1.4 ) }
    dend_11 { pt3dadd( 6.79527, -21.1044, 4.11612, 2.43 ) }
    dend_11 { pt3dadd( 7.40201, -22.5411, 4.28322, 3.1 ) }
    dend_11 { pt3dadd( 8.19976, -24.4076, 4.55559, 0.22 ) }
    dend_11 { pt3dadd( 8.46818, -25.1171, 4.67374, 0.22 ) }
    dend_11 { pt3dadd( 8.61741, -25.6127, 4.77499, 0.74 ) }
    dend_11 { pt3dadd( 8.77616, -26.3132, 4.92294, 1.25 ) }
    dend_11 { pt3dadd( 8.86473, -26.8466, 5.04083, 1.7 ) }
    dend_11 { pt3dadd( 8.99399, -27.8902, 5.2971, 1.03 ) }
    dend_11 { pt3dadd( 9.23372, -29.2569, 5.66994, 0.52 ) }
    dend_11 { pt3dadd( 9.5064, -30.2639, 5.93376, 0.22 ) }
    dend_11 { pt3dadd( 9.65787, -30.6915, 6.03572, 0.22 ) }
    dend_11 { pt3dadd( 9.85826, -31.1295, 6.13971, 0.22 ) }
    dend_11 { pt3dadd( 9.97713, -31.347, 6.19169, 0.22 ) }
    dend_11 { pt3dadd( 10.2702, -31.873, 6.29736, 0.22 ) }
    dend_11 { pt3dadd( 10.619, -32.5471, 6.40365, 0.81 ) }
    dend_11 { pt3dadd( 10.8884, -33.1947, 6.47409, 1.7 ) }
    dend_11 { pt3dadd( 11.3419, -34.3864, 6.56262, 2.88 ) }
    dend_11 { pt3dadd( 11.7603, -35.5729, 6.62101, 2.06 ) }
    dend_11 { pt3dadd( 12.2837, -37.1733, 6.69471, 1.47 ) }
    dend_11 { pt3dadd( 12.6618, -38.4205, 6.75824, 1.33 ) }
    dend_11 { pt3dadd( 13.0977, -39.9401, 6.83376, 0.22 ) }
    dend_11 { pt3dadd( 13.3405, -40.854, 6.88596, 0.15 ) }
    dend_11 { pt3dadd( 13.5393, -41.656, 6.93412, 0.29 ) }
    dend_11 { pt3dadd( 13.7978, -42.6785, 7.0113, 0.29 ) }
    dend_11 { pt3dadd( 14.0303, -43.5185, 7.0872, 1.03 ) }
    dend_11 { pt3dadd( 14.2021, -44.145, 7.14938, 1.99 ) }
    dend_11 { pt3dadd( 14.471, -45.2122, 7.25714, 2.21 ) }
    dend_11 { pt3dadd( 14.728, -46.4526, 7.40234, 0.37 ) }
    dend_11 { pt3dadd( 14.9208, -47.4584, 7.51531, 0.15 ) }
    dend_11 { pt3dadd( 14.9908, -47.8674, 7.55504, 0.15 ) }
    dend_11 { pt3dadd( 15.1252, -48.7302, 7.63768, 0.22 ) }
    dend_11 { pt3dadd( 15.265, -49.6421, 7.73347, 0.37 ) }
    dend_11 { pt3dadd( 15.3887, -50.4642, 7.84135, 0.96 ) }
    dend_11 { pt3dadd( 15.4783, -51.1797, 7.94475, 1.7 ) }
    dend_11 { pt3dadd( 15.5587, -51.9027, 8.05476, 1.99 ) }
    dend_11 { pt3dadd( 15.67, -52.8201, 8.19339, 1.7 ) }
    dend_11 { pt3dadd( 15.9758, -54.8522, 8.47359, 0.37 ) }
    dend_11 { pt3dadd( 16.1521, -55.9511, 8.61188, 0.22 ) }
    dend_11 { pt3dadd( 16.2761, -56.6342, 8.68073, 0.22 ) }
    dend_11 { pt3dadd( 16.412, -57.2832, 8.76584, 0.22 ) }
    dend_11 { pt3dadd( 16.6002, -58.0686, 8.90689, 0.37 ) }
    dend_11 { pt3dadd( 16.7408, -58.6256, 9.03172, 1.03 ) }
    dend_11 { pt3dadd( 16.8985, -59.2142, 9.18808, 1.77 ) }
    dend_11 { pt3dadd( 17.1725, -60.2058, 9.4446, 0.88 ) }
    dend_11 { pt3dadd( 17.5158, -61.4193, 9.7962, 0.29 ) }
    dend_11 { pt3dadd( 17.761, -62.2765, 10.0721, 0.52 ) }
    dend_11 { pt3dadd( 17.937, -62.879, 10.2866, 1.03 ) }
    dend_11 { pt3dadd( 18.2265, -63.8665, 10.6745, 1.55 ) }
    dend_11 { pt3dadd( 18.5761, -65.1079, 11.181, 0.88 ) }
    dend_11 { pt3dadd( 18.8437, -66.1317, 11.6227, 0.22 ) }
    dend_11 { pt3dadd( 18.965, -66.6305, 11.8259, 0.22 ) }
    dend_11 { pt3dadd( 19.0328, -66.9345, 11.9454, 0.22 ) }
    dend_11 { pt3dadd( 19.1524, -67.5477, 12.1987, 0.29 ) }
    dend_11 { pt3dadd( 19.2882, -68.3773, 12.5374, 0.52 ) }
    dend_11 { pt3dadd( 19.3409, -68.8033, 12.6986, 1.18 ) }
    dend_11 { pt3dadd( 19.4186, -69.6308, 12.9585, 1.33 ) }
    dend_11 { pt3dadd( 19.5099, -70.6786, 13.2429, 0.59 ) }
    dend_11 { pt3dadd( 19.6139, -71.6269, 13.4644, 0.22 ) }
    dend_11 { pt3dadd( 19.6989, -72.3355, 13.6143, 0.22 ) }
    dend_11 { pt3dadd( 19.7696, -72.8379, 13.7153, 0.59 ) }
    dend_11 { pt3dadd( 19.9203, -73.7838, 13.8951, 0.29 ) }
    dend_11 { pt3dadd( 20.0888, -74.6563, 14.0693, 1.18 ) }
    dend_11 { pt3dadd( 20.3114, -75.622, 14.2524, 2.88 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 73/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.70607, -8.89914, 3.08, 0.66 ) }
    dend_0 { pt3dadd( -1.70607, -8.89914, 3.08, 0.66 ) }
    dend_0 { pt3dadd( -1.51163, -9.68561, 3.08545, 0.66 ) }
    dend_0 { pt3dadd( -1.29322, -10.826, 3.0342, 0.88 ) }
    dend_0 { pt3dadd( -1.13694, -11.9953, 2.95541, 1.03 ) }
    dend_0 { pt3dadd( -0.991916, -13.6027, 2.83206, 0.81 ) }
    dend_0 { pt3dadd( -0.925076, -15.1001, 2.71559, 0.96 ) }
    dend_0 { pt3dadd( -0.977326, -16.2607, 2.62347, 1.33 ) }
    dend_0 { pt3dadd( -1.23505, -17.6807, 2.54028, 1.77 ) }
    dend_0 { pt3dadd( -1.6572, -18.9216, 2.51932, 2.21 ) }
    dend_0 { pt3dadd( -2.02446, -19.6691, 2.54999, 2.58 ) }
    dend_0 { pt3dadd( -3.02389, -21.2284, 2.74996, 2.73 ) }
    dend_0 { pt3dadd( -4.18195, -22.6982, 3.10677, 0.81 ) }
    dend_0 { pt3dadd( -5.54382, -24.2579, 3.59245, 0.52 ) }
    dend_0 { pt3dadd( -6.55244, -25.3, 4.01939, 0.59 ) }
    dend_0 { pt3dadd( -7.21723, -25.9138, 4.32231, 1.25 ) }
    dend_0 { pt3dadd( -8.16068, -26.688, 4.78752, 2.73 ) }
    dend_0 { pt3dadd( -9.19333, -27.3873, 5.36248, 3.24 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 91/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 7.65417, 5.09354, 0.0, 0.686328 ) }
    axon_0 { pt3dadd( 20.5808, 12.7029, 0.0, 0.686328 ) }
    axon_0 { pt3dadd( 33.5074, 20.3123, 0.0, 0.686328 ) }
    // Section: dend_98, id: dend_98, parent: dend_94 (entry count 94/100)
    dend_98 { pt3dclear() }
    dend_98 { pt3dadd( -5.72607, 3.65886, -15.4, 0.74 ) }
    dend_98 { pt3dadd( -7.22337, 3.86426, -15.5229, 0.74 ) }
    dend_98 { pt3dadd( -7.92327, 4.0267, -15.6907, 0.81 ) }
    dend_98 { pt3dadd( -8.85801, 4.29518, -16.0704, 0.74 ) }
    dend_98 { pt3dadd( -9.80183, 4.56626, -16.4538, 0.96 ) }
    dend_98 { pt3dadd( -10.8137, 4.85691, -16.8648, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_98 { pt3dadd( -12.0324, 5.20696, -17.3598, 1.03 ) }
    dend_98 { pt3dadd( -13.0209, 5.63065, -17.8839, 1.47 ) }
    dend_98 { pt3dadd( -14.1336, 6.2071, -18.6095, 2.29 ) }
    // Section: dend_95, id: dend_95, parent: dend_94 (entry count 3/100)
    dend_95 { pt3dclear() }
    dend_95 { pt3dadd( -5.72607, 3.65886, -15.4, 0.37 ) }
    dend_95 { pt3dadd( -5.48869, 4.68853, -15.2352, 0.37 ) }
    dend_95 { pt3dadd( -5.54642, 5.62356, -15.0956, 0.22 ) }
    dend_95 { pt3dadd( -5.71753, 6.35101, -15.0048, 0.22 ) }
    dend_95 { pt3dadd( -5.96733, 7.2494, -14.9409, 0.66 ) }
    dend_95 { pt3dadd( -6.03569, 7.50332, -14.9425, 0.66 ) }
    dend_95 { pt3dadd( -6.29767, 8.50161, -14.9873, 0.96 ) }
    dend_95 { pt3dadd( -6.57773, 9.42464, -15.0993, 0.52 ) }
    dend_95 { pt3dadd( -6.83867, 10.3165, -15.2692, 0.81 ) }
    dend_95 { pt3dadd( -6.99053, 11.0684, -15.4696, 0.88 ) }
    dend_95 { pt3dadd( -7.02431, 12.1545, -15.8341, 0.81 ) }
    dend_95 { pt3dadd( -6.91035, 12.9007, -16.1335, 0.22 ) }
    dend_95 { pt3dadd( -6.71895, 13.5329, -16.4183, 0.29 ) }
    dend_95 { pt3dadd( -6.46946, 14.2444, -16.7761, 0.37 ) }
    dend_95 { pt3dadd( -6.29274, 14.9278, -17.1396, 0.15 ) }
    dend_95 { pt3dadd( -6.30673, 15.4033, -17.386, 0.22 ) }
    dend_95 { pt3dadd( -6.45885, 15.9494, -17.6632, 0.22 ) }
    dend_95 { pt3dadd( -6.72901, 16.7286, -18.0284, 0.52 ) }
    dend_95 { pt3dadd( -6.98068, 17.5109, -18.3404, 0.37 ) }
    dend_95 { pt3dadd( -7.20836, 18.3126, -18.6331, 0.44 ) }
    dend_95 { pt3dadd( -7.52475, 19.6099, -19.0603, 0.37 ) }
    dend_95 { pt3dadd( -7.62418, 20.1567, -19.2349, 0.37 ) }
    dend_95 { pt3dadd( -7.78313, 21.3341, -19.6078, 0.52 ) }
    dend_95 { pt3dadd( -7.90902, 22.474, -19.9492, 0.59 ) }
    dend_95 { pt3dadd( -8.08076, 23.9569, -20.3494, 0.44 ) }
    dend_95 { pt3dadd( -8.26093, 24.9922, -20.599, 0.29 ) }
    dend_95 { pt3dadd( -8.51215, 25.9124, -20.7751, 0.22 ) }
    dend_95 { pt3dadd( -8.83208, 26.5894, -20.8843, 0.88 ) }
    dend_95 { pt3dadd( -9.33107, 27.338, -20.996, 0.29 ) }
    dend_95 { pt3dadd( -9.90493, 27.9666, -21.0724, 0.66 ) }
    dend_95 { pt3dadd( -10.9355, 28.7978, -21.0976, 0.22 ) }
    dend_95 { pt3dadd( -11.4309, 29.1116, -21.0822, 0.22 ) }
    dend_95 { pt3dadd( -12.1481, 29.4942, -21.0028, 0.59 ) }
    dend_95 { pt3dadd( -15.3964, 38.714, -21.1742, 0.59 ) }
    dend_95 { pt3dadd( -17.4124, 48.045, -23.259, 0.59 ) }
    dend_95 { pt3dadd( -18.4232, 57.742, -23.5057, 0.59 ) }
    dend_95 { pt3dadd( -18.3058, 67.3363, -25.2819, 0.59 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 40/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -5.63607, -7.59264, -9.19, 1.03 ) }
    dend_45 { pt3dadd( -6.73007, -8.96302, -9.13529, 1.03 ) }
    dend_45 { pt3dadd( -7.41613, -9.93012, -9.04832, 0.88 ) }
    dend_45 { pt3dadd( -8.12266, -10.926, -8.95876, 1.33 ) }
    dend_45 { pt3dadd( -8.76761, -11.8352, -8.877, 1.92 ) }
    dend_45 { pt3dadd( -9.53063, -12.9107, -8.78027, 2.29 ) }
    dend_45 { pt3dadd( -10.602, -14.421, -8.64446, 1.7 ) }
    dend_45 { pt3dadd( -11.3162, -15.6107, -8.51806, 1.47 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 48/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -5.63607, -7.59264, -9.19, 0.37 ) }
    dend_44 { pt3dadd( -4.94003, -8.74588, -9.03094, 0.37 ) }
    dend_44 { pt3dadd( -4.49317, -9.38424, -8.94759, 0.59 ) }
    dend_44 { pt3dadd( -4.12537, -9.83314, -8.91226, 0.52 ) }
    dend_44 { pt3dadd( -3.34854, -10.6111, -8.89947, 0.37 ) }
    dend_44 { pt3dadd( -2.41465, -11.2922, -8.95011, 0.37 ) }
    dend_44 { pt3dadd( -1.66726, -11.7511, -9.03958, 0.37 ) }
    dend_44 { pt3dadd( -1.22732, -11.962, -9.12137, 0.88 ) }
    dend_44 { pt3dadd( -0.332886, -12.3406, -9.31788, 1.4 ) }
    dend_44 { pt3dadd( 0.642655, -12.7178, -9.544, 1.18 ) }
    dend_44 { pt3dadd( 2.61511, -13.5058, -10.0213, 0.37 ) }
    dend_44 { pt3dadd( 4.20853, -14.2282, -10.4182, 0.22 ) }
    dend_44 { pt3dadd( 4.92912, -14.613, -10.5867, 0.81 ) }
    dend_44 { pt3dadd( 5.84377, -15.1929, -10.773, 1.92 ) }
    dend_44 { pt3dadd( 7.75361, -16.7126, -11.1191, 0.59 ) }
    dend_44 { pt3dadd( 8.71035, -17.7041, -11.2916, 0.66 ) }
    dend_44 { pt3dadd( 9.26422, -18.4846, -11.3918, 0.52 ) }
    dend_44 { pt3dadd( 9.824, -19.55, -11.5131, 0.59 ) }
    dend_44 { pt3dadd( 10.1686, -20.4307, -11.6151, 0.44 ) }
    dend_44 { pt3dadd( 10.5333, -21.6256, -11.791, 0.44 ) }
    dend_44 { pt3dadd( 10.7364, -22.3995, -11.9154, 0.44 ) }
    dend_44 { pt3dadd( 10.9481, -23.076, -12.048, 0.66 ) }
    dend_44 { pt3dadd( 11.4901, -24.4439, -12.3688, 1.03 ) }
    dend_44 { pt3dadd( 12.218, -25.8872, -12.7601, 0.74 ) }
    dend_44 { pt3dadd( 13.0444, -27.0912, -13.1062, 0.59 ) }
    dend_44 { pt3dadd( 13.815, -27.9628, -13.3526, 0.44 ) }
    dend_44 { pt3dadd( 14.4215, -28.5362, -13.5097, 0.81 ) }
    dend_44 { pt3dadd( 15.0006, -29.0005, -13.6392, 1.47 ) }
    dend_44 { pt3dadd( 15.5969, -29.4154, -13.7548, 1.47 ) }
    dend_44 { pt3dadd( 17.4045, -30.5292, -14.1012, 0.29 ) }
    dend_44 { pt3dadd( 18.4529, -31.1339, -14.2821, 0.37 ) }
    dend_44 { pt3dadd( 19.3121, -31.6146, -14.4278, 0.29 ) }
    dend_44 { pt3dadd( 19.8304, -31.9104, -14.4937, 0.15 ) }
    dend_44 { pt3dadd( 26.8462, -38.6758, -16.1152, 0.15 ) }
    dend_44 { pt3dadd( 34.2653, -44.9424, -18.0252, 0.15 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 83/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 15.323, 3.32315, 3.21255, 0.88 ) }
    dend_34 { pt3dadd( 15.6228, 2.20176, 4.1528, 0.88 ) }
    dend_34 { pt3dadd( 15.767, 1.22448, 4.94008, 0.44 ) }
    dend_34 { pt3dadd( 15.8251, 0.668646, 5.36497, 0.44 ) }
    dend_34 { pt3dadd( 15.8998, 0.0125485, 5.83879, 0.59 ) }
    dend_34 { pt3dadd( 15.9897, -0.574606, 6.24246, 0.44 ) }
    dend_34 { pt3dadd( 16.1637, -1.30761, 6.69625, 0.29 ) }
    dend_34 { pt3dadd( 16.2846, -1.67526, 6.89297, 0.29 ) }
    dend_34 { pt3dadd( 16.6169, -2.21474, 7.13072, 0.52 ) }
    dend_34 { pt3dadd( 16.9569, -2.55963, 7.26882, 0.96 ) }
    dend_34 { pt3dadd( 17.4803, -2.93407, 7.41183, 1.92 ) }
    dend_34 { pt3dadd( 18.6133, -3.52694, 7.61089, 2.8 ) }
    dend_34 { pt3dadd( 20.0124, -4.06617, 7.77604, 1.18 ) }
    dend_34 { pt3dadd( 21.082, -4.41803, 7.88765, 0.29 ) }
    dend_34 { pt3dadd( 21.6591, -4.57209, 7.93693, 0.29 ) }
    dend_34 { pt3dadd( 22.2333, -4.69138, 7.97949, 0.74 ) }
    dend_34 { pt3dadd( 23.1446, -4.80133, 8.02477, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_34 { pt3dadd( 23.8344, -4.78096, 8.03917, 1.84 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 1/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 15.323, 3.32315, 3.21255, 0.44 ) }
    dend_31 { pt3dadd( 16.1612, 3.63476, 2.45821, 0.44 ) }
    dend_31 { pt3dadd( 16.4404, 3.73575, 2.09197, 0.44 ) }
    dend_31 { pt3dadd( 16.7571, 3.77411, 1.63906, 0.44 ) }
    dend_31 { pt3dadd( 17.0772, 3.77704, 1.21182, 0.44 ) }
    dend_31 { pt3dadd( 17.5425, 3.78762, 0.587945, 0.52 ) }
    dend_31 { pt3dadd( 18.1276, 3.82134, -0.203857, 0.37 ) }
    dend_31 { pt3dadd( 19.0353, 3.92148, -1.4546, 1.4 ) }
    dend_31 { pt3dadd( 19.9406, 4.02112, -2.66988, 2.29 ) }
    dend_31 { pt3dadd( 21.1246, 4.07611, -4.06897, 0.22 ) }
    dend_31 { pt3dadd( 21.4465, 4.06697, -4.42177, 0.22 ) }
    dend_31 { pt3dadd( 21.7399, 4.02659, -4.71799, 0.22 ) }
    dend_31 { pt3dadd( 22.2549, 3.93912, -5.10588, 0.37 ) }
    dend_31 { pt3dadd( 22.6745, 3.85914, -5.35046, 0.37 ) }
    dend_31 { pt3dadd( 24.0327, 3.59835, -6.02172, 0.22 ) }
    dend_31 { pt3dadd( 24.9537, 3.41337, -6.39439, 0.74 ) }
    dend_31 { pt3dadd( 26.1527, 3.18039, -6.83705, 2.36 ) }
    dend_31 { pt3dadd( 28.3125, 2.77396, -7.57785, 0.15 ) }
    dend_31 { pt3dadd( 28.8307, 2.68023, -7.74894, 1.11 ) }
    dend_31 { pt3dadd( 29.1699, 2.62128, -7.86919, 1.62 ) }
    dend_31 { pt3dadd( 30.8706, 2.34549, -8.5403, 0.15 ) }
    dend_31 { pt3dadd( 31.7854, 2.21726, -8.91704, 0.15 ) }
    dend_31 { pt3dadd( 32.1423, 2.17604, -9.08508, 0.59 ) }
    dend_31 { pt3dadd( 32.4594, 2.12301, -9.29246, 0.59 ) }
    dend_31 { pt3dadd( 33.4265, 1.93076, -10.0907, 0.22 ) }
    dend_31 { pt3dadd( 34.0645, 1.7914, -10.6941, 0.37 ) }
    dend_31 { pt3dadd( 34.4123, 1.71207, -11.0791, 0.59 ) }
    dend_31 { pt3dadd( 34.7374, 1.66251, -11.4208, 0.22 ) }
    dend_31 { pt3dadd( 35.4297, 1.61281, -12.046, 0.15 ) }
    dend_31 { pt3dadd( 36.2292, 1.58883, -12.6987, 0.15 ) }
    dend_31 { pt3dadd( 36.7345, 1.59024, -13.049, 0.66 ) }
    dend_31 { pt3dadd( 37.2446, 1.58796, -13.3788, 1.47 ) }
    dend_31 { pt3dadd( 38.0595, 1.56767, -13.9307, 1.11 ) }
    dend_31 { pt3dadd( 39.4246, 1.55998, -14.8668, 0.22 ) }
    dend_31 { pt3dadd( 46.2809, -0.96095, -21.6716, 0.22 ) }
    dend_31 { pt3dadd( 53.6785, -3.22415, -27.9873, 0.22 ) }
    dend_31 { pt3dadd( 61.2418, -6.07367, -33.84, 0.22 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 38/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -3.3364, 17.371, 16.1793, 0.29 ) }
    dend_27 { pt3dadd( -4.96373, 18.1184, 17.5999, 0.29 ) }
    dend_27 { pt3dadd( -6.0867, 18.7381, 18.6138, 0.15 ) }
    dend_27 { pt3dadd( -6.60479, 19.0839, 19.1341, 0.96 ) }
    dend_27 { pt3dadd( -7.13532, 19.5064, 19.731, 2.06 ) }
    dend_27 { pt3dadd( -8.28974, 20.6102, 21.1965, 0.22 ) }
    dend_27 { pt3dadd( -8.5884, 20.9976, 21.6731, 0.37 ) }
    dend_27 { pt3dadd( -8.71368, 21.3018, 22.0129, 0.37 ) }
    dend_27 { pt3dadd( -8.88568, 21.9895, 22.7561, 0.29 ) }
    dend_27 { pt3dadd( -9.00853, 22.733, 23.5524, 1.99 ) }
    dend_27 { pt3dadd( -9.0525, 23.2498, 24.1138, 2.06 ) }
    dend_27 { pt3dadd( -9.12522, 24.6712, 25.7206, 0.15 ) }
    dend_27 { pt3dadd( -9.20254, 25.6735, 26.8659, 0.15 ) }
    dend_27 { pt3dadd( -9.26055, 26.2069, 27.4747, 1.18 ) }
    dend_27 { pt3dadd( -9.31747, 26.6558, 27.9775, 2.14 ) }
    dend_27 { pt3dadd( -9.50472, 27.9554, 29.4498, 0.15 ) }
    dend_27 { pt3dadd( -9.64219, 28.673, 30.2542, 0.44 ) }
    dend_27 { pt3dadd( -9.82043, 29.3836, 31.0479, 0.15 ) }
    dend_27 { pt3dadd( -9.99473, 30.0249, 31.7668, 0.29 ) }
    dend_27 { pt3dadd( -10.1544, 30.5769, 32.4345, 0.44 ) }
    dend_27 { pt3dadd( -10.3308, 31.157, 33.1959, 1.03 ) }
    dend_27 { pt3dadd( -10.4605, 31.5664, 33.7751, 1.7 ) }
    dend_27 { pt3dadd( -10.7772, 32.6628, 35.4492, 0.15 ) }
    dend_27 { pt3dadd( -10.9146, 33.1818, 36.3139, 0.22 ) }
    dend_27 { pt3dadd( -11.0357, 33.8412, 37.4736, 0.15 ) }
    dend_27 { pt3dadd( -11.0975, 34.3209, 38.3632, 0.52 ) }
    dend_27 { pt3dadd( -11.1496, 34.8635, 39.4515, 0.88 ) }
    dend_27 { pt3dadd( -11.1976, 35.5162, 40.9168, 1.25 ) }
    dend_27 { pt3dadd( -11.2222, 35.9183, 41.8789, 1.62 ) }
    dend_27 { pt3dadd( -11.293, 36.7536, 43.8927, 0.15 ) }
    dend_27 { pt3dadd( -11.3539, 37.1352, 44.819, 0.22 ) }
    dend_27 { pt3dadd( -11.4865, 37.6769, 46.1131, 0.22 ) }
    dend_27 { pt3dadd( -11.5869, 38.0062, 46.8688, 0.37 ) }
    dend_27 { pt3dadd( -11.7176, 38.417, 47.7515, 0.88 ) }
    dend_27 { pt3dadd( -11.8166, 38.7005, 48.3477, 1.4 ) }
    dend_27 { pt3dadd( -12.164, 39.5625, 50.1345, 0.37 ) }
    dend_27 { pt3dadd( -12.4624, 40.3834, 51.6878, 0.22 ) }
    dend_27 { pt3dadd( -12.6567, 40.999, 52.7366, 0.88 ) }
    dend_27 { pt3dadd( -12.8122, 41.5173, 53.5742, 1.7 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 77/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -3.3364, 17.371, 16.1793, 0.22 ) }
    dend_26 { pt3dadd( -2.96488, 18.4405, 15.2949, 0.22 ) }
    dend_26 { pt3dadd( -2.61631, 19.523, 14.4751, 0.15 ) }
    dend_26 { pt3dadd( -2.39889, 20.1696, 14.0477, 0.15 ) }
    dend_26 { pt3dadd( -2.15346, 20.8717, 13.6259, 0.44 ) }
    dend_26 { pt3dadd( -1.73709, 22.0266, 12.9899, 0.15 ) }
    dend_26 { pt3dadd( -1.48679, 22.6942, 12.6496, 0.66 ) }
    dend_26 { pt3dadd( -1.24854, 23.3361, 12.3752, 1.7 ) }
    dend_26 { pt3dadd( -0.849696, 24.3529, 12.0142, 0.22 ) }
    dend_26 { pt3dadd( -0.441498, 25.3575, 11.6781, 0.22 ) }
    dend_26 { pt3dadd( -0.20662, 25.9318, 11.4877, 0.44 ) }
    dend_26 { pt3dadd( 0.0234552, 26.4838, 11.3246, 0.81 ) }
    dend_26 { pt3dadd( 0.213302, 26.9517, 11.1867, 0.37 ) }
    dend_26 { pt3dadd( 0.675705, 28.214, 10.7976, 0.22 ) }
    dend_26 { pt3dadd( 0.847524, 28.7818, 10.6223, 0.59 ) }
    dend_26 { pt3dadd( 0.953468, 29.1869, 10.5069, 1.18 ) }
    dend_26 { pt3dadd( 1.13154, 29.9992, 10.3386, 1.11 ) }
    dend_26 { pt3dadd( 1.49743, 31.8725, 10.0525, 0.22 ) }
    dend_26 { pt3dadd( 1.63016, 32.5983, 9.9772, 0.66 ) }
    dend_26 { pt3dadd( 1.77653, 33.3873, 9.93389, 1.7 ) }
    dend_26 { pt3dadd( 1.91019, 34.123, 9.91189, 1.62 ) }
    dend_26 { pt3dadd( 2.42439, 36.9704, 9.87854, 0.15 ) }
    dend_26 { pt3dadd( 2.51514, 37.4759, 9.88526, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_26 { pt3dadd( 2.62797, 38.052, 9.90845, 0.22 ) }
    dend_26 { pt3dadd( 2.76207, 38.657, 9.92914, 0.07 ) }
    dend_26 { pt3dadd( 2.94726, 39.4272, 9.94573, 0.07 ) }
    dend_26 { pt3dadd( 3.07178, 39.9332, 9.94462, 0.37 ) }
    dend_26 { pt3dadd( 3.23724, 40.5311, 9.91884, 0.22 ) }
    dend_26 { pt3dadd( 3.62378, 41.8322, 9.85762, 0.15 ) }
    dend_26 { pt3dadd( 3.86506, 42.6044, 9.81506, 0.44 ) }
    dend_26 { pt3dadd( 4.12534, 43.4056, 9.76707, 0.81 ) }
    dend_26 { pt3dadd( 4.49527, 44.4624, 9.69508, 1.84 ) }
    dend_26 { pt3dadd( 5.26144, 46.6192, 9.56331, 0.07 ) }
    dend_26 { pt3dadd( 5.52288, 47.3495, 9.5318, 0.29 ) }
    dend_26 { pt3dadd( 6.0436, 48.7972, 9.49584, 0.07 ) }
    dend_26 { pt3dadd( 6.1866, 49.197, 9.4953, 0.66 ) }
    dend_26 { pt3dadd( 6.42989, 49.8904, 9.51617, 1.33 ) }
    dend_26 { pt3dadd( 6.95305, 51.4592, 9.63009, 0.07 ) }
    dend_26 { pt3dadd( 7.18515, 52.2304, 9.72515, 0.07 ) }
    dend_26 { pt3dadd( 7.28189, 52.5755, 9.77784, 0.22 ) }
    dend_26 { pt3dadd( 7.45979, 53.2382, 9.90172, 0.74 ) }
    dend_26 { pt3dadd( 7.58672, 53.7278, 9.99873, 1.55 ) }
    dend_26 { pt3dadd( 8.07227, 55.6571, 10.4076, 0.07 ) }
    dend_26 { pt3dadd( 8.18763, 56.0876, 10.4963, 0.22 ) }
    dend_26 { pt3dadd( 8.38364, 56.8092, 10.6316, 0.07 ) }
    dend_26 { pt3dadd( 8.5902, 57.5558, 10.7638, 1.03 ) }
    // Section: dend_24, id: dend_24, parent: dend_18 (entry count 23/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -125.061, 35.8652, 20.1929, 0.15 ) }
    dend_24 { pt3dadd( -125.41, 37.742, 20.8504, 0.15 ) }
    dend_24 { pt3dadd( -125.593, 38.7305, 21.1967, 0.66 ) }
    dend_24 { pt3dadd( -125.684, 39.219, 21.3678, 0.66 ) }
    dend_24 { pt3dadd( -125.919, 40.4884, 21.8125, 0.07 ) }
    dend_24 { pt3dadd( -126.032, 41.0942, 22.0248, 0.29 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 29/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -125.061, 35.8652, 20.1929, 0.07 ) }
    dend_19 { pt3dadd( -126.003, 36.6134, 19.8976, 0.07 ) }
    dend_19 { pt3dadd( -126.813, 37.2501, 19.6972, 0.07 ) }
    dend_19 { pt3dadd( -127.285, 37.6032, 19.63, 0.52 ) }
    dend_19 { pt3dadd( -127.81, 37.9951, 19.5939, 1.11 ) }
    dend_19 { pt3dadd( -129.378, 39.2193, 19.5725, 0.07 ) }
    dend_19 { pt3dadd( -129.69, 39.4782, 19.5795, 0.07 ) }
    dend_19 { pt3dadd( -130.224, 39.9682, 19.6713, 0.52 ) }
    dend_19 { pt3dadd( -130.948, 40.6799, 19.8773, 0.15 ) }
    dend_19 { pt3dadd( -131.423, 41.1733, 20.0445, 0.22 ) }
    dend_19 { pt3dadd( -131.83, 41.6094, 20.2097, 0.59 ) }
    dend_19 { pt3dadd( -132.179, 41.9657, 20.3615, 0.59 ) }
    dend_19 { pt3dadd( -132.88, 42.6143, 20.6661, 0.15 ) }
    dend_19 { pt3dadd( -133.271, 42.9206, 20.8206, 0.22 ) }
    dend_19 { pt3dadd( -133.741, 43.2195, 20.9742, 0.66 ) }
    dend_19 { pt3dadd( -134.193, 43.4588, 21.1031, 1.62 ) }
    dend_19 { pt3dadd( -134.847, 43.7695, 21.2863, 1.62 ) }
    dend_19 { pt3dadd( -136.217, 44.4079, 21.661, 0.22 ) }
    dend_19 { pt3dadd( -136.961, 44.7328, 21.8573, 0.22 ) }
    dend_19 { pt3dadd( -137.606, 45.0105, 22.0299, 0.22 ) }
    dend_19 { pt3dadd( -138.316, 45.321, 22.2184, 0.22 ) }
    dend_19 { pt3dadd( -139.145, 45.7055, 22.4503, 0.22 ) }
    dend_19 { pt3dadd( -139.895, 46.1131, 22.6629, 1.77 ) }
    // Section: dend_17, id: dend_17, parent: dend_11 (entry count 52/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 20.3114, -75.622, 14.2524, 0.22 ) }
    dend_17 { pt3dadd( 21.4256, -77.1781, 15.0349, 0.22 ) }
    dend_17 { pt3dadd( 22.4095, -78.6116, 15.7725, 0.22 ) }
    dend_17 { pt3dadd( 22.7257, -79.1181, 16.035, 0.66 ) }
    dend_17 { pt3dadd( 23.051, -79.6792, 16.3207, 0.88 ) }
    dend_17 { pt3dadd( 23.4334, -80.4428, 16.702, 0.22 ) }
    dend_17 { pt3dadd( 23.8006, -81.2629, 17.1014, 0.07 ) }
    dend_17 { pt3dadd( 24.0008, -81.8731, 17.378, 0.15 ) }
    dend_17 { pt3dadd( 24.2069, -82.6524, 17.7174, 0.07 ) }
    dend_17 { pt3dadd( 24.328, -83.1623, 17.9483, 0.15 ) }
    dend_17 { pt3dadd( 24.5965, -84.4511, 18.5366, 0.07 ) }
    dend_17 { pt3dadd( 24.6914, -84.9902, 18.763, 0.52 ) }
    dend_17 { pt3dadd( 24.7754, -85.6268, 18.9981, 0.88 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 65/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 20.3114, -75.622, 14.2524, 2.8 ) }
    dend_12 { pt3dadd( 20.9575, -76.7763, 14.3663, 2.8 ) }
    dend_12 { pt3dadd( 21.8005, -78.3342, 14.5752, 0.37 ) }
    dend_12 { pt3dadd( 22.2378, -79.2108, 14.7112, 0.22 ) }
    dend_12 { pt3dadd( 22.8154, -80.5016, 14.9172, 0.22 ) }
    dend_12 { pt3dadd( 23.1446, -81.3501, 15.0747, 0.22 ) }
    dend_12 { pt3dadd( 23.4101, -82.1209, 15.235, 0.29 ) }
    dend_12 { pt3dadd( 23.5846, -82.7311, 15.3845, 0.88 ) }
    dend_12 { pt3dadd( 23.822, -83.6828, 15.6549, 0.96 ) }
    dend_12 { pt3dadd( 24.0213, -84.5652, 15.9084, 0.52 ) }
    dend_12 { pt3dadd( 24.3198, -86.0116, 16.3118, 0.37 ) }
    dend_12 { pt3dadd( 24.5092, -86.8925, 16.5304, 0.81 ) }
    dend_12 { pt3dadd( 24.7135, -87.6546, 16.7199, 0.44 ) }
    dend_12 { pt3dadd( 25.0792, -88.8063, 17.0385, 0.29 ) }
    dend_12 { pt3dadd( 25.3429, -89.5535, 17.2789, 0.88 ) }
    dend_12 { pt3dadd( 25.6006, -90.2593, 17.5443, 1.92 ) }
    dend_12 { pt3dadd( 25.9587, -91.2867, 17.9576, 2.06 ) }
    dend_12 { pt3dadd( 26.4867, -92.9122, 18.6275, 0.29 ) }
    dend_12 { pt3dadd( 26.8224, -94.0701, 19.1136, 0.37 ) }
    dend_12 { pt3dadd( 27.0926, -95.092, 19.5124, 0.29 ) }
    dend_12 { pt3dadd( 27.3244, -95.9851, 19.8326, 0.37 ) }
    dend_12 { pt3dadd( 27.6622, -97.2901, 20.1929, 0.37 ) }
    dend_12 { pt3dadd( 27.983, -98.6089, 20.4383, 0.29 ) }
    dend_12 { pt3dadd( 28.0889, -99.108, 20.4635, 0.88 ) }
    dend_12 { pt3dadd( 28.3246, -100.236, 20.3779, 1.84 ) }
    dend_12 { pt3dadd( 28.4715, -100.904, 20.262, 2.06 ) }
    dend_12 { pt3dadd( 28.8946, -102.683, 19.8074, 0.29 ) }
    dend_12 { pt3dadd( 29.0856, -103.467, 19.5662, 0.37 ) }
    dend_12 { pt3dadd( 29.2755, -104.245, 19.313, 0.22 ) }
    dend_12 { pt3dadd( 29.4284, -104.82, 19.1321, 0.22 ) }
    dend_12 { pt3dadd( 29.64, -105.54, 18.9377, 0.37 ) }
    dend_12 { pt3dadd( 29.9695, -106.457, 18.7432, 0.29 ) }
    dend_12 { pt3dadd( 30.1082, -106.8, 18.6974, 1.03 ) }
    dend_12 { pt3dadd( 30.4022, -107.477, 18.6539, 1.62 ) }
    dend_12 { pt3dadd( 30.6774, -108.097, 18.6527, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_12 { pt3dadd( 31.2278, -109.332, 18.6981, 0.81 ) }
    dend_12 { pt3dadd( 31.7354, -110.497, 18.7826, 0.22 ) }
    dend_12 { pt3dadd( 32.2371, -111.633, 18.9532, 0.22 ) }
    dend_12 { pt3dadd( 32.7436, -112.807, 19.1924, 0.22 ) }
    dend_12 { pt3dadd( 32.904, -113.19, 19.2889, 1.03 ) }
    dend_12 { pt3dadd( 33.1898, -113.888, 19.4955, 2.14 ) }
    dend_12 { pt3dadd( 33.5999, -114.924, 19.8394, 1.4 ) }
    dend_12 { pt3dadd( 34.2215, -116.449, 20.3959, 0.22 ) }
    dend_12 { pt3dadd( 34.6068, -117.361, 20.7458, 0.29 ) }
    dend_12 { pt3dadd( 34.9062, -118.061, 21.0191, 0.66 ) }
    dend_12 { pt3dadd( 35.1398, -118.59, 21.2096, 0.66 ) }
    dend_12 { pt3dadd( 35.5286, -119.414, 21.475, 0.22 ) }
    dend_12 { pt3dadd( 36.0616, -120.434, 21.7662, 0.22 ) }
    dend_12 { pt3dadd( 36.3127, -120.889, 21.8787, 0.74 ) }
    dend_12 { pt3dadd( 36.6733, -121.507, 22.0406, 1.62 ) }
    dend_12 { pt3dadd( 37.2039, -122.44, 22.2939, 0.96 ) }
    dend_12 { pt3dadd( 37.8199, -123.637, 22.6387, 0.22 ) }
    dend_12 { pt3dadd( 38.1331, -124.336, 22.8493, 0.15 ) }
    dend_12 { pt3dadd( 38.2646, -124.716, 22.9603, 0.15 ) }
    dend_12 { pt3dadd( 38.347, -124.997, 23.0445, 0.44 ) }
    dend_12 { pt3dadd( 38.4675, -125.521, 23.2026, 0.66 ) }
    dend_12 { pt3dadd( 38.6118, -126.356, 23.4507, 0.15 ) }
    dend_12 { pt3dadd( 38.6769, -126.8, 23.5909, 0.15 ) }
    dend_12 { pt3dadd( 38.7607, -127.311, 23.7548, 0.29 ) }
    dend_12 { pt3dadd( 38.8687, -127.814, 23.9348, 0.29 ) }
    dend_12 { pt3dadd( 39.1192, -128.741, 24.2883, 0.07 ) }
    dend_12 { pt3dadd( 39.1996, -129.0, 24.3859, 0.44 ) }
    dend_12 { pt3dadd( 39.4725, -129.846, 24.7012, 1.18 ) }
    dend_12 { pt3dadd( 39.6506, -130.466, 24.9321, 2.06 ) }
    dend_12 { pt3dadd( 39.8308, -131.162, 25.1826, 1.55 ) }
    dend_12 { pt3dadd( 40.2259, -132.8, 25.7434, 0.44 ) }
    dend_12 { pt3dadd( 40.4917, -133.931, 26.1011, 0.66 ) }
    dend_12 { pt3dadd( 40.7364, -134.975, 26.3822, 0.22 ) }
    dend_12 { pt3dadd( 41.0878, -136.432, 26.6892, 0.22 ) }
    dend_12 { pt3dadd( 41.2019, -136.917, 26.7748, 0.96 ) }
    dend_12 { pt3dadd( 41.3341, -137.518, 26.8582, 1.92 ) }
    dend_12 { pt3dadd( 41.447, -138.08, 26.9148, 1.99 ) }
    dend_12 { pt3dadd( 41.8119, -139.859, 27.0435, 0.29 ) }
    dend_12 { pt3dadd( 42.1032, -141.111, 27.1142, 0.15 ) }
    dend_12 { pt3dadd( 42.2512, -141.682, 27.13, 0.74 ) }
    dend_12 { pt3dadd( 42.3625, -142.104, 27.1388, 0.74 ) }
    dend_12 { pt3dadd( 42.6305, -143.161, 27.1519, 0.22 ) }
    dend_12 { pt3dadd( 42.7887, -143.861, 27.156, 0.37 ) }
    dend_12 { pt3dadd( 42.9898, -144.882, 27.1653, 0.22 ) }
    dend_12 { pt3dadd( 43.124, -145.669, 27.1878, 0.22 ) }
    dend_12 { pt3dadd( 43.2005, -146.174, 27.2082, 0.59 ) }
    dend_12 { pt3dadd( 43.2891, -146.911, 27.2437, 1.18 ) }
    dend_12 { pt3dadd( 43.468, -148.909, 27.3759, 0.22 ) }
    dend_12 { pt3dadd( 43.5215, -149.656, 27.4331, 0.44 ) }
    dend_12 { pt3dadd( 43.5778, -150.386, 27.4804, 0.22 ) }
    dend_12 { pt3dadd( 43.6179, -150.893, 27.5144, 0.81 ) }
    dend_12 { pt3dadd( 43.6675, -151.466, 27.5502, 1.47 ) }
    dend_12 { pt3dadd( 43.7393, -152.245, 27.5958, 1.55 ) }
    dend_12 { pt3dadd( 43.8385, -153.334, 27.6508, 0.22 ) }
    dend_12 { pt3dadd( 43.9499, -154.539, 27.7168, 0.15 ) }
    dend_12 { pt3dadd( 44.0653, -155.701, 27.7876, 0.15 ) }
    dend_12 { pt3dadd( 44.1222, -156.27, 27.8445, 0.29 ) }
    dend_12 { pt3dadd( 44.1706, -156.787, 27.9181, 0.59 ) }
    dend_12 { pt3dadd( 44.2061, -157.208, 28.0006, 0.96 ) }
    dend_12 { pt3dadd( 44.2777, -158.004, 28.2257, 0.22 ) }
    dend_12 { pt3dadd( 44.3612, -158.812, 28.5002, 0.15 ) }
    dend_12 { pt3dadd( 44.5025, -159.9, 28.9035, 0.15 ) }
    dend_12 { pt3dadd( 44.5752, -160.491, 29.1234, 0.96 ) }
    dend_12 { pt3dadd( 44.6831, -161.437, 29.4862, 1.92 ) }
    dend_12 { pt3dadd( 44.819, -162.766, 30.0081, 0.66 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 65/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -9.19333, -27.3873, 5.36248, 1.03 ) }
    dend_6 { pt3dadd( -8.53147, -28.5805, 6.21709, 1.03 ) }
    dend_6 { pt3dadd( -7.85165, -29.7488, 7.09065, 0.37 ) }
    dend_6 { pt3dadd( -7.34823, -30.5813, 7.69741, 0.66 ) }
    dend_6 { pt3dadd( -6.83408, -31.4117, 8.25555, 1.11 ) }
    dend_6 { pt3dadd( -6.31168, -32.2501, 8.76534, 1.55 ) }
    dend_6 { pt3dadd( -5.71976, -33.2357, 9.28478, 0.52 ) }
    dend_6 { pt3dadd( -5.15273, -34.2074, 9.7265, 0.44 ) }
    dend_6 { pt3dadd( -4.50342, -35.4009, 10.1668, 0.88 ) }
    dend_6 { pt3dadd( -3.94242, -36.4758, 10.5022, 0.74 ) }
    dend_6 { pt3dadd( -3.43277, -37.4913, 10.7697, 0.44 ) }
    dend_6 { pt3dadd( -2.85481, -38.6878, 11.0021, 0.37 ) }
    dend_6 { pt3dadd( -2.56931, -39.3386, 11.0934, 1.18 ) }
    dend_6 { pt3dadd( -2.04435, -40.6982, 11.183, 2.51 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 79/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -9.19333, -27.3873, 5.36248, 1.03 ) }
    dend_1 { pt3dadd( -10.1162, -27.7051, 5.79415, 1.03 ) }
    dend_1 { pt3dadd( -11.5166, -28.2904, 6.5149, 0.52 ) }
    dend_1 { pt3dadd( -12.58, -28.8379, 7.14994, 0.44 ) }
    dend_1 { pt3dadd( -13.4269, -29.3914, 7.73894, 0.29 ) }
    dend_1 { pt3dadd( -13.9344, -29.8158, 8.12824, 0.29 ) }
    dend_1 { pt3dadd( -14.235, -30.137, 8.40334, 0.29 ) }
    dend_1 { pt3dadd( -14.6491, -30.7764, 8.89841, 0.96 ) }
    dend_1 { pt3dadd( -14.9981, -31.5469, 9.41407, 2.14 ) }
    dend_1 { pt3dadd( -15.3726, -32.5934, 10.045, 2.06 ) }
    dend_1 { pt3dadd( -15.7194, -33.7822, 10.7169, 0.74 ) }
    dend_1 { pt3dadd( -16.136, -35.367, 11.5525, 0.44 ) }
    dend_1 { pt3dadd( -16.2862, -35.9734, 11.8574, 0.59 ) }
    dend_1 { pt3dadd( -16.444, -36.6661, 12.1744, 0.88 ) }
    dend_1 { pt3dadd( -16.6347, -37.5575, 12.5567, 0.29 ) }
    dend_1 { pt3dadd( -16.8187, -38.5257, 12.9471, 0.15 ) }
    dend_1 { pt3dadd( -16.9032, -38.9832, 13.1294, 0.29 ) }
    dend_1 { pt3dadd( -17.1388, -40.1845, 13.524, 0.22 ) }
    dend_1 { pt3dadd( -17.2316, -40.6444, 13.6739, 0.66 ) }
    dend_1 { pt3dadd( -17.4013, -41.4679, 13.9197, 1.7 ) }
    dend_1 { pt3dadd( -17.5523, -42.154, 14.0965, 2.21 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_1 { pt3dadd( -17.7305, -42.9135, 14.2903, 1.92 ) }
    dend_1 { pt3dadd( -18.2089, -44.9554, 14.8176, 0.37 ) }
    dend_1 { pt3dadd( -18.4099, -45.8486, 15.0562, 1.25 ) }
    dend_1 { pt3dadd( -18.6271, -46.8874, 15.3431, 0.96 ) }
    dend_1 { pt3dadd( -18.8784, -48.1998, 15.696, 0.22 ) }
    dend_1 { pt3dadd( -19.0942, -49.3365, 15.9968, 0.22 ) }
    dend_1 { pt3dadd( -19.2664, -50.1856, 16.2035, 0.44 ) }
    dend_1 { pt3dadd( -19.4541, -50.984, 16.392, 1.18 ) }
    dend_1 { pt3dadd( -19.6535, -51.6614, 16.5235, 2.29 ) }
    dend_1 { pt3dadd( -19.9962, -52.6217, 16.6863, 2.51 ) }
    dend_1 { pt3dadd( -20.5152, -53.9308, 16.8547, 0.44 ) }
    dend_1 { pt3dadd( -21.0419, -55.1576, 16.9511, 0.44 ) }
    dend_1 { pt3dadd( -21.3, -55.7166, 16.9844, 0.37 ) }
    dend_1 { pt3dadd( -21.9052, -56.9553, 17.0332, 0.37 ) }
    dend_1 { pt3dadd( -22.1253, -57.3902, 17.0583, 0.22 ) }
    dend_1 { pt3dadd( -22.337, -57.8036, 17.0914, 0.22 ) }
    dend_1 { pt3dadd( -22.68, -58.5255, 17.1599, 0.22 ) }
    dend_1 { pt3dadd( -22.8476, -58.8844, 17.2066, 0.74 ) }
    dend_1 { pt3dadd( -23.0737, -59.4039, 17.2977, 1.4 ) }
    dend_1 { pt3dadd( -23.3816, -60.1929, 17.457, 2.14 ) }
    dend_1 { pt3dadd( -23.8457, -61.3918, 17.7065, 0.66 ) }
    dend_1 { pt3dadd( -24.3095, -62.5717, 17.9517, 0.37 ) }
    dend_1 { pt3dadd( -24.6783, -63.5808, 18.1173, 0.22 ) }
    dend_1 { pt3dadd( -24.9524, -64.4361, 18.2207, 0.22 ) }
    dend_1 { pt3dadd( -25.1507, -65.158, 18.2761, 1.11 ) }
    dend_1 { pt3dadd( -25.3352, -65.8982, 18.3191, 1.25 ) }
    dend_1 { pt3dadd( -25.563, -66.8711, 18.366, 0.59 ) }
    dend_1 { pt3dadd( -25.8343, -67.98, 18.3995, 0.22 ) }
    dend_1 { pt3dadd( -25.9506, -68.4283, 18.4021, 0.22 ) }
    dend_1 { pt3dadd( -26.3106, -69.5748, 18.4023, 0.29 ) }
    dend_1 { pt3dadd( -26.8721, -71.091, 18.4332, 0.29 ) }
    dend_1 { pt3dadd( -27.0971, -71.6314, 18.4725, 0.29 ) }
    dend_1 { pt3dadd( -27.3646, -72.2134, 18.5432, 0.96 ) }
    dend_1 { pt3dadd( -27.6123, -72.7037, 18.6254, 1.99 ) }
    dend_1 { pt3dadd( -27.8252, -73.1057, 18.6904, 2.51 ) }
    dend_1 { pt3dadd( -28.5174, -74.3833, 18.878, 0.81 ) }
    dend_1 { pt3dadd( -29.2554, -75.7691, 19.0358, 0.22 ) }
    dend_1 { pt3dadd( -29.6258, -76.4813, 19.094, 0.22 ) }
    dend_1 { pt3dadd( -29.9025, -77.0453, 19.1226, 0.22 ) }
    dend_1 { pt3dadd( -30.0559, -77.372, 19.1279, 0.44 ) }
    dend_1 { pt3dadd( -30.2955, -77.9084, 19.1147, 0.96 ) }
    dend_1 { pt3dadd( -30.5706, -78.5542, 19.0697, 0.44 ) }
    dend_1 { pt3dadd( -30.9442, -79.4692, 18.9482, 0.15 ) }
    dend_1 { pt3dadd( -31.1811, -80.0653, 18.8672, 0.15 ) }
    dend_1 { pt3dadd( -31.3644, -80.5431, 18.8053, 0.44 ) }
    dend_1 { pt3dadd( -31.5679, -81.0679, 18.7505, 0.52 ) }
    dend_1 { pt3dadd( -31.792, -81.6725, 18.6777, 0.22 ) }
    dend_1 { pt3dadd( -32.0164, -82.2334, 18.5977, 0.22 ) }
    dend_1 { pt3dadd( -32.2519, -82.7685, 18.5201, 0.74 ) }
    dend_1 { pt3dadd( -32.6069, -83.5207, 18.3982, 1.33 ) }
    dend_1 { pt3dadd( -33.0023, -84.3272, 18.2704, 0.29 ) }
    dend_1 { pt3dadd( -33.5596, -85.4012, 18.112, 0.22 ) }
    dend_1 { pt3dadd( -33.9599, -86.1321, 18.0145, 0.22 ) }
    dend_1 { pt3dadd( -34.5512, -87.1776, 17.901, 0.22 ) }
    dend_1 { pt3dadd( -34.7827, -87.5843, 17.8637, 0.52 ) }
    dend_1 { pt3dadd( -35.2982, -88.5022, 17.7994, 1.7 ) }
    dend_1 { pt3dadd( -35.9852, -89.7458, 17.7362, 0.44 ) }
    dend_1 { pt3dadd( -36.4993, -90.6797, 17.716, 0.37 ) }
    dend_1 { pt3dadd( -37.0956, -91.8312, 17.7029, 0.15 ) }
    dend_1 { pt3dadd( -37.3769, -92.3877, 17.6938, 0.81 ) }
    dend_1 { pt3dadd( -37.7046, -93.0467, 17.6775, 1.7 ) }
    dend_1 { pt3dadd( -37.9659, -93.5953, 17.6534, 0.96 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 62/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 33.5074, 20.3123, 0.0, 0.15 ) }
    axon_1 { pt3dadd( 46.434, 27.9217, 0.0, 0.15 ) }
    axon_1 { pt3dadd( 59.3606, 35.5311, 0.0, 0.15 ) }
    // Section: dend_100, id: dend_100, parent: dend_98 (entry count 65/100)
    dend_100 { pt3dclear() }
    dend_100 { pt3dadd( -14.1336, 6.2071, -18.6095, 0.52 ) }
    dend_100 { pt3dadd( -13.106, 6.36303, -19.2397, 0.52 ) }
    dend_100 { pt3dadd( -11.9884, 6.71315, -19.9816, 0.37 ) }
    dend_100 { pt3dadd( -11.0837, 7.30435, -20.6952, 0.22 ) }
    dend_100 { pt3dadd( -10.7978, 7.69868, -21.0214, 0.29 ) }
    dend_100 { pt3dadd( -10.6149, 8.03331, -21.2993, 0.29 ) }
    dend_100 { pt3dadd( -10.3526, 8.49389, -21.7471, 0.66 ) }
    dend_100 { pt3dadd( -10.0649, 9.03514, -22.3413, 1.03 ) }
    dend_100 { pt3dadd( -9.87523, 9.56803, -22.8954, 0.81 ) }
    dend_100 { pt3dadd( -9.67353, 10.224, -23.5301, 0.44 ) }
    dend_100 { pt3dadd( -9.36016, 11.0601, -24.3072, 0.74 ) }
    dend_100 { pt3dadd( -9.00536, 11.7886, -24.9379, 0.66 ) }
    dend_100 { pt3dadd( -8.63912, 12.4238, -25.3961, 0.66 ) }
    dend_100 { pt3dadd( -7.91868, 13.5214, -26.1901, 0.29 ) }
    dend_100 { pt3dadd( -7.45622, 14.1788, -26.6177, 0.29 ) }
    dend_100 { pt3dadd( -6.87876, 15.0057, -27.0214, 0.52 ) }
    dend_100 { pt3dadd( -6.42279, 15.7531, -27.2189, 0.52 ) }
    dend_100 { pt3dadd( -5.90868, 16.7005, -27.3101, 1.03 ) }
    dend_100 { pt3dadd( -0.915866, 24.41, -30.8525, 1.03 ) }
    dend_100 { pt3dadd( 3.7706, 32.0002, -35.0279, 1.03 ) }
    dend_100 { pt3dadd( 8.37538, 38.8295, -40.4807, 1.03 ) }
    dend_100 { pt3dadd( 12.8661, 45.2505, -46.5193, 1.03 ) }
    dend_100 { pt3dadd( 16.6514, 52.4763, -52.0643, 1.03 ) }
    dend_100 { pt3dadd( 19.3283, 59.9543, -57.8959, 1.03 ) }
    dend_100 { pt3dadd( 23.3666, 67.0269, -63.4703, 1.03 ) }
    dend_100 { pt3dadd( 28.083, 74.4544, -67.9113, 1.03 ) }
    dend_100 { pt3dadd( 33.5338, 82.0776, -70.9372, 1.03 ) }
    dend_100 { pt3dadd( 38.9896, 89.4421, -74.568, 1.03 ) }
    dend_100 { pt3dadd( 44.9174, 96.964, -76.8796, 1.03 ) }
    dend_100 { pt3dadd( 51.6168, 103.666, -79.6845, 1.03 ) }
    // Section: dend_99, id: dend_99, parent: dend_98 (entry count 95/100)
    dend_99 { pt3dclear() }
    dend_99 { pt3dadd( -14.1336, 6.2071, -18.6095, 1.25 ) }
    dend_99 { pt3dadd( -14.1786, 4.8809, -18.9256, 1.25 ) }
    dend_99 { pt3dadd( -14.1284, 3.56077, -19.1996, 0.59 ) }
    dend_99 { pt3dadd( -14.0659, 2.50955, -19.4391, 0.81 ) }
    dend_99 { pt3dadd( -13.9905, 1.25832, -19.7941, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_99 { pt3dadd( -13.8834, -0.0942403, -20.1994, 1.4 ) }
    dend_99 { pt3dadd( -13.7518, -1.27967, -20.5385, 1.11 ) }
    dend_99 { pt3dadd( -13.2801, -3.45834, -21.1543, 0.52 ) }
    dend_99 { pt3dadd( -12.8557, -4.90282, -21.5606, 0.74 ) }
    dend_99 { pt3dadd( -12.3962, -6.19751, -21.978, 1.7 ) }
    dend_99 { pt3dadd( -11.8559, -7.46815, -22.4568, 1.84 ) }
    dend_99 { pt3dadd( -11.1753, -8.78443, -23.0203, 1.92 ) }
    dend_99 { pt3dadd( -9.91783, -10.925, -23.9916, 0.96 ) }
    dend_99 { pt3dadd( -9.24173, -11.8878, -24.442, 0.96 ) }
    dend_99 { pt3dadd( -8.57785, -12.7123, -24.8186, 0.44 ) }
    dend_99 { pt3dadd( -7.80235, -13.5714, -25.2043, 1.18 ) }
    dend_99 { pt3dadd( -7.44285, -13.9234, -25.4089, 1.18 ) }
    dend_99 { pt3dadd( -3.30942, -22.6494, -27.0871, 1.18 ) }
    dend_99 { pt3dadd( 1.2999, -31.2383, -28.1612, 1.18 ) }
    dend_99 { pt3dadd( 4.10379, -40.3904, -30.1679, 1.18 ) }
    dend_99 { pt3dadd( 6.82522, -49.7713, -30.3147, 1.18 ) }
    dend_99 { pt3dadd( 10.4246, -58.7393, -28.752, 1.18 ) }
    dend_99 { pt3dadd( 13.2657, -68.0814, -28.4047, 1.18 ) }
    // Section: dend_97, id: dend_97, parent: dend_95 (entry count 18/100)
    dend_97 { pt3dclear() }
    dend_97 { pt3dadd( -18.3058, 67.3363, -25.2819, 0.07 ) }
    dend_97 { pt3dadd( -21.2363, 76.6021, -26.3304, 0.07 ) }
    dend_97 { pt3dadd( -24.2909, 85.8649, -25.6875, 0.07 ) }
    dend_97 { pt3dadd( -29.45, 94.1819, -24.9014, 0.07 ) }
    dend_97 { pt3dadd( -35.4793, 101.937, -25.5112, 0.07 ) }
    dend_97 { pt3dadd( -42.7492, 108.632, -25.615, 0.07 ) }
    dend_97 { pt3dadd( -50.9063, 114.186, -24.6136, 0.07 ) }
    dend_97 { pt3dadd( -57.8583, 120.802, -22.2417, 0.07 ) }
    dend_97 { pt3dadd( -66.3761, 125.328, -19.8118, 0.07 ) }
    // Section: dend_96, id: dend_96, parent: dend_95 (entry count 27/100)
    dend_96 { pt3dclear() }
    dend_96 { pt3dadd( -18.3058, 67.3363, -25.2819, 0.81 ) }
    dend_96 { pt3dadd( -19.6771, 76.858, -26.9399, 0.07 ) }
    dend_96 { pt3dadd( -20.089, 86.137, -29.9827, 0.07 ) }
    dend_96 { pt3dadd( -19.3046, 95.706, -31.7324, 0.07 ) }
    dend_96 { pt3dadd( -19.1647, 105.296, -33.5322, 0.07 ) }
    dend_96 { pt3dadd( -18.3492, 114.897, -35.0687, 0.07 ) }
    dend_96 { pt3dadd( -19.2224, 124.169, -38.0351, 0.07 ) }
    dend_96 { pt3dadd( -21.3009, 133.457, -40.2553, 0.07 ) }
    // Section: dend_93, id: dend_93, parent: dend_45 (entry count 35/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( -11.3162, -15.6107, -8.51806, 0.37 ) }
    dend_93 { pt3dadd( -12.5848, -15.5326, -8.64534, 0.37 ) }
    dend_93 { pt3dadd( -13.5546, -15.4652, -8.88129, 0.37 ) }
    dend_93 { pt3dadd( -14.1838, -15.492, -9.07171, 0.22 ) }
    dend_93 { pt3dadd( -14.8535, -15.5995, -9.38514, 0.22 ) }
    dend_93 { pt3dadd( -15.1916, -15.676, -9.56792, 0.22 ) }
    dend_93 { pt3dadd( -15.6788, -15.7915, -9.83102, 0.44 ) }
    dend_93 { pt3dadd( -16.167, -15.9256, -10.1319, 0.52 ) }
    dend_93 { pt3dadd( -16.91, -16.1408, -10.56, 1.18 ) }
    dend_93 { pt3dadd( -18.1684, -16.5643, -11.1881, 0.22 ) }
    dend_93 { pt3dadd( -18.9663, -16.8622, -11.541, 0.22 ) }
    dend_93 { pt3dadd( -19.5456, -17.0871, -11.7629, 0.22 ) }
    dend_93 { pt3dadd( -20.1278, -17.3265, -11.9776, 0.22 ) }
    dend_93 { pt3dadd( -20.8354, -17.6293, -12.2213, 0.29 ) }
    dend_93 { pt3dadd( -21.4481, -17.9103, -12.4205, 0.59 ) }
    dend_93 { pt3dadd( -21.9261, -18.1626, -12.5534, 0.96 ) }
    dend_93 { pt3dadd( -22.6818, -18.643, -12.7704, 0.37 ) }
    dend_93 { pt3dadd( -23.4186, -19.2154, -13.0081, 0.22 ) }
    dend_93 { pt3dadd( -24.0439, -19.8077, -13.2337, 0.07 ) }
    dend_93 { pt3dadd( -24.706, -20.5028, -13.4889, 0.07 ) }
    dend_93 { pt3dadd( -25.2147, -21.0759, -13.6866, 0.22 ) }
    dend_93 { pt3dadd( -25.75, -21.7117, -13.8742, 0.07 ) }
    dend_93 { pt3dadd( -26.1499, -22.2523, -14.0164, 0.07 ) }
    dend_93 { pt3dadd( -26.4823, -22.7654, -14.0998, 0.74 ) }
    dend_93 { pt3dadd( -34.8996, -27.8434, -15.5223, 0.74 ) }
    dend_93 { pt3dadd( -43.9455, -31.967, -16.0557, 0.74 ) }
    dend_93 { pt3dadd( -52.8279, -36.2733, -17.3187, 0.74 ) }
    dend_93 { pt3dadd( -62.0119, -40.0732, -18.0011, 0.74 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 63/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -11.3162, -15.6107, -8.51806, 0.96 ) }
    dend_46 { pt3dadd( -11.2496, -17.0037, -8.72678, 0.96 ) }
    dend_46 { pt3dadd( -11.1988, -18.0683, -8.94905, 0.88 ) }
    dend_46 { pt3dadd( -11.1464, -19.4635, -9.29371, 0.81 ) }
    dend_46 { pt3dadd( -11.1258, -20.2872, -9.52827, 1.03 ) }
    dend_46 { pt3dadd( -11.1329, -21.0509, -9.77024, 1.33 ) }
    dend_46 { pt3dadd( -11.2076, -22.6, -10.2806, 0.88 ) }
    dend_46 { pt3dadd( -11.3579, -23.95, -10.7975, 1.03 ) }
    dend_46 { pt3dadd( -11.5775, -25.1393, -11.2977, 1.62 ) }
    dend_46 { pt3dadd( -11.9441, -26.8409, -12.0614, 0.37 ) }
    dend_46 { pt3dadd( -12.1755, -27.7532, -12.477, 0.37 ) }
    dend_46 { pt3dadd( -12.3942, -28.468, -12.8205, 0.74 ) }
    dend_46 { pt3dadd( -12.6351, -29.034, -13.1014, 1.25 ) }
    dend_46 { pt3dadd( -13.0652, -29.7773, -13.4777, 1.77 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 77/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 23.8344, -4.78096, 8.03917, 0.15 ) }
    dend_42 { pt3dadd( 24.9039, -3.80811, 7.4989, 0.15 ) }
    dend_42 { pt3dadd( 25.441, -3.3125, 7.23858, 0.15 ) }
    dend_42 { pt3dadd( 25.8837, -2.8796, 6.99471, 0.88 ) }
    dend_42 { pt3dadd( 26.3787, -2.35676, 6.6968, 1.55 ) }
    dend_42 { pt3dadd( 27.517, -1.00969, 5.93191, 0.22 ) }
    dend_42 { pt3dadd( 28.0327, -0.399417, 5.58538, 0.22 ) }
    dend_42 { pt3dadd( 28.3668, 0.0186227, 5.3716, 0.37 ) }
    dend_42 { pt3dadd( 28.9408, 0.757976, 5.0166, 0.07 ) }
    dend_42 { pt3dadd( 29.1837, 1.10666, 4.8433, 0.07 ) }
    dend_42 { pt3dadd( 29.4879, 1.67319, 4.50986, 1.18 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 88/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 23.8344, -4.78096, 8.03917, 0.29 ) }
    dend_35 { pt3dadd( 24.6294, -5.24326, 9.21034, 0.29 ) }
    dend_35 { pt3dadd( 25.1839, -5.47635, 9.9473, 0.29 ) }
    dend_35 { pt3dadd( 26.048, -5.71934, 10.9832, 0.66 ) }
    dend_35 { pt3dadd( 26.2999, -5.76414, 11.2593, 0.66 ) }
    dend_35 { pt3dadd( 27.0419, -5.84075, 12.0078, 0.22 ) }
    dend_35 { pt3dadd( 27.4714, -5.87844, 12.4106, 0.22 ) }
    dend_35 { pt3dadd( 28.0961, -5.91109, 12.9825, 0.66 ) }
    dend_35 { pt3dadd( 28.9859, -5.95907, 13.7618, 1.84 ) }
    dend_35 { pt3dadd( 30.0773, -6.05251, 14.7077, 3.02 ) }
    dend_35 { pt3dadd( 31.2851, -6.23189, 15.8077, 1.55 ) }
    dend_35 { pt3dadd( 32.5301, -6.56003, 16.9581, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_35 { pt3dadd( 33.4941, -6.9312, 17.8674, 0.44 ) }
    dend_35 { pt3dadd( 34.4937, -7.42703, 18.835, 0.22 ) }
    dend_35 { pt3dadd( 35.3481, -7.92512, 19.6618, 1.03 ) }
    dend_35 { pt3dadd( 36.0157, -8.36343, 20.2836, 2.29 ) }
    dend_35 { pt3dadd( 37.4938, -9.39202, 21.5862, 0.22 ) }
    dend_35 { pt3dadd( 38.234, -9.86816, 22.2226, 0.22 ) }
    dend_35 { pt3dadd( 38.6848, -10.1255, 22.5807, 0.22 ) }
    dend_35 { pt3dadd( 39.2503, -10.4045, 22.9999, 1.47 ) }
    dend_35 { pt3dadd( 40.1653, -10.7902, 23.6215, 2.88 ) }
    dend_35 { pt3dadd( 40.948, -11.0686, 24.1141, 2.14 ) }
    dend_35 { pt3dadd( 43.6064, -11.8959, 25.6619, 0.29 ) }
    dend_35 { pt3dadd( 44.6346, -12.1906, 26.2308, 0.29 ) }
    dend_35 { pt3dadd( 45.2567, -12.3569, 26.5683, 0.29 ) }
    dend_35 { pt3dadd( 45.824, -12.4967, 26.8782, 0.66 ) }
    dend_35 { pt3dadd( 46.6061, -12.6579, 27.2874, 1.03 ) }
    dend_35 { pt3dadd( 47.4328, -12.796, 27.6404, 0.22 ) }
    dend_35 { pt3dadd( 48.3644, -12.8755, 27.9593, 0.22 ) }
    dend_35 { pt3dadd( 49.0003, -12.8836, 28.2071, 0.22 ) }
    dend_35 { pt3dadd( 49.6736, -12.8654, 28.4894, 0.59 ) }
    dend_35 { pt3dadd( 50.4984, -12.8232, 28.8456, 1.4 ) }
    dend_35 { pt3dadd( 51.7876, -12.7577, 29.4078, 0.37 ) }
    dend_35 { pt3dadd( 52.7682, -12.7738, 29.8214, 0.22 ) }
    dend_35 { pt3dadd( 53.6841, -12.846, 30.1625, 0.22 ) }
    dend_35 { pt3dadd( 54.174, -12.9205, 30.3304, 1.33 ) }
    dend_35 { pt3dadd( 54.9668, -13.0855, 30.5859, 2.73 ) }
    dend_35 { pt3dadd( 55.6614, -13.2649, 30.8079, 2.73 ) }
    dend_35 { pt3dadd( 57.9407, -13.9817, 31.5299, 0.22 ) }
    dend_35 { pt3dadd( 58.8191, -14.3084, 31.8017, 0.52 ) }
    dend_35 { pt3dadd( 59.8725, -14.7304, 32.154, 0.15 ) }
    dend_35 { pt3dadd( 60.3996, -14.9498, 32.345, 0.52 ) }
    dend_35 { pt3dadd( 61.0799, -15.2376, 32.6042, 0.96 ) }
    dend_35 { pt3dadd( 62.6294, -15.8945, 33.2197, 0.22 ) }
    dend_35 { pt3dadd( 63.5145, -16.2524, 33.5862, 0.96 ) }
    dend_35 { pt3dadd( 64.4559, -16.6165, 34.02, 2.29 ) }
    dend_35 { pt3dadd( 66.4809, -17.3505, 34.9853, 0.22 ) }
    dend_35 { pt3dadd( 67.0396, -17.5479, 35.258, 0.74 ) }
    dend_35 { pt3dadd( 67.9062, -17.8488, 35.6925, 1.11 ) }
    dend_35 { pt3dadd( 69.6107, -18.429, 36.5652, 0.15 ) }
    dend_35 { pt3dadd( 70.575, -18.7564, 37.0542, 0.44 ) }
    dend_35 { pt3dadd( 71.316, -19.0136, 37.4325, 1.25 ) }
    dend_35 { pt3dadd( 72.9552, -19.5693, 38.3347, 0.15 ) }
    dend_35 { pt3dadd( 73.4249, -19.7308, 38.5965, 0.15 ) }
    dend_35 { pt3dadd( 73.8376, -19.8786, 38.8274, 0.44 ) }
    dend_35 { pt3dadd( 74.3552, -20.0861, 39.1098, 0.66 ) }
    dend_35 { pt3dadd( 75.3354, -20.4779, 39.5865, 0.15 ) }
    dend_35 { pt3dadd( 76.184, -20.8022, 39.9813, 1.03 ) }
    dend_35 { pt3dadd( 76.9383, -21.0856, 40.2957, 2.14 ) }
    dend_35 { pt3dadd( 78.5103, -21.6467, 40.9255, 0.15 ) }
    dend_35 { pt3dadd( 79.0079, -21.8072, 41.1424, 0.15 ) }
    dend_35 { pt3dadd( 79.7915, -22.009, 41.5235, 0.15 ) }
    dend_35 { pt3dadd( 80.6249, -22.1645, 41.9858, 0.15 ) }
    dend_35 { pt3dadd( 81.0232, -22.2114, 42.2405, 0.74 ) }
    dend_35 { pt3dadd( 81.8691, -22.2353, 42.88, 1.92 ) }
    dend_35 { pt3dadd( 83.3275, -22.1565, 44.1577, 0.15 ) }
    dend_35 { pt3dadd( 84.2502, -22.0659, 45.0869, 0.59 ) }
    dend_35 { pt3dadd( 84.9797, -21.977, 45.9124, 0.15 ) }
    dend_35 { pt3dadd( 85.6385, -21.8776, 46.6981, 1.03 ) }
    dend_35 { pt3dadd( 86.3104, -21.7741, 47.4949, 1.33 ) }
    dend_35 { pt3dadd( 87.5161, -21.5916, 48.9207, 0.15 ) }
    dend_35 { pt3dadd( 88.6497, -21.4348, 50.2481, 0.15 ) }
    dend_35 { pt3dadd( 89.2928, -21.3797, 50.9849, 1.03 ) }
    dend_35 { pt3dadd( 90.1347, -21.3436, 51.9331, 1.77 ) }
    dend_35 { pt3dadd( 91.2165, -21.3508, 53.1459, 0.15 ) }
    dend_35 { pt3dadd( 92.12, -21.4061, 54.1256, 0.15 ) }
    dend_35 { pt3dadd( 92.8586, -21.4982, 54.8324, 0.59 ) }
    dend_35 { pt3dadd( 93.8179, -21.6691, 55.6618, 0.15 ) }
    dend_35 { pt3dadd( 94.2871, -21.7689, 56.0556, 0.15 ) }
    dend_35 { pt3dadd( 94.7884, -21.8913, 56.4672, 1.03 ) }
    dend_35 { pt3dadd( 95.4788, -22.0452, 57.004, 1.62 ) }
    dend_35 { pt3dadd( 97.3056, -22.398, 58.3091, 0.15 ) }
    dend_35 { pt3dadd( 97.9519, -22.4901, 58.7458, 0.15 ) }
    dend_35 { pt3dadd( 98.6501, -22.5463, 59.201, 0.81 ) }
    dend_35 { pt3dadd( 99.5845, -22.555, 59.8218, 1.62 ) }
    dend_35 { pt3dadd( 100.949, -22.4859, 60.7471, 0.07 ) }
    dend_35 { pt3dadd( 101.878, -22.3895, 61.406, 0.07 ) }
    dend_35 { pt3dadd( 102.314, -22.3145, 61.7162, 0.59 ) }
    dend_35 { pt3dadd( 102.641, -22.2491, 61.93, 0.59 ) }
    dend_35 { pt3dadd( 103.514, -22.0505, 62.4835, 0.07 ) }
    dend_35 { pt3dadd( 104.164, -21.8986, 62.879, 0.07 ) }
    dend_35 { pt3dadd( 104.507, -21.8183, 63.0784, 0.07 ) }
    dend_35 { pt3dadd( 105.116, -21.6601, 63.4138, 0.59 ) }
    dend_35 { pt3dadd( 105.807, -21.4794, 63.7997, 1.33 ) }
    dend_35 { pt3dadd( 106.809, -21.2356, 64.3586, 0.15 ) }
    dend_35 { pt3dadd( 107.528, -21.0664, 64.7806, 0.52 ) }
    dend_35 { pt3dadd( 108.221, -20.8882, 65.2288, 0.07 ) }
    dend_35 { pt3dadd( 108.681, -20.7734, 65.5444, 0.22 ) }
    dend_35 { pt3dadd( 109.377, -20.5943, 66.0468, 0.07 ) }
    dend_35 { pt3dadd( 110.262, -20.3599, 66.736, 0.66 ) }
    dend_35 { pt3dadd( 111.345, -20.0843, 67.6184, 0.22 ) }
    dend_35 { pt3dadd( 112.061, -19.9254, 68.1971, 0.96 ) }
    dend_35 { pt3dadd( 112.808, -19.8126, 68.8386, 1.62 ) }
    dend_35 { pt3dadd( 114.246, -19.656, 70.0952, 0.15 ) }
    dend_35 { pt3dadd( 115.055, -19.5744, 70.8005, 0.74 ) }
    dend_35 { pt3dadd( 115.797, -19.5057, 71.4443, 1.11 ) }
    dend_35 { pt3dadd( 117.06, -19.4162, 72.4942, 0.22 ) }
    dend_35 { pt3dadd( 118.806, -19.3326, 73.8993, 0.29 ) }
    dend_35 { pt3dadd( 119.227, -19.3213, 74.2196, 0.15 ) }
    dend_35 { pt3dadd( 119.562, -19.3321, 74.4471, 0.15 ) }
    dend_35 { pt3dadd( 120.208, -19.3585, 74.8173, 0.22 ) }
    dend_35 { pt3dadd( 120.541, -19.3606, 74.9815, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_35 { pt3dadd( 121.341, -19.3127, 75.2788, 1.47 ) }
    dend_35 { pt3dadd( 122.124, -19.2174, 75.4946, 1.18 ) }
    dend_35 { pt3dadd( 123.526, -19.0213, 75.9162, 0.15 ) }
    dend_35 { pt3dadd( 123.958, -18.9555, 76.0673, 0.37 ) }
    dend_35 { pt3dadd( 124.456, -18.8809, 76.2573, 0.37 ) }
    dend_35 { pt3dadd( 125.412, -18.7336, 76.6175, 0.15 ) }
    dend_35 { pt3dadd( 126.174, -18.5906, 76.9192, 1.25 ) }
    dend_35 { pt3dadd( 126.59, -18.5003, 77.0988, 1.25 ) }
    dend_35 { pt3dadd( 127.878, -18.1959, 77.6547, 0.15 ) }
    dend_35 { pt3dadd( 128.491, -18.065, 77.9146, 0.15 ) }
    dend_35 { pt3dadd( 129.313, -17.912, 78.2413, 0.22 ) }
    dend_35 { pt3dadd( 130.146, -17.7788, 78.5182, 0.15 ) }
    dend_35 { pt3dadd( 130.839, -17.6509, 78.6971, 0.22 ) }
    dend_35 { pt3dadd( 131.5, -17.5122, 78.848, 0.96 ) }
    dend_35 { pt3dadd( 132.422, -17.293, 79.0231, 1.62 ) }
    dend_35 { pt3dadd( 132.995, -17.1538, 79.1193, 1.33 ) }
    dend_35 { pt3dadd( 134.699, -16.7638, 79.393, 0.15 ) }
    dend_35 { pt3dadd( 135.686, -16.5479, 79.5325, 0.15 ) }
    dend_35 { pt3dadd( 136.249, -16.4227, 79.6123, 0.66 ) }
    dend_35 { pt3dadd( 136.968, -16.2572, 79.6964, 1.11 ) }
    dend_35 { pt3dadd( 138.405, -15.9103, 79.8238, 0.15 ) }
    dend_35 { pt3dadd( 139.153, -15.7251, 79.8611, 0.44 ) }
    dend_35 { pt3dadd( 139.503, -15.6352, 79.8611, 0.44 ) }
    dend_35 { pt3dadd( 140.463, -15.4198, 79.8201, 0.15 ) }
    dend_35 { pt3dadd( 141.604, -15.1931, 79.7331, 0.15 ) }
    dend_35 { pt3dadd( 141.981, -15.1178, 79.697, 0.88 ) }
    dend_35 { pt3dadd( 142.958, -14.9221, 79.5579, 1.7 ) }
    dend_35 { pt3dadd( 144.281, -14.6743, 79.3313, 0.15 ) }
    dend_35 { pt3dadd( 145.001, -14.548, 79.2099, 0.29 ) }
    dend_35 { pt3dadd( 145.723, -14.4328, 79.0949, 0.07 ) }
    dend_35 { pt3dadd( 146.554, -14.3214, 78.9978, 0.22 ) }
    dend_35 { pt3dadd( 147.711, -14.1943, 78.8716, 0.15 ) }
    dend_35 { pt3dadd( 148.296, -14.1401, 78.8145, 0.59 ) }
    dend_35 { pt3dadd( 149.186, -14.071, 78.7363, 1.4 ) }
    dend_35 { pt3dadd( 149.787, -14.0292, 78.6916, 1.25 ) }
    dend_35 { pt3dadd( 151.478, -13.9675, 78.5943, 0.15 ) }
    dend_35 { pt3dadd( 152.422, -13.9734, 78.5615, 0.37 ) }
    dend_35 { pt3dadd( 153.298, -13.9994, 78.556, 0.15 ) }
    dend_35 { pt3dadd( 154.024, -14.0288, 78.5846, 0.37 ) }
    dend_35 { pt3dadd( 154.463, -14.0477, 78.6403, 0.37 ) }
    dend_35 { pt3dadd( 155.086, -14.0607, 78.7653, 0.88 ) }
    dend_35 { pt3dadd( 155.68, -14.0737, 78.9189, 1.62 ) }
    dend_35 { pt3dadd( 156.043, -14.081, 79.0353, 1.62 ) }
    dend_35 { pt3dadd( 157.81, -14.1308, 79.6858, 0.07 ) }
    dend_35 { pt3dadd( 159.012, -14.1633, 80.177, 0.07 ) }
    dend_35 { pt3dadd( 159.552, -14.16, 80.4248, 0.66 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 46/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 61.2418, -6.07367, -33.84, 0.07 ) }
    dend_33 { pt3dadd( 69.0067, -8.25159, -39.7321, 0.07 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 48/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 61.2418, -6.07367, -33.84, 0.81 ) }
    dend_32 { pt3dadd( 68.8998, -7.51654, -40.0981, 0.07 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 50/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -12.8122, 41.5173, 53.5742, 0.07 ) }
    dend_29 { pt3dadd( -11.378, 42.8152, 53.3138, 0.07 ) }
    dend_29 { pt3dadd( -10.4316, 43.6896, 53.0666, 0.07 ) }
    dend_29 { pt3dadd( -9.79663, 44.3095, 52.8744, 0.81 ) }
    dend_29 { pt3dadd( -8.87918, 45.2686, 52.5256, 0.07 ) }
    dend_29 { pt3dadd( -8.47559, 45.7177, 52.3373, 0.15 ) }
    dend_29 { pt3dadd( -7.60357, 46.6881, 51.9306, 0.07 ) }
    dend_29 { pt3dadd( -7.17335, 47.198, 51.6659, 0.66 ) }
    dend_29 { pt3dadd( -6.84974, 47.616, 51.4146, 0.88 ) }
    dend_29 { pt3dadd( -6.15479, 48.5932, 50.8146, 0.15 ) }
    dend_29 { pt3dadd( -5.71789, 49.3137, 50.313, 0.59 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 61/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -12.8122, 41.5173, 53.5742, 0.07 ) }
    dend_28 { pt3dadd( -13.1457, 42.6451, 54.7421, 0.07 ) }
    dend_28 { pt3dadd( -13.3857, 43.468, 55.6126, 0.07 ) }
    dend_28 { pt3dadd( -13.5445, 44.0997, 56.3644, 0.07 ) }
    dend_28 { pt3dadd( -13.687, 44.5998, 57.0477, 0.96 ) }
    dend_28 { pt3dadd( -13.7411, 44.7523, 57.286, 0.96 ) }
    dend_28 { pt3dadd( -14.0111, 45.4488, 58.5036, 0.07 ) }
    dend_28 { pt3dadd( -14.1877, 45.8729, 59.4064, 0.59 ) }
    dend_28 { pt3dadd( -14.43, 46.4683, 60.8747, 0.22 ) }
    dend_28 { pt3dadd( -14.6297, 46.9171, 62.1257, 1.25 ) }
    dend_28 { pt3dadd( -14.9599, 47.5126, 63.9653, 0.22 ) }
    dend_28 { pt3dadd( -15.204, 47.8987, 65.2573, 0.22 ) }
    dend_28 { pt3dadd( -15.4992, 48.3315, 66.8021, 0.22 ) }
    dend_28 { pt3dadd( -15.7647, 48.7177, 68.1903, 0.22 ) }
    dend_28 { pt3dadd( -15.9534, 48.9743, 69.0994, 1.33 ) }
    dend_28 { pt3dadd( -16.3621, 49.5957, 71.2087, 0.15 ) }
    dend_28 { pt3dadd( -16.5554, 49.9326, 72.3834, 0.29 ) }
    dend_28 { pt3dadd( -16.7396, 50.2886, 73.6043, 0.29 ) }
    dend_28 { pt3dadd( -16.822, 50.5055, 74.2909, 0.44 ) }
    dend_28 { pt3dadd( -16.9327, 51.1096, 76.1451, 0.22 ) }
    dend_28 { pt3dadd( -16.9214, 51.6096, 77.6539, 0.22 ) }
    dend_28 { pt3dadd( -16.7597, 52.3226, 79.8216, 0.29 ) }
    dend_28 { pt3dadd( -16.723, 52.4287, 80.1535, 1.11 ) }
    dend_28 { pt3dadd( -16.4691, 52.9289, 81.9014, 0.29 ) }
    dend_28 { pt3dadd( -16.2356, 53.2669, 83.3076, 0.29 ) }
    dend_28 { pt3dadd( -16.1515, 53.3478, 83.7384, 0.29 ) }
    dend_28 { pt3dadd( -16.0037, 53.4891, 84.9476, 0.29 ) }
    dend_28 { pt3dadd( -16.0001, 53.5057, 85.2775, 0.29 ) }
    dend_28 { pt3dadd( -16.0978, 53.5033, 86.462, 0.29 ) }
    dend_28 { pt3dadd( -16.2694, 53.4452, 87.5119, 0.29 ) }
    dend_28 { pt3dadd( -16.4199, 53.3949, 88.213, 0.29 ) }
    dend_28 { pt3dadd( -16.7116, 53.2589, 89.6775, 0.29 ) }
    dend_28 { pt3dadd( -16.9573, 53.1106, 91.02, 0.29 ) }
    dend_28 { pt3dadd( -17.2163, 52.9452, 92.4371, 0.29 ) }
    dend_28 { pt3dadd( -17.4592, 52.7951, 93.7013, 0.29 ) }
    dend_28 { pt3dadd( -17.7867, 52.6008, 95.5103, 0.29 ) }
    dend_28 { pt3dadd( -18.0744, 52.4508, 97.2508, 0.52 ) }
    dend_28 { pt3dadd( -18.2455, 52.3932, 98.4629, 0.52 ) }
    dend_28 { pt3dadd( -18.3681, 52.4052, 99.4076, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_28 { pt3dadd( -18.4501, 52.4796, 100.104, 0.22 ) }
    dend_28 { pt3dadd( -18.6693, 52.8496, 102.096, 0.22 ) }
    dend_28 { pt3dadd( -18.8122, 53.1909, 103.366, 0.22 ) }
    dend_28 { pt3dadd( -18.9953, 53.6577, 104.793, 0.44 ) }
    dend_28 { pt3dadd( -19.1676, 54.1734, 106.265, 0.88 ) }
    dend_28 { pt3dadd( -19.4003, 55.0589, 108.833, 0.15 ) }
    dend_28 { pt3dadd( -19.499, 55.4996, 110.144, 0.15 ) }
    dend_28 { pt3dadd( -19.574, 55.7991, 111.004, 0.22 ) }
    dend_28 { pt3dadd( -19.6462, 56.0033, 111.63, 0.22 ) }
    dend_28 { pt3dadd( -19.7249, 56.1508, 112.107, 0.22 ) }
    dend_28 { pt3dadd( -19.8092, 56.287, 112.579, 0.22 ) }
    dend_28 { pt3dadd( -19.8927, 56.4265, 113.131, 0.22 ) }
    dend_28 { pt3dadd( -20.0005, 56.6742, 114.007, 0.22 ) }
    dend_28 { pt3dadd( -20.1852, 57.0288, 115.315, 0.22 ) }
    dend_28 { pt3dadd( -20.2731, 57.1617, 115.829, 0.22 ) }
    dend_28 { pt3dadd( -20.4892, 57.468, 117.119, 0.22 ) }
    dend_28 { pt3dadd( -20.6926, 57.7809, 118.559, 0.22 ) }
    dend_28 { pt3dadd( -20.7501, 57.9039, 119.228, 0.22 ) }
    dend_28 { pt3dadd( -20.7607, 58.0918, 120.386, 0.22 ) }
    dend_28 { pt3dadd( -20.6988, 58.2779, 121.464, 0.22 ) }
    dend_28 { pt3dadd( -20.6211, 58.4155, 122.416, 0.22 ) }
    dend_28 { pt3dadd( -20.5255, 58.5254, 123.43, 0.22 ) }
    dend_28 { pt3dadd( -20.2968, 58.6577, 124.855, 0.22 ) }
    dend_28 { pt3dadd( -20.0733, 58.7483, 125.835, 0.22 ) }
    dend_28 { pt3dadd( -19.8131, 58.8756, 126.606, 0.22 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 25/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -139.895, 46.1131, 22.6629, 0.29 ) }
    dend_23 { pt3dadd( -140.92, 47.2333, 22.9538, 0.29 ) }
    dend_23 { pt3dadd( -141.931, 48.2927, 23.1952, 0.07 ) }
    dend_23 { pt3dadd( -142.252, 48.6234, 23.2633, 0.15 ) }
    dend_23 { pt3dadd( -142.723, 49.0831, 23.3683, 0.07 ) }
    dend_23 { pt3dadd( -143.099, 49.43, 23.4523, 0.29 ) }
    dend_23 { pt3dadd( -143.896, 50.1339, 23.6225, 0.07 ) }
    dend_23 { pt3dadd( -144.237, 50.4048, 23.6841, 0.37 ) }
    dend_23 { pt3dadd( -144.445, 50.5737, 23.7107, 0.37 ) }
    dend_23 { pt3dadd( -145.158, 51.1611, 23.8082, 0.07 ) }
    dend_23 { pt3dadd( -145.375, 51.3465, 23.8429, 0.15 ) }
    dend_23 { pt3dadd( -146.001, 51.9426, 23.989, 0.07 ) }
    dend_23 { pt3dadd( -146.532, 52.5248, 24.15, 0.07 ) }
    dend_23 { pt3dadd( -146.854, 52.9752, 24.3004, 0.74 ) }
    dend_23 { pt3dadd( -147.055, 53.3091, 24.43, 0.74 ) }
    dend_23 { pt3dadd( -147.5, 54.1876, 24.7947, 0.07 ) }
    dend_23 { pt3dadd( -147.818, 54.9252, 25.1688, 0.07 ) }
    dend_23 { pt3dadd( -147.96, 55.2927, 25.4081, 0.29 ) }
    dend_23 { pt3dadd( -148.327, 56.2712, 26.2396, 0.07 ) }
    dend_23 { pt3dadd( -148.545, 56.8504, 26.8528, 0.07 ) }
    dend_23 { pt3dadd( -148.678, 57.2164, 27.3042, 0.66 ) }
    dend_23 { pt3dadd( -148.946, 57.9471, 28.3024, 0.07 ) }
    dend_23 { pt3dadd( -149.211, 58.5422, 29.1948, 0.29 ) }
    dend_23 { pt3dadd( -149.542, 59.2173, 30.3189, 0.22 ) }
    dend_23 { pt3dadd( -149.902, 59.8937, 31.5033, 1.33 ) }
    dend_23 { pt3dadd( -150.273, 60.5759, 32.721, 0.07 ) }
    dend_23 { pt3dadd( -150.494, 60.9984, 33.497, 0.44 ) }
    dend_23 { pt3dadd( -150.849, 61.751, 34.8555, 0.15 ) }
    dend_23 { pt3dadd( -150.993, 62.1194, 35.4752, 0.15 ) }
    dend_23 { pt3dadd( -151.164, 62.683, 36.3401, 1.4 ) }
    dend_23 { pt3dadd( -151.384, 63.7538, 37.8884, 0.22 ) }
    dend_23 { pt3dadd( -151.491, 64.4048, 38.8252, 0.15 ) }
    dend_23 { pt3dadd( -151.536, 64.8981, 39.5169, 0.22 ) }
    dend_23 { pt3dadd( -151.534, 65.6248, 40.4635, 1.7 ) }
    dend_23 { pt3dadd( -151.483, 66.8654, 41.9936, 0.07 ) }
    dend_23 { pt3dadd( -151.419, 67.396, 42.6435, 0.59 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 61/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -139.895, 46.1131, 22.6629, 0.96 ) }
    dend_20 { pt3dadd( -141.216, 46.2699, 22.9856, 0.96 ) }
    dend_20 { pt3dadd( -142.414, 46.3278, 23.2294, 0.07 ) }
    dend_20 { pt3dadd( -142.789, 46.3357, 23.2947, 0.07 ) }
    dend_20 { pt3dadd( -143.317, 46.3385, 23.3841, 0.15 ) }
    dend_20 { pt3dadd( -143.525, 46.3396, 23.4191, 0.37 ) }
    dend_20 { pt3dadd( -144.051, 46.3424, 23.508, 0.44 ) }
    dend_20 { pt3dadd( -145.215, 46.2577, 23.6925, 0.22 ) }
    dend_20 { pt3dadd( -145.88, 46.1828, 23.7599, 0.96 ) }
    dend_20 { pt3dadd( -146.498, 46.1371, 23.8215, 1.7 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 71/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 44.819, -162.766, 30.0081, 0.07 ) }
    dend_14 { pt3dadd( 45.3235, -164.309, 31.6091, 0.07 ) }
    dend_14 { pt3dadd( 45.5673, -165.079, 32.5335, 0.07 ) }
    dend_14 { pt3dadd( 45.5951, -165.17, 32.6498, 0.59 ) }
    dend_14 { pt3dadd( 45.7182, -165.596, 33.1879, 1.11 ) }
    dend_14 { pt3dadd( 45.9391, -166.4, 34.1566, 0.07 ) }
    dend_14 { pt3dadd( 46.0458, -166.774, 34.5703, 0.52 ) }
    dend_14 { pt3dadd( 46.4841, -168.345, 36.1316, 0.07 ) }
    dend_14 { pt3dadd( 46.5741, -168.667, 36.4341, 0.07 ) }
    dend_14 { pt3dadd( 46.6634, -169.042, 36.7734, 1.03 ) }
    dend_14 { pt3dadd( 46.74, -169.478, 37.1614, 1.25 ) }
    dend_14 { pt3dadd( 46.9029, -170.767, 38.4085, 0.15 ) }
    dend_14 { pt3dadd( 46.9768, -171.611, 39.2857, 0.15 ) }
    dend_14 { pt3dadd( 47.0065, -172.149, 39.8432, 1.03 ) }
    dend_14 { pt3dadd( 47.0076, -173.116, 40.8662, 0.07 ) }
    dend_14 { pt3dadd( 46.9793, -173.741, 41.5454, 0.81 ) }
    dend_14 { pt3dadd( 46.8302, -175.332, 43.304, 0.07 ) }
    dend_14 { pt3dadd( 46.739, -175.915, 43.9312, 0.66 ) }
    dend_14 { pt3dadd( 46.6623, -176.379, 44.4061, 1.18 ) }
    dend_14 { pt3dadd( 46.4784, -177.54, 45.5286, 0.15 ) }
    dend_14 { pt3dadd( 46.3708, -178.265, 46.1396, 0.44 ) }
    dend_14 { pt3dadd( 46.3266, -178.553, 46.3331, 0.44 ) }
    dend_14 { pt3dadd( 46.1203, -179.931, 47.0852, 0.22 ) }
    dend_14 { pt3dadd( 46.0002, -180.935, 47.5937, 0.66 ) }
    dend_14 { pt3dadd( 45.9332, -181.701, 47.9729, 1.47 ) }
    dend_14 { pt3dadd( 45.8918, -182.525, 48.353, 0.52 ) }
    dend_14 { pt3dadd( 45.8558, -183.611, 48.8857, 0.15 ) }
    dend_14 { pt3dadd( 45.8383, -184.718, 49.4434, 0.15 ) }
    dend_14 { pt3dadd( 45.8461, -185.521, 49.8425, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_14 { pt3dadd( 45.8538, -186.06, 50.0962, 0.96 ) }
    dend_14 { pt3dadd( 45.8623, -186.578, 50.3527, 1.11 ) }
    dend_14 { pt3dadd( 45.8878, -188.588, 51.3836, 0.07 ) }
    dend_14 { pt3dadd( 45.8834, -188.983, 51.5848, 0.07 ) }
    dend_14 { pt3dadd( 45.844, -189.512, 51.8147, 0.52 ) }
    dend_14 { pt3dadd( 45.7138, -190.728, 52.2926, 0.07 ) }
    dend_14 { pt3dadd( 45.608, -191.674, 52.5995, 0.07 ) }
    dend_14 { pt3dadd( 45.5744, -192.02, 52.6859, 0.22 ) }
    dend_14 { pt3dadd( 45.5477, -192.343, 52.7342, 0.52 ) }
    dend_14 { pt3dadd( 45.4576, -193.669, 52.9357, 0.07 ) }
    dend_14 { pt3dadd( 45.4439, -193.949, 52.9787, 0.52 ) }
    dend_14 { pt3dadd( 45.4365, -194.626, 53.0783, 1.03 ) }
    dend_14 { pt3dadd( 45.4661, -196.134, 53.3315, 0.07 ) }
    dend_14 { pt3dadd( 45.4855, -196.558, 53.4264, 0.15 ) }
    dend_14 { pt3dadd( 45.5193, -197.113, 53.5773, 0.07 ) }
    dend_14 { pt3dadd( 45.5443, -197.414, 53.6709, 0.44 ) }
    dend_14 { pt3dadd( 45.575, -197.814, 53.805, 0.81 ) }
    dend_14 { pt3dadd( 45.6622, -199.208, 54.3232, 0.22 ) }
    dend_14 { pt3dadd( 45.7092, -199.883, 54.6002, 0.81 ) }
    dend_14 { pt3dadd( 45.7498, -200.437, 54.8549, 1.92 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 20/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 44.819, -162.766, 30.0081, 0.07 ) }
    dend_13 { pt3dadd( 45.0772, -164.467, 30.3142, 0.07 ) }
    dend_13 { pt3dadd( 45.149, -164.891, 30.3837, 0.22 ) }
    dend_13 { pt3dadd( 45.3698, -166.061, 30.554, 0.07 ) }
    dend_13 { pt3dadd( 45.4275, -166.346, 30.5908, 0.15 ) }
    dend_13 { pt3dadd( 45.782, -167.94, 30.7767, 0.07 ) }
    dend_13 { pt3dadd( 45.88, -168.365, 30.8189, 0.66 ) }
    dend_13 { pt3dadd( 45.9963, -168.797, 30.8474, 0.66 ) }
    dend_13 { pt3dadd( 46.2293, -169.59, 30.8909, 0.07 ) }
    dend_13 { pt3dadd( 46.434, -170.224, 30.9151, 0.74 ) }
    dend_13 { pt3dadd( 46.5964, -170.716, 30.9318, 1.55 ) }
    dend_13 { pt3dadd( 47.0307, -172.098, 30.9696, 0.22 ) }
    dend_13 { pt3dadd( 47.4385, -173.404, 30.9806, 0.07 ) }
    dend_13 { pt3dadd( 47.5552, -173.779, 30.9649, 0.74 ) }
    dend_13 { pt3dadd( 47.8105, -174.576, 30.8814, 1.77 ) }
    dend_13 { pt3dadd( 48.2555, -175.846, 30.6576, 0.22 ) }
    dend_13 { pt3dadd( 48.582, -176.627, 30.423, 0.22 ) }
    dend_13 { pt3dadd( 48.9033, -177.234, 30.1101, 0.22 ) }
    dend_13 { pt3dadd( 49.3469, -177.91, 29.5883, 0.22 ) }
    dend_13 { pt3dadd( 49.6697, -178.327, 29.1972, 0.81 ) }
    dend_13 { pt3dadd( 50.0616, -178.764, 28.7025, 1.55 ) }
    dend_13 { pt3dadd( 50.8121, -179.513, 27.7442, 0.22 ) }
    dend_13 { pt3dadd( 51.3372, -180.02, 27.0475, 0.66 ) }
    dend_13 { pt3dadd( 51.8594, -180.545, 26.2939, 1.25 ) }
    dend_13 { pt3dadd( 52.3467, -181.053, 25.5446, 0.22 ) }
    dend_13 { pt3dadd( 52.8555, -181.628, 24.6884, 0.22 ) }
    dend_13 { pt3dadd( 53.1903, -182.091, 24.0551, 0.22 ) }
    dend_13 { pt3dadd( 53.4987, -182.605, 23.4342, 0.22 ) }
    dend_13 { pt3dadd( 53.8951, -183.349, 22.612, 0.29 ) }
    dend_13 { pt3dadd( 54.0897, -183.741, 22.2059, 1.03 ) }
    dend_13 { pt3dadd( 54.2262, -184.011, 21.9379, 1.92 ) }
    dend_13 { pt3dadd( 55.0912, -185.611, 20.4694, 0.22 ) }
    dend_13 { pt3dadd( 55.6418, -186.556, 19.6804, 0.15 ) }
    dend_13 { pt3dadd( 55.9664, -187.107, 19.2778, 0.74 ) }
    dend_13 { pt3dadd( 56.2814, -187.656, 18.9142, 1.33 ) }
    dend_13 { pt3dadd( 56.8591, -188.689, 18.2688, 0.07 ) }
    dend_13 { pt3dadd( 57.0523, -189.025, 18.0683, 0.22 ) }
    dend_13 { pt3dadd( 57.3577, -189.52, 17.819, 0.15 ) }
    dend_13 { pt3dadd( 57.585, -189.891, 17.6558, 0.22 ) }
    dend_13 { pt3dadd( 57.9838, -190.587, 17.3643, 0.22 ) }
    dend_13 { pt3dadd( 58.2243, -191.057, 17.1698, 0.66 ) }
    dend_13 { pt3dadd( 58.4315, -191.499, 17.008, 1.18 ) }
    dend_13 { pt3dadd( 58.7783, -192.25, 16.7194, 0.15 ) }
    dend_13 { pt3dadd( 59.1138, -192.929, 16.4499, 0.15 ) }
    dend_13 { pt3dadd( 59.5295, -193.679, 16.1583, 0.22 ) }
    dend_13 { pt3dadd( 59.854, -194.235, 15.9671, 0.66 ) }
    dend_13 { pt3dadd( 60.2609, -194.901, 15.7515, 0.15 ) }
    dend_13 { pt3dadd( 60.9382, -195.938, 15.4516, 0.22 ) }
    dend_13 { pt3dadd( 61.2607, -196.4, 15.3384, 0.74 ) }
    dend_13 { pt3dadd( 61.6557, -196.936, 15.2408, 1.18 ) }
    dend_13 { pt3dadd( 62.4938, -198.009, 15.0948, 0.15 ) }
    dend_13 { pt3dadd( 62.8883, -198.52, 15.0395, 0.22 ) }
    dend_13 { pt3dadd( 63.4247, -199.276, 14.9871, 0.15 ) }
    dend_13 { pt3dadd( 63.6517, -199.628, 14.9837, 0.59 ) }
    dend_13 { pt3dadd( 63.7925, -199.876, 14.9835, 0.96 ) }
    dend_13 { pt3dadd( 64.008, -200.322, 14.9835, 0.59 ) }
    dend_13 { pt3dadd( 64.33, -201.048, 14.9835, 0.15 ) }
    dend_13 { pt3dadd( 64.5769, -201.616, 14.9835, 0.37 ) }
    dend_13 { pt3dadd( 65.0268, -202.644, 14.9835, 0.15 ) }
    dend_13 { pt3dadd( 65.1808, -202.972, 14.9835, 0.52 ) }
    dend_13 { pt3dadd( 65.473, -203.573, 14.9835, 0.88 ) }
    dend_13 { pt3dadd( 66.022, -204.614, 14.9835, 0.15 ) }
    dend_13 { pt3dadd( 66.3294, -205.151, 14.9835, 0.29 ) }
    dend_13 { pt3dadd( 66.595, -205.595, 14.9835, 0.22 ) }
    dend_13 { pt3dadd( 66.7885, -205.94, 14.9835, 0.44 ) }
    dend_13 { pt3dadd( 67.069, -206.45, 14.9835, 0.44 ) }
    dend_13 { pt3dadd( 67.7109, -207.626, 14.9835, 0.15 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 87/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -2.04435, -40.6982, 11.183, 0.29 ) }
    dend_8 { pt3dadd( -1.37932, -41.5355, 10.6662, 0.29 ) }
    dend_8 { pt3dadd( -0.809886, -42.4778, 10.1045, 0.07 ) }
    dend_8 { pt3dadd( -0.612043, -42.8832, 9.84041, 0.29 ) }
    dend_8 { pt3dadd( -0.294458, -43.6497, 9.35132, 0.15 ) }
    dend_8 { pt3dadd( -0.109428, -44.1464, 9.0308, 0.52 ) }
    dend_8 { pt3dadd( 0.106622, -44.7961, 8.62191, 0.59 ) }
    dend_8 { pt3dadd( 0.450972, -46.0314, 7.89771, 0.15 ) }
    dend_8 { pt3dadd( 0.660854, -46.955, 7.37612, 0.74 ) }
    dend_8 { pt3dadd( 0.813221, -47.7153, 6.94547, 1.99 ) }
    dend_8 { pt3dadd( 0.919367, -48.2746, 6.63951, 1.99 ) }
    dend_8 { pt3dadd( 1.25921, -49.9623, 5.76162, 0.15 ) }
    dend_8 { pt3dadd( 1.38017, -50.4583, 5.52517, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_8 { pt3dadd( 1.6757, -51.5062, 5.11596, 0.22 ) }
    dend_8 { pt3dadd( 1.76963, -51.8123, 5.0141, 0.81 ) }
    dend_8 { pt3dadd( 1.97587, -52.4581, 4.8208, 1.18 ) }
    dend_8 { pt3dadd( 2.18573, -53.082, 4.65394, 0.59 ) }
    dend_8 { pt3dadd( 2.63652, -54.345, 4.35164, 0.07 ) }
    dend_8 { pt3dadd( 2.90391, -55.0933, 4.18478, 0.07 ) }
    dend_8 { pt3dadd( 3.00729, -55.3619, 4.1351, 0.07 ) }
    dend_8 { pt3dadd( 3.26582, -56.0132, 4.01133, 0.29 ) }
    dend_8 { pt3dadd( 3.64556, -56.9629, 3.83302, 0.22 ) }
    dend_8 { pt3dadd( 3.96848, -57.7309, 3.69404, 0.96 ) }
    dend_8 { pt3dadd( 4.30118, -58.5352, 3.56936, 0.22 ) }
    dend_8 { pt3dadd( 4.77017, -59.7923, 3.36837, 0.15 ) }
    dend_8 { pt3dadd( 5.15029, -60.9364, 3.19106, 0.15 ) }
    dend_8 { pt3dadd( 5.39938, -61.7497, 3.07261, 1.03 ) }
    dend_8 { pt3dadd( 5.68106, -62.751, 2.94741, 2.14 ) }
    dend_8 { pt3dadd( 6.05229, -64.2117, 2.7643, 0.22 ) }
    dend_8 { pt3dadd( 6.32639, -65.4341, 2.61821, 0.22 ) }
    dend_8 { pt3dadd( 6.44078, -66.0748, 2.55191, 0.66 ) }
    dend_8 { pt3dadd( 6.52909, -66.7235, 2.48486, 0.96 ) }
    dend_8 { pt3dadd( 6.6484, -67.8773, 2.35745, 0.52 ) }
    dend_8 { pt3dadd( 6.7294, -69.0978, 2.22673, 0.22 ) }
    dend_8 { pt3dadd( 6.7773, -70.1789, 2.11447, 0.88 ) }
    dend_8 { pt3dadd( 6.81931, -71.8208, 1.9613, 0.22 ) }
    dend_8 { pt3dadd( 6.79854, -73.1975, 1.86021, 0.15 ) }
    dend_8 { pt3dadd( 6.74517, -74.1373, 1.79677, 0.22 ) }
    dend_8 { pt3dadd( 6.60318, -75.6524, 1.71342, 0.15 ) }
    dend_8 { pt3dadd( 6.5179, -76.4588, 1.683, 0.81 ) }
    dend_8 { pt3dadd( 6.44277, -77.1778, 1.66413, 0.81 ) }
    dend_8 { pt3dadd( 6.33714, -78.8695, 1.64938, 0.15 ) }
    dend_8 { pt3dadd( 6.32991, -79.9013, 1.70862, 0.22 ) }
    dend_8 { pt3dadd( 6.35793, -80.4911, 1.74541, 0.88 ) }
    dend_8 { pt3dadd( 6.4342, -81.2421, 1.78262, 1.84 ) }
    dend_8 { pt3dadd( 6.56614, -82.0374, 1.80723, 1.03 ) }
    dend_8 { pt3dadd( 6.89982, -83.5818, 1.77847, 0.22 ) }
    dend_8 { pt3dadd( 7.25483, -84.9588, 1.71458, 0.22 ) }
    dend_8 { pt3dadd( 7.47806, -85.8117, 1.62463, 0.22 ) }
    dend_8 { pt3dadd( 7.64943, -86.5424, 1.52006, 0.81 ) }
    dend_8 { pt3dadd( 7.84126, -87.4085, 1.37606, 1.47 ) }
    dend_8 { pt3dadd( 8.18656, -89.0851, 1.04396, 0.37 ) }
    dend_8 { pt3dadd( 8.36768, -90.0998, 0.786713, 0.44 ) }
    dend_8 { pt3dadd( 8.62983, -91.5923, 0.325424, 0.74 ) }
    dend_8 { pt3dadd( 8.87437, -93.0787, -0.0599277, 0.96 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 42/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -2.04435, -40.6982, 11.183, 0.22 ) }
    dend_7 { pt3dadd( -2.32797, -42.965, 12.773, 0.22 ) }
    dend_7 { pt3dadd( -2.40332, -43.7782, 13.3926, 0.66 ) }
    dend_7 { pt3dadd( -2.48065, -44.7521, 14.1399, 1.03 ) }
    dend_7 { pt3dadd( -2.5553, -45.8382, 14.9534, 0.22 ) }
    dend_7 { pt3dadd( -2.62, -46.7042, 15.5823, 0.22 ) }
    dend_7 { pt3dadd( -2.68941, -47.6001, 16.1959, 0.37 ) }
    dend_7 { pt3dadd( -2.73396, -48.547, 16.795, 0.37 ) }
    dend_7 { pt3dadd( -2.78095, -49.1798, 17.1864, 0.88 ) }
    dend_7 { pt3dadd( -2.8281, -49.6778, 17.4787, 1.92 ) }
    dend_7 { pt3dadd( -2.89907, -50.3531, 17.8429, 2.14 ) }
    dend_7 { pt3dadd( -3.05867, -52.0216, 18.6871, 0.22 ) }
    dend_7 { pt3dadd( -3.17116, -53.4064, 19.3884, 0.22 ) }
    dend_7 { pt3dadd( -3.22356, -54.213, 19.81, 0.88 ) }
    dend_7 { pt3dadd( -3.24466, -54.9761, 20.248, 1.7 ) }
    dend_7 { pt3dadd( -3.2315, -55.7364, 20.7213, 2.06 ) }
    dend_7 { pt3dadd( -3.10359, -57.6794, 22.0175, 0.29 ) }
    dend_7 { pt3dadd( -2.98472, -58.8276, 22.7967, 0.29 ) }
    dend_7 { pt3dadd( -2.86108, -59.7259, 23.3999, 0.81 ) }
    dend_7 { pt3dadd( -2.74588, -60.5546, 23.9088, 1.25 ) }
    dend_7 { pt3dadd( -2.56117, -62.3617, 24.9546, 0.15 ) }
    dend_7 { pt3dadd( -2.51632, -63.1175, 25.3484, 0.15 ) }
    dend_7 { pt3dadd( -2.50368, -63.8052, 25.6627, 0.88 ) }
    dend_7 { pt3dadd( -2.52092, -64.971, 26.1243, 2.43 ) }
    dend_7 { pt3dadd( -2.60821, -66.8334, 26.7638, 0.66 ) }
    dend_7 { pt3dadd( -2.76561, -68.7742, 27.3436, 0.29 ) }
    dend_7 { pt3dadd( -2.85422, -69.7062, 27.5863, 0.88 ) }
    dend_7 { pt3dadd( -3.00304, -71.368, 27.9905, 0.22 ) }
    dend_7 { pt3dadd( -3.04052, -71.9252, 28.1393, 0.52 ) }
    dend_7 { pt3dadd( -3.06162, -72.6281, 28.3199, 0.88 ) }
    dend_7 { pt3dadd( -3.03817, -73.335, 28.5026, 0.37 ) }
    dend_7 { pt3dadd( -2.9465, -74.2752, 28.7182, 0.15 ) }
    dend_7 { pt3dadd( -2.84008, -75.2604, 28.9524, 0.52 ) }
    dend_7 { pt3dadd( -2.72115, -76.36, 29.2251, 0.15 ) }
    dend_7 { pt3dadd( -2.62936, -77.2255, 29.4664, 0.15 ) }
    dend_7 { pt3dadd( -2.59026, -77.6334, 29.5985, 0.66 ) }
    dend_7 { pt3dadd( -2.54992, -78.179, 29.7906, 0.96 ) }
    dend_7 { pt3dadd( -2.45432, -79.693, 30.359, 0.22 ) }
    dend_7 { pt3dadd( -2.39602, -80.6544, 30.7263, 1.25 ) }
    dend_7 { pt3dadd( -2.3653, -81.272, 30.9636, 2.43 ) }
    dend_7 { pt3dadd( -2.3292, -81.9735, 31.2517, 1.99 ) }
    dend_7 { pt3dadd( -2.2244, -83.8098, 32.038, 0.22 ) }
    dend_7 { pt3dadd( -2.14308, -85.0309, 32.5737, 0.07 ) }
    dend_7 { pt3dadd( -2.08814, -85.8511, 32.9504, 0.96 ) }
    dend_7 { pt3dadd( -2.0248, -87.3613, 33.6867, 0.15 ) }
    dend_7 { pt3dadd( -2.02915, -87.9525, 33.9987, 0.15 ) }
    dend_7 { pt3dadd( -2.07687, -88.5288, 34.3373, 0.88 ) }
    dend_7 { pt3dadd( -2.23335, -89.2049, 34.8263, 1.47 ) }
    dend_7 { pt3dadd( -2.82335, -90.5518, 35.9843, 0.15 ) }
    dend_7 { pt3dadd( -3.15706, -91.0376, 36.482, 0.22 ) }
    dend_7 { pt3dadd( -3.72777, -91.5988, 37.1774, 0.22 ) }
    dend_7 { pt3dadd( -4.2767, -92.0205, 37.7791, 0.37 ) }
    dend_7 { pt3dadd( -5.01203, -92.4799, 38.53, 0.81 ) }
    dend_7 { pt3dadd( -5.73809, -92.8572, 39.1993, 1.25 ) }
    dend_7 { pt3dadd( -6.45153, -93.1794, 39.7948, 0.22 ) }
    dend_7 { pt3dadd( -7.35752, -93.6021, 40.5243, 0.22 ) }
    dend_7 { pt3dadd( -8.12469, -93.9741, 41.1333, 0.66 ) }
    dend_7 { pt3dadd( -8.80381, -94.3186, 41.6579, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_7 { pt3dadd( -9.87613, -94.899, 42.5037, 0.15 ) }
    dend_7 { pt3dadd( -10.137, -95.0517, 42.7169, 0.37 ) }
    dend_7 { pt3dadd( -10.996, -95.5878, 43.4228, 0.15 ) }
    dend_7 { pt3dadd( -11.6446, -96.0031, 43.932, 0.66 ) }
    dend_7 { pt3dadd( -12.0873, -96.3138, 44.2525, 1.18 ) }
    dend_7 { pt3dadd( -13.4117, -97.2896, 45.2551, 0.29 ) }
    dend_7 { pt3dadd( -14.4917, -98.1274, 46.1327, 0.15 ) }
    dend_7 { pt3dadd( -14.7865, -98.3829, 46.3906, 0.74 ) }
    dend_7 { pt3dadd( -15.347, -98.9179, 46.9131, 1.7 ) }
    dend_7 { pt3dadd( -16.7312, -100.358, 48.3148, 0.22 ) }
    dend_7 { pt3dadd( -17.8037, -101.629, 49.5567, 0.22 ) }
    dend_7 { pt3dadd( -18.4317, -102.493, 50.3878, 1.18 ) }
    dend_7 { pt3dadd( -19.2347, -103.759, 51.6378, 0.07 ) }
    dend_7 { pt3dadd( -19.5116, -104.279, 52.15, 0.29 ) }
    dend_7 { pt3dadd( -19.9045, -105.243, 53.1096, 0.66 ) }
    dend_7 { pt3dadd( -20.1366, -106.094, 53.9793, 0.15 ) }
    dend_7 { pt3dadd( -20.2118, -106.499, 54.3662, 0.29 ) }
    dend_7 { pt3dadd( -20.2869, -107.063, 54.9158, 0.37 ) }
    dend_7 { pt3dadd( -20.3403, -107.722, 55.6106, 1.11 ) }
    dend_7 { pt3dadd( -20.3531, -108.576, 56.5922, 0.29 ) }
    dend_7 { pt3dadd( -20.2921, -109.519, 57.7519, 0.88 ) }
    dend_7 { pt3dadd( -20.1146, -110.752, 59.4361, 0.15 ) }
    dend_7 { pt3dadd( -19.9551, -111.363, 60.3798, 1.11 ) }
    dend_7 { pt3dadd( -19.5945, -112.309, 62.0107, 0.66 ) }
    dend_7 { pt3dadd( -19.177, -113.233, 63.7497, 0.22 ) }
    dend_7 { pt3dadd( -18.9061, -113.783, 64.7837, 0.96 ) }
    dend_7 { pt3dadd( -18.4172, -114.71, 66.5066, 0.88 ) }
    dend_7 { pt3dadd( -17.8846, -115.735, 68.4675, 0.22 ) }
    dend_7 { pt3dadd( -17.5597, -116.422, 69.7848, 0.74 ) }
    dend_7 { pt3dadd( -17.3307, -116.957, 70.7927, 1.03 ) }
    dend_7 { pt3dadd( -16.9231, -118.053, 72.7679, 0.15 ) }
    dend_7 { pt3dadd( -16.6383, -118.911, 74.2457, 1.33 ) }
    dend_7 { pt3dadd( -16.1509, -120.532, 76.8957, 0.37 ) }
    dend_7 { pt3dadd( -15.9221, -121.33, 78.1343, 0.37 ) }
    dend_7 { pt3dadd( -15.7313, -122.015, 79.1479, 0.22 ) }
    dend_7 { pt3dadd( -15.6358, -122.349, 79.6337, 0.74 ) }
    dend_7 { pt3dadd( -15.3721, -123.372, 81.0658, 0.22 ) }
    dend_7 { pt3dadd( -15.234, -124.081, 81.9285, 0.52 ) }
    dend_7 { pt3dadd( -15.1607, -124.589, 82.4277, 1.11 ) }
    dend_7 { pt3dadd( -15.0884, -125.726, 83.4483, 0.07 ) }
    dend_7 { pt3dadd( -15.0922, -126.377, 83.9875, 0.15 ) }
    dend_7 { pt3dadd( -15.125, -127.018, 84.4765, 0.66 ) }
    dend_7 { pt3dadd( -15.224, -127.951, 85.0779, 0.07 ) }
    dend_7 { pt3dadd( -15.276, -128.355, 85.3209, 0.22 ) }
    dend_7 { pt3dadd( -15.378, -129.035, 85.7421, 0.07 ) }
    dend_7 { pt3dadd( -15.4996, -129.65, 86.1277, 1.03 ) }
    dend_7 { pt3dadd( -15.631, -130.259, 86.5032, 1.4 ) }
    dend_7 { pt3dadd( -15.9465, -131.704, 87.3735, 0.22 ) }
    dend_7 { pt3dadd( -16.2083, -132.878, 88.0882, 0.07 ) }
    dend_7 { pt3dadd( -16.3833, -133.633, 88.5622, 0.59 ) }
    dend_7 { pt3dadd( -16.6594, -134.814, 89.3404, 0.07 ) }
    dend_7 { pt3dadd( -16.8339, -135.525, 89.8476, 0.15 ) }
    dend_7 { pt3dadd( -17.0471, -136.255, 90.4176, 1.18 ) }
    dend_7 { pt3dadd( -17.2905, -136.988, 91.017, 0.15 ) }
    dend_7 { pt3dadd( -17.5342, -137.668, 91.6399, 0.88 ) }
    dend_7 { pt3dadd( -17.8756, -138.569, 92.5258, 0.07 ) }
    dend_7 { pt3dadd( -18.0682, -139.062, 93.0476, 0.44 ) }
    dend_7 { pt3dadd( -18.5257, -140.078, 94.2512, 0.15 ) }
    dend_7 { pt3dadd( -18.847, -140.729, 95.092, 0.96 ) }
    dend_7 { pt3dadd( -19.5115, -142.032, 96.8435, 0.29 ) }
    dend_7 { pt3dadd( -19.7526, -142.488, 97.4583, 0.15 ) }
    dend_7 { pt3dadd( -19.9606, -142.857, 97.9277, 0.52 ) }
    dend_7 { pt3dadd( -20.5022, -143.814, 99.0544, 0.37 ) }
    dend_7 { pt3dadd( -20.9792, -144.712, 99.9914, 1.25 ) }
    dend_7 { pt3dadd( -21.3371, -145.43, 100.639, 0.07 ) }
    dend_7 { pt3dadd( -21.5659, -145.944, 101.029, 0.22 ) }
    dend_7 { pt3dadd( -22.03, -147.111, 101.846, 0.07 ) }
    dend_7 { pt3dadd( -22.156, -147.483, 102.081, 0.59 ) }
    dend_7 { pt3dadd( -22.3717, -148.23, 102.507, 1.33 ) }
    dend_7 { pt3dadd( -22.8147, -149.884, 103.406, 0.07 ) }
    dend_7 { pt3dadd( -23.1139, -151.111, 104.076, 0.07 ) }
    dend_7 { pt3dadd( -23.237, -151.704, 104.426, 0.59 ) }
    dend_7 { pt3dadd( -23.3704, -152.538, 104.963, 0.15 ) }
    dend_7 { pt3dadd( -23.4911, -153.302, 105.489, 0.37 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 74/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -37.9659, -93.5953, 17.6534, 0.22 ) }
    dend_5 { pt3dadd( -39.0077, -94.6582, 18.2762, 0.22 ) }
    dend_5 { pt3dadd( -39.7207, -95.423, 18.607, 0.22 ) }
    dend_5 { pt3dadd( -40.0199, -95.7166, 18.7042, 0.15 ) }
    dend_5 { pt3dadd( -40.4404, -96.1201, 18.8378, 0.44 ) }
    dend_5 { pt3dadd( -40.8362, -96.4947, 18.9667, 0.96 ) }
    dend_5 { pt3dadd( -41.2452, -96.8797, 19.1009, 1.11 ) }
    dend_5 { pt3dadd( -42.0944, -97.679, 19.3402, 0.29 ) }
    dend_5 { pt3dadd( -43.3008, -98.8604, 19.713, 0.22 ) }
    dend_5 { pt3dadd( -43.7569, -99.2936, 19.8472, 0.59 ) }
    dend_5 { pt3dadd( -44.0674, -99.5771, 19.9364, 0.96 ) }
    dend_5 { pt3dadd( -44.5336, -99.9899, 20.0811, 0.96 ) }
    dend_5 { pt3dadd( -45.2218, -100.583, 20.3146, 0.22 ) }
    dend_5 { pt3dadd( -45.8238, -101.106, 20.5449, 0.22 ) }
    dend_5 { pt3dadd( -46.6164, -101.845, 20.8853, 0.22 ) }
    dend_5 { pt3dadd( -46.9625, -102.168, 21.044, 0.52 ) }
    dend_5 { pt3dadd( -47.5447, -102.721, 21.3399, 1.33 ) }
    dend_5 { pt3dadd( -48.2273, -103.373, 21.7184, 0.22 ) }
    dend_5 { pt3dadd( -48.8077, -103.937, 22.0569, 0.52 ) }
    dend_5 { pt3dadd( -49.5481, -104.688, 22.5382, 0.15 ) }
    dend_5 { pt3dadd( -50.0684, -105.269, 22.9091, 0.15 ) }
    dend_5 { pt3dadd( -50.3646, -105.619, 23.1201, 0.22 ) }
    dend_5 { pt3dadd( -50.5034, -105.804, 23.227, 0.37 ) }
    dend_5 { pt3dadd( -50.8505, -106.295, 23.5154, 0.81 ) }
    dend_5 { pt3dadd( -51.2981, -106.979, 23.9354, 0.15 ) }
    dend_5 { pt3dadd( -51.4255, -107.193, 24.0757, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_5 { pt3dadd( -51.6073, -107.532, 24.3038, 0.15 ) }
    dend_5 { pt3dadd( -51.9417, -108.101, 24.7295, 0.22 ) }
    dend_5 { pt3dadd( -52.2822, -108.618, 25.1975, 0.15 ) }
    dend_5 { pt3dadd( -52.5618, -108.971, 25.5872, 0.15 ) }
    dend_5 { pt3dadd( -52.7769, -109.185, 25.8715, 0.44 ) }
    dend_5 { pt3dadd( -53.0883, -109.445, 26.2649, 0.66 ) }
    dend_5 { pt3dadd( -53.9199, -110.076, 27.3351, 0.22 ) }
    dend_5 { pt3dadd( -54.5142, -110.513, 28.0914, 0.74 ) }
    dend_5 { pt3dadd( -55.1389, -110.962, 28.8883, 1.7 ) }
    dend_5 { pt3dadd( -56.0254, -111.592, 30.0202, 0.22 ) }
    dend_5 { pt3dadd( -56.5083, -111.943, 30.65, 0.15 ) }
    dend_5 { pt3dadd( -57.0295, -112.319, 31.3474, 0.52 ) }
    dend_5 { pt3dadd( -57.3231, -112.527, 31.7571, 0.66 ) }
    dend_5 { pt3dadd( -57.9532, -112.954, 32.6029, 0.22 ) }
    dend_5 { pt3dadd( -58.48, -113.287, 33.2843, 0.37 ) }
    dend_5 { pt3dadd( -58.9625, -113.558, 33.8668, 0.22 ) }
    dend_5 { pt3dadd( -59.408, -113.755, 34.3414, 0.37 ) }
    dend_5 { pt3dadd( -59.8409, -113.897, 34.7284, 0.37 ) }
    dend_5 { pt3dadd( -60.2915, -114.021, 35.1101, 0.15 ) }
    dend_5 { pt3dadd( -60.9692, -114.222, 35.6366, 0.15 ) }
    dend_5 { pt3dadd( -61.2511, -114.307, 35.8394, 0.74 ) }
    dend_5 { pt3dadd( -62.0312, -114.578, 36.3589, 1.55 ) }
    dend_5 { pt3dadd( -63.2798, -115.089, 37.1884, 0.07 ) }
    dend_5 { pt3dadd( -64.1563, -115.505, 37.7876, 0.15 ) }
    dend_5 { pt3dadd( -64.8252, -115.866, 38.2623, 0.07 ) }
    dend_5 { pt3dadd( -65.0462, -116.008, 38.4267, 0.44 ) }
    dend_5 { pt3dadd( -65.3654, -116.245, 38.6806, 0.44 ) }
    dend_5 { pt3dadd( -66.0759, -116.864, 39.2809, 0.22 ) }
    dend_5 { pt3dadd( -66.537, -117.329, 39.6903, 0.88 ) }
    dend_5 { pt3dadd( -66.8721, -117.693, 39.9742, 1.47 ) }
    dend_5 { pt3dadd( -67.758, -118.72, 40.7341, 0.07 ) }
    dend_5 { pt3dadd( -68.2262, -119.291, 41.1303, 0.07 ) }
    dend_5 { pt3dadd( -68.3714, -119.479, 41.2504, 0.29 ) }
    dend_5 { pt3dadd( -68.7886, -120.045, 41.5607, 0.81 ) }
    dend_5 { pt3dadd( -69.3677, -120.827, 41.9348, 0.07 ) }
    dend_5 { pt3dadd( -69.877, -121.516, 42.2133, 0.07 ) }
    dend_5 { pt3dadd( -70.4239, -122.278, 42.4321, 0.07 ) }
    dend_5 { pt3dadd( -70.6302, -122.577, 42.5034, 0.59 ) }
    dend_5 { pt3dadd( -70.939, -123.034, 42.6039, 0.96 ) }
    dend_5 { pt3dadd( -71.6834, -124.181, 42.853, 0.15 ) }
    dend_5 { pt3dadd( -72.0352, -124.756, 42.9781, 0.88 ) }
    dend_5 { pt3dadd( -72.8802, -126.152, 43.292, 0.07 ) }
    dend_5 { pt3dadd( -73.2226, -126.75, 43.4505, 0.37 ) }
    dend_5 { pt3dadd( -73.2543, -126.809, 43.4693, 0.37 ) }
    dend_5 { pt3dadd( -73.71, -127.747, 43.827, 0.07 ) }
    dend_5 { pt3dadd( -73.9837, -128.412, 44.1343, 0.88 ) }
    dend_5 { pt3dadd( -74.3855, -129.489, 44.7212, 0.07 ) }
    dend_5 { pt3dadd( -74.6221, -130.217, 45.1551, 0.07 ) }
    dend_5 { pt3dadd( -74.719, -130.562, 45.358, 0.29 ) }
    dend_5 { pt3dadd( -74.792, -130.837, 45.5208, 0.29 ) }
    dend_5 { pt3dadd( -75.0452, -131.828, 46.1077, 0.07 ) }
    dend_5 { pt3dadd( -75.2382, -132.507, 46.509, 0.81 ) }
    dend_5 { pt3dadd( -75.3781, -132.949, 46.7629, 1.4 ) }
    dend_5 { pt3dadd( -76.1626, -135.073, 48.0117, 0.07 ) }
    dend_5 { pt3dadd( -76.3764, -135.587, 48.3291, 0.74 ) }
    dend_5 { pt3dadd( -76.5585, -135.985, 48.5802, 0.74 ) }
    dend_5 { pt3dadd( -77.1459, -137.177, 49.3606, 0.07 ) }
    dend_5 { pt3dadd( -77.381, -137.617, 49.6614, 0.22 ) }
    dend_5 { pt3dadd( -77.8869, -138.46, 50.2839, 0.07 ) }
    dend_5 { pt3dadd( -78.2368, -138.969, 50.7074, 0.81 ) }
    dend_5 { pt3dadd( -78.4735, -139.317, 51.0216, 1.25 ) }
    dend_5 { pt3dadd( -79.097, -140.218, 51.9579, 0.22 ) }
    dend_5 { pt3dadd( -79.4025, -140.642, 52.4417, 0.07 ) }
    dend_5 { pt3dadd( -79.6308, -140.953, 52.8073, 0.44 ) }
    dend_5 { pt3dadd( -80.4212, -141.968, 54.0291, 0.07 ) }
    dend_5 { pt3dadd( -80.9185, -142.581, 54.8074, 1.03 ) }
    dend_5 { pt3dadd( -81.5355, -143.316, 55.8162, 0.07 ) }
    dend_5 { pt3dadd( -81.7969, -143.612, 56.2571, 0.22 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -37.9659, -93.5953, 17.6534, 0.07 ) }
    dend_2 { pt3dadd( -38.2875, -94.2942, 17.721, 0.07 ) }
    dend_2 { pt3dadd( -38.5347, -94.7879, 17.7791, 0.29 ) }
    dend_2 { pt3dadd( -38.9256, -95.4736, 17.8743, 0.15 ) }
    dend_2 { pt3dadd( -39.2011, -95.9021, 17.9365, 0.15 ) }
    dend_2 { pt3dadd( -39.5659, -96.4326, 18.0111, 0.74 ) }
    dend_2 { pt3dadd( -39.7108, -96.6426, 18.036, 0.74 ) }
    dend_2 { pt3dadd( -40.3661, -97.5851, 18.0946, 0.15 ) }
    dend_2 { pt3dadd( -40.8268, -98.2751, 18.0974, 0.15 ) }
    dend_2 { pt3dadd( -41.1143, -98.7472, 18.0737, 0.29 ) }
    dend_2 { pt3dadd( -41.4664, -99.3793, 18.0087, 0.15 ) }
    dend_2 { pt3dadd( -41.6944, -99.8719, 17.9334, 0.29 ) }
    dend_2 { pt3dadd( -42.0047, -100.774, 17.7794, 0.07 ) }
    dend_2 { pt3dadd( -42.0721, -101.077, 17.7216, 0.52 ) }
    dend_2 { pt3dadd( -42.1264, -101.455, 17.6514, 0.88 ) }
    dend_2 { pt3dadd( -42.1849, -102.02, 17.5759, 0.88 ) }
    dend_2 { pt3dadd( -42.2994, -103.069, 17.5054, 0.07 ) }
    dend_2 { pt3dadd( -42.3946, -103.794, 17.4975, 0.07 ) }
    dend_2 { pt3dadd( -42.4667, -104.233, 17.5122, 0.29 ) }
    dend_2 { pt3dadd( -42.548, -104.659, 17.5315, 0.74 ) }
    dend_2 { pt3dadd( -42.7231, -105.405, 17.5689, 0.22 ) }
    dend_2 { pt3dadd( -43.116, -106.835, 17.6029, 0.22 ) }
    dend_2 { pt3dadd( -43.2572, -107.246, 17.6021, 0.59 ) }
    dend_2 { pt3dadd( -43.434, -107.679, 17.5875, 1.11 ) }
    dend_2 { pt3dadd( -43.52, -107.876, 17.5728, 1.25 ) }
    dend_2 { pt3dadd( -43.8128, -108.535, 17.4932, 0.74 ) }
    dend_2 { pt3dadd( -44.1658, -109.326, 17.3545, 0.22 ) }
    dend_2 { pt3dadd( -44.4607, -110.007, 17.2088, 0.15 ) }
    dend_2 { pt3dadd( -44.7128, -110.626, 17.0654, 0.15 ) }
    dend_2 { pt3dadd( -44.8868, -111.082, 16.9585, 0.15 ) }
    dend_2 { pt3dadd( -45.085, -111.612, 16.843, 0.15 ) }
    dend_2 { pt3dadd( -45.2626, -112.094, 16.7366, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_2 { pt3dadd( -45.5519, -112.875, 16.5753, 0.22 ) }
    dend_2 { pt3dadd( -45.756, -113.442, 16.4562, 0.74 ) }
    dend_2 { pt3dadd( -45.9365, -113.98, 16.3246, 1.25 ) }
    dend_2 { pt3dadd( -46.2013, -114.82, 16.1119, 0.22 ) }
    dend_2 { pt3dadd( -46.4791, -115.786, 15.8603, 0.15 ) }
    dend_2 { pt3dadd( -46.5741, -116.159, 15.766, 0.74 ) }
    dend_2 { pt3dadd( -46.6937, -116.712, 15.6406, 0.88 ) }
    dend_2 { pt3dadd( -46.9615, -118.17, 15.3102, 0.15 ) }
    dend_2 { pt3dadd( -47.0851, -119.027, 15.1096, 0.15 ) }
    dend_2 { pt3dadd( -47.1128, -119.318, 15.0411, 0.29 ) }
    dend_2 { pt3dadd( -47.143, -119.913, 14.9181, 0.37 ) }
    dend_2 { pt3dadd( -47.1747, -120.573, 14.7827, 0.22 ) }
    // Section: dend_66, id: dend_66, parent: dend_46 (entry count 12/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -13.0652, -29.7773, -13.4777, 0.66 ) }
    dend_66 { pt3dadd( -12.5039, -30.994, -13.0966, 0.66 ) }
    dend_66 { pt3dadd( -11.8717, -32.013, -12.8698, 0.29 ) }
    dend_66 { pt3dadd( -11.5554, -32.5099, -12.7855, 0.29 ) }
    dend_66 { pt3dadd( -11.1766, -33.1669, -12.6947, 0.66 ) }
    dend_66 { pt3dadd( -10.57, -34.3377, -12.5048, 0.81 ) }
    dend_66 { pt3dadd( -9.91953, -35.6901, -12.2667, 0.37 ) }
    dend_66 { pt3dadd( -9.38099, -36.7383, -12.0851, 0.37 ) }
    dend_66 { pt3dadd( -8.93906, -37.6344, -11.9039, 0.22 ) }
    dend_66 { pt3dadd( -8.54125, -38.5047, -11.7218, 0.29 ) }
    dend_66 { pt3dadd( -8.12054, -39.5934, -11.45, 0.29 ) }
    dend_66 { pt3dadd( -7.96688, -40.1474, -11.274, 1.4 ) }
    dend_66 { pt3dadd( -7.85823, -40.7702, -11.0089, 2.58 ) }
    dend_66 { pt3dadd( -7.75499, -41.937, -10.375, 2.58 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 26/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -13.0652, -29.7773, -13.4777, 0.59 ) }
    dend_47 { pt3dadd( -12.843, -30.0201, -14.095, 0.59 ) }
    dend_47 { pt3dadd( -12.3585, -30.3349, -15.1497, 0.59 ) }
    dend_47 { pt3dadd( -11.8665, -30.5503, -16.1788, 0.59 ) }
    dend_47 { pt3dadd( -11.6454, -30.6154, -16.7109, 0.59 ) }
    dend_47 { pt3dadd( -11.2508, -30.7046, -17.8832, 0.44 ) }
    dend_47 { pt3dadd( -10.8563, -30.7937, -19.0552, 0.44 ) }
    dend_47 { pt3dadd( -10.5194, -30.8323, -19.8764, 0.74 ) }
    dend_47 { pt3dadd( -10.1976, -30.8041, -20.5585, 0.74 ) }
    dend_47 { pt3dadd( -9.74924, -30.6364, -21.5644, 0.22 ) }
    dend_47 { pt3dadd( -9.53089, -30.4451, -22.2678, 0.37 ) }
    dend_47 { pt3dadd( -3.58191, -31.905, -30.1651, 0.37 ) }
    dend_47 { pt3dadd( 1.38276, -32.4918, -38.8248, 0.37 ) }
    dend_47 { pt3dadd( 5.37129, -31.6257, -47.9518, 0.37 ) }
    dend_47 { pt3dadd( 8.22854, -30.7378, -57.4916, 0.37 ) }
    dend_47 { pt3dadd( 10.2691, -29.7915, -67.2329, 0.37 ) }
    // Section: dend_41, id: dend_41, parent: dend_35 (entry count 42/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 159.552, -14.16, 80.4248, 0.07 ) }
    dend_41 { pt3dadd( 159.881, -13.2149, 80.4522, 0.07 ) }
    dend_41 { pt3dadd( 160.134, -12.5106, 80.5282, 0.22 ) }
    dend_41 { pt3dadd( 160.583, -11.3442, 80.6967, 0.07 ) }
    dend_41 { pt3dadd( 160.768, -10.9019, 80.7771, 0.59 ) }
    dend_41 { pt3dadd( 160.937, -10.5237, 80.8513, 0.96 ) }
    dend_41 { pt3dadd( 161.715, -8.82922, 81.1886, 0.07 ) }
    dend_41 { pt3dadd( 162.153, -7.9897, 81.3648, 0.15 ) }
    dend_41 { pt3dadd( 162.763, -6.89905, 81.6111, 0.07 ) }
    dend_41 { pt3dadd( 163.399, -5.82942, 81.829, 0.07 ) }
    dend_41 { pt3dadd( 163.671, -5.39955, 81.903, 0.29 ) }
    dend_41 { pt3dadd( 164.018, -4.88737, 81.9653, 0.96 ) }
    dend_41 { pt3dadd( 164.909, -3.64727, 82.0609, 0.07 ) }
    dend_41 { pt3dadd( 165.473, -2.85515, 82.0803, 0.07 ) }
    dend_41 { pt3dadd( 165.925, -2.20396, 82.1028, 0.29 ) }
    dend_41 { pt3dadd( 166.497, -1.35787, 82.1417, 1.18 ) }
    dend_41 { pt3dadd( 167.531, 0.217452, 82.2617, 0.07 ) }
    dend_41 { pt3dadd( 168.088, 1.10064, 82.3605, 0.07 ) }
    dend_41 { pt3dadd( 168.444, 1.70364, 82.4458, 0.22 ) }
    dend_41 { pt3dadd( 169.13, 2.94429, 82.7147, 0.07 ) }
    dend_41 { pt3dadd( 169.345, 3.35824, 82.8416, 0.29 ) }
    dend_41 { pt3dadd( 169.618, 3.93992, 83.0323, 0.52 ) }
    dend_41 { pt3dadd( 170.198, 5.32918, 83.484, 0.07 ) }
    dend_41 { pt3dadd( 170.323, 5.65518, 83.5982, 0.29 ) }
    dend_41 { pt3dadd( 171.036, 7.5121, 84.4315, 0.07 ) }
    dend_41 { pt3dadd( 171.354, 8.31657, 84.8883, 0.07 ) }
    dend_41 { pt3dadd( 171.641, 9.05316, 85.3315, 1.11 ) }
    dend_41 { pt3dadd( 172.093, 10.2185, 86.0979, 0.07 ) }
    dend_41 { pt3dadd( 172.51, 11.2844, 86.8999, 0.07 ) }
    dend_41 { pt3dadd( 173.117, 12.7492, 88.1207, 0.29 ) }
    dend_41 { pt3dadd( 173.501, 13.5757, 88.9631, 0.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 73/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 159.552, -14.16, 80.4248, 0.07 ) }
    dend_36 { pt3dadd( 160.375, -14.7592, 80.6809, 0.07 ) }
    dend_36 { pt3dadd( 160.887, -15.1323, 80.8405, 0.15 ) }
    dend_36 { pt3dadd( 161.44, -15.5348, 81.0125, 1.4 ) }
    dend_36 { pt3dadd( 162.229, -16.1088, 81.2579, 0.52 ) }
    dend_36 { pt3dadd( 162.839, -16.5535, 81.4481, 0.88 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 79/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -146.498, 46.1371, 23.8215, 0.22 ) }
    dend_22 { pt3dadd( -147.942, 46.5844, 23.0997, 0.22 ) }
    dend_22 { pt3dadd( -148.363, 46.7216, 22.8868, 0.44 ) }
    dend_22 { pt3dadd( -149.003, 46.9362, 22.5518, 0.66 ) }
    dend_22 { pt3dadd( -149.999, 47.2889, 22.0169, 0.15 ) }
    dend_22 { pt3dadd( -150.96, 47.6657, 21.4927, 0.15 ) }
    dend_22 { pt3dadd( -151.282, 47.8074, 21.32, 0.52 ) }
    dend_22 { pt3dadd( -151.874, 48.1105, 20.9628, 1.18 ) }
    dend_22 { pt3dadd( -152.467, 48.4413, 20.5921, 0.37 ) }
    dend_22 { pt3dadd( -152.998, 48.7737, 20.2634, 0.07 ) }
    dend_22 { pt3dadd( -153.337, 49.0027, 20.0822, 0.07 ) }
    dend_22 { pt3dadd( -153.886, 49.3979, 19.7987, 0.15 ) }
    dend_22 { pt3dadd( -154.573, 49.9214, 19.4248, 0.07 ) }
    dend_22 { pt3dadd( -154.877, 50.1579, 19.2525, 0.59 ) }
    dend_22 { pt3dadd( -155.172, 50.3769, 19.076, 1.11 ) }
    dend_22 { pt3dadd( -156.443, 51.2861, 18.2457, 0.15 ) }
    dend_22 { pt3dadd( -157.138, 51.7855, 17.744, 0.15 ) }
    dend_22 { pt3dadd( -157.521, 52.0793, 17.4419, 0.59 ) }
    dend_22 { pt3dadd( -157.8, 52.32, 17.182, 0.52 ) }
    dend_22 { pt3dadd( -158.364, 52.8461, 16.5761, 0.15 ) }
    dend_22 { pt3dadd( -158.699, 53.1932, 16.162, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_22 { pt3dadd( -158.957, 53.5251, 15.7324, 0.15 ) }
    dend_22 { pt3dadd( -159.182, 53.9137, 15.2622, 0.66 ) }
    dend_22 { pt3dadd( -159.565, 54.7086, 14.3347, 0.15 ) }
    dend_22 { pt3dadd( -159.731, 55.1314, 13.8635, 0.37 ) }
    dend_22 { pt3dadd( -159.89, 55.6321, 13.3388, 0.22 ) }
    dend_22 { pt3dadd( -160.114, 56.4224, 12.4868, 0.22 ) }
    dend_22 { pt3dadd( -160.228, 56.882, 11.9678, 0.59 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 7/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -146.498, 46.1371, 23.8215, 0.15 ) }
    dend_21 { pt3dadd( -148.158, 45.94, 24.3973, 0.15 ) }
    dend_21 { pt3dadd( -148.666, 45.876, 24.5546, 0.59 ) }
    dend_21 { pt3dadd( -149.115, 45.853, 24.6619, 0.81 ) }
    dend_21 { pt3dadd( -149.821, 45.8521, 24.8033, 0.15 ) }
    dend_21 { pt3dadd( -151.026, 45.897, 25.0131, 0.15 ) }
    dend_21 { pt3dadd( -151.31, 45.9216, 25.0634, 0.59 ) }
    dend_21 { pt3dadd( -151.684, 45.9781, 25.1098, 1.03 ) }
    dend_21 { pt3dadd( -153.255, 46.3084, 25.3067, 0.07 ) }
    dend_21 { pt3dadd( -153.732, 46.4284, 25.3685, 0.74 ) }
    dend_21 { pt3dadd( -154.199, 46.5679, 25.4278, 0.74 ) }
    dend_21 { pt3dadd( -155.515, 46.9771, 25.5733, 0.07 ) }
    dend_21 { pt3dadd( -156.466, 47.261, 25.6916, 0.07 ) }
    dend_21 { pt3dadd( -157.471, 47.5601, 25.8254, 0.07 ) }
    dend_21 { pt3dadd( -157.681, 47.6163, 25.8556, 0.88 ) }
    dend_21 { pt3dadd( -158.441, 47.8129, 25.9618, 1.4 ) }
    dend_21 { pt3dadd( -159.861, 48.1783, 26.1462, 0.44 ) }
    dend_21 { pt3dadd( -161.124, 48.5029, 26.2782, 0.07 ) }
    dend_21 { pt3dadd( -161.78, 48.6755, 26.3572, 0.07 ) }
    dend_21 { pt3dadd( -162.578, 48.8897, 26.4726, 0.07 ) }
    dend_21 { pt3dadd( -163.283, 49.0953, 26.5954, 0.07 ) }
    dend_21 { pt3dadd( -163.773, 49.2521, 26.6922, 0.81 ) }
    dend_21 { pt3dadd( -165.255, 49.7746, 27.0153, 0.07 ) }
    dend_21 { pt3dadd( -166.095, 50.0919, 27.2166, 0.96 ) }
    dend_21 { pt3dadd( -167.544, 50.6102, 27.6322, 0.15 ) }
    dend_21 { pt3dadd( -168.171, 50.8285, 27.8453, 0.15 ) }
    dend_21 { pt3dadd( -168.685, 50.9965, 28.0451, 0.74 ) }
    dend_21 { pt3dadd( -169.259, 51.1801, 28.2918, 1.18 ) }
    dend_21 { pt3dadd( -170.274, 51.4843, 28.7737, 0.07 ) }
    dend_21 { pt3dadd( -171.186, 51.7174, 29.1761, 0.15 ) }
    dend_21 { pt3dadd( -171.917, 51.8698, 29.4723, 0.15 ) }
    dend_21 { pt3dadd( -172.271, 51.9282, 29.5945, 0.15 ) }
    dend_21 { pt3dadd( -172.773, 51.9998, 29.7432, 0.81 ) }
    dend_21 { pt3dadd( -173.599, 52.1288, 29.9258, 1.25 ) }
    dend_21 { pt3dadd( -174.682, 52.3185, 30.1102, 0.15 ) }
    dend_21 { pt3dadd( -175.36, 52.4562, 30.2019, 0.15 ) }
    dend_21 { pt3dadd( -175.937, 52.561, 30.2699, 0.66 ) }
    dend_21 { pt3dadd( -176.459, 52.6505, 30.3301, 0.22 ) }
    dend_21 { pt3dadd( -177.524, 52.8623, 30.47, 0.15 ) }
    dend_21 { pt3dadd( -178.239, 53.0446, 30.5769, 0.96 ) }
    dend_21 { pt3dadd( -178.663, 53.1686, 30.6549, 1.11 ) }
    dend_21 { pt3dadd( -179.273, 53.3749, 30.7796, 0.52 ) }
    dend_21 { pt3dadd( -180.085, 53.7038, 30.9567, 0.15 ) }
    dend_21 { pt3dadd( -180.628, 53.9834, 31.0733, 0.22 ) }
    dend_21 { pt3dadd( -180.928, 54.2007, 31.1474, 0.15 ) }
    dend_21 { pt3dadd( -181.185, 54.4572, 31.212, 0.15 ) }
    dend_21 { pt3dadd( -181.553, 54.9267, 31.3195, 0.37 ) }
    dend_21 { pt3dadd( -181.73, 55.1689, 31.3779, 0.37 ) }
    dend_21 { pt3dadd( -182.302, 55.9018, 31.5648, 0.15 ) }
    dend_21 { pt3dadd( -182.924, 56.568, 31.7694, 0.22 ) }
    dend_21 { pt3dadd( -183.337, 56.9725, 31.9219, 0.74 ) }
    dend_21 { pt3dadd( -183.642, 57.2522, 32.0418, 1.18 ) }
    dend_21 { pt3dadd( -184.798, 58.2384, 32.562, 0.07 ) }
    dend_21 { pt3dadd( -185.348, 58.6968, 32.8336, 0.81 ) }
    dend_21 { pt3dadd( -186.274, 59.4807, 33.3618, 0.15 ) }
    dend_21 { pt3dadd( -186.705, 59.866, 33.6369, 0.59 ) }
    dend_21 { pt3dadd( -187.053, 60.2223, 33.9301, 1.18 ) }
    dend_21 { pt3dadd( -187.981, 61.2633, 34.8866, 0.15 ) }
    dend_21 { pt3dadd( -188.329, 61.6829, 35.3129, 0.29 ) }
    dend_21 { pt3dadd( -188.762, 62.2008, 35.8754, 0.52 ) }
    dend_21 { pt3dadd( -189.052, 62.5351, 36.2486, 0.96 ) }
    dend_21 { pt3dadd( -190.018, 63.5044, 37.3799, 0.22 ) }
    dend_21 { pt3dadd( -190.46, 63.8521, 37.8493, 0.29 ) }
    dend_21 { pt3dadd( -191.083, 64.1689, 38.4292, 0.15 ) }
    dend_21 { pt3dadd( -191.771, 64.3751, 39.0111, 0.15 ) }
    dend_21 { pt3dadd( -192.188, 64.4206, 39.3526, 0.88 ) }
    dend_21 { pt3dadd( -192.577, 64.386, 39.727, 1.4 ) }
    dend_21 { pt3dadd( -193.505, 64.0533, 40.9633, 0.22 ) }
    dend_21 { pt3dadd( -193.872, 63.7929, 41.7813, 0.29 ) }
    dend_21 { pt3dadd( -194.026, 63.5499, 42.4429, 0.15 ) }
    dend_21 { pt3dadd( -194.119, 63.163, 43.3847, 0.37 ) }
    dend_21 { pt3dadd( -194.15, 62.6363, 44.6502, 0.15 ) }
    dend_21 { pt3dadd( -194.097, 62.1922, 45.6767, 0.81 ) }
    dend_21 { pt3dadd( -193.999, 61.8014, 46.5802, 0.15 ) }
    dend_21 { pt3dadd( -193.892, 61.4602, 47.4434, 0.66 ) }
    dend_21 { pt3dadd( -193.711, 60.9357, 48.9467, 0.15 ) }
    dend_21 { pt3dadd( -193.566, 60.5337, 50.2043, 0.74 ) }
    dend_21 { pt3dadd( -193.411, 60.098, 51.6966, 0.22 ) }
    dend_21 { pt3dadd( -193.272, 59.7049, 53.0842, 0.22 ) }
    dend_21 { pt3dadd( -193.11, 59.1839, 54.9302, 0.81 ) }
    dend_21 { pt3dadd( -193.018, 58.8551, 56.1115, 1.25 ) }
    dend_21 { pt3dadd( -192.83, 58.2233, 58.5338, 0.15 ) }
    dend_21 { pt3dadd( -192.697, 57.8465, 60.1387, 0.44 ) }
    dend_21 { pt3dadd( -192.618, 57.6756, 60.9791, 0.44 ) }
    dend_21 { pt3dadd( -192.552, 57.5802, 61.5313, 0.44 ) }
    dend_21 { pt3dadd( -192.504, 57.5289, 61.8741, 0.44 ) }
    dend_21 { pt3dadd( -192.391, 57.4287, 62.7303, 0.44 ) }
    dend_21 { pt3dadd( -192.261, 57.3556, 63.6748, 0.44 ) }
    dend_21 { pt3dadd( -192.156, 57.3023, 64.2306, 0.44 ) }
    dend_21 { pt3dadd( -191.823, 57.142, 65.5581, 0.44 ) }
    dend_21 { pt3dadd( -191.642, 57.0296, 66.1247, 0.44 ) }
    dend_21 { pt3dadd( -191.006, 56.5166, 67.7089, 0.44 ) }
    dend_21 { pt3dadd( -190.811, 56.3307, 68.0912, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_21 { pt3dadd( -190.364, 55.8897, 68.8164, 0.07 ) }
    dend_21 { pt3dadd( -189.836, 55.4012, 69.5447, 0.37 ) }
    dend_21 { pt3dadd( -189.145, 54.8624, 70.3382, 0.15 ) }
    dend_21 { pt3dadd( -188.597, 54.5063, 70.9288, 1.47 ) }
    dend_21 { pt3dadd( -187.765, 53.995, 71.7482, 0.07 ) }
    dend_21 { pt3dadd( -187.472, 53.8279, 72.0626, 0.22 ) }
    dend_21 { pt3dadd( -186.732, 53.4447, 72.955, 0.07 ) }
    dend_21 { pt3dadd( -186.169, 53.1987, 73.7041, 0.44 ) }
    dend_21 { pt3dadd( -185.573, 53.0217, 74.4544, 0.66 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 9/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 45.7498, -200.437, 54.8549, 0.15 ) }
    dend_16 { pt3dadd( 47.131, -202.102, 54.8549, 0.15 ) }
    dend_16 { pt3dadd( 47.4188, -202.466, 54.8549, 0.29 ) }
    dend_16 { pt3dadd( 47.7658, -202.912, 54.8549, 0.66 ) }
    dend_16 { pt3dadd( 48.6164, -204.019, 54.8549, 0.15 ) }
    dend_16 { pt3dadd( 49.011, -204.493, 54.8549, 0.29 ) }
    dend_16 { pt3dadd( 49.8567, -205.475, 54.8549, 0.07 ) }
    dend_16 { pt3dadd( 50.2909, -205.976, 54.8549, 0.07 ) }
    dend_16 { pt3dadd( 50.5695, -206.288, 54.8549, 0.74 ) }
    dend_16 { pt3dadd( 51.0348, -206.796, 54.8549, 1.47 ) }
    dend_16 { pt3dadd( 52.6617, -208.486, 54.8549, 0.22 ) }
    dend_16 { pt3dadd( 53.0338, -208.846, 54.8549, 0.81 ) }
    dend_16 { pt3dadd( 53.5076, -209.251, 54.8549, 1.4 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 22/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 45.7498, -200.437, 54.8549, 0.22 ) }
    dend_15 { pt3dadd( 45.7318, -201.695, 56.7568, 0.22 ) }
    dend_15 { pt3dadd( 45.7375, -202.287, 57.5946, 0.29 ) }
    dend_15 { pt3dadd( 45.8037, -202.943, 58.4931, 0.15 ) }
    dend_15 { pt3dadd( 45.9131, -203.635, 59.4251, 0.37 ) }
    dend_15 { pt3dadd( 45.9616, -203.898, 59.773, 0.52 ) }
    dend_15 { pt3dadd( 46.0904, -204.559, 60.6356, 0.22 ) }
    dend_15 { pt3dadd( 46.2209, -205.112, 61.3434, 0.81 ) }
    dend_15 { pt3dadd( 46.4204, -205.894, 62.297, 0.15 ) }
    dend_15 { pt3dadd( 46.4833, -206.119, 62.5711, 0.22 ) }
    dend_15 { pt3dadd( 46.5781, -206.417, 62.9805, 0.52 ) }
    dend_15 { pt3dadd( 46.813, -207.12, 64.0398, 0.15 ) }
    dend_15 { pt3dadd( 46.9956, -207.718, 64.9641, 0.88 ) }
    dend_15 { pt3dadd( 47.0655, -208.001, 65.3932, 0.96 ) }
    dend_15 { pt3dadd( 47.2199, -208.842, 66.659, 0.22 ) }
    dend_15 { pt3dadd( 47.3707, -209.709, 67.9273, 1.33 ) }
    dend_15 { pt3dadd( 47.4658, -210.54, 69.1698, 0.22 ) }
    dend_15 { pt3dadd( 47.485, -210.915, 69.7597, 0.07 ) }
    dend_15 { pt3dadd( 47.4875, -211.189, 70.2159, 0.15 ) }
    dend_15 { pt3dadd( 47.4555, -211.858, 71.4471, 0.15 ) }
    dend_15 { pt3dadd( 47.4347, -212.071, 71.8623, 1.18 ) }
    dend_15 { pt3dadd( 47.3311, -213.099, 73.9628, 0.22 ) }
    dend_15 { pt3dadd( 47.3119, -213.771, 75.4941, 0.22 ) }
    dend_15 { pt3dadd( 47.3362, -214.066, 76.2006, 0.37 ) }
    dend_15 { pt3dadd( 47.4408, -214.626, 77.5578, 0.37 ) }
    dend_15 { pt3dadd( 47.5234, -214.931, 78.284, 1.25 ) }
    dend_15 { pt3dadd( 47.8076, -215.678, 80.0082, 0.15 ) }
    dend_15 { pt3dadd( 48.0521, -216.157, 81.033, 0.15 ) }
    dend_15 { pt3dadd( 48.1832, -216.414, 81.5317, 0.37 ) }
    dend_15 { pt3dadd( 48.5766, -217.233, 82.9724, 0.22 ) }
    dend_15 { pt3dadd( 48.7705, -217.647, 83.6312, 0.81 ) }
    dend_15 { pt3dadd( 49.1656, -218.678, 85.1991, 0.07 ) }
    dend_15 { pt3dadd( 49.2395, -218.961, 85.5892, 0.29 ) }
    dend_15 { pt3dadd( 49.317, -219.376, 86.1327, 0.44 ) }
    dend_15 { pt3dadd( 49.3442, -219.59, 86.4105, 0.22 ) }
    dend_15 { pt3dadd( 49.3589, -219.782, 86.6371, 0.37 ) }
    dend_15 { pt3dadd( 49.368, -221.152, 88.1128, 0.15 ) }
    dend_15 { pt3dadd( 49.2684, -221.788, 88.7305, 1.47 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 60/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 8.87437, -93.0787, -0.0599277, 0.59 ) }
    dend_10 { pt3dadd( 8.52771, -92.9623, -2.27886, 0.59 ) }
    dend_10 { pt3dadd( 8.2565, -93.1835, -3.50616, 0.59 ) }
    dend_10 { pt3dadd( 8.19106, -93.3039, -3.7772, 0.59 ) }
    dend_10 { pt3dadd( 8.03831, -94.0492, -4.80207, 0.59 ) }
    dend_10 { pt3dadd( 8.00596, -94.5789, -5.34941, 0.59 ) }
    dend_10 { pt3dadd( 7.96664, -95.2228, -6.0148, 1.11 ) }
    dend_10 { pt3dadd( 7.90855, -96.6276, -6.96395, 0.15 ) }
    dend_10 { pt3dadd( 7.90089, -97.5669, -7.47691, 1.03 ) }
    dend_10 { pt3dadd( 7.97301, -99.2284, -8.26533, 0.15 ) }
    dend_10 { pt3dadd( 8.11589, -100.316, -8.65978, 0.22 ) }
    dend_10 { pt3dadd( 8.85011, -107.47, -15.4135, 0.22 ) }
    dend_10 { pt3dadd( 8.36436, -115.433, -21.1634, 0.22 ) }
    dend_10 { pt3dadd( 8.08838, -123.667, -26.5128, 0.22 ) }
    dend_10 { pt3dadd( 7.19514, -132.613, -30.3875, 0.22 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 75/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 8.87437, -93.0787, -0.0599277, 0.07 ) }
    dend_9 { pt3dadd( 8.80974, -95.4568, -0.0745461, 0.07 ) }
    dend_9 { pt3dadd( 8.7963, -96.6429, -0.0809854, 0.07 ) }
    dend_9 { pt3dadd( 8.78978, -97.2187, -0.0841112, 0.81 ) }
    dend_9 { pt3dadd( 8.77823, -98.2383, -0.0896463, 1.62 ) }
    dend_9 { pt3dadd( 8.75883, -99.9499, -0.0989387, 0.15 ) }
    dend_9 { pt3dadd( 8.75066, -100.672, -0.102857, 0.15 ) }
    dend_9 { pt3dadd( 8.76039, -101.101, -0.104756, 0.15 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 83/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -47.1747, -120.573, 14.7827, 0.07 ) }
    dend_4 { pt3dadd( -47.8352, -120.872, 15.1607, 0.07 ) }
    dend_4 { pt3dadd( -48.5343, -121.187, 15.5609, 0.07 ) }
    dend_4 { pt3dadd( -48.9714, -121.385, 15.8111, 0.15 ) }
    dend_4 { pt3dadd( -49.685, -121.707, 16.2196, 0.07 ) }
    dend_4 { pt3dadd( -50.1797, -121.93, 16.5028, 0.07 ) }
    dend_4 { pt3dadd( -50.6004, -122.12, 16.7436, 0.22 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 90/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -47.1747, -120.573, 14.7827, 0.81 ) }
    dend_3 { pt3dadd( -47.1653, -121.239, 14.5169, 0.81 ) }
    dend_3 { pt3dadd( -47.1313, -122.202, 14.1452, 0.22 ) }
    dend_3 { pt3dadd( -47.0927, -123.152, 13.8034, 0.22 ) }
    dend_3 { pt3dadd( -47.0907, -123.811, 13.5581, 0.15 ) }
    dend_3 { pt3dadd( -47.104, -124.697, 13.2263, 0.15 ) }
    dend_3 { pt3dadd( -47.1058, -124.795, 13.1912, 0.15 ) }
    dend_3 { pt3dadd( -47.1106, -125.224, 13.0224, 0.66 ) }
    dend_3 { pt3dadd( -47.1118, -125.695, 12.8209, 1.03 ) }
    dend_3 { pt3dadd( -47.1205, -126.924, 12.308, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_3 { pt3dadd( -47.1539, -127.542, 12.0448, 0.66 ) }
    dend_3 { pt3dadd( -47.2092, -128.217, 11.7698, 0.22 ) }
    dend_3 { pt3dadd( -47.279, -129.034, 11.4537, 0.15 ) }
    dend_3 { pt3dadd( -47.325, -129.56, 11.2627, 0.15 ) }
    dend_3 { pt3dadd( -47.3469, -129.918, 11.1494, 0.66 ) }
    dend_3 { pt3dadd( -47.3634, -130.567, 10.9964, 0.29 ) }
    dend_3 { pt3dadd( -47.3922, -131.73, 10.7901, 0.15 ) }
    dend_3 { pt3dadd( -47.418, -132.241, 10.7292, 0.15 ) }
    dend_3 { pt3dadd( -47.452, -132.675, 10.7062, 0.15 ) }
    dend_3 { pt3dadd( -47.5275, -133.338, 10.6905, 0.22 ) }
    dend_3 { pt3dadd( -47.6157, -133.983, 10.6787, 0.59 ) }
    dend_3 { pt3dadd( -47.7653, -134.856, 10.6671, 1.18 ) }
    dend_3 { pt3dadd( -47.9364, -135.609, 10.6618, 1.7 ) }
    dend_3 { pt3dadd( -48.1667, -136.485, 10.6491, 1.99 ) }
    dend_3 { pt3dadd( -48.4179, -137.367, 10.627, 1.25 ) }
    dend_3 { pt3dadd( -48.7939, -138.611, 10.5833, 0.22 ) }
    dend_3 { pt3dadd( -49.0283, -139.37, 10.5508, 0.37 ) }
    dend_3 { pt3dadd( -49.3133, -140.247, 10.4875, 0.15 ) }
    dend_3 { pt3dadd( -49.6788, -141.35, 10.3746, 0.22 ) }
    dend_3 { pt3dadd( -49.8332, -141.783, 10.3189, 0.59 ) }
    dend_3 { pt3dadd( -50.0182, -142.268, 10.2442, 1.11 ) }
    dend_3 { pt3dadd( -50.3235, -142.979, 10.1432, 0.52 ) }
    dend_3 { pt3dadd( -50.8695, -144.188, 9.98992, 0.22 ) }
    dend_3 { pt3dadd( -51.0958, -144.631, 9.94271, 0.88 ) }
    dend_3 { pt3dadd( -51.4726, -145.306, 9.87996, 0.96 ) }
    dend_3 { pt3dadd( -52.0693, -146.332, 9.8026, 0.07 ) }
    dend_3 { pt3dadd( -52.5469, -147.126, 9.75989, 0.07 ) }
    dend_3 { pt3dadd( -52.6239, -147.251, 9.75884, 0.44 ) }
    dend_3 { pt3dadd( -52.8821, -147.687, 9.80884, 0.52 ) }
    // Section: dend_90, id: dend_90, parent: dend_66 (entry count 29/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( -7.75499, -41.937, -10.375, 0.44 ) }
    dend_90 { pt3dadd( -9.50412, -43.9957, -10.108, 0.44 ) }
    dend_90 { pt3dadd( -10.3393, -44.9719, -9.96781, 0.66 ) }
    dend_90 { pt3dadd( -11.0981, -45.8886, -9.83983, 0.66 ) }
    dend_90 { pt3dadd( -12.1009, -47.1369, -9.68178, 0.44 ) }
    dend_90 { pt3dadd( -12.6776, -47.8768, -9.59744, 0.81 ) }
    dend_90 { pt3dadd( -13.1161, -48.4649, -9.53657, 1.33 ) }
    dend_90 { pt3dadd( -13.9493, -49.6499, -9.41347, 0.74 ) }
    dend_90 { pt3dadd( -14.6581, -50.7259, -9.30633, 0.37 ) }
    dend_90 { pt3dadd( -15.0945, -51.4521, -9.24553, 0.22 ) }
    dend_90 { pt3dadd( -15.5834, -52.3292, -9.20366, 0.96 ) }
    dend_90 { pt3dadd( -15.9224, -52.9826, -9.21481, 0.15 ) }
    dend_90 { pt3dadd( -16.1642, -53.5075, -9.22767, 0.29 ) }
    dend_90 { pt3dadd( -21.3196, -61.8596, -9.42986, 0.29 ) }
    dend_90 { pt3dadd( -27.809, -69.1506, -8.02701, 0.29 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 44/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -7.75499, -41.937, -10.375, 0.59 ) }
    dend_67 { pt3dadd( -6.73663, -43.224, -10.0271, 0.59 ) }
    dend_67 { pt3dadd( -6.14404, -44.0633, -9.74101, 0.29 ) }
    dend_67 { pt3dadd( -5.87628, -44.4425, -9.61173, 0.81 ) }
    dend_67 { pt3dadd( -5.24383, -45.3383, -9.30637, 0.52 ) }
    dend_67 { pt3dadd( -4.55706, -46.311, -8.97478, 0.22 ) }
    dend_67 { pt3dadd( -4.13393, -46.9103, -8.77048, 0.66 ) }
    dend_67 { pt3dadd( -3.74156, -47.7309, -8.45955, 1.18 ) }
    // Section: dend_57, id: dend_57, parent: dend_47 (entry count 52/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 10.2691, -29.7915, -67.2329, 0.07 ) }
    dend_57 { pt3dadd( 15.3649, -30.4503, -75.8106, 0.07 ) }
    dend_57 { pt3dadd( 20.5828, -29.4174, -84.2753, 0.07 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 55/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 10.2691, -29.7915, -67.2329, 0.81 ) }
    dend_48 { pt3dadd( 13.9576, -29.6286, -76.5263, 0.07 ) }
    dend_48 { pt3dadd( 17.6362, -28.437, -85.7445, 0.07 ) }
    dend_48 { pt3dadd( 19.8788, -27.2103, -95.4082, 0.07 ) }
    dend_48 { pt3dadd( 21.9913, -27.4742, -105.179, 0.07 ) }
    dend_48 { pt3dadd( 24.1044, -27.3722, -114.952, 0.07 ) }
    dend_48 { pt3dadd( 27.2287, -27.3665, -124.452, 0.07 ) }
    dend_48 { pt3dadd( 30.5628, -26.88, -133.866, 0.07 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 63/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 162.839, -16.5535, 81.4481, 0.15 ) }
    dend_40 { pt3dadd( 163.757, -17.0748, 81.0815, 0.15 ) }
    dend_40 { pt3dadd( 164.289, -17.3667, 80.8654, 0.66 ) }
    dend_40 { pt3dadd( 164.762, -17.6256, 80.6649, 0.66 ) }
    dend_40 { pt3dadd( 166.057, -18.3314, 80.1025, 0.07 ) }
    dend_40 { pt3dadd( 167.036, -18.8804, 79.6467, 0.07 ) }
    dend_40 { pt3dadd( 167.744, -19.2789, 79.3134, 0.96 ) }
    dend_40 { pt3dadd( 169.158, -20.0726, 78.6647, 0.07 ) }
    dend_40 { pt3dadd( 169.639, -20.32, 78.4312, 0.07 ) }
    dend_40 { pt3dadd( 169.927, -20.4537, 78.2831, 0.22 ) }
    dend_40 { pt3dadd( 170.619, -20.7481, 77.8772, 0.07 ) }
    dend_40 { pt3dadd( 171.249, -21.0212, 77.4822, 0.66 ) }
    dend_40 { pt3dadd( 171.474, -21.1213, 77.3304, 0.66 ) }
    dend_40 { pt3dadd( 172.794, -21.7371, 76.355, 0.07 ) }
    dend_40 { pt3dadd( 173.324, -21.9992, 75.934, 0.44 ) }
    dend_40 { pt3dadd( 174.116, -22.4204, 75.2751, 0.22 ) }
    dend_40 { pt3dadd( 174.61, -22.7116, 74.8553, 0.96 ) }
    dend_40 { pt3dadd( 175.543, -23.3658, 74.0169, 0.22 ) }
    dend_40 { pt3dadd( 176.262, -23.959, 73.4023, 0.07 ) }
    dend_40 { pt3dadd( 177.001, -24.654, 72.8199, 0.74 ) }
    dend_40 { pt3dadd( 177.28, -24.9215, 72.6347, 1.03 ) }
    dend_40 { pt3dadd( 177.796, -25.41, 72.3558, 0.59 ) }
    dend_40 { pt3dadd( 178.705, -26.2605, 71.9407, 0.15 ) }
    dend_40 { pt3dadd( 179.839, -27.3189, 71.5304, 0.15 ) }
    dend_40 { pt3dadd( 180.151, -27.5915, 71.4183, 0.59 ) }
    dend_40 { pt3dadd( 181.371, -28.5714, 70.9898, 0.07 ) }
    dend_40 { pt3dadd( 181.758, -28.8412, 70.8364, 0.74 ) }
    dend_40 { pt3dadd( 182.175, -29.084, 70.6407, 0.96 ) }
    dend_40 { pt3dadd( 183.594, -29.764, 69.8875, 0.07 ) }
    dend_40 { pt3dadd( 184.717, -30.2353, 69.2197, 0.07 ) }
    dend_40 { pt3dadd( 185.156, -30.4029, 68.9366, 0.66 ) }
    dend_40 { pt3dadd( 186.123, -30.7037, 68.2429, 0.22 ) }
    dend_40 { pt3dadd( 186.989, -30.9436, 67.5834, 0.66 ) }
    dend_40 { pt3dadd( 187.379, -31.0228, 67.2594, 0.74 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 97/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 162.839, -16.5535, 81.4481, 0.07 ) }
    dend_37 { pt3dadd( 164.201, -16.2663, 82.6047, 0.07 ) }
    dend_37 { pt3dadd( 165.081, -16.0921, 83.341, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_37 { pt3dadd( 165.649, -15.9871, 83.7998, 0.81 ) }
    dend_37 { pt3dadd( 166.286, -15.8805, 84.3192, 0.22 ) }
    dend_37 { pt3dadd( 166.966, -15.7763, 84.8691, 0.96 ) }
    dend_37 { pt3dadd( 168.582, -15.5713, 86.1572, 0.07 ) }
    dend_37 { pt3dadd( 169.022, -15.5223, 86.4829, 0.07 ) }
    dend_37 { pt3dadd( 169.441, -15.4762, 86.8027, 0.29 ) }
    dend_37 { pt3dadd( 170.163, -15.4013, 87.3976, 1.11 ) }
    dend_37 { pt3dadd( 170.652, -15.3622, 87.8163, 1.55 ) }
    dend_37 { pt3dadd( 171.914, -15.2921, 88.8879, 0.22 ) }
    dend_37 { pt3dadd( 172.948, -15.2491, 89.7786, 0.88 ) }
    dend_37 { pt3dadd( 174.063, -15.1933, 90.832, 0.22 ) }
    dend_37 { pt3dadd( 174.643, -15.1552, 91.4538, 0.22 ) }
    dend_37 { pt3dadd( 175.27, -15.0904, 92.2387, 0.66 ) }
    dend_37 { pt3dadd( 175.447, -15.0623, 92.5081, 1.33 ) }
    dend_37 { pt3dadd( 176.468, -14.8595, 94.3644, 0.22 ) }
    dend_37 { pt3dadd( 177.153, -14.7243, 95.8016, 0.22 ) }
    dend_37 { pt3dadd( 177.748, -14.5997, 97.1749, 0.66 ) }
    dend_37 { pt3dadd( 178.355, -14.4295, 98.6353, 0.88 ) }
    dend_37 { pt3dadd( 178.987, -14.1991, 100.179, 0.37 ) }
    dend_37 { pt3dadd( 179.368, -14.0463, 101.152, 0.37 ) }
    dend_37 { pt3dadd( 179.713, -13.893, 102.086, 0.81 ) }
    dend_37 { pt3dadd( 179.933, -13.8032, 102.63, 1.11 ) }
    dend_37 { pt3dadd( 180.416, -13.634, 103.659, 0.22 ) }
    dend_37 { pt3dadd( 180.825, -13.5222, 104.355, 0.74 ) }
    // Section: dend_92, id: dend_92, parent: dend_90 (entry count 24/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( -27.809, -69.1506, -8.02701, 0.07 ) }
    dend_92 { pt3dadd( -34.0873, -76.7394, -8.07647, 0.07 ) }
    dend_92 { pt3dadd( -40.066, -84.5546, -8.15214, 0.07 ) }
    dend_92 { pt3dadd( -46.6224, -91.9082, -7.79437, 0.07 ) }
    dend_92 { pt3dadd( -53.0218, -99.2976, -9.06303, 0.07 ) }
    dend_92 { pt3dadd( -59.264, -106.708, -10.8711, 0.07 ) }
    dend_92 { pt3dadd( -66.6164, -113.106, -12.5696, 0.07 ) }
    dend_92 { pt3dadd( -74.1691, -119.204, -14.5295, 0.07 ) }
    dend_92 { pt3dadd( -81.1881, -125.804, -16.7436, 0.07 ) }
    dend_92 { pt3dadd( -88.0908, -132.804, -17.6472, 0.07 ) }
    dend_92 { pt3dadd( -95.1613, -139.698, -17.533, 0.07 ) }
    // Section: dend_91, id: dend_91, parent: dend_90 (entry count 35/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( -27.809, -69.1506, -8.02701, 0.81 ) }
    dend_91 { pt3dadd( -32.7412, -77.4252, -6.11685, 0.07 ) }
    dend_91 { pt3dadd( -39.0337, -84.7402, -4.08791, 0.07 ) }
    dend_91 { pt3dadd( -44.4386, -92.8304, -2.69693, 0.07 ) }
    dend_91 { pt3dadd( -49.7625, -101.083, -2.57232, 0.07 ) }
    dend_91 { pt3dadd( -55.7462, -108.83, -1.54075, 0.07 ) }
    dend_91 { pt3dadd( -62.3941, -116.093, -2.09402, 0.07 ) }
    dend_91 { pt3dadd( -68.9569, -123.354, -0.880868, 0.07 ) }
    // Section: dend_85, id: dend_85, parent: dend_67 (entry count 43/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( -3.74156, -47.7309, -8.45955, 0.15 ) }
    dend_85 { pt3dadd( -4.61603, -49.2649, -8.43779, 0.15 ) }
    dend_85 { pt3dadd( -4.82693, -49.6349, -8.43254, 0.59 ) }
    dend_85 { pt3dadd( -5.19243, -50.276, -8.42344, 1.33 ) }
    dend_85 { pt3dadd( -5.58132, -50.9582, -8.41376, 0.22 ) }
    dend_85 { pt3dadd( -10.3382, -59.442, -9.70222, 0.22 ) }
    dend_85 { pt3dadd( -15.2608, -67.9279, -9.57463, 0.22 ) }
    dend_85 { pt3dadd( -19.8314, -76.4857, -11.0136, 0.22 ) }
    dend_85 { pt3dadd( -25.3001, -84.6485, -11.0254, 0.22 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 52/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -3.74156, -47.7309, -8.45955, 0.44 ) }
    dend_68 { pt3dadd( -3.41718, -48.8584, -8.33556, 0.44 ) }
    dend_68 { pt3dadd( -3.11217, -49.9672, -8.20103, 0.15 ) }
    dend_68 { pt3dadd( -2.8925, -50.7546, -8.08712, 0.15 ) }
    dend_68 { pt3dadd( -2.76291, -51.2027, -8.01214, 0.88 ) }
    dend_68 { pt3dadd( -2.52542, -52.0326, -7.86646, 1.92 ) }
    dend_68 { pt3dadd( -1.77013, -54.6718, -7.40317, 0.22 ) }
    dend_68 { pt3dadd( -1.55838, -55.4524, -7.26013, 0.66 ) }
    dend_68 { pt3dadd( -1.34429, -56.2018, -7.12241, 1.33 ) }
    dend_68 { pt3dadd( -1.16034, -56.8789, -7.01006, 2.06 ) }
    dend_68 { pt3dadd( -0.962496, -57.6334, -6.87246, 1.62 ) }
    dend_68 { pt3dadd( 1.14004, -66.6044, -3.56776, 1.62 ) }
    dend_68 { pt3dadd( 4.26743, -74.7526, 0.946356, 1.62 ) }
    // Section: dend_63, id: dend_63, parent: dend_57 (entry count 65/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 20.5828, -29.4174, -84.2753, 0.07 ) }
    dend_63 { pt3dadd( 25.8187, -29.2982, -92.7941, 0.07 ) }
    dend_63 { pt3dadd( 30.7915, -28.8718, -101.459, 0.07 ) }
    dend_63 { pt3dadd( 35.2034, -29.37, -110.419, 0.07 ) }
    dend_63 { pt3dadd( 39.6379, -32.1371, -118.92, 0.07 ) }
    dend_63 { pt3dadd( 45.9161, -33.4773, -126.582, 0.07 ) }
    dend_63 { pt3dadd( 52.6584, -35.0183, -133.796, 0.07 ) }
    dend_63 { pt3dadd( 59.6646, -37.5142, -140.456, 0.07 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 73/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 20.5828, -29.4174, -84.2753, 0.07 ) }
    dend_58 { pt3dadd( 25.5975, -29.0461, -92.9187, 0.07 ) }
    dend_58 { pt3dadd( 31.8714, -27.887, -100.614, 0.07 ) }
    dend_58 { pt3dadd( 39.8564, -27.4943, -106.621, 0.07 ) }
    dend_58 { pt3dadd( 48.4551, -26.0345, -111.501, 0.07 ) }
    dend_58 { pt3dadd( 56.6587, -24.0676, -116.852, 0.07 ) }
    dend_58 { pt3dadd( 65.4285, -20.7676, -120.263, 0.07 ) }
    dend_58 { pt3dadd( 74.5586, -17.9214, -123.113, 0.07 ) }
    dend_58 { pt3dadd( 83.3288, -15.2083, -127.03, 0.07 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 82/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 30.5628, -26.88, -133.866, 0.07 ) }
    dend_50 { pt3dadd( 33.622, -26.5199, -143.38, 0.07 ) }
    dend_50 { pt3dadd( 36.2499, -26.8659, -153.022, 0.07 ) }
    dend_50 { pt3dadd( 38.1844, -27.0613, -162.831, 0.07 ) }
    dend_50 { pt3dadd( 38.1775, -27.6963, -172.81, 0.07 ) }
    dend_50 { pt3dadd( 39.164, -29.343, -182.617, 0.07 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 88/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 30.5628, -26.88, -133.866, 0.07 ) }
    dend_49 { pt3dadd( 33.3018, -26.3963, -143.471, 0.07 ) }
    dend_49 { pt3dadd( 37.4504, -27.2203, -152.531, 0.07 ) }
    dend_49 { pt3dadd( 42.3048, -28.7236, -161.136, 0.07 ) }
    dend_49 { pt3dadd( 46.9797, -29.0666, -169.969, 0.07 ) }
    dend_49 { pt3dadd( 51.0234, -28.3057, -179.082, 0.07 ) }
    dend_49 { pt3dadd( 54.058, -28.5799, -188.606, 0.07 ) }
    dend_49 { pt3dadd( 55.777, -28.1339, -198.447, 0.07 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 96/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 180.825, -13.5222, 104.355, 0.29 ) }
    dend_39 { pt3dadd( 181.812, -13.7289, 106.096, 0.29 ) }
    dend_39 { pt3dadd( 182.465, -13.797, 107.014, 0.52 ) }
    dend_39 { pt3dadd( 182.994, -13.7817, 107.66, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_39 { pt3dadd( 183.57, -13.7281, 108.351, 0.52 ) }
    dend_39 { pt3dadd( 183.967, -13.6882, 108.829, 0.52 ) }
    dend_39 { pt3dadd( 184.304, -13.6443, 109.258, 0.52 ) }
    dend_39 { pt3dadd( 185.255, -13.4871, 110.412, 0.15 ) }
    dend_39 { pt3dadd( 186.203, -13.316, 111.668, 0.15 ) }
    dend_39 { pt3dadd( 186.767, -13.2084, 112.378, 0.15 ) }
    dend_39 { pt3dadd( 187.201, -13.1312, 112.899, 0.59 ) }
    dend_39 { pt3dadd( 187.968, -13.0254, 113.826, 0.59 ) }
    dend_39 { pt3dadd( 188.387, -12.9785, 114.367, 0.59 ) }
    dend_39 { pt3dadd( 189.067, -12.9034, 115.349, 0.81 ) }
    dend_39 { pt3dadd( 189.619, -12.8725, 116.137, 0.15 ) }
    dend_39 { pt3dadd( 190.218, -12.8535, 116.939, 0.37 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 12/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 180.825, -13.5222, 104.355, 0.15 ) }
    dend_38 { pt3dadd( 181.39, -12.2638, 104.622, 0.15 ) }
    dend_38 { pt3dadd( 181.921, -11.1074, 104.899, 0.15 ) }
    dend_38 { pt3dadd( 182.187, -10.5369, 105.039, 0.52 ) }
    dend_38 { pt3dadd( 182.516, -9.88022, 105.199, 0.88 ) }
    dend_38 { pt3dadd( 182.761, -9.39453, 105.314, 1.11 ) }
    dend_38 { pt3dadd( 183.551, -7.82956, 105.674, 0.07 ) }
    dend_38 { pt3dadd( 184.024, -6.864, 105.896, 0.07 ) }
    dend_38 { pt3dadd( 184.341, -6.19188, 106.034, 1.11 ) }
    dend_38 { pt3dadd( 184.954, -4.86288, 106.307, 0.15 ) }
    dend_38 { pt3dadd( 185.184, -4.34214, 106.414, 0.15 ) }
    dend_38 { pt3dadd( 185.281, -4.11058, 106.462, 0.29 ) }
    dend_38 { pt3dadd( 185.563, -3.39431, 106.599, 0.15 ) }
    dend_38 { pt3dadd( 185.883, -2.57794, 106.736, 0.74 ) }
    dend_38 { pt3dadd( 186.194, -1.77474, 106.9, 0.07 ) }
    dend_38 { pt3dadd( 186.409, -1.22507, 107.03, 0.07 ) }
    dend_38 { pt3dadd( 186.647, -0.661991, 107.192, 0.07 ) }
    dend_38 { pt3dadd( 186.949, 0.0282132, 107.374, 0.74 ) }
    dend_38 { pt3dadd( 187.46, 1.12852, 107.682, 0.07 ) }
    dend_38 { pt3dadd( 187.942, 2.0875, 108.006, 0.07 ) }
    dend_38 { pt3dadd( 188.317, 2.77952, 108.283, 0.44 ) }
    dend_38 { pt3dadd( 189.032, 4.0222, 108.829, 0.07 ) }
    dend_38 { pt3dadd( 189.507, 4.83476, 109.199, 0.59 ) }
    dend_38 { pt3dadd( 189.994, 5.65479, 109.583, 1.11 ) }
    dend_38 { pt3dadd( 190.924, 7.15442, 110.289, 0.15 ) }
    dend_38 { pt3dadd( 191.424, 7.92582, 110.63, 0.15 ) }
    dend_38 { pt3dadd( 191.905, 8.64504, 110.941, 0.96 ) }
    dend_38 { pt3dadd( 192.689, 9.80081, 111.413, 0.07 ) }
    dend_38 { pt3dadd( 192.944, 10.1857, 111.559, 0.22 ) }
    dend_38 { pt3dadd( 193.37, 10.8245, 111.737, 0.07 ) }
    dend_38 { pt3dadd( 193.763, 11.4106, 111.846, 0.22 ) }
    dend_38 { pt3dadd( 194.389, 12.325, 112.001, 0.07 ) }
    dend_38 { pt3dadd( 194.661, 12.6994, 112.069, 0.22 ) }
    dend_38 { pt3dadd( 195.41, 13.6641, 112.263, 0.07 ) }
    dend_38 { pt3dadd( 195.948, 14.3109, 112.404, 0.96 ) }
    dend_38 { pt3dadd( 196.827, 15.3056, 112.633, 0.07 ) }
    dend_38 { pt3dadd( 197.533, 16.0359, 112.809, 0.07 ) }
    dend_38 { pt3dadd( 198.017, 16.5089, 112.924, 0.52 ) }
    dend_38 { pt3dadd( 198.419, 16.8865, 113.004, 0.29 ) }
    dend_38 { pt3dadd( 199.439, 17.8038, 113.152, 0.15 ) }
    dend_38 { pt3dadd( 200.052, 18.3541, 113.214, 0.59 ) }
    dend_38 { pt3dadd( 201.338, 19.4213, 113.294, 0.07 ) }
    dend_38 { pt3dadd( 202.128, 20.037, 113.313, 0.07 ) }
    dend_38 { pt3dadd( 202.816, 20.5451, 113.314, 0.44 ) }
    dend_38 { pt3dadd( 204.498, 21.7817, 113.296, 0.07 ) }
    dend_38 { pt3dadd( 204.925, 22.0879, 113.282, 0.22 ) }
    dend_38 { pt3dadd( 206.393, 23.0981, 113.217, 0.07 ) }
    dend_38 { pt3dadd( 207.037, 23.51, 113.182, 0.29 ) }
    dend_38 { pt3dadd( 207.676, 23.8806, 113.155, 0.52 ) }
    // Section: dend_89, id: dend_89, parent: dend_85 (entry count 61/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( -25.3001, -84.6485, -11.0254, 0.07 ) }
    dend_89 { pt3dadd( -30.2531, -93.0808, -11.8451, 0.07 ) }
    dend_89 { pt3dadd( -36.3021, -100.84, -12.136, 0.07 ) }
    dend_89 { pt3dadd( -41.2711, -109.286, -12.6482, 0.07 ) }
    dend_89 { pt3dadd( -44.88, -118.248, -14.2263, 0.07 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 66/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( -25.3001, -84.6485, -11.0254, 0.81 ) }
    dend_86 { pt3dadd( -30.2252, -93.1258, -11.4097, 0.07 ) }
    dend_86 { pt3dadd( -36.0623, -100.944, -12.6869, 0.07 ) }
    dend_86 { pt3dadd( -42.323, -108.343, -14.4789, 0.07 ) }
    dend_86 { pt3dadd( -47.0693, -116.601, -16.8734, 0.07 ) }
    dend_86 { pt3dadd( -49.9817, -125.919, -17.3036, 0.07 ) }
    dend_86 { pt3dadd( -53.8569, -134.903, -17.0153, 0.07 ) }
    // Section: dend_84, id: dend_84, parent: dend_68 (entry count 73/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( 4.26743, -74.7526, 0.946356, 0.22 ) }
    dend_84 { pt3dadd( 6.88334, -83.6653, 4.04389, 0.22 ) }
    dend_84 { pt3dadd( 8.94754, -92.8234, 6.78467, 0.22 ) }
    dend_84 { pt3dadd( 10.0275, -102.405, 8.29143, 0.22 ) }
    dend_84 { pt3dadd( 10.3918, -112.089, 9.38891, 0.22 ) }
    dend_84 { pt3dadd( 12.5934, -121.404, 11.3597, 0.22 ) }
    dend_84 { pt3dadd( 15.2921, -130.364, 14.2352, 0.22 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 80/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 4.26743, -74.7526, 0.946356, 0.07 ) }
    dend_69 { pt3dadd( 6.9426, -83.6467, 4.04966, 0.22 ) }
    dend_69 { pt3dadd( 9.16112, -92.1629, 8.38383, 0.22 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 83/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 59.6646, -37.5142, -140.456, 0.07 ) }
    dend_65 { pt3dadd( 65.2288, -38.5431, -148.698, 0.07 ) }
    dend_65 { pt3dadd( 69.5793, -41.2868, -157.251, 0.07 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 86/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 59.6646, -37.5142, -140.456, 0.07 ) }
    dend_64 { pt3dadd( 65.4784, -38.8944, -148.468, 0.07 ) }
    dend_64 { pt3dadd( 72.0118, -41.4779, -155.56, 0.07 ) }
    dend_64 { pt3dadd( 79.776, -43.4728, -161.521, 0.07 ) }
    dend_64 { pt3dadd( 86.2109, -46.2085, -168.643, 0.07 ) }
    dend_64 { pt3dadd( 92.0436, -49.6045, -175.981, 0.07 ) }
    dend_64 { pt3dadd( 97.8821, -53.8243, -182.85, 0.07 ) }
    dend_64 { pt3dadd( 104.492, -58.0619, -188.967, 0.07 ) }
    dend_64 { pt3dadd( 110.67, -63.2765, -194.731, 0.07 ) }
    dend_64 { pt3dadd( 116.088, -68.7711, -200.967, 0.07 ) }
    // Section: dend_62, id: dend_62, parent: dend_58 (entry count 96/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 83.3288, -15.2083, -127.03, 0.07 ) }
    dend_62 { pt3dadd( 92.7499, -16.0277, -130.275, 0.07 ) }
    dend_62 { pt3dadd( 102.469, -16.5556, -132.564, 0.07 ) }
    dend_62 { pt3dadd( 111.678, -17.6241, -136.307, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 0/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 83.3288, -15.2083, -127.03, 0.07 ) }
    dend_59 { pt3dadd( 90.0943, -11.8896, -133.56, 0.07 ) }
    dend_59 { pt3dadd( 96.8107, -9.08321, -140.386, 0.07 ) }
    dend_59 { pt3dadd( 104.448, -7.90707, -146.728, 0.07 ) }
    // Section: dend_54, id: dend_54, parent: dend_50 (entry count 4/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 39.164, -29.343, -182.617, 0.07 ) }
    dend_54 { pt3dadd( 41.9803, -29.1326, -192.209, 0.07 ) }
    dend_54 { pt3dadd( 44.1872, -28.1816, -201.914, 0.07 ) }
    dend_54 { pt3dadd( 46.0365, -26.3046, -211.551, 0.07 ) }
    dend_54 { pt3dadd( 46.994, -23.3846, -221.044, 0.07 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 9/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 39.164, -29.343, -182.617, 0.07 ) }
    dend_51 { pt3dadd( 38.155, -31.515, -192.313, 0.07 ) }
    dend_51 { pt3dadd( 37.9278, -34.5439, -201.815, 0.07 ) }
    dend_51 { pt3dadd( 37.8242, -36.3766, -211.637, 0.07 ) }
    dend_51 { pt3dadd( 37.7965, -38.4661, -221.404, 0.07 ) }
    // Section: dend_88, id: dend_88, parent: dend_86 (entry count 14/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -53.8569, -134.903, -17.0153, 0.07 ) }
    dend_88 { pt3dadd( -58.6533, -143.452, -16.6661, 0.07 ) }
    dend_88 { pt3dadd( -62.5875, -152.358, -15.6326, 0.07 ) }
    dend_88 { pt3dadd( -67.6438, -160.385, -13.0518, 0.07 ) }
    // Section: dend_87, id: dend_87, parent: dend_86 (entry count 18/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( -53.8569, -134.903, -17.0153, 0.07 ) }
    dend_87 { pt3dadd( -58.5645, -143.037, -19.8845, 0.07 ) }
    dend_87 { pt3dadd( -62.6491, -151.289, -23.303, 0.07 ) }
    dend_87 { pt3dadd( -65.515, -159.343, -28.156, 0.07 ) }
    // Section: dend_75, id: dend_75, parent: dend_69 (entry count 22/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 9.16112, -92.1629, 8.38383, 0.07 ) }
    dend_75 { pt3dadd( 11.7592, -100.901, 11.9802, 0.07 ) }
    dend_75 { pt3dadd( 12.9787, -110.16, 14.865, 0.07 ) }
    dend_75 { pt3dadd( 15.2844, -119.225, 17.7362, 0.07 ) }
    dend_75 { pt3dadd( 17.6574, -128.574, 19.2921, 0.07 ) }
    dend_75 { pt3dadd( 20.6014, -137.344, 22.5207, 0.07 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 28/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 9.16112, -92.1629, 8.38383, 0.81 ) }
    dend_70 { pt3dadd( 11.4528, -100.871, 12.2538, 0.07 ) }
    dend_70 { pt3dadd( 13.6457, -109.824, 15.5513, 0.07 ) }
    dend_70 { pt3dadd( 15.1051, -119.216, 17.8038, 0.07 ) }
    dend_70 { pt3dadd( 15.6917, -128.751, 19.8084, 0.07 ) }
    dend_70 { pt3dadd( 17.5972, -138.321, 20.0164, 0.07 ) }
    dend_70 { pt3dadd( 21.0534, -147.27, 21.9674, 0.07 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 35/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 104.448, -7.90707, -146.728, 0.07 ) }
    dend_61 { pt3dadd( 112.523, -6.13524, -152.34, 0.07 ) }
    dend_61 { pt3dadd( 120.597, -3.67087, -157.67, 0.07 ) }
    dend_61 { pt3dadd( 129.031, -0.778017, -162.151, 0.07 ) }
    dend_61 { pt3dadd( 136.88, 3.12466, -166.88, 0.07 ) }
    dend_61 { pt3dadd( 145.228, 7.81066, -169.565, 0.07 ) }
    dend_61 { pt3dadd( 152.977, 13.2992, -172.441, 0.07 ) }
    dend_61 { pt3dadd( 160.824, 18.9005, -174.771, 0.07 ) }
    dend_61 { pt3dadd( 168.044, 24.9334, -177.865, 0.07 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 44/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 104.448, -7.90707, -146.728, 0.07 ) }
    dend_60 { pt3dadd( 110.308, -4.82181, -154.188, 0.07 ) }
    dend_60 { pt3dadd( 115.929, -2.66176, -162.157, 0.07 ) }
    dend_60 { pt3dadd( 122.672, -0.10365, -169.059, 0.07 ) }
    dend_60 { pt3dadd( 130.283, 2.77637, -174.833, 0.07 ) }
    dend_60 { pt3dadd( 137.05, 6.62648, -181.047, 0.07 ) }
    dend_60 { pt3dadd( 143.67, 11.6935, -186.448, 0.07 ) }
    dend_60 { pt3dadd( 150.788, 17.0058, -190.88, 0.07 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 52/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 46.994, -23.3846, -221.044, 0.07 ) }
    dend_56 { pt3dadd( 45.9347, -21.2134, -230.735, 0.07 ) }
    dend_56 { pt3dadd( 44.9211, -17.5984, -239.967, 0.07 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 55/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 46.994, -23.3846, -221.044, 0.07 ) }
    dend_55 { pt3dadd( 50.5389, -22.3091, -230.329, 0.07 ) }
    dend_55 { pt3dadd( 55.2229, -22.5007, -239.162, 0.07 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 58/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 37.7965, -38.4661, -221.404, 0.07 ) }
    dend_53 { pt3dadd( 37.3393, -40.3953, -231.196, 0.07 ) }
    dend_53 { pt3dadd( 37.6283, -41.7938, -241.088, 0.07 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 61/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 37.7965, -38.4661, -221.404, 0.07 ) }
    dend_52 { pt3dadd( 37.7307, -41.5893, -230.877, 0.07 ) }
    dend_52 { pt3dadd( 35.8306, -46.3602, -239.389, 0.07 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 64/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 20.6014, -137.344, 22.5207, 0.07 ) }
    dend_77 { pt3dadd( 22.5919, -146.42, 25.5855, 0.07 ) }
    dend_77 { pt3dadd( 26.5414, -154.861, 28.6587, 0.07 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 67/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 20.6014, -137.344, 22.5207, 0.07 ) }
    dend_76 { pt3dadd( 23.6056, -146.37, 24.8185, 0.07 ) }
    dend_76 { pt3dadd( 24.8692, -155.3, 28.6302, 0.07 ) }
    dend_76 { pt3dadd( 27.6363, -162.928, 34.2089, 0.07 ) }
    // Section: dend_74, id: dend_74, parent: dend_70 (entry count 71/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 21.0534, -147.27, 21.9674, 0.07 ) }
    dend_74 { pt3dadd( 23.0827, -156.567, 24.1939, 0.07 ) }
    dend_74 { pt3dadd( 26.0463, -165.878, 24.0552, 0.07 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 74/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 21.0534, -147.27, 21.9674, 0.07 ) }
    dend_71 { pt3dadd( 23.0302, -156.547, 24.326, 0.07 ) }
    dend_71 { pt3dadd( 24.0807, -165.935, 26.8096, 0.07 ) }
    dend_71 { pt3dadd( 23.6939, -175.597, 28.092, 0.07 ) }
    dend_71 { pt3dadd( 21.7894, -185.164, 27.7853, 0.07 ) }
    dend_71 { pt3dadd( 18.2812, -194.165, 26.2145, 0.07 ) }
    dend_71 { pt3dadd( 15.6211, -203.494, 25.0431, 0.07 ) }
    dend_71 { pt3dadd( 13.3307, -212.57, 22.1944, 0.07 ) }
    dend_71 { pt3dadd( 9.91039, -220.77, 18.0036, 0.07 ) }
    // Section: dend_81, id: dend_81, parent: dend_77 (entry count 83/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( 26.5414, -154.861, 28.6587, 0.07 ) }
    dend_81 { pt3dadd( 29.9762, -163.641, 31.3268, 0.07 ) }
    dend_81 { pt3dadd( 33.306, -172.642, 33.2456, 0.07 ) }
    dend_81 { pt3dadd( 37.4786, -181.401, 34.6165, 0.07 ) }
    dend_81 { pt3dadd( 42.1329, -189.737, 36.9084, 0.07 ) }
    dend_81 { pt3dadd( 46.7897, -197.658, 40.4175, 0.07 ) }
    dend_81 { pt3dadd( 51.5148, -205.635, 43.6934, 0.07 ) }
    // Section: dend_78, id: dend_78, parent: dend_77 (entry count 90/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 26.5414, -154.861, 28.6587, 0.07 ) }
    dend_78 { pt3dadd( 29.0739, -163.66, 32.1442, 0.07 ) }
    dend_78 { pt3dadd( 31.8496, -172.345, 35.7428, 0.07 ) }
    dend_78 { pt3dadd( 35.1976, -181.156, 38.4107, 0.07 ) }
    dend_78 { pt3dadd( 37.0573, -190.559, 40.292, 0.07 ) }
    dend_78 { pt3dadd( 39.4148, -199.93, 41.7286, 0.07 ) }
    dend_78 { pt3dadd( 42.1732, -209.239, 42.8395, 0.07 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 97/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 9.91039, -220.77, 18.0036, 0.07 ) }
    dend_73 { pt3dadd( 8.78188, -230.414, 17.0647, 0.07 ) }
    dend_73 { pt3dadd( 6.1856, -239.506, 14.5514, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 0/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 9.91039, -220.77, 18.0036, 0.07 ) }
    dend_72 { pt3dadd( 8.36115, -230.394, 17.5977, 0.07 ) }
    dend_72 { pt3dadd( 6.9907, -239.812, 15.4045, 0.07 ) }
    // Section: dend_83, id: dend_83, parent: dend_81 (entry count 3/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( 51.5148, -205.635, 43.6934, 0.07 ) }
    dend_83 { pt3dadd( 60.5788, -209.734, 44.1079, 0.07 ) }
    // Section: dend_82, id: dend_82, parent: dend_81 (entry count 5/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( 51.5148, -205.635, 43.6934, 0.07 ) }
    dend_82 { pt3dadd( 53.2455, -214.775, 46.7135, 0.07 ) }
    dend_82 { pt3dadd( 53.3401, -224.298, 48.857, 0.07 ) }
    // Section: dend_80, id: dend_80, parent: dend_78 (entry count 8/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( 42.1732, -209.239, 42.8395, 0.07 ) }
    dend_80 { pt3dadd( 46.0818, -217.295, 46.8965, 0.07 ) }
    dend_80 { pt3dadd( 50.0233, -225.635, 50.2569, 0.07 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 11/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 42.1732, -209.239, 42.8395, 0.07 ) }
    dend_79 { pt3dadd( 41.0031, -218.657, 40.5335, 0.07 ) }
    dend_79 { pt3dadd( 41.2068, -227.591, 36.5337, 0.07 ) }
    dend_79 { pt3dadd( 40.7536, -236.896, 33.5802, 0.07 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_94, dend_43, dend_30, dend_25, dend_18, dend_11, dend_0, dend_98, dend_95, dend_45, dend_44, dend_34, dend_31, dend_27, dend_26, dend_24, dend_19, dend_17, dend_12, dend_6, dend_1, dend_100, dend_99, dend_97, dend_96, dend_93, dend_46, dend_42, dend_35, dend_33, dend_32, dend_29, dend_28, dend_23, dend_20, dend_14, dend_13, dend_8, dend_7, dend_5, dend_2, dend_66, dend_47, dend_41, dend_36, dend_22, dend_21, dend_16, dend_15, dend_10, dend_9, dend_4, dend_3, dend_90, dend_67, dend_57, dend_48, dend_40, dend_37, dend_92, dend_91, dend_85, dend_68, dend_63, dend_58, dend_50, dend_49, dend_39, dend_38, dend_89, dend_86, dend_84, dend_69, dend_65, dend_64, dend_62, dend_59, dend_54, dend_51, dend_88, dend_87, dend_75, dend_70, dend_61, dend_60, dend_56, dend_55, dend_53, dend_52, dend_77, dend_76, dend_74, dend_71, dend_81, dend_78, dend_73, dend_72, dend_83, dend_82, dend_80, dend_79]}
    ModelViewParmSubset_2 = new SectionList()
    dend_94 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_98 ModelViewParmSubset_2.append()
    dend_95 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_100 ModelViewParmSubset_2.append()
    dend_99 ModelViewParmSubset_2.append()
    dend_97 ModelViewParmSubset_2.append()
    dend_96 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_92 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_83 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_94, dend_43, dend_30, dend_25, dend_18, dend_11, dend_0, dend_98, dend_95, dend_45, dend_44, dend_34, dend_31, dend_27, dend_26, dend_24, dend_19, dend_17, dend_12, dend_6, dend_1, dend_100, dend_99, dend_97, dend_96, dend_93, dend_46, dend_42, dend_35, dend_33, dend_32, dend_29, dend_28, dend_23, dend_20, dend_14, dend_13, dend_8, dend_7, dend_5, dend_2, dend_66, dend_47, dend_41, dend_36, dend_22, dend_21, dend_16, dend_15, dend_10, dend_9, dend_4, dend_3, dend_90, dend_67, dend_57, dend_48, dend_40, dend_37, dend_92, dend_91, dend_85, dend_68, dend_63, dend_58, dend_50, dend_49, dend_39, dend_38, dend_89, dend_86, dend_84, dend_69, dend_65, dend_64, dend_62, dend_59, dend_54, dend_51, dend_88, dend_87, dend_75, dend_70, dend_61, dend_60, dend_56, dend_55, dend_53, dend_52, dend_77, dend_76, dend_74, dend_71, dend_81, dend_78, dend_73, dend_72, dend_83, dend_82, dend_80, dend_79]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_94 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_98 ModelViewParmSubset_3.append()
    dend_95 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_100 ModelViewParmSubset_3.append()
    dend_99 ModelViewParmSubset_3.append()
    dend_97 ModelViewParmSubset_3.append()
    dend_96 ModelViewParmSubset_3.append()
    dend_93 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_66 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_90 ModelViewParmSubset_3.append()
    dend_67 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_92 ModelViewParmSubset_3.append()
    dend_91 ModelViewParmSubset_3.append()
    dend_85 ModelViewParmSubset_3.append()
    dend_68 ModelViewParmSubset_3.append()
    dend_63 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_89 ModelViewParmSubset_3.append()
    dend_86 ModelViewParmSubset_3.append()
    dend_84 ModelViewParmSubset_3.append()
    dend_69 ModelViewParmSubset_3.append()
    dend_65 ModelViewParmSubset_3.append()
    dend_64 ModelViewParmSubset_3.append()
    dend_62 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_88 ModelViewParmSubset_3.append()
    dend_87 ModelViewParmSubset_3.append()
    dend_75 ModelViewParmSubset_3.append()
    dend_70 ModelViewParmSubset_3.append()
    dend_61 ModelViewParmSubset_3.append()
    dend_60 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_77 ModelViewParmSubset_3.append()
    dend_76 ModelViewParmSubset_3.append()
    dend_74 ModelViewParmSubset_3.append()
    dend_71 ModelViewParmSubset_3.append()
    dend_81 ModelViewParmSubset_3.append()
    dend_78 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_73 ModelViewParmSubset_3.append()
    dend_72 ModelViewParmSubset_3.append()
    dend_83 ModelViewParmSubset_3.append()
    dend_82 ModelViewParmSubset_3.append()
    dend_80 ModelViewParmSubset_3.append()
    dend_79 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_18 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_11 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_95]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_95 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_44 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_31 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_27 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_26 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_12 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_1 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_100]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_100 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_99]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_99 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_97]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_97 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_96]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_96 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_93 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_35 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_28 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_14 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_13 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_8 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_7 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_5 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_47 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_21 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_15 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_10 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_48 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_92 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_91 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_85 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_63 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_58 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_50 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_49 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_38 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_86 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_84 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_64 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_75 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_70 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_61 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_60 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_71 OneSecGrp_SectionRef_96.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_81 OneSecGrp_SectionRef_97.append()

    // Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_98 = new SectionList()
    dend_78 OneSecGrp_SectionRef_98.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_43 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_94]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_94 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_30 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_98]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_98 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_45 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_25 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_34 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_46 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_42 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_6 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_66 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_67 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_90 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_29 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_68 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_33 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_32 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_17 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_69 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_57 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_2 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_89 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_4 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_24 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_19 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_20 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_3 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_77 OneSecGrp_SectionRef_93.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_74 OneSecGrp_SectionRef_95.append()

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_76 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_22 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_88 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_87 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_23 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_36 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_65 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_59 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_62 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_41 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_37 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_40 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_16 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_101 = new SectionList()
    dend_83 OneSecGrp_SectionRef_101.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_39 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_103 = new SectionList()
    dend_80 OneSecGrp_SectionRef_103.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_102 = new SectionList()
    dend_82 OneSecGrp_SectionRef_102.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_51 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_54 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_100 = new SectionList()
    dend_72 OneSecGrp_SectionRef_100.append()

    // Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_99 = new SectionList()
    dend_73 OneSecGrp_SectionRef_99.append()

    // Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_104 = new SectionList()
    dend_79 OneSecGrp_SectionRef_104.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_52 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_56 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_53 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_55 OneSecGrp_SectionRef_90.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()
    dend_94 basal.append()
    dend_95 basal.append()
    dend_96 basal.append()
    dend_97 basal.append()
    dend_98 basal.append()
    dend_99 basal.append()
    dend_100 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_94, dend_94, dend_43, dend_43, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_57, dend_57, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_89, dend_89, dend_89, dend_89, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_69, dend_69, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_88, dend_88, dend_88, dend_87, dend_87, dend_87, dend_75, dend_75, dend_75, dend_75, dend_75, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_56, dend_56, dend_55, dend_55, dend_53, dend_53, dend_52, dend_52, dend_77, dend_77, dend_76, dend_76, dend_76, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_73, dend_73, dend_72, dend_72, dend_83, dend_82, dend_82, dend_80, dend_80, dend_79, dend_79, dend_79]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_98 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_90 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_85 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_71 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_83 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 8.936579E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_18 nseg = 7
    dend_11 nseg = 3
    dend_95 nseg = 3
    dend_44 nseg = 3
    dend_31 nseg = 3
    dend_27 nseg = 3
    dend_26 nseg = 3
    dend_12 nseg = 5
    dend_1 nseg = 3
    dend_100 nseg = 7
    dend_99 nseg = 5
    dend_97 nseg = 3
    dend_96 nseg = 3
    dend_93 nseg = 3
    dend_35 nseg = 9
    dend_28 nseg = 3
    dend_14 nseg = 3
    dend_13 nseg = 3
    dend_8 nseg = 3
    dend_7 nseg = 7
    dend_5 nseg = 5
    dend_47 nseg = 3
    dend_21 nseg = 5
    dend_15 nseg = 3
    dend_10 nseg = 3
    dend_48 nseg = 3
    dend_92 nseg = 5
    dend_91 nseg = 3
    dend_85 nseg = 3
    dend_63 nseg = 3
    dend_58 nseg = 3
    dend_50 nseg = 3
    dend_49 nseg = 3
    dend_38 nseg = 3
    dend_86 nseg = 3
    dend_84 nseg = 3
    dend_64 nseg = 5
    dend_75 nseg = 3
    dend_70 nseg = 3
    dend_61 nseg = 3
    dend_60 nseg = 3
    dend_71 nseg = 3
    dend_81 nseg = 3
    dend_78 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dSTUT214_L5_LBC_82d782e650_0_0


