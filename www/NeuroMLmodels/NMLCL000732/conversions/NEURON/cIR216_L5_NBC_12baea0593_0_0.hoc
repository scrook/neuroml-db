// Cell: cIR216_L5_NBC_12baea0593_0_0
/*
{
  "id" : "cIR216_L5_NBC_12baea0593_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-8.76533, -3.11148, 0.0, 3.33266", "-7.9581, -2.82432, 0.0, 5.72456", "-7.15087, -2.53716, 0.0, 7.79007", "-6.34364, -2.25, 0.0, 8.98288", "-5.53641, -1.96284, 0.0, 9.97099", "-4.72918, -1.67568, 0.0, 10.9098", "-3.92195, -1.38852, 0.0, 11.708", "-3.11472, -1.10136, 0.0, 12.2471", "-2.30749, -0.8142, 0.0, 12.5813", "-1.50026, -0.52704, 0.0, 12.8499", "-0.693026, -0.23988, 0.0, 13.1177", "0.114204, 0.0472794, 0.0, 13.2864", "0.921435, 0.334439, 0.0, 13.0353", "1.72867, 0.621599, 0.0, 12.7416", "2.5359, 0.908759, 0.0, 12.4079", "3.34313, 1.19592, 0.0, 11.9163", "4.15036, 1.48308, 0.0, 11.2063", "4.95759, 1.77024, 0.0, 9.60841", "5.76482, 2.0574, 0.0, 7.72848", "6.57205, 2.34456, 0.0, 4.99653", "7.37928, 2.63172, 0.0, 2.95975" ]
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "4.77184, 3.48221, 4.52, 2.05", "7.23012, 4.96562, 4.52, 1.59", "8.70454, 5.85534, 4.52, 1.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999450176422
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-5.33816, -1.80779, -6.49, 1.14", "-6.7534, -1.95738, -7.58826, 0.45", "-7.77651, -1.9345, -8.31786, 0.45", "-9.24118, -1.74419, -9.2529, 0.68", "-10.3954, -1.5272, -9.92146, 0.68", "-12.1267, -1.264, -10.8109, 0.68", "-13.1177, -1.21032, -11.2853, 0.68", "-15.5243, -1.1869, -12.4238, 0.68", "-17.4562, -1.19075, -13.2617, 0.68", "-19.0477, -1.16836, -13.886, 0.68", "-20.9499, -0.984501, -14.5358, 1.14", "-23.3056, -0.616945, -15.1895, 0.23", "-32.8182, 1.04011, -20.8146, 0.23" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999450176422
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-0.18816, -3.48779, -7.25, 1.36", "-0.910679, -6.56881, -7.21016, 1.36", "-1.45127, -8.87406, -7.18036, 1.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999450176422
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "4.84184, -3.36779, -2.34, 2.95", "5.99979, -5.13822, -2.39985, 1.59", "7.64934, -7.66029, -2.4851, 1.59", "9.05449, -9.80869, -2.55772, 1.59", "10.6499, -12.2481, -2.64018, 1.36", "12.1026, -14.4691, -2.71526, 2.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999450176422
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-7.39816, -4.21779, -2.42, 1.82", "-9.73935, -4.08343, -3.29985, 0.68", "-12.1586, -3.93911, -4.10534, 0.45", "-15.0377, -3.72265, -4.99333, 0.45", "-17.2071, -3.54942, -5.60831, 0.23", "-18.9493, -3.45393, -6.06136, 0.23", "-20.5166, -3.40717, -6.45296, 0.23", "-22.1795, -3.38803, -6.82126, 0.23", "-24.5521, -3.38308, -7.26546, 0.45", "-27.3416, -3.37588, -7.71558, 0.45", "-29.362, -3.35077, -7.99472, 0.23", "-30.5283, -3.31034, -8.16404, 0.23", "-31.3455, -3.2886, -8.32284, 0.23", "-32.8536, -3.26336, -8.66975, 0.23", "-34.3047, -3.23548, -9.01423, 0.23", "-35.8333, -3.1611, -9.41196, 0.23", "-38.3889, -2.93441, -10.1312, 0.23", "-41.0606, -2.69763, -10.9091, 0.23", "-42.5742, -2.62369, -11.3881, 1.36", "-50.8877, -2.99198, -13.9719, 1.36", "-58.7408, -3.13617, -17.7445, 1.36", "-65.8788, -3.32532, -22.7383, 1.36", "-72.3834, -3.45146, -28.5348, 1.36", "-78.7757, -2.45943, -34.3726, 1.36", "-85.5656, -0.681014, -39.5359, 1.36", "-91.7459, 2.03782, -45.0438, 1.36", "-98.7602, 5.45716, -48.921, 1.36", "-105.964, 9.64345, -51.4697, 1.36", "-112.655, 15.0002, -53.0415, 1.36", "-118.566, 20.7887, -55.774, 1.36", "-125.124, 26.0549, -58.0515, 1.36", "-132.373, 29.3118, -61.6253, 1.36", "-139.536, 33.4271, -64.3982, 1.36", "-147.005, 37.3579, -66.5613, 1.36", "-154.395, 40.9453, -69.4673, 1.36", "-162.281, 43.5072, -72.1464, 1.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999450176422,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "2.19184, -6.36779, 3.26, 1.59", "3.42943, -7.95263, 4.14234, 1.59", "4.75407, -9.64895, 5.08674, 1.59", "6.41959, -11.7818, 6.27418, 2.27" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999450176422
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-8.17816, -2.83779, 1.81, 2.05", "-10.3391, -2.42399, 2.04166, 1.36", "-12.077, -2.09119, 2.22797, 1.36", "-15.3003, -1.47396, 2.57351, 2.5" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999450176422
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "7.37928, 2.63172, 0.0, 1.01513", "21.5117, 7.65911, 0.0, 1.01513", "35.6441, 12.6865, 0.0, 1.01513" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "8.70454, 5.85534, 4.52, 2.27", "10.344, 7.12487, 5.28511, 2.27" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "8.70454, 5.85534, 4.52, 0.68", "12.0624, 5.30046, 5.83045, 0.68", "14.9323, 4.9768, 6.85724, 0.45", "18.0073, 4.76441, 7.90792, 1.14", "20.6308, 4.6134, 8.71705, 0.45", "22.7692, 4.44454, 9.39135, 0.68", "25.0222, 4.26747, 10.1177, 1.14", "27.9519, 4.07936, 11.0476, 0.23", "29.2494, 3.99632, 11.4619, 0.91", "31.5333, 3.82986, 12.1112, 1.14", "34.9326, 3.55803, 13.067, 0.23", "37.1645, 3.40521, 13.7126, 0.91", "40.257, 3.19447, 14.803, 1.14", "42.9294, 2.94458, 15.8281, 0.45", "45.983, 2.72233, 17.0114, 0.68", "48.2549, 2.71268, 17.9013, 0.23", "49.1387, 2.78479, 18.2796, 1.14", "51.9928, 3.28843, 19.7217, 0.23", "54.1102, 3.85356, 20.9375, 0.45", "57.091, 5.00071, 22.8946, 1.59", "59.9188, 6.32573, 24.8409, 0.45", "62.5178, 7.53824, 26.5826, 1.36", "65.6747, 8.9608, 28.6229, 0.23", "67.0091, 9.55936, 29.4537, 2.05", "69.3057, 10.674, 31.0971, 0.23", "70.2269, 11.1396, 31.8177, 0.68", "71.6621, 11.6755, 32.975, 0.23", "72.9664, 12.0029, 33.9353, 0.23", "73.8971, 12.1718, 34.5915, 1.14", "76.2633, 12.6286, 36.3937, 0.23", "78.0418, 13.0107, 37.9076, 1.14", "80.4445, 13.6976, 40.3081, 0.23", "81.6909, 14.1863, 41.7157, 0.91", "83.61, 15.0873, 44.0526, 0.23", "85.2767, 16.039, 46.0563, 1.36", "87.04, 17.2127, 48.151, 0.23", "88.6998, 18.3875, 50.0824, 1.36", "90.8473, 20.026, 52.4227, 0.23", "92.857, 21.5391, 54.4683, 1.14", "94.378, 22.6755, 55.8298, 0.23", "95.4861, 23.4643, 56.6565, 0.91", "96.6247, 24.319, 57.4024, 0.23", "97.7679, 25.2969, 58.1286, 1.14", "99.7593, 27.1307, 59.363, 0.23", "101.272, 28.5668, 60.3402, 1.14", "103.368, 30.6933, 61.8295, 0.23", "104.673, 32.0745, 62.7848, 0.91", "106.42, 33.9798, 64.1494, 0.23", "107.346, 34.9273, 64.8623, 0.23", "109.111, 36.557, 66.1885, 1.14", "111.393, 38.2297, 67.7995, 0.23", "111.927, 38.5066, 68.1802, 0.68", "113.544, 39.0413, 69.525, 0.23", "115.049, 39.2129, 71.0047, 0.91", "116.428, 38.9907, 72.8215, 0.23", "118.013, 37.9235, 75.7327, 0.91", "119.08, 36.7005, 78.255, 0.23", "119.941, 35.2905, 80.9808, 0.23", "120.268, 34.2467, 82.8784, 1.14", "120.316, 33.2814, 84.6795, 0.45", "120.077, 32.0537, 87.0134, 0.45", "119.825, 31.4488, 88.5251, 0.91", "119.703, 31.1738, 89.4515, 0.91", "119.567, 30.5447, 92.5305, 1.14", "119.575, 30.3749, 94.3547, 0.23", "119.575, 30.3789, 95.5315, 1.14", "119.782, 30.8622, 100.556, 0.23", "119.918, 31.0358, 101.49, 0.23", "120.255, 31.4009, 102.652, 0.91", "121.22, 32.49, 104.878, 0.23", "121.763, 33.1267, 105.858, 0.23", "122.502, 34.087, 107.025, 0.23", "123.572, 35.7245, 108.505, 0.91", "124.142, 36.5979, 109.225, 0.23", "124.669, 37.307, 109.79, 0.68", "126.022, 38.8376, 110.926, 0.23", "127.742, 40.4721, 112.167, 0.23", "128.399, 41.058, 112.591, 0.23", "129.72, 42.1709, 113.301, 0.91", "132.059, 44.0582, 114.413, 0.23", "132.932, 44.7715, 114.784, 0.23", "135.432, 46.8316, 115.833, 0.68", "136.511, 47.7106, 116.263, 0.23", "137.699, 48.7117, 116.759, 0.68", "138.54, 49.4588, 117.124, 0.23", "140.152, 51.084, 117.796, 0.91", "141.686, 52.8145, 118.516, 0.23" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-32.8182, 1.04011, -20.8146, 0.23", "-44.6411, 0.895903, -26.4656, 0.23", "-55.8862, 1.73678, -33.142, 0.23", "-66.4693, 3.25465, -40.7202, 0.23", "-76.0903, 4.35578, -49.5497, 0.23", "-84.8093, 3.94864, -59.3246, 0.23", "-92.1887, 5.53063, -70.038, 0.23", "-98.2785, 6.03029, -81.631, 0.23", "-106.728, 7.73217, -91.5021, 0.23", "-114.419, 11.5161, -101.415, 0.23", "-122.864, 15.7037, -110.519, 0.23", "-130.922, 17.7253, -120.654, 0.23" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-32.8182, 1.04011, -20.8146, 0.23", "-38.0244, 1.7469, -23.5716, 0.23", "-42.953, 2.59696, -26.7641, 0.23", "-47.1273, 4.27111, -30.6341, 0.23", "-51.5791, 5.95151, -34.1786, 0.23", "-56.0055, 8.03129, -37.5381, 0.23", "-60.1537, 10.7193, -40.8202, 0.23", "-64.4559, 12.6222, -44.4361, 0.23", "-68.3877, 15.4706, -47.8468, 0.23", "-72.3512, 18.3573, -51.1879, 0.23", "-75.3268, 22.1365, -54.6618, 0.23", "-78.6153, 25.8161, -57.956, 0.23" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-1.45127, -8.87406, -7.18036, 0.23", "-1.19814, -11.7092, -6.91602, 0.23", "-0.911313, -13.8906, -6.89998, 0.91", "-0.570559, -15.8754, -6.99573, 0.91", "-0.118343, -18.2099, -7.22065, 0.23", "0.324981, -20.3002, -7.47895, 0.91", "0.899526, -23.0688, -7.85506, 0.23", "1.24855, -24.4904, -8.13333, 1.14", "1.82815, -27.2413, -8.76239, 0.23", "2.03825, -28.4967, -9.05915, 1.14", "2.24407, -30.6612, -9.49814, 0.23", "2.2819, -31.9128, -9.67658, 0.23", "2.25633, -33.4178, -9.82073, 0.91", "2.10572, -36.2542, -9.98065, 0.23", "2.02698, -37.4489, -10.0028, 0.23", "1.84522, -39.5307, -10.0167, 0.91", "1.61099, -41.6076, -10.0354, 0.45", "1.35967, -43.9767, -10.0326, 0.45", "1.24091, -45.2888, -10.0077, 0.91", "1.02465, -48.2854, -9.90062, 0.23", "0.85475, -50.6597, -9.83966, 0.23", "0.713938, -52.8473, -9.82272, 0.23", "0.642347, -55.0619, -9.83699, 0.91", "0.628022, -57.2852, -9.82544, 0.23", "0.654753, -58.7869, -9.80282, 1.14", "0.712108, -61.0627, -9.70632, 0.23", "0.78194, -62.3727, -9.65015, 0.68", "1.01218, -65.3952, -9.56087, 0.23", "1.24376, -68.2927, -9.54995, 0.23", "1.33951, -69.7682, -9.57264, 0.23", "1.46372, -72.2327, -9.62307, 0.45", "1.52174, -74.5147, -9.67372, 0.45", "1.51703, -76.1842, -9.74592, 0.45", "1.4706, -78.0505, -9.8779, 0.45", "1.43888, -79.8391, -10.0434, 0.68", "1.39218, -81.106, -10.1434, 0.23", "1.29853, -82.5829, -10.2309, 0.68", "1.05371, -84.4216, -10.2625, 0.23", "0.686492, -86.5598, -10.2684, 0.45", "0.453154, -88.0434, -10.2854, 0.45", "0.235092, -89.7077, -10.3221, 0.45", "0.0375579, -91.2513, -10.3804, 0.45", "-0.204399, -93.0622, -10.4779, 0.23", "-0.462233, -94.8404, -10.601, 1.82", "-0.945265, -98.2664, -10.9113, 0.45", "-1.10618, -99.7398, -11.0562, 0.45", "-1.17818, -100.936, -11.1814, 0.45", "-1.27329, -103.603, -11.4901, 0.23", "-1.60271, -113.935, -12.5177, 0.23", "-3.04061, -124.14, -13.8262, 0.23", "-5.17462, -133.925, -16.5873, 0.23", "-9.10696, -143.335, -18.5604, 0.23", "-12.1818, -152.78, -21.604, 0.23" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-1.45127, -8.87406, -7.18036, 0.91", "-1.94609, -8.8106, -7.68106, 0.91", "-2.51223, -8.86498, -8.27444, 1.36", "-2.91999, -8.99132, -8.74461, 0.91", "-3.45566, -9.37416, -9.52227, 1.14", "-3.91549, -9.96803, -10.3205, 1.14", "-4.28217, -10.5981, -11.0163, 1.14", "-4.38471, -10.9787, -11.3028, 1.36", "-4.46586, -11.7077, -11.7224, 0.23", "-4.45032, -12.4634, -12.1093, 0.23", "-4.38898, -13.1773, -12.4295, 0.45", "-4.28402, -13.7839, -12.695, 0.91", "-4.11561, -14.6855, -13.1003, 0.23", "-4.0465, -15.1681, -13.3399, 0.23", "-4.03494, -15.833, -13.6923, 0.23", "-4.53223, -18.858, -16.656, 0.23" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "12.1026, -14.4691, -2.71526, 0.68", "12.7995, -16.57, -2.84057, 0.68", "13.4381, -18.4142, -2.89568, 0.91", "14.2371, -20.4968, -2.92348, 0.91", "15.3511, -23.0902, -2.91594, 1.36", "16.605, -25.92, -2.94605, 0.45", "17.7247, -28.5762, -3.02456, 1.14", "18.9423, -31.699, -3.14558, 0.68", "20.3338, -35.4702, -3.38317, 0.68", "21.6436, -39.1331, -3.79885, 0.68", "22.6153, -41.9917, -4.28918, 1.14", "23.6405, -45.047, -4.9795, 0.68", "24.3947, -47.1175, -5.53577, 0.45", "25.2176, -49.2203, -6.13974, 0.45", "26.2885, -51.6167, -6.78352, 0.68", "27.7662, -54.3922, -7.40341, 0.68", "28.4477, -55.3924, -7.5279, 0.68", "29.9923, -57.3976, -7.59131, 0.68", "31.7815, -59.7527, -7.49643, 0.45", "34.1583, -63.1029, -7.18168, 0.45", "35.4386, -65.1559, -6.94347, 0.91", "37.2633, -68.4633, -6.56976, 0.45", "38.6176, -71.1018, -6.32299, 0.91", "39.9444, -73.9751, -6.14748, 0.91", "40.6719, -75.7533, -6.11242, 0.68", "41.7464, -78.7631, -6.13787, 0.68", "42.6545, -81.7235, -6.23014, 0.91", "43.5588, -85.3555, -6.45502, 0.23", "44.0853, -87.597, -6.63737, 0.45", "44.787, -90.5516, -6.90935, 0.45", "45.339, -93.1315, -7.12948, 0.45", "45.5249, -94.3812, -7.22854, 0.45", "45.7872, -96.9094, -7.45372, 0.45", "46.0392, -100.512, -7.79274, 0.91", "46.1745, -102.797, -7.98536, 0.23", "46.3266, -106.03, -8.21756, 0.91", "46.4454, -110.89, -8.53755, 0.91", "46.3979, -113.724, -8.70051, 0.45", "46.2999, -114.961, -8.7734, 0.45", "45.9956, -116.828, -8.8605, 0.45", "45.3782, -119.488, -8.93911, 0.45", "44.5151, -122.525, -8.98778, 0.45", "43.6492, -125.055, -8.96294, 0.23", "42.947, -126.941, -8.91955, 0.91", "42.1626, -129.202, -8.87388, 0.23", "41.6933, -130.648, -8.86718, 0.68", "41.0839, -132.596, -8.8815, 0.68", "40.4865, -134.805, -8.9097, 0.68", "40.0095, -137.333, -8.95944, 0.23", "39.8437, -139.025, -8.98909, 0.68", "39.7934, -140.989, -9.05519, 0.23", "39.8828, -142.908, -9.11949, 0.68", "40.1975, -146.062, -9.26098, 0.23", "40.3397, -147.247, -9.32979, 0.23", "40.5379, -149.173, -9.4519, 0.91", "40.7838, -152.341, -9.64869, 0.45", "41.0708, -156.187, -9.85992, 0.45", "41.2093, -158.252, -9.96085, 0.91", "41.2538, -159.636, -10.0133, 0.23", "41.2432, -161.365, -10.0678, 0.91", "41.23, -162.46, -10.094, 0.45", "41.2212, -163.942, -10.1038, 0.91", "41.2676, -165.899, -10.0868, 0.23", "41.5599, -169.169, -10.0013, 0.68", "41.9042, -171.102, -9.9607, 0.23", "42.4017, -173.015, -10.0201, 0.68", "42.7032, -173.94, -10.0925, 0.68", "43.4684, -175.945, -10.3096, 0.23", "44.5902, -178.348, -10.6883, 1.14", "46.1182, -181.131, -11.2388, 0.23", "47.5826, -183.666, -11.814, 0.23", "48.8543, -185.887, -12.3622, 0.23", "49.5193, -187.029, -12.6562, 0.91", "50.6899, -189.022, -13.1706, 1.36", "51.9985, -191.251, -13.7217, 0.23", "53.1519, -193.242, -14.1129, 0.68", "53.9204, -194.638, -14.2904, 0.23", "54.7485, -196.213, -14.4462, 0.45", "55.9721, -198.755, -14.7136, 0.23", "56.6006, -200.292, -14.8688, 0.23", "57.2117, -202.234, -15.0756, 0.68", "57.4629, -203.497, -15.2318, 0.23", "57.7071, -205.102, -15.4519, 0.91", "58.0078, -208.768, -16.017, 0.23", "58.0373, -211.013, -16.4118, 0.23", "57.9241, -213.845, -16.9627, 0.23", "57.6612, -216.428, -17.518, 0.23", "61.1561, -226.944, -17.9338, 0.23", "64.7884, -237.418, -18.195, 0.23" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "12.1026, -14.4691, -2.71526, 0.68", "12.7794, -15.2589, -2.45635, 0.68", "13.9856, -16.8274, -1.97489, 0.68", "15.3975, -18.9577, -1.4738, 0.68", "16.4789, -20.7085, -1.15987, 0.68", "17.5592, -22.4063, -0.931204, 0.91", "18.8844, -24.4065, -0.705208, 0.68", "20.1676, -26.356, -0.515681, 1.14", "21.855, -28.8302, -0.275772, 1.14", "23.7375, -31.424, 0.00381894, 0.45", "25.0812, -33.2064, 0.242148, 0.68", "26.0167, -34.408, 0.427012, 1.14", "27.5623, -36.3567, 0.738419, 0.23", "29.0077, -38.1067, 1.08175, 1.14", "30.2951, -39.5472, 1.4459, 0.45", "31.98, -41.4529, 1.96804, 0.45", "33.3481, -43.0643, 2.41186, 0.45", "34.8657, -44.9031, 2.86697, 0.45", "36.2539, -46.5825, 3.22485, 1.36", "37.8462, -48.4833, 3.6285, 0.68", "39.0723, -49.8677, 3.86729, 0.23", "39.7961, -50.6688, 3.9466, 1.14", "41.2163, -52.3892, 3.93327, 0.23", "42.0006, -53.4672, 3.82506, 1.14", "42.5307, -54.3272, 3.64618, 1.14", "43.6062, -56.3308, 3.05455, 0.23", "44.3594, -57.775, 2.54515, 0.23", "45.1051, -59.2394, 1.97317, 1.36", "45.4075, -59.8211, 1.73627, 1.36", "46.1723, -61.3465, 1.16059, 0.23", "46.5207, -62.072, 0.913983, 0.68", "47.0809, -63.1481, 0.59903, 0.23", "47.6638, -64.2544, 0.263316, 1.36", "48.579, -66.0695, -0.31277, 0.45", "49.7346, -68.4388, -1.09299, 1.36", "51.016, -71.0501, -1.98021, 0.23", "51.8577, -72.6811, -2.56157, 1.36", "52.5927, -74.0618, -3.0585, 0.23", "53.2427, -75.187, -3.47354, 1.14", "54.181, -76.6724, -4.06033, 0.23", "54.8698, -77.6403, -4.46715, 1.14", "56.0255, -79.1326, -5.13251, 0.23", "57.2493, -80.6733, -5.81089, 0.68", "58.4067, -82.1251, -6.40663, 0.91", "59.8134, -84.0182, -7.13241, 0.23", "60.8169, -85.4846, -7.66467, 1.14", "61.9511, -87.2153, -8.24069, 0.23", "63.0323, -88.9031, -8.76426, 0.68", "64.4492, -91.2055, -9.45119, 0.68", "65.9238, -93.8278, -10.1946, 0.68", "66.7369, -95.3801, -10.6187, 0.68", "67.3094, -96.5165, -10.9257, 0.45", "68.4279, -98.8371, -11.5593, 0.45", "69.5635, -101.245, -12.2804, 0.45", "70.5952, -103.384, -12.983, 0.45", "71.1413, -104.554, -13.404, 0.23", "71.4462, -105.302, -13.6811, 0.23", "76.6099, -112.941, -15.8558, 0.23" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-162.281, 43.5072, -72.1464, 0.68", "-167.263, 46.6935, -78.0617, 0.68", "-173.019, 49.4373, -83.4757, 0.68", "-178.412, 52.9291, -88.8311, 0.68" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-162.281, 43.5072, -72.1464, 0.68", "-175.476, 45.2783, -70.9507, 0.68", "-188.809, 44.36, -71.2107, 0.68" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "6.41959, -11.7818, 6.27418, 1.36", "5.41449, -12.5463, 8.06275, 1.36", "4.62499, -12.9413, 9.37661, 1.36", "3.94591, -13.284, 10.5095, 1.36", "3.28904, -13.6155, 11.6054, 1.36", "2.37047, -14.079, 13.1379, 1.82", "1.12889, -14.7056, 15.2092, 1.36", "0.269588, -14.8602, 16.2268, 1.59", "-0.353419, -14.8703, 16.8415, 1.59" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "6.41959, -11.7818, 6.27418, 1.36", "8.21388, -14.968, 6.36348, 1.36", "9.56185, -17.3616, 6.43057, 1.59", "10.3502, -18.7615, 6.4698, 1.59", "11.5975, -20.9762, 6.53188, 2.05" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-15.3003, -1.47396, 2.57351, 1.36", "-16.2151, 0.826121, 2.63375, 1.36", "-17.4801, 3.93581, 2.71625, 1.14", "-18.4397, 6.15039, 2.74964, 1.14", "-19.6386, 8.68553, 2.82084, 0.91", "-20.9228, 11.1822, 2.94748, 0.91", "-21.9159, 13.113, 3.04541, 1.36", "-22.8626, 14.9569, 3.14747, 1.36", "-24.503, 18.0184, 3.33861, 0.91", "-25.8448, 20.1812, 3.50894, 0.91", "-26.9931, 21.7332, 3.66008, 1.59" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-15.3003, -1.47396, 2.57351, 1.14", "-16.2195, -3.22051, 2.43754, 1.14" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "35.6441, 12.6865, 0.0, 0.15", "49.7765, 17.7139, 0.0, 0.15", "63.909, 22.7413, 0.0, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "10.344, 7.12487, 5.28511, 0.68", "12.6179, 8.62002, 4.48789, 0.68", "14.0156, 9.53905, 3.99785, 1.14", "15.9007, 10.7785, 3.33693, 2.05" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "10.344, 7.12487, 5.28511, 1.36", "11.7727, 9.3116, 6.10577, 1.36", "12.8518, 10.9633, 6.72564, 1.36", "14.0452, 12.7898, 7.41113, 2.05", "15.2145, 14.5795, 8.08279, 0.91" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-4.53223, -18.858, -16.656, 0.23", "-6.94569, -25.0282, -24.9828, 0.23", "-8.5264, -32.1152, -32.7614, 0.23", "-9.20733, -39.1919, -40.679, 0.23", "-11.7032, -45.4298, -48.9307, 0.23", "-14.557, -49.7746, -58.2156, 0.23", "-16.2149, -55.2506, -67.1876, 0.23", "-16.077, -60.3847, -76.5071, 0.23" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-4.53223, -18.858, -16.656, 0.23", "-6.91789, -29.4211, -20.2086, 0.23", "-8.9675, -40.4996, -21.9285, 0.23" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-0.353419, -14.8703, 16.8415, 1.14", "0.126593, -15.8083, 17.478, 1.14", "1.28989, -18.8874, 19.6851, 0.68", "1.80898, -20.8195, 21.1037, 0.68", "2.5484, -23.4262, 23.1202, 0.68", "3.55535, -26.4918, 25.5142, 0.68", "4.50344, -29.0309, 27.5298, 0.45", "4.87302, -30.2938, 28.4554, 0.45", "5.18961, -31.6224, 29.2918, 0.45", "5.91755, -33.849, 30.8812, 0.68", "6.50455, -34.8304, 31.8114, 1.14", "8.01823, -36.292, 33.5378, 0.23", "9.23139, -37.1145, 34.6004, 0.23", "11.3748, -38.0372, 36.4244, 0.91", "13.5331, -38.5224, 38.3214, 0.23", "15.1151, -38.7322, 39.908, 0.68", "16.6843, -38.8303, 41.7046, 0.23", "17.5462, -38.7733, 42.7978, 1.82", "19.613, -38.4977, 45.5124, 0.23", "21.2922, -38.2791, 47.7361, 1.82", "23.2362, -38.3741, 50.0934, 0.23", "24.3874, -38.6762, 51.3093, 0.23", "25.5913, -39.2574, 52.4935, 0.23", "26.7837, -39.9537, 53.5213, 0.23", "27.9358, -40.7046, 54.343, 0.23", "29.8489, -42.0518, 55.6747, 0.68", "32.054, -43.6499, 57.2494, 2.05", "35.0401, -45.8223, 59.3436, 0.45", "37.257, -47.4402, 60.9112, 0.23", "39.0792, -48.7134, 62.2722, 0.23", "41.112, -50.0833, 63.8257, 1.14", "42.3918, -50.9387, 64.8358, 0.23", "44.5397, -52.1903, 66.3227, 0.91", "46.9353, -53.4164, 67.6902, 0.23", "48.0447, -53.917, 68.2892, 1.14", "51.131, -55.0841, 69.9309, 0.23", "54.032, -56.1249, 71.3708, 0.23", "55.8574, -56.7719, 72.2908, 2.05", "59.0752, -57.8092, 74.1052, 0.23", "61.7466, -58.6651, 75.7455, 1.59", "64.0566, -59.4429, 77.2059, 0.23", "65.6673, -59.9916, 78.3159, 0.23", "67.4165, -60.6254, 79.5943, 0.91", "69.4523, -61.4807, 81.1386, 0.23", "71.7576, -62.4541, 82.9017, 0.23", "73.2754, -63.0926, 84.1217, 1.59", "76.9279, -64.4888, 87.3203, 0.23", "78.6042, -65.1407, 88.9004, 0.91", "80.2545, -65.8739, 90.5111, 0.23", "81.6015, -66.4636, 91.7752, 1.14", "84.4404, -67.5203, 94.258, 0.23", "86.6111, -68.293, 96.0797, 0.91", "88.6565, -69.0481, 97.7309, 0.23", "90.2911, -69.7239, 99.1057, 0.68", "93.3947, -71.1022, 101.771, 0.23", "95.269, -72.0379, 103.222, 1.14", "97.1703, -72.9465, 104.382, 0.23" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-0.353419, -14.8703, 16.8415, 0.23", "-2.70021, -15.4565, 16.8368, 0.23", "-5.06089, -15.9994, 16.9074, 0.45", "-7.14623, -16.4609, 17.1109, 0.23", "-8.57258, -16.7509, 17.3246, 0.23", "-10.8656, -17.1799, 17.8268, 0.68", "-12.5362, -17.4788, 18.2541, 0.23", "-14.37, -17.7487, 18.8543, 1.36", "-17.2783, -18.1754, 19.9693, 0.45", "-18.4461, -18.3573, 20.4329, 1.14", "-20.4685, -18.7347, 21.2272, 0.23", "-21.7916, -18.9918, 21.7343, 1.14", "-23.8408, -19.5348, 22.4441, 0.23", "-25.5727, -20.1243, 22.9017, 0.23", "-27.6738, -20.948, 23.255, 1.14", "-29.1887, -21.6407, 23.3867, 0.23", "-30.0116, -22.0547, 23.4035, 0.91", "-32.3095, -23.2498, 23.3905, 0.23", "-34.2827, -24.2473, 23.3257, 0.91", "-36.4759, -25.3007, 23.2076, 0.23", "-39.5065, -26.6921, 22.9765, 0.91", "-40.7387, -27.2299, 22.8464, 0.23", "-42.7, -28.0401, 22.5897, 0.91", "-45.1075, -28.9572, 22.2127, 0.23", "-46.3947, -29.4321, 21.997, 0.45", "-48.21, -30.0401, 21.6606, 0.23", "-49.7327, -30.4614, 21.3828, 0.23", "-51.8075, -30.9576, 21.025, 0.91", "-53.2231, -31.2436, 20.7947, 0.23", "-54.8606, -31.5363, 20.5969, 0.68", "-55.4086, -31.6233, 20.5741, 0.23", "-57.0298, -31.8349, 20.6676, 0.68", "-59.6156, -32.214, 21.0314, 0.23", "-60.5551, -32.4105, 21.2194, 0.91", "-62.1616, -32.8824, 21.6068, 0.23", "-64.2006, -33.6665, 22.1715, 0.68", "-66.0337, -34.5146, 22.7188, 0.23", "-66.8061, -34.9599, 22.9791, 0.91", "-68.5621, -36.1324, 23.6502, 0.23", "-69.5539, -36.8135, 24.0207, 0.91", "-71.0537, -37.9062, 24.5584, 0.23", "-71.9815, -38.6309, 24.8641, 0.91", "-73.9057, -40.1594, 25.4643, 0.23", "-74.8222, -40.845, 25.7695, 0.23", "-75.9328, -41.6259, 26.1501, 0.91", "-77.5061, -42.6457, 26.6624, 0.23", "-78.5804, -43.2975, 26.9759, 0.68", "-81.0234, -44.7568, 27.5505, 0.23", "-81.9317, -45.2677, 27.6957, 0.68", "-82.8955, -45.8135, 27.7773, 0.23", "-84.3698, -46.5859, 27.8275, 0.91", "-85.2125, -46.9659, 27.7863, 0.91", "-86.8958, -47.679, 27.6021, 0.23", "-88.3064, -48.2401, 27.3738, 0.45", "-90.4087, -49.0174, 27.0066, 0.23", "-91.9687, -49.5342, 26.7399, 0.91", "-93.566, -49.9999, 26.4941, 0.23", "-95.2662, -50.381, 26.3313, 0.45", "-96.658, -50.5928, 26.2678, 0.23", "-97.4132, -50.6932, 26.2679, 0.68", "-98.8656, -50.8616, 26.3459, 0.23", "-100.269, -51.015, 26.4935, 0.91", "-102.682, -51.2104, 26.8639, 0.23", "-103.43, -51.258, 27.0079, 0.23", "-105.293, -51.3853, 27.4058, 0.23", "-107.125, -51.5259, 27.8324, 0.91", "-108.274, -51.6184, 28.105, 0.23", "-109.45, -51.7102, 28.3691, 0.91", "-112.194, -51.8607, 28.9317, 0.23", "-114.278, -51.9444, 29.3295, 0.91", "-116.663, -52.0135, 29.8025, 0.23", "-119.208, -52.1086, 30.3041, 0.23", "-121.082, -52.2027, 30.655, 0.23", "-122.719, -52.2835, 30.9503, 0.23", "-124.226, -52.3229, 31.1837, 0.45", "-126.135, -52.3162, 31.4975, 0.23" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "11.5975, -20.9762, 6.53188, 0.68", "12.7432, -20.7664, 6.39293, 0.68", "14.9868, -20.4693, 6.29148, 0.68", "16.4866, -20.3292, 6.28411, 0.45", "17.3352, -20.3296, 6.32624, 0.68", "19.1485, -20.4856, 6.47502, 0.45", "20.5728, -20.6778, 6.61731, 0.91", "22.1681, -21.0175, 6.87749, 0.68", "23.1329, -21.306, 7.08533, 1.14", "25.2261, -22.0911, 7.58375, 0.23", "26.2806, -22.5623, 7.83577, 0.45", "26.9952, -22.9093, 7.99508, 0.23", "27.7846, -23.2983, 8.13318, 0.91", "29.1351, -23.9586, 8.28994, 0.23", "30.2965, -24.5, 8.39798, 1.14", "32.3172, -25.3876, 8.55422, 0.45", "33.8652, -26.08, 8.67607, 1.14", "36.5805, -27.3396, 8.90753, 0.23", "38.3542, -28.1665, 9.07172, 0.91", "40.1583, -28.9761, 9.26184, 0.23", "42.0943, -29.7932, 9.4884, 0.91", "43.567, -30.3695, 9.68163, 0.23", "44.8396, -30.8395, 9.86484, 0.91", "46.4751, -31.3419, 10.1092, 0.23", "48.1363, -31.733, 10.3404, 1.14", "48.9741, -31.866, 10.4281, 0.23", "49.9981, -31.9506, 10.4976, 0.91", "51.2418, -31.9915, 10.5418, 0.91", "53.0652, -32.0468, 10.5484, 0.23", "54.7589, -32.1316, 10.5189, 0.68", "56.2382, -32.2707, 10.5059, 0.23", "57.0316, -32.3878, 10.5077, 0.68", "58.5098, -32.6682, 10.5278, 0.23", "60.7096, -33.207, 10.5808, 0.23", "62.4094, -33.7314, 10.6492, 1.82", "64.7602, -34.5842, 10.7746, 0.23", "65.6614, -34.9499, 10.8297, 0.91", "66.7683, -35.4384, 10.8789, 0.23", "68.059, -36.0365, 10.9154, 1.14", "70.2817, -37.0855, 10.961, 0.23", "71.7001, -37.7766, 10.9927, 0.45", "74.4055, -39.0885, 11.0443, 0.23", "76.0322, -39.8922, 11.0873, 0.68", "78.0797, -40.8625, 11.1573, 0.23", "79.4859, -41.4764, 11.22, 0.23", "80.194, -41.755, 11.2581, 0.45", "81.3594, -42.1064, 11.3367, 0.23", "82.8301, -42.4045, 11.4518, 0.68", "84.9566, -42.693, 11.6181, 0.23", "86.0964, -42.8098, 11.7029, 0.23", "87.4027, -42.9363, 11.7832, 0.68", "89.6237, -43.1307, 11.8907, 0.23", "91.4461, -43.3227, 11.9742, 0.68", "93.2656, -43.5334, 12.0725, 0.23", "94.328, -43.7126, 12.1448, 1.36", "96.8146, -44.1867, 12.3601, 0.23", "97.7212, -44.3853, 12.4648, 0.23", "99.3869, -44.841, 12.7025, 0.23", "100.182, -45.082, 12.8344, 0.68", "101.591, -45.5015, 13.0313, 0.23", "102.451, -45.7758, 13.1202, 0.91", "103.092, -45.9991, 13.1751, 0.23", "104.756, -46.6325, 13.273, 0.91", "106.001, -47.1041, 13.2777, 0.23", "107.913, -47.851, 13.1936, 0.23", "109.518, -48.4794, 13.0774, 0.23", "109.958, -48.6511, 13.0433, 1.14", "111.57, -49.287, 12.9379, 0.23", "113.387, -49.9651, 12.8476, 0.68", "114.908, -50.4895, 12.801, 0.23", "116.513, -51.0167, 12.8024, 0.68", "119.684, -51.8712, 12.8259, 0.23", "120.682, -52.0935, 12.8332, 0.23", "121.456, -52.2261, 12.8352, 0.23", "122.464, -52.351, 12.8337, 0.68", "125.144, -52.5295, 12.7504, 0.23", "126.781, -52.5591, 12.6478, 0.68", "129.003, -52.4908, 12.4456, 0.23", "129.712, -52.4559, 12.3697, 0.68", "131.316, -52.3446, 12.198, 0.23", "133.393, -52.1456, 12.0256, 0.23", "134.8, -51.9572, 11.9288, 0.23", "135.278, -51.8904, 11.9051, 0.91", "136.677, -51.6776, 11.8712, 0.23", "138.922, -51.3132, 11.8625, 0.91", "142.009, -50.7621, 11.9011, 0.23", "142.873, -50.5991, 11.9251, 0.23", "143.976, -50.3892, 11.9489, 0.91", "146.171, -49.9744, 11.9713, 0.23", "147.392, -49.7261, 11.9693, 0.91", "149.581, -49.2518, 11.9018, 0.23", "150.159, -49.109, 11.8674, 0.23", "151.492, -48.7958, 11.7837, 0.45", "153.67, -48.3315, 11.632, 0.23", "154.951, -48.0524, 11.538, 0.23", "156.297, -47.7323, 11.4411, 0.91", "157.917, -47.2995, 11.3028, 0.23", "159.294, -46.9074, 11.167, 0.23", "160.68, -46.5136, 11.0232, 0.68", "162.38, -46.0561, 10.8045, 0.23", "163.453, -45.8242, 10.6232, 0.68", "165.227, -45.5072, 10.2799, 0.23", "166.266, -45.3645, 10.0275, 0.45", "167.841, -45.1872, 9.60099, 0.23", "169.312, -45.0714, 9.19312, 0.68", "171.034, -45.0096, 8.73541, 0.23", "172.426, -45.0007, 8.36883, 0.23", "174.917, -45.025, 7.74599, 0.23", "175.904, -45.0281, 7.50598, 0.23", "177.472, -45.0032, 7.13324, 0.45", "178.862, -44.9458, 6.86898, 0.23" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "11.5975, -20.9762, 6.53188, 1.82", "11.3716, -23.7621, 6.59517, 1.82", "11.075, -27.4219, 6.67832, 1.82" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-26.9931, 21.7332, 3.66008, 0.45", "-28.4752, 24.3861, 2.91868, 0.45", "-29.1253, 25.4588, 2.61751, 0.91", "-30.2254, 27.2511, 2.19029, 0.23", "-31.1808, 29.0058, 1.81677, 0.23", "-31.8855, 30.4817, 1.51663, 0.45", "-32.6461, 32.3088, 1.16933, 1.14", "-33.4245, 34.4098, 0.851142, 0.23", "-34.4231, 37.6475, 0.438887, 0.68", "-35.3221, 41.4013, 0.0128052, 0.23", "-35.7549, 43.5975, -0.178382, 0.91", "-36.0733, 45.7426, -0.346187, 0.68", "-36.5119, 49.0495, -0.584162, 0.23", "-36.6945, 50.5052, -0.694378, 0.23", "-36.9601, 52.5825, -0.87686, 0.23", "-37.4802, 55.9827, -1.20917, 1.36", "-37.7695, 57.5679, -1.38156, 0.23", "-38.2162, 59.7814, -1.6481, 1.14", "-38.7011, 62.0248, -1.95344, 0.23", "-39.2238, 63.9889, -2.2048, 0.23", "-39.5786, 65.1107, -2.33901, 1.14", "-40.7872, 68.5238, -2.77074, 0.23", "-41.4232, 70.0588, -2.95139, 0.68", "-42.2687, 71.8782, -3.13114, 0.23", "-43.197, 73.5731, -3.28124, 1.14", "-44.4305, 75.5374, -3.44533, 0.23", "-45.4185, 77.0213, -3.55423, 0.91", "-46.004, 77.8109, -3.65919, 0.23", "-46.8163, 78.8875, -3.8862, 0.91", "-47.966, 80.4741, -4.33162, 0.23", "-48.6089, 81.4213, -4.66206, 0.23", "-49.2952, 82.5052, -5.11012, 0.23", "-50.5189, 84.776, -6.1335, 0.91", "-51.1271, 86.1682, -6.79758, 0.23", "-51.6201, 87.4883, -7.44068, 0.91", "-52.0929, 88.9574, -8.14427, 0.23", "-52.363, 89.9541, -8.62314, 0.91", "-53.2492, 93.6977, -10.3592, 0.23", "-53.5589, 95.2054, -10.9923, 1.14", "-54.0879, 97.7105, -11.9522, 0.23", "-54.3884, 99.1169, -12.4644, 0.91", "-54.7222, 100.738, -12.9921, 0.23", "-55.1995, 102.966, -13.6291, 0.23", "-55.5376, 104.536, -14.0014, 0.91", "-56.0665, 107.042, -14.5371, 0.23", "-56.3539, 108.525, -14.8359, 0.91", "-56.8787, 111.29, -15.3425, 0.23", "-57.2296, 113.131, -15.6643, 0.91", "-57.6391, 115.423, -16.092, 0.23", "-57.8337, 116.556, -16.3141, 0.91", "-58.344, 119.561, -16.9554, 0.23", "-58.7656, 122.275, -17.5535, 0.91", "-59.1318, 124.495, -18.0592, 0.23", "-59.3787, 125.978, -18.3901, 0.91", "-60.0198, 129.752, -19.2317, 0.23", "-60.2036, 130.909, -19.4817, 1.14", "-60.4126, 132.807, -19.8888, 0.23" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-26.9931, 21.7332, 3.66008, 0.68", "-27.8304, 21.6267, 4.51727, 0.68", "-29.5329, 21.5851, 6.1536, 0.91", "-30.9041, 21.8601, 7.48181, 0.91", "-32.3303, 22.4518, 8.8679, 0.91", "-34.1177, 23.1935, 10.6051, 0.23", "-35.3831, 23.7186, 11.8349, 1.14", "-36.8016, 24.3673, 13.1583, 0.68", "-39.0603, 25.5288, 15.1066, 1.59", "-41.183, 27.0594, 16.8136, 0.68" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-16.2195, -3.22051, 2.43754, 0.68", "-17.5637, -4.46192, 2.92481, 0.68", "-18.1619, -5.01997, 3.18442, 0.68", "-19.2645, -6.08802, 3.76573, 0.23", "-20.5692, -7.46407, 4.51195, 0.91", "-21.6466, -8.75892, 5.173, 0.23", "-22.2983, -9.71022, 5.6387, 0.91", "-22.7794, -10.9729, 6.15394, 0.23", "-22.8685, -11.8376, 6.47151, 0.23", "-22.7156, -12.7947, 6.80719, 0.23", "-22.4206, -13.8854, 7.14941, 0.68", "-22.0109, -15.3763, 7.57059, 0.68", "-21.5366, -17.4853, 8.1309, 1.14", "-21.3306, -19.0817, 8.46983, 0.23", "-21.3267, -20.3156, 8.68704, 0.68", "-21.5088, -21.64, 8.88241, 0.23", "-21.8347, -22.802, 8.97935, 0.45", "-22.1885, -23.7186, 8.98961, 1.14", "-22.6241, -24.6323, 8.93062, 0.23", "-23.2065, -25.6939, 8.83763, 0.91", "-24.1201, -27.2213, 8.6645, 0.23", "-24.8747, -28.5559, 8.4331, 1.14", "-25.1329, -29.0315, 8.33706, 0.23", "-25.5964, -29.8778, 8.1703, 0.68", "-26.0175, -30.6533, 8.05466, 0.23", "-26.4701, -31.508, 7.96488, 1.14", "-27.1706, -32.8791, 7.90637, 0.23", "-27.8442, -34.1375, 7.95631, 0.91", "-28.0726, -34.6049, 8.01441, 0.91", "-28.5755, -35.8827, 8.30782, 0.23", "-28.9859, -37.0174, 8.78721, 0.23", "-29.3537, -38.1728, 9.56163, 0.23", "-29.5502, -39.0762, 10.4923, 1.14", "-29.5085, -40.0563, 11.8349, 0.23", "-29.1198, -40.853, 13.1927, 0.23", "-28.165, -41.7213, 15.0106, 0.23", "-27.2488, -42.2613, 16.1438, 0.68", "-26.2219, -42.703, 17.0526, 0.23", "-24.767, -43.1994, 18.0127, 0.91", "-22.793, -43.6782, 18.9989, 0.23", "-21.5892, -43.9103, 19.4345, 0.23", "-19.3639, -44.328, 20.0501, 0.23", "-18.1221, -44.5828, 20.3421, 0.23", "-16.7588, -44.8374, 20.6126, 0.68", "-15.3222, -45.0166, 20.85, 0.23", "-14.0532, -45.1226, 21.0168, 0.68", "-12.202, -45.1582, 21.2497, 0.23" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-16.2195, -3.22051, 2.43754, 0.68", "-17.6404, -3.10943, 1.7135, 0.68", "-19.8032, -2.79683, 0.82998, 0.68", "-21.4351, -2.54957, 0.304061, 0.68", "-23.7692, -2.17125, -0.370048, 1.14", "-26.0834, -1.76093, -0.944167, 0.23", "-28.0613, -1.41947, -1.34987, 0.68", "-30.2384, -1.01216, -1.58926, 0.45", "-32.7859, -0.595159, -1.64954, 0.68", "-34.4183, -0.432674, -1.59602, 0.68", "-35.9184, -0.387066, -1.4713, 0.68", "-37.6196, -0.456442, -1.26531, 0.68", "-38.645, -0.565767, -1.12834, 0.68", "-40.4994, -0.830457, -0.892977, 0.68", "-42.8549, -1.20154, -0.596376, 0.68", "-45.0124, -1.54712, -0.339895, 0.68", "-47.4182, -1.88792, -0.0959265, 0.91", "-49.6502, -2.12913, 0.100961, 0.45", "-51.6359, -2.31761, 0.255303, 0.45", "-53.8767, -2.51042, 0.394365, 0.45", "-55.2803, -2.63582, 0.437014, 0.45", "-56.7908, -2.75501, 0.409127, 0.45", "-58.366, -2.89592, 0.24398, 0.23", "-60.2094, -3.05933, -0.100968, 0.23", "-61.5344, -3.19854, -0.441499, 0.23", "-63.2624, -3.37776, -0.955012, 0.45", "-65.2307, -3.56368, -1.5401, 0.23", "-67.4818, -3.74955, -2.19335, 0.23", "-69.4505, -3.89663, -2.70449, 0.45", "-70.8484, -3.97477, -2.98572, 0.45", "-72.8354, -4.13345, -3.30406, 0.45", "-74.6636, -4.3101, -3.54584, 0.23", "-75.4543, -4.39805, -3.62765, 0.23", "-77.2074, -4.56714, -3.74524, 2.05", "-81.1997, -4.96086, -4.01055, 0.23", "-83.2401, -5.18826, -4.16755, 0.23", "-91.8781, -3.7482, -4.47271, 0.23", "-100.631, -3.95213, -4.13869, 0.23" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "15.9007, 10.7785, 3.33693, 0.68", "17.6481, 12.2781, 2.45669, 0.68", "18.5868, 13.2697, 1.90916, 0.91", "20.0674, 15.0044, 1.02803, 0.68", "21.3267, 16.4907, 0.323804, 0.68", "22.6548, 17.9881, -0.386157, 0.68", "23.7386, 19.1194, -0.969735, 0.68", "24.8412, 20.2732, -1.58062, 0.68", "25.7603, 21.104, -2.05438, 0.68", "27.0821, 22.1268, -2.68094, 0.68", "28.5452, 23.095, -3.284, 1.14", "30.2752, 24.0825, -3.91653, 0.68", "31.5498, 24.7271, -4.36983, 0.68", "32.8532, 25.377, -4.83827, 0.68", "34.0093, 25.9634, -5.24292, 1.14", "35.7133, 26.8659, -5.799, 0.45", "37.7027, 27.9853, -6.37928, 0.68", "39.2119, 28.914, -6.79009, 0.68", "40.9774, 30.1106, -7.29658, 0.68", "42.6747, 31.3866, -7.8134, 0.68", "43.973, 32.5084, -8.26521, 0.45", "44.5037, 33.1163, -8.48376, 0.45", "44.9395, 33.8464, -8.69445, 0.45", "45.4606, 35.0968, -9.05751, 0.45", "46.0011, 36.4145, -9.52914, 0.45", "46.8432, 37.9431, -10.2082, 0.45", "47.9216, 39.322, -10.8988, 0.45", "48.5461, 40.0219, -11.2448, 1.14", "49.9343, 41.4695, -11.9249, 0.45", "51.4139, 42.871, -12.5705, 0.45", "53.1714, 44.4222, -13.2673, 0.45", "54.6348, 45.6819, -13.8088, 0.45", "56.4709, 47.2802, -14.475, 0.68", "57.3059, 48.0374, -14.7564, 0.68", "58.5425, 49.2547, -15.1202, 0.45", "59.8832, 50.7395, -15.4954, 0.45", "60.3291, 51.2541, -15.6131, 1.14", "60.9401, 51.8956, -15.7689, 0.23", "62.5664, 53.2611, -16.1311, 0.23", "63.1967, 53.7629, -16.26, 0.23", "69.6177, 60.2917, -17.9227, 0.23", "74.6907, 67.8398, -19.8999, 0.23", "79.4375, 75.7468, -21.1512, 0.23", "85.3, 82.9689, -20.8484, 0.23", "91.3834, 89.7933, -19.1053, 0.23", "95.9575, 97.209, -15.8337, 0.23", "101.197, 104.446, -13.226, 0.23", "105.397, 112.512, -11.2489, 0.23", "109.292, 120.83, -9.74446, 0.23", "113.505, 128.557, -6.71719, 0.23", "116.511, 136.32, -2.55605, 0.23", "120.522, 144.074, 0.670082, 0.23" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "15.9007, 10.7785, 3.33693, 0.68", "17.6898, 12.9412, 3.82005, 0.68", "19.0564, 14.4866, 4.07488, 0.68", "21.5924, 17.2831, 4.45358, 0.68", "22.8396, 18.6675, 4.59827, 0.68", "24.5081, 20.5846, 4.77967, 0.68", "25.9602, 22.3637, 4.93111, 0.68", "27.5934, 24.4478, 5.0526, 0.68", "28.3699, 25.5126, 5.10022, 1.14", "29.3288, 27.0191, 5.17937, 0.91", "30.0909, 28.3997, 5.28672, 0.91", "31.3209, 30.9711, 5.55542, 0.68", "32.2198, 33.211, 5.85625, 0.91", "33.0118, 35.5098, 6.2603, 0.91", "33.9577, 38.6421, 6.88706, 0.91", "34.4971, 40.6585, 7.34666, 0.91", "34.8054, 41.8881, 7.64354, 0.91", "35.2268, 43.4582, 8.05352, 0.91", "35.6986, 45.1596, 8.51556, 0.68", "36.3848, 47.4277, 9.14258, 0.68", "37.0571, 49.5628, 9.73458, 1.14", "37.8717, 52.0323, 10.395, 0.91", "38.7044, 54.6634, 11.0894, 0.91", "39.0764, 55.8568, 11.3877, 0.91", "39.673, 57.6686, 11.7997, 0.91", "40.728, 60.7708, 12.4496, 0.91", "41.4514, 63.0397, 12.9248, 0.91", "42.0282, 65.0259, 13.3826, 1.36", "42.6672, 67.2257, 13.9436, 0.68", "43.3697, 69.297, 14.511, 0.91", "44.0315, 71.0291, 15.0158, 0.68", "44.8529, 72.918, 15.5605, 0.68", "45.8031, 74.9882, 16.1524, 0.91", "47.1696, 77.8445, 16.9864, 0.91", "48.2506, 80.2053, 17.7101, 0.45", "49.1192, 82.2588, 18.3434, 0.68", "50.0317, 84.56, 19.0425, 0.91", "50.6263, 86.0798, 19.4992, 0.23", "51.5732, 88.6078, 20.2533, 0.45", "52.2443, 90.5455, 20.7849, 0.45", "53.1544, 93.1947, 21.4704, 0.45", "53.7135, 94.869, 21.891, 1.14", "54.8729, 98.4789, 22.7838, 0.68", "55.7652, 101.204, 23.3983, 0.68", "56.7763, 104.08, 23.9633, 0.68", "57.8893, 106.902, 24.4664, 0.45", "58.8415, 109.116, 24.8502, 0.45", "59.6455, 110.973, 25.1842, 0.68", "60.4364, 112.867, 25.5516, 0.91", "61.1292, 114.556, 25.9514, 0.45", "61.8604, 116.398, 26.5015, 0.68", "62.472, 118.089, 27.0194, 0.45", "63.018, 119.601, 27.4683, 0.45", "63.3385, 120.528, 27.7208, 0.45", "63.8021, 122.005, 28.0558, 0.91", "64.8047, 125.142, 28.5932, 0.68", "66.0737, 128.597, 28.9774, 0.68", "66.9836, 130.664, 29.0778, 0.45", "67.853, 132.321, 29.0761, 0.45", "68.9069, 134.184, 29.0158, 0.45", "69.94, 135.913, 28.8994, 0.45", "71.0832, 137.74, 28.7147, 0.45", "71.8076, 138.846, 28.599, 0.45", "72.3101, 139.629, 28.5583, 0.45", "73.3181, 141.125, 28.6113, 0.45", "74.433, 142.691, 28.7592, 0.45", "75.5367, 144.27, 28.9268, 0.68", "77.369, 146.962, 29.2222, 0.23", "78.5529, 148.666, 29.4281, 0.45", "80.2468, 150.923, 29.7373, 0.45", "81.3608, 152.296, 29.9608, 0.91", "83.2351, 154.527, 30.3978, 0.23", "83.9813, 155.466, 30.6234, 0.45", "85.2546, 157.22, 31.1171, 0.68", "86.6901, 159.48, 31.8278, 0.45", "87.9495, 161.924, 32.6739, 0.45", "88.5809, 163.394, 33.2543, 0.45", "89.3842, 165.529, 34.1775, 0.45", "89.9071, 167.092, 34.867, 0.45", "90.4628, 169.269, 35.847, 0.45", "90.7073, 170.945, 36.6359, 0.45", "90.7447, 171.826, 37.0828, 0.45", "90.6944, 173.467, 37.9749, 0.45", "90.5089, 174.966, 38.8674, 0.45", "90.2229, 176.217, 39.6487, 0.45", "89.9276, 177.298, 40.3542, 0.45", "89.4197, 178.954, 41.4616, 0.68", "88.8568, 180.676, 42.6031, 0.68", "88.0364, 183.168, 44.1499, 0.45", "87.3318, 185.432, 45.4121, 0.45", "86.8226, 187.438, 46.4148, 0.45", "86.5882, 188.79, 47.0421, 1.14", "86.3676, 190.766, 47.8877, 0.45", "86.1842, 193.455, 48.9543, 0.68", "86.1129, 195.278, 49.6338, 0.91", "86.0628, 196.943, 50.2517, 0.45", "85.9751, 198.937, 50.9901, 0.68", "85.9293, 200.068, 51.4299, 0.68", "85.8524, 201.726, 52.1386, 0.45", "85.679, 204.315, 53.3674, 0.45", "85.4459, 205.957, 54.1965, 0.45", "85.1365, 207.284, 54.8978, 0.45", "84.7786, 208.482, 55.5345, 0.68", "84.2287, 210.28, 56.5708, 0.45", "83.9304, 211.216, 57.1648, 0.91", "83.2517, 213.493, 58.7288, 0.23", "82.9364, 214.551, 59.486, 0.45", "82.4605, 216.485, 60.8375, 0.23", "82.1795, 218.034, 61.8689, 0.23", "82.0282, 219.663, 62.8989, 1.14", "81.9523, 222.076, 64.3593, 0.23", "81.9881, 223.642, 65.2553, 0.23", "82.0511, 225.99, 66.5283, 0.23", "82.06, 227.469, 67.2896, 0.91", "81.9871, 229.25, 68.1497, 0.23", "81.8916, 230.523, 68.7435, 0.23", "81.7583, 231.903, 69.3711, 0.23", "81.66, 232.994, 69.8706, 0.91", "81.4736, 236.017, 71.2265, 0.23", "81.4492, 237.282, 71.8042, 0.68", "81.4773, 238.382, 72.3162, 0.23", "81.585, 239.785, 72.9852, 0.23", "81.7719, 241.418, 73.7843, 0.68", "82.1491, 243.675, 74.9167, 0.91", "82.5906, 245.95, 76.0861, 0.23", "82.846, 247.578, 76.9397, 0.91", "83.0294, 249.475, 77.9602, 0.23", "83.0919, 251.204, 78.8917, 0.91", "83.1168, 252.625, 79.6372, 0.23", "83.1384, 254.031, 80.3647, 0.68", "83.2906, 256.779, 81.6867, 0.45", "83.3411, 257.614, 82.0829, 0.45", "83.4639, 259.7, 83.0789, 0.45", "83.5739, 261.668, 84.007, 1.14", "83.7715, 264.494, 85.3065, 0.23", "84.0308, 266.225, 86.0844, 0.23" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "15.2145, 14.5795, 8.08279, 0.91", "16.4424, 16.4521, 8.54276, 0.91", "17.2613, 17.7224, 8.8759, 1.14", "18.5586, 19.7957, 9.45669, 0.45", "19.1927, 20.8478, 9.77719, 1.14", "20.1032, 22.332, 10.3009, 0.68", "20.8463, 23.5452, 10.7866, 1.36", "21.4689, 24.632, 11.2941, 0.91", "21.9088, 25.4227, 11.7028, 1.36", "22.8211, 27.0856, 12.6168, 0.68", "23.3722, 28.2109, 13.2404, 1.14", "23.7893, 29.2324, 13.7959, 0.23", "23.9657, 29.7633, 14.077, 0.68", "24.1845, 30.5231, 14.4378, 0.23", "24.4624, 31.8567, 14.9841, 0.23", "24.5474, 32.4965, 15.2044, 1.14", "24.6771, 33.9548, 15.651, 0.23", "24.8909, 35.9554, 16.2241, 1.36", "25.0949, 37.3822, 16.6229, 1.36", "25.3648, 38.8165, 17.016, 0.23", "25.5432, 39.6197, 17.2276, 1.14", "25.8063, 40.5652, 17.4495, 1.14", "26.3966, 42.2917, 17.796, 0.23", "26.8887, 43.5339, 18.0324, 1.36", "27.2339, 44.4131, 18.2047, 1.36", "27.5707, 45.3585, 18.3823, 0.23", "27.8867, 46.3975, 18.6063, 1.36", "28.0045, 46.9157, 18.7246, 1.36", "28.1988, 48.4099, 19.1018, 0.45", "28.3193, 49.7309, 19.4569, 1.14", "28.4013, 50.7554, 19.7383, 1.14", "28.5923, 52.3677, 20.1989, 0.23", "28.7144, 52.9615, 20.3827, 1.14", "28.9374, 53.7636, 20.6337, 1.14", "29.3699, 54.9271, 20.9938, 0.23", "29.5037, 55.2188, 21.0909, 0.23", "30.0294, 56.2633, 21.4437, 1.36", "30.8299, 57.7023, 21.933, 0.45", "31.2464, 58.3917, 22.2032, 0.23", "31.8994, 59.5419, 22.6675, 1.14", "32.4438, 60.5586, 23.0742, 0.23", "32.9275, 61.4747, 23.437, 1.14", "33.6936, 62.8709, 23.9998, 0.23", "34.3077, 63.8928, 24.4113, 1.14", "35.3422, 65.3821, 25.0421, 0.23", "35.7233, 65.8828, 25.2494, 0.23", "36.13, 66.3914, 25.4396, 0.91", "36.7926, 67.1268, 25.7049, 0.23", "37.2782, 67.617, 25.8759, 0.91", "37.9864, 68.2593, 26.0951, 0.23", "38.7293, 68.8726, 26.3121, 1.14", "39.3903, 69.4881, 26.5386, 1.14", "40.151, 70.268, 26.8446, 0.23", "40.5136, 70.6759, 27.0022, 1.59", "40.9263, 71.2404, 27.1836, 1.59", "41.746, 72.5647, 27.5368, 0.23", "42.3012, 73.5396, 27.734, 0.91", "42.8285, 74.4598, 27.8639, 0.23", "43.3585, 75.302, 27.9322, 1.14", "44.696, 77.0584, 27.9751, 0.23", "45.1473, 77.5485, 27.9654, 0.23", "46.2109, 78.537, 27.8985, 0.91", "47.4343, 79.5242, 27.765, 0.23", "48.8655, 80.6171, 27.5877, 0.23", "50.4047, 81.7426, 27.4135, 0.91", "51.4893, 82.5793, 27.3061, 0.23", "52.1817, 83.2111, 27.2404, 1.14", "53.1229, 84.3378, 27.165, 0.23", "53.6656, 85.2536, 27.1155, 0.23", "54.0776, 86.2456, 27.078, 1.14", "54.7574, 88.3072, 27.0452, 0.23", "55.0375, 89.2505, 27.0432, 0.23", "55.4219, 90.5096, 27.0604, 0.68", "55.6289, 91.1425, 27.0818, 0.23", "55.9922, 92.0564, 27.1165, 0.91", "56.9186, 93.976, 27.1807, 0.23", "57.2725, 94.6021, 27.1949, 1.14", "57.8216, 95.5365, 27.2379, 0.23", "58.1702, 96.0946, 27.2742, 0.91", "58.9477, 97.3332, 27.3984, 0.23", "59.5743, 98.3897, 27.5476, 0.91", "60.2743, 99.7408, 27.7949, 0.23", "60.9233, 101.223, 28.1053, 0.68", "61.3277, 102.463, 28.3674, 0.23", "61.5516, 103.479, 28.5738, 0.91", "61.6504, 104.56, 28.779, 0.23", "61.6361, 105.673, 28.9725, 0.68", "61.5352, 106.771, 29.1298, 0.23", "61.2919, 108.687, 29.3611, 0.23", "61.0866, 110.158, 29.5356, 0.68", "60.9349, 111.673, 29.697, 0.23", "60.9068, 112.382, 29.7732, 0.68", "60.9356, 113.436, 29.9249, 0.23", "61.0388, 114.452, 30.116, 1.14", "61.1366, 115.091, 30.2827, 1.14", "61.3598, 116.278, 30.6212, 0.23", "61.5161, 117.094, 30.8769, 0.68", "61.7565, 118.628, 31.3948, 0.23", "61.8707, 119.377, 31.6685, 0.91", "62.093, 120.678, 32.2098, 0.23", "62.3788, 122.021, 32.8593, 0.91", "62.7654, 123.425, 33.6602, 0.23", "62.9726, 124.008, 34.0212, 1.14", "63.4451, 125.012, 34.681, 0.23", "64.1003, 126.295, 35.5426, 0.23", "64.4386, 126.907, 35.9568, 1.14", "64.9103, 127.754, 36.5424, 0.23", "65.3393, 128.638, 37.0731, 0.68", "65.6769, 129.608, 37.5498, 0.23", "65.8554, 130.436, 37.8839, 0.23", "66.0539, 131.659, 38.2801, 1.59", "66.2902, 133.391, 38.8051, 0.23", "66.4548, 134.823, 39.2031, 0.91", "66.6095, 136.467, 39.6514, 0.23", "66.707, 137.411, 39.9059, 1.59", "66.9637, 139.141, 40.3697, 0.23", "67.042, 139.505, 40.4603, 0.91", "67.2515, 140.119, 40.6263, 0.91", "68.1733, 141.841, 41.1826, 0.23", "69.0526, 143.081, 41.6177, 0.91", "69.3612, 143.46, 41.7526, 0.91", "70.2786, 144.475, 42.1151, 0.23", "71.5191, 145.733, 42.4583, 0.68", "72.5941, 146.714, 42.6475, 0.23", "73.4209, 147.405, 42.722, 1.14", "73.8357, 147.761, 42.738, 1.14", "74.8748, 148.696, 42.7541, 0.23", "76.3786, 150.068, 42.7357, 0.23", "77.5068, 151.041, 42.6849, 0.68", "78.7885, 151.998, 42.6092, 0.91", "80.3545, 152.981, 42.5061, 0.23", "81.0521, 153.395, 42.4586, 0.91", "81.9612, 153.891, 42.3952, 0.23", "82.8153, 154.306, 42.3739, 0.91", "84.575, 155.018, 42.3, 0.23", "85.8998, 155.368, 42.2117, 0.23" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "15.2145, 14.5795, 8.08279, 0.68", "15.5158, 15.3438, 8.40815, 0.68", "15.8809, 16.4708, 8.80208, 1.36", "16.1461, 17.3278, 9.09307, 1.36", "16.5842, 18.5708, 9.48539, 0.68", "17.183, 20.047, 9.97729, 0.68", "17.7565, 21.3705, 10.4448, 1.14", "18.6382, 23.2184, 11.1521, 1.14", "19.1364, 24.2285, 11.5939, 1.14", "19.952, 25.9245, 12.4146, 0.45", "20.4541, 27.0103, 12.9938, 0.45", "21.1105, 28.3036, 13.7636, 1.14", "21.6509, 29.2732, 14.4344, 0.91", "22.1181, 30.1744, 15.1287, 0.91", "22.4649, 31.2557, 15.9442, 0.45", "22.6273, 32.4223, 16.8013, 0.45", "22.7198, 33.885, 17.7792, 0.45", "22.7826, 34.5681, 18.2325, 0.45", "22.9356, 36.1341, 19.2696, 0.91", "23.1241, 37.8384, 20.5019, 0.68", "23.1818, 38.4628, 20.9788, 0.68", "23.234, 39.8919, 22.0288, 1.36", "23.3308, 41.1395, 22.9038, 0.45", "23.5146, 42.5584, 23.9215, 0.91", "23.7878, 43.9644, 24.9265, 0.45", "24.1624, 45.5484, 26.0388, 0.91", "24.5298, 47.1044, 27.1042, 1.14", "25.0206, 49.3905, 28.619, 0.45", "25.4121, 51.2002, 29.779, 0.45", "25.6996, 52.2837, 30.4603, 1.59", "26.059, 53.5673, 31.3012, 0.23", "26.5302, 55.3809, 32.585, 1.36", "26.907, 57.0358, 33.793, 0.23", "27.1618, 58.5752, 34.872, 0.23", "27.335, 59.6198, 35.5806, 1.36", "27.6634, 61.7962, 37.0712, 0.23", "27.858, 63.1523, 37.9837, 1.14", "27.9601, 63.9459, 38.5088, 0.23", "28.1384, 65.1256, 39.3056, 0.91", "28.3351, 66.5062, 40.2219, 0.23", "28.4652, 67.6061, 40.9248, 1.82", "28.607, 69.0764, 41.7955, 0.23", "28.7143, 70.5441, 42.6823, 1.14", "28.8198, 71.8796, 43.5602, 0.23", "28.8977, 72.8672, 44.2285, 0.23", "28.9954, 74.7829, 45.4745, 0.91", "29.0359, 75.7006, 46.0734, 0.91", "29.1189, 77.2737, 47.0294, 0.23", "29.2667, 78.6995, 47.8166, 1.14", "29.3871, 79.5671, 48.2196, 1.14", "29.6308, 80.6431, 48.6741, 0.23", "29.8623, 81.3882, 48.9395, 1.14", "30.1758, 82.3038, 49.2375, 1.14", "30.7817, 84.1399, 49.7393, 0.23", "31.1619, 85.4731, 50.0696, 0.23", "31.4878, 86.7894, 50.4329, 1.14", "31.6726, 87.6322, 50.6954, 1.14", "31.9791, 89.1046, 51.1783, 0.23", "32.1005, 89.7811, 51.4288, 0.23", "32.2551, 90.8616, 51.9154, 0.23", "32.4872, 92.4153, 52.8116, 1.36", "32.7463, 93.8566, 53.716, 0.23", "33.025, 94.9339, 54.4557, 0.68", "33.3078, 95.6298, 54.9822, 0.23", "34.1144, 97.0709, 56.1872, 1.14", "34.8059, 98.0587, 57.0983, 0.23", "35.5815, 99.0043, 57.9891, 1.14", "36.4888, 100.005, 58.9441, 0.23", "37.6394, 101.139, 60.0364, 1.14", "38.4367, 101.872, 60.6911, 0.23", "39.3119, 102.671, 61.3188, 1.14", "40.1286, 103.519, 61.9211, 0.23", "40.4489, 103.944, 62.2155, 0.23", "40.8324, 104.836, 62.7356, 0.23", "40.988, 105.457, 63.0269, 0.91", "41.1079, 106.1, 63.3064, 0.91", "41.2614, 107.215, 63.7625, 0.91", "41.364, 108.834, 64.4091, 1.59", "41.3779, 110.791, 65.1381, 0.23", "41.3586, 112.111, 65.6016, 1.36", "41.3966, 113.773, 66.0789, 0.23", "41.4407, 114.46, 66.219, 0.23", "41.5973, 115.751, 66.3604, 1.14", "41.843, 117.154, 66.3839, 0.23", "42.063, 118.278, 66.3056, 1.14", "42.6012, 120.698, 66.0276, 0.23", "42.8771, 121.832, 65.8582, 0.91", "43.3715, 123.639, 65.5863, 0.23", "43.723, 124.831, 65.4057, 1.14", "43.9698, 125.807, 65.2758, 1.14", "44.245, 127.384, 65.1278, 0.23", "44.384, 128.561, 65.1071, 0.91", "44.4648, 129.35, 65.1584, 0.91", "44.5652, 130.575, 65.3077, 0.23", "44.6648, 132.153, 65.5828, 0.23", "44.7194, 133.077, 65.7635, 0.23", "44.8247, 134.667, 66.1027, 0.91", "45.0641, 136.702, 66.5562, 0.23", "45.246, 137.842, 66.8126, 0.68", "45.5154, 139.204, 67.1224, 0.91", "45.8087, 140.449, 67.3774, 0.23", "45.9632, 141.218, 67.5293, 0.68", "46.1555, 142.513, 67.7641, 0.23", "46.3031, 143.725, 67.9743, 0.68", "46.3928, 144.439, 68.1149, 0.23", "46.7079, 146.621, 68.5777, 0.91", "46.9117, 147.97, 68.8731, 0.23", "47.0725, 149.125, 69.1229, 0.91", "47.2355, 150.422, 69.4056, 0.23", "47.491, 151.972, 69.729, 1.14", "47.7144, 153.106, 69.9724, 0.23", "48.0482, 154.636, 70.2986, 1.14", "48.5063, 156.664, 70.7031, 0.23", "48.8722, 158.546, 71.0852, 0.45", "49.2474, 160.59, 71.4894, 0.91", "49.5317, 162.36, 71.8578, 0.23", "49.6934, 163.552, 72.118, 0.91", "49.9905, 165.868, 72.6511, 0.23", "50.2294, 167.53, 73.0503, 1.14" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "11.075, -27.4219, 6.67832, 1.59", "13.2345, -29.0161, 7.45297, 1.59", "15.7683, -30.8866, 8.36187, 1.59" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "11.075, -27.4219, 6.67832, 0.23", "9.05517, -28.0939, 6.77481, 0.23", "7.95078, -28.5285, 6.72693, 0.91", "6.78613, -29.0699, 6.56184, 0.23", "5.75908, -29.6102, 6.32253, 0.68", "4.76078, -30.2317, 6.02083, 0.68", "4.05149, -30.747, 5.75693, 0.68", "3.22417, -31.5664, 5.26806, 0.23", "2.57228, -32.3313, 4.75837, 0.68", "2.10707, -32.9402, 4.3105, 0.23", "1.45324, -33.8826, 3.58914, 0.68", "0.895002, -34.7058, 2.92588, 0.23", "0.645393, -35.1093, 2.60302, 0.91", "-0.00553806, -36.3093, 1.67361, 0.23", "-0.377125, -37.0507, 1.09826, 0.91", "-0.787449, -37.9629, 0.390208, 0.23", "-1.08729, -38.7316, -0.207232, 0.91", "-1.44397, -39.7323, -0.971449, 0.23", "-2.01489, -41.3818, -2.18053, 0.91", "-2.62313, -43.3116, -3.49856, 0.23", "-3.05046, -44.7215, -4.40221, 0.23", "-3.41461, -45.9923, -5.15352, 0.91", "-4.00007, -48.1935, -6.35853, 0.45", "-4.46093, -49.963, -7.2534, 0.45", "-4.71137, -51.0695, -7.73287, 0.45", "-4.93428, -52.2505, -8.17268, 0.91", "-5.13877, -53.6198, -8.63974, 0.45", "-5.30402, -55.1954, -9.12872, 0.23", "-5.33433, -55.9219, -9.33396, 0.68", "-5.40347, -58.3299, -10.0438, 0.45", "-5.54797, -60.3743, -10.7329, 0.45", "-5.66591, -61.501, -11.1449, 0.45", "-5.76645, -62.4071, -11.4879, 0.45", "-5.98591, -64.5023, -12.2799, 0.68", "-6.11946, -66.3084, -12.9531, 0.45", "-6.16231, -68.2169, -13.6298, 0.45", "-6.13087, -69.8938, -14.1805, 0.23", "-6.03704, -72.2771, -14.9327, 0.45", "-5.86432, -74.9668, -15.7515, 0.23", "-5.70374, -76.5474, -16.1996, 0.23", "-5.4668, -78.221, -16.6565, 0.68", "-5.01938, -80.6595, -17.3256, 0.45", "-4.60103, -82.904, -17.9914, 0.68", "-4.41604, -84.1102, -18.3769, 0.68", "-4.33804, -84.8195, -18.6227, 0.68", "-4.16063, -87.5589, -19.6313, 0.23", "-4.07005, -89.6624, -20.4436, 0.45", "-3.97992, -91.3289, -21.0979, 0.45", "-3.91069, -92.5032, -21.565, 0.45", "-3.84616, -93.8015, -22.1033, 0.23", "-3.84021, -95.88, -22.9717, 0.23", "-6.64769, -103.591, -25.2757, 0.23", "-9.07002, -111.434, -27.575, 0.23", "-12.4902, -118.854, -30.0019, 0.23", "-16.6161, -125.522, -33.3448, 0.23", "-21.9859, -131.765, -35.5478, 0.23", "-26.0448, -138.409, -39.0178, 0.23", "-30.1259, -144.553, -43.2892, 0.23", "-34.5547, -149.693, -48.4493, 0.23", "-38.7577, -155.013, -53.6151, 0.23", "-43.0456, -160.944, -57.9852, 0.23", "-46.4158, -166.451, -63.55, 0.23", "-49.1917, -171.865, -69.5203, 0.23", "-51.208, -176.97, -76.0419, 0.23" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-41.183, 27.0594, 16.8136, 0.68", "-39.6559, 29.0112, 16.6692, 0.68", "-37.7188, 31.4869, 16.486, 0.23", "-36.7445, 32.7323, 16.3939, 0.23", "-35.3338, 34.5353, 16.2605, 0.23", "-34.0698, 36.1508, 16.1409, 0.68" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-41.183, 27.0594, 16.8136, 0.68", "-41.8529, 27.687, 16.7789, 0.68", "-43.4214, 29.1113, 16.695, 0.45", "-43.9989, 29.5773, 16.679, 0.45", "-44.6667, 30.0819, 16.6739, 1.36", "-45.4378, 30.6592, 16.6768, 0.23", "-45.806, 30.9468, 16.6811, 0.23", "-46.8815, 31.8099, 16.7354, 1.14", "-47.7646, 32.4935, 16.8144, 0.23", "-48.8217, 33.2113, 16.9411, 1.14", "-49.8015, 33.7821, 17.101, 0.45", "-50.7031, 34.2443, 17.2914, 1.14", "-51.6161, 34.6662, 17.5205, 0.23", "-52.4059, 34.999, 17.7532, 0.68", "-53.5137, 35.4173, 18.0784, 0.68", "-54.3679, 35.6715, 18.302, 0.23", "-55.2978, 35.9024, 18.503, 0.23", "-56.1625, 36.0945, 18.6528, 0.91", "-56.7909, 36.2363, 18.7193, 0.23", "-58.0489, 36.5488, 18.7781, 1.36", "-59.3396, 36.8889, 18.7827, 0.23", "-60.5658, 37.2088, 18.7411, 0.23", "-61.1798, 37.3764, 18.6954, 0.68", "-62.224, 37.7073, 18.5923, 1.36", "-63.0308, 38.0335, 18.496, 0.23", "-63.4881, 38.2696, 18.4492, 0.23", "-63.9752, 38.6175, 18.408, 0.91", "-64.73, 39.2571, 18.3755, 0.91", "-65.3561, 39.8334, 18.3771, 1.36", "-66.2704, 40.7012, 18.4645, 0.23", "-66.9362, 41.3421, 18.5582, 1.14", "-67.8656, 42.2901, 18.714, 0.23", "-68.6735, 43.1532, 18.8643, 0.91", "-69.0155, 43.534, 18.9351, 0.91", "-69.7805, 44.3612, 19.104, 0.23", "-70.0981, 44.6865, 19.1858, 0.23", "-70.9941, 45.5733, 19.4348, 1.14", "-71.3909, 45.9657, 19.5405, 0.23", "-72.0234, 46.6014, 19.72, 0.23", "-72.7016, 47.2263, 19.925, 0.91", "-73.835, 48.1392, 20.2649, 0.23", "-74.7164, 48.7357, 20.5485, 0.23", "-75.7123, 49.3159, 20.8777, 0.91", "-76.5421, 49.7613, 21.1453, 0.23", "-77.2994, 50.1241, 21.3701, 0.68", "-78.1631, 50.5214, 21.5974, 0.23", "-78.9051, 50.8363, 21.7616, 1.14", "-80.1923, 51.3618, 22.0152, 0.23", "-80.823, 51.6179, 22.126, 0.68", "-81.8378, 52.0817, 22.2661, 0.23", "-82.43, 52.3963, 22.3326, 0.23", "-83.3659, 52.9508, 22.4185, 0.23", "-84.2051, 53.4956, 22.4952, 1.59", "-85.1804, 54.1659, 22.5821, 0.45", "-85.8911, 54.7063, 22.6344, 0.45", "-86.2574, 55.0167, 22.6509, 0.45", "-87.3954, 56.0855, 22.6687, 0.68", "-88.2828, 57.0419, 22.6389, 1.14", "-89.1131, 57.9824, 22.5642, 0.23", "-89.837, 58.8548, 22.4491, 0.23", "-90.3169, 59.4731, 22.3402, 0.23", "-90.9416, 60.3689, 22.1576, 0.91", "-91.5073, 61.2865, 21.932, 0.23", "-91.8857, 61.9285, 21.7583, 0.91", "-92.5026, 63.0003, 21.4919, 0.23", "-93.1042, 63.9914, 21.2721, 1.36", "-93.6189, 64.7624, 21.1209, 0.91", "-94.2928, 65.7167, 20.9435, 0.23", "-94.7382, 66.3678, 20.8222, 0.91", "-95.1997, 67.1078, 20.6828, 0.23", "-95.3959, 67.4431, 20.6102, 1.14", "-95.7442, 68.1033, 20.428, 1.14", "-96.1369, 68.9141, 20.1613, 0.23", "-96.4374, 69.6713, 19.903, 0.23", "-96.5038, 69.8479, 19.8416, 0.91", "-96.7951, 70.5378, 19.6107, 0.91", "-97.0595, 71.085, 19.4449, 0.91", "-97.6884, 72.1307, 19.1837, 0.23", "-98.0152, 72.5838, 19.092, 0.23", "-98.4781, 73.1285, 19.0034, 0.91", "-99.2794, 74.0143, 18.8847, 0.23", "-99.8307, 74.5724, 18.828, 0.91", "-100.747, 75.447, 18.7684, 0.23", "-100.992, 75.6693, 18.7574, 0.91", "-101.635, 76.2694, 18.7124, 0.91", "-102.095, 76.7349, 18.6642, 0.45", "-102.59, 77.3143, 18.5769, 0.23", "-103.231, 78.197, 18.404, 0.23", "-103.556, 78.6833, 18.2975, 0.68", "-104.047, 79.4414, 18.1246, 0.23", "-104.658, 80.4954, 17.8564, 0.23", "-105.172, 81.4274, 17.59, 0.68", "-105.477, 82.1023, 17.3734, 0.68" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "120.522, 144.074, 0.670082, 0.23", "126.403, 151.885, -3.38505, 0.23", "130.144, 161.006, -7.23773, 0.23", "136.691, 168.653, -10.5101, 0.23", "143.321, 174.595, -16.2341, 0.23" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "120.522, 144.074, 0.670082, 0.23", "125.991, 152.248, 5.27072, 0.23", "132.281, 160.465, 8.55489, 0.23", "140.014, 166.968, 12.5313, 0.23", "148.774, 171.062, 17.4677, 0.23", "158.373, 174.261, 21.4074, 0.23", "167.5, 177.287, 26.4484, 0.23", "177.825, 178.916, 29.3864, 0.23", "188.416, 178.985, 31.7765, 0.23", "198.77, 180.312, 34.7632, 0.23" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "84.0308, 266.225, 86.0844, 0.23", "84.014, 268.904, 84.7889, 0.23" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "84.0308, 266.225, 86.0844, 0.23", "82.4399, 264.911, 87.5245, 0.23", "81.6457, 264.313, 88.2748, 0.23", "80.9536, 263.857, 89.0069, 0.23", "79.2566, 262.795, 90.9317, 0.23", "78.5983, 262.408, 91.6571, 1.14", "77.3346, 261.706, 92.9671, 0.68", "76.5999, 261.281, 93.6852, 0.23", "75.2912, 260.477, 95.0178, 1.14", "73.7165, 259.44, 96.6394, 0.23", "72.7188, 258.765, 97.6823, 0.23", "71.5367, 257.965, 98.8463, 0.45", "70.6967, 257.44, 99.6124, 0.23", "70.1755, 257.148, 100.075, 0.68", "68.4214, 256.357, 101.51, 0.23", "67.0652, 255.851, 102.611, 0.23", "65.8406, 255.5, 103.662, 0.91", "64.5413, 255.351, 104.776, 0.23", "63.6503, 255.435, 105.477, 0.23", "62.4057, 255.838, 106.447, 0.68" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "50.2294, 167.53, 73.0503, 0.23", "49.7625, 171.011, 75.7895, 0.23", "49.4226, 173.545, 77.7836, 1.14", "49.0721, 176.157, 79.8399, 0.23", "48.7542, 178.527, 81.7047, 0.68", "48.4231, 180.995, 83.6471, 0.23", "48.0752, 183.588, 85.6882, 0.45" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "50.2294, 167.53, 73.0503, 0.23", "49.5847, 169.418, 73.4361, 0.23", "49.0738, 170.719, 73.7138, 0.23", "48.4011, 172.331, 74.069, 0.91", "47.9902, 173.251, 74.2779, 0.91", "47.352, 174.602, 74.5916, 0.23", "46.5633, 176.258, 74.9776, 0.91", "45.8781, 177.697, 75.2896, 0.23", "45.5699, 178.412, 75.4159, 0.23", "45.106, 179.477, 75.5753, 1.14", "44.4659, 180.975, 75.7638, 0.23", "43.9695, 182.12, 75.8722, 0.23", "43.3646, 183.61, 75.9744, 0.68", "42.8064, 185.127, 76.0572, 0.23", "42.4824, 186.035, 76.1071, 0.23", "42.1923, 186.852, 76.1573, 0.23", "41.6323, 188.519, 76.241, 1.14", "41.1447, 189.974, 76.3213, 0.23", "40.519, 191.889, 76.4579, 0.23", "40.166, 193.12, 76.5455, 0.23", "40.0072, 193.971, 76.5911, 0.91", "39.8066, 196.472, 76.6931, 0.23", "39.857, 197.5, 76.7206, 1.14", "40.1048, 198.745, 76.7287, 1.14", "40.6745, 200.397, 76.7221, 0.23", "41.4493, 202.116, 76.715, 0.91", "42.2008, 203.548, 76.7037, 0.23", "42.9237, 204.788, 76.703, 0.23", "44.0849, 206.661, 76.6841, 0.45", "45.0385, 208.217, 76.6738, 0.45", "45.9019, 209.702, 76.6794, 0.23", "46.3393, 210.539, 76.691, 0.45", "46.9317, 211.812, 76.7474, 0.23", "47.1588, 212.436, 76.7975, 0.91", "47.9178, 215.344, 77.1826, 0.23", "48.1042, 216.281, 77.3435, 0.23", "48.3642, 217.941, 77.676, 0.91", "48.5676, 219.641, 78.0544, 0.23", "48.7499, 221.526, 78.4864, 0.91", "48.9093, 223.613, 78.9694, 0.23", "48.9565, 224.983, 79.2953, 1.14", "48.9542, 226.869, 79.7343, 0.23", "48.9295, 227.608, 79.8822, 0.68", "48.7579, 229.197, 80.1137, 0.91", "48.6118, 230.28, 80.2251, 0.23", "48.3787, 231.355, 80.2952, 0.23", "47.9829, 232.625, 80.3777, 1.14", "47.5164, 233.769, 80.4628, 0.23", "46.4372, 236.161, 80.6656, 0.23", "46.1202, 236.882, 80.7194, 0.23", "45.7232, 237.892, 80.7642, 0.91", "45.1949, 239.586, 80.7006, 0.23", "44.7916, 241.03, 80.6294, 0.23", "44.6145, 241.772, 80.5913, 0.23", "44.2898, 243.758, 80.4094, 0.91", "43.9607, 245.715, 80.151, 0.23", "43.7309, 247.726, 79.7204, 0.23" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "15.7683, -30.8866, 8.36187, 0.91", "16.9402, -32.3716, 8.4019, 0.91", "17.7136, -33.405, 8.46982, 0.91", "18.501, -34.4752, 8.56259, 0.91", "20.0209, -36.5922, 8.75182, 0.91", "21.1676, -38.1169, 8.95483, 0.91", "22.713, -40.0718, 9.28395, 0.91", "23.7477, -41.2857, 9.49568, 0.91", "24.7166, -42.3389, 9.69225, 0.91", "26.3735, -44.0972, 10.0054, 1.14", "28.8964, -46.8159, 10.4102, 0.68", "30.9411, -48.9804, 10.6668, 0.68", "33.3492, -51.5064, 10.8793, 0.68", "34.8136, -53.0449, 10.9723, 1.14", "36.4066, -54.7578, 11.0399, 0.68", "37.7186, -56.2556, 11.038, 0.68", "38.2396, -56.9362, 10.9888, 1.14", "39.6974, -59.2229, 10.725, 0.68", "40.6742, -61.0715, 10.51, 0.68", "41.1783, -62.0062, 10.4017, 0.68", "41.916, -63.2415, 10.2855, 0.68", "42.94, -64.8781, 10.1906, 1.14", "44.6521, -67.5727, 10.0606, 0.68", "46.0688, -69.829, 9.99406, 0.68", "47.4617, -71.9044, 10.0432, 0.68", "49.1967, -74.1443, 10.2787, 1.14", "50.2845, -75.3293, 10.5114, 0.45", "51.3611, -76.3377, 10.7764, 1.14", "52.6073, -77.3433, 11.0619, 0.45", "54.3153, -78.6125, 11.358, 0.45", "56.2735, -80.0559, 11.6051, 0.45", "58.2841, -81.5082, 11.7513, 0.45", "60.1232, -82.826, 11.8073, 0.45", "62.6879, -84.761, 11.8316, 0.68", "64.4165, -86.2297, 11.8228, 0.68", "65.9445, -87.7783, 11.8493, 0.68", "67.4828, -89.5713, 11.9288, 0.68", "68.2737, -90.631, 11.9985, 0.68", "69.4939, -92.5564, 12.1419, 0.91", "70.7103, -94.9449, 12.2646, 0.45", "71.9208, -97.8032, 12.2978, 0.68", "72.3337, -98.8648, 12.2524, 0.68", "73.0035, -100.698, 12.0709, 0.68", "73.661, -102.552, 11.7823, 0.68", "74.5453, -104.975, 11.2359, 0.68", "75.2076, -106.708, 10.7479, 0.68", "75.9477, -108.666, 10.1302, 0.68", "76.4568, -110.017, 9.7167, 0.68", "77.068, -111.544, 9.25624, 0.91", "77.8497, -113.352, 8.73039, 0.68", "78.3324, -114.398, 8.41617, 0.23", "78.6459, -115.116, 8.19507, 0.23", "78.9969, -116.006, 7.92968, 0.23", "79.6018, -117.594, 7.47258, 0.45", "80.194, -119.172, 7.04923, 0.45", "80.9948, -121.291, 6.51647, 0.45", "81.6189, -122.898, 6.13194, 0.91", "82.5395, -125.223, 5.59969, 0.68", "83.0498, -126.596, 5.28883, 0.68", "83.6826, -128.638, 4.80716, 0.23", "83.8732, -129.482, 4.59359, 0.23", "83.9671, -130.106, 4.42674, 0.23", "84.0927, -131.666, 3.944, 0.23", "84.073, -133.993, 3.06728, 0.45", "83.8867, -135.987, 2.1838, 0.45", "83.4856, -138.343, 0.984292, 0.45", "83.2986, -139.205, 0.507765, 0.23", "82.9602, -140.492, -0.232774, 0.23", "82.5804, -141.732, -0.980755, 0.45", "82.0115, -143.426, -2.04634, 0.23", "81.2314, -146.016, -3.66451, 0.45", "80.792, -147.707, -4.66702, 0.68", "80.4596, -149.293, -5.52422, 0.23", "80.3237, -150.266, -5.98732, 0.23", "80.2564, -151.303, -6.39576, 0.68", "80.3138, -153.441, -7.10015, 0.23", "80.5182, -155.071, -7.54987, 0.23", "80.7918, -156.469, -7.91343, 0.68", "81.1662, -158.077, -8.34304, 0.23", "81.6737, -160.284, -8.87488, 0.23", "82.0926, -162.321, -9.32596, 0.68", "82.3913, -163.959, -9.70464, 0.45", "82.6783, -165.741, -10.1769, 0.68", "82.9197, -167.673, -10.7547, 0.45", "83.0334, -169.26, -11.2897, 0.23", "83.0346, -170.173, -11.6335, 0.23", "82.9913, -171.608, -12.1841, 0.45", "82.9172, -173.861, -12.9852, 0.45", "82.8752, -176.144, -13.7242, 0.45", "82.8662, -178.62, -14.4867, 0.45", "82.8861, -180.895, -15.2123, 0.45", "82.9384, -182.324, -15.6592, 0.45", "83.0479, -184.306, -16.2808, 0.45", "83.2584, -186.592, -17.0395, 0.45", "83.5732, -189.361, -18.0108, 0.91", "83.8174, -191.112, -18.6208, 0.45", "84.0326, -192.487, -19.0803, 0.68", "84.4517, -195.021, -19.8885, 0.45", "84.7007, -196.473, -20.3326, 0.45", "85.0103, -198.196, -20.7981, 1.14", "85.4039, -200.419, -21.3201, 0.23", "85.6923, -202.245, -21.6916, 0.23", "85.89, -203.778, -21.9829, 0.23", "86.125, -205.528, -22.2799, 0.45", "86.3506, -207.057, -22.5933, 0.68", "86.5385, -208.205, -22.9154, 0.45", "86.7221, -209.238, -23.287, 0.68", "86.893, -210.036, -23.5916, 0.68", "87.1356, -211.007, -23.9577, 0.68", "87.6138, -212.863, -24.5832, 0.45", "88.1427, -214.871, -25.1802, 0.45", "88.496, -216.25, -25.5338, 0.45", "88.9378, -218.13, -25.9822, 0.91", "89.3458, -220.027, -26.409, 0.23", "89.7324, -222.097, -26.8594, 0.68", "89.8771, -222.932, -27.0337, 0.68", "90.172, -224.811, -27.4777, 0.23", "90.3339, -226.5, -28.01, 0.68", "90.3482, -227.648, -28.5676, 0.23", "90.329, -228.102, -28.8695, 0.68", "90.2995, -229.035, -29.6138, 0.23", "90.2763, -230.273, -30.6833, 0.68", "90.3281, -231.777, -32.0168, 0.23", "90.4912, -233.233, -33.2097, 0.68", "90.821, -234.862, -34.4157, 0.23", "91.1847, -235.919, -35.0673, 0.45", "91.925, -237.391, -35.7531, 0.45", "92.7192, -238.626, -36.1626, 0.45", "93.814, -240.163, -36.5258, 0.45", "94.4357, -240.983, -36.6623, 0.91", "95.7385, -242.597, -36.9101, 0.23", "97.0062, -244.2, -37.1828, 0.68", "98.4061, -246.08, -37.5676, 0.45", "99.4401, -247.648, -37.975, 0.45", "100.084, -248.844, -38.3192, 0.23", "100.54, -249.961, -38.6605, 0.68", "100.873, -251.304, -39.0969, 0.23", "100.997, -252.57, -39.5122, 0.23", "100.97, -254.029, -39.9851, 0.23", "100.727, -256.022, -40.6143, 0.23", "100.385, -257.423, -41.0002, 0.23", "99.7084, -259.15, -41.338, 0.23", "99.0578, -260.619, -41.5642, 0.23", "98.5519, -261.607, -41.6682, 0.23", "98.0162, -262.412, -41.7246, 0.68", "96.7494, -263.792, -41.7463, 0.23", "95.0141, -265.18, -41.598, 0.23" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "15.7683, -30.8866, 8.36187, 0.45", "16.038, -32.1448, 6.87868, 0.45", "16.2202, -33.689, 5.18996, 0.45", "16.2895, -34.791, 4.15412, 0.45", "16.3568, -35.5881, 3.56108, 0.45", "16.4666, -36.9089, 2.76574, 0.45", "16.5939, -38.2091, 2.12407, 0.91", "16.6773, -39.2265, 1.7488, 0.68", "16.7906, -40.881, 1.25877, 1.36", "17.1373, -43.6836, 0.583311, 1.14", "17.575, -45.911, 0.134901, 0.45", "18.1813, -48.3893, -0.288831, 0.91", "18.6158, -50.0709, -0.550331, 0.45", "19.3437, -52.925, -0.952896, 0.68", "20.0652, -55.5824, -1.29384, 0.68", "20.7104, -57.7808, -1.53891, 0.68", "21.3896, -59.9631, -1.75206, 0.68", "22.2238, -62.7543, -1.98468, 0.68", "22.8172, -64.9605, -2.14159, 0.68", "23.6632, -68.4549, -2.40738, 0.45", "24.0017, -70.01, -2.54437, 0.45", "24.46, -71.9656, -2.72923, 0.68", "24.8546, -73.4232, -2.87831, 0.23", "25.5162, -75.4919, -3.11296, 0.91", "26.3366, -77.7961, -3.39308, 0.23", "26.971, -79.4424, -3.61292, 0.68", "28.1027, -82.2084, -3.99326, 0.91", "29.6876, -85.8311, -4.556, 0.91", "30.758, -88.159, -4.9641, 0.91", "31.447, -89.6836, -5.21709, 0.23", "32.0962, -91.3393, -5.4671, 0.68", "32.5493, -92.6939, -5.66731, 0.68", "33.0838, -94.5017, -5.90739, 0.23", "33.5994, -96.2037, -6.08373, 0.68", "34.4105, -98.8452, -6.34036, 0.68", "35.1332, -101.326, -6.58059, 0.68", "35.5347, -102.709, -6.69977, 0.68", "35.9554, -104.085, -6.8217, 0.68", "36.7113, -106.444, -7.06072, 0.68", "37.5538, -109.088, -7.42102, 0.68", "38.4355, -111.973, -7.96791, 0.68", "39.135, -114.382, -8.46363, 0.23", "39.4687, -115.654, -8.72895, 1.14", "39.8699, -117.477, -9.13564, 0.23", "40.0546, -118.598, -9.40005, 0.68", "40.4702, -121.393, -10.0314, 0.23", "40.6427, -122.584, -10.3025, 0.23", "40.8223, -124.254, -10.723, 0.23", "40.9536, -126.409, -11.2815, 0.68", "41.0499, -128.934, -11.9469, 0.68", "41.1334, -130.86, -12.4843, 0.23", "41.1717, -132.277, -12.9036, 0.91", "41.1245, -134.922, -13.7643, 0.91", "40.9137, -137.592, -14.6181, 0.23", "40.7668, -139.243, -15.0862, 0.68", "40.6249, -140.748, -15.4718, 0.23", "40.463, -142.521, -15.8651, 0.68", "40.2701, -145.195, -16.3365, 0.91", "40.1054, -147.973, -16.7119, 0.45", "39.9642, -151.017, -17.1409, 0.45", "39.8421, -152.995, -17.4551, 0.45", "39.7274, -154.99, -17.7831, 0.68", "39.6501, -158.989, -18.4367, 0.45", "39.6803, -161.6, -18.8966, 0.45", "39.7518, -164.904, -19.6078, 0.45", "39.7649, -167.017, -20.1263, 0.45", "39.794, -168.206, -20.4345, 0.23", "39.871, -170.08, -20.9445, 0.23", "40.0016, -171.681, -21.3677, 0.68", "40.1749, -173.403, -21.7816, 0.23", "40.2408, -174.506, -22.0201, 0.23", "40.2649, -176.466, -22.4181, 0.23", "40.2026, -178.264, -22.7693, 0.23", "40.1431, -180.555, -23.1641, 0.23", "40.1288, -181.788, -23.3663, 0.45", "40.1139, -184.591, -23.8347, 0.23", "40.0647, -187.154, -24.2966, 0.68", "39.9571, -191.082, -25.0442, 0.23", "39.8593, -193.917, -25.6234, 0.23", "39.796, -195.446, -25.9555, 0.23", "39.782, -196.918, -26.2455, 0.23", "39.8325, -199.201, -26.6915, 0.45", "39.8163, -200.072, -26.8837, 0.68", "39.6235, -201.495, -27.2505, 0.23", "39.4078, -202.298, -27.4711, 0.23", "38.9828, -203.901, -27.7913, 0.23", "41.7865, -213.246, -29.8737, 0.23", "44.638, -222.683, -31.3999, 0.23", "47.4704, -232.248, -31.4071, 0.23", "50.6156, -241.703, -30.9321, 0.23", "52.3065, -251.468, -29.7964, 0.23", "54.0685, -261.259, -30.542, 0.23" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-105.477, 82.1023, 17.3734, 0.45", "-107.577, 83.9798, 17.2967, 0.45", "-108.802, 84.9768, 17.2421, 0.68", "-111.121, 86.7047, 17.1596, 0.45", "-113.173, 88.1463, 17.0216, 0.23", "-115.317, 89.5343, 16.8579, 0.68", "-117.66, 90.9261, 16.6772, 0.23", "-119.328, 91.7785, 16.5545, 0.23", "-121.419, 92.7408, 16.3999, 0.45", "-123.913, 93.7997, 16.1651, 0.23", "-125.81, 94.5919, 15.9682, 0.23", "-128.393, 95.6639, 15.6602, 0.91" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-105.477, 82.1023, 17.3734, 0.23", "-104.05, 83.3277, 17.9673, 0.23", "-103.333, 84.0949, 18.276, 0.91", "-102.321, 85.5484, 18.7414, 0.68", "-100.835, 87.6818, 19.4245, 0.23", "-100.129, 88.6945, 19.7488, 0.68", "-98.0239, 91.7177, 20.7168, 0.23", "-96.5593, 94.1475, 21.3248, 0.23", "-95.0005, 97.107, 21.931, 0.23" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "84.014, 268.904, 84.7889, 0.23", "85.253, 270.252, 85.0506, 0.23", "86.4968, 271.605, 85.3134, 0.23", "87.4373, 272.628, 85.512, 0.23", "88.305, 273.572, 85.6953, 0.23", "89.3755, 274.737, 85.9214, 0.23", "91.1251, 276.64, 86.291, 0.23" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "84.014, 268.904, 84.7889, 0.23", "83.3564, 269.654, 84.7484, 0.23", "82.8011, 270.347, 84.7305, 0.68", "81.9499, 271.5, 84.7143, 0.23", "81.4369, 272.275, 84.7066, 0.91", "80.4577, 273.865, 84.6936, 0.45", "79.44, 275.662, 84.689, 0.23", "79.1024, 276.397, 84.6831, 0.23", "78.6229, 277.59, 84.6343, 0.23", "78.2418, 278.786, 84.5607, 1.14", "77.9706, 279.828, 84.4841, 0.23", "77.6912, 281.201, 84.3126, 0.23", "77.4211, 282.931, 84.0577, 0.91", "77.198, 284.416, 83.8016, 0.23", "77.0075, 285.899, 83.511, 0.23", "76.8466, 287.261, 83.2041, 0.23", "76.7539, 288.407, 82.906, 0.23", "75.1193, 295.188, 82.981, 0.23" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-128.393, 95.6639, 15.6602, 0.23", "-129.711, 94.6402, 15.333, 0.23", "-130.656, 94.1127, 15.0937, 0.23", "-132.522, 93.0718, 14.6215, 0.68", "-134.176, 92.1486, 14.2027, 0.23", "-135.647, 91.328, 13.8304, 0.23", "-136.933, 90.6104, 13.5048, 0.23", "-138.361, 89.7821, 13.1064, 0.23" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-128.393, 95.6639, 15.6602, 0.23", "-129.394, 96.6431, 15.6906, 0.23", "-130.391, 97.6191, 15.721, 0.68", "-131.151, 98.3628, 15.7441, 0.91", "-132.087, 99.2789, 15.7726, 0.23" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_38", "dend_35", "dend_30", "dend_27", "dend_24", "dend_13", "dend_0", "dend_40", "dend_39", "dend_37", "dend_36", "dend_34", "dend_31", "dend_29", "dend_28", "dend_26", "dend_25", "dend_21", "dend_14", "dend_4", "dend_1", "dend_46", "dend_41", "dend_33", "dend_32", "dend_23", "dend_22", "dend_20", "dend_15", "dend_12", "dend_5", "dend_3", "dend_2", "dend_52", "dend_47", "dend_45", "dend_42", "dend_17", "dend_16", "dend_11", "dend_6", "dend_54", "dend_53", "dend_49", "dend_48", "dend_44", "dend_43", "dend_19", "dend_18", "dend_8", "dend_7", "dend_51", "dend_50", "dend_10", "dend_9" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_38", "dend_35", "dend_30", "dend_27", "dend_24", "dend_13", "dend_0", "dend_40", "dend_39", "dend_37", "dend_36", "dend_34", "dend_31", "dend_29", "dend_28", "dend_26", "dend_25", "dend_21", "dend_14", "dend_4", "dend_1", "dend_46", "dend_41", "dend_33", "dend_32", "dend_23", "dend_22", "dend_20", "dend_15", "dend_12", "dend_5", "dend_3", "dend_2", "dend_52", "dend_47", "dend_45", "dend_42", "dend_17", "dend_16", "dend_11", "dend_6", "dend_54", "dend_53", "dend_49", "dend_48", "dend_44", "dend_43", "dend_19", "dend_18", "dend_8", "dend_7", "dend_51", "dend_50", "dend_10", "dend_9" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_38", "dend_35", "dend_30", "dend_27", "dend_24", "dend_13", "dend_0", "axon_0", "dend_40", "dend_39", "dend_37", "dend_36", "dend_34", "dend_31", "dend_29", "dend_28", "dend_26", "dend_25", "dend_21", "dend_14", "dend_4", "dend_1", "axon_1", "dend_46", "dend_41", "dend_33", "dend_32", "dend_23", "dend_22", "dend_20", "dend_15", "dend_12", "dend_5", "dend_3", "dend_2", "dend_52", "dend_47", "dend_45", "dend_42", "dend_17", "dend_16", "dend_11", "dend_6", "dend_54", "dend_53", "dend_49", "dend_48", "dend_44", "dend_43", "dend_19", "dend_18", "dend_8", "dend_7", "dend_51", "dend_50", "dend_10", "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_13", "dend_13", "dend_13", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_14", "dend_14", "dend_14", "dend_14", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "axon_1", "axon_1", "dend_46", "dend_46", "dend_46", "dend_41", "dend_41", "dend_41", "dend_41", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L5_NBC_12baea0593_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_13
create dend_21
public dend_21
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_46, id: dend_46, parent: dend_40
create dend_46
public dend_46
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_4
create dend_12
public dend_12
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_52, id: dend_52, parent: dend_46
create dend_52
public dend_52
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_41
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_5
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_35, dend_30, dend_27, dend_24, dend_13, dend_0, dend_40, dend_39, dend_37, dend_36, dend_34, dend_31, dend_29, dend_28, dend_26, dend_25, dend_21, dend_14, dend_4, dend_1, dend_46, dend_41, dend_33, dend_32, dend_23, dend_22, dend_20, dend_15, dend_12, dend_5, dend_3, dend_2, dend_52, dend_47, dend_45, dend_42, dend_17, dend_16, dend_11, dend_6, dend_54, dend_53, dend_49, dend_48, dend_44, dend_43, dend_19, dend_18, dend_8, dend_7, dend_51, dend_50, dend_10, dend_9]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_35, dend_30, dend_27, dend_24, dend_13, dend_0, dend_40, dend_39, dend_37, dend_36, dend_34, dend_31, dend_29, dend_28, dend_26, dend_25, dend_21, dend_14, dend_4, dend_1, dend_46, dend_41, dend_33, dend_32, dend_23, dend_22, dend_20, dend_15, dend_12, dend_5, dend_3, dend_2, dend_52, dend_47, dend_45, dend_42, dend_17, dend_16, dend_11, dend_6, dend_54, dend_53, dend_49, dend_48, dend_44, dend_43, dend_19, dend_18, dend_8, dend_7, dend_51, dend_50, dend_10, dend_9]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_38, dend_35, dend_30, dend_27, dend_24, dend_13, dend_0, axon_0, dend_40, dend_39, dend_37, dend_36, dend_34, dend_31, dend_29, dend_28, dend_26, dend_25, dend_21, dend_14, dend_4, dend_1, axon_1, dend_46, dend_41, dend_33, dend_32, dend_23, dend_22, dend_20, dend_15, dend_12, dend_5, dend_3, dend_2, dend_52, dend_47, dend_45, dend_42, dend_17, dend_16, dend_11, dend_6, dend_54, dend_53, dend_49, dend_48, dend_44, dend_43, dend_19, dend_18, dend_8, dend_7, dend_51, dend_50, dend_10, dend_9]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_48
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, axon_0, axon_0, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_38(0), soma_0(0.4999999450176422)
    connect dend_35(0), soma_0(0.4999999450176422)
    connect dend_30(0), soma_0(0.4999999450176422)
    connect dend_27(0), soma_0(0.4999999450176422)
    connect dend_24(0), soma_0(0.4999999450176422)
    connect dend_13(0), soma_0(0.4999999450176422)
    connect dend_0(0), soma_0(0.4999999450176422)
    connect axon_0(0), soma_0(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_46(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_12(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_52(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_11(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -8.76533, -3.11148, 0.0, 3.33266 ) }
    soma_0 { pt3dadd( -7.9581, -2.82432, 0.0, 5.72456 ) }
    soma_0 { pt3dadd( -7.15087, -2.53716, 0.0, 7.79007 ) }
    soma_0 { pt3dadd( -6.34364, -2.25, 0.0, 8.98288 ) }
    soma_0 { pt3dadd( -5.53641, -1.96284, 0.0, 9.97099 ) }
    soma_0 { pt3dadd( -4.72918, -1.67568, 0.0, 10.9098 ) }
    soma_0 { pt3dadd( -3.92195, -1.38852, 0.0, 11.708 ) }
    soma_0 { pt3dadd( -3.11472, -1.10136, 0.0, 12.2471 ) }
    soma_0 { pt3dadd( -2.30749, -0.8142, 0.0, 12.5813 ) }
    soma_0 { pt3dadd( -1.50026, -0.52704, 0.0, 12.8499 ) }
    soma_0 { pt3dadd( -0.693026, -0.23988, 0.0, 13.1177 ) }
    soma_0 { pt3dadd( 0.114204, 0.0472794, 0.0, 13.2864 ) }
    soma_0 { pt3dadd( 0.921435, 0.334439, 0.0, 13.0353 ) }
    soma_0 { pt3dadd( 1.72867, 0.621599, 0.0, 12.7416 ) }
    soma_0 { pt3dadd( 2.5359, 0.908759, 0.0, 12.4079 ) }
    soma_0 { pt3dadd( 3.34313, 1.19592, 0.0, 11.9163 ) }
    soma_0 { pt3dadd( 4.15036, 1.48308, 0.0, 11.2063 ) }
    soma_0 { pt3dadd( 4.95759, 1.77024, 0.0, 9.60841 ) }
    soma_0 { pt3dadd( 5.76482, 2.0574, 0.0, 7.72848 ) }
    soma_0 { pt3dadd( 6.57205, 2.34456, 0.0, 4.99653 ) }
    soma_0 { pt3dadd( 7.37928, 2.63172, 0.0, 2.95975 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 21/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 4.77184, 3.48221, 4.52, 2.05 ) }
    dend_38 { pt3dadd( 7.23012, 4.96562, 4.52, 1.59 ) }
    dend_38 { pt3dadd( 8.70454, 5.85534, 4.52, 1.59 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 24/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -5.33816, -1.80779, -6.49, 1.14 ) }
    dend_35 { pt3dadd( -6.7534, -1.95738, -7.58826, 0.45 ) }
    dend_35 { pt3dadd( -7.77651, -1.9345, -8.31786, 0.45 ) }
    dend_35 { pt3dadd( -9.24118, -1.74419, -9.2529, 0.68 ) }
    dend_35 { pt3dadd( -10.3954, -1.5272, -9.92146, 0.68 ) }
    dend_35 { pt3dadd( -12.1267, -1.264, -10.8109, 0.68 ) }
    dend_35 { pt3dadd( -13.1177, -1.21032, -11.2853, 0.68 ) }
    dend_35 { pt3dadd( -15.5243, -1.1869, -12.4238, 0.68 ) }
    dend_35 { pt3dadd( -17.4562, -1.19075, -13.2617, 0.68 ) }
    dend_35 { pt3dadd( -19.0477, -1.16836, -13.886, 0.68 ) }
    dend_35 { pt3dadd( -20.9499, -0.984501, -14.5358, 1.14 ) }
    dend_35 { pt3dadd( -23.3056, -0.616945, -15.1895, 0.23 ) }
    dend_35 { pt3dadd( -32.8182, 1.04011, -20.8146, 0.23 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 37/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -0.18816, -3.48779, -7.25, 1.36 ) }
    dend_30 { pt3dadd( -0.910679, -6.56881, -7.21016, 1.36 ) }
    dend_30 { pt3dadd( -1.45127, -8.87406, -7.18036, 1.36 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 40/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 4.84184, -3.36779, -2.34, 2.95 ) }
    dend_27 { pt3dadd( 5.99979, -5.13822, -2.39985, 1.59 ) }
    dend_27 { pt3dadd( 7.64934, -7.66029, -2.4851, 1.59 ) }
    dend_27 { pt3dadd( 9.05449, -9.80869, -2.55772, 1.59 ) }
    dend_27 { pt3dadd( 10.6499, -12.2481, -2.64018, 1.36 ) }
    dend_27 { pt3dadd( 12.1026, -14.4691, -2.71526, 2.05 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 46/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -7.39816, -4.21779, -2.42, 1.82 ) }
    dend_24 { pt3dadd( -9.73935, -4.08343, -3.29985, 0.68 ) }
    dend_24 { pt3dadd( -12.1586, -3.93911, -4.10534, 0.45 ) }
    dend_24 { pt3dadd( -15.0377, -3.72265, -4.99333, 0.45 ) }
    dend_24 { pt3dadd( -17.2071, -3.54942, -5.60831, 0.23 ) }
    dend_24 { pt3dadd( -18.9493, -3.45393, -6.06136, 0.23 ) }
    dend_24 { pt3dadd( -20.5166, -3.40717, -6.45296, 0.23 ) }
    dend_24 { pt3dadd( -22.1795, -3.38803, -6.82126, 0.23 ) }
    dend_24 { pt3dadd( -24.5521, -3.38308, -7.26546, 0.45 ) }
    dend_24 { pt3dadd( -27.3416, -3.37588, -7.71558, 0.45 ) }
    dend_24 { pt3dadd( -29.362, -3.35077, -7.99472, 0.23 ) }
    dend_24 { pt3dadd( -30.5283, -3.31034, -8.16404, 0.23 ) }
    dend_24 { pt3dadd( -31.3455, -3.2886, -8.32284, 0.23 ) }
    dend_24 { pt3dadd( -32.8536, -3.26336, -8.66975, 0.23 ) }
    dend_24 { pt3dadd( -34.3047, -3.23548, -9.01423, 0.23 ) }
    dend_24 { pt3dadd( -35.8333, -3.1611, -9.41196, 0.23 ) }
    dend_24 { pt3dadd( -38.3889, -2.93441, -10.1312, 0.23 ) }
    dend_24 { pt3dadd( -41.0606, -2.69763, -10.9091, 0.23 ) }
    dend_24 { pt3dadd( -42.5742, -2.62369, -11.3881, 1.36 ) }
    dend_24 { pt3dadd( -50.8877, -2.99198, -13.9719, 1.36 ) }
    dend_24 { pt3dadd( -58.7408, -3.13617, -17.7445, 1.36 ) }
    dend_24 { pt3dadd( -65.8788, -3.32532, -22.7383, 1.36 ) }
    dend_24 { pt3dadd( -72.3834, -3.45146, -28.5348, 1.36 ) }
    dend_24 { pt3dadd( -78.7757, -2.45943, -34.3726, 1.36 ) }
    dend_24 { pt3dadd( -85.5656, -0.681014, -39.5359, 1.36 ) }
    dend_24 { pt3dadd( -91.7459, 2.03782, -45.0438, 1.36 ) }
    dend_24 { pt3dadd( -98.7602, 5.45716, -48.921, 1.36 ) }
    dend_24 { pt3dadd( -105.964, 9.64345, -51.4697, 1.36 ) }
    dend_24 { pt3dadd( -112.655, 15.0002, -53.0415, 1.36 ) }
    dend_24 { pt3dadd( -118.566, 20.7887, -55.774, 1.36 ) }
    dend_24 { pt3dadd( -125.124, 26.0549, -58.0515, 1.36 ) }
    dend_24 { pt3dadd( -132.373, 29.3118, -61.6253, 1.36 ) }
    dend_24 { pt3dadd( -139.536, 33.4271, -64.3982, 1.36 ) }
    dend_24 { pt3dadd( -147.005, 37.3579, -66.5613, 1.36 ) }
    dend_24 { pt3dadd( -154.395, 40.9453, -69.4673, 1.36 ) }
    dend_24 { pt3dadd( -162.281, 43.5072, -72.1464, 1.36 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 82/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 2.19184, -6.36779, 3.26, 1.59 ) }
    dend_13 { pt3dadd( 3.42943, -7.95263, 4.14234, 1.59 ) }
    dend_13 { pt3dadd( 4.75407, -9.64895, 5.08674, 1.59 ) }
    dend_13 { pt3dadd( 6.41959, -11.7818, 6.27418, 2.27 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 86/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -8.17816, -2.83779, 1.81, 2.05 ) }
    dend_0 { pt3dadd( -10.3391, -2.42399, 2.04166, 1.36 ) }
    dend_0 { pt3dadd( -12.077, -2.09119, 2.22797, 1.36 ) }
    dend_0 { pt3dadd( -15.3003, -1.47396, 2.57351, 2.5 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 90/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 7.37928, 2.63172, 0.0, 1.01513 ) }
    axon_0 { pt3dadd( 21.5117, 7.65911, 0.0, 1.01513 ) }
    axon_0 { pt3dadd( 35.6441, 12.6865, 0.0, 1.01513 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 93/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 8.70454, 5.85534, 4.52, 2.27 ) }
    dend_40 { pt3dadd( 10.344, 7.12487, 5.28511, 2.27 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 95/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 8.70454, 5.85534, 4.52, 0.68 ) }
    dend_39 { pt3dadd( 12.0624, 5.30046, 5.83045, 0.68 ) }
    dend_39 { pt3dadd( 14.9323, 4.9768, 6.85724, 0.45 ) }
    dend_39 { pt3dadd( 18.0073, 4.76441, 7.90792, 1.14 ) }
    dend_39 { pt3dadd( 20.6308, 4.6134, 8.71705, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_39 { pt3dadd( 22.7692, 4.44454, 9.39135, 0.68 ) }
    dend_39 { pt3dadd( 25.0222, 4.26747, 10.1177, 1.14 ) }
    dend_39 { pt3dadd( 27.9519, 4.07936, 11.0476, 0.23 ) }
    dend_39 { pt3dadd( 29.2494, 3.99632, 11.4619, 0.91 ) }
    dend_39 { pt3dadd( 31.5333, 3.82986, 12.1112, 1.14 ) }
    dend_39 { pt3dadd( 34.9326, 3.55803, 13.067, 0.23 ) }
    dend_39 { pt3dadd( 37.1645, 3.40521, 13.7126, 0.91 ) }
    dend_39 { pt3dadd( 40.257, 3.19447, 14.803, 1.14 ) }
    dend_39 { pt3dadd( 42.9294, 2.94458, 15.8281, 0.45 ) }
    dend_39 { pt3dadd( 45.983, 2.72233, 17.0114, 0.68 ) }
    dend_39 { pt3dadd( 48.2549, 2.71268, 17.9013, 0.23 ) }
    dend_39 { pt3dadd( 49.1387, 2.78479, 18.2796, 1.14 ) }
    dend_39 { pt3dadd( 51.9928, 3.28843, 19.7217, 0.23 ) }
    dend_39 { pt3dadd( 54.1102, 3.85356, 20.9375, 0.45 ) }
    dend_39 { pt3dadd( 57.091, 5.00071, 22.8946, 1.59 ) }
    dend_39 { pt3dadd( 59.9188, 6.32573, 24.8409, 0.45 ) }
    dend_39 { pt3dadd( 62.5178, 7.53824, 26.5826, 1.36 ) }
    dend_39 { pt3dadd( 65.6747, 8.9608, 28.6229, 0.23 ) }
    dend_39 { pt3dadd( 67.0091, 9.55936, 29.4537, 2.05 ) }
    dend_39 { pt3dadd( 69.3057, 10.674, 31.0971, 0.23 ) }
    dend_39 { pt3dadd( 70.2269, 11.1396, 31.8177, 0.68 ) }
    dend_39 { pt3dadd( 71.6621, 11.6755, 32.975, 0.23 ) }
    dend_39 { pt3dadd( 72.9664, 12.0029, 33.9353, 0.23 ) }
    dend_39 { pt3dadd( 73.8971, 12.1718, 34.5915, 1.14 ) }
    dend_39 { pt3dadd( 76.2633, 12.6286, 36.3937, 0.23 ) }
    dend_39 { pt3dadd( 78.0418, 13.0107, 37.9076, 1.14 ) }
    dend_39 { pt3dadd( 80.4445, 13.6976, 40.3081, 0.23 ) }
    dend_39 { pt3dadd( 81.6909, 14.1863, 41.7157, 0.91 ) }
    dend_39 { pt3dadd( 83.61, 15.0873, 44.0526, 0.23 ) }
    dend_39 { pt3dadd( 85.2767, 16.039, 46.0563, 1.36 ) }
    dend_39 { pt3dadd( 87.04, 17.2127, 48.151, 0.23 ) }
    dend_39 { pt3dadd( 88.6998, 18.3875, 50.0824, 1.36 ) }
    dend_39 { pt3dadd( 90.8473, 20.026, 52.4227, 0.23 ) }
    dend_39 { pt3dadd( 92.857, 21.5391, 54.4683, 1.14 ) }
    dend_39 { pt3dadd( 94.378, 22.6755, 55.8298, 0.23 ) }
    dend_39 { pt3dadd( 95.4861, 23.4643, 56.6565, 0.91 ) }
    dend_39 { pt3dadd( 96.6247, 24.319, 57.4024, 0.23 ) }
    dend_39 { pt3dadd( 97.7679, 25.2969, 58.1286, 1.14 ) }
    dend_39 { pt3dadd( 99.7593, 27.1307, 59.363, 0.23 ) }
    dend_39 { pt3dadd( 101.272, 28.5668, 60.3402, 1.14 ) }
    dend_39 { pt3dadd( 103.368, 30.6933, 61.8295, 0.23 ) }
    dend_39 { pt3dadd( 104.673, 32.0745, 62.7848, 0.91 ) }
    dend_39 { pt3dadd( 106.42, 33.9798, 64.1494, 0.23 ) }
    dend_39 { pt3dadd( 107.346, 34.9273, 64.8623, 0.23 ) }
    dend_39 { pt3dadd( 109.111, 36.557, 66.1885, 1.14 ) }
    dend_39 { pt3dadd( 111.393, 38.2297, 67.7995, 0.23 ) }
    dend_39 { pt3dadd( 111.927, 38.5066, 68.1802, 0.68 ) }
    dend_39 { pt3dadd( 113.544, 39.0413, 69.525, 0.23 ) }
    dend_39 { pt3dadd( 115.049, 39.2129, 71.0047, 0.91 ) }
    dend_39 { pt3dadd( 116.428, 38.9907, 72.8215, 0.23 ) }
    dend_39 { pt3dadd( 118.013, 37.9235, 75.7327, 0.91 ) }
    dend_39 { pt3dadd( 119.08, 36.7005, 78.255, 0.23 ) }
    dend_39 { pt3dadd( 119.941, 35.2905, 80.9808, 0.23 ) }
    dend_39 { pt3dadd( 120.268, 34.2467, 82.8784, 1.14 ) }
    dend_39 { pt3dadd( 120.316, 33.2814, 84.6795, 0.45 ) }
    dend_39 { pt3dadd( 120.077, 32.0537, 87.0134, 0.45 ) }
    dend_39 { pt3dadd( 119.825, 31.4488, 88.5251, 0.91 ) }
    dend_39 { pt3dadd( 119.703, 31.1738, 89.4515, 0.91 ) }
    dend_39 { pt3dadd( 119.567, 30.5447, 92.5305, 1.14 ) }
    dend_39 { pt3dadd( 119.575, 30.3749, 94.3547, 0.23 ) }
    dend_39 { pt3dadd( 119.575, 30.3789, 95.5315, 1.14 ) }
    dend_39 { pt3dadd( 119.782, 30.8622, 100.556, 0.23 ) }
    dend_39 { pt3dadd( 119.918, 31.0358, 101.49, 0.23 ) }
    dend_39 { pt3dadd( 120.255, 31.4009, 102.652, 0.91 ) }
    dend_39 { pt3dadd( 121.22, 32.49, 104.878, 0.23 ) }
    dend_39 { pt3dadd( 121.763, 33.1267, 105.858, 0.23 ) }
    dend_39 { pt3dadd( 122.502, 34.087, 107.025, 0.23 ) }
    dend_39 { pt3dadd( 123.572, 35.7245, 108.505, 0.91 ) }
    dend_39 { pt3dadd( 124.142, 36.5979, 109.225, 0.23 ) }
    dend_39 { pt3dadd( 124.669, 37.307, 109.79, 0.68 ) }
    dend_39 { pt3dadd( 126.022, 38.8376, 110.926, 0.23 ) }
    dend_39 { pt3dadd( 127.742, 40.4721, 112.167, 0.23 ) }
    dend_39 { pt3dadd( 128.399, 41.058, 112.591, 0.23 ) }
    dend_39 { pt3dadd( 129.72, 42.1709, 113.301, 0.91 ) }
    dend_39 { pt3dadd( 132.059, 44.0582, 114.413, 0.23 ) }
    dend_39 { pt3dadd( 132.932, 44.7715, 114.784, 0.23 ) }
    dend_39 { pt3dadd( 135.432, 46.8316, 115.833, 0.68 ) }
    dend_39 { pt3dadd( 136.511, 47.7106, 116.263, 0.23 ) }
    dend_39 { pt3dadd( 137.699, 48.7117, 116.759, 0.68 ) }
    dend_39 { pt3dadd( 138.54, 49.4588, 117.124, 0.23 ) }
    dend_39 { pt3dadd( 140.152, 51.084, 117.796, 0.91 ) }
    dend_39 { pt3dadd( 141.686, 52.8145, 118.516, 0.23 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 82/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -32.8182, 1.04011, -20.8146, 0.23 ) }
    dend_37 { pt3dadd( -44.6411, 0.895903, -26.4656, 0.23 ) }
    dend_37 { pt3dadd( -55.8862, 1.73678, -33.142, 0.23 ) }
    dend_37 { pt3dadd( -66.4693, 3.25465, -40.7202, 0.23 ) }
    dend_37 { pt3dadd( -76.0903, 4.35578, -49.5497, 0.23 ) }
    dend_37 { pt3dadd( -84.8093, 3.94864, -59.3246, 0.23 ) }
    dend_37 { pt3dadd( -92.1887, 5.53063, -70.038, 0.23 ) }
    dend_37 { pt3dadd( -98.2785, 6.03029, -81.631, 0.23 ) }
    dend_37 { pt3dadd( -106.728, 7.73217, -91.5021, 0.23 ) }
    dend_37 { pt3dadd( -114.419, 11.5161, -101.415, 0.23 ) }
    dend_37 { pt3dadd( -122.864, 15.7037, -110.519, 0.23 ) }
    dend_37 { pt3dadd( -130.922, 17.7253, -120.654, 0.23 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 94/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -32.8182, 1.04011, -20.8146, 0.23 ) }
    dend_36 { pt3dadd( -38.0244, 1.7469, -23.5716, 0.23 ) }
    dend_36 { pt3dadd( -42.953, 2.59696, -26.7641, 0.23 ) }
    dend_36 { pt3dadd( -47.1273, 4.27111, -30.6341, 0.23 ) }
    dend_36 { pt3dadd( -51.5791, 5.95151, -34.1786, 0.23 ) }
    dend_36 { pt3dadd( -56.0055, 8.03129, -37.5381, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_36 { pt3dadd( -60.1537, 10.7193, -40.8202, 0.23 ) }
    dend_36 { pt3dadd( -64.4559, 12.6222, -44.4361, 0.23 ) }
    dend_36 { pt3dadd( -68.3877, 15.4706, -47.8468, 0.23 ) }
    dend_36 { pt3dadd( -72.3512, 18.3573, -51.1879, 0.23 ) }
    dend_36 { pt3dadd( -75.3268, 22.1365, -54.6618, 0.23 ) }
    dend_36 { pt3dadd( -78.6153, 25.8161, -57.956, 0.23 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 6/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -1.45127, -8.87406, -7.18036, 0.23 ) }
    dend_34 { pt3dadd( -1.19814, -11.7092, -6.91602, 0.23 ) }
    dend_34 { pt3dadd( -0.911313, -13.8906, -6.89998, 0.91 ) }
    dend_34 { pt3dadd( -0.570559, -15.8754, -6.99573, 0.91 ) }
    dend_34 { pt3dadd( -0.118343, -18.2099, -7.22065, 0.23 ) }
    dend_34 { pt3dadd( 0.324981, -20.3002, -7.47895, 0.91 ) }
    dend_34 { pt3dadd( 0.899526, -23.0688, -7.85506, 0.23 ) }
    dend_34 { pt3dadd( 1.24855, -24.4904, -8.13333, 1.14 ) }
    dend_34 { pt3dadd( 1.82815, -27.2413, -8.76239, 0.23 ) }
    dend_34 { pt3dadd( 2.03825, -28.4967, -9.05915, 1.14 ) }
    dend_34 { pt3dadd( 2.24407, -30.6612, -9.49814, 0.23 ) }
    dend_34 { pt3dadd( 2.2819, -31.9128, -9.67658, 0.23 ) }
    dend_34 { pt3dadd( 2.25633, -33.4178, -9.82073, 0.91 ) }
    dend_34 { pt3dadd( 2.10572, -36.2542, -9.98065, 0.23 ) }
    dend_34 { pt3dadd( 2.02698, -37.4489, -10.0028, 0.23 ) }
    dend_34 { pt3dadd( 1.84522, -39.5307, -10.0167, 0.91 ) }
    dend_34 { pt3dadd( 1.61099, -41.6076, -10.0354, 0.45 ) }
    dend_34 { pt3dadd( 1.35967, -43.9767, -10.0326, 0.45 ) }
    dend_34 { pt3dadd( 1.24091, -45.2888, -10.0077, 0.91 ) }
    dend_34 { pt3dadd( 1.02465, -48.2854, -9.90062, 0.23 ) }
    dend_34 { pt3dadd( 0.85475, -50.6597, -9.83966, 0.23 ) }
    dend_34 { pt3dadd( 0.713938, -52.8473, -9.82272, 0.23 ) }
    dend_34 { pt3dadd( 0.642347, -55.0619, -9.83699, 0.91 ) }
    dend_34 { pt3dadd( 0.628022, -57.2852, -9.82544, 0.23 ) }
    dend_34 { pt3dadd( 0.654753, -58.7869, -9.80282, 1.14 ) }
    dend_34 { pt3dadd( 0.712108, -61.0627, -9.70632, 0.23 ) }
    dend_34 { pt3dadd( 0.78194, -62.3727, -9.65015, 0.68 ) }
    dend_34 { pt3dadd( 1.01218, -65.3952, -9.56087, 0.23 ) }
    dend_34 { pt3dadd( 1.24376, -68.2927, -9.54995, 0.23 ) }
    dend_34 { pt3dadd( 1.33951, -69.7682, -9.57264, 0.23 ) }
    dend_34 { pt3dadd( 1.46372, -72.2327, -9.62307, 0.45 ) }
    dend_34 { pt3dadd( 1.52174, -74.5147, -9.67372, 0.45 ) }
    dend_34 { pt3dadd( 1.51703, -76.1842, -9.74592, 0.45 ) }
    dend_34 { pt3dadd( 1.4706, -78.0505, -9.8779, 0.45 ) }
    dend_34 { pt3dadd( 1.43888, -79.8391, -10.0434, 0.68 ) }
    dend_34 { pt3dadd( 1.39218, -81.106, -10.1434, 0.23 ) }
    dend_34 { pt3dadd( 1.29853, -82.5829, -10.2309, 0.68 ) }
    dend_34 { pt3dadd( 1.05371, -84.4216, -10.2625, 0.23 ) }
    dend_34 { pt3dadd( 0.686492, -86.5598, -10.2684, 0.45 ) }
    dend_34 { pt3dadd( 0.453154, -88.0434, -10.2854, 0.45 ) }
    dend_34 { pt3dadd( 0.235092, -89.7077, -10.3221, 0.45 ) }
    dend_34 { pt3dadd( 0.0375579, -91.2513, -10.3804, 0.45 ) }
    dend_34 { pt3dadd( -0.204399, -93.0622, -10.4779, 0.23 ) }
    dend_34 { pt3dadd( -0.462233, -94.8404, -10.601, 1.82 ) }
    dend_34 { pt3dadd( -0.945265, -98.2664, -10.9113, 0.45 ) }
    dend_34 { pt3dadd( -1.10618, -99.7398, -11.0562, 0.45 ) }
    dend_34 { pt3dadd( -1.17818, -100.936, -11.1814, 0.45 ) }
    dend_34 { pt3dadd( -1.27329, -103.603, -11.4901, 0.23 ) }
    dend_34 { pt3dadd( -1.60271, -113.935, -12.5177, 0.23 ) }
    dend_34 { pt3dadd( -3.04061, -124.14, -13.8262, 0.23 ) }
    dend_34 { pt3dadd( -5.17462, -133.925, -16.5873, 0.23 ) }
    dend_34 { pt3dadd( -9.10696, -143.335, -18.5604, 0.23 ) }
    dend_34 { pt3dadd( -12.1818, -152.78, -21.604, 0.23 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 59/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -1.45127, -8.87406, -7.18036, 0.91 ) }
    dend_31 { pt3dadd( -1.94609, -8.8106, -7.68106, 0.91 ) }
    dend_31 { pt3dadd( -2.51223, -8.86498, -8.27444, 1.36 ) }
    dend_31 { pt3dadd( -2.91999, -8.99132, -8.74461, 0.91 ) }
    dend_31 { pt3dadd( -3.45566, -9.37416, -9.52227, 1.14 ) }
    dend_31 { pt3dadd( -3.91549, -9.96803, -10.3205, 1.14 ) }
    dend_31 { pt3dadd( -4.28217, -10.5981, -11.0163, 1.14 ) }
    dend_31 { pt3dadd( -4.38471, -10.9787, -11.3028, 1.36 ) }
    dend_31 { pt3dadd( -4.46586, -11.7077, -11.7224, 0.23 ) }
    dend_31 { pt3dadd( -4.45032, -12.4634, -12.1093, 0.23 ) }
    dend_31 { pt3dadd( -4.38898, -13.1773, -12.4295, 0.45 ) }
    dend_31 { pt3dadd( -4.28402, -13.7839, -12.695, 0.91 ) }
    dend_31 { pt3dadd( -4.11561, -14.6855, -13.1003, 0.23 ) }
    dend_31 { pt3dadd( -4.0465, -15.1681, -13.3399, 0.23 ) }
    dend_31 { pt3dadd( -4.03494, -15.833, -13.6923, 0.23 ) }
    dend_31 { pt3dadd( -4.53223, -18.858, -16.656, 0.23 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 75/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 12.1026, -14.4691, -2.71526, 0.68 ) }
    dend_29 { pt3dadd( 12.7995, -16.57, -2.84057, 0.68 ) }
    dend_29 { pt3dadd( 13.4381, -18.4142, -2.89568, 0.91 ) }
    dend_29 { pt3dadd( 14.2371, -20.4968, -2.92348, 0.91 ) }
    dend_29 { pt3dadd( 15.3511, -23.0902, -2.91594, 1.36 ) }
    dend_29 { pt3dadd( 16.605, -25.92, -2.94605, 0.45 ) }
    dend_29 { pt3dadd( 17.7247, -28.5762, -3.02456, 1.14 ) }
    dend_29 { pt3dadd( 18.9423, -31.699, -3.14558, 0.68 ) }
    dend_29 { pt3dadd( 20.3338, -35.4702, -3.38317, 0.68 ) }
    dend_29 { pt3dadd( 21.6436, -39.1331, -3.79885, 0.68 ) }
    dend_29 { pt3dadd( 22.6153, -41.9917, -4.28918, 1.14 ) }
    dend_29 { pt3dadd( 23.6405, -45.047, -4.9795, 0.68 ) }
    dend_29 { pt3dadd( 24.3947, -47.1175, -5.53577, 0.45 ) }
    dend_29 { pt3dadd( 25.2176, -49.2203, -6.13974, 0.45 ) }
    dend_29 { pt3dadd( 26.2885, -51.6167, -6.78352, 0.68 ) }
    dend_29 { pt3dadd( 27.7662, -54.3922, -7.40341, 0.68 ) }
    dend_29 { pt3dadd( 28.4477, -55.3924, -7.5279, 0.68 ) }
    dend_29 { pt3dadd( 29.9923, -57.3976, -7.59131, 0.68 ) }
    dend_29 { pt3dadd( 31.7815, -59.7527, -7.49643, 0.45 ) }
    dend_29 { pt3dadd( 34.1583, -63.1029, -7.18168, 0.45 ) }
    dend_29 { pt3dadd( 35.4386, -65.1559, -6.94347, 0.91 ) }
    dend_29 { pt3dadd( 37.2633, -68.4633, -6.56976, 0.45 ) }
    dend_29 { pt3dadd( 38.6176, -71.1018, -6.32299, 0.91 ) }
    dend_29 { pt3dadd( 39.9444, -73.9751, -6.14748, 0.91 ) }
    dend_29 { pt3dadd( 40.6719, -75.7533, -6.11242, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_29 { pt3dadd( 41.7464, -78.7631, -6.13787, 0.68 ) }
    dend_29 { pt3dadd( 42.6545, -81.7235, -6.23014, 0.91 ) }
    dend_29 { pt3dadd( 43.5588, -85.3555, -6.45502, 0.23 ) }
    dend_29 { pt3dadd( 44.0853, -87.597, -6.63737, 0.45 ) }
    dend_29 { pt3dadd( 44.787, -90.5516, -6.90935, 0.45 ) }
    dend_29 { pt3dadd( 45.339, -93.1315, -7.12948, 0.45 ) }
    dend_29 { pt3dadd( 45.5249, -94.3812, -7.22854, 0.45 ) }
    dend_29 { pt3dadd( 45.7872, -96.9094, -7.45372, 0.45 ) }
    dend_29 { pt3dadd( 46.0392, -100.512, -7.79274, 0.91 ) }
    dend_29 { pt3dadd( 46.1745, -102.797, -7.98536, 0.23 ) }
    dend_29 { pt3dadd( 46.3266, -106.03, -8.21756, 0.91 ) }
    dend_29 { pt3dadd( 46.4454, -110.89, -8.53755, 0.91 ) }
    dend_29 { pt3dadd( 46.3979, -113.724, -8.70051, 0.45 ) }
    dend_29 { pt3dadd( 46.2999, -114.961, -8.7734, 0.45 ) }
    dend_29 { pt3dadd( 45.9956, -116.828, -8.8605, 0.45 ) }
    dend_29 { pt3dadd( 45.3782, -119.488, -8.93911, 0.45 ) }
    dend_29 { pt3dadd( 44.5151, -122.525, -8.98778, 0.45 ) }
    dend_29 { pt3dadd( 43.6492, -125.055, -8.96294, 0.23 ) }
    dend_29 { pt3dadd( 42.947, -126.941, -8.91955, 0.91 ) }
    dend_29 { pt3dadd( 42.1626, -129.202, -8.87388, 0.23 ) }
    dend_29 { pt3dadd( 41.6933, -130.648, -8.86718, 0.68 ) }
    dend_29 { pt3dadd( 41.0839, -132.596, -8.8815, 0.68 ) }
    dend_29 { pt3dadd( 40.4865, -134.805, -8.9097, 0.68 ) }
    dend_29 { pt3dadd( 40.0095, -137.333, -8.95944, 0.23 ) }
    dend_29 { pt3dadd( 39.8437, -139.025, -8.98909, 0.68 ) }
    dend_29 { pt3dadd( 39.7934, -140.989, -9.05519, 0.23 ) }
    dend_29 { pt3dadd( 39.8828, -142.908, -9.11949, 0.68 ) }
    dend_29 { pt3dadd( 40.1975, -146.062, -9.26098, 0.23 ) }
    dend_29 { pt3dadd( 40.3397, -147.247, -9.32979, 0.23 ) }
    dend_29 { pt3dadd( 40.5379, -149.173, -9.4519, 0.91 ) }
    dend_29 { pt3dadd( 40.7838, -152.341, -9.64869, 0.45 ) }
    dend_29 { pt3dadd( 41.0708, -156.187, -9.85992, 0.45 ) }
    dend_29 { pt3dadd( 41.2093, -158.252, -9.96085, 0.91 ) }
    dend_29 { pt3dadd( 41.2538, -159.636, -10.0133, 0.23 ) }
    dend_29 { pt3dadd( 41.2432, -161.365, -10.0678, 0.91 ) }
    dend_29 { pt3dadd( 41.23, -162.46, -10.094, 0.45 ) }
    dend_29 { pt3dadd( 41.2212, -163.942, -10.1038, 0.91 ) }
    dend_29 { pt3dadd( 41.2676, -165.899, -10.0868, 0.23 ) }
    dend_29 { pt3dadd( 41.5599, -169.169, -10.0013, 0.68 ) }
    dend_29 { pt3dadd( 41.9042, -171.102, -9.9607, 0.23 ) }
    dend_29 { pt3dadd( 42.4017, -173.015, -10.0201, 0.68 ) }
    dend_29 { pt3dadd( 42.7032, -173.94, -10.0925, 0.68 ) }
    dend_29 { pt3dadd( 43.4684, -175.945, -10.3096, 0.23 ) }
    dend_29 { pt3dadd( 44.5902, -178.348, -10.6883, 1.14 ) }
    dend_29 { pt3dadd( 46.1182, -181.131, -11.2388, 0.23 ) }
    dend_29 { pt3dadd( 47.5826, -183.666, -11.814, 0.23 ) }
    dend_29 { pt3dadd( 48.8543, -185.887, -12.3622, 0.23 ) }
    dend_29 { pt3dadd( 49.5193, -187.029, -12.6562, 0.91 ) }
    dend_29 { pt3dadd( 50.6899, -189.022, -13.1706, 1.36 ) }
    dend_29 { pt3dadd( 51.9985, -191.251, -13.7217, 0.23 ) }
    dend_29 { pt3dadd( 53.1519, -193.242, -14.1129, 0.68 ) }
    dend_29 { pt3dadd( 53.9204, -194.638, -14.2904, 0.23 ) }
    dend_29 { pt3dadd( 54.7485, -196.213, -14.4462, 0.45 ) }
    dend_29 { pt3dadd( 55.9721, -198.755, -14.7136, 0.23 ) }
    dend_29 { pt3dadd( 56.6006, -200.292, -14.8688, 0.23 ) }
    dend_29 { pt3dadd( 57.2117, -202.234, -15.0756, 0.68 ) }
    dend_29 { pt3dadd( 57.4629, -203.497, -15.2318, 0.23 ) }
    dend_29 { pt3dadd( 57.7071, -205.102, -15.4519, 0.91 ) }
    dend_29 { pt3dadd( 58.0078, -208.768, -16.017, 0.23 ) }
    dend_29 { pt3dadd( 58.0373, -211.013, -16.4118, 0.23 ) }
    dend_29 { pt3dadd( 57.9241, -213.845, -16.9627, 0.23 ) }
    dend_29 { pt3dadd( 57.6612, -216.428, -17.518, 0.23 ) }
    dend_29 { pt3dadd( 61.1561, -226.944, -17.9338, 0.23 ) }
    dend_29 { pt3dadd( 64.7884, -237.418, -18.195, 0.23 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 64/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 12.1026, -14.4691, -2.71526, 0.68 ) }
    dend_28 { pt3dadd( 12.7794, -15.2589, -2.45635, 0.68 ) }
    dend_28 { pt3dadd( 13.9856, -16.8274, -1.97489, 0.68 ) }
    dend_28 { pt3dadd( 15.3975, -18.9577, -1.4738, 0.68 ) }
    dend_28 { pt3dadd( 16.4789, -20.7085, -1.15987, 0.68 ) }
    dend_28 { pt3dadd( 17.5592, -22.4063, -0.931204, 0.91 ) }
    dend_28 { pt3dadd( 18.8844, -24.4065, -0.705208, 0.68 ) }
    dend_28 { pt3dadd( 20.1676, -26.356, -0.515681, 1.14 ) }
    dend_28 { pt3dadd( 21.855, -28.8302, -0.275772, 1.14 ) }
    dend_28 { pt3dadd( 23.7375, -31.424, 0.00381894, 0.45 ) }
    dend_28 { pt3dadd( 25.0812, -33.2064, 0.242148, 0.68 ) }
    dend_28 { pt3dadd( 26.0167, -34.408, 0.427012, 1.14 ) }
    dend_28 { pt3dadd( 27.5623, -36.3567, 0.738419, 0.23 ) }
    dend_28 { pt3dadd( 29.0077, -38.1067, 1.08175, 1.14 ) }
    dend_28 { pt3dadd( 30.2951, -39.5472, 1.4459, 0.45 ) }
    dend_28 { pt3dadd( 31.98, -41.4529, 1.96804, 0.45 ) }
    dend_28 { pt3dadd( 33.3481, -43.0643, 2.41186, 0.45 ) }
    dend_28 { pt3dadd( 34.8657, -44.9031, 2.86697, 0.45 ) }
    dend_28 { pt3dadd( 36.2539, -46.5825, 3.22485, 1.36 ) }
    dend_28 { pt3dadd( 37.8462, -48.4833, 3.6285, 0.68 ) }
    dend_28 { pt3dadd( 39.0723, -49.8677, 3.86729, 0.23 ) }
    dend_28 { pt3dadd( 39.7961, -50.6688, 3.9466, 1.14 ) }
    dend_28 { pt3dadd( 41.2163, -52.3892, 3.93327, 0.23 ) }
    dend_28 { pt3dadd( 42.0006, -53.4672, 3.82506, 1.14 ) }
    dend_28 { pt3dadd( 42.5307, -54.3272, 3.64618, 1.14 ) }
    dend_28 { pt3dadd( 43.6062, -56.3308, 3.05455, 0.23 ) }
    dend_28 { pt3dadd( 44.3594, -57.775, 2.54515, 0.23 ) }
    dend_28 { pt3dadd( 45.1051, -59.2394, 1.97317, 1.36 ) }
    dend_28 { pt3dadd( 45.4075, -59.8211, 1.73627, 1.36 ) }
    dend_28 { pt3dadd( 46.1723, -61.3465, 1.16059, 0.23 ) }
    dend_28 { pt3dadd( 46.5207, -62.072, 0.913983, 0.68 ) }
    dend_28 { pt3dadd( 47.0809, -63.1481, 0.59903, 0.23 ) }
    dend_28 { pt3dadd( 47.6638, -64.2544, 0.263316, 1.36 ) }
    dend_28 { pt3dadd( 48.579, -66.0695, -0.31277, 0.45 ) }
    dend_28 { pt3dadd( 49.7346, -68.4388, -1.09299, 1.36 ) }
    dend_28 { pt3dadd( 51.016, -71.0501, -1.98021, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_28 { pt3dadd( 51.8577, -72.6811, -2.56157, 1.36 ) }
    dend_28 { pt3dadd( 52.5927, -74.0618, -3.0585, 0.23 ) }
    dend_28 { pt3dadd( 53.2427, -75.187, -3.47354, 1.14 ) }
    dend_28 { pt3dadd( 54.181, -76.6724, -4.06033, 0.23 ) }
    dend_28 { pt3dadd( 54.8698, -77.6403, -4.46715, 1.14 ) }
    dend_28 { pt3dadd( 56.0255, -79.1326, -5.13251, 0.23 ) }
    dend_28 { pt3dadd( 57.2493, -80.6733, -5.81089, 0.68 ) }
    dend_28 { pt3dadd( 58.4067, -82.1251, -6.40663, 0.91 ) }
    dend_28 { pt3dadd( 59.8134, -84.0182, -7.13241, 0.23 ) }
    dend_28 { pt3dadd( 60.8169, -85.4846, -7.66467, 1.14 ) }
    dend_28 { pt3dadd( 61.9511, -87.2153, -8.24069, 0.23 ) }
    dend_28 { pt3dadd( 63.0323, -88.9031, -8.76426, 0.68 ) }
    dend_28 { pt3dadd( 64.4492, -91.2055, -9.45119, 0.68 ) }
    dend_28 { pt3dadd( 65.9238, -93.8278, -10.1946, 0.68 ) }
    dend_28 { pt3dadd( 66.7369, -95.3801, -10.6187, 0.68 ) }
    dend_28 { pt3dadd( 67.3094, -96.5165, -10.9257, 0.45 ) }
    dend_28 { pt3dadd( 68.4279, -98.8371, -11.5593, 0.45 ) }
    dend_28 { pt3dadd( 69.5635, -101.245, -12.2804, 0.45 ) }
    dend_28 { pt3dadd( 70.5952, -103.384, -12.983, 0.45 ) }
    dend_28 { pt3dadd( 71.1413, -104.554, -13.404, 0.23 ) }
    dend_28 { pt3dadd( 71.4462, -105.302, -13.6811, 0.23 ) }
    dend_28 { pt3dadd( 76.6099, -112.941, -15.8558, 0.23 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 22/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -162.281, 43.5072, -72.1464, 0.68 ) }
    dend_26 { pt3dadd( -167.263, 46.6935, -78.0617, 0.68 ) }
    dend_26 { pt3dadd( -173.019, 49.4373, -83.4757, 0.68 ) }
    dend_26 { pt3dadd( -178.412, 52.9291, -88.8311, 0.68 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 26/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -162.281, 43.5072, -72.1464, 0.68 ) }
    dend_25 { pt3dadd( -175.476, 45.2783, -70.9507, 0.68 ) }
    dend_25 { pt3dadd( -188.809, 44.36, -71.2107, 0.68 ) }
    // Section: dend_21, id: dend_21, parent: dend_13 (entry count 29/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 6.41959, -11.7818, 6.27418, 1.36 ) }
    dend_21 { pt3dadd( 5.41449, -12.5463, 8.06275, 1.36 ) }
    dend_21 { pt3dadd( 4.62499, -12.9413, 9.37661, 1.36 ) }
    dend_21 { pt3dadd( 3.94591, -13.284, 10.5095, 1.36 ) }
    dend_21 { pt3dadd( 3.28904, -13.6155, 11.6054, 1.36 ) }
    dend_21 { pt3dadd( 2.37047, -14.079, 13.1379, 1.82 ) }
    dend_21 { pt3dadd( 1.12889, -14.7056, 15.2092, 1.36 ) }
    dend_21 { pt3dadd( 0.269588, -14.8602, 16.2268, 1.59 ) }
    dend_21 { pt3dadd( -0.353419, -14.8703, 16.8415, 1.59 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 38/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 6.41959, -11.7818, 6.27418, 1.36 ) }
    dend_14 { pt3dadd( 8.21388, -14.968, 6.36348, 1.36 ) }
    dend_14 { pt3dadd( 9.56185, -17.3616, 6.43057, 1.59 ) }
    dend_14 { pt3dadd( 10.3502, -18.7615, 6.4698, 1.59 ) }
    dend_14 { pt3dadd( 11.5975, -20.9762, 6.53188, 2.05 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 43/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -15.3003, -1.47396, 2.57351, 1.36 ) }
    dend_4 { pt3dadd( -16.2151, 0.826121, 2.63375, 1.36 ) }
    dend_4 { pt3dadd( -17.4801, 3.93581, 2.71625, 1.14 ) }
    dend_4 { pt3dadd( -18.4397, 6.15039, 2.74964, 1.14 ) }
    dend_4 { pt3dadd( -19.6386, 8.68553, 2.82084, 0.91 ) }
    dend_4 { pt3dadd( -20.9228, 11.1822, 2.94748, 0.91 ) }
    dend_4 { pt3dadd( -21.9159, 13.113, 3.04541, 1.36 ) }
    dend_4 { pt3dadd( -22.8626, 14.9569, 3.14747, 1.36 ) }
    dend_4 { pt3dadd( -24.503, 18.0184, 3.33861, 0.91 ) }
    dend_4 { pt3dadd( -25.8448, 20.1812, 3.50894, 0.91 ) }
    dend_4 { pt3dadd( -26.9931, 21.7332, 3.66008, 1.59 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 54/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -15.3003, -1.47396, 2.57351, 1.14 ) }
    dend_1 { pt3dadd( -16.2195, -3.22051, 2.43754, 1.14 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 56/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 35.6441, 12.6865, 0.0, 0.15 ) }
    axon_1 { pt3dadd( 49.7765, 17.7139, 0.0, 0.15 ) }
    axon_1 { pt3dadd( 63.909, 22.7413, 0.0, 0.15 ) }
    // Section: dend_46, id: dend_46, parent: dend_40 (entry count 59/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 10.344, 7.12487, 5.28511, 0.68 ) }
    dend_46 { pt3dadd( 12.6179, 8.62002, 4.48789, 0.68 ) }
    dend_46 { pt3dadd( 14.0156, 9.53905, 3.99785, 1.14 ) }
    dend_46 { pt3dadd( 15.9007, 10.7785, 3.33693, 2.05 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 63/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 10.344, 7.12487, 5.28511, 1.36 ) }
    dend_41 { pt3dadd( 11.7727, 9.3116, 6.10577, 1.36 ) }
    dend_41 { pt3dadd( 12.8518, 10.9633, 6.72564, 1.36 ) }
    dend_41 { pt3dadd( 14.0452, 12.7898, 7.41113, 2.05 ) }
    dend_41 { pt3dadd( 15.2145, 14.5795, 8.08279, 0.91 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 68/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -4.53223, -18.858, -16.656, 0.23 ) }
    dend_33 { pt3dadd( -6.94569, -25.0282, -24.9828, 0.23 ) }
    dend_33 { pt3dadd( -8.5264, -32.1152, -32.7614, 0.23 ) }
    dend_33 { pt3dadd( -9.20733, -39.1919, -40.679, 0.23 ) }
    dend_33 { pt3dadd( -11.7032, -45.4298, -48.9307, 0.23 ) }
    dend_33 { pt3dadd( -14.557, -49.7746, -58.2156, 0.23 ) }
    dend_33 { pt3dadd( -16.2149, -55.2506, -67.1876, 0.23 ) }
    dend_33 { pt3dadd( -16.077, -60.3847, -76.5071, 0.23 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 76/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -4.53223, -18.858, -16.656, 0.23 ) }
    dend_32 { pt3dadd( -6.91789, -29.4211, -20.2086, 0.23 ) }
    dend_32 { pt3dadd( -8.9675, -40.4996, -21.9285, 0.23 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 79/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -0.353419, -14.8703, 16.8415, 1.14 ) }
    dend_23 { pt3dadd( 0.126593, -15.8083, 17.478, 1.14 ) }
    dend_23 { pt3dadd( 1.28989, -18.8874, 19.6851, 0.68 ) }
    dend_23 { pt3dadd( 1.80898, -20.8195, 21.1037, 0.68 ) }
    dend_23 { pt3dadd( 2.5484, -23.4262, 23.1202, 0.68 ) }
    dend_23 { pt3dadd( 3.55535, -26.4918, 25.5142, 0.68 ) }
    dend_23 { pt3dadd( 4.50344, -29.0309, 27.5298, 0.45 ) }
    dend_23 { pt3dadd( 4.87302, -30.2938, 28.4554, 0.45 ) }
    dend_23 { pt3dadd( 5.18961, -31.6224, 29.2918, 0.45 ) }
    dend_23 { pt3dadd( 5.91755, -33.849, 30.8812, 0.68 ) }
    dend_23 { pt3dadd( 6.50455, -34.8304, 31.8114, 1.14 ) }
    dend_23 { pt3dadd( 8.01823, -36.292, 33.5378, 0.23 ) }
    dend_23 { pt3dadd( 9.23139, -37.1145, 34.6004, 0.23 ) }
    dend_23 { pt3dadd( 11.3748, -38.0372, 36.4244, 0.91 ) }
    dend_23 { pt3dadd( 13.5331, -38.5224, 38.3214, 0.23 ) }
    dend_23 { pt3dadd( 15.1151, -38.7322, 39.908, 0.68 ) }
    dend_23 { pt3dadd( 16.6843, -38.8303, 41.7046, 0.23 ) }
    dend_23 { pt3dadd( 17.5462, -38.7733, 42.7978, 1.82 ) }
    dend_23 { pt3dadd( 19.613, -38.4977, 45.5124, 0.23 ) }
    dend_23 { pt3dadd( 21.2922, -38.2791, 47.7361, 1.82 ) }
    dend_23 { pt3dadd( 23.2362, -38.3741, 50.0934, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_23 { pt3dadd( 24.3874, -38.6762, 51.3093, 0.23 ) }
    dend_23 { pt3dadd( 25.5913, -39.2574, 52.4935, 0.23 ) }
    dend_23 { pt3dadd( 26.7837, -39.9537, 53.5213, 0.23 ) }
    dend_23 { pt3dadd( 27.9358, -40.7046, 54.343, 0.23 ) }
    dend_23 { pt3dadd( 29.8489, -42.0518, 55.6747, 0.68 ) }
    dend_23 { pt3dadd( 32.054, -43.6499, 57.2494, 2.05 ) }
    dend_23 { pt3dadd( 35.0401, -45.8223, 59.3436, 0.45 ) }
    dend_23 { pt3dadd( 37.257, -47.4402, 60.9112, 0.23 ) }
    dend_23 { pt3dadd( 39.0792, -48.7134, 62.2722, 0.23 ) }
    dend_23 { pt3dadd( 41.112, -50.0833, 63.8257, 1.14 ) }
    dend_23 { pt3dadd( 42.3918, -50.9387, 64.8358, 0.23 ) }
    dend_23 { pt3dadd( 44.5397, -52.1903, 66.3227, 0.91 ) }
    dend_23 { pt3dadd( 46.9353, -53.4164, 67.6902, 0.23 ) }
    dend_23 { pt3dadd( 48.0447, -53.917, 68.2892, 1.14 ) }
    dend_23 { pt3dadd( 51.131, -55.0841, 69.9309, 0.23 ) }
    dend_23 { pt3dadd( 54.032, -56.1249, 71.3708, 0.23 ) }
    dend_23 { pt3dadd( 55.8574, -56.7719, 72.2908, 2.05 ) }
    dend_23 { pt3dadd( 59.0752, -57.8092, 74.1052, 0.23 ) }
    dend_23 { pt3dadd( 61.7466, -58.6651, 75.7455, 1.59 ) }
    dend_23 { pt3dadd( 64.0566, -59.4429, 77.2059, 0.23 ) }
    dend_23 { pt3dadd( 65.6673, -59.9916, 78.3159, 0.23 ) }
    dend_23 { pt3dadd( 67.4165, -60.6254, 79.5943, 0.91 ) }
    dend_23 { pt3dadd( 69.4523, -61.4807, 81.1386, 0.23 ) }
    dend_23 { pt3dadd( 71.7576, -62.4541, 82.9017, 0.23 ) }
    dend_23 { pt3dadd( 73.2754, -63.0926, 84.1217, 1.59 ) }
    dend_23 { pt3dadd( 76.9279, -64.4888, 87.3203, 0.23 ) }
    dend_23 { pt3dadd( 78.6042, -65.1407, 88.9004, 0.91 ) }
    dend_23 { pt3dadd( 80.2545, -65.8739, 90.5111, 0.23 ) }
    dend_23 { pt3dadd( 81.6015, -66.4636, 91.7752, 1.14 ) }
    dend_23 { pt3dadd( 84.4404, -67.5203, 94.258, 0.23 ) }
    dend_23 { pt3dadd( 86.6111, -68.293, 96.0797, 0.91 ) }
    dend_23 { pt3dadd( 88.6565, -69.0481, 97.7309, 0.23 ) }
    dend_23 { pt3dadd( 90.2911, -69.7239, 99.1057, 0.68 ) }
    dend_23 { pt3dadd( 93.3947, -71.1022, 101.771, 0.23 ) }
    dend_23 { pt3dadd( 95.269, -72.0379, 103.222, 1.14 ) }
    dend_23 { pt3dadd( 97.1703, -72.9465, 104.382, 0.23 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 36/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -0.353419, -14.8703, 16.8415, 0.23 ) }
    dend_22 { pt3dadd( -2.70021, -15.4565, 16.8368, 0.23 ) }
    dend_22 { pt3dadd( -5.06089, -15.9994, 16.9074, 0.45 ) }
    dend_22 { pt3dadd( -7.14623, -16.4609, 17.1109, 0.23 ) }
    dend_22 { pt3dadd( -8.57258, -16.7509, 17.3246, 0.23 ) }
    dend_22 { pt3dadd( -10.8656, -17.1799, 17.8268, 0.68 ) }
    dend_22 { pt3dadd( -12.5362, -17.4788, 18.2541, 0.23 ) }
    dend_22 { pt3dadd( -14.37, -17.7487, 18.8543, 1.36 ) }
    dend_22 { pt3dadd( -17.2783, -18.1754, 19.9693, 0.45 ) }
    dend_22 { pt3dadd( -18.4461, -18.3573, 20.4329, 1.14 ) }
    dend_22 { pt3dadd( -20.4685, -18.7347, 21.2272, 0.23 ) }
    dend_22 { pt3dadd( -21.7916, -18.9918, 21.7343, 1.14 ) }
    dend_22 { pt3dadd( -23.8408, -19.5348, 22.4441, 0.23 ) }
    dend_22 { pt3dadd( -25.5727, -20.1243, 22.9017, 0.23 ) }
    dend_22 { pt3dadd( -27.6738, -20.948, 23.255, 1.14 ) }
    dend_22 { pt3dadd( -29.1887, -21.6407, 23.3867, 0.23 ) }
    dend_22 { pt3dadd( -30.0116, -22.0547, 23.4035, 0.91 ) }
    dend_22 { pt3dadd( -32.3095, -23.2498, 23.3905, 0.23 ) }
    dend_22 { pt3dadd( -34.2827, -24.2473, 23.3257, 0.91 ) }
    dend_22 { pt3dadd( -36.4759, -25.3007, 23.2076, 0.23 ) }
    dend_22 { pt3dadd( -39.5065, -26.6921, 22.9765, 0.91 ) }
    dend_22 { pt3dadd( -40.7387, -27.2299, 22.8464, 0.23 ) }
    dend_22 { pt3dadd( -42.7, -28.0401, 22.5897, 0.91 ) }
    dend_22 { pt3dadd( -45.1075, -28.9572, 22.2127, 0.23 ) }
    dend_22 { pt3dadd( -46.3947, -29.4321, 21.997, 0.45 ) }
    dend_22 { pt3dadd( -48.21, -30.0401, 21.6606, 0.23 ) }
    dend_22 { pt3dadd( -49.7327, -30.4614, 21.3828, 0.23 ) }
    dend_22 { pt3dadd( -51.8075, -30.9576, 21.025, 0.91 ) }
    dend_22 { pt3dadd( -53.2231, -31.2436, 20.7947, 0.23 ) }
    dend_22 { pt3dadd( -54.8606, -31.5363, 20.5969, 0.68 ) }
    dend_22 { pt3dadd( -55.4086, -31.6233, 20.5741, 0.23 ) }
    dend_22 { pt3dadd( -57.0298, -31.8349, 20.6676, 0.68 ) }
    dend_22 { pt3dadd( -59.6156, -32.214, 21.0314, 0.23 ) }
    dend_22 { pt3dadd( -60.5551, -32.4105, 21.2194, 0.91 ) }
    dend_22 { pt3dadd( -62.1616, -32.8824, 21.6068, 0.23 ) }
    dend_22 { pt3dadd( -64.2006, -33.6665, 22.1715, 0.68 ) }
    dend_22 { pt3dadd( -66.0337, -34.5146, 22.7188, 0.23 ) }
    dend_22 { pt3dadd( -66.8061, -34.9599, 22.9791, 0.91 ) }
    dend_22 { pt3dadd( -68.5621, -36.1324, 23.6502, 0.23 ) }
    dend_22 { pt3dadd( -69.5539, -36.8135, 24.0207, 0.91 ) }
    dend_22 { pt3dadd( -71.0537, -37.9062, 24.5584, 0.23 ) }
    dend_22 { pt3dadd( -71.9815, -38.6309, 24.8641, 0.91 ) }
    dend_22 { pt3dadd( -73.9057, -40.1594, 25.4643, 0.23 ) }
    dend_22 { pt3dadd( -74.8222, -40.845, 25.7695, 0.23 ) }
    dend_22 { pt3dadd( -75.9328, -41.6259, 26.1501, 0.91 ) }
    dend_22 { pt3dadd( -77.5061, -42.6457, 26.6624, 0.23 ) }
    dend_22 { pt3dadd( -78.5804, -43.2975, 26.9759, 0.68 ) }
    dend_22 { pt3dadd( -81.0234, -44.7568, 27.5505, 0.23 ) }
    dend_22 { pt3dadd( -81.9317, -45.2677, 27.6957, 0.68 ) }
    dend_22 { pt3dadd( -82.8955, -45.8135, 27.7773, 0.23 ) }
    dend_22 { pt3dadd( -84.3698, -46.5859, 27.8275, 0.91 ) }
    dend_22 { pt3dadd( -85.2125, -46.9659, 27.7863, 0.91 ) }
    dend_22 { pt3dadd( -86.8958, -47.679, 27.6021, 0.23 ) }
    dend_22 { pt3dadd( -88.3064, -48.2401, 27.3738, 0.45 ) }
    dend_22 { pt3dadd( -90.4087, -49.0174, 27.0066, 0.23 ) }
    dend_22 { pt3dadd( -91.9687, -49.5342, 26.7399, 0.91 ) }
    dend_22 { pt3dadd( -93.566, -49.9999, 26.4941, 0.23 ) }
    dend_22 { pt3dadd( -95.2662, -50.381, 26.3313, 0.45 ) }
    dend_22 { pt3dadd( -96.658, -50.5928, 26.2678, 0.23 ) }
    dend_22 { pt3dadd( -97.4132, -50.6932, 26.2679, 0.68 ) }
    dend_22 { pt3dadd( -98.8656, -50.8616, 26.3459, 0.23 ) }
    dend_22 { pt3dadd( -100.269, -51.015, 26.4935, 0.91 ) }
    dend_22 { pt3dadd( -102.682, -51.2104, 26.8639, 0.23 ) }
    dend_22 { pt3dadd( -103.43, -51.258, 27.0079, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_22 { pt3dadd( -105.293, -51.3853, 27.4058, 0.23 ) }
    dend_22 { pt3dadd( -107.125, -51.5259, 27.8324, 0.91 ) }
    dend_22 { pt3dadd( -108.274, -51.6184, 28.105, 0.23 ) }
    dend_22 { pt3dadd( -109.45, -51.7102, 28.3691, 0.91 ) }
    dend_22 { pt3dadd( -112.194, -51.8607, 28.9317, 0.23 ) }
    dend_22 { pt3dadd( -114.278, -51.9444, 29.3295, 0.91 ) }
    dend_22 { pt3dadd( -116.663, -52.0135, 29.8025, 0.23 ) }
    dend_22 { pt3dadd( -119.208, -52.1086, 30.3041, 0.23 ) }
    dend_22 { pt3dadd( -121.082, -52.2027, 30.655, 0.23 ) }
    dend_22 { pt3dadd( -122.719, -52.2835, 30.9503, 0.23 ) }
    dend_22 { pt3dadd( -124.226, -52.3229, 31.1837, 0.45 ) }
    dend_22 { pt3dadd( -126.135, -52.3162, 31.4975, 0.23 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 12/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 11.5975, -20.9762, 6.53188, 0.68 ) }
    dend_20 { pt3dadd( 12.7432, -20.7664, 6.39293, 0.68 ) }
    dend_20 { pt3dadd( 14.9868, -20.4693, 6.29148, 0.68 ) }
    dend_20 { pt3dadd( 16.4866, -20.3292, 6.28411, 0.45 ) }
    dend_20 { pt3dadd( 17.3352, -20.3296, 6.32624, 0.68 ) }
    dend_20 { pt3dadd( 19.1485, -20.4856, 6.47502, 0.45 ) }
    dend_20 { pt3dadd( 20.5728, -20.6778, 6.61731, 0.91 ) }
    dend_20 { pt3dadd( 22.1681, -21.0175, 6.87749, 0.68 ) }
    dend_20 { pt3dadd( 23.1329, -21.306, 7.08533, 1.14 ) }
    dend_20 { pt3dadd( 25.2261, -22.0911, 7.58375, 0.23 ) }
    dend_20 { pt3dadd( 26.2806, -22.5623, 7.83577, 0.45 ) }
    dend_20 { pt3dadd( 26.9952, -22.9093, 7.99508, 0.23 ) }
    dend_20 { pt3dadd( 27.7846, -23.2983, 8.13318, 0.91 ) }
    dend_20 { pt3dadd( 29.1351, -23.9586, 8.28994, 0.23 ) }
    dend_20 { pt3dadd( 30.2965, -24.5, 8.39798, 1.14 ) }
    dend_20 { pt3dadd( 32.3172, -25.3876, 8.55422, 0.45 ) }
    dend_20 { pt3dadd( 33.8652, -26.08, 8.67607, 1.14 ) }
    dend_20 { pt3dadd( 36.5805, -27.3396, 8.90753, 0.23 ) }
    dend_20 { pt3dadd( 38.3542, -28.1665, 9.07172, 0.91 ) }
    dend_20 { pt3dadd( 40.1583, -28.9761, 9.26184, 0.23 ) }
    dend_20 { pt3dadd( 42.0943, -29.7932, 9.4884, 0.91 ) }
    dend_20 { pt3dadd( 43.567, -30.3695, 9.68163, 0.23 ) }
    dend_20 { pt3dadd( 44.8396, -30.8395, 9.86484, 0.91 ) }
    dend_20 { pt3dadd( 46.4751, -31.3419, 10.1092, 0.23 ) }
    dend_20 { pt3dadd( 48.1363, -31.733, 10.3404, 1.14 ) }
    dend_20 { pt3dadd( 48.9741, -31.866, 10.4281, 0.23 ) }
    dend_20 { pt3dadd( 49.9981, -31.9506, 10.4976, 0.91 ) }
    dend_20 { pt3dadd( 51.2418, -31.9915, 10.5418, 0.91 ) }
    dend_20 { pt3dadd( 53.0652, -32.0468, 10.5484, 0.23 ) }
    dend_20 { pt3dadd( 54.7589, -32.1316, 10.5189, 0.68 ) }
    dend_20 { pt3dadd( 56.2382, -32.2707, 10.5059, 0.23 ) }
    dend_20 { pt3dadd( 57.0316, -32.3878, 10.5077, 0.68 ) }
    dend_20 { pt3dadd( 58.5098, -32.6682, 10.5278, 0.23 ) }
    dend_20 { pt3dadd( 60.7096, -33.207, 10.5808, 0.23 ) }
    dend_20 { pt3dadd( 62.4094, -33.7314, 10.6492, 1.82 ) }
    dend_20 { pt3dadd( 64.7602, -34.5842, 10.7746, 0.23 ) }
    dend_20 { pt3dadd( 65.6614, -34.9499, 10.8297, 0.91 ) }
    dend_20 { pt3dadd( 66.7683, -35.4384, 10.8789, 0.23 ) }
    dend_20 { pt3dadd( 68.059, -36.0365, 10.9154, 1.14 ) }
    dend_20 { pt3dadd( 70.2817, -37.0855, 10.961, 0.23 ) }
    dend_20 { pt3dadd( 71.7001, -37.7766, 10.9927, 0.45 ) }
    dend_20 { pt3dadd( 74.4055, -39.0885, 11.0443, 0.23 ) }
    dend_20 { pt3dadd( 76.0322, -39.8922, 11.0873, 0.68 ) }
    dend_20 { pt3dadd( 78.0797, -40.8625, 11.1573, 0.23 ) }
    dend_20 { pt3dadd( 79.4859, -41.4764, 11.22, 0.23 ) }
    dend_20 { pt3dadd( 80.194, -41.755, 11.2581, 0.45 ) }
    dend_20 { pt3dadd( 81.3594, -42.1064, 11.3367, 0.23 ) }
    dend_20 { pt3dadd( 82.8301, -42.4045, 11.4518, 0.68 ) }
    dend_20 { pt3dadd( 84.9566, -42.693, 11.6181, 0.23 ) }
    dend_20 { pt3dadd( 86.0964, -42.8098, 11.7029, 0.23 ) }
    dend_20 { pt3dadd( 87.4027, -42.9363, 11.7832, 0.68 ) }
    dend_20 { pt3dadd( 89.6237, -43.1307, 11.8907, 0.23 ) }
    dend_20 { pt3dadd( 91.4461, -43.3227, 11.9742, 0.68 ) }
    dend_20 { pt3dadd( 93.2656, -43.5334, 12.0725, 0.23 ) }
    dend_20 { pt3dadd( 94.328, -43.7126, 12.1448, 1.36 ) }
    dend_20 { pt3dadd( 96.8146, -44.1867, 12.3601, 0.23 ) }
    dend_20 { pt3dadd( 97.7212, -44.3853, 12.4648, 0.23 ) }
    dend_20 { pt3dadd( 99.3869, -44.841, 12.7025, 0.23 ) }
    dend_20 { pt3dadd( 100.182, -45.082, 12.8344, 0.68 ) }
    dend_20 { pt3dadd( 101.591, -45.5015, 13.0313, 0.23 ) }
    dend_20 { pt3dadd( 102.451, -45.7758, 13.1202, 0.91 ) }
    dend_20 { pt3dadd( 103.092, -45.9991, 13.1751, 0.23 ) }
    dend_20 { pt3dadd( 104.756, -46.6325, 13.273, 0.91 ) }
    dend_20 { pt3dadd( 106.001, -47.1041, 13.2777, 0.23 ) }
    dend_20 { pt3dadd( 107.913, -47.851, 13.1936, 0.23 ) }
    dend_20 { pt3dadd( 109.518, -48.4794, 13.0774, 0.23 ) }
    dend_20 { pt3dadd( 109.958, -48.6511, 13.0433, 1.14 ) }
    dend_20 { pt3dadd( 111.57, -49.287, 12.9379, 0.23 ) }
    dend_20 { pt3dadd( 113.387, -49.9651, 12.8476, 0.68 ) }
    dend_20 { pt3dadd( 114.908, -50.4895, 12.801, 0.23 ) }
    dend_20 { pt3dadd( 116.513, -51.0167, 12.8024, 0.68 ) }
    dend_20 { pt3dadd( 119.684, -51.8712, 12.8259, 0.23 ) }
    dend_20 { pt3dadd( 120.682, -52.0935, 12.8332, 0.23 ) }
    dend_20 { pt3dadd( 121.456, -52.2261, 12.8352, 0.23 ) }
    dend_20 { pt3dadd( 122.464, -52.351, 12.8337, 0.68 ) }
    dend_20 { pt3dadd( 125.144, -52.5295, 12.7504, 0.23 ) }
    dend_20 { pt3dadd( 126.781, -52.5591, 12.6478, 0.68 ) }
    dend_20 { pt3dadd( 129.003, -52.4908, 12.4456, 0.23 ) }
    dend_20 { pt3dadd( 129.712, -52.4559, 12.3697, 0.68 ) }
    dend_20 { pt3dadd( 131.316, -52.3446, 12.198, 0.23 ) }
    dend_20 { pt3dadd( 133.393, -52.1456, 12.0256, 0.23 ) }
    dend_20 { pt3dadd( 134.8, -51.9572, 11.9288, 0.23 ) }
    dend_20 { pt3dadd( 135.278, -51.8904, 11.9051, 0.91 ) }
    dend_20 { pt3dadd( 136.677, -51.6776, 11.8712, 0.23 ) }
    dend_20 { pt3dadd( 138.922, -51.3132, 11.8625, 0.91 ) }
    dend_20 { pt3dadd( 142.009, -50.7621, 11.9011, 0.23 ) }
    dend_20 { pt3dadd( 142.873, -50.5991, 11.9251, 0.23 ) }
    dend_20 { pt3dadd( 143.976, -50.3892, 11.9489, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_20 { pt3dadd( 146.171, -49.9744, 11.9713, 0.23 ) }
    dend_20 { pt3dadd( 147.392, -49.7261, 11.9693, 0.91 ) }
    dend_20 { pt3dadd( 149.581, -49.2518, 11.9018, 0.23 ) }
    dend_20 { pt3dadd( 150.159, -49.109, 11.8674, 0.23 ) }
    dend_20 { pt3dadd( 151.492, -48.7958, 11.7837, 0.45 ) }
    dend_20 { pt3dadd( 153.67, -48.3315, 11.632, 0.23 ) }
    dend_20 { pt3dadd( 154.951, -48.0524, 11.538, 0.23 ) }
    dend_20 { pt3dadd( 156.297, -47.7323, 11.4411, 0.91 ) }
    dend_20 { pt3dadd( 157.917, -47.2995, 11.3028, 0.23 ) }
    dend_20 { pt3dadd( 159.294, -46.9074, 11.167, 0.23 ) }
    dend_20 { pt3dadd( 160.68, -46.5136, 11.0232, 0.68 ) }
    dend_20 { pt3dadd( 162.38, -46.0561, 10.8045, 0.23 ) }
    dend_20 { pt3dadd( 163.453, -45.8242, 10.6232, 0.68 ) }
    dend_20 { pt3dadd( 165.227, -45.5072, 10.2799, 0.23 ) }
    dend_20 { pt3dadd( 166.266, -45.3645, 10.0275, 0.45 ) }
    dend_20 { pt3dadd( 167.841, -45.1872, 9.60099, 0.23 ) }
    dend_20 { pt3dadd( 169.312, -45.0714, 9.19312, 0.68 ) }
    dend_20 { pt3dadd( 171.034, -45.0096, 8.73541, 0.23 ) }
    dend_20 { pt3dadd( 172.426, -45.0007, 8.36883, 0.23 ) }
    dend_20 { pt3dadd( 174.917, -45.025, 7.74599, 0.23 ) }
    dend_20 { pt3dadd( 175.904, -45.0281, 7.50598, 0.23 ) }
    dend_20 { pt3dadd( 177.472, -45.0032, 7.13324, 0.45 ) }
    dend_20 { pt3dadd( 178.862, -44.9458, 6.86898, 0.23 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 23/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 11.5975, -20.9762, 6.53188, 1.82 ) }
    dend_15 { pt3dadd( 11.3716, -23.7621, 6.59517, 1.82 ) }
    dend_15 { pt3dadd( 11.075, -27.4219, 6.67832, 1.82 ) }
    // Section: dend_12, id: dend_12, parent: dend_4 (entry count 26/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -26.9931, 21.7332, 3.66008, 0.45 ) }
    dend_12 { pt3dadd( -28.4752, 24.3861, 2.91868, 0.45 ) }
    dend_12 { pt3dadd( -29.1253, 25.4588, 2.61751, 0.91 ) }
    dend_12 { pt3dadd( -30.2254, 27.2511, 2.19029, 0.23 ) }
    dend_12 { pt3dadd( -31.1808, 29.0058, 1.81677, 0.23 ) }
    dend_12 { pt3dadd( -31.8855, 30.4817, 1.51663, 0.45 ) }
    dend_12 { pt3dadd( -32.6461, 32.3088, 1.16933, 1.14 ) }
    dend_12 { pt3dadd( -33.4245, 34.4098, 0.851142, 0.23 ) }
    dend_12 { pt3dadd( -34.4231, 37.6475, 0.438887, 0.68 ) }
    dend_12 { pt3dadd( -35.3221, 41.4013, 0.0128052, 0.23 ) }
    dend_12 { pt3dadd( -35.7549, 43.5975, -0.178382, 0.91 ) }
    dend_12 { pt3dadd( -36.0733, 45.7426, -0.346187, 0.68 ) }
    dend_12 { pt3dadd( -36.5119, 49.0495, -0.584162, 0.23 ) }
    dend_12 { pt3dadd( -36.6945, 50.5052, -0.694378, 0.23 ) }
    dend_12 { pt3dadd( -36.9601, 52.5825, -0.87686, 0.23 ) }
    dend_12 { pt3dadd( -37.4802, 55.9827, -1.20917, 1.36 ) }
    dend_12 { pt3dadd( -37.7695, 57.5679, -1.38156, 0.23 ) }
    dend_12 { pt3dadd( -38.2162, 59.7814, -1.6481, 1.14 ) }
    dend_12 { pt3dadd( -38.7011, 62.0248, -1.95344, 0.23 ) }
    dend_12 { pt3dadd( -39.2238, 63.9889, -2.2048, 0.23 ) }
    dend_12 { pt3dadd( -39.5786, 65.1107, -2.33901, 1.14 ) }
    dend_12 { pt3dadd( -40.7872, 68.5238, -2.77074, 0.23 ) }
    dend_12 { pt3dadd( -41.4232, 70.0588, -2.95139, 0.68 ) }
    dend_12 { pt3dadd( -42.2687, 71.8782, -3.13114, 0.23 ) }
    dend_12 { pt3dadd( -43.197, 73.5731, -3.28124, 1.14 ) }
    dend_12 { pt3dadd( -44.4305, 75.5374, -3.44533, 0.23 ) }
    dend_12 { pt3dadd( -45.4185, 77.0213, -3.55423, 0.91 ) }
    dend_12 { pt3dadd( -46.004, 77.8109, -3.65919, 0.23 ) }
    dend_12 { pt3dadd( -46.8163, 78.8875, -3.8862, 0.91 ) }
    dend_12 { pt3dadd( -47.966, 80.4741, -4.33162, 0.23 ) }
    dend_12 { pt3dadd( -48.6089, 81.4213, -4.66206, 0.23 ) }
    dend_12 { pt3dadd( -49.2952, 82.5052, -5.11012, 0.23 ) }
    dend_12 { pt3dadd( -50.5189, 84.776, -6.1335, 0.91 ) }
    dend_12 { pt3dadd( -51.1271, 86.1682, -6.79758, 0.23 ) }
    dend_12 { pt3dadd( -51.6201, 87.4883, -7.44068, 0.91 ) }
    dend_12 { pt3dadd( -52.0929, 88.9574, -8.14427, 0.23 ) }
    dend_12 { pt3dadd( -52.363, 89.9541, -8.62314, 0.91 ) }
    dend_12 { pt3dadd( -53.2492, 93.6977, -10.3592, 0.23 ) }
    dend_12 { pt3dadd( -53.5589, 95.2054, -10.9923, 1.14 ) }
    dend_12 { pt3dadd( -54.0879, 97.7105, -11.9522, 0.23 ) }
    dend_12 { pt3dadd( -54.3884, 99.1169, -12.4644, 0.91 ) }
    dend_12 { pt3dadd( -54.7222, 100.738, -12.9921, 0.23 ) }
    dend_12 { pt3dadd( -55.1995, 102.966, -13.6291, 0.23 ) }
    dend_12 { pt3dadd( -55.5376, 104.536, -14.0014, 0.91 ) }
    dend_12 { pt3dadd( -56.0665, 107.042, -14.5371, 0.23 ) }
    dend_12 { pt3dadd( -56.3539, 108.525, -14.8359, 0.91 ) }
    dend_12 { pt3dadd( -56.8787, 111.29, -15.3425, 0.23 ) }
    dend_12 { pt3dadd( -57.2296, 113.131, -15.6643, 0.91 ) }
    dend_12 { pt3dadd( -57.6391, 115.423, -16.092, 0.23 ) }
    dend_12 { pt3dadd( -57.8337, 116.556, -16.3141, 0.91 ) }
    dend_12 { pt3dadd( -58.344, 119.561, -16.9554, 0.23 ) }
    dend_12 { pt3dadd( -58.7656, 122.275, -17.5535, 0.91 ) }
    dend_12 { pt3dadd( -59.1318, 124.495, -18.0592, 0.23 ) }
    dend_12 { pt3dadd( -59.3787, 125.978, -18.3901, 0.91 ) }
    dend_12 { pt3dadd( -60.0198, 129.752, -19.2317, 0.23 ) }
    dend_12 { pt3dadd( -60.2036, 130.909, -19.4817, 1.14 ) }
    dend_12 { pt3dadd( -60.4126, 132.807, -19.8888, 0.23 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 83/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -26.9931, 21.7332, 3.66008, 0.68 ) }
    dend_5 { pt3dadd( -27.8304, 21.6267, 4.51727, 0.68 ) }
    dend_5 { pt3dadd( -29.5329, 21.5851, 6.1536, 0.91 ) }
    dend_5 { pt3dadd( -30.9041, 21.8601, 7.48181, 0.91 ) }
    dend_5 { pt3dadd( -32.3303, 22.4518, 8.8679, 0.91 ) }
    dend_5 { pt3dadd( -34.1177, 23.1935, 10.6051, 0.23 ) }
    dend_5 { pt3dadd( -35.3831, 23.7186, 11.8349, 1.14 ) }
    dend_5 { pt3dadd( -36.8016, 24.3673, 13.1583, 0.68 ) }
    dend_5 { pt3dadd( -39.0603, 25.5288, 15.1066, 1.59 ) }
    dend_5 { pt3dadd( -41.183, 27.0594, 16.8136, 0.68 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 93/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -16.2195, -3.22051, 2.43754, 0.68 ) }
    dend_3 { pt3dadd( -17.5637, -4.46192, 2.92481, 0.68 ) }
    dend_3 { pt3dadd( -18.1619, -5.01997, 3.18442, 0.68 ) }
    dend_3 { pt3dadd( -19.2645, -6.08802, 3.76573, 0.23 ) }
    dend_3 { pt3dadd( -20.5692, -7.46407, 4.51195, 0.91 ) }
    dend_3 { pt3dadd( -21.6466, -8.75892, 5.173, 0.23 ) }
    dend_3 { pt3dadd( -22.2983, -9.71022, 5.6387, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_3 { pt3dadd( -22.7794, -10.9729, 6.15394, 0.23 ) }
    dend_3 { pt3dadd( -22.8685, -11.8376, 6.47151, 0.23 ) }
    dend_3 { pt3dadd( -22.7156, -12.7947, 6.80719, 0.23 ) }
    dend_3 { pt3dadd( -22.4206, -13.8854, 7.14941, 0.68 ) }
    dend_3 { pt3dadd( -22.0109, -15.3763, 7.57059, 0.68 ) }
    dend_3 { pt3dadd( -21.5366, -17.4853, 8.1309, 1.14 ) }
    dend_3 { pt3dadd( -21.3306, -19.0817, 8.46983, 0.23 ) }
    dend_3 { pt3dadd( -21.3267, -20.3156, 8.68704, 0.68 ) }
    dend_3 { pt3dadd( -21.5088, -21.64, 8.88241, 0.23 ) }
    dend_3 { pt3dadd( -21.8347, -22.802, 8.97935, 0.45 ) }
    dend_3 { pt3dadd( -22.1885, -23.7186, 8.98961, 1.14 ) }
    dend_3 { pt3dadd( -22.6241, -24.6323, 8.93062, 0.23 ) }
    dend_3 { pt3dadd( -23.2065, -25.6939, 8.83763, 0.91 ) }
    dend_3 { pt3dadd( -24.1201, -27.2213, 8.6645, 0.23 ) }
    dend_3 { pt3dadd( -24.8747, -28.5559, 8.4331, 1.14 ) }
    dend_3 { pt3dadd( -25.1329, -29.0315, 8.33706, 0.23 ) }
    dend_3 { pt3dadd( -25.5964, -29.8778, 8.1703, 0.68 ) }
    dend_3 { pt3dadd( -26.0175, -30.6533, 8.05466, 0.23 ) }
    dend_3 { pt3dadd( -26.4701, -31.508, 7.96488, 1.14 ) }
    dend_3 { pt3dadd( -27.1706, -32.8791, 7.90637, 0.23 ) }
    dend_3 { pt3dadd( -27.8442, -34.1375, 7.95631, 0.91 ) }
    dend_3 { pt3dadd( -28.0726, -34.6049, 8.01441, 0.91 ) }
    dend_3 { pt3dadd( -28.5755, -35.8827, 8.30782, 0.23 ) }
    dend_3 { pt3dadd( -28.9859, -37.0174, 8.78721, 0.23 ) }
    dend_3 { pt3dadd( -29.3537, -38.1728, 9.56163, 0.23 ) }
    dend_3 { pt3dadd( -29.5502, -39.0762, 10.4923, 1.14 ) }
    dend_3 { pt3dadd( -29.5085, -40.0563, 11.8349, 0.23 ) }
    dend_3 { pt3dadd( -29.1198, -40.853, 13.1927, 0.23 ) }
    dend_3 { pt3dadd( -28.165, -41.7213, 15.0106, 0.23 ) }
    dend_3 { pt3dadd( -27.2488, -42.2613, 16.1438, 0.68 ) }
    dend_3 { pt3dadd( -26.2219, -42.703, 17.0526, 0.23 ) }
    dend_3 { pt3dadd( -24.767, -43.1994, 18.0127, 0.91 ) }
    dend_3 { pt3dadd( -22.793, -43.6782, 18.9989, 0.23 ) }
    dend_3 { pt3dadd( -21.5892, -43.9103, 19.4345, 0.23 ) }
    dend_3 { pt3dadd( -19.3639, -44.328, 20.0501, 0.23 ) }
    dend_3 { pt3dadd( -18.1221, -44.5828, 20.3421, 0.23 ) }
    dend_3 { pt3dadd( -16.7588, -44.8374, 20.6126, 0.68 ) }
    dend_3 { pt3dadd( -15.3222, -45.0166, 20.85, 0.23 ) }
    dend_3 { pt3dadd( -14.0532, -45.1226, 21.0168, 0.68 ) }
    dend_3 { pt3dadd( -12.202, -45.1582, 21.2497, 0.23 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 40/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -16.2195, -3.22051, 2.43754, 0.68 ) }
    dend_2 { pt3dadd( -17.6404, -3.10943, 1.7135, 0.68 ) }
    dend_2 { pt3dadd( -19.8032, -2.79683, 0.82998, 0.68 ) }
    dend_2 { pt3dadd( -21.4351, -2.54957, 0.304061, 0.68 ) }
    dend_2 { pt3dadd( -23.7692, -2.17125, -0.370048, 1.14 ) }
    dend_2 { pt3dadd( -26.0834, -1.76093, -0.944167, 0.23 ) }
    dend_2 { pt3dadd( -28.0613, -1.41947, -1.34987, 0.68 ) }
    dend_2 { pt3dadd( -30.2384, -1.01216, -1.58926, 0.45 ) }
    dend_2 { pt3dadd( -32.7859, -0.595159, -1.64954, 0.68 ) }
    dend_2 { pt3dadd( -34.4183, -0.432674, -1.59602, 0.68 ) }
    dend_2 { pt3dadd( -35.9184, -0.387066, -1.4713, 0.68 ) }
    dend_2 { pt3dadd( -37.6196, -0.456442, -1.26531, 0.68 ) }
    dend_2 { pt3dadd( -38.645, -0.565767, -1.12834, 0.68 ) }
    dend_2 { pt3dadd( -40.4994, -0.830457, -0.892977, 0.68 ) }
    dend_2 { pt3dadd( -42.8549, -1.20154, -0.596376, 0.68 ) }
    dend_2 { pt3dadd( -45.0124, -1.54712, -0.339895, 0.68 ) }
    dend_2 { pt3dadd( -47.4182, -1.88792, -0.0959265, 0.91 ) }
    dend_2 { pt3dadd( -49.6502, -2.12913, 0.100961, 0.45 ) }
    dend_2 { pt3dadd( -51.6359, -2.31761, 0.255303, 0.45 ) }
    dend_2 { pt3dadd( -53.8767, -2.51042, 0.394365, 0.45 ) }
    dend_2 { pt3dadd( -55.2803, -2.63582, 0.437014, 0.45 ) }
    dend_2 { pt3dadd( -56.7908, -2.75501, 0.409127, 0.45 ) }
    dend_2 { pt3dadd( -58.366, -2.89592, 0.24398, 0.23 ) }
    dend_2 { pt3dadd( -60.2094, -3.05933, -0.100968, 0.23 ) }
    dend_2 { pt3dadd( -61.5344, -3.19854, -0.441499, 0.23 ) }
    dend_2 { pt3dadd( -63.2624, -3.37776, -0.955012, 0.45 ) }
    dend_2 { pt3dadd( -65.2307, -3.56368, -1.5401, 0.23 ) }
    dend_2 { pt3dadd( -67.4818, -3.74955, -2.19335, 0.23 ) }
    dend_2 { pt3dadd( -69.4505, -3.89663, -2.70449, 0.45 ) }
    dend_2 { pt3dadd( -70.8484, -3.97477, -2.98572, 0.45 ) }
    dend_2 { pt3dadd( -72.8354, -4.13345, -3.30406, 0.45 ) }
    dend_2 { pt3dadd( -74.6636, -4.3101, -3.54584, 0.23 ) }
    dend_2 { pt3dadd( -75.4543, -4.39805, -3.62765, 0.23 ) }
    dend_2 { pt3dadd( -77.2074, -4.56714, -3.74524, 2.05 ) }
    dend_2 { pt3dadd( -81.1997, -4.96086, -4.01055, 0.23 ) }
    dend_2 { pt3dadd( -83.2401, -5.18826, -4.16755, 0.23 ) }
    dend_2 { pt3dadd( -91.8781, -3.7482, -4.47271, 0.23 ) }
    dend_2 { pt3dadd( -100.631, -3.95213, -4.13869, 0.23 ) }
    // Section: dend_52, id: dend_52, parent: dend_46 (entry count 78/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 15.9007, 10.7785, 3.33693, 0.68 ) }
    dend_52 { pt3dadd( 17.6481, 12.2781, 2.45669, 0.68 ) }
    dend_52 { pt3dadd( 18.5868, 13.2697, 1.90916, 0.91 ) }
    dend_52 { pt3dadd( 20.0674, 15.0044, 1.02803, 0.68 ) }
    dend_52 { pt3dadd( 21.3267, 16.4907, 0.323804, 0.68 ) }
    dend_52 { pt3dadd( 22.6548, 17.9881, -0.386157, 0.68 ) }
    dend_52 { pt3dadd( 23.7386, 19.1194, -0.969735, 0.68 ) }
    dend_52 { pt3dadd( 24.8412, 20.2732, -1.58062, 0.68 ) }
    dend_52 { pt3dadd( 25.7603, 21.104, -2.05438, 0.68 ) }
    dend_52 { pt3dadd( 27.0821, 22.1268, -2.68094, 0.68 ) }
    dend_52 { pt3dadd( 28.5452, 23.095, -3.284, 1.14 ) }
    dend_52 { pt3dadd( 30.2752, 24.0825, -3.91653, 0.68 ) }
    dend_52 { pt3dadd( 31.5498, 24.7271, -4.36983, 0.68 ) }
    dend_52 { pt3dadd( 32.8532, 25.377, -4.83827, 0.68 ) }
    dend_52 { pt3dadd( 34.0093, 25.9634, -5.24292, 1.14 ) }
    dend_52 { pt3dadd( 35.7133, 26.8659, -5.799, 0.45 ) }
    dend_52 { pt3dadd( 37.7027, 27.9853, -6.37928, 0.68 ) }
    dend_52 { pt3dadd( 39.2119, 28.914, -6.79009, 0.68 ) }
    dend_52 { pt3dadd( 40.9774, 30.1106, -7.29658, 0.68 ) }
    dend_52 { pt3dadd( 42.6747, 31.3866, -7.8134, 0.68 ) }
    dend_52 { pt3dadd( 43.973, 32.5084, -8.26521, 0.45 ) }
    dend_52 { pt3dadd( 44.5037, 33.1163, -8.48376, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_52 { pt3dadd( 44.9395, 33.8464, -8.69445, 0.45 ) }
    dend_52 { pt3dadd( 45.4606, 35.0968, -9.05751, 0.45 ) }
    dend_52 { pt3dadd( 46.0011, 36.4145, -9.52914, 0.45 ) }
    dend_52 { pt3dadd( 46.8432, 37.9431, -10.2082, 0.45 ) }
    dend_52 { pt3dadd( 47.9216, 39.322, -10.8988, 0.45 ) }
    dend_52 { pt3dadd( 48.5461, 40.0219, -11.2448, 1.14 ) }
    dend_52 { pt3dadd( 49.9343, 41.4695, -11.9249, 0.45 ) }
    dend_52 { pt3dadd( 51.4139, 42.871, -12.5705, 0.45 ) }
    dend_52 { pt3dadd( 53.1714, 44.4222, -13.2673, 0.45 ) }
    dend_52 { pt3dadd( 54.6348, 45.6819, -13.8088, 0.45 ) }
    dend_52 { pt3dadd( 56.4709, 47.2802, -14.475, 0.68 ) }
    dend_52 { pt3dadd( 57.3059, 48.0374, -14.7564, 0.68 ) }
    dend_52 { pt3dadd( 58.5425, 49.2547, -15.1202, 0.45 ) }
    dend_52 { pt3dadd( 59.8832, 50.7395, -15.4954, 0.45 ) }
    dend_52 { pt3dadd( 60.3291, 51.2541, -15.6131, 1.14 ) }
    dend_52 { pt3dadd( 60.9401, 51.8956, -15.7689, 0.23 ) }
    dend_52 { pt3dadd( 62.5664, 53.2611, -16.1311, 0.23 ) }
    dend_52 { pt3dadd( 63.1967, 53.7629, -16.26, 0.23 ) }
    dend_52 { pt3dadd( 69.6177, 60.2917, -17.9227, 0.23 ) }
    dend_52 { pt3dadd( 74.6907, 67.8398, -19.8999, 0.23 ) }
    dend_52 { pt3dadd( 79.4375, 75.7468, -21.1512, 0.23 ) }
    dend_52 { pt3dadd( 85.3, 82.9689, -20.8484, 0.23 ) }
    dend_52 { pt3dadd( 91.3834, 89.7933, -19.1053, 0.23 ) }
    dend_52 { pt3dadd( 95.9575, 97.209, -15.8337, 0.23 ) }
    dend_52 { pt3dadd( 101.197, 104.446, -13.226, 0.23 ) }
    dend_52 { pt3dadd( 105.397, 112.512, -11.2489, 0.23 ) }
    dend_52 { pt3dadd( 109.292, 120.83, -9.74446, 0.23 ) }
    dend_52 { pt3dadd( 113.505, 128.557, -6.71719, 0.23 ) }
    dend_52 { pt3dadd( 116.511, 136.32, -2.55605, 0.23 ) }
    dend_52 { pt3dadd( 120.522, 144.074, 0.670082, 0.23 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 30/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 15.9007, 10.7785, 3.33693, 0.68 ) }
    dend_47 { pt3dadd( 17.6898, 12.9412, 3.82005, 0.68 ) }
    dend_47 { pt3dadd( 19.0564, 14.4866, 4.07488, 0.68 ) }
    dend_47 { pt3dadd( 21.5924, 17.2831, 4.45358, 0.68 ) }
    dend_47 { pt3dadd( 22.8396, 18.6675, 4.59827, 0.68 ) }
    dend_47 { pt3dadd( 24.5081, 20.5846, 4.77967, 0.68 ) }
    dend_47 { pt3dadd( 25.9602, 22.3637, 4.93111, 0.68 ) }
    dend_47 { pt3dadd( 27.5934, 24.4478, 5.0526, 0.68 ) }
    dend_47 { pt3dadd( 28.3699, 25.5126, 5.10022, 1.14 ) }
    dend_47 { pt3dadd( 29.3288, 27.0191, 5.17937, 0.91 ) }
    dend_47 { pt3dadd( 30.0909, 28.3997, 5.28672, 0.91 ) }
    dend_47 { pt3dadd( 31.3209, 30.9711, 5.55542, 0.68 ) }
    dend_47 { pt3dadd( 32.2198, 33.211, 5.85625, 0.91 ) }
    dend_47 { pt3dadd( 33.0118, 35.5098, 6.2603, 0.91 ) }
    dend_47 { pt3dadd( 33.9577, 38.6421, 6.88706, 0.91 ) }
    dend_47 { pt3dadd( 34.4971, 40.6585, 7.34666, 0.91 ) }
    dend_47 { pt3dadd( 34.8054, 41.8881, 7.64354, 0.91 ) }
    dend_47 { pt3dadd( 35.2268, 43.4582, 8.05352, 0.91 ) }
    dend_47 { pt3dadd( 35.6986, 45.1596, 8.51556, 0.68 ) }
    dend_47 { pt3dadd( 36.3848, 47.4277, 9.14258, 0.68 ) }
    dend_47 { pt3dadd( 37.0571, 49.5628, 9.73458, 1.14 ) }
    dend_47 { pt3dadd( 37.8717, 52.0323, 10.395, 0.91 ) }
    dend_47 { pt3dadd( 38.7044, 54.6634, 11.0894, 0.91 ) }
    dend_47 { pt3dadd( 39.0764, 55.8568, 11.3877, 0.91 ) }
    dend_47 { pt3dadd( 39.673, 57.6686, 11.7997, 0.91 ) }
    dend_47 { pt3dadd( 40.728, 60.7708, 12.4496, 0.91 ) }
    dend_47 { pt3dadd( 41.4514, 63.0397, 12.9248, 0.91 ) }
    dend_47 { pt3dadd( 42.0282, 65.0259, 13.3826, 1.36 ) }
    dend_47 { pt3dadd( 42.6672, 67.2257, 13.9436, 0.68 ) }
    dend_47 { pt3dadd( 43.3697, 69.297, 14.511, 0.91 ) }
    dend_47 { pt3dadd( 44.0315, 71.0291, 15.0158, 0.68 ) }
    dend_47 { pt3dadd( 44.8529, 72.918, 15.5605, 0.68 ) }
    dend_47 { pt3dadd( 45.8031, 74.9882, 16.1524, 0.91 ) }
    dend_47 { pt3dadd( 47.1696, 77.8445, 16.9864, 0.91 ) }
    dend_47 { pt3dadd( 48.2506, 80.2053, 17.7101, 0.45 ) }
    dend_47 { pt3dadd( 49.1192, 82.2588, 18.3434, 0.68 ) }
    dend_47 { pt3dadd( 50.0317, 84.56, 19.0425, 0.91 ) }
    dend_47 { pt3dadd( 50.6263, 86.0798, 19.4992, 0.23 ) }
    dend_47 { pt3dadd( 51.5732, 88.6078, 20.2533, 0.45 ) }
    dend_47 { pt3dadd( 52.2443, 90.5455, 20.7849, 0.45 ) }
    dend_47 { pt3dadd( 53.1544, 93.1947, 21.4704, 0.45 ) }
    dend_47 { pt3dadd( 53.7135, 94.869, 21.891, 1.14 ) }
    dend_47 { pt3dadd( 54.8729, 98.4789, 22.7838, 0.68 ) }
    dend_47 { pt3dadd( 55.7652, 101.204, 23.3983, 0.68 ) }
    dend_47 { pt3dadd( 56.7763, 104.08, 23.9633, 0.68 ) }
    dend_47 { pt3dadd( 57.8893, 106.902, 24.4664, 0.45 ) }
    dend_47 { pt3dadd( 58.8415, 109.116, 24.8502, 0.45 ) }
    dend_47 { pt3dadd( 59.6455, 110.973, 25.1842, 0.68 ) }
    dend_47 { pt3dadd( 60.4364, 112.867, 25.5516, 0.91 ) }
    dend_47 { pt3dadd( 61.1292, 114.556, 25.9514, 0.45 ) }
    dend_47 { pt3dadd( 61.8604, 116.398, 26.5015, 0.68 ) }
    dend_47 { pt3dadd( 62.472, 118.089, 27.0194, 0.45 ) }
    dend_47 { pt3dadd( 63.018, 119.601, 27.4683, 0.45 ) }
    dend_47 { pt3dadd( 63.3385, 120.528, 27.7208, 0.45 ) }
    dend_47 { pt3dadd( 63.8021, 122.005, 28.0558, 0.91 ) }
    dend_47 { pt3dadd( 64.8047, 125.142, 28.5932, 0.68 ) }
    dend_47 { pt3dadd( 66.0737, 128.597, 28.9774, 0.68 ) }
    dend_47 { pt3dadd( 66.9836, 130.664, 29.0778, 0.45 ) }
    dend_47 { pt3dadd( 67.853, 132.321, 29.0761, 0.45 ) }
    dend_47 { pt3dadd( 68.9069, 134.184, 29.0158, 0.45 ) }
    dend_47 { pt3dadd( 69.94, 135.913, 28.8994, 0.45 ) }
    dend_47 { pt3dadd( 71.0832, 137.74, 28.7147, 0.45 ) }
    dend_47 { pt3dadd( 71.8076, 138.846, 28.599, 0.45 ) }
    dend_47 { pt3dadd( 72.3101, 139.629, 28.5583, 0.45 ) }
    dend_47 { pt3dadd( 73.3181, 141.125, 28.6113, 0.45 ) }
    dend_47 { pt3dadd( 74.433, 142.691, 28.7592, 0.45 ) }
    dend_47 { pt3dadd( 75.5367, 144.27, 28.9268, 0.68 ) }
    dend_47 { pt3dadd( 77.369, 146.962, 29.2222, 0.23 ) }
    dend_47 { pt3dadd( 78.5529, 148.666, 29.4281, 0.45 ) }
    dend_47 { pt3dadd( 80.2468, 150.923, 29.7373, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_47 { pt3dadd( 81.3608, 152.296, 29.9608, 0.91 ) }
    dend_47 { pt3dadd( 83.2351, 154.527, 30.3978, 0.23 ) }
    dend_47 { pt3dadd( 83.9813, 155.466, 30.6234, 0.45 ) }
    dend_47 { pt3dadd( 85.2546, 157.22, 31.1171, 0.68 ) }
    dend_47 { pt3dadd( 86.6901, 159.48, 31.8278, 0.45 ) }
    dend_47 { pt3dadd( 87.9495, 161.924, 32.6739, 0.45 ) }
    dend_47 { pt3dadd( 88.5809, 163.394, 33.2543, 0.45 ) }
    dend_47 { pt3dadd( 89.3842, 165.529, 34.1775, 0.45 ) }
    dend_47 { pt3dadd( 89.9071, 167.092, 34.867, 0.45 ) }
    dend_47 { pt3dadd( 90.4628, 169.269, 35.847, 0.45 ) }
    dend_47 { pt3dadd( 90.7073, 170.945, 36.6359, 0.45 ) }
    dend_47 { pt3dadd( 90.7447, 171.826, 37.0828, 0.45 ) }
    dend_47 { pt3dadd( 90.6944, 173.467, 37.9749, 0.45 ) }
    dend_47 { pt3dadd( 90.5089, 174.966, 38.8674, 0.45 ) }
    dend_47 { pt3dadd( 90.2229, 176.217, 39.6487, 0.45 ) }
    dend_47 { pt3dadd( 89.9276, 177.298, 40.3542, 0.45 ) }
    dend_47 { pt3dadd( 89.4197, 178.954, 41.4616, 0.68 ) }
    dend_47 { pt3dadd( 88.8568, 180.676, 42.6031, 0.68 ) }
    dend_47 { pt3dadd( 88.0364, 183.168, 44.1499, 0.45 ) }
    dend_47 { pt3dadd( 87.3318, 185.432, 45.4121, 0.45 ) }
    dend_47 { pt3dadd( 86.8226, 187.438, 46.4148, 0.45 ) }
    dend_47 { pt3dadd( 86.5882, 188.79, 47.0421, 1.14 ) }
    dend_47 { pt3dadd( 86.3676, 190.766, 47.8877, 0.45 ) }
    dend_47 { pt3dadd( 86.1842, 193.455, 48.9543, 0.68 ) }
    dend_47 { pt3dadd( 86.1129, 195.278, 49.6338, 0.91 ) }
    dend_47 { pt3dadd( 86.0628, 196.943, 50.2517, 0.45 ) }
    dend_47 { pt3dadd( 85.9751, 198.937, 50.9901, 0.68 ) }
    dend_47 { pt3dadd( 85.9293, 200.068, 51.4299, 0.68 ) }
    dend_47 { pt3dadd( 85.8524, 201.726, 52.1386, 0.45 ) }
    dend_47 { pt3dadd( 85.679, 204.315, 53.3674, 0.45 ) }
    dend_47 { pt3dadd( 85.4459, 205.957, 54.1965, 0.45 ) }
    dend_47 { pt3dadd( 85.1365, 207.284, 54.8978, 0.45 ) }
    dend_47 { pt3dadd( 84.7786, 208.482, 55.5345, 0.68 ) }
    dend_47 { pt3dadd( 84.2287, 210.28, 56.5708, 0.45 ) }
    dend_47 { pt3dadd( 83.9304, 211.216, 57.1648, 0.91 ) }
    dend_47 { pt3dadd( 83.2517, 213.493, 58.7288, 0.23 ) }
    dend_47 { pt3dadd( 82.9364, 214.551, 59.486, 0.45 ) }
    dend_47 { pt3dadd( 82.4605, 216.485, 60.8375, 0.23 ) }
    dend_47 { pt3dadd( 82.1795, 218.034, 61.8689, 0.23 ) }
    dend_47 { pt3dadd( 82.0282, 219.663, 62.8989, 1.14 ) }
    dend_47 { pt3dadd( 81.9523, 222.076, 64.3593, 0.23 ) }
    dend_47 { pt3dadd( 81.9881, 223.642, 65.2553, 0.23 ) }
    dend_47 { pt3dadd( 82.0511, 225.99, 66.5283, 0.23 ) }
    dend_47 { pt3dadd( 82.06, 227.469, 67.2896, 0.91 ) }
    dend_47 { pt3dadd( 81.9871, 229.25, 68.1497, 0.23 ) }
    dend_47 { pt3dadd( 81.8916, 230.523, 68.7435, 0.23 ) }
    dend_47 { pt3dadd( 81.7583, 231.903, 69.3711, 0.23 ) }
    dend_47 { pt3dadd( 81.66, 232.994, 69.8706, 0.91 ) }
    dend_47 { pt3dadd( 81.4736, 236.017, 71.2265, 0.23 ) }
    dend_47 { pt3dadd( 81.4492, 237.282, 71.8042, 0.68 ) }
    dend_47 { pt3dadd( 81.4773, 238.382, 72.3162, 0.23 ) }
    dend_47 { pt3dadd( 81.585, 239.785, 72.9852, 0.23 ) }
    dend_47 { pt3dadd( 81.7719, 241.418, 73.7843, 0.68 ) }
    dend_47 { pt3dadd( 82.1491, 243.675, 74.9167, 0.91 ) }
    dend_47 { pt3dadd( 82.5906, 245.95, 76.0861, 0.23 ) }
    dend_47 { pt3dadd( 82.846, 247.578, 76.9397, 0.91 ) }
    dend_47 { pt3dadd( 83.0294, 249.475, 77.9602, 0.23 ) }
    dend_47 { pt3dadd( 83.0919, 251.204, 78.8917, 0.91 ) }
    dend_47 { pt3dadd( 83.1168, 252.625, 79.6372, 0.23 ) }
    dend_47 { pt3dadd( 83.1384, 254.031, 80.3647, 0.68 ) }
    dend_47 { pt3dadd( 83.2906, 256.779, 81.6867, 0.45 ) }
    dend_47 { pt3dadd( 83.3411, 257.614, 82.0829, 0.45 ) }
    dend_47 { pt3dadd( 83.4639, 259.7, 83.0789, 0.45 ) }
    dend_47 { pt3dadd( 83.5739, 261.668, 84.007, 1.14 ) }
    dend_47 { pt3dadd( 83.7715, 264.494, 85.3065, 0.23 ) }
    dend_47 { pt3dadd( 84.0308, 266.225, 86.0844, 0.23 ) }
    // Section: dend_45, id: dend_45, parent: dend_41 (entry count 66/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 15.2145, 14.5795, 8.08279, 0.91 ) }
    dend_45 { pt3dadd( 16.4424, 16.4521, 8.54276, 0.91 ) }
    dend_45 { pt3dadd( 17.2613, 17.7224, 8.8759, 1.14 ) }
    dend_45 { pt3dadd( 18.5586, 19.7957, 9.45669, 0.45 ) }
    dend_45 { pt3dadd( 19.1927, 20.8478, 9.77719, 1.14 ) }
    dend_45 { pt3dadd( 20.1032, 22.332, 10.3009, 0.68 ) }
    dend_45 { pt3dadd( 20.8463, 23.5452, 10.7866, 1.36 ) }
    dend_45 { pt3dadd( 21.4689, 24.632, 11.2941, 0.91 ) }
    dend_45 { pt3dadd( 21.9088, 25.4227, 11.7028, 1.36 ) }
    dend_45 { pt3dadd( 22.8211, 27.0856, 12.6168, 0.68 ) }
    dend_45 { pt3dadd( 23.3722, 28.2109, 13.2404, 1.14 ) }
    dend_45 { pt3dadd( 23.7893, 29.2324, 13.7959, 0.23 ) }
    dend_45 { pt3dadd( 23.9657, 29.7633, 14.077, 0.68 ) }
    dend_45 { pt3dadd( 24.1845, 30.5231, 14.4378, 0.23 ) }
    dend_45 { pt3dadd( 24.4624, 31.8567, 14.9841, 0.23 ) }
    dend_45 { pt3dadd( 24.5474, 32.4965, 15.2044, 1.14 ) }
    dend_45 { pt3dadd( 24.6771, 33.9548, 15.651, 0.23 ) }
    dend_45 { pt3dadd( 24.8909, 35.9554, 16.2241, 1.36 ) }
    dend_45 { pt3dadd( 25.0949, 37.3822, 16.6229, 1.36 ) }
    dend_45 { pt3dadd( 25.3648, 38.8165, 17.016, 0.23 ) }
    dend_45 { pt3dadd( 25.5432, 39.6197, 17.2276, 1.14 ) }
    dend_45 { pt3dadd( 25.8063, 40.5652, 17.4495, 1.14 ) }
    dend_45 { pt3dadd( 26.3966, 42.2917, 17.796, 0.23 ) }
    dend_45 { pt3dadd( 26.8887, 43.5339, 18.0324, 1.36 ) }
    dend_45 { pt3dadd( 27.2339, 44.4131, 18.2047, 1.36 ) }
    dend_45 { pt3dadd( 27.5707, 45.3585, 18.3823, 0.23 ) }
    dend_45 { pt3dadd( 27.8867, 46.3975, 18.6063, 1.36 ) }
    dend_45 { pt3dadd( 28.0045, 46.9157, 18.7246, 1.36 ) }
    dend_45 { pt3dadd( 28.1988, 48.4099, 19.1018, 0.45 ) }
    dend_45 { pt3dadd( 28.3193, 49.7309, 19.4569, 1.14 ) }
    dend_45 { pt3dadd( 28.4013, 50.7554, 19.7383, 1.14 ) }
    dend_45 { pt3dadd( 28.5923, 52.3677, 20.1989, 0.23 ) }
    dend_45 { pt3dadd( 28.7144, 52.9615, 20.3827, 1.14 ) }
    dend_45 { pt3dadd( 28.9374, 53.7636, 20.6337, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_45 { pt3dadd( 29.3699, 54.9271, 20.9938, 0.23 ) }
    dend_45 { pt3dadd( 29.5037, 55.2188, 21.0909, 0.23 ) }
    dend_45 { pt3dadd( 30.0294, 56.2633, 21.4437, 1.36 ) }
    dend_45 { pt3dadd( 30.8299, 57.7023, 21.933, 0.45 ) }
    dend_45 { pt3dadd( 31.2464, 58.3917, 22.2032, 0.23 ) }
    dend_45 { pt3dadd( 31.8994, 59.5419, 22.6675, 1.14 ) }
    dend_45 { pt3dadd( 32.4438, 60.5586, 23.0742, 0.23 ) }
    dend_45 { pt3dadd( 32.9275, 61.4747, 23.437, 1.14 ) }
    dend_45 { pt3dadd( 33.6936, 62.8709, 23.9998, 0.23 ) }
    dend_45 { pt3dadd( 34.3077, 63.8928, 24.4113, 1.14 ) }
    dend_45 { pt3dadd( 35.3422, 65.3821, 25.0421, 0.23 ) }
    dend_45 { pt3dadd( 35.7233, 65.8828, 25.2494, 0.23 ) }
    dend_45 { pt3dadd( 36.13, 66.3914, 25.4396, 0.91 ) }
    dend_45 { pt3dadd( 36.7926, 67.1268, 25.7049, 0.23 ) }
    dend_45 { pt3dadd( 37.2782, 67.617, 25.8759, 0.91 ) }
    dend_45 { pt3dadd( 37.9864, 68.2593, 26.0951, 0.23 ) }
    dend_45 { pt3dadd( 38.7293, 68.8726, 26.3121, 1.14 ) }
    dend_45 { pt3dadd( 39.3903, 69.4881, 26.5386, 1.14 ) }
    dend_45 { pt3dadd( 40.151, 70.268, 26.8446, 0.23 ) }
    dend_45 { pt3dadd( 40.5136, 70.6759, 27.0022, 1.59 ) }
    dend_45 { pt3dadd( 40.9263, 71.2404, 27.1836, 1.59 ) }
    dend_45 { pt3dadd( 41.746, 72.5647, 27.5368, 0.23 ) }
    dend_45 { pt3dadd( 42.3012, 73.5396, 27.734, 0.91 ) }
    dend_45 { pt3dadd( 42.8285, 74.4598, 27.8639, 0.23 ) }
    dend_45 { pt3dadd( 43.3585, 75.302, 27.9322, 1.14 ) }
    dend_45 { pt3dadd( 44.696, 77.0584, 27.9751, 0.23 ) }
    dend_45 { pt3dadd( 45.1473, 77.5485, 27.9654, 0.23 ) }
    dend_45 { pt3dadd( 46.2109, 78.537, 27.8985, 0.91 ) }
    dend_45 { pt3dadd( 47.4343, 79.5242, 27.765, 0.23 ) }
    dend_45 { pt3dadd( 48.8655, 80.6171, 27.5877, 0.23 ) }
    dend_45 { pt3dadd( 50.4047, 81.7426, 27.4135, 0.91 ) }
    dend_45 { pt3dadd( 51.4893, 82.5793, 27.3061, 0.23 ) }
    dend_45 { pt3dadd( 52.1817, 83.2111, 27.2404, 1.14 ) }
    dend_45 { pt3dadd( 53.1229, 84.3378, 27.165, 0.23 ) }
    dend_45 { pt3dadd( 53.6656, 85.2536, 27.1155, 0.23 ) }
    dend_45 { pt3dadd( 54.0776, 86.2456, 27.078, 1.14 ) }
    dend_45 { pt3dadd( 54.7574, 88.3072, 27.0452, 0.23 ) }
    dend_45 { pt3dadd( 55.0375, 89.2505, 27.0432, 0.23 ) }
    dend_45 { pt3dadd( 55.4219, 90.5096, 27.0604, 0.68 ) }
    dend_45 { pt3dadd( 55.6289, 91.1425, 27.0818, 0.23 ) }
    dend_45 { pt3dadd( 55.9922, 92.0564, 27.1165, 0.91 ) }
    dend_45 { pt3dadd( 56.9186, 93.976, 27.1807, 0.23 ) }
    dend_45 { pt3dadd( 57.2725, 94.6021, 27.1949, 1.14 ) }
    dend_45 { pt3dadd( 57.8216, 95.5365, 27.2379, 0.23 ) }
    dend_45 { pt3dadd( 58.1702, 96.0946, 27.2742, 0.91 ) }
    dend_45 { pt3dadd( 58.9477, 97.3332, 27.3984, 0.23 ) }
    dend_45 { pt3dadd( 59.5743, 98.3897, 27.5476, 0.91 ) }
    dend_45 { pt3dadd( 60.2743, 99.7408, 27.7949, 0.23 ) }
    dend_45 { pt3dadd( 60.9233, 101.223, 28.1053, 0.68 ) }
    dend_45 { pt3dadd( 61.3277, 102.463, 28.3674, 0.23 ) }
    dend_45 { pt3dadd( 61.5516, 103.479, 28.5738, 0.91 ) }
    dend_45 { pt3dadd( 61.6504, 104.56, 28.779, 0.23 ) }
    dend_45 { pt3dadd( 61.6361, 105.673, 28.9725, 0.68 ) }
    dend_45 { pt3dadd( 61.5352, 106.771, 29.1298, 0.23 ) }
    dend_45 { pt3dadd( 61.2919, 108.687, 29.3611, 0.23 ) }
    dend_45 { pt3dadd( 61.0866, 110.158, 29.5356, 0.68 ) }
    dend_45 { pt3dadd( 60.9349, 111.673, 29.697, 0.23 ) }
    dend_45 { pt3dadd( 60.9068, 112.382, 29.7732, 0.68 ) }
    dend_45 { pt3dadd( 60.9356, 113.436, 29.9249, 0.23 ) }
    dend_45 { pt3dadd( 61.0388, 114.452, 30.116, 1.14 ) }
    dend_45 { pt3dadd( 61.1366, 115.091, 30.2827, 1.14 ) }
    dend_45 { pt3dadd( 61.3598, 116.278, 30.6212, 0.23 ) }
    dend_45 { pt3dadd( 61.5161, 117.094, 30.8769, 0.68 ) }
    dend_45 { pt3dadd( 61.7565, 118.628, 31.3948, 0.23 ) }
    dend_45 { pt3dadd( 61.8707, 119.377, 31.6685, 0.91 ) }
    dend_45 { pt3dadd( 62.093, 120.678, 32.2098, 0.23 ) }
    dend_45 { pt3dadd( 62.3788, 122.021, 32.8593, 0.91 ) }
    dend_45 { pt3dadd( 62.7654, 123.425, 33.6602, 0.23 ) }
    dend_45 { pt3dadd( 62.9726, 124.008, 34.0212, 1.14 ) }
    dend_45 { pt3dadd( 63.4451, 125.012, 34.681, 0.23 ) }
    dend_45 { pt3dadd( 64.1003, 126.295, 35.5426, 0.23 ) }
    dend_45 { pt3dadd( 64.4386, 126.907, 35.9568, 1.14 ) }
    dend_45 { pt3dadd( 64.9103, 127.754, 36.5424, 0.23 ) }
    dend_45 { pt3dadd( 65.3393, 128.638, 37.0731, 0.68 ) }
    dend_45 { pt3dadd( 65.6769, 129.608, 37.5498, 0.23 ) }
    dend_45 { pt3dadd( 65.8554, 130.436, 37.8839, 0.23 ) }
    dend_45 { pt3dadd( 66.0539, 131.659, 38.2801, 1.59 ) }
    dend_45 { pt3dadd( 66.2902, 133.391, 38.8051, 0.23 ) }
    dend_45 { pt3dadd( 66.4548, 134.823, 39.2031, 0.91 ) }
    dend_45 { pt3dadd( 66.6095, 136.467, 39.6514, 0.23 ) }
    dend_45 { pt3dadd( 66.707, 137.411, 39.9059, 1.59 ) }
    dend_45 { pt3dadd( 66.9637, 139.141, 40.3697, 0.23 ) }
    dend_45 { pt3dadd( 67.042, 139.505, 40.4603, 0.91 ) }
    dend_45 { pt3dadd( 67.2515, 140.119, 40.6263, 0.91 ) }
    dend_45 { pt3dadd( 68.1733, 141.841, 41.1826, 0.23 ) }
    dend_45 { pt3dadd( 69.0526, 143.081, 41.6177, 0.91 ) }
    dend_45 { pt3dadd( 69.3612, 143.46, 41.7526, 0.91 ) }
    dend_45 { pt3dadd( 70.2786, 144.475, 42.1151, 0.23 ) }
    dend_45 { pt3dadd( 71.5191, 145.733, 42.4583, 0.68 ) }
    dend_45 { pt3dadd( 72.5941, 146.714, 42.6475, 0.23 ) }
    dend_45 { pt3dadd( 73.4209, 147.405, 42.722, 1.14 ) }
    dend_45 { pt3dadd( 73.8357, 147.761, 42.738, 1.14 ) }
    dend_45 { pt3dadd( 74.8748, 148.696, 42.7541, 0.23 ) }
    dend_45 { pt3dadd( 76.3786, 150.068, 42.7357, 0.23 ) }
    dend_45 { pt3dadd( 77.5068, 151.041, 42.6849, 0.68 ) }
    dend_45 { pt3dadd( 78.7885, 151.998, 42.6092, 0.91 ) }
    dend_45 { pt3dadd( 80.3545, 152.981, 42.5061, 0.23 ) }
    dend_45 { pt3dadd( 81.0521, 153.395, 42.4586, 0.91 ) }
    dend_45 { pt3dadd( 81.9612, 153.891, 42.3952, 0.23 ) }
    dend_45 { pt3dadd( 82.8153, 154.306, 42.3739, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_45 { pt3dadd( 84.575, 155.018, 42.3, 0.23 ) }
    dend_45 { pt3dadd( 85.8998, 155.368, 42.2117, 0.23 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 2/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 15.2145, 14.5795, 8.08279, 0.68 ) }
    dend_42 { pt3dadd( 15.5158, 15.3438, 8.40815, 0.68 ) }
    dend_42 { pt3dadd( 15.8809, 16.4708, 8.80208, 1.36 ) }
    dend_42 { pt3dadd( 16.1461, 17.3278, 9.09307, 1.36 ) }
    dend_42 { pt3dadd( 16.5842, 18.5708, 9.48539, 0.68 ) }
    dend_42 { pt3dadd( 17.183, 20.047, 9.97729, 0.68 ) }
    dend_42 { pt3dadd( 17.7565, 21.3705, 10.4448, 1.14 ) }
    dend_42 { pt3dadd( 18.6382, 23.2184, 11.1521, 1.14 ) }
    dend_42 { pt3dadd( 19.1364, 24.2285, 11.5939, 1.14 ) }
    dend_42 { pt3dadd( 19.952, 25.9245, 12.4146, 0.45 ) }
    dend_42 { pt3dadd( 20.4541, 27.0103, 12.9938, 0.45 ) }
    dend_42 { pt3dadd( 21.1105, 28.3036, 13.7636, 1.14 ) }
    dend_42 { pt3dadd( 21.6509, 29.2732, 14.4344, 0.91 ) }
    dend_42 { pt3dadd( 22.1181, 30.1744, 15.1287, 0.91 ) }
    dend_42 { pt3dadd( 22.4649, 31.2557, 15.9442, 0.45 ) }
    dend_42 { pt3dadd( 22.6273, 32.4223, 16.8013, 0.45 ) }
    dend_42 { pt3dadd( 22.7198, 33.885, 17.7792, 0.45 ) }
    dend_42 { pt3dadd( 22.7826, 34.5681, 18.2325, 0.45 ) }
    dend_42 { pt3dadd( 22.9356, 36.1341, 19.2696, 0.91 ) }
    dend_42 { pt3dadd( 23.1241, 37.8384, 20.5019, 0.68 ) }
    dend_42 { pt3dadd( 23.1818, 38.4628, 20.9788, 0.68 ) }
    dend_42 { pt3dadd( 23.234, 39.8919, 22.0288, 1.36 ) }
    dend_42 { pt3dadd( 23.3308, 41.1395, 22.9038, 0.45 ) }
    dend_42 { pt3dadd( 23.5146, 42.5584, 23.9215, 0.91 ) }
    dend_42 { pt3dadd( 23.7878, 43.9644, 24.9265, 0.45 ) }
    dend_42 { pt3dadd( 24.1624, 45.5484, 26.0388, 0.91 ) }
    dend_42 { pt3dadd( 24.5298, 47.1044, 27.1042, 1.14 ) }
    dend_42 { pt3dadd( 25.0206, 49.3905, 28.619, 0.45 ) }
    dend_42 { pt3dadd( 25.4121, 51.2002, 29.779, 0.45 ) }
    dend_42 { pt3dadd( 25.6996, 52.2837, 30.4603, 1.59 ) }
    dend_42 { pt3dadd( 26.059, 53.5673, 31.3012, 0.23 ) }
    dend_42 { pt3dadd( 26.5302, 55.3809, 32.585, 1.36 ) }
    dend_42 { pt3dadd( 26.907, 57.0358, 33.793, 0.23 ) }
    dend_42 { pt3dadd( 27.1618, 58.5752, 34.872, 0.23 ) }
    dend_42 { pt3dadd( 27.335, 59.6198, 35.5806, 1.36 ) }
    dend_42 { pt3dadd( 27.6634, 61.7962, 37.0712, 0.23 ) }
    dend_42 { pt3dadd( 27.858, 63.1523, 37.9837, 1.14 ) }
    dend_42 { pt3dadd( 27.9601, 63.9459, 38.5088, 0.23 ) }
    dend_42 { pt3dadd( 28.1384, 65.1256, 39.3056, 0.91 ) }
    dend_42 { pt3dadd( 28.3351, 66.5062, 40.2219, 0.23 ) }
    dend_42 { pt3dadd( 28.4652, 67.6061, 40.9248, 1.82 ) }
    dend_42 { pt3dadd( 28.607, 69.0764, 41.7955, 0.23 ) }
    dend_42 { pt3dadd( 28.7143, 70.5441, 42.6823, 1.14 ) }
    dend_42 { pt3dadd( 28.8198, 71.8796, 43.5602, 0.23 ) }
    dend_42 { pt3dadd( 28.8977, 72.8672, 44.2285, 0.23 ) }
    dend_42 { pt3dadd( 28.9954, 74.7829, 45.4745, 0.91 ) }
    dend_42 { pt3dadd( 29.0359, 75.7006, 46.0734, 0.91 ) }
    dend_42 { pt3dadd( 29.1189, 77.2737, 47.0294, 0.23 ) }
    dend_42 { pt3dadd( 29.2667, 78.6995, 47.8166, 1.14 ) }
    dend_42 { pt3dadd( 29.3871, 79.5671, 48.2196, 1.14 ) }
    dend_42 { pt3dadd( 29.6308, 80.6431, 48.6741, 0.23 ) }
    dend_42 { pt3dadd( 29.8623, 81.3882, 48.9395, 1.14 ) }
    dend_42 { pt3dadd( 30.1758, 82.3038, 49.2375, 1.14 ) }
    dend_42 { pt3dadd( 30.7817, 84.1399, 49.7393, 0.23 ) }
    dend_42 { pt3dadd( 31.1619, 85.4731, 50.0696, 0.23 ) }
    dend_42 { pt3dadd( 31.4878, 86.7894, 50.4329, 1.14 ) }
    dend_42 { pt3dadd( 31.6726, 87.6322, 50.6954, 1.14 ) }
    dend_42 { pt3dadd( 31.9791, 89.1046, 51.1783, 0.23 ) }
    dend_42 { pt3dadd( 32.1005, 89.7811, 51.4288, 0.23 ) }
    dend_42 { pt3dadd( 32.2551, 90.8616, 51.9154, 0.23 ) }
    dend_42 { pt3dadd( 32.4872, 92.4153, 52.8116, 1.36 ) }
    dend_42 { pt3dadd( 32.7463, 93.8566, 53.716, 0.23 ) }
    dend_42 { pt3dadd( 33.025, 94.9339, 54.4557, 0.68 ) }
    dend_42 { pt3dadd( 33.3078, 95.6298, 54.9822, 0.23 ) }
    dend_42 { pt3dadd( 34.1144, 97.0709, 56.1872, 1.14 ) }
    dend_42 { pt3dadd( 34.8059, 98.0587, 57.0983, 0.23 ) }
    dend_42 { pt3dadd( 35.5815, 99.0043, 57.9891, 1.14 ) }
    dend_42 { pt3dadd( 36.4888, 100.005, 58.9441, 0.23 ) }
    dend_42 { pt3dadd( 37.6394, 101.139, 60.0364, 1.14 ) }
    dend_42 { pt3dadd( 38.4367, 101.872, 60.6911, 0.23 ) }
    dend_42 { pt3dadd( 39.3119, 102.671, 61.3188, 1.14 ) }
    dend_42 { pt3dadd( 40.1286, 103.519, 61.9211, 0.23 ) }
    dend_42 { pt3dadd( 40.4489, 103.944, 62.2155, 0.23 ) }
    dend_42 { pt3dadd( 40.8324, 104.836, 62.7356, 0.23 ) }
    dend_42 { pt3dadd( 40.988, 105.457, 63.0269, 0.91 ) }
    dend_42 { pt3dadd( 41.1079, 106.1, 63.3064, 0.91 ) }
    dend_42 { pt3dadd( 41.2614, 107.215, 63.7625, 0.91 ) }
    dend_42 { pt3dadd( 41.364, 108.834, 64.4091, 1.59 ) }
    dend_42 { pt3dadd( 41.3779, 110.791, 65.1381, 0.23 ) }
    dend_42 { pt3dadd( 41.3586, 112.111, 65.6016, 1.36 ) }
    dend_42 { pt3dadd( 41.3966, 113.773, 66.0789, 0.23 ) }
    dend_42 { pt3dadd( 41.4407, 114.46, 66.219, 0.23 ) }
    dend_42 { pt3dadd( 41.5973, 115.751, 66.3604, 1.14 ) }
    dend_42 { pt3dadd( 41.843, 117.154, 66.3839, 0.23 ) }
    dend_42 { pt3dadd( 42.063, 118.278, 66.3056, 1.14 ) }
    dend_42 { pt3dadd( 42.6012, 120.698, 66.0276, 0.23 ) }
    dend_42 { pt3dadd( 42.8771, 121.832, 65.8582, 0.91 ) }
    dend_42 { pt3dadd( 43.3715, 123.639, 65.5863, 0.23 ) }
    dend_42 { pt3dadd( 43.723, 124.831, 65.4057, 1.14 ) }
    dend_42 { pt3dadd( 43.9698, 125.807, 65.2758, 1.14 ) }
    dend_42 { pt3dadd( 44.245, 127.384, 65.1278, 0.23 ) }
    dend_42 { pt3dadd( 44.384, 128.561, 65.1071, 0.91 ) }
    dend_42 { pt3dadd( 44.4648, 129.35, 65.1584, 0.91 ) }
    dend_42 { pt3dadd( 44.5652, 130.575, 65.3077, 0.23 ) }
    dend_42 { pt3dadd( 44.6648, 132.153, 65.5828, 0.23 ) }
    dend_42 { pt3dadd( 44.7194, 133.077, 65.7635, 0.23 ) }
    dend_42 { pt3dadd( 44.8247, 134.667, 66.1027, 0.91 ) }
    dend_42 { pt3dadd( 45.0641, 136.702, 66.5562, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_42 { pt3dadd( 45.246, 137.842, 66.8126, 0.68 ) }
    dend_42 { pt3dadd( 45.5154, 139.204, 67.1224, 0.91 ) }
    dend_42 { pt3dadd( 45.8087, 140.449, 67.3774, 0.23 ) }
    dend_42 { pt3dadd( 45.9632, 141.218, 67.5293, 0.68 ) }
    dend_42 { pt3dadd( 46.1555, 142.513, 67.7641, 0.23 ) }
    dend_42 { pt3dadd( 46.3031, 143.725, 67.9743, 0.68 ) }
    dend_42 { pt3dadd( 46.3928, 144.439, 68.1149, 0.23 ) }
    dend_42 { pt3dadd( 46.7079, 146.621, 68.5777, 0.91 ) }
    dend_42 { pt3dadd( 46.9117, 147.97, 68.8731, 0.23 ) }
    dend_42 { pt3dadd( 47.0725, 149.125, 69.1229, 0.91 ) }
    dend_42 { pt3dadd( 47.2355, 150.422, 69.4056, 0.23 ) }
    dend_42 { pt3dadd( 47.491, 151.972, 69.729, 1.14 ) }
    dend_42 { pt3dadd( 47.7144, 153.106, 69.9724, 0.23 ) }
    dend_42 { pt3dadd( 48.0482, 154.636, 70.2986, 1.14 ) }
    dend_42 { pt3dadd( 48.5063, 156.664, 70.7031, 0.23 ) }
    dend_42 { pt3dadd( 48.8722, 158.546, 71.0852, 0.45 ) }
    dend_42 { pt3dadd( 49.2474, 160.59, 71.4894, 0.91 ) }
    dend_42 { pt3dadd( 49.5317, 162.36, 71.8578, 0.23 ) }
    dend_42 { pt3dadd( 49.6934, 163.552, 72.118, 0.91 ) }
    dend_42 { pt3dadd( 49.9905, 165.868, 72.6511, 0.23 ) }
    dend_42 { pt3dadd( 50.2294, 167.53, 73.0503, 1.14 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 21/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 11.075, -27.4219, 6.67832, 1.59 ) }
    dend_17 { pt3dadd( 13.2345, -29.0161, 7.45297, 1.59 ) }
    dend_17 { pt3dadd( 15.7683, -30.8866, 8.36187, 1.59 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 24/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 11.075, -27.4219, 6.67832, 0.23 ) }
    dend_16 { pt3dadd( 9.05517, -28.0939, 6.77481, 0.23 ) }
    dend_16 { pt3dadd( 7.95078, -28.5285, 6.72693, 0.91 ) }
    dend_16 { pt3dadd( 6.78613, -29.0699, 6.56184, 0.23 ) }
    dend_16 { pt3dadd( 5.75908, -29.6102, 6.32253, 0.68 ) }
    dend_16 { pt3dadd( 4.76078, -30.2317, 6.02083, 0.68 ) }
    dend_16 { pt3dadd( 4.05149, -30.747, 5.75693, 0.68 ) }
    dend_16 { pt3dadd( 3.22417, -31.5664, 5.26806, 0.23 ) }
    dend_16 { pt3dadd( 2.57228, -32.3313, 4.75837, 0.68 ) }
    dend_16 { pt3dadd( 2.10707, -32.9402, 4.3105, 0.23 ) }
    dend_16 { pt3dadd( 1.45324, -33.8826, 3.58914, 0.68 ) }
    dend_16 { pt3dadd( 0.895002, -34.7058, 2.92588, 0.23 ) }
    dend_16 { pt3dadd( 0.645393, -35.1093, 2.60302, 0.91 ) }
    dend_16 { pt3dadd( -0.00553806, -36.3093, 1.67361, 0.23 ) }
    dend_16 { pt3dadd( -0.377125, -37.0507, 1.09826, 0.91 ) }
    dend_16 { pt3dadd( -0.787449, -37.9629, 0.390208, 0.23 ) }
    dend_16 { pt3dadd( -1.08729, -38.7316, -0.207232, 0.91 ) }
    dend_16 { pt3dadd( -1.44397, -39.7323, -0.971449, 0.23 ) }
    dend_16 { pt3dadd( -2.01489, -41.3818, -2.18053, 0.91 ) }
    dend_16 { pt3dadd( -2.62313, -43.3116, -3.49856, 0.23 ) }
    dend_16 { pt3dadd( -3.05046, -44.7215, -4.40221, 0.23 ) }
    dend_16 { pt3dadd( -3.41461, -45.9923, -5.15352, 0.91 ) }
    dend_16 { pt3dadd( -4.00007, -48.1935, -6.35853, 0.45 ) }
    dend_16 { pt3dadd( -4.46093, -49.963, -7.2534, 0.45 ) }
    dend_16 { pt3dadd( -4.71137, -51.0695, -7.73287, 0.45 ) }
    dend_16 { pt3dadd( -4.93428, -52.2505, -8.17268, 0.91 ) }
    dend_16 { pt3dadd( -5.13877, -53.6198, -8.63974, 0.45 ) }
    dend_16 { pt3dadd( -5.30402, -55.1954, -9.12872, 0.23 ) }
    dend_16 { pt3dadd( -5.33433, -55.9219, -9.33396, 0.68 ) }
    dend_16 { pt3dadd( -5.40347, -58.3299, -10.0438, 0.45 ) }
    dend_16 { pt3dadd( -5.54797, -60.3743, -10.7329, 0.45 ) }
    dend_16 { pt3dadd( -5.66591, -61.501, -11.1449, 0.45 ) }
    dend_16 { pt3dadd( -5.76645, -62.4071, -11.4879, 0.45 ) }
    dend_16 { pt3dadd( -5.98591, -64.5023, -12.2799, 0.68 ) }
    dend_16 { pt3dadd( -6.11946, -66.3084, -12.9531, 0.45 ) }
    dend_16 { pt3dadd( -6.16231, -68.2169, -13.6298, 0.45 ) }
    dend_16 { pt3dadd( -6.13087, -69.8938, -14.1805, 0.23 ) }
    dend_16 { pt3dadd( -6.03704, -72.2771, -14.9327, 0.45 ) }
    dend_16 { pt3dadd( -5.86432, -74.9668, -15.7515, 0.23 ) }
    dend_16 { pt3dadd( -5.70374, -76.5474, -16.1996, 0.23 ) }
    dend_16 { pt3dadd( -5.4668, -78.221, -16.6565, 0.68 ) }
    dend_16 { pt3dadd( -5.01938, -80.6595, -17.3256, 0.45 ) }
    dend_16 { pt3dadd( -4.60103, -82.904, -17.9914, 0.68 ) }
    dend_16 { pt3dadd( -4.41604, -84.1102, -18.3769, 0.68 ) }
    dend_16 { pt3dadd( -4.33804, -84.8195, -18.6227, 0.68 ) }
    dend_16 { pt3dadd( -4.16063, -87.5589, -19.6313, 0.23 ) }
    dend_16 { pt3dadd( -4.07005, -89.6624, -20.4436, 0.45 ) }
    dend_16 { pt3dadd( -3.97992, -91.3289, -21.0979, 0.45 ) }
    dend_16 { pt3dadd( -3.91069, -92.5032, -21.565, 0.45 ) }
    dend_16 { pt3dadd( -3.84616, -93.8015, -22.1033, 0.23 ) }
    dend_16 { pt3dadd( -3.84021, -95.88, -22.9717, 0.23 ) }
    dend_16 { pt3dadd( -6.64769, -103.591, -25.2757, 0.23 ) }
    dend_16 { pt3dadd( -9.07002, -111.434, -27.575, 0.23 ) }
    dend_16 { pt3dadd( -12.4902, -118.854, -30.0019, 0.23 ) }
    dend_16 { pt3dadd( -16.6161, -125.522, -33.3448, 0.23 ) }
    dend_16 { pt3dadd( -21.9859, -131.765, -35.5478, 0.23 ) }
    dend_16 { pt3dadd( -26.0448, -138.409, -39.0178, 0.23 ) }
    dend_16 { pt3dadd( -30.1259, -144.553, -43.2892, 0.23 ) }
    dend_16 { pt3dadd( -34.5547, -149.693, -48.4493, 0.23 ) }
    dend_16 { pt3dadd( -38.7577, -155.013, -53.6151, 0.23 ) }
    dend_16 { pt3dadd( -43.0456, -160.944, -57.9852, 0.23 ) }
    dend_16 { pt3dadd( -46.4158, -166.451, -63.55, 0.23 ) }
    dend_16 { pt3dadd( -49.1917, -171.865, -69.5203, 0.23 ) }
    dend_16 { pt3dadd( -51.208, -176.97, -76.0419, 0.23 ) }
    // Section: dend_11, id: dend_11, parent: dend_5 (entry count 88/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -41.183, 27.0594, 16.8136, 0.68 ) }
    dend_11 { pt3dadd( -39.6559, 29.0112, 16.6692, 0.68 ) }
    dend_11 { pt3dadd( -37.7188, 31.4869, 16.486, 0.23 ) }
    dend_11 { pt3dadd( -36.7445, 32.7323, 16.3939, 0.23 ) }
    dend_11 { pt3dadd( -35.3338, 34.5353, 16.2605, 0.23 ) }
    dend_11 { pt3dadd( -34.0698, 36.1508, 16.1409, 0.68 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 94/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -41.183, 27.0594, 16.8136, 0.68 ) }
    dend_6 { pt3dadd( -41.8529, 27.687, 16.7789, 0.68 ) }
    dend_6 { pt3dadd( -43.4214, 29.1113, 16.695, 0.45 ) }
    dend_6 { pt3dadd( -43.9989, 29.5773, 16.679, 0.45 ) }
    dend_6 { pt3dadd( -44.6667, 30.0819, 16.6739, 1.36 ) }
    dend_6 { pt3dadd( -45.4378, 30.6592, 16.6768, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_6 { pt3dadd( -45.806, 30.9468, 16.6811, 0.23 ) }
    dend_6 { pt3dadd( -46.8815, 31.8099, 16.7354, 1.14 ) }
    dend_6 { pt3dadd( -47.7646, 32.4935, 16.8144, 0.23 ) }
    dend_6 { pt3dadd( -48.8217, 33.2113, 16.9411, 1.14 ) }
    dend_6 { pt3dadd( -49.8015, 33.7821, 17.101, 0.45 ) }
    dend_6 { pt3dadd( -50.7031, 34.2443, 17.2914, 1.14 ) }
    dend_6 { pt3dadd( -51.6161, 34.6662, 17.5205, 0.23 ) }
    dend_6 { pt3dadd( -52.4059, 34.999, 17.7532, 0.68 ) }
    dend_6 { pt3dadd( -53.5137, 35.4173, 18.0784, 0.68 ) }
    dend_6 { pt3dadd( -54.3679, 35.6715, 18.302, 0.23 ) }
    dend_6 { pt3dadd( -55.2978, 35.9024, 18.503, 0.23 ) }
    dend_6 { pt3dadd( -56.1625, 36.0945, 18.6528, 0.91 ) }
    dend_6 { pt3dadd( -56.7909, 36.2363, 18.7193, 0.23 ) }
    dend_6 { pt3dadd( -58.0489, 36.5488, 18.7781, 1.36 ) }
    dend_6 { pt3dadd( -59.3396, 36.8889, 18.7827, 0.23 ) }
    dend_6 { pt3dadd( -60.5658, 37.2088, 18.7411, 0.23 ) }
    dend_6 { pt3dadd( -61.1798, 37.3764, 18.6954, 0.68 ) }
    dend_6 { pt3dadd( -62.224, 37.7073, 18.5923, 1.36 ) }
    dend_6 { pt3dadd( -63.0308, 38.0335, 18.496, 0.23 ) }
    dend_6 { pt3dadd( -63.4881, 38.2696, 18.4492, 0.23 ) }
    dend_6 { pt3dadd( -63.9752, 38.6175, 18.408, 0.91 ) }
    dend_6 { pt3dadd( -64.73, 39.2571, 18.3755, 0.91 ) }
    dend_6 { pt3dadd( -65.3561, 39.8334, 18.3771, 1.36 ) }
    dend_6 { pt3dadd( -66.2704, 40.7012, 18.4645, 0.23 ) }
    dend_6 { pt3dadd( -66.9362, 41.3421, 18.5582, 1.14 ) }
    dend_6 { pt3dadd( -67.8656, 42.2901, 18.714, 0.23 ) }
    dend_6 { pt3dadd( -68.6735, 43.1532, 18.8643, 0.91 ) }
    dend_6 { pt3dadd( -69.0155, 43.534, 18.9351, 0.91 ) }
    dend_6 { pt3dadd( -69.7805, 44.3612, 19.104, 0.23 ) }
    dend_6 { pt3dadd( -70.0981, 44.6865, 19.1858, 0.23 ) }
    dend_6 { pt3dadd( -70.9941, 45.5733, 19.4348, 1.14 ) }
    dend_6 { pt3dadd( -71.3909, 45.9657, 19.5405, 0.23 ) }
    dend_6 { pt3dadd( -72.0234, 46.6014, 19.72, 0.23 ) }
    dend_6 { pt3dadd( -72.7016, 47.2263, 19.925, 0.91 ) }
    dend_6 { pt3dadd( -73.835, 48.1392, 20.2649, 0.23 ) }
    dend_6 { pt3dadd( -74.7164, 48.7357, 20.5485, 0.23 ) }
    dend_6 { pt3dadd( -75.7123, 49.3159, 20.8777, 0.91 ) }
    dend_6 { pt3dadd( -76.5421, 49.7613, 21.1453, 0.23 ) }
    dend_6 { pt3dadd( -77.2994, 50.1241, 21.3701, 0.68 ) }
    dend_6 { pt3dadd( -78.1631, 50.5214, 21.5974, 0.23 ) }
    dend_6 { pt3dadd( -78.9051, 50.8363, 21.7616, 1.14 ) }
    dend_6 { pt3dadd( -80.1923, 51.3618, 22.0152, 0.23 ) }
    dend_6 { pt3dadd( -80.823, 51.6179, 22.126, 0.68 ) }
    dend_6 { pt3dadd( -81.8378, 52.0817, 22.2661, 0.23 ) }
    dend_6 { pt3dadd( -82.43, 52.3963, 22.3326, 0.23 ) }
    dend_6 { pt3dadd( -83.3659, 52.9508, 22.4185, 0.23 ) }
    dend_6 { pt3dadd( -84.2051, 53.4956, 22.4952, 1.59 ) }
    dend_6 { pt3dadd( -85.1804, 54.1659, 22.5821, 0.45 ) }
    dend_6 { pt3dadd( -85.8911, 54.7063, 22.6344, 0.45 ) }
    dend_6 { pt3dadd( -86.2574, 55.0167, 22.6509, 0.45 ) }
    dend_6 { pt3dadd( -87.3954, 56.0855, 22.6687, 0.68 ) }
    dend_6 { pt3dadd( -88.2828, 57.0419, 22.6389, 1.14 ) }
    dend_6 { pt3dadd( -89.1131, 57.9824, 22.5642, 0.23 ) }
    dend_6 { pt3dadd( -89.837, 58.8548, 22.4491, 0.23 ) }
    dend_6 { pt3dadd( -90.3169, 59.4731, 22.3402, 0.23 ) }
    dend_6 { pt3dadd( -90.9416, 60.3689, 22.1576, 0.91 ) }
    dend_6 { pt3dadd( -91.5073, 61.2865, 21.932, 0.23 ) }
    dend_6 { pt3dadd( -91.8857, 61.9285, 21.7583, 0.91 ) }
    dend_6 { pt3dadd( -92.5026, 63.0003, 21.4919, 0.23 ) }
    dend_6 { pt3dadd( -93.1042, 63.9914, 21.2721, 1.36 ) }
    dend_6 { pt3dadd( -93.6189, 64.7624, 21.1209, 0.91 ) }
    dend_6 { pt3dadd( -94.2928, 65.7167, 20.9435, 0.23 ) }
    dend_6 { pt3dadd( -94.7382, 66.3678, 20.8222, 0.91 ) }
    dend_6 { pt3dadd( -95.1997, 67.1078, 20.6828, 0.23 ) }
    dend_6 { pt3dadd( -95.3959, 67.4431, 20.6102, 1.14 ) }
    dend_6 { pt3dadd( -95.7442, 68.1033, 20.428, 1.14 ) }
    dend_6 { pt3dadd( -96.1369, 68.9141, 20.1613, 0.23 ) }
    dend_6 { pt3dadd( -96.4374, 69.6713, 19.903, 0.23 ) }
    dend_6 { pt3dadd( -96.5038, 69.8479, 19.8416, 0.91 ) }
    dend_6 { pt3dadd( -96.7951, 70.5378, 19.6107, 0.91 ) }
    dend_6 { pt3dadd( -97.0595, 71.085, 19.4449, 0.91 ) }
    dend_6 { pt3dadd( -97.6884, 72.1307, 19.1837, 0.23 ) }
    dend_6 { pt3dadd( -98.0152, 72.5838, 19.092, 0.23 ) }
    dend_6 { pt3dadd( -98.4781, 73.1285, 19.0034, 0.91 ) }
    dend_6 { pt3dadd( -99.2794, 74.0143, 18.8847, 0.23 ) }
    dend_6 { pt3dadd( -99.8307, 74.5724, 18.828, 0.91 ) }
    dend_6 { pt3dadd( -100.747, 75.447, 18.7684, 0.23 ) }
    dend_6 { pt3dadd( -100.992, 75.6693, 18.7574, 0.91 ) }
    dend_6 { pt3dadd( -101.635, 76.2694, 18.7124, 0.91 ) }
    dend_6 { pt3dadd( -102.095, 76.7349, 18.6642, 0.45 ) }
    dend_6 { pt3dadd( -102.59, 77.3143, 18.5769, 0.23 ) }
    dend_6 { pt3dadd( -103.231, 78.197, 18.404, 0.23 ) }
    dend_6 { pt3dadd( -103.556, 78.6833, 18.2975, 0.68 ) }
    dend_6 { pt3dadd( -104.047, 79.4414, 18.1246, 0.23 ) }
    dend_6 { pt3dadd( -104.658, 80.4954, 17.8564, 0.23 ) }
    dend_6 { pt3dadd( -105.172, 81.4274, 17.59, 0.68 ) }
    dend_6 { pt3dadd( -105.477, 82.1023, 17.3734, 0.68 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 87/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 120.522, 144.074, 0.670082, 0.23 ) }
    dend_54 { pt3dadd( 126.403, 151.885, -3.38505, 0.23 ) }
    dend_54 { pt3dadd( 130.144, 161.006, -7.23773, 0.23 ) }
    dend_54 { pt3dadd( 136.691, 168.653, -10.5101, 0.23 ) }
    dend_54 { pt3dadd( 143.321, 174.595, -16.2341, 0.23 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 92/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 120.522, 144.074, 0.670082, 0.23 ) }
    dend_53 { pt3dadd( 125.991, 152.248, 5.27072, 0.23 ) }
    dend_53 { pt3dadd( 132.281, 160.465, 8.55489, 0.23 ) }
    dend_53 { pt3dadd( 140.014, 166.968, 12.5313, 0.23 ) }
    dend_53 { pt3dadd( 148.774, 171.062, 17.4677, 0.23 ) }
    dend_53 { pt3dadd( 158.373, 174.261, 21.4074, 0.23 ) }
    dend_53 { pt3dadd( 167.5, 177.287, 26.4484, 0.23 ) }
    dend_53 { pt3dadd( 177.825, 178.916, 29.3864, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_53 { pt3dadd( 188.416, 178.985, 31.7765, 0.23 ) }
    dend_53 { pt3dadd( 198.77, 180.312, 34.7632, 0.23 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 2/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 84.0308, 266.225, 86.0844, 0.23 ) }
    dend_49 { pt3dadd( 84.014, 268.904, 84.7889, 0.23 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 4/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 84.0308, 266.225, 86.0844, 0.23 ) }
    dend_48 { pt3dadd( 82.4399, 264.911, 87.5245, 0.23 ) }
    dend_48 { pt3dadd( 81.6457, 264.313, 88.2748, 0.23 ) }
    dend_48 { pt3dadd( 80.9536, 263.857, 89.0069, 0.23 ) }
    dend_48 { pt3dadd( 79.2566, 262.795, 90.9317, 0.23 ) }
    dend_48 { pt3dadd( 78.5983, 262.408, 91.6571, 1.14 ) }
    dend_48 { pt3dadd( 77.3346, 261.706, 92.9671, 0.68 ) }
    dend_48 { pt3dadd( 76.5999, 261.281, 93.6852, 0.23 ) }
    dend_48 { pt3dadd( 75.2912, 260.477, 95.0178, 1.14 ) }
    dend_48 { pt3dadd( 73.7165, 259.44, 96.6394, 0.23 ) }
    dend_48 { pt3dadd( 72.7188, 258.765, 97.6823, 0.23 ) }
    dend_48 { pt3dadd( 71.5367, 257.965, 98.8463, 0.45 ) }
    dend_48 { pt3dadd( 70.6967, 257.44, 99.6124, 0.23 ) }
    dend_48 { pt3dadd( 70.1755, 257.148, 100.075, 0.68 ) }
    dend_48 { pt3dadd( 68.4214, 256.357, 101.51, 0.23 ) }
    dend_48 { pt3dadd( 67.0652, 255.851, 102.611, 0.23 ) }
    dend_48 { pt3dadd( 65.8406, 255.5, 103.662, 0.91 ) }
    dend_48 { pt3dadd( 64.5413, 255.351, 104.776, 0.23 ) }
    dend_48 { pt3dadd( 63.6503, 255.435, 105.477, 0.23 ) }
    dend_48 { pt3dadd( 62.4057, 255.838, 106.447, 0.68 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 24/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 50.2294, 167.53, 73.0503, 0.23 ) }
    dend_44 { pt3dadd( 49.7625, 171.011, 75.7895, 0.23 ) }
    dend_44 { pt3dadd( 49.4226, 173.545, 77.7836, 1.14 ) }
    dend_44 { pt3dadd( 49.0721, 176.157, 79.8399, 0.23 ) }
    dend_44 { pt3dadd( 48.7542, 178.527, 81.7047, 0.68 ) }
    dend_44 { pt3dadd( 48.4231, 180.995, 83.6471, 0.23 ) }
    dend_44 { pt3dadd( 48.0752, 183.588, 85.6882, 0.45 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 31/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 50.2294, 167.53, 73.0503, 0.23 ) }
    dend_43 { pt3dadd( 49.5847, 169.418, 73.4361, 0.23 ) }
    dend_43 { pt3dadd( 49.0738, 170.719, 73.7138, 0.23 ) }
    dend_43 { pt3dadd( 48.4011, 172.331, 74.069, 0.91 ) }
    dend_43 { pt3dadd( 47.9902, 173.251, 74.2779, 0.91 ) }
    dend_43 { pt3dadd( 47.352, 174.602, 74.5916, 0.23 ) }
    dend_43 { pt3dadd( 46.5633, 176.258, 74.9776, 0.91 ) }
    dend_43 { pt3dadd( 45.8781, 177.697, 75.2896, 0.23 ) }
    dend_43 { pt3dadd( 45.5699, 178.412, 75.4159, 0.23 ) }
    dend_43 { pt3dadd( 45.106, 179.477, 75.5753, 1.14 ) }
    dend_43 { pt3dadd( 44.4659, 180.975, 75.7638, 0.23 ) }
    dend_43 { pt3dadd( 43.9695, 182.12, 75.8722, 0.23 ) }
    dend_43 { pt3dadd( 43.3646, 183.61, 75.9744, 0.68 ) }
    dend_43 { pt3dadd( 42.8064, 185.127, 76.0572, 0.23 ) }
    dend_43 { pt3dadd( 42.4824, 186.035, 76.1071, 0.23 ) }
    dend_43 { pt3dadd( 42.1923, 186.852, 76.1573, 0.23 ) }
    dend_43 { pt3dadd( 41.6323, 188.519, 76.241, 1.14 ) }
    dend_43 { pt3dadd( 41.1447, 189.974, 76.3213, 0.23 ) }
    dend_43 { pt3dadd( 40.519, 191.889, 76.4579, 0.23 ) }
    dend_43 { pt3dadd( 40.166, 193.12, 76.5455, 0.23 ) }
    dend_43 { pt3dadd( 40.0072, 193.971, 76.5911, 0.91 ) }
    dend_43 { pt3dadd( 39.8066, 196.472, 76.6931, 0.23 ) }
    dend_43 { pt3dadd( 39.857, 197.5, 76.7206, 1.14 ) }
    dend_43 { pt3dadd( 40.1048, 198.745, 76.7287, 1.14 ) }
    dend_43 { pt3dadd( 40.6745, 200.397, 76.7221, 0.23 ) }
    dend_43 { pt3dadd( 41.4493, 202.116, 76.715, 0.91 ) }
    dend_43 { pt3dadd( 42.2008, 203.548, 76.7037, 0.23 ) }
    dend_43 { pt3dadd( 42.9237, 204.788, 76.703, 0.23 ) }
    dend_43 { pt3dadd( 44.0849, 206.661, 76.6841, 0.45 ) }
    dend_43 { pt3dadd( 45.0385, 208.217, 76.6738, 0.45 ) }
    dend_43 { pt3dadd( 45.9019, 209.702, 76.6794, 0.23 ) }
    dend_43 { pt3dadd( 46.3393, 210.539, 76.691, 0.45 ) }
    dend_43 { pt3dadd( 46.9317, 211.812, 76.7474, 0.23 ) }
    dend_43 { pt3dadd( 47.1588, 212.436, 76.7975, 0.91 ) }
    dend_43 { pt3dadd( 47.9178, 215.344, 77.1826, 0.23 ) }
    dend_43 { pt3dadd( 48.1042, 216.281, 77.3435, 0.23 ) }
    dend_43 { pt3dadd( 48.3642, 217.941, 77.676, 0.91 ) }
    dend_43 { pt3dadd( 48.5676, 219.641, 78.0544, 0.23 ) }
    dend_43 { pt3dadd( 48.7499, 221.526, 78.4864, 0.91 ) }
    dend_43 { pt3dadd( 48.9093, 223.613, 78.9694, 0.23 ) }
    dend_43 { pt3dadd( 48.9565, 224.983, 79.2953, 1.14 ) }
    dend_43 { pt3dadd( 48.9542, 226.869, 79.7343, 0.23 ) }
    dend_43 { pt3dadd( 48.9295, 227.608, 79.8822, 0.68 ) }
    dend_43 { pt3dadd( 48.7579, 229.197, 80.1137, 0.91 ) }
    dend_43 { pt3dadd( 48.6118, 230.28, 80.2251, 0.23 ) }
    dend_43 { pt3dadd( 48.3787, 231.355, 80.2952, 0.23 ) }
    dend_43 { pt3dadd( 47.9829, 232.625, 80.3777, 1.14 ) }
    dend_43 { pt3dadd( 47.5164, 233.769, 80.4628, 0.23 ) }
    dend_43 { pt3dadd( 46.4372, 236.161, 80.6656, 0.23 ) }
    dend_43 { pt3dadd( 46.1202, 236.882, 80.7194, 0.23 ) }
    dend_43 { pt3dadd( 45.7232, 237.892, 80.7642, 0.91 ) }
    dend_43 { pt3dadd( 45.1949, 239.586, 80.7006, 0.23 ) }
    dend_43 { pt3dadd( 44.7916, 241.03, 80.6294, 0.23 ) }
    dend_43 { pt3dadd( 44.6145, 241.772, 80.5913, 0.23 ) }
    dend_43 { pt3dadd( 44.2898, 243.758, 80.4094, 0.91 ) }
    dend_43 { pt3dadd( 43.9607, 245.715, 80.151, 0.23 ) }
    dend_43 { pt3dadd( 43.7309, 247.726, 79.7204, 0.23 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 88/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 15.7683, -30.8866, 8.36187, 0.91 ) }
    dend_19 { pt3dadd( 16.9402, -32.3716, 8.4019, 0.91 ) }
    dend_19 { pt3dadd( 17.7136, -33.405, 8.46982, 0.91 ) }
    dend_19 { pt3dadd( 18.501, -34.4752, 8.56259, 0.91 ) }
    dend_19 { pt3dadd( 20.0209, -36.5922, 8.75182, 0.91 ) }
    dend_19 { pt3dadd( 21.1676, -38.1169, 8.95483, 0.91 ) }
    dend_19 { pt3dadd( 22.713, -40.0718, 9.28395, 0.91 ) }
    dend_19 { pt3dadd( 23.7477, -41.2857, 9.49568, 0.91 ) }
    dend_19 { pt3dadd( 24.7166, -42.3389, 9.69225, 0.91 ) }
    dend_19 { pt3dadd( 26.3735, -44.0972, 10.0054, 1.14 ) }
    dend_19 { pt3dadd( 28.8964, -46.8159, 10.4102, 0.68 ) }
    dend_19 { pt3dadd( 30.9411, -48.9804, 10.6668, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_19 { pt3dadd( 33.3492, -51.5064, 10.8793, 0.68 ) }
    dend_19 { pt3dadd( 34.8136, -53.0449, 10.9723, 1.14 ) }
    dend_19 { pt3dadd( 36.4066, -54.7578, 11.0399, 0.68 ) }
    dend_19 { pt3dadd( 37.7186, -56.2556, 11.038, 0.68 ) }
    dend_19 { pt3dadd( 38.2396, -56.9362, 10.9888, 1.14 ) }
    dend_19 { pt3dadd( 39.6974, -59.2229, 10.725, 0.68 ) }
    dend_19 { pt3dadd( 40.6742, -61.0715, 10.51, 0.68 ) }
    dend_19 { pt3dadd( 41.1783, -62.0062, 10.4017, 0.68 ) }
    dend_19 { pt3dadd( 41.916, -63.2415, 10.2855, 0.68 ) }
    dend_19 { pt3dadd( 42.94, -64.8781, 10.1906, 1.14 ) }
    dend_19 { pt3dadd( 44.6521, -67.5727, 10.0606, 0.68 ) }
    dend_19 { pt3dadd( 46.0688, -69.829, 9.99406, 0.68 ) }
    dend_19 { pt3dadd( 47.4617, -71.9044, 10.0432, 0.68 ) }
    dend_19 { pt3dadd( 49.1967, -74.1443, 10.2787, 1.14 ) }
    dend_19 { pt3dadd( 50.2845, -75.3293, 10.5114, 0.45 ) }
    dend_19 { pt3dadd( 51.3611, -76.3377, 10.7764, 1.14 ) }
    dend_19 { pt3dadd( 52.6073, -77.3433, 11.0619, 0.45 ) }
    dend_19 { pt3dadd( 54.3153, -78.6125, 11.358, 0.45 ) }
    dend_19 { pt3dadd( 56.2735, -80.0559, 11.6051, 0.45 ) }
    dend_19 { pt3dadd( 58.2841, -81.5082, 11.7513, 0.45 ) }
    dend_19 { pt3dadd( 60.1232, -82.826, 11.8073, 0.45 ) }
    dend_19 { pt3dadd( 62.6879, -84.761, 11.8316, 0.68 ) }
    dend_19 { pt3dadd( 64.4165, -86.2297, 11.8228, 0.68 ) }
    dend_19 { pt3dadd( 65.9445, -87.7783, 11.8493, 0.68 ) }
    dend_19 { pt3dadd( 67.4828, -89.5713, 11.9288, 0.68 ) }
    dend_19 { pt3dadd( 68.2737, -90.631, 11.9985, 0.68 ) }
    dend_19 { pt3dadd( 69.4939, -92.5564, 12.1419, 0.91 ) }
    dend_19 { pt3dadd( 70.7103, -94.9449, 12.2646, 0.45 ) }
    dend_19 { pt3dadd( 71.9208, -97.8032, 12.2978, 0.68 ) }
    dend_19 { pt3dadd( 72.3337, -98.8648, 12.2524, 0.68 ) }
    dend_19 { pt3dadd( 73.0035, -100.698, 12.0709, 0.68 ) }
    dend_19 { pt3dadd( 73.661, -102.552, 11.7823, 0.68 ) }
    dend_19 { pt3dadd( 74.5453, -104.975, 11.2359, 0.68 ) }
    dend_19 { pt3dadd( 75.2076, -106.708, 10.7479, 0.68 ) }
    dend_19 { pt3dadd( 75.9477, -108.666, 10.1302, 0.68 ) }
    dend_19 { pt3dadd( 76.4568, -110.017, 9.7167, 0.68 ) }
    dend_19 { pt3dadd( 77.068, -111.544, 9.25624, 0.91 ) }
    dend_19 { pt3dadd( 77.8497, -113.352, 8.73039, 0.68 ) }
    dend_19 { pt3dadd( 78.3324, -114.398, 8.41617, 0.23 ) }
    dend_19 { pt3dadd( 78.6459, -115.116, 8.19507, 0.23 ) }
    dend_19 { pt3dadd( 78.9969, -116.006, 7.92968, 0.23 ) }
    dend_19 { pt3dadd( 79.6018, -117.594, 7.47258, 0.45 ) }
    dend_19 { pt3dadd( 80.194, -119.172, 7.04923, 0.45 ) }
    dend_19 { pt3dadd( 80.9948, -121.291, 6.51647, 0.45 ) }
    dend_19 { pt3dadd( 81.6189, -122.898, 6.13194, 0.91 ) }
    dend_19 { pt3dadd( 82.5395, -125.223, 5.59969, 0.68 ) }
    dend_19 { pt3dadd( 83.0498, -126.596, 5.28883, 0.68 ) }
    dend_19 { pt3dadd( 83.6826, -128.638, 4.80716, 0.23 ) }
    dend_19 { pt3dadd( 83.8732, -129.482, 4.59359, 0.23 ) }
    dend_19 { pt3dadd( 83.9671, -130.106, 4.42674, 0.23 ) }
    dend_19 { pt3dadd( 84.0927, -131.666, 3.944, 0.23 ) }
    dend_19 { pt3dadd( 84.073, -133.993, 3.06728, 0.45 ) }
    dend_19 { pt3dadd( 83.8867, -135.987, 2.1838, 0.45 ) }
    dend_19 { pt3dadd( 83.4856, -138.343, 0.984292, 0.45 ) }
    dend_19 { pt3dadd( 83.2986, -139.205, 0.507765, 0.23 ) }
    dend_19 { pt3dadd( 82.9602, -140.492, -0.232774, 0.23 ) }
    dend_19 { pt3dadd( 82.5804, -141.732, -0.980755, 0.45 ) }
    dend_19 { pt3dadd( 82.0115, -143.426, -2.04634, 0.23 ) }
    dend_19 { pt3dadd( 81.2314, -146.016, -3.66451, 0.45 ) }
    dend_19 { pt3dadd( 80.792, -147.707, -4.66702, 0.68 ) }
    dend_19 { pt3dadd( 80.4596, -149.293, -5.52422, 0.23 ) }
    dend_19 { pt3dadd( 80.3237, -150.266, -5.98732, 0.23 ) }
    dend_19 { pt3dadd( 80.2564, -151.303, -6.39576, 0.68 ) }
    dend_19 { pt3dadd( 80.3138, -153.441, -7.10015, 0.23 ) }
    dend_19 { pt3dadd( 80.5182, -155.071, -7.54987, 0.23 ) }
    dend_19 { pt3dadd( 80.7918, -156.469, -7.91343, 0.68 ) }
    dend_19 { pt3dadd( 81.1662, -158.077, -8.34304, 0.23 ) }
    dend_19 { pt3dadd( 81.6737, -160.284, -8.87488, 0.23 ) }
    dend_19 { pt3dadd( 82.0926, -162.321, -9.32596, 0.68 ) }
    dend_19 { pt3dadd( 82.3913, -163.959, -9.70464, 0.45 ) }
    dend_19 { pt3dadd( 82.6783, -165.741, -10.1769, 0.68 ) }
    dend_19 { pt3dadd( 82.9197, -167.673, -10.7547, 0.45 ) }
    dend_19 { pt3dadd( 83.0334, -169.26, -11.2897, 0.23 ) }
    dend_19 { pt3dadd( 83.0346, -170.173, -11.6335, 0.23 ) }
    dend_19 { pt3dadd( 82.9913, -171.608, -12.1841, 0.45 ) }
    dend_19 { pt3dadd( 82.9172, -173.861, -12.9852, 0.45 ) }
    dend_19 { pt3dadd( 82.8752, -176.144, -13.7242, 0.45 ) }
    dend_19 { pt3dadd( 82.8662, -178.62, -14.4867, 0.45 ) }
    dend_19 { pt3dadd( 82.8861, -180.895, -15.2123, 0.45 ) }
    dend_19 { pt3dadd( 82.9384, -182.324, -15.6592, 0.45 ) }
    dend_19 { pt3dadd( 83.0479, -184.306, -16.2808, 0.45 ) }
    dend_19 { pt3dadd( 83.2584, -186.592, -17.0395, 0.45 ) }
    dend_19 { pt3dadd( 83.5732, -189.361, -18.0108, 0.91 ) }
    dend_19 { pt3dadd( 83.8174, -191.112, -18.6208, 0.45 ) }
    dend_19 { pt3dadd( 84.0326, -192.487, -19.0803, 0.68 ) }
    dend_19 { pt3dadd( 84.4517, -195.021, -19.8885, 0.45 ) }
    dend_19 { pt3dadd( 84.7007, -196.473, -20.3326, 0.45 ) }
    dend_19 { pt3dadd( 85.0103, -198.196, -20.7981, 1.14 ) }
    dend_19 { pt3dadd( 85.4039, -200.419, -21.3201, 0.23 ) }
    dend_19 { pt3dadd( 85.6923, -202.245, -21.6916, 0.23 ) }
    dend_19 { pt3dadd( 85.89, -203.778, -21.9829, 0.23 ) }
    dend_19 { pt3dadd( 86.125, -205.528, -22.2799, 0.45 ) }
    dend_19 { pt3dadd( 86.3506, -207.057, -22.5933, 0.68 ) }
    dend_19 { pt3dadd( 86.5385, -208.205, -22.9154, 0.45 ) }
    dend_19 { pt3dadd( 86.7221, -209.238, -23.287, 0.68 ) }
    dend_19 { pt3dadd( 86.893, -210.036, -23.5916, 0.68 ) }
    dend_19 { pt3dadd( 87.1356, -211.007, -23.9577, 0.68 ) }
    dend_19 { pt3dadd( 87.6138, -212.863, -24.5832, 0.45 ) }
    dend_19 { pt3dadd( 88.1427, -214.871, -25.1802, 0.45 ) }
    dend_19 { pt3dadd( 88.496, -216.25, -25.5338, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_19 { pt3dadd( 88.9378, -218.13, -25.9822, 0.91 ) }
    dend_19 { pt3dadd( 89.3458, -220.027, -26.409, 0.23 ) }
    dend_19 { pt3dadd( 89.7324, -222.097, -26.8594, 0.68 ) }
    dend_19 { pt3dadd( 89.8771, -222.932, -27.0337, 0.68 ) }
    dend_19 { pt3dadd( 90.172, -224.811, -27.4777, 0.23 ) }
    dend_19 { pt3dadd( 90.3339, -226.5, -28.01, 0.68 ) }
    dend_19 { pt3dadd( 90.3482, -227.648, -28.5676, 0.23 ) }
    dend_19 { pt3dadd( 90.329, -228.102, -28.8695, 0.68 ) }
    dend_19 { pt3dadd( 90.2995, -229.035, -29.6138, 0.23 ) }
    dend_19 { pt3dadd( 90.2763, -230.273, -30.6833, 0.68 ) }
    dend_19 { pt3dadd( 90.3281, -231.777, -32.0168, 0.23 ) }
    dend_19 { pt3dadd( 90.4912, -233.233, -33.2097, 0.68 ) }
    dend_19 { pt3dadd( 90.821, -234.862, -34.4157, 0.23 ) }
    dend_19 { pt3dadd( 91.1847, -235.919, -35.0673, 0.45 ) }
    dend_19 { pt3dadd( 91.925, -237.391, -35.7531, 0.45 ) }
    dend_19 { pt3dadd( 92.7192, -238.626, -36.1626, 0.45 ) }
    dend_19 { pt3dadd( 93.814, -240.163, -36.5258, 0.45 ) }
    dend_19 { pt3dadd( 94.4357, -240.983, -36.6623, 0.91 ) }
    dend_19 { pt3dadd( 95.7385, -242.597, -36.9101, 0.23 ) }
    dend_19 { pt3dadd( 97.0062, -244.2, -37.1828, 0.68 ) }
    dend_19 { pt3dadd( 98.4061, -246.08, -37.5676, 0.45 ) }
    dend_19 { pt3dadd( 99.4401, -247.648, -37.975, 0.45 ) }
    dend_19 { pt3dadd( 100.084, -248.844, -38.3192, 0.23 ) }
    dend_19 { pt3dadd( 100.54, -249.961, -38.6605, 0.68 ) }
    dend_19 { pt3dadd( 100.873, -251.304, -39.0969, 0.23 ) }
    dend_19 { pt3dadd( 100.997, -252.57, -39.5122, 0.23 ) }
    dend_19 { pt3dadd( 100.97, -254.029, -39.9851, 0.23 ) }
    dend_19 { pt3dadd( 100.727, -256.022, -40.6143, 0.23 ) }
    dend_19 { pt3dadd( 100.385, -257.423, -41.0002, 0.23 ) }
    dend_19 { pt3dadd( 99.7084, -259.15, -41.338, 0.23 ) }
    dend_19 { pt3dadd( 99.0578, -260.619, -41.5642, 0.23 ) }
    dend_19 { pt3dadd( 98.5519, -261.607, -41.6682, 0.23 ) }
    dend_19 { pt3dadd( 98.0162, -262.412, -41.7246, 0.68 ) }
    dend_19 { pt3dadd( 96.7494, -263.792, -41.7463, 0.23 ) }
    dend_19 { pt3dadd( 95.0141, -265.18, -41.598, 0.23 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 35/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 15.7683, -30.8866, 8.36187, 0.45 ) }
    dend_18 { pt3dadd( 16.038, -32.1448, 6.87868, 0.45 ) }
    dend_18 { pt3dadd( 16.2202, -33.689, 5.18996, 0.45 ) }
    dend_18 { pt3dadd( 16.2895, -34.791, 4.15412, 0.45 ) }
    dend_18 { pt3dadd( 16.3568, -35.5881, 3.56108, 0.45 ) }
    dend_18 { pt3dadd( 16.4666, -36.9089, 2.76574, 0.45 ) }
    dend_18 { pt3dadd( 16.5939, -38.2091, 2.12407, 0.91 ) }
    dend_18 { pt3dadd( 16.6773, -39.2265, 1.7488, 0.68 ) }
    dend_18 { pt3dadd( 16.7906, -40.881, 1.25877, 1.36 ) }
    dend_18 { pt3dadd( 17.1373, -43.6836, 0.583311, 1.14 ) }
    dend_18 { pt3dadd( 17.575, -45.911, 0.134901, 0.45 ) }
    dend_18 { pt3dadd( 18.1813, -48.3893, -0.288831, 0.91 ) }
    dend_18 { pt3dadd( 18.6158, -50.0709, -0.550331, 0.45 ) }
    dend_18 { pt3dadd( 19.3437, -52.925, -0.952896, 0.68 ) }
    dend_18 { pt3dadd( 20.0652, -55.5824, -1.29384, 0.68 ) }
    dend_18 { pt3dadd( 20.7104, -57.7808, -1.53891, 0.68 ) }
    dend_18 { pt3dadd( 21.3896, -59.9631, -1.75206, 0.68 ) }
    dend_18 { pt3dadd( 22.2238, -62.7543, -1.98468, 0.68 ) }
    dend_18 { pt3dadd( 22.8172, -64.9605, -2.14159, 0.68 ) }
    dend_18 { pt3dadd( 23.6632, -68.4549, -2.40738, 0.45 ) }
    dend_18 { pt3dadd( 24.0017, -70.01, -2.54437, 0.45 ) }
    dend_18 { pt3dadd( 24.46, -71.9656, -2.72923, 0.68 ) }
    dend_18 { pt3dadd( 24.8546, -73.4232, -2.87831, 0.23 ) }
    dend_18 { pt3dadd( 25.5162, -75.4919, -3.11296, 0.91 ) }
    dend_18 { pt3dadd( 26.3366, -77.7961, -3.39308, 0.23 ) }
    dend_18 { pt3dadd( 26.971, -79.4424, -3.61292, 0.68 ) }
    dend_18 { pt3dadd( 28.1027, -82.2084, -3.99326, 0.91 ) }
    dend_18 { pt3dadd( 29.6876, -85.8311, -4.556, 0.91 ) }
    dend_18 { pt3dadd( 30.758, -88.159, -4.9641, 0.91 ) }
    dend_18 { pt3dadd( 31.447, -89.6836, -5.21709, 0.23 ) }
    dend_18 { pt3dadd( 32.0962, -91.3393, -5.4671, 0.68 ) }
    dend_18 { pt3dadd( 32.5493, -92.6939, -5.66731, 0.68 ) }
    dend_18 { pt3dadd( 33.0838, -94.5017, -5.90739, 0.23 ) }
    dend_18 { pt3dadd( 33.5994, -96.2037, -6.08373, 0.68 ) }
    dend_18 { pt3dadd( 34.4105, -98.8452, -6.34036, 0.68 ) }
    dend_18 { pt3dadd( 35.1332, -101.326, -6.58059, 0.68 ) }
    dend_18 { pt3dadd( 35.5347, -102.709, -6.69977, 0.68 ) }
    dend_18 { pt3dadd( 35.9554, -104.085, -6.8217, 0.68 ) }
    dend_18 { pt3dadd( 36.7113, -106.444, -7.06072, 0.68 ) }
    dend_18 { pt3dadd( 37.5538, -109.088, -7.42102, 0.68 ) }
    dend_18 { pt3dadd( 38.4355, -111.973, -7.96791, 0.68 ) }
    dend_18 { pt3dadd( 39.135, -114.382, -8.46363, 0.23 ) }
    dend_18 { pt3dadd( 39.4687, -115.654, -8.72895, 1.14 ) }
    dend_18 { pt3dadd( 39.8699, -117.477, -9.13564, 0.23 ) }
    dend_18 { pt3dadd( 40.0546, -118.598, -9.40005, 0.68 ) }
    dend_18 { pt3dadd( 40.4702, -121.393, -10.0314, 0.23 ) }
    dend_18 { pt3dadd( 40.6427, -122.584, -10.3025, 0.23 ) }
    dend_18 { pt3dadd( 40.8223, -124.254, -10.723, 0.23 ) }
    dend_18 { pt3dadd( 40.9536, -126.409, -11.2815, 0.68 ) }
    dend_18 { pt3dadd( 41.0499, -128.934, -11.9469, 0.68 ) }
    dend_18 { pt3dadd( 41.1334, -130.86, -12.4843, 0.23 ) }
    dend_18 { pt3dadd( 41.1717, -132.277, -12.9036, 0.91 ) }
    dend_18 { pt3dadd( 41.1245, -134.922, -13.7643, 0.91 ) }
    dend_18 { pt3dadd( 40.9137, -137.592, -14.6181, 0.23 ) }
    dend_18 { pt3dadd( 40.7668, -139.243, -15.0862, 0.68 ) }
    dend_18 { pt3dadd( 40.6249, -140.748, -15.4718, 0.23 ) }
    dend_18 { pt3dadd( 40.463, -142.521, -15.8651, 0.68 ) }
    dend_18 { pt3dadd( 40.2701, -145.195, -16.3365, 0.91 ) }
    dend_18 { pt3dadd( 40.1054, -147.973, -16.7119, 0.45 ) }
    dend_18 { pt3dadd( 39.9642, -151.017, -17.1409, 0.45 ) }
    dend_18 { pt3dadd( 39.8421, -152.995, -17.4551, 0.45 ) }
    dend_18 { pt3dadd( 39.7274, -154.99, -17.7831, 0.68 ) }
    dend_18 { pt3dadd( 39.6501, -158.989, -18.4367, 0.45 ) }
    dend_18 { pt3dadd( 39.6803, -161.6, -18.8966, 0.45 ) }
    dend_18 { pt3dadd( 39.7518, -164.904, -19.6078, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_18 { pt3dadd( 39.7649, -167.017, -20.1263, 0.45 ) }
    dend_18 { pt3dadd( 39.794, -168.206, -20.4345, 0.23 ) }
    dend_18 { pt3dadd( 39.871, -170.08, -20.9445, 0.23 ) }
    dend_18 { pt3dadd( 40.0016, -171.681, -21.3677, 0.68 ) }
    dend_18 { pt3dadd( 40.1749, -173.403, -21.7816, 0.23 ) }
    dend_18 { pt3dadd( 40.2408, -174.506, -22.0201, 0.23 ) }
    dend_18 { pt3dadd( 40.2649, -176.466, -22.4181, 0.23 ) }
    dend_18 { pt3dadd( 40.2026, -178.264, -22.7693, 0.23 ) }
    dend_18 { pt3dadd( 40.1431, -180.555, -23.1641, 0.23 ) }
    dend_18 { pt3dadd( 40.1288, -181.788, -23.3663, 0.45 ) }
    dend_18 { pt3dadd( 40.1139, -184.591, -23.8347, 0.23 ) }
    dend_18 { pt3dadd( 40.0647, -187.154, -24.2966, 0.68 ) }
    dend_18 { pt3dadd( 39.9571, -191.082, -25.0442, 0.23 ) }
    dend_18 { pt3dadd( 39.8593, -193.917, -25.6234, 0.23 ) }
    dend_18 { pt3dadd( 39.796, -195.446, -25.9555, 0.23 ) }
    dend_18 { pt3dadd( 39.782, -196.918, -26.2455, 0.23 ) }
    dend_18 { pt3dadd( 39.8325, -199.201, -26.6915, 0.45 ) }
    dend_18 { pt3dadd( 39.8163, -200.072, -26.8837, 0.68 ) }
    dend_18 { pt3dadd( 39.6235, -201.495, -27.2505, 0.23 ) }
    dend_18 { pt3dadd( 39.4078, -202.298, -27.4711, 0.23 ) }
    dend_18 { pt3dadd( 38.9828, -203.901, -27.7913, 0.23 ) }
    dend_18 { pt3dadd( 41.7865, -213.246, -29.8737, 0.23 ) }
    dend_18 { pt3dadd( 44.638, -222.683, -31.3999, 0.23 ) }
    dend_18 { pt3dadd( 47.4704, -232.248, -31.4071, 0.23 ) }
    dend_18 { pt3dadd( 50.6156, -241.703, -30.9321, 0.23 ) }
    dend_18 { pt3dadd( 52.3065, -251.468, -29.7964, 0.23 ) }
    dend_18 { pt3dadd( 54.0685, -261.259, -30.542, 0.23 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 27/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -105.477, 82.1023, 17.3734, 0.45 ) }
    dend_8 { pt3dadd( -107.577, 83.9798, 17.2967, 0.45 ) }
    dend_8 { pt3dadd( -108.802, 84.9768, 17.2421, 0.68 ) }
    dend_8 { pt3dadd( -111.121, 86.7047, 17.1596, 0.45 ) }
    dend_8 { pt3dadd( -113.173, 88.1463, 17.0216, 0.23 ) }
    dend_8 { pt3dadd( -115.317, 89.5343, 16.8579, 0.68 ) }
    dend_8 { pt3dadd( -117.66, 90.9261, 16.6772, 0.23 ) }
    dend_8 { pt3dadd( -119.328, 91.7785, 16.5545, 0.23 ) }
    dend_8 { pt3dadd( -121.419, 92.7408, 16.3999, 0.45 ) }
    dend_8 { pt3dadd( -123.913, 93.7997, 16.1651, 0.23 ) }
    dend_8 { pt3dadd( -125.81, 94.5919, 15.9682, 0.23 ) }
    dend_8 { pt3dadd( -128.393, 95.6639, 15.6602, 0.91 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 39/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -105.477, 82.1023, 17.3734, 0.23 ) }
    dend_7 { pt3dadd( -104.05, 83.3277, 17.9673, 0.23 ) }
    dend_7 { pt3dadd( -103.333, 84.0949, 18.276, 0.91 ) }
    dend_7 { pt3dadd( -102.321, 85.5484, 18.7414, 0.68 ) }
    dend_7 { pt3dadd( -100.835, 87.6818, 19.4245, 0.23 ) }
    dend_7 { pt3dadd( -100.129, 88.6945, 19.7488, 0.68 ) }
    dend_7 { pt3dadd( -98.0239, 91.7177, 20.7168, 0.23 ) }
    dend_7 { pt3dadd( -96.5593, 94.1475, 21.3248, 0.23 ) }
    dend_7 { pt3dadd( -95.0005, 97.107, 21.931, 0.23 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 48/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 84.014, 268.904, 84.7889, 0.23 ) }
    dend_51 { pt3dadd( 85.253, 270.252, 85.0506, 0.23 ) }
    dend_51 { pt3dadd( 86.4968, 271.605, 85.3134, 0.23 ) }
    dend_51 { pt3dadd( 87.4373, 272.628, 85.512, 0.23 ) }
    dend_51 { pt3dadd( 88.305, 273.572, 85.6953, 0.23 ) }
    dend_51 { pt3dadd( 89.3755, 274.737, 85.9214, 0.23 ) }
    dend_51 { pt3dadd( 91.1251, 276.64, 86.291, 0.23 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 55/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 84.014, 268.904, 84.7889, 0.23 ) }
    dend_50 { pt3dadd( 83.3564, 269.654, 84.7484, 0.23 ) }
    dend_50 { pt3dadd( 82.8011, 270.347, 84.7305, 0.68 ) }
    dend_50 { pt3dadd( 81.9499, 271.5, 84.7143, 0.23 ) }
    dend_50 { pt3dadd( 81.4369, 272.275, 84.7066, 0.91 ) }
    dend_50 { pt3dadd( 80.4577, 273.865, 84.6936, 0.45 ) }
    dend_50 { pt3dadd( 79.44, 275.662, 84.689, 0.23 ) }
    dend_50 { pt3dadd( 79.1024, 276.397, 84.6831, 0.23 ) }
    dend_50 { pt3dadd( 78.6229, 277.59, 84.6343, 0.23 ) }
    dend_50 { pt3dadd( 78.2418, 278.786, 84.5607, 1.14 ) }
    dend_50 { pt3dadd( 77.9706, 279.828, 84.4841, 0.23 ) }
    dend_50 { pt3dadd( 77.6912, 281.201, 84.3126, 0.23 ) }
    dend_50 { pt3dadd( 77.4211, 282.931, 84.0577, 0.91 ) }
    dend_50 { pt3dadd( 77.198, 284.416, 83.8016, 0.23 ) }
    dend_50 { pt3dadd( 77.0075, 285.899, 83.511, 0.23 ) }
    dend_50 { pt3dadd( 76.8466, 287.261, 83.2041, 0.23 ) }
    dend_50 { pt3dadd( 76.7539, 288.407, 82.906, 0.23 ) }
    dend_50 { pt3dadd( 75.1193, 295.188, 82.981, 0.23 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 73/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -128.393, 95.6639, 15.6602, 0.23 ) }
    dend_10 { pt3dadd( -129.711, 94.6402, 15.333, 0.23 ) }
    dend_10 { pt3dadd( -130.656, 94.1127, 15.0937, 0.23 ) }
    dend_10 { pt3dadd( -132.522, 93.0718, 14.6215, 0.68 ) }
    dend_10 { pt3dadd( -134.176, 92.1486, 14.2027, 0.23 ) }
    dend_10 { pt3dadd( -135.647, 91.328, 13.8304, 0.23 ) }
    dend_10 { pt3dadd( -136.933, 90.6104, 13.5048, 0.23 ) }
    dend_10 { pt3dadd( -138.361, 89.7821, 13.1064, 0.23 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 81/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -128.393, 95.6639, 15.6602, 0.23 ) }
    dend_9 { pt3dadd( -129.394, 96.6431, 15.6906, 0.23 ) }
    dend_9 { pt3dadd( -130.391, 97.6191, 15.721, 0.68 ) }
    dend_9 { pt3dadd( -131.151, 98.3628, 15.7441, 0.91 ) }
    dend_9 { pt3dadd( -132.087, 99.2789, 15.7726, 0.23 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_35, dend_30, dend_27, dend_24, dend_13, dend_0, dend_40, dend_39, dend_37, dend_36, dend_34, dend_31, dend_29, dend_28, dend_26, dend_25, dend_21, dend_14, dend_4, dend_1, dend_46, dend_41, dend_33, dend_32, dend_23, dend_22, dend_20, dend_15, dend_12, dend_5, dend_3, dend_2, dend_52, dend_47, dend_45, dend_42, dend_17, dend_16, dend_11, dend_6, dend_54, dend_53, dend_49, dend_48, dend_44, dend_43, dend_19, dend_18, dend_8, dend_7, dend_51, dend_50, dend_10, dend_9]}
    ModelViewParmSubset_2 = new SectionList()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_35, dend_30, dend_27, dend_24, dend_13, dend_0, dend_40, dend_39, dend_37, dend_36, dend_34, dend_31, dend_29, dend_28, dend_26, dend_25, dend_21, dend_14, dend_4, dend_1, dend_46, dend_41, dend_33, dend_32, dend_23, dend_22, dend_20, dend_15, dend_12, dend_5, dend_3, dend_2, dend_52, dend_47, dend_45, dend_42, dend_17, dend_16, dend_11, dend_6, dend_54, dend_53, dend_49, dend_48, dend_44, dend_43, dend_19, dend_18, dend_8, dend_7, dend_51, dend_50, dend_10, dend_9]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_11 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_38, dend_35, dend_30, dend_27, dend_24, dend_13, dend_0, axon_0, dend_40, dend_39, dend_37, dend_36, dend_34, dend_31, dend_29, dend_28, dend_26, dend_25, dend_21, dend_14, dend_4, dend_1, axon_1, dend_46, dend_41, dend_33, dend_32, dend_23, dend_22, dend_20, dend_15, dend_12, dend_5, dend_3, dend_2, dend_52, dend_47, dend_45, dend_42, dend_17, dend_16, dend_11, dend_6, dend_54, dend_53, dend_49, dend_48, dend_44, dend_43, dend_19, dend_18, dend_8, dend_7, dend_51, dend_50, dend_10, dend_9]}
    ModelViewParmSubset_5 = new SectionList()
    dend_38 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_24 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_39 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_37 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_36 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_34 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_29 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_28 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_33 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_23 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_22 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_20 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_12 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_3 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_2 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_52 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_47 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_45 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_42 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_16 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_6 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_54 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_53 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_43 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_19 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_18 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_38 OneSecGrp_SectionRef_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_30 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_40 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_13 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_1 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_27 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_46 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_41 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_14 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_21 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_31 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_15 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_17 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_35 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_4 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_32 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_5 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_11 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_7 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_8 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_9 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_10 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_26 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_25 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_44 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_49 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_51 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_50 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_48 OneSecGrp_SectionRef_48.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, axon_0, axon_0, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_24 nseg = 9
    dend_39 nseg = 11
    dend_37 nseg = 7
    dend_36 nseg = 3
    dend_34 nseg = 7
    dend_29 nseg = 11
    dend_28 nseg = 7
    dend_33 nseg = 3
    dend_23 nseg = 7
    dend_22 nseg = 7
    dend_20 nseg = 9
    dend_12 nseg = 7
    dend_3 nseg = 3
    dend_2 nseg = 5
    dend_52 nseg = 9
    dend_47 nseg = 15
    dend_45 nseg = 9
    dend_42 nseg = 9
    dend_16 nseg = 9
    dend_6 nseg = 5
    dend_54 nseg = 3
    dend_53 nseg = 5
    dend_43 nseg = 5
    dend_19 nseg = 13
    dend_18 nseg = 13
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L5_NBC_12baea0593_0_0


