// Cell: bAC217_L5_BTC_9b82f426e5_0_0
/*
{
  "id" : "bAC217_L5_BTC_9b82f426e5_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.88047, -10.716, -1.11504, 1.92098", "-1.70946, -9.6452, -1.01124, 2.92873", "-1.53845, -8.57443, -0.907436, 4.88462", "-1.36745, -7.50365, -0.803634, 6.96834", "-1.19644, -6.43288, -0.699833, 8.71039", "-1.02543, -5.3621, -0.596031, 9.75846", "-0.854423, -4.29132, -0.492229, 10.7595", "-0.683416, -3.22055, -0.388427, 11.4328", "-0.512408, -2.14977, -0.284625, 11.7309", "-0.341401, -1.079, -0.180824, 11.6952", "-0.170393, -0.00821902, -0.0770218, 11.6235", "6.14341E-4, 1.06256, 0.0267799, 11.5198", "0.171622, 2.13333, 0.130582, 11.2257", "0.342629, 3.20411, 0.234383, 10.7284", "0.513637, 4.27489, 0.338185, 9.45222", "0.684644, 5.34566, 0.441987, 7.57235", "0.855652, 6.41644, 0.545789, 5.71519", "1.02666, 7.48721, 0.649591, 4.19151", "1.19767, 8.55799, 0.753392, 3.44771", "1.36867, 9.62877, 0.857194, 2.95035", "1.53968, 10.6995, 0.960996, 1.95307" ]
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "1.39356, 0.682199, -10.5931, 2.8", "1.39356, 0.682199, -10.5931, 2.8", "4.68864, 0.953949, -16.2215, 2.28", "5.25591, 0.973881, -17.1812, 2.28", "5.93875, 0.921876, -18.5436, 2.58", "7.12475, 0.774123, -21.3298, 2.8", "8.19376, 0.616421, -24.3712, 2.58", "8.53021, 0.556916, -25.649, 2.43", "9.22433, 0.35297, -29.0539, 2.43", "10.1078, -0.111031, -34.9546, 1.77", "10.2593, -0.297393, -36.964, 1.77", "10.2052, -0.556301, -39.339, 1.84", "9.95819, -0.750351, -41.1348, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450001137941537
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "0.483558, 10.5939, 3.03697, 2.06", "0.483558, 10.5939, 3.03697, 2.06", "0.307529, 11.11, 3.37637, 2.06", "-0.046529, 12.3507, 4.16196, 2.06", "-0.189796, 13.0001, 4.52324, 2.06", "-0.328307, 13.8252, 4.9493, 2.06", "-0.41916, 14.459, 5.2681, 2.28", "-0.534277, 15.5004, 5.7503, 2.5", "-0.595188, 16.5362, 6.19627, 2.65", "-0.613614, 17.7524, 6.64795, 2.73", "-0.578145, 18.5706, 6.96022, 2.95", "-0.504106, 19.2469, 7.22546, 3.02", "-0.307175, 20.2203, 7.66565, 2.43", "0.00226659, 21.1619, 8.17423, 1.92", "0.187904, 21.5641, 8.46164, 1.77", "0.548061, 22.2326, 9.01799, 1.77", "0.865026, 22.801, 9.52684, 1.92", "1.46312, 23.9013, 10.5546, 1.69", "1.91786, 24.8158, 11.4286, 1.92", "2.42586, 26.0404, 12.6012, 1.62", "2.60657, 26.6164, 13.1256, 1.62", "2.73232, 27.2511, 13.6498, 1.62", "2.79976, 28.0612, 14.2647, 1.77", "2.80374, 28.7364, 14.7394, 2.06", "2.8001, 29.497, 15.2606, 2.06", "2.83053, 30.1211, 15.6852, 2.06", "2.87975, 30.6986, 16.1002, 2.21", "3.04841, 31.9301, 17.0035, 1.92", "3.24092, 32.9245, 17.7615, 1.77", "3.38281, 33.4913, 18.2127, 1.77", "3.57946, 34.1322, 18.7164, 1.99" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450001137941537
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.95644, -10.3878, -0.843029, 1.84", "-1.95644, -10.3878, -0.843029, 1.84", "-2.08552, -11.302, -0.759391, 1.4", "-2.18372, -12.9756, -0.618177, 1.03", "-2.13105, -14.5326, -0.450087, 0.96", "-2.05328, -15.2117, -0.367954, 1.18", "-1.90801, -15.9843, -0.268961, 1.25", "-1.65329, -16.756, -0.163282, 1.25", "-1.24022, -17.5192, -0.0512664, 1.25", "-0.540058, -18.3878, 0.0798294, 1.69", "-0.113845, -18.8341, 0.135994, 1.92", "0.301284, -19.2685, 0.210568, 1.92", "0.984777, -20.056, 0.426545, 1.33", "1.41252, -20.652, 0.633225, 1.03", "1.85362, -21.434, 0.966434, 1.03", "2.18579, -22.187, 1.30412, 1.4", "2.66438, -23.5595, 1.92612, 1.4", "3.07806, -25.1332, 2.63282, 1.4", "3.26309, -26.1496, 3.07145, 1.25", "3.40277, -27.4484, 3.5902, 0.66", "3.43872, -28.5725, 3.97268, 0.74", "3.41291, -29.706, 4.24729, 1.03", "3.36209, -30.4379, 4.30514, 1.25", "3.29761, -31.0989, 4.2603, 1.25", "3.20066, -31.8051, 4.13064, 1.25", "3.02913, -32.794, 3.85033, 1.11", "2.78649, -33.9695, 3.47691, 1.11", "2.53279, -35.1474, 3.08406, 1.33", "2.33562, -36.1232, 2.75671, 1.33", "2.0944, -37.4961, 2.38616, 1.33", "1.93375, -38.6572, 2.13055, 0.88", "1.83679, -39.7747, 2.00055, 1.03", "1.79104, -41.3514, 2.05036, 0.66", "1.86551, -42.4437, 2.28777, 0.66", "2.25444, -44.1619, 3.08098, 0.66", "2.46492, -44.7772, 3.47986, 0.96", "3.05419, -46.3021, 4.62042, 1.18", "3.34693, -47.0609, 5.21001, 1.4", "3.48397, -47.4962, 5.53463, 1.4", "3.73613, -48.9052, 6.36061, 0.88", "3.74305, -50.1198, 6.81358, 0.88", "3.62924, -51.0802, 7.04858, 1.18", "3.42234, -52.1134, 7.17748, 1.03", "3.13714, -53.2878, 7.21775, 0.88", "2.81673, -54.458, 7.18117, 0.88", "2.61013, -55.1876, 7.08844, 1.18", "2.41977, -56.0709, 6.92658, 1.18", "2.35165, -56.8168, 6.76335, 1.18", "2.41763, -58.0144, 6.45936, 1.18", "2.53976, -58.7178, 6.25069, 1.18", "2.74334, -59.5224, 5.99944, 1.18", "3.12235, -60.8071, 5.61066, 0.74", "3.49365, -62.069, 5.25618, 0.74", "3.82395, -63.4163, 4.92629, 1.03", "4.00011, -64.5246, 4.71497, 0.96", "4.04258, -65.2867, 4.61121, 0.88", "3.99836, -66.2069, 4.51426, 0.88", "3.84341, -67.2228, 4.43528, 0.96", "3.57487, -68.3817, 4.39742, 0.96", "3.24184, -69.6642, 4.45168, 0.96", "2.96231, -70.9461, 4.6039, 1.03", "2.84139, -71.8793, 4.79203, 0.81", "2.82636, -72.4625, 4.95209, 0.81", "2.85634, -73.1777, 5.18212, 0.81", "2.91854, -74.2313, 5.54693, 0.74", "2.91976, -75.3536, 5.94395, 0.66", "2.78399, -76.805, 6.42034, 0.74", "2.61614, -77.6782, 6.673, 0.74", "2.2571, -78.9629, 6.93639, 0.74", "1.87082, -80.026, 7.0651, 0.66", "1.29504, -81.297, 7.0513, 0.66", "0.776183, -82.2484, 6.93188, 0.66", "0.0400832, -83.4197, 6.62746, 0.81", "-0.53241, -84.2601, 6.29579, 1.18", "-0.828416, -84.6937, 6.07208, 1.4", "-1.53592, -85.8056, 5.41283, 1.25", "-1.80366, -86.2793, 5.11375, 0.96", "-2.10063, -86.929, 4.72581, 0.96", "-2.3941, -88.0149, 4.20085, 0.66", "-2.44697, -88.8307, 3.94355, 0.74", "-2.39598, -89.648, 3.78813, 0.81", "-2.25525, -90.6718, 3.66983, 0.81", "-2.01437, -92.0109, 3.55743, 0.81", "-1.64028, -93.8119, 3.46293, 0.66", "-1.21801, -95.7368, 3.40248, 0.66", "-0.861952, -97.5799, 3.35088, 0.74", "-0.723906, -98.6597, 3.33147, 0.81", "-0.677736, -99.9522, 3.32455, 0.88", "-0.732313, -100.577, 3.34561, 0.96", "-0.911962, -101.327, 3.4114, 0.96", "-1.43316, -102.608, 3.57193, 0.74", "-2.17371, -103.999, 3.78025, 0.74", "-2.63101, -104.815, 3.91139, 1.03", "-3.14852, -105.863, 4.07451, 1.33", "-3.40316, -106.527, 4.17287, 1.33", "-3.60556, -107.41, 4.30849, 1.33", "-3.65385, -108.969, 4.56607, 0.81", "-3.4936, -110.112, 4.76482, 0.81", "-3.07581, -111.837, 5.06451, 0.81", "-2.79161, -112.824, 5.21777, 0.81", "-2.41755, -114.046, 5.40882, 0.81", "-2.05295, -115.273, 5.60964, 0.59", "-1.77163, -116.45, 5.79853, 0.52", "-1.69922, -117.129, 5.88245, 0.52", "-1.72557, -118.515, 5.94707, 0.52", "-1.80886, -119.311, 5.93279, 0.81", "-1.96972, -120.215, 5.86671, 0.81", "-2.27848, -121.529, 5.72587, 0.74", "-2.67352, -123.026, 5.53671, 0.81", "-3.1132, -124.54, 5.34304, 0.81", "-3.38717, -125.411, 5.22678, 0.96", "-3.65414, -126.197, 5.15076, 0.96", "-3.94661, -127.044, 5.15238, 1.03", "-4.1606, -127.68, 5.25704, 1.03", "-4.43462, -128.606, 5.55987, 0.81", "-4.65157, -129.505, 5.93526, 0.74", "-4.9119, -130.967, 6.55538, 0.66", "-5.11504, -132.693, 7.2742, 0.66", "-5.21461, -134.096, 7.81787, 0.52", "-5.27729, -135.672, 8.34482, 0.52", "-5.29758, -136.645, 8.59224, 0.74", "-5.33534, -137.936, 8.8304, 0.96", "-5.39011, -138.838, 8.93555, 1.03", "-5.5039, -139.836, 9.01362, 1.03", "-5.67009, -140.918, 9.10497, 0.74", "-5.87965, -142.073, 9.28126, 0.52", "-6.0739, -143.114, 9.51219, 0.52", "-6.35948, -144.589, 9.89051, 0.88", "-6.55425, -145.589, 10.1331, 0.74", "-6.76145, -146.843, 10.4071, 0.44", "-6.8702, -147.71, 10.56, 0.59", "-6.94098, -148.775, 10.6821, 0.59", "-6.92084, -150.384, 10.7157, 0.59", "-6.78161, -151.672, 10.6431, 0.81", "-6.51774, -152.908, 10.5336, 0.81", "-6.28186, -153.688, 10.454, 0.96", "-5.9907, -154.461, 10.3665, 0.96", "-5.52051, -155.559, 10.2535, 0.74", "-5.05669, -156.711, 10.1627, 0.74", "-4.68892, -157.876, 10.1285, 0.74", "-4.45917, -158.863, 10.1639, 0.74", "-4.2554, -160.06, 10.2641, 0.74", "-4.09551, -161.414, 10.4268, 0.81", "-3.95362, -163.52, 10.7116, 0.81", "-3.91209, -165.251, 10.9857, 0.74", "-3.92033, -166.665, 11.2547, 0.81", "-3.93195, -167.27, 11.3971, 1.03", "-3.9513, -167.988, 11.6206, 1.03" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450001137941537,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.53968, 10.6995, 0.960996, 0.524308", "3.90527, 25.5118, 0.960996, 0.524308", "6.27086, 40.3241, 0.960996, 0.524308" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_108",
    "id" : "dend_108",
    "points3d" : [ "9.95819, -0.750351, -41.1348, 0.88", "10.0492, -0.972016, -42.3683, 0.88", "10.3077, -2.25412, -48.3363, 0.88", "10.3065, -2.46263, -49.1515, 0.88", "10.2112, -3.0941, -51.2513, 1.25", "10.0407, -3.73963, -53.2492, 1.03", "9.81563, -4.39462, -55.1986, 0.81", "9.6346, -4.76532, -56.3641, 0.81", "9.32171, -5.21427, -57.7408, 1.03", "9.03845, -5.50867, -59.0645, 1.4", "8.69559, -5.81183, -60.9038, 1.4", "8.505, -5.98898, -62.4765, 1.11", "8.45523, -6.07932, -63.7155, 0.88", "8.47352, -6.2, -65.2629, 1.11", "8.55854, -6.43923, -67.9034, 1.11", "8.60243, -6.66293, -70.0234, 0.88", "8.57596, -6.85878, -71.5736, 0.74", "8.51377, -6.98065, -72.4632, 0.88", "8.27822, -7.21745, -74.048, 0.59", "7.90168, -7.40325, -75.5685, 0.52", "7.57575, -7.42492, -76.421, 0.74", "6.94182, -7.28403, -77.8012, 0.88", "6.60621, -7.17603, -78.5115, 1.11", "6.16124, -7.02927, -79.4485, 1.25", "5.58115, -6.88643, -80.7551, 1.62", "5.0915, -6.89736, -82.1495, 1.4", "4.92056, -6.98498, -82.9802, 1.18", "4.82376, -7.17088, -84.145, 0.66", "4.80786, -7.25138, -84.7609, 0.66", "4.78348, -7.30883, -85.9262, 0.66", "4.71998, -7.24438, -87.1872, 0.81", "4.58143, -7.02501, -89.0618, 0.66", "4.45747, -6.85405, -90.2868, 0.81", "4.31911, -6.68744, -91.5916, 0.66", "4.16406, -6.55519, -93.5875, 0.66", "4.0569, -6.53863, -94.6273, 0.52", "3.93643, -6.56398, -95.5108, 0.88", "3.72182, -6.65548, -96.8916, 1.03", "3.49074, -6.80071, -98.4455, 1.4", "3.03553, -7.16561, -101.89, 0.88", "2.79813, -7.31143, -103.61, 0.52", "2.64489, -7.32423, -104.477, 1.18", "2.51439, -7.27607, -105.038, 1.47", "2.36647, -7.1746, -105.519, 1.47", "1.92803, -6.78431, -106.643, 1.03", "1.57149, -6.33016, -107.534, 1.25", "1.04741, -5.40724, -109.432, 0.96", "0.870558, -5.05994, -110.258, 0.81", "0.721889, -4.75642, -111.131, 1.03", "0.626071, -4.54262, -111.78, 1.03", "0.425284, -3.90338, -113.609, 1.18", "0.332082, -3.30164, -115.254, 0.96", "0.309638, -2.90005, -116.303, 1.33", "0.303395, -1.98725, -118.505, 1.47", "0.283189, -1.19506, -120.171, 1.33", "0.245756, -0.567243, -121.246, 0.52", "0.147559, 0.475599, -122.602, 1.33", "0.0908289, 0.970385, -123.071, 1.33", "-0.079179, 2.28419, -124.039, 0.88", "-0.290056, 3.38231, -124.614, 0.66", "-0.455609, 4.07203, -124.897, 0.96", "-0.63891, 4.78358, -125.155, 1.18", "-0.815036, 5.55851, -125.376, 1.33", "-0.976184, 6.68438, -125.701, 0.88", "-0.979007, 7.72301, -126.031, 0.52", "-0.778274, 8.99269, -126.523, 0.52", "-0.442516, 9.98565, -126.981, 0.52", "-0.057096, 10.6021, -127.342, 1.18", "0.599317, 11.2338, -127.822, 0.96", "1.18837, 11.5772, -128.207, 0.52", "1.70786, 11.7542, -128.583, 0.29", "2.53276, 11.8531, -129.333, 0.29", "3.53896, 11.7922, -130.416, 0.37", "4.02305, 11.7098, -131.05, 0.52", "4.8173, 11.5441, -132.191, 1.25", "5.72173, 11.3267, -133.591, 1.55", "6.95505, 11.0097, -135.614, 1.18", "7.44705, 10.8886, -136.458, 0.88", "8.68297, 10.6192, -138.572, 1.11", "9.03778, 10.5697, -139.127, 1.11", "9.43536, 10.5657, -139.662, 0.59", "10.1207, 10.6889, -140.419, 0.37", "10.9317, 11.0005, -141.235, 0.74", "11.2326, 11.1781, -141.574, 0.74", "11.6349, 11.5634, -142.167, 0.37", "11.8407, 11.9942, -142.807, 0.37", "11.7548, 12.4036, -143.491, 0.66", "11.3003, 12.849, -144.58, 0.52", "10.839, 13.0871, -145.395, 0.52", "10.406, 13.2284, -146.086, 0.52", "10.2364, 13.2621, -146.345, 0.88", "9.17876, 13.3907, -148.183, 1.11", "8.25473, 13.4552, -150.025, 0.44", "8.06722, 13.4706, -150.435, 0.59", "7.50815, 13.5561, -151.755, 1.25", "7.15473, 13.6347, -152.651, 1.4", "5.84519, 13.9862, -156.089, 1.18", "5.06404, 14.198, -158.237, 0.52", "4.86995, 14.2388, -158.814, 0.52", "4.54365, 14.2825, -159.8, 0.44", "3.97942, 14.3209, -161.458, 0.66", "3.49385, 14.3384, -162.793, 0.88", "3.00158, 14.3486, -164.013, 0.66", "2.52276, 14.4023, -165.256, 0.44", "2.17568, 14.4955, -166.168, 0.37", "1.9676, 14.6247, -166.69, 0.52", "1.77684, 14.8963, -167.095, 0.66", "1.50102, 15.5211, -167.685, 0.66", "1.06997, 16.6577, -168.568, 0.66", "0.847311, 17.3564, -169.04, 0.29", "0.628743, 18.1511, -169.568, 0.29", "0.373209, 19.1291, -170.232, 0.88", "0.038245, 20.4047, -171.068, 0.37" ],
    "parent" : "dend_86",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "9.95819, -0.750351, -41.1348, 1.84", "10.5185, 0.982416, -42.2628, 1.84", "10.934, 2.25009, -43.0651, 1.25", "11.1308, 2.96023, -43.5115, 1.25", "11.3464, 4.03728, -44.1687, 1.18", "11.4392, 4.97757, -44.7537, 1.18", "11.4512, 5.96603, -45.4014, 1.33", "11.3898, 6.76682, -45.9246, 1.69", "11.2259, 7.48153, -46.5132, 1.69", "10.9912, 8.08508, -47.0822, 1.55", "10.5034, 8.93358, -48.0523, 1.33", "10.0041, 9.57704, -49.2123, 1.25", "9.65526, 9.9296, -50.1033, 1.47", "9.06887, 10.4676, -51.6958, 1.92", "8.65916, 10.843, -52.8559, 2.28", "8.09838, 11.3819, -54.5122, 2.73", "6.76676, 12.7711, -58.5361, 1.33", "6.42626, 13.1745, -59.608, 1.18", "6.19544, 13.5666, -60.5355, 1.18", "6.04064, 14.0116, -61.4429, 1.4", "5.97866, 14.4728, -62.3045, 1.62", "6.03841, 15.3434, -63.7942, 1.69", "6.28891, 16.298, -65.3719, 1.69", "7.01692, 18.0231, -68.4949, 1.33", "7.44517, 18.8306, -70.115, 1.55", "7.85303, 19.4425, -71.4737, 1.92", "8.18503, 19.8383, -72.4379, 2.21", "8.5281, 20.1449, -73.2714, 2.43", "8.55358, 20.162, -73.3212, 2.43" ],
    "parent" : "dend_86",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "3.57946, 34.1322, 18.7164, 0.88", "5.08697, 33.6697, 18.279, 0.88", "5.80352, 33.4353, 18.1277, 0.88", "7.09948, 33.0175, 17.988, 0.88", "8.10262, 32.7315, 17.9497, 0.88", "10.6493, 32.1027, 18.0165, 0.74", "11.8999, 31.8458, 18.1046, 0.96", "12.8669, 31.6685, 18.2495, 1.11", "13.9651, 31.6039, 18.5624, 1.25", "14.7919, 31.6618, 18.9192, 1.77", "15.3706, 31.8032, 19.2801, 1.92", "15.724, 31.9587, 19.5872, 2.06", "16.2536, 32.2887, 20.0237, 1.55", "17.0138, 32.8776, 20.5562, 1.25" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "3.57946, 34.1322, 18.7164, 0.96", "4.43318, 35.0029, 18.1023, 0.96", "5.08477, 35.597, 17.7267, 0.88", "5.59654, 36.0222, 17.4807, 0.88", "6.28254, 36.5443, 17.2029, 1.18", "6.69485, 36.836, 17.062, 1.18", "7.28346, 37.2625, 16.8688, 1.18", "7.68305, 37.5377, 16.7806, 1.4", "7.97501, 37.7699, 16.7328, 1.4", "8.25058, 38.0901, 16.6779, 0.81", "8.43582, 38.5198, 16.6151, 0.81", "8.49587, 39.36, 16.4461, 0.66", "8.34194, 40.126, 16.2745, 0.66", "8.1487, 40.7056, 16.1417, 0.74", "7.92795, 41.2839, 15.9963, 0.74", "7.68475, 41.9207, 15.8141, 0.59", "7.45078, 42.5779, 15.5885, 0.59", "7.23767, 43.3268, 15.309, 0.81", "7.14318, 43.8942, 15.0831, 1.03", "7.10354, 44.6368, 14.8175, 1.03", "7.13033, 45.5327, 14.5621, 0.74", "7.19944, 46.3214, 14.3839, 0.52", "7.26386, 46.9832, 14.291, 0.52", "7.29282, 47.5428, 14.2641, 0.52", "7.27741, 48.3998, 14.3085, 0.88", "7.23068, 49.0971, 14.3886, 1.18", "7.20671, 49.4631, 14.4409, 1.18", "7.21107, 50.1487, 14.5267, 0.88", "7.35056, 51.0461, 14.5641, 0.52", "7.55753, 51.5463, 14.5378, 0.52", "7.95215, 52.149, 14.4594, 0.66", "8.42623, 52.733, 14.3604, 0.66", "9.02462, 53.4137, 14.2413, 0.66", "9.54184, 53.9874, 14.1396, 0.66", "10.1856, 54.7465, 14.0228, 1.11", "10.3671, 55.0169, 13.9914, 1.11", "10.5363, 55.4261, 13.9649, 1.11", "10.6402, 56.1814, 13.9268, 0.74", "10.5825, 56.7513, 13.8975, 0.74", "10.4199, 57.3685, 13.8516, 0.88", "10.2232, 57.908, 13.7898, 1.11", "10.0017, 58.4869, 13.6945, 1.11", "9.85141, 58.9057, 13.6112, 0.74", "9.68453, 59.4639, 13.4805, 0.74", "9.57372, 60.0498, 13.3255, 0.59", "9.54701, 60.781, 13.1099, 0.44", "9.65639, 61.4553, 12.8952, 0.44", "9.87913, 62.0469, 12.7027, 0.66", "10.1111, 62.4753, 12.5981, 0.81", "10.3624, 62.8504, 12.5407, 0.81", "10.7123, 63.3237, 12.5141, 0.81", "11.1221, 63.8714, 12.5377, 0.52", "11.4559, 64.3719, 12.5925, 0.52", "11.9553, 65.3146, 12.714, 1.11", "12.1276, 65.7547, 12.7867, 1.11", "12.2459, 66.1393, 12.8604, 1.11", "12.3589, 66.5605, 12.9464, 1.11", "12.5239, 67.189, 13.0294, 0.81", "12.7119, 67.9317, 13.0764, 0.81", "12.9554, 69.0356, 13.0718, 0.66", "13.0979, 69.8253, 13.0239, 0.74", "13.2187, 70.73, 12.9303, 0.66", "13.3377, 72.2248, 12.6917, 0.81", "13.335, 73.1248, 12.5008, 0.81", "13.2054, 74.0987, 12.2081, 0.81", "12.9678, 74.9082, 11.8599, 0.81", "12.7574, 75.3877, 11.6007, 1.03", "12.531, 75.7961, 11.3084, 1.03", "12.2621, 76.2464, 10.9423, 0.66", "11.9311, 76.8643, 10.383, 0.96", "11.7001, 77.4234, 9.88288, 0.96", "11.5649, 77.8936, 9.51042, 1.03", "11.3204, 79.1241, 8.59717, 0.59", "11.2194, 79.7228, 8.1463, 0.66", "11.1543, 80.0762, 7.85711, 0.66", "11.0237, 80.6375, 7.36958, 0.66", "10.8639, 81.134, 6.90127, 0.66", "10.5283, 81.908, 6.06933, 0.66", "10.0517, 82.7534, 5.09142, 0.66", "9.61976, 83.3811, 4.31786, 0.81", "9.22482, 83.8728, 3.69611, 0.81", "8.78426, 84.346, 3.09843, 0.81", "8.05922, 85.0703, 2.26736, 0.59", "7.54896, 85.5963, 1.79756, 0.44", "7.02341, 86.1707, 1.43559, 0.44", "6.67752, 86.5563, 1.26013, 0.66", "6.22148, 87.0676, 1.09319, 0.66", "5.70722, 87.6543, 0.96131, 0.66", "5.14354, 88.3081, 0.859117, 0.88", "4.54956, 89.0214, 0.7297, 0.81", "4.09629, 89.5868, 0.615885, 0.81", "3.70668, 90.1041, 0.508394, 0.66", "3.46847, 90.4377, 0.438314, 0.81", "3.11951, 90.9781, 0.330451, 0.81", "2.88075, 91.4407, 0.251501, 0.74", "2.6586, 92.0972, 0.158354, 0.59", "2.48337, 92.8532, 0.0728413, 0.59", "2.39424, 93.2781, 0.0213633, 0.59", "2.20366, 94.091, -0.14133, 0.59", "1.94799, 95.0097, -0.415552, 0.59", "1.73434, 95.6345, -0.657311, 0.59", "1.46108, 96.2548, -0.970412, 0.66", "1.03118, 96.9876, -1.39929, 0.66", "0.304432, 98.0494, -2.10885, 0.96", "-0.162709, 98.6068, -2.54844, 1.11", "-0.429549, 98.8737, -2.7978, 0.81", "-0.814643, 99.2189, -3.15957, 0.59", "-1.60919, 99.923, -3.92843, 0.59" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-3.9513, -167.988, 11.6206, 0.29", "-3.03723, -167.022, 11.3079, 0.29", "-2.52744, -166.367, 11.1183, 0.29", "-1.75795, -165.174, 10.8301, 0.29", "-1.05187, -163.857, 10.5844, 0.29", "-0.573846, -162.811, 10.4189, 0.44", "-0.117009, -161.62, 10.2637, 0.44", "0.218396, -160.309, 10.1502, 0.37", "0.504076, -158.839, 10.0475, 0.37", "0.735204, -156.858, 9.95075, 0.59", "0.796274, -155.802, 9.9246, 0.59", "0.815486, -154.686, 9.91066, 0.37", "0.779731, -153.731, 9.91978, 0.37" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-3.9513, -167.988, 11.6206, 0.52", "-3.15081, -169.188, 11.8584, 0.52", "-2.3797, -170.473, 12.0441, 0.52", "-1.97235, -171.219, 12.1218, 0.52", "-1.49707, -172.196, 12.2149, 0.52", "-0.952184, -173.41, 12.2384, 0.74", "-0.584494, -174.312, 12.2001, 0.96", "-0.36711, -174.99, 12.1264, 1.18", "-0.218039, -175.69, 12.0223, 1.33", "-0.117341, -176.651, 11.8908, 1.47", "-0.137924, -178.488, 11.6892, 0.74", "-0.351726, -179.933, 11.6158, 0.74", "-0.607205, -180.821, 11.6608, 0.59", "-0.919386, -181.698, 11.7996, 0.59", "-1.34538, -182.82, 12.0752, 0.59", "-1.62697, -183.625, 12.3266, 0.59", "-1.86874, -184.444, 12.635, 0.59", "-2.10162, -185.639, 13.0533, 0.52", "-2.19589, -187.01, 13.4315, 0.59", "-2.16145, -187.906, 13.6223, 0.59", "-2.0126, -189.201, 13.8202, 0.88", "-1.85208, -190.185, 13.9259, 1.25", "-1.70998, -190.865, 13.9756, 1.25", "-1.5277, -191.671, 14.0321, 1.25", "-1.34144, -192.486, 14.1224, 0.96", "-1.11708, -193.375, 14.2635, 0.96", "-0.797747, -194.538, 14.5101, 0.74", "-0.413411, -195.919, 14.8525, 0.74", "-0.103311, -197.07, 15.1596, 0.66", "0.236243, -198.398, 15.5294, 0.66", "0.468568, -199.392, 15.8122, 0.66", "0.738623, -200.785, 16.2135, 0.59", "0.834321, -201.559, 16.4306, 0.81", "0.853916, -202.5, 16.6651, 0.81", "0.77374, -203.565, 16.9028, 0.81", "0.58741, -204.531, 17.1015, 0.66", "0.320484, -205.348, 17.2813, 0.66", "-0.0891353, -206.234, 17.522, 0.66", "-0.56447, -207.109, 17.8011, 0.74", "-1.00778, -207.897, 18.0789, 0.88", "-1.37551, -208.632, 18.3448, 0.88", "-1.65043, -209.381, 18.6101, 0.74", "-1.89622, -210.81, 19.116, 0.74", "-1.90366, -211.526, 19.3795, 0.74", "-1.76621, -212.786, 19.8309, 0.59", "-1.4939, -214.193, 20.304, 0.59", "-1.2388, -215.16, 20.6168, 0.59", "-0.879249, -216.414, 20.9887, 0.59", "-0.712491, -217.058, 21.1532, 0.96", "-0.631749, -217.721, 21.3476, 0.96", "-0.689288, -218.319, 21.5839, 0.96", "-0.900697, -219.221, 21.9673, 0.52", "-1.20616, -220.064, 22.3436, 0.52", "-1.57341, -220.81, 22.6869, 0.52", "-2.43938, -222.31, 23.4377, 0.74", "-3.29028, -223.498, 24.1807, 1.03" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "6.27086, 40.3241, 0.960996, 0.181933", "8.63644, 55.1364, 0.960996, 0.181933", "11.002, 69.9487, 0.960996, 0.181933" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_105",
    "id" : "dend_105",
    "points3d" : [ "8.55358, 20.162, -73.3212, 1.47", "7.78332, 20.1749, -74.7567, 1.47", "6.27545, 20.471, -77.259, 1.03", "5.81668, 20.6408, -78.0691, 1.03", "5.50316, 20.8521, -78.8742, 1.03", "5.24213, 21.1208, -79.7934, 0.81", "5.1198, 21.3141, -80.4388, 0.66", "5.0651, 21.7162, -81.5327, 1.03", "5.19313, 22.1618, -82.6492, 1.03", "5.93671, 23.2369, -85.6083, 0.96", "6.26917, 23.5001, -86.4847, 0.96", "6.82345, 23.7299, -87.6173, 0.74", "7.24591, 23.8078, -88.4492, 0.59", "7.52417, 23.8351, -88.9852, 0.81", "7.85271, 23.8597, -89.6339, 1.03", "8.32807, 23.926, -90.6991, 1.18", "8.79237, 24.1059, -92.3632, 1.47", "9.1955, 24.5013, -95.21, 1.18", "9.23591, 24.67, -96.3174, 1.11", "9.20724, 24.7623, -97.0238, 1.11", "8.95807, 24.9997, -99.2066, 1.11", "8.58885, 25.1639, -101.142, 0.81", "8.4187, 25.1781, -101.774, 0.81", "8.23797, 25.1527, -102.388, 1.11", "7.46777, 24.9363, -105.107, 0.81", "7.20849, 24.8581, -106.072, 0.81", "6.86893, 24.7811, -107.273, 0.96", "6.49971, 24.7077, -108.674, 0.81", "6.14303, 24.6849, -110.153, 0.52", "5.97762, 24.7154, -110.823, 0.52", "5.73069, 24.885, -111.712, 0.74", "5.39967, 25.4, -113.444, 1.33" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "8.55358, 20.162, -73.3212, 2.43", "8.21554, 20.6245, -73.5851, 2.43", "7.0547, 21.9774, -74.3041, 0.88", "6.06397, 23.0564, -74.8177, 0.88", "5.40957, 23.7972, -75.1192, 0.88", "4.70258, 24.6746, -75.4338, 0.74", "3.97087, 25.7334, -75.8042, 0.88", "3.54472, 26.4352, -76.0434, 1.03", "3.0401, 27.4913, -76.4125, 1.03", "2.63642, 28.857, -76.8715, 1.92", "2.47698, 29.6967, -77.1637, 1.55", "2.25781, 31.1875, -77.6916, 1.11", "2.05066, 32.5802, -78.184, 0.96", "1.79017, 33.8287, -78.6809, 0.96", "1.52661, 34.681, -79.049, 0.96", "1.21155, 35.3447, -79.3684, 0.96", "0.633074, 36.2192, -79.798, 0.96", "0.0474871, 36.9252, -80.1349, 0.96", "-0.871043, 37.903, -80.5962, 0.88", "-1.54357, 38.5565, -80.9314, 1.33", "-2.11038, 39.1329, -81.2642, 1.55", "-2.43643, 39.5228, -81.5029, 1.77", "-2.78647, 40.0814, -81.8486, 1.77", "-2.85794, 40.2371, -81.9405, 1.77" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "17.0138, 32.8776, 20.5562, 0.29", "17.2811, 32.7258, 21.2448, 0.29", "17.896, 32.4768, 22.5361, 0.29", "18.4185, 32.2436, 23.5382, 0.29", "18.8877, 32.0249, 24.3488, 0.29", "19.7933, 31.7048, 25.8409, 0.29", "20.5259, 31.5243, 26.9922, 0.29", "21.3872, 31.3465, 28.28, 0.29", "21.8178, 31.2611, 28.8628, 0.66", "22.3933, 31.1599, 29.5681, 0.29", "23.7264, 31.0908, 31.0778, 0.29", "24.2583, 31.1661, 31.6657, 0.52", "24.9841, 31.3628, 32.4798, 0.22", "25.4872, 31.5683, 33.0469, 0.22", "25.9648, 31.8239, 33.5863, 0.22", "26.7942, 32.3656, 34.5235, 0.22", "27.6312, 32.9689, 35.4647, 0.22", "28.061, 33.3303, 35.9812, 0.29", "28.6169, 33.9197, 36.7062, 0.29", "28.9307, 34.3081, 37.1601, 0.29", "29.1134, 34.5427, 37.4476, 0.44", "29.6617, 35.2375, 38.4067, 0.22", "30.0043, 35.7227, 39.0438, 0.37", "30.3387, 36.2087, 39.7101, 0.66", "30.761, 36.8358, 40.6031, 0.81", "31.1287, 37.4403, 41.4105, 0.44", "31.4063, 37.9029, 42.0432, 0.52", "34.862, 41.418, 48.5846, 0.52", "37.2538, 45.4177, 55.3354, 0.52", "40.6176, 49.2854, 61.7337, 0.52" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "17.0138, 32.8776, 20.5562, 1.47", "17.0117, 33.7871, 21.0866, 1.47", "17.0007, 34.9316, 21.7265, 0.66", "17.0224, 35.8524, 22.216, 0.59", "17.0889, 36.6479, 22.6414, 0.59", "17.1666, 37.5777, 23.1386, 0.74", "17.2242, 38.2663, 23.5068, 0.88", "17.2348, 38.6809, 23.7109, 1.11", "17.2301, 39.2947, 24.0563, 1.33", "17.2651, 39.9044, 24.361, 1.33" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-1.60919, 99.923, -3.92843, 0.37", "-1.88455, 100.807, -3.93684, 0.37", "-2.02271, 101.369, -3.96114, 0.44", "-2.16027, 102.173, -4.01106, 0.44", "-2.24134, 102.907, -4.07926, 0.44", "-2.31012, 104.105, -4.21106, 0.52", "-2.30983, 104.9, -4.27802, 0.52", "-2.26755, 105.289, -4.30708, 0.66", "-2.06496, 106.232, -4.3661, 0.66", "-1.81855, 107.042, -4.4, 0.81", "-1.60407, 107.598, -4.40027, 0.88", "-1.19806, 108.453, -4.404, 0.96", "-0.847618, 109.106, -4.43504, 0.96", "-0.37666, 109.895, -4.56495, 0.59", "0.0766773, 110.616, -4.77629, 0.44", "0.388337, 111.146, -4.9902, 0.44", "0.918905, 112.21, -5.5108, 0.66", "1.06506, 112.603, -5.7244, 0.66", "1.31883, 113.73, -6.35791, 0.44", "1.36737, 114.517, -6.77062, 0.44", "1.31709, 115.499, -7.2131, 0.59", "1.2387, 116.17, -7.44791, 0.59", "1.11353, 117.094, -7.67382, 0.37", "1.01012, 117.987, -7.85451, 0.37", "0.917272, 119.104, -8.03664, 0.52", "0.894636, 120.036, -8.19567, 0.52", "0.92591, 121.295, -8.41451, 0.52", "0.972925, 122.41, -8.60443, 0.44", "1.00679, 123.586, -8.78597, 0.66", "0.997879, 124.008, -8.83652, 0.88", "0.903528, 125.059, -8.93771, 0.52", "0.801228, 125.724, -8.9884, 0.44", "0.597894, 126.791, -9.04188, 0.44", "0.431852, 127.866, -9.07408, 0.66", "0.389188, 128.593, -9.08977, 0.96", "0.41805, 129.374, -9.11601, 0.96", "0.518851, 130.016, -9.13107, 0.96", "0.80601, 131.2, -9.1516, 0.37", "1.11146, 132.363, -9.15597, 0.29", "1.43565, 133.384, -9.16361, 0.44", "1.61078, 133.909, -9.16403, 0.44", "1.91878, 134.942, -9.14207, 0.37", "2.05274, 135.475, -9.11457, 0.37", "2.27608, 137.086, -8.93339, 0.59" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-1.60919, 99.923, -3.92843, 0.52", "-3.1008, 100.023, -4.33179, 0.52", "-4.74515, 100.403, -4.8582, 0.44", "-5.3602, 100.631, -5.08053, 0.37", "-5.83223, 100.832, -5.25032, 0.37", "-6.70447, 101.209, -5.54202, 0.59", "-7.09085, 101.351, -5.6784, 0.66", "-7.77296, 101.59, -5.9809, 0.66", "-8.45838, 101.77, -6.35659, 0.59", "-9.09181, 101.872, -6.74809, 0.59", "-9.76535, 101.947, -7.23541, 0.59", "-10.8138, 102.06, -8.0929, 0.44", "-11.8279, 102.217, -8.97948, 0.44", "-12.6631, 102.405, -9.76542, 0.44", "-13.2698, 102.564, -10.392, 0.44", "-14.0965, 102.857, -11.3452, 0.59", "-14.6387, 103.141, -12.0354, 0.74", "-15.008, 103.457, -12.5213, 0.88", "-15.2959, 103.8, -12.8965, 0.88" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "0.779731, -153.731, 9.91978, 0.37", "0.536447, -152.594, 9.82568, 0.37", "0.349765, -151.236, 9.74653, 0.37", "0.227282, -149.661, 9.6598, 0.37", "0.174904, -148.501, 9.57151, 0.37", "0.121488, -147.298, 9.45783, 0.37", "0.0648283, -146.291, 9.34828, 0.37", "0.00993866, -145.314, 9.22286, 0.37", "-0.0276761, -144.532, 9.10529, 0.37", "-0.0225181, -143.681, 8.98091, 0.37", "3.52318E-4, -142.875, 8.86842, 0.37", "0.0366498, -141.854, 8.73469, 0.37", "0.0882364, -140.826, 8.6213, 0.59", "0.150349, -140.09, 8.55012, 0.81", "0.370794, -138.49, 8.44039, 0.29", "0.522188, -137.711, 8.38823, 0.88", "0.671994, -137.121, 8.33186, 0.96", "0.84595, -136.589, 8.24631, 0.44", "1.24078, -135.567, 7.99669, 0.37", "1.64121, -134.721, 7.63234, 0.37", "1.97861, -134.068, 7.23751, 0.37", "2.25311, -133.554, 6.89474, 0.37", "2.67719, -132.684, 6.32468, 0.52", "2.85058, -132.26, 6.05902, 0.52", "3.38635, -130.628, 5.15205, 0.52", "3.58688, -129.745, 4.70761, 0.52", "3.70169, -128.907, 4.34231, 0.59", "3.7686, -127.935, 3.97046, 0.29", "3.80091, -126.924, 3.6297, 0.29", "3.84018, -126.04, 3.33269, 0.37", "3.89932, -125.019, 3.00234, 0.59", "3.99672, -124.391, 2.76205, 0.74", "4.14061, -123.815, 2.53125, 0.74", "4.39407, -123.033, 2.22625, 0.66", "4.7667, -121.918, 1.87208, 0.59", "4.9551, -121.243, 1.71609, 0.59", "5.1065, -120.401, 1.61567, 0.44", "5.20078, -119.464, 1.56571, 0.37", "5.24886, -118.434, 1.56884, 0.37", "5.2801, -117.513, 1.59612, 0.29", "5.33439, -116.602, 1.64764, 0.29", "5.47672, -115.324, 1.71129, 0.29", "5.64884, -114.478, 1.70514, 0.74", "5.82034, -113.957, 1.64967, 0.74", "6.25265, -112.963, 1.42444, 0.37", "6.65896, -112.147, 1.13269, 0.59", "6.86104, -111.738, 0.943045, 0.59", "7.41123, -110.561, 0.304573, 0.37", "7.69039, -109.877, -0.0830454, 0.37", "7.99651, -108.987, -0.576056, 0.37", "8.16524, -108.366, -0.879805, 0.52", "8.33596, -107.677, -1.18123, 0.29", "8.50495, -106.956, -1.41969, 0.29", "8.64291, -106.365, -1.54259, 0.29", "8.83381, -105.723, -1.65829, 0.29", "9.02963, -105.142, -1.76168, 0.37", "9.25972, -104.439, -1.89207, 0.37", "9.4582, -103.732, -2.02862, 0.44", "9.6265, -102.967, -2.16839, 0.44", "9.77282, -102.291, -2.27976, 0.44", "9.98822, -101.439, -2.41697, 0.29", "10.1989, -100.845, -2.51709, 0.29", "10.615, -99.9357, -2.66548, 0.29", "11.0099, -99.2051, -2.76659, 0.74", "11.4105, -98.5216, -2.82817, 0.74", "11.7975, -97.9232, -2.84106, 0.74", "12.3554, -97.1665, -2.81841, 0.52", "12.9227, -96.438, -2.7586, 0.52", "13.7764, -95.3871, -2.63129, 0.52", "14.2952, -94.7092, -2.53881, 0.66", "14.7808, -93.9593, -2.44922, 0.44", "15.096, -93.3629, -2.38757, 0.44", "15.3603, -92.7081, -2.35133, 0.81", "15.5225, -92.1741, -2.36567, 0.81", "15.64, -91.3718, -2.47603, 0.37", "15.6802, -90.447, -2.75976, 0.37", "15.6759, -89.5775, -3.06946, 0.37", "15.673, -88.7591, -3.38365, 0.37", "15.6915, -88.011, -3.67446, 0.52", "15.7488, -87.3915, -3.93207, 0.52", "16.0901, -85.6865, -4.69984, 0.37", "16.6694, -84.0876, -5.45924, 0.29", "17.084, -83.2728, -5.85625, 0.29", "17.3793, -82.7964, -6.09018, 0.29", "17.9649, -81.9203, -6.51827, 0.66", "18.3072, -81.4123, -6.74433, 0.81", "19.0006, -80.3575, -7.10479, 0.44", "19.3978, -79.759, -7.26016, 0.59", "19.61, -79.387, -7.30211, 0.59", "19.9889, -78.621, -7.31662, 0.29", "20.3488, -77.8295, -7.26427, 0.29", "20.7187, -77.0422, -7.1749, 0.29", "21.3315, -75.766, -7.00821, 0.29", "21.8977, -74.5041, -6.87061, 0.29", "22.3555, -73.4221, -6.76918, 0.29", "22.932, -72.0625, -6.6493, 0.29", "23.6525, -70.3391, -6.5086, 0.29", "23.9523, -69.5922, -6.47465, 0.29", "24.4644, -68.2097, -6.4802, 0.29", "24.8664, -67.1152, -6.55416, 0.59", "25.0333, -66.6481, -6.61849, 0.59", "25.3403, -65.7475, -6.80309, 0.29", "25.7057, -64.6832, -7.07065, 0.66", "25.966, -64.0446, -7.25403, 0.66", "26.3725, -63.2479, -7.5266, 0.37", "26.7996, -62.4487, -7.86444, 0.22", "27.1015, -61.8596, -8.12671, 0.22", "27.3523, -61.3533, -8.35182, 0.22", "27.6659, -60.7146, -8.60844, 0.44", "28.0917, -59.8377, -8.91767, 0.29", "28.5404, -58.9574, -9.17691, 0.29", "29.003, -58.0666, -9.4364, 0.37", "29.292, -57.4874, -9.52735, 0.66", "29.4541, -57.089, -9.50018, 0.66", "29.763, -56.0947, -9.23648, 0.29", "29.9791, -55.2057, -8.84195, 0.74", "30.0699, -54.6319, -8.49321, 0.88", "30.2896, -52.5483, -7.05027, 0.37", "30.3926, -51.2348, -6.09938, 0.29", "30.453, -50.2428, -5.34292, 0.29", "30.4917, -49.0094, -4.34707, 0.29", "30.475, -47.463, -3.07556, 0.22", "30.4617, -46.8138, -2.55284, 0.22", "30.4372, -46.241, -2.18888, 0.22" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "0.779731, -153.731, 9.91978, 0.29", "0.310542, -153.437, 9.66642, 0.29", "-0.293917, -153.058, 9.34002, 0.29", "-1.37087, -152.382, 8.75848, 0.29" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-3.29028, -223.498, 24.1807, 0.59", "-2.91988, -224.745, 24.7655, 0.59", "-2.65611, -226.143, 25.3127, 0.59", "-2.48499, -227.391, 25.7271, 1.03", "-2.42181, -228.068, 25.9115, 1.11", "-2.34079, -228.747, 26.1237, 1.11", "-1.99279, -230.932, 26.8793, 0.81", "-1.72416, -232.49, 27.466, 0.74", "-1.34454, -234.232, 28.1439, 0.59", "-0.794564, -236.128, 28.918, 0.59", "0.172692, -238.593, 30.0779, 0.66", "0.808254, -239.859, 30.7511, 0.74", "1.21603, -240.519, 31.1414, 1.03", "1.69015, -241.19, 31.585, 0.81", "2.35949, -242.073, 32.2054, 0.52", "3.07671, -242.922, 32.838, 0.81", "3.78824, -243.893, 33.4082, 0.59", "4.24894, -244.683, 33.816, 0.52", "4.41325, -245.065, 33.9885, 0.74", "4.55308, -245.638, 34.2347, 0.74" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-3.29028, -223.498, 24.1807, 0.29", "-4.21916, -222.975, 24.1184, 0.29", "-5.18461, -222.569, 24.0273, 0.29", "-6.20856, -222.268, 23.92, 0.29", "-7.55009, -222.065, 23.7713, 0.22", "-9.12672, -222.064, 23.5902, 0.22", "-10.2473, -222.261, 23.4573, 0.22", "-11.3229, -222.654, 23.2916, 0.22", "-12.2541, -223.295, 23.1359, 0.22", "-13.0322, -224.199, 23.0019, 0.22", "-13.4344, -224.828, 22.9304, 0.22", "-13.811, -225.831, 22.8563, 0.22", "-24.182, -229.133, 22.1068, 0.22", "-34.8711, -230.359, 20.4323, 0.22", "-45.6649, -231.63, 19.7606, 0.22", "-56.2012, -234.062, 18.3993, 0.22", "-66.5341, -234.958, 15.0892, 0.22", "-75.9603, -235.875, 9.7193, 0.22", "-84.9117, -235.133, 3.56849, 0.22", "-94.2018, -236.6, -1.92123, 0.22", "-104.414, -239.14, -4.76226, 0.22" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_107",
    "id" : "dend_107",
    "points3d" : [ "5.39967, 25.4, -113.444, 0.74", "5.14176, 25.6203, -113.641, 0.74", "4.38224, 26.5208, -114.178, 0.74", "2.9653, 28.2008, -115.18, 0.52", "2.53818, 28.7072, -115.482, 1.03", "2.17617, 29.1364, -115.738, 1.03", "1.7632, 29.6261, -116.03, 0.22", "0.986407, 30.7428, -116.606, 0.22" ],
    "parent" : "dend_105",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_106",
    "id" : "dend_106",
    "points3d" : [ "5.39967, 25.4, -113.444, 0.96", "6.22851, 25.4347, -116.369, 0.96", "6.45606, 25.4489, -117.464, 0.66", "6.63333, 25.4923, -118.835, 0.44", "7.02842, 25.7181, -122.484, 0.29", "7.53859, 26.1886, -127.468, 1.18", "8.02671, 26.8327, -133.076, 0.59", "8.11391, 27.068, -135.079, 0.44", "8.16824, 27.4983, -138.632, 1.03", "8.07401, 28.0548, -142.545, 0.59", "7.97704, 28.3173, -143.87, 0.52", "7.60396, 29.2505, -147.247, 0.81", "7.42206, 29.8454, -149.124, 1.11" ],
    "parent" : "dend_105",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_102",
    "id" : "dend_102",
    "points3d" : [ "-2.85794, 40.2371, -81.9405, 0.96", "-2.3548, 41.8883, -84.1114, 0.96", "-1.91503, 42.896, -85.5648, 0.74", "-1.68756, 43.2238, -86.1967, 0.74", "-1.38464, 43.5047, -86.9447, 0.88", "-0.961875, 43.7544, -87.8944, 0.88", "-0.533283, 43.8986, -88.8084, 1.03", "0.285008, 43.9349, -90.2033, 1.33", "1.33571, 43.8445, -91.7564, 1.03", "2.08624, 43.7703, -92.7821, 1.33", "2.80719, 43.7285, -93.7246, 1.55", "4.27915, 43.8024, -95.5428, 1.33", "4.95584, 43.9612, -96.325, 0.81", "5.56283, 44.2751, -96.9163, 0.81", "6.4902, 45.0032, -97.6859, 1.03", "7.30194, 45.7606, -98.4, 1.03", "8.00445, 46.5135, -99.0853, 1.25", "8.48589, 47.0676, -99.6123, 1.33", "9.0571, 47.7503, -100.317, 1.4", "9.39512, 48.1455, -100.772, 1.4", "11.0078, 49.8304, -103.042, 1.33", "11.6811, 50.4205, -104.017, 1.18", "12.3615, 50.936, -105.109, 1.18" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "-2.85794, 40.2371, -81.9405, 1.55", "-2.84794, 41.6473, -82.0779, 1.55", "-2.71482, 43.06, -82.3044, 0.88", "-2.52267, 44.3398, -82.4883, 0.88", "-2.27026, 45.6024, -82.5904, 1.03", "-1.88303, 47.3164, -82.6617, 1.03", "-1.45999, 49.1359, -82.693, 1.03", "-1.00244, 50.868, -82.6805, 1.03", "-0.600632, 52.4017, -82.6396, 1.11", "-0.0689616, 54.6124, -82.5594, 1.18", "0.319322, 56.4718, -82.4779, 0.74", "0.648915, 58.3321, -82.3794, 0.74", "0.944433, 59.9372, -82.2907, 0.74", "1.37495, 62.08, -82.1959, 0.88", "1.66981, 63.4765, -82.1709, 1.11", "1.90396, 64.5536, -82.1272, 1.33", "2.1138, 65.5153, -82.027, 1.47", "2.42291, 66.9835, -81.7293, 0.81", "2.62976, 68.0672, -81.3749, 0.81", "2.85514, 69.2462, -80.8522, 1.03", "3.21243, 70.9603, -79.9812, 1.11", "3.50556, 72.2016, -79.3219, 0.88", "3.86462, 73.4193, -78.6712, 0.74", "4.30371, 74.5892, -78.1141, 0.59", "4.97782, 75.7591, -77.703, 0.88", "5.72976, 76.6908, -77.5772, 0.96", "6.36251, 77.3662, -77.6116, 0.96", "7.1863, 78.2602, -77.7246, 0.88", "8.00004, 79.2335, -77.9049, 0.74", "8.62752, 80.1569, -78.0837, 0.96", "9.17622, 81.254, -78.2578, 0.66", "9.83112, 83.0107, -78.471, 0.66", "10.5153, 85.2844, -78.6124, 1.11", "10.7689, 86.2436, -78.6049, 1.33", "11.1834, 87.988, -78.5355, 1.33", "11.703, 90.4265, -78.3848, 0.74", "12.1285, 92.5645, -78.192, 0.74", "12.4689, 94.3262, -77.9792, 1.03", "12.7662, 95.7027, -77.7669, 1.25" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "40.6176, 49.2854, 61.7337, 0.44", "38.4063, 49.9563, 68.5549, 0.44", "37.2903, 51.7753, 75.4452, 0.44", "35.6008, 52.6826, 82.3888, 0.44", "34.1712, 53.3668, 89.4141, 0.44" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "40.6176, 49.2854, 61.7337, 0.22", "49.5643, 54.2081, 68.8084, 0.44", "57.8409, 58.0924, 77.2007, 0.44", "66.5681, 63.9344, 83.8672, 0.44" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "17.2651, 39.9044, 24.361, 1.18", "17.5045, 40.6019, 25.909, 1.18", "17.8505, 42.1664, 28.6578, 0.59", "17.9145, 42.4879, 29.1332, 0.59", "18.0056, 42.8813, 29.6531, 0.52", "18.1393, 43.3891, 30.2611, 0.74", "18.2971, 43.9481, 30.8475, 0.59", "18.4986, 44.6744, 31.341, 0.59", "18.6722, 45.3076, 31.6438, 0.74", "18.847, 45.8252, 31.9033, 0.74", "19.4065, 47.1356, 32.6034, 1.62", "19.8618, 48.0062, 33.0954, 2.21", "20.2935, 48.7548, 33.5106, 2.06" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "17.2651, 39.9044, 24.361, 0.29", "17.9103, 38.7515, 23.9589, 0.29", "18.3045, 38.0473, 23.7132, 0.44", "18.4812, 37.7317, 23.603, 0.59", "18.9809, 36.8389, 23.2916, 0.52", "22.1299, 29.8167, 20.2336, 0.52", "24.1645, 23.05, 15.9372, 0.52", "26.9785, 15.9225, 12.7872, 0.52" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "2.27608, 137.086, -8.93339, 0.37", "2.00322, 138.109, -8.7794, 0.37", "1.94479, 138.659, -8.66529, 0.29", "1.93655, 139.322, -8.47121, 0.29", "1.95595, 140.09, -8.18607, 0.29", "1.98071, 141.181, -7.75904, 0.29", "1.98799, 142.068, -7.41057, 0.29", "2.03253, 143.108, -7.0038, 0.29", "2.04084, 144.304, -6.54962, 0.59", "1.96898, 145.246, -6.20066, 0.37", "1.8356, 145.887, -5.98141, 0.37", "1.69271, 146.32, -5.85049, 0.74", "1.46403, 146.903, -5.7212, 0.74", "0.956476, 148.146, -5.54633, 0.44", "0.585718, 149.089, -5.47358, 0.44", "0.264972, 150.033, -5.4022, 0.44", "0.0797466, 150.623, -5.30757, 0.44", "-0.235438, 151.616, -5.09403, 0.44", "-0.47731, 152.363, -4.90674, 0.44", "-0.708896, 153.103, -4.7089, 0.37", "-1.13679, 154.512, -4.34265, 0.37", "-1.58095, 155.973, -3.96128, 0.29", "-1.85857, 156.864, -3.73376, 0.29", "-2.13931, 157.692, -3.52337, 0.29", "-2.50813, 158.733, -3.32837, 0.29", "-2.80834, 159.563, -3.23865, 0.29", "-3.18733, 160.55, -3.18379, 0.29", "-3.51271, 161.352, -3.14586, 0.29", "-3.90508, 162.288, -3.03815, 0.29", "-4.51023, 163.637, -2.78654, 0.29", "-4.8034, 164.234, -2.63642, 0.29", "-5.27598, 165.168, -2.35603, 0.29", "-5.64965, 165.986, -2.08407, 0.29", "-6.00723, 167.006, -1.75265, 0.29", "-6.19689, 167.787, -1.52472, 0.29", "-6.26725, 168.149, -1.43968, 0.66", "-6.34004, 168.575, -1.39314, 0.66", "-6.48683, 169.453, -1.37432, 0.29", "-6.62514, 170.239, -1.39509, 0.29", "-6.79297, 171.215, -1.43383, 0.29", "-6.9572, 172.383, -1.4712, 0.29", "-7.05038, 173.121, -1.49916, 0.29", "-7.15682, 173.967, -1.53115, 0.74", "-7.21241, 174.489, -1.5477, 0.74", "-7.27438, 175.612, -1.56804, 0.29", "-7.26973, 176.422, -1.56871, 0.29", "-7.21568, 177.33, -1.55592, 0.29", "-7.15767, 178.127, -1.54136, 0.29", "-7.07558, 179.458, -1.49519, 0.29", "-7.05077, 180.236, -1.46456, 0.81", "-7.04008, 180.933, -1.47237, 0.81", "-6.98834, 181.937, -1.52552, 0.37", "-6.88372, 182.903, -1.6111, 0.29", "-6.76288, 183.74, -1.73898, 0.29", "-6.66547, 184.538, -1.93953, 0.29", "-6.58494, 185.85, -2.40116, 0.44", "-6.58837, 186.461, -2.68831, 0.44", "-6.62144, 187.003, -2.98664, 0.44", "-6.6681, 187.809, -3.49697, 0.37", "-6.69181, 188.555, -4.00322, 0.29", "-6.68812, 189.186, -4.43866, 0.29", "-6.65112, 189.792, -4.88179, 0.29", "-6.55827, 190.354, -5.35276, 0.59", "-6.26992, 191.19, -6.11227, 0.96", "-6.09968, 191.522, -6.41601, 0.96", "-5.67758, 192.185, -7.0186, 0.81", "-5.00808, 193.166, -7.87445, 0.29", "-4.66688, 193.665, -8.28467, 0.29", "-4.19941, 194.41, -8.85042, 0.29", "-3.93364, 194.918, -9.16897, 0.52", "-3.57214, 195.738, -9.59159, 0.52", "-3.35218, 196.292, -9.80931, 0.52", "-3.1616, 196.76, -9.95042, 0.44", "-2.74402, 197.745, -10.2063, 0.66", "-2.37592, 198.598, -10.4069, 0.37", "-2.10487, 199.228, -10.5532, 0.37", "-1.83062, 199.941, -10.7204, 0.37", "-1.63179, 200.678, -10.9873, 0.29", "-1.55265, 201.466, -11.4069, 0.29", "-1.61456, 202.137, -11.8217, 0.37", "-1.77233, 202.976, -12.3477, 0.52", "-1.9678, 203.79, -12.83, 0.59", "-2.29034, 205.084, -13.5686, 0.29", "-2.43975, 205.813, -13.9931, 0.29", "-2.62693, 207.282, -14.8736, 0.44", "-2.63127, 207.98, -15.2757, 0.59", "-2.55973, 208.627, -15.6169, 0.59", "-2.43261, 209.277, -15.9296, 0.29", "-2.15589, 210.484, -16.4832, 0.37", "-2.01259, 211.265, -16.8406, 0.37", "-1.88931, 212.134, -17.2248, 0.59", "-1.82309, 212.752, -17.4646, 0.59", "-1.76847, 213.417, -17.6872, 0.59", "-1.68121, 214.811, -18.0447, 0.37", "-1.59836, 216.356, -18.3249, 0.29", "-1.51312, 217.526, -18.4868, 0.29", "-1.44111, 218.318, -18.5795, 0.52", "-1.34952, 219.125, -18.6626, 0.52", "-1.26909, 219.727, -18.7075, 0.44", "-1.18573, 220.389, -18.7423, 0.29", "-1.14728, 221.054, -18.7955, 0.29", "-1.20439, 221.786, -18.8772, 0.44", "-1.36528, 222.563, -18.9923, 0.44", "-1.58096, 223.274, -19.1195, 0.52", "-1.9655, 224.34, -19.3497, 0.29", "-2.31619, 225.184, -19.5439, 0.29", "-2.67134, 225.98, -19.7391, 0.29", "-2.89899, 226.493, -19.8723, 0.52", "-3.13053, 227.068, -20.0483, 0.52", "-3.27106, 227.533, -20.2263, 0.52", "-3.37373, 228.418, -20.604, 0.37", "-3.3532, 228.943, -20.8355, 0.37", "-3.24419, 229.736, -21.1867, 0.37", "-3.03814, 230.878, -21.6842, 0.22", "-2.86638, 231.894, -22.1161, 0.22", "-2.65958, 233.228, -22.6573, 0.22", "-2.53054, 234.118, -22.9677, 0.37", "-2.44014, 234.993, -23.2202, 0.52", "-2.41572, 235.415, -23.33, 0.52", "-2.42428, 236.601, -23.5918, 0.22", "-2.50661, 237.486, -23.7385, 0.22", "-2.84147, 239.145, -23.9393, 0.66", "-2.93538, 239.506, -23.9554, 0.66", "-3.22196, 240.59, -23.9222, 0.52", "-3.3912, 241.33, -23.8519, 0.74", "-3.63088, 242.515, -23.6287, 0.29", "-3.82613, 243.425, -23.3576, 0.29", "-4.02525, 244.321, -23.0007, 0.29", "-4.19826, 245.133, -22.6524, 0.29", "-4.3763, 245.932, -22.2904, 0.29", "-4.5581, 246.776, -21.9542, 0.44", "-4.71763, 247.646, -21.6793, 0.29", "-4.80809, 248.211, -21.5273, 0.29", "-5.00897, 249.299, -21.303, 0.29", "-5.20158, 250.134, -21.1756, 0.22", "-5.55598, 251.561, -21.0694, 0.22", "-5.91222, 252.939, -21.0822, 0.22", "-6.10131, 253.667, -21.136, 0.22", "-6.28029, 254.387, -21.2238, 0.29", "-6.55734, 255.505, -21.4391, 0.29", "-6.77668, 256.382, -21.7055, 0.29", "-6.9203, 256.98, -21.9438, 0.29", "-7.02578, 257.518, -22.1783, 0.29", "-7.14565, 258.574, -22.6058, 0.29", "-7.23782, 260.035, -23.1381, 0.22", "-7.2792, 261.08, -23.4895, 0.37", "-7.30324, 261.83, -23.7358, 0.22", "-7.3357, 262.99, -24.1194, 0.22", "-7.40243, 264.322, -24.5642, 0.22", "-7.46775, 265.071, -24.8119, 0.29", "-7.5055, 265.409, -24.9225, 0.29", "-7.69147, 266.717, -25.4118, 0.22", "-7.83786, 267.492, -25.7599, 0.22", "-8.00014, 268.204, -26.1293, 0.37", "-8.15978, 268.928, -26.5551, 0.37", "-8.27482, 269.69, -27.06, 0.22", "-8.3856, 270.66, -27.7345, 0.37", "-8.45777, 271.444, -28.2924, 0.22", "-8.48879, 272.188, -28.8247, 0.22", "-8.47611, 273.054, -29.4159, 0.52", "-8.41094, 274.377, -30.3139, 0.29", "-8.37861, 275.05, -30.779, 0.29", "-8.35963, 275.662, -31.194, 0.29", "-8.34432, 276.259, -31.59, 0.29", "-8.37684, 277.042, -32.0633, 0.29", "-8.50914, 277.93, -32.5343, 0.29", "-8.77497, 278.825, -32.936, 0.29", "-9.14766, 279.676, -33.3103, 0.29", "-9.4369, 280.167, -33.5161, 0.29", "-9.89739, 280.837, -33.7967, 0.29", "-10.0708, 281.053, -33.8821, 0.29", "-10.7975, 281.907, -34.1577, 0.29", "-11.2818, 282.46, -34.3206, 1.33", "-11.5389, 282.758, -34.4111, 1.69", "-12.4509, 283.821, -34.7402, 0.22", "-12.9193, 284.365, -34.921, 0.22", "-13.2431, 284.736, -35.0484, 0.37", "-13.7631, 285.301, -35.2461, 0.37", "-14.3547, 285.879, -35.45, 0.37", "-14.6547, 286.122, -35.5379, 0.37", "-15.6736, 286.769, -35.7766, 0.22", "-16.201, 287.036, -35.9271, 0.22", "-17.051, 287.301, -36.1309, 0.22", "-17.7746, 287.402, -36.3034, 0.29", "-18.3058, 287.431, -36.4271, 0.29", "-18.9514, 287.422, -36.5699, 0.22", "-20.1017, 287.284, -36.7922, 0.22", "-21.5927, 286.972, -37.0901, 0.22", "-22.9475, 286.576, -37.374, 0.22" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "2.27608, 137.086, -8.93339, 0.22", "3.92753, 137.871, -10.0144, 0.22", "4.67311, 138.184, -10.5039, 0.22", "6.56609, 138.98, -11.7464, 0.22", "7.62693, 139.426, -12.4428, 0.22", "8.25659, 139.69, -12.8561, 0.22", "9.1588, 140.07, -13.4483, 0.37", "10.2528, 140.365, -14.162, 0.37" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-15.2959, 103.8, -12.8965, 0.29", "-15.0742, 103.994, -14.2953, 0.29", "-15.044, 104.1, -14.8683, 0.29", "-15.0805, 104.201, -15.3301, 0.44", "-15.2787, 104.534, -16.5434, 0.59", "-15.503, 104.92, -17.6266, 0.44", "-15.6528, 105.188, -18.2238, 0.37", "-15.8227, 105.434, -18.6366, 0.37", "-16.103, 105.823, -19.1534, 0.37", "-16.3016, 106.091, -19.4394, 0.96", "-16.7882, 106.728, -19.9858, 0.52", "-17.1162, 107.124, -20.3083, 0.52", "-17.389, 107.452, -20.5869, 0.52", "-17.6459, 107.77, -20.8523, 0.52", "-17.9842, 108.193, -21.1832, 0.59", "-18.2274, 108.493, -21.4187, 0.44", "-18.5811, 108.96, -21.7735, 0.59", "-18.8955, 109.471, -22.162, 0.66", "-19.0537, 109.831, -22.4166, 0.66", "-19.1452, 110.213, -22.6774, 0.37", "-19.1989, 110.612, -23.0327, 0.37", "-19.2459, 110.954, -23.3907, 0.37", "-19.2818, 111.13, -23.6307, 0.81", "-19.3366, 111.268, -23.8887, 1.03", "-19.5226, 111.454, -24.4791, 1.03", "-20.223, 111.653, -26.0633, 0.37", "-20.4767, 111.657, -26.4934, 0.29", "-20.821, 111.629, -26.9725, 0.29", "-21.0623, 111.6, -27.2599, 0.44", "-21.5552, 111.55, -27.7382, 0.44", "-22.0327, 111.528, -28.0841, 0.44", "-22.448, 111.571, -28.2892, 0.44", "-22.7849, 111.633, -28.4446, 0.59", "-23.0704, 111.684, -28.5605, 0.59", "-23.6606, 111.775, -28.777, 0.37", "-24.1169, 111.837, -28.9353, 0.37", "-24.605, 111.901, -29.1051, 0.37", "-25.2475, 111.987, -29.3292, 0.37", "-25.948, 112.095, -29.5663, 0.37", "-26.4139, 112.182, -29.7149, 0.37", "-27.0962, 112.321, -29.909, 0.37", "-27.7625, 112.467, -30.0678, 0.37", "-28.3653, 112.616, -30.2076, 0.37", "-28.781, 112.738, -30.3114, 0.74", "-29.1308, 112.856, -30.4033, 0.74", "-29.9719, 113.149, -30.6394, 0.37", "-30.538, 113.351, -30.8054, 0.37", "-31.1388, 113.569, -30.9965, 0.37", "-31.5053, 113.725, -31.1239, 0.37", "-32.018, 113.971, -31.3199, 0.29", "-32.4137, 114.211, -31.4891, 0.29", "-32.7079, 114.478, -31.6359, 0.44", "-32.871, 114.674, -31.7159, 0.59", "-33.0743, 114.963, -31.7835, 0.59" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-15.2959, 103.8, -12.8965, 0.59", "-16.6368, 104.238, -11.9991, 0.59", "-17.1974, 104.525, -11.6697, 0.59", "-17.8123, 104.892, -11.3755, 0.59", "-18.2871, 105.197, -11.1873, 0.59", "-18.8174, 105.542, -11.0228, 0.59", "-19.6645, 106.069, -10.8332, 0.52", "-20.2491, 106.461, -10.787, 0.52", "-20.9306, 106.923, -10.7649, 0.66", "-21.2917, 107.16, -10.7583, 0.66", "-21.8157, 107.475, -10.7386, 0.52", "-22.6791, 107.947, -10.659, 0.52", "-23.232, 108.248, -10.5723, 0.52", "-23.6707, 108.523, -10.4729, 0.52", "-24.0478, 108.799, -10.3943, 0.74", "-24.4555, 109.104, -10.3356, 0.74", "-25.0195, 109.513, -10.3105, 0.37", "-25.4844, 109.804, -10.3691, 0.37", "-26.1149, 110.117, -10.5438, 0.37", "-27.1162, 110.523, -10.84, 0.37", "-27.8592, 110.798, -11.0637, 0.29", "-28.5313, 111.051, -11.2444, 0.37", "-29.206, 111.323, -11.3642, 0.44", "-29.6827, 111.533, -11.4068, 0.66", "-30.3985, 111.888, -11.4231, 0.59", "-30.9289, 112.189, -11.3974, 0.44", "-31.6326, 112.632, -11.3622, 0.44", "-32.3384, 113.069, -11.3578, 0.44", "-32.9633, 113.41, -11.3902, 0.44", "-33.7471, 113.766, -11.4286, 0.37", "-34.3037, 113.981, -11.4625, 0.37", "-34.8463, 114.149, -11.5041, 0.37", "-36.0854, 114.467, -11.6337, 0.37", "-36.6412, 114.6, -11.7303, 0.37", "-37.7133, 114.916, -11.964, 0.29", "-38.5215, 115.239, -12.1828, 0.29", "-39.4039, 115.687, -12.4806, 0.29", "-39.7092, 115.874, -12.6058, 0.81", "-40.4623, 116.401, -13.0781, 0.81", "-41.2081, 116.891, -13.6849, 0.37", "-42.0041, 117.349, -14.4331, 0.29", "-42.3877, 117.538, -14.7991, 0.29", "-42.8058, 117.707, -15.1686, 0.29", "-44.176, 118.098, -16.2756, 0.29", "-45.3792, 118.267, -17.1388, 0.29", "-45.8594, 118.271, -17.4696, 0.52", "-46.1471, 118.253, -17.6583, 0.52", "-46.8289, 118.197, -18.0835, 0.29", "-47.5465, 118.137, -18.4707, 0.29", "-48.3678, 118.066, -18.7595, 0.29", "-49.0236, 118.012, -18.9475, 0.52", "-49.2503, 117.991, -19.0172, 0.52" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-1.37087, -152.382, 8.75848, 0.22", "-2.18344, -152.469, 8.41477, 0.22", "-3.19313, -152.577, 7.98768, 0.22", "-13.9539, -153.736, 4.2217, 0.22" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-1.37087, -152.382, 8.75848, 0.22", "-2.54212, -152.396, 8.5325, 0.22", "-3.75802, -152.411, 8.2979, 0.22", "-4.8673, -152.424, 8.08387, 0.22", "-6.29717, -152.441, 7.80799, 0.22", "-8.29135, -152.465, 7.42323, 0.22", "-9.17352, -152.475, 7.25302, 0.22", "-22.2895, -153.901, 4.91008, 0.22" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "4.55308, -245.638, 34.2347, 0.96", "4.63195, -246.95, 34.0972, 0.96", "4.70182, -247.913, 34.1134, 0.74", "4.75671, -248.694, 34.1954, 0.66", "4.80371, -249.508, 34.3405, 1.11", "4.83048, -249.964, 34.4517, 1.25", "4.9048, -251.38, 34.8478, 0.88", "4.93893, -252.118, 35.1445, 0.29", "4.93242, -252.867, 35.4998, 0.29", "4.90369, -253.739, 36.0003, 0.29", "4.87659, -254.418, 36.4316, 0.59", "4.85549, -254.917, 36.7582, 0.66", "4.81535, -255.568, 37.1691, 0.29", "4.80523, -255.956, 37.4257, 0.29", "4.82792, -257.172, 38.1963, 1.11", "4.86953, -257.755, 38.5566, 1.25", "4.96516, -258.791, 39.1832, 0.74", "5.01002, -259.124, 39.3836, 1.03", "5.1136, -259.674, 39.6975, 1.03", "5.2782, -260.439, 40.1, 0.88", "5.47299, -261.478, 40.5239, 0.52" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "4.55308, -245.638, 34.2347, 0.22", "4.48371, -247.286, 34.1407, 0.22", "4.42917, -248.883, 34.0661, 0.22", "4.45469, -250.043, 34.0202, 0.22", "4.55699, -251.383, 33.9652, 0.22", "4.8041, -253.178, 33.9109, 0.22", "5.00165, -254.446, 33.9196, 0.22", "5.27214, -255.737, 34.0064, 0.22", "5.55437, -256.91, 34.1841, 0.22", "5.66671, -257.624, 34.3312, 0.22", "5.59375, -259.338, 34.8007, 0.22", "5.07649, -260.549, 35.2376, 0.22", "4.34446, -261.519, 35.6388, 0.22", "3.69303, -262.047, 35.8757, 0.22", "1.77059, -263.265, 36.422, 0.22", "0.0693835, -264.104, 36.7804, 0.22", "-1.09818, -264.445, 36.8904, 0.22", "-2.17536, -276.455, 38.0574, 0.22" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_104",
    "id" : "dend_104",
    "points3d" : [ "12.3615, 50.936, -105.109, 0.37", "12.3612, 50.3872, -104.934, 0.37", "12.3978, 48.9781, -104.493, 0.29", "12.4375, 48.0921, -104.235, 0.44", "12.4742, 47.3057, -104.028, 0.37", "12.6269, 45.265, -103.41, 0.96", "12.7213, 44.3643, -103.118, 0.81", "12.8338, 43.5789, -102.825, 0.59", "12.9784, 42.8972, -102.545, 0.59", "13.1778, 42.0719, -102.214, 0.44", "13.5823, 40.4096, -101.542, 0.66", "13.7184, 39.8551, -101.313, 0.66", "13.8533, 39.3503, -101.064, 0.66", "14.1098, 38.4851, -100.627, 0.37", "14.3872, 37.4884, -100.145, 0.37", "14.7566, 36.0246, -99.5128, 0.74", "15.0338, 34.8047, -99.0731, 0.44", "15.3732, 33.2876, -98.5876, 0.37", "15.6704, 31.9476, -98.2222, 0.29", "15.902, 30.8872, -97.9785, 0.44", "16.1316, 29.8172, -97.7935, 0.52", "16.2617, 29.0524, -97.7246, 0.59", "16.368, 28.0458, -97.6831, 0.59", "16.4533, 26.8109, -97.6571, 0.44", "16.5013, 25.8498, -97.6193, 0.96", "16.5032, 25.4251, -97.6225, 1.18", "16.4841, 24.8734, -97.6506, 1.18", "16.4286, 24.053, -97.7219, 0.81", "16.3467, 23.167, -97.8307, 0.66", "16.2797, 22.2656, -97.9731, 0.66", "16.1805, 20.4524, -98.3066, 0.29", "16.1362, 19.589, -98.4896, 0.29", "16.1283, 19.4241, -98.5317, 0.44", "16.0997, 18.7751, -98.7397, 0.15", "16.0507, 18.0918, -98.9997, 0.15" ],
    "parent" : "dend_102",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_103",
    "id" : "dend_103",
    "points3d" : [ "12.3615, 50.936, -105.109, 1.03", "12.7687, 51.2111, -106.28, 1.03", "13.0979, 51.5559, -107.392, 1.18", "13.4724, 52.0996, -108.793, 1.4", "14.3457, 53.4695, -111.906, 1.18", "14.7387, 54.092, -113.176, 1.03", "15.0797, 54.6051, -114.145, 1.03", "15.8287, 55.6225, -115.939, 0.96", "16.5112, 56.4932, -117.313, 0.88", "16.8632, 56.9321, -117.916, 0.88", "17.276, 57.4884, -118.512, 1.33", "17.8955, 58.3687, -119.455, 0.96", "18.4128, 59.1757, -120.369, 0.81", "19.0959, 60.3815, -121.784, 0.81", "19.5289, 61.4261, -123.001, 0.81", "19.6856, 62.0404, -123.692, 0.66", "19.824, 63.132, -124.813, 0.66", "19.8576, 64.4951, -126.087, 1.03", "19.8149, 65.3652, -126.844, 1.03", "19.6811, 66.3145, -127.578, 0.74", "19.4214, 67.4428, -128.361, 0.74", "19.1771, 68.3176, -128.949, 1.11", "18.7903, 69.6224, -129.731, 1.47", "18.706, 69.876, -129.892, 1.47", "18.0593, 71.6119, -130.995, 0.66", "17.5802, 72.8503, -131.848, 0.88", "17.2227, 73.8862, -132.563, 0.96", "16.9416, 74.8823, -133.243, 1.18", "16.5519, 76.6741, -134.334, 1.4", "16.3918, 77.8709, -135.001, 0.66", "16.3112, 80.0355, -136.1, 0.96", "16.3308, 81.0327, -136.56, 0.52", "16.3904, 82.3495, -137.085, 0.52", "16.4466, 83.4989, -137.473, 0.81", "16.4808, 84.5538, -137.736, 0.96", "16.4984, 85.594, -137.958, 0.96", "16.5226, 86.6736, -138.124, 0.74", "16.5601, 88.5942, -138.388, 0.66", "16.6106, 89.6624, -138.515, 0.66", "16.7146, 90.8863, -138.667, 0.74", "16.8808, 92.252, -138.847, 0.74", "17.0779, 93.533, -139.035, 0.74", "17.3864, 95.2277, -139.307, 1.11", "17.5522, 96.0831, -139.442, 1.18", "17.6669, 96.7277, -139.559, 1.18", "17.8112, 97.9938, -139.799, 0.96", "17.8571, 99.9213, -140.154, 0.74", "17.7908, 101.082, -140.347, 0.66", "17.625, 102.201, -140.502, 0.52", "17.3897, 103.181, -140.602, 0.52", "16.9364, 104.548, -140.678, 0.81", "16.5896, 105.356, -140.677, 1.03", "16.199, 106.1, -140.672, 0.66", "15.6007, 107.144, -140.685, 0.81", "15.1087, 107.985, -140.709, 0.81", "14.5606, 108.942, -140.745, 0.81", "14.0824, 109.803, -140.778, 0.66", "13.6143, 110.617, -140.823, 0.66", "12.8746, 111.816, -140.905, 0.81", "12.3893, 112.532, -140.959, 0.81", "11.6607, 113.512, -141.041, 0.66", "10.975, 114.366, -141.167, 0.81", "10.3236, 115.138, -141.314, 0.66", "9.70538, 115.922, -141.574, 0.66", "9.12559, 116.747, -141.961, 0.66", "8.61034, 117.685, -142.491, 0.88", "8.20867, 118.915, -143.331, 0.88", "8.19445, 119.608, -143.89, 1.03", "8.65796, 121.503, -145.923, 0.37", "8.85514, 121.887, -146.604, 0.37", "9.12083, 122.217, -147.431, 0.29", "9.38008, 122.506, -148.492, 0.29", "9.7198, 122.904, -150.267, 1.03", "10.1646, 123.571, -153.392, 1.62", "10.6032, 124.516, -157.775, 1.18", "10.6922, 124.898, -159.385, 0.81", "10.7292, 126.357, -164.69, 0.52", "10.7072, 126.628, -165.516, 0.52", "10.6286, 127.188, -166.911, 0.52", "10.5477, 127.733, -167.848, 0.52", "10.4728, 128.461, -168.621, 0.52", "10.4172, 129.782, -169.612, 0.74", "10.4961, 130.697, -170.053, 0.44", "10.5984, 131.54, -170.447, 0.44", "10.716, 132.297, -170.768, 0.66", "10.9354, 133.53, -171.227, 0.37", "11.1042, 134.352, -171.488, 0.37", "11.339, 135.746, -171.86, 0.52", "11.4707, 137.334, -172.204, 0.52", "11.5124, 138.536, -172.38, 0.74", "11.524, 139.186, -172.44, 0.74", "11.5492, 140.354, -172.484, 0.52", "11.6052, 141.505, -172.446, 0.74", "11.7185, 143.418, -172.244, 0.29", "11.7719, 144.606, -172.083, 0.52", "11.7764, 145.674, -171.917, 0.66", "11.7708, 146.411, -171.789, 0.66", "11.8249, 147.914, -171.5, 0.44", "11.9403, 148.902, -171.31, 0.44", "12.1229, 149.886, -171.142, 0.44", "12.423, 151.262, -171.042, 0.59", "12.7207, 152.51, -171.111, 0.96", "13.0706, 153.885, -171.437, 0.37", "13.3825, 154.996, -171.885, 0.37", "13.6891, 155.946, -172.385, 0.81", "14.2925, 157.645, -173.403, 0.44", "14.7498, 158.924, -174.216, 0.44", "15.1776, 160.225, -175.133, 0.44", "15.4375, 161.195, -175.859, 0.74", "15.6338, 162.027, -176.5, 0.74", "15.8839, 163.047, -177.253, 0.22", "16.1736, 164.035, -177.776, 0.22" ],
    "parent" : "dend_102",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_99",
    "id" : "dend_99",
    "points3d" : [ "12.7662, 95.7027, -77.7669, 0.44", "13.1433, 96.5469, -77.7234, 0.44", "13.4265, 97.2498, -77.7323, 0.44", "13.8335, 98.3402, -77.8334, 0.81", "14.0489, 98.914, -77.9321, 0.81", "14.2593, 99.4953, -78.0708, 0.81", "14.378, 99.8498, -78.1666, 1.03", "14.5378, 100.517, -78.3553, 0.88", "14.6474, 101.09, -78.5539, 0.74", "14.7609, 101.679, -78.7838, 0.96", "14.8651, 102.213, -78.989, 0.96", "14.9946, 102.878, -79.2223, 0.52", "15.1174, 103.474, -79.3658, 0.52", "15.1751, 103.738, -79.3746, 0.74", "15.2964, 104.209, -79.2676, 0.44", "15.4398, 104.734, -79.0364, 0.81", "15.5702, 105.198, -78.7618, 0.81", "15.755, 105.941, -78.2431, 0.88", "15.8853, 106.67, -77.6835, 1.11", "15.9591, 107.44, -77.0843, 1.11", "15.9713, 108.01, -76.647, 0.52", "15.9709, 108.314, -76.4126, 0.52", "15.9679, 108.717, -76.1159, 0.52", "15.9994, 109.094, -75.8653, 0.52", "16.1162, 109.501, -75.6051, 0.52", "16.3462, 109.895, -75.3421, 0.52", "16.7318, 110.373, -75.0048, 0.74", "17.0442, 110.728, -74.7741, 0.66", "17.6537, 111.432, -74.3738, 0.52", "17.9801, 111.85, -74.1732, 0.52", "18.2825, 112.328, -73.9824, 0.52", "18.5223, 112.897, -73.8017, 0.66", "18.6471, 113.452, -73.6559, 0.66", "18.7008, 114.066, -73.4923, 0.37", "18.6884, 114.699, -73.3203, 0.37", "18.6573, 115.172, -73.1747, 0.37", "18.578, 115.971, -72.8943, 0.74", "18.4881, 116.659, -72.6175, 0.96", "18.3697, 117.245, -72.3619, 0.96", "18.1833, 117.852, -72.0356, 0.44", "17.9791, 118.342, -71.7277, 0.37", "17.7483, 118.804, -71.4079, 0.74", "17.5069, 119.207, -71.1149, 0.29", "17.0489, 119.869, -70.6245, 0.29", "16.3033, 120.799, -69.9766, 1.03", "15.9219, 121.223, -69.7045, 0.96", "15.5787, 121.609, -69.5001, 0.44", "15.3634, 121.883, -69.3903, 0.44", "15.1189, 122.274, -69.287, 0.44", "14.6988, 123.15, -69.0883, 0.52", "14.487, 123.71, -68.9969, 0.74", "14.2049, 124.689, -68.8153, 0.37", "14.1142, 125.199, -68.6975, 0.37", "14.0807, 125.781, -68.5381, 0.37", "14.1437, 126.812, -68.2322, 0.52", "14.2185, 127.309, -68.0679, 0.52", "14.3053, 127.796, -67.9102, 0.52", "14.4254, 128.441, -67.7197, 0.52", "14.5389, 129.139, -67.5449, 0.74", "14.5983, 129.616, -67.4443, 0.74", "14.6576, 130.363, -67.3214, 0.44", "14.6851, 130.984, -67.2005, 0.44", "14.6983, 131.435, -67.1004, 0.59", "14.7359, 132.093, -66.9433, 0.59", "14.7895, 132.634, -66.7919, 0.74", "14.8813, 133.268, -66.5904, 0.81", "15.054, 134.03, -66.3067, 0.52", "15.1954, 134.508, -66.0985, 0.52", "15.4287, 135.163, -65.7843, 0.52", "15.6289, 135.609, -65.5604, 0.52", "15.7942, 135.911, -65.4312, 0.52", "16.2116, 136.586, -65.2296, 0.74", "16.6515, 137.281, -65.1217, 0.59", "17.0288, 137.932, -65.1015, 0.59", "17.2382, 138.395, -65.14, 0.96", "17.468, 139.124, -65.2673, 0.59", "17.6101, 139.878, -65.4362, 0.59", "17.6557, 140.509, -65.6055, 0.44", "17.6421, 141.033, -65.7518, 0.44", "17.5734, 141.732, -65.9405, 0.44", "17.4935, 142.337, -66.0783, 0.37", "17.3951, 143.087, -66.2018, 0.29", "17.3632, 143.442, -66.2453, 0.44", "17.3587, 144.186, -66.3107, 0.44", "17.3897, 144.501, -66.3301, 0.29", "17.5055, 145.035, -66.3469, 0.29", "17.6427, 145.473, -66.3477, 0.44", "17.8304, 145.922, -66.333, 0.44", "18.0645, 146.379, -66.303, 0.44", "18.3819, 146.923, -66.2461, 0.29", "18.5983, 147.297, -66.1988, 0.29", "18.7546, 147.581, -66.1719, 0.44", "18.9895, 148.048, -66.1493, 0.44", "19.1908, 148.517, -66.1566, 0.22", "19.3318, 148.996, -66.2128, 0.29", "19.3707, 149.349, -66.2936, 0.29", "19.3159, 149.862, -66.461, 0.29", "19.2394, 150.219, -66.6028, 0.59", "19.1598, 150.54, -66.7526, 0.59", "19.0448, 151.039, -67.0324, 0.29", "18.9836, 151.442, -67.3253, 0.29", "18.9655, 151.845, -67.6645, 0.44", "18.9858, 152.363, -68.0954, 0.44", "19.042, 152.916, -68.537, 0.74", "19.1238, 153.405, -68.9152, 1.11", "19.3179, 154.304, -69.5962, 0.88", "19.3901, 154.642, -69.8486, 0.66", "19.5033, 155.465, -70.4619, 0.44", "19.5245, 155.926, -70.8064, 0.37", "19.5127, 156.457, -71.1808, 0.37", "19.4378, 157.241, -71.6833, 0.96", "19.3774, 157.634, -71.9066, 1.4", "19.2181, 158.499, -72.3848, 0.59", "19.0622, 159.257, -72.7916, 0.37", "18.9456, 159.783, -73.0309, 0.37", "18.8354, 160.282, -73.2077, 0.29", "18.7038, 160.972, -73.3485, 0.44", "18.6376, 161.439, -73.3631, 0.44", "18.5739, 162.101, -73.2705, 0.29", "18.4897, 162.997, -73.0761, 0.44", "18.4387, 163.562, -72.9241, 0.44", "18.3611, 164.627, -72.5723, 0.88", "18.269, 165.709, -72.1179, 0.44", "18.2184, 166.232, -71.8389, 0.37" ],
    "parent" : "dend_89",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "12.7662, 95.7027, -77.7669, 0.52", "11.0685, 97.3187, -77.411, 0.52", "9.86434, 98.4135, -77.2235, 0.44", "9.02128, 99.2423, -77.1603, 0.44", "8.26559, 100.08, -77.138, 0.59", "7.69065, 100.788, -77.1519, 0.74", "6.86219, 101.87, -77.266, 0.44", "6.15985, 102.845, -77.5126, 0.29", "5.26665, 104.114, -77.9644, 0.44", "4.65313, 104.958, -78.3201, 0.37", "3.92831, 105.99, -78.8176, 0.37", "2.77084, 107.82, -79.7762, 0.74", "2.10568, 109.031, -80.4362, 0.88", "1.84924, 109.555, -80.712, 0.88", "1.4374, 110.485, -81.1743, 0.37", "1.05438, 111.54, -81.6456, 0.37", "0.746558, 112.804, -82.0491, 0.37", "0.629139, 113.529, -82.164, 0.52", "0.465155, 114.32, -82.2176, 0.52", "0.106778, 115.396, -82.2266, 0.66", "-0.330529, 116.304, -82.2034, 0.66", "-0.973002, 117.309, -82.1151, 0.66", "-1.51352, 118.021, -82.0338, 0.37", "-2.17999, 118.805, -81.9292, 0.44", "-3.31947, 120.076, -81.7543, 0.44", "-4.0936, 120.89, -81.639, 0.59", "-4.99918, 121.798, -81.5208, 0.66", "-5.63325, 122.431, -81.4535, 0.66", "-6.5592, 123.354, -81.3722, 0.37", "-7.9368, 124.71, -81.3501, 0.29", "-8.74709, 125.464, -81.4168, 0.29", "-9.61145, 126.239, -81.5762, 0.29", "-10.4422, 126.931, -81.8531, 0.37", "-11.2194, 127.534, -82.2451, 0.52", "-12.2662, 128.292, -82.9105, 0.52", "-13.0719, 128.893, -83.5041, 0.66", "-13.72, 129.458, -84.0609, 0.66", "-14.5584, 130.334, -84.8636, 0.44", "-15.451, 131.412, -85.7548, 0.29", "-15.9638, 132.155, -86.2451, 0.29", "-16.6566, 133.312, -86.7722, 0.29", "-17.3166, 134.494, -87.1141, 0.44", "-17.9029, 135.544, -87.272, 0.74", "-18.3321, 136.304, -87.2814, 0.74", "-19.1969, 137.719, -87.1033, 0.52", "-19.9865, 138.865, -86.8523, 0.52", "-20.8752, 140.015, -86.4981, 0.74", "-21.533, 140.822, -86.1909, 0.74", "-21.9943, 141.399, -85.996, 0.88", "-22.6092, 142.297, -85.7488, 0.88", "-23.3536, 143.759, -85.4661, 0.37", "-23.6732, 144.753, -85.4035, 0.37", "-23.7794, 145.379, -85.4351, 0.66", "-23.8326, 147.16, -85.6506, 0.44", "-23.7518, 148.254, -85.8564, 0.74", "-23.6009, 149.344, -86.1238, 0.74", "-23.4051, 150.611, -86.4459, 1.03", "-23.2876, 151.361, -86.5827, 0.74", "-23.1191, 152.631, -86.6963, 0.59", "-23.0268, 153.814, -86.6742, 0.52", "-23.0421, 154.804, -86.5959, 0.44", "-23.208, 156.383, -86.3889, 0.44", "-23.5283, 158.357, -86.0469, 0.52", "-23.7994, 159.661, -85.8001, 0.52", "-24.1013, 160.96, -85.5056, 0.52", "-24.4258, 162.306, -85.1342, 0.52", "-24.7194, 163.37, -84.7974, 0.52", "-24.9149, 163.919, -84.6077, 0.66", "-25.4293, 164.984, -84.2024, 0.66", "-26.1831, 166.381, -83.4111, 0.37", "-26.6134, 167.195, -82.8108, 0.37", "-27.0834, 168.137, -81.978, 0.37", "-27.4228, 168.908, -81.2486, 0.37", "-27.6897, 169.604, -80.596, 0.37", "-28.2522, 171.583, -78.8553, 0.74", "-28.4894, 172.708, -78.0314, 0.59", "-28.542, 173.05, -77.8283, 1.03", "-28.66, 174.045, -77.3284, 0.74", "-28.8225, 175.123, -76.8381, 0.74", "-29.157, 176.493, -76.3019, 0.37", "-29.5795, 177.635, -75.8814, 0.52", "-29.9669, 178.405, -75.5119, 0.52", "-30.1112, 178.661, -75.3578, 0.37", "-30.8218, 179.776, -74.5945, 0.37", "-31.4915, 180.728, -73.857, 1.55", "-32.0264, 181.409, -73.2561, 1.55", "-32.6222, 182.16, -72.4982, 0.81", "-33.4375, 183.207, -71.368, 0.59" ],
    "parent" : "dend_89",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "34.1712, 53.3668, 89.4141, 0.44", "31.9374, 55.5879, 95.8461, 0.44", "29.1801, 57.2414, 102.239, 0.44", "27.8026, 58.1995, 109.194, 0.44", "26.1289, 57.8296, 116.14, 0.44", "25.0009, 56.5113, 123.089, 0.44", "24.3199, 53.8749, 129.734, 0.44" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "34.1712, 53.3668, 89.4141, 0.22", "32.9518, 53.5504, 100.913, 0.44", "33.2202, 52.3657, 112.407, 0.44", "34.6126, 52.7179, 123.879, 0.44", "36.3283, 51.2063, 135.21, 0.44", "37.059, 51.348, 146.748, 0.44", "38.1118, 52.8637, 158.17, 0.44", "38.678, 53.6123, 169.698, 0.44", "38.07, 52.3685, 181.173, 0.44", "38.0553, 50.5653, 192.591, 0.44", "37.0054, 48.3146, 203.88, 0.44", "35.2368, 46.6847, 215.186, 0.44", "32.0201, 46.4956, 226.293, 0.44", "27.5369, 46.2724, 236.953, 0.44" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "66.5681, 63.9344, 83.8672, 0.44", "74.1958, 68.126, 90.5535, 0.44", "81.5583, 72.4099, 97.4786, 0.44", "89.3055, 74.9397, 104.8, 0.44", "97.6088, 76.4089, 111.782, 0.44", "104.65, 79.1468, 119.721, 0.44", "110.547, 81.1281, 128.738, 0.44", "116.791, 82.0686, 137.681, 0.44", "122.116, 81.477, 147.227, 0.44", "129.135, 80.3963, 155.561, 0.44", "135.104, 81.039, 164.715, 0.44", "141.654, 80.133, 173.441, 0.44", "148.07, 81.1312, 182.255, 0.44", "153.141, 83.153, 191.755, 0.44" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "66.5681, 63.9344, 83.8672, 0.22", "75.6543, 69.4929, 91.0758, 0.44", "82.8125, 78.1746, 97.4651, 0.44", "89.3101, 84.5892, 106.569, 0.44", "95.2761, 89.8201, 116.706, 0.44", "102.636, 94.3603, 126.218, 0.44" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "20.2935, 48.7548, 33.5106, 1.03", "20.4717, 49.4225, 34.0501, 1.03", "20.7454, 50.2384, 34.7602, 0.44", "21.1165, 50.988, 35.4281, 0.52", "21.7278, 51.8891, 36.2384, 0.96", "22.8, 53.0566, 37.3201, 1.25", "23.3207, 53.4672, 37.6976, 1.4", "23.8163, 53.744, 37.9665, 1.18", "25.0929, 54.282, 38.4427, 0.29", "26.0647, 54.6427, 38.7115, 0.29", "27.1981, 55.0798, 38.9116, 0.66", "28.7368, 55.744, 39.0845, 0.37", "29.5869, 56.2541, 39.2098, 0.37", "30.2761, 56.9092, 39.4067, 0.37", "30.8171, 57.8799, 39.7639, 0.37", "31.165, 58.9082, 40.1941, 0.74", "31.3087, 59.636, 40.5181, 1.11", "31.3981, 60.4291, 40.9074, 1.11", "31.4346, 60.9738, 41.1799, 1.11", "31.4656, 61.5761, 41.4642, 1.11", "31.5048, 62.4439, 41.8039, 0.88", "31.5788, 63.5233, 42.2137, 1.18", "31.6532, 64.3553, 42.5054, 1.18", "31.7554, 65.1857, 42.7676, 1.03", "31.9007, 66.1133, 43.0522, 0.59", "32.0492, 67.0489, 43.3236, 0.37", "32.3544, 68.5688, 43.7208, 0.29", "32.6299, 69.4291, 43.9839, 0.52", "32.8345, 69.8912, 44.1593, 0.66", "33.4617, 70.9445, 44.6378, 0.37", "34.2292, 71.9885, 45.1738, 0.37", "34.9385, 72.8257, 45.6232, 0.59", "36.1342, 74.1434, 46.3041, 1.18", "36.9286, 74.9926, 46.7282, 0.88", "37.6975, 75.7986, 47.0904, 0.29", "38.1466, 76.2493, 47.2708, 0.29", "38.7781, 76.9122, 47.5045, 0.52", "39.1497, 77.3957, 47.6341, 0.59", "39.6689, 78.3692, 47.8111, 0.52", "39.9785, 79.3296, 47.9695, 0.81", "40.1181, 80.17, 48.1645, 0.96", "40.2549, 81.2783, 48.479, 1.11", "40.3721, 82.0218, 48.7469, 1.33", "40.668, 83.185, 49.2552, 1.99", "41.136, 84.3255, 49.869, 2.21", "42.171, 85.9377, 50.8954, 0.96", "42.8596, 86.6545, 51.3952, 0.66", "44.1544, 87.7012, 52.2155, 0.29", "45.2839, 88.3901, 52.823, 0.29", "46.5408, 88.9395, 53.3867, 0.29", "47.2608, 89.1387, 53.6645, 0.29", "48.2129, 89.2483, 53.9322, 0.22", "55.0892, 97.4872, 57.2157, 0.22" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "20.2935, 48.7548, 33.5106, 0.96", "19.0293, 50.8614, 35.1056, 0.96", "18.6299, 51.4203, 35.5168, 0.44", "18.1058, 52.0088, 36.1559, 0.37", "17.6954, 52.4051, 36.7682, 0.29", "17.3799, 52.699, 37.254, 0.37", "17.128, 52.9303, 37.6277, 0.37", "16.7409, 53.2664, 38.1479, 0.37", "15.3832, 54.3512, 39.9285, 1.18", "14.3014, 55.1705, 41.2766, 1.18", "13.7625, 55.5646, 41.9073, 0.88", "13.2124, 55.9929, 42.4669, 0.88", "12.7143, 56.4071, 42.8742, 0.81", "12.2707, 56.799, 43.107, 1.18", "11.6727, 57.3419, 43.222, 1.18", "10.8864, 58.0697, 43.2475, 0.74", "9.88593, 58.9418, 43.177, 0.52", "9.28464, 59.4133, 43.0885, 0.29", "8.68063, 59.8277, 42.9585, 0.29", "8.32816, 60.0485, 42.8476, 0.96", "7.96535, 60.2637, 42.6887, 1.18", "6.96778, 60.8225, 42.0825, 0.22", "6.31475, 61.1285, 41.637, 0.22", "5.77772, 61.3508, 41.2258, 0.59", "5.25174, 61.5509, 40.808, 0.52", "4.74996, 61.735, 40.4166, 0.52", "4.04147, 62.0142, 39.8748, 0.66", "3.80719, 62.1276, 39.6975, 0.66", "3.23471, 62.4383, 39.2319, 0.29", "2.99798, 62.5659, 39.0583, 0.29", "2.51382, 62.834, 38.757, 0.29", "2.30027, 62.9613, 38.6361, 0.74", "1.73676, 63.3332, 38.2787, 0.74", "1.37224, 63.6007, 37.9543, 0.59", "0.997005, 63.8963, 37.4792, 0.29", "0.656922, 64.1646, 36.9978, 1.03", "0.38902, 64.3731, 36.5962, 1.03", "-0.1828, 64.8473, 35.7036, 0.88", "-0.785148, 65.3977, 34.7221, 0.88", "-1.60535, 66.2052, 33.3929, 0.37", "-1.8665, 66.4964, 32.8731, 0.88", "-2.03902, 66.7182, 32.4922, 1.33", "-2.37265, 67.2027, 31.7433, 0.37", "-2.49676, 67.4067, 31.4743, 0.22", "-2.74897, 67.891, 30.92, 0.22", "-3.79844, 70.2146, 28.437, 0.66", "-3.94305, 70.5975, 27.9276, 0.29", "-4.05973, 70.9576, 27.4026, 0.22", "-4.12569, 71.1605, 27.0828, 0.22", "-4.33531, 71.7716, 26.0942, 1.11", "-4.45771, 72.111, 25.5521, 1.11", "-5.08322, 73.6883, 23.5219, 0.37", "-5.20155, 73.9654, 23.1629, 0.29", "-5.34153, 74.2942, 22.777, 0.29", "-5.55459, 74.7595, 22.3175, 0.29", "-5.91216, 75.4445, 21.8169, 0.29", "-6.29746, 76.1331, 21.4557, 0.29", "-6.48009, 76.4337, 21.3672, 0.29", "-6.86865, 77.0837, 21.1552, 0.66", "-7.06388, 77.4607, 21.0399, 0.81", "-7.26305, 77.9371, 20.9192, 0.96" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-33.0743, 114.963, -31.7835, 0.29", "-32.7883, 116.861, -32.5237, 0.29", "-32.6205, 117.605, -32.927, 0.29", "-32.4063, 118.436, -33.4334, 0.29", "-32.2312, 119.127, -33.8593, 0.52", "-32.0348, 119.991, -34.3947, 0.52", "-31.8786, 120.83, -34.9085, 0.66", "-31.7813, 121.996, -35.6498, 0.29", "-31.7902, 122.527, -36.0408, 0.29", "-31.8609, 123.187, -36.5965, 0.37", "-31.9344, 123.639, -37.004, 0.37", "-32.02, 124.068, -37.4466, 0.29", "-32.2561, 124.997, -38.4633, 0.29", "-32.3824, 125.402, -38.923, 0.29", "-32.5547, 125.909, -39.564, 0.29", "-32.7584, 126.431, -40.3022, 0.74", "-33.2981, 127.604, -42.1995, 0.37", "-33.4396, 127.876, -42.7742, 0.29", "-33.5522, 128.079, -43.2762, 0.29", "-33.7075, 128.405, -44.0662, 0.29", "-33.8095, 128.662, -44.6456, 0.29", "-33.9773, 129.123, -45.6055, 0.52", "-34.3803, 130.445, -48.0966, 0.44", "-34.415, 130.67, -48.5299, 0.29", "-34.482, 131.453, -49.9956, 0.81", "-34.4923, 132.434, -51.7088, 0.29", "-34.4727, 132.803, -52.3052, 0.29", "-34.4022, 133.594, -53.4317, 0.96", "-34.2985, 135.036, -55.2529, 0.74" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-33.0743, 114.963, -31.7835, 0.29", "-34.8684, 114.88, -31.2948, 0.29", "-36.0744, 115.089, -30.9545, 0.29", "-37.1163, 115.475, -30.6752, 0.29", "-37.9294, 115.829, -30.4845, 0.29", "-39.2312, 116.369, -30.2361, 0.29", "-40.095, 116.678, -30.1356, 0.29", "-41.3118, 117.128, -30.133, 0.29", "-42.4486, 117.56, -30.1901, 0.66", "-43.4442, 117.924, -30.2913, 0.66", "-44.8589, 118.383, -30.521, 0.29", "-46.3503, 118.792, -30.8734, 0.29", "-47.1832, 118.999, -31.1073, 0.29", "-47.9346, 119.201, -31.4006, 0.29", "-48.4659, 119.409, -31.68, 0.29", "-48.9323, 119.738, -32.0158, 0.29", "-49.256, 120.103, -32.3129, 0.44", "-49.5555, 120.547, -32.6596, 0.29", "-50.3028, 121.551, -33.8142, 0.29", "-50.5826, 121.874, -34.2642, 0.29", "-50.9897, 122.264, -34.8638, 0.29", "-51.3061, 122.51, -35.2742, 0.29", "-52.2846, 123.145, -36.38, 0.74", "-54.2638, 124.207, -38.1501, 0.29", "-55.4821, 124.775, -38.9643, 0.29", "-56.4507, 125.217, -39.4684, 0.29", "-57.2228, 125.585, -39.7485, 0.29", "-58.5554, 126.258, -39.9903, 0.29", "-60.2173, 127.16, -39.8663, 0.29", "-60.9567, 127.624, -39.6046, 0.37", "-61.7933, 128.207, -39.1609, 0.37", "-62.4706, 128.752, -38.7088, 0.37", "-62.8956, 129.167, -38.3153, 0.81", "-63.4996, 129.876, -37.5842, 0.52", "-64.274, 130.933, -36.521, 0.29", "-64.7055, 131.554, -35.9067, 0.29", "-65.1607, 132.2, -35.2646, 0.74", "-66.2126, 133.631, -33.8797, 0.37", "-66.6181, 134.186, -33.3778, 0.29", "-67.0316, 134.752, -32.9413, 0.22", "-67.7308, 135.669, -32.4017, 0.22", "-68.1006, 136.148, -32.202, 0.22", "-68.5879, 136.747, -32.0796, 0.44", "-68.8578, 137.05, -32.0873, 0.44", "-69.4794, 137.719, -32.1599, 0.29", "-70.4134, 138.689, -32.3148, 0.29", "-71.1081, 139.389, -32.5087, 0.29", "-71.4964, 139.763, -32.6394, 0.29", "-72.0824, 140.262, -32.85, 0.22", "-72.703, 140.723, -33.1329, 0.22", "-73.4455, 141.199, -33.5814, 0.22", "-74.4816, 141.799, -34.4234, 0.44", "-74.8664, 142.037, -34.8686, 0.44", "-75.2484, 142.287, -35.4014, 0.22", "-76.1049, 142.901, -36.8293, 0.22", "-76.756, 143.472, -38.1763, 0.66", "-77.0085, 143.757, -38.8496, 1.03", "-77.671, 144.599, -40.9076, 0.88", "-77.8692, 144.873, -41.5343, 0.59", "-78.1853, 145.383, -42.6714, 0.59", "-78.5974, 146.158, -44.4016, 0.74", "-79.1144, 147.46, -47.2501, 0.66", "-79.41, 148.385, -49.1261, 0.52", "-79.5686, 149.01, -50.2859, 0.74", "-79.784, 150.15, -52.1905, 1.55", "-79.8803, 150.882, -53.247, 1.77", "-79.9557, 151.592, -54.0934, 1.92", "-80.0472, 153.335, -55.5731, 0.88", "-80.0593, 153.82, -55.8782, 0.44", "-80.1031, 154.726, -56.3406, 0.29", "-80.2517, 155.857, -56.7539, 0.96", "-80.397, 156.777, -57.03, 0.96", "-80.6674, 158.447, -57.4471, 0.37", "-80.7877, 159.501, -57.6377, 0.37", "-80.8791, 160.271, -57.7805, 0.37", "-81.0386, 161.184, -57.9522, 0.37" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-49.2503, 117.991, -19.0172, 0.22", "-50.5364, 117.345, -19.6281, 0.22", "-51.0929, 117.076, -19.7674, 0.22", "-51.6806, 116.816, -19.8431, 0.22", "-52.2618, 116.602, -19.8796, 0.29", "-53.111, 116.342, -19.9079, 0.29", "-53.6577, 116.183, -19.9204, 0.22", "-54.8502, 115.876, -19.8363, 0.59", "-55.4095, 115.762, -19.7864, 0.66", "-56.3403, 115.643, -19.7259, 0.22", "-57.3565, 115.649, -19.7168, 0.22", "-58.4717, 115.828, -19.7874, 0.44", "-59.1476, 116.03, -19.8907, 0.22", "-59.9238, 116.365, -20.1033, 0.22", "-60.7668, 116.824, -20.3909, 0.22", "-61.7639, 117.431, -20.7938, 0.22", "-62.2081, 117.705, -20.9944, 0.22", "-62.6301, 117.937, -21.1872, 0.44", "-62.852, 118.018, -21.2869, 0.44", "-63.8328, 118.209, -21.6847, 0.22", "-64.6606, 118.304, -21.9535, 0.22", "-65.2545, 118.351, -22.1097, 0.22", "-65.9847, 118.42, -22.2634, 0.22", "-67.1493, 118.555, -22.4238, 0.22", "-67.8597, 118.659, -22.4712, 0.22", "-68.6036, 118.791, -22.4486, 0.22", "-69.5183, 119.008, -22.3464, 0.22", "-70.2219, 119.206, -22.1967, 0.22", "-71.1935, 119.529, -21.8676, 0.22", "-71.8068, 119.77, -21.5823, 0.37", "-72.4067, 120.035, -21.2633, 0.22", "-72.8539, 120.258, -20.9894, 0.44", "-73.5704, 120.651, -20.5002, 0.37", "-74.1986, 121.057, -19.9877, 0.22", "-74.4416, 121.257, -19.7524, 0.37", "-74.7697, 121.562, -19.4194, 0.29", "-75.3088, 122.098, -18.9364, 0.44", "-75.9694, 122.768, -18.3474, 0.22", "-76.3456, 123.152, -18.0556, 0.22", "-76.8442, 123.63, -17.7167, 0.22", "-77.1934, 123.948, -17.4958, 0.22", "-77.8463, 124.572, -17.1252, 0.81" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-49.2503, 117.991, -19.0172, 0.37", "-50.2307, 118.174, -19.938, 0.37", "-51.643, 118.524, -21.3251, 0.37", "-52.5699, 118.823, -22.2689, 0.37", "-53.335, 119.158, -23.0949, 0.37", "-54.4888, 119.802, -24.4479, 0.37", "-54.9924, 120.158, -25.1111, 0.29", "-55.6842, 120.662, -26.2004, 0.66", "-55.9856, 120.891, -26.7462, 0.81", "-56.4482, 121.283, -27.6936, 0.59", "-56.8131, 121.632, -28.53, 0.59", "-57.2662, 122.122, -29.652, 0.74", "-58.8232, 124.001, -33.7469, 0.44", "-59.0513, 124.323, -34.4087, 0.44", "-59.1896, 124.581, -34.8985, 0.44", "-59.3399, 125.1, -35.7112, 0.44", "-59.3959, 126.009, -36.7542, 0.44", "-59.3083, 127.166, -37.7397, 0.37", "-59.1687, 128.334, -38.4976, 0.37", "-59.1316, 129.375, -39.1501, 0.37", "-59.1858, 130.718, -39.9704, 0.37", "-59.3227, 131.912, -40.6756, 0.52", "-59.4717, 132.81, -41.19, 0.66", "-59.8096, 134.428, -42.1813, 0.59", "-60.1051, 136.048, -43.197, 0.52", "-60.2122, 137.044, -43.7874, 0.52", "-60.2154, 138.08, -44.3449, 0.52", "-60.0109, 139.549, -44.9746, 0.88", "-59.7311, 140.933, -45.4058, 1.33", "-59.3527, 142.645, -45.7114, 0.52", "-59.0048, 144.906, -45.8252, 0.44", "-58.9768, 146.081, -45.74, 0.88", "-59.098, 147.492, -45.5325, 1.11", "-59.3715, 149.247, -45.2221, 0.44", "-59.6331, 150.648, -45.0073, 0.29", "-59.8965, 151.869, -44.9257, 0.29", "-60.0585, 152.695, -45.0121, 0.29", "-60.2075, 154.206, -45.3846, 0.66", "-60.2249, 155.406, -45.8214, 0.66", "-60.1237, 156.491, -46.2847, 0.66", "-59.9445, 157.644, -46.8149, 0.66", "-59.795, 158.616, -47.2431, 0.66", "-59.6281, 159.93, -47.7734, 0.59", "-59.4801, 161.408, -48.299, 0.44", "-59.4163, 162.327, -48.5957, 0.44", "-59.3526, 163.902, -49.078, 0.37", "-59.3087, 165.388, -49.5437, 0.37", "-59.2735, 166.487, -49.8958, 0.74", "-59.2487, 167.487, -50.2376, 1.18", "-59.2396, 168.763, -50.6975, 0.81", "-59.2937, 169.878, -51.0906, 0.37", "-59.4375, 170.948, -51.4393, 0.29", "-59.7624, 172.285, -51.8336, 0.52", "-60.0523, 172.925, -51.9745, 0.66", "-60.4064, 173.42, -52.0295, 0.74", "-61.4066, 174.402, -51.9794, 0.37", "-62.5057, 175.235, -51.8334, 0.29", "-63.5741, 175.85, -51.6534, 0.29", "-64.9365, 176.427, -51.4167, 0.29", "-66.0123, 176.774, -51.2273, 0.29", "-67.106, 177.042, -51.0325, 0.29", "-68.8558, 177.34, -50.7144, 0.29", "-70.1829, 177.507, -50.4335, 0.29", "-71.4334, 177.652, -50.1175, 0.44", "-72.3665, 177.744, -49.8718, 0.22", "-72.9165, 177.784, -49.7191, 0.44", "-73.4481, 177.796, -49.5469, 0.44", "-74.5575, 177.761, -49.0816, 0.37", "-75.9102, 177.878, -48.3786, 0.29" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "5.47299, -261.478, 40.5239, 0.44", "4.91775, -262.922, 40.7278, 0.44", "4.59463, -263.761, 40.8464, 0.44", "4.13469, -264.957, 41.0152, 0.52", "3.90776, -265.547, 41.0985, 0.66", "3.61459, -266.309, 41.2062, 0.66", "3.29667, -267.135, 41.3229, 0.37" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "5.47299, -261.478, 40.5239, 0.22", "6.43991, -262.011, 40.0635, 0.22", "7.72531, -262.719, 39.4514, 0.22", "13.8559, -267.336, 35.2342, 0.22" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_101",
    "id" : "dend_101",
    "points3d" : [ "18.2184, 166.232, -71.8389, 0.22", "16.4554, 167.502, -70.6799, 0.22", "15.3113, 168.326, -69.9278, 0.37", "14.5468, 168.876, -69.4253, 0.44", "13.4964, 169.633, -68.7348, 0.22", "12.0896, 170.646, -67.81, 0.22" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_100",
    "id" : "dend_100",
    "points3d" : [ "18.2184, 166.232, -71.8389, 0.29", "18.5175, 167.422, -71.2064, 0.29", "18.7729, 168.437, -70.6665, 0.22", "18.9271, 169.05, -70.3405, 0.22" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_94",
    "id" : "dend_94",
    "points3d" : [ "-33.4375, 183.207, -71.368, 0.66", "-34.7482, 184.887, -70.5396, 0.66", "-35.2594, 185.784, -70.1891, 0.44", "-35.6603, 186.711, -69.8863, 0.44", "-35.9988, 187.603, -69.6297, 0.44", "-36.3459, 188.705, -69.337, 0.37", "-36.6147, 189.777, -69.0747, 0.37", "-36.8451, 191.262, -68.8449, 0.37", "-36.9222, 193.038, -68.6026, 0.29", "-36.871, 194.146, -68.4442, 0.29", "-36.7279, 195.334, -68.2341, 0.66", "-36.564, 196.198, -68.0416, 0.66", "-36.4202, 196.796, -67.8881, 0.66", "-36.1785, 197.841, -67.6061, 0.37", "-35.9278, 199.09, -67.2285, 0.22", "-35.7786, 200.569, -66.7489, 0.66", "-35.8353, 201.416, -66.4692, 0.81", "-36.0448, 202.179, -66.2298, 0.52", "-36.5021, 203.192, -65.9461, 0.74", "-36.9148, 203.898, -65.7861, 0.74", "-37.5456, 204.847, -65.6251, 0.29", "-38.254, 205.874, -65.4532, 0.29", "-39.5041, 207.764, -65.1269, 0.29", "-40.3388, 209.198, -64.8577, 0.29", "-40.772, 210.079, -64.7041, 0.52", "-40.9606, 210.546, -64.6314, 0.52", "-41.463, 212.16, -64.4296, 0.37", "-41.7113, 213.145, -64.3538, 0.37", "-41.9888, 214.408, -64.3195, 0.37", "-42.248, 215.785, -64.3134, 0.44", "-42.4242, 216.704, -64.3356, 0.29", "-42.6918, 217.927, -64.435, 0.29", "-43.0053, 219.13, -64.6751, 0.81", "-43.2461, 219.871, -64.862, 0.96" ],
    "parent" : "dend_90",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "-33.4375, 183.207, -71.368, 0.22", "-34.3624, 182.966, -71.2181, 0.22", "-35.4622, 182.527, -71.0373, 0.22", "-37.0353, 181.899, -70.7788, 0.22", "-37.3753, 181.764, -70.7229, 0.81", "-38.0091, 181.51, -70.6187, 0.81", "-39.2461, 181.017, -70.4154, 0.29", "-40.1952, 180.529, -70.2568, 0.29" ],
    "parent" : "dend_90",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "24.3199, 53.8749, 129.734, 0.44", "22.1797, 54.1773, 137.812, 0.44", "21.2639, 53.8346, 146.118, 0.44" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "24.3199, 53.8749, 129.734, 0.22", "22.5362, 53.591, 138.086, 0.44", "21.64, 51.3142, 146.291, 0.44" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "102.636, 94.3603, 126.218, 0.44", "106.471, 97.2886, 131.655, 0.44", "110.098, 101.259, 136.581, 0.44" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "102.636, 94.3603, 126.218, 0.22", "107.745, 99.6021, 131.449, 0.44", "112.304, 105.78, 136.185, 0.44" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-7.26305, 77.9371, 20.9192, 0.37", "-9.34886, 78.4454, 21.0707, 0.37", "-10.2976, 78.6848, 21.1974, 0.37", "-11.5521, 79.0295, 21.2263, 0.29", "-12.5912, 79.4064, 21.1959, 0.29", "-13.1153, 79.6474, 21.1591, 0.29", "-13.8496, 80.0495, 21.0794, 0.29", "-14.7179, 80.6151, 20.9423, 0.44", "-16.2018, 81.7603, 20.5544, 0.59", "-17.1189, 82.636, 20.1882, 0.74", "-17.7219, 83.3133, 19.8598, 0.88", "-18.1435, 83.8429, 19.5692, 0.88", "-18.8136, 84.8219, 18.96, 0.88" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-7.26305, 77.9371, 20.9192, 0.22", "-8.23359, 77.6076, 20.7368, 0.22", "-8.77476, 77.5006, 20.5769, 0.22", "-9.62857, 77.4057, 20.2535, 0.22", "-10.2261, 77.3071, 19.9578, 0.22", "-10.6678, 77.1875, 19.7157, 0.22", "-11.1848, 77.0475, 19.4324, 0.22", "-12.1173, 76.8126, 18.8442, 0.22", "-12.7962, 76.6426, 18.344, 0.22", "-13.6737, 76.4273, 17.5581, 0.22", "-14.4616, 76.1479, 16.7405, 0.22", "-22.9998, 74.0282, 14.4098, 0.22", "-31.384, 70.9232, 12.6489, 0.22", "-39.592, 67.13, 11.4319, 0.22", "-47.9189, 63.4281, 11.8337, 0.22", "-55.7954, 58.8387, 11.1756, 0.22", "-63.0035, 53.1787, 10.961, 0.22", "-69.6355, 46.8204, 11.1011, 0.22" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-34.2985, 135.036, -55.2529, 0.22", "-34.0193, 134.261, -55.2912, 0.22", "-33.8317, 133.74, -55.3169, 0.22" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-34.2985, 135.036, -55.2529, 0.52", "-33.1307, 135.709, -54.8827, 0.52", "-32.2812, 136.199, -54.6135, 0.52" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-77.8463, 124.572, -17.1252, 0.29", "-79.227, 126.346, -16.7705, 0.29", "-79.6465, 126.761, -16.6652, 0.29", "-80.3914, 127.348, -16.5056, 0.22", "-81.0631, 127.823, -16.3763, 0.22", "-82.1656, 128.594, -16.1754, 0.22", "-82.6028, 128.911, -16.0986, 0.22", "-83.5738, 129.52, -16.0517, 0.22", "-84.2364, 129.891, -16.0309, 0.22", "-84.9563, 130.231, -16.0262, 0.29", "-85.392, 130.39, -16.0366, 0.29", "-85.9787, 130.519, -16.0844, 0.29", "-87.0276, 130.687, -16.2293, 0.29", "-88.3549, 130.853, -16.4642, 0.29", "-89.4486, 130.92, -16.662, 0.29", "-90.3872, 130.899, -16.8351, 0.22", "-91.8138, 130.773, -17.0978, 0.22", "-92.5659, 130.683, -17.2358, 0.37", "-93.566, 130.576, -17.4034, 0.37", "-94.3374, 130.533, -17.5097, 0.37", "-95.1691, 130.54, -17.6711, 0.37", "-95.948, 130.609, -17.8801, 0.29", "-96.9282, 130.763, -18.2234, 0.22", "-97.8813, 130.978, -18.6297, 0.22", "-98.6935, 131.241, -19.0544, 0.22", "-100.207, 131.829, -19.9332, 0.22", "-100.731, 132.029, -20.2582, 0.22", "-101.496, 132.247, -20.7627, 0.22", "-102.457, 132.372, -21.4152, 0.22", "-103.234, 132.354, -21.9446, 0.22", "-104.694, 132.243, -22.8901, 0.22", "-105.799, 132.075, -23.4851, 0.22", "-106.911, 131.786, -24.074, 0.22", "-107.769, 131.428, -24.5488, 0.37", "-108.206, 131.15, -24.7957, 0.37" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-77.8463, 124.572, -17.1252, 0.22", "-79.7515, 124.509, -16.2674, 0.22", "-81.0611, 124.42, -15.8357, 0.22", "-82.2659, 124.28, -15.5589, 0.22", "-82.9888, 124.184, -15.454, 0.22", "-84.2081, 124.026, -15.3386, 0.22", "-85.1055, 123.91, -15.2536, 0.22", "-86.3166, 123.707, -15.2751, 0.22", "-87.5142, 123.538, -15.3725, 0.22", "-88.9097, 123.366, -15.5313, 0.22", "-89.6515, 123.252, -15.6474, 0.22" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "3.29667, -267.135, 41.3229, 0.37", "3.70365, -269.014, 41.4962, 0.37", "3.98654, -270.129, 41.6265, 0.37", "4.17205, -270.861, 41.7119, 0.52", "4.2887, -271.321, 41.7656, 0.52", "4.45731, -271.985, 41.8433, 0.59", "4.70635, -272.967, 41.9579, 0.96", "4.78951, -273.28, 41.9286, 1.18" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "3.29667, -267.135, 41.3229, 0.22", "3.92255, -267.714, 41.1658, 0.22", "4.75877, -268.488, 40.9559, 0.29", "5.26241, -268.954, 40.8295, 0.29", "5.83968, -269.489, 40.6846, 0.29", "6.45146, -270.055, 40.531, 0.37", "11.1389, -277.041, 38.0008, 0.37" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_96",
    "id" : "dend_96",
    "points3d" : [ "-43.2461, 219.871, -64.862, 0.29", "-44.2384, 220.438, -65.9383, 0.29", "-45.3804, 221.251, -67.1411, 0.29", "-46.2011, 221.962, -68.044, 0.59", "-46.9565, 222.666, -68.9183, 0.44", "-47.2984, 223.042, -69.4707, 0.44", "-47.6221, 223.419, -70.1934, 0.37", "-47.9023, 223.802, -71.107, 0.22", "-48.0853, 224.168, -71.9789, 0.81", "-48.3233, 224.837, -73.5403, 1.03", "-48.7242, 226.074, -76.5433, 1.03", "-49.1843, 227.5, -80.2675, 0.81", "-49.5478, 228.64, -83.5438, 0.29", "-49.6694, 229.017, -84.7279, 1.33", "-49.7181, 229.189, -85.2693, 1.55" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_95",
    "id" : "dend_95",
    "points3d" : [ "-43.2461, 219.871, -64.862, 0.29", "-44.6232, 219.736, -64.634, 0.29", "-45.41, 219.699, -64.4388, 0.29", "-46.7536, 219.665, -63.9482, 0.59", "-47.1476, 219.654, -63.7395, 0.59", "-48.1587, 219.582, -63.0979, 0.22", "-49.3111, 219.43, -62.2032, 0.22", "-49.87, 219.289, -61.5711, 0.22", "-50.7042, 218.949, -60.4173, 0.22", "-51.6365, 218.441, -58.938, 0.66", "-52.0923, 218.142, -58.1952, 0.96", "-52.8501, 217.579, -56.9399, 0.96", "-53.7741, 216.861, -55.4893, 0.22", "-54.2974, 216.402, -54.6387, 0.22", "-54.5886, 216.126, -54.1794, 0.52", "-55.0834, 215.679, -53.5084, 0.22", "-55.5034, 215.391, -53.0453, 0.22", "-56.4773, 215.032, -52.451, 0.52" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "-40.1952, 180.529, -70.2568, 0.37", "-40.143, 179.024, -69.3906, 0.37", "-40.1522, 177.967, -68.7852, 0.52", "-40.1986, 176.434, -67.9152, 0.44", "-40.253, 175.139, -67.2063, 0.66", "-40.2972, 173.699, -66.4064, 0.29", "-40.3478, 172.471, -65.6815, 0.29", "-40.5013, 171.067, -64.7559, 0.44", "-40.6399, 170.319, -64.2212, 0.44", "-40.9198, 169.3, -63.4151, 0.66", "-41.5214, 167.647, -62.0091, 0.37", "-42.3053, 166.112, -60.4943, 0.37", "-43.1273, 164.93, -59.1525, 0.37", "-43.7693, 164.303, -58.3622, 0.29", "-44.2357, 163.99, -57.9083, 0.74", "-45.1208, 163.58, -57.2329, 0.22", "-46.3179, 163.17, -56.5233, 0.22", "-46.9183, 162.993, -56.2236, 0.22", "-48.7088, 162.449, -55.3896, 0.22", "-49.952, 162.038, -54.8075, 0.22", "-51.2494, 161.612, -54.1935, 0.22", "-52.1464, 161.335, -53.7684, 0.44", "-52.6781, 161.135, -53.5202, 0.44" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "-40.1952, 180.529, -70.2568, 0.81", "-42.2804, 180.789, -70.6198, 0.81", "-43.0698, 180.851, -70.7187, 0.81", "-44.0327, 180.951, -70.872, 0.66", "-45.3699, 181.117, -71.084, 0.29", "-46.2122, 181.261, -71.2106, 0.37", "-47.1076, 181.443, -71.3372, 0.37", "-47.8434, 181.597, -71.403, 0.29", "-49.2928, 181.857, -71.5451, 0.44", "-50.2759, 182.025, -71.6517, 0.59", "-51.1951, 182.157, -71.7569, 0.29", "-52.3869, 182.291, -71.897, 0.59", "-53.399, 182.351, -72.0221, 0.29", "-55.1108, 182.345, -72.2287, 0.29", "-55.6537, 182.306, -72.2849, 0.22", "-57.8826, 182.057, -72.5504, 0.22", "-58.1627, 182.012, -72.5865, 0.44", "-58.7366, 181.904, -72.6645, 0.44", "-59.8878, 181.684, -72.8299, 0.22", "-60.7983, 181.498, -72.9519, 0.37" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "21.2639, 53.8346, 146.118, 0.44", "16.0327, 56.64, 153.574, 0.44", "10.8624, 57.5526, 161.518, 0.44", "6.97936, 58.7235, 170.134, 0.44" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "21.2639, 53.8346, 146.118, 0.22", "22.5919, 52.0947, 155.849, 0.44", "24.5678, 51.6901, 165.608, 0.44" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "21.64, 51.3142, 146.291, 0.44", "15.9416, 51.2249, 150.817, 0.44", "10.1025, 52.3546, 155.008, 0.44", "4.55339, 53.5427, 159.562, 0.44", "-0.512922, 53.9397, 164.769, 0.44" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "21.64, 51.3142, 146.291, 0.22", "25.6194, 48.9833, 154.864, 0.44", "28.4474, 44.3929, 163.013, 0.44", "32.4814, 40.4337, 170.966, 0.44" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "110.098, 101.259, 136.581, 0.44", "115.795, 107.812, 146.747, 0.44", "119.97, 116.177, 156.379, 0.44" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "110.098, 101.259, 136.581, 0.22", "116.798, 106.068, 143.403, 0.44", "122.592, 110.68, 151.132, 0.44" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "112.304, 105.78, 136.185, 0.44", "115.082, 113.907, 140.901, 0.44", "116.039, 122.711, 145.183, 0.44" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "112.304, 105.78, 136.185, 0.22", "121.049, 104.513, 139.429, 0.44", "129.511, 101.909, 142.684, 0.44", "137.931, 101.274, 146.821, 0.44" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-18.8136, 84.8219, 18.96, 0.37", "-19.5452, 85.4318, 18.7547, 0.37", "-20.3835, 86.1059, 18.5619, 0.37", "-21.0136, 86.526, 18.4462, 0.37", "-21.6045, 86.8366, 18.3229, 0.37", "-22.1053, 87.0716, 18.178, 0.52", "-22.4718, 87.2416, 18.0529, 0.52", "-22.9451, 87.4637, 17.8542, 0.29", "-23.6546, 87.7459, 17.4544, 0.29", "-24.334, 87.9391, 16.9674, 0.29", "-25.0899, 88.0733, 16.3442, 0.66", "-25.3755, 88.1055, 16.0909, 0.81", "-25.9755, 88.1611, 15.5521, 0.59", "-26.9577, 88.2886, 14.7209, 0.29", "-27.6093, 88.428, 14.2071, 0.29", "-28.2309, 88.6227, 13.7607, 0.74", "-28.7734, 88.8467, 13.3818, 0.74", "-29.1945, 89.0621, 13.0783, 0.74", "-29.8901, 89.4862, 12.5827, 0.44", "-30.4035, 89.873, 12.2381, 0.44", "-31.2382, 90.5949, 11.7196, 0.52", "-31.8423, 91.1764, 11.3649, 0.52", "-32.6877, 92.0936, 10.7884, 0.44", "-33.0234, 92.5024, 10.4789, 0.44", "-33.4361, 93.0547, 9.99728, 0.66", "-33.901, 93.7, 9.40887, 0.81", "-34.1858, 94.1219, 9.0266, 0.81", "-34.585, 94.8811, 8.12019, 0.29", "-34.8084, 95.5897, 7.15855, 0.29", "-34.9244, 96.1985, 6.28696, 0.52", "-34.9461, 96.4325, 5.95793, 0.74", "-34.9559, 96.9351, 5.22992, 0.74", "-34.851, 98.5431, 2.8495, 0.66", "-34.7992, 98.8749, 2.34632, 0.29", "-34.6785, 99.3208, 1.64247, 0.29", "-34.4463, 99.9535, 0.640457, 0.29", "-34.1759, 100.536, -0.36142, 0.29", "-33.8434, 101.088, -1.36241, 0.37", "-33.4847, 101.619, -2.31161, 0.52", "-33.0495, 102.188, -3.43896, 0.74", "-32.7642, 102.52, -4.14946, 0.59", "-31.9293, 103.405, -6.1465, 0.37", "-31.6884, 103.656, -6.6919, 0.37", "-31.3912, 103.965, -7.32598, 0.37", "-31.1166, 104.278, -7.96257, 0.37", "-30.6701, 104.829, -9.09151, 0.74", "-30.491, 105.119, -9.66563, 0.74", "-30.2625, 105.791, -10.747, 0.37", "-30.1957, 106.164, -11.2907, 0.37", "-30.1451, 107.479, -13.0603, 0.44", "-30.1674, 107.738, -13.361, 0.66", "-30.2661, 108.241, -13.8225, 0.66", "-30.4575, 108.95, -14.3705, 0.44", "-30.5791, 109.345, -14.617, 0.29", "-30.8024, 110.067, -15.011, 0.29", "-30.9498, 110.574, -15.2466, 0.37", "-31.3321, 111.879, -15.9255, 0.52", "-31.6024, 112.831, -16.4185, 0.29", "-31.8897, 113.82, -16.9418, 0.74", "-32.045, 114.335, -17.2083, 0.74", "-32.2788, 115.129, -17.5923, 0.74", "-32.7958, 116.76, -18.3159, 0.22", "-33.092, 117.585, -18.6304, 0.22", "-33.1656, 117.774, -18.6925, 0.74", "-33.3709, 118.244, -18.9171, 0.44", "-33.605, 118.795, -19.2344, 0.29", "-33.9316, 119.66, -19.8036, 0.22", "-34.0863, 120.133, -20.1456, 0.44", "-34.2302, 120.672, -20.5826, 0.29", "-34.6742, 122.641, -22.1602, 0.88", "-34.7702, 123.109, -22.5272, 0.88", "-34.8559, 123.515, -22.826, 0.22", "-34.9426, 124.066, -23.2, 0.22", "-34.9915, 124.444, -23.4093, 0.22", "-35.0929, 125.075, -23.6654, 0.22", "-35.2559, 125.777, -23.8392, 0.22", "-35.3968, 126.219, -24.01, 0.22", "-35.7247, 127.013, -24.5344, 0.22", "-35.9807, 127.583, -24.9846, 0.22", "-36.1921, 128.072, -25.3799, 0.22", "-36.4202, 128.66, -25.8361, 0.22", "-36.764, 129.66, -26.5541, 0.66", "-37.2654, 131.303, -27.5668, 0.88", "-37.5548, 132.337, -28.1192, 0.37", "-37.7386, 133.191, -28.5619, 0.37", "-37.8609, 134.0, -28.9724, 0.37", "-37.9178, 134.939, -29.4775, 0.29", "-37.8723, 136.401, -30.2776, 0.29", "-37.7786, 137.178, -30.7285, 0.29", "-37.5157, 138.423, -31.6749, 0.29", "-37.3291, 139.02, -32.3118, 0.74", "-36.9147, 140.009, -33.7697, 0.37", "-36.7902, 140.272, -34.2593, 0.37", "-36.6422, 140.535, -34.8321, 0.37", "-36.2036, 141.249, -36.5479, 0.88", "-35.6802, 142.063, -38.722, 0.59", "-35.2565, 142.68, -40.545, 0.37", "-35.0851, 142.977, -41.4908, 0.44" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-18.8136, 84.8219, 18.96, 0.29", "-19.9567, 86.6128, 19.3267, 0.29", "-20.7683, 87.8347, 19.501, 0.29", "-21.7048, 89.2192, 19.6451, 0.29", "-22.5468, 90.4718, 19.6905, 0.22", "-23.4841, 91.9147, 19.6851, 0.22", "-23.8182, 92.461, 19.6698, 0.22", "-24.5233, 93.608, 19.549, 0.74", "-24.8381, 94.0981, 19.4928, 0.74", "-25.7269, 95.4436, 19.343, 0.44", "-26.204, 96.1932, 19.259, 0.59", "-26.7454, 97.1263, 19.1726, 0.59", "-27.7391, 98.8641, 19.0617, 0.29", "-28.5787, 100.412, 19.0181, 0.29", "-29.0772, 101.339, 19.0018, 0.29", "-29.8258, 102.62, 18.9968, 0.29", "-30.7943, 104.16, 18.9345, 0.81", "-31.0842, 104.605, 18.883, 0.81", "-31.9428, 106.037, 18.605, 0.29", "-32.4316, 106.937, 18.4023, 0.29", "-33.0925, 108.146, 18.0384, 0.29", "-33.5661, 108.9, 17.7068, 0.29", "-34.1896, 109.801, 17.2216, 0.29", "-34.9705, 110.874, 16.6008, 0.74", "-36.3156, 112.641, 15.5489, 0.22", "-37.5492, 114.253, 14.6279, 0.22", "-38.8291, 115.943, 13.683, 0.37", "-39.3683, 116.6, 13.3279, 0.37", "-40.1004, 117.461, 12.889, 0.22", "-41.2034, 118.801, 12.2493, 0.22", "-42.1883, 120.074, 11.7427, 0.52", "-43.412, 121.733, 11.2288, 0.29", "-43.9111, 122.447, 11.043, 0.29", "-44.6851, 123.531, 10.6993, 0.29", "-45.9465, 125.196, 10.1111, 0.29", "-46.8419, 126.297, 9.67851, 0.29", "-47.8594, 127.459, 9.18891, 0.29", "-48.8732, 128.5, 8.74433, 0.29", "-50.384, 129.944, 8.14346, 0.29", "-51.8198, 131.142, 7.60702, 0.29", "-52.3687, 131.563, 7.39832, 0.66", "-52.7418, 131.864, 7.24323, 0.66", "-53.7252, 132.728, 6.82176, 0.22", "-54.8058, 133.777, 6.33232, 0.22", "-55.9766, 135.019, 5.80349, 0.29", "-56.791, 135.933, 5.41063, 0.29", "-58.0319, 137.405, 4.75441, 0.52", "-58.5041, 137.995, 4.48398, 0.52", "-59.4184, 139.183, 3.95201, 0.29", "-60.4819, 140.575, 3.39344, 0.29", "-61.4672, 141.886, 3.02722, 0.29", "-62.4495, 143.206, 2.79026, 0.29", "-63.1558, 144.175, 2.69823, 0.29", "-64.1052, 145.472, 2.59276, 0.29", "-65.0406, 146.796, 2.45247, 0.29", "-65.933, 148.172, 2.29356, 0.37", "-66.5905, 149.275, 2.1491, 0.37", "-67.428, 150.689, 1.80681, 0.37", "-68.2429, 152.085, 1.34968, 0.29", "-69.2038, 153.749, 0.667982, 0.22", "-69.8141, 154.826, 0.159651, 0.44", "-70.7452, 156.563, -0.662605, 0.81", "-72.4607, 159.906, -2.17476, 0.22", "-73.3248, 161.694, -2.82604, 0.22", "-73.8982, 163.057, -3.12957, 0.74", "-74.1675, 163.825, -3.18783, 0.74", "-74.7536, 166.08, -3.05335, 0.22", "-74.9315, 167.756, -2.70438, 0.22", "-74.8421, 170.149, -1.99628, 0.29", "-74.6175, 171.956, -1.54595, 0.29", "-74.33, 173.51, -1.24765, 0.29", "-73.9885, 175.071, -1.07209, 0.29", "-73.3716, 177.572, -0.948941, 0.22", "-72.6313, 180.041, -0.945648, 0.22", "-71.9995, 181.939, -1.14707, 0.22", "-71.6052, 183.051, -1.3412, 0.37", "-71.1803, 184.121, -1.60204, 0.37" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-69.6355, 46.8204, 11.1011, 0.22", "-79.9549, 42.2251, 7.93949, 0.22", "-90.7182, 37.8749, 6.31907, 0.22" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-69.6355, 46.8204, 11.1011, 0.22", "-79.668, 41.9157, 8.43345, 0.22", "-89.9131, 36.8874, 7.17621, 0.22", "-100.973, 34.0947, 8.11899, 0.22", "-112.258, 33.3032, 9.79361, 0.22", "-123.163, 31.4212, 12.6872, 0.22", "-134.126, 28.3902, 13.9876, 0.22", "-145.076, 25.0426, 13.7601, 0.22" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "4.78951, -273.28, 41.9286, 0.22", "3.6093, -273.335, 41.1776, 0.22", "2.59192, -273.226, 40.5334, 0.22", "1.96579, -273.121, 40.1575, 0.22", "1.5706, -273.082, 39.9273, 0.22", "0.9674, -273.074, 39.5924, 0.22", "0.554481, -273.098, 39.378, 0.22", "0.0672314, -273.156, 39.1355, 0.52", "-0.903582, -273.282, 38.6652, 0.22", "-1.69348, -273.474, 38.308, 0.22", "-2.24578, -273.676, 38.0823, 0.37", "-2.84766, -273.977, 37.8513, 0.37", "-3.6315, -274.459, 37.5413, 0.29", "-10.8009, -274.783, 32.5141, 0.29" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "4.78951, -273.28, 41.9286, 0.96", "4.75582, -273.756, 42.1462, 0.96", "4.66407, -275.051, 42.739, 0.59", "4.58897, -276.111, 43.2242, 0.59", "4.54573, -276.722, 43.5035, 0.59", "4.45039, -278.068, 44.1195, 0.52", "4.33047, -279.76, 44.8943, 0.74" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_98",
    "id" : "dend_98",
    "points3d" : [ "-49.7181, 229.189, -85.2693, 0.29", "-48.6666, 230.105, -85.6443, 0.29", "-47.9883, 230.738, -85.9012, 0.29", "-47.1447, 231.7, -86.2371, 0.74", "-46.259, 232.965, -86.5725, 0.52", "-45.8837, 233.648, -86.7864, 0.29", "-45.3079, 234.847, -87.1899, 0.22", "-45.117, 235.336, -87.3628, 0.22", "-44.7977, 236.45, -87.7655, 0.22", "-44.55, 237.75, -88.1945, 0.74", "-44.3403, 239.747, -88.7496, 0.29", "-44.3142, 240.567, -88.9846, 0.29", "-44.3275, 241.521, -89.2532, 0.29", "-44.3484, 242.479, -89.4985, 0.29", "-44.3581, 243.364, -89.7035, 0.74", "-44.3905, 244.389, -89.9167, 0.74", "-44.4539, 245.72, -90.0998, 0.37", "-44.5438, 246.951, -90.2605, 0.29", "-44.6541, 248.337, -90.4373, 0.29", "-44.6943, 249.521, -90.5761, 0.29" ],
    "parent" : "dend_96",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_97",
    "id" : "dend_97",
    "points3d" : [ "-49.7181, 229.189, -85.2693, 0.22", "-49.9773, 227.529, -85.5848, 0.22", "-50.2155, 226.536, -85.783, 0.22", "-50.4561, 225.666, -85.9728, 0.37", "-50.6221, 225.085, -86.1174, 0.37", "-50.9069, 224.148, -86.3646, 0.29", "-51.217, 223.213, -86.614, 0.29", "-51.5322, 222.306, -86.8631, 0.29", "-51.7915, 221.658, -87.0524, 0.66", "-52.2858, 220.616, -87.3684, 0.22", "-52.6687, 219.852, -87.6214, 0.22", "-52.8785, 219.418, -87.7796, 0.37" ],
    "parent" : "dend_96",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "6.97936, 58.7235, 170.134, 0.44", "0.740688, 61.5509, 177.717, 0.44" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "6.97936, 58.7235, 170.134, 0.22", "3.6747, 57.1562, 178.031, 0.44" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "24.5678, 51.6901, 165.608, 0.44", "15.706, 50.7406, 169.166, 0.44", "6.46672, 49.6305, 171.521, 0.44", "-3.03563, 48.6822, 172.472, 0.44", "-12.2504, 45.95, 172.992, 0.44", "-21.2567, 42.8237, 174.38, 0.44", "-30.5018, 40.6181, 175.838, 0.44", "-39.4165, 38.4844, 178.739, 0.44" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "24.5678, 51.6901, 165.608, 0.22", "29.2205, 51.0377, 174.263, 0.44", "34.1195, 51.4487, 182.799, 0.44" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "-0.512922, 53.9397, 164.769, 0.44", "-3.73646, 42.246, 162.628, 0.44", "-8.44739, 31.4219, 159.227, 0.44" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-0.512922, 53.9397, 164.769, 0.22", "-3.00966, 61.5363, 169.495, 0.44" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "32.4814, 40.4337, 170.966, 0.44", "37.2006, 37.9472, 177.971, 0.44" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "32.4814, 40.4337, 170.966, 0.22", "35.2178, 36.2624, 179.54, 0.44" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "119.97, 116.177, 156.379, 0.44", "124.971, 124.778, 161.788, 0.44" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "119.97, 116.177, 156.379, 0.22", "122.587, 118.229, 163.696, 0.44" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "122.592, 110.68, 151.132, 0.44", "127.408, 114.392, 158.334, 0.44" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "122.592, 110.68, 151.132, 0.22", "131.129, 117.925, 159.358, 0.44" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "116.039, 122.711, 145.183, 0.44", "119.206, 128.136, 140.939, 0.44", "123.413, 133.651, 137.876, 0.44", "127.617, 139.453, 135.371, 0.44" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "116.039, 122.711, 145.183, 0.22", "113.517, 125.067, 150.571, 0.44", "110.034, 126.955, 155.585, 0.44" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "137.931, 101.274, 146.821, 0.44", "143.254, 98.785, 152.994, 0.44" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "137.931, 101.274, 146.821, 0.22", "150.784, 102.227, 142.244, 0.44", "163.723, 103.988, 138.168, 0.44" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "4.33047, -279.76, 44.8943, 0.52", "4.09253, -281.39, 44.9304, 0.52", "3.98233, -282.451, 44.8186, 0.74", "3.98732, -283.214, 44.8074, 0.81", "4.06551, -284.354, 44.8615, 1.03", "4.14119, -285.508, 45.0101, 0.74", "4.19959, -286.8, 45.2737, 0.44", "4.32086, -288.581, 45.6325, 0.29", "4.58548, -291.215, 46.342, 0.29", "4.69377, -292.023, 46.6284, 0.29", "4.94733, -293.412, 47.305, 1.47", "5.13496, -294.187, 47.8473, 1.47" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "4.33047, -279.76, 44.8943, 0.37", "5.3258, -280.443, 44.3228, 0.37", "6.25668, -281.082, 43.7884, 0.37", "7.17115, -281.709, 43.2634, 0.29", "8.7226, -282.773, 42.3727, 0.29", "9.50007, -283.306, 41.9264, 0.29", "10.5319, -284.014, 41.334, 0.29", "20.8443, -291.118, 37.8324, 0.29" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "5.13496, -294.187, 47.8473, 1.03", "4.99406, -294.69, 47.8636, 1.03" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "5.13496, -294.187, 47.8473, 0.22", "3.9441, -293.052, 47.8166, 0.22", "3.04221, -292.222, 47.7046, 0.22", "2.37281, -291.575, 47.5644, 0.22", "1.78119, -290.958, 47.4042, 0.22", "1.01057, -290.154, 47.1954, 0.22", "0.297343, -289.409, 47.0023, 0.22", "-0.319064, -288.819, 46.765, 0.22", "-0.874166, -288.281, 46.4715, 0.22", "-1.27385, -287.858, 46.1992, 0.22", "-9.18824, -280.637, 44.5256, 0.22" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "4.99406, -294.69, 47.8636, 0.96", "4.89779, -295.743, 47.7666, 0.96", "4.84143, -296.359, 47.7098, 0.96", "4.73022, -297.575, 47.5978, 1.33", "4.57754, -299.244, 47.4439, 0.22", "4.48517, -300.253, 47.3508, 0.22", "4.3658, -301.558, 47.2305, 0.22", "5.05365, -311.065, 46.8723, 0.22" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "4.99406, -294.69, 47.8636, 0.22", "3.41184, -294.302, 48.3577, 0.22", "2.1283, -293.987, 48.7586, 0.22", "1.22856, -293.766, 49.0396, 0.22", "-0.48511, -293.345, 49.5748, 0.22", "-0.878147, -293.249, 49.6975, 0.22", "-11.9177, -291.673, 52.0997, 0.22" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_86", "dend_23", "dend_0", "dend_108", "dend_87", "dend_39", "dend_24", "dend_18", "dend_1", "dend_105", "dend_88", "dend_51", "dend_40", "dend_36", "dend_25", "dend_22", "dend_19", "dend_3", "dend_2", "dend_107", "dend_106", "dend_102", "dend_89", "dend_69", "dend_52", "dend_42", "dend_41", "dend_38", "dend_37", "dend_31", "dend_26", "dend_21", "dend_20", "dend_5", "dend_4", "dend_104", "dend_103", "dend_99", "dend_90", "dend_71", "dend_70", "dend_68", "dend_53", "dend_50", "dend_43", "dend_33", "dend_32", "dend_28", "dend_27", "dend_7", "dend_6", "dend_101", "dend_100", "dend_94", "dend_91", "dend_79", "dend_72", "dend_61", "dend_54", "dend_47", "dend_44", "dend_35", "dend_34", "dend_30", "dend_29", "dend_9", "dend_8", "dend_96", "dend_95", "dend_93", "dend_92", "dend_83", "dend_80", "dend_76", "dend_73", "dend_65", "dend_62", "dend_58", "dend_55", "dend_49", "dend_48", "dend_46", "dend_45", "dend_17", "dend_10", "dend_98", "dend_97", "dend_85", "dend_84", "dend_82", "dend_81", "dend_78", "dend_77", "dend_75", "dend_74", "dend_67", "dend_66", "dend_64", "dend_63", "dend_60", "dend_59", "dend_57", "dend_56", "dend_12", "dend_11", "dend_14", "dend_13", "dend_16", "dend_15" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_86", "dend_23", "dend_0", "dend_108", "dend_87", "dend_39", "dend_24", "dend_18", "dend_1", "dend_105", "dend_88", "dend_51", "dend_40", "dend_36", "dend_25", "dend_22", "dend_19", "dend_3", "dend_2", "dend_107", "dend_106", "dend_102", "dend_89", "dend_69", "dend_52", "dend_42", "dend_41", "dend_38", "dend_37", "dend_31", "dend_26", "dend_21", "dend_20", "dend_5", "dend_4", "dend_104", "dend_103", "dend_99", "dend_90", "dend_71", "dend_70", "dend_68", "dend_53", "dend_50", "dend_43", "dend_33", "dend_32", "dend_28", "dend_27", "dend_7", "dend_6", "dend_101", "dend_100", "dend_94", "dend_91", "dend_79", "dend_72", "dend_61", "dend_54", "dend_47", "dend_44", "dend_35", "dend_34", "dend_30", "dend_29", "dend_9", "dend_8", "dend_96", "dend_95", "dend_93", "dend_92", "dend_83", "dend_80", "dend_76", "dend_73", "dend_65", "dend_62", "dend_58", "dend_55", "dend_49", "dend_48", "dend_46", "dend_45", "dend_17", "dend_10", "dend_98", "dend_97", "dend_85", "dend_84", "dend_82", "dend_81", "dend_78", "dend_77", "dend_75", "dend_74", "dend_67", "dend_66", "dend_64", "dend_63", "dend_60", "dend_59", "dend_57", "dend_56", "dend_12", "dend_11", "dend_14", "dend_13", "dend_16", "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_108" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_105" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_103" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_99" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_94" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_107" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_102" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_106" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_104" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_98",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_100" ]
  }, {
    "name" : "OneSecGrp_SectionRef_101",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_101" ]
  }, {
    "name" : "OneSecGrp_SectionRef_100",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_102",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_104",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_99",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_105",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_103",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_106",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_107",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "OneSecGrp_SectionRef_109",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_108",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_111",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_112",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_110",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_95" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_96" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_97" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_98" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93", "dend_94", "dend_95", "dend_96", "dend_97", "dend_98", "dend_99", "dend_100", "dend_101", "dend_102", "dend_103", "dend_104", "dend_105", "dend_106", "dend_107", "dend_108" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_69", "dend_69", "dend_69", "dend_69", "dend_52", "dend_52", "dend_52", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_100", "dend_100", "dend_100", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_79", "dend_79", "dend_72", "dend_72", "dend_61", "dend_61", "dend_54", "dend_54", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_35", "dend_35", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_83", "dend_83", "dend_83", "dend_80", "dend_80", "dend_76", "dend_76", "dend_76", "dend_76", "dend_73", "dend_73", "dend_73", "dend_65", "dend_65", "dend_62", "dend_62", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_85", "dend_84", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_81", "dend_81", "dend_78", "dend_78", "dend_77", "dend_75", "dend_74", "dend_67", "dend_66", "dend_64", "dend_63", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_57", "dend_56", "dend_56", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L5_BTC_9b82f426e5_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_86, id: dend_86, parent: soma_0
create dend_86
public dend_86
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_108, id: dend_108, parent: dend_86
create dend_108
public dend_108
// Section: dend_87, id: dend_87, parent: dend_86
create dend_87
public dend_87
// Section: dend_39, id: dend_39, parent: dend_23
create dend_39
public dend_39
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_18, id: dend_18, parent: dend_0
create dend_18
public dend_18
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_105, id: dend_105, parent: dend_87
create dend_105
public dend_105
// Section: dend_88, id: dend_88, parent: dend_87
create dend_88
public dend_88
// Section: dend_51, id: dend_51, parent: dend_39
create dend_51
public dend_51
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_24
create dend_36
public dend_36
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_107, id: dend_107, parent: dend_105
create dend_107
public dend_107
// Section: dend_106, id: dend_106, parent: dend_105
create dend_106
public dend_106
// Section: dend_102, id: dend_102, parent: dend_88
create dend_102
public dend_102
// Section: dend_89, id: dend_89, parent: dend_88
create dend_89
public dend_89
// Section: dend_69, id: dend_69, parent: dend_51
create dend_69
public dend_69
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_104, id: dend_104, parent: dend_102
create dend_104
public dend_104
// Section: dend_103, id: dend_103, parent: dend_102
create dend_103
public dend_103
// Section: dend_99, id: dend_99, parent: dend_89
create dend_99
public dend_99
// Section: dend_90, id: dend_90, parent: dend_89
create dend_90
public dend_90
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_68, id: dend_68, parent: dend_52
create dend_68
public dend_68
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: dend_42
create dend_50
public dend_50
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_101, id: dend_101, parent: dend_99
create dend_101
public dend_101
// Section: dend_100, id: dend_100, parent: dend_99
create dend_100
public dend_100
// Section: dend_94, id: dend_94, parent: dend_90
create dend_94
public dend_94
// Section: dend_91, id: dend_91, parent: dend_90
create dend_91
public dend_91
// Section: dend_79, id: dend_79, parent: dend_71
create dend_79
public dend_79
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_61, id: dend_61, parent: dend_53
create dend_61
public dend_61
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_47, id: dend_47, parent: dend_43
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_96, id: dend_96, parent: dend_94
create dend_96
public dend_96
// Section: dend_95, id: dend_95, parent: dend_94
create dend_95
public dend_95
// Section: dend_93, id: dend_93, parent: dend_91
create dend_93
public dend_93
// Section: dend_92, id: dend_92, parent: dend_91
create dend_92
public dend_92
// Section: dend_83, id: dend_83, parent: dend_79
create dend_83
public dend_83
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_76, id: dend_76, parent: dend_72
create dend_76
public dend_76
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_65, id: dend_65, parent: dend_61
create dend_65
public dend_65
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_58, id: dend_58, parent: dend_54
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_17, id: dend_17, parent: dend_9
create dend_17
public dend_17
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_98, id: dend_98, parent: dend_96
create dend_98
public dend_98
// Section: dend_97, id: dend_97, parent: dend_96
create dend_97
public dend_97
// Section: dend_85, id: dend_85, parent: dend_83
create dend_85
public dend_85
// Section: dend_84, id: dend_84, parent: dend_83
create dend_84
public dend_84
// Section: dend_82, id: dend_82, parent: dend_80
create dend_82
public dend_82
// Section: dend_81, id: dend_81, parent: dend_80
create dend_81
public dend_81
// Section: dend_78, id: dend_78, parent: dend_76
create dend_78
public dend_78
// Section: dend_77, id: dend_77, parent: dend_76
create dend_77
public dend_77
// Section: dend_75, id: dend_75, parent: dend_73
create dend_75
public dend_75
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_86, dend_23, dend_0, dend_108, dend_87, dend_39, dend_24, dend_18, dend_1, dend_105, dend_88, dend_51, dend_40, dend_36, dend_25, dend_22, dend_19, dend_3, dend_2, dend_107, dend_106, dend_102, dend_89, dend_69, dend_52, dend_42, dend_41, dend_38, dend_37, dend_31, dend_26, dend_21, dend_20, dend_5, dend_4, dend_104, dend_103, dend_99, dend_90, dend_71, dend_70, dend_68, dend_53, dend_50, dend_43, dend_33, dend_32, dend_28, dend_27, dend_7, dend_6, dend_101, dend_100, dend_94, dend_91, dend_79, dend_72, dend_61, dend_54, dend_47, dend_44, dend_35, dend_34, dend_30, dend_29, dend_9, dend_8, dend_96, dend_95, dend_93, dend_92, dend_83, dend_80, dend_76, dend_73, dend_65, dend_62, dend_58, dend_55, dend_49, dend_48, dend_46, dend_45, dend_17, dend_10, dend_98, dend_97, dend_85, dend_84, dend_82, dend_81, dend_78, dend_77, dend_75, dend_74, dend_67, dend_66, dend_64, dend_63, dend_60, dend_59, dend_57, dend_56, dend_12, dend_11, dend_14, dend_13, dend_16, dend_15]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_86, dend_23, dend_0, dend_108, dend_87, dend_39, dend_24, dend_18, dend_1, dend_105, dend_88, dend_51, dend_40, dend_36, dend_25, dend_22, dend_19, dend_3, dend_2, dend_107, dend_106, dend_102, dend_89, dend_69, dend_52, dend_42, dend_41, dend_38, dend_37, dend_31, dend_26, dend_21, dend_20, dend_5, dend_4, dend_104, dend_103, dend_99, dend_90, dend_71, dend_70, dend_68, dend_53, dend_50, dend_43, dend_33, dend_32, dend_28, dend_27, dend_7, dend_6, dend_101, dend_100, dend_94, dend_91, dend_79, dend_72, dend_61, dend_54, dend_47, dend_44, dend_35, dend_34, dend_30, dend_29, dend_9, dend_8, dend_96, dend_95, dend_93, dend_92, dend_83, dend_80, dend_76, dend_73, dend_65, dend_62, dend_58, dend_55, dend_49, dend_48, dend_46, dend_45, dend_17, dend_10, dend_98, dend_97, dend_85, dend_84, dend_82, dend_81, dend_78, dend_77, dend_75, dend_74, dend_67, dend_66, dend_64, dend_63, dend_60, dend_59, dend_57, dend_56, dend_12, dend_11, dend_14, dend_13, dend_16, dend_15]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_108]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_105]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_103]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_99]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_94]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_107]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_102]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_106]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_104]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_97
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_96
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_98
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_100]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_101
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_101]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_100
// Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_102
// Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_104
// Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_99
// Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_105
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_103
// Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_106
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_107
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_109
// Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_108
// Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_111
// Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_112
// Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_110
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_95]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_96]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_97]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_98]}
objref OneSecGrp_SectionRef_89
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_69, dend_69, dend_69, dend_69, dend_52, dend_52, dend_52, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_101, dend_101, dend_101, dend_101, dend_101, dend_100, dend_100, dend_100, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_79, dend_79, dend_72, dend_72, dend_61, dend_61, dend_54, dend_54, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_83, dend_83, dend_83, dend_80, dend_80, dend_76, dend_76, dend_76, dend_76, dend_73, dend_73, dend_73, dend_65, dend_65, dend_62, dend_62, dend_58, dend_58, dend_55, dend_55, dend_55, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_85, dend_84, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_78, dend_78, dend_77, dend_75, dend_74, dend_67, dend_66, dend_64, dend_63, dend_60, dend_60, dend_60, dend_59, dend_59, dend_57, dend_56, dend_56, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_86(0), soma_0(0.450001137941537)
    connect dend_23(0), soma_0(0.450001137941537)
    connect dend_0(0), soma_0(0.450001137941537)
    connect axon_0(0), soma_0(1.0)
    connect dend_108(0), dend_86(1.0)
    connect dend_87(0), dend_86(1.0)
    connect dend_39(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_18(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_105(0), dend_87(1.0)
    connect dend_88(0), dend_87(1.0)
    connect dend_51(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_107(0), dend_105(1.0)
    connect dend_106(0), dend_105(1.0)
    connect dend_102(0), dend_88(1.0)
    connect dend_89(0), dend_88(1.0)
    connect dend_69(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_104(0), dend_102(1.0)
    connect dend_103(0), dend_102(1.0)
    connect dend_99(0), dend_89(1.0)
    connect dend_90(0), dend_89(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_68(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_50(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_101(0), dend_99(1.0)
    connect dend_100(0), dend_99(1.0)
    connect dend_94(0), dend_90(1.0)
    connect dend_91(0), dend_90(1.0)
    connect dend_79(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_61(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_47(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_96(0), dend_94(1.0)
    connect dend_95(0), dend_94(1.0)
    connect dend_93(0), dend_91(1.0)
    connect dend_92(0), dend_91(1.0)
    connect dend_83(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_76(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_65(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_58(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_17(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_98(0), dend_96(1.0)
    connect dend_97(0), dend_96(1.0)
    connect dend_85(0), dend_83(1.0)
    connect dend_84(0), dend_83(1.0)
    connect dend_82(0), dend_80(1.0)
    connect dend_81(0), dend_80(1.0)
    connect dend_78(0), dend_76(1.0)
    connect dend_77(0), dend_76(1.0)
    connect dend_75(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.88047, -10.716, -1.11504, 1.92098 ) }
    soma_0 { pt3dadd( -1.70946, -9.6452, -1.01124, 2.92873 ) }
    soma_0 { pt3dadd( -1.53845, -8.57443, -0.907436, 4.88462 ) }
    soma_0 { pt3dadd( -1.36745, -7.50365, -0.803634, 6.96834 ) }
    soma_0 { pt3dadd( -1.19644, -6.43288, -0.699833, 8.71039 ) }
    soma_0 { pt3dadd( -1.02543, -5.3621, -0.596031, 9.75846 ) }
    soma_0 { pt3dadd( -0.854423, -4.29132, -0.492229, 10.7595 ) }
    soma_0 { pt3dadd( -0.683416, -3.22055, -0.388427, 11.4328 ) }
    soma_0 { pt3dadd( -0.512408, -2.14977, -0.284625, 11.7309 ) }
    soma_0 { pt3dadd( -0.341401, -1.079, -0.180824, 11.6952 ) }
    soma_0 { pt3dadd( -0.170393, -0.00821902, -0.0770218, 11.6235 ) }
    soma_0 { pt3dadd( 6.14341E-4, 1.06256, 0.0267799, 11.5198 ) }
    soma_0 { pt3dadd( 0.171622, 2.13333, 0.130582, 11.2257 ) }
    soma_0 { pt3dadd( 0.342629, 3.20411, 0.234383, 10.7284 ) }
    soma_0 { pt3dadd( 0.513637, 4.27489, 0.338185, 9.45222 ) }
    soma_0 { pt3dadd( 0.684644, 5.34566, 0.441987, 7.57235 ) }
    soma_0 { pt3dadd( 0.855652, 6.41644, 0.545789, 5.71519 ) }
    soma_0 { pt3dadd( 1.02666, 7.48721, 0.649591, 4.19151 ) }
    soma_0 { pt3dadd( 1.19767, 8.55799, 0.753392, 3.44771 ) }
    soma_0 { pt3dadd( 1.36867, 9.62877, 0.857194, 2.95035 ) }
    soma_0 { pt3dadd( 1.53968, 10.6995, 0.960996, 1.95307 ) }
    // Section: dend_86, id: dend_86, parent: soma_0 (entry count 21/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( 1.39356, 0.682199, -10.5931, 2.8 ) }
    dend_86 { pt3dadd( 1.39356, 0.682199, -10.5931, 2.8 ) }
    dend_86 { pt3dadd( 4.68864, 0.953949, -16.2215, 2.28 ) }
    dend_86 { pt3dadd( 5.25591, 0.973881, -17.1812, 2.28 ) }
    dend_86 { pt3dadd( 5.93875, 0.921876, -18.5436, 2.58 ) }
    dend_86 { pt3dadd( 7.12475, 0.774123, -21.3298, 2.8 ) }
    dend_86 { pt3dadd( 8.19376, 0.616421, -24.3712, 2.58 ) }
    dend_86 { pt3dadd( 8.53021, 0.556916, -25.649, 2.43 ) }
    dend_86 { pt3dadd( 9.22433, 0.35297, -29.0539, 2.43 ) }
    dend_86 { pt3dadd( 10.1078, -0.111031, -34.9546, 1.77 ) }
    dend_86 { pt3dadd( 10.2593, -0.297393, -36.964, 1.77 ) }
    dend_86 { pt3dadd( 10.2052, -0.556301, -39.339, 1.84 ) }
    dend_86 { pt3dadd( 9.95819, -0.750351, -41.1348, 1.92 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 34/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 0.483558, 10.5939, 3.03697, 2.06 ) }
    dend_23 { pt3dadd( 0.483558, 10.5939, 3.03697, 2.06 ) }
    dend_23 { pt3dadd( 0.307529, 11.11, 3.37637, 2.06 ) }
    dend_23 { pt3dadd( -0.046529, 12.3507, 4.16196, 2.06 ) }
    dend_23 { pt3dadd( -0.189796, 13.0001, 4.52324, 2.06 ) }
    dend_23 { pt3dadd( -0.328307, 13.8252, 4.9493, 2.06 ) }
    dend_23 { pt3dadd( -0.41916, 14.459, 5.2681, 2.28 ) }
    dend_23 { pt3dadd( -0.534277, 15.5004, 5.7503, 2.5 ) }
    dend_23 { pt3dadd( -0.595188, 16.5362, 6.19627, 2.65 ) }
    dend_23 { pt3dadd( -0.613614, 17.7524, 6.64795, 2.73 ) }
    dend_23 { pt3dadd( -0.578145, 18.5706, 6.96022, 2.95 ) }
    dend_23 { pt3dadd( -0.504106, 19.2469, 7.22546, 3.02 ) }
    dend_23 { pt3dadd( -0.307175, 20.2203, 7.66565, 2.43 ) }
    dend_23 { pt3dadd( 0.00226659, 21.1619, 8.17423, 1.92 ) }
    dend_23 { pt3dadd( 0.187904, 21.5641, 8.46164, 1.77 ) }
    dend_23 { pt3dadd( 0.548061, 22.2326, 9.01799, 1.77 ) }
    dend_23 { pt3dadd( 0.865026, 22.801, 9.52684, 1.92 ) }
    dend_23 { pt3dadd( 1.46312, 23.9013, 10.5546, 1.69 ) }
    dend_23 { pt3dadd( 1.91786, 24.8158, 11.4286, 1.92 ) }
    dend_23 { pt3dadd( 2.42586, 26.0404, 12.6012, 1.62 ) }
    dend_23 { pt3dadd( 2.60657, 26.6164, 13.1256, 1.62 ) }
    dend_23 { pt3dadd( 2.73232, 27.2511, 13.6498, 1.62 ) }
    dend_23 { pt3dadd( 2.79976, 28.0612, 14.2647, 1.77 ) }
    dend_23 { pt3dadd( 2.80374, 28.7364, 14.7394, 2.06 ) }
    dend_23 { pt3dadd( 2.8001, 29.497, 15.2606, 2.06 ) }
    dend_23 { pt3dadd( 2.83053, 30.1211, 15.6852, 2.06 ) }
    dend_23 { pt3dadd( 2.87975, 30.6986, 16.1002, 2.21 ) }
    dend_23 { pt3dadd( 3.04841, 31.9301, 17.0035, 1.92 ) }
    dend_23 { pt3dadd( 3.24092, 32.9245, 17.7615, 1.77 ) }
    dend_23 { pt3dadd( 3.38281, 33.4913, 18.2127, 1.77 ) }
    dend_23 { pt3dadd( 3.57946, 34.1322, 18.7164, 1.99 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 65/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.95644, -10.3878, -0.843029, 1.84 ) }
    dend_0 { pt3dadd( -1.95644, -10.3878, -0.843029, 1.84 ) }
    dend_0 { pt3dadd( -2.08552, -11.302, -0.759391, 1.4 ) }
    dend_0 { pt3dadd( -2.18372, -12.9756, -0.618177, 1.03 ) }
    dend_0 { pt3dadd( -2.13105, -14.5326, -0.450087, 0.96 ) }
    dend_0 { pt3dadd( -2.05328, -15.2117, -0.367954, 1.18 ) }
    dend_0 { pt3dadd( -1.90801, -15.9843, -0.268961, 1.25 ) }
    dend_0 { pt3dadd( -1.65329, -16.756, -0.163282, 1.25 ) }
    dend_0 { pt3dadd( -1.24022, -17.5192, -0.0512664, 1.25 ) }
    dend_0 { pt3dadd( -0.540058, -18.3878, 0.0798294, 1.69 ) }
    dend_0 { pt3dadd( -0.113845, -18.8341, 0.135994, 1.92 ) }
    dend_0 { pt3dadd( 0.301284, -19.2685, 0.210568, 1.92 ) }
    dend_0 { pt3dadd( 0.984777, -20.056, 0.426545, 1.33 ) }
    dend_0 { pt3dadd( 1.41252, -20.652, 0.633225, 1.03 ) }
    dend_0 { pt3dadd( 1.85362, -21.434, 0.966434, 1.03 ) }
    dend_0 { pt3dadd( 2.18579, -22.187, 1.30412, 1.4 ) }
    dend_0 { pt3dadd( 2.66438, -23.5595, 1.92612, 1.4 ) }
    dend_0 { pt3dadd( 3.07806, -25.1332, 2.63282, 1.4 ) }
    dend_0 { pt3dadd( 3.26309, -26.1496, 3.07145, 1.25 ) }
    dend_0 { pt3dadd( 3.40277, -27.4484, 3.5902, 0.66 ) }
    dend_0 { pt3dadd( 3.43872, -28.5725, 3.97268, 0.74 ) }
    dend_0 { pt3dadd( 3.41291, -29.706, 4.24729, 1.03 ) }
    dend_0 { pt3dadd( 3.36209, -30.4379, 4.30514, 1.25 ) }
    dend_0 { pt3dadd( 3.29761, -31.0989, 4.2603, 1.25 ) }
    dend_0 { pt3dadd( 3.20066, -31.8051, 4.13064, 1.25 ) }
    dend_0 { pt3dadd( 3.02913, -32.794, 3.85033, 1.11 ) }
    dend_0 { pt3dadd( 2.78649, -33.9695, 3.47691, 1.11 ) }
    dend_0 { pt3dadd( 2.53279, -35.1474, 3.08406, 1.33 ) }
    dend_0 { pt3dadd( 2.33562, -36.1232, 2.75671, 1.33 ) }
    dend_0 { pt3dadd( 2.0944, -37.4961, 2.38616, 1.33 ) }
    dend_0 { pt3dadd( 1.93375, -38.6572, 2.13055, 0.88 ) }
    dend_0 { pt3dadd( 1.83679, -39.7747, 2.00055, 1.03 ) }
    dend_0 { pt3dadd( 1.79104, -41.3514, 2.05036, 0.66 ) }
    dend_0 { pt3dadd( 1.86551, -42.4437, 2.28777, 0.66 ) }
    dend_0 { pt3dadd( 2.25444, -44.1619, 3.08098, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 2.46492, -44.7772, 3.47986, 0.96 ) }
    dend_0 { pt3dadd( 3.05419, -46.3021, 4.62042, 1.18 ) }
    dend_0 { pt3dadd( 3.34693, -47.0609, 5.21001, 1.4 ) }
    dend_0 { pt3dadd( 3.48397, -47.4962, 5.53463, 1.4 ) }
    dend_0 { pt3dadd( 3.73613, -48.9052, 6.36061, 0.88 ) }
    dend_0 { pt3dadd( 3.74305, -50.1198, 6.81358, 0.88 ) }
    dend_0 { pt3dadd( 3.62924, -51.0802, 7.04858, 1.18 ) }
    dend_0 { pt3dadd( 3.42234, -52.1134, 7.17748, 1.03 ) }
    dend_0 { pt3dadd( 3.13714, -53.2878, 7.21775, 0.88 ) }
    dend_0 { pt3dadd( 2.81673, -54.458, 7.18117, 0.88 ) }
    dend_0 { pt3dadd( 2.61013, -55.1876, 7.08844, 1.18 ) }
    dend_0 { pt3dadd( 2.41977, -56.0709, 6.92658, 1.18 ) }
    dend_0 { pt3dadd( 2.35165, -56.8168, 6.76335, 1.18 ) }
    dend_0 { pt3dadd( 2.41763, -58.0144, 6.45936, 1.18 ) }
    dend_0 { pt3dadd( 2.53976, -58.7178, 6.25069, 1.18 ) }
    dend_0 { pt3dadd( 2.74334, -59.5224, 5.99944, 1.18 ) }
    dend_0 { pt3dadd( 3.12235, -60.8071, 5.61066, 0.74 ) }
    dend_0 { pt3dadd( 3.49365, -62.069, 5.25618, 0.74 ) }
    dend_0 { pt3dadd( 3.82395, -63.4163, 4.92629, 1.03 ) }
    dend_0 { pt3dadd( 4.00011, -64.5246, 4.71497, 0.96 ) }
    dend_0 { pt3dadd( 4.04258, -65.2867, 4.61121, 0.88 ) }
    dend_0 { pt3dadd( 3.99836, -66.2069, 4.51426, 0.88 ) }
    dend_0 { pt3dadd( 3.84341, -67.2228, 4.43528, 0.96 ) }
    dend_0 { pt3dadd( 3.57487, -68.3817, 4.39742, 0.96 ) }
    dend_0 { pt3dadd( 3.24184, -69.6642, 4.45168, 0.96 ) }
    dend_0 { pt3dadd( 2.96231, -70.9461, 4.6039, 1.03 ) }
    dend_0 { pt3dadd( 2.84139, -71.8793, 4.79203, 0.81 ) }
    dend_0 { pt3dadd( 2.82636, -72.4625, 4.95209, 0.81 ) }
    dend_0 { pt3dadd( 2.85634, -73.1777, 5.18212, 0.81 ) }
    dend_0 { pt3dadd( 2.91854, -74.2313, 5.54693, 0.74 ) }
    dend_0 { pt3dadd( 2.91976, -75.3536, 5.94395, 0.66 ) }
    dend_0 { pt3dadd( 2.78399, -76.805, 6.42034, 0.74 ) }
    dend_0 { pt3dadd( 2.61614, -77.6782, 6.673, 0.74 ) }
    dend_0 { pt3dadd( 2.2571, -78.9629, 6.93639, 0.74 ) }
    dend_0 { pt3dadd( 1.87082, -80.026, 7.0651, 0.66 ) }
    dend_0 { pt3dadd( 1.29504, -81.297, 7.0513, 0.66 ) }
    dend_0 { pt3dadd( 0.776183, -82.2484, 6.93188, 0.66 ) }
    dend_0 { pt3dadd( 0.0400832, -83.4197, 6.62746, 0.81 ) }
    dend_0 { pt3dadd( -0.53241, -84.2601, 6.29579, 1.18 ) }
    dend_0 { pt3dadd( -0.828416, -84.6937, 6.07208, 1.4 ) }
    dend_0 { pt3dadd( -1.53592, -85.8056, 5.41283, 1.25 ) }
    dend_0 { pt3dadd( -1.80366, -86.2793, 5.11375, 0.96 ) }
    dend_0 { pt3dadd( -2.10063, -86.929, 4.72581, 0.96 ) }
    dend_0 { pt3dadd( -2.3941, -88.0149, 4.20085, 0.66 ) }
    dend_0 { pt3dadd( -2.44697, -88.8307, 3.94355, 0.74 ) }
    dend_0 { pt3dadd( -2.39598, -89.648, 3.78813, 0.81 ) }
    dend_0 { pt3dadd( -2.25525, -90.6718, 3.66983, 0.81 ) }
    dend_0 { pt3dadd( -2.01437, -92.0109, 3.55743, 0.81 ) }
    dend_0 { pt3dadd( -1.64028, -93.8119, 3.46293, 0.66 ) }
    dend_0 { pt3dadd( -1.21801, -95.7368, 3.40248, 0.66 ) }
    dend_0 { pt3dadd( -0.861952, -97.5799, 3.35088, 0.74 ) }
    dend_0 { pt3dadd( -0.723906, -98.6597, 3.33147, 0.81 ) }
    dend_0 { pt3dadd( -0.677736, -99.9522, 3.32455, 0.88 ) }
    dend_0 { pt3dadd( -0.732313, -100.577, 3.34561, 0.96 ) }
    dend_0 { pt3dadd( -0.911962, -101.327, 3.4114, 0.96 ) }
    dend_0 { pt3dadd( -1.43316, -102.608, 3.57193, 0.74 ) }
    dend_0 { pt3dadd( -2.17371, -103.999, 3.78025, 0.74 ) }
    dend_0 { pt3dadd( -2.63101, -104.815, 3.91139, 1.03 ) }
    dend_0 { pt3dadd( -3.14852, -105.863, 4.07451, 1.33 ) }
    dend_0 { pt3dadd( -3.40316, -106.527, 4.17287, 1.33 ) }
    dend_0 { pt3dadd( -3.60556, -107.41, 4.30849, 1.33 ) }
    dend_0 { pt3dadd( -3.65385, -108.969, 4.56607, 0.81 ) }
    dend_0 { pt3dadd( -3.4936, -110.112, 4.76482, 0.81 ) }
    dend_0 { pt3dadd( -3.07581, -111.837, 5.06451, 0.81 ) }
    dend_0 { pt3dadd( -2.79161, -112.824, 5.21777, 0.81 ) }
    dend_0 { pt3dadd( -2.41755, -114.046, 5.40882, 0.81 ) }
    dend_0 { pt3dadd( -2.05295, -115.273, 5.60964, 0.59 ) }
    dend_0 { pt3dadd( -1.77163, -116.45, 5.79853, 0.52 ) }
    dend_0 { pt3dadd( -1.69922, -117.129, 5.88245, 0.52 ) }
    dend_0 { pt3dadd( -1.72557, -118.515, 5.94707, 0.52 ) }
    dend_0 { pt3dadd( -1.80886, -119.311, 5.93279, 0.81 ) }
    dend_0 { pt3dadd( -1.96972, -120.215, 5.86671, 0.81 ) }
    dend_0 { pt3dadd( -2.27848, -121.529, 5.72587, 0.74 ) }
    dend_0 { pt3dadd( -2.67352, -123.026, 5.53671, 0.81 ) }
    dend_0 { pt3dadd( -3.1132, -124.54, 5.34304, 0.81 ) }
    dend_0 { pt3dadd( -3.38717, -125.411, 5.22678, 0.96 ) }
    dend_0 { pt3dadd( -3.65414, -126.197, 5.15076, 0.96 ) }
    dend_0 { pt3dadd( -3.94661, -127.044, 5.15238, 1.03 ) }
    dend_0 { pt3dadd( -4.1606, -127.68, 5.25704, 1.03 ) }
    dend_0 { pt3dadd( -4.43462, -128.606, 5.55987, 0.81 ) }
    dend_0 { pt3dadd( -4.65157, -129.505, 5.93526, 0.74 ) }
    dend_0 { pt3dadd( -4.9119, -130.967, 6.55538, 0.66 ) }
    dend_0 { pt3dadd( -5.11504, -132.693, 7.2742, 0.66 ) }
    dend_0 { pt3dadd( -5.21461, -134.096, 7.81787, 0.52 ) }
    dend_0 { pt3dadd( -5.27729, -135.672, 8.34482, 0.52 ) }
    dend_0 { pt3dadd( -5.29758, -136.645, 8.59224, 0.74 ) }
    dend_0 { pt3dadd( -5.33534, -137.936, 8.8304, 0.96 ) }
    dend_0 { pt3dadd( -5.39011, -138.838, 8.93555, 1.03 ) }
    dend_0 { pt3dadd( -5.5039, -139.836, 9.01362, 1.03 ) }
    dend_0 { pt3dadd( -5.67009, -140.918, 9.10497, 0.74 ) }
    dend_0 { pt3dadd( -5.87965, -142.073, 9.28126, 0.52 ) }
    dend_0 { pt3dadd( -6.0739, -143.114, 9.51219, 0.52 ) }
    dend_0 { pt3dadd( -6.35948, -144.589, 9.89051, 0.88 ) }
    dend_0 { pt3dadd( -6.55425, -145.589, 10.1331, 0.74 ) }
    dend_0 { pt3dadd( -6.76145, -146.843, 10.4071, 0.44 ) }
    dend_0 { pt3dadd( -6.8702, -147.71, 10.56, 0.59 ) }
    dend_0 { pt3dadd( -6.94098, -148.775, 10.6821, 0.59 ) }
    dend_0 { pt3dadd( -6.92084, -150.384, 10.7157, 0.59 ) }
    dend_0 { pt3dadd( -6.78161, -151.672, 10.6431, 0.81 ) }
    dend_0 { pt3dadd( -6.51774, -152.908, 10.5336, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_0 { pt3dadd( -6.28186, -153.688, 10.454, 0.96 ) }
    dend_0 { pt3dadd( -5.9907, -154.461, 10.3665, 0.96 ) }
    dend_0 { pt3dadd( -5.52051, -155.559, 10.2535, 0.74 ) }
    dend_0 { pt3dadd( -5.05669, -156.711, 10.1627, 0.74 ) }
    dend_0 { pt3dadd( -4.68892, -157.876, 10.1285, 0.74 ) }
    dend_0 { pt3dadd( -4.45917, -158.863, 10.1639, 0.74 ) }
    dend_0 { pt3dadd( -4.2554, -160.06, 10.2641, 0.74 ) }
    dend_0 { pt3dadd( -4.09551, -161.414, 10.4268, 0.81 ) }
    dend_0 { pt3dadd( -3.95362, -163.52, 10.7116, 0.81 ) }
    dend_0 { pt3dadd( -3.91209, -165.251, 10.9857, 0.74 ) }
    dend_0 { pt3dadd( -3.92033, -166.665, 11.2547, 0.81 ) }
    dend_0 { pt3dadd( -3.93195, -167.27, 11.3971, 1.03 ) }
    dend_0 { pt3dadd( -3.9513, -167.988, 11.6206, 1.03 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 13/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.53968, 10.6995, 0.960996, 0.524308 ) }
    axon_0 { pt3dadd( 3.90527, 25.5118, 0.960996, 0.524308 ) }
    axon_0 { pt3dadd( 6.27086, 40.3241, 0.960996, 0.524308 ) }
    // Section: dend_108, id: dend_108, parent: dend_86 (entry count 16/100)
    dend_108 { pt3dclear() }
    dend_108 { pt3dadd( 9.95819, -0.750351, -41.1348, 0.88 ) }
    dend_108 { pt3dadd( 10.0492, -0.972016, -42.3683, 0.88 ) }
    dend_108 { pt3dadd( 10.3077, -2.25412, -48.3363, 0.88 ) }
    dend_108 { pt3dadd( 10.3065, -2.46263, -49.1515, 0.88 ) }
    dend_108 { pt3dadd( 10.2112, -3.0941, -51.2513, 1.25 ) }
    dend_108 { pt3dadd( 10.0407, -3.73963, -53.2492, 1.03 ) }
    dend_108 { pt3dadd( 9.81563, -4.39462, -55.1986, 0.81 ) }
    dend_108 { pt3dadd( 9.6346, -4.76532, -56.3641, 0.81 ) }
    dend_108 { pt3dadd( 9.32171, -5.21427, -57.7408, 1.03 ) }
    dend_108 { pt3dadd( 9.03845, -5.50867, -59.0645, 1.4 ) }
    dend_108 { pt3dadd( 8.69559, -5.81183, -60.9038, 1.4 ) }
    dend_108 { pt3dadd( 8.505, -5.98898, -62.4765, 1.11 ) }
    dend_108 { pt3dadd( 8.45523, -6.07932, -63.7155, 0.88 ) }
    dend_108 { pt3dadd( 8.47352, -6.2, -65.2629, 1.11 ) }
    dend_108 { pt3dadd( 8.55854, -6.43923, -67.9034, 1.11 ) }
    dend_108 { pt3dadd( 8.60243, -6.66293, -70.0234, 0.88 ) }
    dend_108 { pt3dadd( 8.57596, -6.85878, -71.5736, 0.74 ) }
    dend_108 { pt3dadd( 8.51377, -6.98065, -72.4632, 0.88 ) }
    dend_108 { pt3dadd( 8.27822, -7.21745, -74.048, 0.59 ) }
    dend_108 { pt3dadd( 7.90168, -7.40325, -75.5685, 0.52 ) }
    dend_108 { pt3dadd( 7.57575, -7.42492, -76.421, 0.74 ) }
    dend_108 { pt3dadd( 6.94182, -7.28403, -77.8012, 0.88 ) }
    dend_108 { pt3dadd( 6.60621, -7.17603, -78.5115, 1.11 ) }
    dend_108 { pt3dadd( 6.16124, -7.02927, -79.4485, 1.25 ) }
    dend_108 { pt3dadd( 5.58115, -6.88643, -80.7551, 1.62 ) }
    dend_108 { pt3dadd( 5.0915, -6.89736, -82.1495, 1.4 ) }
    dend_108 { pt3dadd( 4.92056, -6.98498, -82.9802, 1.18 ) }
    dend_108 { pt3dadd( 4.82376, -7.17088, -84.145, 0.66 ) }
    dend_108 { pt3dadd( 4.80786, -7.25138, -84.7609, 0.66 ) }
    dend_108 { pt3dadd( 4.78348, -7.30883, -85.9262, 0.66 ) }
    dend_108 { pt3dadd( 4.71998, -7.24438, -87.1872, 0.81 ) }
    dend_108 { pt3dadd( 4.58143, -7.02501, -89.0618, 0.66 ) }
    dend_108 { pt3dadd( 4.45747, -6.85405, -90.2868, 0.81 ) }
    dend_108 { pt3dadd( 4.31911, -6.68744, -91.5916, 0.66 ) }
    dend_108 { pt3dadd( 4.16406, -6.55519, -93.5875, 0.66 ) }
    dend_108 { pt3dadd( 4.0569, -6.53863, -94.6273, 0.52 ) }
    dend_108 { pt3dadd( 3.93643, -6.56398, -95.5108, 0.88 ) }
    dend_108 { pt3dadd( 3.72182, -6.65548, -96.8916, 1.03 ) }
    dend_108 { pt3dadd( 3.49074, -6.80071, -98.4455, 1.4 ) }
    dend_108 { pt3dadd( 3.03553, -7.16561, -101.89, 0.88 ) }
    dend_108 { pt3dadd( 2.79813, -7.31143, -103.61, 0.52 ) }
    dend_108 { pt3dadd( 2.64489, -7.32423, -104.477, 1.18 ) }
    dend_108 { pt3dadd( 2.51439, -7.27607, -105.038, 1.47 ) }
    dend_108 { pt3dadd( 2.36647, -7.1746, -105.519, 1.47 ) }
    dend_108 { pt3dadd( 1.92803, -6.78431, -106.643, 1.03 ) }
    dend_108 { pt3dadd( 1.57149, -6.33016, -107.534, 1.25 ) }
    dend_108 { pt3dadd( 1.04741, -5.40724, -109.432, 0.96 ) }
    dend_108 { pt3dadd( 0.870558, -5.05994, -110.258, 0.81 ) }
    dend_108 { pt3dadd( 0.721889, -4.75642, -111.131, 1.03 ) }
    dend_108 { pt3dadd( 0.626071, -4.54262, -111.78, 1.03 ) }
    dend_108 { pt3dadd( 0.425284, -3.90338, -113.609, 1.18 ) }
    dend_108 { pt3dadd( 0.332082, -3.30164, -115.254, 0.96 ) }
    dend_108 { pt3dadd( 0.309638, -2.90005, -116.303, 1.33 ) }
    dend_108 { pt3dadd( 0.303395, -1.98725, -118.505, 1.47 ) }
    dend_108 { pt3dadd( 0.283189, -1.19506, -120.171, 1.33 ) }
    dend_108 { pt3dadd( 0.245756, -0.567243, -121.246, 0.52 ) }
    dend_108 { pt3dadd( 0.147559, 0.475599, -122.602, 1.33 ) }
    dend_108 { pt3dadd( 0.0908289, 0.970385, -123.071, 1.33 ) }
    dend_108 { pt3dadd( -0.079179, 2.28419, -124.039, 0.88 ) }
    dend_108 { pt3dadd( -0.290056, 3.38231, -124.614, 0.66 ) }
    dend_108 { pt3dadd( -0.455609, 4.07203, -124.897, 0.96 ) }
    dend_108 { pt3dadd( -0.63891, 4.78358, -125.155, 1.18 ) }
    dend_108 { pt3dadd( -0.815036, 5.55851, -125.376, 1.33 ) }
    dend_108 { pt3dadd( -0.976184, 6.68438, -125.701, 0.88 ) }
    dend_108 { pt3dadd( -0.979007, 7.72301, -126.031, 0.52 ) }
    dend_108 { pt3dadd( -0.778274, 8.99269, -126.523, 0.52 ) }
    dend_108 { pt3dadd( -0.442516, 9.98565, -126.981, 0.52 ) }
    dend_108 { pt3dadd( -0.057096, 10.6021, -127.342, 1.18 ) }
    dend_108 { pt3dadd( 0.599317, 11.2338, -127.822, 0.96 ) }
    dend_108 { pt3dadd( 1.18837, 11.5772, -128.207, 0.52 ) }
    dend_108 { pt3dadd( 1.70786, 11.7542, -128.583, 0.29 ) }
    dend_108 { pt3dadd( 2.53276, 11.8531, -129.333, 0.29 ) }
    dend_108 { pt3dadd( 3.53896, 11.7922, -130.416, 0.37 ) }
    dend_108 { pt3dadd( 4.02305, 11.7098, -131.05, 0.52 ) }
    dend_108 { pt3dadd( 4.8173, 11.5441, -132.191, 1.25 ) }
    dend_108 { pt3dadd( 5.72173, 11.3267, -133.591, 1.55 ) }
    dend_108 { pt3dadd( 6.95505, 11.0097, -135.614, 1.18 ) }
    dend_108 { pt3dadd( 7.44705, 10.8886, -136.458, 0.88 ) }
    dend_108 { pt3dadd( 8.68297, 10.6192, -138.572, 1.11 ) }
    dend_108 { pt3dadd( 9.03778, 10.5697, -139.127, 1.11 ) }
    dend_108 { pt3dadd( 9.43536, 10.5657, -139.662, 0.59 ) }
    dend_108 { pt3dadd( 10.1207, 10.6889, -140.419, 0.37 ) }
    dend_108 { pt3dadd( 10.9317, 11.0005, -141.235, 0.74 ) }
    dend_108 { pt3dadd( 11.2326, 11.1781, -141.574, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_108 { pt3dadd( 11.6349, 11.5634, -142.167, 0.37 ) }
    dend_108 { pt3dadd( 11.8407, 11.9942, -142.807, 0.37 ) }
    dend_108 { pt3dadd( 11.7548, 12.4036, -143.491, 0.66 ) }
    dend_108 { pt3dadd( 11.3003, 12.849, -144.58, 0.52 ) }
    dend_108 { pt3dadd( 10.839, 13.0871, -145.395, 0.52 ) }
    dend_108 { pt3dadd( 10.406, 13.2284, -146.086, 0.52 ) }
    dend_108 { pt3dadd( 10.2364, 13.2621, -146.345, 0.88 ) }
    dend_108 { pt3dadd( 9.17876, 13.3907, -148.183, 1.11 ) }
    dend_108 { pt3dadd( 8.25473, 13.4552, -150.025, 0.44 ) }
    dend_108 { pt3dadd( 8.06722, 13.4706, -150.435, 0.59 ) }
    dend_108 { pt3dadd( 7.50815, 13.5561, -151.755, 1.25 ) }
    dend_108 { pt3dadd( 7.15473, 13.6347, -152.651, 1.4 ) }
    dend_108 { pt3dadd( 5.84519, 13.9862, -156.089, 1.18 ) }
    dend_108 { pt3dadd( 5.06404, 14.198, -158.237, 0.52 ) }
    dend_108 { pt3dadd( 4.86995, 14.2388, -158.814, 0.52 ) }
    dend_108 { pt3dadd( 4.54365, 14.2825, -159.8, 0.44 ) }
    dend_108 { pt3dadd( 3.97942, 14.3209, -161.458, 0.66 ) }
    dend_108 { pt3dadd( 3.49385, 14.3384, -162.793, 0.88 ) }
    dend_108 { pt3dadd( 3.00158, 14.3486, -164.013, 0.66 ) }
    dend_108 { pt3dadd( 2.52276, 14.4023, -165.256, 0.44 ) }
    dend_108 { pt3dadd( 2.17568, 14.4955, -166.168, 0.37 ) }
    dend_108 { pt3dadd( 1.9676, 14.6247, -166.69, 0.52 ) }
    dend_108 { pt3dadd( 1.77684, 14.8963, -167.095, 0.66 ) }
    dend_108 { pt3dadd( 1.50102, 15.5211, -167.685, 0.66 ) }
    dend_108 { pt3dadd( 1.06997, 16.6577, -168.568, 0.66 ) }
    dend_108 { pt3dadd( 0.847311, 17.3564, -169.04, 0.29 ) }
    dend_108 { pt3dadd( 0.628743, 18.1511, -169.568, 0.29 ) }
    dend_108 { pt3dadd( 0.373209, 19.1291, -170.232, 0.88 ) }
    dend_108 { pt3dadd( 0.038245, 20.4047, -171.068, 0.37 ) }
    // Section: dend_87, id: dend_87, parent: dend_86 (entry count 29/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( 9.95819, -0.750351, -41.1348, 1.84 ) }
    dend_87 { pt3dadd( 10.5185, 0.982416, -42.2628, 1.84 ) }
    dend_87 { pt3dadd( 10.934, 2.25009, -43.0651, 1.25 ) }
    dend_87 { pt3dadd( 11.1308, 2.96023, -43.5115, 1.25 ) }
    dend_87 { pt3dadd( 11.3464, 4.03728, -44.1687, 1.18 ) }
    dend_87 { pt3dadd( 11.4392, 4.97757, -44.7537, 1.18 ) }
    dend_87 { pt3dadd( 11.4512, 5.96603, -45.4014, 1.33 ) }
    dend_87 { pt3dadd( 11.3898, 6.76682, -45.9246, 1.69 ) }
    dend_87 { pt3dadd( 11.2259, 7.48153, -46.5132, 1.69 ) }
    dend_87 { pt3dadd( 10.9912, 8.08508, -47.0822, 1.55 ) }
    dend_87 { pt3dadd( 10.5034, 8.93358, -48.0523, 1.33 ) }
    dend_87 { pt3dadd( 10.0041, 9.57704, -49.2123, 1.25 ) }
    dend_87 { pt3dadd( 9.65526, 9.9296, -50.1033, 1.47 ) }
    dend_87 { pt3dadd( 9.06887, 10.4676, -51.6958, 1.92 ) }
    dend_87 { pt3dadd( 8.65916, 10.843, -52.8559, 2.28 ) }
    dend_87 { pt3dadd( 8.09838, 11.3819, -54.5122, 2.73 ) }
    dend_87 { pt3dadd( 6.76676, 12.7711, -58.5361, 1.33 ) }
    dend_87 { pt3dadd( 6.42626, 13.1745, -59.608, 1.18 ) }
    dend_87 { pt3dadd( 6.19544, 13.5666, -60.5355, 1.18 ) }
    dend_87 { pt3dadd( 6.04064, 14.0116, -61.4429, 1.4 ) }
    dend_87 { pt3dadd( 5.97866, 14.4728, -62.3045, 1.62 ) }
    dend_87 { pt3dadd( 6.03841, 15.3434, -63.7942, 1.69 ) }
    dend_87 { pt3dadd( 6.28891, 16.298, -65.3719, 1.69 ) }
    dend_87 { pt3dadd( 7.01692, 18.0231, -68.4949, 1.33 ) }
    dend_87 { pt3dadd( 7.44517, 18.8306, -70.115, 1.55 ) }
    dend_87 { pt3dadd( 7.85303, 19.4425, -71.4737, 1.92 ) }
    dend_87 { pt3dadd( 8.18503, 19.8383, -72.4379, 2.21 ) }
    dend_87 { pt3dadd( 8.5281, 20.1449, -73.2714, 2.43 ) }
    dend_87 { pt3dadd( 8.55358, 20.162, -73.3212, 2.43 ) }
    // Section: dend_39, id: dend_39, parent: dend_23 (entry count 58/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 3.57946, 34.1322, 18.7164, 0.88 ) }
    dend_39 { pt3dadd( 5.08697, 33.6697, 18.279, 0.88 ) }
    dend_39 { pt3dadd( 5.80352, 33.4353, 18.1277, 0.88 ) }
    dend_39 { pt3dadd( 7.09948, 33.0175, 17.988, 0.88 ) }
    dend_39 { pt3dadd( 8.10262, 32.7315, 17.9497, 0.88 ) }
    dend_39 { pt3dadd( 10.6493, 32.1027, 18.0165, 0.74 ) }
    dend_39 { pt3dadd( 11.8999, 31.8458, 18.1046, 0.96 ) }
    dend_39 { pt3dadd( 12.8669, 31.6685, 18.2495, 1.11 ) }
    dend_39 { pt3dadd( 13.9651, 31.6039, 18.5624, 1.25 ) }
    dend_39 { pt3dadd( 14.7919, 31.6618, 18.9192, 1.77 ) }
    dend_39 { pt3dadd( 15.3706, 31.8032, 19.2801, 1.92 ) }
    dend_39 { pt3dadd( 15.724, 31.9587, 19.5872, 2.06 ) }
    dend_39 { pt3dadd( 16.2536, 32.2887, 20.0237, 1.55 ) }
    dend_39 { pt3dadd( 17.0138, 32.8776, 20.5562, 1.25 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 72/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 3.57946, 34.1322, 18.7164, 0.96 ) }
    dend_24 { pt3dadd( 4.43318, 35.0029, 18.1023, 0.96 ) }
    dend_24 { pt3dadd( 5.08477, 35.597, 17.7267, 0.88 ) }
    dend_24 { pt3dadd( 5.59654, 36.0222, 17.4807, 0.88 ) }
    dend_24 { pt3dadd( 6.28254, 36.5443, 17.2029, 1.18 ) }
    dend_24 { pt3dadd( 6.69485, 36.836, 17.062, 1.18 ) }
    dend_24 { pt3dadd( 7.28346, 37.2625, 16.8688, 1.18 ) }
    dend_24 { pt3dadd( 7.68305, 37.5377, 16.7806, 1.4 ) }
    dend_24 { pt3dadd( 7.97501, 37.7699, 16.7328, 1.4 ) }
    dend_24 { pt3dadd( 8.25058, 38.0901, 16.6779, 0.81 ) }
    dend_24 { pt3dadd( 8.43582, 38.5198, 16.6151, 0.81 ) }
    dend_24 { pt3dadd( 8.49587, 39.36, 16.4461, 0.66 ) }
    dend_24 { pt3dadd( 8.34194, 40.126, 16.2745, 0.66 ) }
    dend_24 { pt3dadd( 8.1487, 40.7056, 16.1417, 0.74 ) }
    dend_24 { pt3dadd( 7.92795, 41.2839, 15.9963, 0.74 ) }
    dend_24 { pt3dadd( 7.68475, 41.9207, 15.8141, 0.59 ) }
    dend_24 { pt3dadd( 7.45078, 42.5779, 15.5885, 0.59 ) }
    dend_24 { pt3dadd( 7.23767, 43.3268, 15.309, 0.81 ) }
    dend_24 { pt3dadd( 7.14318, 43.8942, 15.0831, 1.03 ) }
    dend_24 { pt3dadd( 7.10354, 44.6368, 14.8175, 1.03 ) }
    dend_24 { pt3dadd( 7.13033, 45.5327, 14.5621, 0.74 ) }
    dend_24 { pt3dadd( 7.19944, 46.3214, 14.3839, 0.52 ) }
    dend_24 { pt3dadd( 7.26386, 46.9832, 14.291, 0.52 ) }
    dend_24 { pt3dadd( 7.29282, 47.5428, 14.2641, 0.52 ) }
    dend_24 { pt3dadd( 7.27741, 48.3998, 14.3085, 0.88 ) }
    dend_24 { pt3dadd( 7.23068, 49.0971, 14.3886, 1.18 ) }
    dend_24 { pt3dadd( 7.20671, 49.4631, 14.4409, 1.18 ) }
    dend_24 { pt3dadd( 7.21107, 50.1487, 14.5267, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_24 { pt3dadd( 7.35056, 51.0461, 14.5641, 0.52 ) }
    dend_24 { pt3dadd( 7.55753, 51.5463, 14.5378, 0.52 ) }
    dend_24 { pt3dadd( 7.95215, 52.149, 14.4594, 0.66 ) }
    dend_24 { pt3dadd( 8.42623, 52.733, 14.3604, 0.66 ) }
    dend_24 { pt3dadd( 9.02462, 53.4137, 14.2413, 0.66 ) }
    dend_24 { pt3dadd( 9.54184, 53.9874, 14.1396, 0.66 ) }
    dend_24 { pt3dadd( 10.1856, 54.7465, 14.0228, 1.11 ) }
    dend_24 { pt3dadd( 10.3671, 55.0169, 13.9914, 1.11 ) }
    dend_24 { pt3dadd( 10.5363, 55.4261, 13.9649, 1.11 ) }
    dend_24 { pt3dadd( 10.6402, 56.1814, 13.9268, 0.74 ) }
    dend_24 { pt3dadd( 10.5825, 56.7513, 13.8975, 0.74 ) }
    dend_24 { pt3dadd( 10.4199, 57.3685, 13.8516, 0.88 ) }
    dend_24 { pt3dadd( 10.2232, 57.908, 13.7898, 1.11 ) }
    dend_24 { pt3dadd( 10.0017, 58.4869, 13.6945, 1.11 ) }
    dend_24 { pt3dadd( 9.85141, 58.9057, 13.6112, 0.74 ) }
    dend_24 { pt3dadd( 9.68453, 59.4639, 13.4805, 0.74 ) }
    dend_24 { pt3dadd( 9.57372, 60.0498, 13.3255, 0.59 ) }
    dend_24 { pt3dadd( 9.54701, 60.781, 13.1099, 0.44 ) }
    dend_24 { pt3dadd( 9.65639, 61.4553, 12.8952, 0.44 ) }
    dend_24 { pt3dadd( 9.87913, 62.0469, 12.7027, 0.66 ) }
    dend_24 { pt3dadd( 10.1111, 62.4753, 12.5981, 0.81 ) }
    dend_24 { pt3dadd( 10.3624, 62.8504, 12.5407, 0.81 ) }
    dend_24 { pt3dadd( 10.7123, 63.3237, 12.5141, 0.81 ) }
    dend_24 { pt3dadd( 11.1221, 63.8714, 12.5377, 0.52 ) }
    dend_24 { pt3dadd( 11.4559, 64.3719, 12.5925, 0.52 ) }
    dend_24 { pt3dadd( 11.9553, 65.3146, 12.714, 1.11 ) }
    dend_24 { pt3dadd( 12.1276, 65.7547, 12.7867, 1.11 ) }
    dend_24 { pt3dadd( 12.2459, 66.1393, 12.8604, 1.11 ) }
    dend_24 { pt3dadd( 12.3589, 66.5605, 12.9464, 1.11 ) }
    dend_24 { pt3dadd( 12.5239, 67.189, 13.0294, 0.81 ) }
    dend_24 { pt3dadd( 12.7119, 67.9317, 13.0764, 0.81 ) }
    dend_24 { pt3dadd( 12.9554, 69.0356, 13.0718, 0.66 ) }
    dend_24 { pt3dadd( 13.0979, 69.8253, 13.0239, 0.74 ) }
    dend_24 { pt3dadd( 13.2187, 70.73, 12.9303, 0.66 ) }
    dend_24 { pt3dadd( 13.3377, 72.2248, 12.6917, 0.81 ) }
    dend_24 { pt3dadd( 13.335, 73.1248, 12.5008, 0.81 ) }
    dend_24 { pt3dadd( 13.2054, 74.0987, 12.2081, 0.81 ) }
    dend_24 { pt3dadd( 12.9678, 74.9082, 11.8599, 0.81 ) }
    dend_24 { pt3dadd( 12.7574, 75.3877, 11.6007, 1.03 ) }
    dend_24 { pt3dadd( 12.531, 75.7961, 11.3084, 1.03 ) }
    dend_24 { pt3dadd( 12.2621, 76.2464, 10.9423, 0.66 ) }
    dend_24 { pt3dadd( 11.9311, 76.8643, 10.383, 0.96 ) }
    dend_24 { pt3dadd( 11.7001, 77.4234, 9.88288, 0.96 ) }
    dend_24 { pt3dadd( 11.5649, 77.8936, 9.51042, 1.03 ) }
    dend_24 { pt3dadd( 11.3204, 79.1241, 8.59717, 0.59 ) }
    dend_24 { pt3dadd( 11.2194, 79.7228, 8.1463, 0.66 ) }
    dend_24 { pt3dadd( 11.1543, 80.0762, 7.85711, 0.66 ) }
    dend_24 { pt3dadd( 11.0237, 80.6375, 7.36958, 0.66 ) }
    dend_24 { pt3dadd( 10.8639, 81.134, 6.90127, 0.66 ) }
    dend_24 { pt3dadd( 10.5283, 81.908, 6.06933, 0.66 ) }
    dend_24 { pt3dadd( 10.0517, 82.7534, 5.09142, 0.66 ) }
    dend_24 { pt3dadd( 9.61976, 83.3811, 4.31786, 0.81 ) }
    dend_24 { pt3dadd( 9.22482, 83.8728, 3.69611, 0.81 ) }
    dend_24 { pt3dadd( 8.78426, 84.346, 3.09843, 0.81 ) }
    dend_24 { pt3dadd( 8.05922, 85.0703, 2.26736, 0.59 ) }
    dend_24 { pt3dadd( 7.54896, 85.5963, 1.79756, 0.44 ) }
    dend_24 { pt3dadd( 7.02341, 86.1707, 1.43559, 0.44 ) }
    dend_24 { pt3dadd( 6.67752, 86.5563, 1.26013, 0.66 ) }
    dend_24 { pt3dadd( 6.22148, 87.0676, 1.09319, 0.66 ) }
    dend_24 { pt3dadd( 5.70722, 87.6543, 0.96131, 0.66 ) }
    dend_24 { pt3dadd( 5.14354, 88.3081, 0.859117, 0.88 ) }
    dend_24 { pt3dadd( 4.54956, 89.0214, 0.7297, 0.81 ) }
    dend_24 { pt3dadd( 4.09629, 89.5868, 0.615885, 0.81 ) }
    dend_24 { pt3dadd( 3.70668, 90.1041, 0.508394, 0.66 ) }
    dend_24 { pt3dadd( 3.46847, 90.4377, 0.438314, 0.81 ) }
    dend_24 { pt3dadd( 3.11951, 90.9781, 0.330451, 0.81 ) }
    dend_24 { pt3dadd( 2.88075, 91.4407, 0.251501, 0.74 ) }
    dend_24 { pt3dadd( 2.6586, 92.0972, 0.158354, 0.59 ) }
    dend_24 { pt3dadd( 2.48337, 92.8532, 0.0728413, 0.59 ) }
    dend_24 { pt3dadd( 2.39424, 93.2781, 0.0213633, 0.59 ) }
    dend_24 { pt3dadd( 2.20366, 94.091, -0.14133, 0.59 ) }
    dend_24 { pt3dadd( 1.94799, 95.0097, -0.415552, 0.59 ) }
    dend_24 { pt3dadd( 1.73434, 95.6345, -0.657311, 0.59 ) }
    dend_24 { pt3dadd( 1.46108, 96.2548, -0.970412, 0.66 ) }
    dend_24 { pt3dadd( 1.03118, 96.9876, -1.39929, 0.66 ) }
    dend_24 { pt3dadd( 0.304432, 98.0494, -2.10885, 0.96 ) }
    dend_24 { pt3dadd( -0.162709, 98.6068, -2.54844, 1.11 ) }
    dend_24 { pt3dadd( -0.429549, 98.8737, -2.7978, 0.81 ) }
    dend_24 { pt3dadd( -0.814643, 99.2189, -3.15957, 0.59 ) }
    dend_24 { pt3dadd( -1.60919, 99.923, -3.92843, 0.59 ) }
    // Section: dend_18, id: dend_18, parent: dend_0 (entry count 80/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -3.9513, -167.988, 11.6206, 0.29 ) }
    dend_18 { pt3dadd( -3.03723, -167.022, 11.3079, 0.29 ) }
    dend_18 { pt3dadd( -2.52744, -166.367, 11.1183, 0.29 ) }
    dend_18 { pt3dadd( -1.75795, -165.174, 10.8301, 0.29 ) }
    dend_18 { pt3dadd( -1.05187, -163.857, 10.5844, 0.29 ) }
    dend_18 { pt3dadd( -0.573846, -162.811, 10.4189, 0.44 ) }
    dend_18 { pt3dadd( -0.117009, -161.62, 10.2637, 0.44 ) }
    dend_18 { pt3dadd( 0.218396, -160.309, 10.1502, 0.37 ) }
    dend_18 { pt3dadd( 0.504076, -158.839, 10.0475, 0.37 ) }
    dend_18 { pt3dadd( 0.735204, -156.858, 9.95075, 0.59 ) }
    dend_18 { pt3dadd( 0.796274, -155.802, 9.9246, 0.59 ) }
    dend_18 { pt3dadd( 0.815486, -154.686, 9.91066, 0.37 ) }
    dend_18 { pt3dadd( 0.779731, -153.731, 9.91978, 0.37 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 93/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -3.9513, -167.988, 11.6206, 0.52 ) }
    dend_1 { pt3dadd( -3.15081, -169.188, 11.8584, 0.52 ) }
    dend_1 { pt3dadd( -2.3797, -170.473, 12.0441, 0.52 ) }
    dend_1 { pt3dadd( -1.97235, -171.219, 12.1218, 0.52 ) }
    dend_1 { pt3dadd( -1.49707, -172.196, 12.2149, 0.52 ) }
    dend_1 { pt3dadd( -0.952184, -173.41, 12.2384, 0.74 ) }
    dend_1 { pt3dadd( -0.584494, -174.312, 12.2001, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_1 { pt3dadd( -0.36711, -174.99, 12.1264, 1.18 ) }
    dend_1 { pt3dadd( -0.218039, -175.69, 12.0223, 1.33 ) }
    dend_1 { pt3dadd( -0.117341, -176.651, 11.8908, 1.47 ) }
    dend_1 { pt3dadd( -0.137924, -178.488, 11.6892, 0.74 ) }
    dend_1 { pt3dadd( -0.351726, -179.933, 11.6158, 0.74 ) }
    dend_1 { pt3dadd( -0.607205, -180.821, 11.6608, 0.59 ) }
    dend_1 { pt3dadd( -0.919386, -181.698, 11.7996, 0.59 ) }
    dend_1 { pt3dadd( -1.34538, -182.82, 12.0752, 0.59 ) }
    dend_1 { pt3dadd( -1.62697, -183.625, 12.3266, 0.59 ) }
    dend_1 { pt3dadd( -1.86874, -184.444, 12.635, 0.59 ) }
    dend_1 { pt3dadd( -2.10162, -185.639, 13.0533, 0.52 ) }
    dend_1 { pt3dadd( -2.19589, -187.01, 13.4315, 0.59 ) }
    dend_1 { pt3dadd( -2.16145, -187.906, 13.6223, 0.59 ) }
    dend_1 { pt3dadd( -2.0126, -189.201, 13.8202, 0.88 ) }
    dend_1 { pt3dadd( -1.85208, -190.185, 13.9259, 1.25 ) }
    dend_1 { pt3dadd( -1.70998, -190.865, 13.9756, 1.25 ) }
    dend_1 { pt3dadd( -1.5277, -191.671, 14.0321, 1.25 ) }
    dend_1 { pt3dadd( -1.34144, -192.486, 14.1224, 0.96 ) }
    dend_1 { pt3dadd( -1.11708, -193.375, 14.2635, 0.96 ) }
    dend_1 { pt3dadd( -0.797747, -194.538, 14.5101, 0.74 ) }
    dend_1 { pt3dadd( -0.413411, -195.919, 14.8525, 0.74 ) }
    dend_1 { pt3dadd( -0.103311, -197.07, 15.1596, 0.66 ) }
    dend_1 { pt3dadd( 0.236243, -198.398, 15.5294, 0.66 ) }
    dend_1 { pt3dadd( 0.468568, -199.392, 15.8122, 0.66 ) }
    dend_1 { pt3dadd( 0.738623, -200.785, 16.2135, 0.59 ) }
    dend_1 { pt3dadd( 0.834321, -201.559, 16.4306, 0.81 ) }
    dend_1 { pt3dadd( 0.853916, -202.5, 16.6651, 0.81 ) }
    dend_1 { pt3dadd( 0.77374, -203.565, 16.9028, 0.81 ) }
    dend_1 { pt3dadd( 0.58741, -204.531, 17.1015, 0.66 ) }
    dend_1 { pt3dadd( 0.320484, -205.348, 17.2813, 0.66 ) }
    dend_1 { pt3dadd( -0.0891353, -206.234, 17.522, 0.66 ) }
    dend_1 { pt3dadd( -0.56447, -207.109, 17.8011, 0.74 ) }
    dend_1 { pt3dadd( -1.00778, -207.897, 18.0789, 0.88 ) }
    dend_1 { pt3dadd( -1.37551, -208.632, 18.3448, 0.88 ) }
    dend_1 { pt3dadd( -1.65043, -209.381, 18.6101, 0.74 ) }
    dend_1 { pt3dadd( -1.89622, -210.81, 19.116, 0.74 ) }
    dend_1 { pt3dadd( -1.90366, -211.526, 19.3795, 0.74 ) }
    dend_1 { pt3dadd( -1.76621, -212.786, 19.8309, 0.59 ) }
    dend_1 { pt3dadd( -1.4939, -214.193, 20.304, 0.59 ) }
    dend_1 { pt3dadd( -1.2388, -215.16, 20.6168, 0.59 ) }
    dend_1 { pt3dadd( -0.879249, -216.414, 20.9887, 0.59 ) }
    dend_1 { pt3dadd( -0.712491, -217.058, 21.1532, 0.96 ) }
    dend_1 { pt3dadd( -0.631749, -217.721, 21.3476, 0.96 ) }
    dend_1 { pt3dadd( -0.689288, -218.319, 21.5839, 0.96 ) }
    dend_1 { pt3dadd( -0.900697, -219.221, 21.9673, 0.52 ) }
    dend_1 { pt3dadd( -1.20616, -220.064, 22.3436, 0.52 ) }
    dend_1 { pt3dadd( -1.57341, -220.81, 22.6869, 0.52 ) }
    dend_1 { pt3dadd( -2.43938, -222.31, 23.4377, 0.74 ) }
    dend_1 { pt3dadd( -3.29028, -223.498, 24.1807, 1.03 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 49/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 6.27086, 40.3241, 0.960996, 0.181933 ) }
    axon_1 { pt3dadd( 8.63644, 55.1364, 0.960996, 0.181933 ) }
    axon_1 { pt3dadd( 11.002, 69.9487, 0.960996, 0.181933 ) }
    // Section: dend_105, id: dend_105, parent: dend_87 (entry count 52/100)
    dend_105 { pt3dclear() }
    dend_105 { pt3dadd( 8.55358, 20.162, -73.3212, 1.47 ) }
    dend_105 { pt3dadd( 7.78332, 20.1749, -74.7567, 1.47 ) }
    dend_105 { pt3dadd( 6.27545, 20.471, -77.259, 1.03 ) }
    dend_105 { pt3dadd( 5.81668, 20.6408, -78.0691, 1.03 ) }
    dend_105 { pt3dadd( 5.50316, 20.8521, -78.8742, 1.03 ) }
    dend_105 { pt3dadd( 5.24213, 21.1208, -79.7934, 0.81 ) }
    dend_105 { pt3dadd( 5.1198, 21.3141, -80.4388, 0.66 ) }
    dend_105 { pt3dadd( 5.0651, 21.7162, -81.5327, 1.03 ) }
    dend_105 { pt3dadd( 5.19313, 22.1618, -82.6492, 1.03 ) }
    dend_105 { pt3dadd( 5.93671, 23.2369, -85.6083, 0.96 ) }
    dend_105 { pt3dadd( 6.26917, 23.5001, -86.4847, 0.96 ) }
    dend_105 { pt3dadd( 6.82345, 23.7299, -87.6173, 0.74 ) }
    dend_105 { pt3dadd( 7.24591, 23.8078, -88.4492, 0.59 ) }
    dend_105 { pt3dadd( 7.52417, 23.8351, -88.9852, 0.81 ) }
    dend_105 { pt3dadd( 7.85271, 23.8597, -89.6339, 1.03 ) }
    dend_105 { pt3dadd( 8.32807, 23.926, -90.6991, 1.18 ) }
    dend_105 { pt3dadd( 8.79237, 24.1059, -92.3632, 1.47 ) }
    dend_105 { pt3dadd( 9.1955, 24.5013, -95.21, 1.18 ) }
    dend_105 { pt3dadd( 9.23591, 24.67, -96.3174, 1.11 ) }
    dend_105 { pt3dadd( 9.20724, 24.7623, -97.0238, 1.11 ) }
    dend_105 { pt3dadd( 8.95807, 24.9997, -99.2066, 1.11 ) }
    dend_105 { pt3dadd( 8.58885, 25.1639, -101.142, 0.81 ) }
    dend_105 { pt3dadd( 8.4187, 25.1781, -101.774, 0.81 ) }
    dend_105 { pt3dadd( 8.23797, 25.1527, -102.388, 1.11 ) }
    dend_105 { pt3dadd( 7.46777, 24.9363, -105.107, 0.81 ) }
    dend_105 { pt3dadd( 7.20849, 24.8581, -106.072, 0.81 ) }
    dend_105 { pt3dadd( 6.86893, 24.7811, -107.273, 0.96 ) }
    dend_105 { pt3dadd( 6.49971, 24.7077, -108.674, 0.81 ) }
    dend_105 { pt3dadd( 6.14303, 24.6849, -110.153, 0.52 ) }
    dend_105 { pt3dadd( 5.97762, 24.7154, -110.823, 0.52 ) }
    dend_105 { pt3dadd( 5.73069, 24.885, -111.712, 0.74 ) }
    dend_105 { pt3dadd( 5.39967, 25.4, -113.444, 1.33 ) }
    // Section: dend_88, id: dend_88, parent: dend_87 (entry count 84/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( 8.55358, 20.162, -73.3212, 2.43 ) }
    dend_88 { pt3dadd( 8.21554, 20.6245, -73.5851, 2.43 ) }
    dend_88 { pt3dadd( 7.0547, 21.9774, -74.3041, 0.88 ) }
    dend_88 { pt3dadd( 6.06397, 23.0564, -74.8177, 0.88 ) }
    dend_88 { pt3dadd( 5.40957, 23.7972, -75.1192, 0.88 ) }
    dend_88 { pt3dadd( 4.70258, 24.6746, -75.4338, 0.74 ) }
    dend_88 { pt3dadd( 3.97087, 25.7334, -75.8042, 0.88 ) }
    dend_88 { pt3dadd( 3.54472, 26.4352, -76.0434, 1.03 ) }
    dend_88 { pt3dadd( 3.0401, 27.4913, -76.4125, 1.03 ) }
    dend_88 { pt3dadd( 2.63642, 28.857, -76.8715, 1.92 ) }
    dend_88 { pt3dadd( 2.47698, 29.6967, -77.1637, 1.55 ) }
    dend_88 { pt3dadd( 2.25781, 31.1875, -77.6916, 1.11 ) }
    dend_88 { pt3dadd( 2.05066, 32.5802, -78.184, 0.96 ) }
    dend_88 { pt3dadd( 1.79017, 33.8287, -78.6809, 0.96 ) }
    dend_88 { pt3dadd( 1.52661, 34.681, -79.049, 0.96 ) }
    dend_88 { pt3dadd( 1.21155, 35.3447, -79.3684, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_88 { pt3dadd( 0.633074, 36.2192, -79.798, 0.96 ) }
    dend_88 { pt3dadd( 0.0474871, 36.9252, -80.1349, 0.96 ) }
    dend_88 { pt3dadd( -0.871043, 37.903, -80.5962, 0.88 ) }
    dend_88 { pt3dadd( -1.54357, 38.5565, -80.9314, 1.33 ) }
    dend_88 { pt3dadd( -2.11038, 39.1329, -81.2642, 1.55 ) }
    dend_88 { pt3dadd( -2.43643, 39.5228, -81.5029, 1.77 ) }
    dend_88 { pt3dadd( -2.78647, 40.0814, -81.8486, 1.77 ) }
    dend_88 { pt3dadd( -2.85794, 40.2371, -81.9405, 1.77 ) }
    // Section: dend_51, id: dend_51, parent: dend_39 (entry count 8/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 17.0138, 32.8776, 20.5562, 0.29 ) }
    dend_51 { pt3dadd( 17.2811, 32.7258, 21.2448, 0.29 ) }
    dend_51 { pt3dadd( 17.896, 32.4768, 22.5361, 0.29 ) }
    dend_51 { pt3dadd( 18.4185, 32.2436, 23.5382, 0.29 ) }
    dend_51 { pt3dadd( 18.8877, 32.0249, 24.3488, 0.29 ) }
    dend_51 { pt3dadd( 19.7933, 31.7048, 25.8409, 0.29 ) }
    dend_51 { pt3dadd( 20.5259, 31.5243, 26.9922, 0.29 ) }
    dend_51 { pt3dadd( 21.3872, 31.3465, 28.28, 0.29 ) }
    dend_51 { pt3dadd( 21.8178, 31.2611, 28.8628, 0.66 ) }
    dend_51 { pt3dadd( 22.3933, 31.1599, 29.5681, 0.29 ) }
    dend_51 { pt3dadd( 23.7264, 31.0908, 31.0778, 0.29 ) }
    dend_51 { pt3dadd( 24.2583, 31.1661, 31.6657, 0.52 ) }
    dend_51 { pt3dadd( 24.9841, 31.3628, 32.4798, 0.22 ) }
    dend_51 { pt3dadd( 25.4872, 31.5683, 33.0469, 0.22 ) }
    dend_51 { pt3dadd( 25.9648, 31.8239, 33.5863, 0.22 ) }
    dend_51 { pt3dadd( 26.7942, 32.3656, 34.5235, 0.22 ) }
    dend_51 { pt3dadd( 27.6312, 32.9689, 35.4647, 0.22 ) }
    dend_51 { pt3dadd( 28.061, 33.3303, 35.9812, 0.29 ) }
    dend_51 { pt3dadd( 28.6169, 33.9197, 36.7062, 0.29 ) }
    dend_51 { pt3dadd( 28.9307, 34.3081, 37.1601, 0.29 ) }
    dend_51 { pt3dadd( 29.1134, 34.5427, 37.4476, 0.44 ) }
    dend_51 { pt3dadd( 29.6617, 35.2375, 38.4067, 0.22 ) }
    dend_51 { pt3dadd( 30.0043, 35.7227, 39.0438, 0.37 ) }
    dend_51 { pt3dadd( 30.3387, 36.2087, 39.7101, 0.66 ) }
    dend_51 { pt3dadd( 30.761, 36.8358, 40.6031, 0.81 ) }
    dend_51 { pt3dadd( 31.1287, 37.4403, 41.4105, 0.44 ) }
    dend_51 { pt3dadd( 31.4063, 37.9029, 42.0432, 0.52 ) }
    dend_51 { pt3dadd( 34.862, 41.418, 48.5846, 0.52 ) }
    dend_51 { pt3dadd( 37.2538, 45.4177, 55.3354, 0.52 ) }
    dend_51 { pt3dadd( 40.6176, 49.2854, 61.7337, 0.52 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 38/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 17.0138, 32.8776, 20.5562, 1.47 ) }
    dend_40 { pt3dadd( 17.0117, 33.7871, 21.0866, 1.47 ) }
    dend_40 { pt3dadd( 17.0007, 34.9316, 21.7265, 0.66 ) }
    dend_40 { pt3dadd( 17.0224, 35.8524, 22.216, 0.59 ) }
    dend_40 { pt3dadd( 17.0889, 36.6479, 22.6414, 0.59 ) }
    dend_40 { pt3dadd( 17.1666, 37.5777, 23.1386, 0.74 ) }
    dend_40 { pt3dadd( 17.2242, 38.2663, 23.5068, 0.88 ) }
    dend_40 { pt3dadd( 17.2348, 38.6809, 23.7109, 1.11 ) }
    dend_40 { pt3dadd( 17.2301, 39.2947, 24.0563, 1.33 ) }
    dend_40 { pt3dadd( 17.2651, 39.9044, 24.361, 1.33 ) }
    // Section: dend_36, id: dend_36, parent: dend_24 (entry count 48/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -1.60919, 99.923, -3.92843, 0.37 ) }
    dend_36 { pt3dadd( -1.88455, 100.807, -3.93684, 0.37 ) }
    dend_36 { pt3dadd( -2.02271, 101.369, -3.96114, 0.44 ) }
    dend_36 { pt3dadd( -2.16027, 102.173, -4.01106, 0.44 ) }
    dend_36 { pt3dadd( -2.24134, 102.907, -4.07926, 0.44 ) }
    dend_36 { pt3dadd( -2.31012, 104.105, -4.21106, 0.52 ) }
    dend_36 { pt3dadd( -2.30983, 104.9, -4.27802, 0.52 ) }
    dend_36 { pt3dadd( -2.26755, 105.289, -4.30708, 0.66 ) }
    dend_36 { pt3dadd( -2.06496, 106.232, -4.3661, 0.66 ) }
    dend_36 { pt3dadd( -1.81855, 107.042, -4.4, 0.81 ) }
    dend_36 { pt3dadd( -1.60407, 107.598, -4.40027, 0.88 ) }
    dend_36 { pt3dadd( -1.19806, 108.453, -4.404, 0.96 ) }
    dend_36 { pt3dadd( -0.847618, 109.106, -4.43504, 0.96 ) }
    dend_36 { pt3dadd( -0.37666, 109.895, -4.56495, 0.59 ) }
    dend_36 { pt3dadd( 0.0766773, 110.616, -4.77629, 0.44 ) }
    dend_36 { pt3dadd( 0.388337, 111.146, -4.9902, 0.44 ) }
    dend_36 { pt3dadd( 0.918905, 112.21, -5.5108, 0.66 ) }
    dend_36 { pt3dadd( 1.06506, 112.603, -5.7244, 0.66 ) }
    dend_36 { pt3dadd( 1.31883, 113.73, -6.35791, 0.44 ) }
    dend_36 { pt3dadd( 1.36737, 114.517, -6.77062, 0.44 ) }
    dend_36 { pt3dadd( 1.31709, 115.499, -7.2131, 0.59 ) }
    dend_36 { pt3dadd( 1.2387, 116.17, -7.44791, 0.59 ) }
    dend_36 { pt3dadd( 1.11353, 117.094, -7.67382, 0.37 ) }
    dend_36 { pt3dadd( 1.01012, 117.987, -7.85451, 0.37 ) }
    dend_36 { pt3dadd( 0.917272, 119.104, -8.03664, 0.52 ) }
    dend_36 { pt3dadd( 0.894636, 120.036, -8.19567, 0.52 ) }
    dend_36 { pt3dadd( 0.92591, 121.295, -8.41451, 0.52 ) }
    dend_36 { pt3dadd( 0.972925, 122.41, -8.60443, 0.44 ) }
    dend_36 { pt3dadd( 1.00679, 123.586, -8.78597, 0.66 ) }
    dend_36 { pt3dadd( 0.997879, 124.008, -8.83652, 0.88 ) }
    dend_36 { pt3dadd( 0.903528, 125.059, -8.93771, 0.52 ) }
    dend_36 { pt3dadd( 0.801228, 125.724, -8.9884, 0.44 ) }
    dend_36 { pt3dadd( 0.597894, 126.791, -9.04188, 0.44 ) }
    dend_36 { pt3dadd( 0.431852, 127.866, -9.07408, 0.66 ) }
    dend_36 { pt3dadd( 0.389188, 128.593, -9.08977, 0.96 ) }
    dend_36 { pt3dadd( 0.41805, 129.374, -9.11601, 0.96 ) }
    dend_36 { pt3dadd( 0.518851, 130.016, -9.13107, 0.96 ) }
    dend_36 { pt3dadd( 0.80601, 131.2, -9.1516, 0.37 ) }
    dend_36 { pt3dadd( 1.11146, 132.363, -9.15597, 0.29 ) }
    dend_36 { pt3dadd( 1.43565, 133.384, -9.16361, 0.44 ) }
    dend_36 { pt3dadd( 1.61078, 133.909, -9.16403, 0.44 ) }
    dend_36 { pt3dadd( 1.91878, 134.942, -9.14207, 0.37 ) }
    dend_36 { pt3dadd( 2.05274, 135.475, -9.11457, 0.37 ) }
    dend_36 { pt3dadd( 2.27608, 137.086, -8.93339, 0.59 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 92/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -1.60919, 99.923, -3.92843, 0.52 ) }
    dend_25 { pt3dadd( -3.1008, 100.023, -4.33179, 0.52 ) }
    dend_25 { pt3dadd( -4.74515, 100.403, -4.8582, 0.44 ) }
    dend_25 { pt3dadd( -5.3602, 100.631, -5.08053, 0.37 ) }
    dend_25 { pt3dadd( -5.83223, 100.832, -5.25032, 0.37 ) }
    dend_25 { pt3dadd( -6.70447, 101.209, -5.54202, 0.59 ) }
    dend_25 { pt3dadd( -7.09085, 101.351, -5.6784, 0.66 ) }
    dend_25 { pt3dadd( -7.77296, 101.59, -5.9809, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_25 { pt3dadd( -8.45838, 101.77, -6.35659, 0.59 ) }
    dend_25 { pt3dadd( -9.09181, 101.872, -6.74809, 0.59 ) }
    dend_25 { pt3dadd( -9.76535, 101.947, -7.23541, 0.59 ) }
    dend_25 { pt3dadd( -10.8138, 102.06, -8.0929, 0.44 ) }
    dend_25 { pt3dadd( -11.8279, 102.217, -8.97948, 0.44 ) }
    dend_25 { pt3dadd( -12.6631, 102.405, -9.76542, 0.44 ) }
    dend_25 { pt3dadd( -13.2698, 102.564, -10.392, 0.44 ) }
    dend_25 { pt3dadd( -14.0965, 102.857, -11.3452, 0.59 ) }
    dend_25 { pt3dadd( -14.6387, 103.141, -12.0354, 0.74 ) }
    dend_25 { pt3dadd( -15.008, 103.457, -12.5213, 0.88 ) }
    dend_25 { pt3dadd( -15.2959, 103.8, -12.8965, 0.88 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 11/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 0.779731, -153.731, 9.91978, 0.37 ) }
    dend_22 { pt3dadd( 0.536447, -152.594, 9.82568, 0.37 ) }
    dend_22 { pt3dadd( 0.349765, -151.236, 9.74653, 0.37 ) }
    dend_22 { pt3dadd( 0.227282, -149.661, 9.6598, 0.37 ) }
    dend_22 { pt3dadd( 0.174904, -148.501, 9.57151, 0.37 ) }
    dend_22 { pt3dadd( 0.121488, -147.298, 9.45783, 0.37 ) }
    dend_22 { pt3dadd( 0.0648283, -146.291, 9.34828, 0.37 ) }
    dend_22 { pt3dadd( 0.00993866, -145.314, 9.22286, 0.37 ) }
    dend_22 { pt3dadd( -0.0276761, -144.532, 9.10529, 0.37 ) }
    dend_22 { pt3dadd( -0.0225181, -143.681, 8.98091, 0.37 ) }
    dend_22 { pt3dadd( 3.52318E-4, -142.875, 8.86842, 0.37 ) }
    dend_22 { pt3dadd( 0.0366498, -141.854, 8.73469, 0.37 ) }
    dend_22 { pt3dadd( 0.0882364, -140.826, 8.6213, 0.59 ) }
    dend_22 { pt3dadd( 0.150349, -140.09, 8.55012, 0.81 ) }
    dend_22 { pt3dadd( 0.370794, -138.49, 8.44039, 0.29 ) }
    dend_22 { pt3dadd( 0.522188, -137.711, 8.38823, 0.88 ) }
    dend_22 { pt3dadd( 0.671994, -137.121, 8.33186, 0.96 ) }
    dend_22 { pt3dadd( 0.84595, -136.589, 8.24631, 0.44 ) }
    dend_22 { pt3dadd( 1.24078, -135.567, 7.99669, 0.37 ) }
    dend_22 { pt3dadd( 1.64121, -134.721, 7.63234, 0.37 ) }
    dend_22 { pt3dadd( 1.97861, -134.068, 7.23751, 0.37 ) }
    dend_22 { pt3dadd( 2.25311, -133.554, 6.89474, 0.37 ) }
    dend_22 { pt3dadd( 2.67719, -132.684, 6.32468, 0.52 ) }
    dend_22 { pt3dadd( 2.85058, -132.26, 6.05902, 0.52 ) }
    dend_22 { pt3dadd( 3.38635, -130.628, 5.15205, 0.52 ) }
    dend_22 { pt3dadd( 3.58688, -129.745, 4.70761, 0.52 ) }
    dend_22 { pt3dadd( 3.70169, -128.907, 4.34231, 0.59 ) }
    dend_22 { pt3dadd( 3.7686, -127.935, 3.97046, 0.29 ) }
    dend_22 { pt3dadd( 3.80091, -126.924, 3.6297, 0.29 ) }
    dend_22 { pt3dadd( 3.84018, -126.04, 3.33269, 0.37 ) }
    dend_22 { pt3dadd( 3.89932, -125.019, 3.00234, 0.59 ) }
    dend_22 { pt3dadd( 3.99672, -124.391, 2.76205, 0.74 ) }
    dend_22 { pt3dadd( 4.14061, -123.815, 2.53125, 0.74 ) }
    dend_22 { pt3dadd( 4.39407, -123.033, 2.22625, 0.66 ) }
    dend_22 { pt3dadd( 4.7667, -121.918, 1.87208, 0.59 ) }
    dend_22 { pt3dadd( 4.9551, -121.243, 1.71609, 0.59 ) }
    dend_22 { pt3dadd( 5.1065, -120.401, 1.61567, 0.44 ) }
    dend_22 { pt3dadd( 5.20078, -119.464, 1.56571, 0.37 ) }
    dend_22 { pt3dadd( 5.24886, -118.434, 1.56884, 0.37 ) }
    dend_22 { pt3dadd( 5.2801, -117.513, 1.59612, 0.29 ) }
    dend_22 { pt3dadd( 5.33439, -116.602, 1.64764, 0.29 ) }
    dend_22 { pt3dadd( 5.47672, -115.324, 1.71129, 0.29 ) }
    dend_22 { pt3dadd( 5.64884, -114.478, 1.70514, 0.74 ) }
    dend_22 { pt3dadd( 5.82034, -113.957, 1.64967, 0.74 ) }
    dend_22 { pt3dadd( 6.25265, -112.963, 1.42444, 0.37 ) }
    dend_22 { pt3dadd( 6.65896, -112.147, 1.13269, 0.59 ) }
    dend_22 { pt3dadd( 6.86104, -111.738, 0.943045, 0.59 ) }
    dend_22 { pt3dadd( 7.41123, -110.561, 0.304573, 0.37 ) }
    dend_22 { pt3dadd( 7.69039, -109.877, -0.0830454, 0.37 ) }
    dend_22 { pt3dadd( 7.99651, -108.987, -0.576056, 0.37 ) }
    dend_22 { pt3dadd( 8.16524, -108.366, -0.879805, 0.52 ) }
    dend_22 { pt3dadd( 8.33596, -107.677, -1.18123, 0.29 ) }
    dend_22 { pt3dadd( 8.50495, -106.956, -1.41969, 0.29 ) }
    dend_22 { pt3dadd( 8.64291, -106.365, -1.54259, 0.29 ) }
    dend_22 { pt3dadd( 8.83381, -105.723, -1.65829, 0.29 ) }
    dend_22 { pt3dadd( 9.02963, -105.142, -1.76168, 0.37 ) }
    dend_22 { pt3dadd( 9.25972, -104.439, -1.89207, 0.37 ) }
    dend_22 { pt3dadd( 9.4582, -103.732, -2.02862, 0.44 ) }
    dend_22 { pt3dadd( 9.6265, -102.967, -2.16839, 0.44 ) }
    dend_22 { pt3dadd( 9.77282, -102.291, -2.27976, 0.44 ) }
    dend_22 { pt3dadd( 9.98822, -101.439, -2.41697, 0.29 ) }
    dend_22 { pt3dadd( 10.1989, -100.845, -2.51709, 0.29 ) }
    dend_22 { pt3dadd( 10.615, -99.9357, -2.66548, 0.29 ) }
    dend_22 { pt3dadd( 11.0099, -99.2051, -2.76659, 0.74 ) }
    dend_22 { pt3dadd( 11.4105, -98.5216, -2.82817, 0.74 ) }
    dend_22 { pt3dadd( 11.7975, -97.9232, -2.84106, 0.74 ) }
    dend_22 { pt3dadd( 12.3554, -97.1665, -2.81841, 0.52 ) }
    dend_22 { pt3dadd( 12.9227, -96.438, -2.7586, 0.52 ) }
    dend_22 { pt3dadd( 13.7764, -95.3871, -2.63129, 0.52 ) }
    dend_22 { pt3dadd( 14.2952, -94.7092, -2.53881, 0.66 ) }
    dend_22 { pt3dadd( 14.7808, -93.9593, -2.44922, 0.44 ) }
    dend_22 { pt3dadd( 15.096, -93.3629, -2.38757, 0.44 ) }
    dend_22 { pt3dadd( 15.3603, -92.7081, -2.35133, 0.81 ) }
    dend_22 { pt3dadd( 15.5225, -92.1741, -2.36567, 0.81 ) }
    dend_22 { pt3dadd( 15.64, -91.3718, -2.47603, 0.37 ) }
    dend_22 { pt3dadd( 15.6802, -90.447, -2.75976, 0.37 ) }
    dend_22 { pt3dadd( 15.6759, -89.5775, -3.06946, 0.37 ) }
    dend_22 { pt3dadd( 15.673, -88.7591, -3.38365, 0.37 ) }
    dend_22 { pt3dadd( 15.6915, -88.011, -3.67446, 0.52 ) }
    dend_22 { pt3dadd( 15.7488, -87.3915, -3.93207, 0.52 ) }
    dend_22 { pt3dadd( 16.0901, -85.6865, -4.69984, 0.37 ) }
    dend_22 { pt3dadd( 16.6694, -84.0876, -5.45924, 0.29 ) }
    dend_22 { pt3dadd( 17.084, -83.2728, -5.85625, 0.29 ) }
    dend_22 { pt3dadd( 17.3793, -82.7964, -6.09018, 0.29 ) }
    dend_22 { pt3dadd( 17.9649, -81.9203, -6.51827, 0.66 ) }
    dend_22 { pt3dadd( 18.3072, -81.4123, -6.74433, 0.81 ) }
    dend_22 { pt3dadd( 19.0006, -80.3575, -7.10479, 0.44 ) }
    dend_22 { pt3dadd( 19.3978, -79.759, -7.26016, 0.59 ) }
    dend_22 { pt3dadd( 19.61, -79.387, -7.30211, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_22 { pt3dadd( 19.9889, -78.621, -7.31662, 0.29 ) }
    dend_22 { pt3dadd( 20.3488, -77.8295, -7.26427, 0.29 ) }
    dend_22 { pt3dadd( 20.7187, -77.0422, -7.1749, 0.29 ) }
    dend_22 { pt3dadd( 21.3315, -75.766, -7.00821, 0.29 ) }
    dend_22 { pt3dadd( 21.8977, -74.5041, -6.87061, 0.29 ) }
    dend_22 { pt3dadd( 22.3555, -73.4221, -6.76918, 0.29 ) }
    dend_22 { pt3dadd( 22.932, -72.0625, -6.6493, 0.29 ) }
    dend_22 { pt3dadd( 23.6525, -70.3391, -6.5086, 0.29 ) }
    dend_22 { pt3dadd( 23.9523, -69.5922, -6.47465, 0.29 ) }
    dend_22 { pt3dadd( 24.4644, -68.2097, -6.4802, 0.29 ) }
    dend_22 { pt3dadd( 24.8664, -67.1152, -6.55416, 0.59 ) }
    dend_22 { pt3dadd( 25.0333, -66.6481, -6.61849, 0.59 ) }
    dend_22 { pt3dadd( 25.3403, -65.7475, -6.80309, 0.29 ) }
    dend_22 { pt3dadd( 25.7057, -64.6832, -7.07065, 0.66 ) }
    dend_22 { pt3dadd( 25.966, -64.0446, -7.25403, 0.66 ) }
    dend_22 { pt3dadd( 26.3725, -63.2479, -7.5266, 0.37 ) }
    dend_22 { pt3dadd( 26.7996, -62.4487, -7.86444, 0.22 ) }
    dend_22 { pt3dadd( 27.1015, -61.8596, -8.12671, 0.22 ) }
    dend_22 { pt3dadd( 27.3523, -61.3533, -8.35182, 0.22 ) }
    dend_22 { pt3dadd( 27.6659, -60.7146, -8.60844, 0.44 ) }
    dend_22 { pt3dadd( 28.0917, -59.8377, -8.91767, 0.29 ) }
    dend_22 { pt3dadd( 28.5404, -58.9574, -9.17691, 0.29 ) }
    dend_22 { pt3dadd( 29.003, -58.0666, -9.4364, 0.37 ) }
    dend_22 { pt3dadd( 29.292, -57.4874, -9.52735, 0.66 ) }
    dend_22 { pt3dadd( 29.4541, -57.089, -9.50018, 0.66 ) }
    dend_22 { pt3dadd( 29.763, -56.0947, -9.23648, 0.29 ) }
    dend_22 { pt3dadd( 29.9791, -55.2057, -8.84195, 0.74 ) }
    dend_22 { pt3dadd( 30.0699, -54.6319, -8.49321, 0.88 ) }
    dend_22 { pt3dadd( 30.2896, -52.5483, -7.05027, 0.37 ) }
    dend_22 { pt3dadd( 30.3926, -51.2348, -6.09938, 0.29 ) }
    dend_22 { pt3dadd( 30.453, -50.2428, -5.34292, 0.29 ) }
    dend_22 { pt3dadd( 30.4917, -49.0094, -4.34707, 0.29 ) }
    dend_22 { pt3dadd( 30.475, -47.463, -3.07556, 0.22 ) }
    dend_22 { pt3dadd( 30.4617, -46.8138, -2.55284, 0.22 ) }
    dend_22 { pt3dadd( 30.4372, -46.241, -2.18888, 0.22 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 35/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 0.779731, -153.731, 9.91978, 0.29 ) }
    dend_19 { pt3dadd( 0.310542, -153.437, 9.66642, 0.29 ) }
    dend_19 { pt3dadd( -0.293917, -153.058, 9.34002, 0.29 ) }
    dend_19 { pt3dadd( -1.37087, -152.382, 8.75848, 0.29 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 39/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -3.29028, -223.498, 24.1807, 0.59 ) }
    dend_3 { pt3dadd( -2.91988, -224.745, 24.7655, 0.59 ) }
    dend_3 { pt3dadd( -2.65611, -226.143, 25.3127, 0.59 ) }
    dend_3 { pt3dadd( -2.48499, -227.391, 25.7271, 1.03 ) }
    dend_3 { pt3dadd( -2.42181, -228.068, 25.9115, 1.11 ) }
    dend_3 { pt3dadd( -2.34079, -228.747, 26.1237, 1.11 ) }
    dend_3 { pt3dadd( -1.99279, -230.932, 26.8793, 0.81 ) }
    dend_3 { pt3dadd( -1.72416, -232.49, 27.466, 0.74 ) }
    dend_3 { pt3dadd( -1.34454, -234.232, 28.1439, 0.59 ) }
    dend_3 { pt3dadd( -0.794564, -236.128, 28.918, 0.59 ) }
    dend_3 { pt3dadd( 0.172692, -238.593, 30.0779, 0.66 ) }
    dend_3 { pt3dadd( 0.808254, -239.859, 30.7511, 0.74 ) }
    dend_3 { pt3dadd( 1.21603, -240.519, 31.1414, 1.03 ) }
    dend_3 { pt3dadd( 1.69015, -241.19, 31.585, 0.81 ) }
    dend_3 { pt3dadd( 2.35949, -242.073, 32.2054, 0.52 ) }
    dend_3 { pt3dadd( 3.07671, -242.922, 32.838, 0.81 ) }
    dend_3 { pt3dadd( 3.78824, -243.893, 33.4082, 0.59 ) }
    dend_3 { pt3dadd( 4.24894, -244.683, 33.816, 0.52 ) }
    dend_3 { pt3dadd( 4.41325, -245.065, 33.9885, 0.74 ) }
    dend_3 { pt3dadd( 4.55308, -245.638, 34.2347, 0.74 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 59/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -3.29028, -223.498, 24.1807, 0.29 ) }
    dend_2 { pt3dadd( -4.21916, -222.975, 24.1184, 0.29 ) }
    dend_2 { pt3dadd( -5.18461, -222.569, 24.0273, 0.29 ) }
    dend_2 { pt3dadd( -6.20856, -222.268, 23.92, 0.29 ) }
    dend_2 { pt3dadd( -7.55009, -222.065, 23.7713, 0.22 ) }
    dend_2 { pt3dadd( -9.12672, -222.064, 23.5902, 0.22 ) }
    dend_2 { pt3dadd( -10.2473, -222.261, 23.4573, 0.22 ) }
    dend_2 { pt3dadd( -11.3229, -222.654, 23.2916, 0.22 ) }
    dend_2 { pt3dadd( -12.2541, -223.295, 23.1359, 0.22 ) }
    dend_2 { pt3dadd( -13.0322, -224.199, 23.0019, 0.22 ) }
    dend_2 { pt3dadd( -13.4344, -224.828, 22.9304, 0.22 ) }
    dend_2 { pt3dadd( -13.811, -225.831, 22.8563, 0.22 ) }
    dend_2 { pt3dadd( -24.182, -229.133, 22.1068, 0.22 ) }
    dend_2 { pt3dadd( -34.8711, -230.359, 20.4323, 0.22 ) }
    dend_2 { pt3dadd( -45.6649, -231.63, 19.7606, 0.22 ) }
    dend_2 { pt3dadd( -56.2012, -234.062, 18.3993, 0.22 ) }
    dend_2 { pt3dadd( -66.5341, -234.958, 15.0892, 0.22 ) }
    dend_2 { pt3dadd( -75.9603, -235.875, 9.7193, 0.22 ) }
    dend_2 { pt3dadd( -84.9117, -235.133, 3.56849, 0.22 ) }
    dend_2 { pt3dadd( -94.2018, -236.6, -1.92123, 0.22 ) }
    dend_2 { pt3dadd( -104.414, -239.14, -4.76226, 0.22 ) }
    // Section: dend_107, id: dend_107, parent: dend_105 (entry count 80/100)
    dend_107 { pt3dclear() }
    dend_107 { pt3dadd( 5.39967, 25.4, -113.444, 0.74 ) }
    dend_107 { pt3dadd( 5.14176, 25.6203, -113.641, 0.74 ) }
    dend_107 { pt3dadd( 4.38224, 26.5208, -114.178, 0.74 ) }
    dend_107 { pt3dadd( 2.9653, 28.2008, -115.18, 0.52 ) }
    dend_107 { pt3dadd( 2.53818, 28.7072, -115.482, 1.03 ) }
    dend_107 { pt3dadd( 2.17617, 29.1364, -115.738, 1.03 ) }
    dend_107 { pt3dadd( 1.7632, 29.6261, -116.03, 0.22 ) }
    dend_107 { pt3dadd( 0.986407, 30.7428, -116.606, 0.22 ) }
    // Section: dend_106, id: dend_106, parent: dend_105 (entry count 88/100)
    dend_106 { pt3dclear() }
    dend_106 { pt3dadd( 5.39967, 25.4, -113.444, 0.96 ) }
    dend_106 { pt3dadd( 6.22851, 25.4347, -116.369, 0.96 ) }
    dend_106 { pt3dadd( 6.45606, 25.4489, -117.464, 0.66 ) }
    dend_106 { pt3dadd( 6.63333, 25.4923, -118.835, 0.44 ) }
    dend_106 { pt3dadd( 7.02842, 25.7181, -122.484, 0.29 ) }
    dend_106 { pt3dadd( 7.53859, 26.1886, -127.468, 1.18 ) }
    dend_106 { pt3dadd( 8.02671, 26.8327, -133.076, 0.59 ) }
    dend_106 { pt3dadd( 8.11391, 27.068, -135.079, 0.44 ) }
    dend_106 { pt3dadd( 8.16824, 27.4983, -138.632, 1.03 ) }
    dend_106 { pt3dadd( 8.07401, 28.0548, -142.545, 0.59 ) }
    dend_106 { pt3dadd( 7.97704, 28.3173, -143.87, 0.52 ) }
    dend_106 { pt3dadd( 7.60396, 29.2505, -147.247, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_106 { pt3dadd( 7.42206, 29.8454, -149.124, 1.11 ) }
    // Section: dend_102, id: dend_102, parent: dend_88 (entry count 1/100)
    dend_102 { pt3dclear() }
    dend_102 { pt3dadd( -2.85794, 40.2371, -81.9405, 0.96 ) }
    dend_102 { pt3dadd( -2.3548, 41.8883, -84.1114, 0.96 ) }
    dend_102 { pt3dadd( -1.91503, 42.896, -85.5648, 0.74 ) }
    dend_102 { pt3dadd( -1.68756, 43.2238, -86.1967, 0.74 ) }
    dend_102 { pt3dadd( -1.38464, 43.5047, -86.9447, 0.88 ) }
    dend_102 { pt3dadd( -0.961875, 43.7544, -87.8944, 0.88 ) }
    dend_102 { pt3dadd( -0.533283, 43.8986, -88.8084, 1.03 ) }
    dend_102 { pt3dadd( 0.285008, 43.9349, -90.2033, 1.33 ) }
    dend_102 { pt3dadd( 1.33571, 43.8445, -91.7564, 1.03 ) }
    dend_102 { pt3dadd( 2.08624, 43.7703, -92.7821, 1.33 ) }
    dend_102 { pt3dadd( 2.80719, 43.7285, -93.7246, 1.55 ) }
    dend_102 { pt3dadd( 4.27915, 43.8024, -95.5428, 1.33 ) }
    dend_102 { pt3dadd( 4.95584, 43.9612, -96.325, 0.81 ) }
    dend_102 { pt3dadd( 5.56283, 44.2751, -96.9163, 0.81 ) }
    dend_102 { pt3dadd( 6.4902, 45.0032, -97.6859, 1.03 ) }
    dend_102 { pt3dadd( 7.30194, 45.7606, -98.4, 1.03 ) }
    dend_102 { pt3dadd( 8.00445, 46.5135, -99.0853, 1.25 ) }
    dend_102 { pt3dadd( 8.48589, 47.0676, -99.6123, 1.33 ) }
    dend_102 { pt3dadd( 9.0571, 47.7503, -100.317, 1.4 ) }
    dend_102 { pt3dadd( 9.39512, 48.1455, -100.772, 1.4 ) }
    dend_102 { pt3dadd( 11.0078, 49.8304, -103.042, 1.33 ) }
    dend_102 { pt3dadd( 11.6811, 50.4205, -104.017, 1.18 ) }
    dend_102 { pt3dadd( 12.3615, 50.936, -105.109, 1.18 ) }
    // Section: dend_89, id: dend_89, parent: dend_88 (entry count 24/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( -2.85794, 40.2371, -81.9405, 1.55 ) }
    dend_89 { pt3dadd( -2.84794, 41.6473, -82.0779, 1.55 ) }
    dend_89 { pt3dadd( -2.71482, 43.06, -82.3044, 0.88 ) }
    dend_89 { pt3dadd( -2.52267, 44.3398, -82.4883, 0.88 ) }
    dend_89 { pt3dadd( -2.27026, 45.6024, -82.5904, 1.03 ) }
    dend_89 { pt3dadd( -1.88303, 47.3164, -82.6617, 1.03 ) }
    dend_89 { pt3dadd( -1.45999, 49.1359, -82.693, 1.03 ) }
    dend_89 { pt3dadd( -1.00244, 50.868, -82.6805, 1.03 ) }
    dend_89 { pt3dadd( -0.600632, 52.4017, -82.6396, 1.11 ) }
    dend_89 { pt3dadd( -0.0689616, 54.6124, -82.5594, 1.18 ) }
    dend_89 { pt3dadd( 0.319322, 56.4718, -82.4779, 0.74 ) }
    dend_89 { pt3dadd( 0.648915, 58.3321, -82.3794, 0.74 ) }
    dend_89 { pt3dadd( 0.944433, 59.9372, -82.2907, 0.74 ) }
    dend_89 { pt3dadd( 1.37495, 62.08, -82.1959, 0.88 ) }
    dend_89 { pt3dadd( 1.66981, 63.4765, -82.1709, 1.11 ) }
    dend_89 { pt3dadd( 1.90396, 64.5536, -82.1272, 1.33 ) }
    dend_89 { pt3dadd( 2.1138, 65.5153, -82.027, 1.47 ) }
    dend_89 { pt3dadd( 2.42291, 66.9835, -81.7293, 0.81 ) }
    dend_89 { pt3dadd( 2.62976, 68.0672, -81.3749, 0.81 ) }
    dend_89 { pt3dadd( 2.85514, 69.2462, -80.8522, 1.03 ) }
    dend_89 { pt3dadd( 3.21243, 70.9603, -79.9812, 1.11 ) }
    dend_89 { pt3dadd( 3.50556, 72.2016, -79.3219, 0.88 ) }
    dend_89 { pt3dadd( 3.86462, 73.4193, -78.6712, 0.74 ) }
    dend_89 { pt3dadd( 4.30371, 74.5892, -78.1141, 0.59 ) }
    dend_89 { pt3dadd( 4.97782, 75.7591, -77.703, 0.88 ) }
    dend_89 { pt3dadd( 5.72976, 76.6908, -77.5772, 0.96 ) }
    dend_89 { pt3dadd( 6.36251, 77.3662, -77.6116, 0.96 ) }
    dend_89 { pt3dadd( 7.1863, 78.2602, -77.7246, 0.88 ) }
    dend_89 { pt3dadd( 8.00004, 79.2335, -77.9049, 0.74 ) }
    dend_89 { pt3dadd( 8.62752, 80.1569, -78.0837, 0.96 ) }
    dend_89 { pt3dadd( 9.17622, 81.254, -78.2578, 0.66 ) }
    dend_89 { pt3dadd( 9.83112, 83.0107, -78.471, 0.66 ) }
    dend_89 { pt3dadd( 10.5153, 85.2844, -78.6124, 1.11 ) }
    dend_89 { pt3dadd( 10.7689, 86.2436, -78.6049, 1.33 ) }
    dend_89 { pt3dadd( 11.1834, 87.988, -78.5355, 1.33 ) }
    dend_89 { pt3dadd( 11.703, 90.4265, -78.3848, 0.74 ) }
    dend_89 { pt3dadd( 12.1285, 92.5645, -78.192, 0.74 ) }
    dend_89 { pt3dadd( 12.4689, 94.3262, -77.9792, 1.03 ) }
    dend_89 { pt3dadd( 12.7662, 95.7027, -77.7669, 1.25 ) }
    // Section: dend_69, id: dend_69, parent: dend_51 (entry count 63/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 40.6176, 49.2854, 61.7337, 0.44 ) }
    dend_69 { pt3dadd( 38.4063, 49.9563, 68.5549, 0.44 ) }
    dend_69 { pt3dadd( 37.2903, 51.7753, 75.4452, 0.44 ) }
    dend_69 { pt3dadd( 35.6008, 52.6826, 82.3888, 0.44 ) }
    dend_69 { pt3dadd( 34.1712, 53.3668, 89.4141, 0.44 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 68/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 40.6176, 49.2854, 61.7337, 0.22 ) }
    dend_52 { pt3dadd( 49.5643, 54.2081, 68.8084, 0.44 ) }
    dend_52 { pt3dadd( 57.8409, 58.0924, 77.2007, 0.44 ) }
    dend_52 { pt3dadd( 66.5681, 63.9344, 83.8672, 0.44 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 72/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 17.2651, 39.9044, 24.361, 1.18 ) }
    dend_42 { pt3dadd( 17.5045, 40.6019, 25.909, 1.18 ) }
    dend_42 { pt3dadd( 17.8505, 42.1664, 28.6578, 0.59 ) }
    dend_42 { pt3dadd( 17.9145, 42.4879, 29.1332, 0.59 ) }
    dend_42 { pt3dadd( 18.0056, 42.8813, 29.6531, 0.52 ) }
    dend_42 { pt3dadd( 18.1393, 43.3891, 30.2611, 0.74 ) }
    dend_42 { pt3dadd( 18.2971, 43.9481, 30.8475, 0.59 ) }
    dend_42 { pt3dadd( 18.4986, 44.6744, 31.341, 0.59 ) }
    dend_42 { pt3dadd( 18.6722, 45.3076, 31.6438, 0.74 ) }
    dend_42 { pt3dadd( 18.847, 45.8252, 31.9033, 0.74 ) }
    dend_42 { pt3dadd( 19.4065, 47.1356, 32.6034, 1.62 ) }
    dend_42 { pt3dadd( 19.8618, 48.0062, 33.0954, 2.21 ) }
    dend_42 { pt3dadd( 20.2935, 48.7548, 33.5106, 2.06 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 85/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 17.2651, 39.9044, 24.361, 0.29 ) }
    dend_41 { pt3dadd( 17.9103, 38.7515, 23.9589, 0.29 ) }
    dend_41 { pt3dadd( 18.3045, 38.0473, 23.7132, 0.44 ) }
    dend_41 { pt3dadd( 18.4812, 37.7317, 23.603, 0.59 ) }
    dend_41 { pt3dadd( 18.9809, 36.8389, 23.2916, 0.52 ) }
    dend_41 { pt3dadd( 22.1299, 29.8167, 20.2336, 0.52 ) }
    dend_41 { pt3dadd( 24.1645, 23.05, 15.9372, 0.52 ) }
    dend_41 { pt3dadd( 26.9785, 15.9225, 12.7872, 0.52 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 93/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 2.27608, 137.086, -8.93339, 0.37 ) }
    dend_38 { pt3dadd( 2.00322, 138.109, -8.7794, 0.37 ) }
    dend_38 { pt3dadd( 1.94479, 138.659, -8.66529, 0.29 ) }
    dend_38 { pt3dadd( 1.93655, 139.322, -8.47121, 0.29 ) }
    dend_38 { pt3dadd( 1.95595, 140.09, -8.18607, 0.29 ) }
    dend_38 { pt3dadd( 1.98071, 141.181, -7.75904, 0.29 ) }
    dend_38 { pt3dadd( 1.98799, 142.068, -7.41057, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_38 { pt3dadd( 2.03253, 143.108, -7.0038, 0.29 ) }
    dend_38 { pt3dadd( 2.04084, 144.304, -6.54962, 0.59 ) }
    dend_38 { pt3dadd( 1.96898, 145.246, -6.20066, 0.37 ) }
    dend_38 { pt3dadd( 1.8356, 145.887, -5.98141, 0.37 ) }
    dend_38 { pt3dadd( 1.69271, 146.32, -5.85049, 0.74 ) }
    dend_38 { pt3dadd( 1.46403, 146.903, -5.7212, 0.74 ) }
    dend_38 { pt3dadd( 0.956476, 148.146, -5.54633, 0.44 ) }
    dend_38 { pt3dadd( 0.585718, 149.089, -5.47358, 0.44 ) }
    dend_38 { pt3dadd( 0.264972, 150.033, -5.4022, 0.44 ) }
    dend_38 { pt3dadd( 0.0797466, 150.623, -5.30757, 0.44 ) }
    dend_38 { pt3dadd( -0.235438, 151.616, -5.09403, 0.44 ) }
    dend_38 { pt3dadd( -0.47731, 152.363, -4.90674, 0.44 ) }
    dend_38 { pt3dadd( -0.708896, 153.103, -4.7089, 0.37 ) }
    dend_38 { pt3dadd( -1.13679, 154.512, -4.34265, 0.37 ) }
    dend_38 { pt3dadd( -1.58095, 155.973, -3.96128, 0.29 ) }
    dend_38 { pt3dadd( -1.85857, 156.864, -3.73376, 0.29 ) }
    dend_38 { pt3dadd( -2.13931, 157.692, -3.52337, 0.29 ) }
    dend_38 { pt3dadd( -2.50813, 158.733, -3.32837, 0.29 ) }
    dend_38 { pt3dadd( -2.80834, 159.563, -3.23865, 0.29 ) }
    dend_38 { pt3dadd( -3.18733, 160.55, -3.18379, 0.29 ) }
    dend_38 { pt3dadd( -3.51271, 161.352, -3.14586, 0.29 ) }
    dend_38 { pt3dadd( -3.90508, 162.288, -3.03815, 0.29 ) }
    dend_38 { pt3dadd( -4.51023, 163.637, -2.78654, 0.29 ) }
    dend_38 { pt3dadd( -4.8034, 164.234, -2.63642, 0.29 ) }
    dend_38 { pt3dadd( -5.27598, 165.168, -2.35603, 0.29 ) }
    dend_38 { pt3dadd( -5.64965, 165.986, -2.08407, 0.29 ) }
    dend_38 { pt3dadd( -6.00723, 167.006, -1.75265, 0.29 ) }
    dend_38 { pt3dadd( -6.19689, 167.787, -1.52472, 0.29 ) }
    dend_38 { pt3dadd( -6.26725, 168.149, -1.43968, 0.66 ) }
    dend_38 { pt3dadd( -6.34004, 168.575, -1.39314, 0.66 ) }
    dend_38 { pt3dadd( -6.48683, 169.453, -1.37432, 0.29 ) }
    dend_38 { pt3dadd( -6.62514, 170.239, -1.39509, 0.29 ) }
    dend_38 { pt3dadd( -6.79297, 171.215, -1.43383, 0.29 ) }
    dend_38 { pt3dadd( -6.9572, 172.383, -1.4712, 0.29 ) }
    dend_38 { pt3dadd( -7.05038, 173.121, -1.49916, 0.29 ) }
    dend_38 { pt3dadd( -7.15682, 173.967, -1.53115, 0.74 ) }
    dend_38 { pt3dadd( -7.21241, 174.489, -1.5477, 0.74 ) }
    dend_38 { pt3dadd( -7.27438, 175.612, -1.56804, 0.29 ) }
    dend_38 { pt3dadd( -7.26973, 176.422, -1.56871, 0.29 ) }
    dend_38 { pt3dadd( -7.21568, 177.33, -1.55592, 0.29 ) }
    dend_38 { pt3dadd( -7.15767, 178.127, -1.54136, 0.29 ) }
    dend_38 { pt3dadd( -7.07558, 179.458, -1.49519, 0.29 ) }
    dend_38 { pt3dadd( -7.05077, 180.236, -1.46456, 0.81 ) }
    dend_38 { pt3dadd( -7.04008, 180.933, -1.47237, 0.81 ) }
    dend_38 { pt3dadd( -6.98834, 181.937, -1.52552, 0.37 ) }
    dend_38 { pt3dadd( -6.88372, 182.903, -1.6111, 0.29 ) }
    dend_38 { pt3dadd( -6.76288, 183.74, -1.73898, 0.29 ) }
    dend_38 { pt3dadd( -6.66547, 184.538, -1.93953, 0.29 ) }
    dend_38 { pt3dadd( -6.58494, 185.85, -2.40116, 0.44 ) }
    dend_38 { pt3dadd( -6.58837, 186.461, -2.68831, 0.44 ) }
    dend_38 { pt3dadd( -6.62144, 187.003, -2.98664, 0.44 ) }
    dend_38 { pt3dadd( -6.6681, 187.809, -3.49697, 0.37 ) }
    dend_38 { pt3dadd( -6.69181, 188.555, -4.00322, 0.29 ) }
    dend_38 { pt3dadd( -6.68812, 189.186, -4.43866, 0.29 ) }
    dend_38 { pt3dadd( -6.65112, 189.792, -4.88179, 0.29 ) }
    dend_38 { pt3dadd( -6.55827, 190.354, -5.35276, 0.59 ) }
    dend_38 { pt3dadd( -6.26992, 191.19, -6.11227, 0.96 ) }
    dend_38 { pt3dadd( -6.09968, 191.522, -6.41601, 0.96 ) }
    dend_38 { pt3dadd( -5.67758, 192.185, -7.0186, 0.81 ) }
    dend_38 { pt3dadd( -5.00808, 193.166, -7.87445, 0.29 ) }
    dend_38 { pt3dadd( -4.66688, 193.665, -8.28467, 0.29 ) }
    dend_38 { pt3dadd( -4.19941, 194.41, -8.85042, 0.29 ) }
    dend_38 { pt3dadd( -3.93364, 194.918, -9.16897, 0.52 ) }
    dend_38 { pt3dadd( -3.57214, 195.738, -9.59159, 0.52 ) }
    dend_38 { pt3dadd( -3.35218, 196.292, -9.80931, 0.52 ) }
    dend_38 { pt3dadd( -3.1616, 196.76, -9.95042, 0.44 ) }
    dend_38 { pt3dadd( -2.74402, 197.745, -10.2063, 0.66 ) }
    dend_38 { pt3dadd( -2.37592, 198.598, -10.4069, 0.37 ) }
    dend_38 { pt3dadd( -2.10487, 199.228, -10.5532, 0.37 ) }
    dend_38 { pt3dadd( -1.83062, 199.941, -10.7204, 0.37 ) }
    dend_38 { pt3dadd( -1.63179, 200.678, -10.9873, 0.29 ) }
    dend_38 { pt3dadd( -1.55265, 201.466, -11.4069, 0.29 ) }
    dend_38 { pt3dadd( -1.61456, 202.137, -11.8217, 0.37 ) }
    dend_38 { pt3dadd( -1.77233, 202.976, -12.3477, 0.52 ) }
    dend_38 { pt3dadd( -1.9678, 203.79, -12.83, 0.59 ) }
    dend_38 { pt3dadd( -2.29034, 205.084, -13.5686, 0.29 ) }
    dend_38 { pt3dadd( -2.43975, 205.813, -13.9931, 0.29 ) }
    dend_38 { pt3dadd( -2.62693, 207.282, -14.8736, 0.44 ) }
    dend_38 { pt3dadd( -2.63127, 207.98, -15.2757, 0.59 ) }
    dend_38 { pt3dadd( -2.55973, 208.627, -15.6169, 0.59 ) }
    dend_38 { pt3dadd( -2.43261, 209.277, -15.9296, 0.29 ) }
    dend_38 { pt3dadd( -2.15589, 210.484, -16.4832, 0.37 ) }
    dend_38 { pt3dadd( -2.01259, 211.265, -16.8406, 0.37 ) }
    dend_38 { pt3dadd( -1.88931, 212.134, -17.2248, 0.59 ) }
    dend_38 { pt3dadd( -1.82309, 212.752, -17.4646, 0.59 ) }
    dend_38 { pt3dadd( -1.76847, 213.417, -17.6872, 0.59 ) }
    dend_38 { pt3dadd( -1.68121, 214.811, -18.0447, 0.37 ) }
    dend_38 { pt3dadd( -1.59836, 216.356, -18.3249, 0.29 ) }
    dend_38 { pt3dadd( -1.51312, 217.526, -18.4868, 0.29 ) }
    dend_38 { pt3dadd( -1.44111, 218.318, -18.5795, 0.52 ) }
    dend_38 { pt3dadd( -1.34952, 219.125, -18.6626, 0.52 ) }
    dend_38 { pt3dadd( -1.26909, 219.727, -18.7075, 0.44 ) }
    dend_38 { pt3dadd( -1.18573, 220.389, -18.7423, 0.29 ) }
    dend_38 { pt3dadd( -1.14728, 221.054, -18.7955, 0.29 ) }
    dend_38 { pt3dadd( -1.20439, 221.786, -18.8772, 0.44 ) }
    dend_38 { pt3dadd( -1.36528, 222.563, -18.9923, 0.44 ) }
    dend_38 { pt3dadd( -1.58096, 223.274, -19.1195, 0.52 ) }
    dend_38 { pt3dadd( -1.9655, 224.34, -19.3497, 0.29 ) }
    dend_38 { pt3dadd( -2.31619, 225.184, -19.5439, 0.29 ) }
    dend_38 { pt3dadd( -2.67134, 225.98, -19.7391, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_38 { pt3dadd( -2.89899, 226.493, -19.8723, 0.52 ) }
    dend_38 { pt3dadd( -3.13053, 227.068, -20.0483, 0.52 ) }
    dend_38 { pt3dadd( -3.27106, 227.533, -20.2263, 0.52 ) }
    dend_38 { pt3dadd( -3.37373, 228.418, -20.604, 0.37 ) }
    dend_38 { pt3dadd( -3.3532, 228.943, -20.8355, 0.37 ) }
    dend_38 { pt3dadd( -3.24419, 229.736, -21.1867, 0.37 ) }
    dend_38 { pt3dadd( -3.03814, 230.878, -21.6842, 0.22 ) }
    dend_38 { pt3dadd( -2.86638, 231.894, -22.1161, 0.22 ) }
    dend_38 { pt3dadd( -2.65958, 233.228, -22.6573, 0.22 ) }
    dend_38 { pt3dadd( -2.53054, 234.118, -22.9677, 0.37 ) }
    dend_38 { pt3dadd( -2.44014, 234.993, -23.2202, 0.52 ) }
    dend_38 { pt3dadd( -2.41572, 235.415, -23.33, 0.52 ) }
    dend_38 { pt3dadd( -2.42428, 236.601, -23.5918, 0.22 ) }
    dend_38 { pt3dadd( -2.50661, 237.486, -23.7385, 0.22 ) }
    dend_38 { pt3dadd( -2.84147, 239.145, -23.9393, 0.66 ) }
    dend_38 { pt3dadd( -2.93538, 239.506, -23.9554, 0.66 ) }
    dend_38 { pt3dadd( -3.22196, 240.59, -23.9222, 0.52 ) }
    dend_38 { pt3dadd( -3.3912, 241.33, -23.8519, 0.74 ) }
    dend_38 { pt3dadd( -3.63088, 242.515, -23.6287, 0.29 ) }
    dend_38 { pt3dadd( -3.82613, 243.425, -23.3576, 0.29 ) }
    dend_38 { pt3dadd( -4.02525, 244.321, -23.0007, 0.29 ) }
    dend_38 { pt3dadd( -4.19826, 245.133, -22.6524, 0.29 ) }
    dend_38 { pt3dadd( -4.3763, 245.932, -22.2904, 0.29 ) }
    dend_38 { pt3dadd( -4.5581, 246.776, -21.9542, 0.44 ) }
    dend_38 { pt3dadd( -4.71763, 247.646, -21.6793, 0.29 ) }
    dend_38 { pt3dadd( -4.80809, 248.211, -21.5273, 0.29 ) }
    dend_38 { pt3dadd( -5.00897, 249.299, -21.303, 0.29 ) }
    dend_38 { pt3dadd( -5.20158, 250.134, -21.1756, 0.22 ) }
    dend_38 { pt3dadd( -5.55598, 251.561, -21.0694, 0.22 ) }
    dend_38 { pt3dadd( -5.91222, 252.939, -21.0822, 0.22 ) }
    dend_38 { pt3dadd( -6.10131, 253.667, -21.136, 0.22 ) }
    dend_38 { pt3dadd( -6.28029, 254.387, -21.2238, 0.29 ) }
    dend_38 { pt3dadd( -6.55734, 255.505, -21.4391, 0.29 ) }
    dend_38 { pt3dadd( -6.77668, 256.382, -21.7055, 0.29 ) }
    dend_38 { pt3dadd( -6.9203, 256.98, -21.9438, 0.29 ) }
    dend_38 { pt3dadd( -7.02578, 257.518, -22.1783, 0.29 ) }
    dend_38 { pt3dadd( -7.14565, 258.574, -22.6058, 0.29 ) }
    dend_38 { pt3dadd( -7.23782, 260.035, -23.1381, 0.22 ) }
    dend_38 { pt3dadd( -7.2792, 261.08, -23.4895, 0.37 ) }
    dend_38 { pt3dadd( -7.30324, 261.83, -23.7358, 0.22 ) }
    dend_38 { pt3dadd( -7.3357, 262.99, -24.1194, 0.22 ) }
    dend_38 { pt3dadd( -7.40243, 264.322, -24.5642, 0.22 ) }
    dend_38 { pt3dadd( -7.46775, 265.071, -24.8119, 0.29 ) }
    dend_38 { pt3dadd( -7.5055, 265.409, -24.9225, 0.29 ) }
    dend_38 { pt3dadd( -7.69147, 266.717, -25.4118, 0.22 ) }
    dend_38 { pt3dadd( -7.83786, 267.492, -25.7599, 0.22 ) }
    dend_38 { pt3dadd( -8.00014, 268.204, -26.1293, 0.37 ) }
    dend_38 { pt3dadd( -8.15978, 268.928, -26.5551, 0.37 ) }
    dend_38 { pt3dadd( -8.27482, 269.69, -27.06, 0.22 ) }
    dend_38 { pt3dadd( -8.3856, 270.66, -27.7345, 0.37 ) }
    dend_38 { pt3dadd( -8.45777, 271.444, -28.2924, 0.22 ) }
    dend_38 { pt3dadd( -8.48879, 272.188, -28.8247, 0.22 ) }
    dend_38 { pt3dadd( -8.47611, 273.054, -29.4159, 0.52 ) }
    dend_38 { pt3dadd( -8.41094, 274.377, -30.3139, 0.29 ) }
    dend_38 { pt3dadd( -8.37861, 275.05, -30.779, 0.29 ) }
    dend_38 { pt3dadd( -8.35963, 275.662, -31.194, 0.29 ) }
    dend_38 { pt3dadd( -8.34432, 276.259, -31.59, 0.29 ) }
    dend_38 { pt3dadd( -8.37684, 277.042, -32.0633, 0.29 ) }
    dend_38 { pt3dadd( -8.50914, 277.93, -32.5343, 0.29 ) }
    dend_38 { pt3dadd( -8.77497, 278.825, -32.936, 0.29 ) }
    dend_38 { pt3dadd( -9.14766, 279.676, -33.3103, 0.29 ) }
    dend_38 { pt3dadd( -9.4369, 280.167, -33.5161, 0.29 ) }
    dend_38 { pt3dadd( -9.89739, 280.837, -33.7967, 0.29 ) }
    dend_38 { pt3dadd( -10.0708, 281.053, -33.8821, 0.29 ) }
    dend_38 { pt3dadd( -10.7975, 281.907, -34.1577, 0.29 ) }
    dend_38 { pt3dadd( -11.2818, 282.46, -34.3206, 1.33 ) }
    dend_38 { pt3dadd( -11.5389, 282.758, -34.4111, 1.69 ) }
    dend_38 { pt3dadd( -12.4509, 283.821, -34.7402, 0.22 ) }
    dend_38 { pt3dadd( -12.9193, 284.365, -34.921, 0.22 ) }
    dend_38 { pt3dadd( -13.2431, 284.736, -35.0484, 0.37 ) }
    dend_38 { pt3dadd( -13.7631, 285.301, -35.2461, 0.37 ) }
    dend_38 { pt3dadd( -14.3547, 285.879, -35.45, 0.37 ) }
    dend_38 { pt3dadd( -14.6547, 286.122, -35.5379, 0.37 ) }
    dend_38 { pt3dadd( -15.6736, 286.769, -35.7766, 0.22 ) }
    dend_38 { pt3dadd( -16.201, 287.036, -35.9271, 0.22 ) }
    dend_38 { pt3dadd( -17.051, 287.301, -36.1309, 0.22 ) }
    dend_38 { pt3dadd( -17.7746, 287.402, -36.3034, 0.29 ) }
    dend_38 { pt3dadd( -18.3058, 287.431, -36.4271, 0.29 ) }
    dend_38 { pt3dadd( -18.9514, 287.422, -36.5699, 0.22 ) }
    dend_38 { pt3dadd( -20.1017, 287.284, -36.7922, 0.22 ) }
    dend_38 { pt3dadd( -21.5927, 286.972, -37.0901, 0.22 ) }
    dend_38 { pt3dadd( -22.9475, 286.576, -37.374, 0.22 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 82/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 2.27608, 137.086, -8.93339, 0.22 ) }
    dend_37 { pt3dadd( 3.92753, 137.871, -10.0144, 0.22 ) }
    dend_37 { pt3dadd( 4.67311, 138.184, -10.5039, 0.22 ) }
    dend_37 { pt3dadd( 6.56609, 138.98, -11.7464, 0.22 ) }
    dend_37 { pt3dadd( 7.62693, 139.426, -12.4428, 0.22 ) }
    dend_37 { pt3dadd( 8.25659, 139.69, -12.8561, 0.22 ) }
    dend_37 { pt3dadd( 9.1588, 140.07, -13.4483, 0.37 ) }
    dend_37 { pt3dadd( 10.2528, 140.365, -14.162, 0.37 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 90/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -15.2959, 103.8, -12.8965, 0.29 ) }
    dend_31 { pt3dadd( -15.0742, 103.994, -14.2953, 0.29 ) }
    dend_31 { pt3dadd( -15.044, 104.1, -14.8683, 0.29 ) }
    dend_31 { pt3dadd( -15.0805, 104.201, -15.3301, 0.44 ) }
    dend_31 { pt3dadd( -15.2787, 104.534, -16.5434, 0.59 ) }
    dend_31 { pt3dadd( -15.503, 104.92, -17.6266, 0.44 ) }
    dend_31 { pt3dadd( -15.6528, 105.188, -18.2238, 0.37 ) }
    dend_31 { pt3dadd( -15.8227, 105.434, -18.6366, 0.37 ) }
    dend_31 { pt3dadd( -16.103, 105.823, -19.1534, 0.37 ) }
    dend_31 { pt3dadd( -16.3016, 106.091, -19.4394, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_31 { pt3dadd( -16.7882, 106.728, -19.9858, 0.52 ) }
    dend_31 { pt3dadd( -17.1162, 107.124, -20.3083, 0.52 ) }
    dend_31 { pt3dadd( -17.389, 107.452, -20.5869, 0.52 ) }
    dend_31 { pt3dadd( -17.6459, 107.77, -20.8523, 0.52 ) }
    dend_31 { pt3dadd( -17.9842, 108.193, -21.1832, 0.59 ) }
    dend_31 { pt3dadd( -18.2274, 108.493, -21.4187, 0.44 ) }
    dend_31 { pt3dadd( -18.5811, 108.96, -21.7735, 0.59 ) }
    dend_31 { pt3dadd( -18.8955, 109.471, -22.162, 0.66 ) }
    dend_31 { pt3dadd( -19.0537, 109.831, -22.4166, 0.66 ) }
    dend_31 { pt3dadd( -19.1452, 110.213, -22.6774, 0.37 ) }
    dend_31 { pt3dadd( -19.1989, 110.612, -23.0327, 0.37 ) }
    dend_31 { pt3dadd( -19.2459, 110.954, -23.3907, 0.37 ) }
    dend_31 { pt3dadd( -19.2818, 111.13, -23.6307, 0.81 ) }
    dend_31 { pt3dadd( -19.3366, 111.268, -23.8887, 1.03 ) }
    dend_31 { pt3dadd( -19.5226, 111.454, -24.4791, 1.03 ) }
    dend_31 { pt3dadd( -20.223, 111.653, -26.0633, 0.37 ) }
    dend_31 { pt3dadd( -20.4767, 111.657, -26.4934, 0.29 ) }
    dend_31 { pt3dadd( -20.821, 111.629, -26.9725, 0.29 ) }
    dend_31 { pt3dadd( -21.0623, 111.6, -27.2599, 0.44 ) }
    dend_31 { pt3dadd( -21.5552, 111.55, -27.7382, 0.44 ) }
    dend_31 { pt3dadd( -22.0327, 111.528, -28.0841, 0.44 ) }
    dend_31 { pt3dadd( -22.448, 111.571, -28.2892, 0.44 ) }
    dend_31 { pt3dadd( -22.7849, 111.633, -28.4446, 0.59 ) }
    dend_31 { pt3dadd( -23.0704, 111.684, -28.5605, 0.59 ) }
    dend_31 { pt3dadd( -23.6606, 111.775, -28.777, 0.37 ) }
    dend_31 { pt3dadd( -24.1169, 111.837, -28.9353, 0.37 ) }
    dend_31 { pt3dadd( -24.605, 111.901, -29.1051, 0.37 ) }
    dend_31 { pt3dadd( -25.2475, 111.987, -29.3292, 0.37 ) }
    dend_31 { pt3dadd( -25.948, 112.095, -29.5663, 0.37 ) }
    dend_31 { pt3dadd( -26.4139, 112.182, -29.7149, 0.37 ) }
    dend_31 { pt3dadd( -27.0962, 112.321, -29.909, 0.37 ) }
    dend_31 { pt3dadd( -27.7625, 112.467, -30.0678, 0.37 ) }
    dend_31 { pt3dadd( -28.3653, 112.616, -30.2076, 0.37 ) }
    dend_31 { pt3dadd( -28.781, 112.738, -30.3114, 0.74 ) }
    dend_31 { pt3dadd( -29.1308, 112.856, -30.4033, 0.74 ) }
    dend_31 { pt3dadd( -29.9719, 113.149, -30.6394, 0.37 ) }
    dend_31 { pt3dadd( -30.538, 113.351, -30.8054, 0.37 ) }
    dend_31 { pt3dadd( -31.1388, 113.569, -30.9965, 0.37 ) }
    dend_31 { pt3dadd( -31.5053, 113.725, -31.1239, 0.37 ) }
    dend_31 { pt3dadd( -32.018, 113.971, -31.3199, 0.29 ) }
    dend_31 { pt3dadd( -32.4137, 114.211, -31.4891, 0.29 ) }
    dend_31 { pt3dadd( -32.7079, 114.478, -31.6359, 0.44 ) }
    dend_31 { pt3dadd( -32.871, 114.674, -31.7159, 0.59 ) }
    dend_31 { pt3dadd( -33.0743, 114.963, -31.7835, 0.59 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 44/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -15.2959, 103.8, -12.8965, 0.59 ) }
    dend_26 { pt3dadd( -16.6368, 104.238, -11.9991, 0.59 ) }
    dend_26 { pt3dadd( -17.1974, 104.525, -11.6697, 0.59 ) }
    dend_26 { pt3dadd( -17.8123, 104.892, -11.3755, 0.59 ) }
    dend_26 { pt3dadd( -18.2871, 105.197, -11.1873, 0.59 ) }
    dend_26 { pt3dadd( -18.8174, 105.542, -11.0228, 0.59 ) }
    dend_26 { pt3dadd( -19.6645, 106.069, -10.8332, 0.52 ) }
    dend_26 { pt3dadd( -20.2491, 106.461, -10.787, 0.52 ) }
    dend_26 { pt3dadd( -20.9306, 106.923, -10.7649, 0.66 ) }
    dend_26 { pt3dadd( -21.2917, 107.16, -10.7583, 0.66 ) }
    dend_26 { pt3dadd( -21.8157, 107.475, -10.7386, 0.52 ) }
    dend_26 { pt3dadd( -22.6791, 107.947, -10.659, 0.52 ) }
    dend_26 { pt3dadd( -23.232, 108.248, -10.5723, 0.52 ) }
    dend_26 { pt3dadd( -23.6707, 108.523, -10.4729, 0.52 ) }
    dend_26 { pt3dadd( -24.0478, 108.799, -10.3943, 0.74 ) }
    dend_26 { pt3dadd( -24.4555, 109.104, -10.3356, 0.74 ) }
    dend_26 { pt3dadd( -25.0195, 109.513, -10.3105, 0.37 ) }
    dend_26 { pt3dadd( -25.4844, 109.804, -10.3691, 0.37 ) }
    dend_26 { pt3dadd( -26.1149, 110.117, -10.5438, 0.37 ) }
    dend_26 { pt3dadd( -27.1162, 110.523, -10.84, 0.37 ) }
    dend_26 { pt3dadd( -27.8592, 110.798, -11.0637, 0.29 ) }
    dend_26 { pt3dadd( -28.5313, 111.051, -11.2444, 0.37 ) }
    dend_26 { pt3dadd( -29.206, 111.323, -11.3642, 0.44 ) }
    dend_26 { pt3dadd( -29.6827, 111.533, -11.4068, 0.66 ) }
    dend_26 { pt3dadd( -30.3985, 111.888, -11.4231, 0.59 ) }
    dend_26 { pt3dadd( -30.9289, 112.189, -11.3974, 0.44 ) }
    dend_26 { pt3dadd( -31.6326, 112.632, -11.3622, 0.44 ) }
    dend_26 { pt3dadd( -32.3384, 113.069, -11.3578, 0.44 ) }
    dend_26 { pt3dadd( -32.9633, 113.41, -11.3902, 0.44 ) }
    dend_26 { pt3dadd( -33.7471, 113.766, -11.4286, 0.37 ) }
    dend_26 { pt3dadd( -34.3037, 113.981, -11.4625, 0.37 ) }
    dend_26 { pt3dadd( -34.8463, 114.149, -11.5041, 0.37 ) }
    dend_26 { pt3dadd( -36.0854, 114.467, -11.6337, 0.37 ) }
    dend_26 { pt3dadd( -36.6412, 114.6, -11.7303, 0.37 ) }
    dend_26 { pt3dadd( -37.7133, 114.916, -11.964, 0.29 ) }
    dend_26 { pt3dadd( -38.5215, 115.239, -12.1828, 0.29 ) }
    dend_26 { pt3dadd( -39.4039, 115.687, -12.4806, 0.29 ) }
    dend_26 { pt3dadd( -39.7092, 115.874, -12.6058, 0.81 ) }
    dend_26 { pt3dadd( -40.4623, 116.401, -13.0781, 0.81 ) }
    dend_26 { pt3dadd( -41.2081, 116.891, -13.6849, 0.37 ) }
    dend_26 { pt3dadd( -42.0041, 117.349, -14.4331, 0.29 ) }
    dend_26 { pt3dadd( -42.3877, 117.538, -14.7991, 0.29 ) }
    dend_26 { pt3dadd( -42.8058, 117.707, -15.1686, 0.29 ) }
    dend_26 { pt3dadd( -44.176, 118.098, -16.2756, 0.29 ) }
    dend_26 { pt3dadd( -45.3792, 118.267, -17.1388, 0.29 ) }
    dend_26 { pt3dadd( -45.8594, 118.271, -17.4696, 0.52 ) }
    dend_26 { pt3dadd( -46.1471, 118.253, -17.6583, 0.52 ) }
    dend_26 { pt3dadd( -46.8289, 118.197, -18.0835, 0.29 ) }
    dend_26 { pt3dadd( -47.5465, 118.137, -18.4707, 0.29 ) }
    dend_26 { pt3dadd( -48.3678, 118.066, -18.7595, 0.29 ) }
    dend_26 { pt3dadd( -49.0236, 118.012, -18.9475, 0.52 ) }
    dend_26 { pt3dadd( -49.2503, 117.991, -19.0172, 0.52 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 96/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -1.37087, -152.382, 8.75848, 0.22 ) }
    dend_21 { pt3dadd( -2.18344, -152.469, 8.41477, 0.22 ) }
    dend_21 { pt3dadd( -3.19313, -152.577, 7.98768, 0.22 ) }
    dend_21 { pt3dadd( -13.9539, -153.736, 4.2217, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 0/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -1.37087, -152.382, 8.75848, 0.22 ) }
    dend_20 { pt3dadd( -2.54212, -152.396, 8.5325, 0.22 ) }
    dend_20 { pt3dadd( -3.75802, -152.411, 8.2979, 0.22 ) }
    dend_20 { pt3dadd( -4.8673, -152.424, 8.08387, 0.22 ) }
    dend_20 { pt3dadd( -6.29717, -152.441, 7.80799, 0.22 ) }
    dend_20 { pt3dadd( -8.29135, -152.465, 7.42323, 0.22 ) }
    dend_20 { pt3dadd( -9.17352, -152.475, 7.25302, 0.22 ) }
    dend_20 { pt3dadd( -22.2895, -153.901, 4.91008, 0.22 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 8/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 4.55308, -245.638, 34.2347, 0.96 ) }
    dend_5 { pt3dadd( 4.63195, -246.95, 34.0972, 0.96 ) }
    dend_5 { pt3dadd( 4.70182, -247.913, 34.1134, 0.74 ) }
    dend_5 { pt3dadd( 4.75671, -248.694, 34.1954, 0.66 ) }
    dend_5 { pt3dadd( 4.80371, -249.508, 34.3405, 1.11 ) }
    dend_5 { pt3dadd( 4.83048, -249.964, 34.4517, 1.25 ) }
    dend_5 { pt3dadd( 4.9048, -251.38, 34.8478, 0.88 ) }
    dend_5 { pt3dadd( 4.93893, -252.118, 35.1445, 0.29 ) }
    dend_5 { pt3dadd( 4.93242, -252.867, 35.4998, 0.29 ) }
    dend_5 { pt3dadd( 4.90369, -253.739, 36.0003, 0.29 ) }
    dend_5 { pt3dadd( 4.87659, -254.418, 36.4316, 0.59 ) }
    dend_5 { pt3dadd( 4.85549, -254.917, 36.7582, 0.66 ) }
    dend_5 { pt3dadd( 4.81535, -255.568, 37.1691, 0.29 ) }
    dend_5 { pt3dadd( 4.80523, -255.956, 37.4257, 0.29 ) }
    dend_5 { pt3dadd( 4.82792, -257.172, 38.1963, 1.11 ) }
    dend_5 { pt3dadd( 4.86953, -257.755, 38.5566, 1.25 ) }
    dend_5 { pt3dadd( 4.96516, -258.791, 39.1832, 0.74 ) }
    dend_5 { pt3dadd( 5.01002, -259.124, 39.3836, 1.03 ) }
    dend_5 { pt3dadd( 5.1136, -259.674, 39.6975, 1.03 ) }
    dend_5 { pt3dadd( 5.2782, -260.439, 40.1, 0.88 ) }
    dend_5 { pt3dadd( 5.47299, -261.478, 40.5239, 0.52 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 29/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 4.55308, -245.638, 34.2347, 0.22 ) }
    dend_4 { pt3dadd( 4.48371, -247.286, 34.1407, 0.22 ) }
    dend_4 { pt3dadd( 4.42917, -248.883, 34.0661, 0.22 ) }
    dend_4 { pt3dadd( 4.45469, -250.043, 34.0202, 0.22 ) }
    dend_4 { pt3dadd( 4.55699, -251.383, 33.9652, 0.22 ) }
    dend_4 { pt3dadd( 4.8041, -253.178, 33.9109, 0.22 ) }
    dend_4 { pt3dadd( 5.00165, -254.446, 33.9196, 0.22 ) }
    dend_4 { pt3dadd( 5.27214, -255.737, 34.0064, 0.22 ) }
    dend_4 { pt3dadd( 5.55437, -256.91, 34.1841, 0.22 ) }
    dend_4 { pt3dadd( 5.66671, -257.624, 34.3312, 0.22 ) }
    dend_4 { pt3dadd( 5.59375, -259.338, 34.8007, 0.22 ) }
    dend_4 { pt3dadd( 5.07649, -260.549, 35.2376, 0.22 ) }
    dend_4 { pt3dadd( 4.34446, -261.519, 35.6388, 0.22 ) }
    dend_4 { pt3dadd( 3.69303, -262.047, 35.8757, 0.22 ) }
    dend_4 { pt3dadd( 1.77059, -263.265, 36.422, 0.22 ) }
    dend_4 { pt3dadd( 0.0693835, -264.104, 36.7804, 0.22 ) }
    dend_4 { pt3dadd( -1.09818, -264.445, 36.8904, 0.22 ) }
    dend_4 { pt3dadd( -2.17536, -276.455, 38.0574, 0.22 ) }
    // Section: dend_104, id: dend_104, parent: dend_102 (entry count 47/100)
    dend_104 { pt3dclear() }
    dend_104 { pt3dadd( 12.3615, 50.936, -105.109, 0.37 ) }
    dend_104 { pt3dadd( 12.3612, 50.3872, -104.934, 0.37 ) }
    dend_104 { pt3dadd( 12.3978, 48.9781, -104.493, 0.29 ) }
    dend_104 { pt3dadd( 12.4375, 48.0921, -104.235, 0.44 ) }
    dend_104 { pt3dadd( 12.4742, 47.3057, -104.028, 0.37 ) }
    dend_104 { pt3dadd( 12.6269, 45.265, -103.41, 0.96 ) }
    dend_104 { pt3dadd( 12.7213, 44.3643, -103.118, 0.81 ) }
    dend_104 { pt3dadd( 12.8338, 43.5789, -102.825, 0.59 ) }
    dend_104 { pt3dadd( 12.9784, 42.8972, -102.545, 0.59 ) }
    dend_104 { pt3dadd( 13.1778, 42.0719, -102.214, 0.44 ) }
    dend_104 { pt3dadd( 13.5823, 40.4096, -101.542, 0.66 ) }
    dend_104 { pt3dadd( 13.7184, 39.8551, -101.313, 0.66 ) }
    dend_104 { pt3dadd( 13.8533, 39.3503, -101.064, 0.66 ) }
    dend_104 { pt3dadd( 14.1098, 38.4851, -100.627, 0.37 ) }
    dend_104 { pt3dadd( 14.3872, 37.4884, -100.145, 0.37 ) }
    dend_104 { pt3dadd( 14.7566, 36.0246, -99.5128, 0.74 ) }
    dend_104 { pt3dadd( 15.0338, 34.8047, -99.0731, 0.44 ) }
    dend_104 { pt3dadd( 15.3732, 33.2876, -98.5876, 0.37 ) }
    dend_104 { pt3dadd( 15.6704, 31.9476, -98.2222, 0.29 ) }
    dend_104 { pt3dadd( 15.902, 30.8872, -97.9785, 0.44 ) }
    dend_104 { pt3dadd( 16.1316, 29.8172, -97.7935, 0.52 ) }
    dend_104 { pt3dadd( 16.2617, 29.0524, -97.7246, 0.59 ) }
    dend_104 { pt3dadd( 16.368, 28.0458, -97.6831, 0.59 ) }
    dend_104 { pt3dadd( 16.4533, 26.8109, -97.6571, 0.44 ) }
    dend_104 { pt3dadd( 16.5013, 25.8498, -97.6193, 0.96 ) }
    dend_104 { pt3dadd( 16.5032, 25.4251, -97.6225, 1.18 ) }
    dend_104 { pt3dadd( 16.4841, 24.8734, -97.6506, 1.18 ) }
    dend_104 { pt3dadd( 16.4286, 24.053, -97.7219, 0.81 ) }
    dend_104 { pt3dadd( 16.3467, 23.167, -97.8307, 0.66 ) }
    dend_104 { pt3dadd( 16.2797, 22.2656, -97.9731, 0.66 ) }
    dend_104 { pt3dadd( 16.1805, 20.4524, -98.3066, 0.29 ) }
    dend_104 { pt3dadd( 16.1362, 19.589, -98.4896, 0.29 ) }
    dend_104 { pt3dadd( 16.1283, 19.4241, -98.5317, 0.44 ) }
    dend_104 { pt3dadd( 16.0997, 18.7751, -98.7397, 0.15 ) }
    dend_104 { pt3dadd( 16.0507, 18.0918, -98.9997, 0.15 ) }
    // Section: dend_103, id: dend_103, parent: dend_102 (entry count 82/100)
    dend_103 { pt3dclear() }
    dend_103 { pt3dadd( 12.3615, 50.936, -105.109, 1.03 ) }
    dend_103 { pt3dadd( 12.7687, 51.2111, -106.28, 1.03 ) }
    dend_103 { pt3dadd( 13.0979, 51.5559, -107.392, 1.18 ) }
    dend_103 { pt3dadd( 13.4724, 52.0996, -108.793, 1.4 ) }
    dend_103 { pt3dadd( 14.3457, 53.4695, -111.906, 1.18 ) }
    dend_103 { pt3dadd( 14.7387, 54.092, -113.176, 1.03 ) }
    dend_103 { pt3dadd( 15.0797, 54.6051, -114.145, 1.03 ) }
    dend_103 { pt3dadd( 15.8287, 55.6225, -115.939, 0.96 ) }
    dend_103 { pt3dadd( 16.5112, 56.4932, -117.313, 0.88 ) }
    dend_103 { pt3dadd( 16.8632, 56.9321, -117.916, 0.88 ) }
    dend_103 { pt3dadd( 17.276, 57.4884, -118.512, 1.33 ) }
    dend_103 { pt3dadd( 17.8955, 58.3687, -119.455, 0.96 ) }
    dend_103 { pt3dadd( 18.4128, 59.1757, -120.369, 0.81 ) }
    dend_103 { pt3dadd( 19.0959, 60.3815, -121.784, 0.81 ) }
    dend_103 { pt3dadd( 19.5289, 61.4261, -123.001, 0.81 ) }
    dend_103 { pt3dadd( 19.6856, 62.0404, -123.692, 0.66 ) }
    dend_103 { pt3dadd( 19.824, 63.132, -124.813, 0.66 ) }
    dend_103 { pt3dadd( 19.8576, 64.4951, -126.087, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_103 { pt3dadd( 19.8149, 65.3652, -126.844, 1.03 ) }
    dend_103 { pt3dadd( 19.6811, 66.3145, -127.578, 0.74 ) }
    dend_103 { pt3dadd( 19.4214, 67.4428, -128.361, 0.74 ) }
    dend_103 { pt3dadd( 19.1771, 68.3176, -128.949, 1.11 ) }
    dend_103 { pt3dadd( 18.7903, 69.6224, -129.731, 1.47 ) }
    dend_103 { pt3dadd( 18.706, 69.876, -129.892, 1.47 ) }
    dend_103 { pt3dadd( 18.0593, 71.6119, -130.995, 0.66 ) }
    dend_103 { pt3dadd( 17.5802, 72.8503, -131.848, 0.88 ) }
    dend_103 { pt3dadd( 17.2227, 73.8862, -132.563, 0.96 ) }
    dend_103 { pt3dadd( 16.9416, 74.8823, -133.243, 1.18 ) }
    dend_103 { pt3dadd( 16.5519, 76.6741, -134.334, 1.4 ) }
    dend_103 { pt3dadd( 16.3918, 77.8709, -135.001, 0.66 ) }
    dend_103 { pt3dadd( 16.3112, 80.0355, -136.1, 0.96 ) }
    dend_103 { pt3dadd( 16.3308, 81.0327, -136.56, 0.52 ) }
    dend_103 { pt3dadd( 16.3904, 82.3495, -137.085, 0.52 ) }
    dend_103 { pt3dadd( 16.4466, 83.4989, -137.473, 0.81 ) }
    dend_103 { pt3dadd( 16.4808, 84.5538, -137.736, 0.96 ) }
    dend_103 { pt3dadd( 16.4984, 85.594, -137.958, 0.96 ) }
    dend_103 { pt3dadd( 16.5226, 86.6736, -138.124, 0.74 ) }
    dend_103 { pt3dadd( 16.5601, 88.5942, -138.388, 0.66 ) }
    dend_103 { pt3dadd( 16.6106, 89.6624, -138.515, 0.66 ) }
    dend_103 { pt3dadd( 16.7146, 90.8863, -138.667, 0.74 ) }
    dend_103 { pt3dadd( 16.8808, 92.252, -138.847, 0.74 ) }
    dend_103 { pt3dadd( 17.0779, 93.533, -139.035, 0.74 ) }
    dend_103 { pt3dadd( 17.3864, 95.2277, -139.307, 1.11 ) }
    dend_103 { pt3dadd( 17.5522, 96.0831, -139.442, 1.18 ) }
    dend_103 { pt3dadd( 17.6669, 96.7277, -139.559, 1.18 ) }
    dend_103 { pt3dadd( 17.8112, 97.9938, -139.799, 0.96 ) }
    dend_103 { pt3dadd( 17.8571, 99.9213, -140.154, 0.74 ) }
    dend_103 { pt3dadd( 17.7908, 101.082, -140.347, 0.66 ) }
    dend_103 { pt3dadd( 17.625, 102.201, -140.502, 0.52 ) }
    dend_103 { pt3dadd( 17.3897, 103.181, -140.602, 0.52 ) }
    dend_103 { pt3dadd( 16.9364, 104.548, -140.678, 0.81 ) }
    dend_103 { pt3dadd( 16.5896, 105.356, -140.677, 1.03 ) }
    dend_103 { pt3dadd( 16.199, 106.1, -140.672, 0.66 ) }
    dend_103 { pt3dadd( 15.6007, 107.144, -140.685, 0.81 ) }
    dend_103 { pt3dadd( 15.1087, 107.985, -140.709, 0.81 ) }
    dend_103 { pt3dadd( 14.5606, 108.942, -140.745, 0.81 ) }
    dend_103 { pt3dadd( 14.0824, 109.803, -140.778, 0.66 ) }
    dend_103 { pt3dadd( 13.6143, 110.617, -140.823, 0.66 ) }
    dend_103 { pt3dadd( 12.8746, 111.816, -140.905, 0.81 ) }
    dend_103 { pt3dadd( 12.3893, 112.532, -140.959, 0.81 ) }
    dend_103 { pt3dadd( 11.6607, 113.512, -141.041, 0.66 ) }
    dend_103 { pt3dadd( 10.975, 114.366, -141.167, 0.81 ) }
    dend_103 { pt3dadd( 10.3236, 115.138, -141.314, 0.66 ) }
    dend_103 { pt3dadd( 9.70538, 115.922, -141.574, 0.66 ) }
    dend_103 { pt3dadd( 9.12559, 116.747, -141.961, 0.66 ) }
    dend_103 { pt3dadd( 8.61034, 117.685, -142.491, 0.88 ) }
    dend_103 { pt3dadd( 8.20867, 118.915, -143.331, 0.88 ) }
    dend_103 { pt3dadd( 8.19445, 119.608, -143.89, 1.03 ) }
    dend_103 { pt3dadd( 8.65796, 121.503, -145.923, 0.37 ) }
    dend_103 { pt3dadd( 8.85514, 121.887, -146.604, 0.37 ) }
    dend_103 { pt3dadd( 9.12083, 122.217, -147.431, 0.29 ) }
    dend_103 { pt3dadd( 9.38008, 122.506, -148.492, 0.29 ) }
    dend_103 { pt3dadd( 9.7198, 122.904, -150.267, 1.03 ) }
    dend_103 { pt3dadd( 10.1646, 123.571, -153.392, 1.62 ) }
    dend_103 { pt3dadd( 10.6032, 124.516, -157.775, 1.18 ) }
    dend_103 { pt3dadd( 10.6922, 124.898, -159.385, 0.81 ) }
    dend_103 { pt3dadd( 10.7292, 126.357, -164.69, 0.52 ) }
    dend_103 { pt3dadd( 10.7072, 126.628, -165.516, 0.52 ) }
    dend_103 { pt3dadd( 10.6286, 127.188, -166.911, 0.52 ) }
    dend_103 { pt3dadd( 10.5477, 127.733, -167.848, 0.52 ) }
    dend_103 { pt3dadd( 10.4728, 128.461, -168.621, 0.52 ) }
    dend_103 { pt3dadd( 10.4172, 129.782, -169.612, 0.74 ) }
    dend_103 { pt3dadd( 10.4961, 130.697, -170.053, 0.44 ) }
    dend_103 { pt3dadd( 10.5984, 131.54, -170.447, 0.44 ) }
    dend_103 { pt3dadd( 10.716, 132.297, -170.768, 0.66 ) }
    dend_103 { pt3dadd( 10.9354, 133.53, -171.227, 0.37 ) }
    dend_103 { pt3dadd( 11.1042, 134.352, -171.488, 0.37 ) }
    dend_103 { pt3dadd( 11.339, 135.746, -171.86, 0.52 ) }
    dend_103 { pt3dadd( 11.4707, 137.334, -172.204, 0.52 ) }
    dend_103 { pt3dadd( 11.5124, 138.536, -172.38, 0.74 ) }
    dend_103 { pt3dadd( 11.524, 139.186, -172.44, 0.74 ) }
    dend_103 { pt3dadd( 11.5492, 140.354, -172.484, 0.52 ) }
    dend_103 { pt3dadd( 11.6052, 141.505, -172.446, 0.74 ) }
    dend_103 { pt3dadd( 11.7185, 143.418, -172.244, 0.29 ) }
    dend_103 { pt3dadd( 11.7719, 144.606, -172.083, 0.52 ) }
    dend_103 { pt3dadd( 11.7764, 145.674, -171.917, 0.66 ) }
    dend_103 { pt3dadd( 11.7708, 146.411, -171.789, 0.66 ) }
    dend_103 { pt3dadd( 11.8249, 147.914, -171.5, 0.44 ) }
    dend_103 { pt3dadd( 11.9403, 148.902, -171.31, 0.44 ) }
    dend_103 { pt3dadd( 12.1229, 149.886, -171.142, 0.44 ) }
    dend_103 { pt3dadd( 12.423, 151.262, -171.042, 0.59 ) }
    dend_103 { pt3dadd( 12.7207, 152.51, -171.111, 0.96 ) }
    dend_103 { pt3dadd( 13.0706, 153.885, -171.437, 0.37 ) }
    dend_103 { pt3dadd( 13.3825, 154.996, -171.885, 0.37 ) }
    dend_103 { pt3dadd( 13.6891, 155.946, -172.385, 0.81 ) }
    dend_103 { pt3dadd( 14.2925, 157.645, -173.403, 0.44 ) }
    dend_103 { pt3dadd( 14.7498, 158.924, -174.216, 0.44 ) }
    dend_103 { pt3dadd( 15.1776, 160.225, -175.133, 0.44 ) }
    dend_103 { pt3dadd( 15.4375, 161.195, -175.859, 0.74 ) }
    dend_103 { pt3dadd( 15.6338, 162.027, -176.5, 0.74 ) }
    dend_103 { pt3dadd( 15.8839, 163.047, -177.253, 0.22 ) }
    dend_103 { pt3dadd( 16.1736, 164.035, -177.776, 0.22 ) }
    // Section: dend_99, id: dend_99, parent: dend_89 (entry count 94/100)
    dend_99 { pt3dclear() }
    dend_99 { pt3dadd( 12.7662, 95.7027, -77.7669, 0.44 ) }
    dend_99 { pt3dadd( 13.1433, 96.5469, -77.7234, 0.44 ) }
    dend_99 { pt3dadd( 13.4265, 97.2498, -77.7323, 0.44 ) }
    dend_99 { pt3dadd( 13.8335, 98.3402, -77.8334, 0.81 ) }
    dend_99 { pt3dadd( 14.0489, 98.914, -77.9321, 0.81 ) }
    dend_99 { pt3dadd( 14.2593, 99.4953, -78.0708, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_99 { pt3dadd( 14.378, 99.8498, -78.1666, 1.03 ) }
    dend_99 { pt3dadd( 14.5378, 100.517, -78.3553, 0.88 ) }
    dend_99 { pt3dadd( 14.6474, 101.09, -78.5539, 0.74 ) }
    dend_99 { pt3dadd( 14.7609, 101.679, -78.7838, 0.96 ) }
    dend_99 { pt3dadd( 14.8651, 102.213, -78.989, 0.96 ) }
    dend_99 { pt3dadd( 14.9946, 102.878, -79.2223, 0.52 ) }
    dend_99 { pt3dadd( 15.1174, 103.474, -79.3658, 0.52 ) }
    dend_99 { pt3dadd( 15.1751, 103.738, -79.3746, 0.74 ) }
    dend_99 { pt3dadd( 15.2964, 104.209, -79.2676, 0.44 ) }
    dend_99 { pt3dadd( 15.4398, 104.734, -79.0364, 0.81 ) }
    dend_99 { pt3dadd( 15.5702, 105.198, -78.7618, 0.81 ) }
    dend_99 { pt3dadd( 15.755, 105.941, -78.2431, 0.88 ) }
    dend_99 { pt3dadd( 15.8853, 106.67, -77.6835, 1.11 ) }
    dend_99 { pt3dadd( 15.9591, 107.44, -77.0843, 1.11 ) }
    dend_99 { pt3dadd( 15.9713, 108.01, -76.647, 0.52 ) }
    dend_99 { pt3dadd( 15.9709, 108.314, -76.4126, 0.52 ) }
    dend_99 { pt3dadd( 15.9679, 108.717, -76.1159, 0.52 ) }
    dend_99 { pt3dadd( 15.9994, 109.094, -75.8653, 0.52 ) }
    dend_99 { pt3dadd( 16.1162, 109.501, -75.6051, 0.52 ) }
    dend_99 { pt3dadd( 16.3462, 109.895, -75.3421, 0.52 ) }
    dend_99 { pt3dadd( 16.7318, 110.373, -75.0048, 0.74 ) }
    dend_99 { pt3dadd( 17.0442, 110.728, -74.7741, 0.66 ) }
    dend_99 { pt3dadd( 17.6537, 111.432, -74.3738, 0.52 ) }
    dend_99 { pt3dadd( 17.9801, 111.85, -74.1732, 0.52 ) }
    dend_99 { pt3dadd( 18.2825, 112.328, -73.9824, 0.52 ) }
    dend_99 { pt3dadd( 18.5223, 112.897, -73.8017, 0.66 ) }
    dend_99 { pt3dadd( 18.6471, 113.452, -73.6559, 0.66 ) }
    dend_99 { pt3dadd( 18.7008, 114.066, -73.4923, 0.37 ) }
    dend_99 { pt3dadd( 18.6884, 114.699, -73.3203, 0.37 ) }
    dend_99 { pt3dadd( 18.6573, 115.172, -73.1747, 0.37 ) }
    dend_99 { pt3dadd( 18.578, 115.971, -72.8943, 0.74 ) }
    dend_99 { pt3dadd( 18.4881, 116.659, -72.6175, 0.96 ) }
    dend_99 { pt3dadd( 18.3697, 117.245, -72.3619, 0.96 ) }
    dend_99 { pt3dadd( 18.1833, 117.852, -72.0356, 0.44 ) }
    dend_99 { pt3dadd( 17.9791, 118.342, -71.7277, 0.37 ) }
    dend_99 { pt3dadd( 17.7483, 118.804, -71.4079, 0.74 ) }
    dend_99 { pt3dadd( 17.5069, 119.207, -71.1149, 0.29 ) }
    dend_99 { pt3dadd( 17.0489, 119.869, -70.6245, 0.29 ) }
    dend_99 { pt3dadd( 16.3033, 120.799, -69.9766, 1.03 ) }
    dend_99 { pt3dadd( 15.9219, 121.223, -69.7045, 0.96 ) }
    dend_99 { pt3dadd( 15.5787, 121.609, -69.5001, 0.44 ) }
    dend_99 { pt3dadd( 15.3634, 121.883, -69.3903, 0.44 ) }
    dend_99 { pt3dadd( 15.1189, 122.274, -69.287, 0.44 ) }
    dend_99 { pt3dadd( 14.6988, 123.15, -69.0883, 0.52 ) }
    dend_99 { pt3dadd( 14.487, 123.71, -68.9969, 0.74 ) }
    dend_99 { pt3dadd( 14.2049, 124.689, -68.8153, 0.37 ) }
    dend_99 { pt3dadd( 14.1142, 125.199, -68.6975, 0.37 ) }
    dend_99 { pt3dadd( 14.0807, 125.781, -68.5381, 0.37 ) }
    dend_99 { pt3dadd( 14.1437, 126.812, -68.2322, 0.52 ) }
    dend_99 { pt3dadd( 14.2185, 127.309, -68.0679, 0.52 ) }
    dend_99 { pt3dadd( 14.3053, 127.796, -67.9102, 0.52 ) }
    dend_99 { pt3dadd( 14.4254, 128.441, -67.7197, 0.52 ) }
    dend_99 { pt3dadd( 14.5389, 129.139, -67.5449, 0.74 ) }
    dend_99 { pt3dadd( 14.5983, 129.616, -67.4443, 0.74 ) }
    dend_99 { pt3dadd( 14.6576, 130.363, -67.3214, 0.44 ) }
    dend_99 { pt3dadd( 14.6851, 130.984, -67.2005, 0.44 ) }
    dend_99 { pt3dadd( 14.6983, 131.435, -67.1004, 0.59 ) }
    dend_99 { pt3dadd( 14.7359, 132.093, -66.9433, 0.59 ) }
    dend_99 { pt3dadd( 14.7895, 132.634, -66.7919, 0.74 ) }
    dend_99 { pt3dadd( 14.8813, 133.268, -66.5904, 0.81 ) }
    dend_99 { pt3dadd( 15.054, 134.03, -66.3067, 0.52 ) }
    dend_99 { pt3dadd( 15.1954, 134.508, -66.0985, 0.52 ) }
    dend_99 { pt3dadd( 15.4287, 135.163, -65.7843, 0.52 ) }
    dend_99 { pt3dadd( 15.6289, 135.609, -65.5604, 0.52 ) }
    dend_99 { pt3dadd( 15.7942, 135.911, -65.4312, 0.52 ) }
    dend_99 { pt3dadd( 16.2116, 136.586, -65.2296, 0.74 ) }
    dend_99 { pt3dadd( 16.6515, 137.281, -65.1217, 0.59 ) }
    dend_99 { pt3dadd( 17.0288, 137.932, -65.1015, 0.59 ) }
    dend_99 { pt3dadd( 17.2382, 138.395, -65.14, 0.96 ) }
    dend_99 { pt3dadd( 17.468, 139.124, -65.2673, 0.59 ) }
    dend_99 { pt3dadd( 17.6101, 139.878, -65.4362, 0.59 ) }
    dend_99 { pt3dadd( 17.6557, 140.509, -65.6055, 0.44 ) }
    dend_99 { pt3dadd( 17.6421, 141.033, -65.7518, 0.44 ) }
    dend_99 { pt3dadd( 17.5734, 141.732, -65.9405, 0.44 ) }
    dend_99 { pt3dadd( 17.4935, 142.337, -66.0783, 0.37 ) }
    dend_99 { pt3dadd( 17.3951, 143.087, -66.2018, 0.29 ) }
    dend_99 { pt3dadd( 17.3632, 143.442, -66.2453, 0.44 ) }
    dend_99 { pt3dadd( 17.3587, 144.186, -66.3107, 0.44 ) }
    dend_99 { pt3dadd( 17.3897, 144.501, -66.3301, 0.29 ) }
    dend_99 { pt3dadd( 17.5055, 145.035, -66.3469, 0.29 ) }
    dend_99 { pt3dadd( 17.6427, 145.473, -66.3477, 0.44 ) }
    dend_99 { pt3dadd( 17.8304, 145.922, -66.333, 0.44 ) }
    dend_99 { pt3dadd( 18.0645, 146.379, -66.303, 0.44 ) }
    dend_99 { pt3dadd( 18.3819, 146.923, -66.2461, 0.29 ) }
    dend_99 { pt3dadd( 18.5983, 147.297, -66.1988, 0.29 ) }
    dend_99 { pt3dadd( 18.7546, 147.581, -66.1719, 0.44 ) }
    dend_99 { pt3dadd( 18.9895, 148.048, -66.1493, 0.44 ) }
    dend_99 { pt3dadd( 19.1908, 148.517, -66.1566, 0.22 ) }
    dend_99 { pt3dadd( 19.3318, 148.996, -66.2128, 0.29 ) }
    dend_99 { pt3dadd( 19.3707, 149.349, -66.2936, 0.29 ) }
    dend_99 { pt3dadd( 19.3159, 149.862, -66.461, 0.29 ) }
    dend_99 { pt3dadd( 19.2394, 150.219, -66.6028, 0.59 ) }
    dend_99 { pt3dadd( 19.1598, 150.54, -66.7526, 0.59 ) }
    dend_99 { pt3dadd( 19.0448, 151.039, -67.0324, 0.29 ) }
    dend_99 { pt3dadd( 18.9836, 151.442, -67.3253, 0.29 ) }
    dend_99 { pt3dadd( 18.9655, 151.845, -67.6645, 0.44 ) }
    dend_99 { pt3dadd( 18.9858, 152.363, -68.0954, 0.44 ) }
    dend_99 { pt3dadd( 19.042, 152.916, -68.537, 0.74 ) }
    dend_99 { pt3dadd( 19.1238, 153.405, -68.9152, 1.11 ) }
    dend_99 { pt3dadd( 19.3179, 154.304, -69.5962, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_99 { pt3dadd( 19.3901, 154.642, -69.8486, 0.66 ) }
    dend_99 { pt3dadd( 19.5033, 155.465, -70.4619, 0.44 ) }
    dend_99 { pt3dadd( 19.5245, 155.926, -70.8064, 0.37 ) }
    dend_99 { pt3dadd( 19.5127, 156.457, -71.1808, 0.37 ) }
    dend_99 { pt3dadd( 19.4378, 157.241, -71.6833, 0.96 ) }
    dend_99 { pt3dadd( 19.3774, 157.634, -71.9066, 1.4 ) }
    dend_99 { pt3dadd( 19.2181, 158.499, -72.3848, 0.59 ) }
    dend_99 { pt3dadd( 19.0622, 159.257, -72.7916, 0.37 ) }
    dend_99 { pt3dadd( 18.9456, 159.783, -73.0309, 0.37 ) }
    dend_99 { pt3dadd( 18.8354, 160.282, -73.2077, 0.29 ) }
    dend_99 { pt3dadd( 18.7038, 160.972, -73.3485, 0.44 ) }
    dend_99 { pt3dadd( 18.6376, 161.439, -73.3631, 0.44 ) }
    dend_99 { pt3dadd( 18.5739, 162.101, -73.2705, 0.29 ) }
    dend_99 { pt3dadd( 18.4897, 162.997, -73.0761, 0.44 ) }
    dend_99 { pt3dadd( 18.4387, 163.562, -72.9241, 0.44 ) }
    dend_99 { pt3dadd( 18.3611, 164.627, -72.5723, 0.88 ) }
    dend_99 { pt3dadd( 18.269, 165.709, -72.1179, 0.44 ) }
    dend_99 { pt3dadd( 18.2184, 166.232, -71.8389, 0.37 ) }
    // Section: dend_90, id: dend_90, parent: dend_89 (entry count 18/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( 12.7662, 95.7027, -77.7669, 0.52 ) }
    dend_90 { pt3dadd( 11.0685, 97.3187, -77.411, 0.52 ) }
    dend_90 { pt3dadd( 9.86434, 98.4135, -77.2235, 0.44 ) }
    dend_90 { pt3dadd( 9.02128, 99.2423, -77.1603, 0.44 ) }
    dend_90 { pt3dadd( 8.26559, 100.08, -77.138, 0.59 ) }
    dend_90 { pt3dadd( 7.69065, 100.788, -77.1519, 0.74 ) }
    dend_90 { pt3dadd( 6.86219, 101.87, -77.266, 0.44 ) }
    dend_90 { pt3dadd( 6.15985, 102.845, -77.5126, 0.29 ) }
    dend_90 { pt3dadd( 5.26665, 104.114, -77.9644, 0.44 ) }
    dend_90 { pt3dadd( 4.65313, 104.958, -78.3201, 0.37 ) }
    dend_90 { pt3dadd( 3.92831, 105.99, -78.8176, 0.37 ) }
    dend_90 { pt3dadd( 2.77084, 107.82, -79.7762, 0.74 ) }
    dend_90 { pt3dadd( 2.10568, 109.031, -80.4362, 0.88 ) }
    dend_90 { pt3dadd( 1.84924, 109.555, -80.712, 0.88 ) }
    dend_90 { pt3dadd( 1.4374, 110.485, -81.1743, 0.37 ) }
    dend_90 { pt3dadd( 1.05438, 111.54, -81.6456, 0.37 ) }
    dend_90 { pt3dadd( 0.746558, 112.804, -82.0491, 0.37 ) }
    dend_90 { pt3dadd( 0.629139, 113.529, -82.164, 0.52 ) }
    dend_90 { pt3dadd( 0.465155, 114.32, -82.2176, 0.52 ) }
    dend_90 { pt3dadd( 0.106778, 115.396, -82.2266, 0.66 ) }
    dend_90 { pt3dadd( -0.330529, 116.304, -82.2034, 0.66 ) }
    dend_90 { pt3dadd( -0.973002, 117.309, -82.1151, 0.66 ) }
    dend_90 { pt3dadd( -1.51352, 118.021, -82.0338, 0.37 ) }
    dend_90 { pt3dadd( -2.17999, 118.805, -81.9292, 0.44 ) }
    dend_90 { pt3dadd( -3.31947, 120.076, -81.7543, 0.44 ) }
    dend_90 { pt3dadd( -4.0936, 120.89, -81.639, 0.59 ) }
    dend_90 { pt3dadd( -4.99918, 121.798, -81.5208, 0.66 ) }
    dend_90 { pt3dadd( -5.63325, 122.431, -81.4535, 0.66 ) }
    dend_90 { pt3dadd( -6.5592, 123.354, -81.3722, 0.37 ) }
    dend_90 { pt3dadd( -7.9368, 124.71, -81.3501, 0.29 ) }
    dend_90 { pt3dadd( -8.74709, 125.464, -81.4168, 0.29 ) }
    dend_90 { pt3dadd( -9.61145, 126.239, -81.5762, 0.29 ) }
    dend_90 { pt3dadd( -10.4422, 126.931, -81.8531, 0.37 ) }
    dend_90 { pt3dadd( -11.2194, 127.534, -82.2451, 0.52 ) }
    dend_90 { pt3dadd( -12.2662, 128.292, -82.9105, 0.52 ) }
    dend_90 { pt3dadd( -13.0719, 128.893, -83.5041, 0.66 ) }
    dend_90 { pt3dadd( -13.72, 129.458, -84.0609, 0.66 ) }
    dend_90 { pt3dadd( -14.5584, 130.334, -84.8636, 0.44 ) }
    dend_90 { pt3dadd( -15.451, 131.412, -85.7548, 0.29 ) }
    dend_90 { pt3dadd( -15.9638, 132.155, -86.2451, 0.29 ) }
    dend_90 { pt3dadd( -16.6566, 133.312, -86.7722, 0.29 ) }
    dend_90 { pt3dadd( -17.3166, 134.494, -87.1141, 0.44 ) }
    dend_90 { pt3dadd( -17.9029, 135.544, -87.272, 0.74 ) }
    dend_90 { pt3dadd( -18.3321, 136.304, -87.2814, 0.74 ) }
    dend_90 { pt3dadd( -19.1969, 137.719, -87.1033, 0.52 ) }
    dend_90 { pt3dadd( -19.9865, 138.865, -86.8523, 0.52 ) }
    dend_90 { pt3dadd( -20.8752, 140.015, -86.4981, 0.74 ) }
    dend_90 { pt3dadd( -21.533, 140.822, -86.1909, 0.74 ) }
    dend_90 { pt3dadd( -21.9943, 141.399, -85.996, 0.88 ) }
    dend_90 { pt3dadd( -22.6092, 142.297, -85.7488, 0.88 ) }
    dend_90 { pt3dadd( -23.3536, 143.759, -85.4661, 0.37 ) }
    dend_90 { pt3dadd( -23.6732, 144.753, -85.4035, 0.37 ) }
    dend_90 { pt3dadd( -23.7794, 145.379, -85.4351, 0.66 ) }
    dend_90 { pt3dadd( -23.8326, 147.16, -85.6506, 0.44 ) }
    dend_90 { pt3dadd( -23.7518, 148.254, -85.8564, 0.74 ) }
    dend_90 { pt3dadd( -23.6009, 149.344, -86.1238, 0.74 ) }
    dend_90 { pt3dadd( -23.4051, 150.611, -86.4459, 1.03 ) }
    dend_90 { pt3dadd( -23.2876, 151.361, -86.5827, 0.74 ) }
    dend_90 { pt3dadd( -23.1191, 152.631, -86.6963, 0.59 ) }
    dend_90 { pt3dadd( -23.0268, 153.814, -86.6742, 0.52 ) }
    dend_90 { pt3dadd( -23.0421, 154.804, -86.5959, 0.44 ) }
    dend_90 { pt3dadd( -23.208, 156.383, -86.3889, 0.44 ) }
    dend_90 { pt3dadd( -23.5283, 158.357, -86.0469, 0.52 ) }
    dend_90 { pt3dadd( -23.7994, 159.661, -85.8001, 0.52 ) }
    dend_90 { pt3dadd( -24.1013, 160.96, -85.5056, 0.52 ) }
    dend_90 { pt3dadd( -24.4258, 162.306, -85.1342, 0.52 ) }
    dend_90 { pt3dadd( -24.7194, 163.37, -84.7974, 0.52 ) }
    dend_90 { pt3dadd( -24.9149, 163.919, -84.6077, 0.66 ) }
    dend_90 { pt3dadd( -25.4293, 164.984, -84.2024, 0.66 ) }
    dend_90 { pt3dadd( -26.1831, 166.381, -83.4111, 0.37 ) }
    dend_90 { pt3dadd( -26.6134, 167.195, -82.8108, 0.37 ) }
    dend_90 { pt3dadd( -27.0834, 168.137, -81.978, 0.37 ) }
    dend_90 { pt3dadd( -27.4228, 168.908, -81.2486, 0.37 ) }
    dend_90 { pt3dadd( -27.6897, 169.604, -80.596, 0.37 ) }
    dend_90 { pt3dadd( -28.2522, 171.583, -78.8553, 0.74 ) }
    dend_90 { pt3dadd( -28.4894, 172.708, -78.0314, 0.59 ) }
    dend_90 { pt3dadd( -28.542, 173.05, -77.8283, 1.03 ) }
    dend_90 { pt3dadd( -28.66, 174.045, -77.3284, 0.74 ) }
    dend_90 { pt3dadd( -28.8225, 175.123, -76.8381, 0.74 ) }
    dend_90 { pt3dadd( -29.157, 176.493, -76.3019, 0.37 ) }
    dend_90 { pt3dadd( -29.5795, 177.635, -75.8814, 0.52 ) }
    dend_90 { pt3dadd( -29.9669, 178.405, -75.5119, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_90 { pt3dadd( -30.1112, 178.661, -75.3578, 0.37 ) }
    dend_90 { pt3dadd( -30.8218, 179.776, -74.5945, 0.37 ) }
    dend_90 { pt3dadd( -31.4915, 180.728, -73.857, 1.55 ) }
    dend_90 { pt3dadd( -32.0264, 181.409, -73.2561, 1.55 ) }
    dend_90 { pt3dadd( -32.6222, 182.16, -72.4982, 0.81 ) }
    dend_90 { pt3dadd( -33.4375, 183.207, -71.368, 0.59 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 6/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 34.1712, 53.3668, 89.4141, 0.44 ) }
    dend_71 { pt3dadd( 31.9374, 55.5879, 95.8461, 0.44 ) }
    dend_71 { pt3dadd( 29.1801, 57.2414, 102.239, 0.44 ) }
    dend_71 { pt3dadd( 27.8026, 58.1995, 109.194, 0.44 ) }
    dend_71 { pt3dadd( 26.1289, 57.8296, 116.14, 0.44 ) }
    dend_71 { pt3dadd( 25.0009, 56.5113, 123.089, 0.44 ) }
    dend_71 { pt3dadd( 24.3199, 53.8749, 129.734, 0.44 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 13/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 34.1712, 53.3668, 89.4141, 0.22 ) }
    dend_70 { pt3dadd( 32.9518, 53.5504, 100.913, 0.44 ) }
    dend_70 { pt3dadd( 33.2202, 52.3657, 112.407, 0.44 ) }
    dend_70 { pt3dadd( 34.6126, 52.7179, 123.879, 0.44 ) }
    dend_70 { pt3dadd( 36.3283, 51.2063, 135.21, 0.44 ) }
    dend_70 { pt3dadd( 37.059, 51.348, 146.748, 0.44 ) }
    dend_70 { pt3dadd( 38.1118, 52.8637, 158.17, 0.44 ) }
    dend_70 { pt3dadd( 38.678, 53.6123, 169.698, 0.44 ) }
    dend_70 { pt3dadd( 38.07, 52.3685, 181.173, 0.44 ) }
    dend_70 { pt3dadd( 38.0553, 50.5653, 192.591, 0.44 ) }
    dend_70 { pt3dadd( 37.0054, 48.3146, 203.88, 0.44 ) }
    dend_70 { pt3dadd( 35.2368, 46.6847, 215.186, 0.44 ) }
    dend_70 { pt3dadd( 32.0201, 46.4956, 226.293, 0.44 ) }
    dend_70 { pt3dadd( 27.5369, 46.2724, 236.953, 0.44 ) }
    // Section: dend_68, id: dend_68, parent: dend_52 (entry count 27/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 66.5681, 63.9344, 83.8672, 0.44 ) }
    dend_68 { pt3dadd( 74.1958, 68.126, 90.5535, 0.44 ) }
    dend_68 { pt3dadd( 81.5583, 72.4099, 97.4786, 0.44 ) }
    dend_68 { pt3dadd( 89.3055, 74.9397, 104.8, 0.44 ) }
    dend_68 { pt3dadd( 97.6088, 76.4089, 111.782, 0.44 ) }
    dend_68 { pt3dadd( 104.65, 79.1468, 119.721, 0.44 ) }
    dend_68 { pt3dadd( 110.547, 81.1281, 128.738, 0.44 ) }
    dend_68 { pt3dadd( 116.791, 82.0686, 137.681, 0.44 ) }
    dend_68 { pt3dadd( 122.116, 81.477, 147.227, 0.44 ) }
    dend_68 { pt3dadd( 129.135, 80.3963, 155.561, 0.44 ) }
    dend_68 { pt3dadd( 135.104, 81.039, 164.715, 0.44 ) }
    dend_68 { pt3dadd( 141.654, 80.133, 173.441, 0.44 ) }
    dend_68 { pt3dadd( 148.07, 81.1312, 182.255, 0.44 ) }
    dend_68 { pt3dadd( 153.141, 83.153, 191.755, 0.44 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 41/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 66.5681, 63.9344, 83.8672, 0.22 ) }
    dend_53 { pt3dadd( 75.6543, 69.4929, 91.0758, 0.44 ) }
    dend_53 { pt3dadd( 82.8125, 78.1746, 97.4651, 0.44 ) }
    dend_53 { pt3dadd( 89.3101, 84.5892, 106.569, 0.44 ) }
    dend_53 { pt3dadd( 95.2761, 89.8201, 116.706, 0.44 ) }
    dend_53 { pt3dadd( 102.636, 94.3603, 126.218, 0.44 ) }
    // Section: dend_50, id: dend_50, parent: dend_42 (entry count 47/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 20.2935, 48.7548, 33.5106, 1.03 ) }
    dend_50 { pt3dadd( 20.4717, 49.4225, 34.0501, 1.03 ) }
    dend_50 { pt3dadd( 20.7454, 50.2384, 34.7602, 0.44 ) }
    dend_50 { pt3dadd( 21.1165, 50.988, 35.4281, 0.52 ) }
    dend_50 { pt3dadd( 21.7278, 51.8891, 36.2384, 0.96 ) }
    dend_50 { pt3dadd( 22.8, 53.0566, 37.3201, 1.25 ) }
    dend_50 { pt3dadd( 23.3207, 53.4672, 37.6976, 1.4 ) }
    dend_50 { pt3dadd( 23.8163, 53.744, 37.9665, 1.18 ) }
    dend_50 { pt3dadd( 25.0929, 54.282, 38.4427, 0.29 ) }
    dend_50 { pt3dadd( 26.0647, 54.6427, 38.7115, 0.29 ) }
    dend_50 { pt3dadd( 27.1981, 55.0798, 38.9116, 0.66 ) }
    dend_50 { pt3dadd( 28.7368, 55.744, 39.0845, 0.37 ) }
    dend_50 { pt3dadd( 29.5869, 56.2541, 39.2098, 0.37 ) }
    dend_50 { pt3dadd( 30.2761, 56.9092, 39.4067, 0.37 ) }
    dend_50 { pt3dadd( 30.8171, 57.8799, 39.7639, 0.37 ) }
    dend_50 { pt3dadd( 31.165, 58.9082, 40.1941, 0.74 ) }
    dend_50 { pt3dadd( 31.3087, 59.636, 40.5181, 1.11 ) }
    dend_50 { pt3dadd( 31.3981, 60.4291, 40.9074, 1.11 ) }
    dend_50 { pt3dadd( 31.4346, 60.9738, 41.1799, 1.11 ) }
    dend_50 { pt3dadd( 31.4656, 61.5761, 41.4642, 1.11 ) }
    dend_50 { pt3dadd( 31.5048, 62.4439, 41.8039, 0.88 ) }
    dend_50 { pt3dadd( 31.5788, 63.5233, 42.2137, 1.18 ) }
    dend_50 { pt3dadd( 31.6532, 64.3553, 42.5054, 1.18 ) }
    dend_50 { pt3dadd( 31.7554, 65.1857, 42.7676, 1.03 ) }
    dend_50 { pt3dadd( 31.9007, 66.1133, 43.0522, 0.59 ) }
    dend_50 { pt3dadd( 32.0492, 67.0489, 43.3236, 0.37 ) }
    dend_50 { pt3dadd( 32.3544, 68.5688, 43.7208, 0.29 ) }
    dend_50 { pt3dadd( 32.6299, 69.4291, 43.9839, 0.52 ) }
    dend_50 { pt3dadd( 32.8345, 69.8912, 44.1593, 0.66 ) }
    dend_50 { pt3dadd( 33.4617, 70.9445, 44.6378, 0.37 ) }
    dend_50 { pt3dadd( 34.2292, 71.9885, 45.1738, 0.37 ) }
    dend_50 { pt3dadd( 34.9385, 72.8257, 45.6232, 0.59 ) }
    dend_50 { pt3dadd( 36.1342, 74.1434, 46.3041, 1.18 ) }
    dend_50 { pt3dadd( 36.9286, 74.9926, 46.7282, 0.88 ) }
    dend_50 { pt3dadd( 37.6975, 75.7986, 47.0904, 0.29 ) }
    dend_50 { pt3dadd( 38.1466, 76.2493, 47.2708, 0.29 ) }
    dend_50 { pt3dadd( 38.7781, 76.9122, 47.5045, 0.52 ) }
    dend_50 { pt3dadd( 39.1497, 77.3957, 47.6341, 0.59 ) }
    dend_50 { pt3dadd( 39.6689, 78.3692, 47.8111, 0.52 ) }
    dend_50 { pt3dadd( 39.9785, 79.3296, 47.9695, 0.81 ) }
    dend_50 { pt3dadd( 40.1181, 80.17, 48.1645, 0.96 ) }
    dend_50 { pt3dadd( 40.2549, 81.2783, 48.479, 1.11 ) }
    dend_50 { pt3dadd( 40.3721, 82.0218, 48.7469, 1.33 ) }
    dend_50 { pt3dadd( 40.668, 83.185, 49.2552, 1.99 ) }
    dend_50 { pt3dadd( 41.136, 84.3255, 49.869, 2.21 ) }
    dend_50 { pt3dadd( 42.171, 85.9377, 50.8954, 0.96 ) }
    dend_50 { pt3dadd( 42.8596, 86.6545, 51.3952, 0.66 ) }
    dend_50 { pt3dadd( 44.1544, 87.7012, 52.2155, 0.29 ) }
    dend_50 { pt3dadd( 45.2839, 88.3901, 52.823, 0.29 ) }
    dend_50 { pt3dadd( 46.5408, 88.9395, 53.3867, 0.29 ) }
    dend_50 { pt3dadd( 47.2608, 89.1387, 53.6645, 0.29 ) }
    dend_50 { pt3dadd( 48.2129, 89.2483, 53.9322, 0.22 ) }
    dend_50 { pt3dadd( 55.0892, 97.4872, 57.2157, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 0/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 20.2935, 48.7548, 33.5106, 0.96 ) }
    dend_43 { pt3dadd( 19.0293, 50.8614, 35.1056, 0.96 ) }
    dend_43 { pt3dadd( 18.6299, 51.4203, 35.5168, 0.44 ) }
    dend_43 { pt3dadd( 18.1058, 52.0088, 36.1559, 0.37 ) }
    dend_43 { pt3dadd( 17.6954, 52.4051, 36.7682, 0.29 ) }
    dend_43 { pt3dadd( 17.3799, 52.699, 37.254, 0.37 ) }
    dend_43 { pt3dadd( 17.128, 52.9303, 37.6277, 0.37 ) }
    dend_43 { pt3dadd( 16.7409, 53.2664, 38.1479, 0.37 ) }
    dend_43 { pt3dadd( 15.3832, 54.3512, 39.9285, 1.18 ) }
    dend_43 { pt3dadd( 14.3014, 55.1705, 41.2766, 1.18 ) }
    dend_43 { pt3dadd( 13.7625, 55.5646, 41.9073, 0.88 ) }
    dend_43 { pt3dadd( 13.2124, 55.9929, 42.4669, 0.88 ) }
    dend_43 { pt3dadd( 12.7143, 56.4071, 42.8742, 0.81 ) }
    dend_43 { pt3dadd( 12.2707, 56.799, 43.107, 1.18 ) }
    dend_43 { pt3dadd( 11.6727, 57.3419, 43.222, 1.18 ) }
    dend_43 { pt3dadd( 10.8864, 58.0697, 43.2475, 0.74 ) }
    dend_43 { pt3dadd( 9.88593, 58.9418, 43.177, 0.52 ) }
    dend_43 { pt3dadd( 9.28464, 59.4133, 43.0885, 0.29 ) }
    dend_43 { pt3dadd( 8.68063, 59.8277, 42.9585, 0.29 ) }
    dend_43 { pt3dadd( 8.32816, 60.0485, 42.8476, 0.96 ) }
    dend_43 { pt3dadd( 7.96535, 60.2637, 42.6887, 1.18 ) }
    dend_43 { pt3dadd( 6.96778, 60.8225, 42.0825, 0.22 ) }
    dend_43 { pt3dadd( 6.31475, 61.1285, 41.637, 0.22 ) }
    dend_43 { pt3dadd( 5.77772, 61.3508, 41.2258, 0.59 ) }
    dend_43 { pt3dadd( 5.25174, 61.5509, 40.808, 0.52 ) }
    dend_43 { pt3dadd( 4.74996, 61.735, 40.4166, 0.52 ) }
    dend_43 { pt3dadd( 4.04147, 62.0142, 39.8748, 0.66 ) }
    dend_43 { pt3dadd( 3.80719, 62.1276, 39.6975, 0.66 ) }
    dend_43 { pt3dadd( 3.23471, 62.4383, 39.2319, 0.29 ) }
    dend_43 { pt3dadd( 2.99798, 62.5659, 39.0583, 0.29 ) }
    dend_43 { pt3dadd( 2.51382, 62.834, 38.757, 0.29 ) }
    dend_43 { pt3dadd( 2.30027, 62.9613, 38.6361, 0.74 ) }
    dend_43 { pt3dadd( 1.73676, 63.3332, 38.2787, 0.74 ) }
    dend_43 { pt3dadd( 1.37224, 63.6007, 37.9543, 0.59 ) }
    dend_43 { pt3dadd( 0.997005, 63.8963, 37.4792, 0.29 ) }
    dend_43 { pt3dadd( 0.656922, 64.1646, 36.9978, 1.03 ) }
    dend_43 { pt3dadd( 0.38902, 64.3731, 36.5962, 1.03 ) }
    dend_43 { pt3dadd( -0.1828, 64.8473, 35.7036, 0.88 ) }
    dend_43 { pt3dadd( -0.785148, 65.3977, 34.7221, 0.88 ) }
    dend_43 { pt3dadd( -1.60535, 66.2052, 33.3929, 0.37 ) }
    dend_43 { pt3dadd( -1.8665, 66.4964, 32.8731, 0.88 ) }
    dend_43 { pt3dadd( -2.03902, 66.7182, 32.4922, 1.33 ) }
    dend_43 { pt3dadd( -2.37265, 67.2027, 31.7433, 0.37 ) }
    dend_43 { pt3dadd( -2.49676, 67.4067, 31.4743, 0.22 ) }
    dend_43 { pt3dadd( -2.74897, 67.891, 30.92, 0.22 ) }
    dend_43 { pt3dadd( -3.79844, 70.2146, 28.437, 0.66 ) }
    dend_43 { pt3dadd( -3.94305, 70.5975, 27.9276, 0.29 ) }
    dend_43 { pt3dadd( -4.05973, 70.9576, 27.4026, 0.22 ) }
    dend_43 { pt3dadd( -4.12569, 71.1605, 27.0828, 0.22 ) }
    dend_43 { pt3dadd( -4.33531, 71.7716, 26.0942, 1.11 ) }
    dend_43 { pt3dadd( -4.45771, 72.111, 25.5521, 1.11 ) }
    dend_43 { pt3dadd( -5.08322, 73.6883, 23.5219, 0.37 ) }
    dend_43 { pt3dadd( -5.20155, 73.9654, 23.1629, 0.29 ) }
    dend_43 { pt3dadd( -5.34153, 74.2942, 22.777, 0.29 ) }
    dend_43 { pt3dadd( -5.55459, 74.7595, 22.3175, 0.29 ) }
    dend_43 { pt3dadd( -5.91216, 75.4445, 21.8169, 0.29 ) }
    dend_43 { pt3dadd( -6.29746, 76.1331, 21.4557, 0.29 ) }
    dend_43 { pt3dadd( -6.48009, 76.4337, 21.3672, 0.29 ) }
    dend_43 { pt3dadd( -6.86865, 77.0837, 21.1552, 0.66 ) }
    dend_43 { pt3dadd( -7.06388, 77.4607, 21.0399, 0.81 ) }
    dend_43 { pt3dadd( -7.26305, 77.9371, 20.9192, 0.96 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 61/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -33.0743, 114.963, -31.7835, 0.29 ) }
    dend_33 { pt3dadd( -32.7883, 116.861, -32.5237, 0.29 ) }
    dend_33 { pt3dadd( -32.6205, 117.605, -32.927, 0.29 ) }
    dend_33 { pt3dadd( -32.4063, 118.436, -33.4334, 0.29 ) }
    dend_33 { pt3dadd( -32.2312, 119.127, -33.8593, 0.52 ) }
    dend_33 { pt3dadd( -32.0348, 119.991, -34.3947, 0.52 ) }
    dend_33 { pt3dadd( -31.8786, 120.83, -34.9085, 0.66 ) }
    dend_33 { pt3dadd( -31.7813, 121.996, -35.6498, 0.29 ) }
    dend_33 { pt3dadd( -31.7902, 122.527, -36.0408, 0.29 ) }
    dend_33 { pt3dadd( -31.8609, 123.187, -36.5965, 0.37 ) }
    dend_33 { pt3dadd( -31.9344, 123.639, -37.004, 0.37 ) }
    dend_33 { pt3dadd( -32.02, 124.068, -37.4466, 0.29 ) }
    dend_33 { pt3dadd( -32.2561, 124.997, -38.4633, 0.29 ) }
    dend_33 { pt3dadd( -32.3824, 125.402, -38.923, 0.29 ) }
    dend_33 { pt3dadd( -32.5547, 125.909, -39.564, 0.29 ) }
    dend_33 { pt3dadd( -32.7584, 126.431, -40.3022, 0.74 ) }
    dend_33 { pt3dadd( -33.2981, 127.604, -42.1995, 0.37 ) }
    dend_33 { pt3dadd( -33.4396, 127.876, -42.7742, 0.29 ) }
    dend_33 { pt3dadd( -33.5522, 128.079, -43.2762, 0.29 ) }
    dend_33 { pt3dadd( -33.7075, 128.405, -44.0662, 0.29 ) }
    dend_33 { pt3dadd( -33.8095, 128.662, -44.6456, 0.29 ) }
    dend_33 { pt3dadd( -33.9773, 129.123, -45.6055, 0.52 ) }
    dend_33 { pt3dadd( -34.3803, 130.445, -48.0966, 0.44 ) }
    dend_33 { pt3dadd( -34.415, 130.67, -48.5299, 0.29 ) }
    dend_33 { pt3dadd( -34.482, 131.453, -49.9956, 0.81 ) }
    dend_33 { pt3dadd( -34.4923, 132.434, -51.7088, 0.29 ) }
    dend_33 { pt3dadd( -34.4727, 132.803, -52.3052, 0.29 ) }
    dend_33 { pt3dadd( -34.4022, 133.594, -53.4317, 0.96 ) }
    dend_33 { pt3dadd( -34.2985, 135.036, -55.2529, 0.74 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 90/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -33.0743, 114.963, -31.7835, 0.29 ) }
    dend_32 { pt3dadd( -34.8684, 114.88, -31.2948, 0.29 ) }
    dend_32 { pt3dadd( -36.0744, 115.089, -30.9545, 0.29 ) }
    dend_32 { pt3dadd( -37.1163, 115.475, -30.6752, 0.29 ) }
    dend_32 { pt3dadd( -37.9294, 115.829, -30.4845, 0.29 ) }
    dend_32 { pt3dadd( -39.2312, 116.369, -30.2361, 0.29 ) }
    dend_32 { pt3dadd( -40.095, 116.678, -30.1356, 0.29 ) }
    dend_32 { pt3dadd( -41.3118, 117.128, -30.133, 0.29 ) }
    dend_32 { pt3dadd( -42.4486, 117.56, -30.1901, 0.66 ) }
    dend_32 { pt3dadd( -43.4442, 117.924, -30.2913, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_32 { pt3dadd( -44.8589, 118.383, -30.521, 0.29 ) }
    dend_32 { pt3dadd( -46.3503, 118.792, -30.8734, 0.29 ) }
    dend_32 { pt3dadd( -47.1832, 118.999, -31.1073, 0.29 ) }
    dend_32 { pt3dadd( -47.9346, 119.201, -31.4006, 0.29 ) }
    dend_32 { pt3dadd( -48.4659, 119.409, -31.68, 0.29 ) }
    dend_32 { pt3dadd( -48.9323, 119.738, -32.0158, 0.29 ) }
    dend_32 { pt3dadd( -49.256, 120.103, -32.3129, 0.44 ) }
    dend_32 { pt3dadd( -49.5555, 120.547, -32.6596, 0.29 ) }
    dend_32 { pt3dadd( -50.3028, 121.551, -33.8142, 0.29 ) }
    dend_32 { pt3dadd( -50.5826, 121.874, -34.2642, 0.29 ) }
    dend_32 { pt3dadd( -50.9897, 122.264, -34.8638, 0.29 ) }
    dend_32 { pt3dadd( -51.3061, 122.51, -35.2742, 0.29 ) }
    dend_32 { pt3dadd( -52.2846, 123.145, -36.38, 0.74 ) }
    dend_32 { pt3dadd( -54.2638, 124.207, -38.1501, 0.29 ) }
    dend_32 { pt3dadd( -55.4821, 124.775, -38.9643, 0.29 ) }
    dend_32 { pt3dadd( -56.4507, 125.217, -39.4684, 0.29 ) }
    dend_32 { pt3dadd( -57.2228, 125.585, -39.7485, 0.29 ) }
    dend_32 { pt3dadd( -58.5554, 126.258, -39.9903, 0.29 ) }
    dend_32 { pt3dadd( -60.2173, 127.16, -39.8663, 0.29 ) }
    dend_32 { pt3dadd( -60.9567, 127.624, -39.6046, 0.37 ) }
    dend_32 { pt3dadd( -61.7933, 128.207, -39.1609, 0.37 ) }
    dend_32 { pt3dadd( -62.4706, 128.752, -38.7088, 0.37 ) }
    dend_32 { pt3dadd( -62.8956, 129.167, -38.3153, 0.81 ) }
    dend_32 { pt3dadd( -63.4996, 129.876, -37.5842, 0.52 ) }
    dend_32 { pt3dadd( -64.274, 130.933, -36.521, 0.29 ) }
    dend_32 { pt3dadd( -64.7055, 131.554, -35.9067, 0.29 ) }
    dend_32 { pt3dadd( -65.1607, 132.2, -35.2646, 0.74 ) }
    dend_32 { pt3dadd( -66.2126, 133.631, -33.8797, 0.37 ) }
    dend_32 { pt3dadd( -66.6181, 134.186, -33.3778, 0.29 ) }
    dend_32 { pt3dadd( -67.0316, 134.752, -32.9413, 0.22 ) }
    dend_32 { pt3dadd( -67.7308, 135.669, -32.4017, 0.22 ) }
    dend_32 { pt3dadd( -68.1006, 136.148, -32.202, 0.22 ) }
    dend_32 { pt3dadd( -68.5879, 136.747, -32.0796, 0.44 ) }
    dend_32 { pt3dadd( -68.8578, 137.05, -32.0873, 0.44 ) }
    dend_32 { pt3dadd( -69.4794, 137.719, -32.1599, 0.29 ) }
    dend_32 { pt3dadd( -70.4134, 138.689, -32.3148, 0.29 ) }
    dend_32 { pt3dadd( -71.1081, 139.389, -32.5087, 0.29 ) }
    dend_32 { pt3dadd( -71.4964, 139.763, -32.6394, 0.29 ) }
    dend_32 { pt3dadd( -72.0824, 140.262, -32.85, 0.22 ) }
    dend_32 { pt3dadd( -72.703, 140.723, -33.1329, 0.22 ) }
    dend_32 { pt3dadd( -73.4455, 141.199, -33.5814, 0.22 ) }
    dend_32 { pt3dadd( -74.4816, 141.799, -34.4234, 0.44 ) }
    dend_32 { pt3dadd( -74.8664, 142.037, -34.8686, 0.44 ) }
    dend_32 { pt3dadd( -75.2484, 142.287, -35.4014, 0.22 ) }
    dend_32 { pt3dadd( -76.1049, 142.901, -36.8293, 0.22 ) }
    dend_32 { pt3dadd( -76.756, 143.472, -38.1763, 0.66 ) }
    dend_32 { pt3dadd( -77.0085, 143.757, -38.8496, 1.03 ) }
    dend_32 { pt3dadd( -77.671, 144.599, -40.9076, 0.88 ) }
    dend_32 { pt3dadd( -77.8692, 144.873, -41.5343, 0.59 ) }
    dend_32 { pt3dadd( -78.1853, 145.383, -42.6714, 0.59 ) }
    dend_32 { pt3dadd( -78.5974, 146.158, -44.4016, 0.74 ) }
    dend_32 { pt3dadd( -79.1144, 147.46, -47.2501, 0.66 ) }
    dend_32 { pt3dadd( -79.41, 148.385, -49.1261, 0.52 ) }
    dend_32 { pt3dadd( -79.5686, 149.01, -50.2859, 0.74 ) }
    dend_32 { pt3dadd( -79.784, 150.15, -52.1905, 1.55 ) }
    dend_32 { pt3dadd( -79.8803, 150.882, -53.247, 1.77 ) }
    dend_32 { pt3dadd( -79.9557, 151.592, -54.0934, 1.92 ) }
    dend_32 { pt3dadd( -80.0472, 153.335, -55.5731, 0.88 ) }
    dend_32 { pt3dadd( -80.0593, 153.82, -55.8782, 0.44 ) }
    dend_32 { pt3dadd( -80.1031, 154.726, -56.3406, 0.29 ) }
    dend_32 { pt3dadd( -80.2517, 155.857, -56.7539, 0.96 ) }
    dend_32 { pt3dadd( -80.397, 156.777, -57.03, 0.96 ) }
    dend_32 { pt3dadd( -80.6674, 158.447, -57.4471, 0.37 ) }
    dend_32 { pt3dadd( -80.7877, 159.501, -57.6377, 0.37 ) }
    dend_32 { pt3dadd( -80.8791, 160.271, -57.7805, 0.37 ) }
    dend_32 { pt3dadd( -81.0386, 161.184, -57.9522, 0.37 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 66/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -49.2503, 117.991, -19.0172, 0.22 ) }
    dend_28 { pt3dadd( -50.5364, 117.345, -19.6281, 0.22 ) }
    dend_28 { pt3dadd( -51.0929, 117.076, -19.7674, 0.22 ) }
    dend_28 { pt3dadd( -51.6806, 116.816, -19.8431, 0.22 ) }
    dend_28 { pt3dadd( -52.2618, 116.602, -19.8796, 0.29 ) }
    dend_28 { pt3dadd( -53.111, 116.342, -19.9079, 0.29 ) }
    dend_28 { pt3dadd( -53.6577, 116.183, -19.9204, 0.22 ) }
    dend_28 { pt3dadd( -54.8502, 115.876, -19.8363, 0.59 ) }
    dend_28 { pt3dadd( -55.4095, 115.762, -19.7864, 0.66 ) }
    dend_28 { pt3dadd( -56.3403, 115.643, -19.7259, 0.22 ) }
    dend_28 { pt3dadd( -57.3565, 115.649, -19.7168, 0.22 ) }
    dend_28 { pt3dadd( -58.4717, 115.828, -19.7874, 0.44 ) }
    dend_28 { pt3dadd( -59.1476, 116.03, -19.8907, 0.22 ) }
    dend_28 { pt3dadd( -59.9238, 116.365, -20.1033, 0.22 ) }
    dend_28 { pt3dadd( -60.7668, 116.824, -20.3909, 0.22 ) }
    dend_28 { pt3dadd( -61.7639, 117.431, -20.7938, 0.22 ) }
    dend_28 { pt3dadd( -62.2081, 117.705, -20.9944, 0.22 ) }
    dend_28 { pt3dadd( -62.6301, 117.937, -21.1872, 0.44 ) }
    dend_28 { pt3dadd( -62.852, 118.018, -21.2869, 0.44 ) }
    dend_28 { pt3dadd( -63.8328, 118.209, -21.6847, 0.22 ) }
    dend_28 { pt3dadd( -64.6606, 118.304, -21.9535, 0.22 ) }
    dend_28 { pt3dadd( -65.2545, 118.351, -22.1097, 0.22 ) }
    dend_28 { pt3dadd( -65.9847, 118.42, -22.2634, 0.22 ) }
    dend_28 { pt3dadd( -67.1493, 118.555, -22.4238, 0.22 ) }
    dend_28 { pt3dadd( -67.8597, 118.659, -22.4712, 0.22 ) }
    dend_28 { pt3dadd( -68.6036, 118.791, -22.4486, 0.22 ) }
    dend_28 { pt3dadd( -69.5183, 119.008, -22.3464, 0.22 ) }
    dend_28 { pt3dadd( -70.2219, 119.206, -22.1967, 0.22 ) }
    dend_28 { pt3dadd( -71.1935, 119.529, -21.8676, 0.22 ) }
    dend_28 { pt3dadd( -71.8068, 119.77, -21.5823, 0.37 ) }
    dend_28 { pt3dadd( -72.4067, 120.035, -21.2633, 0.22 ) }
    dend_28 { pt3dadd( -72.8539, 120.258, -20.9894, 0.44 ) }
    dend_28 { pt3dadd( -73.5704, 120.651, -20.5002, 0.37 ) }
    dend_28 { pt3dadd( -74.1986, 121.057, -19.9877, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_28 { pt3dadd( -74.4416, 121.257, -19.7524, 0.37 ) }
    dend_28 { pt3dadd( -74.7697, 121.562, -19.4194, 0.29 ) }
    dend_28 { pt3dadd( -75.3088, 122.098, -18.9364, 0.44 ) }
    dend_28 { pt3dadd( -75.9694, 122.768, -18.3474, 0.22 ) }
    dend_28 { pt3dadd( -76.3456, 123.152, -18.0556, 0.22 ) }
    dend_28 { pt3dadd( -76.8442, 123.63, -17.7167, 0.22 ) }
    dend_28 { pt3dadd( -77.1934, 123.948, -17.4958, 0.22 ) }
    dend_28 { pt3dadd( -77.8463, 124.572, -17.1252, 0.81 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 8/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -49.2503, 117.991, -19.0172, 0.37 ) }
    dend_27 { pt3dadd( -50.2307, 118.174, -19.938, 0.37 ) }
    dend_27 { pt3dadd( -51.643, 118.524, -21.3251, 0.37 ) }
    dend_27 { pt3dadd( -52.5699, 118.823, -22.2689, 0.37 ) }
    dend_27 { pt3dadd( -53.335, 119.158, -23.0949, 0.37 ) }
    dend_27 { pt3dadd( -54.4888, 119.802, -24.4479, 0.37 ) }
    dend_27 { pt3dadd( -54.9924, 120.158, -25.1111, 0.29 ) }
    dend_27 { pt3dadd( -55.6842, 120.662, -26.2004, 0.66 ) }
    dend_27 { pt3dadd( -55.9856, 120.891, -26.7462, 0.81 ) }
    dend_27 { pt3dadd( -56.4482, 121.283, -27.6936, 0.59 ) }
    dend_27 { pt3dadd( -56.8131, 121.632, -28.53, 0.59 ) }
    dend_27 { pt3dadd( -57.2662, 122.122, -29.652, 0.74 ) }
    dend_27 { pt3dadd( -58.8232, 124.001, -33.7469, 0.44 ) }
    dend_27 { pt3dadd( -59.0513, 124.323, -34.4087, 0.44 ) }
    dend_27 { pt3dadd( -59.1896, 124.581, -34.8985, 0.44 ) }
    dend_27 { pt3dadd( -59.3399, 125.1, -35.7112, 0.44 ) }
    dend_27 { pt3dadd( -59.3959, 126.009, -36.7542, 0.44 ) }
    dend_27 { pt3dadd( -59.3083, 127.166, -37.7397, 0.37 ) }
    dend_27 { pt3dadd( -59.1687, 128.334, -38.4976, 0.37 ) }
    dend_27 { pt3dadd( -59.1316, 129.375, -39.1501, 0.37 ) }
    dend_27 { pt3dadd( -59.1858, 130.718, -39.9704, 0.37 ) }
    dend_27 { pt3dadd( -59.3227, 131.912, -40.6756, 0.52 ) }
    dend_27 { pt3dadd( -59.4717, 132.81, -41.19, 0.66 ) }
    dend_27 { pt3dadd( -59.8096, 134.428, -42.1813, 0.59 ) }
    dend_27 { pt3dadd( -60.1051, 136.048, -43.197, 0.52 ) }
    dend_27 { pt3dadd( -60.2122, 137.044, -43.7874, 0.52 ) }
    dend_27 { pt3dadd( -60.2154, 138.08, -44.3449, 0.52 ) }
    dend_27 { pt3dadd( -60.0109, 139.549, -44.9746, 0.88 ) }
    dend_27 { pt3dadd( -59.7311, 140.933, -45.4058, 1.33 ) }
    dend_27 { pt3dadd( -59.3527, 142.645, -45.7114, 0.52 ) }
    dend_27 { pt3dadd( -59.0048, 144.906, -45.8252, 0.44 ) }
    dend_27 { pt3dadd( -58.9768, 146.081, -45.74, 0.88 ) }
    dend_27 { pt3dadd( -59.098, 147.492, -45.5325, 1.11 ) }
    dend_27 { pt3dadd( -59.3715, 149.247, -45.2221, 0.44 ) }
    dend_27 { pt3dadd( -59.6331, 150.648, -45.0073, 0.29 ) }
    dend_27 { pt3dadd( -59.8965, 151.869, -44.9257, 0.29 ) }
    dend_27 { pt3dadd( -60.0585, 152.695, -45.0121, 0.29 ) }
    dend_27 { pt3dadd( -60.2075, 154.206, -45.3846, 0.66 ) }
    dend_27 { pt3dadd( -60.2249, 155.406, -45.8214, 0.66 ) }
    dend_27 { pt3dadd( -60.1237, 156.491, -46.2847, 0.66 ) }
    dend_27 { pt3dadd( -59.9445, 157.644, -46.8149, 0.66 ) }
    dend_27 { pt3dadd( -59.795, 158.616, -47.2431, 0.66 ) }
    dend_27 { pt3dadd( -59.6281, 159.93, -47.7734, 0.59 ) }
    dend_27 { pt3dadd( -59.4801, 161.408, -48.299, 0.44 ) }
    dend_27 { pt3dadd( -59.4163, 162.327, -48.5957, 0.44 ) }
    dend_27 { pt3dadd( -59.3526, 163.902, -49.078, 0.37 ) }
    dend_27 { pt3dadd( -59.3087, 165.388, -49.5437, 0.37 ) }
    dend_27 { pt3dadd( -59.2735, 166.487, -49.8958, 0.74 ) }
    dend_27 { pt3dadd( -59.2487, 167.487, -50.2376, 1.18 ) }
    dend_27 { pt3dadd( -59.2396, 168.763, -50.6975, 0.81 ) }
    dend_27 { pt3dadd( -59.2937, 169.878, -51.0906, 0.37 ) }
    dend_27 { pt3dadd( -59.4375, 170.948, -51.4393, 0.29 ) }
    dend_27 { pt3dadd( -59.7624, 172.285, -51.8336, 0.52 ) }
    dend_27 { pt3dadd( -60.0523, 172.925, -51.9745, 0.66 ) }
    dend_27 { pt3dadd( -60.4064, 173.42, -52.0295, 0.74 ) }
    dend_27 { pt3dadd( -61.4066, 174.402, -51.9794, 0.37 ) }
    dend_27 { pt3dadd( -62.5057, 175.235, -51.8334, 0.29 ) }
    dend_27 { pt3dadd( -63.5741, 175.85, -51.6534, 0.29 ) }
    dend_27 { pt3dadd( -64.9365, 176.427, -51.4167, 0.29 ) }
    dend_27 { pt3dadd( -66.0123, 176.774, -51.2273, 0.29 ) }
    dend_27 { pt3dadd( -67.106, 177.042, -51.0325, 0.29 ) }
    dend_27 { pt3dadd( -68.8558, 177.34, -50.7144, 0.29 ) }
    dend_27 { pt3dadd( -70.1829, 177.507, -50.4335, 0.29 ) }
    dend_27 { pt3dadd( -71.4334, 177.652, -50.1175, 0.44 ) }
    dend_27 { pt3dadd( -72.3665, 177.744, -49.8718, 0.22 ) }
    dend_27 { pt3dadd( -72.9165, 177.784, -49.7191, 0.44 ) }
    dend_27 { pt3dadd( -73.4481, 177.796, -49.5469, 0.44 ) }
    dend_27 { pt3dadd( -74.5575, 177.761, -49.0816, 0.37 ) }
    dend_27 { pt3dadd( -75.9102, 177.878, -48.3786, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 77/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 5.47299, -261.478, 40.5239, 0.44 ) }
    dend_7 { pt3dadd( 4.91775, -262.922, 40.7278, 0.44 ) }
    dend_7 { pt3dadd( 4.59463, -263.761, 40.8464, 0.44 ) }
    dend_7 { pt3dadd( 4.13469, -264.957, 41.0152, 0.52 ) }
    dend_7 { pt3dadd( 3.90776, -265.547, 41.0985, 0.66 ) }
    dend_7 { pt3dadd( 3.61459, -266.309, 41.2062, 0.66 ) }
    dend_7 { pt3dadd( 3.29667, -267.135, 41.3229, 0.37 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 84/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 5.47299, -261.478, 40.5239, 0.22 ) }
    dend_6 { pt3dadd( 6.43991, -262.011, 40.0635, 0.22 ) }
    dend_6 { pt3dadd( 7.72531, -262.719, 39.4514, 0.22 ) }
    dend_6 { pt3dadd( 13.8559, -267.336, 35.2342, 0.22 ) }
    // Section: dend_101, id: dend_101, parent: dend_99 (entry count 88/100)
    dend_101 { pt3dclear() }
    dend_101 { pt3dadd( 18.2184, 166.232, -71.8389, 0.22 ) }
    dend_101 { pt3dadd( 16.4554, 167.502, -70.6799, 0.22 ) }
    dend_101 { pt3dadd( 15.3113, 168.326, -69.9278, 0.37 ) }
    dend_101 { pt3dadd( 14.5468, 168.876, -69.4253, 0.44 ) }
    dend_101 { pt3dadd( 13.4964, 169.633, -68.7348, 0.22 ) }
    dend_101 { pt3dadd( 12.0896, 170.646, -67.81, 0.22 ) }
    // Section: dend_100, id: dend_100, parent: dend_99 (entry count 94/100)
    dend_100 { pt3dclear() }
    dend_100 { pt3dadd( 18.2184, 166.232, -71.8389, 0.29 ) }
    dend_100 { pt3dadd( 18.5175, 167.422, -71.2064, 0.29 ) }
    dend_100 { pt3dadd( 18.7729, 168.437, -70.6665, 0.22 ) }
    dend_100 { pt3dadd( 18.9271, 169.05, -70.3405, 0.22 ) }
    // Section: dend_94, id: dend_94, parent: dend_90 (entry count 98/100)
    dend_94 { pt3dclear() }
    dend_94 { pt3dadd( -33.4375, 183.207, -71.368, 0.66 ) }
    dend_94 { pt3dadd( -34.7482, 184.887, -70.5396, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_94 { pt3dadd( -35.2594, 185.784, -70.1891, 0.44 ) }
    dend_94 { pt3dadd( -35.6603, 186.711, -69.8863, 0.44 ) }
    dend_94 { pt3dadd( -35.9988, 187.603, -69.6297, 0.44 ) }
    dend_94 { pt3dadd( -36.3459, 188.705, -69.337, 0.37 ) }
    dend_94 { pt3dadd( -36.6147, 189.777, -69.0747, 0.37 ) }
    dend_94 { pt3dadd( -36.8451, 191.262, -68.8449, 0.37 ) }
    dend_94 { pt3dadd( -36.9222, 193.038, -68.6026, 0.29 ) }
    dend_94 { pt3dadd( -36.871, 194.146, -68.4442, 0.29 ) }
    dend_94 { pt3dadd( -36.7279, 195.334, -68.2341, 0.66 ) }
    dend_94 { pt3dadd( -36.564, 196.198, -68.0416, 0.66 ) }
    dend_94 { pt3dadd( -36.4202, 196.796, -67.8881, 0.66 ) }
    dend_94 { pt3dadd( -36.1785, 197.841, -67.6061, 0.37 ) }
    dend_94 { pt3dadd( -35.9278, 199.09, -67.2285, 0.22 ) }
    dend_94 { pt3dadd( -35.7786, 200.569, -66.7489, 0.66 ) }
    dend_94 { pt3dadd( -35.8353, 201.416, -66.4692, 0.81 ) }
    dend_94 { pt3dadd( -36.0448, 202.179, -66.2298, 0.52 ) }
    dend_94 { pt3dadd( -36.5021, 203.192, -65.9461, 0.74 ) }
    dend_94 { pt3dadd( -36.9148, 203.898, -65.7861, 0.74 ) }
    dend_94 { pt3dadd( -37.5456, 204.847, -65.6251, 0.29 ) }
    dend_94 { pt3dadd( -38.254, 205.874, -65.4532, 0.29 ) }
    dend_94 { pt3dadd( -39.5041, 207.764, -65.1269, 0.29 ) }
    dend_94 { pt3dadd( -40.3388, 209.198, -64.8577, 0.29 ) }
    dend_94 { pt3dadd( -40.772, 210.079, -64.7041, 0.52 ) }
    dend_94 { pt3dadd( -40.9606, 210.546, -64.6314, 0.52 ) }
    dend_94 { pt3dadd( -41.463, 212.16, -64.4296, 0.37 ) }
    dend_94 { pt3dadd( -41.7113, 213.145, -64.3538, 0.37 ) }
    dend_94 { pt3dadd( -41.9888, 214.408, -64.3195, 0.37 ) }
    dend_94 { pt3dadd( -42.248, 215.785, -64.3134, 0.44 ) }
    dend_94 { pt3dadd( -42.4242, 216.704, -64.3356, 0.29 ) }
    dend_94 { pt3dadd( -42.6918, 217.927, -64.435, 0.29 ) }
    dend_94 { pt3dadd( -43.0053, 219.13, -64.6751, 0.81 ) }
    dend_94 { pt3dadd( -43.2461, 219.871, -64.862, 0.96 ) }
    // Section: dend_91, id: dend_91, parent: dend_90 (entry count 32/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( -33.4375, 183.207, -71.368, 0.22 ) }
    dend_91 { pt3dadd( -34.3624, 182.966, -71.2181, 0.22 ) }
    dend_91 { pt3dadd( -35.4622, 182.527, -71.0373, 0.22 ) }
    dend_91 { pt3dadd( -37.0353, 181.899, -70.7788, 0.22 ) }
    dend_91 { pt3dadd( -37.3753, 181.764, -70.7229, 0.81 ) }
    dend_91 { pt3dadd( -38.0091, 181.51, -70.6187, 0.81 ) }
    dend_91 { pt3dadd( -39.2461, 181.017, -70.4154, 0.29 ) }
    dend_91 { pt3dadd( -40.1952, 180.529, -70.2568, 0.29 ) }
    // Section: dend_79, id: dend_79, parent: dend_71 (entry count 40/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 24.3199, 53.8749, 129.734, 0.44 ) }
    dend_79 { pt3dadd( 22.1797, 54.1773, 137.812, 0.44 ) }
    dend_79 { pt3dadd( 21.2639, 53.8346, 146.118, 0.44 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 43/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 24.3199, 53.8749, 129.734, 0.22 ) }
    dend_72 { pt3dadd( 22.5362, 53.591, 138.086, 0.44 ) }
    dend_72 { pt3dadd( 21.64, 51.3142, 146.291, 0.44 ) }
    // Section: dend_61, id: dend_61, parent: dend_53 (entry count 46/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 102.636, 94.3603, 126.218, 0.44 ) }
    dend_61 { pt3dadd( 106.471, 97.2886, 131.655, 0.44 ) }
    dend_61 { pt3dadd( 110.098, 101.259, 136.581, 0.44 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 49/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 102.636, 94.3603, 126.218, 0.22 ) }
    dend_54 { pt3dadd( 107.745, 99.6021, 131.449, 0.44 ) }
    dend_54 { pt3dadd( 112.304, 105.78, 136.185, 0.44 ) }
    // Section: dend_47, id: dend_47, parent: dend_43 (entry count 52/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -7.26305, 77.9371, 20.9192, 0.37 ) }
    dend_47 { pt3dadd( -9.34886, 78.4454, 21.0707, 0.37 ) }
    dend_47 { pt3dadd( -10.2976, 78.6848, 21.1974, 0.37 ) }
    dend_47 { pt3dadd( -11.5521, 79.0295, 21.2263, 0.29 ) }
    dend_47 { pt3dadd( -12.5912, 79.4064, 21.1959, 0.29 ) }
    dend_47 { pt3dadd( -13.1153, 79.6474, 21.1591, 0.29 ) }
    dend_47 { pt3dadd( -13.8496, 80.0495, 21.0794, 0.29 ) }
    dend_47 { pt3dadd( -14.7179, 80.6151, 20.9423, 0.44 ) }
    dend_47 { pt3dadd( -16.2018, 81.7603, 20.5544, 0.59 ) }
    dend_47 { pt3dadd( -17.1189, 82.636, 20.1882, 0.74 ) }
    dend_47 { pt3dadd( -17.7219, 83.3133, 19.8598, 0.88 ) }
    dend_47 { pt3dadd( -18.1435, 83.8429, 19.5692, 0.88 ) }
    dend_47 { pt3dadd( -18.8136, 84.8219, 18.96, 0.88 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 65/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -7.26305, 77.9371, 20.9192, 0.22 ) }
    dend_44 { pt3dadd( -8.23359, 77.6076, 20.7368, 0.22 ) }
    dend_44 { pt3dadd( -8.77476, 77.5006, 20.5769, 0.22 ) }
    dend_44 { pt3dadd( -9.62857, 77.4057, 20.2535, 0.22 ) }
    dend_44 { pt3dadd( -10.2261, 77.3071, 19.9578, 0.22 ) }
    dend_44 { pt3dadd( -10.6678, 77.1875, 19.7157, 0.22 ) }
    dend_44 { pt3dadd( -11.1848, 77.0475, 19.4324, 0.22 ) }
    dend_44 { pt3dadd( -12.1173, 76.8126, 18.8442, 0.22 ) }
    dend_44 { pt3dadd( -12.7962, 76.6426, 18.344, 0.22 ) }
    dend_44 { pt3dadd( -13.6737, 76.4273, 17.5581, 0.22 ) }
    dend_44 { pt3dadd( -14.4616, 76.1479, 16.7405, 0.22 ) }
    dend_44 { pt3dadd( -22.9998, 74.0282, 14.4098, 0.22 ) }
    dend_44 { pt3dadd( -31.384, 70.9232, 12.6489, 0.22 ) }
    dend_44 { pt3dadd( -39.592, 67.13, 11.4319, 0.22 ) }
    dend_44 { pt3dadd( -47.9189, 63.4281, 11.8337, 0.22 ) }
    dend_44 { pt3dadd( -55.7954, 58.8387, 11.1756, 0.22 ) }
    dend_44 { pt3dadd( -63.0035, 53.1787, 10.961, 0.22 ) }
    dend_44 { pt3dadd( -69.6355, 46.8204, 11.1011, 0.22 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 83/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -34.2985, 135.036, -55.2529, 0.22 ) }
    dend_35 { pt3dadd( -34.0193, 134.261, -55.2912, 0.22 ) }
    dend_35 { pt3dadd( -33.8317, 133.74, -55.3169, 0.22 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 86/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -34.2985, 135.036, -55.2529, 0.52 ) }
    dend_34 { pt3dadd( -33.1307, 135.709, -54.8827, 0.52 ) }
    dend_34 { pt3dadd( -32.2812, 136.199, -54.6135, 0.52 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 89/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -77.8463, 124.572, -17.1252, 0.29 ) }
    dend_30 { pt3dadd( -79.227, 126.346, -16.7705, 0.29 ) }
    dend_30 { pt3dadd( -79.6465, 126.761, -16.6652, 0.29 ) }
    dend_30 { pt3dadd( -80.3914, 127.348, -16.5056, 0.22 ) }
    dend_30 { pt3dadd( -81.0631, 127.823, -16.3763, 0.22 ) }
    dend_30 { pt3dadd( -82.1656, 128.594, -16.1754, 0.22 ) }
    dend_30 { pt3dadd( -82.6028, 128.911, -16.0986, 0.22 ) }
    dend_30 { pt3dadd( -83.5738, 129.52, -16.0517, 0.22 ) }
    dend_30 { pt3dadd( -84.2364, 129.891, -16.0309, 0.22 ) }
    dend_30 { pt3dadd( -84.9563, 130.231, -16.0262, 0.29 ) }
    dend_30 { pt3dadd( -85.392, 130.39, -16.0366, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_30 { pt3dadd( -85.9787, 130.519, -16.0844, 0.29 ) }
    dend_30 { pt3dadd( -87.0276, 130.687, -16.2293, 0.29 ) }
    dend_30 { pt3dadd( -88.3549, 130.853, -16.4642, 0.29 ) }
    dend_30 { pt3dadd( -89.4486, 130.92, -16.662, 0.29 ) }
    dend_30 { pt3dadd( -90.3872, 130.899, -16.8351, 0.22 ) }
    dend_30 { pt3dadd( -91.8138, 130.773, -17.0978, 0.22 ) }
    dend_30 { pt3dadd( -92.5659, 130.683, -17.2358, 0.37 ) }
    dend_30 { pt3dadd( -93.566, 130.576, -17.4034, 0.37 ) }
    dend_30 { pt3dadd( -94.3374, 130.533, -17.5097, 0.37 ) }
    dend_30 { pt3dadd( -95.1691, 130.54, -17.6711, 0.37 ) }
    dend_30 { pt3dadd( -95.948, 130.609, -17.8801, 0.29 ) }
    dend_30 { pt3dadd( -96.9282, 130.763, -18.2234, 0.22 ) }
    dend_30 { pt3dadd( -97.8813, 130.978, -18.6297, 0.22 ) }
    dend_30 { pt3dadd( -98.6935, 131.241, -19.0544, 0.22 ) }
    dend_30 { pt3dadd( -100.207, 131.829, -19.9332, 0.22 ) }
    dend_30 { pt3dadd( -100.731, 132.029, -20.2582, 0.22 ) }
    dend_30 { pt3dadd( -101.496, 132.247, -20.7627, 0.22 ) }
    dend_30 { pt3dadd( -102.457, 132.372, -21.4152, 0.22 ) }
    dend_30 { pt3dadd( -103.234, 132.354, -21.9446, 0.22 ) }
    dend_30 { pt3dadd( -104.694, 132.243, -22.8901, 0.22 ) }
    dend_30 { pt3dadd( -105.799, 132.075, -23.4851, 0.22 ) }
    dend_30 { pt3dadd( -106.911, 131.786, -24.074, 0.22 ) }
    dend_30 { pt3dadd( -107.769, 131.428, -24.5488, 0.37 ) }
    dend_30 { pt3dadd( -108.206, 131.15, -24.7957, 0.37 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 24/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -77.8463, 124.572, -17.1252, 0.22 ) }
    dend_29 { pt3dadd( -79.7515, 124.509, -16.2674, 0.22 ) }
    dend_29 { pt3dadd( -81.0611, 124.42, -15.8357, 0.22 ) }
    dend_29 { pt3dadd( -82.2659, 124.28, -15.5589, 0.22 ) }
    dend_29 { pt3dadd( -82.9888, 124.184, -15.454, 0.22 ) }
    dend_29 { pt3dadd( -84.2081, 124.026, -15.3386, 0.22 ) }
    dend_29 { pt3dadd( -85.1055, 123.91, -15.2536, 0.22 ) }
    dend_29 { pt3dadd( -86.3166, 123.707, -15.2751, 0.22 ) }
    dend_29 { pt3dadd( -87.5142, 123.538, -15.3725, 0.22 ) }
    dend_29 { pt3dadd( -88.9097, 123.366, -15.5313, 0.22 ) }
    dend_29 { pt3dadd( -89.6515, 123.252, -15.6474, 0.22 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 35/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 3.29667, -267.135, 41.3229, 0.37 ) }
    dend_9 { pt3dadd( 3.70365, -269.014, 41.4962, 0.37 ) }
    dend_9 { pt3dadd( 3.98654, -270.129, 41.6265, 0.37 ) }
    dend_9 { pt3dadd( 4.17205, -270.861, 41.7119, 0.52 ) }
    dend_9 { pt3dadd( 4.2887, -271.321, 41.7656, 0.52 ) }
    dend_9 { pt3dadd( 4.45731, -271.985, 41.8433, 0.59 ) }
    dend_9 { pt3dadd( 4.70635, -272.967, 41.9579, 0.96 ) }
    dend_9 { pt3dadd( 4.78951, -273.28, 41.9286, 1.18 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 43/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 3.29667, -267.135, 41.3229, 0.22 ) }
    dend_8 { pt3dadd( 3.92255, -267.714, 41.1658, 0.22 ) }
    dend_8 { pt3dadd( 4.75877, -268.488, 40.9559, 0.29 ) }
    dend_8 { pt3dadd( 5.26241, -268.954, 40.8295, 0.29 ) }
    dend_8 { pt3dadd( 5.83968, -269.489, 40.6846, 0.29 ) }
    dend_8 { pt3dadd( 6.45146, -270.055, 40.531, 0.37 ) }
    dend_8 { pt3dadd( 11.1389, -277.041, 38.0008, 0.37 ) }
    // Section: dend_96, id: dend_96, parent: dend_94 (entry count 50/100)
    dend_96 { pt3dclear() }
    dend_96 { pt3dadd( -43.2461, 219.871, -64.862, 0.29 ) }
    dend_96 { pt3dadd( -44.2384, 220.438, -65.9383, 0.29 ) }
    dend_96 { pt3dadd( -45.3804, 221.251, -67.1411, 0.29 ) }
    dend_96 { pt3dadd( -46.2011, 221.962, -68.044, 0.59 ) }
    dend_96 { pt3dadd( -46.9565, 222.666, -68.9183, 0.44 ) }
    dend_96 { pt3dadd( -47.2984, 223.042, -69.4707, 0.44 ) }
    dend_96 { pt3dadd( -47.6221, 223.419, -70.1934, 0.37 ) }
    dend_96 { pt3dadd( -47.9023, 223.802, -71.107, 0.22 ) }
    dend_96 { pt3dadd( -48.0853, 224.168, -71.9789, 0.81 ) }
    dend_96 { pt3dadd( -48.3233, 224.837, -73.5403, 1.03 ) }
    dend_96 { pt3dadd( -48.7242, 226.074, -76.5433, 1.03 ) }
    dend_96 { pt3dadd( -49.1843, 227.5, -80.2675, 0.81 ) }
    dend_96 { pt3dadd( -49.5478, 228.64, -83.5438, 0.29 ) }
    dend_96 { pt3dadd( -49.6694, 229.017, -84.7279, 1.33 ) }
    dend_96 { pt3dadd( -49.7181, 229.189, -85.2693, 1.55 ) }
    // Section: dend_95, id: dend_95, parent: dend_94 (entry count 65/100)
    dend_95 { pt3dclear() }
    dend_95 { pt3dadd( -43.2461, 219.871, -64.862, 0.29 ) }
    dend_95 { pt3dadd( -44.6232, 219.736, -64.634, 0.29 ) }
    dend_95 { pt3dadd( -45.41, 219.699, -64.4388, 0.29 ) }
    dend_95 { pt3dadd( -46.7536, 219.665, -63.9482, 0.59 ) }
    dend_95 { pt3dadd( -47.1476, 219.654, -63.7395, 0.59 ) }
    dend_95 { pt3dadd( -48.1587, 219.582, -63.0979, 0.22 ) }
    dend_95 { pt3dadd( -49.3111, 219.43, -62.2032, 0.22 ) }
    dend_95 { pt3dadd( -49.87, 219.289, -61.5711, 0.22 ) }
    dend_95 { pt3dadd( -50.7042, 218.949, -60.4173, 0.22 ) }
    dend_95 { pt3dadd( -51.6365, 218.441, -58.938, 0.66 ) }
    dend_95 { pt3dadd( -52.0923, 218.142, -58.1952, 0.96 ) }
    dend_95 { pt3dadd( -52.8501, 217.579, -56.9399, 0.96 ) }
    dend_95 { pt3dadd( -53.7741, 216.861, -55.4893, 0.22 ) }
    dend_95 { pt3dadd( -54.2974, 216.402, -54.6387, 0.22 ) }
    dend_95 { pt3dadd( -54.5886, 216.126, -54.1794, 0.52 ) }
    dend_95 { pt3dadd( -55.0834, 215.679, -53.5084, 0.22 ) }
    dend_95 { pt3dadd( -55.5034, 215.391, -53.0453, 0.22 ) }
    dend_95 { pt3dadd( -56.4773, 215.032, -52.451, 0.52 ) }
    // Section: dend_93, id: dend_93, parent: dend_91 (entry count 83/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( -40.1952, 180.529, -70.2568, 0.37 ) }
    dend_93 { pt3dadd( -40.143, 179.024, -69.3906, 0.37 ) }
    dend_93 { pt3dadd( -40.1522, 177.967, -68.7852, 0.52 ) }
    dend_93 { pt3dadd( -40.1986, 176.434, -67.9152, 0.44 ) }
    dend_93 { pt3dadd( -40.253, 175.139, -67.2063, 0.66 ) }
    dend_93 { pt3dadd( -40.2972, 173.699, -66.4064, 0.29 ) }
    dend_93 { pt3dadd( -40.3478, 172.471, -65.6815, 0.29 ) }
    dend_93 { pt3dadd( -40.5013, 171.067, -64.7559, 0.44 ) }
    dend_93 { pt3dadd( -40.6399, 170.319, -64.2212, 0.44 ) }
    dend_93 { pt3dadd( -40.9198, 169.3, -63.4151, 0.66 ) }
    dend_93 { pt3dadd( -41.5214, 167.647, -62.0091, 0.37 ) }
    dend_93 { pt3dadd( -42.3053, 166.112, -60.4943, 0.37 ) }
    dend_93 { pt3dadd( -43.1273, 164.93, -59.1525, 0.37 ) }
    dend_93 { pt3dadd( -43.7693, 164.303, -58.3622, 0.29 ) }
    dend_93 { pt3dadd( -44.2357, 163.99, -57.9083, 0.74 ) }
    dend_93 { pt3dadd( -45.1208, 163.58, -57.2329, 0.22 ) }
    dend_93 { pt3dadd( -46.3179, 163.17, -56.5233, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_93 { pt3dadd( -46.9183, 162.993, -56.2236, 0.22 ) }
    dend_93 { pt3dadd( -48.7088, 162.449, -55.3896, 0.22 ) }
    dend_93 { pt3dadd( -49.952, 162.038, -54.8075, 0.22 ) }
    dend_93 { pt3dadd( -51.2494, 161.612, -54.1935, 0.22 ) }
    dend_93 { pt3dadd( -52.1464, 161.335, -53.7684, 0.44 ) }
    dend_93 { pt3dadd( -52.6781, 161.135, -53.5202, 0.44 ) }
    // Section: dend_92, id: dend_92, parent: dend_91 (entry count 6/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( -40.1952, 180.529, -70.2568, 0.81 ) }
    dend_92 { pt3dadd( -42.2804, 180.789, -70.6198, 0.81 ) }
    dend_92 { pt3dadd( -43.0698, 180.851, -70.7187, 0.81 ) }
    dend_92 { pt3dadd( -44.0327, 180.951, -70.872, 0.66 ) }
    dend_92 { pt3dadd( -45.3699, 181.117, -71.084, 0.29 ) }
    dend_92 { pt3dadd( -46.2122, 181.261, -71.2106, 0.37 ) }
    dend_92 { pt3dadd( -47.1076, 181.443, -71.3372, 0.37 ) }
    dend_92 { pt3dadd( -47.8434, 181.597, -71.403, 0.29 ) }
    dend_92 { pt3dadd( -49.2928, 181.857, -71.5451, 0.44 ) }
    dend_92 { pt3dadd( -50.2759, 182.025, -71.6517, 0.59 ) }
    dend_92 { pt3dadd( -51.1951, 182.157, -71.7569, 0.29 ) }
    dend_92 { pt3dadd( -52.3869, 182.291, -71.897, 0.59 ) }
    dend_92 { pt3dadd( -53.399, 182.351, -72.0221, 0.29 ) }
    dend_92 { pt3dadd( -55.1108, 182.345, -72.2287, 0.29 ) }
    dend_92 { pt3dadd( -55.6537, 182.306, -72.2849, 0.22 ) }
    dend_92 { pt3dadd( -57.8826, 182.057, -72.5504, 0.22 ) }
    dend_92 { pt3dadd( -58.1627, 182.012, -72.5865, 0.44 ) }
    dend_92 { pt3dadd( -58.7366, 181.904, -72.6645, 0.44 ) }
    dend_92 { pt3dadd( -59.8878, 181.684, -72.8299, 0.22 ) }
    dend_92 { pt3dadd( -60.7983, 181.498, -72.9519, 0.37 ) }
    // Section: dend_83, id: dend_83, parent: dend_79 (entry count 26/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( 21.2639, 53.8346, 146.118, 0.44 ) }
    dend_83 { pt3dadd( 16.0327, 56.64, 153.574, 0.44 ) }
    dend_83 { pt3dadd( 10.8624, 57.5526, 161.518, 0.44 ) }
    dend_83 { pt3dadd( 6.97936, 58.7235, 170.134, 0.44 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 30/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( 21.2639, 53.8346, 146.118, 0.22 ) }
    dend_80 { pt3dadd( 22.5919, 52.0947, 155.849, 0.44 ) }
    dend_80 { pt3dadd( 24.5678, 51.6901, 165.608, 0.44 ) }
    // Section: dend_76, id: dend_76, parent: dend_72 (entry count 33/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 21.64, 51.3142, 146.291, 0.44 ) }
    dend_76 { pt3dadd( 15.9416, 51.2249, 150.817, 0.44 ) }
    dend_76 { pt3dadd( 10.1025, 52.3546, 155.008, 0.44 ) }
    dend_76 { pt3dadd( 4.55339, 53.5427, 159.562, 0.44 ) }
    dend_76 { pt3dadd( -0.512922, 53.9397, 164.769, 0.44 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 38/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 21.64, 51.3142, 146.291, 0.22 ) }
    dend_73 { pt3dadd( 25.6194, 48.9833, 154.864, 0.44 ) }
    dend_73 { pt3dadd( 28.4474, 44.3929, 163.013, 0.44 ) }
    dend_73 { pt3dadd( 32.4814, 40.4337, 170.966, 0.44 ) }
    // Section: dend_65, id: dend_65, parent: dend_61 (entry count 42/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 110.098, 101.259, 136.581, 0.44 ) }
    dend_65 { pt3dadd( 115.795, 107.812, 146.747, 0.44 ) }
    dend_65 { pt3dadd( 119.97, 116.177, 156.379, 0.44 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 45/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 110.098, 101.259, 136.581, 0.22 ) }
    dend_62 { pt3dadd( 116.798, 106.068, 143.403, 0.44 ) }
    dend_62 { pt3dadd( 122.592, 110.68, 151.132, 0.44 ) }
    // Section: dend_58, id: dend_58, parent: dend_54 (entry count 48/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 112.304, 105.78, 136.185, 0.44 ) }
    dend_58 { pt3dadd( 115.082, 113.907, 140.901, 0.44 ) }
    dend_58 { pt3dadd( 116.039, 122.711, 145.183, 0.44 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 51/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 112.304, 105.78, 136.185, 0.22 ) }
    dend_55 { pt3dadd( 121.049, 104.513, 139.429, 0.44 ) }
    dend_55 { pt3dadd( 129.511, 101.909, 142.684, 0.44 ) }
    dend_55 { pt3dadd( 137.931, 101.274, 146.821, 0.44 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 55/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -18.8136, 84.8219, 18.96, 0.37 ) }
    dend_49 { pt3dadd( -19.5452, 85.4318, 18.7547, 0.37 ) }
    dend_49 { pt3dadd( -20.3835, 86.1059, 18.5619, 0.37 ) }
    dend_49 { pt3dadd( -21.0136, 86.526, 18.4462, 0.37 ) }
    dend_49 { pt3dadd( -21.6045, 86.8366, 18.3229, 0.37 ) }
    dend_49 { pt3dadd( -22.1053, 87.0716, 18.178, 0.52 ) }
    dend_49 { pt3dadd( -22.4718, 87.2416, 18.0529, 0.52 ) }
    dend_49 { pt3dadd( -22.9451, 87.4637, 17.8542, 0.29 ) }
    dend_49 { pt3dadd( -23.6546, 87.7459, 17.4544, 0.29 ) }
    dend_49 { pt3dadd( -24.334, 87.9391, 16.9674, 0.29 ) }
    dend_49 { pt3dadd( -25.0899, 88.0733, 16.3442, 0.66 ) }
    dend_49 { pt3dadd( -25.3755, 88.1055, 16.0909, 0.81 ) }
    dend_49 { pt3dadd( -25.9755, 88.1611, 15.5521, 0.59 ) }
    dend_49 { pt3dadd( -26.9577, 88.2886, 14.7209, 0.29 ) }
    dend_49 { pt3dadd( -27.6093, 88.428, 14.2071, 0.29 ) }
    dend_49 { pt3dadd( -28.2309, 88.6227, 13.7607, 0.74 ) }
    dend_49 { pt3dadd( -28.7734, 88.8467, 13.3818, 0.74 ) }
    dend_49 { pt3dadd( -29.1945, 89.0621, 13.0783, 0.74 ) }
    dend_49 { pt3dadd( -29.8901, 89.4862, 12.5827, 0.44 ) }
    dend_49 { pt3dadd( -30.4035, 89.873, 12.2381, 0.44 ) }
    dend_49 { pt3dadd( -31.2382, 90.5949, 11.7196, 0.52 ) }
    dend_49 { pt3dadd( -31.8423, 91.1764, 11.3649, 0.52 ) }
    dend_49 { pt3dadd( -32.6877, 92.0936, 10.7884, 0.44 ) }
    dend_49 { pt3dadd( -33.0234, 92.5024, 10.4789, 0.44 ) }
    dend_49 { pt3dadd( -33.4361, 93.0547, 9.99728, 0.66 ) }
    dend_49 { pt3dadd( -33.901, 93.7, 9.40887, 0.81 ) }
    dend_49 { pt3dadd( -34.1858, 94.1219, 9.0266, 0.81 ) }
    dend_49 { pt3dadd( -34.585, 94.8811, 8.12019, 0.29 ) }
    dend_49 { pt3dadd( -34.8084, 95.5897, 7.15855, 0.29 ) }
    dend_49 { pt3dadd( -34.9244, 96.1985, 6.28696, 0.52 ) }
    dend_49 { pt3dadd( -34.9461, 96.4325, 5.95793, 0.74 ) }
    dend_49 { pt3dadd( -34.9559, 96.9351, 5.22992, 0.74 ) }
    dend_49 { pt3dadd( -34.851, 98.5431, 2.8495, 0.66 ) }
    dend_49 { pt3dadd( -34.7992, 98.8749, 2.34632, 0.29 ) }
    dend_49 { pt3dadd( -34.6785, 99.3208, 1.64247, 0.29 ) }
    dend_49 { pt3dadd( -34.4463, 99.9535, 0.640457, 0.29 ) }
    dend_49 { pt3dadd( -34.1759, 100.536, -0.36142, 0.29 ) }
    dend_49 { pt3dadd( -33.8434, 101.088, -1.36241, 0.37 ) }
    dend_49 { pt3dadd( -33.4847, 101.619, -2.31161, 0.52 ) }
    dend_49 { pt3dadd( -33.0495, 102.188, -3.43896, 0.74 ) }
    dend_49 { pt3dadd( -32.7642, 102.52, -4.14946, 0.59 ) }
    dend_49 { pt3dadd( -31.9293, 103.405, -6.1465, 0.37 ) }
    dend_49 { pt3dadd( -31.6884, 103.656, -6.6919, 0.37 ) }
    dend_49 { pt3dadd( -31.3912, 103.965, -7.32598, 0.37 ) }
    dend_49 { pt3dadd( -31.1166, 104.278, -7.96257, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_49 { pt3dadd( -30.6701, 104.829, -9.09151, 0.74 ) }
    dend_49 { pt3dadd( -30.491, 105.119, -9.66563, 0.74 ) }
    dend_49 { pt3dadd( -30.2625, 105.791, -10.747, 0.37 ) }
    dend_49 { pt3dadd( -30.1957, 106.164, -11.2907, 0.37 ) }
    dend_49 { pt3dadd( -30.1451, 107.479, -13.0603, 0.44 ) }
    dend_49 { pt3dadd( -30.1674, 107.738, -13.361, 0.66 ) }
    dend_49 { pt3dadd( -30.2661, 108.241, -13.8225, 0.66 ) }
    dend_49 { pt3dadd( -30.4575, 108.95, -14.3705, 0.44 ) }
    dend_49 { pt3dadd( -30.5791, 109.345, -14.617, 0.29 ) }
    dend_49 { pt3dadd( -30.8024, 110.067, -15.011, 0.29 ) }
    dend_49 { pt3dadd( -30.9498, 110.574, -15.2466, 0.37 ) }
    dend_49 { pt3dadd( -31.3321, 111.879, -15.9255, 0.52 ) }
    dend_49 { pt3dadd( -31.6024, 112.831, -16.4185, 0.29 ) }
    dend_49 { pt3dadd( -31.8897, 113.82, -16.9418, 0.74 ) }
    dend_49 { pt3dadd( -32.045, 114.335, -17.2083, 0.74 ) }
    dend_49 { pt3dadd( -32.2788, 115.129, -17.5923, 0.74 ) }
    dend_49 { pt3dadd( -32.7958, 116.76, -18.3159, 0.22 ) }
    dend_49 { pt3dadd( -33.092, 117.585, -18.6304, 0.22 ) }
    dend_49 { pt3dadd( -33.1656, 117.774, -18.6925, 0.74 ) }
    dend_49 { pt3dadd( -33.3709, 118.244, -18.9171, 0.44 ) }
    dend_49 { pt3dadd( -33.605, 118.795, -19.2344, 0.29 ) }
    dend_49 { pt3dadd( -33.9316, 119.66, -19.8036, 0.22 ) }
    dend_49 { pt3dadd( -34.0863, 120.133, -20.1456, 0.44 ) }
    dend_49 { pt3dadd( -34.2302, 120.672, -20.5826, 0.29 ) }
    dend_49 { pt3dadd( -34.6742, 122.641, -22.1602, 0.88 ) }
    dend_49 { pt3dadd( -34.7702, 123.109, -22.5272, 0.88 ) }
    dend_49 { pt3dadd( -34.8559, 123.515, -22.826, 0.22 ) }
    dend_49 { pt3dadd( -34.9426, 124.066, -23.2, 0.22 ) }
    dend_49 { pt3dadd( -34.9915, 124.444, -23.4093, 0.22 ) }
    dend_49 { pt3dadd( -35.0929, 125.075, -23.6654, 0.22 ) }
    dend_49 { pt3dadd( -35.2559, 125.777, -23.8392, 0.22 ) }
    dend_49 { pt3dadd( -35.3968, 126.219, -24.01, 0.22 ) }
    dend_49 { pt3dadd( -35.7247, 127.013, -24.5344, 0.22 ) }
    dend_49 { pt3dadd( -35.9807, 127.583, -24.9846, 0.22 ) }
    dend_49 { pt3dadd( -36.1921, 128.072, -25.3799, 0.22 ) }
    dend_49 { pt3dadd( -36.4202, 128.66, -25.8361, 0.22 ) }
    dend_49 { pt3dadd( -36.764, 129.66, -26.5541, 0.66 ) }
    dend_49 { pt3dadd( -37.2654, 131.303, -27.5668, 0.88 ) }
    dend_49 { pt3dadd( -37.5548, 132.337, -28.1192, 0.37 ) }
    dend_49 { pt3dadd( -37.7386, 133.191, -28.5619, 0.37 ) }
    dend_49 { pt3dadd( -37.8609, 134.0, -28.9724, 0.37 ) }
    dend_49 { pt3dadd( -37.9178, 134.939, -29.4775, 0.29 ) }
    dend_49 { pt3dadd( -37.8723, 136.401, -30.2776, 0.29 ) }
    dend_49 { pt3dadd( -37.7786, 137.178, -30.7285, 0.29 ) }
    dend_49 { pt3dadd( -37.5157, 138.423, -31.6749, 0.29 ) }
    dend_49 { pt3dadd( -37.3291, 139.02, -32.3118, 0.74 ) }
    dend_49 { pt3dadd( -36.9147, 140.009, -33.7697, 0.37 ) }
    dend_49 { pt3dadd( -36.7902, 140.272, -34.2593, 0.37 ) }
    dend_49 { pt3dadd( -36.6422, 140.535, -34.8321, 0.37 ) }
    dend_49 { pt3dadd( -36.2036, 141.249, -36.5479, 0.88 ) }
    dend_49 { pt3dadd( -35.6802, 142.063, -38.722, 0.59 ) }
    dend_49 { pt3dadd( -35.2565, 142.68, -40.545, 0.37 ) }
    dend_49 { pt3dadd( -35.0851, 142.977, -41.4908, 0.44 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -18.8136, 84.8219, 18.96, 0.29 ) }
    dend_48 { pt3dadd( -19.9567, 86.6128, 19.3267, 0.29 ) }
    dend_48 { pt3dadd( -20.7683, 87.8347, 19.501, 0.29 ) }
    dend_48 { pt3dadd( -21.7048, 89.2192, 19.6451, 0.29 ) }
    dend_48 { pt3dadd( -22.5468, 90.4718, 19.6905, 0.22 ) }
    dend_48 { pt3dadd( -23.4841, 91.9147, 19.6851, 0.22 ) }
    dend_48 { pt3dadd( -23.8182, 92.461, 19.6698, 0.22 ) }
    dend_48 { pt3dadd( -24.5233, 93.608, 19.549, 0.74 ) }
    dend_48 { pt3dadd( -24.8381, 94.0981, 19.4928, 0.74 ) }
    dend_48 { pt3dadd( -25.7269, 95.4436, 19.343, 0.44 ) }
    dend_48 { pt3dadd( -26.204, 96.1932, 19.259, 0.59 ) }
    dend_48 { pt3dadd( -26.7454, 97.1263, 19.1726, 0.59 ) }
    dend_48 { pt3dadd( -27.7391, 98.8641, 19.0617, 0.29 ) }
    dend_48 { pt3dadd( -28.5787, 100.412, 19.0181, 0.29 ) }
    dend_48 { pt3dadd( -29.0772, 101.339, 19.0018, 0.29 ) }
    dend_48 { pt3dadd( -29.8258, 102.62, 18.9968, 0.29 ) }
    dend_48 { pt3dadd( -30.7943, 104.16, 18.9345, 0.81 ) }
    dend_48 { pt3dadd( -31.0842, 104.605, 18.883, 0.81 ) }
    dend_48 { pt3dadd( -31.9428, 106.037, 18.605, 0.29 ) }
    dend_48 { pt3dadd( -32.4316, 106.937, 18.4023, 0.29 ) }
    dend_48 { pt3dadd( -33.0925, 108.146, 18.0384, 0.29 ) }
    dend_48 { pt3dadd( -33.5661, 108.9, 17.7068, 0.29 ) }
    dend_48 { pt3dadd( -34.1896, 109.801, 17.2216, 0.29 ) }
    dend_48 { pt3dadd( -34.9705, 110.874, 16.6008, 0.74 ) }
    dend_48 { pt3dadd( -36.3156, 112.641, 15.5489, 0.22 ) }
    dend_48 { pt3dadd( -37.5492, 114.253, 14.6279, 0.22 ) }
    dend_48 { pt3dadd( -38.8291, 115.943, 13.683, 0.37 ) }
    dend_48 { pt3dadd( -39.3683, 116.6, 13.3279, 0.37 ) }
    dend_48 { pt3dadd( -40.1004, 117.461, 12.889, 0.22 ) }
    dend_48 { pt3dadd( -41.2034, 118.801, 12.2493, 0.22 ) }
    dend_48 { pt3dadd( -42.1883, 120.074, 11.7427, 0.52 ) }
    dend_48 { pt3dadd( -43.412, 121.733, 11.2288, 0.29 ) }
    dend_48 { pt3dadd( -43.9111, 122.447, 11.043, 0.29 ) }
    dend_48 { pt3dadd( -44.6851, 123.531, 10.6993, 0.29 ) }
    dend_48 { pt3dadd( -45.9465, 125.196, 10.1111, 0.29 ) }
    dend_48 { pt3dadd( -46.8419, 126.297, 9.67851, 0.29 ) }
    dend_48 { pt3dadd( -47.8594, 127.459, 9.18891, 0.29 ) }
    dend_48 { pt3dadd( -48.8732, 128.5, 8.74433, 0.29 ) }
    dend_48 { pt3dadd( -50.384, 129.944, 8.14346, 0.29 ) }
    dend_48 { pt3dadd( -51.8198, 131.142, 7.60702, 0.29 ) }
    dend_48 { pt3dadd( -52.3687, 131.563, 7.39832, 0.66 ) }
    dend_48 { pt3dadd( -52.7418, 131.864, 7.24323, 0.66 ) }
    dend_48 { pt3dadd( -53.7252, 132.728, 6.82176, 0.22 ) }
    dend_48 { pt3dadd( -54.8058, 133.777, 6.33232, 0.22 ) }
    dend_48 { pt3dadd( -55.9766, 135.019, 5.80349, 0.29 ) }
    dend_48 { pt3dadd( -56.791, 135.933, 5.41063, 0.29 ) }
    dend_48 { pt3dadd( -58.0319, 137.405, 4.75441, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_48 { pt3dadd( -58.5041, 137.995, 4.48398, 0.52 ) }
    dend_48 { pt3dadd( -59.4184, 139.183, 3.95201, 0.29 ) }
    dend_48 { pt3dadd( -60.4819, 140.575, 3.39344, 0.29 ) }
    dend_48 { pt3dadd( -61.4672, 141.886, 3.02722, 0.29 ) }
    dend_48 { pt3dadd( -62.4495, 143.206, 2.79026, 0.29 ) }
    dend_48 { pt3dadd( -63.1558, 144.175, 2.69823, 0.29 ) }
    dend_48 { pt3dadd( -64.1052, 145.472, 2.59276, 0.29 ) }
    dend_48 { pt3dadd( -65.0406, 146.796, 2.45247, 0.29 ) }
    dend_48 { pt3dadd( -65.933, 148.172, 2.29356, 0.37 ) }
    dend_48 { pt3dadd( -66.5905, 149.275, 2.1491, 0.37 ) }
    dend_48 { pt3dadd( -67.428, 150.689, 1.80681, 0.37 ) }
    dend_48 { pt3dadd( -68.2429, 152.085, 1.34968, 0.29 ) }
    dend_48 { pt3dadd( -69.2038, 153.749, 0.667982, 0.22 ) }
    dend_48 { pt3dadd( -69.8141, 154.826, 0.159651, 0.44 ) }
    dend_48 { pt3dadd( -70.7452, 156.563, -0.662605, 0.81 ) }
    dend_48 { pt3dadd( -72.4607, 159.906, -2.17476, 0.22 ) }
    dend_48 { pt3dadd( -73.3248, 161.694, -2.82604, 0.22 ) }
    dend_48 { pt3dadd( -73.8982, 163.057, -3.12957, 0.74 ) }
    dend_48 { pt3dadd( -74.1675, 163.825, -3.18783, 0.74 ) }
    dend_48 { pt3dadd( -74.7536, 166.08, -3.05335, 0.22 ) }
    dend_48 { pt3dadd( -74.9315, 167.756, -2.70438, 0.22 ) }
    dend_48 { pt3dadd( -74.8421, 170.149, -1.99628, 0.29 ) }
    dend_48 { pt3dadd( -74.6175, 171.956, -1.54595, 0.29 ) }
    dend_48 { pt3dadd( -74.33, 173.51, -1.24765, 0.29 ) }
    dend_48 { pt3dadd( -73.9885, 175.071, -1.07209, 0.29 ) }
    dend_48 { pt3dadd( -73.3716, 177.572, -0.948941, 0.22 ) }
    dend_48 { pt3dadd( -72.6313, 180.041, -0.945648, 0.22 ) }
    dend_48 { pt3dadd( -71.9995, 181.939, -1.14707, 0.22 ) }
    dend_48 { pt3dadd( -71.6052, 183.051, -1.3412, 0.37 ) }
    dend_48 { pt3dadd( -71.1803, 184.121, -1.60204, 0.37 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 30/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -69.6355, 46.8204, 11.1011, 0.22 ) }
    dend_46 { pt3dadd( -79.9549, 42.2251, 7.93949, 0.22 ) }
    dend_46 { pt3dadd( -90.7182, 37.8749, 6.31907, 0.22 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 33/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -69.6355, 46.8204, 11.1011, 0.22 ) }
    dend_45 { pt3dadd( -79.668, 41.9157, 8.43345, 0.22 ) }
    dend_45 { pt3dadd( -89.9131, 36.8874, 7.17621, 0.22 ) }
    dend_45 { pt3dadd( -100.973, 34.0947, 8.11899, 0.22 ) }
    dend_45 { pt3dadd( -112.258, 33.3032, 9.79361, 0.22 ) }
    dend_45 { pt3dadd( -123.163, 31.4212, 12.6872, 0.22 ) }
    dend_45 { pt3dadd( -134.126, 28.3902, 13.9876, 0.22 ) }
    dend_45 { pt3dadd( -145.076, 25.0426, 13.7601, 0.22 ) }
    // Section: dend_17, id: dend_17, parent: dend_9 (entry count 41/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 4.78951, -273.28, 41.9286, 0.22 ) }
    dend_17 { pt3dadd( 3.6093, -273.335, 41.1776, 0.22 ) }
    dend_17 { pt3dadd( 2.59192, -273.226, 40.5334, 0.22 ) }
    dend_17 { pt3dadd( 1.96579, -273.121, 40.1575, 0.22 ) }
    dend_17 { pt3dadd( 1.5706, -273.082, 39.9273, 0.22 ) }
    dend_17 { pt3dadd( 0.9674, -273.074, 39.5924, 0.22 ) }
    dend_17 { pt3dadd( 0.554481, -273.098, 39.378, 0.22 ) }
    dend_17 { pt3dadd( 0.0672314, -273.156, 39.1355, 0.52 ) }
    dend_17 { pt3dadd( -0.903582, -273.282, 38.6652, 0.22 ) }
    dend_17 { pt3dadd( -1.69348, -273.474, 38.308, 0.22 ) }
    dend_17 { pt3dadd( -2.24578, -273.676, 38.0823, 0.37 ) }
    dend_17 { pt3dadd( -2.84766, -273.977, 37.8513, 0.37 ) }
    dend_17 { pt3dadd( -3.6315, -274.459, 37.5413, 0.29 ) }
    dend_17 { pt3dadd( -10.8009, -274.783, 32.5141, 0.29 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 55/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 4.78951, -273.28, 41.9286, 0.96 ) }
    dend_10 { pt3dadd( 4.75582, -273.756, 42.1462, 0.96 ) }
    dend_10 { pt3dadd( 4.66407, -275.051, 42.739, 0.59 ) }
    dend_10 { pt3dadd( 4.58897, -276.111, 43.2242, 0.59 ) }
    dend_10 { pt3dadd( 4.54573, -276.722, 43.5035, 0.59 ) }
    dend_10 { pt3dadd( 4.45039, -278.068, 44.1195, 0.52 ) }
    dend_10 { pt3dadd( 4.33047, -279.76, 44.8943, 0.74 ) }
    // Section: dend_98, id: dend_98, parent: dend_96 (entry count 62/100)
    dend_98 { pt3dclear() }
    dend_98 { pt3dadd( -49.7181, 229.189, -85.2693, 0.29 ) }
    dend_98 { pt3dadd( -48.6666, 230.105, -85.6443, 0.29 ) }
    dend_98 { pt3dadd( -47.9883, 230.738, -85.9012, 0.29 ) }
    dend_98 { pt3dadd( -47.1447, 231.7, -86.2371, 0.74 ) }
    dend_98 { pt3dadd( -46.259, 232.965, -86.5725, 0.52 ) }
    dend_98 { pt3dadd( -45.8837, 233.648, -86.7864, 0.29 ) }
    dend_98 { pt3dadd( -45.3079, 234.847, -87.1899, 0.22 ) }
    dend_98 { pt3dadd( -45.117, 235.336, -87.3628, 0.22 ) }
    dend_98 { pt3dadd( -44.7977, 236.45, -87.7655, 0.22 ) }
    dend_98 { pt3dadd( -44.55, 237.75, -88.1945, 0.74 ) }
    dend_98 { pt3dadd( -44.3403, 239.747, -88.7496, 0.29 ) }
    dend_98 { pt3dadd( -44.3142, 240.567, -88.9846, 0.29 ) }
    dend_98 { pt3dadd( -44.3275, 241.521, -89.2532, 0.29 ) }
    dend_98 { pt3dadd( -44.3484, 242.479, -89.4985, 0.29 ) }
    dend_98 { pt3dadd( -44.3581, 243.364, -89.7035, 0.74 ) }
    dend_98 { pt3dadd( -44.3905, 244.389, -89.9167, 0.74 ) }
    dend_98 { pt3dadd( -44.4539, 245.72, -90.0998, 0.37 ) }
    dend_98 { pt3dadd( -44.5438, 246.951, -90.2605, 0.29 ) }
    dend_98 { pt3dadd( -44.6541, 248.337, -90.4373, 0.29 ) }
    dend_98 { pt3dadd( -44.6943, 249.521, -90.5761, 0.29 ) }
    // Section: dend_97, id: dend_97, parent: dend_96 (entry count 82/100)
    dend_97 { pt3dclear() }
    dend_97 { pt3dadd( -49.7181, 229.189, -85.2693, 0.22 ) }
    dend_97 { pt3dadd( -49.9773, 227.529, -85.5848, 0.22 ) }
    dend_97 { pt3dadd( -50.2155, 226.536, -85.783, 0.22 ) }
    dend_97 { pt3dadd( -50.4561, 225.666, -85.9728, 0.37 ) }
    dend_97 { pt3dadd( -50.6221, 225.085, -86.1174, 0.37 ) }
    dend_97 { pt3dadd( -50.9069, 224.148, -86.3646, 0.29 ) }
    dend_97 { pt3dadd( -51.217, 223.213, -86.614, 0.29 ) }
    dend_97 { pt3dadd( -51.5322, 222.306, -86.8631, 0.29 ) }
    dend_97 { pt3dadd( -51.7915, 221.658, -87.0524, 0.66 ) }
    dend_97 { pt3dadd( -52.2858, 220.616, -87.3684, 0.22 ) }
    dend_97 { pt3dadd( -52.6687, 219.852, -87.6214, 0.22 ) }
    dend_97 { pt3dadd( -52.8785, 219.418, -87.7796, 0.37 ) }
    // Section: dend_85, id: dend_85, parent: dend_83 (entry count 94/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( 6.97936, 58.7235, 170.134, 0.44 ) }
    dend_85 { pt3dadd( 0.740688, 61.5509, 177.717, 0.44 ) }
    // Section: dend_84, id: dend_84, parent: dend_83 (entry count 96/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( 6.97936, 58.7235, 170.134, 0.22 ) }
    dend_84 { pt3dadd( 3.6747, 57.1562, 178.031, 0.44 ) }
    // Section: dend_82, id: dend_82, parent: dend_80 (entry count 98/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( 24.5678, 51.6901, 165.608, 0.44 ) }
    dend_82 { pt3dadd( 15.706, 50.7406, 169.166, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_82 { pt3dadd( 6.46672, 49.6305, 171.521, 0.44 ) }
    dend_82 { pt3dadd( -3.03563, 48.6822, 172.472, 0.44 ) }
    dend_82 { pt3dadd( -12.2504, 45.95, 172.992, 0.44 ) }
    dend_82 { pt3dadd( -21.2567, 42.8237, 174.38, 0.44 ) }
    dend_82 { pt3dadd( -30.5018, 40.6181, 175.838, 0.44 ) }
    dend_82 { pt3dadd( -39.4165, 38.4844, 178.739, 0.44 ) }
    // Section: dend_81, id: dend_81, parent: dend_80 (entry count 6/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( 24.5678, 51.6901, 165.608, 0.22 ) }
    dend_81 { pt3dadd( 29.2205, 51.0377, 174.263, 0.44 ) }
    dend_81 { pt3dadd( 34.1195, 51.4487, 182.799, 0.44 ) }
    // Section: dend_78, id: dend_78, parent: dend_76 (entry count 9/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( -0.512922, 53.9397, 164.769, 0.44 ) }
    dend_78 { pt3dadd( -3.73646, 42.246, 162.628, 0.44 ) }
    dend_78 { pt3dadd( -8.44739, 31.4219, 159.227, 0.44 ) }
    // Section: dend_77, id: dend_77, parent: dend_76 (entry count 12/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -0.512922, 53.9397, 164.769, 0.22 ) }
    dend_77 { pt3dadd( -3.00966, 61.5363, 169.495, 0.44 ) }
    // Section: dend_75, id: dend_75, parent: dend_73 (entry count 14/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 32.4814, 40.4337, 170.966, 0.44 ) }
    dend_75 { pt3dadd( 37.2006, 37.9472, 177.971, 0.44 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 16/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 32.4814, 40.4337, 170.966, 0.22 ) }
    dend_74 { pt3dadd( 35.2178, 36.2624, 179.54, 0.44 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 18/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 119.97, 116.177, 156.379, 0.44 ) }
    dend_67 { pt3dadd( 124.971, 124.778, 161.788, 0.44 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 20/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 119.97, 116.177, 156.379, 0.22 ) }
    dend_66 { pt3dadd( 122.587, 118.229, 163.696, 0.44 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 22/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 122.592, 110.68, 151.132, 0.44 ) }
    dend_64 { pt3dadd( 127.408, 114.392, 158.334, 0.44 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 24/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 122.592, 110.68, 151.132, 0.22 ) }
    dend_63 { pt3dadd( 131.129, 117.925, 159.358, 0.44 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 26/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 116.039, 122.711, 145.183, 0.44 ) }
    dend_60 { pt3dadd( 119.206, 128.136, 140.939, 0.44 ) }
    dend_60 { pt3dadd( 123.413, 133.651, 137.876, 0.44 ) }
    dend_60 { pt3dadd( 127.617, 139.453, 135.371, 0.44 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 30/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 116.039, 122.711, 145.183, 0.22 ) }
    dend_59 { pt3dadd( 113.517, 125.067, 150.571, 0.44 ) }
    dend_59 { pt3dadd( 110.034, 126.955, 155.585, 0.44 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 33/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 137.931, 101.274, 146.821, 0.44 ) }
    dend_57 { pt3dadd( 143.254, 98.785, 152.994, 0.44 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 35/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 137.931, 101.274, 146.821, 0.22 ) }
    dend_56 { pt3dadd( 150.784, 102.227, 142.244, 0.44 ) }
    dend_56 { pt3dadd( 163.723, 103.988, 138.168, 0.44 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 38/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 4.33047, -279.76, 44.8943, 0.52 ) }
    dend_12 { pt3dadd( 4.09253, -281.39, 44.9304, 0.52 ) }
    dend_12 { pt3dadd( 3.98233, -282.451, 44.8186, 0.74 ) }
    dend_12 { pt3dadd( 3.98732, -283.214, 44.8074, 0.81 ) }
    dend_12 { pt3dadd( 4.06551, -284.354, 44.8615, 1.03 ) }
    dend_12 { pt3dadd( 4.14119, -285.508, 45.0101, 0.74 ) }
    dend_12 { pt3dadd( 4.19959, -286.8, 45.2737, 0.44 ) }
    dend_12 { pt3dadd( 4.32086, -288.581, 45.6325, 0.29 ) }
    dend_12 { pt3dadd( 4.58548, -291.215, 46.342, 0.29 ) }
    dend_12 { pt3dadd( 4.69377, -292.023, 46.6284, 0.29 ) }
    dend_12 { pt3dadd( 4.94733, -293.412, 47.305, 1.47 ) }
    dend_12 { pt3dadd( 5.13496, -294.187, 47.8473, 1.47 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 50/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 4.33047, -279.76, 44.8943, 0.37 ) }
    dend_11 { pt3dadd( 5.3258, -280.443, 44.3228, 0.37 ) }
    dend_11 { pt3dadd( 6.25668, -281.082, 43.7884, 0.37 ) }
    dend_11 { pt3dadd( 7.17115, -281.709, 43.2634, 0.29 ) }
    dend_11 { pt3dadd( 8.7226, -282.773, 42.3727, 0.29 ) }
    dend_11 { pt3dadd( 9.50007, -283.306, 41.9264, 0.29 ) }
    dend_11 { pt3dadd( 10.5319, -284.014, 41.334, 0.29 ) }
    dend_11 { pt3dadd( 20.8443, -291.118, 37.8324, 0.29 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 58/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 5.13496, -294.187, 47.8473, 1.03 ) }
    dend_14 { pt3dadd( 4.99406, -294.69, 47.8636, 1.03 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 60/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 5.13496, -294.187, 47.8473, 0.22 ) }
    dend_13 { pt3dadd( 3.9441, -293.052, 47.8166, 0.22 ) }
    dend_13 { pt3dadd( 3.04221, -292.222, 47.7046, 0.22 ) }
    dend_13 { pt3dadd( 2.37281, -291.575, 47.5644, 0.22 ) }
    dend_13 { pt3dadd( 1.78119, -290.958, 47.4042, 0.22 ) }
    dend_13 { pt3dadd( 1.01057, -290.154, 47.1954, 0.22 ) }
    dend_13 { pt3dadd( 0.297343, -289.409, 47.0023, 0.22 ) }
    dend_13 { pt3dadd( -0.319064, -288.819, 46.765, 0.22 ) }
    dend_13 { pt3dadd( -0.874166, -288.281, 46.4715, 0.22 ) }
    dend_13 { pt3dadd( -1.27385, -287.858, 46.1992, 0.22 ) }
    dend_13 { pt3dadd( -9.18824, -280.637, 44.5256, 0.22 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 71/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 4.99406, -294.69, 47.8636, 0.96 ) }
    dend_16 { pt3dadd( 4.89779, -295.743, 47.7666, 0.96 ) }
    dend_16 { pt3dadd( 4.84143, -296.359, 47.7098, 0.96 ) }
    dend_16 { pt3dadd( 4.73022, -297.575, 47.5978, 1.33 ) }
    dend_16 { pt3dadd( 4.57754, -299.244, 47.4439, 0.22 ) }
    dend_16 { pt3dadd( 4.48517, -300.253, 47.3508, 0.22 ) }
    dend_16 { pt3dadd( 4.3658, -301.558, 47.2305, 0.22 ) }
    dend_16 { pt3dadd( 5.05365, -311.065, 46.8723, 0.22 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 79/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 4.99406, -294.69, 47.8636, 0.22 ) }
    dend_15 { pt3dadd( 3.41184, -294.302, 48.3577, 0.22 ) }
    dend_15 { pt3dadd( 2.1283, -293.987, 48.7586, 0.22 ) }
    dend_15 { pt3dadd( 1.22856, -293.766, 49.0396, 0.22 ) }
    dend_15 { pt3dadd( -0.48511, -293.345, 49.5748, 0.22 ) }
    dend_15 { pt3dadd( -0.878147, -293.249, 49.6975, 0.22 ) }
    dend_15 { pt3dadd( -11.9177, -291.673, 52.0997, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_86, dend_23, dend_0, dend_108, dend_87, dend_39, dend_24, dend_18, dend_1, dend_105, dend_88, dend_51, dend_40, dend_36, dend_25, dend_22, dend_19, dend_3, dend_2, dend_107, dend_106, dend_102, dend_89, dend_69, dend_52, dend_42, dend_41, dend_38, dend_37, dend_31, dend_26, dend_21, dend_20, dend_5, dend_4, dend_104, dend_103, dend_99, dend_90, dend_71, dend_70, dend_68, dend_53, dend_50, dend_43, dend_33, dend_32, dend_28, dend_27, dend_7, dend_6, dend_101, dend_100, dend_94, dend_91, dend_79, dend_72, dend_61, dend_54, dend_47, dend_44, dend_35, dend_34, dend_30, dend_29, dend_9, dend_8, dend_96, dend_95, dend_93, dend_92, dend_83, dend_80, dend_76, dend_73, dend_65, dend_62, dend_58, dend_55, dend_49, dend_48, dend_46, dend_45, dend_17, dend_10, dend_98, dend_97, dend_85, dend_84, dend_82, dend_81, dend_78, dend_77, dend_75, dend_74, dend_67, dend_66, dend_64, dend_63, dend_60, dend_59, dend_57, dend_56, dend_12, dend_11, dend_14, dend_13, dend_16, dend_15]}
    ModelViewParmSubset_2 = new SectionList()
    dend_86 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_108 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_105 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_107 ModelViewParmSubset_2.append()
    dend_106 ModelViewParmSubset_2.append()
    dend_102 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_104 ModelViewParmSubset_2.append()
    dend_103 ModelViewParmSubset_2.append()
    dend_99 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_101 ModelViewParmSubset_2.append()
    dend_100 ModelViewParmSubset_2.append()
    dend_94 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_96 ModelViewParmSubset_2.append()
    dend_95 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_92 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_98 ModelViewParmSubset_2.append()
    dend_97 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_86, dend_23, dend_0, dend_108, dend_87, dend_39, dend_24, dend_18, dend_1, dend_105, dend_88, dend_51, dend_40, dend_36, dend_25, dend_22, dend_19, dend_3, dend_2, dend_107, dend_106, dend_102, dend_89, dend_69, dend_52, dend_42, dend_41, dend_38, dend_37, dend_31, dend_26, dend_21, dend_20, dend_5, dend_4, dend_104, dend_103, dend_99, dend_90, dend_71, dend_70, dend_68, dend_53, dend_50, dend_43, dend_33, dend_32, dend_28, dend_27, dend_7, dend_6, dend_101, dend_100, dend_94, dend_91, dend_79, dend_72, dend_61, dend_54, dend_47, dend_44, dend_35, dend_34, dend_30, dend_29, dend_9, dend_8, dend_96, dend_95, dend_93, dend_92, dend_83, dend_80, dend_76, dend_73, dend_65, dend_62, dend_58, dend_55, dend_49, dend_48, dend_46, dend_45, dend_17, dend_10, dend_98, dend_97, dend_85, dend_84, dend_82, dend_81, dend_78, dend_77, dend_75, dend_74, dend_67, dend_66, dend_64, dend_63, dend_60, dend_59, dend_57, dend_56, dend_12, dend_11, dend_14, dend_13, dend_16, dend_15]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_108 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_105 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_107 ModelViewParmSubset_4.append()
    dend_106 ModelViewParmSubset_4.append()
    dend_102 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_104 ModelViewParmSubset_4.append()
    dend_103 ModelViewParmSubset_4.append()
    dend_99 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_101 ModelViewParmSubset_4.append()
    dend_100 ModelViewParmSubset_4.append()
    dend_94 ModelViewParmSubset_4.append()
    dend_91 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_96 ModelViewParmSubset_4.append()
    dend_95 ModelViewParmSubset_4.append()
    dend_93 ModelViewParmSubset_4.append()
    dend_92 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_98 ModelViewParmSubset_4.append()
    dend_97 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_108]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_108 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_87 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_24 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_105]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_105 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_51 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_22 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_89 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_38 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_26 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_103]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_103 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_99]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_99 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_90 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_71 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_70 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_68 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_53 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_50 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_43 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_32 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_27 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_94]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_94 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_44 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_49 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_48 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_45 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_82 OneSecGrp_SectionRef_93.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_23 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_86 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_39 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_40 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_42 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_41 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_88 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_107]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_107 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_69 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_25 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_102]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_102 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_47 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_36 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_106]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_106 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_37 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_31 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_104]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_104 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_18 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_79 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_72 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_19 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_33 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_35 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_34 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_21 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_28 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_80 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_20 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_61 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_29 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_83 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_76 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_73 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_46 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_54 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_84 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_75 OneSecGrp_SectionRef_97.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_77 OneSecGrp_SectionRef_96.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_85 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_98 = new SectionList()
    dend_74 OneSecGrp_SectionRef_98.append()

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_81 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_62 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_58 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_30 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_78 OneSecGrp_SectionRef_95.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_65 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_100]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_100 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_101 = new SectionList()
    dend_64 OneSecGrp_SectionRef_101.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_55 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_101]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_101 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_100 = new SectionList()
    dend_66 OneSecGrp_SectionRef_100.append()

    // Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_102 = new SectionList()
    dend_63 OneSecGrp_SectionRef_102.append()

    // Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_104 = new SectionList()
    dend_59 OneSecGrp_SectionRef_104.append()

    // Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_99 = new SectionList()
    dend_67 OneSecGrp_SectionRef_99.append()

    // Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_105 = new SectionList()
    dend_57 OneSecGrp_SectionRef_105.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_3 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_103 = new SectionList()
    dend_60 OneSecGrp_SectionRef_103.append()

    // Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_106 = new SectionList()
    dend_56 OneSecGrp_SectionRef_106.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_5 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_91 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_7 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_6 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_9 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_4 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_8 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_10 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_92 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_17 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_107 = new SectionList()
    dend_12 OneSecGrp_SectionRef_107.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_93 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_109 = new SectionList()
    dend_14 OneSecGrp_SectionRef_109.append()

    // Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_108 = new SectionList()
    dend_11 OneSecGrp_SectionRef_108.append()

    // Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_111 = new SectionList()
    dend_16 OneSecGrp_SectionRef_111.append()

    // Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_112 = new SectionList()
    dend_15 OneSecGrp_SectionRef_112.append()

    // Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_110 = new SectionList()
    dend_13 OneSecGrp_SectionRef_110.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_95]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_95 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_96]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_96 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_97]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_97 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_98]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_98 OneSecGrp_SectionRef_89.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()
    dend_94 basal.append()
    dend_95 basal.append()
    dend_96 basal.append()
    dend_97 basal.append()
    dend_98 basal.append()
    dend_99 basal.append()
    dend_100 basal.append()
    dend_101 basal.append()
    dend_102 basal.append()
    dend_103 basal.append()
    dend_104 basal.append()
    dend_105 basal.append()
    dend_106 basal.append()
    dend_107 basal.append()
    dend_108 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_69, dend_69, dend_69, dend_69, dend_52, dend_52, dend_52, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_101, dend_101, dend_101, dend_101, dend_101, dend_100, dend_100, dend_100, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_79, dend_79, dend_72, dend_72, dend_61, dend_61, dend_54, dend_54, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_83, dend_83, dend_83, dend_80, dend_80, dend_76, dend_76, dend_76, dend_76, dend_73, dend_73, dend_73, dend_65, dend_65, dend_62, dend_62, dend_58, dend_58, dend_55, dend_55, dend_55, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_85, dend_84, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_78, dend_78, dend_77, dend_75, dend_74, dend_67, dend_66, dend_64, dend_63, dend_60, dend_60, dend_60, dend_59, dend_59, dend_57, dend_56, dend_56, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_83 all.append()
    dend_83 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_83 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_45 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_85 all.append()
    dend_84 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_77 all.append()
    dend_75 all.append()
    dend_74 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 9
    dend_108 nseg = 7
    dend_87 nseg = 3
    dend_24 nseg = 5
    dend_1 nseg = 3
    dend_105 nseg = 3
    dend_51 nseg = 3
    dend_22 nseg = 5
    dend_2 nseg = 5
    dend_89 nseg = 3
    dend_38 nseg = 9
    dend_26 nseg = 3
    dend_103 nseg = 7
    dend_99 nseg = 5
    dend_90 nseg = 5
    dend_71 nseg = 3
    dend_70 nseg = 7
    dend_68 nseg = 7
    dend_53 nseg = 3
    dend_50 nseg = 3
    dend_43 nseg = 3
    dend_32 nseg = 5
    dend_27 nseg = 5
    dend_94 nseg = 3
    dend_44 nseg = 3
    dend_49 nseg = 5
    dend_48 nseg = 7
    dend_45 nseg = 5
    dend_82 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L5_BTC_9b82f426e5_0_0


