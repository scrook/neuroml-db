// Cell: dNAC222_L5_SBC_513d1f1596_0_0
/*
{
  "id" : "dNAC222_L5_SBC_513d1f1596_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.0539, -10.2039, 0.0, 4.14336", "-1.01121, -9.20625, 0.0, 7.24872", "-0.968511, -8.20857, 0.0, 9.44401", "-0.925815, -7.2109, 0.0, 10.5422", "-0.88312, -6.21322, 0.0, 11.4092", "-0.840424, -5.21554, 0.0, 11.9642", "-0.797728, -4.21787, 0.0, 12.4342", "-0.755032, -3.22019, 0.0, 12.6614", "-0.712337, -2.22251, 0.0, 12.6364", "-0.669641, -1.22484, 0.0, 12.5104", "-0.626945, -0.227159, 0.0, 12.2671", "-0.584249, 0.770517, 0.0, 12.0239", "-0.541554, 1.76819, 0.0, 11.4645", "-0.498858, 2.76587, 0.0, 10.6882", "-0.456162, 3.76355, 0.0, 9.91399", "-0.413466, 4.76122, 0.0, 9.47101", "-0.370771, 5.7589, 0.0, 9.20688", "-0.328075, 6.75658, 0.0, 8.75449", "-0.285379, 7.75425, 0.0, 8.25522", "-0.242683, 8.75193, 0.0, 6.57349", "-0.199988, 9.74961, 0.0, 3.81" ]
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "0.284736, 7.50294, 0.16, 6.82", "0.793362, 9.28613, 0.528626, 6.82", "1.60148, 12.1193, 1.11431, 6.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999929751125366
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-2.66527, -10.1579, 1.27, 5.68", "-3.16148, -11.8485, 0.84318, 3.64", "-3.64384, -13.4919, 0.42827, 2.95" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999929751125366
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.30527, 7.45169, 0.0100002, 1.59", "-5.13645, 8.11763, -0.0261979, 1.59", "-8.01462, 9.16432, -0.0830927, 1.36", "-9.5301, 9.71544, -0.11305, 1.36", "-13.0521, 10.9962, -0.182671, 1.82" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999929751125366
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.199988, 9.74961, 0.0, 0.483322", "0.441352, 24.7359, 0.0, 0.483322", "1.08269, 39.7222, 0.0, 0.483322" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "1.60148, 12.1193, 1.11431, 1.14", "-0.945413, 17.7004, 0.599652, 1.14", "-2.08796, 20.2041, 0.368773, 1.14", "-2.82711, 21.8238, 0.219412, 1.59" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "1.60148, 12.1193, 1.11431, 0.91", "5.58704, 13.432, -0.266407, 0.91", "7.44139, 14.0428, -0.908807, 0.91" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-3.64384, -13.4919, 0.42827, 0.91", "-5.60472, -13.7598, 0.0681805, 0.91", "-8.01996, -13.8084, -0.249605, 0.91", "-10.2053, -13.742, -0.514572, 1.14", "-11.7968, -13.683, -0.727383, 0.91", "-14.6957, -13.6254, -1.10629, 0.68", "-16.149, -13.646, -1.29066, 0.91", "-18.8969, -13.6736, -1.6081, 1.36", "-21.4405, -13.728, -1.8343, 0.68", "-23.2, -13.8495, -1.96896, 0.68", "-25.442, -14.1577, -2.11551, 1.59", "-28.3849, -14.7396, -2.27223, 1.14", "-29.6743, -15.0195, -2.31962, 0.68", "-32.3725, -15.6273, -2.40887, 1.14", "-34.5291, -16.116, -2.47614, 0.23", "-36.2571, -16.5085, -2.53903, 1.14", "-38.4038, -17.034, -2.66551, 0.91", "-42.0279, -18.0511, -2.9435, 0.23", "-43.8025, -18.6673, -3.1189, 0.91", "-45.3642, -19.371, -3.3237, 0.91", "-46.3934, -20.0221, -3.49192, 1.14", "-47.7781, -21.4003, -3.75643, 0.45", "-48.5623, -22.5926, -3.92331, 0.45", "-49.296, -24.079, -4.08539, 0.91", "-49.9412, -25.6371, -4.20947, 0.45", "-50.5164, -27.2312, -4.29852, 1.59", "-51.5211, -30.3682, -4.44181, 0.45", "-52.241, -32.9666, -4.53233, 1.82" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-3.64384, -13.4919, 0.42827, 2.95", "-4.26605, -17.9105, 0.633037, 2.95", "-4.90049, -22.4158, 0.841828, 2.95", "-5.17103, -24.337, 0.930862, 3.41" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-13.0521, 10.9962, -0.182671, 1.14", "-14.7775, 9.33912, -0.236333, 1.14", "-15.9281, 8.04559, -0.317351, 0.45", "-16.9834, 6.78984, -0.401037, 1.59", "-19.1131, 4.31578, -0.57031, 0.45", "-20.6985, 2.55391, -0.747607, 0.91", "-21.4688, 1.7456, -0.84955, 1.59", "-23.3242, -0.275212, -1.12265, 0.23", "-24.0908, -1.03678, -1.28649, 0.23", "-24.9314, -1.64133, -1.58994, 0.23", "-26.578, -1.8639, -2.31775, 0.68", "-28.2084, -1.79529, -2.89669, 0.68", "-29.4325, -1.79314, -3.21426, 0.68", "-31.4245, -1.91993, -3.54183, 1.59", "-32.983, -2.2113, -3.681, 1.59", "-35.2111, -2.78847, -3.7429, 0.23", "-37.2187, -3.41173, -3.69851, 0.91", "-39.114, -4.0053, -3.6026, 0.91", "-40.7332, -4.4706, -3.46584, 0.91", "-42.8014, -4.98097, -3.27228, 0.23", "-45.7203, -5.60447, -3.02839, 0.68", "-47.3811, -5.88428, -2.91226, 0.68", "-49.5905, -6.1664, -2.79632, 0.23", "-51.6323, -6.35592, -2.72212, 0.45", "-54.2007, -6.55134, -2.65962, 0.45", "-55.8385, -6.64664, -2.63233, 0.23", "-57.4767, -6.72776, -2.60846, 0.23", "-59.8376, -6.82127, -2.57378, 1.36", "-61.9023, -6.9298, -2.54679, 0.45", "-64.6518, -7.08016, -2.50298, 0.91", "-66.3455, -7.21807, -2.4425, 0.91", "-67.7318, -7.34306, -2.38029, 1.36", "-69.7733, -7.53913, -2.26756, 0.23", "-72.1055, -7.76083, -2.11758, 0.23", "-73.2761, -7.89188, -2.04621, 0.91", "-76.3974, -8.42424, -1.84553, 0.23" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-13.0521, 10.9962, -0.182671, 0.23", "-15.3579, 11.8667, 0.853354, 0.23", "-17.71, 12.7735, 1.98854, 0.68", "-19.8193, 13.6241, 3.13207, 0.23", "-20.7391, 13.9933, 3.65524, 0.45", "-22.6395, 14.7995, 4.82469, 0.91", "-24.6105, 15.6872, 6.07214, 0.23", "-25.4479, 16.086, 6.6954, 0.68", "-26.5693, 16.8074, 7.69018, 0.23", "-27.1172, 17.2598, 8.26161, 0.68", "-28.3194, 18.3832, 9.55197, 0.23", "-28.9478, 18.9641, 10.2237, 0.68", "-30.3002, 20.0874, 11.656, 0.23", "-31.7201, 21.085, 13.0817, 0.68", "-34.277, 22.6443, 15.4995, 0.23", "-35.5191, 23.2871, 16.579, 0.45", "-37.6909, 24.1254, 18.2112, 0.23", "-39.2249, 24.5459, 19.1664, 0.23", "-40.7565, 24.8844, 19.8617, 0.23", "-42.2029, 25.2031, 20.3501, 0.23", "-43.7856, 25.6929, 20.721, 0.23", "-45.6111, 26.4627, 21.0517, 0.23", "-48.3089, 27.8987, 21.4336, 0.45", "-51.1999, 29.6289, 21.8296, 0.23", "-52.8401, 30.6392, 22.0728, 0.68", "-55.3375, 32.0915, 22.4964, 0.23", "-57.9308, 33.5707, 23.0005, 0.23", "-60.6609, 35.0798, 23.5377, 0.23", "-63.3349, 36.5131, 24.0865, 0.23", "-66.2404, 37.919, 24.717, 0.23", "-69.7673, 39.4202, 25.4915, 0.45", "-70.7442, 39.7719, 25.693, 0.23", "-72.2574, 40.2345, 26.0123, 0.68" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.08269, 39.7222, 0.0, 1.59", "1.72403, 54.7085, 0.0, 1.59", "2.36537, 69.6947, 0.0, 1.59" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-2.82711, 21.8238, 0.219412, 0.23", "-3.46695, 21.6197, 1.41606, 0.23", "-3.60328, 21.0503, 2.10675, 0.91", "-3.76934, 19.8347, 3.14068, 0.23", "-4.06244, 18.8783, 3.99112, 0.23", "-4.49386, 18.2264, 4.84343, 0.23", "-4.89946, 17.8423, 5.49928, 0.91", "-5.66959, 17.2913, 6.28785, 0.23", "-6.09619, 17.107, 6.59311, 0.23", "-7.24499, 16.6999, 7.33346, 0.91", "-8.62825, 16.3264, 8.20993, 0.23", "-10.1754, 16.0181, 9.09286, 0.23", "-11.8312, 15.807, 10.0052, 0.68", "-14.5837, 15.5587, 11.4603, 0.23" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-2.82711, 21.8238, 0.219412, 0.68", "-2.59499, 25.4861, -0.0295549, 0.68", "-2.41804, 28.0598, -0.149057, 0.68", "-2.32618, 29.5203, -0.193108, 1.36", "-2.05686, 33.6069, -0.286583, 0.68", "-1.98196, 35.1098, -0.324512, 0.68", "-1.93852, 38.1931, -0.392233, 1.59", "-1.95462, 39.6573, -0.377477, 1.59", "-2.14157, 43.3523, -0.195638, 0.23", "-2.38726, 45.2575, -0.0282628, 0.23", "-2.88064, 47.5307, 0.25445, 1.14", "-3.55386, 50.076, 0.616976, 0.91", "-4.10762, 51.902, 0.896654, 0.91", "-4.81388, 54.1711, 1.2628, 1.36", "-5.61416, 56.5307, 1.69566, 0.68", "-6.4424, 58.9168, 2.16702, 1.14", "-7.22118, 61.3431, 2.66688, 0.45", "-7.70283, 63.0737, 2.9789, 1.59", "-8.34507, 65.5464, 3.28715, 2.27" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "7.44139, 14.0428, -0.908807, 0.91", "8.00089, 13.8374, -1.59601, 0.91", "8.8018, 13.2781, -2.55009, 0.91", "10.1239, 12.2697, -3.91384, 0.68", "10.7368, 11.7717, -4.47643, 0.68", "11.3831, 11.1932, -5.00845, 1.14", "12.3971, 10.1874, -5.7492, 0.68", "13.5265, 8.82001, -6.40512, 0.23", "14.0696, 7.94792, -6.62847, 0.23", "14.3436, 7.3795, -6.69992, 0.23", "14.773, 6.27167, -6.78396, 1.14", "15.1794, 5.19015, -6.82845, 1.82", "15.5748, 4.03094, -6.82429, 0.68", "15.9296, 2.56763, -6.76092, 1.14", "16.1246, 1.4132, -6.73244, 0.45", "16.2457, 0.46837, -6.71793, 0.45" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "7.44139, 14.0428, -0.908807, 1.14", "9.45649, 14.2631, -0.865395, 1.14", "10.5901, 14.3871, -0.840974, 1.59", "12.6205, 14.6091, -0.797231, 1.59" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-52.241, -32.9666, -4.53233, 0.23", "-55.2008, -34.0575, -4.01596, 0.23", "-57.2518, -34.9712, -3.69001, 0.68", "-59.8117, -36.3115, -3.26411, 0.23", "-60.8811, -36.9453, -3.08115, 0.23", "-63.1574, -38.3961, -2.69571, 0.23", "-65.5388, -40.0313, -2.29963, 0.91", "-67.1603, -41.2991, -2.05016, 0.23", "-68.6699, -42.6101, -1.8028, 0.91", "-69.9418, -43.7415, -1.58035, 0.23", "-71.5239, -45.1018, -1.29955, 1.59", "-73.8021, -46.9164, -0.910652, 0.23", "-75.2945, -47.9963, -0.660704, 0.23", "-78.0709, -49.7629, -0.234836, 0.23", "-79.7049, -50.6734, -0.0127298, 1.59", "-80.7148, -51.1792, 0.115775, 0.23", "-82.8928, -52.1466, 0.361734, 0.68", "-85.2429, -53.0739, 0.559572, 0.23", "-86.9714, -53.7379, 0.620535, 1.14", "-87.7068, -54.033, 0.61493, 1.14", "-89.0592, -54.6225, 0.567266, 0.23", "-91.2285, -55.6655, 0.510948, 0.68", "-93.4029, -56.7966, 0.471758, 0.23", "-95.9941, -58.1707, 0.516838, 1.14", "-99.3266, -59.9953, 0.690999, 0.23", "-101.253, -61.083, 0.862072, 0.91", "-104.935, -63.255, 1.30411, 0.23", "-105.988, -63.9207, 1.46561, 0.91", "-109.805, -66.4799, 2.19493, 0.23", "-112.857, -68.6757, 2.95358, 1.14", "-115.517, -70.6344, 3.68757, 0.45", "-117.297, -72.0048, 4.19389, 1.14", "-118.705, -73.1445, 4.58584, 1.14", "-120.415, -74.6432, 5.08264, 0.23", "-121.593, -75.9521, 5.4476, 0.23" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-52.241, -32.9666, -4.53233, 0.45", "-54.781, -35.8233, -5.11202, 0.45", "-56.5942, -37.8625, -5.52582, 1.14", "-57.7301, -39.14, -5.78507, 0.23", "-59.2224, -40.8184, -6.12566, 1.36", "-60.7342, -42.5186, -6.47066, 0.45" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-5.17103, -24.337, 0.930862, 0.23", "-4.33295, -26.4321, 1.04114, 0.23", "-3.35098, -28.9353, 1.14355, 0.23", "-2.28694, -31.5567, 1.25411, 1.14", "-1.1798, -34.1707, 1.36003, 0.23", "-0.383659, -35.9888, 1.42492, 0.91", "0.231162, -37.3745, 1.4664, 0.91", "1.70165, -40.7416, 1.53801, 0.23", "2.80384, -43.2075, 1.57651, 1.14", "3.56239, -44.8952, 1.58875, 1.14", "4.93385, -48.0015, 1.57732, 0.45", "6.26, -51.0176, 1.53496, 0.45", "6.92283, -52.598, 1.51344, 0.91", "8.03118, -55.297, 1.4738, 0.23", "9.03721, -57.8718, 1.4688, 0.23", "10.1724, -60.8842, 1.5088, 0.68", "11.4854, -64.3634, 1.59584, 0.23", "12.3638, -66.6636, 1.69359, 0.91", "13.5834, -69.8409, 1.9128, 1.14", "15.6165, -75.1972, 2.5115, 0.23", "16.2617, -76.923, 2.78356, 0.23", "17.1463, -79.4095, 3.26459, 0.68", "18.2099, -82.5503, 3.97095, 0.23", "19.5032, -86.4656, 4.98304, 1.36", "20.3903, -89.2498, 5.77966, 0.68", "21.4315, -92.769, 6.79144, 0.23", "21.7332, -93.8822, 7.10049, 0.91", "22.5625, -97.1354, 7.98135, 0.23", "23.1031, -99.3311, 8.52733, 0.91", "23.8706, -102.472, 9.2024, 1.14", "24.8188, -106.269, 9.90601, 0.23", "25.2982, -108.177, 10.2355, 0.91", "26.0893, -111.289, 10.7492, 0.23", "26.3973, -112.42, 10.8976, 0.91", "26.8516, -113.965, 11.0529, 0.91", "28.052, -117.517, 11.3845, 0.23", "29.0705, -120.182, 11.6026, 2.05", "29.5246, -121.327, 11.6776, 2.05", "32.2049, -127.864, 12.0016, 0.23", "33.1258, -130.059, 12.0983, 0.91", "35.5695, -135.802, 12.2831, 0.23", "36.2991, -137.485, 12.3119, 0.23", "36.9483, -138.93, 12.3302, 1.14", "37.5827, -140.295, 12.3445, 1.14", "39.846, -145.028, 12.4241, 0.23", "40.8836, -147.089, 12.4877, 0.23", "41.6732, -148.608, 12.5603, 0.91", "42.5999, -150.316, 12.6695, 0.91", "44.7496, -153.972, 12.9509, 0.23", "45.8909, -155.811, 13.1224, 1.14", "48.5387, -159.718, 13.5526, 0.23", "50.098, -161.93, 13.8188, 0.23", "50.8769, -163.009, 13.9456, 0.91", "51.9479, -164.391, 14.1426, 0.91", "53.5935, -166.324, 14.4492, 0.23", "54.6107, -167.433, 14.6202, 0.68", "55.9898, -168.86, 14.8634, 0.23", "57.6114, -170.492, 15.1389, 0.91", "62.1927, -174.945, 15.8752, 0.23", "63.289, -175.972, 16.0461, 1.14", "64.7434, -177.246, 16.2515, 1.14", "68.2453, -180.263, 16.8173, 0.23", "69.4364, -181.294, 17.082, 0.23", "71.576, -183.229, 17.676, 0.68", "73.1165, -184.859, 18.2862, 0.23", "74.6797, -186.882, 19.1304, 0.91", "75.7198, -188.554, 19.9333, 0.23", "77.1163, -191.111, 21.3335, 0.23", "77.965, -192.652, 22.1993, 0.68", "79.645, -195.681, 23.8521, 0.23", "81.1431, -198.152, 25.2179, 0.68", "83.9278, -202.366, 27.5355, 0.23", "87.372, -207.008, 29.9397, 0.23", "89.3496, -209.503, 31.2007, 0.23", "90.866, -211.266, 32.1241, 0.68", "94.0422, -214.602, 33.8914, 0.23", "96.9394, -217.427, 35.468, 0.23", "99.2894, -219.611, 36.5933, 0.23" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-5.17103, -24.337, 0.930862, 2.27", "-7.01989, -28.3354, 0.92535, 2.27", "-7.89475, -30.2274, 0.922742, 2.73", "-8.83056, -32.2512, 0.919952, 3.64" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-8.34507, 65.5464, 3.28715, 0.23", "-5.60638, 67.1649, 4.62904, 0.23", "-3.57366, 67.9543, 5.37724, 0.91", "-1.61262, 68.674, 6.00024, 0.23", "0.116747, 69.3288, 6.56995, 0.23", "1.66924, 69.8951, 7.058, 0.91", "3.67928, 70.6689, 7.64074, 0.23", "4.73896, 71.0148, 7.90731, 0.23", "5.6967, 71.412, 8.15227, 0.23", "7.2352, 72.3031, 8.53056, 0.23", "8.51875, 73.3603, 8.85686, 1.36", "9.60032, 74.3992, 9.13444, 1.36", "11.8571, 76.9123, 9.65387, 0.23", "13.2428, 78.4672, 9.91203, 0.23", "14.3822, 79.768, 10.0505, 0.23", "15.9528, 81.7208, 10.1345, 0.23", "17.7884, 84.1602, 10.1525, 1.14", "19.5427, 86.6047, 10.1468, 0.23", "20.8224, 88.4586, 10.0705, 0.23", "22.5562, 91.0555, 9.95599, 0.45", "24.1087, 93.6412, 9.84513, 0.23", "25.0187, 95.3923, 9.76618, 0.68", "26.1539, 98.2028, 9.66225, 0.23", "26.5906, 99.5179, 9.67761, 0.23", "27.0558, 101.22, 9.75548, 0.91", "27.361, 102.37, 9.8275, 0.91", "27.7075, 103.507, 9.88944, 0.23", "28.7169, 106.398, 10.1219, 0.68", "30.174, 110.099, 10.4205, 0.23", "30.673, 111.307, 10.5547, 0.91", "31.8157, 114.028, 10.872, 0.23", "33.111, 117.059, 11.2614, 0.68", "34.5182, 120.314, 11.7338, 0.23", "35.964, 123.873, 12.2922, 0.68", "36.7665, 126.114, 12.6692, 0.23", "37.545, 128.781, 13.1978, 0.68", "37.9485, 130.644, 13.6433, 0.23", "38.1638, 132.173, 14.0859, 0.23", "38.3725, 134.191, 14.6712, 0.23", "38.5559, 136.583, 15.4483, 0.68", "38.7852, 140.06, 16.6014, 0.23", "38.9095, 142.998, 17.6648, 0.68", "38.9015, 146.026, 18.7692, 0.23" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-8.34507, 65.5464, 3.28715, 0.23", "-9.67314, 68.2079, 3.71441, 0.23", "-10.8673, 70.4176, 4.11385, 0.91", "-13.3333, 74.699, 4.93925, 0.23", "-14.2358, 76.1244, 5.23077, 0.91", "-15.196, 77.5709, 5.53202, 0.91", "-16.689, 79.8627, 5.99549, 0.23", "-18.4612, 82.5905, 6.57545, 0.23", "-20.1827, 85.2587, 7.08516, 0.23", "-21.4904, 87.4408, 7.42935, 0.68", "-22.3173, 88.9453, 7.62978, 0.23", "-23.1194, 90.6176, 7.81437, 0.23", "-23.5232, 91.5844, 7.91387, 0.23", "-24.4144, 93.994, 8.19031, 1.59", "-25.4762, 97.0829, 8.58207, 0.68", "-26.1793, 99.0976, 8.85226, 0.23", "-26.6556, 100.258, 9.02844, 0.91", "-27.5082, 102.006, 9.32514, 0.23", "-27.9705, 102.858, 9.47768, 0.91", "-28.8186, 104.323, 9.77018, 0.23", "-29.6128, 105.619, 10.017, 1.14", "-30.3831, 106.831, 10.2205, 1.14", "-31.3069, 108.162, 10.4513, 0.23", "-32.5685, 109.829, 10.7808, 0.23", "-34.0958, 111.714, 11.2579, 0.91", "-35.2277, 113.007, 11.653, 0.23", "-36.716, 114.561, 12.2433, 0.23", "-37.8417, 115.626, 12.7259, 0.91", "-39.7207, 117.232, 13.616, 0.23", "-41.3247, 118.547, 14.4229, 0.68", "-42.0105, 119.132, 14.7697, 0.68", "-43.2549, 120.241, 15.4131, 0.23", "-44.6259, 121.524, 16.0846, 0.68", "-45.9164, 122.711, 16.6375, 0.23", "-47.3403, 123.895, 17.1892, 0.23", "-49.6317, 125.606, 17.9522, 0.91", "-51.4506, 126.796, 18.4462, 0.23", "-53.9023, 128.244, 18.9655, 0.23", "-56.7904, 129.822, 19.4659, 0.91", "-59.125, 131.001, 19.7918, 0.23", "-61.0488, 131.875, 20.0391, 0.91", "-63.0332, 132.75, 20.2534, 0.23", "-66.1884, 134.227, 20.5215, 0.23", "-68.2923, 135.271, 20.6788, 0.91", "-70.3626, 136.438, 20.8083, 0.23", "-71.4421, 137.106, 20.8734, 0.68", "-73.3649, 138.29, 21.0656, 0.23", "-74.8425, 139.206, 21.2891, 0.91", "-76.316, 140.089, 21.5787, 0.23", "-77.6061, 140.882, 21.8899, 0.68", "-78.8702, 141.662, 22.2393, 0.23", "-81.4321, 143.24, 22.9969, 0.91", "-84.2099, 144.945, 23.8688, 0.23", "-86.7809, 146.583, 24.6873, 0.23", "-88.6915, 147.882, 25.2924, 0.91", "-90.247, 149.041, 25.7778, 0.23", "-90.9701, 149.64, 25.9798, 0.68", "-92.0922, 150.729, 26.2411, 0.23", "-93.1419, 151.93, 26.4125, 0.91", "-94.7317, 154.033, 26.5269, 0.23", "-95.6331, 155.327, 26.5232, 0.91", "-96.7915, 157.109, 26.4723, 0.23", "-97.6514, 158.431, 26.4016, 1.14", "-99.4676, 161.161, 26.1491, 0.23", "-101.239, 163.713, 25.8556, 0.91", "-102.717, 165.727, 25.5798, 0.23", "-104.01, 167.374, 25.3381, 0.91", "-105.743, 169.506, 25.0039, 0.23", "-107.054, 171.014, 24.7278, 0.23", "-108.515, 172.562, 24.4146, 0.91", "-110.411, 174.508, 24.0176, 0.23", "-111.388, 175.483, 23.819, 0.23", "-112.364, 176.427, 23.6329, 0.68", "-113.026, 177.03, 23.5363, 0.23", "-114.617, 178.443, 23.3454, 0.68", "-116.398, 179.942, 23.1466, 0.23", "-117.75, 181.06, 23.0582, 0.23", "-118.656, 181.82, 23.0157, 0.68", "-119.795, 182.77, 22.9942, 0.23", "-120.819, 183.662, 22.9913, 0.23", "-121.856, 184.572, 23.0103, 0.45", "-124.029, 186.486, 23.0612, 0.23", "-125.569, 187.924, 23.0806, 1.82", "-126.688, 189.003, 23.0946, 0.68", "-128.946, 191.278, 23.1302, 0.23", "-130.723, 193.039, 23.2205, 0.91", "-132.409, 194.73, 23.3023, 0.23", "-133.775, 196.08, 23.3754, 0.23", "-134.594, 196.903, 23.4384, 0.91", "-135.73, 198.082, 23.5271, 0.23", "-136.956, 199.384, 23.6568, 1.36" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "12.6205, 14.6091, -0.797231, 0.68", "14.5417, 13.4526, -0.296592, 0.68", "16.5792, 12.2446, 0.355017, 0.68", "18.32, 11.1688, 0.988236, 0.68", "20.0081, 9.96704, 1.7001, 1.14", "22.0271, 8.46788, 2.54622, 1.59", "24.8621, 6.3393, 3.72215, 0.68", "27.2398, 4.55071, 4.75118, 1.82", "29.7506, 2.64984, 5.83581, 0.91", "34.0312, -0.660643, 7.62299, 0.68", "36.2412, -2.38246, 8.47738, 0.68", "38.5686, -4.22648, 9.30694, 1.14", "40.1702, -5.51132, 9.83665, 1.14", "43.6648, -8.32839, 10.9138, 1.82", "46.5192, -10.5591, 11.7224, 0.23", "48.6769, -12.1753, 12.2813, 0.91", "51.1329, -14.1225, 12.9679, 1.14", "52.7769, -15.5159, 13.4159, 2.05" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "12.6205, 14.6091, -0.797231, 0.45", "13.5016, 14.7006, -0.779941, 0.45", "14.9138, 14.8462, -0.738454, 0.91", "16.0827, 14.9854, -0.696531, 0.45", "17.4808, 15.1616, -0.635877, 1.14", "19.2816, 15.4589, -0.535246, 0.68", "21.1781, 15.8346, -0.414106, 0.45", "22.2655, 16.0938, -0.334568, 0.91", "23.1201, 16.3505, -0.264025, 0.91", "24.6818, 16.8992, -0.116487, 2.05", "26.9646, 17.7652, 0.121181, 0.68", "28.3266, 18.3238, 0.266717, 1.14", "29.5124, 18.8629, 0.397733, 0.68", "30.0955, 19.1514, 0.462756, 1.59", "31.3575, 19.8038, 0.604071, 1.59" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-8.83056, -32.2512, 0.919952, 0.68", "-13.1767, -33.8081, 2.99915, 0.68", "-17.4124, -35.2785, 5.20876, 0.68", "-19.7869, -36.076, 6.50721, 1.14", "-24.4131, -37.4358, 9.05374, 0.68", "-27.7394, -38.2975, 10.899, 1.36", "-30.7329, -38.9833, 12.5437, 0.45", "-34.238, -39.5509, 14.5071, 1.14", "-37.6153, -39.9244, 16.4423, 0.23", "-40.612, -40.3206, 18.1309, 0.45", "-42.0949, -40.5835, 18.9084, 0.45", "-45.6017, -41.4411, 20.5718, 1.14", "-48.5109, -42.4016, 21.8122, 0.23", "-51.1354, -43.554, 22.8171, 0.91", "-54.701, -45.4908, 24.199, 0.45", "-56.8086, -46.8152, 25.0498, 1.14", "-59.7702, -48.7926, 26.296, 0.23", "-62.3306, -50.5718, 27.441, 0.91", "-65.2169, -52.578, 28.8251, 0.68", "-67.8675, -54.3563, 30.2009, 0.23", "-69.7233, -55.5287, 31.2792, 0.91", "-72.2931, -57.0112, 32.9387, 0.23", "-75.4602, -58.736, 35.1037, 0.91", "-77.2095, -59.6855, 36.3177, 0.68", "-79.925, -61.2231, 38.1983, 0.68", "-83.0952, -63.1634, 40.3589, 1.36", "-85.8201, -64.9335, 42.2099, 0.23", "-87.0234, -65.756, 43.0129, 0.23", "-89.3513, -67.4011, 44.5076, 1.36", "-90.871, -68.5827, 45.448, 1.36", "-92.5543, -70.0399, 46.4534, 0.23", "-94.9393, -72.2861, 47.723, 0.91", "-97.2061, -74.5805, 48.7728, 0.91", "-99.4624, -76.9518, 49.7289, 0.23", "-101.776, -79.4662, 50.6241, 0.91", "-103.646, -81.5287, 51.2627, 0.23", "-105.775, -84.0098, 51.8801, 0.23", "-107.376, -86.1154, 52.2517, 0.23", "-108.397, -87.5816, 52.4767, 1.14", "-109.468, -89.2128, 52.742, 0.45", "-110.576, -90.9482, 53.0516, 1.59", "-113.396, -95.6076, 53.9757, 0.68", "-116.267, -100.581, 55.1219, 0.68", "-118.094, -103.725, 55.9699, 0.23", "-119.803, -106.588, 56.8365, 0.91", "-120.964, -108.434, 57.4768, 0.91", "-121.875, -109.732, 58.0256, 0.23", "-123.258, -111.509, 58.9075, 0.91", "-125.302, -113.928, 60.2127, 0.23", "-126.925, -115.756, 61.1902, 0.45", "-128.665, -117.658, 62.1877, 1.14", "-130.274, -119.393, 63.0854, 0.23", "-132.634, -121.906, 64.363, 0.91", "-135.115, -124.503, 65.6978, 0.91", "-136.684, -126.115, 66.5396, 0.23", "-138.815, -128.274, 67.7143, 0.68", "-140.495, -130.0, 68.6949, 0.23", "-141.281, -130.785, 69.1914, 0.23", "-143.486, -132.838, 70.654, 0.91", "-145.697, -134.865, 72.2255, 2.05", "-148.591, -137.611, 74.3581, 0.68", "-150.89, -139.874, 76.1349, 1.36", "-153.217, -142.235, 77.9737, 0.45", "-154.988, -144.092, 79.4001, 0.45", "-157.02, -146.27, 81.0446, 0.23", "-158.196, -147.54, 82.0072, 0.91", "-159.61, -149.028, 83.1423, 0.23", "-160.662, -150.07, 83.9456, 0.23", "-162.898, -152.212, 85.5673, 1.14", "-164.143, -153.341, 86.4408, 1.14", "-167.082, -155.797, 88.4408, 0.23", "-167.977, -156.479, 89.0415, 0.91", "-169.93, -157.906, 90.3044, 1.59", "-171.431, -159.036, 91.3189, 0.45", "-172.273, -159.677, 91.9118, 1.14", "-175.04, -161.79, 93.9511, 0.23", "-176.377, -162.814, 94.9531, 1.36", "-177.794, -163.95, 96.0705, 1.36", "-181.688, -167.224, 99.2369, 0.23", "-183.346, -168.685, 100.595, 1.36", "-183.922, -169.234, 101.061, 2.27", "-186.313, -171.744, 102.915, 0.23", "-188.011, -173.585, 104.235, 0.68", "-189.143, -174.854, 105.097, 0.23", "-190.473, -176.435, 106.003, 0.91", "-191.587, -177.921, 106.719, 0.23", "-192.885, -179.898, 107.524, 1.59" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-8.83056, -32.2512, 0.919952, 2.27", "-9.09387, -36.9034, 0.537369, 2.27", "-9.15998, -38.0714, 0.441316, 2.27" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-136.956, 199.384, 23.6568, 0.23", "-141.175, 200.937, 25.7612, 0.23", "-143.437, 201.725, 26.9088, 0.91", "-146.757, 202.785, 28.6277, 0.23", "-148.921, 203.422, 29.8267, 0.91", "-150.466, 203.856, 30.7128, 0.23", "-152.966, 204.543, 32.1129, 0.23", "-154.162, 204.817, 32.8069, 0.23", "-155.893, 205.21, 33.7295, 0.91", "-158.805, 205.764, 35.1604, 0.23", "-159.863, 205.943, 35.6795, 0.68", "-161.761, 206.247, 36.6142, 0.23", "-162.582, 206.39, 37.0305, 1.14", "-165.03, 206.805, 38.3319, 0.23", "-168.039, 207.319, 40.0354, 1.14", "-170.146, 207.688, 41.2806, 0.23", "-172.381, 208.1, 42.73, 0.68", "-173.586, 208.344, 43.5961, 0.23", "-176.068, 208.943, 45.4544, 0.91", "-179.266, 209.859, 47.9348, 0.23", "-181.621, 210.686, 49.7003, 0.23", "-182.947, 211.18, 50.649, 0.91", "-184.923, 212.0, 52.0051, 0.23", "-186.523, 212.727, 53.0222, 0.68", "-188.417, 213.667, 54.1674, 0.23", "-190.159, 214.497, 55.1277, 0.23", "-191.621, 215.069, 55.8908, 0.68", "-193.436, 215.729, 56.7691, 0.23", "-195.943, 216.542, 57.9191, 0.23", "-197.731, 217.017, 58.7491, 0.68", "-199.226, 217.334, 59.4413, 0.23", "-201.634, 217.611, 60.5767, 0.91" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-136.956, 199.384, 23.6568, 0.23", "-138.327, 201.643, 24.4749, 0.23", "-138.667, 202.248, 24.6378, 0.68", "-139.618, 204.045, 25.0635, 0.23", "-140.72, 205.915, 25.3874, 0.23", "-141.536, 207.193, 25.5701, 0.68", "-142.596, 208.78, 25.7772, 0.23", "-143.386, 209.969, 25.8932, 0.68", "-145.113, 212.398, 26.1077, 0.23", "-146.73, 214.513, 26.2807, 0.91", "-148.798, 217.144, 26.517, 0.23", "-150.03, 218.657, 26.6742, 0.23", "-151.526, 220.408, 26.896, 0.91", "-153.219, 222.335, 27.164, 0.23", "-154.523, 223.795, 27.3801, 0.68" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "52.7769, -15.5159, 13.4159, 0.45", "53.6529, -17.7108, 13.5481, 0.45", "54.113, -18.7921, 13.6618, 0.91", "54.5855, -19.6619, 13.8156, 0.23", "54.9814, -20.3111, 13.9465, 0.91", "55.4097, -20.9454, 14.092, 0.91", "56.6314, -22.6077, 14.5262, 0.23", "57.4454, -23.5929, 14.8244, 1.59", "59.2402, -25.6357, 15.4452, 0.45", "60.2396, -26.7173, 15.7729, 0.45", "61.4917, -28.0279, 16.1574, 1.36", "63.9007, -30.4571, 16.8651, 0.68", "65.5061, -32.0058, 17.2907, 0.68", "66.8764, -33.276, 17.6267, 1.14", "69.544, -35.6288, 18.2441, 0.45", "70.195, -36.1634, 18.392, 1.14", "71.519, -37.2149, 18.677, 0.23", "72.9808, -38.3527, 18.9775, 1.36", "73.4732, -38.7408, 19.0851, 2.05", "75.0683, -40.0692, 19.4596, 0.23", "76.6556, -41.5313, 19.8463, 0.23", "77.9551, -42.7934, 20.1816, 1.14", "79.2697, -44.1767, 20.5334, 0.23", "80.0909, -45.1295, 20.7787, 1.36", "81.0637, -46.3704, 21.0661, 1.59", "82.1619, -48.0302, 21.389, 0.45" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "52.7769, -15.5159, 13.4159, 0.68", "56.2917, -16.0842, 14.7506, 0.68", "57.9211, -16.3366, 15.3409, 0.23", "59.0092, -16.4912, 15.692, 0.68", "60.4328, -16.7002, 16.1341, 0.23", "61.7307, -16.9408, 16.5328, 0.91", "64.1729, -17.4643, 17.2874, 0.23", "66.2057, -17.9402, 17.9534, 1.14", "70.1965, -18.8515, 19.3401, 0.45", "71.3946, -19.0999, 19.7847, 0.91", "74.2274, -19.5733, 20.8916, 0.23", "76.9904, -19.9039, 22.0133, 0.91", "79.4485, -20.0556, 23.0544, 0.23", "82.5219, -20.0166, 24.3917, 0.91", "85.7137, -19.6788, 25.8028, 0.23", "88.2679, -19.1302, 26.8947, 0.68", "89.7199, -18.6191, 27.488, 0.23", "91.1446, -17.9777, 28.011, 1.14", "92.6123, -17.2322, 28.4741, 0.23", "94.7844, -16.0375, 29.0854, 0.91", "96.6503, -14.9933, 29.5419, 0.23", "98.2384, -14.1083, 29.901, 1.14", "99.7395, -13.2998, 30.2453, 0.23", "101.774, -12.2277, 30.6858, 1.82", "102.822, -11.6972, 30.9019, 2.27", "105.921, -10.1601, 31.4491, 0.23", "106.6, -9.86495, 31.5652, 0.23", "109.081, -8.88958, 31.9997, 0.68", "111.267, -8.14641, 32.426, 0.23", "112.971, -7.67773, 32.7817, 1.36", "115.68, -7.19324, 33.4142, 0.23", "118.413, -6.97916, 34.1358, 0.23", "119.524, -6.96945, 34.4447, 1.14", "122.233, -7.17029, 35.2597, 0.23", "123.572, -7.34215, 35.7139, 0.68", "125.751, -7.66993, 36.5047, 0.23", "126.329, -7.77055, 36.7218, 1.59", "127.224, -7.93271, 37.058, 0.23", "129.012, -8.26083, 37.7294, 1.36", "131.572, -8.68106, 38.6923, 0.23", "133.934, -8.96072, 39.5841, 0.91" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "31.3575, 19.8038, 0.604071, 0.23", "34.5092, 20.8108, 0.829054, 0.23", "36.5724, 21.5548, 1.01809, 0.23", "38.1781, 22.138, 1.19283, 1.36", "40.4048, 22.937, 1.40455, 1.36", "43.4583, 24.0124, 1.67955, 0.23", "44.894, 24.4998, 1.81019, 0.23", "47.7758, 25.4832, 2.06913, 0.91", "50.9337, 26.4426, 2.37672, 0.23", "53.4263, 27.0873, 2.65084, 1.59", "54.3455, 27.2793, 2.76005, 1.59", "57.5769, 27.8003, 3.17942, 0.45", "59.229, 27.9898, 3.36943, 0.45", "61.8633, 28.2004, 3.67594, 0.23", "63.3728, 28.2883, 3.86551, 1.14", "65.5538, 28.3979, 4.19634, 0.23", "66.9734, 28.4635, 4.42299, 0.68", "69.5912, 28.6208, 4.854, 0.23", "72.6317, 28.8929, 5.36264, 1.14", "76.1284, 29.3685, 5.89767, 0.23", "78.2896, 29.7604, 6.19548, 0.23", "79.4737, 30.0489, 6.33944, 1.59", "82.0804, 30.8211, 6.60561, 0.23", "83.3141, 31.2768, 6.69235, 0.23", "84.5658, 31.8388, 6.71824, 0.68", "85.9345, 32.5276, 6.63801, 0.68", "88.7797, 33.9567, 6.33447, 0.23", "90.0498, 34.5317, 6.18394, 0.23", "91.1972, 34.9906, 6.03894, 1.82", "91.8649, 35.2154, 5.96939, 1.82", "94.1604, 35.8447, 5.81861, 0.23", "96.0874, 36.2878, 5.74237, 0.68", "98.9435, 36.8463, 5.72238, 0.23", "100.071, 37.0739, 5.74171, 0.91", "101.937, 37.4694, 5.79447, 0.23", "103.988, 37.9602, 5.85544, 1.14", "106.775, 38.7177, 5.96935, 0.23", "108.825, 39.3212, 6.01475, 1.14", "110.858, 39.9885, 6.03979, 0.23", "112.311, 40.4863, 6.05224, 0.91", "114.275, 41.2068, 6.0402, 0.23", "116.334, 41.9998, 6.01029, 1.36", "117.984, 42.6378, 5.9895, 0.23", "119.973, 43.4395, 5.96204, 0.91", "123.26, 44.8328, 5.89904, 0.23", "125.116, 45.6304, 5.87403, 1.14", "126.137, 46.0688, 5.86045, 0.23", "127.224, 46.5491, 5.84264, 1.14", "129.309, 47.5126, 5.83456, 0.23", "130.906, 48.3191, 5.7575, 1.36" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "31.3575, 19.8038, 0.604071, 0.23", "32.8609, 20.7805, 0.352484, 0.23", "33.662, 21.3125, 0.221232, 0.91", "34.9039, 22.1156, 0.0487779, 0.23", "36.1667, 22.8708, -0.0803528, 0.68", "37.4722, 23.5773, -0.139066, 0.68", "39.6636, 24.7421, -0.172805, 0.23", "40.7395, 25.2818, -0.172488, 0.91", "41.922, 25.8866, -0.163853, 0.91", "44.1313, 27.0417, -0.133132, 0.23", "46.2704, 28.2132, -0.118646, 0.68", "48.3235, 29.3516, -0.149358, 0.23", "49.704, 30.1344, -0.208642, 0.91", "51.2141, 31.0259, -0.326503, 0.91", "52.5882, 31.9046, -0.527899, 0.23", "54.3186, 33.1418, -0.961633, 1.14", "55.9451, 34.4212, -1.52449, 0.23", "56.8699, 35.221, -1.90092, 0.23", "57.55, 35.916, -2.21345, 0.23", "58.9977, 37.5918, -2.93766, 0.91", "60.5852, 39.6414, -3.76625, 0.45", "61.1434, 40.4458, -4.06964, 0.45", "62.3879, 42.4028, -4.78669, 1.59", "64.1527, 45.2075, -5.74253, 0.45", "64.7736, 46.1827, -6.05016, 0.68", "65.2529, 46.9344, -6.25693, 0.23", "66.1596, 48.2532, -6.59659, 0.91", "67.5697, 50.1318, -7.09811, 0.23", "68.4031, 51.1376, -7.37141, 0.23", "68.8835, 51.6722, -7.51924, 1.36", "69.4557, 52.3423, -7.70481, 1.36", "70.6135, 53.7525, -8.09236, 0.23", "71.8328, 55.3107, -8.50915, 0.68", "72.8807, 56.7002, -8.86878, 0.23", "74.4634, 58.8307, -9.41129, 1.14", "76.0652, 61.0332, -9.97518, 0.23", "77.219, 62.6662, -10.391, 0.91", "77.946, 63.73, -10.651, 1.59", "78.6888, 64.8225, -10.9228, 0.91", "79.8044, 66.5123, -11.3516, 0.23" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-192.885, -179.898, 107.524, 0.23", "-193.392, -180.658, 109.241, 0.23", "-193.559, -180.908, 109.767, 1.14", "-194.158, -181.761, 111.587, 0.23", "-194.387, -182.1, 112.278, 0.91", "-195.182, -183.304, 114.442, 0.23", "-195.573, -183.933, 115.517, 0.91", "-196.43, -185.339, 117.708, 0.23", "-196.97, -186.246, 119.086, 0.91", "-197.484, -187.091, 120.332, 0.23", "-198.103, -188.132, 121.898, 1.14", "-198.938, -189.555, 123.993, 0.23" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-192.885, -179.898, 107.524, 0.23", "-194.685, -182.597, 107.201, 0.23", "-195.956, -184.49, 106.919, 1.59", "-197.877, -187.302, 106.422, 0.23", "-199.226, -189.075, 106.053, 1.36", "-200.31, -190.35, 105.791, 0.23", "-201.396, -191.504, 105.582, 0.23", "-202.774, -192.647, 105.473, 1.36", "-204.504, -193.765, 105.482, 2.27", "-206.397, -194.737, 105.656, 0.23", "-207.994, -195.392, 105.976, 1.14", "-209.514, -195.892, 106.421, 0.23", "-211.213, -196.367, 107.092, 1.14", "-211.84, -196.487, 107.441, 1.14", "-213.037, -196.631, 108.251, 0.23", "-213.572, -196.659, 108.656, 0.23", "-214.25, -196.557, 109.239, 1.36", "-214.673, -196.352, 109.709, 1.36", "-216.239, -195.231, 111.773, 0.23", "-216.546, -194.975, 112.212, 0.23", "-217.461, -194.092, 113.601, 0.23", "-218.593, -192.956, 115.298, 1.14", "-219.47, -192.124, 116.568, 0.23", "-220.926, -191.087, 118.482, 0.23", "-221.848, -190.704, 119.478, 1.36", "-223.306, -190.222, 120.98, 0.23", "-224.612, -189.928, 122.221, 1.14", "-225.687, -189.754, 123.068, 1.14", "-228.362, -189.511, 124.851, 0.23", "-230.774, -189.655, 126.206, 1.14" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-9.15998, -38.0714, 0.441316, 0.23", "-7.82828, -41.662, 1.34889, 0.23", "-7.58877, -42.6099, 1.60582, 0.23", "-7.14868, -44.5655, 2.17281, 0.23", "-6.8572, -46.025, 2.55741, 1.14", "-6.46331, -48.3025, 3.11034, 0.23", "-6.17739, -50.1156, 3.53447, 1.14", "-5.89104, -52.9204, 4.10451, 0.23", "-5.61898, -55.7697, 4.65051, 0.23", "-5.39281, -58.1302, 5.05245, 1.36", "-5.02395, -62.829, 5.83478, 0.23", "-4.94679, -64.2955, 6.06021, 0.23", "-4.84318, -66.3788, 6.34686, 0.91", "-4.78872, -67.4111, 6.46485, 0.91", "-4.66752, -70.16, 6.74196, 0.23", "-4.55893, -72.3114, 6.97139, 0.23", "-4.37531, -74.7033, 7.16505, 0.68", "-3.88845, -79.2384, 7.48288, 0.23", "-3.68098, -80.5986, 7.56524, 1.36", "-3.47454, -81.7445, 7.62573, 1.36", "-2.86085, -84.6516, 7.70954, 0.45", "-2.25944, -87.0708, 7.6761, 1.14", "-1.45336, -89.8454, 7.58691, 0.23", "-0.806208, -91.8825, 7.44725, 0.45", "0.194112, -94.9077, 7.23754, 0.23", "0.978445, -97.253, 7.05213, 0.23", "1.6802, -99.3185, 6.90571, 0.91", "2.61788, -102.333, 6.8286, 0.23", "3.50409, -105.37, 6.8052, 0.91", "3.93924, -106.975, 6.80977, 0.23", "4.56008, -109.361, 6.86636, 1.14", "5.17168, -112.294, 7.13038, 0.23", "5.52381, -114.767, 7.46656, 0.91", "5.61016, -116.482, 7.82043, 0.23", "5.68244, -119.668, 8.58607, 0.23", "5.67404, -120.952, 8.91559, 0.91", "5.50688, -125.255, 10.1344, 0.23", "5.35505, -127.374, 10.7289, 1.14", "4.95129, -131.864, 12.0895, 0.23" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-9.15998, -38.0714, 0.441316, 1.59", "-9.31204, -39.5968, 0.283883, 1.59", "-9.54583, -41.942, 0.0418358, 2.27" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-9.54583, -41.942, 0.0418358, 0.23", "-9.13595, -44.614, 0.0750327, 0.23", "-8.82697, -46.4874, 0.0825514, 0.45", "-8.55204, -47.8542, 0.0621207, 1.36", "-8.1531, -49.6458, -0.0334468, 1.36", "-7.68276, -51.6638, -0.182705, 0.91", "-7.19888, -53.6831, -0.373826, 1.14", "-6.91388, -54.915, -0.520541, 1.14", "-6.21459, -57.9934, -0.958606, 0.91", "-5.77134, -60.0101, -1.28698, 1.14", "-5.4983, -61.3478, -1.52081, 1.14", "-5.18645, -62.9939, -1.81755, 0.23", "-4.85409, -65.0354, -2.17461, 0.23", "-4.7095, -66.1593, -2.35125, 0.23", "-4.57853, -67.5735, -2.53827, 2.05", "-4.38663, -69.8484, -2.7772, 1.59", "-4.26722, -71.2758, -2.91482, 1.59", "-4.12239, -72.8804, -3.05186, 0.45", "-3.94496, -74.4738, -3.17366, 1.14", "-3.75276, -76.0773, -3.27954, 1.14", "-3.49532, -78.3623, -3.41654, 1.59", "-3.32673, -79.9575, -3.52753, 1.14", "-3.08937, -82.7103, -3.73271, 0.68", "-2.97624, -84.2428, -3.85433, 1.14", "-2.84953, -86.3096, -4.0247, 0.23", "-2.75935, -88.2438, -4.18494, 1.59", "-2.73171, -89.9514, -4.31701, 0.68", "-2.7295, -91.2194, -4.41239, 0.91", "-2.74593, -93.0576, -4.54685, 0.91", "-2.76487, -95.8135, -4.74443, 1.36", "-2.73776, -98.5784, -4.92578, 0.91", "-2.60958, -102.321, -5.1555, 1.14", "-2.51719, -104.169, -5.24685, 0.68", "-2.40502, -105.999, -5.32831, 1.14", "-2.29557, -108.306, -5.41173, 0.23", "-2.23903, -110.18, -5.46447, 0.68", "-2.21954, -112.288, -5.50828, 0.45", "-2.2324, -113.603, -5.53712, 2.05", "-2.35376, -116.893, -5.61002, 0.91", "-2.56815, -120.733, -5.70399, 0.45", "-2.6812, -122.216, -5.7441, 0.91", "-2.86526, -124.077, -5.80374, 0.91", "-3.10912, -126.171, -5.88493, 0.23", "-3.24012, -127.316, -5.94081, 0.91", "-3.4541, -129.607, -6.0542, 0.45", "-3.58916, -131.703, -6.14041, 1.36", "-3.67891, -133.531, -6.19392, 0.68", "-3.70932, -134.32, -6.20591, 1.14", "-3.74554, -135.96, -6.21062, 0.23", "-3.71783, -137.354, -6.21757, 0.68", "-3.6034, -138.997, -6.23996, 0.23", "-3.48766, -140.153, -6.26512, 0.91", "-3.31719, -141.532, -6.30572, 0.91", "-2.93641, -144.714, -6.42287, 0.23", "-2.71779, -146.911, -6.51745, 1.36", "-2.42831, -150.359, -6.65203, 0.23", "-2.30837, -152.013, -6.71571, 1.14", "-2.26682, -152.725, -6.73885, 1.14", "-2.16354, -154.864, -6.78011, 0.23", "-2.10658, -156.789, -6.79026, 0.91", "-2.09423, -157.995, -6.78462, 1.82", "-2.09096, -159.142, -6.75961, 1.82", "-2.04105, -162.138, -6.67909, 0.45", "-1.99418, -163.634, -6.62488, 1.14", "-1.93986, -164.571, -6.58055, 1.14", "-1.81578, -166.173, -6.5017, 0.23", "-1.58953, -168.56, -6.39795, 0.23", "-1.48556, -169.493, -6.35975, 1.36", "-1.32966, -170.712, -6.32989, 1.36", "-1.05504, -172.795, -6.3279, 0.23", "-0.801076, -174.619, -6.33551, 0.91", "-0.606758, -175.885, -6.35372, 0.91", "-0.188531, -178.38, -6.4267, 0.23", "0.0989967, -180.073, -6.49114, 0.45", "0.448472, -182.109, -6.58441, 0.91", "0.786866, -183.979, -6.67667, 0.45", "1.02853, -185.441, -6.73898, 1.14", "1.18773, -186.593, -6.76679, 1.14", "1.42129, -188.456, -6.77455, 0.23", "1.50109, -189.177, -6.7653, 1.14", "1.6547, -190.589, -6.7362, 1.14", "1.97771, -193.612, -6.6739, 0.23", "2.25947, -196.203, -6.60802, 0.68", "2.42724, -197.609, -6.57548, 1.59", "2.55701, -198.513, -6.56026, 2.05", "3.13909, -201.752, -6.55549, 0.23", "3.39929, -202.885, -6.56703, 1.14", "3.65371, -203.728, -6.59275, 1.59", "4.37591, -205.665, -6.71292, 0.45", "5.05324, -207.29, -6.81094, 0.91", "5.93472, -209.231, -6.89452, 0.23", "6.71632, -210.828, -6.9447, 1.14", "7.2098, -211.761, -6.96539, 1.14", "8.86708, -214.728, -7.01524, 0.23", "9.9364, -216.511, -7.04429, 0.23", "10.6723, -217.714, -7.06961, 0.68", "11.0803, -218.374, -7.0923, 0.68", "12.019, -219.966, -7.17428, 0.23", "13.0054, -221.658, -7.27375, 1.36", "14.2267, -223.787, -7.4426, 0.45", "15.0588, -225.252, -7.62421, 1.14", "15.6388, -226.318, -7.78089, 0.23", "16.3571, -227.734, -7.98294, 2.5" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-9.54583, -41.942, 0.0418358, 0.91", "-10.8914, -44.9488, 1.00781, 0.91", "-11.9282, -47.2657, 1.75215, 0.91", "-12.8507, -49.327, 2.41437, 0.68", "-13.3948, -50.543, 2.80502, 1.36", "-14.1937, -52.3282, 3.37853, 1.59" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "16.3571, -227.734, -7.98294, 0.23", "19.2432, -227.736, -8.74457, 0.23", "21.2596, -227.747, -9.253, 0.91", "23.9759, -227.788, -9.91268, 0.23", "26.3963, -227.824, -10.5005, 1.14", "29.0491, -227.865, -11.1448, 0.23", "29.7628, -227.876, -11.3181, 0.68", "31.0903, -227.774, -11.5705, 0.23", "31.639, -227.701, -11.6793, 0.68" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "16.3571, -227.734, -7.98294, 0.23", "15.4054, -231.358, -8.07451, 0.23", "15.1428, -232.492, -8.08721, 0.91", "14.8272, -233.982, -8.06454, 0.45", "14.6449, -234.854, -8.03428, 1.36", "14.1842, -236.826, -7.95887, 0.23", "13.8997, -238.033, -7.8956, 1.14", "13.1782, -241.142, -7.66946, 0.23", "12.6622, -243.203, -7.45229, 0.23", "12.2121, -245.024, -7.22776, 1.59", "11.659, -247.495, -6.93402, 0.91", "11.2143, -249.871, -6.67098, 0.23", "10.9545, -251.774, -6.44815, 1.14", "10.7256, -254.639, -6.11807, 0.23", "10.6708, -256.648, -5.91143, 0.91", "10.7248, -259.213, -5.67825, 0.23", "10.841, -261.271, -5.52141, 1.14", "11.0029, -263.632, -5.41549, 0.23", "11.1725, -265.633, -5.37403, 1.36", "11.2218, -266.203, -5.37974, 1.36", "11.4829, -270.003, -5.50164, 0.23", "11.5614, -272.044, -5.66542, 0.91", "11.6021, -274.4, -6.00783, 0.23", "11.6289, -276.369, -6.41791, 1.36", "11.685, -277.473, -6.7093, 1.36", "12.0908, -281.293, -7.94867, 0.23", "12.574, -284.107, -9.04799, 1.14", "13.0316, -286.108, -9.94251, 0.23", "13.3578, -287.384, -10.5638, 1.36", "14.099, -289.952, -11.9261, 0.23", "14.7992, -291.97, -13.0814, 1.82", "15.0782, -292.537, -13.4454, 1.82", "15.6148, -293.333, -13.9435, 0.45" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-14.1937, -52.3282, 3.37853, 0.68", "-16.5606, -52.7393, 2.95196, 0.68", "-18.9849, -53.0095, 2.43046, 1.14", "-21.7109, -53.3343, 1.81918, 0.23", "-23.4309, -53.6124, 1.41154, 0.23", "-25.1592, -54.0728, 1.04477, 1.14", "-26.5154, -54.4996, 0.831435, 0.23", "-28.063, -55.0027, 0.692775, 0.45", "-29.1465, -55.3885, 0.656875, 0.45", "-30.724, -55.9383, 0.644421, 1.14", "-34.1736, -57.1098, 0.656495, 0.23", "-36.7124, -57.8498, 0.692303, 0.91", "-38.3498, -58.1367, 0.722632, 0.91", "-40.066, -58.1227, 0.729762, 0.45", "-42.0011, -57.7624, 0.65941, 0.45", "-43.4717, -57.1424, 0.509151, 0.45", "-44.859, -56.0476, 0.165067, 0.91", "-46.4761, -54.1606, -0.569516, 0.45", "-47.3351, -52.7789, -1.08695, 0.45", "-47.8717, -51.5231, -1.50291, 0.45", "-48.3066, -50.1392, -1.77737, 0.45", "-47.6553, -51.1896, -2.1962, 1.36", "-46.7485, -52.0875, -3.04614, 1.36", "-45.7395, -53.2009, -3.94568, 0.23" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-14.1937, -52.3282, 3.37853, 0.23", "-14.3981, -56.0026, 3.84555, 0.23", "-14.4559, -57.7072, 4.0545, 0.91", "-14.4602, -60.0059, 4.33202, 0.91", "-14.4129, -62.6919, 4.62546, 0.91", "-14.2859, -65.6914, 4.93149, 0.23", "-14.0647, -69.1046, 5.26599, 0.68", "-13.726, -72.7696, 5.61743, 0.45", "-13.2719, -76.8567, 5.99364, 0.91", "-12.8646, -80.1322, 6.27088, 0.68", "-12.3817, -83.8766, 6.54319, 1.59", "-11.4155, -91.6271, 7.10762, 0.45", "-10.9996, -94.9284, 7.32933, 0.45", "-10.729, -97.159, 7.46919, 1.59", "-10.5446, -99.0043, 7.57528, 1.59", "-10.2551, -103.789, 7.82384, 0.23", "-10.2103, -107.117, 7.98808, 0.68", "-10.3591, -111.91, 8.22835, 0.23", "-10.5482, -114.837, 8.38469, 1.36", "-11.004, -119.763, 8.65593, 0.45", "-11.8783, -126.631, 9.06476, 0.45", "-12.4115, -129.92, 9.27976, 0.45", "-12.8951, -132.398, 9.44109, 1.36", "-13.5294, -135.032, 9.64684, 1.59", "-14.2277, -137.563, 9.88712, 0.23", "-14.9154, -139.812, 10.1417, 0.45", "-16.2732, -144.154, 10.675, 0.23", "-16.7495, -145.799, 10.8948, 0.23", "-17.5771, -148.759, 11.3704, 1.14", "-18.906, -153.572, 12.2744, 0.23", "-19.6851, -156.425, 12.866, 1.14", "-20.5918, -159.932, 13.6796, 0.23", "-21.3899, -163.041, 14.4659, 0.45", "-22.0538, -165.944, 15.2912, 0.23", "-22.5754, -168.29, 16.0291, 1.14", "-22.8254, -169.452, 16.432, 1.14", "-23.4549, -172.252, 17.4557, 0.23", "-23.8277, -173.798, 18.0532, 0.91", "-24.6438, -177.14, 19.2823, 0.23", "-25.0538, -179.291, 20.0483, 1.14", "-25.4589, -182.012, 20.979, 0.23", "-25.6402, -183.95, 21.5575, 0.91", "-25.6733, -185.007, 21.8081, 0.23", "-25.6366, -186.492, 22.1108, 0.68", "-25.5036, -190.156, 22.7258, 0.23", "-25.3968, -192.344, 23.0795, 0.68", "-25.3109, -195.666, 23.5828, 0.23", "-25.2934, -197.93, 23.9815, 0.91", "-25.5064, -203.735, 25.068, 0.23", "-25.6262, -206.034, 25.5108, 0.68", "-25.8167, -208.375, 25.9697, 0.23", "-26.0801, -210.801, 26.5077, 0.91", "-26.8538, -215.729, 27.7633, 0.23", "-27.5289, -219.115, 28.7004, 0.91" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "15.6148, -293.333, -13.9435, 0.23", "16.5474, -294.769, -13.9323, 0.23", "17.6968, -296.427, -13.9676, 0.91", "18.7982, -297.869, -14.0001, 0.23", "20.0564, -299.536, -14.094, 0.91", "20.9004, -300.667, -14.1733, 0.23", "22.0518, -302.205, -14.3319, 0.68", "23.0021, -303.462, -14.536, 0.23", "24.1286, -304.869, -14.8494, 0.91", "25.2989, -306.204, -15.2408, 0.23", "26.2781, -307.287, -15.6379, 0.91", "27.6538, -308.903, -16.292, 0.23", "28.8531, -310.34, -16.9209, 1.14", "30.5154, -312.418, -17.8647, 0.23", "31.743, -313.963, -18.6195, 0.68", "32.9244, -315.368, -19.33, 0.23", "34.289, -317.029, -20.2409, 1.14" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "15.6148, -293.333, -13.9435, 0.23", "16.2412, -294.612, -14.5431, 0.23", "17.0148, -296.192, -15.2835, 0.68", "17.3911, -296.96, -15.6438, 0.23", "18.3815, -298.983, -16.5918, 0.91" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_24", "dend_3", "dend_0", "dend_34", "dend_25", "dend_21", "dend_4", "dend_2", "dend_1", "dend_40", "dend_35", "dend_33", "dend_26", "dend_23", "dend_22", "dend_20", "dend_5", "dend_39", "dend_36", "dend_30", "dend_27", "dend_17", "dend_6", "dend_38", "dend_37", "dend_32", "dend_31", "dend_29", "dend_28", "dend_19", "dend_18", "dend_16", "dend_7", "dend_11", "dend_8", "dend_15", "dend_12", "dend_10", "dend_9", "dend_14", "dend_13" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_24", "dend_3", "dend_0", "dend_34", "dend_25", "dend_21", "dend_4", "dend_2", "dend_1", "dend_40", "dend_35", "dend_33", "dend_26", "dend_23", "dend_22", "dend_20", "dend_5", "dend_39", "dend_36", "dend_30", "dend_27", "dend_17", "dend_6", "dend_38", "dend_37", "dend_32", "dend_31", "dend_29", "dend_28", "dend_19", "dend_18", "dend_16", "dend_7", "dend_11", "dend_8", "dend_15", "dend_12", "dend_10", "dend_9", "dend_14", "dend_13" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_24", "dend_24", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_34", "dend_34", "dend_34", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_5", "dend_5", "dend_5", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_6", "dend_6", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_7", "dend_7", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L5_SBC_513d1f1596_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_34, id: dend_34, parent: dend_24
create dend_34
public dend_34
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_3
create dend_21
public dend_21
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_25
create dend_33
public dend_33
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_20, id: dend_20, parent: dend_4
create dend_20
public dend_20
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_17, id: dend_17, parent: dend_5
create dend_17
public dend_17
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_6
create dend_16
public dend_16
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_24, dend_3, dend_0, dend_34, dend_25, dend_21, dend_4, dend_2, dend_1, dend_40, dend_35, dend_33, dend_26, dend_23, dend_22, dend_20, dend_5, dend_39, dend_36, dend_30, dend_27, dend_17, dend_6, dend_38, dend_37, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_16, dend_7, dend_11, dend_8, dend_15, dend_12, dend_10, dend_9, dend_14, dend_13]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_24, dend_3, dend_0, dend_34, dend_25, dend_21, dend_4, dend_2, dend_1, dend_40, dend_35, dend_33, dend_26, dend_23, dend_22, dend_20, dend_5, dend_39, dend_36, dend_30, dend_27, dend_17, dend_6, dend_38, dend_37, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_16, dend_7, dend_11, dend_8, dend_15, dend_12, dend_10, dend_9, dend_14, dend_13]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_43
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_24, dend_24, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_34, dend_34, dend_34, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_5, dend_5, dend_5, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_6, dend_6, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_7, dend_7, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_24(0), soma_0(0.49999929751125366)
    connect dend_3(0), soma_0(0.49999929751125366)
    connect dend_0(0), soma_0(0.49999929751125366)
    connect axon_0(0), soma_0(1.0)
    connect dend_34(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_20(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_17(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.0539, -10.2039, 0.0, 4.14336 ) }
    soma_0 { pt3dadd( -1.01121, -9.20625, 0.0, 7.24872 ) }
    soma_0 { pt3dadd( -0.968511, -8.20857, 0.0, 9.44401 ) }
    soma_0 { pt3dadd( -0.925815, -7.2109, 0.0, 10.5422 ) }
    soma_0 { pt3dadd( -0.88312, -6.21322, 0.0, 11.4092 ) }
    soma_0 { pt3dadd( -0.840424, -5.21554, 0.0, 11.9642 ) }
    soma_0 { pt3dadd( -0.797728, -4.21787, 0.0, 12.4342 ) }
    soma_0 { pt3dadd( -0.755032, -3.22019, 0.0, 12.6614 ) }
    soma_0 { pt3dadd( -0.712337, -2.22251, 0.0, 12.6364 ) }
    soma_0 { pt3dadd( -0.669641, -1.22484, 0.0, 12.5104 ) }
    soma_0 { pt3dadd( -0.626945, -0.227159, 0.0, 12.2671 ) }
    soma_0 { pt3dadd( -0.584249, 0.770517, 0.0, 12.0239 ) }
    soma_0 { pt3dadd( -0.541554, 1.76819, 0.0, 11.4645 ) }
    soma_0 { pt3dadd( -0.498858, 2.76587, 0.0, 10.6882 ) }
    soma_0 { pt3dadd( -0.456162, 3.76355, 0.0, 9.91399 ) }
    soma_0 { pt3dadd( -0.413466, 4.76122, 0.0, 9.47101 ) }
    soma_0 { pt3dadd( -0.370771, 5.7589, 0.0, 9.20688 ) }
    soma_0 { pt3dadd( -0.328075, 6.75658, 0.0, 8.75449 ) }
    soma_0 { pt3dadd( -0.285379, 7.75425, 0.0, 8.25522 ) }
    soma_0 { pt3dadd( -0.242683, 8.75193, 0.0, 6.57349 ) }
    soma_0 { pt3dadd( -0.199988, 9.74961, 0.0, 3.81 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 21/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 0.284736, 7.50294, 0.16, 6.82 ) }
    dend_24 { pt3dadd( 0.793362, 9.28613, 0.528626, 6.82 ) }
    dend_24 { pt3dadd( 1.60148, 12.1193, 1.11431, 6.59 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 24/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -2.66527, -10.1579, 1.27, 5.68 ) }
    dend_3 { pt3dadd( -3.16148, -11.8485, 0.84318, 3.64 ) }
    dend_3 { pt3dadd( -3.64384, -13.4919, 0.42827, 2.95 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 27/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.30527, 7.45169, 0.0100002, 1.59 ) }
    dend_0 { pt3dadd( -5.13645, 8.11763, -0.0261979, 1.59 ) }
    dend_0 { pt3dadd( -8.01462, 9.16432, -0.0830927, 1.36 ) }
    dend_0 { pt3dadd( -9.5301, 9.71544, -0.11305, 1.36 ) }
    dend_0 { pt3dadd( -13.0521, 10.9962, -0.182671, 1.82 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 32/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.199988, 9.74961, 0.0, 0.483322 ) }
    axon_0 { pt3dadd( 0.441352, 24.7359, 0.0, 0.483322 ) }
    axon_0 { pt3dadd( 1.08269, 39.7222, 0.0, 0.483322 ) }
    // Section: dend_34, id: dend_34, parent: dend_24 (entry count 35/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 1.60148, 12.1193, 1.11431, 1.14 ) }
    dend_34 { pt3dadd( -0.945413, 17.7004, 0.599652, 1.14 ) }
    dend_34 { pt3dadd( -2.08796, 20.2041, 0.368773, 1.14 ) }
    dend_34 { pt3dadd( -2.82711, 21.8238, 0.219412, 1.59 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 39/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 1.60148, 12.1193, 1.11431, 0.91 ) }
    dend_25 { pt3dadd( 5.58704, 13.432, -0.266407, 0.91 ) }
    dend_25 { pt3dadd( 7.44139, 14.0428, -0.908807, 0.91 ) }
    // Section: dend_21, id: dend_21, parent: dend_3 (entry count 42/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -3.64384, -13.4919, 0.42827, 0.91 ) }
    dend_21 { pt3dadd( -5.60472, -13.7598, 0.0681805, 0.91 ) }
    dend_21 { pt3dadd( -8.01996, -13.8084, -0.249605, 0.91 ) }
    dend_21 { pt3dadd( -10.2053, -13.742, -0.514572, 1.14 ) }
    dend_21 { pt3dadd( -11.7968, -13.683, -0.727383, 0.91 ) }
    dend_21 { pt3dadd( -14.6957, -13.6254, -1.10629, 0.68 ) }
    dend_21 { pt3dadd( -16.149, -13.646, -1.29066, 0.91 ) }
    dend_21 { pt3dadd( -18.8969, -13.6736, -1.6081, 1.36 ) }
    dend_21 { pt3dadd( -21.4405, -13.728, -1.8343, 0.68 ) }
    dend_21 { pt3dadd( -23.2, -13.8495, -1.96896, 0.68 ) }
    dend_21 { pt3dadd( -25.442, -14.1577, -2.11551, 1.59 ) }
    dend_21 { pt3dadd( -28.3849, -14.7396, -2.27223, 1.14 ) }
    dend_21 { pt3dadd( -29.6743, -15.0195, -2.31962, 0.68 ) }
    dend_21 { pt3dadd( -32.3725, -15.6273, -2.40887, 1.14 ) }
    dend_21 { pt3dadd( -34.5291, -16.116, -2.47614, 0.23 ) }
    dend_21 { pt3dadd( -36.2571, -16.5085, -2.53903, 1.14 ) }
    dend_21 { pt3dadd( -38.4038, -17.034, -2.66551, 0.91 ) }
    dend_21 { pt3dadd( -42.0279, -18.0511, -2.9435, 0.23 ) }
    dend_21 { pt3dadd( -43.8025, -18.6673, -3.1189, 0.91 ) }
    dend_21 { pt3dadd( -45.3642, -19.371, -3.3237, 0.91 ) }
    dend_21 { pt3dadd( -46.3934, -20.0221, -3.49192, 1.14 ) }
    dend_21 { pt3dadd( -47.7781, -21.4003, -3.75643, 0.45 ) }
    dend_21 { pt3dadd( -48.5623, -22.5926, -3.92331, 0.45 ) }
    dend_21 { pt3dadd( -49.296, -24.079, -4.08539, 0.91 ) }
    dend_21 { pt3dadd( -49.9412, -25.6371, -4.20947, 0.45 ) }
    dend_21 { pt3dadd( -50.5164, -27.2312, -4.29852, 1.59 ) }
    dend_21 { pt3dadd( -51.5211, -30.3682, -4.44181, 0.45 ) }
    dend_21 { pt3dadd( -52.241, -32.9666, -4.53233, 1.82 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 70/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -3.64384, -13.4919, 0.42827, 2.95 ) }
    dend_4 { pt3dadd( -4.26605, -17.9105, 0.633037, 2.95 ) }
    dend_4 { pt3dadd( -4.90049, -22.4158, 0.841828, 2.95 ) }
    dend_4 { pt3dadd( -5.17103, -24.337, 0.930862, 3.41 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 74/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -13.0521, 10.9962, -0.182671, 1.14 ) }
    dend_2 { pt3dadd( -14.7775, 9.33912, -0.236333, 1.14 ) }
    dend_2 { pt3dadd( -15.9281, 8.04559, -0.317351, 0.45 ) }
    dend_2 { pt3dadd( -16.9834, 6.78984, -0.401037, 1.59 ) }
    dend_2 { pt3dadd( -19.1131, 4.31578, -0.57031, 0.45 ) }
    dend_2 { pt3dadd( -20.6985, 2.55391, -0.747607, 0.91 ) }
    dend_2 { pt3dadd( -21.4688, 1.7456, -0.84955, 1.59 ) }
    dend_2 { pt3dadd( -23.3242, -0.275212, -1.12265, 0.23 ) }
    dend_2 { pt3dadd( -24.0908, -1.03678, -1.28649, 0.23 ) }
    dend_2 { pt3dadd( -24.9314, -1.64133, -1.58994, 0.23 ) }
    dend_2 { pt3dadd( -26.578, -1.8639, -2.31775, 0.68 ) }
    dend_2 { pt3dadd( -28.2084, -1.79529, -2.89669, 0.68 ) }
    dend_2 { pt3dadd( -29.4325, -1.79314, -3.21426, 0.68 ) }
    dend_2 { pt3dadd( -31.4245, -1.91993, -3.54183, 1.59 ) }
    dend_2 { pt3dadd( -32.983, -2.2113, -3.681, 1.59 ) }
    dend_2 { pt3dadd( -35.2111, -2.78847, -3.7429, 0.23 ) }
    dend_2 { pt3dadd( -37.2187, -3.41173, -3.69851, 0.91 ) }
    dend_2 { pt3dadd( -39.114, -4.0053, -3.6026, 0.91 ) }
    dend_2 { pt3dadd( -40.7332, -4.4706, -3.46584, 0.91 ) }
    dend_2 { pt3dadd( -42.8014, -4.98097, -3.27228, 0.23 ) }
    dend_2 { pt3dadd( -45.7203, -5.60447, -3.02839, 0.68 ) }
    dend_2 { pt3dadd( -47.3811, -5.88428, -2.91226, 0.68 ) }
    dend_2 { pt3dadd( -49.5905, -6.1664, -2.79632, 0.23 ) }
    dend_2 { pt3dadd( -51.6323, -6.35592, -2.72212, 0.45 ) }
    dend_2 { pt3dadd( -54.2007, -6.55134, -2.65962, 0.45 ) }
    dend_2 { pt3dadd( -55.8385, -6.64664, -2.63233, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_2 { pt3dadd( -57.4767, -6.72776, -2.60846, 0.23 ) }
    dend_2 { pt3dadd( -59.8376, -6.82127, -2.57378, 1.36 ) }
    dend_2 { pt3dadd( -61.9023, -6.9298, -2.54679, 0.45 ) }
    dend_2 { pt3dadd( -64.6518, -7.08016, -2.50298, 0.91 ) }
    dend_2 { pt3dadd( -66.3455, -7.21807, -2.4425, 0.91 ) }
    dend_2 { pt3dadd( -67.7318, -7.34306, -2.38029, 1.36 ) }
    dend_2 { pt3dadd( -69.7733, -7.53913, -2.26756, 0.23 ) }
    dend_2 { pt3dadd( -72.1055, -7.76083, -2.11758, 0.23 ) }
    dend_2 { pt3dadd( -73.2761, -7.89188, -2.04621, 0.91 ) }
    dend_2 { pt3dadd( -76.3974, -8.42424, -1.84553, 0.23 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 10/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -13.0521, 10.9962, -0.182671, 0.23 ) }
    dend_1 { pt3dadd( -15.3579, 11.8667, 0.853354, 0.23 ) }
    dend_1 { pt3dadd( -17.71, 12.7735, 1.98854, 0.68 ) }
    dend_1 { pt3dadd( -19.8193, 13.6241, 3.13207, 0.23 ) }
    dend_1 { pt3dadd( -20.7391, 13.9933, 3.65524, 0.45 ) }
    dend_1 { pt3dadd( -22.6395, 14.7995, 4.82469, 0.91 ) }
    dend_1 { pt3dadd( -24.6105, 15.6872, 6.07214, 0.23 ) }
    dend_1 { pt3dadd( -25.4479, 16.086, 6.6954, 0.68 ) }
    dend_1 { pt3dadd( -26.5693, 16.8074, 7.69018, 0.23 ) }
    dend_1 { pt3dadd( -27.1172, 17.2598, 8.26161, 0.68 ) }
    dend_1 { pt3dadd( -28.3194, 18.3832, 9.55197, 0.23 ) }
    dend_1 { pt3dadd( -28.9478, 18.9641, 10.2237, 0.68 ) }
    dend_1 { pt3dadd( -30.3002, 20.0874, 11.656, 0.23 ) }
    dend_1 { pt3dadd( -31.7201, 21.085, 13.0817, 0.68 ) }
    dend_1 { pt3dadd( -34.277, 22.6443, 15.4995, 0.23 ) }
    dend_1 { pt3dadd( -35.5191, 23.2871, 16.579, 0.45 ) }
    dend_1 { pt3dadd( -37.6909, 24.1254, 18.2112, 0.23 ) }
    dend_1 { pt3dadd( -39.2249, 24.5459, 19.1664, 0.23 ) }
    dend_1 { pt3dadd( -40.7565, 24.8844, 19.8617, 0.23 ) }
    dend_1 { pt3dadd( -42.2029, 25.2031, 20.3501, 0.23 ) }
    dend_1 { pt3dadd( -43.7856, 25.6929, 20.721, 0.23 ) }
    dend_1 { pt3dadd( -45.6111, 26.4627, 21.0517, 0.23 ) }
    dend_1 { pt3dadd( -48.3089, 27.8987, 21.4336, 0.45 ) }
    dend_1 { pt3dadd( -51.1999, 29.6289, 21.8296, 0.23 ) }
    dend_1 { pt3dadd( -52.8401, 30.6392, 22.0728, 0.68 ) }
    dend_1 { pt3dadd( -55.3375, 32.0915, 22.4964, 0.23 ) }
    dend_1 { pt3dadd( -57.9308, 33.5707, 23.0005, 0.23 ) }
    dend_1 { pt3dadd( -60.6609, 35.0798, 23.5377, 0.23 ) }
    dend_1 { pt3dadd( -63.3349, 36.5131, 24.0865, 0.23 ) }
    dend_1 { pt3dadd( -66.2404, 37.919, 24.717, 0.23 ) }
    dend_1 { pt3dadd( -69.7673, 39.4202, 25.4915, 0.45 ) }
    dend_1 { pt3dadd( -70.7442, 39.7719, 25.693, 0.23 ) }
    dend_1 { pt3dadd( -72.2574, 40.2345, 26.0123, 0.68 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 43/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.08269, 39.7222, 0.0, 1.59 ) }
    axon_1 { pt3dadd( 1.72403, 54.7085, 0.0, 1.59 ) }
    axon_1 { pt3dadd( 2.36537, 69.6947, 0.0, 1.59 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 46/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -2.82711, 21.8238, 0.219412, 0.23 ) }
    dend_40 { pt3dadd( -3.46695, 21.6197, 1.41606, 0.23 ) }
    dend_40 { pt3dadd( -3.60328, 21.0503, 2.10675, 0.91 ) }
    dend_40 { pt3dadd( -3.76934, 19.8347, 3.14068, 0.23 ) }
    dend_40 { pt3dadd( -4.06244, 18.8783, 3.99112, 0.23 ) }
    dend_40 { pt3dadd( -4.49386, 18.2264, 4.84343, 0.23 ) }
    dend_40 { pt3dadd( -4.89946, 17.8423, 5.49928, 0.91 ) }
    dend_40 { pt3dadd( -5.66959, 17.2913, 6.28785, 0.23 ) }
    dend_40 { pt3dadd( -6.09619, 17.107, 6.59311, 0.23 ) }
    dend_40 { pt3dadd( -7.24499, 16.6999, 7.33346, 0.91 ) }
    dend_40 { pt3dadd( -8.62825, 16.3264, 8.20993, 0.23 ) }
    dend_40 { pt3dadd( -10.1754, 16.0181, 9.09286, 0.23 ) }
    dend_40 { pt3dadd( -11.8312, 15.807, 10.0052, 0.68 ) }
    dend_40 { pt3dadd( -14.5837, 15.5587, 11.4603, 0.23 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 60/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -2.82711, 21.8238, 0.219412, 0.68 ) }
    dend_35 { pt3dadd( -2.59499, 25.4861, -0.0295549, 0.68 ) }
    dend_35 { pt3dadd( -2.41804, 28.0598, -0.149057, 0.68 ) }
    dend_35 { pt3dadd( -2.32618, 29.5203, -0.193108, 1.36 ) }
    dend_35 { pt3dadd( -2.05686, 33.6069, -0.286583, 0.68 ) }
    dend_35 { pt3dadd( -1.98196, 35.1098, -0.324512, 0.68 ) }
    dend_35 { pt3dadd( -1.93852, 38.1931, -0.392233, 1.59 ) }
    dend_35 { pt3dadd( -1.95462, 39.6573, -0.377477, 1.59 ) }
    dend_35 { pt3dadd( -2.14157, 43.3523, -0.195638, 0.23 ) }
    dend_35 { pt3dadd( -2.38726, 45.2575, -0.0282628, 0.23 ) }
    dend_35 { pt3dadd( -2.88064, 47.5307, 0.25445, 1.14 ) }
    dend_35 { pt3dadd( -3.55386, 50.076, 0.616976, 0.91 ) }
    dend_35 { pt3dadd( -4.10762, 51.902, 0.896654, 0.91 ) }
    dend_35 { pt3dadd( -4.81388, 54.1711, 1.2628, 1.36 ) }
    dend_35 { pt3dadd( -5.61416, 56.5307, 1.69566, 0.68 ) }
    dend_35 { pt3dadd( -6.4424, 58.9168, 2.16702, 1.14 ) }
    dend_35 { pt3dadd( -7.22118, 61.3431, 2.66688, 0.45 ) }
    dend_35 { pt3dadd( -7.70283, 63.0737, 2.9789, 1.59 ) }
    dend_35 { pt3dadd( -8.34507, 65.5464, 3.28715, 2.27 ) }
    // Section: dend_33, id: dend_33, parent: dend_25 (entry count 79/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 7.44139, 14.0428, -0.908807, 0.91 ) }
    dend_33 { pt3dadd( 8.00089, 13.8374, -1.59601, 0.91 ) }
    dend_33 { pt3dadd( 8.8018, 13.2781, -2.55009, 0.91 ) }
    dend_33 { pt3dadd( 10.1239, 12.2697, -3.91384, 0.68 ) }
    dend_33 { pt3dadd( 10.7368, 11.7717, -4.47643, 0.68 ) }
    dend_33 { pt3dadd( 11.3831, 11.1932, -5.00845, 1.14 ) }
    dend_33 { pt3dadd( 12.3971, 10.1874, -5.7492, 0.68 ) }
    dend_33 { pt3dadd( 13.5265, 8.82001, -6.40512, 0.23 ) }
    dend_33 { pt3dadd( 14.0696, 7.94792, -6.62847, 0.23 ) }
    dend_33 { pt3dadd( 14.3436, 7.3795, -6.69992, 0.23 ) }
    dend_33 { pt3dadd( 14.773, 6.27167, -6.78396, 1.14 ) }
    dend_33 { pt3dadd( 15.1794, 5.19015, -6.82845, 1.82 ) }
    dend_33 { pt3dadd( 15.5748, 4.03094, -6.82429, 0.68 ) }
    dend_33 { pt3dadd( 15.9296, 2.56763, -6.76092, 1.14 ) }
    dend_33 { pt3dadd( 16.1246, 1.4132, -6.73244, 0.45 ) }
    dend_33 { pt3dadd( 16.2457, 0.46837, -6.71793, 0.45 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 95/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 7.44139, 14.0428, -0.908807, 1.14 ) }
    dend_26 { pt3dadd( 9.45649, 14.2631, -0.865395, 1.14 ) }
    dend_26 { pt3dadd( 10.5901, 14.3871, -0.840974, 1.59 ) }
    dend_26 { pt3dadd( 12.6205, 14.6091, -0.797231, 1.59 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 99/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -52.241, -32.9666, -4.53233, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_23 { pt3dadd( -55.2008, -34.0575, -4.01596, 0.23 ) }
    dend_23 { pt3dadd( -57.2518, -34.9712, -3.69001, 0.68 ) }
    dend_23 { pt3dadd( -59.8117, -36.3115, -3.26411, 0.23 ) }
    dend_23 { pt3dadd( -60.8811, -36.9453, -3.08115, 0.23 ) }
    dend_23 { pt3dadd( -63.1574, -38.3961, -2.69571, 0.23 ) }
    dend_23 { pt3dadd( -65.5388, -40.0313, -2.29963, 0.91 ) }
    dend_23 { pt3dadd( -67.1603, -41.2991, -2.05016, 0.23 ) }
    dend_23 { pt3dadd( -68.6699, -42.6101, -1.8028, 0.91 ) }
    dend_23 { pt3dadd( -69.9418, -43.7415, -1.58035, 0.23 ) }
    dend_23 { pt3dadd( -71.5239, -45.1018, -1.29955, 1.59 ) }
    dend_23 { pt3dadd( -73.8021, -46.9164, -0.910652, 0.23 ) }
    dend_23 { pt3dadd( -75.2945, -47.9963, -0.660704, 0.23 ) }
    dend_23 { pt3dadd( -78.0709, -49.7629, -0.234836, 0.23 ) }
    dend_23 { pt3dadd( -79.7049, -50.6734, -0.0127298, 1.59 ) }
    dend_23 { pt3dadd( -80.7148, -51.1792, 0.115775, 0.23 ) }
    dend_23 { pt3dadd( -82.8928, -52.1466, 0.361734, 0.68 ) }
    dend_23 { pt3dadd( -85.2429, -53.0739, 0.559572, 0.23 ) }
    dend_23 { pt3dadd( -86.9714, -53.7379, 0.620535, 1.14 ) }
    dend_23 { pt3dadd( -87.7068, -54.033, 0.61493, 1.14 ) }
    dend_23 { pt3dadd( -89.0592, -54.6225, 0.567266, 0.23 ) }
    dend_23 { pt3dadd( -91.2285, -55.6655, 0.510948, 0.68 ) }
    dend_23 { pt3dadd( -93.4029, -56.7966, 0.471758, 0.23 ) }
    dend_23 { pt3dadd( -95.9941, -58.1707, 0.516838, 1.14 ) }
    dend_23 { pt3dadd( -99.3266, -59.9953, 0.690999, 0.23 ) }
    dend_23 { pt3dadd( -101.253, -61.083, 0.862072, 0.91 ) }
    dend_23 { pt3dadd( -104.935, -63.255, 1.30411, 0.23 ) }
    dend_23 { pt3dadd( -105.988, -63.9207, 1.46561, 0.91 ) }
    dend_23 { pt3dadd( -109.805, -66.4799, 2.19493, 0.23 ) }
    dend_23 { pt3dadd( -112.857, -68.6757, 2.95358, 1.14 ) }
    dend_23 { pt3dadd( -115.517, -70.6344, 3.68757, 0.45 ) }
    dend_23 { pt3dadd( -117.297, -72.0048, 4.19389, 1.14 ) }
    dend_23 { pt3dadd( -118.705, -73.1445, 4.58584, 1.14 ) }
    dend_23 { pt3dadd( -120.415, -74.6432, 5.08264, 0.23 ) }
    dend_23 { pt3dadd( -121.593, -75.9521, 5.4476, 0.23 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 34/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -52.241, -32.9666, -4.53233, 0.45 ) }
    dend_22 { pt3dadd( -54.781, -35.8233, -5.11202, 0.45 ) }
    dend_22 { pt3dadd( -56.5942, -37.8625, -5.52582, 1.14 ) }
    dend_22 { pt3dadd( -57.7301, -39.14, -5.78507, 0.23 ) }
    dend_22 { pt3dadd( -59.2224, -40.8184, -6.12566, 1.36 ) }
    dend_22 { pt3dadd( -60.7342, -42.5186, -6.47066, 0.45 ) }
    // Section: dend_20, id: dend_20, parent: dend_4 (entry count 40/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -5.17103, -24.337, 0.930862, 0.23 ) }
    dend_20 { pt3dadd( -4.33295, -26.4321, 1.04114, 0.23 ) }
    dend_20 { pt3dadd( -3.35098, -28.9353, 1.14355, 0.23 ) }
    dend_20 { pt3dadd( -2.28694, -31.5567, 1.25411, 1.14 ) }
    dend_20 { pt3dadd( -1.1798, -34.1707, 1.36003, 0.23 ) }
    dend_20 { pt3dadd( -0.383659, -35.9888, 1.42492, 0.91 ) }
    dend_20 { pt3dadd( 0.231162, -37.3745, 1.4664, 0.91 ) }
    dend_20 { pt3dadd( 1.70165, -40.7416, 1.53801, 0.23 ) }
    dend_20 { pt3dadd( 2.80384, -43.2075, 1.57651, 1.14 ) }
    dend_20 { pt3dadd( 3.56239, -44.8952, 1.58875, 1.14 ) }
    dend_20 { pt3dadd( 4.93385, -48.0015, 1.57732, 0.45 ) }
    dend_20 { pt3dadd( 6.26, -51.0176, 1.53496, 0.45 ) }
    dend_20 { pt3dadd( 6.92283, -52.598, 1.51344, 0.91 ) }
    dend_20 { pt3dadd( 8.03118, -55.297, 1.4738, 0.23 ) }
    dend_20 { pt3dadd( 9.03721, -57.8718, 1.4688, 0.23 ) }
    dend_20 { pt3dadd( 10.1724, -60.8842, 1.5088, 0.68 ) }
    dend_20 { pt3dadd( 11.4854, -64.3634, 1.59584, 0.23 ) }
    dend_20 { pt3dadd( 12.3638, -66.6636, 1.69359, 0.91 ) }
    dend_20 { pt3dadd( 13.5834, -69.8409, 1.9128, 1.14 ) }
    dend_20 { pt3dadd( 15.6165, -75.1972, 2.5115, 0.23 ) }
    dend_20 { pt3dadd( 16.2617, -76.923, 2.78356, 0.23 ) }
    dend_20 { pt3dadd( 17.1463, -79.4095, 3.26459, 0.68 ) }
    dend_20 { pt3dadd( 18.2099, -82.5503, 3.97095, 0.23 ) }
    dend_20 { pt3dadd( 19.5032, -86.4656, 4.98304, 1.36 ) }
    dend_20 { pt3dadd( 20.3903, -89.2498, 5.77966, 0.68 ) }
    dend_20 { pt3dadd( 21.4315, -92.769, 6.79144, 0.23 ) }
    dend_20 { pt3dadd( 21.7332, -93.8822, 7.10049, 0.91 ) }
    dend_20 { pt3dadd( 22.5625, -97.1354, 7.98135, 0.23 ) }
    dend_20 { pt3dadd( 23.1031, -99.3311, 8.52733, 0.91 ) }
    dend_20 { pt3dadd( 23.8706, -102.472, 9.2024, 1.14 ) }
    dend_20 { pt3dadd( 24.8188, -106.269, 9.90601, 0.23 ) }
    dend_20 { pt3dadd( 25.2982, -108.177, 10.2355, 0.91 ) }
    dend_20 { pt3dadd( 26.0893, -111.289, 10.7492, 0.23 ) }
    dend_20 { pt3dadd( 26.3973, -112.42, 10.8976, 0.91 ) }
    dend_20 { pt3dadd( 26.8516, -113.965, 11.0529, 0.91 ) }
    dend_20 { pt3dadd( 28.052, -117.517, 11.3845, 0.23 ) }
    dend_20 { pt3dadd( 29.0705, -120.182, 11.6026, 2.05 ) }
    dend_20 { pt3dadd( 29.5246, -121.327, 11.6776, 2.05 ) }
    dend_20 { pt3dadd( 32.2049, -127.864, 12.0016, 0.23 ) }
    dend_20 { pt3dadd( 33.1258, -130.059, 12.0983, 0.91 ) }
    dend_20 { pt3dadd( 35.5695, -135.802, 12.2831, 0.23 ) }
    dend_20 { pt3dadd( 36.2991, -137.485, 12.3119, 0.23 ) }
    dend_20 { pt3dadd( 36.9483, -138.93, 12.3302, 1.14 ) }
    dend_20 { pt3dadd( 37.5827, -140.295, 12.3445, 1.14 ) }
    dend_20 { pt3dadd( 39.846, -145.028, 12.4241, 0.23 ) }
    dend_20 { pt3dadd( 40.8836, -147.089, 12.4877, 0.23 ) }
    dend_20 { pt3dadd( 41.6732, -148.608, 12.5603, 0.91 ) }
    dend_20 { pt3dadd( 42.5999, -150.316, 12.6695, 0.91 ) }
    dend_20 { pt3dadd( 44.7496, -153.972, 12.9509, 0.23 ) }
    dend_20 { pt3dadd( 45.8909, -155.811, 13.1224, 1.14 ) }
    dend_20 { pt3dadd( 48.5387, -159.718, 13.5526, 0.23 ) }
    dend_20 { pt3dadd( 50.098, -161.93, 13.8188, 0.23 ) }
    dend_20 { pt3dadd( 50.8769, -163.009, 13.9456, 0.91 ) }
    dend_20 { pt3dadd( 51.9479, -164.391, 14.1426, 0.91 ) }
    dend_20 { pt3dadd( 53.5935, -166.324, 14.4492, 0.23 ) }
    dend_20 { pt3dadd( 54.6107, -167.433, 14.6202, 0.68 ) }
    dend_20 { pt3dadd( 55.9898, -168.86, 14.8634, 0.23 ) }
    dend_20 { pt3dadd( 57.6114, -170.492, 15.1389, 0.91 ) }
    dend_20 { pt3dadd( 62.1927, -174.945, 15.8752, 0.23 ) }
    dend_20 { pt3dadd( 63.289, -175.972, 16.0461, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_20 { pt3dadd( 64.7434, -177.246, 16.2515, 1.14 ) }
    dend_20 { pt3dadd( 68.2453, -180.263, 16.8173, 0.23 ) }
    dend_20 { pt3dadd( 69.4364, -181.294, 17.082, 0.23 ) }
    dend_20 { pt3dadd( 71.576, -183.229, 17.676, 0.68 ) }
    dend_20 { pt3dadd( 73.1165, -184.859, 18.2862, 0.23 ) }
    dend_20 { pt3dadd( 74.6797, -186.882, 19.1304, 0.91 ) }
    dend_20 { pt3dadd( 75.7198, -188.554, 19.9333, 0.23 ) }
    dend_20 { pt3dadd( 77.1163, -191.111, 21.3335, 0.23 ) }
    dend_20 { pt3dadd( 77.965, -192.652, 22.1993, 0.68 ) }
    dend_20 { pt3dadd( 79.645, -195.681, 23.8521, 0.23 ) }
    dend_20 { pt3dadd( 81.1431, -198.152, 25.2179, 0.68 ) }
    dend_20 { pt3dadd( 83.9278, -202.366, 27.5355, 0.23 ) }
    dend_20 { pt3dadd( 87.372, -207.008, 29.9397, 0.23 ) }
    dend_20 { pt3dadd( 89.3496, -209.503, 31.2007, 0.23 ) }
    dend_20 { pt3dadd( 90.866, -211.266, 32.1241, 0.68 ) }
    dend_20 { pt3dadd( 94.0422, -214.602, 33.8914, 0.23 ) }
    dend_20 { pt3dadd( 96.9394, -217.427, 35.468, 0.23 ) }
    dend_20 { pt3dadd( 99.2894, -219.611, 36.5933, 0.23 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 18/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -5.17103, -24.337, 0.930862, 2.27 ) }
    dend_5 { pt3dadd( -7.01989, -28.3354, 0.92535, 2.27 ) }
    dend_5 { pt3dadd( -7.89475, -30.2274, 0.922742, 2.73 ) }
    dend_5 { pt3dadd( -8.83056, -32.2512, 0.919952, 3.64 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 22/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -8.34507, 65.5464, 3.28715, 0.23 ) }
    dend_39 { pt3dadd( -5.60638, 67.1649, 4.62904, 0.23 ) }
    dend_39 { pt3dadd( -3.57366, 67.9543, 5.37724, 0.91 ) }
    dend_39 { pt3dadd( -1.61262, 68.674, 6.00024, 0.23 ) }
    dend_39 { pt3dadd( 0.116747, 69.3288, 6.56995, 0.23 ) }
    dend_39 { pt3dadd( 1.66924, 69.8951, 7.058, 0.91 ) }
    dend_39 { pt3dadd( 3.67928, 70.6689, 7.64074, 0.23 ) }
    dend_39 { pt3dadd( 4.73896, 71.0148, 7.90731, 0.23 ) }
    dend_39 { pt3dadd( 5.6967, 71.412, 8.15227, 0.23 ) }
    dend_39 { pt3dadd( 7.2352, 72.3031, 8.53056, 0.23 ) }
    dend_39 { pt3dadd( 8.51875, 73.3603, 8.85686, 1.36 ) }
    dend_39 { pt3dadd( 9.60032, 74.3992, 9.13444, 1.36 ) }
    dend_39 { pt3dadd( 11.8571, 76.9123, 9.65387, 0.23 ) }
    dend_39 { pt3dadd( 13.2428, 78.4672, 9.91203, 0.23 ) }
    dend_39 { pt3dadd( 14.3822, 79.768, 10.0505, 0.23 ) }
    dend_39 { pt3dadd( 15.9528, 81.7208, 10.1345, 0.23 ) }
    dend_39 { pt3dadd( 17.7884, 84.1602, 10.1525, 1.14 ) }
    dend_39 { pt3dadd( 19.5427, 86.6047, 10.1468, 0.23 ) }
    dend_39 { pt3dadd( 20.8224, 88.4586, 10.0705, 0.23 ) }
    dend_39 { pt3dadd( 22.5562, 91.0555, 9.95599, 0.45 ) }
    dend_39 { pt3dadd( 24.1087, 93.6412, 9.84513, 0.23 ) }
    dend_39 { pt3dadd( 25.0187, 95.3923, 9.76618, 0.68 ) }
    dend_39 { pt3dadd( 26.1539, 98.2028, 9.66225, 0.23 ) }
    dend_39 { pt3dadd( 26.5906, 99.5179, 9.67761, 0.23 ) }
    dend_39 { pt3dadd( 27.0558, 101.22, 9.75548, 0.91 ) }
    dend_39 { pt3dadd( 27.361, 102.37, 9.8275, 0.91 ) }
    dend_39 { pt3dadd( 27.7075, 103.507, 9.88944, 0.23 ) }
    dend_39 { pt3dadd( 28.7169, 106.398, 10.1219, 0.68 ) }
    dend_39 { pt3dadd( 30.174, 110.099, 10.4205, 0.23 ) }
    dend_39 { pt3dadd( 30.673, 111.307, 10.5547, 0.91 ) }
    dend_39 { pt3dadd( 31.8157, 114.028, 10.872, 0.23 ) }
    dend_39 { pt3dadd( 33.111, 117.059, 11.2614, 0.68 ) }
    dend_39 { pt3dadd( 34.5182, 120.314, 11.7338, 0.23 ) }
    dend_39 { pt3dadd( 35.964, 123.873, 12.2922, 0.68 ) }
    dend_39 { pt3dadd( 36.7665, 126.114, 12.6692, 0.23 ) }
    dend_39 { pt3dadd( 37.545, 128.781, 13.1978, 0.68 ) }
    dend_39 { pt3dadd( 37.9485, 130.644, 13.6433, 0.23 ) }
    dend_39 { pt3dadd( 38.1638, 132.173, 14.0859, 0.23 ) }
    dend_39 { pt3dadd( 38.3725, 134.191, 14.6712, 0.23 ) }
    dend_39 { pt3dadd( 38.5559, 136.583, 15.4483, 0.68 ) }
    dend_39 { pt3dadd( 38.7852, 140.06, 16.6014, 0.23 ) }
    dend_39 { pt3dadd( 38.9095, 142.998, 17.6648, 0.68 ) }
    dend_39 { pt3dadd( 38.9015, 146.026, 18.7692, 0.23 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 65/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -8.34507, 65.5464, 3.28715, 0.23 ) }
    dend_36 { pt3dadd( -9.67314, 68.2079, 3.71441, 0.23 ) }
    dend_36 { pt3dadd( -10.8673, 70.4176, 4.11385, 0.91 ) }
    dend_36 { pt3dadd( -13.3333, 74.699, 4.93925, 0.23 ) }
    dend_36 { pt3dadd( -14.2358, 76.1244, 5.23077, 0.91 ) }
    dend_36 { pt3dadd( -15.196, 77.5709, 5.53202, 0.91 ) }
    dend_36 { pt3dadd( -16.689, 79.8627, 5.99549, 0.23 ) }
    dend_36 { pt3dadd( -18.4612, 82.5905, 6.57545, 0.23 ) }
    dend_36 { pt3dadd( -20.1827, 85.2587, 7.08516, 0.23 ) }
    dend_36 { pt3dadd( -21.4904, 87.4408, 7.42935, 0.68 ) }
    dend_36 { pt3dadd( -22.3173, 88.9453, 7.62978, 0.23 ) }
    dend_36 { pt3dadd( -23.1194, 90.6176, 7.81437, 0.23 ) }
    dend_36 { pt3dadd( -23.5232, 91.5844, 7.91387, 0.23 ) }
    dend_36 { pt3dadd( -24.4144, 93.994, 8.19031, 1.59 ) }
    dend_36 { pt3dadd( -25.4762, 97.0829, 8.58207, 0.68 ) }
    dend_36 { pt3dadd( -26.1793, 99.0976, 8.85226, 0.23 ) }
    dend_36 { pt3dadd( -26.6556, 100.258, 9.02844, 0.91 ) }
    dend_36 { pt3dadd( -27.5082, 102.006, 9.32514, 0.23 ) }
    dend_36 { pt3dadd( -27.9705, 102.858, 9.47768, 0.91 ) }
    dend_36 { pt3dadd( -28.8186, 104.323, 9.77018, 0.23 ) }
    dend_36 { pt3dadd( -29.6128, 105.619, 10.017, 1.14 ) }
    dend_36 { pt3dadd( -30.3831, 106.831, 10.2205, 1.14 ) }
    dend_36 { pt3dadd( -31.3069, 108.162, 10.4513, 0.23 ) }
    dend_36 { pt3dadd( -32.5685, 109.829, 10.7808, 0.23 ) }
    dend_36 { pt3dadd( -34.0958, 111.714, 11.2579, 0.91 ) }
    dend_36 { pt3dadd( -35.2277, 113.007, 11.653, 0.23 ) }
    dend_36 { pt3dadd( -36.716, 114.561, 12.2433, 0.23 ) }
    dend_36 { pt3dadd( -37.8417, 115.626, 12.7259, 0.91 ) }
    dend_36 { pt3dadd( -39.7207, 117.232, 13.616, 0.23 ) }
    dend_36 { pt3dadd( -41.3247, 118.547, 14.4229, 0.68 ) }
    dend_36 { pt3dadd( -42.0105, 119.132, 14.7697, 0.68 ) }
    dend_36 { pt3dadd( -43.2549, 120.241, 15.4131, 0.23 ) }
    dend_36 { pt3dadd( -44.6259, 121.524, 16.0846, 0.68 ) }
    dend_36 { pt3dadd( -45.9164, 122.711, 16.6375, 0.23 ) }
    dend_36 { pt3dadd( -47.3403, 123.895, 17.1892, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_36 { pt3dadd( -49.6317, 125.606, 17.9522, 0.91 ) }
    dend_36 { pt3dadd( -51.4506, 126.796, 18.4462, 0.23 ) }
    dend_36 { pt3dadd( -53.9023, 128.244, 18.9655, 0.23 ) }
    dend_36 { pt3dadd( -56.7904, 129.822, 19.4659, 0.91 ) }
    dend_36 { pt3dadd( -59.125, 131.001, 19.7918, 0.23 ) }
    dend_36 { pt3dadd( -61.0488, 131.875, 20.0391, 0.91 ) }
    dend_36 { pt3dadd( -63.0332, 132.75, 20.2534, 0.23 ) }
    dend_36 { pt3dadd( -66.1884, 134.227, 20.5215, 0.23 ) }
    dend_36 { pt3dadd( -68.2923, 135.271, 20.6788, 0.91 ) }
    dend_36 { pt3dadd( -70.3626, 136.438, 20.8083, 0.23 ) }
    dend_36 { pt3dadd( -71.4421, 137.106, 20.8734, 0.68 ) }
    dend_36 { pt3dadd( -73.3649, 138.29, 21.0656, 0.23 ) }
    dend_36 { pt3dadd( -74.8425, 139.206, 21.2891, 0.91 ) }
    dend_36 { pt3dadd( -76.316, 140.089, 21.5787, 0.23 ) }
    dend_36 { pt3dadd( -77.6061, 140.882, 21.8899, 0.68 ) }
    dend_36 { pt3dadd( -78.8702, 141.662, 22.2393, 0.23 ) }
    dend_36 { pt3dadd( -81.4321, 143.24, 22.9969, 0.91 ) }
    dend_36 { pt3dadd( -84.2099, 144.945, 23.8688, 0.23 ) }
    dend_36 { pt3dadd( -86.7809, 146.583, 24.6873, 0.23 ) }
    dend_36 { pt3dadd( -88.6915, 147.882, 25.2924, 0.91 ) }
    dend_36 { pt3dadd( -90.247, 149.041, 25.7778, 0.23 ) }
    dend_36 { pt3dadd( -90.9701, 149.64, 25.9798, 0.68 ) }
    dend_36 { pt3dadd( -92.0922, 150.729, 26.2411, 0.23 ) }
    dend_36 { pt3dadd( -93.1419, 151.93, 26.4125, 0.91 ) }
    dend_36 { pt3dadd( -94.7317, 154.033, 26.5269, 0.23 ) }
    dend_36 { pt3dadd( -95.6331, 155.327, 26.5232, 0.91 ) }
    dend_36 { pt3dadd( -96.7915, 157.109, 26.4723, 0.23 ) }
    dend_36 { pt3dadd( -97.6514, 158.431, 26.4016, 1.14 ) }
    dend_36 { pt3dadd( -99.4676, 161.161, 26.1491, 0.23 ) }
    dend_36 { pt3dadd( -101.239, 163.713, 25.8556, 0.91 ) }
    dend_36 { pt3dadd( -102.717, 165.727, 25.5798, 0.23 ) }
    dend_36 { pt3dadd( -104.01, 167.374, 25.3381, 0.91 ) }
    dend_36 { pt3dadd( -105.743, 169.506, 25.0039, 0.23 ) }
    dend_36 { pt3dadd( -107.054, 171.014, 24.7278, 0.23 ) }
    dend_36 { pt3dadd( -108.515, 172.562, 24.4146, 0.91 ) }
    dend_36 { pt3dadd( -110.411, 174.508, 24.0176, 0.23 ) }
    dend_36 { pt3dadd( -111.388, 175.483, 23.819, 0.23 ) }
    dend_36 { pt3dadd( -112.364, 176.427, 23.6329, 0.68 ) }
    dend_36 { pt3dadd( -113.026, 177.03, 23.5363, 0.23 ) }
    dend_36 { pt3dadd( -114.617, 178.443, 23.3454, 0.68 ) }
    dend_36 { pt3dadd( -116.398, 179.942, 23.1466, 0.23 ) }
    dend_36 { pt3dadd( -117.75, 181.06, 23.0582, 0.23 ) }
    dend_36 { pt3dadd( -118.656, 181.82, 23.0157, 0.68 ) }
    dend_36 { pt3dadd( -119.795, 182.77, 22.9942, 0.23 ) }
    dend_36 { pt3dadd( -120.819, 183.662, 22.9913, 0.23 ) }
    dend_36 { pt3dadd( -121.856, 184.572, 23.0103, 0.45 ) }
    dend_36 { pt3dadd( -124.029, 186.486, 23.0612, 0.23 ) }
    dend_36 { pt3dadd( -125.569, 187.924, 23.0806, 1.82 ) }
    dend_36 { pt3dadd( -126.688, 189.003, 23.0946, 0.68 ) }
    dend_36 { pt3dadd( -128.946, 191.278, 23.1302, 0.23 ) }
    dend_36 { pt3dadd( -130.723, 193.039, 23.2205, 0.91 ) }
    dend_36 { pt3dadd( -132.409, 194.73, 23.3023, 0.23 ) }
    dend_36 { pt3dadd( -133.775, 196.08, 23.3754, 0.23 ) }
    dend_36 { pt3dadd( -134.594, 196.903, 23.4384, 0.91 ) }
    dend_36 { pt3dadd( -135.73, 198.082, 23.5271, 0.23 ) }
    dend_36 { pt3dadd( -136.956, 199.384, 23.6568, 1.36 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 56/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 12.6205, 14.6091, -0.797231, 0.68 ) }
    dend_30 { pt3dadd( 14.5417, 13.4526, -0.296592, 0.68 ) }
    dend_30 { pt3dadd( 16.5792, 12.2446, 0.355017, 0.68 ) }
    dend_30 { pt3dadd( 18.32, 11.1688, 0.988236, 0.68 ) }
    dend_30 { pt3dadd( 20.0081, 9.96704, 1.7001, 1.14 ) }
    dend_30 { pt3dadd( 22.0271, 8.46788, 2.54622, 1.59 ) }
    dend_30 { pt3dadd( 24.8621, 6.3393, 3.72215, 0.68 ) }
    dend_30 { pt3dadd( 27.2398, 4.55071, 4.75118, 1.82 ) }
    dend_30 { pt3dadd( 29.7506, 2.64984, 5.83581, 0.91 ) }
    dend_30 { pt3dadd( 34.0312, -0.660643, 7.62299, 0.68 ) }
    dend_30 { pt3dadd( 36.2412, -2.38246, 8.47738, 0.68 ) }
    dend_30 { pt3dadd( 38.5686, -4.22648, 9.30694, 1.14 ) }
    dend_30 { pt3dadd( 40.1702, -5.51132, 9.83665, 1.14 ) }
    dend_30 { pt3dadd( 43.6648, -8.32839, 10.9138, 1.82 ) }
    dend_30 { pt3dadd( 46.5192, -10.5591, 11.7224, 0.23 ) }
    dend_30 { pt3dadd( 48.6769, -12.1753, 12.2813, 0.91 ) }
    dend_30 { pt3dadd( 51.1329, -14.1225, 12.9679, 1.14 ) }
    dend_30 { pt3dadd( 52.7769, -15.5159, 13.4159, 2.05 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 74/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 12.6205, 14.6091, -0.797231, 0.45 ) }
    dend_27 { pt3dadd( 13.5016, 14.7006, -0.779941, 0.45 ) }
    dend_27 { pt3dadd( 14.9138, 14.8462, -0.738454, 0.91 ) }
    dend_27 { pt3dadd( 16.0827, 14.9854, -0.696531, 0.45 ) }
    dend_27 { pt3dadd( 17.4808, 15.1616, -0.635877, 1.14 ) }
    dend_27 { pt3dadd( 19.2816, 15.4589, -0.535246, 0.68 ) }
    dend_27 { pt3dadd( 21.1781, 15.8346, -0.414106, 0.45 ) }
    dend_27 { pt3dadd( 22.2655, 16.0938, -0.334568, 0.91 ) }
    dend_27 { pt3dadd( 23.1201, 16.3505, -0.264025, 0.91 ) }
    dend_27 { pt3dadd( 24.6818, 16.8992, -0.116487, 2.05 ) }
    dend_27 { pt3dadd( 26.9646, 17.7652, 0.121181, 0.68 ) }
    dend_27 { pt3dadd( 28.3266, 18.3238, 0.266717, 1.14 ) }
    dend_27 { pt3dadd( 29.5124, 18.8629, 0.397733, 0.68 ) }
    dend_27 { pt3dadd( 30.0955, 19.1514, 0.462756, 1.59 ) }
    dend_27 { pt3dadd( 31.3575, 19.8038, 0.604071, 1.59 ) }
    // Section: dend_17, id: dend_17, parent: dend_5 (entry count 89/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -8.83056, -32.2512, 0.919952, 0.68 ) }
    dend_17 { pt3dadd( -13.1767, -33.8081, 2.99915, 0.68 ) }
    dend_17 { pt3dadd( -17.4124, -35.2785, 5.20876, 0.68 ) }
    dend_17 { pt3dadd( -19.7869, -36.076, 6.50721, 1.14 ) }
    dend_17 { pt3dadd( -24.4131, -37.4358, 9.05374, 0.68 ) }
    dend_17 { pt3dadd( -27.7394, -38.2975, 10.899, 1.36 ) }
    dend_17 { pt3dadd( -30.7329, -38.9833, 12.5437, 0.45 ) }
    dend_17 { pt3dadd( -34.238, -39.5509, 14.5071, 1.14 ) }
    dend_17 { pt3dadd( -37.6153, -39.9244, 16.4423, 0.23 ) }
    dend_17 { pt3dadd( -40.612, -40.3206, 18.1309, 0.45 ) }
    dend_17 { pt3dadd( -42.0949, -40.5835, 18.9084, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_17 { pt3dadd( -45.6017, -41.4411, 20.5718, 1.14 ) }
    dend_17 { pt3dadd( -48.5109, -42.4016, 21.8122, 0.23 ) }
    dend_17 { pt3dadd( -51.1354, -43.554, 22.8171, 0.91 ) }
    dend_17 { pt3dadd( -54.701, -45.4908, 24.199, 0.45 ) }
    dend_17 { pt3dadd( -56.8086, -46.8152, 25.0498, 1.14 ) }
    dend_17 { pt3dadd( -59.7702, -48.7926, 26.296, 0.23 ) }
    dend_17 { pt3dadd( -62.3306, -50.5718, 27.441, 0.91 ) }
    dend_17 { pt3dadd( -65.2169, -52.578, 28.8251, 0.68 ) }
    dend_17 { pt3dadd( -67.8675, -54.3563, 30.2009, 0.23 ) }
    dend_17 { pt3dadd( -69.7233, -55.5287, 31.2792, 0.91 ) }
    dend_17 { pt3dadd( -72.2931, -57.0112, 32.9387, 0.23 ) }
    dend_17 { pt3dadd( -75.4602, -58.736, 35.1037, 0.91 ) }
    dend_17 { pt3dadd( -77.2095, -59.6855, 36.3177, 0.68 ) }
    dend_17 { pt3dadd( -79.925, -61.2231, 38.1983, 0.68 ) }
    dend_17 { pt3dadd( -83.0952, -63.1634, 40.3589, 1.36 ) }
    dend_17 { pt3dadd( -85.8201, -64.9335, 42.2099, 0.23 ) }
    dend_17 { pt3dadd( -87.0234, -65.756, 43.0129, 0.23 ) }
    dend_17 { pt3dadd( -89.3513, -67.4011, 44.5076, 1.36 ) }
    dend_17 { pt3dadd( -90.871, -68.5827, 45.448, 1.36 ) }
    dend_17 { pt3dadd( -92.5543, -70.0399, 46.4534, 0.23 ) }
    dend_17 { pt3dadd( -94.9393, -72.2861, 47.723, 0.91 ) }
    dend_17 { pt3dadd( -97.2061, -74.5805, 48.7728, 0.91 ) }
    dend_17 { pt3dadd( -99.4624, -76.9518, 49.7289, 0.23 ) }
    dend_17 { pt3dadd( -101.776, -79.4662, 50.6241, 0.91 ) }
    dend_17 { pt3dadd( -103.646, -81.5287, 51.2627, 0.23 ) }
    dend_17 { pt3dadd( -105.775, -84.0098, 51.8801, 0.23 ) }
    dend_17 { pt3dadd( -107.376, -86.1154, 52.2517, 0.23 ) }
    dend_17 { pt3dadd( -108.397, -87.5816, 52.4767, 1.14 ) }
    dend_17 { pt3dadd( -109.468, -89.2128, 52.742, 0.45 ) }
    dend_17 { pt3dadd( -110.576, -90.9482, 53.0516, 1.59 ) }
    dend_17 { pt3dadd( -113.396, -95.6076, 53.9757, 0.68 ) }
    dend_17 { pt3dadd( -116.267, -100.581, 55.1219, 0.68 ) }
    dend_17 { pt3dadd( -118.094, -103.725, 55.9699, 0.23 ) }
    dend_17 { pt3dadd( -119.803, -106.588, 56.8365, 0.91 ) }
    dend_17 { pt3dadd( -120.964, -108.434, 57.4768, 0.91 ) }
    dend_17 { pt3dadd( -121.875, -109.732, 58.0256, 0.23 ) }
    dend_17 { pt3dadd( -123.258, -111.509, 58.9075, 0.91 ) }
    dend_17 { pt3dadd( -125.302, -113.928, 60.2127, 0.23 ) }
    dend_17 { pt3dadd( -126.925, -115.756, 61.1902, 0.45 ) }
    dend_17 { pt3dadd( -128.665, -117.658, 62.1877, 1.14 ) }
    dend_17 { pt3dadd( -130.274, -119.393, 63.0854, 0.23 ) }
    dend_17 { pt3dadd( -132.634, -121.906, 64.363, 0.91 ) }
    dend_17 { pt3dadd( -135.115, -124.503, 65.6978, 0.91 ) }
    dend_17 { pt3dadd( -136.684, -126.115, 66.5396, 0.23 ) }
    dend_17 { pt3dadd( -138.815, -128.274, 67.7143, 0.68 ) }
    dend_17 { pt3dadd( -140.495, -130.0, 68.6949, 0.23 ) }
    dend_17 { pt3dadd( -141.281, -130.785, 69.1914, 0.23 ) }
    dend_17 { pt3dadd( -143.486, -132.838, 70.654, 0.91 ) }
    dend_17 { pt3dadd( -145.697, -134.865, 72.2255, 2.05 ) }
    dend_17 { pt3dadd( -148.591, -137.611, 74.3581, 0.68 ) }
    dend_17 { pt3dadd( -150.89, -139.874, 76.1349, 1.36 ) }
    dend_17 { pt3dadd( -153.217, -142.235, 77.9737, 0.45 ) }
    dend_17 { pt3dadd( -154.988, -144.092, 79.4001, 0.45 ) }
    dend_17 { pt3dadd( -157.02, -146.27, 81.0446, 0.23 ) }
    dend_17 { pt3dadd( -158.196, -147.54, 82.0072, 0.91 ) }
    dend_17 { pt3dadd( -159.61, -149.028, 83.1423, 0.23 ) }
    dend_17 { pt3dadd( -160.662, -150.07, 83.9456, 0.23 ) }
    dend_17 { pt3dadd( -162.898, -152.212, 85.5673, 1.14 ) }
    dend_17 { pt3dadd( -164.143, -153.341, 86.4408, 1.14 ) }
    dend_17 { pt3dadd( -167.082, -155.797, 88.4408, 0.23 ) }
    dend_17 { pt3dadd( -167.977, -156.479, 89.0415, 0.91 ) }
    dend_17 { pt3dadd( -169.93, -157.906, 90.3044, 1.59 ) }
    dend_17 { pt3dadd( -171.431, -159.036, 91.3189, 0.45 ) }
    dend_17 { pt3dadd( -172.273, -159.677, 91.9118, 1.14 ) }
    dend_17 { pt3dadd( -175.04, -161.79, 93.9511, 0.23 ) }
    dend_17 { pt3dadd( -176.377, -162.814, 94.9531, 1.36 ) }
    dend_17 { pt3dadd( -177.794, -163.95, 96.0705, 1.36 ) }
    dend_17 { pt3dadd( -181.688, -167.224, 99.2369, 0.23 ) }
    dend_17 { pt3dadd( -183.346, -168.685, 100.595, 1.36 ) }
    dend_17 { pt3dadd( -183.922, -169.234, 101.061, 2.27 ) }
    dend_17 { pt3dadd( -186.313, -171.744, 102.915, 0.23 ) }
    dend_17 { pt3dadd( -188.011, -173.585, 104.235, 0.68 ) }
    dend_17 { pt3dadd( -189.143, -174.854, 105.097, 0.23 ) }
    dend_17 { pt3dadd( -190.473, -176.435, 106.003, 0.91 ) }
    dend_17 { pt3dadd( -191.587, -177.921, 106.719, 0.23 ) }
    dend_17 { pt3dadd( -192.885, -179.898, 107.524, 1.59 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 76/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -8.83056, -32.2512, 0.919952, 2.27 ) }
    dend_6 { pt3dadd( -9.09387, -36.9034, 0.537369, 2.27 ) }
    dend_6 { pt3dadd( -9.15998, -38.0714, 0.441316, 2.27 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 79/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -136.956, 199.384, 23.6568, 0.23 ) }
    dend_38 { pt3dadd( -141.175, 200.937, 25.7612, 0.23 ) }
    dend_38 { pt3dadd( -143.437, 201.725, 26.9088, 0.91 ) }
    dend_38 { pt3dadd( -146.757, 202.785, 28.6277, 0.23 ) }
    dend_38 { pt3dadd( -148.921, 203.422, 29.8267, 0.91 ) }
    dend_38 { pt3dadd( -150.466, 203.856, 30.7128, 0.23 ) }
    dend_38 { pt3dadd( -152.966, 204.543, 32.1129, 0.23 ) }
    dend_38 { pt3dadd( -154.162, 204.817, 32.8069, 0.23 ) }
    dend_38 { pt3dadd( -155.893, 205.21, 33.7295, 0.91 ) }
    dend_38 { pt3dadd( -158.805, 205.764, 35.1604, 0.23 ) }
    dend_38 { pt3dadd( -159.863, 205.943, 35.6795, 0.68 ) }
    dend_38 { pt3dadd( -161.761, 206.247, 36.6142, 0.23 ) }
    dend_38 { pt3dadd( -162.582, 206.39, 37.0305, 1.14 ) }
    dend_38 { pt3dadd( -165.03, 206.805, 38.3319, 0.23 ) }
    dend_38 { pt3dadd( -168.039, 207.319, 40.0354, 1.14 ) }
    dend_38 { pt3dadd( -170.146, 207.688, 41.2806, 0.23 ) }
    dend_38 { pt3dadd( -172.381, 208.1, 42.73, 0.68 ) }
    dend_38 { pt3dadd( -173.586, 208.344, 43.5961, 0.23 ) }
    dend_38 { pt3dadd( -176.068, 208.943, 45.4544, 0.91 ) }
    dend_38 { pt3dadd( -179.266, 209.859, 47.9348, 0.23 ) }
    dend_38 { pt3dadd( -181.621, 210.686, 49.7003, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_38 { pt3dadd( -182.947, 211.18, 50.649, 0.91 ) }
    dend_38 { pt3dadd( -184.923, 212.0, 52.0051, 0.23 ) }
    dend_38 { pt3dadd( -186.523, 212.727, 53.0222, 0.68 ) }
    dend_38 { pt3dadd( -188.417, 213.667, 54.1674, 0.23 ) }
    dend_38 { pt3dadd( -190.159, 214.497, 55.1277, 0.23 ) }
    dend_38 { pt3dadd( -191.621, 215.069, 55.8908, 0.68 ) }
    dend_38 { pt3dadd( -193.436, 215.729, 56.7691, 0.23 ) }
    dend_38 { pt3dadd( -195.943, 216.542, 57.9191, 0.23 ) }
    dend_38 { pt3dadd( -197.731, 217.017, 58.7491, 0.68 ) }
    dend_38 { pt3dadd( -199.226, 217.334, 59.4413, 0.23 ) }
    dend_38 { pt3dadd( -201.634, 217.611, 60.5767, 0.91 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 11/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -136.956, 199.384, 23.6568, 0.23 ) }
    dend_37 { pt3dadd( -138.327, 201.643, 24.4749, 0.23 ) }
    dend_37 { pt3dadd( -138.667, 202.248, 24.6378, 0.68 ) }
    dend_37 { pt3dadd( -139.618, 204.045, 25.0635, 0.23 ) }
    dend_37 { pt3dadd( -140.72, 205.915, 25.3874, 0.23 ) }
    dend_37 { pt3dadd( -141.536, 207.193, 25.5701, 0.68 ) }
    dend_37 { pt3dadd( -142.596, 208.78, 25.7772, 0.23 ) }
    dend_37 { pt3dadd( -143.386, 209.969, 25.8932, 0.68 ) }
    dend_37 { pt3dadd( -145.113, 212.398, 26.1077, 0.23 ) }
    dend_37 { pt3dadd( -146.73, 214.513, 26.2807, 0.91 ) }
    dend_37 { pt3dadd( -148.798, 217.144, 26.517, 0.23 ) }
    dend_37 { pt3dadd( -150.03, 218.657, 26.6742, 0.23 ) }
    dend_37 { pt3dadd( -151.526, 220.408, 26.896, 0.91 ) }
    dend_37 { pt3dadd( -153.219, 222.335, 27.164, 0.23 ) }
    dend_37 { pt3dadd( -154.523, 223.795, 27.3801, 0.68 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 26/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 52.7769, -15.5159, 13.4159, 0.45 ) }
    dend_32 { pt3dadd( 53.6529, -17.7108, 13.5481, 0.45 ) }
    dend_32 { pt3dadd( 54.113, -18.7921, 13.6618, 0.91 ) }
    dend_32 { pt3dadd( 54.5855, -19.6619, 13.8156, 0.23 ) }
    dend_32 { pt3dadd( 54.9814, -20.3111, 13.9465, 0.91 ) }
    dend_32 { pt3dadd( 55.4097, -20.9454, 14.092, 0.91 ) }
    dend_32 { pt3dadd( 56.6314, -22.6077, 14.5262, 0.23 ) }
    dend_32 { pt3dadd( 57.4454, -23.5929, 14.8244, 1.59 ) }
    dend_32 { pt3dadd( 59.2402, -25.6357, 15.4452, 0.45 ) }
    dend_32 { pt3dadd( 60.2396, -26.7173, 15.7729, 0.45 ) }
    dend_32 { pt3dadd( 61.4917, -28.0279, 16.1574, 1.36 ) }
    dend_32 { pt3dadd( 63.9007, -30.4571, 16.8651, 0.68 ) }
    dend_32 { pt3dadd( 65.5061, -32.0058, 17.2907, 0.68 ) }
    dend_32 { pt3dadd( 66.8764, -33.276, 17.6267, 1.14 ) }
    dend_32 { pt3dadd( 69.544, -35.6288, 18.2441, 0.45 ) }
    dend_32 { pt3dadd( 70.195, -36.1634, 18.392, 1.14 ) }
    dend_32 { pt3dadd( 71.519, -37.2149, 18.677, 0.23 ) }
    dend_32 { pt3dadd( 72.9808, -38.3527, 18.9775, 1.36 ) }
    dend_32 { pt3dadd( 73.4732, -38.7408, 19.0851, 2.05 ) }
    dend_32 { pt3dadd( 75.0683, -40.0692, 19.4596, 0.23 ) }
    dend_32 { pt3dadd( 76.6556, -41.5313, 19.8463, 0.23 ) }
    dend_32 { pt3dadd( 77.9551, -42.7934, 20.1816, 1.14 ) }
    dend_32 { pt3dadd( 79.2697, -44.1767, 20.5334, 0.23 ) }
    dend_32 { pt3dadd( 80.0909, -45.1295, 20.7787, 1.36 ) }
    dend_32 { pt3dadd( 81.0637, -46.3704, 21.0661, 1.59 ) }
    dend_32 { pt3dadd( 82.1619, -48.0302, 21.389, 0.45 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 52/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 52.7769, -15.5159, 13.4159, 0.68 ) }
    dend_31 { pt3dadd( 56.2917, -16.0842, 14.7506, 0.68 ) }
    dend_31 { pt3dadd( 57.9211, -16.3366, 15.3409, 0.23 ) }
    dend_31 { pt3dadd( 59.0092, -16.4912, 15.692, 0.68 ) }
    dend_31 { pt3dadd( 60.4328, -16.7002, 16.1341, 0.23 ) }
    dend_31 { pt3dadd( 61.7307, -16.9408, 16.5328, 0.91 ) }
    dend_31 { pt3dadd( 64.1729, -17.4643, 17.2874, 0.23 ) }
    dend_31 { pt3dadd( 66.2057, -17.9402, 17.9534, 1.14 ) }
    dend_31 { pt3dadd( 70.1965, -18.8515, 19.3401, 0.45 ) }
    dend_31 { pt3dadd( 71.3946, -19.0999, 19.7847, 0.91 ) }
    dend_31 { pt3dadd( 74.2274, -19.5733, 20.8916, 0.23 ) }
    dend_31 { pt3dadd( 76.9904, -19.9039, 22.0133, 0.91 ) }
    dend_31 { pt3dadd( 79.4485, -20.0556, 23.0544, 0.23 ) }
    dend_31 { pt3dadd( 82.5219, -20.0166, 24.3917, 0.91 ) }
    dend_31 { pt3dadd( 85.7137, -19.6788, 25.8028, 0.23 ) }
    dend_31 { pt3dadd( 88.2679, -19.1302, 26.8947, 0.68 ) }
    dend_31 { pt3dadd( 89.7199, -18.6191, 27.488, 0.23 ) }
    dend_31 { pt3dadd( 91.1446, -17.9777, 28.011, 1.14 ) }
    dend_31 { pt3dadd( 92.6123, -17.2322, 28.4741, 0.23 ) }
    dend_31 { pt3dadd( 94.7844, -16.0375, 29.0854, 0.91 ) }
    dend_31 { pt3dadd( 96.6503, -14.9933, 29.5419, 0.23 ) }
    dend_31 { pt3dadd( 98.2384, -14.1083, 29.901, 1.14 ) }
    dend_31 { pt3dadd( 99.7395, -13.2998, 30.2453, 0.23 ) }
    dend_31 { pt3dadd( 101.774, -12.2277, 30.6858, 1.82 ) }
    dend_31 { pt3dadd( 102.822, -11.6972, 30.9019, 2.27 ) }
    dend_31 { pt3dadd( 105.921, -10.1601, 31.4491, 0.23 ) }
    dend_31 { pt3dadd( 106.6, -9.86495, 31.5652, 0.23 ) }
    dend_31 { pt3dadd( 109.081, -8.88958, 31.9997, 0.68 ) }
    dend_31 { pt3dadd( 111.267, -8.14641, 32.426, 0.23 ) }
    dend_31 { pt3dadd( 112.971, -7.67773, 32.7817, 1.36 ) }
    dend_31 { pt3dadd( 115.68, -7.19324, 33.4142, 0.23 ) }
    dend_31 { pt3dadd( 118.413, -6.97916, 34.1358, 0.23 ) }
    dend_31 { pt3dadd( 119.524, -6.96945, 34.4447, 1.14 ) }
    dend_31 { pt3dadd( 122.233, -7.17029, 35.2597, 0.23 ) }
    dend_31 { pt3dadd( 123.572, -7.34215, 35.7139, 0.68 ) }
    dend_31 { pt3dadd( 125.751, -7.66993, 36.5047, 0.23 ) }
    dend_31 { pt3dadd( 126.329, -7.77055, 36.7218, 1.59 ) }
    dend_31 { pt3dadd( 127.224, -7.93271, 37.058, 0.23 ) }
    dend_31 { pt3dadd( 129.012, -8.26083, 37.7294, 1.36 ) }
    dend_31 { pt3dadd( 131.572, -8.68106, 38.6923, 0.23 ) }
    dend_31 { pt3dadd( 133.934, -8.96072, 39.5841, 0.91 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 93/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 31.3575, 19.8038, 0.604071, 0.23 ) }
    dend_29 { pt3dadd( 34.5092, 20.8108, 0.829054, 0.23 ) }
    dend_29 { pt3dadd( 36.5724, 21.5548, 1.01809, 0.23 ) }
    dend_29 { pt3dadd( 38.1781, 22.138, 1.19283, 1.36 ) }
    dend_29 { pt3dadd( 40.4048, 22.937, 1.40455, 1.36 ) }
    dend_29 { pt3dadd( 43.4583, 24.0124, 1.67955, 0.23 ) }
    dend_29 { pt3dadd( 44.894, 24.4998, 1.81019, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_29 { pt3dadd( 47.7758, 25.4832, 2.06913, 0.91 ) }
    dend_29 { pt3dadd( 50.9337, 26.4426, 2.37672, 0.23 ) }
    dend_29 { pt3dadd( 53.4263, 27.0873, 2.65084, 1.59 ) }
    dend_29 { pt3dadd( 54.3455, 27.2793, 2.76005, 1.59 ) }
    dend_29 { pt3dadd( 57.5769, 27.8003, 3.17942, 0.45 ) }
    dend_29 { pt3dadd( 59.229, 27.9898, 3.36943, 0.45 ) }
    dend_29 { pt3dadd( 61.8633, 28.2004, 3.67594, 0.23 ) }
    dend_29 { pt3dadd( 63.3728, 28.2883, 3.86551, 1.14 ) }
    dend_29 { pt3dadd( 65.5538, 28.3979, 4.19634, 0.23 ) }
    dend_29 { pt3dadd( 66.9734, 28.4635, 4.42299, 0.68 ) }
    dend_29 { pt3dadd( 69.5912, 28.6208, 4.854, 0.23 ) }
    dend_29 { pt3dadd( 72.6317, 28.8929, 5.36264, 1.14 ) }
    dend_29 { pt3dadd( 76.1284, 29.3685, 5.89767, 0.23 ) }
    dend_29 { pt3dadd( 78.2896, 29.7604, 6.19548, 0.23 ) }
    dend_29 { pt3dadd( 79.4737, 30.0489, 6.33944, 1.59 ) }
    dend_29 { pt3dadd( 82.0804, 30.8211, 6.60561, 0.23 ) }
    dend_29 { pt3dadd( 83.3141, 31.2768, 6.69235, 0.23 ) }
    dend_29 { pt3dadd( 84.5658, 31.8388, 6.71824, 0.68 ) }
    dend_29 { pt3dadd( 85.9345, 32.5276, 6.63801, 0.68 ) }
    dend_29 { pt3dadd( 88.7797, 33.9567, 6.33447, 0.23 ) }
    dend_29 { pt3dadd( 90.0498, 34.5317, 6.18394, 0.23 ) }
    dend_29 { pt3dadd( 91.1972, 34.9906, 6.03894, 1.82 ) }
    dend_29 { pt3dadd( 91.8649, 35.2154, 5.96939, 1.82 ) }
    dend_29 { pt3dadd( 94.1604, 35.8447, 5.81861, 0.23 ) }
    dend_29 { pt3dadd( 96.0874, 36.2878, 5.74237, 0.68 ) }
    dend_29 { pt3dadd( 98.9435, 36.8463, 5.72238, 0.23 ) }
    dend_29 { pt3dadd( 100.071, 37.0739, 5.74171, 0.91 ) }
    dend_29 { pt3dadd( 101.937, 37.4694, 5.79447, 0.23 ) }
    dend_29 { pt3dadd( 103.988, 37.9602, 5.85544, 1.14 ) }
    dend_29 { pt3dadd( 106.775, 38.7177, 5.96935, 0.23 ) }
    dend_29 { pt3dadd( 108.825, 39.3212, 6.01475, 1.14 ) }
    dend_29 { pt3dadd( 110.858, 39.9885, 6.03979, 0.23 ) }
    dend_29 { pt3dadd( 112.311, 40.4863, 6.05224, 0.91 ) }
    dend_29 { pt3dadd( 114.275, 41.2068, 6.0402, 0.23 ) }
    dend_29 { pt3dadd( 116.334, 41.9998, 6.01029, 1.36 ) }
    dend_29 { pt3dadd( 117.984, 42.6378, 5.9895, 0.23 ) }
    dend_29 { pt3dadd( 119.973, 43.4395, 5.96204, 0.91 ) }
    dend_29 { pt3dadd( 123.26, 44.8328, 5.89904, 0.23 ) }
    dend_29 { pt3dadd( 125.116, 45.6304, 5.87403, 1.14 ) }
    dend_29 { pt3dadd( 126.137, 46.0688, 5.86045, 0.23 ) }
    dend_29 { pt3dadd( 127.224, 46.5491, 5.84264, 1.14 ) }
    dend_29 { pt3dadd( 129.309, 47.5126, 5.83456, 0.23 ) }
    dend_29 { pt3dadd( 130.906, 48.3191, 5.7575, 1.36 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 43/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 31.3575, 19.8038, 0.604071, 0.23 ) }
    dend_28 { pt3dadd( 32.8609, 20.7805, 0.352484, 0.23 ) }
    dend_28 { pt3dadd( 33.662, 21.3125, 0.221232, 0.91 ) }
    dend_28 { pt3dadd( 34.9039, 22.1156, 0.0487779, 0.23 ) }
    dend_28 { pt3dadd( 36.1667, 22.8708, -0.0803528, 0.68 ) }
    dend_28 { pt3dadd( 37.4722, 23.5773, -0.139066, 0.68 ) }
    dend_28 { pt3dadd( 39.6636, 24.7421, -0.172805, 0.23 ) }
    dend_28 { pt3dadd( 40.7395, 25.2818, -0.172488, 0.91 ) }
    dend_28 { pt3dadd( 41.922, 25.8866, -0.163853, 0.91 ) }
    dend_28 { pt3dadd( 44.1313, 27.0417, -0.133132, 0.23 ) }
    dend_28 { pt3dadd( 46.2704, 28.2132, -0.118646, 0.68 ) }
    dend_28 { pt3dadd( 48.3235, 29.3516, -0.149358, 0.23 ) }
    dend_28 { pt3dadd( 49.704, 30.1344, -0.208642, 0.91 ) }
    dend_28 { pt3dadd( 51.2141, 31.0259, -0.326503, 0.91 ) }
    dend_28 { pt3dadd( 52.5882, 31.9046, -0.527899, 0.23 ) }
    dend_28 { pt3dadd( 54.3186, 33.1418, -0.961633, 1.14 ) }
    dend_28 { pt3dadd( 55.9451, 34.4212, -1.52449, 0.23 ) }
    dend_28 { pt3dadd( 56.8699, 35.221, -1.90092, 0.23 ) }
    dend_28 { pt3dadd( 57.55, 35.916, -2.21345, 0.23 ) }
    dend_28 { pt3dadd( 58.9977, 37.5918, -2.93766, 0.91 ) }
    dend_28 { pt3dadd( 60.5852, 39.6414, -3.76625, 0.45 ) }
    dend_28 { pt3dadd( 61.1434, 40.4458, -4.06964, 0.45 ) }
    dend_28 { pt3dadd( 62.3879, 42.4028, -4.78669, 1.59 ) }
    dend_28 { pt3dadd( 64.1527, 45.2075, -5.74253, 0.45 ) }
    dend_28 { pt3dadd( 64.7736, 46.1827, -6.05016, 0.68 ) }
    dend_28 { pt3dadd( 65.2529, 46.9344, -6.25693, 0.23 ) }
    dend_28 { pt3dadd( 66.1596, 48.2532, -6.59659, 0.91 ) }
    dend_28 { pt3dadd( 67.5697, 50.1318, -7.09811, 0.23 ) }
    dend_28 { pt3dadd( 68.4031, 51.1376, -7.37141, 0.23 ) }
    dend_28 { pt3dadd( 68.8835, 51.6722, -7.51924, 1.36 ) }
    dend_28 { pt3dadd( 69.4557, 52.3423, -7.70481, 1.36 ) }
    dend_28 { pt3dadd( 70.6135, 53.7525, -8.09236, 0.23 ) }
    dend_28 { pt3dadd( 71.8328, 55.3107, -8.50915, 0.68 ) }
    dend_28 { pt3dadd( 72.8807, 56.7002, -8.86878, 0.23 ) }
    dend_28 { pt3dadd( 74.4634, 58.8307, -9.41129, 1.14 ) }
    dend_28 { pt3dadd( 76.0652, 61.0332, -9.97518, 0.23 ) }
    dend_28 { pt3dadd( 77.219, 62.6662, -10.391, 0.91 ) }
    dend_28 { pt3dadd( 77.946, 63.73, -10.651, 1.59 ) }
    dend_28 { pt3dadd( 78.6888, 64.8225, -10.9228, 0.91 ) }
    dend_28 { pt3dadd( 79.8044, 66.5123, -11.3516, 0.23 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 83/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -192.885, -179.898, 107.524, 0.23 ) }
    dend_19 { pt3dadd( -193.392, -180.658, 109.241, 0.23 ) }
    dend_19 { pt3dadd( -193.559, -180.908, 109.767, 1.14 ) }
    dend_19 { pt3dadd( -194.158, -181.761, 111.587, 0.23 ) }
    dend_19 { pt3dadd( -194.387, -182.1, 112.278, 0.91 ) }
    dend_19 { pt3dadd( -195.182, -183.304, 114.442, 0.23 ) }
    dend_19 { pt3dadd( -195.573, -183.933, 115.517, 0.91 ) }
    dend_19 { pt3dadd( -196.43, -185.339, 117.708, 0.23 ) }
    dend_19 { pt3dadd( -196.97, -186.246, 119.086, 0.91 ) }
    dend_19 { pt3dadd( -197.484, -187.091, 120.332, 0.23 ) }
    dend_19 { pt3dadd( -198.103, -188.132, 121.898, 1.14 ) }
    dend_19 { pt3dadd( -198.938, -189.555, 123.993, 0.23 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 95/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -192.885, -179.898, 107.524, 0.23 ) }
    dend_18 { pt3dadd( -194.685, -182.597, 107.201, 0.23 ) }
    dend_18 { pt3dadd( -195.956, -184.49, 106.919, 1.59 ) }
    dend_18 { pt3dadd( -197.877, -187.302, 106.422, 0.23 ) }
    dend_18 { pt3dadd( -199.226, -189.075, 106.053, 1.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_18 { pt3dadd( -200.31, -190.35, 105.791, 0.23 ) }
    dend_18 { pt3dadd( -201.396, -191.504, 105.582, 0.23 ) }
    dend_18 { pt3dadd( -202.774, -192.647, 105.473, 1.36 ) }
    dend_18 { pt3dadd( -204.504, -193.765, 105.482, 2.27 ) }
    dend_18 { pt3dadd( -206.397, -194.737, 105.656, 0.23 ) }
    dend_18 { pt3dadd( -207.994, -195.392, 105.976, 1.14 ) }
    dend_18 { pt3dadd( -209.514, -195.892, 106.421, 0.23 ) }
    dend_18 { pt3dadd( -211.213, -196.367, 107.092, 1.14 ) }
    dend_18 { pt3dadd( -211.84, -196.487, 107.441, 1.14 ) }
    dend_18 { pt3dadd( -213.037, -196.631, 108.251, 0.23 ) }
    dend_18 { pt3dadd( -213.572, -196.659, 108.656, 0.23 ) }
    dend_18 { pt3dadd( -214.25, -196.557, 109.239, 1.36 ) }
    dend_18 { pt3dadd( -214.673, -196.352, 109.709, 1.36 ) }
    dend_18 { pt3dadd( -216.239, -195.231, 111.773, 0.23 ) }
    dend_18 { pt3dadd( -216.546, -194.975, 112.212, 0.23 ) }
    dend_18 { pt3dadd( -217.461, -194.092, 113.601, 0.23 ) }
    dend_18 { pt3dadd( -218.593, -192.956, 115.298, 1.14 ) }
    dend_18 { pt3dadd( -219.47, -192.124, 116.568, 0.23 ) }
    dend_18 { pt3dadd( -220.926, -191.087, 118.482, 0.23 ) }
    dend_18 { pt3dadd( -221.848, -190.704, 119.478, 1.36 ) }
    dend_18 { pt3dadd( -223.306, -190.222, 120.98, 0.23 ) }
    dend_18 { pt3dadd( -224.612, -189.928, 122.221, 1.14 ) }
    dend_18 { pt3dadd( -225.687, -189.754, 123.068, 1.14 ) }
    dend_18 { pt3dadd( -228.362, -189.511, 124.851, 0.23 ) }
    dend_18 { pt3dadd( -230.774, -189.655, 126.206, 1.14 ) }
    // Section: dend_16, id: dend_16, parent: dend_6 (entry count 25/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -9.15998, -38.0714, 0.441316, 0.23 ) }
    dend_16 { pt3dadd( -7.82828, -41.662, 1.34889, 0.23 ) }
    dend_16 { pt3dadd( -7.58877, -42.6099, 1.60582, 0.23 ) }
    dend_16 { pt3dadd( -7.14868, -44.5655, 2.17281, 0.23 ) }
    dend_16 { pt3dadd( -6.8572, -46.025, 2.55741, 1.14 ) }
    dend_16 { pt3dadd( -6.46331, -48.3025, 3.11034, 0.23 ) }
    dend_16 { pt3dadd( -6.17739, -50.1156, 3.53447, 1.14 ) }
    dend_16 { pt3dadd( -5.89104, -52.9204, 4.10451, 0.23 ) }
    dend_16 { pt3dadd( -5.61898, -55.7697, 4.65051, 0.23 ) }
    dend_16 { pt3dadd( -5.39281, -58.1302, 5.05245, 1.36 ) }
    dend_16 { pt3dadd( -5.02395, -62.829, 5.83478, 0.23 ) }
    dend_16 { pt3dadd( -4.94679, -64.2955, 6.06021, 0.23 ) }
    dend_16 { pt3dadd( -4.84318, -66.3788, 6.34686, 0.91 ) }
    dend_16 { pt3dadd( -4.78872, -67.4111, 6.46485, 0.91 ) }
    dend_16 { pt3dadd( -4.66752, -70.16, 6.74196, 0.23 ) }
    dend_16 { pt3dadd( -4.55893, -72.3114, 6.97139, 0.23 ) }
    dend_16 { pt3dadd( -4.37531, -74.7033, 7.16505, 0.68 ) }
    dend_16 { pt3dadd( -3.88845, -79.2384, 7.48288, 0.23 ) }
    dend_16 { pt3dadd( -3.68098, -80.5986, 7.56524, 1.36 ) }
    dend_16 { pt3dadd( -3.47454, -81.7445, 7.62573, 1.36 ) }
    dend_16 { pt3dadd( -2.86085, -84.6516, 7.70954, 0.45 ) }
    dend_16 { pt3dadd( -2.25944, -87.0708, 7.6761, 1.14 ) }
    dend_16 { pt3dadd( -1.45336, -89.8454, 7.58691, 0.23 ) }
    dend_16 { pt3dadd( -0.806208, -91.8825, 7.44725, 0.45 ) }
    dend_16 { pt3dadd( 0.194112, -94.9077, 7.23754, 0.23 ) }
    dend_16 { pt3dadd( 0.978445, -97.253, 7.05213, 0.23 ) }
    dend_16 { pt3dadd( 1.6802, -99.3185, 6.90571, 0.91 ) }
    dend_16 { pt3dadd( 2.61788, -102.333, 6.8286, 0.23 ) }
    dend_16 { pt3dadd( 3.50409, -105.37, 6.8052, 0.91 ) }
    dend_16 { pt3dadd( 3.93924, -106.975, 6.80977, 0.23 ) }
    dend_16 { pt3dadd( 4.56008, -109.361, 6.86636, 1.14 ) }
    dend_16 { pt3dadd( 5.17168, -112.294, 7.13038, 0.23 ) }
    dend_16 { pt3dadd( 5.52381, -114.767, 7.46656, 0.91 ) }
    dend_16 { pt3dadd( 5.61016, -116.482, 7.82043, 0.23 ) }
    dend_16 { pt3dadd( 5.68244, -119.668, 8.58607, 0.23 ) }
    dend_16 { pt3dadd( 5.67404, -120.952, 8.91559, 0.91 ) }
    dend_16 { pt3dadd( 5.50688, -125.255, 10.1344, 0.23 ) }
    dend_16 { pt3dadd( 5.35505, -127.374, 10.7289, 1.14 ) }
    dend_16 { pt3dadd( 4.95129, -131.864, 12.0895, 0.23 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 64/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -9.15998, -38.0714, 0.441316, 1.59 ) }
    dend_7 { pt3dadd( -9.31204, -39.5968, 0.283883, 1.59 ) }
    dend_7 { pt3dadd( -9.54583, -41.942, 0.0418358, 2.27 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 67/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -9.54583, -41.942, 0.0418358, 0.23 ) }
    dend_11 { pt3dadd( -9.13595, -44.614, 0.0750327, 0.23 ) }
    dend_11 { pt3dadd( -8.82697, -46.4874, 0.0825514, 0.45 ) }
    dend_11 { pt3dadd( -8.55204, -47.8542, 0.0621207, 1.36 ) }
    dend_11 { pt3dadd( -8.1531, -49.6458, -0.0334468, 1.36 ) }
    dend_11 { pt3dadd( -7.68276, -51.6638, -0.182705, 0.91 ) }
    dend_11 { pt3dadd( -7.19888, -53.6831, -0.373826, 1.14 ) }
    dend_11 { pt3dadd( -6.91388, -54.915, -0.520541, 1.14 ) }
    dend_11 { pt3dadd( -6.21459, -57.9934, -0.958606, 0.91 ) }
    dend_11 { pt3dadd( -5.77134, -60.0101, -1.28698, 1.14 ) }
    dend_11 { pt3dadd( -5.4983, -61.3478, -1.52081, 1.14 ) }
    dend_11 { pt3dadd( -5.18645, -62.9939, -1.81755, 0.23 ) }
    dend_11 { pt3dadd( -4.85409, -65.0354, -2.17461, 0.23 ) }
    dend_11 { pt3dadd( -4.7095, -66.1593, -2.35125, 0.23 ) }
    dend_11 { pt3dadd( -4.57853, -67.5735, -2.53827, 2.05 ) }
    dend_11 { pt3dadd( -4.38663, -69.8484, -2.7772, 1.59 ) }
    dend_11 { pt3dadd( -4.26722, -71.2758, -2.91482, 1.59 ) }
    dend_11 { pt3dadd( -4.12239, -72.8804, -3.05186, 0.45 ) }
    dend_11 { pt3dadd( -3.94496, -74.4738, -3.17366, 1.14 ) }
    dend_11 { pt3dadd( -3.75276, -76.0773, -3.27954, 1.14 ) }
    dend_11 { pt3dadd( -3.49532, -78.3623, -3.41654, 1.59 ) }
    dend_11 { pt3dadd( -3.32673, -79.9575, -3.52753, 1.14 ) }
    dend_11 { pt3dadd( -3.08937, -82.7103, -3.73271, 0.68 ) }
    dend_11 { pt3dadd( -2.97624, -84.2428, -3.85433, 1.14 ) }
    dend_11 { pt3dadd( -2.84953, -86.3096, -4.0247, 0.23 ) }
    dend_11 { pt3dadd( -2.75935, -88.2438, -4.18494, 1.59 ) }
    dend_11 { pt3dadd( -2.73171, -89.9514, -4.31701, 0.68 ) }
    dend_11 { pt3dadd( -2.7295, -91.2194, -4.41239, 0.91 ) }
    dend_11 { pt3dadd( -2.74593, -93.0576, -4.54685, 0.91 ) }
    dend_11 { pt3dadd( -2.76487, -95.8135, -4.74443, 1.36 ) }
    dend_11 { pt3dadd( -2.73776, -98.5784, -4.92578, 0.91 ) }
    dend_11 { pt3dadd( -2.60958, -102.321, -5.1555, 1.14 ) }
    dend_11 { pt3dadd( -2.51719, -104.169, -5.24685, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_11 { pt3dadd( -2.40502, -105.999, -5.32831, 1.14 ) }
    dend_11 { pt3dadd( -2.29557, -108.306, -5.41173, 0.23 ) }
    dend_11 { pt3dadd( -2.23903, -110.18, -5.46447, 0.68 ) }
    dend_11 { pt3dadd( -2.21954, -112.288, -5.50828, 0.45 ) }
    dend_11 { pt3dadd( -2.2324, -113.603, -5.53712, 2.05 ) }
    dend_11 { pt3dadd( -2.35376, -116.893, -5.61002, 0.91 ) }
    dend_11 { pt3dadd( -2.56815, -120.733, -5.70399, 0.45 ) }
    dend_11 { pt3dadd( -2.6812, -122.216, -5.7441, 0.91 ) }
    dend_11 { pt3dadd( -2.86526, -124.077, -5.80374, 0.91 ) }
    dend_11 { pt3dadd( -3.10912, -126.171, -5.88493, 0.23 ) }
    dend_11 { pt3dadd( -3.24012, -127.316, -5.94081, 0.91 ) }
    dend_11 { pt3dadd( -3.4541, -129.607, -6.0542, 0.45 ) }
    dend_11 { pt3dadd( -3.58916, -131.703, -6.14041, 1.36 ) }
    dend_11 { pt3dadd( -3.67891, -133.531, -6.19392, 0.68 ) }
    dend_11 { pt3dadd( -3.70932, -134.32, -6.20591, 1.14 ) }
    dend_11 { pt3dadd( -3.74554, -135.96, -6.21062, 0.23 ) }
    dend_11 { pt3dadd( -3.71783, -137.354, -6.21757, 0.68 ) }
    dend_11 { pt3dadd( -3.6034, -138.997, -6.23996, 0.23 ) }
    dend_11 { pt3dadd( -3.48766, -140.153, -6.26512, 0.91 ) }
    dend_11 { pt3dadd( -3.31719, -141.532, -6.30572, 0.91 ) }
    dend_11 { pt3dadd( -2.93641, -144.714, -6.42287, 0.23 ) }
    dend_11 { pt3dadd( -2.71779, -146.911, -6.51745, 1.36 ) }
    dend_11 { pt3dadd( -2.42831, -150.359, -6.65203, 0.23 ) }
    dend_11 { pt3dadd( -2.30837, -152.013, -6.71571, 1.14 ) }
    dend_11 { pt3dadd( -2.26682, -152.725, -6.73885, 1.14 ) }
    dend_11 { pt3dadd( -2.16354, -154.864, -6.78011, 0.23 ) }
    dend_11 { pt3dadd( -2.10658, -156.789, -6.79026, 0.91 ) }
    dend_11 { pt3dadd( -2.09423, -157.995, -6.78462, 1.82 ) }
    dend_11 { pt3dadd( -2.09096, -159.142, -6.75961, 1.82 ) }
    dend_11 { pt3dadd( -2.04105, -162.138, -6.67909, 0.45 ) }
    dend_11 { pt3dadd( -1.99418, -163.634, -6.62488, 1.14 ) }
    dend_11 { pt3dadd( -1.93986, -164.571, -6.58055, 1.14 ) }
    dend_11 { pt3dadd( -1.81578, -166.173, -6.5017, 0.23 ) }
    dend_11 { pt3dadd( -1.58953, -168.56, -6.39795, 0.23 ) }
    dend_11 { pt3dadd( -1.48556, -169.493, -6.35975, 1.36 ) }
    dend_11 { pt3dadd( -1.32966, -170.712, -6.32989, 1.36 ) }
    dend_11 { pt3dadd( -1.05504, -172.795, -6.3279, 0.23 ) }
    dend_11 { pt3dadd( -0.801076, -174.619, -6.33551, 0.91 ) }
    dend_11 { pt3dadd( -0.606758, -175.885, -6.35372, 0.91 ) }
    dend_11 { pt3dadd( -0.188531, -178.38, -6.4267, 0.23 ) }
    dend_11 { pt3dadd( 0.0989967, -180.073, -6.49114, 0.45 ) }
    dend_11 { pt3dadd( 0.448472, -182.109, -6.58441, 0.91 ) }
    dend_11 { pt3dadd( 0.786866, -183.979, -6.67667, 0.45 ) }
    dend_11 { pt3dadd( 1.02853, -185.441, -6.73898, 1.14 ) }
    dend_11 { pt3dadd( 1.18773, -186.593, -6.76679, 1.14 ) }
    dend_11 { pt3dadd( 1.42129, -188.456, -6.77455, 0.23 ) }
    dend_11 { pt3dadd( 1.50109, -189.177, -6.7653, 1.14 ) }
    dend_11 { pt3dadd( 1.6547, -190.589, -6.7362, 1.14 ) }
    dend_11 { pt3dadd( 1.97771, -193.612, -6.6739, 0.23 ) }
    dend_11 { pt3dadd( 2.25947, -196.203, -6.60802, 0.68 ) }
    dend_11 { pt3dadd( 2.42724, -197.609, -6.57548, 1.59 ) }
    dend_11 { pt3dadd( 2.55701, -198.513, -6.56026, 2.05 ) }
    dend_11 { pt3dadd( 3.13909, -201.752, -6.55549, 0.23 ) }
    dend_11 { pt3dadd( 3.39929, -202.885, -6.56703, 1.14 ) }
    dend_11 { pt3dadd( 3.65371, -203.728, -6.59275, 1.59 ) }
    dend_11 { pt3dadd( 4.37591, -205.665, -6.71292, 0.45 ) }
    dend_11 { pt3dadd( 5.05324, -207.29, -6.81094, 0.91 ) }
    dend_11 { pt3dadd( 5.93472, -209.231, -6.89452, 0.23 ) }
    dend_11 { pt3dadd( 6.71632, -210.828, -6.9447, 1.14 ) }
    dend_11 { pt3dadd( 7.2098, -211.761, -6.96539, 1.14 ) }
    dend_11 { pt3dadd( 8.86708, -214.728, -7.01524, 0.23 ) }
    dend_11 { pt3dadd( 9.9364, -216.511, -7.04429, 0.23 ) }
    dend_11 { pt3dadd( 10.6723, -217.714, -7.06961, 0.68 ) }
    dend_11 { pt3dadd( 11.0803, -218.374, -7.0923, 0.68 ) }
    dend_11 { pt3dadd( 12.019, -219.966, -7.17428, 0.23 ) }
    dend_11 { pt3dadd( 13.0054, -221.658, -7.27375, 1.36 ) }
    dend_11 { pt3dadd( 14.2267, -223.787, -7.4426, 0.45 ) }
    dend_11 { pt3dadd( 15.0588, -225.252, -7.62421, 1.14 ) }
    dend_11 { pt3dadd( 15.6388, -226.318, -7.78089, 0.23 ) }
    dend_11 { pt3dadd( 16.3571, -227.734, -7.98294, 2.5 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 70/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -9.54583, -41.942, 0.0418358, 0.91 ) }
    dend_8 { pt3dadd( -10.8914, -44.9488, 1.00781, 0.91 ) }
    dend_8 { pt3dadd( -11.9282, -47.2657, 1.75215, 0.91 ) }
    dend_8 { pt3dadd( -12.8507, -49.327, 2.41437, 0.68 ) }
    dend_8 { pt3dadd( -13.3948, -50.543, 2.80502, 1.36 ) }
    dend_8 { pt3dadd( -14.1937, -52.3282, 3.37853, 1.59 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 76/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 16.3571, -227.734, -7.98294, 0.23 ) }
    dend_15 { pt3dadd( 19.2432, -227.736, -8.74457, 0.23 ) }
    dend_15 { pt3dadd( 21.2596, -227.747, -9.253, 0.91 ) }
    dend_15 { pt3dadd( 23.9759, -227.788, -9.91268, 0.23 ) }
    dend_15 { pt3dadd( 26.3963, -227.824, -10.5005, 1.14 ) }
    dend_15 { pt3dadd( 29.0491, -227.865, -11.1448, 0.23 ) }
    dend_15 { pt3dadd( 29.7628, -227.876, -11.3181, 0.68 ) }
    dend_15 { pt3dadd( 31.0903, -227.774, -11.5705, 0.23 ) }
    dend_15 { pt3dadd( 31.639, -227.701, -11.6793, 0.68 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 85/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 16.3571, -227.734, -7.98294, 0.23 ) }
    dend_12 { pt3dadd( 15.4054, -231.358, -8.07451, 0.23 ) }
    dend_12 { pt3dadd( 15.1428, -232.492, -8.08721, 0.91 ) }
    dend_12 { pt3dadd( 14.8272, -233.982, -8.06454, 0.45 ) }
    dend_12 { pt3dadd( 14.6449, -234.854, -8.03428, 1.36 ) }
    dend_12 { pt3dadd( 14.1842, -236.826, -7.95887, 0.23 ) }
    dend_12 { pt3dadd( 13.8997, -238.033, -7.8956, 1.14 ) }
    dend_12 { pt3dadd( 13.1782, -241.142, -7.66946, 0.23 ) }
    dend_12 { pt3dadd( 12.6622, -243.203, -7.45229, 0.23 ) }
    dend_12 { pt3dadd( 12.2121, -245.024, -7.22776, 1.59 ) }
    dend_12 { pt3dadd( 11.659, -247.495, -6.93402, 0.91 ) }
    dend_12 { pt3dadd( 11.2143, -249.871, -6.67098, 0.23 ) }
    dend_12 { pt3dadd( 10.9545, -251.774, -6.44815, 1.14 ) }
    dend_12 { pt3dadd( 10.7256, -254.639, -6.11807, 0.23 ) }
    dend_12 { pt3dadd( 10.6708, -256.648, -5.91143, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_12 { pt3dadd( 10.7248, -259.213, -5.67825, 0.23 ) }
    dend_12 { pt3dadd( 10.841, -261.271, -5.52141, 1.14 ) }
    dend_12 { pt3dadd( 11.0029, -263.632, -5.41549, 0.23 ) }
    dend_12 { pt3dadd( 11.1725, -265.633, -5.37403, 1.36 ) }
    dend_12 { pt3dadd( 11.2218, -266.203, -5.37974, 1.36 ) }
    dend_12 { pt3dadd( 11.4829, -270.003, -5.50164, 0.23 ) }
    dend_12 { pt3dadd( 11.5614, -272.044, -5.66542, 0.91 ) }
    dend_12 { pt3dadd( 11.6021, -274.4, -6.00783, 0.23 ) }
    dend_12 { pt3dadd( 11.6289, -276.369, -6.41791, 1.36 ) }
    dend_12 { pt3dadd( 11.685, -277.473, -6.7093, 1.36 ) }
    dend_12 { pt3dadd( 12.0908, -281.293, -7.94867, 0.23 ) }
    dend_12 { pt3dadd( 12.574, -284.107, -9.04799, 1.14 ) }
    dend_12 { pt3dadd( 13.0316, -286.108, -9.94251, 0.23 ) }
    dend_12 { pt3dadd( 13.3578, -287.384, -10.5638, 1.36 ) }
    dend_12 { pt3dadd( 14.099, -289.952, -11.9261, 0.23 ) }
    dend_12 { pt3dadd( 14.7992, -291.97, -13.0814, 1.82 ) }
    dend_12 { pt3dadd( 15.0782, -292.537, -13.4454, 1.82 ) }
    dend_12 { pt3dadd( 15.6148, -293.333, -13.9435, 0.45 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 18/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -14.1937, -52.3282, 3.37853, 0.68 ) }
    dend_10 { pt3dadd( -16.5606, -52.7393, 2.95196, 0.68 ) }
    dend_10 { pt3dadd( -18.9849, -53.0095, 2.43046, 1.14 ) }
    dend_10 { pt3dadd( -21.7109, -53.3343, 1.81918, 0.23 ) }
    dend_10 { pt3dadd( -23.4309, -53.6124, 1.41154, 0.23 ) }
    dend_10 { pt3dadd( -25.1592, -54.0728, 1.04477, 1.14 ) }
    dend_10 { pt3dadd( -26.5154, -54.4996, 0.831435, 0.23 ) }
    dend_10 { pt3dadd( -28.063, -55.0027, 0.692775, 0.45 ) }
    dend_10 { pt3dadd( -29.1465, -55.3885, 0.656875, 0.45 ) }
    dend_10 { pt3dadd( -30.724, -55.9383, 0.644421, 1.14 ) }
    dend_10 { pt3dadd( -34.1736, -57.1098, 0.656495, 0.23 ) }
    dend_10 { pt3dadd( -36.7124, -57.8498, 0.692303, 0.91 ) }
    dend_10 { pt3dadd( -38.3498, -58.1367, 0.722632, 0.91 ) }
    dend_10 { pt3dadd( -40.066, -58.1227, 0.729762, 0.45 ) }
    dend_10 { pt3dadd( -42.0011, -57.7624, 0.65941, 0.45 ) }
    dend_10 { pt3dadd( -43.4717, -57.1424, 0.509151, 0.45 ) }
    dend_10 { pt3dadd( -44.859, -56.0476, 0.165067, 0.91 ) }
    dend_10 { pt3dadd( -46.4761, -54.1606, -0.569516, 0.45 ) }
    dend_10 { pt3dadd( -47.3351, -52.7789, -1.08695, 0.45 ) }
    dend_10 { pt3dadd( -47.8717, -51.5231, -1.50291, 0.45 ) }
    dend_10 { pt3dadd( -48.3066, -50.1392, -1.77737, 0.45 ) }
    dend_10 { pt3dadd( -47.6553, -51.1896, -2.1962, 1.36 ) }
    dend_10 { pt3dadd( -46.7485, -52.0875, -3.04614, 1.36 ) }
    dend_10 { pt3dadd( -45.7395, -53.2009, -3.94568, 0.23 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 42/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -14.1937, -52.3282, 3.37853, 0.23 ) }
    dend_9 { pt3dadd( -14.3981, -56.0026, 3.84555, 0.23 ) }
    dend_9 { pt3dadd( -14.4559, -57.7072, 4.0545, 0.91 ) }
    dend_9 { pt3dadd( -14.4602, -60.0059, 4.33202, 0.91 ) }
    dend_9 { pt3dadd( -14.4129, -62.6919, 4.62546, 0.91 ) }
    dend_9 { pt3dadd( -14.2859, -65.6914, 4.93149, 0.23 ) }
    dend_9 { pt3dadd( -14.0647, -69.1046, 5.26599, 0.68 ) }
    dend_9 { pt3dadd( -13.726, -72.7696, 5.61743, 0.45 ) }
    dend_9 { pt3dadd( -13.2719, -76.8567, 5.99364, 0.91 ) }
    dend_9 { pt3dadd( -12.8646, -80.1322, 6.27088, 0.68 ) }
    dend_9 { pt3dadd( -12.3817, -83.8766, 6.54319, 1.59 ) }
    dend_9 { pt3dadd( -11.4155, -91.6271, 7.10762, 0.45 ) }
    dend_9 { pt3dadd( -10.9996, -94.9284, 7.32933, 0.45 ) }
    dend_9 { pt3dadd( -10.729, -97.159, 7.46919, 1.59 ) }
    dend_9 { pt3dadd( -10.5446, -99.0043, 7.57528, 1.59 ) }
    dend_9 { pt3dadd( -10.2551, -103.789, 7.82384, 0.23 ) }
    dend_9 { pt3dadd( -10.2103, -107.117, 7.98808, 0.68 ) }
    dend_9 { pt3dadd( -10.3591, -111.91, 8.22835, 0.23 ) }
    dend_9 { pt3dadd( -10.5482, -114.837, 8.38469, 1.36 ) }
    dend_9 { pt3dadd( -11.004, -119.763, 8.65593, 0.45 ) }
    dend_9 { pt3dadd( -11.8783, -126.631, 9.06476, 0.45 ) }
    dend_9 { pt3dadd( -12.4115, -129.92, 9.27976, 0.45 ) }
    dend_9 { pt3dadd( -12.8951, -132.398, 9.44109, 1.36 ) }
    dend_9 { pt3dadd( -13.5294, -135.032, 9.64684, 1.59 ) }
    dend_9 { pt3dadd( -14.2277, -137.563, 9.88712, 0.23 ) }
    dend_9 { pt3dadd( -14.9154, -139.812, 10.1417, 0.45 ) }
    dend_9 { pt3dadd( -16.2732, -144.154, 10.675, 0.23 ) }
    dend_9 { pt3dadd( -16.7495, -145.799, 10.8948, 0.23 ) }
    dend_9 { pt3dadd( -17.5771, -148.759, 11.3704, 1.14 ) }
    dend_9 { pt3dadd( -18.906, -153.572, 12.2744, 0.23 ) }
    dend_9 { pt3dadd( -19.6851, -156.425, 12.866, 1.14 ) }
    dend_9 { pt3dadd( -20.5918, -159.932, 13.6796, 0.23 ) }
    dend_9 { pt3dadd( -21.3899, -163.041, 14.4659, 0.45 ) }
    dend_9 { pt3dadd( -22.0538, -165.944, 15.2912, 0.23 ) }
    dend_9 { pt3dadd( -22.5754, -168.29, 16.0291, 1.14 ) }
    dend_9 { pt3dadd( -22.8254, -169.452, 16.432, 1.14 ) }
    dend_9 { pt3dadd( -23.4549, -172.252, 17.4557, 0.23 ) }
    dend_9 { pt3dadd( -23.8277, -173.798, 18.0532, 0.91 ) }
    dend_9 { pt3dadd( -24.6438, -177.14, 19.2823, 0.23 ) }
    dend_9 { pt3dadd( -25.0538, -179.291, 20.0483, 1.14 ) }
    dend_9 { pt3dadd( -25.4589, -182.012, 20.979, 0.23 ) }
    dend_9 { pt3dadd( -25.6402, -183.95, 21.5575, 0.91 ) }
    dend_9 { pt3dadd( -25.6733, -185.007, 21.8081, 0.23 ) }
    dend_9 { pt3dadd( -25.6366, -186.492, 22.1108, 0.68 ) }
    dend_9 { pt3dadd( -25.5036, -190.156, 22.7258, 0.23 ) }
    dend_9 { pt3dadd( -25.3968, -192.344, 23.0795, 0.68 ) }
    dend_9 { pt3dadd( -25.3109, -195.666, 23.5828, 0.23 ) }
    dend_9 { pt3dadd( -25.2934, -197.93, 23.9815, 0.91 ) }
    dend_9 { pt3dadd( -25.5064, -203.735, 25.068, 0.23 ) }
    dend_9 { pt3dadd( -25.6262, -206.034, 25.5108, 0.68 ) }
    dend_9 { pt3dadd( -25.8167, -208.375, 25.9697, 0.23 ) }
    dend_9 { pt3dadd( -26.0801, -210.801, 26.5077, 0.91 ) }
    dend_9 { pt3dadd( -26.8538, -215.729, 27.7633, 0.23 ) }
    dend_9 { pt3dadd( -27.5289, -219.115, 28.7004, 0.91 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 96/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 15.6148, -293.333, -13.9435, 0.23 ) }
    dend_14 { pt3dadd( 16.5474, -294.769, -13.9323, 0.23 ) }
    dend_14 { pt3dadd( 17.6968, -296.427, -13.9676, 0.91 ) }
    dend_14 { pt3dadd( 18.7982, -297.869, -14.0001, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_14 { pt3dadd( 20.0564, -299.536, -14.094, 0.91 ) }
    dend_14 { pt3dadd( 20.9004, -300.667, -14.1733, 0.23 ) }
    dend_14 { pt3dadd( 22.0518, -302.205, -14.3319, 0.68 ) }
    dend_14 { pt3dadd( 23.0021, -303.462, -14.536, 0.23 ) }
    dend_14 { pt3dadd( 24.1286, -304.869, -14.8494, 0.91 ) }
    dend_14 { pt3dadd( 25.2989, -306.204, -15.2408, 0.23 ) }
    dend_14 { pt3dadd( 26.2781, -307.287, -15.6379, 0.91 ) }
    dend_14 { pt3dadd( 27.6538, -308.903, -16.292, 0.23 ) }
    dend_14 { pt3dadd( 28.8531, -310.34, -16.9209, 1.14 ) }
    dend_14 { pt3dadd( 30.5154, -312.418, -17.8647, 0.23 ) }
    dend_14 { pt3dadd( 31.743, -313.963, -18.6195, 0.68 ) }
    dend_14 { pt3dadd( 32.9244, -315.368, -19.33, 0.23 ) }
    dend_14 { pt3dadd( 34.289, -317.029, -20.2409, 1.14 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 13/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 15.6148, -293.333, -13.9435, 0.23 ) }
    dend_13 { pt3dadd( 16.2412, -294.612, -14.5431, 0.23 ) }
    dend_13 { pt3dadd( 17.0148, -296.192, -15.2835, 0.68 ) }
    dend_13 { pt3dadd( 17.3911, -296.96, -15.6438, 0.23 ) }
    dend_13 { pt3dadd( 18.3815, -298.983, -16.5918, 0.91 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_24, dend_3, dend_0, dend_34, dend_25, dend_21, dend_4, dend_2, dend_1, dend_40, dend_35, dend_33, dend_26, dend_23, dend_22, dend_20, dend_5, dend_39, dend_36, dend_30, dend_27, dend_17, dend_6, dend_38, dend_37, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_16, dend_7, dend_11, dend_8, dend_15, dend_12, dend_10, dend_9, dend_14, dend_13]}
    ModelViewParmSubset_2 = new SectionList()
    dend_24 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_24, dend_3, dend_0, dend_34, dend_25, dend_21, dend_4, dend_2, dend_1, dend_40, dend_35, dend_33, dend_26, dend_23, dend_22, dend_20, dend_5, dend_39, dend_36, dend_30, dend_27, dend_17, dend_6, dend_38, dend_37, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_16, dend_7, dend_11, dend_8, dend_15, dend_12, dend_10, dend_9, dend_14, dend_13]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_21 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_2 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_35 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_23 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_20 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_39 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_36 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_30 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_17 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_38 OneSecGrp_SectionRef_27.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_32 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_31 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_29 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_28 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_18 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_16 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_11 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_12 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_10 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_9 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_3 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_24 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_25 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_4 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_34 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_26 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_5 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_6 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_33 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_7 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_40 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_27 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_8 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_22 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_15 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_37 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_13 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_19 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_14 OneSecGrp_SectionRef_43.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_24, dend_24, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_34, dend_34, dend_34, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_5, dend_5, dend_5, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_6, dend_6, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_7, dend_7, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_21 nseg = 3
    dend_2 nseg = 3
    dend_1 nseg = 3
    dend_35 nseg = 3
    dend_23 nseg = 5
    dend_20 nseg = 11
    dend_39 nseg = 5
    dend_36 nseg = 9
    dend_30 nseg = 3
    dend_17 nseg = 13
    dend_38 nseg = 3
    dend_32 nseg = 3
    dend_31 nseg = 5
    dend_29 nseg = 5
    dend_28 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 5
    dend_11 nseg = 9
    dend_12 nseg = 3
    dend_10 nseg = 3
    dend_9 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L5_SBC_513d1f1596_0_0


