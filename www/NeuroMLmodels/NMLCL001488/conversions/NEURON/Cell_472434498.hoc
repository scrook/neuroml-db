// Cell: Cell_472434498
/*
{
  "id" : "Cell_472434498",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "499.528, 408.065, 46.48, 14.299", "506.678, 408.065, 46.48, 14.299", "513.827, 408.065, 46.48, 14.299" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "506.678, 408.065, 46.48, 1.0", "512.519, 421.881, 46.48, 1.0", "518.36, 435.697, 46.48, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000349674802426
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "513.354, 407.614, 46.0359, 0.2288", "514.491, 407.625, 46.3445, 0.661", "515.601, 407.745, 46.9512, 0.5848", "516.49, 408.263, 48.1048, 0.5848", "516.991, 409.23, 48.9149, 0.7372", "517.593, 410.177, 48.3689, 0.8644", "518.419, 410.922, 47.7448, 0.8898", "519.434, 411.409, 47.2626, 0.7372", "520.466, 411.598, 46.8849, 0.6356", "521.151, 411.061, 48.4439, 0.5592", "522.146, 411.095, 49.4169, 0.5848", "523.218, 411.443, 49.7252, 0.5338", "524.054, 411.853, 51.24, 0.483" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000349674802426
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "511.717, 403.398, 38.645, 0.305", "512.58, 402.645, 38.6646, 0.356", "513.354, 401.808, 38.7682, 0.356", "513.909, 400.814, 38.8685, 0.305", "514.484, 400.076, 38.0674, 0.2542" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000349674802426
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "504.973, 400.578, 44.2526, 0.2542", "504.638, 399.485, 44.2658, 0.3304", "504.212, 398.424, 44.3923, 0.4576", "503.69, 397.439, 45.0204, 0.5848", "502.958, 396.57, 45.358, 0.6102", "502.146, 395.766, 45.3603, 0.5848", "501.318, 394.975, 45.3617, 0.5338", "500.418, 394.269, 45.3676, 0.5338", "499.501, 393.585, 45.3961, 0.483" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000349674802426
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "501.674, 408.064, 35.2694, 0.2288", "500.829, 408.064, 33.3794, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000349674802426
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "502.227, 410.621, 32.8404, 0.2288", "501.556, 411.007, 30.7818, 0.2288", "501.061, 411.933, 29.7391, 0.2796", "500.582, 412.898, 28.7924, 0.3814", "499.801, 413.724, 28.5818, 0.483", "498.914, 414.445, 28.6888, 0.483", "498.095, 415.012, 30.0381, 0.4322", "497.923, 415.669, 32.2652, 0.4576", "497.52, 415.888, 34.8253, 0.5338", "496.616, 416.301, 36.2046, 0.5592" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000349674802426
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "518.36, 435.697, 46.48, 1.0", "524.201, 449.513, 46.48, 1.0", "530.043, 463.329, 46.48, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "513.354, 407.614, 46.0359, 0.2288", "513.21, 409.066, 46.7989, 0.356", "513.18, 410.736, 46.7384, 0.356", "512.231, 412.176, 46.7676, 0.3814", "511.798, 413.702, 46.8633, 0.483", "511.596, 415.026, 46.7589, 0.5338", "512.432, 415.486, 46.7177, 0.5592", "513.007, 416.495, 46.7746, 0.5592", "512.932, 417.077, 45.9878, 0.6356", "512.588, 418.076, 46.6726, 0.7372", "511.969, 418.985, 46.9921, 0.8136", "511.564, 420.016, 47.362, 0.8898", "511.124, 420.923, 48.6528, 0.9406", "510.639, 421.881, 49.5555, 0.9152", "510.326, 422.822, 50.9289, 0.7372" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "524.054, 411.853, 51.24, 0.483", "524.63, 411.61, 49.4934, 0.3304", "525.414, 411.341, 47.5793, 0.356", "526.435, 411.045, 46.832, 0.4068", "527.538, 410.836, 46.3196, 0.4322", "528.49, 410.429, 47.32, 0.4322" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "524.054, 411.853, 51.24, 0.483", "524.219, 412.489, 51.3251, 0.661", "524.828, 413.251, 52.64, 0.7118" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "514.484, 400.076, 38.0674, 0.2542", "514.596, 399.193, 35.4418, 0.2542", "514.578, 398.364, 34.1583, 0.305", "514.539, 397.316, 35.1716, 0.356", "515.046, 396.5, 35.3458, 0.4068", "515.76, 395.771, 34.7211, 0.4322", "516.296, 394.77, 34.5923, 0.483", "517.0, 393.949, 33.8514, 0.483", "517.458, 393.044, 34.4893, 0.5338", "518.128, 392.294, 33.6582, 0.5848", "518.377, 391.198, 33.2371, 0.6864", "519.32, 390.559, 33.32, 0.7118", "520.09, 389.72, 33.2626, 0.661", "520.784, 388.82, 33.0666, 0.5338", "521.43, 387.953, 33.2192, 0.4068", "521.354, 386.85, 33.3113, 0.356", "521.432, 385.786, 32.9255, 0.4068", "521.994, 384.917, 31.9788, 0.5084", "522.451, 384.104, 32.6063, 0.6356", "523.252, 383.327, 32.8854, 0.6864", "524.232, 382.86, 33.5219, 0.7118", "525.031, 382.087, 33.6414, 0.6356", "525.848, 381.407, 34.5744, 0.5848", "526.543, 380.516, 34.622, 0.5084", "527.338, 379.789, 33.8444, 0.483", "528.073, 378.989, 34.19, 0.4322", "528.922, 378.397, 34.9205, 0.3814", "529.681, 377.587, 34.5358, 0.356", "530.232, 376.717, 33.8867, 0.3814", "530.854, 375.823, 34.433, 0.483", "531.395, 374.842, 34.9754, 0.5592", "532.4, 374.447, 34.3767, 0.5848", "533.31, 373.815, 34.7119, 0.5338", "534.306, 373.495, 35.597, 0.4576", "535.286, 373.149, 36.4126, 0.4322", "536.075, 372.423, 37.371, 0.4576", "537.023, 371.934, 38.2693, 0.5084", "537.93, 371.26, 38.0654, 0.5084", "538.452, 370.299, 38.376, 0.4322", "539.2, 369.59, 37.5704, 0.3304", "539.991, 368.981, 36.8987, 0.2796", "540.635, 368.087, 36.9474, 0.2796", "540.905, 367.024, 37.3808, 0.3304", "541.765, 366.412, 37.7804, 0.3814", "542.625, 366.003, 37.2719, 0.4576", "543.435, 365.401, 37.6275, 0.5084", "544.431, 364.921, 37.5063, 0.5084", "544.814, 363.953, 36.566, 0.483", "545.181, 362.965, 36.5212, 0.4576", "545.869, 362.341, 37.3794, 0.4322", "546.878, 361.91, 36.7108, 0.4068", "547.945, 361.584, 36.2536, 0.3814", "548.888, 361.022, 36.8614, 0.4068", "549.828, 360.473, 36.1542, 0.4068", "550.693, 360.132, 34.8015, 0.4068", "551.676, 359.587, 34.841, 0.4068", "552.453, 358.843, 34.8384, 0.4322", "553.351, 358.397, 35.2372, 0.483", "554.323, 357.948, 34.9919, 0.4576", "555.218, 357.374, 35.5841, 0.4576", "556.208, 356.85, 35.7252, 0.4068", "557.182, 356.257, 35.5849, 0.4322", "558.15, 355.807, 34.7763, 0.4068", "559.167, 355.545, 35.3746, 0.3814", "560.164, 355.056, 35.1137, 0.356", "561.099, 354.478, 35.1324, 0.356", "561.758, 353.647, 34.2574, 0.3814", "562.443, 352.797, 34.116, 0.3304", "563.33, 352.114, 34.6676, 0.305", "564.239, 351.538, 33.8288, 0.305", "565.245, 351.193, 34.0234, 0.356", "566.257, 350.988, 33.2032, 0.356", "567.351, 351.039, 33.5538, 0.305", "568.442, 351.225, 34.1709, 0.2542", "569.57, 351.178, 34.0558, 0.2288", "570.322, 350.358, 33.8862, 0.2542", "570.964, 349.412, 34.0012, 0.2796", "571.478, 348.402, 33.6739, 0.305", "571.947, 347.365, 33.8604, 0.2796", "572.091, 346.253, 33.6804, 0.2796", "571.783, 345.217, 33.0366, 0.305", "571.31, 344.199, 32.8667, 0.3814", "571.143, 343.074, 32.7404, 0.4068", "571.124, 341.951, 32.4862, 0.4068", "571.331, 340.862, 32.7088, 0.356", "571.555, 339.76, 33.217, 0.3304", "571.888, 338.724, 32.662, 0.3304", "572.208, 337.721, 33.7296, 0.3814", "572.523, 336.653, 33.9259, 0.4576", "572.937, 335.602, 33.5373, 0.483", "573.392, 334.566, 33.1181, 0.483", "574.036, 333.649, 33.2032, 0.4322", "574.794, 332.799, 33.0901, 0.4068", "575.375, 331.836, 33.4368, 0.356", "575.939, 330.899, 33.6686, 0.3304", "576.663, 330.169, 33.9724, 0.2796", "576.693, 329.045, 34.16, 0.2796", "576.557, 327.912, 34.02, 0.2796", "576.841, 326.896, 33.572, 0.305", "577.416, 325.919, 33.2542, 0.2796", "578.056, 324.977, 33.4748, 0.305", "578.88, 324.203, 33.0971, 0.3304", "579.517, 323.314, 33.7515, 0.3814", "579.927, 322.355, 32.9728, 0.356", "580.294, 321.293, 33.2192, 0.356", "580.534, 320.223, 33.0397, 0.3814", "581.327, 319.443, 33.5121, 0.4322", "582.088, 318.627, 33.0025, 0.4576", "582.877, 317.883, 32.4164, 0.4576", "583.461, 317.002, 32.6393, 0.4576", "583.536, 315.897, 33.1755, 0.4322", "583.812, 314.839, 33.1293, 0.4322", "584.26, 313.793, 33.0599, 0.4068", "584.833, 312.807, 33.168, 0.4576", "585.385, 311.854, 33.88, 0.5084" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "514.484, 400.076, 38.0674, 0.2542", "515.549, 399.748, 38.6966, 0.6356", "516.617, 399.407, 39.1684, 0.6356", "517.697, 399.243, 39.2305, 0.5338", "518.708, 399.195, 38.731, 0.4576", "519.687, 398.962, 37.417, 0.483", "520.753, 398.786, 36.5383, 0.5592", "521.257, 398.013, 36.0847, 0.5592", "521.728, 397.572, 34.1645, 0.483", "522.367, 396.682, 33.4578, 0.4068", "523.151, 395.884, 33.6216, 0.4322", "523.586, 395.322, 35.3844, 0.5084", "524.182, 394.587, 36.4658, 0.5592", "525.086, 393.903, 36.4361, 0.5338", "526.094, 393.439, 36.0861, 0.4576", "527.203, 393.427, 35.5614, 0.4068", "528.098, 393.333, 33.9858, 0.4322", "528.964, 393.034, 32.9199, 0.483", "529.823, 393.327, 34.2815, 0.5848", "530.786, 393.2, 35.5424, 0.5848", "531.917, 393.193, 35.3604, 0.5592", "532.659, 392.723, 34.6307, 0.4576", "533.34, 392.134, 33.4065, 0.4068", "534.271, 391.549, 33.075, 0.3814" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "499.501, 393.585, 45.3961, 0.483", "500.049, 393.131, 45.1175, 0.305", "500.921, 392.413, 44.6754, 0.305", "501.792, 391.693, 44.2333, 0.3304", "502.653, 390.954, 44.3472, 0.356", "503.437, 390.518, 45.9211, 0.356", "504.217, 390.526, 47.7663, 0.3304", "505.095, 390.139, 46.7006, 0.3304", "505.605, 389.365, 45.1203, 0.356", "506.209, 388.8, 43.6153, 0.356", "506.766, 387.845, 43.1768, 0.356", "507.648, 387.258, 42.3917, 0.4068", "508.684, 387.333, 41.5422, 0.5084", "509.674, 387.839, 40.9167, 0.5338", "510.409, 388.556, 41.4123, 0.483", "511.251, 388.498, 41.104, 0.4068", "512.159, 387.829, 41.3381, 0.3814", "513.245, 387.88, 41.2485, 0.3814", "514.32, 387.813, 40.3875, 0.3814", "515.458, 387.854, 40.5684, 0.4576", "516.453, 387.5, 39.7541, 0.5592", "517.482, 387.959, 39.5797, 0.661", "518.369, 388.522, 38.8808, 0.6102", "519.015, 388.55, 37.1364, 0.5084", "519.107, 388.451, 34.3599, 0.4322", "519.862, 388.559, 33.3337, 0.4576", "520.716, 389.251, 33.045, 0.5084", "521.479, 389.852, 34.2395, 0.483", "522.125, 389.569, 36.0576, 0.4576", "522.583, 389.335, 37.8266, 0.4576", "523.671, 389.284, 38.1606, 0.5338", "524.614, 389.37, 36.848, 0.5592", "525.586, 389.212, 37.4203, 0.5338", "526.705, 389.111, 37.8437, 0.4576", "527.792, 389.227, 38.5028, 0.3814", "528.677, 389.664, 39.8026, 0.305", "529.658, 389.522, 40.7915, 0.305", "530.74, 389.626, 40.4793, 0.356", "531.086, 389.241, 38.1374, 0.4322", "531.588, 388.422, 36.6808, 0.4322", "532.656, 388.055, 36.5498, 0.3814", "533.648, 387.698, 35.6112, 0.3814", "534.638, 387.22, 35.4491, 0.3814", "535.539, 386.649, 35.2162, 0.4322", "536.62, 386.375, 35.833, 0.4068", "537.75, 386.272, 35.9506, 0.4068", "538.786, 386.329, 34.8132, 0.356", "539.677, 386.179, 34.9241, 0.3304", "540.818, 386.129, 34.7945, 0.3304", "541.586, 386.594, 36.3994, 0.3814", "542.536, 386.624, 36.6419, 0.4576", "543.476, 386.583, 35.2901, 0.483", "544.539, 386.242, 35.684, 0.5084", "545.387, 385.785, 36.8774, 0.483", "546.34, 385.198, 36.7195, 0.5338", "547.442, 384.99, 36.7637, 0.5084", "548.513, 384.663, 36.7346, 0.5084", "549.627, 384.611, 36.9373, 0.4576", "550.604, 384.14, 36.1648, 0.5084", "551.344, 383.719, 37.8862, 0.5592", "552.361, 383.815, 38.6554, 0.6102", "553.448, 383.931, 37.9179, 0.6102", "554.543, 383.704, 37.6919, 0.6356", "555.667, 383.535, 37.5858, 0.661", "556.628, 383.079, 36.6069, 0.6356", "557.26, 382.354, 36.6593, 0.5592", "557.716, 381.585, 38.3547, 0.4576", "558.349, 380.728, 39.0009, 0.4322", "559.254, 380.133, 38.6084, 0.4576", "560.326, 380.34, 39.0611, 0.5338", "561.19, 380.683, 37.9716, 0.5848", "562.275, 380.636, 37.7294, 0.5848", "563.141, 380.24, 38.103, 0.5084", "563.909, 379.565, 39.3529, 0.4322", "564.794, 379.233, 40.8646, 0.3814", "565.406, 378.876, 38.9054, 0.4322", "566.5, 378.747, 38.6658, 0.483", "567.528, 378.388, 38.7523, 0.5338", "568.471, 377.934, 39.3492, 0.5084", "569.154, 377.102, 39.5419, 0.5084", "569.826, 376.22, 40.1397, 0.5084", "570.63, 375.444, 40.5255, 0.5338", "571.338, 374.706, 40.8962, 0.5084", "572.179, 374.022, 40.2769, 0.4576", "572.942, 373.209, 39.7552, 0.4068", "573.504, 372.25, 39.4842, 0.356", "574.13, 371.298, 39.4752, 0.356", "574.791, 370.4, 39.9053, 0.3304", "575.701, 369.803, 40.3679, 0.356", "576.616, 369.162, 40.3701, 0.356", "577.56, 368.62, 40.2077, 0.3814", "578.607, 368.27, 39.6343, 0.3814", "579.398, 367.727, 40.871, 0.356", "580.364, 367.167, 40.8156, 0.356", "581.32, 366.776, 40.7476, 0.356", "582.432, 366.572, 40.801, 0.3814", "583.53, 366.318, 40.8878, 0.356" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "499.501, 393.585, 45.3961, 0.483", "498.658, 392.897, 45.53, 0.5338", "497.951, 392.059, 46.3411, 0.483", "497.518, 391.111, 47.4891, 0.4322" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "500.829, 408.064, 33.3794, 0.2288", "499.909, 407.89, 32.361, 0.2288", "498.881, 407.695, 31.2248, 0.2542", "497.894, 407.492, 29.902, 0.3304", "496.94, 407.281, 28.4474, 0.4322", "495.863, 407.136, 27.6077, 0.5338", "494.771, 407.417, 27.3479, 0.5848", "493.962, 408.195, 26.9133, 0.6356", "493.284, 409.092, 26.404, 0.6356", "492.569, 409.972, 26.0364, 0.5848", "492.141, 410.934, 24.9581, 0.4576" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "500.829, 408.064, 33.3794, 0.2288", "500.245, 408.036, 32.636, 0.305", "499.23, 407.99, 31.3471, 0.2542", "498.215, 407.945, 30.0588, 0.2796", "497.269, 407.402, 29.3577, 0.3304", "496.413, 406.663, 28.9671, 0.4068", "495.943, 405.803, 30.3209, 0.3814", "496.16, 405.271, 32.7256, 0.356" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "496.616, 416.301, 36.2046, 0.5592", "496.105, 415.844, 38.278, 0.3304", "495.453, 415.418, 40.1075, 0.3304", "494.479, 415.704, 40.3407, 0.356", "493.459, 415.98, 40.3642, 0.3814", "492.364, 415.998, 39.7566, 0.356", "491.556, 416.661, 39.286, 0.356", "490.631, 417.323, 39.2053, 0.356", "489.539, 417.628, 39.4758, 0.3814", "488.471, 417.751, 39.961, 0.356", "487.893, 418.554, 38.8889, 0.3304", "487.089, 419.052, 38.946, 0.305", "486.311, 419.466, 39.27, 0.305", "485.371, 419.841, 39.6628, 0.2796", "484.413, 419.69, 40.9072, 0.2542", "483.596, 420.055, 42.3144, 0.2796", "483.0, 420.887, 43.325, 0.4068", "482.493, 420.97, 41.3731, 0.5338", "481.678, 421.662, 41.5828, 0.6102", "480.785, 422.348, 42.0554, 0.5592", "479.859, 422.971, 42.0342, 0.5592", "479.033, 423.695, 41.3196, 0.5084", "478.367, 424.564, 40.7294, 0.483", "477.859, 425.582, 40.4972, 0.356", "477.625, 426.325, 42.2285, 0.305", "477.395, 427.367, 42.5214, 0.3304", "477.315, 427.997, 40.7817, 0.4068", "476.376, 428.645, 40.696, 0.483", "475.474, 429.311, 40.5924, 0.4576", "474.704, 430.128, 40.9279, 0.483", "474.034, 430.992, 40.3001, 0.483", "473.209, 431.579, 39.4178, 0.5338", "472.193, 432.028, 39.7342, 0.5084", "471.171, 432.314, 40.7036, 0.4322", "470.209, 432.392, 41.6816, 0.356", "469.408, 433.128, 41.2224, 0.305", "468.97, 434.137, 41.1295, 0.305", "468.342, 435.051, 41.1818, 0.3304", "467.547, 435.839, 41.4383, 0.3814", "466.499, 435.787, 40.997, 0.4322", "465.93, 436.582, 40.3217, 0.4576", "465.436, 437.456, 40.7907, 0.4322", "464.967, 438.34, 39.954, 0.4576", "464.398, 439.29, 40.1134, 0.483", "463.609, 440.115, 40.0375, 0.5592", "462.685, 440.623, 39.0029, 0.5592", "461.668, 441.062, 39.5198, 0.5338", "460.643, 441.442, 39.4164, 0.483", "459.834, 442.032, 40.481, 0.4576", "459.322, 443.043, 40.5196, 0.483", "458.988, 444.126, 40.1668, 0.483", "458.641, 445.204, 39.8065, 0.483", "458.536, 446.303, 40.1976, 0.483", "458.364, 447.426, 40.0884, 0.5084", "457.694, 448.29, 39.809, 0.5592", "456.908, 449.069, 40.3883, 0.6102", "456.342, 450.05, 40.32, 0.6864" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "496.616, 416.301, 36.2046, 0.5592", "495.775, 417.12, 36.1561, 0.661", "495.02, 417.922, 35.4396, 0.6102", "494.759, 418.947, 34.4436, 0.5848", "494.609, 420.072, 34.1768, 0.5848", "494.267, 421.163, 34.1813, 0.483", "493.861, 422.231, 34.3008, 0.3814", "493.079, 423.026, 34.8606, 0.305", "492.004, 423.266, 35.3839, 0.3304", "491.194, 423.735, 34.006, 0.356", "491.116, 424.81, 33.1038, 0.4322", "491.099, 425.951, 32.9448, 0.5084", "490.992, 427.076, 32.5713, 0.5848", "490.635, 428.131, 31.9684, 0.6102", "490.167, 429.172, 31.9068, 0.6102", "489.528, 430.12, 31.855, 0.6356", "488.866, 431.043, 31.6112, 0.6102", "488.312, 431.982, 30.7852, 0.5848", "487.952, 432.974, 29.7525, 0.5338", "487.618, 434.061, 29.5252, 0.5338", "487.518, 435.189, 29.3174, 0.483", "487.286, 436.171, 30.0731, 0.4322", "486.409, 436.725, 30.5715, 0.3814", "485.786, 437.551, 29.9138, 0.3814", "485.618, 438.668, 29.6887, 0.356", "485.479, 439.801, 29.68, 0.3304", "485.283, 440.927, 29.68, 0.305", "485.134, 442.061, 29.68, 0.3304", "484.806, 443.14, 29.68, 0.4068", "484.103, 444.016, 29.6803, 0.5338", "483.259, 444.788, 29.6806, 0.6356", "482.44, 445.587, 29.682, 0.6864", "481.646, 446.41, 29.6876, 0.661", "480.932, 447.301, 29.7147, 0.6356", "480.395, 448.299, 29.9004, 0.6102", "480.062, 449.369, 30.3918, 0.6102", "479.849, 450.48, 30.7644, 0.6102", "479.919, 451.596, 31.0593, 0.5592", "480.202, 452.685, 31.5412, 0.5084", "480.411, 453.797, 31.6711, 0.4576", "480.184, 454.869, 31.3135, 0.5084", "479.547, 455.765, 31.6226, 0.5338", "478.801, 456.578, 32.3646, 0.5592", "478.118, 457.466, 32.8773, 0.5338", "477.634, 458.491, 33.0176, 0.5338", "477.423, 459.607, 32.9675, 0.483", "477.349, 460.74, 32.6645, 0.4322", "477.121, 461.851, 32.6396, 0.4322", "476.545, 462.821, 32.765, 0.483", "475.756, 463.63, 32.4528, 0.483", "474.824, 464.28, 32.4411, 0.4068", "473.996, 465.054, 32.2244, 0.356", "473.198, 465.872, 32.223, 0.3814", "472.358, 466.631, 32.5987, 0.4576", "471.577, 467.456, 32.9148, 0.5338", "470.984, 468.42, 32.6441, 0.5848", "470.398, 469.378, 32.0984, 0.6102", "469.721, 470.294, 31.9326, 0.5848", "468.986, 471.17, 31.92, 0.5848", "468.246, 472.043, 31.9206, 0.5592", "467.633, 473.007, 31.9222, 0.5848", "467.139, 474.038, 31.934, 0.5338", "466.607, 475.051, 31.9934, 0.5084", "466.006, 476.016, 32.2669, 0.4068", "465.288, 476.903, 32.4234, 0.356", "464.518, 477.748, 32.3798, 0.3304", "464.061, 478.793, 32.5265, 0.356", "463.434, 479.733, 32.1717, 0.4068", "462.531, 480.425, 31.9228, 0.4322", "461.688, 481.198, 31.9309, 0.4576", "460.88, 482.008, 31.9642, 0.4322", "460.084, 482.826, 32.1118, 0.3814", "459.362, 483.685, 32.6449, 0.3304", "458.793, 484.658, 33.0534, 0.356", "458.577, 485.774, 33.2945, 0.4068", "458.548, 486.896, 33.8209, 0.4576", "458.305, 488.002, 34.0704, 0.4322", "457.798, 489.02, 33.8164, 0.3814", "457.216, 489.979, 33.3021, 0.3304", "456.604, 490.934, 33.2665, 0.2796", "456.255, 492.005, 33.6006, 0.2542", "455.971, 493.094, 33.1276, 0.2796", "455.762, 494.182, 32.4528, 0.3304", "455.401, 495.247, 32.0183, 0.3814", "454.915, 496.279, 31.922, 0.356", "454.635, 497.379, 31.932, 0.3304", "454.589, 498.521, 32.0141, 0.305", "454.53, 499.66, 32.193, 0.2796", "454.51, 500.803, 32.1812, 0.2542", "454.51, 501.947, 32.0846, 0.2288", "454.436, 503.076, 31.8562, 0.2542", "454.053, 504.132, 31.5067, 0.305", "453.419, 505.078, 31.4205, 0.356", "452.749, 505.987, 31.8164, 0.356", "452.229, 506.942, 32.3187, 0.3304", "452.007, 508.061, 32.48, 0.305", "451.88, 509.194, 32.48, 0.305" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "510.326, 422.822, 50.9289, 0.7372", "510.333, 424.403, 50.463, 0.4322", "510.245, 425.528, 50.4717, 0.5084", "509.73, 426.48, 50.5548, 0.5338", "509.134, 427.31, 51.4595, 0.5338", "509.167, 428.341, 52.2438, 0.4576", "509.104, 429.475, 52.2511, 0.4322", "508.543, 430.424, 51.7098, 0.4322", "508.414, 431.394, 50.328, 0.4322", "508.513, 432.446, 49.2576, 0.4068", "508.625, 433.447, 49.1366, 0.3814", "508.214, 433.888, 51.2943, 0.4322", "507.747, 434.815, 51.8151, 0.483", "507.922, 435.798, 53.0488, 0.5592", "508.062, 436.919, 52.7332, 0.5592" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "510.326, 422.822, 50.9289, 0.7372", "508.976, 423.62, 50.9295, 0.4068", "508.316, 424.449, 50.4143, 0.4322", "507.355, 424.926, 49.4987, 0.5084", "506.53, 425.629, 49.7675, 0.5592", "505.716, 426.407, 50.0172, 0.5592", "505.045, 426.894, 51.6401, 0.5084", "504.31, 427.676, 51.8627, 0.483", "503.441, 428.378, 52.36, 0.4068", "502.848, 429.342, 52.2539, 0.3814", "502.096, 430.048, 51.4758, 0.3304", "501.105, 430.497, 51.917, 0.3304", "500.224, 431.039, 52.4997, 0.2796", "499.194, 431.237, 53.4246, 0.2542", "498.117, 431.206, 52.9295, 0.2542", "497.198, 431.72, 52.5871, 0.305", "496.144, 432.108, 52.9194, 0.356", "495.047, 432.432, 53.0132, 0.3814" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "528.49, 410.429, 47.32, 0.4322", "528.817, 410.743, 47.6664, 0.5338", "529.607, 411.498, 48.5002, 0.4322", "530.416, 412.156, 48.8956, 0.4576", "531.372, 412.229, 47.5826, 0.5084", "532.247, 411.863, 48.2658, 0.5084", "533.205, 411.641, 49.4105, 0.483", "534.273, 411.713, 50.3395, 0.4322", "535.31, 411.672, 49.3422, 0.4068", "536.424, 411.612, 48.7536, 0.356", "537.315, 412.053, 47.5479, 0.3304", "538.32, 411.89, 47.0058, 0.356", "539.198, 412.079, 48.2507, 0.4068", "539.866, 411.355, 48.648, 0.4322", "540.891, 411.287, 49.3282, 0.356", "541.744, 411.784, 50.5688, 0.305", "542.776, 411.812, 51.4567, 0.305", "543.81, 411.49, 51.0703, 0.3814", "544.888, 411.168, 50.6808, 0.4068", "546.013, 411.275, 50.4025, 0.3814", "547.078, 410.921, 49.889, 0.305", "548.135, 410.668, 49.1574, 0.2542", "549.002, 410.025, 49.1075, 0.2796", "549.859, 409.484, 50.316, 0.3304", "550.627, 409.089, 52.0069, 0.4068", "551.573, 408.855, 53.3977, 0.4576", "552.667, 408.593, 53.4069, 0.5338", "553.296, 407.85, 52.0481, 0.5848", "554.365, 407.533, 51.7681, 0.5848", "555.318, 406.993, 52.4625, 0.5338", "556.307, 406.547, 52.7313, 0.483", "557.401, 406.336, 52.3519, 0.4576", "558.38, 406.01, 51.1767, 0.483", "559.484, 405.909, 50.5434, 0.483", "560.596, 405.829, 50.8578, 0.4576", "561.594, 405.949, 51.1325, 0.3814", "562.577, 405.557, 52.2049, 0.356", "563.57, 405.049, 52.6075, 0.3304", "564.611, 404.637, 52.2617, 0.3304", "565.74, 404.581, 51.8538, 0.305", "566.776, 404.341, 52.0534, 0.3304", "567.688, 404.144, 52.2962, 0.356", "568.674, 404.213, 52.325, 0.356", "569.63, 403.809, 52.78, 0.3304", "570.497, 403.073, 53.0303, 0.3304", "571.616, 402.992, 53.0348, 0.3814", "572.716, 403.042, 53.7118, 0.4576", "573.63, 402.358, 53.7079, 0.483", "574.598, 401.776, 53.2778, 0.5084", "575.516, 401.176, 52.7817, 0.4576", "576.297, 400.392, 53.2893, 0.4576", "576.965, 399.541, 52.85, 0.3814", "577.919, 399.051, 52.7892, 0.356", "578.987, 399.106, 53.578, 0.305", "580.109, 399.122, 53.5223, 0.3304", "581.155, 398.754, 54.0288, 0.3814", "582.276, 398.638, 54.1346, 0.4576", "583.263, 398.158, 54.8719, 0.5084", "584.333, 397.775, 55.0984, 0.5084", "585.304, 397.212, 55.6063, 0.4576", "586.229, 396.665, 56.5398, 0.3814", "587.266, 396.368, 57.314, 0.356", "588.378, 396.471, 57.5728, 0.3304", "589.453, 396.459, 57.755, 0.3304", "590.413, 395.915, 58.2658, 0.2796", "591.281, 395.196, 58.7188, 0.2796", "591.987, 394.34, 59.206, 0.2796", "592.856, 393.73, 59.4513, 0.305", "593.974, 393.545, 59.7831, 0.2796", "594.974, 393.013, 59.7187, 0.2542", "595.723, 392.159, 59.8744, 0.2288", "596.453, 391.281, 60.0533, 0.2288", "597.258, 390.48, 60.3982, 0.2288", "598.353, 390.245, 59.9698, 0.2288", "599.442, 389.991, 60.543, 0.2288", "600.581, 390.026, 60.7684, 0.2542", "601.719, 390.014, 61.0173, 0.2796", "602.843, 389.801, 61.1212, 0.305", "603.914, 389.434, 61.2909, 0.2796", "604.82, 388.748, 61.0338, 0.2542", "605.835, 388.223, 60.9333, 0.2288", "606.869, 387.764, 60.6046, 0.2288", "607.979, 387.496, 60.674, 0.2288", "609.081, 387.203, 60.7281, 0.2288", "610.19, 386.998, 60.76, 0.2288", "611.302, 386.799, 60.6267, 0.2288", "612.414, 386.586, 60.6791, 0.2288", "613.356, 386.117, 61.5294, 0.2288", "613.919, 385.295, 62.16, 0.2288", "614.434, 384.363, 62.16, 0.2288", "615.335, 383.926, 62.16, 0.2288", "616.458, 383.796, 62.16, 0.2288", "617.52, 383.491, 62.4224, 0.2288", "617.989, 382.611, 62.72, 0.2288", "617.989, 381.467, 62.72, 0.2288", "617.958, 380.326, 62.7441, 0.2288", "617.874, 379.194, 62.9815, 0.2288", "617.719, 378.063, 63.0, 0.2288", "617.695, 376.931, 63.0, 0.2542", "617.874, 375.804, 63.0, 0.305" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "528.49, 410.429, 47.32, 0.4322", "529.24, 409.547, 47.1747, 0.356", "529.94, 408.836, 46.0883, 0.305", "530.583, 408.55, 43.9908, 0.2542", "530.745, 407.6, 42.9313, 0.2796", "531.117, 407.293, 45.2253, 0.3304", "531.632, 407.2, 47.045, 0.3814", "531.839, 406.113, 46.9868, 0.3304", "532.271, 405.111, 46.4677, 0.305", "532.762, 404.111, 46.8482, 0.3304", "533.323, 403.267, 46.1126, 0.4322", "533.802, 402.313, 47.0305, 0.5084", "534.658, 401.573, 46.6822, 0.483", "535.396, 400.815, 45.8724, 0.483", "536.364, 400.25, 46.0197, 0.483", "537.356, 399.716, 45.6078, 0.5338", "538.127, 399.002, 44.637, 0.4576", "538.882, 398.606, 44.2238, 0.4068", "539.31, 398.362, 46.2017, 0.356", "540.041, 397.966, 44.9324, 0.4068", "540.952, 397.435, 44.0798, 0.3814", "541.693, 396.856, 45.2318, 0.356", "542.479, 396.278, 45.9276, 0.3304", "543.354, 395.546, 45.8573, 0.3814", "544.214, 394.804, 45.5568, 0.4576", "544.995, 393.971, 45.5773, 0.483", "545.276, 392.891, 45.0971, 0.483", "545.758, 392.042, 46.452, 0.483", "546.073, 391.019, 47.096, 0.5338", "546.781, 390.221, 47.7688, 0.5848", "547.557, 389.398, 47.3768, 0.5592", "548.232, 388.566, 47.5443, 0.483", "548.78, 387.64, 48.3308, 0.3814", "549.56, 386.847, 48.8233, 0.356", "550.128, 386.188, 47.6585, 0.3814", "550.695, 385.479, 49.3455, 0.483", "551.393, 385.008, 50.8721, 0.5592", "552.49, 385.146, 50.8133, 0.6102", "553.531, 385.59, 50.4932, 0.5592", "554.568, 385.972, 49.9187, 0.483", "555.604, 385.909, 50.5924, 0.356", "556.378, 385.846, 52.5868, 0.3304", "557.315, 386.051, 53.5497, 0.356", "558.344, 386.029, 52.5134, 0.483", "559.281, 386.074, 51.0378, 0.5338", "560.357, 386.176, 50.7136, 0.5592", "561.388, 386.173, 51.1507, 0.483", "562.32, 386.782, 50.9802, 0.4068", "563.346, 387.223, 51.5063, 0.305", "564.443, 387.072, 51.6477, 0.2796", "565.419, 386.555, 52.2788, 0.2796", "566.456, 386.358, 52.2346, 0.305", "567.484, 386.187, 52.0052, 0.305", "568.361, 385.602, 52.5398, 0.305", "568.799, 384.568, 52.6316, 0.305", "569.016, 383.448, 52.7775, 0.305", "569.484, 382.415, 52.929, 0.3304", "570.13, 381.491, 52.509, 0.3814", "571.055, 380.827, 52.4541, 0.4576", "572.013, 380.244, 52.803, 0.5084", "573.109, 379.983, 52.4185, 0.5084", "574.179, 379.616, 52.2998, 0.4322", "575.247, 379.326, 51.7345, 0.3304", "576.201, 378.881, 51.7101, 0.2542", "577.078, 378.217, 51.7656, 0.2542", "578.12, 377.761, 51.5701, 0.2796", "579.179, 377.502, 50.9816, 0.305", "580.168, 377.902, 50.7494, 0.305", "580.932, 378.706, 50.2695, 0.3304", "581.913, 379.171, 50.6134, 0.3814", "583.008, 379.333, 50.1656, 0.4068", "584.09, 379.604, 50.6895, 0.3814", "585.185, 379.898, 51.0488, 0.3304", "586.299, 380.151, 50.96, 0.305" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "524.828, 413.251, 52.64, 0.7118", "523.385, 413.642, 52.9682, 0.5338", "522.536, 414.216, 53.8045, 0.4576", "521.779, 414.376, 55.5878, 0.4322", "520.749, 414.014, 56.0, 0.4576" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "524.828, 413.251, 52.64, 0.7118", "525.255, 413.878, 52.5286, 0.483", "525.94, 414.562, 52.6971, 0.5084", "526.533, 415.352, 52.5683, 0.5592", "527.63, 415.566, 52.4048, 0.6864", "528.469, 415.646, 54.0459, 0.788", "529.352, 415.722, 55.7497, 0.7372", "530.388, 415.606, 56.3438, 0.5848", "531.31, 416.067, 56.5351, 0.3814", "531.729, 417.038, 57.475, 0.3304", "532.451, 417.665, 58.8227, 0.3814", "533.013, 418.625, 59.0069, 0.483", "533.281, 419.598, 59.3261, 0.5084", "533.762, 420.299, 61.1058, 0.4322", "534.232, 421.047, 62.7808, 0.4068", "535.151, 421.487, 63.189, 0.3814", "536.263, 421.646, 63.2797, 0.4068", "537.169, 421.261, 64.3474, 0.4322", "538.133, 421.034, 63.7118, 0.483", "539.117, 421.38, 62.7063, 0.5848", "540.12, 421.764, 62.2356, 0.5848", "540.648, 422.538, 62.4694, 0.6356", "541.279, 423.159, 62.6562, 0.6102", "542.284, 422.991, 63.2915, 0.6102", "542.703, 423.489, 65.2977, 0.5592", "543.39, 423.573, 66.9206, 0.5084", "544.331, 424.07, 66.2175, 0.4576", "545.456, 424.19, 66.243, 0.3814", "546.565, 424.326, 66.7579, 0.356", "547.055, 424.943, 68.4289, 0.3814", "548.091, 425.162, 69.2227, 0.4576", "548.817, 425.507, 71.1536, 0.5338", "549.745, 425.941, 72.116, 0.5848", "550.314, 426.634, 73.5529, 0.6102", "550.802, 427.392, 74.5077, 0.6102", "551.32, 428.376, 73.9102, 0.6102", "551.956, 429.297, 74.1342, 0.6102", "552.604, 430.135, 75.1612, 0.5848", "553.51, 430.794, 75.4306, 0.5338", "554.383, 431.485, 74.863, 0.4576", "554.943, 432.327, 75.871, 0.4068", "555.505, 433.238, 76.293, 0.3814", "555.739, 433.862, 78.3588, 0.356", "555.878, 434.104, 81.074, 0.305", "556.016, 434.347, 83.7892, 0.2542", "556.281, 434.878, 85.0077, 0.2288", "556.75, 435.832, 84.2324, 0.2288", "557.046, 436.77, 85.2054, 0.2542", "557.239, 437.674, 85.1043, 0.305", "557.534, 438.758, 85.4386, 0.356", "558.206, 439.519, 84.9621, 0.356", "558.872, 439.699, 82.95, 0.356", "558.745, 440.434, 81.5458, 0.4068", "558.075, 441.217, 80.4364, 0.483", "557.526, 441.867, 81.6088, 0.5338", "557.564, 442.741, 83.0474, 0.5084", "557.737, 443.324, 83.6676, 0.5084", "558.482, 443.546, 85.1242, 0.4576", "558.789, 444.367, 86.588, 0.4322", "558.984, 445.463, 87.1814, 0.4068", "559.265, 446.548, 86.9764, 0.4322", "559.934, 447.319, 85.9995, 0.4322", "560.956, 447.673, 85.2317, 0.3814", "561.922, 448.149, 85.9166, 0.4068", "562.047, 448.791, 88.2, 0.5084" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "534.271, 391.549, 33.075, 0.3814", "534.924, 391.491, 32.137, 0.6102", "535.786, 391.261, 30.6555, 0.6356", "536.557, 390.927, 29.6909, 0.5848", "537.661, 390.938, 29.1284, 0.5338", "538.448, 390.248, 29.5322, 0.5338", "539.15, 389.418, 30.221, 0.6102", "539.58, 388.398, 29.8231, 0.6356", "539.726, 387.325, 29.022, 0.6356", "539.878, 386.23, 29.2457, 0.5592", "540.325, 385.208, 29.3345, 0.483", "540.74, 384.198, 29.9922, 0.4068", "541.328, 383.274, 30.0896, 0.4068", "542.059, 382.639, 28.7843, 0.483", "543.031, 382.062, 28.6364, 0.5338", "543.885, 381.358, 28.716, 0.5592", "544.554, 380.453, 28.3234, 0.5084", "544.901, 379.386, 28.0266, 0.483", "545.689, 378.747, 28.852, 0.4576", "546.552, 378.642, 27.4417, 0.4576", "547.429, 378.002, 27.4786, 0.4576", "548.327, 377.322, 27.7068, 0.4576", "548.994, 377.11, 26.0187, 0.483", "549.898, 377.359, 26.4202, 0.483", "550.685, 377.716, 28.1154, 0.483", "551.525, 377.276, 27.4154, 0.4322", "551.703, 376.307, 26.052, 0.4322", "552.202, 375.42, 25.2367, 0.4322", "553.133, 375.061, 23.9599, 0.4322", "554.202, 374.813, 23.6642, 0.4068", "555.171, 375.222, 23.8168, 0.3814", "555.632, 375.994, 25.1303, 0.4322", "555.947, 376.716, 23.5598, 0.483", "556.706, 376.934, 24.0797, 0.5338", "557.838, 377.101, 24.1506, 0.5084", "558.888, 376.956, 23.8568, 0.4576", "559.445, 377.279, 21.8366, 0.4068", "560.041, 378.099, 22.2359, 0.3814", "560.797, 377.807, 21.7711, 0.4576", "561.659, 377.142, 20.9661, 0.5338", "562.616, 376.536, 20.8606, 0.6356", "563.594, 375.992, 20.2919, 0.6102", "564.508, 375.323, 20.1496, 0.5848", "565.365, 374.66, 21.0, 0.5084" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "534.271, 391.549, 33.075, 0.3814", "535.37, 390.861, 32.431, 0.483", "536.036, 390.133, 31.6028, 0.4576", "536.935, 389.829, 33.1027, 0.4576", "537.698, 389.378, 33.7714, 0.4322", "538.317, 388.582, 32.4943, 0.3814", "538.728, 387.636, 31.4345, 0.356", "538.624, 386.641, 30.7283, 0.3814", "538.938, 385.871, 31.64, 0.4576", "539.062, 385.396, 31.9553, 0.483", "539.502, 384.351, 32.0656, 0.483", "539.429, 383.245, 31.5342, 0.483", "539.708, 382.208, 30.5939, 0.5338", "539.667, 381.122, 29.8544, 0.6356", "539.263, 380.064, 29.82, 0.6864", "538.711, 379.1, 30.4212, 0.7118", "538.395, 378.042, 29.983, 0.6102", "538.323, 377.126, 28.3786, 0.5084", "537.836, 376.226, 27.3804, 0.3814", "537.195, 375.401, 28.224, 0.3304", "536.333, 374.784, 28.6502, 0.305", "536.438, 373.9, 27.851, 0.3304", "537.19, 373.136, 26.948, 0.4068", "537.591, 372.077, 27.0631, 0.5084", "537.833, 370.971, 26.8736, 0.5338", "538.107, 370.002, 25.797, 0.4576", "538.443, 369.151, 25.0222, 0.356", "537.815, 368.49, 25.6001, 0.305", "537.52, 367.425, 25.8994, 0.356", "537.13, 366.434, 24.9186, 0.4322", "536.823, 365.444, 24.9365, 0.5338", "536.822, 364.392, 25.958, 0.6102", "536.942, 363.368, 25.5164, 0.661", "537.353, 362.36, 24.7136, 0.7118", "537.753, 361.522, 25.9244, 0.7118", "537.851, 360.662, 24.6168, 0.6864", "537.452, 359.706, 25.1902, 0.6102", "536.624, 358.922, 25.1742, 0.5338", "536.151, 358.134, 23.9725, 0.5084", "536.276, 357.172, 23.4637, 0.483", "536.693, 356.154, 22.96, 0.483", "536.992, 355.103, 22.2846, 0.4068", "537.804, 354.431, 22.1757, 0.3814", "538.852, 353.991, 22.0508, 0.356", "539.674, 353.26, 21.4729, 0.4322", "540.706, 353.001, 20.5268, 0.5084", "541.809, 352.709, 20.7152, 0.5592", "542.901, 352.379, 20.6447, 0.5084", "543.961, 351.972, 20.3073, 0.3814", "545.013, 351.53, 20.1524, 0.2796", "546.067, 351.087, 19.9979, 0.2288", "547.12, 350.645, 19.8433, 0.2288", "548.146, 350.155, 19.6927, 0.2288", "548.635, 349.38, 19.9035, 0.2542", "548.335, 348.353, 20.6637, 0.2796", "548.411, 347.226, 20.9966, 0.305", "548.76, 346.147, 21.2492, 0.3304", "549.302, 345.185, 21.1226, 0.4068", "549.992, 344.369, 20.5663, 0.5084", "550.812, 343.789, 20.7276, 0.5338", "551.494, 342.919, 20.741, 0.5084", "552.068, 341.954, 21.2696, 0.4322", "552.494, 341.032, 20.776, 0.4068", "552.891, 340.033, 20.6016, 0.356", "553.508, 339.115, 20.013, 0.3304", "554.051, 338.125, 19.7674, 0.305", "554.87, 337.365, 19.6577, 0.2796", "555.781, 336.673, 19.7408, 0.2542", "556.692, 335.983, 19.8254, 0.2288", "557.603, 335.29, 19.9097, 0.2288", "558.513, 334.599, 19.9945, 0.2288", "559.424, 333.907, 20.0794, 0.2288", "560.335, 333.216, 20.1639, 0.2288", "561.245, 332.524, 20.2485, 0.2288", "562.156, 331.833, 20.333, 0.2542", "563.067, 331.141, 20.4179, 0.2796", "563.5, 330.389, 20.9196, 0.3304", "564.215, 329.523, 20.6427, 0.3304", "564.771, 328.54, 20.4445, 0.356", "564.793, 327.421, 19.9189, 0.3304", "564.966, 326.311, 20.3445, 0.3304", "565.357, 325.283, 19.8486, 0.2796", "565.392, 324.307, 19.838, 0.2542", "565.517, 323.282, 19.8514, 0.2542", "565.237, 322.324, 21.0532, 0.305", "565.078, 321.221, 20.7735, 0.4068", "565.141, 320.144, 21.4631, 0.483", "565.278, 319.081, 20.8104, 0.5592", "565.484, 317.97, 20.8438, 0.5848", "565.424, 316.841, 20.9076, 0.6356", "565.197, 315.741, 21.3926, 0.661", "565.102, 314.633, 21.4858, 0.6864", "565.367, 313.554, 21.67, 0.661", "565.784, 312.499, 21.6891, 0.6356", "566.107, 311.41, 21.9394, 0.5592", "566.331, 310.363, 22.8662, 0.5084", "566.758, 309.322, 22.5924, 0.4322", "566.978, 308.206, 22.6948, 0.4576", "567.382, 307.145, 22.5075, 0.483", "567.744, 306.084, 21.9447, 0.5338", "568.057, 305.008, 21.4208, 0.483", "568.385, 304.029, 21.6992, 0.4068", "568.687, 303.091, 22.5366, 0.356", "568.78, 301.975, 22.0769, 0.3814", "568.82, 300.875, 22.4087, 0.4576", "568.708, 299.769, 22.211, 0.5084", "569.369, 298.927, 21.84, 0.5848" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_20",
    "id" : "apic_20",
    "points3d" : [ "583.53, 366.318, 40.8878, 0.356", "587.215, 365.851, 43.68, 0.2288", "588.016, 365.851, 43.68, 0.2288", "588.817, 365.851, 43.68, 0.2288", "589.617, 365.851, 43.68, 0.2542", "590.418, 365.851, 43.68, 0.2796", "591.219, 365.851, 43.68, 0.305", "592.02, 365.851, 43.68, 0.2796", "592.82, 365.851, 43.68, 0.2542", "593.622, 365.851, 43.68, 0.2288", "594.422, 365.851, 43.68, 0.2288", "594.651, 365.851, 43.68, 0.2288", "594.88, 365.851, 43.68, 0.2288", "595.096, 365.978, 43.68, 0.2288", "595.109, 366.182, 43.68, 0.2542" ],
    "parent" : "apic_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "583.53, 366.318, 40.8878, 0.356", "584.616, 366.523, 40.4776, 0.356", "585.559, 367.147, 40.2324, 0.356", "586.442, 367.862, 39.9778, 0.305", "587.254, 368.601, 39.2216, 0.2796", "588.098, 369.321, 39.4103, 0.2796", "588.953, 370.026, 38.8433, 0.356", "589.68, 370.881, 38.358, 0.4068", "590.542, 371.516, 37.5253, 0.4576", "591.557, 371.928, 37.3215, 0.4068", "592.625, 371.887, 36.8382, 0.356", "593.497, 372.485, 36.4918, 0.305", "594.395, 373.151, 36.6363, 0.3304", "595.447, 373.365, 36.0816, 0.3304", "596.578, 373.343, 36.0049, 0.356", "597.714, 373.386, 35.777, 0.3304", "598.841, 373.255, 35.929, 0.3304", "599.689, 372.745, 35.1708, 0.2796", "600.534, 372.125, 34.1457, 0.2796", "601.63, 372.029, 34.16, 0.2796" ],
    "parent" : "apic_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "497.518, 391.111, 47.4891, 0.4322", "497.101, 391.483, 48.19, 0.305", "496.34, 392.159, 49.4679, 0.2542", "495.579, 392.835, 50.7455, 0.2288", "494.819, 393.512, 52.0234, 0.2542", "494.059, 394.189, 53.3014, 0.3304", "493.298, 394.865, 54.5796, 0.4068", "493.101, 395.831, 55.3437, 0.4322", "492.596, 396.723, 55.946, 0.356", "491.924, 397.476, 56.0, 0.2796", "491.778, 398.604, 55.9644, 0.2288", "491.159, 399.369, 55.5736, 0.2288", "490.206, 399.898, 55.1384, 0.2288", "489.441, 400.456, 56.4427, 0.2542", "488.75, 401.264, 57.3594, 0.305", "487.98, 401.631, 56.0451, 0.3814", "487.178, 402.431, 56.2456, 0.4068", "486.562, 403.146, 57.1805, 0.3814", "486.028, 403.946, 58.2008, 0.3304", "485.24, 404.775, 58.2414, 0.305", "484.604, 405.688, 58.7625, 0.305", "484.076, 406.699, 58.8, 0.2796", "483.384, 407.569, 58.623, 0.2542", "482.98, 408.368, 57.0363, 0.2542", "482.122, 409.078, 56.4217, 0.2796", "481.34, 409.875, 55.8183, 0.305", "480.695, 410.392, 56.8406, 0.2796", "479.715, 410.467, 57.6321, 0.2542", "478.655, 410.736, 58.2994, 0.2288", "477.73, 411.358, 57.9642, 0.2796", "476.908, 412.147, 57.843, 0.3304", "475.815, 412.441, 57.6117, 0.3814", "474.689, 412.566, 57.4619, 0.3304", "473.592, 412.747, 57.9508, 0.2796", "472.549, 412.649, 57.9194, 0.2542", "471.492, 412.442, 57.2205, 0.2796", "470.479, 412.184, 58.0787, 0.305", "469.583, 411.877, 59.5529, 0.2796", "468.785, 412.276, 60.9498, 0.2542", "467.71, 412.444, 60.9753, 0.2542", "467.035, 413.273, 60.9157, 0.305", "466.648, 414.332, 60.6231, 0.3814", "465.836, 414.947, 60.48, 0.4068", "464.707, 414.916, 60.6326, 0.4322", "463.581, 414.849, 60.632, 0.4576", "462.652, 415.412, 60.1801, 0.5592", "461.9, 416.249, 60.4083, 0.5848", "461.199, 417.139, 60.7068, 0.5592", "460.296, 417.727, 61.6235, 0.483", "459.392, 418.394, 62.0141, 0.4576", "458.555, 419.083, 62.6256, 0.4576", "457.566, 419.647, 62.44, 0.4576", "456.497, 419.966, 62.7273, 0.483", "455.458, 420.264, 63.532, 0.483", "454.674, 420.968, 64.4423, 0.4322", "454.312, 421.993, 65.1263, 0.3814", "454.29, 423.122, 65.037, 0.4068", "453.906, 423.87, 66.68, 0.483", "453.138, 424.565, 67.3204, 0.483", "452.13, 424.321, 68.2671, 0.4322", "451.031, 424.319, 67.8056, 0.3814", "450.081, 424.493, 68.4813, 0.4322", "449.367, 424.954, 69.9986, 0.4576", "448.296, 425.073, 70.3408, 0.483", "447.247, 425.109, 71.4291, 0.4322", "446.329, 424.603, 72.4802, 0.3814", "445.224, 424.45, 72.4038, 0.356", "444.439, 424.732, 74.1028, 0.3814", "443.952, 425.241, 76.186, 0.4576", "443.21, 425.879, 76.4098, 0.483", "442.27, 426.254, 77.56, 0.4576" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "497.518, 391.111, 47.4891, 0.4322", "496.883, 390.167, 47.6339, 0.4068", "496.188, 389.26, 47.7758, 0.483" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "496.16, 405.271, 32.7256, 0.356", "495.128, 404.735, 31.0248, 0.2542", "494.256, 404.282, 29.5896, 0.2796", "493.385, 403.785, 28.261, 0.3814", "492.513, 403.157, 27.8326, 0.5338", "491.895, 402.331, 28.2957, 0.6102", "491.49, 401.486, 27.4196, 0.6102", "490.765, 401.043, 25.5511, 0.5338", "489.836, 400.902, 24.005, 0.5084", "489.081, 401.458, 22.911, 0.5084", "488.4, 401.915, 24.327, 0.5084", "487.897, 402.903, 23.8974, 0.4576", "487.217, 403.711, 24.1587, 0.4322", "486.898, 404.458, 22.7251, 0.4322", "486.183, 405.288, 22.5173, 0.4576", "485.249, 405.784, 21.7034, 0.4068", "484.214, 406.026, 22.4048, 0.3814", "483.219, 406.36, 23.247, 0.3304", "482.385, 407.05, 22.8469, 0.3814", "481.732, 407.954, 22.2258, 0.4068", "481.19, 408.926, 21.5928, 0.4576", "480.366, 409.666, 22.12, 0.4068" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "496.16, 405.271, 32.7256, 0.356", "496.622, 404.904, 33.0044, 0.356", "496.931, 403.977, 32.6231, 0.4322", "496.68, 402.96, 31.5512, 0.483", "496.223, 402.069, 30.235, 0.4322", "495.82, 401.337, 28.3699, 0.3304", "495.768, 400.423, 28.6824, 0.2796", "496.053, 399.539, 30.3072, 0.305", "495.871, 398.451, 29.7606, 0.4068", "495.13, 397.603, 29.2774, 0.483", "494.257, 396.904, 28.705, 0.5338", "493.557, 396.004, 28.6742, 0.483", "493.233, 394.957, 27.9101, 0.4068", "492.651, 394.176, 26.4432, 0.305", "492.095, 393.338, 25.1124, 0.2796", "491.48, 392.434, 24.4342, 0.3304", "490.52, 391.905, 25.2, 0.4322", "489.671, 391.15, 25.4341, 0.5084", "488.903, 390.379, 25.2274, 0.5084", "488.165, 389.661, 25.8656, 0.483", "487.732, 388.707, 26.8439, 0.4322", "487.23, 387.689, 26.8489, 0.3814" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "456.342, 450.05, 40.32, 0.6864", "455.63, 450.145, 39.972, 0.2288", "454.523, 450.179, 40.1187, 0.305", "453.441, 450.447, 40.0574, 0.3814", "453.092, 451.322, 39.0379, 0.4068", "452.341, 452.117, 39.8518, 0.4068", "451.441, 452.698, 40.1848, 0.356", "450.316, 452.771, 39.9157, 0.3814", "449.213, 452.892, 40.3018, 0.4068", "448.174, 453.301, 40.2828, 0.5084", "447.081, 453.552, 40.1811, 0.5592", "446.022, 453.961, 40.206, 0.6102", "445.081, 454.451, 41.0838, 0.6102", "444.372, 455.282, 40.7179, 0.5592", "443.777, 456.186, 40.9466, 0.483", "442.794, 456.68, 40.6302, 0.3814", "441.701, 457.011, 40.6, 0.356", "440.729, 457.531, 39.9162, 0.356", "439.717, 458.022, 40.2671, 0.356", "438.866, 458.751, 39.709, 0.305", "437.984, 459.436, 39.2916, 0.2796", "436.983, 459.885, 38.5454, 0.3304", "435.993, 460.445, 38.4121, 0.4068", "435.013, 460.95, 38.2396, 0.4322", "434.0, 461.358, 38.297, 0.3814", "432.915, 461.397, 38.8385, 0.3304", "431.971, 461.295, 37.3862, 0.305", "430.93, 460.883, 37.0944, 0.305", "429.89, 460.452, 37.5897, 0.356", "428.954, 460.632, 37.8171, 0.4322", "427.964, 461.068, 38.2567, 0.5084", "426.863, 461.049, 38.8741, 0.5084", "425.763, 461.071, 38.5532, 0.5084", "424.653, 461.261, 38.08, 0.483" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "456.342, 450.05, 40.32, 0.6864", "456.267, 451.151, 40.7548, 0.4322", "455.552, 451.899, 40.1072, 0.4322", "455.208, 452.819, 38.9382, 0.4068", "455.128, 453.779, 37.4346, 0.4068", "454.884, 454.737, 38.5034, 0.3814", "454.114, 455.492, 39.41, 0.4322", "453.159, 455.921, 39.5783, 0.5084", "452.208, 456.284, 38.794, 0.5848", "451.282, 456.665, 39.0821, 0.5848", "450.331, 457.066, 40.0784, 0.5592", "449.76, 457.949, 39.6488, 0.5338", "449.276, 458.931, 39.0205, 0.5084", "448.624, 459.786, 39.622, 0.4322", "448.266, 460.796, 39.1784, 0.3814", "447.938, 461.798, 38.6966, 0.356", "447.144, 462.408, 39.4579, 0.3814", "446.368, 463.199, 39.8762, 0.3304", "445.875, 464.22, 39.6878, 0.305", "444.915, 464.715, 39.5693, 0.305", "444.372, 465.642, 39.5184, 0.3814", "444.302, 466.768, 39.685, 0.4068", "444.294, 467.849, 38.9802, 0.4068", "444.142, 468.888, 39.9104, 0.3814", "444.426, 469.953, 39.7225, 0.4068", "444.349, 471.087, 39.5528, 0.4068", "444.217, 472.217, 39.8219, 0.3814", "444.128, 473.336, 39.8042, 0.3304", "444.379, 474.416, 39.5338, 0.3304", "444.444, 475.539, 39.837, 0.356", "444.395, 476.664, 39.4332, 0.3814", "444.341, 477.779, 38.9054, 0.356", "444.27, 478.913, 38.8273, 0.356", "444.144, 480.043, 38.7388, 0.3304", "444.31, 481.131, 38.8581, 0.3304", "444.676, 482.188, 38.8489, 0.305", "444.872, 483.299, 38.7873, 0.305", "444.902, 484.438, 38.7668, 0.305", "445.009, 485.577, 38.6442, 0.2796", "444.862, 486.698, 38.7769, 0.2796", "444.224, 487.577, 39.6169, 0.305", "443.592, 488.526, 39.744, 0.356", "442.79, 489.233, 39.4033, 0.3814", "441.742, 489.56, 39.7062, 0.4068", "441.107, 490.363, 40.2052, 0.4322", "440.859, 491.476, 40.1296, 0.4576", "440.544, 492.565, 39.9568, 0.4068", "440.129, 493.569, 40.5356, 0.356", "439.907, 494.651, 40.9158, 0.2796", "440.193, 495.716, 40.6725, 0.2796", "440.713, 496.726, 40.3586, 0.305", "440.921, 497.827, 39.9053, 0.356", "441.927, 498.326, 40.32, 0.356" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "508.062, 436.919, 52.7332, 0.5592", "507.766, 437.262, 52.7772, 0.4322", "507.015, 438.125, 52.8872, 0.3304", "506.602, 439.104, 53.3078, 0.2796", "506.599, 439.941, 54.6409, 0.305", "505.898, 440.785, 54.6801, 0.3304", "505.584, 441.842, 55.3106, 0.3814", "505.443, 442.898, 55.487, 0.4576", "505.614, 444.006, 55.0312, 0.4576", "505.898, 445.074, 55.4333, 0.4322", "505.861, 446.103, 54.8587, 0.3814", "505.431, 447.151, 54.602, 0.3814", "505.047, 448.18, 55.0592, 0.3814", "505.138, 449.259, 54.325, 0.356", "505.361, 450.364, 54.6941, 0.356", "505.529, 451.45, 54.8537, 0.3814", "505.68, 452.563, 54.7607, 0.4576", "505.836, 453.686, 55.076, 0.483", "505.789, 454.819, 54.9433, 0.4322", "505.979, 455.773, 53.6427, 0.356", "505.724, 456.795, 54.4337, 0.3304", "505.478, 457.9, 54.7963, 0.4068", "504.975, 458.887, 55.1589, 0.4576", "504.31, 459.794, 55.323, 0.4576", "503.902, 460.848, 55.0323, 0.356", "503.832, 461.948, 55.3795, 0.2796", "503.852, 463.057, 56.0703, 0.2288", "503.872, 464.165, 56.7608, 0.2288", "503.893, 465.274, 57.4515, 0.2288", "503.913, 466.383, 58.142, 0.2288", "503.932, 467.492, 58.8, 0.2288", "503.932, 468.636, 58.8, 0.2288", "503.932, 469.78, 58.8, 0.2288", "503.932, 470.924, 58.8, 0.2288", "503.829, 472.06, 58.8, 0.2288", "503.539, 473.165, 58.8, 0.2288", "503.014, 474.174, 58.8, 0.2288", "502.902, 475.293, 58.8, 0.2288", "502.902, 476.437, 58.8, 0.2288", "502.773, 477.571, 58.8, 0.2288", "502.431, 478.642, 59.0822, 0.2288", "501.967, 479.631, 59.36, 0.2288", "500.991, 480.118, 59.36, 0.2288", "500.958, 481.256, 59.36, 0.2288", "500.958, 482.4, 59.36, 0.2288", "500.958, 483.544, 59.36, 0.2288", "500.958, 484.688, 59.36, 0.2288", "500.958, 485.832, 59.36, 0.2288", "500.958, 486.976, 59.36, 0.2288", "500.958, 488.12, 59.36, 0.2288", "500.958, 489.264, 59.36, 0.2288", "500.958, 490.408, 59.36, 0.2288", "500.314, 491.213, 59.36, 0.2288", "499.197, 491.348, 59.36, 0.2288", "498.053, 491.307, 59.36, 0.2288", "497.043, 490.834, 59.36, 0.2542", "496.038, 490.318, 59.36, 0.305" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "508.062, 436.919, 52.7332, 0.5592", "508.733, 437.636, 52.3536, 0.3814", "508.704, 438.572, 50.9608, 0.4068", "508.326, 439.591, 50.8136, 0.3814", "508.641, 440.323, 48.9387, 0.356", "508.571, 441.225, 47.6409, 0.3814", "509.165, 442.111, 47.7361, 0.483", "509.54, 443.144, 48.1527, 0.5338", "509.638, 444.245, 47.9758, 0.5848", "509.887, 445.002, 47.3152, 0.5592", "509.294, 445.467, 45.2346, 0.5592", "508.306, 445.97, 45.5563, 0.483", "507.387, 446.002, 44.1708, 0.4322", "506.523, 445.694, 42.9265, 0.356", "505.94, 446.361, 42.8618, 0.3304", "505.876, 447.463, 43.1032, 0.305", "505.877, 448.58, 42.5275, 0.305", "505.704, 449.341, 40.5731, 0.356", "505.044, 450.135, 39.8056, 0.4068", "505.38, 451.222, 39.9921, 0.4576", "505.408, 452.346, 39.9921, 0.4068", "505.092, 453.416, 39.8314, 0.356", "505.075, 454.555, 39.912, 0.305", "505.177, 455.68, 39.5976, 0.356", "505.523, 456.709, 38.8749, 0.4068", "506.0, 457.716, 38.5398, 0.4576", "506.332, 458.752, 37.8179, 0.4322", "506.522, 459.857, 37.758, 0.3814", "506.991, 460.865, 37.7658, 0.3304", "507.409, 461.884, 37.3528, 0.305", "507.862, 462.749, 36.2359, 0.305", "508.415, 463.706, 35.8834, 0.305", "508.604, 464.805, 35.4343, 0.3304", "509.079, 465.837, 35.28, 0.356" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "495.047, 432.432, 53.0132, 0.3814", "495.209, 433.051, 52.0041, 0.5338", "495.232, 433.998, 50.4678, 0.4322", "494.64, 434.933, 50.1774, 0.3304", "494.076, 435.807, 49.2957, 0.2542", "493.312, 436.652, 49.3998, 0.2288", "492.495, 437.392, 49.9075, 0.2796", "491.828, 437.337, 51.7154, 0.356", "491.355, 438.113, 52.6313, 0.4322", "490.539, 438.897, 52.6806, 0.4068", "489.678, 439.232, 53.671, 0.3304", "489.132, 440.191, 53.4024, 0.2542", "488.415, 440.999, 53.0807, 0.2288", "488.359, 442.082, 52.4922, 0.2288", "488.549, 443.126, 52.7428, 0.2796", "488.392, 443.909, 51.942, 0.3304", "487.434, 444.174, 50.7248, 0.3814", "486.322, 443.998, 50.4244, 0.356", "485.389, 444.481, 50.3569, 0.3304", "484.52, 445.146, 49.6098, 0.356", "484.159, 445.659, 51.6099, 0.3814", "483.473, 446.493, 50.7013, 0.4068", "483.284, 447.517, 49.9957, 0.3304", "483.174, 448.559, 50.7867, 0.305", "482.977, 449.606, 50.0732, 0.2796", "482.664, 450.501, 49.1582, 0.305", "482.424, 451.571, 49.2792, 0.2796", "482.031, 452.596, 49.2794, 0.2796", "481.118, 453.191, 49.737, 0.3304", "480.493, 453.029, 48.2392, 0.4068", "479.768, 453.873, 48.5478, 0.4322", "479.402, 454.92, 48.461, 0.3814", "479.144, 456.003, 48.4526, 0.3304", "478.56, 456.62, 47.1419, 0.3304", "478.421, 457.371, 46.76, 0.3814" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "495.047, 432.432, 53.0132, 0.3814", "494.689, 432.481, 53.2921, 0.4576", "493.835, 433.058, 54.3432, 0.483", "492.918, 433.665, 54.5695, 0.4576", "491.986, 434.253, 54.3567, 0.4068", "491.103, 434.951, 53.895, 0.4068", "490.48, 435.094, 55.8947, 0.4068", "489.465, 435.562, 55.8452, 0.4068", "488.559, 435.992, 56.95, 0.3814", "487.514, 436.25, 57.5383, 0.4068", "486.596, 436.895, 57.9359, 0.4322", "485.725, 437.601, 58.3083, 0.483", "484.77, 438.024, 59.304, 0.483", "483.755, 438.532, 59.3233, 0.4576", "482.825, 439.143, 58.8171, 0.3814", "482.076, 439.787, 58.9711, 0.3814", "481.226, 439.329, 60.37, 0.4576", "480.281, 439.249, 61.4312, 0.5338", "479.375, 439.768, 62.5117, 0.5338", "478.779, 440.696, 62.7211, 0.4576", "477.78, 441.095, 63.5846, 0.4068", "477.102, 441.919, 64.4717, 0.4068", "476.768, 442.886, 65.5805, 0.4068", "476.466, 443.824, 66.8581, 0.4068", "475.799, 444.612, 67.1437, 0.356", "474.892, 444.383, 67.6637, 0.3814", "473.838, 444.021, 67.5338, 0.4576", "473.49, 443.369, 69.4688, 0.5848", "472.72, 444.005, 70.5995, 0.6102", "471.702, 444.49, 70.775, 0.5848", "470.586, 444.698, 71.015, 0.483", "469.526, 444.755, 71.6979, 0.4322", "468.523, 444.294, 72.4122, 0.356", "467.456, 444.025, 72.6312, 0.3304", "466.325, 444.142, 72.4878, 0.356", "465.207, 444.147, 72.634, 0.4068", "464.145, 443.898, 73.2976, 0.483", "463.217, 443.361, 74.1306, 0.4576", "462.206, 443.191, 75.0851, 0.4068", "461.12, 443.465, 75.523, 0.305", "460.109, 443.823, 76.468, 0.2542", "459.019, 443.977, 76.0214, 0.2288", "458.226, 444.439, 77.5124, 0.2288", "457.281, 444.796, 78.7758, 0.2288", "456.214, 445.106, 79.1056, 0.2288", "455.09, 445.245, 78.96, 0.2288", "453.947, 445.215, 78.96, 0.2288", "452.862, 444.966, 78.6559, 0.2796", "452.047, 444.268, 78.799, 0.3304", "451.126, 443.787, 79.7135, 0.4068", "450.118, 443.997, 80.8648, 0.3814", "449.117, 444.263, 82.0313, 0.356", "448.049, 444.205, 83.0038, 0.2796", "446.952, 444.055, 83.2062, 0.2542", "445.837, 444.091, 82.5964, 0.2288", "444.738, 443.942, 82.334, 0.2288", "443.838, 443.289, 82.4289, 0.2288", "443.029, 442.598, 83.0362, 0.2288", "442.016, 442.301, 84.1008, 0.2288", "441.215, 441.806, 85.3868, 0.2288", "440.334, 441.234, 85.9634, 0.2288", "439.302, 440.742, 85.965, 0.2288", "438.4, 440.049, 85.96, 0.2542", "437.558, 439.281, 85.7391, 0.356", "436.69, 438.538, 85.6808, 0.483", "436.039, 437.603, 85.5506, 0.6102", "434.949, 437.351, 85.4, 0.5848" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "520.749, 414.014, 56.0, 0.4576", "520.356, 413.181, 57.9188, 0.305", "519.986, 412.393, 59.7341, 0.2796", "519.888, 411.408, 60.0916, 0.2796", "519.367, 410.846, 61.3346, 0.3304", "518.82, 410.043, 62.713, 0.3304", "518.417, 409.044, 63.394, 0.3304", "517.827, 408.2, 62.3193, 0.2796", "517.219, 407.334, 61.88, 0.2542", "516.721, 406.34, 61.88, 0.2288", "516.15, 405.384, 62.2132, 0.2288", "515.562, 404.449, 62.8331, 0.2542", "514.943, 403.504, 62.7721, 0.2796", "514.388, 402.53, 63.2234, 0.305", "513.703, 401.713, 64.0898, 0.3304", "513.713, 400.645, 63.11, 0.356", "513.268, 399.757, 62.8432, 0.4322", "512.906, 398.845, 62.7822, 0.483", "512.659, 397.839, 61.7263, 0.6102", "512.192, 396.875, 62.0945, 0.661", "511.94, 395.824, 63.0, 0.661" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "520.749, 414.014, 56.0, 0.4576", "519.638, 414.984, 55.3946, 0.356", "518.677, 415.277, 56.341, 0.356", "517.831, 414.916, 57.1752, 0.4576", "516.793, 415.383, 57.377, 0.5592", "516.74, 416.042, 56.2346, 0.5592", "517.206, 416.514, 57.3936, 0.483", "517.169, 417.245, 59.4605, 0.4068", "516.81, 418.203, 60.0326, 0.3814", "516.156, 418.809, 60.9406, 0.3814", "515.099, 418.896, 61.8164, 0.4068", "514.559, 419.833, 61.88, 0.483" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "496.188, 389.26, 47.7758, 0.483", "496.148, 387.759, 47.8915, 0.4068", "496.051, 386.728, 46.9616, 0.4322", "495.863, 386.055, 48.8754, 0.4068", "496.256, 385.065, 49.369, 0.3814", "496.417, 384.355, 47.6832, 0.3304", "497.172, 383.573, 47.4575, 0.305", "497.354, 382.616, 48.5713, 0.3304", "497.405, 381.547, 49.422, 0.3304", "497.953, 380.589, 49.2584, 0.356", "498.212, 379.689, 48.6217, 0.356", "498.462, 378.678, 48.7049, 0.4068", "499.12, 377.78, 48.9462, 0.4576", "499.72, 376.9, 49.8025, 0.5338", "500.441, 376.02, 49.5732, 0.6102", "500.982, 375.034, 49.1716, 0.661", "501.522, 374.105, 49.7781, 0.6864", "501.684, 373.08, 50.7542, 0.6356", "502.143, 372.092, 50.8052, 0.5338", "502.4, 371.249, 49.156, 0.3814", "502.908, 370.534, 49.3002, 0.305", "503.466, 370.261, 51.4514, 0.305", "504.211, 369.934, 53.2596, 0.3814", "505.297, 369.704, 53.7205, 0.4068", "506.411, 369.487, 53.4489, 0.3814" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "496.188, 389.26, 47.7758, 0.483", "495.714, 388.83, 48.2017, 0.5848", "494.789, 388.18, 48.6184, 0.5848", "493.76, 387.686, 48.7239, 0.5592", "492.759, 387.135, 48.776, 0.5592", "491.842, 386.458, 48.9695, 0.6102", "490.91, 385.836, 49.518, 0.661", "490.064, 385.076, 49.8, 0.6864", "489.678, 384.012, 49.8389, 0.661", "489.209, 382.969, 49.84, 0.6356", "488.471, 382.096, 49.84, 0.5592", "487.66, 381.291, 49.84, 0.5084", "486.803, 380.532, 49.84, 0.4322", "485.882, 379.855, 49.84, 0.4322", "484.945, 379.199, 49.84, 0.4576", "483.928, 378.673, 49.8403, 0.5084", "482.832, 378.348, 49.8422, 0.5084", "481.732, 378.037, 49.8532, 0.4576", "480.734, 377.477, 49.9125, 0.4322", "479.862, 376.749, 50.2107, 0.4576", "479.124, 375.897, 50.7007, 0.483", "478.446, 374.977, 50.7534, 0.4322", "477.754, 374.07, 50.9603, 0.3814" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "487.23, 387.689, 26.8489, 0.3814", "486.996, 387.663, 25.7835, 0.356", "486.38, 387.501, 23.4842, 0.305", "485.42, 387.514, 22.8794, 0.356", "484.387, 387.387, 23.8756, 0.3814", "483.945, 387.898, 25.7541, 0.4576", "482.894, 388.322, 25.7186, 0.4322", "482.068, 388.913, 25.2778, 0.4576", "481.193, 388.817, 24.1534, 0.3814", "480.471, 389.492, 23.5852, 0.4068", "479.822, 390.018, 22.528, 0.3814", "478.882, 390.319, 23.7807, 0.4322", "478.13, 391.06, 24.1178, 0.4068", "477.741, 392.132, 24.3141, 0.4068", "477.109, 393.043, 23.9425, 0.356", "476.665, 393.607, 21.9229, 0.356", "475.952, 394.299, 22.5635, 0.3814", "475.437, 395.063, 22.2919, 0.4576", "474.561, 395.649, 23.0807, 0.5084", "473.496, 396.039, 23.2792, 0.5338", "472.831, 396.921, 23.695, 0.5338", "472.519, 397.904, 22.7699, 0.483", "472.447, 398.767, 21.464, 0.4068", "472.114, 399.537, 22.7186, 0.305", "471.778, 399.786, 25.1059, 0.2542", "471.234, 400.652, 25.9316, 0.2542", "470.671, 401.335, 24.2183, 0.2796", "470.957, 402.079, 24.0965, 0.3304", "470.588, 402.947, 25.17, 0.356", "469.497, 403.146, 25.76, 0.4068" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "487.23, 387.689, 26.8489, 0.3814", "487.414, 387.106, 27.057, 0.4068", "487.066, 386.133, 26.1162, 0.4068", "486.206, 385.641, 27.3098, 0.3814", "485.133, 385.543, 27.7309, 0.4068", "484.239, 384.924, 27.0777, 0.4068", "484.071, 383.958, 27.7584, 0.4322", "484.612, 383.154, 29.0562, 0.4576", "485.312, 382.721, 30.9627, 0.5084", "486.391, 382.681, 31.5157, 0.483", "486.259, 382.91, 28.1448, 0.2796", "486.672, 382.962, 25.9235, 0.2288", "487.238, 382.125, 25.1434, 0.2796", "487.266, 381.023, 25.1916, 0.3814", "486.924, 379.943, 25.4478, 0.5084", "486.769, 378.891, 24.5764, 0.5338", "486.658, 377.792, 25.2179, 0.483", "486.436, 376.93, 24.4056, 0.3814", "486.515, 376.017, 23.2081, 0.356", "486.451, 374.905, 22.6481, 0.356", "485.684, 374.116, 22.7055, 0.4068", "484.921, 373.43, 21.5127, 0.4576", "484.016, 372.848, 21.4598, 0.5084", "483.152, 372.263, 22.314, 0.5338", "482.19, 371.655, 22.286, 0.483", "481.118, 371.306, 21.9993, 0.4576", "480.318, 370.556, 21.8291, 0.4068", "479.557, 369.774, 21.7288, 0.4068", "478.508, 369.448, 22.1522, 0.3304", "477.454, 369.195, 22.3479, 0.305", "477.122, 368.331, 23.2285, 0.305", "476.536, 367.512, 22.9502, 0.3814", "476.315, 366.7, 22.2799, 0.4068", "475.419, 366.044, 22.1679, 0.3814", "474.839, 365.245, 21.2229, 0.305", "473.944, 364.72, 22.1071, 0.2796", "473.135, 364.111, 22.5803, 0.305", "472.306, 363.334, 22.4675, 0.356", "471.828, 362.316, 22.3009, 0.356", "470.984, 361.733, 21.28, 0.3304" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "514.559, 419.833, 61.88, 0.483", "514.163, 419.381, 64.5442, 0.4068", "513.799, 418.965, 66.9956, 0.3304", "513.453, 418.328, 68.6515, 0.2796", "513.143, 417.226, 68.6364, 0.2542", "512.833, 416.124, 68.621, 0.2288", "512.523, 415.024, 68.6059, 0.2288", "512.213, 413.922, 68.5905, 0.2288", "511.906, 412.927, 69.2577, 0.2542", "511.6, 412.107, 71.0609, 0.3304", "511.296, 411.286, 72.8641, 0.4068", "511.48, 410.23, 73.8186, 0.4322", "511.674, 409.17, 74.7541, 0.356", "511.868, 408.109, 75.6896, 0.2796", "512.065, 407.049, 76.6254, 0.2288", "512.151, 406.024, 77.7708, 0.2288", "512.07, 405.054, 79.2397, 0.2288", "511.989, 404.082, 80.7089, 0.2542", "511.909, 403.112, 82.178, 0.2796" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "514.559, 419.833, 61.88, 0.483", "513.315, 420.301, 62.613, 0.483", "513.013, 420.8, 64.2264, 0.483", "512.156, 421.208, 65.24, 0.483" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "506.411, 369.487, 53.4489, 0.3814", "506.165, 369.193, 51.1277, 0.3814", "505.832, 368.876, 48.5727, 0.356", "505.283, 368.392, 46.6108, 0.3814", "505.773, 367.659, 45.5034, 0.4322", "506.84, 367.597, 44.9196, 0.483", "507.732, 367.022, 44.1689, 0.483", "508.562, 366.273, 44.088, 0.5084", "509.182, 365.414, 44.4534, 0.483", "509.57, 364.367, 43.9118, 0.483", "510.145, 363.389, 43.7175, 0.4576", "510.996, 362.648, 44.0451, 0.4322", "511.859, 361.94, 43.8746, 0.3814", "512.224, 360.886, 43.556, 0.305", "512.484, 359.794, 43.5114, 0.305", "512.926, 358.749, 43.8698, 0.3304", "512.987, 357.626, 43.6878, 0.4068", "512.909, 356.486, 43.7402, 0.4068", "512.547, 355.622, 44.7874, 0.4322", "512.018, 354.659, 44.205, 0.4068", "511.372, 353.72, 44.1188, 0.4322", "510.865, 352.718, 43.6696, 0.4068", "510.661, 351.654, 43.9118, 0.4068", "510.122, 350.824, 43.5588, 0.3304", "509.671, 349.81, 43.3969, 0.2796", "509.324, 348.798, 44.308, 0.2288", "508.898, 347.943, 44.6804, 0.2542", "508.196, 347.354, 43.6514, 0.2796", "507.724, 346.324, 43.7889, 0.3304", "507.345, 345.249, 43.9477, 0.356", "506.933, 344.195, 43.6458, 0.3814", "506.475, 343.156, 43.4899, 0.356", "506.003, 342.121, 43.3, 0.3304", "505.151, 341.487, 42.9492, 0.3304", "504.257, 340.812, 43.0119, 0.3814", "503.558, 339.959, 42.5144, 0.4068", "502.828, 339.101, 42.448, 0.3814", "502.486, 338.122, 41.673, 0.305", "503.184, 337.233, 41.2922, 0.2542", "503.465, 336.406, 40.8472, 0.2288", "502.812, 335.532, 40.0316, 0.2288", "502.497, 334.513, 39.2036, 0.2542", "502.67, 333.498, 38.1326, 0.2796", "503.103, 332.488, 38.1909, 0.305", "503.334, 331.375, 38.3177, 0.2796", "503.335, 330.232, 38.4367, 0.2542", "503.336, 329.096, 38.4801, 0.2288", "503.121, 328.012, 37.9117, 0.2288", "502.361, 327.312, 37.5315, 0.2288", "501.414, 326.797, 37.2859, 0.2288", "500.653, 325.968, 36.813, 0.2542", "500.215, 324.981, 36.5526, 0.2796", "500.271, 323.859, 36.1973, 0.3304", "500.566, 322.86, 35.1064, 0.356", "500.872, 321.793, 34.4963, 0.4068", "501.092, 320.673, 34.5352, 0.4068", "501.086, 319.541, 34.1849, 0.4322", "501.404, 318.456, 33.8114, 0.4322", "502.103, 317.586, 34.4019, 0.4576", "502.881, 316.817, 33.5916, 0.4068", "503.458, 315.862, 33.087, 0.3304", "503.549, 314.805, 33.6773, 0.2796", "503.338, 313.763, 33.1363, 0.305", "503.26, 312.688, 33.0859, 0.3814", "502.661, 311.899, 32.044, 0.4576", "502.023, 310.987, 32.3602, 0.5338", "501.872, 309.895, 31.988, 0.6102", "501.872, 308.805, 32.3327, 0.6356", "501.762, 307.691, 32.5906, 0.6356", "501.213, 306.815, 31.8035, 0.5848", "500.936, 305.759, 31.3804, 0.5592", "500.672, 304.663, 31.5932, 0.483", "500.633, 303.573, 32.3529, 0.4576", "500.181, 302.586, 32.3915, 0.4576", "499.29, 302.085, 31.4798, 0.5084", "498.301, 301.626, 30.7, 0.5084", "498.125, 300.616, 29.8416, 0.4322", "498.267, 299.56, 28.8504, 0.356", "498.368, 298.449, 28.5141, 0.3304", "498.611, 297.379, 27.8502, 0.3814", "498.562, 296.27, 27.6758, 0.4576", "498.344, 295.149, 27.8009, 0.5084", "499.229, 294.58, 26.9212, 0.5084", "499.795, 293.635, 26.3043, 0.5084", "499.872, 292.545, 25.9599, 0.5084", "499.586, 291.474, 26.4225, 0.5592", "499.292, 290.44, 26.1254, 0.5592", "498.504, 289.749, 25.6071, 0.5592", "497.655, 289.025, 25.1059, 0.5338", "497.002, 288.112, 25.4125, 0.5338", "497.178, 287.055, 24.7268, 0.5338", "497.473, 286.017, 25.5606, 0.5338", "497.781, 284.931, 25.3436, 0.5592", "498.016, 283.929, 25.4503, 0.5848", "498.53, 283.048, 25.9409, 0.6356", "499.069, 282.074, 25.396, 0.661", "499.464, 281.059, 25.8661, 0.7118", "499.125, 279.989, 25.4691, 0.7372", "498.926, 278.871, 25.4862, 0.7626", "498.489, 277.824, 25.6522, 0.6864", "498.036, 276.845, 25.6637, 0.5592", "497.621, 275.855, 25.1619, 0.4068", "497.292, 274.84, 26.1111, 0.356", "496.954, 273.759, 26.32, 0.356" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "506.411, 369.487, 53.4489, 0.3814", "506.657, 369.161, 52.701, 0.4068", "507.249, 368.311, 53.835, 0.4068", "507.449, 367.369, 55.3232, 0.4322", "507.441, 366.403, 56.6079, 0.4068", "506.909, 365.811, 58.415, 0.4322", "506.408, 364.887, 58.8949, 0.4322", "507.157, 364.055, 59.1506, 0.4322", "507.625, 363.124, 59.897, 0.3814", "507.43, 362.132, 58.9064, 0.305", "507.251, 361.013, 59.08, 0.2796", "507.207, 359.874, 59.192, 0.2796", "507.047, 358.755, 59.5921, 0.305", "507.004, 357.651, 60.0144, 0.305", "507.422, 356.636, 60.6155, 0.3304", "507.392, 355.807, 62.3683, 0.4068", "507.14, 354.752, 62.813, 0.4576", "507.045, 353.69, 63.747, 0.4576", "507.589, 352.729, 64.0898, 0.356", "507.286, 352.654, 66.6551, 0.2796", "506.433, 352.466, 67.6925, 0.2288", "506.199, 351.56, 69.1253, 0.2288", "506.039, 350.597, 70.1319, 0.2288", "506.225, 349.503, 70.7384, 0.2288", "505.482, 348.774, 70.5961, 0.2288", "504.535, 348.191, 71.2564, 0.2288", "503.758, 347.578, 72.4987, 0.2288", "503.122, 346.939, 74.2224, 0.2288", "502.488, 346.298, 75.9464, 0.2288", "502.167, 345.314, 76.4543, 0.2288", "501.976, 344.186, 76.4523, 0.2288", "501.786, 343.058, 76.4506, 0.2288", "501.176, 342.205, 76.6609, 0.2288", "500.24, 341.565, 77.0367, 0.2288", "499.305, 340.926, 77.4127, 0.2288", "498.368, 340.286, 77.7885, 0.2288", "497.635, 339.65, 79.0586, 0.2288", "497.018, 339.015, 80.8284, 0.2288", "496.451, 338.288, 82.2279, 0.2288", "496.092, 337.202, 82.173, 0.2288", "496.191, 336.468, 83.3353, 0.2288", "496.708, 336.061, 85.6251, 0.2796", "497.226, 335.654, 87.9147, 0.3304" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "477.754, 374.07, 50.9603, 0.3814", "476.753, 374.654, 50.5565, 0.5338", "475.805, 375.266, 50.2135, 0.5084", "474.926, 375.925, 50.426, 0.4068", "473.984, 376.332, 50.2788, 0.3814", "473.025, 376.233, 50.5688, 0.3814", "472.677, 376.869, 52.479, 0.4322", "471.786, 377.368, 51.4268, 0.4322" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "477.754, 374.07, 50.9603, 0.3814", "477.221, 373.434, 50.9614, 0.3814", "476.609, 372.468, 50.967, 0.4576", "475.976, 371.516, 50.9953, 0.5338", "475.219, 370.661, 51.1168, 0.5592", "474.454, 369.849, 51.7434, 0.5338", "473.775, 368.946, 52.1584, 0.483", "473.194, 368.007, 52.8797, 0.5084", "472.459, 367.141, 53.1936, 0.5338", "471.536, 366.469, 53.3436, 0.5592", "470.626, 365.815, 53.8905, 0.5084", "469.871, 364.97, 54.2654, 0.483", "469.143, 364.088, 54.3192, 0.4322", "468.447, 363.179, 54.3203, 0.4068", "467.992, 362.131, 54.322, 0.4322", "467.488, 361.104, 54.3306, 0.483", "466.922, 360.109, 54.3813, 0.5084", "466.32, 359.154, 54.8164, 0.4322", "465.529, 358.339, 55.1387, 0.356", "464.665, 357.593, 54.9489, 0.3304", "464.113, 356.664, 55.8586, 0.3814", "463.723, 355.636, 56.639, 0.4576", "462.96, 354.823, 57.2592, 0.5338" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "512.156, 421.208, 65.24, 0.483", "512.146, 421.75, 64.5249, 0.4576", "511.997, 422.687, 63.5533, 0.5338", "512.656, 423.542, 62.7357, 0.5084", "512.796, 424.608, 62.4478, 0.4068", "512.546, 425.645, 61.6048, 0.3304", "511.973, 426.481, 60.3795, 0.3304", "511.02, 427.042, 60.0636, 0.356", "510.367, 427.845, 59.0929, 0.3814", "509.604, 428.504, 58.1384, 0.4068", "508.616, 429.052, 58.2271, 0.4068", "508.053, 429.832, 59.4846, 0.4322", "507.637, 430.778, 59.8657, 0.4322", "506.678, 431.332, 59.3496, 0.4576", "505.732, 431.853, 58.8904, 0.4576", "504.853, 432.526, 58.9212, 0.4322", "504.507, 433.327, 60.221, 0.4322", "504.65, 434.281, 61.5852, 0.4576", "504.855, 435.235, 62.9392, 0.5084", "504.221, 436.069, 63.2943, 0.5084", "503.645, 437.005, 63.8842, 0.4322", "503.94, 437.239, 66.3435, 0.3304", "503.652, 437.694, 67.5853, 0.305", "504.113, 438.573, 68.2217, 0.3304", "504.427, 439.446, 69.1107, 0.4068", "503.635, 439.818, 70.0344, 0.4322", "502.879, 440.057, 70.8305, 0.4576", "502.884, 441.093, 71.0707, 0.4322", "503.029, 442.107, 69.9062, 0.356", "503.131, 443.236, 69.5475, 0.2796", "503.148, 444.333, 69.8874, 0.2796", "503.543, 444.392, 72.4903, 0.3814", "503.741, 444.77, 74.7463, 0.483", "504.075, 445.795, 75.1755, 0.483", "504.515, 446.264, 76.3087, 0.4322", "505.252, 446.376, 78.3633, 0.4322", "505.438, 447.342, 78.9438, 0.5084" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "512.156, 421.208, 65.24, 0.483", "511.065, 421.628, 65.3327, 0.5338", "509.993, 421.959, 65.1134, 0.483", "508.904, 421.753, 64.9323, 0.4576", "508.475, 422.12, 67.0398, 0.4576", "507.627, 422.264, 68.8545, 0.483", "506.73, 422.63, 70.3424, 0.483", "505.759, 423.018, 71.1889, 0.4576", "504.799, 423.563, 70.6787, 0.356", "503.908, 424.247, 70.9831, 0.2796", "502.838, 424.534, 71.2286, 0.2796", "501.763, 424.632, 71.7464, 0.3304", "500.795, 425.069, 71.6442, 0.3814", "500.283, 425.775, 72.7978, 0.3814", "499.569, 426.575, 73.5473, 0.4068", "499.079, 427.577, 74.0505, 0.483", "498.785, 428.647, 74.6362, 0.5084", "498.495, 429.681, 75.5678, 0.483", "498.069, 430.67, 75.9228, 0.3814", "497.242, 431.458, 75.9094, 0.3814", "496.65, 432.415, 75.6269, 0.4068", "496.768, 433.456, 76.4901, 0.4576", "497.082, 434.447, 76.8961, 0.4068", "497.284, 435.468, 77.7059, 0.356", "497.424, 436.593, 78.0522, 0.305", "498.09, 437.448, 78.5294, 0.305", "498.387, 438.515, 78.8463, 0.305", "498.4, 439.43, 78.4714, 0.305", "497.82, 439.815, 79.8314, 0.305", "497.493, 440.863, 79.4469, 0.305", "497.34, 441.961, 80.0618, 0.305", "497.204, 443.011, 81.1199, 0.3304", "496.9, 443.648, 82.91, 0.356", "496.151, 444.124, 84.0666, 0.3814", "495.191, 444.727, 83.8404, 0.356", "494.242, 445.278, 84.6037, 0.3304", "493.225, 445.721, 85.099, 0.2796", "492.603, 446.667, 84.7269, 0.2542", "491.95, 447.571, 84.1025, 0.2288", "491.217, 448.443, 83.9874, 0.2288", "490.404, 449.209, 83.986, 0.2288", "489.312, 449.55, 84.0277, 0.2288", "488.767, 450.36, 84.966, 0.2288", "488.395, 451.319, 86.1904, 0.2288", "488.023, 452.278, 87.4149, 0.2288", "487.653, 453.238, 88.639, 0.2288", "487.281, 454.198, 89.8635, 0.2288", "486.993, 455.248, 90.3949, 0.2288", "486.771, 456.37, 90.3812, 0.2288", "486.549, 457.492, 90.3675, 0.2288", "486.327, 458.615, 90.3538, 0.2288", "486.293, 459.745, 90.3563, 0.2288", "486.408, 460.883, 90.3714, 0.2288", "486.523, 462.022, 90.3868, 0.2288", "486.639, 463.16, 90.4022, 0.2288", "487.102, 464.179, 90.4092, 0.2288", "487.711, 465.146, 90.4131, 0.2288", "488.322, 466.114, 90.4168, 0.2288", "488.933, 467.08, 90.4207, 0.2288", "489.658, 467.964, 90.428, 0.2288", "490.408, 468.828, 90.4358, 0.2288", "491.156, 469.692, 90.4439, 0.2288", "491.905, 470.557, 90.452, 0.2288", "492.553, 471.494, 90.4551, 0.2288", "493.113, 472.49, 90.454, 0.2288", "493.673, 473.488, 90.4532, 0.2288", "494.233, 474.485, 90.452, 0.2288", "494.825, 475.46, 90.4571, 0.2288", "495.611, 476.292, 90.4991, 0.2542", "496.395, 477.124, 90.5411, 0.3304" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "471.786, 377.368, 51.4268, 0.4322", "471.832, 378.133, 52.7148, 0.3304", "471.89, 379.075, 54.2984, 0.3304", "472.058, 380.121, 53.8642, 0.3814", "471.941, 381.213, 53.9104, 0.4576", "471.298, 381.899, 54.9931, 0.5084", "470.944, 382.933, 54.9013, 0.5084", "470.898, 384.028, 55.6522, 0.4576", "471.154, 384.99, 56.6894, 0.3814", "471.493, 385.974, 57.6792, 0.3814", "471.446, 387.107, 57.9421, 0.4068", "470.875, 388.077, 57.9281, 0.483", "469.75, 388.134, 58.3083, 0.483", "468.713, 388.602, 58.5102, 0.483", "467.824, 389.309, 58.6944, 0.483", "467.07, 390.151, 59.0125, 0.483", "466.316, 390.999, 58.9364, 0.483", "465.728, 391.625, 59.9539, 0.4576", "465.781, 392.469, 61.2209, 0.5084", "465.789, 393.597, 61.4149, 0.5592", "465.407, 394.328, 62.9927, 0.5592", "465.605, 394.408, 65.5735, 0.483", "465.686, 395.308, 67.1084, 0.3814", "465.663, 396.417, 67.4576, 0.356", "465.839, 397.475, 68.1943, 0.356", "466.129, 398.542, 68.7386, 0.4068", "466.6, 399.541, 69.3806, 0.4068", "466.099, 400.359, 69.463, 0.4068", "466.09, 401.248, 70.4757, 0.356", "465.608, 402.002, 71.96, 0.3814" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "471.786, 377.368, 51.4268, 0.4322", "471.152, 377.868, 50.9572, 0.4068", "470.39, 378.611, 51.0698, 0.4576", "469.375, 378.936, 50.4146, 0.4068", "468.247, 379.075, 50.1239, 0.3304", "467.284, 378.67, 50.7685, 0.2796", "466.243, 378.752, 50.1368, 0.2796", "465.306, 379.158, 51.1232, 0.3304", "464.413, 379.798, 51.5096, 0.356", "463.421, 380.336, 51.2624, 0.3814", "462.806, 381.233, 51.1938, 0.4068", "462.02, 381.976, 50.8001, 0.4068", "461.01, 382.364, 49.9615, 0.4068", "459.936, 382.616, 49.4304, 0.3814", "458.964, 383.147, 49.9313, 0.4322", "458.157, 383.596, 49.9856, 0.483", "457.447, 384.193, 49.46, 0.483", "456.423, 384.558, 50.2701, 0.4068", "455.642, 385.231, 49.5894, 0.3304", "455.06, 385.297, 49.7442, 0.305", "454.271, 385.179, 49.4654, 0.305", "453.872, 386.162, 49.2881, 0.356", "452.84, 386.61, 49.5046, 0.4322", "451.834, 387.107, 49.8991, 0.483", "451.109, 387.931, 50.129, 0.483", "450.355, 388.389, 48.3473, 0.4322", "449.499, 388.874, 47.1383, 0.4576", "448.486, 389.395, 46.9876, 0.4576", "447.75, 389.97, 48.2639, 0.5338", "447.092, 390.837, 48.8544, 0.5338", "446.321, 391.623, 48.2037, 0.5848", "445.69, 392.521, 47.4197, 0.5592", "445.295, 393.59, 47.2413, 0.5592", "444.749, 394.538, 46.5231, 0.5084", "444.228, 395.497, 46.7236, 0.4576", "443.806, 396.433, 45.789, 0.4068", "443.394, 397.217, 44.961, 0.356", "442.685, 397.704, 43.29, 0.3304", "442.148, 398.519, 41.8499, 0.305", "441.29, 399.178, 41.221, 0.3304", "441.049, 400.136, 40.1212, 0.3814", "440.303, 400.803, 41.2107, 0.4322", "440.053, 401.799, 41.0662, 0.4322", "439.82, 402.65, 39.286, 0.3814", "439.053, 403.29, 38.1077, 0.305", "438.309, 403.659, 36.4064, 0.2542", "437.699, 403.738, 37.7163, 0.2288", "437.781, 404.465, 39.2367, 0.2288", "437.029, 404.276, 39.8731, 0.2288", "436.6, 405.038, 41.5685, 0.2288", "436.271, 405.983, 42.5102, 0.2288", "435.68, 406.777, 41.4621, 0.2288", "435.393, 406.888, 38.8265, 0.2542", "435.465, 407.835, 37.3016, 0.2796", "435.062, 408.776, 36.2121, 0.305", "434.733, 409.536, 37.5309, 0.3304", "434.814, 410.418, 38.3614, 0.3814", "435.227, 411.482, 38.2665, 0.4576", "435.345, 412.577, 38.8063, 0.4576", "435.545, 413.566, 40.0809, 0.4322", "436.168, 414.463, 39.72, 0.356", "437.161, 414.917, 38.9735, 0.356", "437.881, 415.055, 36.8399, 0.356", "437.706, 416.009, 35.4978, 0.3814", "437.889, 417.124, 35.6241, 0.356", "438.265, 418.146, 35.551, 0.305", "438.543, 419.055, 35.5807, 0.2796", "438.796, 419.908, 34.183, 0.2796", "438.507, 420.985, 33.7814, 0.356", "438.098, 421.971, 33.6073, 0.3814", "438.303, 422.955, 32.3126, 0.4576", "438.395, 423.814, 33.2878, 0.4576", "438.409, 424.859, 33.5143, 0.5338", "437.951, 425.823, 32.6236, 0.5084", "437.604, 426.858, 32.5713, 0.483", "436.958, 427.766, 33.0887, 0.356", "436.364, 428.664, 32.3778, 0.2796", "436.002, 429.624, 31.7092, 0.2288", "436.311, 430.699, 31.6705, 0.2288", "436.496, 431.802, 31.71, 0.2542", "436.2, 432.744, 30.543, 0.2796", "435.564, 433.54, 31.0688, 0.305", "435.323, 434.642, 30.7574, 0.2796", "434.918, 435.677, 30.0994, 0.2796", "434.818, 436.715, 29.7912, 0.305", "435.213, 437.692, 30.6944, 0.3814", "435.54, 438.701, 30.0255, 0.4068", "435.592, 439.743, 28.9055, 0.4322", "435.71, 440.665, 27.9026, 0.4322", "435.711, 441.472, 26.3662, 0.4576", "436.349, 442.196, 26.5286, 0.4322", "436.874, 442.313, 28.9094, 0.3814", "437.453, 442.982, 30.2554, 0.356", "437.589, 443.864, 31.7918, 0.3814", "438.152, 444.787, 31.92, 0.4576" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "462.96, 354.823, 57.2592, 0.5338", "463.29, 354.6, 57.4694, 0.356", "464.161, 353.879, 57.755, 0.305", "465.072, 353.235, 57.8172, 0.2796", "466.065, 352.736, 58.3836, 0.3304", "466.983, 352.092, 58.7322, 0.356", "467.802, 351.302, 58.7678, 0.3814", "468.733, 350.698, 58.9683, 0.356", "469.603, 350.982, 59.7688, 0.305", "470.41, 351.533, 61.1778, 0.2542", "471.444, 351.47, 61.8251, 0.2288", "472.426, 350.952, 62.4084, 0.2288", "473.489, 351.163, 62.8919, 0.2288", "474.577, 350.885, 63.1218, 0.2542", "475.346, 350.164, 63.933, 0.2796", "475.956, 349.524, 65.4234, 0.3304", "476.622, 348.724, 66.078, 0.3304", "477.594, 348.173, 66.4042, 0.3304", "478.559, 347.579, 66.0444, 0.2796", "479.528, 346.998, 65.6135, 0.2542", "480.576, 346.567, 65.4203, 0.2288", "481.661, 346.211, 65.3374, 0.2288", "482.721, 346.581, 65.2999, 0.2288", "483.743, 346.069, 65.3565, 0.2288", "484.767, 345.557, 65.413, 0.2288", "485.587, 345.606, 67.1955, 0.2288", "486.383, 345.723, 69.1872, 0.2288", "487.178, 345.839, 71.1788, 0.2288", "488.308, 345.701, 71.1603, 0.2288", "489.443, 345.559, 71.113, 0.2288", "490.586, 345.537, 71.0522, 0.2288", "491.73, 345.536, 70.989, 0.2288", "492.864, 345.513, 71.0284, 0.2288", "493.92, 345.29, 71.9589, 0.2288", "494.976, 345.066, 72.8893, 0.2288", "496.069, 344.995, 73.397, 0.2288", "497.208, 345.107, 73.3975, 0.2288", "498.346, 345.218, 73.3981, 0.2288", "499.484, 345.33, 73.3986, 0.2288", "500.624, 345.441, 73.3992, 0.2288", "501.47, 344.718, 73.3471, 0.2288", "502.294, 343.923, 73.2903, 0.2288", "503.116, 343.129, 73.2337, 0.2288", "504.01, 342.668, 73.6142, 0.2288", "505.035, 342.823, 74.8009, 0.2288", "506.06, 342.976, 75.9878, 0.2288", "507.085, 343.13, 77.1744, 0.2288", "508.109, 343.284, 78.3614, 0.2288", "509.134, 343.438, 79.5483, 0.2288", "510.143, 343.444, 80.5101, 0.2288", "511.079, 342.786, 80.4681, 0.2288", "512.013, 342.128, 80.4258, 0.2288", "512.95, 341.47, 80.3835, 0.2288", "513.861, 340.798, 80.4975, 0.2288", "514.643, 340.049, 81.3952, 0.2288", "515.427, 339.301, 82.2928, 0.2288", "516.211, 338.553, 83.1905, 0.2288", "516.995, 337.805, 84.0882, 0.2288", "517.779, 337.057, 84.9859, 0.2288", "518.562, 336.268, 85.489, 0.2288", "519.343, 335.432, 85.5072, 0.2288", "519.771, 334.416, 85.5019, 0.2288", "519.989, 333.294, 85.482, 0.2288", "520.432, 332.347, 85.4392, 0.2288", "521.469, 331.867, 85.3359, 0.2542" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "462.96, 354.823, 57.2592, 0.5338", "462.237, 353.955, 56.609, 0.4068", "461.754, 352.933, 57.0461, 0.3304", "461.259, 351.928, 57.5184, 0.3304", "460.703, 351.084, 58.7941, 0.356", "459.952, 350.261, 59.3757, 0.3814", "459.28, 349.341, 59.4782, 0.3814", "458.496, 348.62, 59.269, 0.4068", "457.661, 348.018, 59.871, 0.4322", "457.221, 347.026, 60.5122, 0.483", "456.795, 345.97, 60.5223, 0.5338", "456.51, 344.9, 61.0907, 0.5848", "455.89, 343.966, 61.299, 0.5848", "454.924, 343.379, 61.4457, 0.5592", "454.055, 342.68, 62.0052, 0.5084", "453.209, 341.913, 62.1776, 0.483", "452.148, 341.494, 62.1659, 0.4322", "451.052, 341.232, 62.6122, 0.4322", "450.052, 340.722, 63.0168, 0.4576", "449.383, 339.802, 63.2825, 0.5084", "448.594, 338.987, 63.5835, 0.5084", "448.026, 338.0, 63.8252, 0.4322", "447.612, 336.939, 63.9638, 0.3304", "447.04, 335.986, 64.5487, 0.2542", "446.209, 335.243, 65.163, 0.2288", "445.335, 334.562, 65.7233, 0.2288", "444.417, 333.903, 65.5413, 0.2542", "443.682, 333.038, 65.7558, 0.2796", "443.008, 332.134, 65.9792, 0.305", "442.26, 331.277, 65.9117, 0.2796", "441.401, 330.544, 65.9658, 0.2542", "440.497, 329.855, 65.8, 0.2288", "439.832, 328.954, 65.9204, 0.2542", "439.433, 327.889, 66.0181, 0.2796", "438.97, 326.866, 66.1886, 0.356", "438.294, 325.96, 66.5406, 0.4068", "437.618, 325.055, 66.9225, 0.4576", "436.894, 324.198, 67.3459, 0.4322", "436.033, 323.451, 67.5399, 0.4068", "435.224, 322.654, 67.7869, 0.4068", "434.517, 321.792, 67.4167, 0.4576", "433.892, 320.85, 67.195, 0.5338", "433.251, 319.904, 67.2557, 0.6102", "432.665, 318.937, 67.6326, 0.6356", "432.045, 318.04, 68.4614, 0.5848", "431.303, 317.187, 68.3407, 0.4576", "430.901, 316.187, 69.2552, 0.356", "430.281, 315.261, 69.6209, 0.305", "429.446, 314.544, 70.3195, 0.356", "428.704, 313.68, 70.5603, 0.4322", "428.135, 312.723, 70.7507, 0.5084", "427.81, 311.643, 70.9106, 0.5084", "427.562, 310.549, 70.4256, 0.483", "427.005, 309.589, 70.5947, 0.483", "426.195, 308.798, 70.826, 0.5338", "425.459, 307.97, 71.0461, 0.5592", "424.763, 307.115, 71.3076, 0.5592", "424.161, 306.196, 72.0801, 0.5084", "423.778, 305.144, 71.9006, 0.5084", "423.465, 304.053, 72.228, 0.5592", "422.69, 303.357, 72.9593, 0.661", "421.788, 302.738, 72.6292, 0.7118", "421.19, 301.775, 72.7992, 0.661", "420.663, 300.784, 73.3001, 0.5848", "420.384, 299.679, 73.2794, 0.5592", "419.562, 298.894, 72.9492, 0.6102", "418.726, 298.142, 73.0615, 0.661", "417.952, 297.355, 73.7008, 0.6864", "417.393, 296.431, 74.1255, 0.7118", "417.243, 295.318, 74.2325, 0.7626", "416.781, 294.325, 74.723, 0.8136", "415.971, 293.61, 75.5516, 0.788", "415.13, 292.919, 75.6554, 0.7118", "414.19, 292.377, 76.4938, 0.6356", "413.23, 291.786, 76.4803, 0.5848", "412.673, 290.878, 76.7225, 0.5592", "412.118, 289.905, 77.068, 0.5084", "411.375, 289.128, 77.9534, 0.5084", "410.758, 288.186, 78.0438, 0.483", "410.497, 287.08, 77.9649, 0.5084", "409.868, 286.148, 78.2634, 0.5338", "409.053, 285.356, 78.5873, 0.5848", "408.227, 284.571, 78.8295, 0.5848", "407.296, 283.91, 78.6873, 0.5084", "406.403, 283.275, 78.7184, 0.4576", "405.725, 282.511, 79.6505, 0.4068", "405.035, 281.617, 79.5889, 0.4322", "404.383, 280.699, 79.7759, 0.4068", "403.667, 279.822, 79.7191, 0.4576", "402.964, 278.945, 80.0394, 0.4576", "402.423, 277.947, 80.1794, 0.483", "401.922, 276.92, 80.1727, 0.4322", "401.336, 276.062, 81.1479, 0.4322", "400.474, 275.346, 81.6301, 0.4322", "399.878, 274.424, 82.3718, 0.4322", "399.408, 273.39, 82.6938, 0.4068", "398.756, 272.452, 82.8176, 0.3814", "398.17, 271.472, 82.7663, 0.3814", "397.681, 270.454, 82.5479, 0.3814", "397.177, 269.475, 83.1146, 0.3814", "396.484, 268.638, 83.925, 0.3814", "395.997, 267.638, 84.4791, 0.3814", "395.658, 266.565, 84.803, 0.3814", "395.131, 265.56, 84.7888, 0.3814", "394.418, 264.702, 85.262, 0.3814", "393.745, 263.814, 85.2564, 0.3814", "393.101, 262.883, 85.3888, 0.4068", "392.293, 262.144, 86.0698, 0.4322", "391.23, 261.819, 86.4872, 0.4576", "390.297, 261.227, 87.0139, 0.4576", "389.897, 260.182, 87.2099, 0.4576", "389.608, 259.077, 87.3421, 0.4322", "389.216, 258.009, 87.626, 0.3814", "388.833, 256.978, 88.3436, 0.305", "388.221, 256.261, 89.8279, 0.2542", "387.949, 255.205, 90.1967, 0.2542", "387.794, 254.128, 89.768, 0.2796", "387.517, 253.076, 90.5005, 0.305", "387.072, 252.063, 91.1596, 0.2796", "386.828, 250.972, 91.6012, 0.2542", "386.667, 249.866, 92.1438, 0.2288", "386.006, 249.05, 92.2541, 0.2288", "385.174, 248.382, 92.9166, 0.2542", "384.678, 247.483, 94.0276, 0.2796", "384.398, 246.41, 94.619, 0.305", "384.043, 245.33, 94.8816, 0.2796", "383.288, 244.571, 95.6614, 0.2796", "382.281, 244.052, 95.8686, 0.305", "381.918, 243.028, 96.4057, 0.3814", "381.986, 241.945, 96.2973, 0.4068", "381.582, 240.968, 97.3056, 0.4068", "381.273, 239.887, 97.72, 0.3814", "380.865, 238.825, 97.8662, 0.3814", "380.536, 237.771, 97.946, 0.3814", "379.854, 236.952, 98.5412, 0.3814", "379.087, 236.175, 99.3787, 0.4068", "378.354, 235.328, 99.9356, 0.4576", "377.712, 234.39, 99.7629, 0.5084", "376.908, 233.63, 100.347, 0.5084", "376.022, 233.167, 101.604, 0.4322", "375.202, 232.533, 101.786, 0.3304", "375.061, 231.406, 102.0, 0.2542", "374.747, 230.341, 102.5, 0.2542", "374.035, 229.508, 102.824, 0.2796", "373.056, 228.99, 103.49, 0.356", "372.131, 228.37, 104.034, 0.4068", "371.165, 227.762, 104.168, 0.4576", "370.213, 227.253, 104.887, 0.4068", "369.338, 226.63, 104.851, 0.356", "368.406, 225.992, 104.46, 0.305", "367.491, 225.311, 104.46, 0.3304", "366.816, 224.423, 105.055, 0.3304", "365.904, 223.825, 105.841, 0.356", "364.879, 223.403, 106.3, 0.3304", "363.832, 223.103, 106.718, 0.356", "363.003, 222.968, 108.096, 0.356", "362.204, 222.402, 108.889, 0.4322", "361.153, 222.0, 108.92, 0.483", "360.561, 221.04, 108.559, 0.5084", "359.855, 220.393, 110.079, 0.4322", "359.232, 219.6, 111.359, 0.3304", "358.339, 218.98, 111.877, 0.305", "357.507, 218.312, 111.498, 0.3304", "356.658, 217.716, 112.638, 0.4322", "355.592, 217.489, 113.352, 0.4322", "354.766, 216.762, 113.856, 0.4576", "354.083, 215.848, 113.9, 0.4576", "353.424, 214.916, 113.744, 0.5084", "352.965, 213.883, 114.046, 0.5084", "352.581, 212.838, 114.344, 0.4068", "352.295, 211.832, 114.663, 0.3304", "352.177, 210.724, 114.676, 0.3304", "351.781, 209.697, 115.338, 0.4576", "351.483, 208.646, 116.045, 0.5592", "351.094, 207.598, 116.476, 0.5848", "350.454, 206.653, 116.481, 0.5338", "349.797, 205.716, 116.457, 0.4576", "348.885, 205.038, 116.696, 0.3814", "348.186, 204.421, 115.691, 0.3814", "347.459, 203.743, 116.819, 0.4576", "346.458, 203.289, 116.655, 0.5848", "345.849, 202.681, 117.631, 0.6102", "345.13, 201.924, 117.124, 0.5848", "344.254, 201.264, 117.821, 0.5084", "343.523, 200.558, 116.783, 0.5084", "342.647, 199.988, 117.179, 0.483", "341.958, 199.578, 118.77, 0.5084", "341.314, 198.805, 119.386, 0.483", "340.395, 198.136, 119.27, 0.4576", "339.415, 197.664, 118.512, 0.4068", "338.684, 196.945, 119.196, 0.356", "338.036, 196.442, 117.65, 0.3304", "337.326, 195.55, 117.8, 0.2796", "336.477, 194.791, 118.063, 0.2796", "335.631, 194.053, 118.364, 0.3304", "334.89, 193.374, 119.681, 0.4322", "333.991, 192.838, 120.561, 0.5084", "333.01, 192.415, 119.86, 0.5084", "332.236, 191.82, 119.129, 0.483", "331.647, 191.095, 120.519, 0.4322", "330.99, 190.281, 121.556, 0.3814", "330.068, 189.616, 121.855, 0.305", "329.105, 189.037, 122.159, 0.305", "328.051, 188.75, 122.707, 0.356", "327.234, 188.056, 123.336, 0.4576", "326.419, 187.296, 122.885, 0.4576", "325.656, 186.491, 122.925, 0.4068", "324.816, 185.799, 122.725, 0.3304", "324.122, 184.939, 122.572, 0.305", "323.452, 184.16, 123.637, 0.305", "322.585, 183.857, 125.157, 0.305", "322.148, 182.939, 125.677, 0.3304", "321.453, 182.09, 125.255, 0.356", "320.609, 181.485, 125.826, 0.3814", "320.24, 180.48, 125.959, 0.356", "319.634, 179.673, 126.198, 0.3304", "319.174, 178.808, 127.644, 0.305", "318.669, 177.966, 129.07, 0.3304", "318.114, 177.107, 130.317, 0.356", "317.202, 176.592, 130.598, 0.356", "316.454, 175.817, 130.498, 0.3304", "316.094, 174.745, 130.263, 0.356", "315.549, 173.881, 131.237, 0.4322", "314.918, 173.151, 132.725, 0.5338", "314.176, 172.301, 132.561, 0.5592", "313.367, 171.554, 133.316, 0.5592", "312.503, 170.967, 134.228, 0.5084", "311.786, 170.435, 135.575, 0.5338", "311.589, 169.503, 136.994, 0.5848", "311.415, 168.471, 136.247, 0.6864", "311.27, 167.406, 136.99, 0.661", "310.88, 166.563, 138.571, 0.5592", "309.975, 166.09, 139.818, 0.4068", "309.35, 165.273, 140.711, 0.3304", "308.928, 164.251, 140.582, 0.305", "308.206, 163.48, 141.383, 0.2796", "307.243, 162.898, 141.509, 0.2542", "306.534, 162.033, 141.614, 0.2796", "305.924, 161.184, 142.569, 0.3304", "305.21, 160.658, 144.29, 0.3814", "304.757, 159.778, 145.388, 0.356", "304.049, 159.384, 147.28, 0.356" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "505.438, 447.342, 78.9438, 0.5084", "505.659, 448.777, 79.8949, 0.2796", "505.828, 449.869, 80.6187, 0.2542", "505.815, 450.921, 81.2773, 0.2288", "505.14, 451.83, 81.6973, 0.2288", "504.465, 452.737, 82.117, 0.2288", "503.829, 453.668, 82.4807, 0.2288", "503.419, 454.737, 82.5348, 0.2288", "503.075, 455.814, 82.5754, 0.2288", "503.143, 456.956, 82.5322, 0.2542", "503.21, 458.098, 82.4888, 0.2796" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "505.438, 447.342, 78.9438, 0.5084", "505.888, 448.057, 79.1851, 0.305", "506.736, 448.459, 80.5608, 0.2796", "507.633, 448.749, 82.1503, 0.2542", "508.529, 449.037, 83.7399, 0.2288", "509.375, 449.711, 84.4743, 0.2288", "510.214, 450.452, 85.0587, 0.2288", "511.052, 451.193, 85.6433, 0.2288", "511.885, 451.866, 86.34, 0.2288", "512.661, 451.739, 88.3761, 0.2288", "513.435, 451.612, 90.4126, 0.2288", "514.21, 451.485, 92.4487, 0.2288", "515.328, 451.358, 92.5403, 0.2542", "516.466, 451.233, 92.5274, 0.3304" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "304.049, 159.384, 147.28, 0.356", "304.058, 158.816, 146.851, 0.305", "303.867, 157.77, 145.941, 0.356", "303.546, 157.234, 147.498, 0.356", "303.107, 156.194, 147.596, 0.305", "302.501, 155.431, 148.368, 0.2542", "301.768, 154.755, 149.514, 0.2288", "300.993, 154.008, 149.287, 0.2288", "300.872, 152.93, 148.988, 0.2288", "300.757, 151.887, 147.942, 0.2288", "299.668, 151.707, 148.682, 0.2288", "298.618, 151.542, 149.528, 0.2288", "297.846, 151.026, 151.124, 0.2796", "296.986, 150.373, 151.559, 0.356", "296.112, 149.645, 151.387, 0.4322", "295.074, 149.348, 151.335, 0.4068", "294.454, 148.566, 152.01, 0.3304", "293.471, 148.047, 152.408, 0.2796", "292.54, 147.467, 151.674, 0.2796", "291.482, 147.049, 151.896, 0.305", "290.525, 146.506, 152.385, 0.2796", "289.594, 146.113, 152.276, 0.2542", "288.73, 145.444, 152.229, 0.2542", "287.704, 144.999, 152.787, 0.2796", "286.881, 144.411, 153.941, 0.3304", "285.885, 143.915, 154.56, 0.3304" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "304.049, 159.384, 147.28, 0.356", "303.341, 158.778, 147.689, 0.3814", "302.279, 158.468, 148.092, 0.4322", "301.532, 158.016, 149.615, 0.4322", "300.652, 157.841, 151.222, 0.4322", "299.842, 158.198, 150.146, 0.4322", "298.769, 157.994, 150.968, 0.483", "297.733, 157.826, 152.065, 0.4576", "296.852, 157.619, 153.619, 0.4322", "296.091, 157.414, 154.736, 0.3814", "295.055, 157.14, 154.813, 0.4322", "294.025, 156.94, 155.925, 0.483", "292.935, 156.815, 156.467, 0.5592", "291.868, 156.467, 156.52, 0.5592", "290.773, 156.234, 156.774, 0.5338", "289.642, 156.081, 156.871, 0.4322", "288.788, 155.828, 158.373, 0.3814", "287.711, 155.516, 158.748, 0.3814", "286.585, 155.406, 158.387, 0.4576" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "286.585, 155.406, 158.387, 0.4576", "285.332, 155.187, 160.408, 0.2796", "285.335, 154.294, 159.879, 0.2796", "284.525, 153.882, 158.786, 0.2796", "283.68, 153.337, 159.767, 0.305", "282.833, 152.937, 158.609, 0.2796", "281.975, 153.016, 157.011, 0.2542", "280.971, 152.748, 157.573, 0.2796", "279.937, 153.182, 157.92, 0.356" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "286.585, 155.406, 158.387, 0.4576", "285.829, 155.793, 160.659, 0.4068", "285.03, 155.988, 162.525, 0.3304", "284.003, 156.114, 162.474, 0.2542", "283.071, 156.0, 163.374, 0.2288", "282.272, 155.355, 164.074, 0.2288", "281.212, 155.462, 164.883, 0.2288", "280.169, 155.676, 165.551, 0.2542", "279.176, 155.936, 166.641, 0.305", "278.146, 156.367, 166.648, 0.356", "277.368, 156.546, 166.233, 0.356", "276.467, 156.654, 167.828, 0.305", "275.486, 156.957, 168.96, 0.2542", "274.56, 157.483, 169.972, 0.2288", "273.628, 158.107, 170.012, 0.2542", "272.958, 159.016, 169.96, 0.305" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_542",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_543",
    "groups" : [ ],
    "sections" : [ "dend_17", "dend_12", "apic_0", "dend_5", "dend_0", "dend_32", "dend_29", "dend_18", "dend_16", "dend_13", "apic_18", "apic_1", "dend_11", "dend_6", "dend_2", "dend_1", "dend_36", "dend_33", "dend_31", "dend_30", "dend_20", "dend_19", "dend_15", "dend_14", "apic_20", "apic_19", "apic_17", "apic_2", "dend_10", "dend_7", "dend_4", "dend_3", "dend_38", "dend_37", "dend_35", "dend_34", "dend_28", "dend_21", "apic_14", "apic_3", "dend_9", "dend_8", "dend_27", "dend_22", "apic_16", "apic_15", "apic_11", "apic_4", "dend_24", "dend_23", "apic_13", "apic_12", "apic_10", "apic_5", "dend_26", "dend_25", "apic_9", "apic_6", "apic_8", "apic_7" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_18", "apic_1", "apic_20", "apic_19", "apic_17", "apic_2", "apic_14", "apic_3", "apic_16", "apic_15", "apic_11", "apic_4", "apic_13", "apic_12", "apic_10", "apic_5", "apic_9", "apic_6", "apic_8", "apic_7" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_17", "dend_12", "dend_5", "dend_0", "dend_32", "dend_29", "dend_18", "dend_16", "dend_13", "dend_11", "dend_6", "dend_2", "dend_1", "dend_36", "dend_33", "dend_31", "dend_30", "dend_20", "dend_19", "dend_15", "dend_14", "dend_10", "dend_7", "dend_4", "dend_3", "dend_38", "dend_37", "dend_35", "dend_34", "dend_28", "dend_21", "dend_9", "dend_8", "dend_27", "dend_22", "dend_24", "dend_23", "dend_26", "dend_25" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25761",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_1", "apic_1", "apic_1", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_2", "apic_2", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_22", "dend_22", "dend_22", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "apic",
    "value" : "2.16"
  }, {
    "group" : "dend",
    "value" : "2.16"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "10.0"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "2.9866305E-7",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "4.0927256E-4",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.7605705",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "4.3831582E-4",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.016244927",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.004099888",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "9.911199E-5",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.1363494",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "1.2968696E-4",
    "erev" : "-86.9854"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "1.8134281E-4",
    "erev" : "-86.9854"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "1.664723E-4",
    "erev" : "-86.9854"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "1.8465303E-6",
    "erev" : "-86.9854"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "3.198088E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.006555329",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_472434498

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: soma_0
create dend_12
public dend_12
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_32, id: dend_32, parent: dend_16
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_17
create dend_29
public dend_29
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: apic_18, id: apic_18, parent: apic_0
create apic_18
public apic_18
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_11, id: dend_11, parent: dend_5
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: apic_20, id: apic_20, parent: apic_18
create apic_20
public apic_20
// Section: apic_19, id: apic_19, parent: apic_18
create apic_19
public apic_19
// Section: apic_17, id: apic_17, parent: apic_1
create apic_17
public apic_17
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_28, id: dend_28, parent: dend_20
create dend_28
public dend_28
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: apic_14, id: apic_14, parent: apic_2
create apic_14
public apic_14
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_27, id: dend_27, parent: dend_21
create dend_27
public dend_27
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: apic_16, id: apic_16, parent: apic_14
create apic_16
public apic_16
// Section: apic_15, id: apic_15, parent: apic_14
create apic_15
public apic_15
// Section: apic_11, id: apic_11, parent: apic_3
create apic_11
public apic_11
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: apic_13, id: apic_13, parent: apic_11
create apic_13
public apic_13
// Section: apic_12, id: apic_12, parent: apic_11
create apic_12
public apic_12
// Section: apic_10, id: apic_10, parent: apic_4
create apic_10
public apic_10
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: apic_9, id: apic_9, parent: apic_5
create apic_9
public apic_9
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6
// Section: apic_8, id: apic_8, parent: apic_6
create apic_8
public apic_8
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_542, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_542
// Group: {name=ModelViewParmSubset_543, groups=[], sections=[dend_17, dend_12, apic_0, dend_5, dend_0, dend_32, dend_29, dend_18, dend_16, dend_13, apic_18, apic_1, dend_11, dend_6, dend_2, dend_1, dend_36, dend_33, dend_31, dend_30, dend_20, dend_19, dend_15, dend_14, apic_20, apic_19, apic_17, apic_2, dend_10, dend_7, dend_4, dend_3, dend_38, dend_37, dend_35, dend_34, dend_28, dend_21, apic_14, apic_3, dend_9, dend_8, dend_27, dend_22, apic_16, apic_15, apic_11, apic_4, dend_24, dend_23, apic_13, apic_12, apic_10, apic_5, dend_26, dend_25, apic_9, apic_6, apic_8, apic_7]}
objref ModelViewParmSubset_543
// Group: {name=apic, groups=[], sections=[apic_0, apic_18, apic_1, apic_20, apic_19, apic_17, apic_2, apic_14, apic_3, apic_16, apic_15, apic_11, apic_4, apic_13, apic_12, apic_10, apic_5, apic_9, apic_6, apic_8, apic_7]}
objref apic
// Group: {name=dend, groups=[], sections=[dend_17, dend_12, dend_5, dend_0, dend_32, dend_29, dend_18, dend_16, dend_13, dend_11, dend_6, dend_2, dend_1, dend_36, dend_33, dend_31, dend_30, dend_20, dend_19, dend_15, dend_14, dend_10, dend_7, dend_4, dend_3, dend_38, dend_37, dend_35, dend_34, dend_28, dend_21, dend_9, dend_8, dend_27, dend_22, dend_24, dend_23, dend_26, dend_25]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_25761, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_25761
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_1, apic_1, apic_1, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_2, apic_2, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5000349674802426)
    connect dend_17(0), soma_0(0.5000349674802426)
    connect dend_12(0), soma_0(0.5000349674802426)
    connect apic_0(0), soma_0(0.5000349674802426)
    connect dend_5(0), soma_0(0.5000349674802426)
    connect dend_0(0), soma_0(0.5000349674802426)
    connect axon_1(0), axon_0(1.0)
    connect dend_32(0), dend_16(1.0)
    connect dend_29(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect apic_18(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_11(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect apic_20(0), apic_18(1.0)
    connect apic_19(0), apic_18(1.0)
    connect apic_17(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_28(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect apic_14(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_27(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect apic_16(0), apic_14(1.0)
    connect apic_15(0), apic_14(1.0)
    connect apic_11(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect apic_13(0), apic_11(1.0)
    connect apic_12(0), apic_11(1.0)
    connect apic_10(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect apic_9(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)
    connect apic_8(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 499.528, 408.065, 46.48, 14.299 ) }
    soma_0 { pt3dadd( 506.678, 408.065, 46.48, 14.299 ) }
    soma_0 { pt3dadd( 513.827, 408.065, 46.48, 14.299 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 506.678, 408.065, 46.48, 1.0 ) }
    axon_0 { pt3dadd( 512.519, 421.881, 46.48, 1.0 ) }
    axon_0 { pt3dadd( 518.36, 435.697, 46.48, 1.0 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 6/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 513.354, 407.614, 46.0359, 0.2288 ) }
    dend_17 { pt3dadd( 514.491, 407.625, 46.3445, 0.661 ) }
    dend_17 { pt3dadd( 515.601, 407.745, 46.9512, 0.5848 ) }
    dend_17 { pt3dadd( 516.49, 408.263, 48.1048, 0.5848 ) }
    dend_17 { pt3dadd( 516.991, 409.23, 48.9149, 0.7372 ) }
    dend_17 { pt3dadd( 517.593, 410.177, 48.3689, 0.8644 ) }
    dend_17 { pt3dadd( 518.419, 410.922, 47.7448, 0.8898 ) }
    dend_17 { pt3dadd( 519.434, 411.409, 47.2626, 0.7372 ) }
    dend_17 { pt3dadd( 520.466, 411.598, 46.8849, 0.6356 ) }
    dend_17 { pt3dadd( 521.151, 411.061, 48.4439, 0.5592 ) }
    dend_17 { pt3dadd( 522.146, 411.095, 49.4169, 0.5848 ) }
    dend_17 { pt3dadd( 523.218, 411.443, 49.7252, 0.5338 ) }
    dend_17 { pt3dadd( 524.054, 411.853, 51.24, 0.483 ) }
    // Section: dend_12, id: dend_12, parent: soma_0 (entry count 19/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 511.717, 403.398, 38.645, 0.305 ) }
    dend_12 { pt3dadd( 512.58, 402.645, 38.6646, 0.356 ) }
    dend_12 { pt3dadd( 513.354, 401.808, 38.7682, 0.356 ) }
    dend_12 { pt3dadd( 513.909, 400.814, 38.8685, 0.305 ) }
    dend_12 { pt3dadd( 514.484, 400.076, 38.0674, 0.2542 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 24/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 504.973, 400.578, 44.2526, 0.2542 ) }
    apic_0 { pt3dadd( 504.638, 399.485, 44.2658, 0.3304 ) }
    apic_0 { pt3dadd( 504.212, 398.424, 44.3923, 0.4576 ) }
    apic_0 { pt3dadd( 503.69, 397.439, 45.0204, 0.5848 ) }
    apic_0 { pt3dadd( 502.958, 396.57, 45.358, 0.6102 ) }
    apic_0 { pt3dadd( 502.146, 395.766, 45.3603, 0.5848 ) }
    apic_0 { pt3dadd( 501.318, 394.975, 45.3617, 0.5338 ) }
    apic_0 { pt3dadd( 500.418, 394.269, 45.3676, 0.5338 ) }
    apic_0 { pt3dadd( 499.501, 393.585, 45.3961, 0.483 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 33/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 501.674, 408.064, 35.2694, 0.2288 ) }
    dend_5 { pt3dadd( 500.829, 408.064, 33.3794, 0.2288 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 35/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 502.227, 410.621, 32.8404, 0.2288 ) }
    dend_0 { pt3dadd( 501.556, 411.007, 30.7818, 0.2288 ) }
    dend_0 { pt3dadd( 501.061, 411.933, 29.7391, 0.2796 ) }
    dend_0 { pt3dadd( 500.582, 412.898, 28.7924, 0.3814 ) }
    dend_0 { pt3dadd( 499.801, 413.724, 28.5818, 0.483 ) }
    dend_0 { pt3dadd( 498.914, 414.445, 28.6888, 0.483 ) }
    dend_0 { pt3dadd( 498.095, 415.012, 30.0381, 0.4322 ) }
    dend_0 { pt3dadd( 497.923, 415.669, 32.2652, 0.4576 ) }
    dend_0 { pt3dadd( 497.52, 415.888, 34.8253, 0.5338 ) }
    dend_0 { pt3dadd( 496.616, 416.301, 36.2046, 0.5592 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 45/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 518.36, 435.697, 46.48, 1.0 ) }
    axon_1 { pt3dadd( 524.201, 449.513, 46.48, 1.0 ) }
    axon_1 { pt3dadd( 530.043, 463.329, 46.48, 1.0 ) }
    // Section: dend_32, id: dend_32, parent: dend_16 (entry count 48/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 513.354, 407.614, 46.0359, 0.2288 ) }
    dend_32 { pt3dadd( 513.21, 409.066, 46.7989, 0.356 ) }
    dend_32 { pt3dadd( 513.18, 410.736, 46.7384, 0.356 ) }
    dend_32 { pt3dadd( 512.231, 412.176, 46.7676, 0.3814 ) }
    dend_32 { pt3dadd( 511.798, 413.702, 46.8633, 0.483 ) }
    dend_32 { pt3dadd( 511.596, 415.026, 46.7589, 0.5338 ) }
    dend_32 { pt3dadd( 512.432, 415.486, 46.7177, 0.5592 ) }
    dend_32 { pt3dadd( 513.007, 416.495, 46.7746, 0.5592 ) }
    dend_32 { pt3dadd( 512.932, 417.077, 45.9878, 0.6356 ) }
    dend_32 { pt3dadd( 512.588, 418.076, 46.6726, 0.7372 ) }
    dend_32 { pt3dadd( 511.969, 418.985, 46.9921, 0.8136 ) }
    dend_32 { pt3dadd( 511.564, 420.016, 47.362, 0.8898 ) }
    dend_32 { pt3dadd( 511.124, 420.923, 48.6528, 0.9406 ) }
    dend_32 { pt3dadd( 510.639, 421.881, 49.5555, 0.9152 ) }
    dend_32 { pt3dadd( 510.326, 422.822, 50.9289, 0.7372 ) }
    // Section: dend_29, id: dend_29, parent: dend_17 (entry count 63/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 524.054, 411.853, 51.24, 0.483 ) }
    dend_29 { pt3dadd( 524.63, 411.61, 49.4934, 0.3304 ) }
    dend_29 { pt3dadd( 525.414, 411.341, 47.5793, 0.356 ) }
    dend_29 { pt3dadd( 526.435, 411.045, 46.832, 0.4068 ) }
    dend_29 { pt3dadd( 527.538, 410.836, 46.3196, 0.4322 ) }
    dend_29 { pt3dadd( 528.49, 410.429, 47.32, 0.4322 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 69/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 524.054, 411.853, 51.24, 0.483 ) }
    dend_18 { pt3dadd( 524.219, 412.489, 51.3251, 0.661 ) }
    dend_18 { pt3dadd( 524.828, 413.251, 52.64, 0.7118 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 72/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 514.484, 400.076, 38.0674, 0.2542 ) }
    dend_16 { pt3dadd( 514.596, 399.193, 35.4418, 0.2542 ) }
    dend_16 { pt3dadd( 514.578, 398.364, 34.1583, 0.305 ) }
    dend_16 { pt3dadd( 514.539, 397.316, 35.1716, 0.356 ) }
    dend_16 { pt3dadd( 515.046, 396.5, 35.3458, 0.4068 ) }
    dend_16 { pt3dadd( 515.76, 395.771, 34.7211, 0.4322 ) }
    dend_16 { pt3dadd( 516.296, 394.77, 34.5923, 0.483 ) }
    dend_16 { pt3dadd( 517.0, 393.949, 33.8514, 0.483 ) }
    dend_16 { pt3dadd( 517.458, 393.044, 34.4893, 0.5338 ) }
    dend_16 { pt3dadd( 518.128, 392.294, 33.6582, 0.5848 ) }
    dend_16 { pt3dadd( 518.377, 391.198, 33.2371, 0.6864 ) }
    dend_16 { pt3dadd( 519.32, 390.559, 33.32, 0.7118 ) }
    dend_16 { pt3dadd( 520.09, 389.72, 33.2626, 0.661 ) }
    dend_16 { pt3dadd( 520.784, 388.82, 33.0666, 0.5338 ) }
    dend_16 { pt3dadd( 521.43, 387.953, 33.2192, 0.4068 ) }
    dend_16 { pt3dadd( 521.354, 386.85, 33.3113, 0.356 ) }
    dend_16 { pt3dadd( 521.432, 385.786, 32.9255, 0.4068 ) }
    dend_16 { pt3dadd( 521.994, 384.917, 31.9788, 0.5084 ) }
    dend_16 { pt3dadd( 522.451, 384.104, 32.6063, 0.6356 ) }
    dend_16 { pt3dadd( 523.252, 383.327, 32.8854, 0.6864 ) }
    dend_16 { pt3dadd( 524.232, 382.86, 33.5219, 0.7118 ) }
    dend_16 { pt3dadd( 525.031, 382.087, 33.6414, 0.6356 ) }
    dend_16 { pt3dadd( 525.848, 381.407, 34.5744, 0.5848 ) }
    dend_16 { pt3dadd( 526.543, 380.516, 34.622, 0.5084 ) }
    dend_16 { pt3dadd( 527.338, 379.789, 33.8444, 0.483 ) }
    dend_16 { pt3dadd( 528.073, 378.989, 34.19, 0.4322 ) }
    dend_16 { pt3dadd( 528.922, 378.397, 34.9205, 0.3814 ) }
    dend_16 { pt3dadd( 529.681, 377.587, 34.5358, 0.356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_16 { pt3dadd( 530.232, 376.717, 33.8867, 0.3814 ) }
    dend_16 { pt3dadd( 530.854, 375.823, 34.433, 0.483 ) }
    dend_16 { pt3dadd( 531.395, 374.842, 34.9754, 0.5592 ) }
    dend_16 { pt3dadd( 532.4, 374.447, 34.3767, 0.5848 ) }
    dend_16 { pt3dadd( 533.31, 373.815, 34.7119, 0.5338 ) }
    dend_16 { pt3dadd( 534.306, 373.495, 35.597, 0.4576 ) }
    dend_16 { pt3dadd( 535.286, 373.149, 36.4126, 0.4322 ) }
    dend_16 { pt3dadd( 536.075, 372.423, 37.371, 0.4576 ) }
    dend_16 { pt3dadd( 537.023, 371.934, 38.2693, 0.5084 ) }
    dend_16 { pt3dadd( 537.93, 371.26, 38.0654, 0.5084 ) }
    dend_16 { pt3dadd( 538.452, 370.299, 38.376, 0.4322 ) }
    dend_16 { pt3dadd( 539.2, 369.59, 37.5704, 0.3304 ) }
    dend_16 { pt3dadd( 539.991, 368.981, 36.8987, 0.2796 ) }
    dend_16 { pt3dadd( 540.635, 368.087, 36.9474, 0.2796 ) }
    dend_16 { pt3dadd( 540.905, 367.024, 37.3808, 0.3304 ) }
    dend_16 { pt3dadd( 541.765, 366.412, 37.7804, 0.3814 ) }
    dend_16 { pt3dadd( 542.625, 366.003, 37.2719, 0.4576 ) }
    dend_16 { pt3dadd( 543.435, 365.401, 37.6275, 0.5084 ) }
    dend_16 { pt3dadd( 544.431, 364.921, 37.5063, 0.5084 ) }
    dend_16 { pt3dadd( 544.814, 363.953, 36.566, 0.483 ) }
    dend_16 { pt3dadd( 545.181, 362.965, 36.5212, 0.4576 ) }
    dend_16 { pt3dadd( 545.869, 362.341, 37.3794, 0.4322 ) }
    dend_16 { pt3dadd( 546.878, 361.91, 36.7108, 0.4068 ) }
    dend_16 { pt3dadd( 547.945, 361.584, 36.2536, 0.3814 ) }
    dend_16 { pt3dadd( 548.888, 361.022, 36.8614, 0.4068 ) }
    dend_16 { pt3dadd( 549.828, 360.473, 36.1542, 0.4068 ) }
    dend_16 { pt3dadd( 550.693, 360.132, 34.8015, 0.4068 ) }
    dend_16 { pt3dadd( 551.676, 359.587, 34.841, 0.4068 ) }
    dend_16 { pt3dadd( 552.453, 358.843, 34.8384, 0.4322 ) }
    dend_16 { pt3dadd( 553.351, 358.397, 35.2372, 0.483 ) }
    dend_16 { pt3dadd( 554.323, 357.948, 34.9919, 0.4576 ) }
    dend_16 { pt3dadd( 555.218, 357.374, 35.5841, 0.4576 ) }
    dend_16 { pt3dadd( 556.208, 356.85, 35.7252, 0.4068 ) }
    dend_16 { pt3dadd( 557.182, 356.257, 35.5849, 0.4322 ) }
    dend_16 { pt3dadd( 558.15, 355.807, 34.7763, 0.4068 ) }
    dend_16 { pt3dadd( 559.167, 355.545, 35.3746, 0.3814 ) }
    dend_16 { pt3dadd( 560.164, 355.056, 35.1137, 0.356 ) }
    dend_16 { pt3dadd( 561.099, 354.478, 35.1324, 0.356 ) }
    dend_16 { pt3dadd( 561.758, 353.647, 34.2574, 0.3814 ) }
    dend_16 { pt3dadd( 562.443, 352.797, 34.116, 0.3304 ) }
    dend_16 { pt3dadd( 563.33, 352.114, 34.6676, 0.305 ) }
    dend_16 { pt3dadd( 564.239, 351.538, 33.8288, 0.305 ) }
    dend_16 { pt3dadd( 565.245, 351.193, 34.0234, 0.356 ) }
    dend_16 { pt3dadd( 566.257, 350.988, 33.2032, 0.356 ) }
    dend_16 { pt3dadd( 567.351, 351.039, 33.5538, 0.305 ) }
    dend_16 { pt3dadd( 568.442, 351.225, 34.1709, 0.2542 ) }
    dend_16 { pt3dadd( 569.57, 351.178, 34.0558, 0.2288 ) }
    dend_16 { pt3dadd( 570.322, 350.358, 33.8862, 0.2542 ) }
    dend_16 { pt3dadd( 570.964, 349.412, 34.0012, 0.2796 ) }
    dend_16 { pt3dadd( 571.478, 348.402, 33.6739, 0.305 ) }
    dend_16 { pt3dadd( 571.947, 347.365, 33.8604, 0.2796 ) }
    dend_16 { pt3dadd( 572.091, 346.253, 33.6804, 0.2796 ) }
    dend_16 { pt3dadd( 571.783, 345.217, 33.0366, 0.305 ) }
    dend_16 { pt3dadd( 571.31, 344.199, 32.8667, 0.3814 ) }
    dend_16 { pt3dadd( 571.143, 343.074, 32.7404, 0.4068 ) }
    dend_16 { pt3dadd( 571.124, 341.951, 32.4862, 0.4068 ) }
    dend_16 { pt3dadd( 571.331, 340.862, 32.7088, 0.356 ) }
    dend_16 { pt3dadd( 571.555, 339.76, 33.217, 0.3304 ) }
    dend_16 { pt3dadd( 571.888, 338.724, 32.662, 0.3304 ) }
    dend_16 { pt3dadd( 572.208, 337.721, 33.7296, 0.3814 ) }
    dend_16 { pt3dadd( 572.523, 336.653, 33.9259, 0.4576 ) }
    dend_16 { pt3dadd( 572.937, 335.602, 33.5373, 0.483 ) }
    dend_16 { pt3dadd( 573.392, 334.566, 33.1181, 0.483 ) }
    dend_16 { pt3dadd( 574.036, 333.649, 33.2032, 0.4322 ) }
    dend_16 { pt3dadd( 574.794, 332.799, 33.0901, 0.4068 ) }
    dend_16 { pt3dadd( 575.375, 331.836, 33.4368, 0.356 ) }
    dend_16 { pt3dadd( 575.939, 330.899, 33.6686, 0.3304 ) }
    dend_16 { pt3dadd( 576.663, 330.169, 33.9724, 0.2796 ) }
    dend_16 { pt3dadd( 576.693, 329.045, 34.16, 0.2796 ) }
    dend_16 { pt3dadd( 576.557, 327.912, 34.02, 0.2796 ) }
    dend_16 { pt3dadd( 576.841, 326.896, 33.572, 0.305 ) }
    dend_16 { pt3dadd( 577.416, 325.919, 33.2542, 0.2796 ) }
    dend_16 { pt3dadd( 578.056, 324.977, 33.4748, 0.305 ) }
    dend_16 { pt3dadd( 578.88, 324.203, 33.0971, 0.3304 ) }
    dend_16 { pt3dadd( 579.517, 323.314, 33.7515, 0.3814 ) }
    dend_16 { pt3dadd( 579.927, 322.355, 32.9728, 0.356 ) }
    dend_16 { pt3dadd( 580.294, 321.293, 33.2192, 0.356 ) }
    dend_16 { pt3dadd( 580.534, 320.223, 33.0397, 0.3814 ) }
    dend_16 { pt3dadd( 581.327, 319.443, 33.5121, 0.4322 ) }
    dend_16 { pt3dadd( 582.088, 318.627, 33.0025, 0.4576 ) }
    dend_16 { pt3dadd( 582.877, 317.883, 32.4164, 0.4576 ) }
    dend_16 { pt3dadd( 583.461, 317.002, 32.6393, 0.4576 ) }
    dend_16 { pt3dadd( 583.536, 315.897, 33.1755, 0.4322 ) }
    dend_16 { pt3dadd( 583.812, 314.839, 33.1293, 0.4322 ) }
    dend_16 { pt3dadd( 584.26, 313.793, 33.0599, 0.4068 ) }
    dend_16 { pt3dadd( 584.833, 312.807, 33.168, 0.4576 ) }
    dend_16 { pt3dadd( 585.385, 311.854, 33.88, 0.5084 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 87/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 514.484, 400.076, 38.0674, 0.2542 ) }
    dend_13 { pt3dadd( 515.549, 399.748, 38.6966, 0.6356 ) }
    dend_13 { pt3dadd( 516.617, 399.407, 39.1684, 0.6356 ) }
    dend_13 { pt3dadd( 517.697, 399.243, 39.2305, 0.5338 ) }
    dend_13 { pt3dadd( 518.708, 399.195, 38.731, 0.4576 ) }
    dend_13 { pt3dadd( 519.687, 398.962, 37.417, 0.483 ) }
    dend_13 { pt3dadd( 520.753, 398.786, 36.5383, 0.5592 ) }
    dend_13 { pt3dadd( 521.257, 398.013, 36.0847, 0.5592 ) }
    dend_13 { pt3dadd( 521.728, 397.572, 34.1645, 0.483 ) }
    dend_13 { pt3dadd( 522.367, 396.682, 33.4578, 0.4068 ) }
    dend_13 { pt3dadd( 523.151, 395.884, 33.6216, 0.4322 ) }
    dend_13 { pt3dadd( 523.586, 395.322, 35.3844, 0.5084 ) }
    dend_13 { pt3dadd( 524.182, 394.587, 36.4658, 0.5592 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_13 { pt3dadd( 525.086, 393.903, 36.4361, 0.5338 ) }
    dend_13 { pt3dadd( 526.094, 393.439, 36.0861, 0.4576 ) }
    dend_13 { pt3dadd( 527.203, 393.427, 35.5614, 0.4068 ) }
    dend_13 { pt3dadd( 528.098, 393.333, 33.9858, 0.4322 ) }
    dend_13 { pt3dadd( 528.964, 393.034, 32.9199, 0.483 ) }
    dend_13 { pt3dadd( 529.823, 393.327, 34.2815, 0.5848 ) }
    dend_13 { pt3dadd( 530.786, 393.2, 35.5424, 0.5848 ) }
    dend_13 { pt3dadd( 531.917, 393.193, 35.3604, 0.5592 ) }
    dend_13 { pt3dadd( 532.659, 392.723, 34.6307, 0.4576 ) }
    dend_13 { pt3dadd( 533.34, 392.134, 33.4065, 0.4068 ) }
    dend_13 { pt3dadd( 534.271, 391.549, 33.075, 0.3814 ) }
    // Section: apic_18, id: apic_18, parent: apic_0 (entry count 11/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( 499.501, 393.585, 45.3961, 0.483 ) }
    apic_18 { pt3dadd( 500.049, 393.131, 45.1175, 0.305 ) }
    apic_18 { pt3dadd( 500.921, 392.413, 44.6754, 0.305 ) }
    apic_18 { pt3dadd( 501.792, 391.693, 44.2333, 0.3304 ) }
    apic_18 { pt3dadd( 502.653, 390.954, 44.3472, 0.356 ) }
    apic_18 { pt3dadd( 503.437, 390.518, 45.9211, 0.356 ) }
    apic_18 { pt3dadd( 504.217, 390.526, 47.7663, 0.3304 ) }
    apic_18 { pt3dadd( 505.095, 390.139, 46.7006, 0.3304 ) }
    apic_18 { pt3dadd( 505.605, 389.365, 45.1203, 0.356 ) }
    apic_18 { pt3dadd( 506.209, 388.8, 43.6153, 0.356 ) }
    apic_18 { pt3dadd( 506.766, 387.845, 43.1768, 0.356 ) }
    apic_18 { pt3dadd( 507.648, 387.258, 42.3917, 0.4068 ) }
    apic_18 { pt3dadd( 508.684, 387.333, 41.5422, 0.5084 ) }
    apic_18 { pt3dadd( 509.674, 387.839, 40.9167, 0.5338 ) }
    apic_18 { pt3dadd( 510.409, 388.556, 41.4123, 0.483 ) }
    apic_18 { pt3dadd( 511.251, 388.498, 41.104, 0.4068 ) }
    apic_18 { pt3dadd( 512.159, 387.829, 41.3381, 0.3814 ) }
    apic_18 { pt3dadd( 513.245, 387.88, 41.2485, 0.3814 ) }
    apic_18 { pt3dadd( 514.32, 387.813, 40.3875, 0.3814 ) }
    apic_18 { pt3dadd( 515.458, 387.854, 40.5684, 0.4576 ) }
    apic_18 { pt3dadd( 516.453, 387.5, 39.7541, 0.5592 ) }
    apic_18 { pt3dadd( 517.482, 387.959, 39.5797, 0.661 ) }
    apic_18 { pt3dadd( 518.369, 388.522, 38.8808, 0.6102 ) }
    apic_18 { pt3dadd( 519.015, 388.55, 37.1364, 0.5084 ) }
    apic_18 { pt3dadd( 519.107, 388.451, 34.3599, 0.4322 ) }
    apic_18 { pt3dadd( 519.862, 388.559, 33.3337, 0.4576 ) }
    apic_18 { pt3dadd( 520.716, 389.251, 33.045, 0.5084 ) }
    apic_18 { pt3dadd( 521.479, 389.852, 34.2395, 0.483 ) }
    apic_18 { pt3dadd( 522.125, 389.569, 36.0576, 0.4576 ) }
    apic_18 { pt3dadd( 522.583, 389.335, 37.8266, 0.4576 ) }
    apic_18 { pt3dadd( 523.671, 389.284, 38.1606, 0.5338 ) }
    apic_18 { pt3dadd( 524.614, 389.37, 36.848, 0.5592 ) }
    apic_18 { pt3dadd( 525.586, 389.212, 37.4203, 0.5338 ) }
    apic_18 { pt3dadd( 526.705, 389.111, 37.8437, 0.4576 ) }
    apic_18 { pt3dadd( 527.792, 389.227, 38.5028, 0.3814 ) }
    apic_18 { pt3dadd( 528.677, 389.664, 39.8026, 0.305 ) }
    apic_18 { pt3dadd( 529.658, 389.522, 40.7915, 0.305 ) }
    apic_18 { pt3dadd( 530.74, 389.626, 40.4793, 0.356 ) }
    apic_18 { pt3dadd( 531.086, 389.241, 38.1374, 0.4322 ) }
    apic_18 { pt3dadd( 531.588, 388.422, 36.6808, 0.4322 ) }
    apic_18 { pt3dadd( 532.656, 388.055, 36.5498, 0.3814 ) }
    apic_18 { pt3dadd( 533.648, 387.698, 35.6112, 0.3814 ) }
    apic_18 { pt3dadd( 534.638, 387.22, 35.4491, 0.3814 ) }
    apic_18 { pt3dadd( 535.539, 386.649, 35.2162, 0.4322 ) }
    apic_18 { pt3dadd( 536.62, 386.375, 35.833, 0.4068 ) }
    apic_18 { pt3dadd( 537.75, 386.272, 35.9506, 0.4068 ) }
    apic_18 { pt3dadd( 538.786, 386.329, 34.8132, 0.356 ) }
    apic_18 { pt3dadd( 539.677, 386.179, 34.9241, 0.3304 ) }
    apic_18 { pt3dadd( 540.818, 386.129, 34.7945, 0.3304 ) }
    apic_18 { pt3dadd( 541.586, 386.594, 36.3994, 0.3814 ) }
    apic_18 { pt3dadd( 542.536, 386.624, 36.6419, 0.4576 ) }
    apic_18 { pt3dadd( 543.476, 386.583, 35.2901, 0.483 ) }
    apic_18 { pt3dadd( 544.539, 386.242, 35.684, 0.5084 ) }
    apic_18 { pt3dadd( 545.387, 385.785, 36.8774, 0.483 ) }
    apic_18 { pt3dadd( 546.34, 385.198, 36.7195, 0.5338 ) }
    apic_18 { pt3dadd( 547.442, 384.99, 36.7637, 0.5084 ) }
    apic_18 { pt3dadd( 548.513, 384.663, 36.7346, 0.5084 ) }
    apic_18 { pt3dadd( 549.627, 384.611, 36.9373, 0.4576 ) }
    apic_18 { pt3dadd( 550.604, 384.14, 36.1648, 0.5084 ) }
    apic_18 { pt3dadd( 551.344, 383.719, 37.8862, 0.5592 ) }
    apic_18 { pt3dadd( 552.361, 383.815, 38.6554, 0.6102 ) }
    apic_18 { pt3dadd( 553.448, 383.931, 37.9179, 0.6102 ) }
    apic_18 { pt3dadd( 554.543, 383.704, 37.6919, 0.6356 ) }
    apic_18 { pt3dadd( 555.667, 383.535, 37.5858, 0.661 ) }
    apic_18 { pt3dadd( 556.628, 383.079, 36.6069, 0.6356 ) }
    apic_18 { pt3dadd( 557.26, 382.354, 36.6593, 0.5592 ) }
    apic_18 { pt3dadd( 557.716, 381.585, 38.3547, 0.4576 ) }
    apic_18 { pt3dadd( 558.349, 380.728, 39.0009, 0.4322 ) }
    apic_18 { pt3dadd( 559.254, 380.133, 38.6084, 0.4576 ) }
    apic_18 { pt3dadd( 560.326, 380.34, 39.0611, 0.5338 ) }
    apic_18 { pt3dadd( 561.19, 380.683, 37.9716, 0.5848 ) }
    apic_18 { pt3dadd( 562.275, 380.636, 37.7294, 0.5848 ) }
    apic_18 { pt3dadd( 563.141, 380.24, 38.103, 0.5084 ) }
    apic_18 { pt3dadd( 563.909, 379.565, 39.3529, 0.4322 ) }
    apic_18 { pt3dadd( 564.794, 379.233, 40.8646, 0.3814 ) }
    apic_18 { pt3dadd( 565.406, 378.876, 38.9054, 0.4322 ) }
    apic_18 { pt3dadd( 566.5, 378.747, 38.6658, 0.483 ) }
    apic_18 { pt3dadd( 567.528, 378.388, 38.7523, 0.5338 ) }
    apic_18 { pt3dadd( 568.471, 377.934, 39.3492, 0.5084 ) }
    apic_18 { pt3dadd( 569.154, 377.102, 39.5419, 0.5084 ) }
    apic_18 { pt3dadd( 569.826, 376.22, 40.1397, 0.5084 ) }
    apic_18 { pt3dadd( 570.63, 375.444, 40.5255, 0.5338 ) }
    apic_18 { pt3dadd( 571.338, 374.706, 40.8962, 0.5084 ) }
    apic_18 { pt3dadd( 572.179, 374.022, 40.2769, 0.4576 ) }
    apic_18 { pt3dadd( 572.942, 373.209, 39.7552, 0.4068 ) }
    apic_18 { pt3dadd( 573.504, 372.25, 39.4842, 0.356 ) }
    apic_18 { pt3dadd( 574.13, 371.298, 39.4752, 0.356 ) }
    apic_18 { pt3dadd( 574.791, 370.4, 39.9053, 0.3304 ) }
    apic_18 { pt3dadd( 575.701, 369.803, 40.3679, 0.356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    apic_18 { pt3dadd( 576.616, 369.162, 40.3701, 0.356 ) }
    apic_18 { pt3dadd( 577.56, 368.62, 40.2077, 0.3814 ) }
    apic_18 { pt3dadd( 578.607, 368.27, 39.6343, 0.3814 ) }
    apic_18 { pt3dadd( 579.398, 367.727, 40.871, 0.356 ) }
    apic_18 { pt3dadd( 580.364, 367.167, 40.8156, 0.356 ) }
    apic_18 { pt3dadd( 581.32, 366.776, 40.7476, 0.356 ) }
    apic_18 { pt3dadd( 582.432, 366.572, 40.801, 0.3814 ) }
    apic_18 { pt3dadd( 583.53, 366.318, 40.8878, 0.356 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 8/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 499.501, 393.585, 45.3961, 0.483 ) }
    apic_1 { pt3dadd( 498.658, 392.897, 45.53, 0.5338 ) }
    apic_1 { pt3dadd( 497.951, 392.059, 46.3411, 0.483 ) }
    apic_1 { pt3dadd( 497.518, 391.111, 47.4891, 0.4322 ) }
    // Section: dend_11, id: dend_11, parent: dend_5 (entry count 12/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 500.829, 408.064, 33.3794, 0.2288 ) }
    dend_11 { pt3dadd( 499.909, 407.89, 32.361, 0.2288 ) }
    dend_11 { pt3dadd( 498.881, 407.695, 31.2248, 0.2542 ) }
    dend_11 { pt3dadd( 497.894, 407.492, 29.902, 0.3304 ) }
    dend_11 { pt3dadd( 496.94, 407.281, 28.4474, 0.4322 ) }
    dend_11 { pt3dadd( 495.863, 407.136, 27.6077, 0.5338 ) }
    dend_11 { pt3dadd( 494.771, 407.417, 27.3479, 0.5848 ) }
    dend_11 { pt3dadd( 493.962, 408.195, 26.9133, 0.6356 ) }
    dend_11 { pt3dadd( 493.284, 409.092, 26.404, 0.6356 ) }
    dend_11 { pt3dadd( 492.569, 409.972, 26.0364, 0.5848 ) }
    dend_11 { pt3dadd( 492.141, 410.934, 24.9581, 0.4576 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 23/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 500.829, 408.064, 33.3794, 0.2288 ) }
    dend_6 { pt3dadd( 500.245, 408.036, 32.636, 0.305 ) }
    dend_6 { pt3dadd( 499.23, 407.99, 31.3471, 0.2542 ) }
    dend_6 { pt3dadd( 498.215, 407.945, 30.0588, 0.2796 ) }
    dend_6 { pt3dadd( 497.269, 407.402, 29.3577, 0.3304 ) }
    dend_6 { pt3dadd( 496.413, 406.663, 28.9671, 0.4068 ) }
    dend_6 { pt3dadd( 495.943, 405.803, 30.3209, 0.3814 ) }
    dend_6 { pt3dadd( 496.16, 405.271, 32.7256, 0.356 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 31/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 496.616, 416.301, 36.2046, 0.5592 ) }
    dend_2 { pt3dadd( 496.105, 415.844, 38.278, 0.3304 ) }
    dend_2 { pt3dadd( 495.453, 415.418, 40.1075, 0.3304 ) }
    dend_2 { pt3dadd( 494.479, 415.704, 40.3407, 0.356 ) }
    dend_2 { pt3dadd( 493.459, 415.98, 40.3642, 0.3814 ) }
    dend_2 { pt3dadd( 492.364, 415.998, 39.7566, 0.356 ) }
    dend_2 { pt3dadd( 491.556, 416.661, 39.286, 0.356 ) }
    dend_2 { pt3dadd( 490.631, 417.323, 39.2053, 0.356 ) }
    dend_2 { pt3dadd( 489.539, 417.628, 39.4758, 0.3814 ) }
    dend_2 { pt3dadd( 488.471, 417.751, 39.961, 0.356 ) }
    dend_2 { pt3dadd( 487.893, 418.554, 38.8889, 0.3304 ) }
    dend_2 { pt3dadd( 487.089, 419.052, 38.946, 0.305 ) }
    dend_2 { pt3dadd( 486.311, 419.466, 39.27, 0.305 ) }
    dend_2 { pt3dadd( 485.371, 419.841, 39.6628, 0.2796 ) }
    dend_2 { pt3dadd( 484.413, 419.69, 40.9072, 0.2542 ) }
    dend_2 { pt3dadd( 483.596, 420.055, 42.3144, 0.2796 ) }
    dend_2 { pt3dadd( 483.0, 420.887, 43.325, 0.4068 ) }
    dend_2 { pt3dadd( 482.493, 420.97, 41.3731, 0.5338 ) }
    dend_2 { pt3dadd( 481.678, 421.662, 41.5828, 0.6102 ) }
    dend_2 { pt3dadd( 480.785, 422.348, 42.0554, 0.5592 ) }
    dend_2 { pt3dadd( 479.859, 422.971, 42.0342, 0.5592 ) }
    dend_2 { pt3dadd( 479.033, 423.695, 41.3196, 0.5084 ) }
    dend_2 { pt3dadd( 478.367, 424.564, 40.7294, 0.483 ) }
    dend_2 { pt3dadd( 477.859, 425.582, 40.4972, 0.356 ) }
    dend_2 { pt3dadd( 477.625, 426.325, 42.2285, 0.305 ) }
    dend_2 { pt3dadd( 477.395, 427.367, 42.5214, 0.3304 ) }
    dend_2 { pt3dadd( 477.315, 427.997, 40.7817, 0.4068 ) }
    dend_2 { pt3dadd( 476.376, 428.645, 40.696, 0.483 ) }
    dend_2 { pt3dadd( 475.474, 429.311, 40.5924, 0.4576 ) }
    dend_2 { pt3dadd( 474.704, 430.128, 40.9279, 0.483 ) }
    dend_2 { pt3dadd( 474.034, 430.992, 40.3001, 0.483 ) }
    dend_2 { pt3dadd( 473.209, 431.579, 39.4178, 0.5338 ) }
    dend_2 { pt3dadd( 472.193, 432.028, 39.7342, 0.5084 ) }
    dend_2 { pt3dadd( 471.171, 432.314, 40.7036, 0.4322 ) }
    dend_2 { pt3dadd( 470.209, 432.392, 41.6816, 0.356 ) }
    dend_2 { pt3dadd( 469.408, 433.128, 41.2224, 0.305 ) }
    dend_2 { pt3dadd( 468.97, 434.137, 41.1295, 0.305 ) }
    dend_2 { pt3dadd( 468.342, 435.051, 41.1818, 0.3304 ) }
    dend_2 { pt3dadd( 467.547, 435.839, 41.4383, 0.3814 ) }
    dend_2 { pt3dadd( 466.499, 435.787, 40.997, 0.4322 ) }
    dend_2 { pt3dadd( 465.93, 436.582, 40.3217, 0.4576 ) }
    dend_2 { pt3dadd( 465.436, 437.456, 40.7907, 0.4322 ) }
    dend_2 { pt3dadd( 464.967, 438.34, 39.954, 0.4576 ) }
    dend_2 { pt3dadd( 464.398, 439.29, 40.1134, 0.483 ) }
    dend_2 { pt3dadd( 463.609, 440.115, 40.0375, 0.5592 ) }
    dend_2 { pt3dadd( 462.685, 440.623, 39.0029, 0.5592 ) }
    dend_2 { pt3dadd( 461.668, 441.062, 39.5198, 0.5338 ) }
    dend_2 { pt3dadd( 460.643, 441.442, 39.4164, 0.483 ) }
    dend_2 { pt3dadd( 459.834, 442.032, 40.481, 0.4576 ) }
    dend_2 { pt3dadd( 459.322, 443.043, 40.5196, 0.483 ) }
    dend_2 { pt3dadd( 458.988, 444.126, 40.1668, 0.483 ) }
    dend_2 { pt3dadd( 458.641, 445.204, 39.8065, 0.483 ) }
    dend_2 { pt3dadd( 458.536, 446.303, 40.1976, 0.483 ) }
    dend_2 { pt3dadd( 458.364, 447.426, 40.0884, 0.5084 ) }
    dend_2 { pt3dadd( 457.694, 448.29, 39.809, 0.5592 ) }
    dend_2 { pt3dadd( 456.908, 449.069, 40.3883, 0.6102 ) }
    dend_2 { pt3dadd( 456.342, 450.05, 40.32, 0.6864 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 88/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 496.616, 416.301, 36.2046, 0.5592 ) }
    dend_1 { pt3dadd( 495.775, 417.12, 36.1561, 0.661 ) }
    dend_1 { pt3dadd( 495.02, 417.922, 35.4396, 0.6102 ) }
    dend_1 { pt3dadd( 494.759, 418.947, 34.4436, 0.5848 ) }
    dend_1 { pt3dadd( 494.609, 420.072, 34.1768, 0.5848 ) }
    dend_1 { pt3dadd( 494.267, 421.163, 34.1813, 0.483 ) }
    dend_1 { pt3dadd( 493.861, 422.231, 34.3008, 0.3814 ) }
    dend_1 { pt3dadd( 493.079, 423.026, 34.8606, 0.305 ) }
    dend_1 { pt3dadd( 492.004, 423.266, 35.3839, 0.3304 ) }
    dend_1 { pt3dadd( 491.194, 423.735, 34.006, 0.356 ) }
    dend_1 { pt3dadd( 491.116, 424.81, 33.1038, 0.4322 ) }
    dend_1 { pt3dadd( 491.099, 425.951, 32.9448, 0.5084 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_1 { pt3dadd( 490.992, 427.076, 32.5713, 0.5848 ) }
    dend_1 { pt3dadd( 490.635, 428.131, 31.9684, 0.6102 ) }
    dend_1 { pt3dadd( 490.167, 429.172, 31.9068, 0.6102 ) }
    dend_1 { pt3dadd( 489.528, 430.12, 31.855, 0.6356 ) }
    dend_1 { pt3dadd( 488.866, 431.043, 31.6112, 0.6102 ) }
    dend_1 { pt3dadd( 488.312, 431.982, 30.7852, 0.5848 ) }
    dend_1 { pt3dadd( 487.952, 432.974, 29.7525, 0.5338 ) }
    dend_1 { pt3dadd( 487.618, 434.061, 29.5252, 0.5338 ) }
    dend_1 { pt3dadd( 487.518, 435.189, 29.3174, 0.483 ) }
    dend_1 { pt3dadd( 487.286, 436.171, 30.0731, 0.4322 ) }
    dend_1 { pt3dadd( 486.409, 436.725, 30.5715, 0.3814 ) }
    dend_1 { pt3dadd( 485.786, 437.551, 29.9138, 0.3814 ) }
    dend_1 { pt3dadd( 485.618, 438.668, 29.6887, 0.356 ) }
    dend_1 { pt3dadd( 485.479, 439.801, 29.68, 0.3304 ) }
    dend_1 { pt3dadd( 485.283, 440.927, 29.68, 0.305 ) }
    dend_1 { pt3dadd( 485.134, 442.061, 29.68, 0.3304 ) }
    dend_1 { pt3dadd( 484.806, 443.14, 29.68, 0.4068 ) }
    dend_1 { pt3dadd( 484.103, 444.016, 29.6803, 0.5338 ) }
    dend_1 { pt3dadd( 483.259, 444.788, 29.6806, 0.6356 ) }
    dend_1 { pt3dadd( 482.44, 445.587, 29.682, 0.6864 ) }
    dend_1 { pt3dadd( 481.646, 446.41, 29.6876, 0.661 ) }
    dend_1 { pt3dadd( 480.932, 447.301, 29.7147, 0.6356 ) }
    dend_1 { pt3dadd( 480.395, 448.299, 29.9004, 0.6102 ) }
    dend_1 { pt3dadd( 480.062, 449.369, 30.3918, 0.6102 ) }
    dend_1 { pt3dadd( 479.849, 450.48, 30.7644, 0.6102 ) }
    dend_1 { pt3dadd( 479.919, 451.596, 31.0593, 0.5592 ) }
    dend_1 { pt3dadd( 480.202, 452.685, 31.5412, 0.5084 ) }
    dend_1 { pt3dadd( 480.411, 453.797, 31.6711, 0.4576 ) }
    dend_1 { pt3dadd( 480.184, 454.869, 31.3135, 0.5084 ) }
    dend_1 { pt3dadd( 479.547, 455.765, 31.6226, 0.5338 ) }
    dend_1 { pt3dadd( 478.801, 456.578, 32.3646, 0.5592 ) }
    dend_1 { pt3dadd( 478.118, 457.466, 32.8773, 0.5338 ) }
    dend_1 { pt3dadd( 477.634, 458.491, 33.0176, 0.5338 ) }
    dend_1 { pt3dadd( 477.423, 459.607, 32.9675, 0.483 ) }
    dend_1 { pt3dadd( 477.349, 460.74, 32.6645, 0.4322 ) }
    dend_1 { pt3dadd( 477.121, 461.851, 32.6396, 0.4322 ) }
    dend_1 { pt3dadd( 476.545, 462.821, 32.765, 0.483 ) }
    dend_1 { pt3dadd( 475.756, 463.63, 32.4528, 0.483 ) }
    dend_1 { pt3dadd( 474.824, 464.28, 32.4411, 0.4068 ) }
    dend_1 { pt3dadd( 473.996, 465.054, 32.2244, 0.356 ) }
    dend_1 { pt3dadd( 473.198, 465.872, 32.223, 0.3814 ) }
    dend_1 { pt3dadd( 472.358, 466.631, 32.5987, 0.4576 ) }
    dend_1 { pt3dadd( 471.577, 467.456, 32.9148, 0.5338 ) }
    dend_1 { pt3dadd( 470.984, 468.42, 32.6441, 0.5848 ) }
    dend_1 { pt3dadd( 470.398, 469.378, 32.0984, 0.6102 ) }
    dend_1 { pt3dadd( 469.721, 470.294, 31.9326, 0.5848 ) }
    dend_1 { pt3dadd( 468.986, 471.17, 31.92, 0.5848 ) }
    dend_1 { pt3dadd( 468.246, 472.043, 31.9206, 0.5592 ) }
    dend_1 { pt3dadd( 467.633, 473.007, 31.9222, 0.5848 ) }
    dend_1 { pt3dadd( 467.139, 474.038, 31.934, 0.5338 ) }
    dend_1 { pt3dadd( 466.607, 475.051, 31.9934, 0.5084 ) }
    dend_1 { pt3dadd( 466.006, 476.016, 32.2669, 0.4068 ) }
    dend_1 { pt3dadd( 465.288, 476.903, 32.4234, 0.356 ) }
    dend_1 { pt3dadd( 464.518, 477.748, 32.3798, 0.3304 ) }
    dend_1 { pt3dadd( 464.061, 478.793, 32.5265, 0.356 ) }
    dend_1 { pt3dadd( 463.434, 479.733, 32.1717, 0.4068 ) }
    dend_1 { pt3dadd( 462.531, 480.425, 31.9228, 0.4322 ) }
    dend_1 { pt3dadd( 461.688, 481.198, 31.9309, 0.4576 ) }
    dend_1 { pt3dadd( 460.88, 482.008, 31.9642, 0.4322 ) }
    dend_1 { pt3dadd( 460.084, 482.826, 32.1118, 0.3814 ) }
    dend_1 { pt3dadd( 459.362, 483.685, 32.6449, 0.3304 ) }
    dend_1 { pt3dadd( 458.793, 484.658, 33.0534, 0.356 ) }
    dend_1 { pt3dadd( 458.577, 485.774, 33.2945, 0.4068 ) }
    dend_1 { pt3dadd( 458.548, 486.896, 33.8209, 0.4576 ) }
    dend_1 { pt3dadd( 458.305, 488.002, 34.0704, 0.4322 ) }
    dend_1 { pt3dadd( 457.798, 489.02, 33.8164, 0.3814 ) }
    dend_1 { pt3dadd( 457.216, 489.979, 33.3021, 0.3304 ) }
    dend_1 { pt3dadd( 456.604, 490.934, 33.2665, 0.2796 ) }
    dend_1 { pt3dadd( 456.255, 492.005, 33.6006, 0.2542 ) }
    dend_1 { pt3dadd( 455.971, 493.094, 33.1276, 0.2796 ) }
    dend_1 { pt3dadd( 455.762, 494.182, 32.4528, 0.3304 ) }
    dend_1 { pt3dadd( 455.401, 495.247, 32.0183, 0.3814 ) }
    dend_1 { pt3dadd( 454.915, 496.279, 31.922, 0.356 ) }
    dend_1 { pt3dadd( 454.635, 497.379, 31.932, 0.3304 ) }
    dend_1 { pt3dadd( 454.589, 498.521, 32.0141, 0.305 ) }
    dend_1 { pt3dadd( 454.53, 499.66, 32.193, 0.2796 ) }
    dend_1 { pt3dadd( 454.51, 500.803, 32.1812, 0.2542 ) }
    dend_1 { pt3dadd( 454.51, 501.947, 32.0846, 0.2288 ) }
    dend_1 { pt3dadd( 454.436, 503.076, 31.8562, 0.2542 ) }
    dend_1 { pt3dadd( 454.053, 504.132, 31.5067, 0.305 ) }
    dend_1 { pt3dadd( 453.419, 505.078, 31.4205, 0.356 ) }
    dend_1 { pt3dadd( 452.749, 505.987, 31.8164, 0.356 ) }
    dend_1 { pt3dadd( 452.229, 506.942, 32.3187, 0.3304 ) }
    dend_1 { pt3dadd( 452.007, 508.061, 32.48, 0.305 ) }
    dend_1 { pt3dadd( 451.88, 509.194, 32.48, 0.305 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 85/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 510.326, 422.822, 50.9289, 0.7372 ) }
    dend_36 { pt3dadd( 510.333, 424.403, 50.463, 0.4322 ) }
    dend_36 { pt3dadd( 510.245, 425.528, 50.4717, 0.5084 ) }
    dend_36 { pt3dadd( 509.73, 426.48, 50.5548, 0.5338 ) }
    dend_36 { pt3dadd( 509.134, 427.31, 51.4595, 0.5338 ) }
    dend_36 { pt3dadd( 509.167, 428.341, 52.2438, 0.4576 ) }
    dend_36 { pt3dadd( 509.104, 429.475, 52.2511, 0.4322 ) }
    dend_36 { pt3dadd( 508.543, 430.424, 51.7098, 0.4322 ) }
    dend_36 { pt3dadd( 508.414, 431.394, 50.328, 0.4322 ) }
    dend_36 { pt3dadd( 508.513, 432.446, 49.2576, 0.4068 ) }
    dend_36 { pt3dadd( 508.625, 433.447, 49.1366, 0.3814 ) }
    dend_36 { pt3dadd( 508.214, 433.888, 51.2943, 0.4322 ) }
    dend_36 { pt3dadd( 507.747, 434.815, 51.8151, 0.483 ) }
    dend_36 { pt3dadd( 507.922, 435.798, 53.0488, 0.5592 ) }
    dend_36 { pt3dadd( 508.062, 436.919, 52.7332, 0.5592 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 0/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 510.326, 422.822, 50.9289, 0.7372 ) }
    dend_33 { pt3dadd( 508.976, 423.62, 50.9295, 0.4068 ) }
    dend_33 { pt3dadd( 508.316, 424.449, 50.4143, 0.4322 ) }
    dend_33 { pt3dadd( 507.355, 424.926, 49.4987, 0.5084 ) }
    dend_33 { pt3dadd( 506.53, 425.629, 49.7675, 0.5592 ) }
    dend_33 { pt3dadd( 505.716, 426.407, 50.0172, 0.5592 ) }
    dend_33 { pt3dadd( 505.045, 426.894, 51.6401, 0.5084 ) }
    dend_33 { pt3dadd( 504.31, 427.676, 51.8627, 0.483 ) }
    dend_33 { pt3dadd( 503.441, 428.378, 52.36, 0.4068 ) }
    dend_33 { pt3dadd( 502.848, 429.342, 52.2539, 0.3814 ) }
    dend_33 { pt3dadd( 502.096, 430.048, 51.4758, 0.3304 ) }
    dend_33 { pt3dadd( 501.105, 430.497, 51.917, 0.3304 ) }
    dend_33 { pt3dadd( 500.224, 431.039, 52.4997, 0.2796 ) }
    dend_33 { pt3dadd( 499.194, 431.237, 53.4246, 0.2542 ) }
    dend_33 { pt3dadd( 498.117, 431.206, 52.9295, 0.2542 ) }
    dend_33 { pt3dadd( 497.198, 431.72, 52.5871, 0.305 ) }
    dend_33 { pt3dadd( 496.144, 432.108, 52.9194, 0.356 ) }
    dend_33 { pt3dadd( 495.047, 432.432, 53.0132, 0.3814 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 18/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 528.49, 410.429, 47.32, 0.4322 ) }
    dend_31 { pt3dadd( 528.817, 410.743, 47.6664, 0.5338 ) }
    dend_31 { pt3dadd( 529.607, 411.498, 48.5002, 0.4322 ) }
    dend_31 { pt3dadd( 530.416, 412.156, 48.8956, 0.4576 ) }
    dend_31 { pt3dadd( 531.372, 412.229, 47.5826, 0.5084 ) }
    dend_31 { pt3dadd( 532.247, 411.863, 48.2658, 0.5084 ) }
    dend_31 { pt3dadd( 533.205, 411.641, 49.4105, 0.483 ) }
    dend_31 { pt3dadd( 534.273, 411.713, 50.3395, 0.4322 ) }
    dend_31 { pt3dadd( 535.31, 411.672, 49.3422, 0.4068 ) }
    dend_31 { pt3dadd( 536.424, 411.612, 48.7536, 0.356 ) }
    dend_31 { pt3dadd( 537.315, 412.053, 47.5479, 0.3304 ) }
    dend_31 { pt3dadd( 538.32, 411.89, 47.0058, 0.356 ) }
    dend_31 { pt3dadd( 539.198, 412.079, 48.2507, 0.4068 ) }
    dend_31 { pt3dadd( 539.866, 411.355, 48.648, 0.4322 ) }
    dend_31 { pt3dadd( 540.891, 411.287, 49.3282, 0.356 ) }
    dend_31 { pt3dadd( 541.744, 411.784, 50.5688, 0.305 ) }
    dend_31 { pt3dadd( 542.776, 411.812, 51.4567, 0.305 ) }
    dend_31 { pt3dadd( 543.81, 411.49, 51.0703, 0.3814 ) }
    dend_31 { pt3dadd( 544.888, 411.168, 50.6808, 0.4068 ) }
    dend_31 { pt3dadd( 546.013, 411.275, 50.4025, 0.3814 ) }
    dend_31 { pt3dadd( 547.078, 410.921, 49.889, 0.305 ) }
    dend_31 { pt3dadd( 548.135, 410.668, 49.1574, 0.2542 ) }
    dend_31 { pt3dadd( 549.002, 410.025, 49.1075, 0.2796 ) }
    dend_31 { pt3dadd( 549.859, 409.484, 50.316, 0.3304 ) }
    dend_31 { pt3dadd( 550.627, 409.089, 52.0069, 0.4068 ) }
    dend_31 { pt3dadd( 551.573, 408.855, 53.3977, 0.4576 ) }
    dend_31 { pt3dadd( 552.667, 408.593, 53.4069, 0.5338 ) }
    dend_31 { pt3dadd( 553.296, 407.85, 52.0481, 0.5848 ) }
    dend_31 { pt3dadd( 554.365, 407.533, 51.7681, 0.5848 ) }
    dend_31 { pt3dadd( 555.318, 406.993, 52.4625, 0.5338 ) }
    dend_31 { pt3dadd( 556.307, 406.547, 52.7313, 0.483 ) }
    dend_31 { pt3dadd( 557.401, 406.336, 52.3519, 0.4576 ) }
    dend_31 { pt3dadd( 558.38, 406.01, 51.1767, 0.483 ) }
    dend_31 { pt3dadd( 559.484, 405.909, 50.5434, 0.483 ) }
    dend_31 { pt3dadd( 560.596, 405.829, 50.8578, 0.4576 ) }
    dend_31 { pt3dadd( 561.594, 405.949, 51.1325, 0.3814 ) }
    dend_31 { pt3dadd( 562.577, 405.557, 52.2049, 0.356 ) }
    dend_31 { pt3dadd( 563.57, 405.049, 52.6075, 0.3304 ) }
    dend_31 { pt3dadd( 564.611, 404.637, 52.2617, 0.3304 ) }
    dend_31 { pt3dadd( 565.74, 404.581, 51.8538, 0.305 ) }
    dend_31 { pt3dadd( 566.776, 404.341, 52.0534, 0.3304 ) }
    dend_31 { pt3dadd( 567.688, 404.144, 52.2962, 0.356 ) }
    dend_31 { pt3dadd( 568.674, 404.213, 52.325, 0.356 ) }
    dend_31 { pt3dadd( 569.63, 403.809, 52.78, 0.3304 ) }
    dend_31 { pt3dadd( 570.497, 403.073, 53.0303, 0.3304 ) }
    dend_31 { pt3dadd( 571.616, 402.992, 53.0348, 0.3814 ) }
    dend_31 { pt3dadd( 572.716, 403.042, 53.7118, 0.4576 ) }
    dend_31 { pt3dadd( 573.63, 402.358, 53.7079, 0.483 ) }
    dend_31 { pt3dadd( 574.598, 401.776, 53.2778, 0.5084 ) }
    dend_31 { pt3dadd( 575.516, 401.176, 52.7817, 0.4576 ) }
    dend_31 { pt3dadd( 576.297, 400.392, 53.2893, 0.4576 ) }
    dend_31 { pt3dadd( 576.965, 399.541, 52.85, 0.3814 ) }
    dend_31 { pt3dadd( 577.919, 399.051, 52.7892, 0.356 ) }
    dend_31 { pt3dadd( 578.987, 399.106, 53.578, 0.305 ) }
    dend_31 { pt3dadd( 580.109, 399.122, 53.5223, 0.3304 ) }
    dend_31 { pt3dadd( 581.155, 398.754, 54.0288, 0.3814 ) }
    dend_31 { pt3dadd( 582.276, 398.638, 54.1346, 0.4576 ) }
    dend_31 { pt3dadd( 583.263, 398.158, 54.8719, 0.5084 ) }
    dend_31 { pt3dadd( 584.333, 397.775, 55.0984, 0.5084 ) }
    dend_31 { pt3dadd( 585.304, 397.212, 55.6063, 0.4576 ) }
    dend_31 { pt3dadd( 586.229, 396.665, 56.5398, 0.3814 ) }
    dend_31 { pt3dadd( 587.266, 396.368, 57.314, 0.356 ) }
    dend_31 { pt3dadd( 588.378, 396.471, 57.5728, 0.3304 ) }
    dend_31 { pt3dadd( 589.453, 396.459, 57.755, 0.3304 ) }
    dend_31 { pt3dadd( 590.413, 395.915, 58.2658, 0.2796 ) }
    dend_31 { pt3dadd( 591.281, 395.196, 58.7188, 0.2796 ) }
    dend_31 { pt3dadd( 591.987, 394.34, 59.206, 0.2796 ) }
    dend_31 { pt3dadd( 592.856, 393.73, 59.4513, 0.305 ) }
    dend_31 { pt3dadd( 593.974, 393.545, 59.7831, 0.2796 ) }
    dend_31 { pt3dadd( 594.974, 393.013, 59.7187, 0.2542 ) }
    dend_31 { pt3dadd( 595.723, 392.159, 59.8744, 0.2288 ) }
    dend_31 { pt3dadd( 596.453, 391.281, 60.0533, 0.2288 ) }
    dend_31 { pt3dadd( 597.258, 390.48, 60.3982, 0.2288 ) }
    dend_31 { pt3dadd( 598.353, 390.245, 59.9698, 0.2288 ) }
    dend_31 { pt3dadd( 599.442, 389.991, 60.543, 0.2288 ) }
    dend_31 { pt3dadd( 600.581, 390.026, 60.7684, 0.2542 ) }
    dend_31 { pt3dadd( 601.719, 390.014, 61.0173, 0.2796 ) }
    dend_31 { pt3dadd( 602.843, 389.801, 61.1212, 0.305 ) }
    dend_31 { pt3dadd( 603.914, 389.434, 61.2909, 0.2796 ) }
    dend_31 { pt3dadd( 604.82, 388.748, 61.0338, 0.2542 ) }
    dend_31 { pt3dadd( 605.835, 388.223, 60.9333, 0.2288 ) }
    dend_31 { pt3dadd( 606.869, 387.764, 60.6046, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_31 { pt3dadd( 607.979, 387.496, 60.674, 0.2288 ) }
    dend_31 { pt3dadd( 609.081, 387.203, 60.7281, 0.2288 ) }
    dend_31 { pt3dadd( 610.19, 386.998, 60.76, 0.2288 ) }
    dend_31 { pt3dadd( 611.302, 386.799, 60.6267, 0.2288 ) }
    dend_31 { pt3dadd( 612.414, 386.586, 60.6791, 0.2288 ) }
    dend_31 { pt3dadd( 613.356, 386.117, 61.5294, 0.2288 ) }
    dend_31 { pt3dadd( 613.919, 385.295, 62.16, 0.2288 ) }
    dend_31 { pt3dadd( 614.434, 384.363, 62.16, 0.2288 ) }
    dend_31 { pt3dadd( 615.335, 383.926, 62.16, 0.2288 ) }
    dend_31 { pt3dadd( 616.458, 383.796, 62.16, 0.2288 ) }
    dend_31 { pt3dadd( 617.52, 383.491, 62.4224, 0.2288 ) }
    dend_31 { pt3dadd( 617.989, 382.611, 62.72, 0.2288 ) }
    dend_31 { pt3dadd( 617.989, 381.467, 62.72, 0.2288 ) }
    dend_31 { pt3dadd( 617.958, 380.326, 62.7441, 0.2288 ) }
    dend_31 { pt3dadd( 617.874, 379.194, 62.9815, 0.2288 ) }
    dend_31 { pt3dadd( 617.719, 378.063, 63.0, 0.2288 ) }
    dend_31 { pt3dadd( 617.695, 376.931, 63.0, 0.2542 ) }
    dend_31 { pt3dadd( 617.874, 375.804, 63.0, 0.305 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 18/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 528.49, 410.429, 47.32, 0.4322 ) }
    dend_30 { pt3dadd( 529.24, 409.547, 47.1747, 0.356 ) }
    dend_30 { pt3dadd( 529.94, 408.836, 46.0883, 0.305 ) }
    dend_30 { pt3dadd( 530.583, 408.55, 43.9908, 0.2542 ) }
    dend_30 { pt3dadd( 530.745, 407.6, 42.9313, 0.2796 ) }
    dend_30 { pt3dadd( 531.117, 407.293, 45.2253, 0.3304 ) }
    dend_30 { pt3dadd( 531.632, 407.2, 47.045, 0.3814 ) }
    dend_30 { pt3dadd( 531.839, 406.113, 46.9868, 0.3304 ) }
    dend_30 { pt3dadd( 532.271, 405.111, 46.4677, 0.305 ) }
    dend_30 { pt3dadd( 532.762, 404.111, 46.8482, 0.3304 ) }
    dend_30 { pt3dadd( 533.323, 403.267, 46.1126, 0.4322 ) }
    dend_30 { pt3dadd( 533.802, 402.313, 47.0305, 0.5084 ) }
    dend_30 { pt3dadd( 534.658, 401.573, 46.6822, 0.483 ) }
    dend_30 { pt3dadd( 535.396, 400.815, 45.8724, 0.483 ) }
    dend_30 { pt3dadd( 536.364, 400.25, 46.0197, 0.483 ) }
    dend_30 { pt3dadd( 537.356, 399.716, 45.6078, 0.5338 ) }
    dend_30 { pt3dadd( 538.127, 399.002, 44.637, 0.4576 ) }
    dend_30 { pt3dadd( 538.882, 398.606, 44.2238, 0.4068 ) }
    dend_30 { pt3dadd( 539.31, 398.362, 46.2017, 0.356 ) }
    dend_30 { pt3dadd( 540.041, 397.966, 44.9324, 0.4068 ) }
    dend_30 { pt3dadd( 540.952, 397.435, 44.0798, 0.3814 ) }
    dend_30 { pt3dadd( 541.693, 396.856, 45.2318, 0.356 ) }
    dend_30 { pt3dadd( 542.479, 396.278, 45.9276, 0.3304 ) }
    dend_30 { pt3dadd( 543.354, 395.546, 45.8573, 0.3814 ) }
    dend_30 { pt3dadd( 544.214, 394.804, 45.5568, 0.4576 ) }
    dend_30 { pt3dadd( 544.995, 393.971, 45.5773, 0.483 ) }
    dend_30 { pt3dadd( 545.276, 392.891, 45.0971, 0.483 ) }
    dend_30 { pt3dadd( 545.758, 392.042, 46.452, 0.483 ) }
    dend_30 { pt3dadd( 546.073, 391.019, 47.096, 0.5338 ) }
    dend_30 { pt3dadd( 546.781, 390.221, 47.7688, 0.5848 ) }
    dend_30 { pt3dadd( 547.557, 389.398, 47.3768, 0.5592 ) }
    dend_30 { pt3dadd( 548.232, 388.566, 47.5443, 0.483 ) }
    dend_30 { pt3dadd( 548.78, 387.64, 48.3308, 0.3814 ) }
    dend_30 { pt3dadd( 549.56, 386.847, 48.8233, 0.356 ) }
    dend_30 { pt3dadd( 550.128, 386.188, 47.6585, 0.3814 ) }
    dend_30 { pt3dadd( 550.695, 385.479, 49.3455, 0.483 ) }
    dend_30 { pt3dadd( 551.393, 385.008, 50.8721, 0.5592 ) }
    dend_30 { pt3dadd( 552.49, 385.146, 50.8133, 0.6102 ) }
    dend_30 { pt3dadd( 553.531, 385.59, 50.4932, 0.5592 ) }
    dend_30 { pt3dadd( 554.568, 385.972, 49.9187, 0.483 ) }
    dend_30 { pt3dadd( 555.604, 385.909, 50.5924, 0.356 ) }
    dend_30 { pt3dadd( 556.378, 385.846, 52.5868, 0.3304 ) }
    dend_30 { pt3dadd( 557.315, 386.051, 53.5497, 0.356 ) }
    dend_30 { pt3dadd( 558.344, 386.029, 52.5134, 0.483 ) }
    dend_30 { pt3dadd( 559.281, 386.074, 51.0378, 0.5338 ) }
    dend_30 { pt3dadd( 560.357, 386.176, 50.7136, 0.5592 ) }
    dend_30 { pt3dadd( 561.388, 386.173, 51.1507, 0.483 ) }
    dend_30 { pt3dadd( 562.32, 386.782, 50.9802, 0.4068 ) }
    dend_30 { pt3dadd( 563.346, 387.223, 51.5063, 0.305 ) }
    dend_30 { pt3dadd( 564.443, 387.072, 51.6477, 0.2796 ) }
    dend_30 { pt3dadd( 565.419, 386.555, 52.2788, 0.2796 ) }
    dend_30 { pt3dadd( 566.456, 386.358, 52.2346, 0.305 ) }
    dend_30 { pt3dadd( 567.484, 386.187, 52.0052, 0.305 ) }
    dend_30 { pt3dadd( 568.361, 385.602, 52.5398, 0.305 ) }
    dend_30 { pt3dadd( 568.799, 384.568, 52.6316, 0.305 ) }
    dend_30 { pt3dadd( 569.016, 383.448, 52.7775, 0.305 ) }
    dend_30 { pt3dadd( 569.484, 382.415, 52.929, 0.3304 ) }
    dend_30 { pt3dadd( 570.13, 381.491, 52.509, 0.3814 ) }
    dend_30 { pt3dadd( 571.055, 380.827, 52.4541, 0.4576 ) }
    dend_30 { pt3dadd( 572.013, 380.244, 52.803, 0.5084 ) }
    dend_30 { pt3dadd( 573.109, 379.983, 52.4185, 0.5084 ) }
    dend_30 { pt3dadd( 574.179, 379.616, 52.2998, 0.4322 ) }
    dend_30 { pt3dadd( 575.247, 379.326, 51.7345, 0.3304 ) }
    dend_30 { pt3dadd( 576.201, 378.881, 51.7101, 0.2542 ) }
    dend_30 { pt3dadd( 577.078, 378.217, 51.7656, 0.2542 ) }
    dend_30 { pt3dadd( 578.12, 377.761, 51.5701, 0.2796 ) }
    dend_30 { pt3dadd( 579.179, 377.502, 50.9816, 0.305 ) }
    dend_30 { pt3dadd( 580.168, 377.902, 50.7494, 0.305 ) }
    dend_30 { pt3dadd( 580.932, 378.706, 50.2695, 0.3304 ) }
    dend_30 { pt3dadd( 581.913, 379.171, 50.6134, 0.3814 ) }
    dend_30 { pt3dadd( 583.008, 379.333, 50.1656, 0.4068 ) }
    dend_30 { pt3dadd( 584.09, 379.604, 50.6895, 0.3814 ) }
    dend_30 { pt3dadd( 585.185, 379.898, 51.0488, 0.3304 ) }
    dend_30 { pt3dadd( 586.299, 380.151, 50.96, 0.305 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 92/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 524.828, 413.251, 52.64, 0.7118 ) }
    dend_20 { pt3dadd( 523.385, 413.642, 52.9682, 0.5338 ) }
    dend_20 { pt3dadd( 522.536, 414.216, 53.8045, 0.4576 ) }
    dend_20 { pt3dadd( 521.779, 414.376, 55.5878, 0.4322 ) }
    dend_20 { pt3dadd( 520.749, 414.014, 56.0, 0.4576 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 97/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 524.828, 413.251, 52.64, 0.7118 ) }
    dend_19 { pt3dadd( 525.255, 413.878, 52.5286, 0.483 ) }
    dend_19 { pt3dadd( 525.94, 414.562, 52.6971, 0.5084 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_19 { pt3dadd( 526.533, 415.352, 52.5683, 0.5592 ) }
    dend_19 { pt3dadd( 527.63, 415.566, 52.4048, 0.6864 ) }
    dend_19 { pt3dadd( 528.469, 415.646, 54.0459, 0.788 ) }
    dend_19 { pt3dadd( 529.352, 415.722, 55.7497, 0.7372 ) }
    dend_19 { pt3dadd( 530.388, 415.606, 56.3438, 0.5848 ) }
    dend_19 { pt3dadd( 531.31, 416.067, 56.5351, 0.3814 ) }
    dend_19 { pt3dadd( 531.729, 417.038, 57.475, 0.3304 ) }
    dend_19 { pt3dadd( 532.451, 417.665, 58.8227, 0.3814 ) }
    dend_19 { pt3dadd( 533.013, 418.625, 59.0069, 0.483 ) }
    dend_19 { pt3dadd( 533.281, 419.598, 59.3261, 0.5084 ) }
    dend_19 { pt3dadd( 533.762, 420.299, 61.1058, 0.4322 ) }
    dend_19 { pt3dadd( 534.232, 421.047, 62.7808, 0.4068 ) }
    dend_19 { pt3dadd( 535.151, 421.487, 63.189, 0.3814 ) }
    dend_19 { pt3dadd( 536.263, 421.646, 63.2797, 0.4068 ) }
    dend_19 { pt3dadd( 537.169, 421.261, 64.3474, 0.4322 ) }
    dend_19 { pt3dadd( 538.133, 421.034, 63.7118, 0.483 ) }
    dend_19 { pt3dadd( 539.117, 421.38, 62.7063, 0.5848 ) }
    dend_19 { pt3dadd( 540.12, 421.764, 62.2356, 0.5848 ) }
    dend_19 { pt3dadd( 540.648, 422.538, 62.4694, 0.6356 ) }
    dend_19 { pt3dadd( 541.279, 423.159, 62.6562, 0.6102 ) }
    dend_19 { pt3dadd( 542.284, 422.991, 63.2915, 0.6102 ) }
    dend_19 { pt3dadd( 542.703, 423.489, 65.2977, 0.5592 ) }
    dend_19 { pt3dadd( 543.39, 423.573, 66.9206, 0.5084 ) }
    dend_19 { pt3dadd( 544.331, 424.07, 66.2175, 0.4576 ) }
    dend_19 { pt3dadd( 545.456, 424.19, 66.243, 0.3814 ) }
    dend_19 { pt3dadd( 546.565, 424.326, 66.7579, 0.356 ) }
    dend_19 { pt3dadd( 547.055, 424.943, 68.4289, 0.3814 ) }
    dend_19 { pt3dadd( 548.091, 425.162, 69.2227, 0.4576 ) }
    dend_19 { pt3dadd( 548.817, 425.507, 71.1536, 0.5338 ) }
    dend_19 { pt3dadd( 549.745, 425.941, 72.116, 0.5848 ) }
    dend_19 { pt3dadd( 550.314, 426.634, 73.5529, 0.6102 ) }
    dend_19 { pt3dadd( 550.802, 427.392, 74.5077, 0.6102 ) }
    dend_19 { pt3dadd( 551.32, 428.376, 73.9102, 0.6102 ) }
    dend_19 { pt3dadd( 551.956, 429.297, 74.1342, 0.6102 ) }
    dend_19 { pt3dadd( 552.604, 430.135, 75.1612, 0.5848 ) }
    dend_19 { pt3dadd( 553.51, 430.794, 75.4306, 0.5338 ) }
    dend_19 { pt3dadd( 554.383, 431.485, 74.863, 0.4576 ) }
    dend_19 { pt3dadd( 554.943, 432.327, 75.871, 0.4068 ) }
    dend_19 { pt3dadd( 555.505, 433.238, 76.293, 0.3814 ) }
    dend_19 { pt3dadd( 555.739, 433.862, 78.3588, 0.356 ) }
    dend_19 { pt3dadd( 555.878, 434.104, 81.074, 0.305 ) }
    dend_19 { pt3dadd( 556.016, 434.347, 83.7892, 0.2542 ) }
    dend_19 { pt3dadd( 556.281, 434.878, 85.0077, 0.2288 ) }
    dend_19 { pt3dadd( 556.75, 435.832, 84.2324, 0.2288 ) }
    dend_19 { pt3dadd( 557.046, 436.77, 85.2054, 0.2542 ) }
    dend_19 { pt3dadd( 557.239, 437.674, 85.1043, 0.305 ) }
    dend_19 { pt3dadd( 557.534, 438.758, 85.4386, 0.356 ) }
    dend_19 { pt3dadd( 558.206, 439.519, 84.9621, 0.356 ) }
    dend_19 { pt3dadd( 558.872, 439.699, 82.95, 0.356 ) }
    dend_19 { pt3dadd( 558.745, 440.434, 81.5458, 0.4068 ) }
    dend_19 { pt3dadd( 558.075, 441.217, 80.4364, 0.483 ) }
    dend_19 { pt3dadd( 557.526, 441.867, 81.6088, 0.5338 ) }
    dend_19 { pt3dadd( 557.564, 442.741, 83.0474, 0.5084 ) }
    dend_19 { pt3dadd( 557.737, 443.324, 83.6676, 0.5084 ) }
    dend_19 { pt3dadd( 558.482, 443.546, 85.1242, 0.4576 ) }
    dend_19 { pt3dadd( 558.789, 444.367, 86.588, 0.4322 ) }
    dend_19 { pt3dadd( 558.984, 445.463, 87.1814, 0.4068 ) }
    dend_19 { pt3dadd( 559.265, 446.548, 86.9764, 0.4322 ) }
    dend_19 { pt3dadd( 559.934, 447.319, 85.9995, 0.4322 ) }
    dend_19 { pt3dadd( 560.956, 447.673, 85.2317, 0.3814 ) }
    dend_19 { pt3dadd( 561.922, 448.149, 85.9166, 0.4068 ) }
    dend_19 { pt3dadd( 562.047, 448.791, 88.2, 0.5084 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 62/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 534.271, 391.549, 33.075, 0.3814 ) }
    dend_15 { pt3dadd( 534.924, 391.491, 32.137, 0.6102 ) }
    dend_15 { pt3dadd( 535.786, 391.261, 30.6555, 0.6356 ) }
    dend_15 { pt3dadd( 536.557, 390.927, 29.6909, 0.5848 ) }
    dend_15 { pt3dadd( 537.661, 390.938, 29.1284, 0.5338 ) }
    dend_15 { pt3dadd( 538.448, 390.248, 29.5322, 0.5338 ) }
    dend_15 { pt3dadd( 539.15, 389.418, 30.221, 0.6102 ) }
    dend_15 { pt3dadd( 539.58, 388.398, 29.8231, 0.6356 ) }
    dend_15 { pt3dadd( 539.726, 387.325, 29.022, 0.6356 ) }
    dend_15 { pt3dadd( 539.878, 386.23, 29.2457, 0.5592 ) }
    dend_15 { pt3dadd( 540.325, 385.208, 29.3345, 0.483 ) }
    dend_15 { pt3dadd( 540.74, 384.198, 29.9922, 0.4068 ) }
    dend_15 { pt3dadd( 541.328, 383.274, 30.0896, 0.4068 ) }
    dend_15 { pt3dadd( 542.059, 382.639, 28.7843, 0.483 ) }
    dend_15 { pt3dadd( 543.031, 382.062, 28.6364, 0.5338 ) }
    dend_15 { pt3dadd( 543.885, 381.358, 28.716, 0.5592 ) }
    dend_15 { pt3dadd( 544.554, 380.453, 28.3234, 0.5084 ) }
    dend_15 { pt3dadd( 544.901, 379.386, 28.0266, 0.483 ) }
    dend_15 { pt3dadd( 545.689, 378.747, 28.852, 0.4576 ) }
    dend_15 { pt3dadd( 546.552, 378.642, 27.4417, 0.4576 ) }
    dend_15 { pt3dadd( 547.429, 378.002, 27.4786, 0.4576 ) }
    dend_15 { pt3dadd( 548.327, 377.322, 27.7068, 0.4576 ) }
    dend_15 { pt3dadd( 548.994, 377.11, 26.0187, 0.483 ) }
    dend_15 { pt3dadd( 549.898, 377.359, 26.4202, 0.483 ) }
    dend_15 { pt3dadd( 550.685, 377.716, 28.1154, 0.483 ) }
    dend_15 { pt3dadd( 551.525, 377.276, 27.4154, 0.4322 ) }
    dend_15 { pt3dadd( 551.703, 376.307, 26.052, 0.4322 ) }
    dend_15 { pt3dadd( 552.202, 375.42, 25.2367, 0.4322 ) }
    dend_15 { pt3dadd( 553.133, 375.061, 23.9599, 0.4322 ) }
    dend_15 { pt3dadd( 554.202, 374.813, 23.6642, 0.4068 ) }
    dend_15 { pt3dadd( 555.171, 375.222, 23.8168, 0.3814 ) }
    dend_15 { pt3dadd( 555.632, 375.994, 25.1303, 0.4322 ) }
    dend_15 { pt3dadd( 555.947, 376.716, 23.5598, 0.483 ) }
    dend_15 { pt3dadd( 556.706, 376.934, 24.0797, 0.5338 ) }
    dend_15 { pt3dadd( 557.838, 377.101, 24.1506, 0.5084 ) }
    dend_15 { pt3dadd( 558.888, 376.956, 23.8568, 0.4576 ) }
    dend_15 { pt3dadd( 559.445, 377.279, 21.8366, 0.4068 ) }
    dend_15 { pt3dadd( 560.041, 378.099, 22.2359, 0.3814 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_15 { pt3dadd( 560.797, 377.807, 21.7711, 0.4576 ) }
    dend_15 { pt3dadd( 561.659, 377.142, 20.9661, 0.5338 ) }
    dend_15 { pt3dadd( 562.616, 376.536, 20.8606, 0.6356 ) }
    dend_15 { pt3dadd( 563.594, 375.992, 20.2919, 0.6102 ) }
    dend_15 { pt3dadd( 564.508, 375.323, 20.1496, 0.5848 ) }
    dend_15 { pt3dadd( 565.365, 374.66, 21.0, 0.5084 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 6/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 534.271, 391.549, 33.075, 0.3814 ) }
    dend_14 { pt3dadd( 535.37, 390.861, 32.431, 0.483 ) }
    dend_14 { pt3dadd( 536.036, 390.133, 31.6028, 0.4576 ) }
    dend_14 { pt3dadd( 536.935, 389.829, 33.1027, 0.4576 ) }
    dend_14 { pt3dadd( 537.698, 389.378, 33.7714, 0.4322 ) }
    dend_14 { pt3dadd( 538.317, 388.582, 32.4943, 0.3814 ) }
    dend_14 { pt3dadd( 538.728, 387.636, 31.4345, 0.356 ) }
    dend_14 { pt3dadd( 538.624, 386.641, 30.7283, 0.3814 ) }
    dend_14 { pt3dadd( 538.938, 385.871, 31.64, 0.4576 ) }
    dend_14 { pt3dadd( 539.062, 385.396, 31.9553, 0.483 ) }
    dend_14 { pt3dadd( 539.502, 384.351, 32.0656, 0.483 ) }
    dend_14 { pt3dadd( 539.429, 383.245, 31.5342, 0.483 ) }
    dend_14 { pt3dadd( 539.708, 382.208, 30.5939, 0.5338 ) }
    dend_14 { pt3dadd( 539.667, 381.122, 29.8544, 0.6356 ) }
    dend_14 { pt3dadd( 539.263, 380.064, 29.82, 0.6864 ) }
    dend_14 { pt3dadd( 538.711, 379.1, 30.4212, 0.7118 ) }
    dend_14 { pt3dadd( 538.395, 378.042, 29.983, 0.6102 ) }
    dend_14 { pt3dadd( 538.323, 377.126, 28.3786, 0.5084 ) }
    dend_14 { pt3dadd( 537.836, 376.226, 27.3804, 0.3814 ) }
    dend_14 { pt3dadd( 537.195, 375.401, 28.224, 0.3304 ) }
    dend_14 { pt3dadd( 536.333, 374.784, 28.6502, 0.305 ) }
    dend_14 { pt3dadd( 536.438, 373.9, 27.851, 0.3304 ) }
    dend_14 { pt3dadd( 537.19, 373.136, 26.948, 0.4068 ) }
    dend_14 { pt3dadd( 537.591, 372.077, 27.0631, 0.5084 ) }
    dend_14 { pt3dadd( 537.833, 370.971, 26.8736, 0.5338 ) }
    dend_14 { pt3dadd( 538.107, 370.002, 25.797, 0.4576 ) }
    dend_14 { pt3dadd( 538.443, 369.151, 25.0222, 0.356 ) }
    dend_14 { pt3dadd( 537.815, 368.49, 25.6001, 0.305 ) }
    dend_14 { pt3dadd( 537.52, 367.425, 25.8994, 0.356 ) }
    dend_14 { pt3dadd( 537.13, 366.434, 24.9186, 0.4322 ) }
    dend_14 { pt3dadd( 536.823, 365.444, 24.9365, 0.5338 ) }
    dend_14 { pt3dadd( 536.822, 364.392, 25.958, 0.6102 ) }
    dend_14 { pt3dadd( 536.942, 363.368, 25.5164, 0.661 ) }
    dend_14 { pt3dadd( 537.353, 362.36, 24.7136, 0.7118 ) }
    dend_14 { pt3dadd( 537.753, 361.522, 25.9244, 0.7118 ) }
    dend_14 { pt3dadd( 537.851, 360.662, 24.6168, 0.6864 ) }
    dend_14 { pt3dadd( 537.452, 359.706, 25.1902, 0.6102 ) }
    dend_14 { pt3dadd( 536.624, 358.922, 25.1742, 0.5338 ) }
    dend_14 { pt3dadd( 536.151, 358.134, 23.9725, 0.5084 ) }
    dend_14 { pt3dadd( 536.276, 357.172, 23.4637, 0.483 ) }
    dend_14 { pt3dadd( 536.693, 356.154, 22.96, 0.483 ) }
    dend_14 { pt3dadd( 536.992, 355.103, 22.2846, 0.4068 ) }
    dend_14 { pt3dadd( 537.804, 354.431, 22.1757, 0.3814 ) }
    dend_14 { pt3dadd( 538.852, 353.991, 22.0508, 0.356 ) }
    dend_14 { pt3dadd( 539.674, 353.26, 21.4729, 0.4322 ) }
    dend_14 { pt3dadd( 540.706, 353.001, 20.5268, 0.5084 ) }
    dend_14 { pt3dadd( 541.809, 352.709, 20.7152, 0.5592 ) }
    dend_14 { pt3dadd( 542.901, 352.379, 20.6447, 0.5084 ) }
    dend_14 { pt3dadd( 543.961, 351.972, 20.3073, 0.3814 ) }
    dend_14 { pt3dadd( 545.013, 351.53, 20.1524, 0.2796 ) }
    dend_14 { pt3dadd( 546.067, 351.087, 19.9979, 0.2288 ) }
    dend_14 { pt3dadd( 547.12, 350.645, 19.8433, 0.2288 ) }
    dend_14 { pt3dadd( 548.146, 350.155, 19.6927, 0.2288 ) }
    dend_14 { pt3dadd( 548.635, 349.38, 19.9035, 0.2542 ) }
    dend_14 { pt3dadd( 548.335, 348.353, 20.6637, 0.2796 ) }
    dend_14 { pt3dadd( 548.411, 347.226, 20.9966, 0.305 ) }
    dend_14 { pt3dadd( 548.76, 346.147, 21.2492, 0.3304 ) }
    dend_14 { pt3dadd( 549.302, 345.185, 21.1226, 0.4068 ) }
    dend_14 { pt3dadd( 549.992, 344.369, 20.5663, 0.5084 ) }
    dend_14 { pt3dadd( 550.812, 343.789, 20.7276, 0.5338 ) }
    dend_14 { pt3dadd( 551.494, 342.919, 20.741, 0.5084 ) }
    dend_14 { pt3dadd( 552.068, 341.954, 21.2696, 0.4322 ) }
    dend_14 { pt3dadd( 552.494, 341.032, 20.776, 0.4068 ) }
    dend_14 { pt3dadd( 552.891, 340.033, 20.6016, 0.356 ) }
    dend_14 { pt3dadd( 553.508, 339.115, 20.013, 0.3304 ) }
    dend_14 { pt3dadd( 554.051, 338.125, 19.7674, 0.305 ) }
    dend_14 { pt3dadd( 554.87, 337.365, 19.6577, 0.2796 ) }
    dend_14 { pt3dadd( 555.781, 336.673, 19.7408, 0.2542 ) }
    dend_14 { pt3dadd( 556.692, 335.983, 19.8254, 0.2288 ) }
    dend_14 { pt3dadd( 557.603, 335.29, 19.9097, 0.2288 ) }
    dend_14 { pt3dadd( 558.513, 334.599, 19.9945, 0.2288 ) }
    dend_14 { pt3dadd( 559.424, 333.907, 20.0794, 0.2288 ) }
    dend_14 { pt3dadd( 560.335, 333.216, 20.1639, 0.2288 ) }
    dend_14 { pt3dadd( 561.245, 332.524, 20.2485, 0.2288 ) }
    dend_14 { pt3dadd( 562.156, 331.833, 20.333, 0.2542 ) }
    dend_14 { pt3dadd( 563.067, 331.141, 20.4179, 0.2796 ) }
    dend_14 { pt3dadd( 563.5, 330.389, 20.9196, 0.3304 ) }
    dend_14 { pt3dadd( 564.215, 329.523, 20.6427, 0.3304 ) }
    dend_14 { pt3dadd( 564.771, 328.54, 20.4445, 0.356 ) }
    dend_14 { pt3dadd( 564.793, 327.421, 19.9189, 0.3304 ) }
    dend_14 { pt3dadd( 564.966, 326.311, 20.3445, 0.3304 ) }
    dend_14 { pt3dadd( 565.357, 325.283, 19.8486, 0.2796 ) }
    dend_14 { pt3dadd( 565.392, 324.307, 19.838, 0.2542 ) }
    dend_14 { pt3dadd( 565.517, 323.282, 19.8514, 0.2542 ) }
    dend_14 { pt3dadd( 565.237, 322.324, 21.0532, 0.305 ) }
    dend_14 { pt3dadd( 565.078, 321.221, 20.7735, 0.4068 ) }
    dend_14 { pt3dadd( 565.141, 320.144, 21.4631, 0.483 ) }
    dend_14 { pt3dadd( 565.278, 319.081, 20.8104, 0.5592 ) }
    dend_14 { pt3dadd( 565.484, 317.97, 20.8438, 0.5848 ) }
    dend_14 { pt3dadd( 565.424, 316.841, 20.9076, 0.6356 ) }
    dend_14 { pt3dadd( 565.197, 315.741, 21.3926, 0.661 ) }
    dend_14 { pt3dadd( 565.102, 314.633, 21.4858, 0.6864 ) }
    dend_14 { pt3dadd( 565.367, 313.554, 21.67, 0.661 ) }
    dend_14 { pt3dadd( 565.784, 312.499, 21.6891, 0.6356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( 566.107, 311.41, 21.9394, 0.5592 ) }
    dend_14 { pt3dadd( 566.331, 310.363, 22.8662, 0.5084 ) }
    dend_14 { pt3dadd( 566.758, 309.322, 22.5924, 0.4322 ) }
    dend_14 { pt3dadd( 566.978, 308.206, 22.6948, 0.4576 ) }
    dend_14 { pt3dadd( 567.382, 307.145, 22.5075, 0.483 ) }
    dend_14 { pt3dadd( 567.744, 306.084, 21.9447, 0.5338 ) }
    dend_14 { pt3dadd( 568.057, 305.008, 21.4208, 0.483 ) }
    dend_14 { pt3dadd( 568.385, 304.029, 21.6992, 0.4068 ) }
    dend_14 { pt3dadd( 568.687, 303.091, 22.5366, 0.356 ) }
    dend_14 { pt3dadd( 568.78, 301.975, 22.0769, 0.3814 ) }
    dend_14 { pt3dadd( 568.82, 300.875, 22.4087, 0.4576 ) }
    dend_14 { pt3dadd( 568.708, 299.769, 22.211, 0.5084 ) }
    dend_14 { pt3dadd( 569.369, 298.927, 21.84, 0.5848 ) }
    // Section: apic_20, id: apic_20, parent: apic_18 (entry count 13/100)
    apic_20 { pt3dclear() }
    apic_20 { pt3dadd( 583.53, 366.318, 40.8878, 0.356 ) }
    apic_20 { pt3dadd( 587.215, 365.851, 43.68, 0.2288 ) }
    apic_20 { pt3dadd( 588.016, 365.851, 43.68, 0.2288 ) }
    apic_20 { pt3dadd( 588.817, 365.851, 43.68, 0.2288 ) }
    apic_20 { pt3dadd( 589.617, 365.851, 43.68, 0.2542 ) }
    apic_20 { pt3dadd( 590.418, 365.851, 43.68, 0.2796 ) }
    apic_20 { pt3dadd( 591.219, 365.851, 43.68, 0.305 ) }
    apic_20 { pt3dadd( 592.02, 365.851, 43.68, 0.2796 ) }
    apic_20 { pt3dadd( 592.82, 365.851, 43.68, 0.2542 ) }
    apic_20 { pt3dadd( 593.622, 365.851, 43.68, 0.2288 ) }
    apic_20 { pt3dadd( 594.422, 365.851, 43.68, 0.2288 ) }
    apic_20 { pt3dadd( 594.651, 365.851, 43.68, 0.2288 ) }
    apic_20 { pt3dadd( 594.88, 365.851, 43.68, 0.2288 ) }
    apic_20 { pt3dadd( 595.096, 365.978, 43.68, 0.2288 ) }
    apic_20 { pt3dadd( 595.109, 366.182, 43.68, 0.2542 ) }
    // Section: apic_19, id: apic_19, parent: apic_18 (entry count 28/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( 583.53, 366.318, 40.8878, 0.356 ) }
    apic_19 { pt3dadd( 584.616, 366.523, 40.4776, 0.356 ) }
    apic_19 { pt3dadd( 585.559, 367.147, 40.2324, 0.356 ) }
    apic_19 { pt3dadd( 586.442, 367.862, 39.9778, 0.305 ) }
    apic_19 { pt3dadd( 587.254, 368.601, 39.2216, 0.2796 ) }
    apic_19 { pt3dadd( 588.098, 369.321, 39.4103, 0.2796 ) }
    apic_19 { pt3dadd( 588.953, 370.026, 38.8433, 0.356 ) }
    apic_19 { pt3dadd( 589.68, 370.881, 38.358, 0.4068 ) }
    apic_19 { pt3dadd( 590.542, 371.516, 37.5253, 0.4576 ) }
    apic_19 { pt3dadd( 591.557, 371.928, 37.3215, 0.4068 ) }
    apic_19 { pt3dadd( 592.625, 371.887, 36.8382, 0.356 ) }
    apic_19 { pt3dadd( 593.497, 372.485, 36.4918, 0.305 ) }
    apic_19 { pt3dadd( 594.395, 373.151, 36.6363, 0.3304 ) }
    apic_19 { pt3dadd( 595.447, 373.365, 36.0816, 0.3304 ) }
    apic_19 { pt3dadd( 596.578, 373.343, 36.0049, 0.356 ) }
    apic_19 { pt3dadd( 597.714, 373.386, 35.777, 0.3304 ) }
    apic_19 { pt3dadd( 598.841, 373.255, 35.929, 0.3304 ) }
    apic_19 { pt3dadd( 599.689, 372.745, 35.1708, 0.2796 ) }
    apic_19 { pt3dadd( 600.534, 372.125, 34.1457, 0.2796 ) }
    apic_19 { pt3dadd( 601.63, 372.029, 34.16, 0.2796 ) }
    // Section: apic_17, id: apic_17, parent: apic_1 (entry count 48/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( 497.518, 391.111, 47.4891, 0.4322 ) }
    apic_17 { pt3dadd( 497.101, 391.483, 48.19, 0.305 ) }
    apic_17 { pt3dadd( 496.34, 392.159, 49.4679, 0.2542 ) }
    apic_17 { pt3dadd( 495.579, 392.835, 50.7455, 0.2288 ) }
    apic_17 { pt3dadd( 494.819, 393.512, 52.0234, 0.2542 ) }
    apic_17 { pt3dadd( 494.059, 394.189, 53.3014, 0.3304 ) }
    apic_17 { pt3dadd( 493.298, 394.865, 54.5796, 0.4068 ) }
    apic_17 { pt3dadd( 493.101, 395.831, 55.3437, 0.4322 ) }
    apic_17 { pt3dadd( 492.596, 396.723, 55.946, 0.356 ) }
    apic_17 { pt3dadd( 491.924, 397.476, 56.0, 0.2796 ) }
    apic_17 { pt3dadd( 491.778, 398.604, 55.9644, 0.2288 ) }
    apic_17 { pt3dadd( 491.159, 399.369, 55.5736, 0.2288 ) }
    apic_17 { pt3dadd( 490.206, 399.898, 55.1384, 0.2288 ) }
    apic_17 { pt3dadd( 489.441, 400.456, 56.4427, 0.2542 ) }
    apic_17 { pt3dadd( 488.75, 401.264, 57.3594, 0.305 ) }
    apic_17 { pt3dadd( 487.98, 401.631, 56.0451, 0.3814 ) }
    apic_17 { pt3dadd( 487.178, 402.431, 56.2456, 0.4068 ) }
    apic_17 { pt3dadd( 486.562, 403.146, 57.1805, 0.3814 ) }
    apic_17 { pt3dadd( 486.028, 403.946, 58.2008, 0.3304 ) }
    apic_17 { pt3dadd( 485.24, 404.775, 58.2414, 0.305 ) }
    apic_17 { pt3dadd( 484.604, 405.688, 58.7625, 0.305 ) }
    apic_17 { pt3dadd( 484.076, 406.699, 58.8, 0.2796 ) }
    apic_17 { pt3dadd( 483.384, 407.569, 58.623, 0.2542 ) }
    apic_17 { pt3dadd( 482.98, 408.368, 57.0363, 0.2542 ) }
    apic_17 { pt3dadd( 482.122, 409.078, 56.4217, 0.2796 ) }
    apic_17 { pt3dadd( 481.34, 409.875, 55.8183, 0.305 ) }
    apic_17 { pt3dadd( 480.695, 410.392, 56.8406, 0.2796 ) }
    apic_17 { pt3dadd( 479.715, 410.467, 57.6321, 0.2542 ) }
    apic_17 { pt3dadd( 478.655, 410.736, 58.2994, 0.2288 ) }
    apic_17 { pt3dadd( 477.73, 411.358, 57.9642, 0.2796 ) }
    apic_17 { pt3dadd( 476.908, 412.147, 57.843, 0.3304 ) }
    apic_17 { pt3dadd( 475.815, 412.441, 57.6117, 0.3814 ) }
    apic_17 { pt3dadd( 474.689, 412.566, 57.4619, 0.3304 ) }
    apic_17 { pt3dadd( 473.592, 412.747, 57.9508, 0.2796 ) }
    apic_17 { pt3dadd( 472.549, 412.649, 57.9194, 0.2542 ) }
    apic_17 { pt3dadd( 471.492, 412.442, 57.2205, 0.2796 ) }
    apic_17 { pt3dadd( 470.479, 412.184, 58.0787, 0.305 ) }
    apic_17 { pt3dadd( 469.583, 411.877, 59.5529, 0.2796 ) }
    apic_17 { pt3dadd( 468.785, 412.276, 60.9498, 0.2542 ) }
    apic_17 { pt3dadd( 467.71, 412.444, 60.9753, 0.2542 ) }
    apic_17 { pt3dadd( 467.035, 413.273, 60.9157, 0.305 ) }
    apic_17 { pt3dadd( 466.648, 414.332, 60.6231, 0.3814 ) }
    apic_17 { pt3dadd( 465.836, 414.947, 60.48, 0.4068 ) }
    apic_17 { pt3dadd( 464.707, 414.916, 60.6326, 0.4322 ) }
    apic_17 { pt3dadd( 463.581, 414.849, 60.632, 0.4576 ) }
    apic_17 { pt3dadd( 462.652, 415.412, 60.1801, 0.5592 ) }
    apic_17 { pt3dadd( 461.9, 416.249, 60.4083, 0.5848 ) }
    apic_17 { pt3dadd( 461.199, 417.139, 60.7068, 0.5592 ) }
    apic_17 { pt3dadd( 460.296, 417.727, 61.6235, 0.483 ) }
    apic_17 { pt3dadd( 459.392, 418.394, 62.0141, 0.4576 ) }
    apic_17 { pt3dadd( 458.555, 419.083, 62.6256, 0.4576 ) }
    apic_17 { pt3dadd( 457.566, 419.647, 62.44, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    apic_17 { pt3dadd( 456.497, 419.966, 62.7273, 0.483 ) }
    apic_17 { pt3dadd( 455.458, 420.264, 63.532, 0.483 ) }
    apic_17 { pt3dadd( 454.674, 420.968, 64.4423, 0.4322 ) }
    apic_17 { pt3dadd( 454.312, 421.993, 65.1263, 0.3814 ) }
    apic_17 { pt3dadd( 454.29, 423.122, 65.037, 0.4068 ) }
    apic_17 { pt3dadd( 453.906, 423.87, 66.68, 0.483 ) }
    apic_17 { pt3dadd( 453.138, 424.565, 67.3204, 0.483 ) }
    apic_17 { pt3dadd( 452.13, 424.321, 68.2671, 0.4322 ) }
    apic_17 { pt3dadd( 451.031, 424.319, 67.8056, 0.3814 ) }
    apic_17 { pt3dadd( 450.081, 424.493, 68.4813, 0.4322 ) }
    apic_17 { pt3dadd( 449.367, 424.954, 69.9986, 0.4576 ) }
    apic_17 { pt3dadd( 448.296, 425.073, 70.3408, 0.483 ) }
    apic_17 { pt3dadd( 447.247, 425.109, 71.4291, 0.4322 ) }
    apic_17 { pt3dadd( 446.329, 424.603, 72.4802, 0.3814 ) }
    apic_17 { pt3dadd( 445.224, 424.45, 72.4038, 0.356 ) }
    apic_17 { pt3dadd( 444.439, 424.732, 74.1028, 0.3814 ) }
    apic_17 { pt3dadd( 443.952, 425.241, 76.186, 0.4576 ) }
    apic_17 { pt3dadd( 443.21, 425.879, 76.4098, 0.483 ) }
    apic_17 { pt3dadd( 442.27, 426.254, 77.56, 0.4576 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 19/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 497.518, 391.111, 47.4891, 0.4322 ) }
    apic_2 { pt3dadd( 496.883, 390.167, 47.6339, 0.4068 ) }
    apic_2 { pt3dadd( 496.188, 389.26, 47.7758, 0.483 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 22/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 496.16, 405.271, 32.7256, 0.356 ) }
    dend_10 { pt3dadd( 495.128, 404.735, 31.0248, 0.2542 ) }
    dend_10 { pt3dadd( 494.256, 404.282, 29.5896, 0.2796 ) }
    dend_10 { pt3dadd( 493.385, 403.785, 28.261, 0.3814 ) }
    dend_10 { pt3dadd( 492.513, 403.157, 27.8326, 0.5338 ) }
    dend_10 { pt3dadd( 491.895, 402.331, 28.2957, 0.6102 ) }
    dend_10 { pt3dadd( 491.49, 401.486, 27.4196, 0.6102 ) }
    dend_10 { pt3dadd( 490.765, 401.043, 25.5511, 0.5338 ) }
    dend_10 { pt3dadd( 489.836, 400.902, 24.005, 0.5084 ) }
    dend_10 { pt3dadd( 489.081, 401.458, 22.911, 0.5084 ) }
    dend_10 { pt3dadd( 488.4, 401.915, 24.327, 0.5084 ) }
    dend_10 { pt3dadd( 487.897, 402.903, 23.8974, 0.4576 ) }
    dend_10 { pt3dadd( 487.217, 403.711, 24.1587, 0.4322 ) }
    dend_10 { pt3dadd( 486.898, 404.458, 22.7251, 0.4322 ) }
    dend_10 { pt3dadd( 486.183, 405.288, 22.5173, 0.4576 ) }
    dend_10 { pt3dadd( 485.249, 405.784, 21.7034, 0.4068 ) }
    dend_10 { pt3dadd( 484.214, 406.026, 22.4048, 0.3814 ) }
    dend_10 { pt3dadd( 483.219, 406.36, 23.247, 0.3304 ) }
    dend_10 { pt3dadd( 482.385, 407.05, 22.8469, 0.3814 ) }
    dend_10 { pt3dadd( 481.732, 407.954, 22.2258, 0.4068 ) }
    dend_10 { pt3dadd( 481.19, 408.926, 21.5928, 0.4576 ) }
    dend_10 { pt3dadd( 480.366, 409.666, 22.12, 0.4068 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 44/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 496.16, 405.271, 32.7256, 0.356 ) }
    dend_7 { pt3dadd( 496.622, 404.904, 33.0044, 0.356 ) }
    dend_7 { pt3dadd( 496.931, 403.977, 32.6231, 0.4322 ) }
    dend_7 { pt3dadd( 496.68, 402.96, 31.5512, 0.483 ) }
    dend_7 { pt3dadd( 496.223, 402.069, 30.235, 0.4322 ) }
    dend_7 { pt3dadd( 495.82, 401.337, 28.3699, 0.3304 ) }
    dend_7 { pt3dadd( 495.768, 400.423, 28.6824, 0.2796 ) }
    dend_7 { pt3dadd( 496.053, 399.539, 30.3072, 0.305 ) }
    dend_7 { pt3dadd( 495.871, 398.451, 29.7606, 0.4068 ) }
    dend_7 { pt3dadd( 495.13, 397.603, 29.2774, 0.483 ) }
    dend_7 { pt3dadd( 494.257, 396.904, 28.705, 0.5338 ) }
    dend_7 { pt3dadd( 493.557, 396.004, 28.6742, 0.483 ) }
    dend_7 { pt3dadd( 493.233, 394.957, 27.9101, 0.4068 ) }
    dend_7 { pt3dadd( 492.651, 394.176, 26.4432, 0.305 ) }
    dend_7 { pt3dadd( 492.095, 393.338, 25.1124, 0.2796 ) }
    dend_7 { pt3dadd( 491.48, 392.434, 24.4342, 0.3304 ) }
    dend_7 { pt3dadd( 490.52, 391.905, 25.2, 0.4322 ) }
    dend_7 { pt3dadd( 489.671, 391.15, 25.4341, 0.5084 ) }
    dend_7 { pt3dadd( 488.903, 390.379, 25.2274, 0.5084 ) }
    dend_7 { pt3dadd( 488.165, 389.661, 25.8656, 0.483 ) }
    dend_7 { pt3dadd( 487.732, 388.707, 26.8439, 0.4322 ) }
    dend_7 { pt3dadd( 487.23, 387.689, 26.8489, 0.3814 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 66/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 456.342, 450.05, 40.32, 0.6864 ) }
    dend_4 { pt3dadd( 455.63, 450.145, 39.972, 0.2288 ) }
    dend_4 { pt3dadd( 454.523, 450.179, 40.1187, 0.305 ) }
    dend_4 { pt3dadd( 453.441, 450.447, 40.0574, 0.3814 ) }
    dend_4 { pt3dadd( 453.092, 451.322, 39.0379, 0.4068 ) }
    dend_4 { pt3dadd( 452.341, 452.117, 39.8518, 0.4068 ) }
    dend_4 { pt3dadd( 451.441, 452.698, 40.1848, 0.356 ) }
    dend_4 { pt3dadd( 450.316, 452.771, 39.9157, 0.3814 ) }
    dend_4 { pt3dadd( 449.213, 452.892, 40.3018, 0.4068 ) }
    dend_4 { pt3dadd( 448.174, 453.301, 40.2828, 0.5084 ) }
    dend_4 { pt3dadd( 447.081, 453.552, 40.1811, 0.5592 ) }
    dend_4 { pt3dadd( 446.022, 453.961, 40.206, 0.6102 ) }
    dend_4 { pt3dadd( 445.081, 454.451, 41.0838, 0.6102 ) }
    dend_4 { pt3dadd( 444.372, 455.282, 40.7179, 0.5592 ) }
    dend_4 { pt3dadd( 443.777, 456.186, 40.9466, 0.483 ) }
    dend_4 { pt3dadd( 442.794, 456.68, 40.6302, 0.3814 ) }
    dend_4 { pt3dadd( 441.701, 457.011, 40.6, 0.356 ) }
    dend_4 { pt3dadd( 440.729, 457.531, 39.9162, 0.356 ) }
    dend_4 { pt3dadd( 439.717, 458.022, 40.2671, 0.356 ) }
    dend_4 { pt3dadd( 438.866, 458.751, 39.709, 0.305 ) }
    dend_4 { pt3dadd( 437.984, 459.436, 39.2916, 0.2796 ) }
    dend_4 { pt3dadd( 436.983, 459.885, 38.5454, 0.3304 ) }
    dend_4 { pt3dadd( 435.993, 460.445, 38.4121, 0.4068 ) }
    dend_4 { pt3dadd( 435.013, 460.95, 38.2396, 0.4322 ) }
    dend_4 { pt3dadd( 434.0, 461.358, 38.297, 0.3814 ) }
    dend_4 { pt3dadd( 432.915, 461.397, 38.8385, 0.3304 ) }
    dend_4 { pt3dadd( 431.971, 461.295, 37.3862, 0.305 ) }
    dend_4 { pt3dadd( 430.93, 460.883, 37.0944, 0.305 ) }
    dend_4 { pt3dadd( 429.89, 460.452, 37.5897, 0.356 ) }
    dend_4 { pt3dadd( 428.954, 460.632, 37.8171, 0.4322 ) }
    dend_4 { pt3dadd( 427.964, 461.068, 38.2567, 0.5084 ) }
    dend_4 { pt3dadd( 426.863, 461.049, 38.8741, 0.5084 ) }
    dend_4 { pt3dadd( 425.763, 461.071, 38.5532, 0.5084 ) }
    dend_4 { pt3dadd( 424.653, 461.261, 38.08, 0.483 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 0/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 456.342, 450.05, 40.32, 0.6864 ) }
    dend_3 { pt3dadd( 456.267, 451.151, 40.7548, 0.4322 ) }
    dend_3 { pt3dadd( 455.552, 451.899, 40.1072, 0.4322 ) }
    dend_3 { pt3dadd( 455.208, 452.819, 38.9382, 0.4068 ) }
    dend_3 { pt3dadd( 455.128, 453.779, 37.4346, 0.4068 ) }
    dend_3 { pt3dadd( 454.884, 454.737, 38.5034, 0.3814 ) }
    dend_3 { pt3dadd( 454.114, 455.492, 39.41, 0.4322 ) }
    dend_3 { pt3dadd( 453.159, 455.921, 39.5783, 0.5084 ) }
    dend_3 { pt3dadd( 452.208, 456.284, 38.794, 0.5848 ) }
    dend_3 { pt3dadd( 451.282, 456.665, 39.0821, 0.5848 ) }
    dend_3 { pt3dadd( 450.331, 457.066, 40.0784, 0.5592 ) }
    dend_3 { pt3dadd( 449.76, 457.949, 39.6488, 0.5338 ) }
    dend_3 { pt3dadd( 449.276, 458.931, 39.0205, 0.5084 ) }
    dend_3 { pt3dadd( 448.624, 459.786, 39.622, 0.4322 ) }
    dend_3 { pt3dadd( 448.266, 460.796, 39.1784, 0.3814 ) }
    dend_3 { pt3dadd( 447.938, 461.798, 38.6966, 0.356 ) }
    dend_3 { pt3dadd( 447.144, 462.408, 39.4579, 0.3814 ) }
    dend_3 { pt3dadd( 446.368, 463.199, 39.8762, 0.3304 ) }
    dend_3 { pt3dadd( 445.875, 464.22, 39.6878, 0.305 ) }
    dend_3 { pt3dadd( 444.915, 464.715, 39.5693, 0.305 ) }
    dend_3 { pt3dadd( 444.372, 465.642, 39.5184, 0.3814 ) }
    dend_3 { pt3dadd( 444.302, 466.768, 39.685, 0.4068 ) }
    dend_3 { pt3dadd( 444.294, 467.849, 38.9802, 0.4068 ) }
    dend_3 { pt3dadd( 444.142, 468.888, 39.9104, 0.3814 ) }
    dend_3 { pt3dadd( 444.426, 469.953, 39.7225, 0.4068 ) }
    dend_3 { pt3dadd( 444.349, 471.087, 39.5528, 0.4068 ) }
    dend_3 { pt3dadd( 444.217, 472.217, 39.8219, 0.3814 ) }
    dend_3 { pt3dadd( 444.128, 473.336, 39.8042, 0.3304 ) }
    dend_3 { pt3dadd( 444.379, 474.416, 39.5338, 0.3304 ) }
    dend_3 { pt3dadd( 444.444, 475.539, 39.837, 0.356 ) }
    dend_3 { pt3dadd( 444.395, 476.664, 39.4332, 0.3814 ) }
    dend_3 { pt3dadd( 444.341, 477.779, 38.9054, 0.356 ) }
    dend_3 { pt3dadd( 444.27, 478.913, 38.8273, 0.356 ) }
    dend_3 { pt3dadd( 444.144, 480.043, 38.7388, 0.3304 ) }
    dend_3 { pt3dadd( 444.31, 481.131, 38.8581, 0.3304 ) }
    dend_3 { pt3dadd( 444.676, 482.188, 38.8489, 0.305 ) }
    dend_3 { pt3dadd( 444.872, 483.299, 38.7873, 0.305 ) }
    dend_3 { pt3dadd( 444.902, 484.438, 38.7668, 0.305 ) }
    dend_3 { pt3dadd( 445.009, 485.577, 38.6442, 0.2796 ) }
    dend_3 { pt3dadd( 444.862, 486.698, 38.7769, 0.2796 ) }
    dend_3 { pt3dadd( 444.224, 487.577, 39.6169, 0.305 ) }
    dend_3 { pt3dadd( 443.592, 488.526, 39.744, 0.356 ) }
    dend_3 { pt3dadd( 442.79, 489.233, 39.4033, 0.3814 ) }
    dend_3 { pt3dadd( 441.742, 489.56, 39.7062, 0.4068 ) }
    dend_3 { pt3dadd( 441.107, 490.363, 40.2052, 0.4322 ) }
    dend_3 { pt3dadd( 440.859, 491.476, 40.1296, 0.4576 ) }
    dend_3 { pt3dadd( 440.544, 492.565, 39.9568, 0.4068 ) }
    dend_3 { pt3dadd( 440.129, 493.569, 40.5356, 0.356 ) }
    dend_3 { pt3dadd( 439.907, 494.651, 40.9158, 0.2796 ) }
    dend_3 { pt3dadd( 440.193, 495.716, 40.6725, 0.2796 ) }
    dend_3 { pt3dadd( 440.713, 496.726, 40.3586, 0.305 ) }
    dend_3 { pt3dadd( 440.921, 497.827, 39.9053, 0.356 ) }
    dend_3 { pt3dadd( 441.927, 498.326, 40.32, 0.356 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 53/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 508.062, 436.919, 52.7332, 0.5592 ) }
    dend_38 { pt3dadd( 507.766, 437.262, 52.7772, 0.4322 ) }
    dend_38 { pt3dadd( 507.015, 438.125, 52.8872, 0.3304 ) }
    dend_38 { pt3dadd( 506.602, 439.104, 53.3078, 0.2796 ) }
    dend_38 { pt3dadd( 506.599, 439.941, 54.6409, 0.305 ) }
    dend_38 { pt3dadd( 505.898, 440.785, 54.6801, 0.3304 ) }
    dend_38 { pt3dadd( 505.584, 441.842, 55.3106, 0.3814 ) }
    dend_38 { pt3dadd( 505.443, 442.898, 55.487, 0.4576 ) }
    dend_38 { pt3dadd( 505.614, 444.006, 55.0312, 0.4576 ) }
    dend_38 { pt3dadd( 505.898, 445.074, 55.4333, 0.4322 ) }
    dend_38 { pt3dadd( 505.861, 446.103, 54.8587, 0.3814 ) }
    dend_38 { pt3dadd( 505.431, 447.151, 54.602, 0.3814 ) }
    dend_38 { pt3dadd( 505.047, 448.18, 55.0592, 0.3814 ) }
    dend_38 { pt3dadd( 505.138, 449.259, 54.325, 0.356 ) }
    dend_38 { pt3dadd( 505.361, 450.364, 54.6941, 0.356 ) }
    dend_38 { pt3dadd( 505.529, 451.45, 54.8537, 0.3814 ) }
    dend_38 { pt3dadd( 505.68, 452.563, 54.7607, 0.4576 ) }
    dend_38 { pt3dadd( 505.836, 453.686, 55.076, 0.483 ) }
    dend_38 { pt3dadd( 505.789, 454.819, 54.9433, 0.4322 ) }
    dend_38 { pt3dadd( 505.979, 455.773, 53.6427, 0.356 ) }
    dend_38 { pt3dadd( 505.724, 456.795, 54.4337, 0.3304 ) }
    dend_38 { pt3dadd( 505.478, 457.9, 54.7963, 0.4068 ) }
    dend_38 { pt3dadd( 504.975, 458.887, 55.1589, 0.4576 ) }
    dend_38 { pt3dadd( 504.31, 459.794, 55.323, 0.4576 ) }
    dend_38 { pt3dadd( 503.902, 460.848, 55.0323, 0.356 ) }
    dend_38 { pt3dadd( 503.832, 461.948, 55.3795, 0.2796 ) }
    dend_38 { pt3dadd( 503.852, 463.057, 56.0703, 0.2288 ) }
    dend_38 { pt3dadd( 503.872, 464.165, 56.7608, 0.2288 ) }
    dend_38 { pt3dadd( 503.893, 465.274, 57.4515, 0.2288 ) }
    dend_38 { pt3dadd( 503.913, 466.383, 58.142, 0.2288 ) }
    dend_38 { pt3dadd( 503.932, 467.492, 58.8, 0.2288 ) }
    dend_38 { pt3dadd( 503.932, 468.636, 58.8, 0.2288 ) }
    dend_38 { pt3dadd( 503.932, 469.78, 58.8, 0.2288 ) }
    dend_38 { pt3dadd( 503.932, 470.924, 58.8, 0.2288 ) }
    dend_38 { pt3dadd( 503.829, 472.06, 58.8, 0.2288 ) }
    dend_38 { pt3dadd( 503.539, 473.165, 58.8, 0.2288 ) }
    dend_38 { pt3dadd( 503.014, 474.174, 58.8, 0.2288 ) }
    dend_38 { pt3dadd( 502.902, 475.293, 58.8, 0.2288 ) }
    dend_38 { pt3dadd( 502.902, 476.437, 58.8, 0.2288 ) }
    dend_38 { pt3dadd( 502.773, 477.571, 58.8, 0.2288 ) }
    dend_38 { pt3dadd( 502.431, 478.642, 59.0822, 0.2288 ) }
    dend_38 { pt3dadd( 501.967, 479.631, 59.36, 0.2288 ) }
    dend_38 { pt3dadd( 500.991, 480.118, 59.36, 0.2288 ) }
    dend_38 { pt3dadd( 500.958, 481.256, 59.36, 0.2288 ) }
    dend_38 { pt3dadd( 500.958, 482.4, 59.36, 0.2288 ) }
    dend_38 { pt3dadd( 500.958, 483.544, 59.36, 0.2288 ) }
    dend_38 { pt3dadd( 500.958, 484.688, 59.36, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_38 { pt3dadd( 500.958, 485.832, 59.36, 0.2288 ) }
    dend_38 { pt3dadd( 500.958, 486.976, 59.36, 0.2288 ) }
    dend_38 { pt3dadd( 500.958, 488.12, 59.36, 0.2288 ) }
    dend_38 { pt3dadd( 500.958, 489.264, 59.36, 0.2288 ) }
    dend_38 { pt3dadd( 500.958, 490.408, 59.36, 0.2288 ) }
    dend_38 { pt3dadd( 500.314, 491.213, 59.36, 0.2288 ) }
    dend_38 { pt3dadd( 499.197, 491.348, 59.36, 0.2288 ) }
    dend_38 { pt3dadd( 498.053, 491.307, 59.36, 0.2288 ) }
    dend_38 { pt3dadd( 497.043, 490.834, 59.36, 0.2542 ) }
    dend_38 { pt3dadd( 496.038, 490.318, 59.36, 0.305 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 10/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 508.062, 436.919, 52.7332, 0.5592 ) }
    dend_37 { pt3dadd( 508.733, 437.636, 52.3536, 0.3814 ) }
    dend_37 { pt3dadd( 508.704, 438.572, 50.9608, 0.4068 ) }
    dend_37 { pt3dadd( 508.326, 439.591, 50.8136, 0.3814 ) }
    dend_37 { pt3dadd( 508.641, 440.323, 48.9387, 0.356 ) }
    dend_37 { pt3dadd( 508.571, 441.225, 47.6409, 0.3814 ) }
    dend_37 { pt3dadd( 509.165, 442.111, 47.7361, 0.483 ) }
    dend_37 { pt3dadd( 509.54, 443.144, 48.1527, 0.5338 ) }
    dend_37 { pt3dadd( 509.638, 444.245, 47.9758, 0.5848 ) }
    dend_37 { pt3dadd( 509.887, 445.002, 47.3152, 0.5592 ) }
    dend_37 { pt3dadd( 509.294, 445.467, 45.2346, 0.5592 ) }
    dend_37 { pt3dadd( 508.306, 445.97, 45.5563, 0.483 ) }
    dend_37 { pt3dadd( 507.387, 446.002, 44.1708, 0.4322 ) }
    dend_37 { pt3dadd( 506.523, 445.694, 42.9265, 0.356 ) }
    dend_37 { pt3dadd( 505.94, 446.361, 42.8618, 0.3304 ) }
    dend_37 { pt3dadd( 505.876, 447.463, 43.1032, 0.305 ) }
    dend_37 { pt3dadd( 505.877, 448.58, 42.5275, 0.305 ) }
    dend_37 { pt3dadd( 505.704, 449.341, 40.5731, 0.356 ) }
    dend_37 { pt3dadd( 505.044, 450.135, 39.8056, 0.4068 ) }
    dend_37 { pt3dadd( 505.38, 451.222, 39.9921, 0.4576 ) }
    dend_37 { pt3dadd( 505.408, 452.346, 39.9921, 0.4068 ) }
    dend_37 { pt3dadd( 505.092, 453.416, 39.8314, 0.356 ) }
    dend_37 { pt3dadd( 505.075, 454.555, 39.912, 0.305 ) }
    dend_37 { pt3dadd( 505.177, 455.68, 39.5976, 0.356 ) }
    dend_37 { pt3dadd( 505.523, 456.709, 38.8749, 0.4068 ) }
    dend_37 { pt3dadd( 506.0, 457.716, 38.5398, 0.4576 ) }
    dend_37 { pt3dadd( 506.332, 458.752, 37.8179, 0.4322 ) }
    dend_37 { pt3dadd( 506.522, 459.857, 37.758, 0.3814 ) }
    dend_37 { pt3dadd( 506.991, 460.865, 37.7658, 0.3304 ) }
    dend_37 { pt3dadd( 507.409, 461.884, 37.3528, 0.305 ) }
    dend_37 { pt3dadd( 507.862, 462.749, 36.2359, 0.305 ) }
    dend_37 { pt3dadd( 508.415, 463.706, 35.8834, 0.305 ) }
    dend_37 { pt3dadd( 508.604, 464.805, 35.4343, 0.3304 ) }
    dend_37 { pt3dadd( 509.079, 465.837, 35.28, 0.356 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 44/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 495.047, 432.432, 53.0132, 0.3814 ) }
    dend_35 { pt3dadd( 495.209, 433.051, 52.0041, 0.5338 ) }
    dend_35 { pt3dadd( 495.232, 433.998, 50.4678, 0.4322 ) }
    dend_35 { pt3dadd( 494.64, 434.933, 50.1774, 0.3304 ) }
    dend_35 { pt3dadd( 494.076, 435.807, 49.2957, 0.2542 ) }
    dend_35 { pt3dadd( 493.312, 436.652, 49.3998, 0.2288 ) }
    dend_35 { pt3dadd( 492.495, 437.392, 49.9075, 0.2796 ) }
    dend_35 { pt3dadd( 491.828, 437.337, 51.7154, 0.356 ) }
    dend_35 { pt3dadd( 491.355, 438.113, 52.6313, 0.4322 ) }
    dend_35 { pt3dadd( 490.539, 438.897, 52.6806, 0.4068 ) }
    dend_35 { pt3dadd( 489.678, 439.232, 53.671, 0.3304 ) }
    dend_35 { pt3dadd( 489.132, 440.191, 53.4024, 0.2542 ) }
    dend_35 { pt3dadd( 488.415, 440.999, 53.0807, 0.2288 ) }
    dend_35 { pt3dadd( 488.359, 442.082, 52.4922, 0.2288 ) }
    dend_35 { pt3dadd( 488.549, 443.126, 52.7428, 0.2796 ) }
    dend_35 { pt3dadd( 488.392, 443.909, 51.942, 0.3304 ) }
    dend_35 { pt3dadd( 487.434, 444.174, 50.7248, 0.3814 ) }
    dend_35 { pt3dadd( 486.322, 443.998, 50.4244, 0.356 ) }
    dend_35 { pt3dadd( 485.389, 444.481, 50.3569, 0.3304 ) }
    dend_35 { pt3dadd( 484.52, 445.146, 49.6098, 0.356 ) }
    dend_35 { pt3dadd( 484.159, 445.659, 51.6099, 0.3814 ) }
    dend_35 { pt3dadd( 483.473, 446.493, 50.7013, 0.4068 ) }
    dend_35 { pt3dadd( 483.284, 447.517, 49.9957, 0.3304 ) }
    dend_35 { pt3dadd( 483.174, 448.559, 50.7867, 0.305 ) }
    dend_35 { pt3dadd( 482.977, 449.606, 50.0732, 0.2796 ) }
    dend_35 { pt3dadd( 482.664, 450.501, 49.1582, 0.305 ) }
    dend_35 { pt3dadd( 482.424, 451.571, 49.2792, 0.2796 ) }
    dend_35 { pt3dadd( 482.031, 452.596, 49.2794, 0.2796 ) }
    dend_35 { pt3dadd( 481.118, 453.191, 49.737, 0.3304 ) }
    dend_35 { pt3dadd( 480.493, 453.029, 48.2392, 0.4068 ) }
    dend_35 { pt3dadd( 479.768, 453.873, 48.5478, 0.4322 ) }
    dend_35 { pt3dadd( 479.402, 454.92, 48.461, 0.3814 ) }
    dend_35 { pt3dadd( 479.144, 456.003, 48.4526, 0.3304 ) }
    dend_35 { pt3dadd( 478.56, 456.62, 47.1419, 0.3304 ) }
    dend_35 { pt3dadd( 478.421, 457.371, 46.76, 0.3814 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 79/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 495.047, 432.432, 53.0132, 0.3814 ) }
    dend_34 { pt3dadd( 494.689, 432.481, 53.2921, 0.4576 ) }
    dend_34 { pt3dadd( 493.835, 433.058, 54.3432, 0.483 ) }
    dend_34 { pt3dadd( 492.918, 433.665, 54.5695, 0.4576 ) }
    dend_34 { pt3dadd( 491.986, 434.253, 54.3567, 0.4068 ) }
    dend_34 { pt3dadd( 491.103, 434.951, 53.895, 0.4068 ) }
    dend_34 { pt3dadd( 490.48, 435.094, 55.8947, 0.4068 ) }
    dend_34 { pt3dadd( 489.465, 435.562, 55.8452, 0.4068 ) }
    dend_34 { pt3dadd( 488.559, 435.992, 56.95, 0.3814 ) }
    dend_34 { pt3dadd( 487.514, 436.25, 57.5383, 0.4068 ) }
    dend_34 { pt3dadd( 486.596, 436.895, 57.9359, 0.4322 ) }
    dend_34 { pt3dadd( 485.725, 437.601, 58.3083, 0.483 ) }
    dend_34 { pt3dadd( 484.77, 438.024, 59.304, 0.483 ) }
    dend_34 { pt3dadd( 483.755, 438.532, 59.3233, 0.4576 ) }
    dend_34 { pt3dadd( 482.825, 439.143, 58.8171, 0.3814 ) }
    dend_34 { pt3dadd( 482.076, 439.787, 58.9711, 0.3814 ) }
    dend_34 { pt3dadd( 481.226, 439.329, 60.37, 0.4576 ) }
    dend_34 { pt3dadd( 480.281, 439.249, 61.4312, 0.5338 ) }
    dend_34 { pt3dadd( 479.375, 439.768, 62.5117, 0.5338 ) }
    dend_34 { pt3dadd( 478.779, 440.696, 62.7211, 0.4576 ) }
    dend_34 { pt3dadd( 477.78, 441.095, 63.5846, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_34 { pt3dadd( 477.102, 441.919, 64.4717, 0.4068 ) }
    dend_34 { pt3dadd( 476.768, 442.886, 65.5805, 0.4068 ) }
    dend_34 { pt3dadd( 476.466, 443.824, 66.8581, 0.4068 ) }
    dend_34 { pt3dadd( 475.799, 444.612, 67.1437, 0.356 ) }
    dend_34 { pt3dadd( 474.892, 444.383, 67.6637, 0.3814 ) }
    dend_34 { pt3dadd( 473.838, 444.021, 67.5338, 0.4576 ) }
    dend_34 { pt3dadd( 473.49, 443.369, 69.4688, 0.5848 ) }
    dend_34 { pt3dadd( 472.72, 444.005, 70.5995, 0.6102 ) }
    dend_34 { pt3dadd( 471.702, 444.49, 70.775, 0.5848 ) }
    dend_34 { pt3dadd( 470.586, 444.698, 71.015, 0.483 ) }
    dend_34 { pt3dadd( 469.526, 444.755, 71.6979, 0.4322 ) }
    dend_34 { pt3dadd( 468.523, 444.294, 72.4122, 0.356 ) }
    dend_34 { pt3dadd( 467.456, 444.025, 72.6312, 0.3304 ) }
    dend_34 { pt3dadd( 466.325, 444.142, 72.4878, 0.356 ) }
    dend_34 { pt3dadd( 465.207, 444.147, 72.634, 0.4068 ) }
    dend_34 { pt3dadd( 464.145, 443.898, 73.2976, 0.483 ) }
    dend_34 { pt3dadd( 463.217, 443.361, 74.1306, 0.4576 ) }
    dend_34 { pt3dadd( 462.206, 443.191, 75.0851, 0.4068 ) }
    dend_34 { pt3dadd( 461.12, 443.465, 75.523, 0.305 ) }
    dend_34 { pt3dadd( 460.109, 443.823, 76.468, 0.2542 ) }
    dend_34 { pt3dadd( 459.019, 443.977, 76.0214, 0.2288 ) }
    dend_34 { pt3dadd( 458.226, 444.439, 77.5124, 0.2288 ) }
    dend_34 { pt3dadd( 457.281, 444.796, 78.7758, 0.2288 ) }
    dend_34 { pt3dadd( 456.214, 445.106, 79.1056, 0.2288 ) }
    dend_34 { pt3dadd( 455.09, 445.245, 78.96, 0.2288 ) }
    dend_34 { pt3dadd( 453.947, 445.215, 78.96, 0.2288 ) }
    dend_34 { pt3dadd( 452.862, 444.966, 78.6559, 0.2796 ) }
    dend_34 { pt3dadd( 452.047, 444.268, 78.799, 0.3304 ) }
    dend_34 { pt3dadd( 451.126, 443.787, 79.7135, 0.4068 ) }
    dend_34 { pt3dadd( 450.118, 443.997, 80.8648, 0.3814 ) }
    dend_34 { pt3dadd( 449.117, 444.263, 82.0313, 0.356 ) }
    dend_34 { pt3dadd( 448.049, 444.205, 83.0038, 0.2796 ) }
    dend_34 { pt3dadd( 446.952, 444.055, 83.2062, 0.2542 ) }
    dend_34 { pt3dadd( 445.837, 444.091, 82.5964, 0.2288 ) }
    dend_34 { pt3dadd( 444.738, 443.942, 82.334, 0.2288 ) }
    dend_34 { pt3dadd( 443.838, 443.289, 82.4289, 0.2288 ) }
    dend_34 { pt3dadd( 443.029, 442.598, 83.0362, 0.2288 ) }
    dend_34 { pt3dadd( 442.016, 442.301, 84.1008, 0.2288 ) }
    dend_34 { pt3dadd( 441.215, 441.806, 85.3868, 0.2288 ) }
    dend_34 { pt3dadd( 440.334, 441.234, 85.9634, 0.2288 ) }
    dend_34 { pt3dadd( 439.302, 440.742, 85.965, 0.2288 ) }
    dend_34 { pt3dadd( 438.4, 440.049, 85.96, 0.2542 ) }
    dend_34 { pt3dadd( 437.558, 439.281, 85.7391, 0.356 ) }
    dend_34 { pt3dadd( 436.69, 438.538, 85.6808, 0.483 ) }
    dend_34 { pt3dadd( 436.039, 437.603, 85.5506, 0.6102 ) }
    dend_34 { pt3dadd( 434.949, 437.351, 85.4, 0.5848 ) }
    // Section: dend_28, id: dend_28, parent: dend_20 (entry count 46/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 520.749, 414.014, 56.0, 0.4576 ) }
    dend_28 { pt3dadd( 520.356, 413.181, 57.9188, 0.305 ) }
    dend_28 { pt3dadd( 519.986, 412.393, 59.7341, 0.2796 ) }
    dend_28 { pt3dadd( 519.888, 411.408, 60.0916, 0.2796 ) }
    dend_28 { pt3dadd( 519.367, 410.846, 61.3346, 0.3304 ) }
    dend_28 { pt3dadd( 518.82, 410.043, 62.713, 0.3304 ) }
    dend_28 { pt3dadd( 518.417, 409.044, 63.394, 0.3304 ) }
    dend_28 { pt3dadd( 517.827, 408.2, 62.3193, 0.2796 ) }
    dend_28 { pt3dadd( 517.219, 407.334, 61.88, 0.2542 ) }
    dend_28 { pt3dadd( 516.721, 406.34, 61.88, 0.2288 ) }
    dend_28 { pt3dadd( 516.15, 405.384, 62.2132, 0.2288 ) }
    dend_28 { pt3dadd( 515.562, 404.449, 62.8331, 0.2542 ) }
    dend_28 { pt3dadd( 514.943, 403.504, 62.7721, 0.2796 ) }
    dend_28 { pt3dadd( 514.388, 402.53, 63.2234, 0.305 ) }
    dend_28 { pt3dadd( 513.703, 401.713, 64.0898, 0.3304 ) }
    dend_28 { pt3dadd( 513.713, 400.645, 63.11, 0.356 ) }
    dend_28 { pt3dadd( 513.268, 399.757, 62.8432, 0.4322 ) }
    dend_28 { pt3dadd( 512.906, 398.845, 62.7822, 0.483 ) }
    dend_28 { pt3dadd( 512.659, 397.839, 61.7263, 0.6102 ) }
    dend_28 { pt3dadd( 512.192, 396.875, 62.0945, 0.661 ) }
    dend_28 { pt3dadd( 511.94, 395.824, 63.0, 0.661 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 67/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 520.749, 414.014, 56.0, 0.4576 ) }
    dend_21 { pt3dadd( 519.638, 414.984, 55.3946, 0.356 ) }
    dend_21 { pt3dadd( 518.677, 415.277, 56.341, 0.356 ) }
    dend_21 { pt3dadd( 517.831, 414.916, 57.1752, 0.4576 ) }
    dend_21 { pt3dadd( 516.793, 415.383, 57.377, 0.5592 ) }
    dend_21 { pt3dadd( 516.74, 416.042, 56.2346, 0.5592 ) }
    dend_21 { pt3dadd( 517.206, 416.514, 57.3936, 0.483 ) }
    dend_21 { pt3dadd( 517.169, 417.245, 59.4605, 0.4068 ) }
    dend_21 { pt3dadd( 516.81, 418.203, 60.0326, 0.3814 ) }
    dend_21 { pt3dadd( 516.156, 418.809, 60.9406, 0.3814 ) }
    dend_21 { pt3dadd( 515.099, 418.896, 61.8164, 0.4068 ) }
    dend_21 { pt3dadd( 514.559, 419.833, 61.88, 0.483 ) }
    // Section: apic_14, id: apic_14, parent: apic_2 (entry count 79/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 496.188, 389.26, 47.7758, 0.483 ) }
    apic_14 { pt3dadd( 496.148, 387.759, 47.8915, 0.4068 ) }
    apic_14 { pt3dadd( 496.051, 386.728, 46.9616, 0.4322 ) }
    apic_14 { pt3dadd( 495.863, 386.055, 48.8754, 0.4068 ) }
    apic_14 { pt3dadd( 496.256, 385.065, 49.369, 0.3814 ) }
    apic_14 { pt3dadd( 496.417, 384.355, 47.6832, 0.3304 ) }
    apic_14 { pt3dadd( 497.172, 383.573, 47.4575, 0.305 ) }
    apic_14 { pt3dadd( 497.354, 382.616, 48.5713, 0.3304 ) }
    apic_14 { pt3dadd( 497.405, 381.547, 49.422, 0.3304 ) }
    apic_14 { pt3dadd( 497.953, 380.589, 49.2584, 0.356 ) }
    apic_14 { pt3dadd( 498.212, 379.689, 48.6217, 0.356 ) }
    apic_14 { pt3dadd( 498.462, 378.678, 48.7049, 0.4068 ) }
    apic_14 { pt3dadd( 499.12, 377.78, 48.9462, 0.4576 ) }
    apic_14 { pt3dadd( 499.72, 376.9, 49.8025, 0.5338 ) }
    apic_14 { pt3dadd( 500.441, 376.02, 49.5732, 0.6102 ) }
    apic_14 { pt3dadd( 500.982, 375.034, 49.1716, 0.661 ) }
    apic_14 { pt3dadd( 501.522, 374.105, 49.7781, 0.6864 ) }
    apic_14 { pt3dadd( 501.684, 373.08, 50.7542, 0.6356 ) }
    apic_14 { pt3dadd( 502.143, 372.092, 50.8052, 0.5338 ) }
    apic_14 { pt3dadd( 502.4, 371.249, 49.156, 0.3814 ) }
    apic_14 { pt3dadd( 502.908, 370.534, 49.3002, 0.305 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    apic_14 { pt3dadd( 503.466, 370.261, 51.4514, 0.305 ) }
    apic_14 { pt3dadd( 504.211, 369.934, 53.2596, 0.3814 ) }
    apic_14 { pt3dadd( 505.297, 369.704, 53.7205, 0.4068 ) }
    apic_14 { pt3dadd( 506.411, 369.487, 53.4489, 0.3814 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 4/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 496.188, 389.26, 47.7758, 0.483 ) }
    apic_3 { pt3dadd( 495.714, 388.83, 48.2017, 0.5848 ) }
    apic_3 { pt3dadd( 494.789, 388.18, 48.6184, 0.5848 ) }
    apic_3 { pt3dadd( 493.76, 387.686, 48.7239, 0.5592 ) }
    apic_3 { pt3dadd( 492.759, 387.135, 48.776, 0.5592 ) }
    apic_3 { pt3dadd( 491.842, 386.458, 48.9695, 0.6102 ) }
    apic_3 { pt3dadd( 490.91, 385.836, 49.518, 0.661 ) }
    apic_3 { pt3dadd( 490.064, 385.076, 49.8, 0.6864 ) }
    apic_3 { pt3dadd( 489.678, 384.012, 49.8389, 0.661 ) }
    apic_3 { pt3dadd( 489.209, 382.969, 49.84, 0.6356 ) }
    apic_3 { pt3dadd( 488.471, 382.096, 49.84, 0.5592 ) }
    apic_3 { pt3dadd( 487.66, 381.291, 49.84, 0.5084 ) }
    apic_3 { pt3dadd( 486.803, 380.532, 49.84, 0.4322 ) }
    apic_3 { pt3dadd( 485.882, 379.855, 49.84, 0.4322 ) }
    apic_3 { pt3dadd( 484.945, 379.199, 49.84, 0.4576 ) }
    apic_3 { pt3dadd( 483.928, 378.673, 49.8403, 0.5084 ) }
    apic_3 { pt3dadd( 482.832, 378.348, 49.8422, 0.5084 ) }
    apic_3 { pt3dadd( 481.732, 378.037, 49.8532, 0.4576 ) }
    apic_3 { pt3dadd( 480.734, 377.477, 49.9125, 0.4322 ) }
    apic_3 { pt3dadd( 479.862, 376.749, 50.2107, 0.4576 ) }
    apic_3 { pt3dadd( 479.124, 375.897, 50.7007, 0.483 ) }
    apic_3 { pt3dadd( 478.446, 374.977, 50.7534, 0.4322 ) }
    apic_3 { pt3dadd( 477.754, 374.07, 50.9603, 0.3814 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 27/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 487.23, 387.689, 26.8489, 0.3814 ) }
    dend_9 { pt3dadd( 486.996, 387.663, 25.7835, 0.356 ) }
    dend_9 { pt3dadd( 486.38, 387.501, 23.4842, 0.305 ) }
    dend_9 { pt3dadd( 485.42, 387.514, 22.8794, 0.356 ) }
    dend_9 { pt3dadd( 484.387, 387.387, 23.8756, 0.3814 ) }
    dend_9 { pt3dadd( 483.945, 387.898, 25.7541, 0.4576 ) }
    dend_9 { pt3dadd( 482.894, 388.322, 25.7186, 0.4322 ) }
    dend_9 { pt3dadd( 482.068, 388.913, 25.2778, 0.4576 ) }
    dend_9 { pt3dadd( 481.193, 388.817, 24.1534, 0.3814 ) }
    dend_9 { pt3dadd( 480.471, 389.492, 23.5852, 0.4068 ) }
    dend_9 { pt3dadd( 479.822, 390.018, 22.528, 0.3814 ) }
    dend_9 { pt3dadd( 478.882, 390.319, 23.7807, 0.4322 ) }
    dend_9 { pt3dadd( 478.13, 391.06, 24.1178, 0.4068 ) }
    dend_9 { pt3dadd( 477.741, 392.132, 24.3141, 0.4068 ) }
    dend_9 { pt3dadd( 477.109, 393.043, 23.9425, 0.356 ) }
    dend_9 { pt3dadd( 476.665, 393.607, 21.9229, 0.356 ) }
    dend_9 { pt3dadd( 475.952, 394.299, 22.5635, 0.3814 ) }
    dend_9 { pt3dadd( 475.437, 395.063, 22.2919, 0.4576 ) }
    dend_9 { pt3dadd( 474.561, 395.649, 23.0807, 0.5084 ) }
    dend_9 { pt3dadd( 473.496, 396.039, 23.2792, 0.5338 ) }
    dend_9 { pt3dadd( 472.831, 396.921, 23.695, 0.5338 ) }
    dend_9 { pt3dadd( 472.519, 397.904, 22.7699, 0.483 ) }
    dend_9 { pt3dadd( 472.447, 398.767, 21.464, 0.4068 ) }
    dend_9 { pt3dadd( 472.114, 399.537, 22.7186, 0.305 ) }
    dend_9 { pt3dadd( 471.778, 399.786, 25.1059, 0.2542 ) }
    dend_9 { pt3dadd( 471.234, 400.652, 25.9316, 0.2542 ) }
    dend_9 { pt3dadd( 470.671, 401.335, 24.2183, 0.2796 ) }
    dend_9 { pt3dadd( 470.957, 402.079, 24.0965, 0.3304 ) }
    dend_9 { pt3dadd( 470.588, 402.947, 25.17, 0.356 ) }
    dend_9 { pt3dadd( 469.497, 403.146, 25.76, 0.4068 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 57/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 487.23, 387.689, 26.8489, 0.3814 ) }
    dend_8 { pt3dadd( 487.414, 387.106, 27.057, 0.4068 ) }
    dend_8 { pt3dadd( 487.066, 386.133, 26.1162, 0.4068 ) }
    dend_8 { pt3dadd( 486.206, 385.641, 27.3098, 0.3814 ) }
    dend_8 { pt3dadd( 485.133, 385.543, 27.7309, 0.4068 ) }
    dend_8 { pt3dadd( 484.239, 384.924, 27.0777, 0.4068 ) }
    dend_8 { pt3dadd( 484.071, 383.958, 27.7584, 0.4322 ) }
    dend_8 { pt3dadd( 484.612, 383.154, 29.0562, 0.4576 ) }
    dend_8 { pt3dadd( 485.312, 382.721, 30.9627, 0.5084 ) }
    dend_8 { pt3dadd( 486.391, 382.681, 31.5157, 0.483 ) }
    dend_8 { pt3dadd( 486.259, 382.91, 28.1448, 0.2796 ) }
    dend_8 { pt3dadd( 486.672, 382.962, 25.9235, 0.2288 ) }
    dend_8 { pt3dadd( 487.238, 382.125, 25.1434, 0.2796 ) }
    dend_8 { pt3dadd( 487.266, 381.023, 25.1916, 0.3814 ) }
    dend_8 { pt3dadd( 486.924, 379.943, 25.4478, 0.5084 ) }
    dend_8 { pt3dadd( 486.769, 378.891, 24.5764, 0.5338 ) }
    dend_8 { pt3dadd( 486.658, 377.792, 25.2179, 0.483 ) }
    dend_8 { pt3dadd( 486.436, 376.93, 24.4056, 0.3814 ) }
    dend_8 { pt3dadd( 486.515, 376.017, 23.2081, 0.356 ) }
    dend_8 { pt3dadd( 486.451, 374.905, 22.6481, 0.356 ) }
    dend_8 { pt3dadd( 485.684, 374.116, 22.7055, 0.4068 ) }
    dend_8 { pt3dadd( 484.921, 373.43, 21.5127, 0.4576 ) }
    dend_8 { pt3dadd( 484.016, 372.848, 21.4598, 0.5084 ) }
    dend_8 { pt3dadd( 483.152, 372.263, 22.314, 0.5338 ) }
    dend_8 { pt3dadd( 482.19, 371.655, 22.286, 0.483 ) }
    dend_8 { pt3dadd( 481.118, 371.306, 21.9993, 0.4576 ) }
    dend_8 { pt3dadd( 480.318, 370.556, 21.8291, 0.4068 ) }
    dend_8 { pt3dadd( 479.557, 369.774, 21.7288, 0.4068 ) }
    dend_8 { pt3dadd( 478.508, 369.448, 22.1522, 0.3304 ) }
    dend_8 { pt3dadd( 477.454, 369.195, 22.3479, 0.305 ) }
    dend_8 { pt3dadd( 477.122, 368.331, 23.2285, 0.305 ) }
    dend_8 { pt3dadd( 476.536, 367.512, 22.9502, 0.3814 ) }
    dend_8 { pt3dadd( 476.315, 366.7, 22.2799, 0.4068 ) }
    dend_8 { pt3dadd( 475.419, 366.044, 22.1679, 0.3814 ) }
    dend_8 { pt3dadd( 474.839, 365.245, 21.2229, 0.305 ) }
    dend_8 { pt3dadd( 473.944, 364.72, 22.1071, 0.2796 ) }
    dend_8 { pt3dadd( 473.135, 364.111, 22.5803, 0.305 ) }
    dend_8 { pt3dadd( 472.306, 363.334, 22.4675, 0.356 ) }
    dend_8 { pt3dadd( 471.828, 362.316, 22.3009, 0.356 ) }
    dend_8 { pt3dadd( 470.984, 361.733, 21.28, 0.3304 ) }
    // Section: dend_27, id: dend_27, parent: dend_21 (entry count 97/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 514.559, 419.833, 61.88, 0.483 ) }
    dend_27 { pt3dadd( 514.163, 419.381, 64.5442, 0.4068 ) }
    dend_27 { pt3dadd( 513.799, 418.965, 66.9956, 0.3304 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_27 { pt3dadd( 513.453, 418.328, 68.6515, 0.2796 ) }
    dend_27 { pt3dadd( 513.143, 417.226, 68.6364, 0.2542 ) }
    dend_27 { pt3dadd( 512.833, 416.124, 68.621, 0.2288 ) }
    dend_27 { pt3dadd( 512.523, 415.024, 68.6059, 0.2288 ) }
    dend_27 { pt3dadd( 512.213, 413.922, 68.5905, 0.2288 ) }
    dend_27 { pt3dadd( 511.906, 412.927, 69.2577, 0.2542 ) }
    dend_27 { pt3dadd( 511.6, 412.107, 71.0609, 0.3304 ) }
    dend_27 { pt3dadd( 511.296, 411.286, 72.8641, 0.4068 ) }
    dend_27 { pt3dadd( 511.48, 410.23, 73.8186, 0.4322 ) }
    dend_27 { pt3dadd( 511.674, 409.17, 74.7541, 0.356 ) }
    dend_27 { pt3dadd( 511.868, 408.109, 75.6896, 0.2796 ) }
    dend_27 { pt3dadd( 512.065, 407.049, 76.6254, 0.2288 ) }
    dend_27 { pt3dadd( 512.151, 406.024, 77.7708, 0.2288 ) }
    dend_27 { pt3dadd( 512.07, 405.054, 79.2397, 0.2288 ) }
    dend_27 { pt3dadd( 511.989, 404.082, 80.7089, 0.2542 ) }
    dend_27 { pt3dadd( 511.909, 403.112, 82.178, 0.2796 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 16/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 514.559, 419.833, 61.88, 0.483 ) }
    dend_22 { pt3dadd( 513.315, 420.301, 62.613, 0.483 ) }
    dend_22 { pt3dadd( 513.013, 420.8, 64.2264, 0.483 ) }
    dend_22 { pt3dadd( 512.156, 421.208, 65.24, 0.483 ) }
    // Section: apic_16, id: apic_16, parent: apic_14 (entry count 20/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( 506.411, 369.487, 53.4489, 0.3814 ) }
    apic_16 { pt3dadd( 506.165, 369.193, 51.1277, 0.3814 ) }
    apic_16 { pt3dadd( 505.832, 368.876, 48.5727, 0.356 ) }
    apic_16 { pt3dadd( 505.283, 368.392, 46.6108, 0.3814 ) }
    apic_16 { pt3dadd( 505.773, 367.659, 45.5034, 0.4322 ) }
    apic_16 { pt3dadd( 506.84, 367.597, 44.9196, 0.483 ) }
    apic_16 { pt3dadd( 507.732, 367.022, 44.1689, 0.483 ) }
    apic_16 { pt3dadd( 508.562, 366.273, 44.088, 0.5084 ) }
    apic_16 { pt3dadd( 509.182, 365.414, 44.4534, 0.483 ) }
    apic_16 { pt3dadd( 509.57, 364.367, 43.9118, 0.483 ) }
    apic_16 { pt3dadd( 510.145, 363.389, 43.7175, 0.4576 ) }
    apic_16 { pt3dadd( 510.996, 362.648, 44.0451, 0.4322 ) }
    apic_16 { pt3dadd( 511.859, 361.94, 43.8746, 0.3814 ) }
    apic_16 { pt3dadd( 512.224, 360.886, 43.556, 0.305 ) }
    apic_16 { pt3dadd( 512.484, 359.794, 43.5114, 0.305 ) }
    apic_16 { pt3dadd( 512.926, 358.749, 43.8698, 0.3304 ) }
    apic_16 { pt3dadd( 512.987, 357.626, 43.6878, 0.4068 ) }
    apic_16 { pt3dadd( 512.909, 356.486, 43.7402, 0.4068 ) }
    apic_16 { pt3dadd( 512.547, 355.622, 44.7874, 0.4322 ) }
    apic_16 { pt3dadd( 512.018, 354.659, 44.205, 0.4068 ) }
    apic_16 { pt3dadd( 511.372, 353.72, 44.1188, 0.4322 ) }
    apic_16 { pt3dadd( 510.865, 352.718, 43.6696, 0.4068 ) }
    apic_16 { pt3dadd( 510.661, 351.654, 43.9118, 0.4068 ) }
    apic_16 { pt3dadd( 510.122, 350.824, 43.5588, 0.3304 ) }
    apic_16 { pt3dadd( 509.671, 349.81, 43.3969, 0.2796 ) }
    apic_16 { pt3dadd( 509.324, 348.798, 44.308, 0.2288 ) }
    apic_16 { pt3dadd( 508.898, 347.943, 44.6804, 0.2542 ) }
    apic_16 { pt3dadd( 508.196, 347.354, 43.6514, 0.2796 ) }
    apic_16 { pt3dadd( 507.724, 346.324, 43.7889, 0.3304 ) }
    apic_16 { pt3dadd( 507.345, 345.249, 43.9477, 0.356 ) }
    apic_16 { pt3dadd( 506.933, 344.195, 43.6458, 0.3814 ) }
    apic_16 { pt3dadd( 506.475, 343.156, 43.4899, 0.356 ) }
    apic_16 { pt3dadd( 506.003, 342.121, 43.3, 0.3304 ) }
    apic_16 { pt3dadd( 505.151, 341.487, 42.9492, 0.3304 ) }
    apic_16 { pt3dadd( 504.257, 340.812, 43.0119, 0.3814 ) }
    apic_16 { pt3dadd( 503.558, 339.959, 42.5144, 0.4068 ) }
    apic_16 { pt3dadd( 502.828, 339.101, 42.448, 0.3814 ) }
    apic_16 { pt3dadd( 502.486, 338.122, 41.673, 0.305 ) }
    apic_16 { pt3dadd( 503.184, 337.233, 41.2922, 0.2542 ) }
    apic_16 { pt3dadd( 503.465, 336.406, 40.8472, 0.2288 ) }
    apic_16 { pt3dadd( 502.812, 335.532, 40.0316, 0.2288 ) }
    apic_16 { pt3dadd( 502.497, 334.513, 39.2036, 0.2542 ) }
    apic_16 { pt3dadd( 502.67, 333.498, 38.1326, 0.2796 ) }
    apic_16 { pt3dadd( 503.103, 332.488, 38.1909, 0.305 ) }
    apic_16 { pt3dadd( 503.334, 331.375, 38.3177, 0.2796 ) }
    apic_16 { pt3dadd( 503.335, 330.232, 38.4367, 0.2542 ) }
    apic_16 { pt3dadd( 503.336, 329.096, 38.4801, 0.2288 ) }
    apic_16 { pt3dadd( 503.121, 328.012, 37.9117, 0.2288 ) }
    apic_16 { pt3dadd( 502.361, 327.312, 37.5315, 0.2288 ) }
    apic_16 { pt3dadd( 501.414, 326.797, 37.2859, 0.2288 ) }
    apic_16 { pt3dadd( 500.653, 325.968, 36.813, 0.2542 ) }
    apic_16 { pt3dadd( 500.215, 324.981, 36.5526, 0.2796 ) }
    apic_16 { pt3dadd( 500.271, 323.859, 36.1973, 0.3304 ) }
    apic_16 { pt3dadd( 500.566, 322.86, 35.1064, 0.356 ) }
    apic_16 { pt3dadd( 500.872, 321.793, 34.4963, 0.4068 ) }
    apic_16 { pt3dadd( 501.092, 320.673, 34.5352, 0.4068 ) }
    apic_16 { pt3dadd( 501.086, 319.541, 34.1849, 0.4322 ) }
    apic_16 { pt3dadd( 501.404, 318.456, 33.8114, 0.4322 ) }
    apic_16 { pt3dadd( 502.103, 317.586, 34.4019, 0.4576 ) }
    apic_16 { pt3dadd( 502.881, 316.817, 33.5916, 0.4068 ) }
    apic_16 { pt3dadd( 503.458, 315.862, 33.087, 0.3304 ) }
    apic_16 { pt3dadd( 503.549, 314.805, 33.6773, 0.2796 ) }
    apic_16 { pt3dadd( 503.338, 313.763, 33.1363, 0.305 ) }
    apic_16 { pt3dadd( 503.26, 312.688, 33.0859, 0.3814 ) }
    apic_16 { pt3dadd( 502.661, 311.899, 32.044, 0.4576 ) }
    apic_16 { pt3dadd( 502.023, 310.987, 32.3602, 0.5338 ) }
    apic_16 { pt3dadd( 501.872, 309.895, 31.988, 0.6102 ) }
    apic_16 { pt3dadd( 501.872, 308.805, 32.3327, 0.6356 ) }
    apic_16 { pt3dadd( 501.762, 307.691, 32.5906, 0.6356 ) }
    apic_16 { pt3dadd( 501.213, 306.815, 31.8035, 0.5848 ) }
    apic_16 { pt3dadd( 500.936, 305.759, 31.3804, 0.5592 ) }
    apic_16 { pt3dadd( 500.672, 304.663, 31.5932, 0.483 ) }
    apic_16 { pt3dadd( 500.633, 303.573, 32.3529, 0.4576 ) }
    apic_16 { pt3dadd( 500.181, 302.586, 32.3915, 0.4576 ) }
    apic_16 { pt3dadd( 499.29, 302.085, 31.4798, 0.5084 ) }
    apic_16 { pt3dadd( 498.301, 301.626, 30.7, 0.5084 ) }
    apic_16 { pt3dadd( 498.125, 300.616, 29.8416, 0.4322 ) }
    apic_16 { pt3dadd( 498.267, 299.56, 28.8504, 0.356 ) }
    apic_16 { pt3dadd( 498.368, 298.449, 28.5141, 0.3304 ) }
    apic_16 { pt3dadd( 498.611, 297.379, 27.8502, 0.3814 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    apic_16 { pt3dadd( 498.562, 296.27, 27.6758, 0.4576 ) }
    apic_16 { pt3dadd( 498.344, 295.149, 27.8009, 0.5084 ) }
    apic_16 { pt3dadd( 499.229, 294.58, 26.9212, 0.5084 ) }
    apic_16 { pt3dadd( 499.795, 293.635, 26.3043, 0.5084 ) }
    apic_16 { pt3dadd( 499.872, 292.545, 25.9599, 0.5084 ) }
    apic_16 { pt3dadd( 499.586, 291.474, 26.4225, 0.5592 ) }
    apic_16 { pt3dadd( 499.292, 290.44, 26.1254, 0.5592 ) }
    apic_16 { pt3dadd( 498.504, 289.749, 25.6071, 0.5592 ) }
    apic_16 { pt3dadd( 497.655, 289.025, 25.1059, 0.5338 ) }
    apic_16 { pt3dadd( 497.002, 288.112, 25.4125, 0.5338 ) }
    apic_16 { pt3dadd( 497.178, 287.055, 24.7268, 0.5338 ) }
    apic_16 { pt3dadd( 497.473, 286.017, 25.5606, 0.5338 ) }
    apic_16 { pt3dadd( 497.781, 284.931, 25.3436, 0.5592 ) }
    apic_16 { pt3dadd( 498.016, 283.929, 25.4503, 0.5848 ) }
    apic_16 { pt3dadd( 498.53, 283.048, 25.9409, 0.6356 ) }
    apic_16 { pt3dadd( 499.069, 282.074, 25.396, 0.661 ) }
    apic_16 { pt3dadd( 499.464, 281.059, 25.8661, 0.7118 ) }
    apic_16 { pt3dadd( 499.125, 279.989, 25.4691, 0.7372 ) }
    apic_16 { pt3dadd( 498.926, 278.871, 25.4862, 0.7626 ) }
    apic_16 { pt3dadd( 498.489, 277.824, 25.6522, 0.6864 ) }
    apic_16 { pt3dadd( 498.036, 276.845, 25.6637, 0.5592 ) }
    apic_16 { pt3dadd( 497.621, 275.855, 25.1619, 0.4068 ) }
    apic_16 { pt3dadd( 497.292, 274.84, 26.1111, 0.356 ) }
    apic_16 { pt3dadd( 496.954, 273.759, 26.32, 0.356 ) }
    // Section: apic_15, id: apic_15, parent: apic_14 (entry count 24/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( 506.411, 369.487, 53.4489, 0.3814 ) }
    apic_15 { pt3dadd( 506.657, 369.161, 52.701, 0.4068 ) }
    apic_15 { pt3dadd( 507.249, 368.311, 53.835, 0.4068 ) }
    apic_15 { pt3dadd( 507.449, 367.369, 55.3232, 0.4322 ) }
    apic_15 { pt3dadd( 507.441, 366.403, 56.6079, 0.4068 ) }
    apic_15 { pt3dadd( 506.909, 365.811, 58.415, 0.4322 ) }
    apic_15 { pt3dadd( 506.408, 364.887, 58.8949, 0.4322 ) }
    apic_15 { pt3dadd( 507.157, 364.055, 59.1506, 0.4322 ) }
    apic_15 { pt3dadd( 507.625, 363.124, 59.897, 0.3814 ) }
    apic_15 { pt3dadd( 507.43, 362.132, 58.9064, 0.305 ) }
    apic_15 { pt3dadd( 507.251, 361.013, 59.08, 0.2796 ) }
    apic_15 { pt3dadd( 507.207, 359.874, 59.192, 0.2796 ) }
    apic_15 { pt3dadd( 507.047, 358.755, 59.5921, 0.305 ) }
    apic_15 { pt3dadd( 507.004, 357.651, 60.0144, 0.305 ) }
    apic_15 { pt3dadd( 507.422, 356.636, 60.6155, 0.3304 ) }
    apic_15 { pt3dadd( 507.392, 355.807, 62.3683, 0.4068 ) }
    apic_15 { pt3dadd( 507.14, 354.752, 62.813, 0.4576 ) }
    apic_15 { pt3dadd( 507.045, 353.69, 63.747, 0.4576 ) }
    apic_15 { pt3dadd( 507.589, 352.729, 64.0898, 0.356 ) }
    apic_15 { pt3dadd( 507.286, 352.654, 66.6551, 0.2796 ) }
    apic_15 { pt3dadd( 506.433, 352.466, 67.6925, 0.2288 ) }
    apic_15 { pt3dadd( 506.199, 351.56, 69.1253, 0.2288 ) }
    apic_15 { pt3dadd( 506.039, 350.597, 70.1319, 0.2288 ) }
    apic_15 { pt3dadd( 506.225, 349.503, 70.7384, 0.2288 ) }
    apic_15 { pt3dadd( 505.482, 348.774, 70.5961, 0.2288 ) }
    apic_15 { pt3dadd( 504.535, 348.191, 71.2564, 0.2288 ) }
    apic_15 { pt3dadd( 503.758, 347.578, 72.4987, 0.2288 ) }
    apic_15 { pt3dadd( 503.122, 346.939, 74.2224, 0.2288 ) }
    apic_15 { pt3dadd( 502.488, 346.298, 75.9464, 0.2288 ) }
    apic_15 { pt3dadd( 502.167, 345.314, 76.4543, 0.2288 ) }
    apic_15 { pt3dadd( 501.976, 344.186, 76.4523, 0.2288 ) }
    apic_15 { pt3dadd( 501.786, 343.058, 76.4506, 0.2288 ) }
    apic_15 { pt3dadd( 501.176, 342.205, 76.6609, 0.2288 ) }
    apic_15 { pt3dadd( 500.24, 341.565, 77.0367, 0.2288 ) }
    apic_15 { pt3dadd( 499.305, 340.926, 77.4127, 0.2288 ) }
    apic_15 { pt3dadd( 498.368, 340.286, 77.7885, 0.2288 ) }
    apic_15 { pt3dadd( 497.635, 339.65, 79.0586, 0.2288 ) }
    apic_15 { pt3dadd( 497.018, 339.015, 80.8284, 0.2288 ) }
    apic_15 { pt3dadd( 496.451, 338.288, 82.2279, 0.2288 ) }
    apic_15 { pt3dadd( 496.092, 337.202, 82.173, 0.2288 ) }
    apic_15 { pt3dadd( 496.191, 336.468, 83.3353, 0.2288 ) }
    apic_15 { pt3dadd( 496.708, 336.061, 85.6251, 0.2796 ) }
    apic_15 { pt3dadd( 497.226, 335.654, 87.9147, 0.3304 ) }
    // Section: apic_11, id: apic_11, parent: apic_3 (entry count 67/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 477.754, 374.07, 50.9603, 0.3814 ) }
    apic_11 { pt3dadd( 476.753, 374.654, 50.5565, 0.5338 ) }
    apic_11 { pt3dadd( 475.805, 375.266, 50.2135, 0.5084 ) }
    apic_11 { pt3dadd( 474.926, 375.925, 50.426, 0.4068 ) }
    apic_11 { pt3dadd( 473.984, 376.332, 50.2788, 0.3814 ) }
    apic_11 { pt3dadd( 473.025, 376.233, 50.5688, 0.3814 ) }
    apic_11 { pt3dadd( 472.677, 376.869, 52.479, 0.4322 ) }
    apic_11 { pt3dadd( 471.786, 377.368, 51.4268, 0.4322 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 75/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 477.754, 374.07, 50.9603, 0.3814 ) }
    apic_4 { pt3dadd( 477.221, 373.434, 50.9614, 0.3814 ) }
    apic_4 { pt3dadd( 476.609, 372.468, 50.967, 0.4576 ) }
    apic_4 { pt3dadd( 475.976, 371.516, 50.9953, 0.5338 ) }
    apic_4 { pt3dadd( 475.219, 370.661, 51.1168, 0.5592 ) }
    apic_4 { pt3dadd( 474.454, 369.849, 51.7434, 0.5338 ) }
    apic_4 { pt3dadd( 473.775, 368.946, 52.1584, 0.483 ) }
    apic_4 { pt3dadd( 473.194, 368.007, 52.8797, 0.5084 ) }
    apic_4 { pt3dadd( 472.459, 367.141, 53.1936, 0.5338 ) }
    apic_4 { pt3dadd( 471.536, 366.469, 53.3436, 0.5592 ) }
    apic_4 { pt3dadd( 470.626, 365.815, 53.8905, 0.5084 ) }
    apic_4 { pt3dadd( 469.871, 364.97, 54.2654, 0.483 ) }
    apic_4 { pt3dadd( 469.143, 364.088, 54.3192, 0.4322 ) }
    apic_4 { pt3dadd( 468.447, 363.179, 54.3203, 0.4068 ) }
    apic_4 { pt3dadd( 467.992, 362.131, 54.322, 0.4322 ) }
    apic_4 { pt3dadd( 467.488, 361.104, 54.3306, 0.483 ) }
    apic_4 { pt3dadd( 466.922, 360.109, 54.3813, 0.5084 ) }
    apic_4 { pt3dadd( 466.32, 359.154, 54.8164, 0.4322 ) }
    apic_4 { pt3dadd( 465.529, 358.339, 55.1387, 0.356 ) }
    apic_4 { pt3dadd( 464.665, 357.593, 54.9489, 0.3304 ) }
    apic_4 { pt3dadd( 464.113, 356.664, 55.8586, 0.3814 ) }
    apic_4 { pt3dadd( 463.723, 355.636, 56.639, 0.4576 ) }
    apic_4 { pt3dadd( 462.96, 354.823, 57.2592, 0.5338 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 98/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 512.156, 421.208, 65.24, 0.483 ) }
    dend_24 { pt3dadd( 512.146, 421.75, 64.5249, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_24 { pt3dadd( 511.997, 422.687, 63.5533, 0.5338 ) }
    dend_24 { pt3dadd( 512.656, 423.542, 62.7357, 0.5084 ) }
    dend_24 { pt3dadd( 512.796, 424.608, 62.4478, 0.4068 ) }
    dend_24 { pt3dadd( 512.546, 425.645, 61.6048, 0.3304 ) }
    dend_24 { pt3dadd( 511.973, 426.481, 60.3795, 0.3304 ) }
    dend_24 { pt3dadd( 511.02, 427.042, 60.0636, 0.356 ) }
    dend_24 { pt3dadd( 510.367, 427.845, 59.0929, 0.3814 ) }
    dend_24 { pt3dadd( 509.604, 428.504, 58.1384, 0.4068 ) }
    dend_24 { pt3dadd( 508.616, 429.052, 58.2271, 0.4068 ) }
    dend_24 { pt3dadd( 508.053, 429.832, 59.4846, 0.4322 ) }
    dend_24 { pt3dadd( 507.637, 430.778, 59.8657, 0.4322 ) }
    dend_24 { pt3dadd( 506.678, 431.332, 59.3496, 0.4576 ) }
    dend_24 { pt3dadd( 505.732, 431.853, 58.8904, 0.4576 ) }
    dend_24 { pt3dadd( 504.853, 432.526, 58.9212, 0.4322 ) }
    dend_24 { pt3dadd( 504.507, 433.327, 60.221, 0.4322 ) }
    dend_24 { pt3dadd( 504.65, 434.281, 61.5852, 0.4576 ) }
    dend_24 { pt3dadd( 504.855, 435.235, 62.9392, 0.5084 ) }
    dend_24 { pt3dadd( 504.221, 436.069, 63.2943, 0.5084 ) }
    dend_24 { pt3dadd( 503.645, 437.005, 63.8842, 0.4322 ) }
    dend_24 { pt3dadd( 503.94, 437.239, 66.3435, 0.3304 ) }
    dend_24 { pt3dadd( 503.652, 437.694, 67.5853, 0.305 ) }
    dend_24 { pt3dadd( 504.113, 438.573, 68.2217, 0.3304 ) }
    dend_24 { pt3dadd( 504.427, 439.446, 69.1107, 0.4068 ) }
    dend_24 { pt3dadd( 503.635, 439.818, 70.0344, 0.4322 ) }
    dend_24 { pt3dadd( 502.879, 440.057, 70.8305, 0.4576 ) }
    dend_24 { pt3dadd( 502.884, 441.093, 71.0707, 0.4322 ) }
    dend_24 { pt3dadd( 503.029, 442.107, 69.9062, 0.356 ) }
    dend_24 { pt3dadd( 503.131, 443.236, 69.5475, 0.2796 ) }
    dend_24 { pt3dadd( 503.148, 444.333, 69.8874, 0.2796 ) }
    dend_24 { pt3dadd( 503.543, 444.392, 72.4903, 0.3814 ) }
    dend_24 { pt3dadd( 503.741, 444.77, 74.7463, 0.483 ) }
    dend_24 { pt3dadd( 504.075, 445.795, 75.1755, 0.483 ) }
    dend_24 { pt3dadd( 504.515, 446.264, 76.3087, 0.4322 ) }
    dend_24 { pt3dadd( 505.252, 446.376, 78.3633, 0.4322 ) }
    dend_24 { pt3dadd( 505.438, 447.342, 78.9438, 0.5084 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 35/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 512.156, 421.208, 65.24, 0.483 ) }
    dend_23 { pt3dadd( 511.065, 421.628, 65.3327, 0.5338 ) }
    dend_23 { pt3dadd( 509.993, 421.959, 65.1134, 0.483 ) }
    dend_23 { pt3dadd( 508.904, 421.753, 64.9323, 0.4576 ) }
    dend_23 { pt3dadd( 508.475, 422.12, 67.0398, 0.4576 ) }
    dend_23 { pt3dadd( 507.627, 422.264, 68.8545, 0.483 ) }
    dend_23 { pt3dadd( 506.73, 422.63, 70.3424, 0.483 ) }
    dend_23 { pt3dadd( 505.759, 423.018, 71.1889, 0.4576 ) }
    dend_23 { pt3dadd( 504.799, 423.563, 70.6787, 0.356 ) }
    dend_23 { pt3dadd( 503.908, 424.247, 70.9831, 0.2796 ) }
    dend_23 { pt3dadd( 502.838, 424.534, 71.2286, 0.2796 ) }
    dend_23 { pt3dadd( 501.763, 424.632, 71.7464, 0.3304 ) }
    dend_23 { pt3dadd( 500.795, 425.069, 71.6442, 0.3814 ) }
    dend_23 { pt3dadd( 500.283, 425.775, 72.7978, 0.3814 ) }
    dend_23 { pt3dadd( 499.569, 426.575, 73.5473, 0.4068 ) }
    dend_23 { pt3dadd( 499.079, 427.577, 74.0505, 0.483 ) }
    dend_23 { pt3dadd( 498.785, 428.647, 74.6362, 0.5084 ) }
    dend_23 { pt3dadd( 498.495, 429.681, 75.5678, 0.483 ) }
    dend_23 { pt3dadd( 498.069, 430.67, 75.9228, 0.3814 ) }
    dend_23 { pt3dadd( 497.242, 431.458, 75.9094, 0.3814 ) }
    dend_23 { pt3dadd( 496.65, 432.415, 75.6269, 0.4068 ) }
    dend_23 { pt3dadd( 496.768, 433.456, 76.4901, 0.4576 ) }
    dend_23 { pt3dadd( 497.082, 434.447, 76.8961, 0.4068 ) }
    dend_23 { pt3dadd( 497.284, 435.468, 77.7059, 0.356 ) }
    dend_23 { pt3dadd( 497.424, 436.593, 78.0522, 0.305 ) }
    dend_23 { pt3dadd( 498.09, 437.448, 78.5294, 0.305 ) }
    dend_23 { pt3dadd( 498.387, 438.515, 78.8463, 0.305 ) }
    dend_23 { pt3dadd( 498.4, 439.43, 78.4714, 0.305 ) }
    dend_23 { pt3dadd( 497.82, 439.815, 79.8314, 0.305 ) }
    dend_23 { pt3dadd( 497.493, 440.863, 79.4469, 0.305 ) }
    dend_23 { pt3dadd( 497.34, 441.961, 80.0618, 0.305 ) }
    dend_23 { pt3dadd( 497.204, 443.011, 81.1199, 0.3304 ) }
    dend_23 { pt3dadd( 496.9, 443.648, 82.91, 0.356 ) }
    dend_23 { pt3dadd( 496.151, 444.124, 84.0666, 0.3814 ) }
    dend_23 { pt3dadd( 495.191, 444.727, 83.8404, 0.356 ) }
    dend_23 { pt3dadd( 494.242, 445.278, 84.6037, 0.3304 ) }
    dend_23 { pt3dadd( 493.225, 445.721, 85.099, 0.2796 ) }
    dend_23 { pt3dadd( 492.603, 446.667, 84.7269, 0.2542 ) }
    dend_23 { pt3dadd( 491.95, 447.571, 84.1025, 0.2288 ) }
    dend_23 { pt3dadd( 491.217, 448.443, 83.9874, 0.2288 ) }
    dend_23 { pt3dadd( 490.404, 449.209, 83.986, 0.2288 ) }
    dend_23 { pt3dadd( 489.312, 449.55, 84.0277, 0.2288 ) }
    dend_23 { pt3dadd( 488.767, 450.36, 84.966, 0.2288 ) }
    dend_23 { pt3dadd( 488.395, 451.319, 86.1904, 0.2288 ) }
    dend_23 { pt3dadd( 488.023, 452.278, 87.4149, 0.2288 ) }
    dend_23 { pt3dadd( 487.653, 453.238, 88.639, 0.2288 ) }
    dend_23 { pt3dadd( 487.281, 454.198, 89.8635, 0.2288 ) }
    dend_23 { pt3dadd( 486.993, 455.248, 90.3949, 0.2288 ) }
    dend_23 { pt3dadd( 486.771, 456.37, 90.3812, 0.2288 ) }
    dend_23 { pt3dadd( 486.549, 457.492, 90.3675, 0.2288 ) }
    dend_23 { pt3dadd( 486.327, 458.615, 90.3538, 0.2288 ) }
    dend_23 { pt3dadd( 486.293, 459.745, 90.3563, 0.2288 ) }
    dend_23 { pt3dadd( 486.408, 460.883, 90.3714, 0.2288 ) }
    dend_23 { pt3dadd( 486.523, 462.022, 90.3868, 0.2288 ) }
    dend_23 { pt3dadd( 486.639, 463.16, 90.4022, 0.2288 ) }
    dend_23 { pt3dadd( 487.102, 464.179, 90.4092, 0.2288 ) }
    dend_23 { pt3dadd( 487.711, 465.146, 90.4131, 0.2288 ) }
    dend_23 { pt3dadd( 488.322, 466.114, 90.4168, 0.2288 ) }
    dend_23 { pt3dadd( 488.933, 467.08, 90.4207, 0.2288 ) }
    dend_23 { pt3dadd( 489.658, 467.964, 90.428, 0.2288 ) }
    dend_23 { pt3dadd( 490.408, 468.828, 90.4358, 0.2288 ) }
    dend_23 { pt3dadd( 491.156, 469.692, 90.4439, 0.2288 ) }
    dend_23 { pt3dadd( 491.905, 470.557, 90.452, 0.2288 ) }
    dend_23 { pt3dadd( 492.553, 471.494, 90.4551, 0.2288 ) }
    dend_23 { pt3dadd( 493.113, 472.49, 90.454, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_23 { pt3dadd( 493.673, 473.488, 90.4532, 0.2288 ) }
    dend_23 { pt3dadd( 494.233, 474.485, 90.452, 0.2288 ) }
    dend_23 { pt3dadd( 494.825, 475.46, 90.4571, 0.2288 ) }
    dend_23 { pt3dadd( 495.611, 476.292, 90.4991, 0.2542 ) }
    dend_23 { pt3dadd( 496.395, 477.124, 90.5411, 0.3304 ) }
    // Section: apic_13, id: apic_13, parent: apic_11 (entry count 5/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 471.786, 377.368, 51.4268, 0.4322 ) }
    apic_13 { pt3dadd( 471.832, 378.133, 52.7148, 0.3304 ) }
    apic_13 { pt3dadd( 471.89, 379.075, 54.2984, 0.3304 ) }
    apic_13 { pt3dadd( 472.058, 380.121, 53.8642, 0.3814 ) }
    apic_13 { pt3dadd( 471.941, 381.213, 53.9104, 0.4576 ) }
    apic_13 { pt3dadd( 471.298, 381.899, 54.9931, 0.5084 ) }
    apic_13 { pt3dadd( 470.944, 382.933, 54.9013, 0.5084 ) }
    apic_13 { pt3dadd( 470.898, 384.028, 55.6522, 0.4576 ) }
    apic_13 { pt3dadd( 471.154, 384.99, 56.6894, 0.3814 ) }
    apic_13 { pt3dadd( 471.493, 385.974, 57.6792, 0.3814 ) }
    apic_13 { pt3dadd( 471.446, 387.107, 57.9421, 0.4068 ) }
    apic_13 { pt3dadd( 470.875, 388.077, 57.9281, 0.483 ) }
    apic_13 { pt3dadd( 469.75, 388.134, 58.3083, 0.483 ) }
    apic_13 { pt3dadd( 468.713, 388.602, 58.5102, 0.483 ) }
    apic_13 { pt3dadd( 467.824, 389.309, 58.6944, 0.483 ) }
    apic_13 { pt3dadd( 467.07, 390.151, 59.0125, 0.483 ) }
    apic_13 { pt3dadd( 466.316, 390.999, 58.9364, 0.483 ) }
    apic_13 { pt3dadd( 465.728, 391.625, 59.9539, 0.4576 ) }
    apic_13 { pt3dadd( 465.781, 392.469, 61.2209, 0.5084 ) }
    apic_13 { pt3dadd( 465.789, 393.597, 61.4149, 0.5592 ) }
    apic_13 { pt3dadd( 465.407, 394.328, 62.9927, 0.5592 ) }
    apic_13 { pt3dadd( 465.605, 394.408, 65.5735, 0.483 ) }
    apic_13 { pt3dadd( 465.686, 395.308, 67.1084, 0.3814 ) }
    apic_13 { pt3dadd( 465.663, 396.417, 67.4576, 0.356 ) }
    apic_13 { pt3dadd( 465.839, 397.475, 68.1943, 0.356 ) }
    apic_13 { pt3dadd( 466.129, 398.542, 68.7386, 0.4068 ) }
    apic_13 { pt3dadd( 466.6, 399.541, 69.3806, 0.4068 ) }
    apic_13 { pt3dadd( 466.099, 400.359, 69.463, 0.4068 ) }
    apic_13 { pt3dadd( 466.09, 401.248, 70.4757, 0.356 ) }
    apic_13 { pt3dadd( 465.608, 402.002, 71.96, 0.3814 ) }
    // Section: apic_12, id: apic_12, parent: apic_11 (entry count 35/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 471.786, 377.368, 51.4268, 0.4322 ) }
    apic_12 { pt3dadd( 471.152, 377.868, 50.9572, 0.4068 ) }
    apic_12 { pt3dadd( 470.39, 378.611, 51.0698, 0.4576 ) }
    apic_12 { pt3dadd( 469.375, 378.936, 50.4146, 0.4068 ) }
    apic_12 { pt3dadd( 468.247, 379.075, 50.1239, 0.3304 ) }
    apic_12 { pt3dadd( 467.284, 378.67, 50.7685, 0.2796 ) }
    apic_12 { pt3dadd( 466.243, 378.752, 50.1368, 0.2796 ) }
    apic_12 { pt3dadd( 465.306, 379.158, 51.1232, 0.3304 ) }
    apic_12 { pt3dadd( 464.413, 379.798, 51.5096, 0.356 ) }
    apic_12 { pt3dadd( 463.421, 380.336, 51.2624, 0.3814 ) }
    apic_12 { pt3dadd( 462.806, 381.233, 51.1938, 0.4068 ) }
    apic_12 { pt3dadd( 462.02, 381.976, 50.8001, 0.4068 ) }
    apic_12 { pt3dadd( 461.01, 382.364, 49.9615, 0.4068 ) }
    apic_12 { pt3dadd( 459.936, 382.616, 49.4304, 0.3814 ) }
    apic_12 { pt3dadd( 458.964, 383.147, 49.9313, 0.4322 ) }
    apic_12 { pt3dadd( 458.157, 383.596, 49.9856, 0.483 ) }
    apic_12 { pt3dadd( 457.447, 384.193, 49.46, 0.483 ) }
    apic_12 { pt3dadd( 456.423, 384.558, 50.2701, 0.4068 ) }
    apic_12 { pt3dadd( 455.642, 385.231, 49.5894, 0.3304 ) }
    apic_12 { pt3dadd( 455.06, 385.297, 49.7442, 0.305 ) }
    apic_12 { pt3dadd( 454.271, 385.179, 49.4654, 0.305 ) }
    apic_12 { pt3dadd( 453.872, 386.162, 49.2881, 0.356 ) }
    apic_12 { pt3dadd( 452.84, 386.61, 49.5046, 0.4322 ) }
    apic_12 { pt3dadd( 451.834, 387.107, 49.8991, 0.483 ) }
    apic_12 { pt3dadd( 451.109, 387.931, 50.129, 0.483 ) }
    apic_12 { pt3dadd( 450.355, 388.389, 48.3473, 0.4322 ) }
    apic_12 { pt3dadd( 449.499, 388.874, 47.1383, 0.4576 ) }
    apic_12 { pt3dadd( 448.486, 389.395, 46.9876, 0.4576 ) }
    apic_12 { pt3dadd( 447.75, 389.97, 48.2639, 0.5338 ) }
    apic_12 { pt3dadd( 447.092, 390.837, 48.8544, 0.5338 ) }
    apic_12 { pt3dadd( 446.321, 391.623, 48.2037, 0.5848 ) }
    apic_12 { pt3dadd( 445.69, 392.521, 47.4197, 0.5592 ) }
    apic_12 { pt3dadd( 445.295, 393.59, 47.2413, 0.5592 ) }
    apic_12 { pt3dadd( 444.749, 394.538, 46.5231, 0.5084 ) }
    apic_12 { pt3dadd( 444.228, 395.497, 46.7236, 0.4576 ) }
    apic_12 { pt3dadd( 443.806, 396.433, 45.789, 0.4068 ) }
    apic_12 { pt3dadd( 443.394, 397.217, 44.961, 0.356 ) }
    apic_12 { pt3dadd( 442.685, 397.704, 43.29, 0.3304 ) }
    apic_12 { pt3dadd( 442.148, 398.519, 41.8499, 0.305 ) }
    apic_12 { pt3dadd( 441.29, 399.178, 41.221, 0.3304 ) }
    apic_12 { pt3dadd( 441.049, 400.136, 40.1212, 0.3814 ) }
    apic_12 { pt3dadd( 440.303, 400.803, 41.2107, 0.4322 ) }
    apic_12 { pt3dadd( 440.053, 401.799, 41.0662, 0.4322 ) }
    apic_12 { pt3dadd( 439.82, 402.65, 39.286, 0.3814 ) }
    apic_12 { pt3dadd( 439.053, 403.29, 38.1077, 0.305 ) }
    apic_12 { pt3dadd( 438.309, 403.659, 36.4064, 0.2542 ) }
    apic_12 { pt3dadd( 437.699, 403.738, 37.7163, 0.2288 ) }
    apic_12 { pt3dadd( 437.781, 404.465, 39.2367, 0.2288 ) }
    apic_12 { pt3dadd( 437.029, 404.276, 39.8731, 0.2288 ) }
    apic_12 { pt3dadd( 436.6, 405.038, 41.5685, 0.2288 ) }
    apic_12 { pt3dadd( 436.271, 405.983, 42.5102, 0.2288 ) }
    apic_12 { pt3dadd( 435.68, 406.777, 41.4621, 0.2288 ) }
    apic_12 { pt3dadd( 435.393, 406.888, 38.8265, 0.2542 ) }
    apic_12 { pt3dadd( 435.465, 407.835, 37.3016, 0.2796 ) }
    apic_12 { pt3dadd( 435.062, 408.776, 36.2121, 0.305 ) }
    apic_12 { pt3dadd( 434.733, 409.536, 37.5309, 0.3304 ) }
    apic_12 { pt3dadd( 434.814, 410.418, 38.3614, 0.3814 ) }
    apic_12 { pt3dadd( 435.227, 411.482, 38.2665, 0.4576 ) }
    apic_12 { pt3dadd( 435.345, 412.577, 38.8063, 0.4576 ) }
    apic_12 { pt3dadd( 435.545, 413.566, 40.0809, 0.4322 ) }
    apic_12 { pt3dadd( 436.168, 414.463, 39.72, 0.356 ) }
    apic_12 { pt3dadd( 437.161, 414.917, 38.9735, 0.356 ) }
    apic_12 { pt3dadd( 437.881, 415.055, 36.8399, 0.356 ) }
    apic_12 { pt3dadd( 437.706, 416.009, 35.4978, 0.3814 ) }
    apic_12 { pt3dadd( 437.889, 417.124, 35.6241, 0.356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    apic_12 { pt3dadd( 438.265, 418.146, 35.551, 0.305 ) }
    apic_12 { pt3dadd( 438.543, 419.055, 35.5807, 0.2796 ) }
    apic_12 { pt3dadd( 438.796, 419.908, 34.183, 0.2796 ) }
    apic_12 { pt3dadd( 438.507, 420.985, 33.7814, 0.356 ) }
    apic_12 { pt3dadd( 438.098, 421.971, 33.6073, 0.3814 ) }
    apic_12 { pt3dadd( 438.303, 422.955, 32.3126, 0.4576 ) }
    apic_12 { pt3dadd( 438.395, 423.814, 33.2878, 0.4576 ) }
    apic_12 { pt3dadd( 438.409, 424.859, 33.5143, 0.5338 ) }
    apic_12 { pt3dadd( 437.951, 425.823, 32.6236, 0.5084 ) }
    apic_12 { pt3dadd( 437.604, 426.858, 32.5713, 0.483 ) }
    apic_12 { pt3dadd( 436.958, 427.766, 33.0887, 0.356 ) }
    apic_12 { pt3dadd( 436.364, 428.664, 32.3778, 0.2796 ) }
    apic_12 { pt3dadd( 436.002, 429.624, 31.7092, 0.2288 ) }
    apic_12 { pt3dadd( 436.311, 430.699, 31.6705, 0.2288 ) }
    apic_12 { pt3dadd( 436.496, 431.802, 31.71, 0.2542 ) }
    apic_12 { pt3dadd( 436.2, 432.744, 30.543, 0.2796 ) }
    apic_12 { pt3dadd( 435.564, 433.54, 31.0688, 0.305 ) }
    apic_12 { pt3dadd( 435.323, 434.642, 30.7574, 0.2796 ) }
    apic_12 { pt3dadd( 434.918, 435.677, 30.0994, 0.2796 ) }
    apic_12 { pt3dadd( 434.818, 436.715, 29.7912, 0.305 ) }
    apic_12 { pt3dadd( 435.213, 437.692, 30.6944, 0.3814 ) }
    apic_12 { pt3dadd( 435.54, 438.701, 30.0255, 0.4068 ) }
    apic_12 { pt3dadd( 435.592, 439.743, 28.9055, 0.4322 ) }
    apic_12 { pt3dadd( 435.71, 440.665, 27.9026, 0.4322 ) }
    apic_12 { pt3dadd( 435.711, 441.472, 26.3662, 0.4576 ) }
    apic_12 { pt3dadd( 436.349, 442.196, 26.5286, 0.4322 ) }
    apic_12 { pt3dadd( 436.874, 442.313, 28.9094, 0.3814 ) }
    apic_12 { pt3dadd( 437.453, 442.982, 30.2554, 0.356 ) }
    apic_12 { pt3dadd( 437.589, 443.864, 31.7918, 0.3814 ) }
    apic_12 { pt3dadd( 438.152, 444.787, 31.92, 0.4576 ) }
    // Section: apic_10, id: apic_10, parent: apic_4 (entry count 30/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 462.96, 354.823, 57.2592, 0.5338 ) }
    apic_10 { pt3dadd( 463.29, 354.6, 57.4694, 0.356 ) }
    apic_10 { pt3dadd( 464.161, 353.879, 57.755, 0.305 ) }
    apic_10 { pt3dadd( 465.072, 353.235, 57.8172, 0.2796 ) }
    apic_10 { pt3dadd( 466.065, 352.736, 58.3836, 0.3304 ) }
    apic_10 { pt3dadd( 466.983, 352.092, 58.7322, 0.356 ) }
    apic_10 { pt3dadd( 467.802, 351.302, 58.7678, 0.3814 ) }
    apic_10 { pt3dadd( 468.733, 350.698, 58.9683, 0.356 ) }
    apic_10 { pt3dadd( 469.603, 350.982, 59.7688, 0.305 ) }
    apic_10 { pt3dadd( 470.41, 351.533, 61.1778, 0.2542 ) }
    apic_10 { pt3dadd( 471.444, 351.47, 61.8251, 0.2288 ) }
    apic_10 { pt3dadd( 472.426, 350.952, 62.4084, 0.2288 ) }
    apic_10 { pt3dadd( 473.489, 351.163, 62.8919, 0.2288 ) }
    apic_10 { pt3dadd( 474.577, 350.885, 63.1218, 0.2542 ) }
    apic_10 { pt3dadd( 475.346, 350.164, 63.933, 0.2796 ) }
    apic_10 { pt3dadd( 475.956, 349.524, 65.4234, 0.3304 ) }
    apic_10 { pt3dadd( 476.622, 348.724, 66.078, 0.3304 ) }
    apic_10 { pt3dadd( 477.594, 348.173, 66.4042, 0.3304 ) }
    apic_10 { pt3dadd( 478.559, 347.579, 66.0444, 0.2796 ) }
    apic_10 { pt3dadd( 479.528, 346.998, 65.6135, 0.2542 ) }
    apic_10 { pt3dadd( 480.576, 346.567, 65.4203, 0.2288 ) }
    apic_10 { pt3dadd( 481.661, 346.211, 65.3374, 0.2288 ) }
    apic_10 { pt3dadd( 482.721, 346.581, 65.2999, 0.2288 ) }
    apic_10 { pt3dadd( 483.743, 346.069, 65.3565, 0.2288 ) }
    apic_10 { pt3dadd( 484.767, 345.557, 65.413, 0.2288 ) }
    apic_10 { pt3dadd( 485.587, 345.606, 67.1955, 0.2288 ) }
    apic_10 { pt3dadd( 486.383, 345.723, 69.1872, 0.2288 ) }
    apic_10 { pt3dadd( 487.178, 345.839, 71.1788, 0.2288 ) }
    apic_10 { pt3dadd( 488.308, 345.701, 71.1603, 0.2288 ) }
    apic_10 { pt3dadd( 489.443, 345.559, 71.113, 0.2288 ) }
    apic_10 { pt3dadd( 490.586, 345.537, 71.0522, 0.2288 ) }
    apic_10 { pt3dadd( 491.73, 345.536, 70.989, 0.2288 ) }
    apic_10 { pt3dadd( 492.864, 345.513, 71.0284, 0.2288 ) }
    apic_10 { pt3dadd( 493.92, 345.29, 71.9589, 0.2288 ) }
    apic_10 { pt3dadd( 494.976, 345.066, 72.8893, 0.2288 ) }
    apic_10 { pt3dadd( 496.069, 344.995, 73.397, 0.2288 ) }
    apic_10 { pt3dadd( 497.208, 345.107, 73.3975, 0.2288 ) }
    apic_10 { pt3dadd( 498.346, 345.218, 73.3981, 0.2288 ) }
    apic_10 { pt3dadd( 499.484, 345.33, 73.3986, 0.2288 ) }
    apic_10 { pt3dadd( 500.624, 345.441, 73.3992, 0.2288 ) }
    apic_10 { pt3dadd( 501.47, 344.718, 73.3471, 0.2288 ) }
    apic_10 { pt3dadd( 502.294, 343.923, 73.2903, 0.2288 ) }
    apic_10 { pt3dadd( 503.116, 343.129, 73.2337, 0.2288 ) }
    apic_10 { pt3dadd( 504.01, 342.668, 73.6142, 0.2288 ) }
    apic_10 { pt3dadd( 505.035, 342.823, 74.8009, 0.2288 ) }
    apic_10 { pt3dadd( 506.06, 342.976, 75.9878, 0.2288 ) }
    apic_10 { pt3dadd( 507.085, 343.13, 77.1744, 0.2288 ) }
    apic_10 { pt3dadd( 508.109, 343.284, 78.3614, 0.2288 ) }
    apic_10 { pt3dadd( 509.134, 343.438, 79.5483, 0.2288 ) }
    apic_10 { pt3dadd( 510.143, 343.444, 80.5101, 0.2288 ) }
    apic_10 { pt3dadd( 511.079, 342.786, 80.4681, 0.2288 ) }
    apic_10 { pt3dadd( 512.013, 342.128, 80.4258, 0.2288 ) }
    apic_10 { pt3dadd( 512.95, 341.47, 80.3835, 0.2288 ) }
    apic_10 { pt3dadd( 513.861, 340.798, 80.4975, 0.2288 ) }
    apic_10 { pt3dadd( 514.643, 340.049, 81.3952, 0.2288 ) }
    apic_10 { pt3dadd( 515.427, 339.301, 82.2928, 0.2288 ) }
    apic_10 { pt3dadd( 516.211, 338.553, 83.1905, 0.2288 ) }
    apic_10 { pt3dadd( 516.995, 337.805, 84.0882, 0.2288 ) }
    apic_10 { pt3dadd( 517.779, 337.057, 84.9859, 0.2288 ) }
    apic_10 { pt3dadd( 518.562, 336.268, 85.489, 0.2288 ) }
    apic_10 { pt3dadd( 519.343, 335.432, 85.5072, 0.2288 ) }
    apic_10 { pt3dadd( 519.771, 334.416, 85.5019, 0.2288 ) }
    apic_10 { pt3dadd( 519.989, 333.294, 85.482, 0.2288 ) }
    apic_10 { pt3dadd( 520.432, 332.347, 85.4392, 0.2288 ) }
    apic_10 { pt3dadd( 521.469, 331.867, 85.3359, 0.2542 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 95/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 462.96, 354.823, 57.2592, 0.5338 ) }
    apic_5 { pt3dadd( 462.237, 353.955, 56.609, 0.4068 ) }
    apic_5 { pt3dadd( 461.754, 352.933, 57.0461, 0.3304 ) }
    apic_5 { pt3dadd( 461.259, 351.928, 57.5184, 0.3304 ) }
    apic_5 { pt3dadd( 460.703, 351.084, 58.7941, 0.356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    apic_5 { pt3dadd( 459.952, 350.261, 59.3757, 0.3814 ) }
    apic_5 { pt3dadd( 459.28, 349.341, 59.4782, 0.3814 ) }
    apic_5 { pt3dadd( 458.496, 348.62, 59.269, 0.4068 ) }
    apic_5 { pt3dadd( 457.661, 348.018, 59.871, 0.4322 ) }
    apic_5 { pt3dadd( 457.221, 347.026, 60.5122, 0.483 ) }
    apic_5 { pt3dadd( 456.795, 345.97, 60.5223, 0.5338 ) }
    apic_5 { pt3dadd( 456.51, 344.9, 61.0907, 0.5848 ) }
    apic_5 { pt3dadd( 455.89, 343.966, 61.299, 0.5848 ) }
    apic_5 { pt3dadd( 454.924, 343.379, 61.4457, 0.5592 ) }
    apic_5 { pt3dadd( 454.055, 342.68, 62.0052, 0.5084 ) }
    apic_5 { pt3dadd( 453.209, 341.913, 62.1776, 0.483 ) }
    apic_5 { pt3dadd( 452.148, 341.494, 62.1659, 0.4322 ) }
    apic_5 { pt3dadd( 451.052, 341.232, 62.6122, 0.4322 ) }
    apic_5 { pt3dadd( 450.052, 340.722, 63.0168, 0.4576 ) }
    apic_5 { pt3dadd( 449.383, 339.802, 63.2825, 0.5084 ) }
    apic_5 { pt3dadd( 448.594, 338.987, 63.5835, 0.5084 ) }
    apic_5 { pt3dadd( 448.026, 338.0, 63.8252, 0.4322 ) }
    apic_5 { pt3dadd( 447.612, 336.939, 63.9638, 0.3304 ) }
    apic_5 { pt3dadd( 447.04, 335.986, 64.5487, 0.2542 ) }
    apic_5 { pt3dadd( 446.209, 335.243, 65.163, 0.2288 ) }
    apic_5 { pt3dadd( 445.335, 334.562, 65.7233, 0.2288 ) }
    apic_5 { pt3dadd( 444.417, 333.903, 65.5413, 0.2542 ) }
    apic_5 { pt3dadd( 443.682, 333.038, 65.7558, 0.2796 ) }
    apic_5 { pt3dadd( 443.008, 332.134, 65.9792, 0.305 ) }
    apic_5 { pt3dadd( 442.26, 331.277, 65.9117, 0.2796 ) }
    apic_5 { pt3dadd( 441.401, 330.544, 65.9658, 0.2542 ) }
    apic_5 { pt3dadd( 440.497, 329.855, 65.8, 0.2288 ) }
    apic_5 { pt3dadd( 439.832, 328.954, 65.9204, 0.2542 ) }
    apic_5 { pt3dadd( 439.433, 327.889, 66.0181, 0.2796 ) }
    apic_5 { pt3dadd( 438.97, 326.866, 66.1886, 0.356 ) }
    apic_5 { pt3dadd( 438.294, 325.96, 66.5406, 0.4068 ) }
    apic_5 { pt3dadd( 437.618, 325.055, 66.9225, 0.4576 ) }
    apic_5 { pt3dadd( 436.894, 324.198, 67.3459, 0.4322 ) }
    apic_5 { pt3dadd( 436.033, 323.451, 67.5399, 0.4068 ) }
    apic_5 { pt3dadd( 435.224, 322.654, 67.7869, 0.4068 ) }
    apic_5 { pt3dadd( 434.517, 321.792, 67.4167, 0.4576 ) }
    apic_5 { pt3dadd( 433.892, 320.85, 67.195, 0.5338 ) }
    apic_5 { pt3dadd( 433.251, 319.904, 67.2557, 0.6102 ) }
    apic_5 { pt3dadd( 432.665, 318.937, 67.6326, 0.6356 ) }
    apic_5 { pt3dadd( 432.045, 318.04, 68.4614, 0.5848 ) }
    apic_5 { pt3dadd( 431.303, 317.187, 68.3407, 0.4576 ) }
    apic_5 { pt3dadd( 430.901, 316.187, 69.2552, 0.356 ) }
    apic_5 { pt3dadd( 430.281, 315.261, 69.6209, 0.305 ) }
    apic_5 { pt3dadd( 429.446, 314.544, 70.3195, 0.356 ) }
    apic_5 { pt3dadd( 428.704, 313.68, 70.5603, 0.4322 ) }
    apic_5 { pt3dadd( 428.135, 312.723, 70.7507, 0.5084 ) }
    apic_5 { pt3dadd( 427.81, 311.643, 70.9106, 0.5084 ) }
    apic_5 { pt3dadd( 427.562, 310.549, 70.4256, 0.483 ) }
    apic_5 { pt3dadd( 427.005, 309.589, 70.5947, 0.483 ) }
    apic_5 { pt3dadd( 426.195, 308.798, 70.826, 0.5338 ) }
    apic_5 { pt3dadd( 425.459, 307.97, 71.0461, 0.5592 ) }
    apic_5 { pt3dadd( 424.763, 307.115, 71.3076, 0.5592 ) }
    apic_5 { pt3dadd( 424.161, 306.196, 72.0801, 0.5084 ) }
    apic_5 { pt3dadd( 423.778, 305.144, 71.9006, 0.5084 ) }
    apic_5 { pt3dadd( 423.465, 304.053, 72.228, 0.5592 ) }
    apic_5 { pt3dadd( 422.69, 303.357, 72.9593, 0.661 ) }
    apic_5 { pt3dadd( 421.788, 302.738, 72.6292, 0.7118 ) }
    apic_5 { pt3dadd( 421.19, 301.775, 72.7992, 0.661 ) }
    apic_5 { pt3dadd( 420.663, 300.784, 73.3001, 0.5848 ) }
    apic_5 { pt3dadd( 420.384, 299.679, 73.2794, 0.5592 ) }
    apic_5 { pt3dadd( 419.562, 298.894, 72.9492, 0.6102 ) }
    apic_5 { pt3dadd( 418.726, 298.142, 73.0615, 0.661 ) }
    apic_5 { pt3dadd( 417.952, 297.355, 73.7008, 0.6864 ) }
    apic_5 { pt3dadd( 417.393, 296.431, 74.1255, 0.7118 ) }
    apic_5 { pt3dadd( 417.243, 295.318, 74.2325, 0.7626 ) }
    apic_5 { pt3dadd( 416.781, 294.325, 74.723, 0.8136 ) }
    apic_5 { pt3dadd( 415.971, 293.61, 75.5516, 0.788 ) }
    apic_5 { pt3dadd( 415.13, 292.919, 75.6554, 0.7118 ) }
    apic_5 { pt3dadd( 414.19, 292.377, 76.4938, 0.6356 ) }
    apic_5 { pt3dadd( 413.23, 291.786, 76.4803, 0.5848 ) }
    apic_5 { pt3dadd( 412.673, 290.878, 76.7225, 0.5592 ) }
    apic_5 { pt3dadd( 412.118, 289.905, 77.068, 0.5084 ) }
    apic_5 { pt3dadd( 411.375, 289.128, 77.9534, 0.5084 ) }
    apic_5 { pt3dadd( 410.758, 288.186, 78.0438, 0.483 ) }
    apic_5 { pt3dadd( 410.497, 287.08, 77.9649, 0.5084 ) }
    apic_5 { pt3dadd( 409.868, 286.148, 78.2634, 0.5338 ) }
    apic_5 { pt3dadd( 409.053, 285.356, 78.5873, 0.5848 ) }
    apic_5 { pt3dadd( 408.227, 284.571, 78.8295, 0.5848 ) }
    apic_5 { pt3dadd( 407.296, 283.91, 78.6873, 0.5084 ) }
    apic_5 { pt3dadd( 406.403, 283.275, 78.7184, 0.4576 ) }
    apic_5 { pt3dadd( 405.725, 282.511, 79.6505, 0.4068 ) }
    apic_5 { pt3dadd( 405.035, 281.617, 79.5889, 0.4322 ) }
    apic_5 { pt3dadd( 404.383, 280.699, 79.7759, 0.4068 ) }
    apic_5 { pt3dadd( 403.667, 279.822, 79.7191, 0.4576 ) }
    apic_5 { pt3dadd( 402.964, 278.945, 80.0394, 0.4576 ) }
    apic_5 { pt3dadd( 402.423, 277.947, 80.1794, 0.483 ) }
    apic_5 { pt3dadd( 401.922, 276.92, 80.1727, 0.4322 ) }
    apic_5 { pt3dadd( 401.336, 276.062, 81.1479, 0.4322 ) }
    apic_5 { pt3dadd( 400.474, 275.346, 81.6301, 0.4322 ) }
    apic_5 { pt3dadd( 399.878, 274.424, 82.3718, 0.4322 ) }
    apic_5 { pt3dadd( 399.408, 273.39, 82.6938, 0.4068 ) }
    apic_5 { pt3dadd( 398.756, 272.452, 82.8176, 0.3814 ) }
    apic_5 { pt3dadd( 398.17, 271.472, 82.7663, 0.3814 ) }
    apic_5 { pt3dadd( 397.681, 270.454, 82.5479, 0.3814 ) }
    apic_5 { pt3dadd( 397.177, 269.475, 83.1146, 0.3814 ) }
    apic_5 { pt3dadd( 396.484, 268.638, 83.925, 0.3814 ) }
    apic_5 { pt3dadd( 395.997, 267.638, 84.4791, 0.3814 ) }
    apic_5 { pt3dadd( 395.658, 266.565, 84.803, 0.3814 ) }
    apic_5 { pt3dadd( 395.131, 265.56, 84.7888, 0.3814 ) }
    apic_5 { pt3dadd( 394.418, 264.702, 85.262, 0.3814 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    apic_5 { pt3dadd( 393.745, 263.814, 85.2564, 0.3814 ) }
    apic_5 { pt3dadd( 393.101, 262.883, 85.3888, 0.4068 ) }
    apic_5 { pt3dadd( 392.293, 262.144, 86.0698, 0.4322 ) }
    apic_5 { pt3dadd( 391.23, 261.819, 86.4872, 0.4576 ) }
    apic_5 { pt3dadd( 390.297, 261.227, 87.0139, 0.4576 ) }
    apic_5 { pt3dadd( 389.897, 260.182, 87.2099, 0.4576 ) }
    apic_5 { pt3dadd( 389.608, 259.077, 87.3421, 0.4322 ) }
    apic_5 { pt3dadd( 389.216, 258.009, 87.626, 0.3814 ) }
    apic_5 { pt3dadd( 388.833, 256.978, 88.3436, 0.305 ) }
    apic_5 { pt3dadd( 388.221, 256.261, 89.8279, 0.2542 ) }
    apic_5 { pt3dadd( 387.949, 255.205, 90.1967, 0.2542 ) }
    apic_5 { pt3dadd( 387.794, 254.128, 89.768, 0.2796 ) }
    apic_5 { pt3dadd( 387.517, 253.076, 90.5005, 0.305 ) }
    apic_5 { pt3dadd( 387.072, 252.063, 91.1596, 0.2796 ) }
    apic_5 { pt3dadd( 386.828, 250.972, 91.6012, 0.2542 ) }
    apic_5 { pt3dadd( 386.667, 249.866, 92.1438, 0.2288 ) }
    apic_5 { pt3dadd( 386.006, 249.05, 92.2541, 0.2288 ) }
    apic_5 { pt3dadd( 385.174, 248.382, 92.9166, 0.2542 ) }
    apic_5 { pt3dadd( 384.678, 247.483, 94.0276, 0.2796 ) }
    apic_5 { pt3dadd( 384.398, 246.41, 94.619, 0.305 ) }
    apic_5 { pt3dadd( 384.043, 245.33, 94.8816, 0.2796 ) }
    apic_5 { pt3dadd( 383.288, 244.571, 95.6614, 0.2796 ) }
    apic_5 { pt3dadd( 382.281, 244.052, 95.8686, 0.305 ) }
    apic_5 { pt3dadd( 381.918, 243.028, 96.4057, 0.3814 ) }
    apic_5 { pt3dadd( 381.986, 241.945, 96.2973, 0.4068 ) }
    apic_5 { pt3dadd( 381.582, 240.968, 97.3056, 0.4068 ) }
    apic_5 { pt3dadd( 381.273, 239.887, 97.72, 0.3814 ) }
    apic_5 { pt3dadd( 380.865, 238.825, 97.8662, 0.3814 ) }
    apic_5 { pt3dadd( 380.536, 237.771, 97.946, 0.3814 ) }
    apic_5 { pt3dadd( 379.854, 236.952, 98.5412, 0.3814 ) }
    apic_5 { pt3dadd( 379.087, 236.175, 99.3787, 0.4068 ) }
    apic_5 { pt3dadd( 378.354, 235.328, 99.9356, 0.4576 ) }
    apic_5 { pt3dadd( 377.712, 234.39, 99.7629, 0.5084 ) }
    apic_5 { pt3dadd( 376.908, 233.63, 100.347, 0.5084 ) }
    apic_5 { pt3dadd( 376.022, 233.167, 101.604, 0.4322 ) }
    apic_5 { pt3dadd( 375.202, 232.533, 101.786, 0.3304 ) }
    apic_5 { pt3dadd( 375.061, 231.406, 102.0, 0.2542 ) }
    apic_5 { pt3dadd( 374.747, 230.341, 102.5, 0.2542 ) }
    apic_5 { pt3dadd( 374.035, 229.508, 102.824, 0.2796 ) }
    apic_5 { pt3dadd( 373.056, 228.99, 103.49, 0.356 ) }
    apic_5 { pt3dadd( 372.131, 228.37, 104.034, 0.4068 ) }
    apic_5 { pt3dadd( 371.165, 227.762, 104.168, 0.4576 ) }
    apic_5 { pt3dadd( 370.213, 227.253, 104.887, 0.4068 ) }
    apic_5 { pt3dadd( 369.338, 226.63, 104.851, 0.356 ) }
    apic_5 { pt3dadd( 368.406, 225.992, 104.46, 0.305 ) }
    apic_5 { pt3dadd( 367.491, 225.311, 104.46, 0.3304 ) }
    apic_5 { pt3dadd( 366.816, 224.423, 105.055, 0.3304 ) }
    apic_5 { pt3dadd( 365.904, 223.825, 105.841, 0.356 ) }
    apic_5 { pt3dadd( 364.879, 223.403, 106.3, 0.3304 ) }
    apic_5 { pt3dadd( 363.832, 223.103, 106.718, 0.356 ) }
    apic_5 { pt3dadd( 363.003, 222.968, 108.096, 0.356 ) }
    apic_5 { pt3dadd( 362.204, 222.402, 108.889, 0.4322 ) }
    apic_5 { pt3dadd( 361.153, 222.0, 108.92, 0.483 ) }
    apic_5 { pt3dadd( 360.561, 221.04, 108.559, 0.5084 ) }
    apic_5 { pt3dadd( 359.855, 220.393, 110.079, 0.4322 ) }
    apic_5 { pt3dadd( 359.232, 219.6, 111.359, 0.3304 ) }
    apic_5 { pt3dadd( 358.339, 218.98, 111.877, 0.305 ) }
    apic_5 { pt3dadd( 357.507, 218.312, 111.498, 0.3304 ) }
    apic_5 { pt3dadd( 356.658, 217.716, 112.638, 0.4322 ) }
    apic_5 { pt3dadd( 355.592, 217.489, 113.352, 0.4322 ) }
    apic_5 { pt3dadd( 354.766, 216.762, 113.856, 0.4576 ) }
    apic_5 { pt3dadd( 354.083, 215.848, 113.9, 0.4576 ) }
    apic_5 { pt3dadd( 353.424, 214.916, 113.744, 0.5084 ) }
    apic_5 { pt3dadd( 352.965, 213.883, 114.046, 0.5084 ) }
    apic_5 { pt3dadd( 352.581, 212.838, 114.344, 0.4068 ) }
    apic_5 { pt3dadd( 352.295, 211.832, 114.663, 0.3304 ) }
    apic_5 { pt3dadd( 352.177, 210.724, 114.676, 0.3304 ) }
    apic_5 { pt3dadd( 351.781, 209.697, 115.338, 0.4576 ) }
    apic_5 { pt3dadd( 351.483, 208.646, 116.045, 0.5592 ) }
    apic_5 { pt3dadd( 351.094, 207.598, 116.476, 0.5848 ) }
    apic_5 { pt3dadd( 350.454, 206.653, 116.481, 0.5338 ) }
    apic_5 { pt3dadd( 349.797, 205.716, 116.457, 0.4576 ) }
    apic_5 { pt3dadd( 348.885, 205.038, 116.696, 0.3814 ) }
    apic_5 { pt3dadd( 348.186, 204.421, 115.691, 0.3814 ) }
    apic_5 { pt3dadd( 347.459, 203.743, 116.819, 0.4576 ) }
    apic_5 { pt3dadd( 346.458, 203.289, 116.655, 0.5848 ) }
    apic_5 { pt3dadd( 345.849, 202.681, 117.631, 0.6102 ) }
    apic_5 { pt3dadd( 345.13, 201.924, 117.124, 0.5848 ) }
    apic_5 { pt3dadd( 344.254, 201.264, 117.821, 0.5084 ) }
    apic_5 { pt3dadd( 343.523, 200.558, 116.783, 0.5084 ) }
    apic_5 { pt3dadd( 342.647, 199.988, 117.179, 0.483 ) }
    apic_5 { pt3dadd( 341.958, 199.578, 118.77, 0.5084 ) }
    apic_5 { pt3dadd( 341.314, 198.805, 119.386, 0.483 ) }
    apic_5 { pt3dadd( 340.395, 198.136, 119.27, 0.4576 ) }
    apic_5 { pt3dadd( 339.415, 197.664, 118.512, 0.4068 ) }
    apic_5 { pt3dadd( 338.684, 196.945, 119.196, 0.356 ) }
    apic_5 { pt3dadd( 338.036, 196.442, 117.65, 0.3304 ) }
    apic_5 { pt3dadd( 337.326, 195.55, 117.8, 0.2796 ) }
    apic_5 { pt3dadd( 336.477, 194.791, 118.063, 0.2796 ) }
    apic_5 { pt3dadd( 335.631, 194.053, 118.364, 0.3304 ) }
    apic_5 { pt3dadd( 334.89, 193.374, 119.681, 0.4322 ) }
    apic_5 { pt3dadd( 333.991, 192.838, 120.561, 0.5084 ) }
    apic_5 { pt3dadd( 333.01, 192.415, 119.86, 0.5084 ) }
    apic_5 { pt3dadd( 332.236, 191.82, 119.129, 0.483 ) }
    apic_5 { pt3dadd( 331.647, 191.095, 120.519, 0.4322 ) }
    apic_5 { pt3dadd( 330.99, 190.281, 121.556, 0.3814 ) }
    apic_5 { pt3dadd( 330.068, 189.616, 121.855, 0.305 ) }
    apic_5 { pt3dadd( 329.105, 189.037, 122.159, 0.305 ) }
    apic_5 { pt3dadd( 328.051, 188.75, 122.707, 0.356 ) }
    apic_5 { pt3dadd( 327.234, 188.056, 123.336, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    apic_5 { pt3dadd( 326.419, 187.296, 122.885, 0.4576 ) }
    apic_5 { pt3dadd( 325.656, 186.491, 122.925, 0.4068 ) }
    apic_5 { pt3dadd( 324.816, 185.799, 122.725, 0.3304 ) }
    apic_5 { pt3dadd( 324.122, 184.939, 122.572, 0.305 ) }
    apic_5 { pt3dadd( 323.452, 184.16, 123.637, 0.305 ) }
    apic_5 { pt3dadd( 322.585, 183.857, 125.157, 0.305 ) }
    apic_5 { pt3dadd( 322.148, 182.939, 125.677, 0.3304 ) }
    apic_5 { pt3dadd( 321.453, 182.09, 125.255, 0.356 ) }
    apic_5 { pt3dadd( 320.609, 181.485, 125.826, 0.3814 ) }
    apic_5 { pt3dadd( 320.24, 180.48, 125.959, 0.356 ) }
    apic_5 { pt3dadd( 319.634, 179.673, 126.198, 0.3304 ) }
    apic_5 { pt3dadd( 319.174, 178.808, 127.644, 0.305 ) }
    apic_5 { pt3dadd( 318.669, 177.966, 129.07, 0.3304 ) }
    apic_5 { pt3dadd( 318.114, 177.107, 130.317, 0.356 ) }
    apic_5 { pt3dadd( 317.202, 176.592, 130.598, 0.356 ) }
    apic_5 { pt3dadd( 316.454, 175.817, 130.498, 0.3304 ) }
    apic_5 { pt3dadd( 316.094, 174.745, 130.263, 0.356 ) }
    apic_5 { pt3dadd( 315.549, 173.881, 131.237, 0.4322 ) }
    apic_5 { pt3dadd( 314.918, 173.151, 132.725, 0.5338 ) }
    apic_5 { pt3dadd( 314.176, 172.301, 132.561, 0.5592 ) }
    apic_5 { pt3dadd( 313.367, 171.554, 133.316, 0.5592 ) }
    apic_5 { pt3dadd( 312.503, 170.967, 134.228, 0.5084 ) }
    apic_5 { pt3dadd( 311.786, 170.435, 135.575, 0.5338 ) }
    apic_5 { pt3dadd( 311.589, 169.503, 136.994, 0.5848 ) }
    apic_5 { pt3dadd( 311.415, 168.471, 136.247, 0.6864 ) }
    apic_5 { pt3dadd( 311.27, 167.406, 136.99, 0.661 ) }
    apic_5 { pt3dadd( 310.88, 166.563, 138.571, 0.5592 ) }
    apic_5 { pt3dadd( 309.975, 166.09, 139.818, 0.4068 ) }
    apic_5 { pt3dadd( 309.35, 165.273, 140.711, 0.3304 ) }
    apic_5 { pt3dadd( 308.928, 164.251, 140.582, 0.305 ) }
    apic_5 { pt3dadd( 308.206, 163.48, 141.383, 0.2796 ) }
    apic_5 { pt3dadd( 307.243, 162.898, 141.509, 0.2542 ) }
    apic_5 { pt3dadd( 306.534, 162.033, 141.614, 0.2796 ) }
    apic_5 { pt3dadd( 305.924, 161.184, 142.569, 0.3304 ) }
    apic_5 { pt3dadd( 305.21, 160.658, 144.29, 0.3814 ) }
    apic_5 { pt3dadd( 304.757, 159.778, 145.388, 0.356 ) }
    apic_5 { pt3dadd( 304.049, 159.384, 147.28, 0.356 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 37/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 505.438, 447.342, 78.9438, 0.5084 ) }
    dend_26 { pt3dadd( 505.659, 448.777, 79.8949, 0.2796 ) }
    dend_26 { pt3dadd( 505.828, 449.869, 80.6187, 0.2542 ) }
    dend_26 { pt3dadd( 505.815, 450.921, 81.2773, 0.2288 ) }
    dend_26 { pt3dadd( 505.14, 451.83, 81.6973, 0.2288 ) }
    dend_26 { pt3dadd( 504.465, 452.737, 82.117, 0.2288 ) }
    dend_26 { pt3dadd( 503.829, 453.668, 82.4807, 0.2288 ) }
    dend_26 { pt3dadd( 503.419, 454.737, 82.5348, 0.2288 ) }
    dend_26 { pt3dadd( 503.075, 455.814, 82.5754, 0.2288 ) }
    dend_26 { pt3dadd( 503.143, 456.956, 82.5322, 0.2542 ) }
    dend_26 { pt3dadd( 503.21, 458.098, 82.4888, 0.2796 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 48/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 505.438, 447.342, 78.9438, 0.5084 ) }
    dend_25 { pt3dadd( 505.888, 448.057, 79.1851, 0.305 ) }
    dend_25 { pt3dadd( 506.736, 448.459, 80.5608, 0.2796 ) }
    dend_25 { pt3dadd( 507.633, 448.749, 82.1503, 0.2542 ) }
    dend_25 { pt3dadd( 508.529, 449.037, 83.7399, 0.2288 ) }
    dend_25 { pt3dadd( 509.375, 449.711, 84.4743, 0.2288 ) }
    dend_25 { pt3dadd( 510.214, 450.452, 85.0587, 0.2288 ) }
    dend_25 { pt3dadd( 511.052, 451.193, 85.6433, 0.2288 ) }
    dend_25 { pt3dadd( 511.885, 451.866, 86.34, 0.2288 ) }
    dend_25 { pt3dadd( 512.661, 451.739, 88.3761, 0.2288 ) }
    dend_25 { pt3dadd( 513.435, 451.612, 90.4126, 0.2288 ) }
    dend_25 { pt3dadd( 514.21, 451.485, 92.4487, 0.2288 ) }
    dend_25 { pt3dadd( 515.328, 451.358, 92.5403, 0.2542 ) }
    dend_25 { pt3dadd( 516.466, 451.233, 92.5274, 0.3304 ) }
    // Section: apic_9, id: apic_9, parent: apic_5 (entry count 62/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 304.049, 159.384, 147.28, 0.356 ) }
    apic_9 { pt3dadd( 304.058, 158.816, 146.851, 0.305 ) }
    apic_9 { pt3dadd( 303.867, 157.77, 145.941, 0.356 ) }
    apic_9 { pt3dadd( 303.546, 157.234, 147.498, 0.356 ) }
    apic_9 { pt3dadd( 303.107, 156.194, 147.596, 0.305 ) }
    apic_9 { pt3dadd( 302.501, 155.431, 148.368, 0.2542 ) }
    apic_9 { pt3dadd( 301.768, 154.755, 149.514, 0.2288 ) }
    apic_9 { pt3dadd( 300.993, 154.008, 149.287, 0.2288 ) }
    apic_9 { pt3dadd( 300.872, 152.93, 148.988, 0.2288 ) }
    apic_9 { pt3dadd( 300.757, 151.887, 147.942, 0.2288 ) }
    apic_9 { pt3dadd( 299.668, 151.707, 148.682, 0.2288 ) }
    apic_9 { pt3dadd( 298.618, 151.542, 149.528, 0.2288 ) }
    apic_9 { pt3dadd( 297.846, 151.026, 151.124, 0.2796 ) }
    apic_9 { pt3dadd( 296.986, 150.373, 151.559, 0.356 ) }
    apic_9 { pt3dadd( 296.112, 149.645, 151.387, 0.4322 ) }
    apic_9 { pt3dadd( 295.074, 149.348, 151.335, 0.4068 ) }
    apic_9 { pt3dadd( 294.454, 148.566, 152.01, 0.3304 ) }
    apic_9 { pt3dadd( 293.471, 148.047, 152.408, 0.2796 ) }
    apic_9 { pt3dadd( 292.54, 147.467, 151.674, 0.2796 ) }
    apic_9 { pt3dadd( 291.482, 147.049, 151.896, 0.305 ) }
    apic_9 { pt3dadd( 290.525, 146.506, 152.385, 0.2796 ) }
    apic_9 { pt3dadd( 289.594, 146.113, 152.276, 0.2542 ) }
    apic_9 { pt3dadd( 288.73, 145.444, 152.229, 0.2542 ) }
    apic_9 { pt3dadd( 287.704, 144.999, 152.787, 0.2796 ) }
    apic_9 { pt3dadd( 286.881, 144.411, 153.941, 0.3304 ) }
    apic_9 { pt3dadd( 285.885, 143.915, 154.56, 0.3304 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 88/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 304.049, 159.384, 147.28, 0.356 ) }
    apic_6 { pt3dadd( 303.341, 158.778, 147.689, 0.3814 ) }
    apic_6 { pt3dadd( 302.279, 158.468, 148.092, 0.4322 ) }
    apic_6 { pt3dadd( 301.532, 158.016, 149.615, 0.4322 ) }
    apic_6 { pt3dadd( 300.652, 157.841, 151.222, 0.4322 ) }
    apic_6 { pt3dadd( 299.842, 158.198, 150.146, 0.4322 ) }
    apic_6 { pt3dadd( 298.769, 157.994, 150.968, 0.483 ) }
    apic_6 { pt3dadd( 297.733, 157.826, 152.065, 0.4576 ) }
    apic_6 { pt3dadd( 296.852, 157.619, 153.619, 0.4322 ) }
    apic_6 { pt3dadd( 296.091, 157.414, 154.736, 0.3814 ) }
    apic_6 { pt3dadd( 295.055, 157.14, 154.813, 0.4322 ) }
    apic_6 { pt3dadd( 294.025, 156.94, 155.925, 0.483 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    apic_6 { pt3dadd( 292.935, 156.815, 156.467, 0.5592 ) }
    apic_6 { pt3dadd( 291.868, 156.467, 156.52, 0.5592 ) }
    apic_6 { pt3dadd( 290.773, 156.234, 156.774, 0.5338 ) }
    apic_6 { pt3dadd( 289.642, 156.081, 156.871, 0.4322 ) }
    apic_6 { pt3dadd( 288.788, 155.828, 158.373, 0.3814 ) }
    apic_6 { pt3dadd( 287.711, 155.516, 158.748, 0.3814 ) }
    apic_6 { pt3dadd( 286.585, 155.406, 158.387, 0.4576 ) }
    // Section: apic_8, id: apic_8, parent: apic_6 (entry count 7/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 286.585, 155.406, 158.387, 0.4576 ) }
    apic_8 { pt3dadd( 285.332, 155.187, 160.408, 0.2796 ) }
    apic_8 { pt3dadd( 285.335, 154.294, 159.879, 0.2796 ) }
    apic_8 { pt3dadd( 284.525, 153.882, 158.786, 0.2796 ) }
    apic_8 { pt3dadd( 283.68, 153.337, 159.767, 0.305 ) }
    apic_8 { pt3dadd( 282.833, 152.937, 158.609, 0.2796 ) }
    apic_8 { pt3dadd( 281.975, 153.016, 157.011, 0.2542 ) }
    apic_8 { pt3dadd( 280.971, 152.748, 157.573, 0.2796 ) }
    apic_8 { pt3dadd( 279.937, 153.182, 157.92, 0.356 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 16/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 286.585, 155.406, 158.387, 0.4576 ) }
    apic_7 { pt3dadd( 285.829, 155.793, 160.659, 0.4068 ) }
    apic_7 { pt3dadd( 285.03, 155.988, 162.525, 0.3304 ) }
    apic_7 { pt3dadd( 284.003, 156.114, 162.474, 0.2542 ) }
    apic_7 { pt3dadd( 283.071, 156.0, 163.374, 0.2288 ) }
    apic_7 { pt3dadd( 282.272, 155.355, 164.074, 0.2288 ) }
    apic_7 { pt3dadd( 281.212, 155.462, 164.883, 0.2288 ) }
    apic_7 { pt3dadd( 280.169, 155.676, 165.551, 0.2542 ) }
    apic_7 { pt3dadd( 279.176, 155.936, 166.641, 0.305 ) }
    apic_7 { pt3dadd( 278.146, 156.367, 166.648, 0.356 ) }
    apic_7 { pt3dadd( 277.368, 156.546, 166.233, 0.356 ) }
    apic_7 { pt3dadd( 276.467, 156.654, 167.828, 0.305 ) }
    apic_7 { pt3dadd( 275.486, 156.957, 168.96, 0.2542 ) }
    apic_7 { pt3dadd( 274.56, 157.483, 169.972, 0.2288 ) }
    apic_7 { pt3dadd( 273.628, 158.107, 170.012, 0.2542 ) }
    apic_7 { pt3dadd( 272.958, 159.016, 169.96, 0.305 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_542, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_542 = new SectionList()
    soma_0 ModelViewParmSubset_542.append()
    axon_0 ModelViewParmSubset_542.append()
    axon_1 ModelViewParmSubset_542.append()

    // Group: {name=ModelViewParmSubset_543, groups=[], sections=[dend_17, dend_12, apic_0, dend_5, dend_0, dend_32, dend_29, dend_18, dend_16, dend_13, apic_18, apic_1, dend_11, dend_6, dend_2, dend_1, dend_36, dend_33, dend_31, dend_30, dend_20, dend_19, dend_15, dend_14, apic_20, apic_19, apic_17, apic_2, dend_10, dend_7, dend_4, dend_3, dend_38, dend_37, dend_35, dend_34, dend_28, dend_21, apic_14, apic_3, dend_9, dend_8, dend_27, dend_22, apic_16, apic_15, apic_11, apic_4, dend_24, dend_23, apic_13, apic_12, apic_10, apic_5, dend_26, dend_25, apic_9, apic_6, apic_8, apic_7]}
    ModelViewParmSubset_543 = new SectionList()
    dend_17 ModelViewParmSubset_543.append()
    dend_12 ModelViewParmSubset_543.append()
    apic_0 ModelViewParmSubset_543.append()
    dend_5 ModelViewParmSubset_543.append()
    dend_0 ModelViewParmSubset_543.append()
    dend_32 ModelViewParmSubset_543.append()
    dend_29 ModelViewParmSubset_543.append()
    dend_18 ModelViewParmSubset_543.append()
    dend_16 ModelViewParmSubset_543.append()
    dend_13 ModelViewParmSubset_543.append()
    apic_18 ModelViewParmSubset_543.append()
    apic_1 ModelViewParmSubset_543.append()
    dend_11 ModelViewParmSubset_543.append()
    dend_6 ModelViewParmSubset_543.append()
    dend_2 ModelViewParmSubset_543.append()
    dend_1 ModelViewParmSubset_543.append()
    dend_36 ModelViewParmSubset_543.append()
    dend_33 ModelViewParmSubset_543.append()
    dend_31 ModelViewParmSubset_543.append()
    dend_30 ModelViewParmSubset_543.append()
    dend_20 ModelViewParmSubset_543.append()
    dend_19 ModelViewParmSubset_543.append()
    dend_15 ModelViewParmSubset_543.append()
    dend_14 ModelViewParmSubset_543.append()
    apic_20 ModelViewParmSubset_543.append()
    apic_19 ModelViewParmSubset_543.append()
    apic_17 ModelViewParmSubset_543.append()
    apic_2 ModelViewParmSubset_543.append()
    dend_10 ModelViewParmSubset_543.append()
    dend_7 ModelViewParmSubset_543.append()
    dend_4 ModelViewParmSubset_543.append()
    dend_3 ModelViewParmSubset_543.append()
    dend_38 ModelViewParmSubset_543.append()
    dend_37 ModelViewParmSubset_543.append()
    dend_35 ModelViewParmSubset_543.append()
    dend_34 ModelViewParmSubset_543.append()
    dend_28 ModelViewParmSubset_543.append()
    dend_21 ModelViewParmSubset_543.append()
    apic_14 ModelViewParmSubset_543.append()
    apic_3 ModelViewParmSubset_543.append()
    dend_9 ModelViewParmSubset_543.append()
    dend_8 ModelViewParmSubset_543.append()
    dend_27 ModelViewParmSubset_543.append()
    dend_22 ModelViewParmSubset_543.append()
    apic_16 ModelViewParmSubset_543.append()
    apic_15 ModelViewParmSubset_543.append()
    apic_11 ModelViewParmSubset_543.append()
    apic_4 ModelViewParmSubset_543.append()
    dend_24 ModelViewParmSubset_543.append()
    dend_23 ModelViewParmSubset_543.append()
    apic_13 ModelViewParmSubset_543.append()
    apic_12 ModelViewParmSubset_543.append()
    apic_10 ModelViewParmSubset_543.append()
    apic_5 ModelViewParmSubset_543.append()
    dend_26 ModelViewParmSubset_543.append()
    dend_25 ModelViewParmSubset_543.append()
    apic_9 ModelViewParmSubset_543.append()
    apic_6 ModelViewParmSubset_543.append()
    apic_8 ModelViewParmSubset_543.append()
    apic_7 ModelViewParmSubset_543.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_18, apic_1, apic_20, apic_19, apic_17, apic_2, apic_14, apic_3, apic_16, apic_15, apic_11, apic_4, apic_13, apic_12, apic_10, apic_5, apic_9, apic_6, apic_8, apic_7]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_18 apic.append()
    apic_1 apic.append()
    apic_20 apic.append()
    apic_19 apic.append()
    apic_17 apic.append()
    apic_2 apic.append()
    apic_14 apic.append()
    apic_3 apic.append()
    apic_16 apic.append()
    apic_15 apic.append()
    apic_11 apic.append()
    apic_4 apic.append()
    apic_13 apic.append()
    apic_12 apic.append()
    apic_10 apic.append()
    apic_5 apic.append()
    apic_9 apic.append()
    apic_6 apic.append()
    apic_8 apic.append()
    apic_7 apic.append()

    // Group: {name=dend, groups=[], sections=[dend_17, dend_12, dend_5, dend_0, dend_32, dend_29, dend_18, dend_16, dend_13, dend_11, dend_6, dend_2, dend_1, dend_36, dend_33, dend_31, dend_30, dend_20, dend_19, dend_15, dend_14, dend_10, dend_7, dend_4, dend_3, dend_38, dend_37, dend_35, dend_34, dend_28, dend_21, dend_9, dend_8, dend_27, dend_22, dend_24, dend_23, dend_26, dend_25]}
    dend = new SectionList()
    dend_17 dend.append()
    dend_12 dend.append()
    dend_5 dend.append()
    dend_0 dend.append()
    dend_32 dend.append()
    dend_29 dend.append()
    dend_18 dend.append()
    dend_16 dend.append()
    dend_13 dend.append()
    dend_11 dend.append()
    dend_6 dend.append()
    dend_2 dend.append()
    dend_1 dend.append()
    dend_36 dend.append()
    dend_33 dend.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_31 dend.append()
    dend_30 dend.append()
    dend_20 dend.append()
    dend_19 dend.append()
    dend_15 dend.append()
    dend_14 dend.append()
    dend_10 dend.append()
    dend_7 dend.append()
    dend_4 dend.append()
    dend_3 dend.append()
    dend_38 dend.append()
    dend_37 dend.append()
    dend_35 dend.append()
    dend_34 dend.append()
    dend_28 dend.append()
    dend_21 dend.append()
    dend_9 dend.append()
    dend_8 dend.append()
    dend_27 dend.append()
    dend_22 dend.append()
    dend_24 dend.append()
    dend_23 dend.append()
    dend_26 dend.append()
    dend_25 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_25761, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_25761 = new SectionList()
    soma_0 OneSecGrp_SectionRef_25761.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_1, apic_1, apic_1, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_2, apic_2, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    apic_12 all.append()
    apic_12 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec apic cm = 2.16  // units: uF/cm2
    forsec dend cm = 2.16  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 10.0  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 2.9866305E-7  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 4.0927256E-4  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.7605705  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 4.3831582E-4  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 0.016244927  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.004099888  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 9.911199E-5  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.1363494  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 1.2968696E-4  // units: S cm-2
        e_pas_nml2 = -86.9854  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 1.8134281E-4  // units: S cm-2
        e_pas_nml2 = -86.9854  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 1.664723E-4  // units: S cm-2
        e_pas_nml2 = -86.9854  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 1.8465303E-6  // units: S cm-2
        e_pas_nml2 = -86.9854  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 3.198088E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.006555329  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        insert CaDynamics
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_16 nseg = 7
    apic_18 nseg = 7
    dend_2 nseg = 3
    dend_1 nseg = 5
    dend_31 nseg = 7
    dend_30 nseg = 5
    dend_19 nseg = 5
    dend_15 nseg = 3
    dend_14 nseg = 7
    apic_17 nseg = 5
    dend_3 nseg = 3
    dend_38 nseg = 3
    dend_37 nseg = 3
    dend_35 nseg = 3
    dend_34 nseg = 5
    dend_9 nseg = 3
    dend_8 nseg = 3
    apic_16 nseg = 7
    apic_15 nseg = 3
    dend_24 nseg = 3
    dend_23 nseg = 5
    apic_12 nseg = 7
    apic_10 nseg = 5
    apic_5 nseg = 15
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_472434498


