// Cell: cNAC187_L1_NGCDA_9c428321ae_0_0
/*
{
  "id" : "cNAC187_L1_NGCDA_9c428321ae_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-8.73063, -3.9926, 0.0, 3.06357", "-7.8929, -3.63642, 0.0, 5.39559", "-7.05516, -3.28024, 0.0, 7.97582", "-6.21742, -2.92405, 0.0, 9.58698", "-5.37969, -2.56787, 0.0, 10.8603", "-4.54195, -2.21168, 0.0, 11.8172", "-3.70421, -1.8555, 0.0, 12.3633", "-2.86647, -1.49931, 0.0, 12.5607", "-2.02874, -1.14313, 0.0, 12.6609", "-1.191, -0.786946, 0.0, 12.7512", "-0.353263, -0.430761, 0.0, 12.7296", "0.484474, -0.0745769, 0.0, 12.6814", "1.32221, 0.281607, 0.0, 12.6199", "2.15995, 0.637792, 0.0, 12.5092", "2.99769, 0.993976, 0.0, 12.1896", "3.83542, 1.35016, 0.0, 11.7338", "4.67316, 1.70634, 0.0, 11.0293", "5.5109, 2.06253, 0.0, 9.74086", "6.34863, 2.41871, 0.0, 7.8352", "7.18637, 2.7749, 0.0, 5.6442", "8.02411, 3.13108, 0.0, 3.11186" ]
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "6.05208, 4.40836, -6.46, 1.91", "6.5408, 4.5104, -6.88421, 1.91", "7.56324, 4.72386, -7.7717, 1.91", "8.31743, 4.88133, -8.42635, 1.91" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998268677268
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-3.95793, -7.32414, -8.27, 1.69", "-4.09983, -7.60399, -8.73128, 1.69", "-4.6556, -8.77207, -10.5575, 1.98", "-5.05081, -9.79488, -12.0621, 1.54", "-5.52317, -11.0174, -13.8603, 1.76", "-6.02345, -12.3121, -15.7648, 1.62", "-6.52392, -13.6074, -17.67, 2.13", "-6.81683, -14.4692, -18.9293, 2.28", "-7.16031, -15.7496, -20.6911, 2.57" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998268677268
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "3.9421, -4.48364, 1.94, 1.03", "4.01814, -5.2323, 1.56151, 1.03", "4.23173, -6.13808, 0.955487, 1.03", "4.58342, -6.94115, 0.259899, 1.25", "4.96483, -7.5458, -0.461908, 1.54", "5.33779, -8.13704, -1.16771, 1.4", "5.91886, -9.05822, -2.26736, 1.62", "6.69225, -10.1554, -3.71983, 1.4", "7.57814, -11.1689, -5.31078, 0.88", "8.83096, -12.2512, -7.36668, 1.4" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998268677268
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-9.20793, -2.46013, -4.31, 1.32", "-9.62088, -2.56374, -4.58228, 1.32", "-11.7527, -3.09853, -5.98787, 1.18", "-13.8227, -3.61783, -7.35272, 1.18", "-15.6097, -4.06611, -8.53095, 1.47", "-16.7825, -4.36034, -9.30426, 1.76", "-18.1979, -4.71541, -10.2375, 1.91" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998268677268
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.84212, 5.68136, 3.4, 1.25", "1.10685, 6.28111, 3.09032, 1.25", "-0.291256, 7.32066, 2.97239, 1.18", "-0.683718, 7.60393, 3.09302, 1.18", "-1.23148, 8.03023, 3.44644, 0.81", "-1.9741, 8.67414, 4.02791, 0.81", "-2.2258, 8.90959, 4.23464, 1.25", "-3.14026, 9.83103, 5.22173, 1.4", "-3.79677, 10.5678, 6.11027, 1.4", "-4.29867, 11.2203, 6.83712, 1.4", "-4.73156, 11.8401, 7.40061, 1.25", "-5.09034, 12.3859, 7.74567, 0.95", "-5.45298, 12.9542, 7.96518, 0.95", "-5.93987, 13.7318, 8.06016, 1.32", "-6.49964, 14.5767, 7.96949, 1.1", "-7.4267, 15.819, 7.47299, 0.44", "-7.99012, 16.4848, 6.9252, 1.1", "-8.25941, 16.7659, 6.56731, 1.1", "-8.44974, 16.944, 6.28358, 1.25", "-8.99377, 17.3938, 5.34199, 1.25", "-9.83568, 18.0348, 3.79021, 1.25", "-10.6719, 18.7098, 1.8708, 1.03", "-11.0299, 19.027, 0.829116, 1.03", "-11.2231, 19.2244, 0.0995054, 1.03", "-11.5735, 19.7264, -1.86281, 1.03", "-11.6411, 19.9355, -2.67868, 0.81", "-11.6242, 20.5356, -4.99512, 0.81", "-11.5433, 20.8007, -6.11909, 1.03", "-11.4641, 20.9484, -6.75556, 1.03", "-11.3272, 21.126, -7.58198, 1.03", "-11.1707, 21.3154, -8.41744, 1.03", "-11.019, 21.535, -9.48738, 1.03", "-11.0277, 21.6414, -9.88785, 1.03" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998268677268
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "8.02411, 3.13108, 0.0, 0.505148", "21.8282, 9.00022, 0.0, 0.505148", "35.6323, 14.8694, 0.0, 0.505148" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "8.31743, 4.88133, -8.42635, 1.25", "9.09326, 4.56192, -10.3325, 1.25", "10.04, 4.17213, -12.6586, 1.25", "10.8957, 3.81982, -14.761, 1.47", "11.623, 3.52043, -16.5477, 1.62" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "8.31743, 4.88133, -8.42635, 0.95", "8.36271, 6.86646, -10.6491, 0.95", "8.29595, 8.26118, -12.0535, 0.95", "8.17066, 10.0349, -13.7033, 0.95", "8.16974, 10.7453, -14.3416, 0.95", "8.2613, 12.1445, -15.4926, 0.95", "8.44196, 13.6768, -16.5999, 0.95", "8.66463, 14.7703, -17.0547, 0.95", "8.88681, 15.2927, -17.0344, 1.1", "10.1447, 16.9379, -15.9827, 0.66", "11.0531, 17.8699, -15.1056, 0.66", "12.2661, 18.873, -13.7972, 1.03", "13.769, 19.9318, -12.0573, 1.03", "14.9547, 20.6607, -10.6027, 1.03", "15.4423, 20.9502, -9.89871, 1.03" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-7.16031, -15.7496, -20.6911, 1.18", "-6.96002, -16.1386, -22.015, 1.18", "-6.54285, -16.9416, -24.5249, 1.18", "-6.02138, -17.8736, -27.416, 1.32", "-5.53091, -18.6868, -29.9665, 1.62", "-5.2444, -19.1068, -31.3614, 1.62", "-4.72434, -19.74, -33.5919, 1.69", "-4.61939, -19.8604, -34.0008, 1.69", "-4.46957, -19.9961, -34.4755, 1.69", "-4.36904, -20.0679, -34.7436, 1.69", "-3.71192, -20.4985, -36.3705, 1.69", "-3.06614, -20.8607, -37.925, 0.37", "-2.6225, -21.0798, -39.0065, 0.37", "-2.32536, -21.2569, -39.7905, 0.37", "-1.99716, -21.5168, -40.7122, 1.03", "-1.74104, -21.7824, -41.4809, 1.32" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-7.16031, -15.7496, -20.6911, 1.32", "-7.05761, -16.9725, -20.318, 1.32", "-6.95438, -18.0254, -19.8339, 1.1", "-6.86248, -18.9819, -19.3513, 0.59", "-6.8003, -19.5863, -19.0313, 0.59", "-6.67847, -20.594, -18.4927, 0.59", "-6.56914, -21.3419, -18.0971, 1.69", "-6.2349, -22.925, -17.1628, 1.62", "-6.09076, -23.4012, -16.8681, 1.62", "-5.62515, -24.4485, -16.2442, 0.29", "-5.45771, -24.7138, -16.092, 0.29", "-5.16741, -25.0443, -15.9278, 0.29", "-4.55246, -25.5654, -15.6864, 1.25", "-4.04286, -25.9283, -15.5648, 1.25", "-3.05542, -26.5894, -15.3276, 0.88", "-1.97691, -27.3066, -14.9817, 1.4", "-1.09622, -27.9452, -14.616, 2.28", "-0.411005, -28.4732, -14.2903, 2.28", "0.406171, -29.1776, -13.8712, 1.18", "1.35501, -30.1039, -13.3221, 0.59", "2.41198, -31.3214, -12.6131, 1.03", "2.85357, -31.974, -12.2884, 1.25", "3.09305, -32.4631, -12.062, 1.25", "3.38656, -33.5917, -11.5801, 0.29", "3.38777, -34.1552, -11.3834, 0.51", "3.22559, -34.8399, -11.2326, 0.51", "2.91454, -35.5549, -11.1425, 0.15", "2.6933, -35.9671, -11.0944, 0.15", "2.13063, -36.9382, -10.9499, 1.62", "1.70964, -37.6794, -10.8163, 1.62", "1.3867, -38.4001, -10.6563, 1.32", "0.935702, -39.9234, -10.2229, 0.29", "0.85656, -40.3783, -10.0709, 0.29", "0.803471, -41.1343, -9.79245, 0.59", "0.824342, -41.8266, -9.52286, 1.32", "0.923461, -42.98, -9.01673, 0.07", "1.02578, -43.8349, -8.63388, 0.73", "1.10199, -44.4102, -8.38124, 0.29", "1.12068, -44.81, -8.22507, 1.32", "1.00233, -46.4981, -7.69965, 0.22", "0.898629, -47.0937, -7.55124, 0.22", "0.675846, -47.9408, -7.39381, 1.1", "0.557859, -48.3586, -7.32642, 1.84", "0.330423, -49.2435, -7.16435, 1.47", "0.0793499, -50.3404, -6.95417, 0.07", "0.00757296, -50.7304, -6.88211, 0.66", "-0.0182248, -51.0167, -6.83182, 0.66", "0.00736026, -51.9097, -6.62816, 0.07", "0.100603, -52.4909, -6.48048, 0.07", "0.190618, -52.8642, -6.39114, 0.73", "0.255418, -53.1424, -6.33014, 0.73", "0.465429, -54.2231, -6.0969, 0.07", "0.569115, -54.8946, -5.96749, 0.81", "0.618701, -55.3762, -5.867, 1.32", "0.696249, -56.8289, -5.54643, 0.07", "0.684256, -57.6987, -5.31318, 0.07", "0.643184, -58.1368, -5.1868, 1.1", "0.505822, -58.8088, -4.98558, 1.03", "0.17827, -59.907, -4.67791, 0.15", "-0.0779739, -60.6249, -4.47848, 0.73", "-0.438691, -61.5763, -4.21804, 0.07", "-0.712331, -62.297, -4.04784, 1.18", "-1.04778, -63.1701, -3.8832, 0.81", "-1.34631, -63.957, -3.76927, 0.15", "-1.66974, -64.8671, -3.69327, 0.15", "-1.83213, -65.4193, -3.65853, 0.73", "-1.94842, -65.9775, -3.6, 1.62", "-2.04397, -66.696, -3.48164, 0.95", "-2.12746, -67.6699, -3.28589, 0.07", "-2.15346, -68.1734, -3.14778, 0.66", "-2.16029, -68.6917, -2.94518, 0.81", "-2.13602, -70.1133, -2.28335, 0.15", "-2.08653, -70.8221, -1.91175, 1.1", "-2.05235, -71.0974, -1.75841, 1.62", "-1.90719, -71.9465, -1.29396, 1.62", "-1.59475, -73.515, -0.525396, 0.15", "-1.51623, -73.8889, -0.36606, 0.44", "-1.43534, -74.3179, -0.23655, 0.44", "-1.33562, -74.9461, -0.0879524, 0.07", "-1.2329, -75.8789, 0.0633824, 0.22", "-1.17223, -77.1019, 0.181212, 0.22", "-1.16951, -77.3251, 0.194029, 0.81", "-1.20029, -78.7274, 0.289618, 0.07", "-1.23137, -79.3427, 0.335223, 0.07", "-1.28619, -80.0644, 0.390265, 0.81", "-1.39648, -81.1827, 0.470738, 0.29", "-1.48897, -81.9413, 0.569531, 0.29", "-1.5911, -82.6988, 0.688687, 0.37", "-1.66605, -83.227, 0.784661, 0.37", "-1.75623, -83.8247, 0.849352, 0.37", "-1.84395, -84.4371, 0.863431, 0.88", "-2.16426, -86.4217, 0.83521, 0.15", "-2.28151, -87.0644, 0.820593, 0.15", "-2.34462, -87.4185, 0.803964, 0.88", "-2.66134, -89.0819, 0.649031, 0.15", "-2.76149, -89.6516, 0.519551, 0.44" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "8.83096, -12.2512, -7.36668, 1.32", "9.38048, -13.4474, -8.31376, 1.32", "10.0767, -14.8083, -9.22092, 0.95", "10.844, -16.2711, -10.039, 0.88", "11.3982, -17.299, -10.5085, 0.95", "11.9456, -18.3142, -10.9722, 0.66", "12.606, -19.539, -11.5316, 0.66", "13.471, -21.0556, -12.1249, 1.25", "13.937, -21.7913, -12.2927, 1.76", "14.726, -22.8988, -12.3221, 2.06" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "8.83096, -12.2512, -7.36668, 0.81", "9.55555, -12.2807, -8.21915, 0.81", "9.97377, -12.4002, -8.84814, 0.29", "10.5204, -12.6678, -9.85869, 0.29", "11.1009, -13.0198, -11.0837, 0.51", "11.5353, -13.3246, -12.1939, 0.51", "11.9946, -13.6469, -13.5716, 0.51", "12.3909, -14.0005, -15.2204, 0.37", "12.5756, -14.2335, -16.2545, 0.37", "12.6184, -14.3239, -16.6304, 0.37", "12.6718, -14.6034, -17.7781, 0.37", "12.6735, -14.8735, -19.1009, 0.37", "12.6684, -14.9587, -20.4579, 0.37" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-18.1979, -4.71541, -10.2375, 0.95", "-18.2473, -5.6664, -12.6657, 0.95", "-18.1913, -6.69761, -15.4394, 1.25", "-18.1052, -8.28391, -19.7062, 1.4", "-18.0455, -9.38578, -22.67, 1.4", "-17.9834, -10.5288, -25.7444, 1.25", "-17.9362, -11.3987, -28.0841, 1.91", "-17.6341, -12.6396, -31.576, 1.91" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-18.1979, -4.71541, -10.2375, 1.25", "-19.0883, -3.78754, -8.32125, 1.25", "-19.7156, -3.08238, -6.84567, 1.03", "-20.4099, -2.29858, -5.18637, 1.18", "-21.1658, -1.4753, -3.39715, 0.73", "-22.0073, -0.626197, -1.4589, 0.73", "-22.7338, 0.0590741, 0.216108, 0.88", "-23.2864, 0.547855, 1.56771, 0.88", "-23.7054, 0.937526, 2.76316, 0.88", "-24.0472, 1.23223, 3.80563, 0.88", "-24.2329, 1.41941, 4.5388, 0.88", "-24.4004, 1.64158, 5.30565, 0.88", "-24.4654, 1.91734, 6.05213, 0.88", "-24.4581, 2.06411, 6.38178, 0.88", "-24.3434, 3.08798, 8.43703, 0.88", "-24.3321, 3.67721, 9.5295, 0.88", "-24.3836, 4.23165, 10.4698, 0.95", "-24.702, 5.61286, 12.5971, 0.95", "-24.9684, 6.51313, 13.9183, 0.95", "-25.1227, 6.99491, 14.6678, 0.95", "-25.4269, 7.96595, 16.2569, 0.88", "-25.568, 8.40156, 17.0281, 0.88", "-25.7418, 8.97563, 18.0584, 1.1", "-26.0374, 10.1168, 20.0741, 0.73", "-26.2724, 11.4872, 22.4452, 1.4", "-26.3317, 12.3573, 23.982, 1.4", "-26.3114, 13.7456, 26.4871, 0.66", "-26.2945, 14.2691, 27.4648, 0.51", "-26.2948, 15.152, 29.1513, 0.51", "-26.3444, 15.8897, 30.522, 0.88", "-26.4476, 16.9948, 32.4219, 0.88", "-26.5619, 17.8349, 33.8686, 1.1", "-26.6645, 18.3099, 34.738, 1.1", "-27.0579, 19.3131, 36.657, 0.88", "-27.3749, 19.8739, 37.7111, 0.59", "-27.5933, 20.1757, 38.2772, 0.88", "-28.0669, 20.7546, 39.317, 0.88", "-29.2317, 22.2384, 41.9008, 1.1", "-30.0479, 23.3661, 43.8182, 0.51", "-30.4123, 23.8774, 44.6785, 0.51", "-30.8578, 24.4767, 45.7199, 0.59", "-31.2742, 25.0233, 46.7235, 0.59", "-31.7825, 25.7702, 48.0884, 0.59", "-32.0882, 26.3537, 49.2452, 0.59", "-32.206, 26.6798, 49.9623, 0.59", "-32.3723, 27.248, 51.3682, 0.59", "-32.4427, 27.4818, 52.0503, 0.59", "-32.553, 27.6868, 52.8578, 0.59", "-32.8664, 27.8926, 54.3932, 0.22" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-11.0277, 21.6414, -9.88785, 0.73", "-10.0398, 22.088, -12.3049, 0.73", "-8.81141, 22.6673, -14.7629, 1.1", "-7.36157, 23.2982, -17.0488, 0.81", "-6.00109, 23.8245, -18.776, 0.81", "-4.67419, 24.2792, -20.2499, 0.81", "-3.81573, 24.5429, -21.0786, 0.81", "-3.00603, 24.7663, -21.6214, 0.81", "-1.73543, 25.0654, -22.1818, 0.51", "-0.676822, 25.27, -22.553, 0.51", "0.160401, 25.4199, -22.8876, 0.51", "1.13463, 25.5979, -23.1506, 0.51", "2.28677, 25.823, -23.4099, 0.51", "2.89182, 25.9547, -23.5419, 0.51", "4.03196, 26.2622, -23.77, 0.51", "4.61317, 26.4516, -23.8637, 0.51", "5.74103, 26.8706, -23.9742, 0.51", "7.65517, 27.6445, -24.1362, 0.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-11.0277, 21.6414, -9.88785, 0.73", "-11.2483, 22.242, -10.2252, 0.73", "-11.4519, 22.8973, -10.5668, 0.73", "-11.6276, 23.6054, -10.9138, 0.73", "-11.744, 24.2147, -11.2273, 0.59", "-11.8028, 24.6945, -11.4824, 0.59", "-11.8592, 25.1552, -11.7274, 0.59", "-11.8874, 25.5839, -11.9792, 0.51", "-11.8769, 25.8968, -12.1387, 0.37", "-11.8179, 26.3831, -12.3444, 0.37", "-11.7235, 26.718, -12.5273, 0.37" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "35.6323, 14.8694, 0.0, 0.15", "49.4364, 20.7385, 0.0, 0.15", "63.2405, 26.6077, 0.0, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "11.623, 3.52043, -16.5477, 0.88", "11.8404, 2.65378, -17.5743, 0.88", "12.4778, 1.08918, -19.4824, 0.88", "12.9437, 0.143433, -20.5665, 0.88", "13.4157, -0.62346, -21.4279, 0.59", "13.6843, -1.01362, -21.8539, 0.59", "14.2801, -1.81597, -22.6922, 0.59", "15.0057, -2.5891, -23.5041, 0.59", "15.6041, -3.13756, -24.0517, 1.1", "16.8846, -4.22381, -25.1123, 0.88", "17.7734, -5.00912, -25.8532, 0.88", "18.3492, -5.59773, -26.4018, 0.88", "19.4504, -6.91006, -27.5929, 1.18", "19.538, -7.02159, -27.7012, 1.18", "19.6949, -7.21811, -27.922, 1.18", "20.395, -8.13702, -29.0746, 0.59", "20.9478, -8.88859, -30.0911, 0.88", "21.2823, -9.34998, -30.7572, 1.18", "21.9937, -10.288, -32.1191, 1.18", "22.9322, -11.3952, -33.8386, 0.59", "23.7289, -12.2259, -35.2338, 0.59", "24.4515, -12.8932, -36.4384, 0.59", "25.0765, -13.4479, -37.4347, 0.59", "25.6032, -13.928, -38.2156, 0.95", "26.5129, -14.7922, -39.4208, 0.95", "26.9261, -15.1867, -39.8853, 0.95", "27.2733, -15.5192, -40.2305, 0.95", "27.5205, -15.7664, -40.5017, 1.32", "28.7017, -17.0582, -41.9145, 0.66", "29.6345, -18.1635, -43.1497, 0.73", "30.2886, -18.9566, -44.0088, 0.95", "31.0498, -19.8861, -45.0278, 0.66", "32.8174, -22.0269, -47.4734, 1.18", "33.6814, -23.075, -48.7588, 0.81", "34.2927, -23.8674, -49.8346, 0.81" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "11.623, 3.52043, -16.5477, 1.18", "12.3749, 4.27543, -19.003, 1.18", "12.418, 4.31871, -19.1437, 1.18" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "15.4423, 20.9502, -9.89871, 0.51", "15.743, 20.964, -9.80316, 0.51", "17.0819, 21.2919, -9.23793, 0.51", "17.8116, 21.6073, -8.8796, 0.51", "18.6255, 22.1053, -8.44994, 0.66", "19.1436, 22.5378, -8.1208, 0.66", "19.7371, 23.2163, -7.70161, 1.03", "20.4293, 24.3744, -7.0798, 0.29", "20.6443, 24.8594, -6.82638, 0.29", "20.8704, 25.4161, -6.67741, 0.95", "21.2822, 26.3886, -6.73713, 0.88", "21.9146, 27.5029, -7.29219, 0.44", "22.5599, 28.4702, -8.08344, 0.44", "23.208, 29.2529, -9.06691, 0.44", "25.7874, 31.8703, -13.5934, 1.1", "26.1659, 32.1884, -14.3753, 1.1", "26.515, 32.4198, -15.2024, 1.18" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "15.4423, 20.9502, -9.89871, 0.59", "15.5913, 21.0248, -10.7041, 0.59", "15.8494, 21.2162, -12.6918, 0.59", "16.0952, 21.509, -16.2633, 0.59", "16.1709, 21.6229, -17.9854, 0.59", "16.2424, 21.7187, -20.0601, 0.59", "16.3228, 21.7886, -22.1328, 0.59", "16.371, 21.8093, -23.7766, 0.44", "16.4368, 21.804, -25.6991, 0.44", "16.4477, 21.7942, -26.1478, 0.44", "16.4658, 21.7356, -27.3283, 0.44", "16.5065, 21.6662, -28.0631, 0.44", "16.6033, 21.509, -29.3127, 0.44", "16.6855, 21.3517, -30.4656, 0.44", "16.792, 21.1739, -32.0015, 0.44", "16.8548, 21.0182, -33.7178, 0.44", "16.8165, 20.8753, -35.9043, 0.44", "16.6534, 20.7913, -37.8198, 0.44", "16.4891, 20.7884, -38.8066, 0.44", "16.2879, 20.8364, -39.6364, 0.44", "16.1216, 20.9245, -40.1273, 0.44", "15.7606, 21.2387, -40.9342, 0.44", "15.4002, 21.7471, -41.7366, 0.44", "15.0978, 22.4418, -42.6152, 0.44", "14.9923, 23.0906, -43.5146, 0.44", "15.0648, 23.4696, -44.1851, 0.66", "15.1531, 23.6063, -44.4883, 0.37", "15.954, 24.3638, -46.3815, 0.37", "16.2337, 24.5546, -46.9421, 1.03", "17.1153, 25.0095, -48.5033, 0.15", "18.0036, 25.3613, -49.9548, 0.15", "18.9658, 25.6008, -51.4849, 0.15", "19.1988, 25.6181, -51.8427, 0.66", "20.1547, 25.4679, -53.1706, 0.66", "20.4881, 25.3535, -53.551, 0.66", "20.8954, 25.1435, -53.8634, 0.66", "21.93, 24.5404, -54.4457, 0.22", "23.1223, 23.8449, -54.8629, 0.44", "23.9481, 23.3889, -55.1485, 0.22", "24.6042, 23.0597, -55.3408, 0.22", "25.7457, 22.5454, -55.6872, 0.37", "26.7708, 22.1321, -56.1268, 0.15", "28.3436, 21.4943, -57.1604, 0.15", "30.0999, 20.6976, -59.0154, 0.66", "30.6512, 20.3648, -59.8055, 0.15", "30.8975, 20.1976, -60.2171, 0.51", "32.0651, 19.256, -62.5574, 0.22", "32.8539, 18.4831, -64.4504, 0.22", "33.4171, 17.8349, -66.0801, 0.22", "33.6749, 17.4292, -67.0617, 0.95" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-1.74104, -21.7824, -41.4809, 0.59", "-2.25662, -22.4529, -43.4814, 0.59", "-2.48767, -22.7066, -44.3078, 1.1", "-3.08784, -23.3735, -46.7012, 0.37", "-3.70596, -24.097, -49.4181, 0.37", "-4.16952, -24.6492, -51.516, 1.1", "-4.72491, -25.3108, -54.0295, 1.1", "-5.24041, -25.9142, -56.5089, 1.1", "-5.74377, -26.4907, -59.0035, 1.18", "-6.0501, -26.8356, -60.5028, 1.18", "-6.33314, -27.1576, -61.9944, 1.18" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-1.74104, -21.7824, -41.4809, 0.51", "-1.30539, -22.3398, -42.5135, 0.51", "-0.950824, -22.8439, -43.4548, 0.88", "-0.430056, -23.7305, -45.1428, 1.18", "-0.138504, -24.2633, -46.2412, 0.37", "0.0941871, -24.675, -47.1503, 1.25", "0.459678, -25.2572, -48.516, 1.1", "0.611273, -25.5235, -49.1614, 1.1", "0.939952, -26.1233, -50.6613, 0.81", "1.29703, -26.7707, -52.4498, 0.51", "1.60721, -27.3262, -54.1136, 1.98", "1.78806, -27.5975, -55.0083, 1.98" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "14.726, -22.8988, -12.3221, 0.66", "15.7565, -22.866, -13.7717, 0.66", "16.7443, -22.8877, -15.0642, 0.66", "17.3996, -22.9354, -15.8714, 0.66", "18.4136, -23.0575, -17.1629, 0.88", "19.1066, -23.1503, -18.0821, 0.59", "19.7069, -23.2205, -18.8914, 0.88", "20.3487, -23.2997, -19.699, 0.88", "20.6581, -23.3304, -20.087, 0.88", "21.6987, -23.4115, -21.4155, 0.88", "22.2311, -23.4622, -22.127, 0.88", "23.1602, -23.5789, -23.4424, 1.03", "24.1137, -23.7351, -24.7284, 0.66", "24.8475, -23.8844, -25.6368, 0.66", "25.632, -24.0718, -26.5229, 0.81", "27.0795, -24.5323, -27.9509, 0.66", "27.5487, -24.713, -28.4513, 0.66", "28.1766, -25.0073, -29.162, 0.66", "28.6729, -25.2652, -29.7702, 1.98", "28.8717, -25.3708, -30.0167, 1.98", "30.2597, -26.148, -31.7802, 0.88", "32.2886, -27.352, -34.3983, 1.03", "32.6294, -27.5754, -34.8615, 1.25", "33.6168, -28.2791, -36.2906, 1.47", "34.0147, -28.5756, -36.9024, 1.62", "34.7429, -29.1075, -37.987, 1.03", "34.971, -29.2633, -38.3017, 1.18", "35.4364, -29.523, -38.8404, 1.18", "36.9471, -30.0586, -40.4682, 0.59", "37.9872, -30.1975, -41.4403, 0.59", "38.6906, -30.1728, -42.0061, 0.59", "39.4311, -30.0776, -42.4972, 0.37", "40.3224, -29.9453, -43.0687, 0.59", "41.0123, -29.8445, -43.6096, 0.22", "41.5871, -29.7861, -44.1465, 1.76", "42.521, -29.8158, -45.2932, 0.44", "43.3016, -29.9692, -46.5919, 0.37", "44.1294, -30.2237, -48.1755, 0.81", "45.2716, -30.7312, -50.7981, 0.37", "45.5058, -30.8714, -51.4734, 0.37", "45.8642, -31.1712, -52.885, 0.22", "45.9623, -31.3194, -53.6222, 0.07" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "14.726, -22.8988, -12.3221, 1.1", "16.1681, -23.861, -11.8358, 1.1", "17.9983, -25.0195, -11.2505, 1.1", "19.3916, -25.8753, -10.802, 1.47", "20.7983, -26.7025, -10.3529, 1.76", "22.2724, -27.5429, -9.856, 0.66", "22.6499, -27.7531, -9.73919, 1.25", "23.6367, -28.274, -9.41278, 0.66", "24.7368, -28.8999, -8.96633, 1.25", "26.0467, -29.7464, -8.28091, 0.59", "26.9803, -30.521, -7.6336, 1.18", "27.7487, -31.3606, -6.92125, 1.18", "28.7961, -32.7516, -5.75842, 0.88", "29.6631, -34.1438, -4.62594, 1.47", "30.1631, -35.0809, -3.91071, 1.47", "31.0021, -36.812, -2.66095, 0.66", "31.6388, -38.0583, -1.8057, 0.66", "32.1145, -38.9152, -1.23763, 1.62", "32.4603, -39.4704, -0.916393, 1.62", "33.618, -41.0965, -0.0929388, 0.51", "34.5424, -42.3179, 0.443477, 0.51", "35.345, -43.3618, 0.828431, 0.07", "35.688, -43.8233, 0.977679, 0.73", "36.5569, -45.0116, 1.33306, 0.37", "37.2123, -45.9733, 1.59848, 0.66", "37.6429, -46.69, 1.77647, 0.66", "38.2517, -47.8695, 2.07988, 1.54", "38.4343, -48.2692, 2.18491, 1.54", "39.1896, -49.8885, 2.64437, 0.73", "39.8434, -51.2353, 3.10656, 0.22", "40.2906, -52.1436, 3.47361, 0.22", "40.8589, -53.242, 3.96683, 0.22", "41.5033, -54.3894, 4.53307, 0.88", "42.2021, -55.6065, 5.19689, 0.15", "42.9018, -56.8016, 5.9015, 0.88", "43.1852, -57.2476, 6.16468, 0.88", "43.7111, -58.0139, 6.60511, 1.03", "44.4319, -58.9824, 7.1746, 1.18", "45.2618, -60.052, 7.84109, 0.07", "45.528, -60.3929, 8.03642, 0.07", "45.9991, -60.9743, 8.31635, 0.66", "46.4894, -61.5752, 8.62616, 0.66" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-17.6341, -12.6396, -31.576, 1.25", "-17.2635, -13.4139, -33.5666, 1.25", "-16.5222, -14.814, -37.4303, 1.25", "-16.1062, -15.6679, -39.6126, 1.03", "-15.5475, -16.9232, -42.4933, 0.44", "-14.9387, -18.3097, -45.4455, 0.73", "-14.8375, -18.567, -45.9752, 0.73", "-14.5259, -19.4911, -47.8899, 0.73", "-14.2802, -20.3049, -49.5282, 1.4", "-13.8376, -21.9083, -52.867, 0.44", "-13.5704, -23.09, -55.3368, 1.25", "-13.3356, -24.447, -58.112, 1.25", "-12.8787, -27.436, -64.2085, 0.29", "-12.712, -28.4971, -66.36, 0.95", "-12.261, -30.9056, -71.3005, 1.25", "-12.0795, -31.7351, -72.9417, 1.25", "-11.9685, -32.235, -73.9016, 1.25", "-11.8167, -32.7735, -74.8541, 1.25", "-11.2477, -34.5203, -77.4027, 0.66", "-10.9172, -35.4382, -78.5546, 0.22", "-10.4769, -36.274, -79.1886, 0.22" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-17.6341, -12.6396, -31.576, 1.18", "-18.9023, -13.0636, -31.6993, 1.18", "-20.4355, -13.4648, -31.6506, 1.18", "-21.5537, -13.7395, -31.4841, 1.18", "-22.8246, -14.0729, -31.2246, 1.76", "-24.0567, -14.4348, -30.9424, 1.03", "-25.124, -14.7917, -30.6928, 1.25", "-26.2128, -15.1347, -30.3982, 0.88", "-27.4214, -15.4643, -30.0034, 0.73", "-28.3919, -15.6878, -29.6475, 1.03", "-29.2643, -15.8386, -29.3343, 1.91", "-30.6826, -15.9968, -28.8918, 2.79", "-31.7927, -15.9473, -28.6029, 1.47", "-32.8747, -15.6115, -28.3951, 0.66", "-33.8203, -15.066, -28.2438, 0.66", "-34.4596, -14.5882, -28.1498, 1.4", "-34.9439, -14.1875, -28.0904, 1.47", "-35.9913, -13.2861, -27.9889, 0.73", "-36.7544, -12.6911, -27.9489, 0.51", "-37.3576, -12.3111, -27.9431, 0.51", "-38.2698, -11.8229, -27.9618, 1.32", "-39.1385, -11.4107, -27.9699, 1.47", "-39.5623, -11.2256, -27.9671, 1.47", "-40.2909, -10.9315, -27.9566, 1.1", "-41.3003, -10.4754, -27.9323, 0.37", "-41.8187, -10.1982, -27.9326, 0.37", "-42.4889, -9.78975, -27.9511, 0.59", "-43.4026, -9.22264, -28.0298, 0.59", "-43.6671, -9.07817, -28.0701, 0.59", "-44.3395, -8.80904, -28.2227, 0.22", "-44.9845, -8.66598, -28.4529, 0.22", "-45.4273, -8.62897, -28.6421, 0.22", "-46.3819, -8.63453, -29.0933, 0.66", "-47.1805, -8.66442, -29.483, 0.07", "-47.7826, -8.6906, -29.7516, 0.51", "-48.7594, -8.74197, -30.1765, 1.4", "-49.2566, -8.75333, -30.393, 1.76", "-49.6545, -8.73252, -30.5787, 1.76", "-50.4713, -8.60394, -30.9777, 0.88", "-51.0612, -8.46737, -31.2913, 0.59", "-51.6864, -8.31215, -31.6284, 0.29", "-52.1921, -8.20932, -31.9326, 0.29", "-52.6521, -8.1439, -32.2455, 0.29", "-53.0745, -8.12631, -32.6147, 0.15", "-53.5238, -8.13162, -33.1184, 0.15", "-53.7807, -8.13809, -33.473, 0.15", "-54.5178, -8.13344, -34.5785, 0.15", "-54.6983, -8.1176, -34.8823, 0.73", "-55.4568, -7.97014, -36.2566, 0.15", "-55.7323, -7.87173, -36.7903, 0.15", "-56.1691, -7.6154, -37.6708, 0.15", "-56.4067, -7.40766, -38.1161, 0.81", "-56.8663, -6.86843, -38.7152, 0.22", "-57.1657, -6.4524, -39.0408, 0.22", "-57.4725, -5.97292, -39.1454, 0.44", "-57.577, -5.8174, -39.126, 0.44", "-58.3406, -4.78586, -38.5826, 0.07", "-58.7052, -4.39885, -38.1926, 0.73" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "34.2927, -23.8674, -49.8346, 0.59", "34.5813, -24.617, -50.7722, 0.59", "34.992, -25.7779, -52.2172, 0.44", "35.4369, -27.2519, -54.0689, 1.1", "35.8186, -28.5611, -55.8359, 0.95", "36.2856, -30.2871, -58.2322, 0.22", "36.4038, -30.8273, -58.9769, 0.88", "36.5566, -31.833, -60.3817, 0.22", "36.678, -33.1567, -62.2143, 0.22", "36.8049, -34.9808, -64.8237, 1.62", "36.8608, -35.686, -65.8297, 1.47", "37.0402, -37.5921, -68.4671, 0.37", "37.2142, -38.9671, -70.4372, 0.59", "37.3995, -40.1608, -72.1628, 0.15", "37.6524, -41.6605, -74.2844, 0.95", "37.7936, -42.5625, -75.4967, 0.07", "37.8922, -43.1612, -76.2659, 0.95", "38.3211, -45.3337, -79.0908, 0.22", "38.6208, -46.8684, -81.0549, 0.29", "38.7717, -47.9076, -82.2999, 0.51", "38.8167, -48.6255, -83.0848, 0.15", "38.8195, -49.5877, -84.1131, 0.66" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "34.2927, -23.8674, -49.8346, 0.07", "35.1648, -24.4758, -49.3817, 0.07", "35.8479, -24.8786, -49.0143, 0.07", "36.545, -25.2895, -48.6394, 0.22", "37.5145, -25.8612, -48.118, 0.59", "39.3201, -26.9257, -47.1469, 0.29", "40.1488, -27.4143, -46.7013, 0.29", "40.8796, -27.801, -46.2652, 0.07" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "12.418, 4.31871, -19.1437, 0.81", "12.4346, 4.80045, -21.4944, 0.81", "12.5471, 5.19071, -23.0427, 0.81", "12.745, 5.51199, -24.1186, 0.81", "13.4263, 6.38713, -26.5011, 0.81", "13.6019, 6.61149, -26.9824, 1.25", "13.7492, 6.79999, -27.2884, 1.25", "14.449, 7.6139, -28.22, 0.95", "15.4627, 8.7198, -29.1219, 0.95", "16.1421, 9.42451, -29.5137, 1.25", "16.9766, 10.2918, -29.7614, 1.25", "18.0659, 11.4053, -30.0596, 1.4" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "12.418, 4.31871, -19.1437, 0.59", "12.4882, 4.02657, -21.0796, 0.59", "12.5116, 3.65464, -22.8721, 0.59", "12.5441, 3.32728, -24.2898, 0.59", "12.5934, 2.90073, -26.0793, 0.59", "12.6199, 2.26676, -28.7548, 0.59", "12.5919, 1.84999, -30.5687, 0.59", "12.4729, 1.54598, -32.0677, 0.59", "12.4013, 1.41974, -32.6446, 0.59", "12.3605, 1.34149, -32.9673, 0.59", "12.1861, 1.03329, -34.2269, 0.59", "12.0523, 0.927365, -34.9682, 0.59", "11.5919, 1.19922, -36.961, 0.59" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "26.515, 32.4198, -15.2024, 0.59", "27.0814, 32.8564, -16.6926, 0.59", "27.5202, 33.1028, -17.88, 0.59", "27.9524, 33.2739, -19.119, 0.59", "28.3029, 33.3811, -20.2844, 0.59", "28.6996, 33.4821, -21.8155, 0.59", "28.9372, 33.5353, -22.8171, 0.59", "29.2261, 33.5369, -24.0472, 0.59", "29.4044, 33.5082, -24.7551, 0.59", "29.6659, 33.4046, -25.9309, 0.59", "29.7291, 33.2641, -26.9088, 0.59", "30.0954, 33.437, -25.9518, 0.59", "30.6232, 33.5519, -25.2136, 0.29", "31.2346, 33.6356, -24.519, 0.29", "32.4667, 33.805, -23.0934, 0.29", "33.4401, 33.9274, -21.9222, 0.29", "34.2709, 34.0142, -20.8459, 0.29", "34.7421, 34.0495, -20.1905, 0.29", "35.1175, 34.0584, -19.6907, 0.29" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "26.515, 32.4198, -15.2024, 0.66", "26.5644, 32.214, -15.7031, 0.66", "27.0115, 30.9382, -19.1034, 0.51", "27.3456, 30.1991, -21.0973, 0.51", "27.7953, 29.5172, -23.045, 0.51", "28.0967, 29.1853, -24.1039, 0.51", "28.2768, 29.0279, -24.6354, 0.51", "28.9154, 28.7232, -25.9383, 0.51", "29.3706, 28.6551, -26.4427, 0.44", "30.8285, 28.6112, -27.5721, 0.44", "31.7411, 28.636, -28.1596, 0.15", "32.4053, 28.6486, -28.5308, 0.37", "33.6994, 28.6234, -29.1579, 0.07", "35.261, 28.555, -29.7685, 0.95", "37.095, 28.4263, -30.3897, 0.07", "37.3764, 28.393, -30.4606, 0.66", "38.7605, 28.1616, -30.7767, 0.15", "39.3535, 28.0463, -30.912, 0.15", "39.9331, 27.8983, -31.0269, 0.73", "40.6841, 27.6729, -31.1251, 0.73", "41.1521, 27.5215, -31.1612, 0.73", "42.3926, 27.1005, -31.2913, 0.29", "42.8031, 26.9555, -31.3563, 0.29", "43.2919, 26.7902, -31.4574, 0.29", "44.5156, 26.3752, -31.7719, 0.88" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-6.33314, -27.1576, -61.9944, 0.51", "-6.65082, -27.0154, -62.987, 0.51", "-6.9964, -26.8134, -64.1555, 0.51", "-7.34774, -26.5321, -65.4631, 0.51", "-7.83093, -25.9217, -67.5323, 0.51", "-8.00507, -25.534, -68.4703, 0.51", "-8.16368, -24.7303, -69.7559, 0.51", "-8.12679, -24.244, -70.2277, 0.15", "-8.02317, -23.7928, -70.6044, 0.15", "-7.82446, -23.0204, -71.3074, 0.15", "-7.66233, -22.3275, -71.9638, 0.51", "-7.52782, -21.607, -72.781, 0.51", "-7.31834, -20.4028, -74.3268, 0.22", "-7.19897, -19.6471, -75.4244, 0.22", "-7.08676, -18.8784, -76.7028, 0.22", "-7.04057, -18.5531, -77.3433, 0.22", "-6.96861, -18.0754, -78.4151, 0.22", "-6.90275, -17.8242, -78.9777, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-6.33314, -27.1576, -61.9944, 0.44", "-6.84725, -27.714, -63.5024, 0.44", "-7.52076, -28.2626, -64.8575, 0.44", "-8.25552, -28.8272, -66.1939, 0.44", "-8.94857, -29.3597, -67.4543, 0.44", "-9.45137, -29.746, -68.3688, 0.37", "-10.2326, -30.3463, -69.7895, 0.22", "-11.1605, -30.9126, -71.1371, 0.22", "-12.2456, -31.4767, -72.3967, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "1.78806, -27.5975, -55.0083, 0.88", "2.11362, -28.4597, -57.5874, 0.88", "2.37356, -29.0819, -59.1855, 0.88", "2.69375, -29.7454, -60.9659, 0.88", "3.00883, -30.3585, -62.5694, 0.51", "3.35856, -30.9659, -64.2344, 0.29", "3.61209, -31.3676, -65.4172, 0.88", "3.95031, -31.8386, -66.7832, 1.25", "4.6713, -32.7414, -69.5535, 1.25", "5.1955, -33.4079, -71.6567, 0.51", "5.8047, -34.2284, -74.243, 0.51", "6.37966, -35.0987, -76.8033, 0.29", "6.59651, -35.4919, -77.8851, 0.88", "6.94166, -36.1262, -79.6193, 0.88", "7.28185, -36.8458, -81.3619, 0.15", "7.40571, -37.1576, -82.0677, 0.44", "7.59586, -37.8949, -83.3683, 0.07", "7.69869, -38.5943, -84.3115, 0.88" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "1.78806, -27.5975, -55.0083, 0.37", "3.63236, -26.6139, -56.1177, 0.37", "5.0697, -25.8294, -56.7152, 0.37", "6.0551, -25.2797, -57.07, 0.66", "7.40407, -24.5168, -57.5726, 0.66", "8.80851, -23.7374, -58.1593, 0.29", "10.2595, -22.8995, -58.8416, 0.44", "11.791, -21.9512, -59.5294, 1.1", "13.7957, -20.7242, -60.335, 0.44", "14.9089, -20.0671, -60.7817, 1.03", "16.5129, -19.1368, -61.5476, 1.25", "17.7991, -18.3658, -62.3136, 0.37" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "18.0659, 11.4053, -30.0596, 0.95", "18.2333, 11.4262, -29.4084, 0.95", "18.5984, 11.4426, -27.8866, 0.81", "19.1064, 11.3834, -25.8817, 0.66", "19.3521, 11.3412, -25.0262, 0.66", "19.6145, 11.2918, -24.2165, 0.66", "19.7622, 11.2543, -23.7782, 0.66", "19.8394, 11.2217, -23.5491, 0.66", "20.2223, 11.0305, -22.4951, 0.59", "20.7201, 10.7971, -21.2378, 0.59", "21.7675, 10.3693, -18.661, 0.22", "22.5438, 10.1099, -16.7814, 0.22", "23.2044, 9.92645, -15.1754, 0.22", "23.3925, 9.87799, -14.7071, 0.44", "23.8809, 9.7455, -13.4741, 0.29", "24.3476, 9.59566, -12.3283, 0.29", "24.7668, 9.44214, -11.3581, 0.29", "25.1522, 9.31845, -10.5019, 0.29", "25.5274, 9.20437, -9.68047, 0.29", "25.8706, 9.06944, -8.91133, 0.29", "26.1704, 8.89862, -8.26949, 0.59", "27.2443, 8.15641, -6.20938, 0.59" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "18.0659, 11.4053, -30.0596, 0.81", "19.1103, 10.8972, -33.8331, 0.81", "19.4453, 10.7399, -35.2457, 0.81", "19.9011, 10.4644, -37.8203, 0.81", "20.4275, 10.0308, -41.4843, 0.81", "20.5244, 9.93195, -42.2811, 0.81", "20.6335, 9.81775, -43.2248, 0.81", "20.7572, 9.7191, -44.5097, 0.73", "20.8785, 9.6325, -46.1938, 0.73", "20.8899, 9.60504, -46.8324, 0.73", "20.7402, 9.38911, -49.2766, 0.73", "20.7027, 9.22789, -50.5419, 0.73", "20.7797, 9.0491, -51.8609, 0.73" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "11.5919, 1.19922, -36.961, 0.59", "10.2484, 1.47737, -37.3158, 0.59", "8.79842, 1.83891, -37.575, 0.59", "7.68919, 2.11506, -37.7267, 0.59", "6.52318, 2.38605, -37.8579, 0.59", "5.22712, 2.64728, -37.8569, 0.37", "3.63032, 2.89219, -37.6656, 0.15", "2.2736, 2.96467, -37.2471, 0.15", "1.58284, 2.93583, -36.9012, 0.44", "0.425249, 2.73432, -36.1059, 1.03", "-1.47338, 2.00815, -34.3747, 0.37", "-2.63196, 1.37812, -33.0736, 0.37", "-3.73064, 0.512821, -31.5759, 0.15", "-4.36357, -0.172546, -30.55, 0.15", "-4.63382, -0.565681, -29.9843, 0.37", "-4.85184, -1.15622, -29.2448, 0.07" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "11.5919, 1.19922, -36.961, 0.22", "11.4711, 1.11383, -38.2213, 0.22", "11.2476, 1.05521, -39.9324, 0.22", "10.9508, 1.07655, -41.8181, 0.22", "10.2583, 1.35057, -45.4437, 0.22", "9.97938, 1.52801, -46.6991, 0.95", "9.72676, 1.76396, -47.7218, 0.95", "9.28834, 2.33477, -49.0413, 0.95", "8.97218, 2.9548, -49.7637, 0.59", "8.48591, 4.45798, -50.5628, 0.51", "8.31374, 5.22783, -50.7529, 0.51", "8.01786, 6.77453, -50.9128, 0.37", "7.8208, 7.8562, -50.9716, 0.37", "7.67907, 8.62737, -51.0124, 0.37", "7.52914, 9.34536, -51.0941, 0.37", "7.36609, 9.94005, -51.2135, 0.37", "6.66458, 11.4838, -51.6154, 0.37", "5.73739, 12.5601, -52.0753, 0.37", "4.91301, 13.0788, -52.4451, 0.37", "4.58099, 13.1838, -52.6003, 0.37", "3.74871, 13.2063, -53.085, 0.22", "3.31424, 13.0906, -53.4551, 0.37" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "17.7991, -18.3658, -62.3136, 0.22", "18.1773, -18.432, -63.2816, 0.22", "18.8145, -18.5576, -64.9863, 0.81", "19.7076, -18.6835, -67.8652, 0.59", "20.2591, -18.7225, -69.9216, 0.37", "20.5623, -18.7043, -71.1635, 0.37", "20.7328, -18.6941, -71.862, 0.66", "21.4602, -18.667, -75.3333, 0.44", "21.8791, -18.6444, -77.7071, 0.44", "22.1452, -18.5528, -79.3223, 0.44", "22.3989, -18.3215, -81.3197, 0.44" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "17.7991, -18.3658, -62.3136, 0.37", "18.2313, -17.6257, -62.3873, 0.37", "18.6424, -16.9337, -62.3959, 0.73", "19.1363, -16.0695, -62.4375, 0.73", "19.9207, -14.6523, -62.5331, 0.37", "20.5827, -13.478, -62.6296, 1.03", "21.3102, -12.2552, -62.747, 0.22", "21.9324, -11.3584, -62.8563, 0.22", "22.8304, -10.2711, -63.0601, 0.22", "23.2356, -9.88173, -63.1679, 0.22", "23.7184, -9.50572, -63.3101, 0.22", "24.3672, -9.09593, -63.5828, 0.22", "25.6246, -8.44002, -64.2797, 0.22", "26.6048, -8.00057, -64.9678, 0.66", "27.9711, -7.43037, -66.0061, 0.22", "28.5083, -7.19651, -66.5016, 0.51", "30.1921, -6.39008, -68.393, 0.22", "31.3554, -5.7692, -69.9064, 0.44", "32.3654, -5.18371, -71.2928, 0.44", "32.9904, -4.78899, -72.1592, 0.22", "34.3838, -3.79791, -74.0524, 0.22", "35.2542, -3.11293, -75.0667, 0.22", "35.7408, -2.63071, -75.205, 0.22", "36.9101, -1.31535, -74.376, 0.22", "37.8085, -0.264365, -73.4078, 0.22", "38.3521, 0.368932, -72.7255, 0.22", "39.2069, 1.36595, -71.4902, 0.22", "39.9147, 2.19833, -70.3858, 0.22", "40.7589, 3.23027, -69.0355, 0.22", "41.3869, 4.08436, -68.0482, 0.73", "41.7477, 4.59884, -67.5203, 0.73" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "20.7797, 9.0491, -51.8609, 0.73", "20.4685, 9.88106, -51.785, 0.73", "20.0346, 11.0108, -51.5082, 0.73", "19.6841, 12.0439, -51.1831, 0.73", "19.2763, 13.3462, -50.6821, 0.37", "18.9297, 14.488, -50.1594, 0.37", "18.682, 15.2519, -49.7176, 0.37", "18.4286, 16.0058, -49.1176, 0.37", "18.3069, 16.3531, -48.7316, 0.37", "18.2152, 16.6068, -48.3476, 0.37", "18.1413, 16.7969, -48.0283, 0.37", "17.8619, 17.2794, -47.2609, 0.37", "17.5839, 17.5745, -46.7944, 0.37", "16.9345, 18.1651, -45.9282, 0.37", "16.5202, 18.5202, -45.4407, 0.22", "16.1151, 18.8688, -45.0158, 0.22", "15.4142, 19.4483, -44.3651, 0.22", "14.8289, 19.8373, -43.9314, 0.22" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "20.7797, 9.0491, -51.8609, 0.44", "21.8778, 8.88032, -52.1922, 0.44", "23.7863, 8.64759, -52.5516, 0.73", "24.973, 8.54332, -52.5849, 0.51", "26.3803, 8.46108, -52.3873, 0.66", "27.7966, 8.39028, -52.0537, 0.37", "28.7287, 8.35042, -51.811, 0.88", "29.4962, 8.33482, -51.538, 0.88", "30.9137, 8.32067, -50.913, 0.51", "32.0824, 8.30302, -50.3835, 0.15", "32.8926, 8.29496, -49.9795, 0.15", "33.6019, 8.26826, -49.685, 0.15", "34.2263, 8.23296, -49.4705, 0.15", "35.021, 8.13564, -49.3688, 0.15", "35.5475, 8.03988, -49.4681, 0.44" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_24", "dend_13", "dend_8", "dend_3", "dend_0", "dend_30", "dend_25", "dend_15", "dend_14", "dend_10", "dend_9", "dend_5", "dend_4", "dend_2", "dend_1", "dend_40", "dend_31", "dend_27", "dend_26", "dend_21", "dend_16", "dend_12", "dend_11", "dend_7", "dend_6", "dend_42", "dend_41", "dend_35", "dend_32", "dend_29", "dend_28", "dend_23", "dend_22", "dend_20", "dend_17", "dend_39", "dend_36", "dend_34", "dend_33", "dend_19", "dend_18", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_24", "dend_13", "dend_8", "dend_3", "dend_0", "dend_30", "dend_25", "dend_15", "dend_14", "dend_10", "dend_9", "dend_5", "dend_4", "dend_2", "dend_1", "dend_40", "dend_31", "dend_27", "dend_26", "dend_21", "dend_16", "dend_12", "dend_11", "dend_7", "dend_6", "dend_42", "dend_41", "dend_35", "dend_32", "dend_29", "dend_28", "dend_23", "dend_22", "dend_20", "dend_17", "dend_39", "dend_36", "dend_34", "dend_33", "dend_19", "dend_18", "dend_38", "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_24", "dend_24", "dend_24", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_30", "dend_30", "dend_30", "dend_30", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_31", "dend_31", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L1_NGCDA_9c428321ae_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: soma_0
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_30, id: dend_30, parent: dend_24
create dend_30
public dend_30
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_40, id: dend_40, parent: dend_30
create dend_40
public dend_40
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_15
create dend_21
public dend_21
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_20, id: dend_20, parent: dend_16
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_24, dend_13, dend_8, dend_3, dend_0, dend_30, dend_25, dend_15, dend_14, dend_10, dend_9, dend_5, dend_4, dend_2, dend_1, dend_40, dend_31, dend_27, dend_26, dend_21, dend_16, dend_12, dend_11, dend_7, dend_6, dend_42, dend_41, dend_35, dend_32, dend_29, dend_28, dend_23, dend_22, dend_20, dend_17, dend_39, dend_36, dend_34, dend_33, dend_19, dend_18, dend_38, dend_37]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_24, dend_13, dend_8, dend_3, dend_0, dend_30, dend_25, dend_15, dend_14, dend_10, dend_9, dend_5, dend_4, dend_2, dend_1, dend_40, dend_31, dend_27, dend_26, dend_21, dend_16, dend_12, dend_11, dend_7, dend_6, dend_42, dend_41, dend_35, dend_32, dend_29, dend_28, dend_23, dend_22, dend_20, dend_17, dend_39, dend_36, dend_34, dend_33, dend_19, dend_18, dend_38, dend_37]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_43
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_24, dend_24, dend_24, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_24(0), soma_0(0.4999998268677268)
    connect dend_13(0), soma_0(0.4999998268677268)
    connect dend_8(0), soma_0(0.4999998268677268)
    connect dend_3(0), soma_0(0.4999998268677268)
    connect dend_0(0), soma_0(0.4999998268677268)
    connect axon_0(0), soma_0(1.0)
    connect dend_30(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_40(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_21(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_20(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -8.73063, -3.9926, 0.0, 3.06357 ) }
    soma_0 { pt3dadd( -7.8929, -3.63642, 0.0, 5.39559 ) }
    soma_0 { pt3dadd( -7.05516, -3.28024, 0.0, 7.97582 ) }
    soma_0 { pt3dadd( -6.21742, -2.92405, 0.0, 9.58698 ) }
    soma_0 { pt3dadd( -5.37969, -2.56787, 0.0, 10.8603 ) }
    soma_0 { pt3dadd( -4.54195, -2.21168, 0.0, 11.8172 ) }
    soma_0 { pt3dadd( -3.70421, -1.8555, 0.0, 12.3633 ) }
    soma_0 { pt3dadd( -2.86647, -1.49931, 0.0, 12.5607 ) }
    soma_0 { pt3dadd( -2.02874, -1.14313, 0.0, 12.6609 ) }
    soma_0 { pt3dadd( -1.191, -0.786946, 0.0, 12.7512 ) }
    soma_0 { pt3dadd( -0.353263, -0.430761, 0.0, 12.7296 ) }
    soma_0 { pt3dadd( 0.484474, -0.0745769, 0.0, 12.6814 ) }
    soma_0 { pt3dadd( 1.32221, 0.281607, 0.0, 12.6199 ) }
    soma_0 { pt3dadd( 2.15995, 0.637792, 0.0, 12.5092 ) }
    soma_0 { pt3dadd( 2.99769, 0.993976, 0.0, 12.1896 ) }
    soma_0 { pt3dadd( 3.83542, 1.35016, 0.0, 11.7338 ) }
    soma_0 { pt3dadd( 4.67316, 1.70634, 0.0, 11.0293 ) }
    soma_0 { pt3dadd( 5.5109, 2.06253, 0.0, 9.74086 ) }
    soma_0 { pt3dadd( 6.34863, 2.41871, 0.0, 7.8352 ) }
    soma_0 { pt3dadd( 7.18637, 2.7749, 0.0, 5.6442 ) }
    soma_0 { pt3dadd( 8.02411, 3.13108, 0.0, 3.11186 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 21/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 6.05208, 4.40836, -6.46, 1.91 ) }
    dend_24 { pt3dadd( 6.5408, 4.5104, -6.88421, 1.91 ) }
    dend_24 { pt3dadd( 7.56324, 4.72386, -7.7717, 1.91 ) }
    dend_24 { pt3dadd( 8.31743, 4.88133, -8.42635, 1.91 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 25/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -3.95793, -7.32414, -8.27, 1.69 ) }
    dend_13 { pt3dadd( -4.09983, -7.60399, -8.73128, 1.69 ) }
    dend_13 { pt3dadd( -4.6556, -8.77207, -10.5575, 1.98 ) }
    dend_13 { pt3dadd( -5.05081, -9.79488, -12.0621, 1.54 ) }
    dend_13 { pt3dadd( -5.52317, -11.0174, -13.8603, 1.76 ) }
    dend_13 { pt3dadd( -6.02345, -12.3121, -15.7648, 1.62 ) }
    dend_13 { pt3dadd( -6.52392, -13.6074, -17.67, 2.13 ) }
    dend_13 { pt3dadd( -6.81683, -14.4692, -18.9293, 2.28 ) }
    dend_13 { pt3dadd( -7.16031, -15.7496, -20.6911, 2.57 ) }
    // Section: dend_8, id: dend_8, parent: soma_0 (entry count 34/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 3.9421, -4.48364, 1.94, 1.03 ) }
    dend_8 { pt3dadd( 4.01814, -5.2323, 1.56151, 1.03 ) }
    dend_8 { pt3dadd( 4.23173, -6.13808, 0.955487, 1.03 ) }
    dend_8 { pt3dadd( 4.58342, -6.94115, 0.259899, 1.25 ) }
    dend_8 { pt3dadd( 4.96483, -7.5458, -0.461908, 1.54 ) }
    dend_8 { pt3dadd( 5.33779, -8.13704, -1.16771, 1.4 ) }
    dend_8 { pt3dadd( 5.91886, -9.05822, -2.26736, 1.62 ) }
    dend_8 { pt3dadd( 6.69225, -10.1554, -3.71983, 1.4 ) }
    dend_8 { pt3dadd( 7.57814, -11.1689, -5.31078, 0.88 ) }
    dend_8 { pt3dadd( 8.83096, -12.2512, -7.36668, 1.4 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 44/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -9.20793, -2.46013, -4.31, 1.32 ) }
    dend_3 { pt3dadd( -9.62088, -2.56374, -4.58228, 1.32 ) }
    dend_3 { pt3dadd( -11.7527, -3.09853, -5.98787, 1.18 ) }
    dend_3 { pt3dadd( -13.8227, -3.61783, -7.35272, 1.18 ) }
    dend_3 { pt3dadd( -15.6097, -4.06611, -8.53095, 1.47 ) }
    dend_3 { pt3dadd( -16.7825, -4.36034, -9.30426, 1.76 ) }
    dend_3 { pt3dadd( -18.1979, -4.71541, -10.2375, 1.91 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 51/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.84212, 5.68136, 3.4, 1.25 ) }
    dend_0 { pt3dadd( 1.10685, 6.28111, 3.09032, 1.25 ) }
    dend_0 { pt3dadd( -0.291256, 7.32066, 2.97239, 1.18 ) }
    dend_0 { pt3dadd( -0.683718, 7.60393, 3.09302, 1.18 ) }
    dend_0 { pt3dadd( -1.23148, 8.03023, 3.44644, 0.81 ) }
    dend_0 { pt3dadd( -1.9741, 8.67414, 4.02791, 0.81 ) }
    dend_0 { pt3dadd( -2.2258, 8.90959, 4.23464, 1.25 ) }
    dend_0 { pt3dadd( -3.14026, 9.83103, 5.22173, 1.4 ) }
    dend_0 { pt3dadd( -3.79677, 10.5678, 6.11027, 1.4 ) }
    dend_0 { pt3dadd( -4.29867, 11.2203, 6.83712, 1.4 ) }
    dend_0 { pt3dadd( -4.73156, 11.8401, 7.40061, 1.25 ) }
    dend_0 { pt3dadd( -5.09034, 12.3859, 7.74567, 0.95 ) }
    dend_0 { pt3dadd( -5.45298, 12.9542, 7.96518, 0.95 ) }
    dend_0 { pt3dadd( -5.93987, 13.7318, 8.06016, 1.32 ) }
    dend_0 { pt3dadd( -6.49964, 14.5767, 7.96949, 1.1 ) }
    dend_0 { pt3dadd( -7.4267, 15.819, 7.47299, 0.44 ) }
    dend_0 { pt3dadd( -7.99012, 16.4848, 6.9252, 1.1 ) }
    dend_0 { pt3dadd( -8.25941, 16.7659, 6.56731, 1.1 ) }
    dend_0 { pt3dadd( -8.44974, 16.944, 6.28358, 1.25 ) }
    dend_0 { pt3dadd( -8.99377, 17.3938, 5.34199, 1.25 ) }
    dend_0 { pt3dadd( -9.83568, 18.0348, 3.79021, 1.25 ) }
    dend_0 { pt3dadd( -10.6719, 18.7098, 1.8708, 1.03 ) }
    dend_0 { pt3dadd( -11.0299, 19.027, 0.829116, 1.03 ) }
    dend_0 { pt3dadd( -11.2231, 19.2244, 0.0995054, 1.03 ) }
    dend_0 { pt3dadd( -11.5735, 19.7264, -1.86281, 1.03 ) }
    dend_0 { pt3dadd( -11.6411, 19.9355, -2.67868, 0.81 ) }
    dend_0 { pt3dadd( -11.6242, 20.5356, -4.99512, 0.81 ) }
    dend_0 { pt3dadd( -11.5433, 20.8007, -6.11909, 1.03 ) }
    dend_0 { pt3dadd( -11.4641, 20.9484, -6.75556, 1.03 ) }
    dend_0 { pt3dadd( -11.3272, 21.126, -7.58198, 1.03 ) }
    dend_0 { pt3dadd( -11.1707, 21.3154, -8.41744, 1.03 ) }
    dend_0 { pt3dadd( -11.019, 21.535, -9.48738, 1.03 ) }
    dend_0 { pt3dadd( -11.0277, 21.6414, -9.88785, 1.03 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 84/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 8.02411, 3.13108, 0.0, 0.505148 ) }
    axon_0 { pt3dadd( 21.8282, 9.00022, 0.0, 0.505148 ) }
    axon_0 { pt3dadd( 35.6323, 14.8694, 0.0, 0.505148 ) }
    // Section: dend_30, id: dend_30, parent: dend_24 (entry count 87/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 8.31743, 4.88133, -8.42635, 1.25 ) }
    dend_30 { pt3dadd( 9.09326, 4.56192, -10.3325, 1.25 ) }
    dend_30 { pt3dadd( 10.04, 4.17213, -12.6586, 1.25 ) }
    dend_30 { pt3dadd( 10.8957, 3.81982, -14.761, 1.47 ) }
    dend_30 { pt3dadd( 11.623, 3.52043, -16.5477, 1.62 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 92/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 8.31743, 4.88133, -8.42635, 0.95 ) }
    dend_25 { pt3dadd( 8.36271, 6.86646, -10.6491, 0.95 ) }
    dend_25 { pt3dadd( 8.29595, 8.26118, -12.0535, 0.95 ) }
    dend_25 { pt3dadd( 8.17066, 10.0349, -13.7033, 0.95 ) }
    dend_25 { pt3dadd( 8.16974, 10.7453, -14.3416, 0.95 ) }
    dend_25 { pt3dadd( 8.2613, 12.1445, -15.4926, 0.95 ) }
    dend_25 { pt3dadd( 8.44196, 13.6768, -16.5999, 0.95 ) }
    dend_25 { pt3dadd( 8.66463, 14.7703, -17.0547, 0.95 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_25 { pt3dadd( 8.88681, 15.2927, -17.0344, 1.1 ) }
    dend_25 { pt3dadd( 10.1447, 16.9379, -15.9827, 0.66 ) }
    dend_25 { pt3dadd( 11.0531, 17.8699, -15.1056, 0.66 ) }
    dend_25 { pt3dadd( 12.2661, 18.873, -13.7972, 1.03 ) }
    dend_25 { pt3dadd( 13.769, 19.9318, -12.0573, 1.03 ) }
    dend_25 { pt3dadd( 14.9547, 20.6607, -10.6027, 1.03 ) }
    dend_25 { pt3dadd( 15.4423, 20.9502, -9.89871, 1.03 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 7/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -7.16031, -15.7496, -20.6911, 1.18 ) }
    dend_15 { pt3dadd( -6.96002, -16.1386, -22.015, 1.18 ) }
    dend_15 { pt3dadd( -6.54285, -16.9416, -24.5249, 1.18 ) }
    dend_15 { pt3dadd( -6.02138, -17.8736, -27.416, 1.32 ) }
    dend_15 { pt3dadd( -5.53091, -18.6868, -29.9665, 1.62 ) }
    dend_15 { pt3dadd( -5.2444, -19.1068, -31.3614, 1.62 ) }
    dend_15 { pt3dadd( -4.72434, -19.74, -33.5919, 1.69 ) }
    dend_15 { pt3dadd( -4.61939, -19.8604, -34.0008, 1.69 ) }
    dend_15 { pt3dadd( -4.46957, -19.9961, -34.4755, 1.69 ) }
    dend_15 { pt3dadd( -4.36904, -20.0679, -34.7436, 1.69 ) }
    dend_15 { pt3dadd( -3.71192, -20.4985, -36.3705, 1.69 ) }
    dend_15 { pt3dadd( -3.06614, -20.8607, -37.925, 0.37 ) }
    dend_15 { pt3dadd( -2.6225, -21.0798, -39.0065, 0.37 ) }
    dend_15 { pt3dadd( -2.32536, -21.2569, -39.7905, 0.37 ) }
    dend_15 { pt3dadd( -1.99716, -21.5168, -40.7122, 1.03 ) }
    dend_15 { pt3dadd( -1.74104, -21.7824, -41.4809, 1.32 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 23/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -7.16031, -15.7496, -20.6911, 1.32 ) }
    dend_14 { pt3dadd( -7.05761, -16.9725, -20.318, 1.32 ) }
    dend_14 { pt3dadd( -6.95438, -18.0254, -19.8339, 1.1 ) }
    dend_14 { pt3dadd( -6.86248, -18.9819, -19.3513, 0.59 ) }
    dend_14 { pt3dadd( -6.8003, -19.5863, -19.0313, 0.59 ) }
    dend_14 { pt3dadd( -6.67847, -20.594, -18.4927, 0.59 ) }
    dend_14 { pt3dadd( -6.56914, -21.3419, -18.0971, 1.69 ) }
    dend_14 { pt3dadd( -6.2349, -22.925, -17.1628, 1.62 ) }
    dend_14 { pt3dadd( -6.09076, -23.4012, -16.8681, 1.62 ) }
    dend_14 { pt3dadd( -5.62515, -24.4485, -16.2442, 0.29 ) }
    dend_14 { pt3dadd( -5.45771, -24.7138, -16.092, 0.29 ) }
    dend_14 { pt3dadd( -5.16741, -25.0443, -15.9278, 0.29 ) }
    dend_14 { pt3dadd( -4.55246, -25.5654, -15.6864, 1.25 ) }
    dend_14 { pt3dadd( -4.04286, -25.9283, -15.5648, 1.25 ) }
    dend_14 { pt3dadd( -3.05542, -26.5894, -15.3276, 0.88 ) }
    dend_14 { pt3dadd( -1.97691, -27.3066, -14.9817, 1.4 ) }
    dend_14 { pt3dadd( -1.09622, -27.9452, -14.616, 2.28 ) }
    dend_14 { pt3dadd( -0.411005, -28.4732, -14.2903, 2.28 ) }
    dend_14 { pt3dadd( 0.406171, -29.1776, -13.8712, 1.18 ) }
    dend_14 { pt3dadd( 1.35501, -30.1039, -13.3221, 0.59 ) }
    dend_14 { pt3dadd( 2.41198, -31.3214, -12.6131, 1.03 ) }
    dend_14 { pt3dadd( 2.85357, -31.974, -12.2884, 1.25 ) }
    dend_14 { pt3dadd( 3.09305, -32.4631, -12.062, 1.25 ) }
    dend_14 { pt3dadd( 3.38656, -33.5917, -11.5801, 0.29 ) }
    dend_14 { pt3dadd( 3.38777, -34.1552, -11.3834, 0.51 ) }
    dend_14 { pt3dadd( 3.22559, -34.8399, -11.2326, 0.51 ) }
    dend_14 { pt3dadd( 2.91454, -35.5549, -11.1425, 0.15 ) }
    dend_14 { pt3dadd( 2.6933, -35.9671, -11.0944, 0.15 ) }
    dend_14 { pt3dadd( 2.13063, -36.9382, -10.9499, 1.62 ) }
    dend_14 { pt3dadd( 1.70964, -37.6794, -10.8163, 1.62 ) }
    dend_14 { pt3dadd( 1.3867, -38.4001, -10.6563, 1.32 ) }
    dend_14 { pt3dadd( 0.935702, -39.9234, -10.2229, 0.29 ) }
    dend_14 { pt3dadd( 0.85656, -40.3783, -10.0709, 0.29 ) }
    dend_14 { pt3dadd( 0.803471, -41.1343, -9.79245, 0.59 ) }
    dend_14 { pt3dadd( 0.824342, -41.8266, -9.52286, 1.32 ) }
    dend_14 { pt3dadd( 0.923461, -42.98, -9.01673, 0.07 ) }
    dend_14 { pt3dadd( 1.02578, -43.8349, -8.63388, 0.73 ) }
    dend_14 { pt3dadd( 1.10199, -44.4102, -8.38124, 0.29 ) }
    dend_14 { pt3dadd( 1.12068, -44.81, -8.22507, 1.32 ) }
    dend_14 { pt3dadd( 1.00233, -46.4981, -7.69965, 0.22 ) }
    dend_14 { pt3dadd( 0.898629, -47.0937, -7.55124, 0.22 ) }
    dend_14 { pt3dadd( 0.675846, -47.9408, -7.39381, 1.1 ) }
    dend_14 { pt3dadd( 0.557859, -48.3586, -7.32642, 1.84 ) }
    dend_14 { pt3dadd( 0.330423, -49.2435, -7.16435, 1.47 ) }
    dend_14 { pt3dadd( 0.0793499, -50.3404, -6.95417, 0.07 ) }
    dend_14 { pt3dadd( 0.00757296, -50.7304, -6.88211, 0.66 ) }
    dend_14 { pt3dadd( -0.0182248, -51.0167, -6.83182, 0.66 ) }
    dend_14 { pt3dadd( 0.00736026, -51.9097, -6.62816, 0.07 ) }
    dend_14 { pt3dadd( 0.100603, -52.4909, -6.48048, 0.07 ) }
    dend_14 { pt3dadd( 0.190618, -52.8642, -6.39114, 0.73 ) }
    dend_14 { pt3dadd( 0.255418, -53.1424, -6.33014, 0.73 ) }
    dend_14 { pt3dadd( 0.465429, -54.2231, -6.0969, 0.07 ) }
    dend_14 { pt3dadd( 0.569115, -54.8946, -5.96749, 0.81 ) }
    dend_14 { pt3dadd( 0.618701, -55.3762, -5.867, 1.32 ) }
    dend_14 { pt3dadd( 0.696249, -56.8289, -5.54643, 0.07 ) }
    dend_14 { pt3dadd( 0.684256, -57.6987, -5.31318, 0.07 ) }
    dend_14 { pt3dadd( 0.643184, -58.1368, -5.1868, 1.1 ) }
    dend_14 { pt3dadd( 0.505822, -58.8088, -4.98558, 1.03 ) }
    dend_14 { pt3dadd( 0.17827, -59.907, -4.67791, 0.15 ) }
    dend_14 { pt3dadd( -0.0779739, -60.6249, -4.47848, 0.73 ) }
    dend_14 { pt3dadd( -0.438691, -61.5763, -4.21804, 0.07 ) }
    dend_14 { pt3dadd( -0.712331, -62.297, -4.04784, 1.18 ) }
    dend_14 { pt3dadd( -1.04778, -63.1701, -3.8832, 0.81 ) }
    dend_14 { pt3dadd( -1.34631, -63.957, -3.76927, 0.15 ) }
    dend_14 { pt3dadd( -1.66974, -64.8671, -3.69327, 0.15 ) }
    dend_14 { pt3dadd( -1.83213, -65.4193, -3.65853, 0.73 ) }
    dend_14 { pt3dadd( -1.94842, -65.9775, -3.6, 1.62 ) }
    dend_14 { pt3dadd( -2.04397, -66.696, -3.48164, 0.95 ) }
    dend_14 { pt3dadd( -2.12746, -67.6699, -3.28589, 0.07 ) }
    dend_14 { pt3dadd( -2.15346, -68.1734, -3.14778, 0.66 ) }
    dend_14 { pt3dadd( -2.16029, -68.6917, -2.94518, 0.81 ) }
    dend_14 { pt3dadd( -2.13602, -70.1133, -2.28335, 0.15 ) }
    dend_14 { pt3dadd( -2.08653, -70.8221, -1.91175, 1.1 ) }
    dend_14 { pt3dadd( -2.05235, -71.0974, -1.75841, 1.62 ) }
    dend_14 { pt3dadd( -1.90719, -71.9465, -1.29396, 1.62 ) }
    dend_14 { pt3dadd( -1.59475, -73.515, -0.525396, 0.15 ) }
    dend_14 { pt3dadd( -1.51623, -73.8889, -0.36606, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_14 { pt3dadd( -1.43534, -74.3179, -0.23655, 0.44 ) }
    dend_14 { pt3dadd( -1.33562, -74.9461, -0.0879524, 0.07 ) }
    dend_14 { pt3dadd( -1.2329, -75.8789, 0.0633824, 0.22 ) }
    dend_14 { pt3dadd( -1.17223, -77.1019, 0.181212, 0.22 ) }
    dend_14 { pt3dadd( -1.16951, -77.3251, 0.194029, 0.81 ) }
    dend_14 { pt3dadd( -1.20029, -78.7274, 0.289618, 0.07 ) }
    dend_14 { pt3dadd( -1.23137, -79.3427, 0.335223, 0.07 ) }
    dend_14 { pt3dadd( -1.28619, -80.0644, 0.390265, 0.81 ) }
    dend_14 { pt3dadd( -1.39648, -81.1827, 0.470738, 0.29 ) }
    dend_14 { pt3dadd( -1.48897, -81.9413, 0.569531, 0.29 ) }
    dend_14 { pt3dadd( -1.5911, -82.6988, 0.688687, 0.37 ) }
    dend_14 { pt3dadd( -1.66605, -83.227, 0.784661, 0.37 ) }
    dend_14 { pt3dadd( -1.75623, -83.8247, 0.849352, 0.37 ) }
    dend_14 { pt3dadd( -1.84395, -84.4371, 0.863431, 0.88 ) }
    dend_14 { pt3dadd( -2.16426, -86.4217, 0.83521, 0.15 ) }
    dend_14 { pt3dadd( -2.28151, -87.0644, 0.820593, 0.15 ) }
    dend_14 { pt3dadd( -2.34462, -87.4185, 0.803964, 0.88 ) }
    dend_14 { pt3dadd( -2.66134, -89.0819, 0.649031, 0.15 ) }
    dend_14 { pt3dadd( -2.76149, -89.6516, 0.519551, 0.44 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 19/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 8.83096, -12.2512, -7.36668, 1.32 ) }
    dend_10 { pt3dadd( 9.38048, -13.4474, -8.31376, 1.32 ) }
    dend_10 { pt3dadd( 10.0767, -14.8083, -9.22092, 0.95 ) }
    dend_10 { pt3dadd( 10.844, -16.2711, -10.039, 0.88 ) }
    dend_10 { pt3dadd( 11.3982, -17.299, -10.5085, 0.95 ) }
    dend_10 { pt3dadd( 11.9456, -18.3142, -10.9722, 0.66 ) }
    dend_10 { pt3dadd( 12.606, -19.539, -11.5316, 0.66 ) }
    dend_10 { pt3dadd( 13.471, -21.0556, -12.1249, 1.25 ) }
    dend_10 { pt3dadd( 13.937, -21.7913, -12.2927, 1.76 ) }
    dend_10 { pt3dadd( 14.726, -22.8988, -12.3221, 2.06 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 29/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 8.83096, -12.2512, -7.36668, 0.81 ) }
    dend_9 { pt3dadd( 9.55555, -12.2807, -8.21915, 0.81 ) }
    dend_9 { pt3dadd( 9.97377, -12.4002, -8.84814, 0.29 ) }
    dend_9 { pt3dadd( 10.5204, -12.6678, -9.85869, 0.29 ) }
    dend_9 { pt3dadd( 11.1009, -13.0198, -11.0837, 0.51 ) }
    dend_9 { pt3dadd( 11.5353, -13.3246, -12.1939, 0.51 ) }
    dend_9 { pt3dadd( 11.9946, -13.6469, -13.5716, 0.51 ) }
    dend_9 { pt3dadd( 12.3909, -14.0005, -15.2204, 0.37 ) }
    dend_9 { pt3dadd( 12.5756, -14.2335, -16.2545, 0.37 ) }
    dend_9 { pt3dadd( 12.6184, -14.3239, -16.6304, 0.37 ) }
    dend_9 { pt3dadd( 12.6718, -14.6034, -17.7781, 0.37 ) }
    dend_9 { pt3dadd( 12.6735, -14.8735, -19.1009, 0.37 ) }
    dend_9 { pt3dadd( 12.6684, -14.9587, -20.4579, 0.37 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 42/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -18.1979, -4.71541, -10.2375, 0.95 ) }
    dend_5 { pt3dadd( -18.2473, -5.6664, -12.6657, 0.95 ) }
    dend_5 { pt3dadd( -18.1913, -6.69761, -15.4394, 1.25 ) }
    dend_5 { pt3dadd( -18.1052, -8.28391, -19.7062, 1.4 ) }
    dend_5 { pt3dadd( -18.0455, -9.38578, -22.67, 1.4 ) }
    dend_5 { pt3dadd( -17.9834, -10.5288, -25.7444, 1.25 ) }
    dend_5 { pt3dadd( -17.9362, -11.3987, -28.0841, 1.91 ) }
    dend_5 { pt3dadd( -17.6341, -12.6396, -31.576, 1.91 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 50/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -18.1979, -4.71541, -10.2375, 1.25 ) }
    dend_4 { pt3dadd( -19.0883, -3.78754, -8.32125, 1.25 ) }
    dend_4 { pt3dadd( -19.7156, -3.08238, -6.84567, 1.03 ) }
    dend_4 { pt3dadd( -20.4099, -2.29858, -5.18637, 1.18 ) }
    dend_4 { pt3dadd( -21.1658, -1.4753, -3.39715, 0.73 ) }
    dend_4 { pt3dadd( -22.0073, -0.626197, -1.4589, 0.73 ) }
    dend_4 { pt3dadd( -22.7338, 0.0590741, 0.216108, 0.88 ) }
    dend_4 { pt3dadd( -23.2864, 0.547855, 1.56771, 0.88 ) }
    dend_4 { pt3dadd( -23.7054, 0.937526, 2.76316, 0.88 ) }
    dend_4 { pt3dadd( -24.0472, 1.23223, 3.80563, 0.88 ) }
    dend_4 { pt3dadd( -24.2329, 1.41941, 4.5388, 0.88 ) }
    dend_4 { pt3dadd( -24.4004, 1.64158, 5.30565, 0.88 ) }
    dend_4 { pt3dadd( -24.4654, 1.91734, 6.05213, 0.88 ) }
    dend_4 { pt3dadd( -24.4581, 2.06411, 6.38178, 0.88 ) }
    dend_4 { pt3dadd( -24.3434, 3.08798, 8.43703, 0.88 ) }
    dend_4 { pt3dadd( -24.3321, 3.67721, 9.5295, 0.88 ) }
    dend_4 { pt3dadd( -24.3836, 4.23165, 10.4698, 0.95 ) }
    dend_4 { pt3dadd( -24.702, 5.61286, 12.5971, 0.95 ) }
    dend_4 { pt3dadd( -24.9684, 6.51313, 13.9183, 0.95 ) }
    dend_4 { pt3dadd( -25.1227, 6.99491, 14.6678, 0.95 ) }
    dend_4 { pt3dadd( -25.4269, 7.96595, 16.2569, 0.88 ) }
    dend_4 { pt3dadd( -25.568, 8.40156, 17.0281, 0.88 ) }
    dend_4 { pt3dadd( -25.7418, 8.97563, 18.0584, 1.1 ) }
    dend_4 { pt3dadd( -26.0374, 10.1168, 20.0741, 0.73 ) }
    dend_4 { pt3dadd( -26.2724, 11.4872, 22.4452, 1.4 ) }
    dend_4 { pt3dadd( -26.3317, 12.3573, 23.982, 1.4 ) }
    dend_4 { pt3dadd( -26.3114, 13.7456, 26.4871, 0.66 ) }
    dend_4 { pt3dadd( -26.2945, 14.2691, 27.4648, 0.51 ) }
    dend_4 { pt3dadd( -26.2948, 15.152, 29.1513, 0.51 ) }
    dend_4 { pt3dadd( -26.3444, 15.8897, 30.522, 0.88 ) }
    dend_4 { pt3dadd( -26.4476, 16.9948, 32.4219, 0.88 ) }
    dend_4 { pt3dadd( -26.5619, 17.8349, 33.8686, 1.1 ) }
    dend_4 { pt3dadd( -26.6645, 18.3099, 34.738, 1.1 ) }
    dend_4 { pt3dadd( -27.0579, 19.3131, 36.657, 0.88 ) }
    dend_4 { pt3dadd( -27.3749, 19.8739, 37.7111, 0.59 ) }
    dend_4 { pt3dadd( -27.5933, 20.1757, 38.2772, 0.88 ) }
    dend_4 { pt3dadd( -28.0669, 20.7546, 39.317, 0.88 ) }
    dend_4 { pt3dadd( -29.2317, 22.2384, 41.9008, 1.1 ) }
    dend_4 { pt3dadd( -30.0479, 23.3661, 43.8182, 0.51 ) }
    dend_4 { pt3dadd( -30.4123, 23.8774, 44.6785, 0.51 ) }
    dend_4 { pt3dadd( -30.8578, 24.4767, 45.7199, 0.59 ) }
    dend_4 { pt3dadd( -31.2742, 25.0233, 46.7235, 0.59 ) }
    dend_4 { pt3dadd( -31.7825, 25.7702, 48.0884, 0.59 ) }
    dend_4 { pt3dadd( -32.0882, 26.3537, 49.2452, 0.59 ) }
    dend_4 { pt3dadd( -32.206, 26.6798, 49.9623, 0.59 ) }
    dend_4 { pt3dadd( -32.3723, 27.248, 51.3682, 0.59 ) }
    dend_4 { pt3dadd( -32.4427, 27.4818, 52.0503, 0.59 ) }
    dend_4 { pt3dadd( -32.553, 27.6868, 52.8578, 0.59 ) }
    dend_4 { pt3dadd( -32.8664, 27.8926, 54.3932, 0.22 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 99/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -11.0277, 21.6414, -9.88785, 0.73 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_2 { pt3dadd( -10.0398, 22.088, -12.3049, 0.73 ) }
    dend_2 { pt3dadd( -8.81141, 22.6673, -14.7629, 1.1 ) }
    dend_2 { pt3dadd( -7.36157, 23.2982, -17.0488, 0.81 ) }
    dend_2 { pt3dadd( -6.00109, 23.8245, -18.776, 0.81 ) }
    dend_2 { pt3dadd( -4.67419, 24.2792, -20.2499, 0.81 ) }
    dend_2 { pt3dadd( -3.81573, 24.5429, -21.0786, 0.81 ) }
    dend_2 { pt3dadd( -3.00603, 24.7663, -21.6214, 0.81 ) }
    dend_2 { pt3dadd( -1.73543, 25.0654, -22.1818, 0.51 ) }
    dend_2 { pt3dadd( -0.676822, 25.27, -22.553, 0.51 ) }
    dend_2 { pt3dadd( 0.160401, 25.4199, -22.8876, 0.51 ) }
    dend_2 { pt3dadd( 1.13463, 25.5979, -23.1506, 0.51 ) }
    dend_2 { pt3dadd( 2.28677, 25.823, -23.4099, 0.51 ) }
    dend_2 { pt3dadd( 2.89182, 25.9547, -23.5419, 0.51 ) }
    dend_2 { pt3dadd( 4.03196, 26.2622, -23.77, 0.51 ) }
    dend_2 { pt3dadd( 4.61317, 26.4516, -23.8637, 0.51 ) }
    dend_2 { pt3dadd( 5.74103, 26.8706, -23.9742, 0.51 ) }
    dend_2 { pt3dadd( 7.65517, 27.6445, -24.1362, 0.66 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 17/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -11.0277, 21.6414, -9.88785, 0.73 ) }
    dend_1 { pt3dadd( -11.2483, 22.242, -10.2252, 0.73 ) }
    dend_1 { pt3dadd( -11.4519, 22.8973, -10.5668, 0.73 ) }
    dend_1 { pt3dadd( -11.6276, 23.6054, -10.9138, 0.73 ) }
    dend_1 { pt3dadd( -11.744, 24.2147, -11.2273, 0.59 ) }
    dend_1 { pt3dadd( -11.8028, 24.6945, -11.4824, 0.59 ) }
    dend_1 { pt3dadd( -11.8592, 25.1552, -11.7274, 0.59 ) }
    dend_1 { pt3dadd( -11.8874, 25.5839, -11.9792, 0.51 ) }
    dend_1 { pt3dadd( -11.8769, 25.8968, -12.1387, 0.37 ) }
    dend_1 { pt3dadd( -11.8179, 26.3831, -12.3444, 0.37 ) }
    dend_1 { pt3dadd( -11.7235, 26.718, -12.5273, 0.37 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 28/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 35.6323, 14.8694, 0.0, 0.15 ) }
    axon_1 { pt3dadd( 49.4364, 20.7385, 0.0, 0.15 ) }
    axon_1 { pt3dadd( 63.2405, 26.6077, 0.0, 0.15 ) }
    // Section: dend_40, id: dend_40, parent: dend_30 (entry count 31/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 11.623, 3.52043, -16.5477, 0.88 ) }
    dend_40 { pt3dadd( 11.8404, 2.65378, -17.5743, 0.88 ) }
    dend_40 { pt3dadd( 12.4778, 1.08918, -19.4824, 0.88 ) }
    dend_40 { pt3dadd( 12.9437, 0.143433, -20.5665, 0.88 ) }
    dend_40 { pt3dadd( 13.4157, -0.62346, -21.4279, 0.59 ) }
    dend_40 { pt3dadd( 13.6843, -1.01362, -21.8539, 0.59 ) }
    dend_40 { pt3dadd( 14.2801, -1.81597, -22.6922, 0.59 ) }
    dend_40 { pt3dadd( 15.0057, -2.5891, -23.5041, 0.59 ) }
    dend_40 { pt3dadd( 15.6041, -3.13756, -24.0517, 1.1 ) }
    dend_40 { pt3dadd( 16.8846, -4.22381, -25.1123, 0.88 ) }
    dend_40 { pt3dadd( 17.7734, -5.00912, -25.8532, 0.88 ) }
    dend_40 { pt3dadd( 18.3492, -5.59773, -26.4018, 0.88 ) }
    dend_40 { pt3dadd( 19.4504, -6.91006, -27.5929, 1.18 ) }
    dend_40 { pt3dadd( 19.538, -7.02159, -27.7012, 1.18 ) }
    dend_40 { pt3dadd( 19.6949, -7.21811, -27.922, 1.18 ) }
    dend_40 { pt3dadd( 20.395, -8.13702, -29.0746, 0.59 ) }
    dend_40 { pt3dadd( 20.9478, -8.88859, -30.0911, 0.88 ) }
    dend_40 { pt3dadd( 21.2823, -9.34998, -30.7572, 1.18 ) }
    dend_40 { pt3dadd( 21.9937, -10.288, -32.1191, 1.18 ) }
    dend_40 { pt3dadd( 22.9322, -11.3952, -33.8386, 0.59 ) }
    dend_40 { pt3dadd( 23.7289, -12.2259, -35.2338, 0.59 ) }
    dend_40 { pt3dadd( 24.4515, -12.8932, -36.4384, 0.59 ) }
    dend_40 { pt3dadd( 25.0765, -13.4479, -37.4347, 0.59 ) }
    dend_40 { pt3dadd( 25.6032, -13.928, -38.2156, 0.95 ) }
    dend_40 { pt3dadd( 26.5129, -14.7922, -39.4208, 0.95 ) }
    dend_40 { pt3dadd( 26.9261, -15.1867, -39.8853, 0.95 ) }
    dend_40 { pt3dadd( 27.2733, -15.5192, -40.2305, 0.95 ) }
    dend_40 { pt3dadd( 27.5205, -15.7664, -40.5017, 1.32 ) }
    dend_40 { pt3dadd( 28.7017, -17.0582, -41.9145, 0.66 ) }
    dend_40 { pt3dadd( 29.6345, -18.1635, -43.1497, 0.73 ) }
    dend_40 { pt3dadd( 30.2886, -18.9566, -44.0088, 0.95 ) }
    dend_40 { pt3dadd( 31.0498, -19.8861, -45.0278, 0.66 ) }
    dend_40 { pt3dadd( 32.8174, -22.0269, -47.4734, 1.18 ) }
    dend_40 { pt3dadd( 33.6814, -23.075, -48.7588, 0.81 ) }
    dend_40 { pt3dadd( 34.2927, -23.8674, -49.8346, 0.81 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 66/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 11.623, 3.52043, -16.5477, 1.18 ) }
    dend_31 { pt3dadd( 12.3749, 4.27543, -19.003, 1.18 ) }
    dend_31 { pt3dadd( 12.418, 4.31871, -19.1437, 1.18 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 69/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 15.4423, 20.9502, -9.89871, 0.51 ) }
    dend_27 { pt3dadd( 15.743, 20.964, -9.80316, 0.51 ) }
    dend_27 { pt3dadd( 17.0819, 21.2919, -9.23793, 0.51 ) }
    dend_27 { pt3dadd( 17.8116, 21.6073, -8.8796, 0.51 ) }
    dend_27 { pt3dadd( 18.6255, 22.1053, -8.44994, 0.66 ) }
    dend_27 { pt3dadd( 19.1436, 22.5378, -8.1208, 0.66 ) }
    dend_27 { pt3dadd( 19.7371, 23.2163, -7.70161, 1.03 ) }
    dend_27 { pt3dadd( 20.4293, 24.3744, -7.0798, 0.29 ) }
    dend_27 { pt3dadd( 20.6443, 24.8594, -6.82638, 0.29 ) }
    dend_27 { pt3dadd( 20.8704, 25.4161, -6.67741, 0.95 ) }
    dend_27 { pt3dadd( 21.2822, 26.3886, -6.73713, 0.88 ) }
    dend_27 { pt3dadd( 21.9146, 27.5029, -7.29219, 0.44 ) }
    dend_27 { pt3dadd( 22.5599, 28.4702, -8.08344, 0.44 ) }
    dend_27 { pt3dadd( 23.208, 29.2529, -9.06691, 0.44 ) }
    dend_27 { pt3dadd( 25.7874, 31.8703, -13.5934, 1.1 ) }
    dend_27 { pt3dadd( 26.1659, 32.1884, -14.3753, 1.1 ) }
    dend_27 { pt3dadd( 26.515, 32.4198, -15.2024, 1.18 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 86/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 15.4423, 20.9502, -9.89871, 0.59 ) }
    dend_26 { pt3dadd( 15.5913, 21.0248, -10.7041, 0.59 ) }
    dend_26 { pt3dadd( 15.8494, 21.2162, -12.6918, 0.59 ) }
    dend_26 { pt3dadd( 16.0952, 21.509, -16.2633, 0.59 ) }
    dend_26 { pt3dadd( 16.1709, 21.6229, -17.9854, 0.59 ) }
    dend_26 { pt3dadd( 16.2424, 21.7187, -20.0601, 0.59 ) }
    dend_26 { pt3dadd( 16.3228, 21.7886, -22.1328, 0.59 ) }
    dend_26 { pt3dadd( 16.371, 21.8093, -23.7766, 0.44 ) }
    dend_26 { pt3dadd( 16.4368, 21.804, -25.6991, 0.44 ) }
    dend_26 { pt3dadd( 16.4477, 21.7942, -26.1478, 0.44 ) }
    dend_26 { pt3dadd( 16.4658, 21.7356, -27.3283, 0.44 ) }
    dend_26 { pt3dadd( 16.5065, 21.6662, -28.0631, 0.44 ) }
    dend_26 { pt3dadd( 16.6033, 21.509, -29.3127, 0.44 ) }
    dend_26 { pt3dadd( 16.6855, 21.3517, -30.4656, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_26 { pt3dadd( 16.792, 21.1739, -32.0015, 0.44 ) }
    dend_26 { pt3dadd( 16.8548, 21.0182, -33.7178, 0.44 ) }
    dend_26 { pt3dadd( 16.8165, 20.8753, -35.9043, 0.44 ) }
    dend_26 { pt3dadd( 16.6534, 20.7913, -37.8198, 0.44 ) }
    dend_26 { pt3dadd( 16.4891, 20.7884, -38.8066, 0.44 ) }
    dend_26 { pt3dadd( 16.2879, 20.8364, -39.6364, 0.44 ) }
    dend_26 { pt3dadd( 16.1216, 20.9245, -40.1273, 0.44 ) }
    dend_26 { pt3dadd( 15.7606, 21.2387, -40.9342, 0.44 ) }
    dend_26 { pt3dadd( 15.4002, 21.7471, -41.7366, 0.44 ) }
    dend_26 { pt3dadd( 15.0978, 22.4418, -42.6152, 0.44 ) }
    dend_26 { pt3dadd( 14.9923, 23.0906, -43.5146, 0.44 ) }
    dend_26 { pt3dadd( 15.0648, 23.4696, -44.1851, 0.66 ) }
    dend_26 { pt3dadd( 15.1531, 23.6063, -44.4883, 0.37 ) }
    dend_26 { pt3dadd( 15.954, 24.3638, -46.3815, 0.37 ) }
    dend_26 { pt3dadd( 16.2337, 24.5546, -46.9421, 1.03 ) }
    dend_26 { pt3dadd( 17.1153, 25.0095, -48.5033, 0.15 ) }
    dend_26 { pt3dadd( 18.0036, 25.3613, -49.9548, 0.15 ) }
    dend_26 { pt3dadd( 18.9658, 25.6008, -51.4849, 0.15 ) }
    dend_26 { pt3dadd( 19.1988, 25.6181, -51.8427, 0.66 ) }
    dend_26 { pt3dadd( 20.1547, 25.4679, -53.1706, 0.66 ) }
    dend_26 { pt3dadd( 20.4881, 25.3535, -53.551, 0.66 ) }
    dend_26 { pt3dadd( 20.8954, 25.1435, -53.8634, 0.66 ) }
    dend_26 { pt3dadd( 21.93, 24.5404, -54.4457, 0.22 ) }
    dend_26 { pt3dadd( 23.1223, 23.8449, -54.8629, 0.44 ) }
    dend_26 { pt3dadd( 23.9481, 23.3889, -55.1485, 0.22 ) }
    dend_26 { pt3dadd( 24.6042, 23.0597, -55.3408, 0.22 ) }
    dend_26 { pt3dadd( 25.7457, 22.5454, -55.6872, 0.37 ) }
    dend_26 { pt3dadd( 26.7708, 22.1321, -56.1268, 0.15 ) }
    dend_26 { pt3dadd( 28.3436, 21.4943, -57.1604, 0.15 ) }
    dend_26 { pt3dadd( 30.0999, 20.6976, -59.0154, 0.66 ) }
    dend_26 { pt3dadd( 30.6512, 20.3648, -59.8055, 0.15 ) }
    dend_26 { pt3dadd( 30.8975, 20.1976, -60.2171, 0.51 ) }
    dend_26 { pt3dadd( 32.0651, 19.256, -62.5574, 0.22 ) }
    dend_26 { pt3dadd( 32.8539, 18.4831, -64.4504, 0.22 ) }
    dend_26 { pt3dadd( 33.4171, 17.8349, -66.0801, 0.22 ) }
    dend_26 { pt3dadd( 33.6749, 17.4292, -67.0617, 0.95 ) }
    // Section: dend_21, id: dend_21, parent: dend_15 (entry count 36/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -1.74104, -21.7824, -41.4809, 0.59 ) }
    dend_21 { pt3dadd( -2.25662, -22.4529, -43.4814, 0.59 ) }
    dend_21 { pt3dadd( -2.48767, -22.7066, -44.3078, 1.1 ) }
    dend_21 { pt3dadd( -3.08784, -23.3735, -46.7012, 0.37 ) }
    dend_21 { pt3dadd( -3.70596, -24.097, -49.4181, 0.37 ) }
    dend_21 { pt3dadd( -4.16952, -24.6492, -51.516, 1.1 ) }
    dend_21 { pt3dadd( -4.72491, -25.3108, -54.0295, 1.1 ) }
    dend_21 { pt3dadd( -5.24041, -25.9142, -56.5089, 1.1 ) }
    dend_21 { pt3dadd( -5.74377, -26.4907, -59.0035, 1.18 ) }
    dend_21 { pt3dadd( -6.0501, -26.8356, -60.5028, 1.18 ) }
    dend_21 { pt3dadd( -6.33314, -27.1576, -61.9944, 1.18 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 47/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -1.74104, -21.7824, -41.4809, 0.51 ) }
    dend_16 { pt3dadd( -1.30539, -22.3398, -42.5135, 0.51 ) }
    dend_16 { pt3dadd( -0.950824, -22.8439, -43.4548, 0.88 ) }
    dend_16 { pt3dadd( -0.430056, -23.7305, -45.1428, 1.18 ) }
    dend_16 { pt3dadd( -0.138504, -24.2633, -46.2412, 0.37 ) }
    dend_16 { pt3dadd( 0.0941871, -24.675, -47.1503, 1.25 ) }
    dend_16 { pt3dadd( 0.459678, -25.2572, -48.516, 1.1 ) }
    dend_16 { pt3dadd( 0.611273, -25.5235, -49.1614, 1.1 ) }
    dend_16 { pt3dadd( 0.939952, -26.1233, -50.6613, 0.81 ) }
    dend_16 { pt3dadd( 1.29703, -26.7707, -52.4498, 0.51 ) }
    dend_16 { pt3dadd( 1.60721, -27.3262, -54.1136, 1.98 ) }
    dend_16 { pt3dadd( 1.78806, -27.5975, -55.0083, 1.98 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 59/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 14.726, -22.8988, -12.3221, 0.66 ) }
    dend_12 { pt3dadd( 15.7565, -22.866, -13.7717, 0.66 ) }
    dend_12 { pt3dadd( 16.7443, -22.8877, -15.0642, 0.66 ) }
    dend_12 { pt3dadd( 17.3996, -22.9354, -15.8714, 0.66 ) }
    dend_12 { pt3dadd( 18.4136, -23.0575, -17.1629, 0.88 ) }
    dend_12 { pt3dadd( 19.1066, -23.1503, -18.0821, 0.59 ) }
    dend_12 { pt3dadd( 19.7069, -23.2205, -18.8914, 0.88 ) }
    dend_12 { pt3dadd( 20.3487, -23.2997, -19.699, 0.88 ) }
    dend_12 { pt3dadd( 20.6581, -23.3304, -20.087, 0.88 ) }
    dend_12 { pt3dadd( 21.6987, -23.4115, -21.4155, 0.88 ) }
    dend_12 { pt3dadd( 22.2311, -23.4622, -22.127, 0.88 ) }
    dend_12 { pt3dadd( 23.1602, -23.5789, -23.4424, 1.03 ) }
    dend_12 { pt3dadd( 24.1137, -23.7351, -24.7284, 0.66 ) }
    dend_12 { pt3dadd( 24.8475, -23.8844, -25.6368, 0.66 ) }
    dend_12 { pt3dadd( 25.632, -24.0718, -26.5229, 0.81 ) }
    dend_12 { pt3dadd( 27.0795, -24.5323, -27.9509, 0.66 ) }
    dend_12 { pt3dadd( 27.5487, -24.713, -28.4513, 0.66 ) }
    dend_12 { pt3dadd( 28.1766, -25.0073, -29.162, 0.66 ) }
    dend_12 { pt3dadd( 28.6729, -25.2652, -29.7702, 1.98 ) }
    dend_12 { pt3dadd( 28.8717, -25.3708, -30.0167, 1.98 ) }
    dend_12 { pt3dadd( 30.2597, -26.148, -31.7802, 0.88 ) }
    dend_12 { pt3dadd( 32.2886, -27.352, -34.3983, 1.03 ) }
    dend_12 { pt3dadd( 32.6294, -27.5754, -34.8615, 1.25 ) }
    dend_12 { pt3dadd( 33.6168, -28.2791, -36.2906, 1.47 ) }
    dend_12 { pt3dadd( 34.0147, -28.5756, -36.9024, 1.62 ) }
    dend_12 { pt3dadd( 34.7429, -29.1075, -37.987, 1.03 ) }
    dend_12 { pt3dadd( 34.971, -29.2633, -38.3017, 1.18 ) }
    dend_12 { pt3dadd( 35.4364, -29.523, -38.8404, 1.18 ) }
    dend_12 { pt3dadd( 36.9471, -30.0586, -40.4682, 0.59 ) }
    dend_12 { pt3dadd( 37.9872, -30.1975, -41.4403, 0.59 ) }
    dend_12 { pt3dadd( 38.6906, -30.1728, -42.0061, 0.59 ) }
    dend_12 { pt3dadd( 39.4311, -30.0776, -42.4972, 0.37 ) }
    dend_12 { pt3dadd( 40.3224, -29.9453, -43.0687, 0.59 ) }
    dend_12 { pt3dadd( 41.0123, -29.8445, -43.6096, 0.22 ) }
    dend_12 { pt3dadd( 41.5871, -29.7861, -44.1465, 1.76 ) }
    dend_12 { pt3dadd( 42.521, -29.8158, -45.2932, 0.44 ) }
    dend_12 { pt3dadd( 43.3016, -29.9692, -46.5919, 0.37 ) }
    dend_12 { pt3dadd( 44.1294, -30.2237, -48.1755, 0.81 ) }
    dend_12 { pt3dadd( 45.2716, -30.7312, -50.7981, 0.37 ) }
    dend_12 { pt3dadd( 45.5058, -30.8714, -51.4734, 0.37 ) }
    dend_12 { pt3dadd( 45.8642, -31.1712, -52.885, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( 45.9623, -31.3194, -53.6222, 0.07 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 1/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 14.726, -22.8988, -12.3221, 1.1 ) }
    dend_11 { pt3dadd( 16.1681, -23.861, -11.8358, 1.1 ) }
    dend_11 { pt3dadd( 17.9983, -25.0195, -11.2505, 1.1 ) }
    dend_11 { pt3dadd( 19.3916, -25.8753, -10.802, 1.47 ) }
    dend_11 { pt3dadd( 20.7983, -26.7025, -10.3529, 1.76 ) }
    dend_11 { pt3dadd( 22.2724, -27.5429, -9.856, 0.66 ) }
    dend_11 { pt3dadd( 22.6499, -27.7531, -9.73919, 1.25 ) }
    dend_11 { pt3dadd( 23.6367, -28.274, -9.41278, 0.66 ) }
    dend_11 { pt3dadd( 24.7368, -28.8999, -8.96633, 1.25 ) }
    dend_11 { pt3dadd( 26.0467, -29.7464, -8.28091, 0.59 ) }
    dend_11 { pt3dadd( 26.9803, -30.521, -7.6336, 1.18 ) }
    dend_11 { pt3dadd( 27.7487, -31.3606, -6.92125, 1.18 ) }
    dend_11 { pt3dadd( 28.7961, -32.7516, -5.75842, 0.88 ) }
    dend_11 { pt3dadd( 29.6631, -34.1438, -4.62594, 1.47 ) }
    dend_11 { pt3dadd( 30.1631, -35.0809, -3.91071, 1.47 ) }
    dend_11 { pt3dadd( 31.0021, -36.812, -2.66095, 0.66 ) }
    dend_11 { pt3dadd( 31.6388, -38.0583, -1.8057, 0.66 ) }
    dend_11 { pt3dadd( 32.1145, -38.9152, -1.23763, 1.62 ) }
    dend_11 { pt3dadd( 32.4603, -39.4704, -0.916393, 1.62 ) }
    dend_11 { pt3dadd( 33.618, -41.0965, -0.0929388, 0.51 ) }
    dend_11 { pt3dadd( 34.5424, -42.3179, 0.443477, 0.51 ) }
    dend_11 { pt3dadd( 35.345, -43.3618, 0.828431, 0.07 ) }
    dend_11 { pt3dadd( 35.688, -43.8233, 0.977679, 0.73 ) }
    dend_11 { pt3dadd( 36.5569, -45.0116, 1.33306, 0.37 ) }
    dend_11 { pt3dadd( 37.2123, -45.9733, 1.59848, 0.66 ) }
    dend_11 { pt3dadd( 37.6429, -46.69, 1.77647, 0.66 ) }
    dend_11 { pt3dadd( 38.2517, -47.8695, 2.07988, 1.54 ) }
    dend_11 { pt3dadd( 38.4343, -48.2692, 2.18491, 1.54 ) }
    dend_11 { pt3dadd( 39.1896, -49.8885, 2.64437, 0.73 ) }
    dend_11 { pt3dadd( 39.8434, -51.2353, 3.10656, 0.22 ) }
    dend_11 { pt3dadd( 40.2906, -52.1436, 3.47361, 0.22 ) }
    dend_11 { pt3dadd( 40.8589, -53.242, 3.96683, 0.22 ) }
    dend_11 { pt3dadd( 41.5033, -54.3894, 4.53307, 0.88 ) }
    dend_11 { pt3dadd( 42.2021, -55.6065, 5.19689, 0.15 ) }
    dend_11 { pt3dadd( 42.9018, -56.8016, 5.9015, 0.88 ) }
    dend_11 { pt3dadd( 43.1852, -57.2476, 6.16468, 0.88 ) }
    dend_11 { pt3dadd( 43.7111, -58.0139, 6.60511, 1.03 ) }
    dend_11 { pt3dadd( 44.4319, -58.9824, 7.1746, 1.18 ) }
    dend_11 { pt3dadd( 45.2618, -60.052, 7.84109, 0.07 ) }
    dend_11 { pt3dadd( 45.528, -60.3929, 8.03642, 0.07 ) }
    dend_11 { pt3dadd( 45.9991, -60.9743, 8.31635, 0.66 ) }
    dend_11 { pt3dadd( 46.4894, -61.5752, 8.62616, 0.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 43/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -17.6341, -12.6396, -31.576, 1.25 ) }
    dend_7 { pt3dadd( -17.2635, -13.4139, -33.5666, 1.25 ) }
    dend_7 { pt3dadd( -16.5222, -14.814, -37.4303, 1.25 ) }
    dend_7 { pt3dadd( -16.1062, -15.6679, -39.6126, 1.03 ) }
    dend_7 { pt3dadd( -15.5475, -16.9232, -42.4933, 0.44 ) }
    dend_7 { pt3dadd( -14.9387, -18.3097, -45.4455, 0.73 ) }
    dend_7 { pt3dadd( -14.8375, -18.567, -45.9752, 0.73 ) }
    dend_7 { pt3dadd( -14.5259, -19.4911, -47.8899, 0.73 ) }
    dend_7 { pt3dadd( -14.2802, -20.3049, -49.5282, 1.4 ) }
    dend_7 { pt3dadd( -13.8376, -21.9083, -52.867, 0.44 ) }
    dend_7 { pt3dadd( -13.5704, -23.09, -55.3368, 1.25 ) }
    dend_7 { pt3dadd( -13.3356, -24.447, -58.112, 1.25 ) }
    dend_7 { pt3dadd( -12.8787, -27.436, -64.2085, 0.29 ) }
    dend_7 { pt3dadd( -12.712, -28.4971, -66.36, 0.95 ) }
    dend_7 { pt3dadd( -12.261, -30.9056, -71.3005, 1.25 ) }
    dend_7 { pt3dadd( -12.0795, -31.7351, -72.9417, 1.25 ) }
    dend_7 { pt3dadd( -11.9685, -32.235, -73.9016, 1.25 ) }
    dend_7 { pt3dadd( -11.8167, -32.7735, -74.8541, 1.25 ) }
    dend_7 { pt3dadd( -11.2477, -34.5203, -77.4027, 0.66 ) }
    dend_7 { pt3dadd( -10.9172, -35.4382, -78.5546, 0.22 ) }
    dend_7 { pt3dadd( -10.4769, -36.274, -79.1886, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 64/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -17.6341, -12.6396, -31.576, 1.18 ) }
    dend_6 { pt3dadd( -18.9023, -13.0636, -31.6993, 1.18 ) }
    dend_6 { pt3dadd( -20.4355, -13.4648, -31.6506, 1.18 ) }
    dend_6 { pt3dadd( -21.5537, -13.7395, -31.4841, 1.18 ) }
    dend_6 { pt3dadd( -22.8246, -14.0729, -31.2246, 1.76 ) }
    dend_6 { pt3dadd( -24.0567, -14.4348, -30.9424, 1.03 ) }
    dend_6 { pt3dadd( -25.124, -14.7917, -30.6928, 1.25 ) }
    dend_6 { pt3dadd( -26.2128, -15.1347, -30.3982, 0.88 ) }
    dend_6 { pt3dadd( -27.4214, -15.4643, -30.0034, 0.73 ) }
    dend_6 { pt3dadd( -28.3919, -15.6878, -29.6475, 1.03 ) }
    dend_6 { pt3dadd( -29.2643, -15.8386, -29.3343, 1.91 ) }
    dend_6 { pt3dadd( -30.6826, -15.9968, -28.8918, 2.79 ) }
    dend_6 { pt3dadd( -31.7927, -15.9473, -28.6029, 1.47 ) }
    dend_6 { pt3dadd( -32.8747, -15.6115, -28.3951, 0.66 ) }
    dend_6 { pt3dadd( -33.8203, -15.066, -28.2438, 0.66 ) }
    dend_6 { pt3dadd( -34.4596, -14.5882, -28.1498, 1.4 ) }
    dend_6 { pt3dadd( -34.9439, -14.1875, -28.0904, 1.47 ) }
    dend_6 { pt3dadd( -35.9913, -13.2861, -27.9889, 0.73 ) }
    dend_6 { pt3dadd( -36.7544, -12.6911, -27.9489, 0.51 ) }
    dend_6 { pt3dadd( -37.3576, -12.3111, -27.9431, 0.51 ) }
    dend_6 { pt3dadd( -38.2698, -11.8229, -27.9618, 1.32 ) }
    dend_6 { pt3dadd( -39.1385, -11.4107, -27.9699, 1.47 ) }
    dend_6 { pt3dadd( -39.5623, -11.2256, -27.9671, 1.47 ) }
    dend_6 { pt3dadd( -40.2909, -10.9315, -27.9566, 1.1 ) }
    dend_6 { pt3dadd( -41.3003, -10.4754, -27.9323, 0.37 ) }
    dend_6 { pt3dadd( -41.8187, -10.1982, -27.9326, 0.37 ) }
    dend_6 { pt3dadd( -42.4889, -9.78975, -27.9511, 0.59 ) }
    dend_6 { pt3dadd( -43.4026, -9.22264, -28.0298, 0.59 ) }
    dend_6 { pt3dadd( -43.6671, -9.07817, -28.0701, 0.59 ) }
    dend_6 { pt3dadd( -44.3395, -8.80904, -28.2227, 0.22 ) }
    dend_6 { pt3dadd( -44.9845, -8.66598, -28.4529, 0.22 ) }
    dend_6 { pt3dadd( -45.4273, -8.62897, -28.6421, 0.22 ) }
    dend_6 { pt3dadd( -46.3819, -8.63453, -29.0933, 0.66 ) }
    dend_6 { pt3dadd( -47.1805, -8.66442, -29.483, 0.07 ) }
    dend_6 { pt3dadd( -47.7826, -8.6906, -29.7516, 0.51 ) }
    dend_6 { pt3dadd( -48.7594, -8.74197, -30.1765, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_6 { pt3dadd( -49.2566, -8.75333, -30.393, 1.76 ) }
    dend_6 { pt3dadd( -49.6545, -8.73252, -30.5787, 1.76 ) }
    dend_6 { pt3dadd( -50.4713, -8.60394, -30.9777, 0.88 ) }
    dend_6 { pt3dadd( -51.0612, -8.46737, -31.2913, 0.59 ) }
    dend_6 { pt3dadd( -51.6864, -8.31215, -31.6284, 0.29 ) }
    dend_6 { pt3dadd( -52.1921, -8.20932, -31.9326, 0.29 ) }
    dend_6 { pt3dadd( -52.6521, -8.1439, -32.2455, 0.29 ) }
    dend_6 { pt3dadd( -53.0745, -8.12631, -32.6147, 0.15 ) }
    dend_6 { pt3dadd( -53.5238, -8.13162, -33.1184, 0.15 ) }
    dend_6 { pt3dadd( -53.7807, -8.13809, -33.473, 0.15 ) }
    dend_6 { pt3dadd( -54.5178, -8.13344, -34.5785, 0.15 ) }
    dend_6 { pt3dadd( -54.6983, -8.1176, -34.8823, 0.73 ) }
    dend_6 { pt3dadd( -55.4568, -7.97014, -36.2566, 0.15 ) }
    dend_6 { pt3dadd( -55.7323, -7.87173, -36.7903, 0.15 ) }
    dend_6 { pt3dadd( -56.1691, -7.6154, -37.6708, 0.15 ) }
    dend_6 { pt3dadd( -56.4067, -7.40766, -38.1161, 0.81 ) }
    dend_6 { pt3dadd( -56.8663, -6.86843, -38.7152, 0.22 ) }
    dend_6 { pt3dadd( -57.1657, -6.4524, -39.0408, 0.22 ) }
    dend_6 { pt3dadd( -57.4725, -5.97292, -39.1454, 0.44 ) }
    dend_6 { pt3dadd( -57.577, -5.8174, -39.126, 0.44 ) }
    dend_6 { pt3dadd( -58.3406, -4.78586, -38.5826, 0.07 ) }
    dend_6 { pt3dadd( -58.7052, -4.39885, -38.1926, 0.73 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 22/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 34.2927, -23.8674, -49.8346, 0.59 ) }
    dend_42 { pt3dadd( 34.5813, -24.617, -50.7722, 0.59 ) }
    dend_42 { pt3dadd( 34.992, -25.7779, -52.2172, 0.44 ) }
    dend_42 { pt3dadd( 35.4369, -27.2519, -54.0689, 1.1 ) }
    dend_42 { pt3dadd( 35.8186, -28.5611, -55.8359, 0.95 ) }
    dend_42 { pt3dadd( 36.2856, -30.2871, -58.2322, 0.22 ) }
    dend_42 { pt3dadd( 36.4038, -30.8273, -58.9769, 0.88 ) }
    dend_42 { pt3dadd( 36.5566, -31.833, -60.3817, 0.22 ) }
    dend_42 { pt3dadd( 36.678, -33.1567, -62.2143, 0.22 ) }
    dend_42 { pt3dadd( 36.8049, -34.9808, -64.8237, 1.62 ) }
    dend_42 { pt3dadd( 36.8608, -35.686, -65.8297, 1.47 ) }
    dend_42 { pt3dadd( 37.0402, -37.5921, -68.4671, 0.37 ) }
    dend_42 { pt3dadd( 37.2142, -38.9671, -70.4372, 0.59 ) }
    dend_42 { pt3dadd( 37.3995, -40.1608, -72.1628, 0.15 ) }
    dend_42 { pt3dadd( 37.6524, -41.6605, -74.2844, 0.95 ) }
    dend_42 { pt3dadd( 37.7936, -42.5625, -75.4967, 0.07 ) }
    dend_42 { pt3dadd( 37.8922, -43.1612, -76.2659, 0.95 ) }
    dend_42 { pt3dadd( 38.3211, -45.3337, -79.0908, 0.22 ) }
    dend_42 { pt3dadd( 38.6208, -46.8684, -81.0549, 0.29 ) }
    dend_42 { pt3dadd( 38.7717, -47.9076, -82.2999, 0.51 ) }
    dend_42 { pt3dadd( 38.8167, -48.6255, -83.0848, 0.15 ) }
    dend_42 { pt3dadd( 38.8195, -49.5877, -84.1131, 0.66 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 44/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 34.2927, -23.8674, -49.8346, 0.07 ) }
    dend_41 { pt3dadd( 35.1648, -24.4758, -49.3817, 0.07 ) }
    dend_41 { pt3dadd( 35.8479, -24.8786, -49.0143, 0.07 ) }
    dend_41 { pt3dadd( 36.545, -25.2895, -48.6394, 0.22 ) }
    dend_41 { pt3dadd( 37.5145, -25.8612, -48.118, 0.59 ) }
    dend_41 { pt3dadd( 39.3201, -26.9257, -47.1469, 0.29 ) }
    dend_41 { pt3dadd( 40.1488, -27.4143, -46.7013, 0.29 ) }
    dend_41 { pt3dadd( 40.8796, -27.801, -46.2652, 0.07 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 52/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 12.418, 4.31871, -19.1437, 0.81 ) }
    dend_35 { pt3dadd( 12.4346, 4.80045, -21.4944, 0.81 ) }
    dend_35 { pt3dadd( 12.5471, 5.19071, -23.0427, 0.81 ) }
    dend_35 { pt3dadd( 12.745, 5.51199, -24.1186, 0.81 ) }
    dend_35 { pt3dadd( 13.4263, 6.38713, -26.5011, 0.81 ) }
    dend_35 { pt3dadd( 13.6019, 6.61149, -26.9824, 1.25 ) }
    dend_35 { pt3dadd( 13.7492, 6.79999, -27.2884, 1.25 ) }
    dend_35 { pt3dadd( 14.449, 7.6139, -28.22, 0.95 ) }
    dend_35 { pt3dadd( 15.4627, 8.7198, -29.1219, 0.95 ) }
    dend_35 { pt3dadd( 16.1421, 9.42451, -29.5137, 1.25 ) }
    dend_35 { pt3dadd( 16.9766, 10.2918, -29.7614, 1.25 ) }
    dend_35 { pt3dadd( 18.0659, 11.4053, -30.0596, 1.4 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 64/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 12.418, 4.31871, -19.1437, 0.59 ) }
    dend_32 { pt3dadd( 12.4882, 4.02657, -21.0796, 0.59 ) }
    dend_32 { pt3dadd( 12.5116, 3.65464, -22.8721, 0.59 ) }
    dend_32 { pt3dadd( 12.5441, 3.32728, -24.2898, 0.59 ) }
    dend_32 { pt3dadd( 12.5934, 2.90073, -26.0793, 0.59 ) }
    dend_32 { pt3dadd( 12.6199, 2.26676, -28.7548, 0.59 ) }
    dend_32 { pt3dadd( 12.5919, 1.84999, -30.5687, 0.59 ) }
    dend_32 { pt3dadd( 12.4729, 1.54598, -32.0677, 0.59 ) }
    dend_32 { pt3dadd( 12.4013, 1.41974, -32.6446, 0.59 ) }
    dend_32 { pt3dadd( 12.3605, 1.34149, -32.9673, 0.59 ) }
    dend_32 { pt3dadd( 12.1861, 1.03329, -34.2269, 0.59 ) }
    dend_32 { pt3dadd( 12.0523, 0.927365, -34.9682, 0.59 ) }
    dend_32 { pt3dadd( 11.5919, 1.19922, -36.961, 0.59 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 77/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 26.515, 32.4198, -15.2024, 0.59 ) }
    dend_29 { pt3dadd( 27.0814, 32.8564, -16.6926, 0.59 ) }
    dend_29 { pt3dadd( 27.5202, 33.1028, -17.88, 0.59 ) }
    dend_29 { pt3dadd( 27.9524, 33.2739, -19.119, 0.59 ) }
    dend_29 { pt3dadd( 28.3029, 33.3811, -20.2844, 0.59 ) }
    dend_29 { pt3dadd( 28.6996, 33.4821, -21.8155, 0.59 ) }
    dend_29 { pt3dadd( 28.9372, 33.5353, -22.8171, 0.59 ) }
    dend_29 { pt3dadd( 29.2261, 33.5369, -24.0472, 0.59 ) }
    dend_29 { pt3dadd( 29.4044, 33.5082, -24.7551, 0.59 ) }
    dend_29 { pt3dadd( 29.6659, 33.4046, -25.9309, 0.59 ) }
    dend_29 { pt3dadd( 29.7291, 33.2641, -26.9088, 0.59 ) }
    dend_29 { pt3dadd( 30.0954, 33.437, -25.9518, 0.59 ) }
    dend_29 { pt3dadd( 30.6232, 33.5519, -25.2136, 0.29 ) }
    dend_29 { pt3dadd( 31.2346, 33.6356, -24.519, 0.29 ) }
    dend_29 { pt3dadd( 32.4667, 33.805, -23.0934, 0.29 ) }
    dend_29 { pt3dadd( 33.4401, 33.9274, -21.9222, 0.29 ) }
    dend_29 { pt3dadd( 34.2709, 34.0142, -20.8459, 0.29 ) }
    dend_29 { pt3dadd( 34.7421, 34.0495, -20.1905, 0.29 ) }
    dend_29 { pt3dadd( 35.1175, 34.0584, -19.6907, 0.29 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 96/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 26.515, 32.4198, -15.2024, 0.66 ) }
    dend_28 { pt3dadd( 26.5644, 32.214, -15.7031, 0.66 ) }
    dend_28 { pt3dadd( 27.0115, 30.9382, -19.1034, 0.51 ) }
    dend_28 { pt3dadd( 27.3456, 30.1991, -21.0973, 0.51 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_28 { pt3dadd( 27.7953, 29.5172, -23.045, 0.51 ) }
    dend_28 { pt3dadd( 28.0967, 29.1853, -24.1039, 0.51 ) }
    dend_28 { pt3dadd( 28.2768, 29.0279, -24.6354, 0.51 ) }
    dend_28 { pt3dadd( 28.9154, 28.7232, -25.9383, 0.51 ) }
    dend_28 { pt3dadd( 29.3706, 28.6551, -26.4427, 0.44 ) }
    dend_28 { pt3dadd( 30.8285, 28.6112, -27.5721, 0.44 ) }
    dend_28 { pt3dadd( 31.7411, 28.636, -28.1596, 0.15 ) }
    dend_28 { pt3dadd( 32.4053, 28.6486, -28.5308, 0.37 ) }
    dend_28 { pt3dadd( 33.6994, 28.6234, -29.1579, 0.07 ) }
    dend_28 { pt3dadd( 35.261, 28.555, -29.7685, 0.95 ) }
    dend_28 { pt3dadd( 37.095, 28.4263, -30.3897, 0.07 ) }
    dend_28 { pt3dadd( 37.3764, 28.393, -30.4606, 0.66 ) }
    dend_28 { pt3dadd( 38.7605, 28.1616, -30.7767, 0.15 ) }
    dend_28 { pt3dadd( 39.3535, 28.0463, -30.912, 0.15 ) }
    dend_28 { pt3dadd( 39.9331, 27.8983, -31.0269, 0.73 ) }
    dend_28 { pt3dadd( 40.6841, 27.6729, -31.1251, 0.73 ) }
    dend_28 { pt3dadd( 41.1521, 27.5215, -31.1612, 0.73 ) }
    dend_28 { pt3dadd( 42.3926, 27.1005, -31.2913, 0.29 ) }
    dend_28 { pt3dadd( 42.8031, 26.9555, -31.3563, 0.29 ) }
    dend_28 { pt3dadd( 43.2919, 26.7902, -31.4574, 0.29 ) }
    dend_28 { pt3dadd( 44.5156, 26.3752, -31.7719, 0.88 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 21/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -6.33314, -27.1576, -61.9944, 0.51 ) }
    dend_23 { pt3dadd( -6.65082, -27.0154, -62.987, 0.51 ) }
    dend_23 { pt3dadd( -6.9964, -26.8134, -64.1555, 0.51 ) }
    dend_23 { pt3dadd( -7.34774, -26.5321, -65.4631, 0.51 ) }
    dend_23 { pt3dadd( -7.83093, -25.9217, -67.5323, 0.51 ) }
    dend_23 { pt3dadd( -8.00507, -25.534, -68.4703, 0.51 ) }
    dend_23 { pt3dadd( -8.16368, -24.7303, -69.7559, 0.51 ) }
    dend_23 { pt3dadd( -8.12679, -24.244, -70.2277, 0.15 ) }
    dend_23 { pt3dadd( -8.02317, -23.7928, -70.6044, 0.15 ) }
    dend_23 { pt3dadd( -7.82446, -23.0204, -71.3074, 0.15 ) }
    dend_23 { pt3dadd( -7.66233, -22.3275, -71.9638, 0.51 ) }
    dend_23 { pt3dadd( -7.52782, -21.607, -72.781, 0.51 ) }
    dend_23 { pt3dadd( -7.31834, -20.4028, -74.3268, 0.22 ) }
    dend_23 { pt3dadd( -7.19897, -19.6471, -75.4244, 0.22 ) }
    dend_23 { pt3dadd( -7.08676, -18.8784, -76.7028, 0.22 ) }
    dend_23 { pt3dadd( -7.04057, -18.5531, -77.3433, 0.22 ) }
    dend_23 { pt3dadd( -6.96861, -18.0754, -78.4151, 0.22 ) }
    dend_23 { pt3dadd( -6.90275, -17.8242, -78.9777, 0.22 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 39/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -6.33314, -27.1576, -61.9944, 0.44 ) }
    dend_22 { pt3dadd( -6.84725, -27.714, -63.5024, 0.44 ) }
    dend_22 { pt3dadd( -7.52076, -28.2626, -64.8575, 0.44 ) }
    dend_22 { pt3dadd( -8.25552, -28.8272, -66.1939, 0.44 ) }
    dend_22 { pt3dadd( -8.94857, -29.3597, -67.4543, 0.44 ) }
    dend_22 { pt3dadd( -9.45137, -29.746, -68.3688, 0.37 ) }
    dend_22 { pt3dadd( -10.2326, -30.3463, -69.7895, 0.22 ) }
    dend_22 { pt3dadd( -11.1605, -30.9126, -71.1371, 0.22 ) }
    dend_22 { pt3dadd( -12.2456, -31.4767, -72.3967, 0.22 ) }
    // Section: dend_20, id: dend_20, parent: dend_16 (entry count 48/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 1.78806, -27.5975, -55.0083, 0.88 ) }
    dend_20 { pt3dadd( 2.11362, -28.4597, -57.5874, 0.88 ) }
    dend_20 { pt3dadd( 2.37356, -29.0819, -59.1855, 0.88 ) }
    dend_20 { pt3dadd( 2.69375, -29.7454, -60.9659, 0.88 ) }
    dend_20 { pt3dadd( 3.00883, -30.3585, -62.5694, 0.51 ) }
    dend_20 { pt3dadd( 3.35856, -30.9659, -64.2344, 0.29 ) }
    dend_20 { pt3dadd( 3.61209, -31.3676, -65.4172, 0.88 ) }
    dend_20 { pt3dadd( 3.95031, -31.8386, -66.7832, 1.25 ) }
    dend_20 { pt3dadd( 4.6713, -32.7414, -69.5535, 1.25 ) }
    dend_20 { pt3dadd( 5.1955, -33.4079, -71.6567, 0.51 ) }
    dend_20 { pt3dadd( 5.8047, -34.2284, -74.243, 0.51 ) }
    dend_20 { pt3dadd( 6.37966, -35.0987, -76.8033, 0.29 ) }
    dend_20 { pt3dadd( 6.59651, -35.4919, -77.8851, 0.88 ) }
    dend_20 { pt3dadd( 6.94166, -36.1262, -79.6193, 0.88 ) }
    dend_20 { pt3dadd( 7.28185, -36.8458, -81.3619, 0.15 ) }
    dend_20 { pt3dadd( 7.40571, -37.1576, -82.0677, 0.44 ) }
    dend_20 { pt3dadd( 7.59586, -37.8949, -83.3683, 0.07 ) }
    dend_20 { pt3dadd( 7.69869, -38.5943, -84.3115, 0.88 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 1.78806, -27.5975, -55.0083, 0.37 ) }
    dend_17 { pt3dadd( 3.63236, -26.6139, -56.1177, 0.37 ) }
    dend_17 { pt3dadd( 5.0697, -25.8294, -56.7152, 0.37 ) }
    dend_17 { pt3dadd( 6.0551, -25.2797, -57.07, 0.66 ) }
    dend_17 { pt3dadd( 7.40407, -24.5168, -57.5726, 0.66 ) }
    dend_17 { pt3dadd( 8.80851, -23.7374, -58.1593, 0.29 ) }
    dend_17 { pt3dadd( 10.2595, -22.8995, -58.8416, 0.44 ) }
    dend_17 { pt3dadd( 11.791, -21.9512, -59.5294, 1.1 ) }
    dend_17 { pt3dadd( 13.7957, -20.7242, -60.335, 0.44 ) }
    dend_17 { pt3dadd( 14.9089, -20.0671, -60.7817, 1.03 ) }
    dend_17 { pt3dadd( 16.5129, -19.1368, -61.5476, 1.25 ) }
    dend_17 { pt3dadd( 17.7991, -18.3658, -62.3136, 0.37 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 78/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 18.0659, 11.4053, -30.0596, 0.95 ) }
    dend_39 { pt3dadd( 18.2333, 11.4262, -29.4084, 0.95 ) }
    dend_39 { pt3dadd( 18.5984, 11.4426, -27.8866, 0.81 ) }
    dend_39 { pt3dadd( 19.1064, 11.3834, -25.8817, 0.66 ) }
    dend_39 { pt3dadd( 19.3521, 11.3412, -25.0262, 0.66 ) }
    dend_39 { pt3dadd( 19.6145, 11.2918, -24.2165, 0.66 ) }
    dend_39 { pt3dadd( 19.7622, 11.2543, -23.7782, 0.66 ) }
    dend_39 { pt3dadd( 19.8394, 11.2217, -23.5491, 0.66 ) }
    dend_39 { pt3dadd( 20.2223, 11.0305, -22.4951, 0.59 ) }
    dend_39 { pt3dadd( 20.7201, 10.7971, -21.2378, 0.59 ) }
    dend_39 { pt3dadd( 21.7675, 10.3693, -18.661, 0.22 ) }
    dend_39 { pt3dadd( 22.5438, 10.1099, -16.7814, 0.22 ) }
    dend_39 { pt3dadd( 23.2044, 9.92645, -15.1754, 0.22 ) }
    dend_39 { pt3dadd( 23.3925, 9.87799, -14.7071, 0.44 ) }
    dend_39 { pt3dadd( 23.8809, 9.7455, -13.4741, 0.29 ) }
    dend_39 { pt3dadd( 24.3476, 9.59566, -12.3283, 0.29 ) }
    dend_39 { pt3dadd( 24.7668, 9.44214, -11.3581, 0.29 ) }
    dend_39 { pt3dadd( 25.1522, 9.31845, -10.5019, 0.29 ) }
    dend_39 { pt3dadd( 25.5274, 9.20437, -9.68047, 0.29 ) }
    dend_39 { pt3dadd( 25.8706, 9.06944, -8.91133, 0.29 ) }
    dend_39 { pt3dadd( 26.1704, 8.89862, -8.26949, 0.59 ) }
    dend_39 { pt3dadd( 27.2443, 8.15641, -6.20938, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 0/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 18.0659, 11.4053, -30.0596, 0.81 ) }
    dend_36 { pt3dadd( 19.1103, 10.8972, -33.8331, 0.81 ) }
    dend_36 { pt3dadd( 19.4453, 10.7399, -35.2457, 0.81 ) }
    dend_36 { pt3dadd( 19.9011, 10.4644, -37.8203, 0.81 ) }
    dend_36 { pt3dadd( 20.4275, 10.0308, -41.4843, 0.81 ) }
    dend_36 { pt3dadd( 20.5244, 9.93195, -42.2811, 0.81 ) }
    dend_36 { pt3dadd( 20.6335, 9.81775, -43.2248, 0.81 ) }
    dend_36 { pt3dadd( 20.7572, 9.7191, -44.5097, 0.73 ) }
    dend_36 { pt3dadd( 20.8785, 9.6325, -46.1938, 0.73 ) }
    dend_36 { pt3dadd( 20.8899, 9.60504, -46.8324, 0.73 ) }
    dend_36 { pt3dadd( 20.7402, 9.38911, -49.2766, 0.73 ) }
    dend_36 { pt3dadd( 20.7027, 9.22789, -50.5419, 0.73 ) }
    dend_36 { pt3dadd( 20.7797, 9.0491, -51.8609, 0.73 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 13/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 11.5919, 1.19922, -36.961, 0.59 ) }
    dend_34 { pt3dadd( 10.2484, 1.47737, -37.3158, 0.59 ) }
    dend_34 { pt3dadd( 8.79842, 1.83891, -37.575, 0.59 ) }
    dend_34 { pt3dadd( 7.68919, 2.11506, -37.7267, 0.59 ) }
    dend_34 { pt3dadd( 6.52318, 2.38605, -37.8579, 0.59 ) }
    dend_34 { pt3dadd( 5.22712, 2.64728, -37.8569, 0.37 ) }
    dend_34 { pt3dadd( 3.63032, 2.89219, -37.6656, 0.15 ) }
    dend_34 { pt3dadd( 2.2736, 2.96467, -37.2471, 0.15 ) }
    dend_34 { pt3dadd( 1.58284, 2.93583, -36.9012, 0.44 ) }
    dend_34 { pt3dadd( 0.425249, 2.73432, -36.1059, 1.03 ) }
    dend_34 { pt3dadd( -1.47338, 2.00815, -34.3747, 0.37 ) }
    dend_34 { pt3dadd( -2.63196, 1.37812, -33.0736, 0.37 ) }
    dend_34 { pt3dadd( -3.73064, 0.512821, -31.5759, 0.15 ) }
    dend_34 { pt3dadd( -4.36357, -0.172546, -30.55, 0.15 ) }
    dend_34 { pt3dadd( -4.63382, -0.565681, -29.9843, 0.37 ) }
    dend_34 { pt3dadd( -4.85184, -1.15622, -29.2448, 0.07 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 29/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 11.5919, 1.19922, -36.961, 0.22 ) }
    dend_33 { pt3dadd( 11.4711, 1.11383, -38.2213, 0.22 ) }
    dend_33 { pt3dadd( 11.2476, 1.05521, -39.9324, 0.22 ) }
    dend_33 { pt3dadd( 10.9508, 1.07655, -41.8181, 0.22 ) }
    dend_33 { pt3dadd( 10.2583, 1.35057, -45.4437, 0.22 ) }
    dend_33 { pt3dadd( 9.97938, 1.52801, -46.6991, 0.95 ) }
    dend_33 { pt3dadd( 9.72676, 1.76396, -47.7218, 0.95 ) }
    dend_33 { pt3dadd( 9.28834, 2.33477, -49.0413, 0.95 ) }
    dend_33 { pt3dadd( 8.97218, 2.9548, -49.7637, 0.59 ) }
    dend_33 { pt3dadd( 8.48591, 4.45798, -50.5628, 0.51 ) }
    dend_33 { pt3dadd( 8.31374, 5.22783, -50.7529, 0.51 ) }
    dend_33 { pt3dadd( 8.01786, 6.77453, -50.9128, 0.37 ) }
    dend_33 { pt3dadd( 7.8208, 7.8562, -50.9716, 0.37 ) }
    dend_33 { pt3dadd( 7.67907, 8.62737, -51.0124, 0.37 ) }
    dend_33 { pt3dadd( 7.52914, 9.34536, -51.0941, 0.37 ) }
    dend_33 { pt3dadd( 7.36609, 9.94005, -51.2135, 0.37 ) }
    dend_33 { pt3dadd( 6.66458, 11.4838, -51.6154, 0.37 ) }
    dend_33 { pt3dadd( 5.73739, 12.5601, -52.0753, 0.37 ) }
    dend_33 { pt3dadd( 4.91301, 13.0788, -52.4451, 0.37 ) }
    dend_33 { pt3dadd( 4.58099, 13.1838, -52.6003, 0.37 ) }
    dend_33 { pt3dadd( 3.74871, 13.2063, -53.085, 0.22 ) }
    dend_33 { pt3dadd( 3.31424, 13.0906, -53.4551, 0.37 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 51/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 17.7991, -18.3658, -62.3136, 0.22 ) }
    dend_19 { pt3dadd( 18.1773, -18.432, -63.2816, 0.22 ) }
    dend_19 { pt3dadd( 18.8145, -18.5576, -64.9863, 0.81 ) }
    dend_19 { pt3dadd( 19.7076, -18.6835, -67.8652, 0.59 ) }
    dend_19 { pt3dadd( 20.2591, -18.7225, -69.9216, 0.37 ) }
    dend_19 { pt3dadd( 20.5623, -18.7043, -71.1635, 0.37 ) }
    dend_19 { pt3dadd( 20.7328, -18.6941, -71.862, 0.66 ) }
    dend_19 { pt3dadd( 21.4602, -18.667, -75.3333, 0.44 ) }
    dend_19 { pt3dadd( 21.8791, -18.6444, -77.7071, 0.44 ) }
    dend_19 { pt3dadd( 22.1452, -18.5528, -79.3223, 0.44 ) }
    dend_19 { pt3dadd( 22.3989, -18.3215, -81.3197, 0.44 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 62/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 17.7991, -18.3658, -62.3136, 0.37 ) }
    dend_18 { pt3dadd( 18.2313, -17.6257, -62.3873, 0.37 ) }
    dend_18 { pt3dadd( 18.6424, -16.9337, -62.3959, 0.73 ) }
    dend_18 { pt3dadd( 19.1363, -16.0695, -62.4375, 0.73 ) }
    dend_18 { pt3dadd( 19.9207, -14.6523, -62.5331, 0.37 ) }
    dend_18 { pt3dadd( 20.5827, -13.478, -62.6296, 1.03 ) }
    dend_18 { pt3dadd( 21.3102, -12.2552, -62.747, 0.22 ) }
    dend_18 { pt3dadd( 21.9324, -11.3584, -62.8563, 0.22 ) }
    dend_18 { pt3dadd( 22.8304, -10.2711, -63.0601, 0.22 ) }
    dend_18 { pt3dadd( 23.2356, -9.88173, -63.1679, 0.22 ) }
    dend_18 { pt3dadd( 23.7184, -9.50572, -63.3101, 0.22 ) }
    dend_18 { pt3dadd( 24.3672, -9.09593, -63.5828, 0.22 ) }
    dend_18 { pt3dadd( 25.6246, -8.44002, -64.2797, 0.22 ) }
    dend_18 { pt3dadd( 26.6048, -8.00057, -64.9678, 0.66 ) }
    dend_18 { pt3dadd( 27.9711, -7.43037, -66.0061, 0.22 ) }
    dend_18 { pt3dadd( 28.5083, -7.19651, -66.5016, 0.51 ) }
    dend_18 { pt3dadd( 30.1921, -6.39008, -68.393, 0.22 ) }
    dend_18 { pt3dadd( 31.3554, -5.7692, -69.9064, 0.44 ) }
    dend_18 { pt3dadd( 32.3654, -5.18371, -71.2928, 0.44 ) }
    dend_18 { pt3dadd( 32.9904, -4.78899, -72.1592, 0.22 ) }
    dend_18 { pt3dadd( 34.3838, -3.79791, -74.0524, 0.22 ) }
    dend_18 { pt3dadd( 35.2542, -3.11293, -75.0667, 0.22 ) }
    dend_18 { pt3dadd( 35.7408, -2.63071, -75.205, 0.22 ) }
    dend_18 { pt3dadd( 36.9101, -1.31535, -74.376, 0.22 ) }
    dend_18 { pt3dadd( 37.8085, -0.264365, -73.4078, 0.22 ) }
    dend_18 { pt3dadd( 38.3521, 0.368932, -72.7255, 0.22 ) }
    dend_18 { pt3dadd( 39.2069, 1.36595, -71.4902, 0.22 ) }
    dend_18 { pt3dadd( 39.9147, 2.19833, -70.3858, 0.22 ) }
    dend_18 { pt3dadd( 40.7589, 3.23027, -69.0355, 0.22 ) }
    dend_18 { pt3dadd( 41.3869, 4.08436, -68.0482, 0.73 ) }
    dend_18 { pt3dadd( 41.7477, 4.59884, -67.5203, 0.73 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 93/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 20.7797, 9.0491, -51.8609, 0.73 ) }
    dend_38 { pt3dadd( 20.4685, 9.88106, -51.785, 0.73 ) }
    dend_38 { pt3dadd( 20.0346, 11.0108, -51.5082, 0.73 ) }
    dend_38 { pt3dadd( 19.6841, 12.0439, -51.1831, 0.73 ) }
    dend_38 { pt3dadd( 19.2763, 13.3462, -50.6821, 0.37 ) }
    dend_38 { pt3dadd( 18.9297, 14.488, -50.1594, 0.37 ) }
    dend_38 { pt3dadd( 18.682, 15.2519, -49.7176, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_38 { pt3dadd( 18.4286, 16.0058, -49.1176, 0.37 ) }
    dend_38 { pt3dadd( 18.3069, 16.3531, -48.7316, 0.37 ) }
    dend_38 { pt3dadd( 18.2152, 16.6068, -48.3476, 0.37 ) }
    dend_38 { pt3dadd( 18.1413, 16.7969, -48.0283, 0.37 ) }
    dend_38 { pt3dadd( 17.8619, 17.2794, -47.2609, 0.37 ) }
    dend_38 { pt3dadd( 17.5839, 17.5745, -46.7944, 0.37 ) }
    dend_38 { pt3dadd( 16.9345, 18.1651, -45.9282, 0.37 ) }
    dend_38 { pt3dadd( 16.5202, 18.5202, -45.4407, 0.22 ) }
    dend_38 { pt3dadd( 16.1151, 18.8688, -45.0158, 0.22 ) }
    dend_38 { pt3dadd( 15.4142, 19.4483, -44.3651, 0.22 ) }
    dend_38 { pt3dadd( 14.8289, 19.8373, -43.9314, 0.22 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 11/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 20.7797, 9.0491, -51.8609, 0.44 ) }
    dend_37 { pt3dadd( 21.8778, 8.88032, -52.1922, 0.44 ) }
    dend_37 { pt3dadd( 23.7863, 8.64759, -52.5516, 0.73 ) }
    dend_37 { pt3dadd( 24.973, 8.54332, -52.5849, 0.51 ) }
    dend_37 { pt3dadd( 26.3803, 8.46108, -52.3873, 0.66 ) }
    dend_37 { pt3dadd( 27.7966, 8.39028, -52.0537, 0.37 ) }
    dend_37 { pt3dadd( 28.7287, 8.35042, -51.811, 0.88 ) }
    dend_37 { pt3dadd( 29.4962, 8.33482, -51.538, 0.88 ) }
    dend_37 { pt3dadd( 30.9137, 8.32067, -50.913, 0.51 ) }
    dend_37 { pt3dadd( 32.0824, 8.30302, -50.3835, 0.15 ) }
    dend_37 { pt3dadd( 32.8926, 8.29496, -49.9795, 0.15 ) }
    dend_37 { pt3dadd( 33.6019, 8.26826, -49.685, 0.15 ) }
    dend_37 { pt3dadd( 34.2263, 8.23296, -49.4705, 0.15 ) }
    dend_37 { pt3dadd( 35.021, 8.13564, -49.3688, 0.15 ) }
    dend_37 { pt3dadd( 35.5475, 8.03988, -49.4681, 0.44 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_24, dend_13, dend_8, dend_3, dend_0, dend_30, dend_25, dend_15, dend_14, dend_10, dend_9, dend_5, dend_4, dend_2, dend_1, dend_40, dend_31, dend_27, dend_26, dend_21, dend_16, dend_12, dend_11, dend_7, dend_6, dend_42, dend_41, dend_35, dend_32, dend_29, dend_28, dend_23, dend_22, dend_20, dend_17, dend_39, dend_36, dend_34, dend_33, dend_19, dend_18, dend_38, dend_37]}
    ModelViewParmSubset_2 = new SectionList()
    dend_24 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_24, dend_13, dend_8, dend_3, dend_0, dend_30, dend_25, dend_15, dend_14, dend_10, dend_9, dend_5, dend_4, dend_2, dend_1, dend_40, dend_31, dend_27, dend_26, dend_21, dend_16, dend_12, dend_11, dend_7, dend_6, dend_42, dend_41, dend_35, dend_32, dend_29, dend_28, dend_23, dend_22, dend_20, dend_17, dend_39, dend_36, dend_34, dend_33, dend_19, dend_18, dend_38, dend_37]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_14 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_4 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_40 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_26 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_12 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_11 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_7 OneSecGrp_SectionRef_27.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_6 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_42 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_18 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_24 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_3 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_30 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_8 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_13 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_10 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_9 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_25 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_35 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_32 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_5 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_15 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_27 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_36 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_16 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_34 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_39 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_21 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_33 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_2 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_38 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_37 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_41 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_29 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_22 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_17 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_28 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_23 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_20 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_19 OneSecGrp_SectionRef_43.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_24, dend_24, dend_24, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_14 nseg = 5
    dend_4 nseg = 3
    dend_40 nseg = 3
    dend_26 nseg = 3
    dend_12 nseg = 3
    dend_11 nseg = 3
    dend_7 nseg = 3
    dend_6 nseg = 3
    dend_42 nseg = 3
    dend_18 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L1_NGCDA_9c428321ae_0_0


