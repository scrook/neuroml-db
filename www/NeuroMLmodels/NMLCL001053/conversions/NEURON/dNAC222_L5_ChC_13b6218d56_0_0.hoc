// Cell: dNAC222_L5_ChC_13b6218d56_0_0
/*
{
  "id" : "dNAC222_L5_ChC_13b6218d56_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.699158, -10.4987, 0.384835, 2.69968", "-0.589028, -9.39629, 0.347626, 4.40168", "-0.478898, -8.29387, 0.310418, 6.28323", "-0.368767, -7.19145, 0.273209, 7.64436", "-0.258637, -6.08903, 0.236, 8.5434", "-0.148506, -4.98661, 0.198792, 9.49409", "-0.0383758, -3.88419, 0.161583, 10.6841", "0.0717547, -2.78177, 0.124374, 11.1456", "0.181885, -1.67935, 0.0871655, 11.461", "0.292016, -0.576928, 0.0499568, 11.5573", "0.402146, 0.525493, 0.0127481, 11.5875", "0.512276, 1.62791, -0.0244606, 11.382", "0.622407, 2.73033, -0.0616693, 11.2002", "0.732537, 3.83276, -0.098878, 10.9052", "0.842668, 4.93518, -0.136087, 10.3672", "0.952798, 6.0376, -0.173295, 9.50426", "1.06293, 7.14002, -0.210504, 8.36675", "1.17306, 8.24244, -0.247713, 7.22308", "1.28319, 9.34486, -0.284922, 6.14175", "1.39332, 10.4473, -0.32213, 4.86495", "1.50345, 11.5497, -0.359339, 2.69802" ]
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "0.562386, 10.8306, -3.45834, 0.37", "0.145307, 11.9045, -3.5378, 0.37", "0.0943384, 12.1962, -3.59521, 0.74", "0.127183, 12.4261, -3.68328, 0.74", "0.403628, 13.1321, -4.01828, 0.37", "0.675571, 13.6965, -4.26731, 0.66", "0.993414, 14.2791, -4.53333, 1.33", "1.29281, 14.7134, -4.74081, 1.33", "1.79665, 15.4309, -5.08939, 0.74", "2.17301, 16.0045, -5.35189, 0.74", "2.74653, 16.9527, -5.78502, 1.25", "3.10795, 17.715, -6.11841, 2.06", "3.2913, 18.2842, -6.3411, 2.06", "3.4176, 19.0549, -6.61628, 1.4", "3.36965, 19.9451, -6.92274, 0.74", "3.1583, 20.5289, -7.12559, 1.11", "2.79056, 20.9764, -7.28262, 1.11", "2.26035, 21.3587, -7.40695, 0.81", "1.56207, 21.6817, -7.57831, 0.81", "0.708789, 21.9442, -7.80369, 0.81", "-0.123137, 22.1366, -8.04727, 0.96", "-0.809958, 22.2947, -8.25639, 1.11", "-1.42695, 22.455, -8.4795, 1.11", "-2.76729, 22.8887, -9.06492, 1.11", "-3.16331, 23.067, -9.28018, 1.11", "-3.80212, 23.5411, -9.72252, 0.59", "-4.17962, 24.0495, -10.0421, 0.96", "-4.40289, 24.5189, -10.2537, 1.25", "-4.56047, 24.9422, -10.3986, 1.55", "-4.65607, 25.2089, -10.461, 1.55", "-4.99744, 26.0277, -10.6348, 0.74", "-5.53378, 27.018, -10.8419, 0.96", "-5.97796, 27.6183, -10.9913, 0.66", "-6.34659, 27.996, -11.1077, 0.66", "-6.93858, 28.4653, -11.2924, 0.81", "-7.4299, 28.7737, -11.4506, 0.96", "-8.07638, 29.1049, -11.6756, 1.47", "-8.67204, 29.3907, -11.8944, 1.62", "-9.23448, 29.7023, -12.1072, 1.47", "-9.75806, 30.0519, -12.3156, 1.11", "-10.3495, 30.5326, -12.5682, 0.81", "-11.0458, 31.2482, -12.9103, 0.66", "-11.4201, 31.742, -13.1181, 0.81", "-11.9012, 32.5754, -13.4289, 1.03", "-12.0873, 33.0096, -13.5859, 1.25", "-12.2197, 33.4137, -13.7389, 1.25", "-12.4591, 34.2859, -14.1017, 0.96", "-12.6375, 34.959, -14.4218, 0.81", "-12.8862, 35.7896, -14.8703, 0.59", "-13.0912, 36.3666, -15.2033, 0.59", "-13.3732, 37.0503, -15.6027, 0.59", "-13.683, 37.7215, -15.981, 0.59", "-13.9832, 38.35, -16.2746, 0.44", "-14.2676, 39.0061, -16.4996, 0.66", "-14.4881, 39.7071, -16.6229, 0.74", "-14.5595, 40.147, -16.6446, 0.96", "-14.5663, 40.6393, -16.6284, 0.96", "-14.4559, 41.7319, -16.6067, 0.52", "-14.3034, 42.6178, -16.6193, 0.59", "-14.1014, 43.6226, -16.6739, 0.59", "-13.9973, 44.184, -16.7305, 0.96", "-13.9173, 44.8318, -16.8293, 0.96", "-13.8923, 45.982, -17.0785, 0.66", "-14.0191, 46.7726, -17.335, 0.66", "-14.2989, 47.4131, -17.602, 0.96", "-14.6224, 47.8014, -17.7794, 1.03", "-15.0354, 48.115, -17.9479, 1.03", "-15.5843, 48.4003, -18.1504, 1.03", "-16.3242, 48.6682, -18.4439, 0.74", "-16.9064, 48.8332, -18.7334, 0.74", "-17.2949, 48.9219, -18.969, 0.52", "-18.1543, 49.0809, -19.6037, 0.52", "-18.8816, 49.1874, -20.2058, 0.52", "-19.6232, 49.2719, -20.8484, 1.11", "-20.0265, 49.3081, -21.1865, 1.4", "-20.4845, 49.3365, -21.5302, 1.4", "-21.2672, 49.3565, -22.0183, 0.81", "-21.7499, 49.3665, -22.2157, 0.59", "-22.4767, 49.401, -22.3709, 0.44", "-23.2068, 49.4686, -22.4131, 0.44", "-23.9472, 49.5817, -22.3914, 0.74", "-24.6547, 49.7706, -22.336, 1.33", "-25.5152, 50.1426, -22.286, 0.88", "-25.8966, 50.3913, -22.3394, 0.59", "-26.1328, 50.6095, -22.4361, 0.59", "-26.4653, 50.9955, -22.6792, 0.74", "-26.8766, 51.5369, -23.1045, 0.96", "-27.4076, 52.2415, -23.7554, 0.59", "-27.9571, 52.9295, -24.4792, 0.59", "-28.243, 53.2751, -24.8405, 0.81", "-28.604, 53.6704, -25.2365, 0.96", "-28.9502, 53.9911, -25.5329, 1.03", "-29.5363, 54.4788, -25.9085, 0.66", "-29.7159, 54.6333, -26.0017, 0.66", "-30.1981, 55.1195, -26.2339, 0.81", "-30.6235, 55.6459, -26.4844, 0.81", "-30.947, 56.1892, -26.7306, 0.66", "-31.2106, 56.7678, -26.9819, 0.66", "-31.5387, 57.6677, -27.3657, 0.52", "-31.7263, 58.2296, -27.6131, 0.81", "-31.8644, 58.6485, -27.8054, 0.74", "-32.1983, 59.5474, -28.2135, 0.59", "-32.402, 59.9868, -28.3962, 0.74", "-32.6743, 60.4217, -28.5544, 0.96", "-33.0947, 60.944, -28.6796, 0.96", "-33.4627, 61.3473, -28.74, 0.74", "-33.972, 61.8714, -28.7817, 1.03", "-34.3396, 62.2383, -28.7488, 1.25", "-34.5975, 62.5162, -28.696, 0.81", "-35.1446, 63.1721, -28.5264, 0.59", "-35.478, 63.6172, -28.386, 0.66", "-35.7547, 64.0207, -28.2454, 0.66", "-36.4722, 65.1375, -27.8268, 0.88", "-36.836, 65.7096, -27.5956, 1.11", "-37.086, 66.1008, -27.4216, 1.03", "-37.3902, 66.5731, -27.2051, 1.25", "-37.5038, 66.7486, -27.1173, 1.25" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "4.19239, 9.67164, -4.39834, 1.11", "4.89676, 10.3644, -4.8452, 1.11", "5.4486, 10.9175, -5.21344, 1.11", "6.32902, 11.8426, -5.80037, 1.11", "6.9329, 12.509, -6.24222, 0.96", "7.93313, 13.4985, -6.89512, 1.55", "8.80307, 14.2895, -7.42059, 1.62", "9.31539, 14.7051, -7.70749, 1.62", "10.1071, 15.2815, -8.05602, 1.25", "11.4345, 16.1483, -8.46349, 0.96", "13.4622, 17.3392, -8.83323, 0.88", "14.414, 17.8232, -8.891, 1.55", "15.4533, 18.2788, -8.86592, 1.84", "17.0121, 18.8908, -8.74381, 1.11", "17.8303, 19.1982, -8.63668, 1.03", "18.746, 19.5776, -8.45835, 1.25", "19.6317, 20.0535, -8.27271, 0.88", "20.4485, 20.5981, -8.10223, 0.88", "21.2134, 21.1928, -7.94478, 0.88", "22.1114, 21.9328, -7.75374, 0.88", "22.8794, 22.6067, -7.50641, 0.96", "23.674, 23.3614, -7.20948, 0.96", "24.3991, 24.1255, -6.88615, 0.81", "25.4662, 25.3191, -6.3164, 1.11", "26.166, 26.0755, -5.87352, 1.4", "26.9722, 26.8343, -5.27449, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "3.86239, 8.33214, 2.16166, 1.62", "4.72977, 8.88822, 2.93432, 1.62", "5.90431, 9.55416, 3.99208, 1.25", "8.04104, 10.4836, 6.13729, 1.25", "9.17096, 10.9063, 7.34782, 1.25", "10.35, 11.2064, 8.76195, 1.92", "10.8489, 11.2888, 9.39729, 2.5", "11.9338, 11.3168, 10.899, 2.5", "14.1778, 11.0535, 14.2386, 1.77", "15.7343, 10.5913, 16.5498, 0.96", "17.9305, 9.7116, 19.8029, 0.88", "18.5583, 9.42654, 20.7476, 0.88", "19.0536, 9.21046, 21.4706, 1.4", "19.5432, 9.03291, 22.1024, 1.4", "21.329, 8.65097, 23.9112, 0.66", "22.0865, 8.69362, 24.5154, 0.66", "23.8852, 9.37508, 25.5802, 0.88", "25.0154, 9.97995, 26.1576, 0.88", "26.4349, 10.883, 26.7199, 0.74", "27.4929, 11.6477, 27.0369, 1.4", "28.7106, 12.6033, 27.2586, 2.06", "29.9098, 13.5148, 27.3518, 1.84", "31.3478, 14.5573, 27.27, 1.18", "32.844, 15.5635, 27.2247, 1.18", "33.4514, 15.9203, 27.3106, 1.03", "34.467, 16.3994, 27.7323, 1.03", "35.139, 16.6591, 28.4098, 0.59", "35.7629, 16.934, 29.4092, 0.59", "36.9855, 17.5702, 31.8991, 0.88", "38.4075, 18.4326, 35.1743, 1.62", "39.0186, 18.8555, 36.5986, 1.62", "40.4406, 19.9215, 39.8926, 0.88", "41.1029, 20.4167, 41.328, 0.88", "41.7138, 20.8889, 42.5152, 1.47", "42.1431, 21.2252, 43.196, 1.47", "43.2474, 22.0239, 44.5234, 0.81", "43.8634, 22.3904, 45.1178, 0.59", "44.5221, 22.6877, 45.6368, 0.59", "46.1291, 23.333, 46.9175, 1.25", "48.6563, 24.3822, 49.0249, 0.74", "49.4481, 24.7859, 49.7635, 0.29", "50.1525, 25.1765, 50.5099, 0.29", "50.556, 25.4008, 50.9968, 0.59", "51.6242, 26.0158, 52.3134, 1.11", "52.164, 26.2885, 52.9592, 1.11", "53.3224, 27.2604, 54.3461, 1.11", "53.9768, 28.1446, 55.4485, 0.59", "53.9947, 25.6088, 55.63, 0.59", "54.2189, 22.994, 56.3049, 0.52", "54.3738, 21.1677, 56.7716, 0.59", "64.3327, 24.1995, 65.6486, 0.59", "74.7772, 28.394, 73.3677, 0.59", "83.409, 34.465, 81.901, 0.59", "91.9608, 41.7637, 89.3848, 0.59", "101.905, 49.5955, 94.0026, 0.59", "110.863, 57.8385, 99.7144, 0.59", "120.315, 64.6293, 106.623, 0.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-3.56761, 6.11864, 1.60166, 1.69", "-3.56761, 6.11864, 1.60166, 1.69", "-4.18896, 6.43802, 1.90549, 1.69", "-4.96133, 6.75213, 2.31681, 1.4", "-5.52704, 6.94652, 2.71238, 1.03", "-6.3143, 7.22372, 3.33043, 0.88", "-6.86224, 7.43211, 3.79062, 0.88", "-7.56918, 7.66933, 4.46078, 0.59", "-8.22419, 7.87495, 5.14224, 0.44", "-9.44661, 8.24228, 6.49424, 0.37", "-9.8712, 8.36944, 6.98015, 0.37", "-10.5664, 8.58176, 7.79414, 0.37", "-12.2243, 9.111, 9.82404, 1.03", "-12.6041, 9.24686, 10.3054, 1.62", "-21.4329, 9.89967, 15.2246, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-3.87761, -1.13936, -14.5883, 0.74", "-4.91056, -1.80276, -14.5814, 0.74", "-6.12548, -2.55227, -14.5748, 1.03", "-7.18812, -3.19494, -14.5911, 1.25", "-8.03784, -3.71649, -14.6134, 1.62", "-8.73415, -4.13667, -14.6353, 1.84", "-9.64722, -4.65521, -14.6414, 1.84", "-10.456, -5.0604, -14.6046, 1.99", "-11.3058, -5.42731, -14.5237, 2.21", "-12.2987, -5.78318, -14.3801, 2.65", "-13.0031, -5.9942, -14.2672, 2.5", "-14.1932, -6.30606, -14.0863, 1.77", "-15.4537, -6.62074, -13.9354, 1.33", "-16.3107, -6.84038, -13.8949, 1.18", "-17.3268, -7.11095, -13.9595, 1.11", "-18.0489, -7.32766, -14.1635, 1.11", "-18.7927, -7.58231, -14.6179, 1.11", "-19.5034, -7.84604, -15.3151, 1.4", "-20.2108, -8.09398, -16.2164, 1.03", "-20.8065, -8.27906, -17.0896, 0.88", "-21.693, -8.49126, -18.5202, 0.88", "-22.6509, -8.63866, -20.2098, 1.47", "-23.3756, -8.70441, -21.5497, 1.77", "-24.1868, -8.71735, -23.1086, 1.84", "-24.4736, -8.70086, -23.6743, 2.06", "-24.9933, -8.63837, -24.7268, 1.77", "-25.7939, -8.47726, -26.3082, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-5.36761, -1.90886, 9.10166, 2.06", "-5.36761, -1.90886, 9.10166, 2.06", "-6.0287, -1.84609, 9.45134, 2.06", "-6.52572, -1.82126, 9.69419, 2.06", "-7.81536, -1.8399, 10.2939, 1.84", "-8.53333, -1.90283, 10.6181, 1.84", "-9.08258, -1.99024, 10.8635, 1.99", "-10.0709, -2.22618, 11.3038, 1.55", "-10.8751, -2.50651, 11.6529, 1.03", "-11.5251, -2.8068, 11.9135, 0.88", "-12.1563, -3.18273, 12.0966, 1.18", "-12.6664, -3.52524, 12.208, 1.18", "-13.0573, -3.81204, 12.2726, 1.47", "-13.6376, -4.28074, 12.3232, 1.25", "-14.2089, -4.7616, 12.3987, 1.03", "-14.7242, -5.19003, 12.514, 1.62", "-15.2402, -5.60938, 12.7057, 1.69", "-15.6381, -5.91346, 12.9105, 1.33", "-16.3488, -6.4135, 13.3941, 1.03", "-17.2242, -6.92918, 14.1556, 0.88", "-17.8363, -7.20325, 14.8338, 1.11", "-18.3666, -7.33998, 15.5302, 1.33", "-18.6972, -7.35385, 16.0196, 1.33", "-19.0232, -7.27341, 16.5252, 1.18", "-19.4112, -7.06123, 17.1096, 0.88", "-19.9629, -6.66733, 17.8227, 1.18", "-20.307, -6.43005, 18.2098, 1.33", "-20.6102, -6.27467, 18.5119, 1.33", "-21.1331, -6.12983, 19.0017, 0.59", "-21.8503, -6.16593, 19.6112, 0.52", "-22.2142, -6.37608, 19.8772, 0.59", "-22.7215, -7.03072, 20.2777, 0.59", "-23.2101, -7.93096, 20.7648, 0.59", "-23.4634, -8.46767, 21.0494, 1.03", "-23.7534, -9.13788, 21.4372, 1.03", "-23.9932, -9.69534, 21.7923, 1.03", "-24.4452, -10.6267, 22.5165, 1.03", "-24.8736, -11.2411, 23.2022, 0.66", "-25.2346, -11.5246, 23.7297, 0.66", "-25.8706, -11.7593, 24.5655, 0.74", "-26.3203, -11.8337, 25.117, 0.81", "-26.7386, -11.8613, 25.6109, 0.52", "-27.4967, -11.8718, 26.4356, 0.52", "-27.8214, -11.8942, 26.7924, 0.44", "-28.2941, -12.0916, 27.4209, 0.37", "-28.5214, -12.3974, 27.7894, 0.37", "-28.7323, -12.8613, 28.1662, 1.11", "-28.9123, -13.3372, 28.4606, 1.4", "-29.0857, -13.9639, 28.7778, 1.4", "-29.2987, -14.9154, 29.2153, 0.81", "-29.4422, -15.6319, 29.5081, 0.29", "-29.5701, -16.1058, 29.7099, 0.29", "-29.7212, -16.4862, 29.8824, 0.29", "-33.8801, -19.1529, 34.5074, 0.29", "-38.9131, -21.8862, 38.1069, 0.29", "-43.5177, -24.6135, 42.2447, 0.29", "-47.7908, -26.4963, 47.1822, 0.29", "-52.0741, -28.4628, 52.0745, 0.29", "-57.0022, -31.3828, 55.6567, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-2.19761, -5.47136, 6.85166, 1.77", "-2.19761, -5.47136, 6.85166, 1.77", "-2.17449, -6.85707, 7.03243, 1.77", "-2.1377, -9.23278, 7.32933, 1.47", "-2.11742, -11.6237, 7.59798, 1.25", "-2.15206, -13.4501, 7.77949, 1.62", "-2.22127, -14.9912, 7.91626, 1.92", "-2.31616, -16.3353, 8.03734, 2.14", "-2.48808, -18.0089, 8.18514, 2.14", "-2.84251, -20.3321, 8.39044, 1.55", "-3.29366, -22.5171, 8.57009, 1.33", "-3.70224, -24.1724, 8.72136, 1.55", "-4.00569, -25.218, 8.82049, 1.92", "-4.43686, -26.4862, 8.9865, 2.21", "-4.75981, -27.322, 9.12111, 2.5", "-5.13741, -28.3085, 9.31436, 2.5", "-5.48452, -29.3966, 9.54515, 2.36", "-5.85793, -30.8895, 9.8707, 1.69", "-6.21687, -32.8469, 10.2807, 1.25", "-6.39944, -34.676, 10.6503, 1.4", "-6.40717, -36.299, 10.9383, 1.62", "-6.21945, -38.28, 11.243, 2.06", "-5.99094, -39.5009, 11.4165, 2.36", "-5.75979, -40.2924, 11.5142, 2.36", "-5.18951, -41.801, 11.6712, 2.14", "-4.26089, -43.9179, 11.8734, 1.62", "-3.44145, -45.701, 12.0232, 1.25", "-2.60094, -47.5405, 12.1978, 1.03", "-1.70379, -49.6087, 12.4369, 1.03", "-1.0355, -51.3407, 12.6818, 1.03", "-0.30794, -53.5826, 13.0815, 1.03", "0.00931698, -54.9177, 13.3727, 0.96", "0.105557, -55.9725, 13.6398, 0.96", "-0.025059, -56.9128, 13.9066, 0.96", "-0.625679, -58.1512, 14.3509, 0.96", "-1.21309, -58.8242, 14.6302, 0.88", "-1.82931, -59.3216, 14.849, 1.18", "-2.82409, -60.0122, 15.1282, 1.18", "-3.78774, -60.6432, 15.3754, 1.33", "-4.89727, -61.3589, 15.6839, 1.33", "-5.85122, -61.983, 15.9827, 1.4", "-6.87385, -62.6947, 16.3521, 1.55", "-7.8534, -63.4485, 16.7869, 1.55", "-8.96213, -64.4783, 17.4113, 1.84", "-9.63355, -65.2303, 17.8541, 2.14", "-10.2911, -66.1369, 18.3293, 1.99", "-11.2083, -67.7744, 19.0889, 0.88", "-11.8347, -69.2866, 19.6861, 0.88", "-12.3627, -71.0729, 20.2818, 0.81", "-12.6582, -72.6521, 20.6861, 0.74", "-12.9325, -74.6461, 21.1301, 0.74", "-13.067, -76.5089, 21.4842, 1.03", "-13.0617, -78.1825, 21.7116, 1.4", "-13.0018, -79.2239, 21.795, 1.69", "-12.8779, -80.3913, 21.8279, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.44239, -9.49936, -2.20834, 3.39", "1.44239, -9.49936, -2.20834, 3.39", "2.09748, -11.45, -2.3934, 3.39", "2.62644, -13.0237, -2.61976, 3.02", "3.16202, -14.6171, -2.84895, 3.02", "3.8663, -16.7123, -3.15034, 3.02", "4.62282, -18.963, -3.47408, 3.24", "5.19332, -20.6226, -3.7383, 3.54", "5.84104, -22.4108, -4.08966, 3.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.50345, 11.5497, -0.359339, 0.88", "2.99451, 26.4754, -0.359339, 0.88", "4.48557, 41.4011, -0.359339, 0.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-37.5038, 66.7486, -27.1173, 0.44", "-39.1101, 68.2454, -28.1216, 0.44", "-39.8336, 68.9802, -28.5596, 0.37", "-40.1588, 69.3953, -28.7159, 0.66", "-40.6582, 70.1559, -28.9169, 0.66", "-41.1335, 71.0196, -29.082, 0.59", "-41.4238, 71.6705, -29.1797, 0.81", "-41.6441, 72.4899, -29.1971, 0.81", "-41.8288, 74.3735, -29.2015, 0.52", "-41.7513, 75.2603, -29.2128, 0.52", "-41.3763, 76.6149, -29.2869, 0.44", "-40.7856, 77.8848, -29.4491, 0.44", "-39.9898, 79.0905, -29.7111, 0.74", "-39.2842, 79.9207, -29.9557, 0.74", "-38.1189, 81.0484, -30.409, 0.44", "-37.2313, 81.8308, -30.72, 0.59", "-36.3384, 82.5954, -31.0378, 0.59", "-35.4444, 83.3885, -31.392, 0.59", "-34.7469, 84.0894, -31.7259, 0.37", "-34.24, 84.6486, -32.0051, 0.37", "-33.477, 85.5326, -32.4614, 0.59", "-32.725, 86.3771, -32.9235, 0.37", "-32.0456, 87.105, -33.3369, 0.81", "-31.335, 87.8381, -33.7752, 0.81", "-30.0376, 89.1848, -34.6216, 0.44", "-29.0417, 90.2457, -35.2981, 0.44", "-28.3428, 90.9781, -35.8099, 0.81", "-27.6349, 91.727, -36.3451, 0.44", "-27.2524, 92.1573, -36.6636, 0.59", "-26.346, 93.2545, -37.5261, 0.59", "-25.8168, 94.0402, -38.24, 0.44", "-25.2824, 95.1365, -39.2895, 0.44", "-24.9709, 96.0718, -40.3154, 0.96", "-24.8839, 96.5086, -40.8685, 1.18", "-24.8618, 96.9067, -41.4359, 1.18", "-25.0332, 97.9342, -43.452, 0.44", "-25.305, 98.6535, -45.0716, 0.37", "-25.6122, 99.2052, -46.7476, 0.66", "-25.7644, 99.4259, -47.5351, 0.66", "-26.0192, 99.7478, -48.794, 0.66", "-26.9397, 100.909, -53.8196, 0.44", "-27.0904, 101.095, -54.7161, 0.44", "-27.8385, 102.049, -59.4882, 0.29", "-27.9947, 102.279, -60.5012, 0.29", "-28.1625, 102.58, -61.6545, 0.29", "-28.4992, 103.339, -64.0971, 0.74", "-28.8623, 104.454, -66.8553, 0.44", "-28.9315, 104.753, -67.4547, 0.44", "-29.0727, 105.538, -68.5565, 0.37", "-29.2065, 106.374, -69.5333, 0.88", "-29.4395, 107.807, -70.7699, 0.29", "-29.5718, 108.404, -71.1324, 0.52", "-29.8891, 109.501, -71.6688, 0.15", "-30.2276, 110.466, -72.1667, 0.22", "-30.8082, 111.973, -72.9527, 0.22", "-31.3845, 113.286, -73.6005, 0.22", "-31.9352, 114.522, -74.1682, 0.22", "-32.7958, 116.328, -75.0662, 1.47", "-33.4535, 117.649, -75.797, 0.66", "-33.8577, 118.496, -76.2878, 0.96", "-34.4684, 119.9, -77.094, 0.22", "-34.8498, 120.853, -77.5683, 0.22" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-37.5038, 66.7486, -27.1173, 0.37", "-37.4417, 68.1264, -26.7758, 0.37", "-37.3338, 68.8138, -26.6691, 0.37", "-37.2513, 69.4619, -26.5033, 0.37", "-37.209, 70.427, -26.1753, 0.74", "-37.2554, 71.2399, -25.8653, 0.29", "-37.4207, 72.1921, -25.4848, 0.29", "-37.5195, 72.6384, -25.2994, 0.52", "-37.8326, 73.6118, -24.7285, 0.44", "-38.0722, 74.2274, -24.2948, 0.29", "-38.284, 74.7632, -23.8907, 0.29", "-38.5002, 75.3576, -23.4154, 0.29", "-38.786, 76.3645, -22.6356, 0.44", "-38.9614, 77.1836, -22.0167, 0.44", "-39.0637, 78.2315, -21.3006, 0.52", "-39.0408, 79.0692, -20.7416, 0.37", "-38.9429, 79.7403, -20.2968, 0.37", "-38.7503, 80.4666, -19.8447, 1.11" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "26.9722, 26.8343, -5.27449, 0.29", "28.1225, 26.4949, -3.53135, 0.29", "29.2081, 26.2251, -2.10054, 0.59", "30.2778, 25.9572, -0.864599, 0.74", "30.8659, 25.8163, -0.238658, 0.37", "31.7678, 25.6273, 0.787714, 0.37", "32.2667, 25.5362, 1.39896, 0.66", "32.6374, 25.5124, 1.87904, 0.96", "33.1607, 25.5351, 2.7901, 1.25", "33.9329, 25.676, 4.51651, 0.37", "34.6188, 25.9405, 6.32606, 0.37", "34.842, 26.0632, 6.95928, 0.37", "35.3336, 26.3514, 8.24694, 0.74", "36.232, 26.8275, 10.2039, 0.66", "36.9898, 27.1818, 11.5246, 0.52", "37.6047, 27.382, 12.2735, 0.66", "38.3816, 27.5304, 12.9134, 0.66", "39.4555, 27.6542, 13.5778, 0.37", "40.7118, 27.7047, 14.1536, 0.52", "41.4152, 27.6834, 14.4102, 0.52", "42.6448, 27.6029, 14.8261, 0.66", "43.336, 27.5353, 15.0492, 0.88", "44.2574, 27.4484, 15.3243, 0.88", "45.3248, 27.3842, 15.6914, 0.66", "46.6599, 27.3727, 16.1745, 0.29", "47.8288, 27.4294, 16.5887, 0.29", "49.5988, 27.6651, 17.1914, 0.88", "50.0889, 27.7514, 17.3555, 0.88", "52.0524, 28.1665, 17.9821, 0.29", "53.5678, 28.5428, 18.4233, 0.29", "55.0175, 28.9508, 18.8041, 0.96", "56.7422, 29.4776, 19.2249, 0.29", "57.9966, 29.8692, 19.5251, 0.29", "59.1587, 30.209, 19.7764, 0.81", "60.0738, 30.4559, 19.9212, 0.81", "60.8858, 30.6621, 20.0439, 0.81", "62.1167, 30.9476, 20.2235, 0.59", "63.549, 31.2254, 20.4357, 0.29", "64.8123, 31.5135, 20.6391, 0.81", "66.0593, 31.802, 20.8512, 0.22", "67.1661, 32.0376, 21.038, 0.22", "67.8683, 32.1596, 21.143, 0.52", "68.8389, 32.2873, 21.229, 0.22", "78.6772, 34.0393, 27.5202, 0.22", "87.7781, 36.1072, 34.7452, 0.22", "98.2681, 36.2148, 40.1988, 0.22", "108.692, 34.3329, 45.4183, 0.22", "119.071, 33.8592, 51.0604, 0.22", "127.618, 32.0096, 58.997, 0.22" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "26.9722, 26.8343, -5.27449, 0.81", "28.5487, 27.0082, -4.67148, 0.81", "29.2987, 27.0071, -4.42552, 1.03", "31.302, 26.9085, -3.9639, 0.96", "32.4026, 26.8619, -3.77159, 0.96", "33.6876, 26.861, -3.59254, 0.59", "34.5822, 26.9053, -3.49151, 0.66", "35.784, 26.9706, -3.39611, 0.66", "37.2194, 27.1605, -3.37606, 0.59", "37.9747, 27.3742, -3.45902, 0.81", "38.9294, 27.8064, -3.60117, 0.96", "39.8072, 28.3116, -3.74511, 1.25", "40.4412, 28.6931, -3.84162, 1.4", "41.2373, 29.158, -3.92617, 1.4", "42.5362, 29.8019, -3.9836, 0.59", "43.0656, 29.9759, -3.98887, 0.59", "44.169, 30.1333, -3.96116, 0.59", "45.3761, 30.1322, -3.89457, 1.03", "46.2344, 30.0471, -3.82582, 1.18", "46.9801, 29.9164, -3.71949, 1.18", "48.1828, 29.639, -3.47253, 0.74", "49.3366, 29.3494, -3.15552, 0.66", "49.8839, 29.2154, -2.98101, 0.96", "50.5974, 29.0711, -2.74988, 0.96", "51.8777, 28.8723, -2.35021, 1.03", "52.4819, 28.8163, -2.1659, 1.03", "54.1618, 28.8416, -1.69425, 0.59", "55.073, 28.9519, -1.47054, 0.59", "56.7, 29.2641, -1.13722, 0.59", "57.4969, 29.469, -1.01112, 0.81", "58.2425, 29.7227, -0.939894, 0.81", "59.7635, 30.349, -0.888921, 0.37", "60.7227, 30.7701, -0.918688, 0.66", "61.5745, 31.1132, -0.950943, 0.74", "62.1097, 31.295, -0.980709, 0.74", "63.158, 31.5438, -1.05376, 0.74", "64.2839, 31.664, -1.14011, 0.52", "65.8522, 31.6349, -1.26343, 0.74", "67.0331, 31.5446, -1.3263, 0.88", "67.6789, 31.4867, -1.3248, 0.96", "68.3191, 31.4385, -1.28329, 1.18", "69.2898, 31.3994, -1.15208, 1.18", "70.0244, 31.4359, -0.984265, 0.66", "71.3195, 31.7214, -0.54784, 0.59", "72.1632, 32.0443, -0.112248, 0.59", "72.7191, 32.3188, 0.246005, 0.74", "73.1513, 32.5775, 0.57331, 0.74", "73.5756, 32.8621, 0.935553, 0.74", "74.3818, 33.4423, 1.70133, 0.59", "75.4462, 34.2548, 2.8178, 0.96", "75.9532, 34.6336, 3.35617, 1.25", "76.2279, 34.8322, 3.67012, 1.25" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "120.315, 64.6293, 106.623, 0.29", "128.59, 68.9215, 115.119, 0.29", "137.948, 73.5177, 122.211, 0.29", "147.406, 79.2051, 128.223, 0.29", "155.83, 83.9296, 136.311, 0.29", "163.54, 89.98, 144.125, 0.29", "169.491, 96.4719, 152.992, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "120.315, 64.6293, 106.623, 0.29", "127.057, 67.7261, 112.109, 0.29", "132.524, 72.2779, 117.874, 0.29", "136.846, 77.2517, 124.186, 0.29", "141.979, 80.8077, 130.943, 0.29", "146.754, 84.8226, 137.675, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-25.7939, -8.47726, -26.3082, 0.74", "-27.6337, -9.74658, -26.75, 0.74", "-28.6248, -10.2484, -26.9454, 0.74", "-29.4651, -10.569, -27.1194, 0.74", "-30.7952, -10.8481, -27.5482, 0.66", "-31.7634, -10.919, -27.9584, 0.66", "-32.7899, -10.9202, -28.4505, 0.59", "-33.4995, -10.7928, -28.7951, 1.25", "-34.0765, -10.6381, -29.1124, 1.25", "-35.8358, -10.1374, -30.1684, 0.66", "-36.7103, -9.92025, -30.7192, 0.66", "-37.1817, -9.87113, -31.0288, 0.96", "-37.8804, -9.9392, -31.4883, 0.96", "-38.3666, -10.1143, -31.927, 0.96", "-39.1031, -10.6747, -33.0166, 0.74", "-39.4916, -11.1473, -33.8603, 0.52", "-39.8784, -11.7361, -34.9176, 0.81", "-40.1268, -12.1695, -35.7013, 1.03", "-41.0267, -13.9127, -38.908, 1.25", "-41.6352, -15.1451, -41.2362, 0.66", "-41.9373, -15.7354, -42.3877, 0.66", "-42.1298, -16.0331, -42.9917, 1.11", "-42.3086, -16.2108, -43.3527, 1.33", "-42.5788, -16.3906, -43.6575, 1.18", "-43.0255, -16.6122, -43.828, 1.18", "-44.0565, -17.0994, -44.0712, 0.59", "-45.1174, -17.6723, -44.3557, 0.52", "-45.9514, -18.2041, -44.6528, 0.52", "-46.6382, -18.7336, -45.0256, 0.81", "-47.3055, -19.3634, -45.5632, 0.66", "-47.9282, -20.0249, -46.1901, 0.66", "-48.3751, -20.552, -46.7387, 1.33", "-48.6741, -20.9237, -47.137, 1.33", "-49.6065, -22.0898, -48.4019, 0.66", "-50.4282, -23.0821, -49.4773, 0.52", "-50.8179, -23.5148, -49.9584, 0.52", "-51.3289, -23.9977, -50.442, 0.96", "-51.6985, -24.3042, -50.6927, 1.18", "-51.9675, -24.5116, -50.7982, 1.18", "-52.5347, -24.9587, -50.8595, 0.81", "-53.3151, -25.6209, -50.8071, 0.74", "-54.2853, -26.5243, -50.641, 0.59", "-54.7726, -26.9722, -50.5181, 0.74", "-55.4243, -27.5417, -50.3164, 0.74", "-56.1252, -28.0907, -50.0863, 0.59", "-56.7874, -28.5764, -49.857, 0.44", "-57.53, -29.1136, -49.5906, 0.44", "-58.2451, -29.6254, -49.3675, 0.44", "-58.9996, -30.2194, -49.1395, 0.44", "-60.239, -31.3121, -48.7783, 0.44", "-60.5477, -31.6422, -48.6846, 0.96", "-61.1118, -32.4556, -48.5331, 1.18", "-61.4706, -33.1956, -48.4545, 0.81", "-61.8707, -34.4396, -48.4498, 0.59", "-62.0042, -34.9889, -48.5114, 0.74", "-62.2094, -35.879, -48.6746, 0.66", "-62.4791, -36.7462, -48.8757, 0.66", "-62.7414, -37.3828, -49.0514, 0.81", "-63.3292, -38.5419, -49.3784, 0.59", "-63.9094, -39.551, -49.6498, 0.52", "-64.4537, -40.5298, -49.882, 0.81", "-64.933, -41.4835, -50.0627, 1.4", "-65.1521, -42.0512, -50.0976, 1.69", "-65.4504, -43.1638, -50.0263, 0.52", "-65.6545, -44.088, -49.9706, 0.44", "-65.8269, -45.038, -50.0467, 0.44", "-65.9549, -45.7187, -50.2464, 0.29", "-66.2781, -46.9954, -50.8222, 1.4", "-66.3629, -47.2502, -50.9593, 1.4", "-67.3217, -49.5113, -52.4935, 0.52", "-67.9511, -50.7582, -53.443, 0.52", "-68.3124, -51.4017, -53.9579, 0.52", "-68.8605, -52.3593, -54.7229, 0.74", "-69.221, -53.0005, -55.2161, 0.88", "-69.9767, -54.4529, -56.1598, 0.44", "-70.32, -55.1765, -56.5059, 0.59", "-70.7244, -55.9823, -56.856, 0.59", "-71.1872, -56.7981, -57.2452, 0.37", "-71.4805, -57.2904, -57.4968, 0.59", "-72.0368, -58.1633, -57.9366, 0.81", "-72.5863, -58.9496, -58.2674, 1.18", "-72.9462, -59.4315, -58.4773, 1.18", "-73.9441, -60.627, -59.0825, 0.74" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-25.7939, -8.47726, -26.3082, 0.81", "-26.2754, -6.87394, -26.3351, 0.81", "-26.5272, -6.28752, -26.2925, 0.81", "-26.9461, -5.58925, -26.1942, 0.81", "-27.4247, -5.05248, -26.0906, 0.88", "-28.029, -4.63899, -26.0079, 0.66", "-29.1716, -4.08778, -25.9232, 0.59", "-30.0025, -3.96187, -25.9141, 0.59", "-30.7602, -3.97422, -26.0458, 0.59", "-31.7733, -4.11534, -26.393, 0.74", "-32.8636, -4.35799, -26.9802, 1.03", "-33.245, -4.45409, -27.2287, 1.62", "-33.7611, -4.5796, -27.6082, 1.92", "-35.3914, -4.92311, -28.7843, 0.88", "-36.0165, -5.03554, -29.2265, 0.66", "-36.9338, -5.19315, -29.8449, 0.66", "-38.1715, -5.40026, -30.6327, 0.66", "-38.7207, -5.47908, -30.966, 0.66", "-39.9127, -5.58138, -31.6196, 0.66", "-40.6685, -5.59378, -31.9927, 0.44", "-41.6161, -5.54961, -32.4906, 0.44", "-42.3046, -5.4749, -32.8926, 0.44", "-43.108, -5.34005, -33.458, 0.66", "-43.6658, -5.22564, -33.8842, 0.66", "-44.3213, -5.04741, -34.3945, 0.66", "-44.8856, -4.8614, -34.7908, 0.66", "-45.5259, -4.59311, -35.1926, 0.44", "-45.9694, -4.3797, -35.4587, 0.74", "-46.6286, -4.04262, -35.8359, 0.74", "-47.215, -3.73562, -36.1677, 0.74", "-47.7147, -3.47427, -36.4372, 0.74", "-48.2877, -3.18081, -36.7323, 0.37", "-49.1466, -2.84921, -37.1986, 0.37", "-49.5236, -2.78887, -37.4239, 0.37", "-49.9287, -2.82196, -37.7058, 0.88", "-50.4742, -2.94061, -38.1045, 1.18", "-50.9197, -3.06628, -38.4675, 1.33", "-52.0554, -3.42711, -39.4701, 0.44", "-52.8652, -3.661, -40.2507, 0.44", "-53.5016, -3.78413, -40.9572, 0.44", "-54.0626, -3.79356, -41.6486, 0.88", "-54.647, -3.64792, -42.415, 1.03", "-54.878, -3.50756, -42.7169, 1.03", "-55.4594, -2.92314, -43.3647, 0.44", "-55.8077, -2.5319, -43.7135, 0.44", "-56.228, -2.1069, -44.041, 0.44", "-56.5838, -1.82796, -44.2838, 0.59", "-57.1893, -1.48409, -44.6271, 0.59", "-57.8204, -1.25512, -44.9637, 0.74", "-58.9998, -1.06328, -45.5492, 0.37", "-59.7491, -1.058, -45.9359, 0.37", "-60.8683, -1.20373, -46.5408, 0.59", "-61.3097, -1.31452, -46.7959, 0.88", "-62.1645, -1.63532, -47.3448, 0.66", "-62.742, -1.89811, -47.7367, 0.74", "-63.3598, -2.21493, -48.1524, 0.59", "-63.8909, -2.50662, -48.5349, 0.52", "-64.3879, -2.77644, -48.893, 0.88", "-65.297, -3.20638, -49.5731, 0.59", "-65.8239, -3.4043, -49.9767, 0.44", "-66.4046, -3.56694, -50.4332, 1.03", "-66.8092, -3.6427, -50.749, 1.33", "-67.0594, -3.66702, -50.9351, 1.4", "-68.1175, -3.71006, -51.6563, 0.44", "-68.5467, -3.71931, -51.9311, 0.44", "-69.1821, -3.71913, -52.3124, 0.44", "-69.8527, -3.69936, -52.6845, 0.44", "-70.9401, -3.65887, -53.2825, 0.59", "-71.6875, -3.63059, -53.7537, 0.88", "-72.3616, -3.58172, -54.291, 1.11", "-73.2192, -3.48989, -55.0838, 0.52", "-73.8259, -3.38913, -55.7063, 0.52", "-74.3265, -3.28257, -56.2533, 1.03", "-75.4311, -3.02571, -57.5461, 1.25", "-76.7434, -2.77051, -59.0744, 0.52", "-77.1967, -2.70098, -59.5886, 0.59", "-77.809, -2.63381, -60.2428, 0.59", "-78.786, -2.53206, -61.1591, 0.44", "-79.4659, -2.45526, -61.681, 0.44", "-80.4733, -2.29837, -62.3154, 0.44", "-81.0093, -2.18541, -62.6401, 0.44", "-81.7253, -1.94961, -63.2053, 0.66", "-82.2131, -1.70542, -63.7083, 0.88", "-82.4603, -1.52186, -64.0159, 0.88", "-83.1433, -0.852254, -64.9699, 0.52", "-83.5429, -0.359984, -65.5935, 0.52", "-84.0752, 0.418062, -66.5764, 0.81", "-84.4256, 1.02758, -67.3197, 0.44", "-84.6156, 1.40516, -67.7774, 0.44", "-84.8095, 1.89652, -68.3455, 0.74", "-84.9079, 2.26742, -68.7265, 0.96", "-85.0381, 3.22845, -69.5435, 0.66", "-85.0918, 3.82978, -70.0303, 0.44", "-85.1619, 4.48367, -70.5966, 0.44", "-85.2861, 5.10175, -71.2071, 0.44", "-85.3707, 5.31301, -71.4495, 0.44", "-85.7203, 5.74859, -72.0237, 0.96", "-86.6332, 6.22116, -72.8645, 0.66", "-87.2634, 6.41511, -73.3291, 0.96", "-87.5722, 6.48973, -73.5141, 1.25", "-87.9394, 6.56873, -73.7103, 1.25", "-88.5211, 6.70976, -74.01, 1.25", "-89.5143, 7.04773, -74.5314, 0.37", "-90.0966, 7.37646, -74.8266, 0.37", "-90.4711, 7.65801, -75.053, 0.66", "-90.7564, 7.89099, -75.2234, 0.81", "-91.2026, 8.26148, -75.4614, 0.81", "-91.8984, 8.83759, -75.7508, 0.44", "-92.3843, 9.20644, -75.876, 0.44", "-93.2896, 9.79967, -76.0184, 0.44", "-94.3012, 10.4222, -76.1122, 0.44", "-95.0725, 10.8922, -76.1433, 0.66", "-95.8783, 11.3783, -76.1346, 0.96", "-96.6956, 11.8641, -76.0684, 0.59", "-97.3894, 12.2921, -75.9859, 0.44", "-98.1042, 12.7431, -75.8941, 0.44", "-98.7973, 13.1779, -75.8485, 0.44", "-99.4042, 13.5112, -75.8827, 0.44", "-100.115, 13.8066, -76.0285, 0.74", "-100.472, 13.9128, -76.147, 0.74", "-101.503, 14.1193, -76.5422, 0.52", "-101.975, 14.1886, -76.747, 0.59", "-102.852, 14.3, -77.1598, 0.44", "-103.504, 14.4083, -77.4813, 0.44", "-104.309, 14.6156, -77.9258, 0.37", "-105.106, 14.8987, -78.3711, 0.52", "-105.729, 15.1879, -78.7289, 1.11", "-106.208, 15.4523, -79.0415, 1.25", "-106.767, 15.7972, -79.4694, 0.37", "-107.559, 16.2991, -80.1746, 0.37", "-108.095, 16.6156, -80.7068, 0.29", "-108.521, 16.8457, -81.1795, 0.29", "-109.285, 17.245, -82.0815, 0.59", "-109.885, 17.5747, -82.8242, 0.59", "-110.224, 17.7728, -83.2475, 0.29", "-110.491, 17.9493, -83.5533, 0.37", "-110.91, 18.2783, -84.0033, 0.37", "-111.487, 18.7778, -84.5142, 0.44", "-111.974, 19.2274, -84.835, 0.44", "-112.442, 19.6604, -85.072, 0.44", "-113.013, 20.146, -85.328, 0.37", "-113.249, 20.3193, -85.4206, 0.37", "-113.865, 20.6879, -85.6168, 0.88", "-114.227, 20.8669, -85.7174, 1.11", "-114.881, 21.1633, -85.8912, 1.11", "-115.907, 21.6513, -86.1566, 0.37", "-116.698, 22.069, -86.3557, 0.37", "-117.147, 22.3509, -86.4633, 0.66", "-117.803, 22.895, -86.6531, 0.66", "-118.303, 23.4322, -86.8331, 0.37", "-118.705, 23.9966, -87.0217, 0.52", "-118.846, 24.2442, -87.1049, 0.66", "-119.047, 24.647, -87.2357, 0.66", "-119.592, 25.7603, -87.5833, 0.37", "-119.856, 26.2449, -87.7095, 0.37", "-120.17, 26.6575, -87.7653, 0.37", "-120.52, 26.9894, -87.7514, 0.88", "-121.105, 27.4249, -87.6636, 0.81", "-121.399, 27.6066, -87.6021, 0.81", "-122.148, 28.0189, -87.415, 0.29", "-123.133, 28.5414, -87.1607, 0.29", "-123.743, 28.8984, -86.9545, 0.52", "-124.474, 29.3758, -86.6901, 0.44", "-124.829, 29.6228, -86.5606, 0.44", "-125.294, 29.9718, -86.3704, 0.81", "-125.833, 30.4353, -86.1266, 0.81", "-126.822, 31.4361, -85.6256, 0.29", "-127.215, 31.864, -85.4154, 0.44", "-127.582, 32.2759, -85.1923, 0.29", "-127.993, 32.7141, -84.953, 0.29", "-128.539, 33.2582, -84.6697, 0.29", "-128.963, 33.652, -84.4871, 0.29", "-129.472, 34.082, -84.3094, 0.59", "-130.453, 34.8899, -83.9523, 0.22", "-131.087, 35.4022, -83.7238, 0.22", "-131.428, 35.6536, -83.5998, 0.52", "-131.749, 35.8554, -83.4757, 0.52" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-57.0022, -31.3828, 55.6567, 0.29", "-64.5976, -36.2103, 62.9407, 0.29", "-70.5248, -42.72, 70.3132, 0.29", "-76.0774, -49.1039, 78.0844, 0.29", "-80.9978, -56.1332, 85.6585, 0.29", "-84.2756, -63.6701, 93.5607, 0.29", "-88.5205, -71.1224, 101.091, 0.29", "-92.797, -78.5938, 108.583, 0.29" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-57.0022, -31.3828, 55.6567, 0.29", "-62.691, -34.3984, 60.6183, 0.29", "-68.3753, -38.3081, 64.8357, 0.29", "-73.4806, -42.683, 69.2835, 0.29", "-77.8523, -47.3345, 74.183, 0.29", "-81.8535, -52.4676, 78.8619, 0.29", "-85.0683, -58.4179, 83.0511, 0.29", "-88.8569, -63.6784, 87.7511, 0.29" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-12.8779, -80.3913, 21.8279, 0.66", "-13.631, -82.6116, 20.9293, 0.66", "-13.823, -83.201, 20.714, 1.03", "-14.0167, -83.8181, 20.568, 1.03", "-14.3737, -84.9982, 20.4062, 1.03", "-14.6136, -85.8931, 20.3522, 1.03", "-14.8662, -86.9873, 20.3563, 0.81", "-15.0305, -87.9681, 20.5421, 0.81", "-15.1283, -89.4087, 20.9432, 1.4", "-15.1193, -90.0269, 21.1622, 1.62", "-15.0335, -90.9501, 21.5791, 1.4", "-14.9303, -91.5591, 21.8773, 1.92", "-14.7318, -92.386, 22.2943, 1.4", "-14.3549, -93.6379, 22.9364, 1.69", "-14.0718, -94.4745, 23.3219, 1.11", "-13.6922, -95.5971, 23.8082, 0.81", "-13.5246, -96.1276, 24.0208, 1.11", "-13.3475, -96.7615, 24.2492, 1.25", "-13.0261, -98.1748, 24.708, 0.96", "-12.9262, -98.8916, 24.905, 0.74", "-12.9019, -99.579, 25.0592, 0.81", "-13.0256, -100.626, 25.2137, 0.52", "-13.217, -101.377, 25.2703, 0.88", "-13.4535, -102.012, 25.2447, 0.88", "-13.7762, -102.712, 25.1021, 0.88", "-14.0733, -103.334, 24.9145, 0.66", "-14.3564, -104.003, 24.6322, 0.66", "-14.6581, -104.946, 24.0773, 0.88", "-14.7974, -105.577, 23.6319, 1.33", "-14.8642, -106.061, 23.2711, 1.47", "-14.9078, -106.517, 22.9322, 1.62", "-14.9961, -107.447, 22.2865, 0.74", "-15.1176, -108.502, 21.6874, 0.74", "-15.2658, -109.324, 21.356, 0.74", "-15.419, -109.977, 21.2117, 0.74", "-15.6471, -110.879, 21.1533, 0.66", "-15.8607, -111.816, 21.2341, 0.66", "-16.1022, -113.169, 21.5444, 0.96", "-16.1705, -113.866, 21.7717, 0.88", "-16.1672, -114.492, 21.9957, 0.88", "-16.0411, -115.659, 22.4067, 0.52", "-15.8267, -116.733, 22.7712, 1.18", "-15.7021, -117.259, 22.9138, 1.62", "-15.5685, -117.853, 23.0229, 1.62", "-15.4111, -118.691, 23.1515, 0.96", "-15.3232, -119.341, 23.2385, 0.96", "-15.2631, -120.324, 23.3511, 0.66", "-15.3204, -121.617, 23.4602, 0.52", "-15.4666, -122.778, 23.5759, 0.59", "-15.7508, -124.115, 23.7301, 0.74", "-15.8561, -124.462, 23.7795, 1.11", "-16.1311, -125.126, 23.9192, 1.25", "-16.7103, -126.191, 24.2178, 0.88", "-17.0896, -126.721, 24.4247, 0.66", "-17.4998, -127.189, 24.6448, 0.66", "-17.906, -127.603, 24.8454, 0.59", "-18.7124, -128.438, 25.2071, 0.59", "-19.1639, -128.919, 25.3777, 0.44", "-19.7024, -129.543, 25.528, 0.44", "-20.1457, -130.124, 25.5928, 0.74", "-20.5015, -130.663, 25.6097, 0.74", "-20.8061, -131.177, 25.5907, 0.66", "-21.1958, -131.929, 25.5053, 1.03", "-21.4881, -132.526, 25.4408, 1.4", "-21.8015, -133.198, 25.3749, 1.4", "-22.0771, -133.78, 25.3234, 1.47", "-22.5152, -134.702, 25.2589, 0.74", "-22.8546, -135.419, 25.2017, 0.74" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-12.8779, -80.3913, 21.8279, 0.44", "-12.4622, -80.7731, 22.4205, 0.44", "-12.2244, -81.1191, 22.8201, 0.44", "-12.0699, -81.5876, 23.1905, 0.37", "-11.9124, -82.5237, 23.7229, 0.59", "-11.8937, -82.8952, 23.8769, 0.52", "-11.9116, -83.3782, 24.035, 0.44", "-12.0744, -84.1687, 24.2424, 0.44", "-12.3117, -84.8419, 24.408, 0.44", "-12.5214, -85.2542, 24.5203, 0.59", "-12.8598, -85.7306, 24.7053, 0.59", "-13.2643, -86.1345, 25.0167, 0.37", "-13.8469, -86.5823, 25.5738, 0.59", "-14.3827, -86.9288, 26.1626, 0.88", "-14.7271, -87.1235, 26.5529, 0.81", "-15.4271, -87.4964, 27.3388, 1.03", "-16.1306, -87.8704, 28.1115, 0.88", "-16.7543, -88.2305, 28.7438, 0.44", "-17.2459, -88.5803, 29.1846, 0.44", "-17.5529, -88.8546, 29.4245, 0.66", "-17.9559, -89.2621, 29.658, 0.66", "-18.2991, -89.6289, 29.7553, 0.66", "-18.7798, -90.1512, 29.7789, 0.66", "-19.191, -90.6008, 29.7658, 1.33", "-19.3704, -90.8124, 29.7467, 1.47", "-19.7171, -91.2308, 29.7038, 1.03", "-20.1514, -91.7678, 29.6546, 0.81", "-20.5204, -92.2211, 29.6227, 0.74", "-20.9642, -92.764, 29.6023, 0.52", "-21.2782, -93.1637, 29.6019, 0.44", "-23.9492, -97.7461, 32.7055, 0.44", "-25.8274, -102.644, 35.8468, 0.44", "-28.1791, -107.56, 38.6247, 0.44", "-31.6766, -112.251, 40.51, 0.44", "-35.4695, -116.21, 43.3988, 0.44", "-38.7781, -120.158, 46.8394, 0.44", "-42.1563, -124.267, 49.9935, 0.44", "-46.4834, -128.177, 52.1164, 0.44", "-51.5689, -131.693, 52.9404, 0.44" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "5.84104, -22.4108, -4.08966, 1.47", "5.36324, -23.7324, -4.53125, 1.47", "4.86214, -25.4394, -4.94641, 1.33", "4.52348, -26.8038, -5.16529, 1.55", "4.29035, -27.9141, -5.24292, 1.55", "4.07418, -29.0694, -5.17526, 1.77", "3.8035, -30.5525, -4.92673, 1.77", "3.65747, -31.4705, -4.63943, 2.14", "3.52975, -32.2388, -4.31219, 2.58", "3.35202, -33.2219, -3.86655, 2.36", "2.99644, -35.0242, -3.14256, 1.77", "2.67184, -36.5762, -2.68923, 1.47", "2.41516, -37.8754, -2.48944, 1.18", "2.17985, -39.2539, -2.42633, 1.11", "2.0156, -40.4784, -2.50073, 1.33", "1.87249, -42.1467, -2.78777, 1.25", "1.84622, -43.6056, -3.16953, 1.47", "1.90376, -44.9131, -3.54963, 1.62", "1.9829, -45.8948, -3.83623, 2.14", "2.03248, -46.5725, -4.02064, 2.58", "2.05715, -47.547, -4.24908, 2.43", "1.99351, -49.1155, -4.56149, 2.14", "1.84926, -50.3811, -4.79548, 1.92", "1.60011, -51.6352, -5.01666, 1.47", "1.15461, -53.1824, -5.29451, 1.25", "0.68306, -54.4581, -5.48609, 1.11", "0.251219, -55.4122, -5.58851, 1.4", "-0.0640308, -56.0255, -5.63379, 1.55", "-0.562282, -56.963, -5.65928, 1.18", "-1.03812, -57.9225, -5.61883, 0.88", "-1.46433, -58.9332, -5.57002, 1.18", "-1.79842, -59.9235, -5.5216, 1.03", "-2.07348, -60.8566, -5.46717, 1.03", "-2.41132, -62.2411, -5.39798, 1.47", "-2.56338, -63.1212, -5.37037, 1.77", "-2.70912, -64.5065, -5.38022, 1.77", "-2.77827, -65.5714, -5.4721, 2.06" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "5.84104, -22.4108, -4.08966, 1.77", "6.41866, -24.6904, -4.64969, 1.77", "6.67587, -25.8312, -4.91667, 1.99", "6.97162, -27.1429, -5.22366, 1.99", "7.37516, -28.9327, -5.64254, 3.17", "7.55694, -29.7389, -5.83122, 3.76", "7.86799, -31.1185, -6.15409, 4.2", "8.03805, -32.3379, -6.4033, 3.9" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "4.48557, 41.4011, -0.359339, 0.205294", "5.97663, 56.3268, -0.359339, 0.205294", "7.46769, 71.2525, -0.359339, 0.205294" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "-38.7503, 80.4666, -19.8447, 0.29", "-38.9957, 81.4817, -20.0314, 0.29", "-39.3176, 82.9801, -20.6558, 0.29", "-39.532, 84.3152, -21.3084, 0.29", "-39.6837, 85.7446, -22.0842, 0.29", "-39.7571, 86.7655, -22.6899, 0.29", "-39.8506, 88.4429, -23.6926, 0.29", "-39.9499, 91.436, -25.6869, 0.29", "-39.9727, 92.3541, -26.3407, 0.37", "-40.0168, 93.4579, -27.1582, 0.37", "-40.1086, 94.8148, -28.2051, 0.37", "-40.1801, 95.9306, -29.0754, 0.22", "-40.265, 97.0965, -29.9511, 0.22", "-40.4476, 98.3795, -30.717, 1.03", "-40.5108, 98.61, -30.8533, 1.03" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-38.7503, 80.4666, -19.8447, 0.52", "-40.5194, 81.6111, -19.556, 0.52", "-41.3541, 82.2277, -19.3616, 0.52", "-42.2008, 82.9598, -19.1328, 0.44", "-42.5807, 83.3435, -19.0205, 0.59", "-42.9895, 83.8177, -18.887, 0.59", "-43.7441, 84.7301, -18.6166, 0.37", "-44.6166, 85.9436, -18.3265, 0.37", "-45.1509, 86.7293, -18.1152, 0.37", "-45.6942, 87.5187, -17.8941, 0.37", "-46.3053, 88.3765, -17.6306, 0.29", "-46.8779, 89.1399, -17.3858, 0.29", "-47.5374, 89.9301, -17.1302, 0.81", "-47.8422, 90.2409, -17.0407, 0.81", "-48.3611, 90.7011, -16.9157, 0.74", "-49.0651, 91.2835, -16.8169, 0.74", "-49.6646, 91.7481, -16.8346, 0.96", "-50.2534, 92.1944, -16.957, 0.96", "-50.6354, 92.503, -17.0982, 0.59", "-51.3511, 93.1758, -17.48, 0.29", "-51.98, 93.8948, -17.95, 0.29", "-52.6323, 94.7623, -18.5488, 0.29", "-53.0847, 95.4216, -18.9856, 0.22", "-53.7588, 96.4521, -19.6482, 0.22", "-54.285, 97.2992, -20.1699, 0.74", "-54.8923, 98.3001, -20.7165, 0.37", "-55.3963, 99.1682, -21.095, 0.37", "-55.8673, 100.021, -21.4069, 0.81", "-56.204, 100.596, -21.6258, 1.18", "-56.5318, 101.039, -21.8181, 1.18", "-57.3719, 101.977, -22.3226, 0.29", "-58.2664, 102.904, -22.8509, 0.29", "-58.8299, 103.462, -23.2125, 0.29", "-59.3985, 103.999, -23.6103, 0.29", "-60.2414, 104.731, -24.204, 0.74", "-60.8485, 105.159, -24.644, 0.74" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "127.618, 32.0096, 58.997, 0.29", "137.154, 32.6347, 65.2702, 0.29", "146.425, 33.004, 71.9509, 0.29", "156.056, 34.5628, 77.89, 0.29", "165.007, 37.4441, 84.3212, 0.29" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "127.618, 32.0096, 58.997, 0.29", "137.624, 32.7592, 65.7762, 0.29", "147.876, 35.3112, 71.6474, 0.29", "159.129, 37.5981, 75.4017, 0.29", "169.404, 41.7841, 80.0599, 0.29" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "76.2279, 34.8322, 3.67012, 0.44", "77.1673, 34.905, 3.29039, 0.44", "77.5158, 34.9946, 3.10739, 0.37", "78.1329, 35.226, 2.76108, 0.59", "78.468, 35.3699, 2.57171, 0.74", "79.3279, 35.763, 2.10618, 0.37", "80.2148, 36.1862, 1.65464, 0.29", "80.7385, 36.5085, 1.37726, 0.29", "81.1133, 36.7654, 1.20496, 0.88", "81.2508, 36.8716, 1.146, 1.11", "81.5918, 37.143, 1.02388, 1.11", "81.9147, 37.3785, 0.97343, 1.18", "82.5169, 37.7031, 0.9721, 0.74", "82.9272, 37.9085, 0.989173, 0.59" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "76.2279, 34.8322, 3.67012, 0.29", "76.6189, 35.2301, 3.88265, 0.29", "76.8021, 35.4178, 3.99137, 0.29", "77.0368, 35.6583, 4.13064, 0.66", "77.2902, 35.918, 4.28098, 0.29", "77.4799, 36.1124, 4.39355, 0.29", "77.8601, 36.502, 4.61916, 0.29", "78.0763, 36.7064, 4.77313, 0.29", "81.3718, 39.8561, 6.19769, 0.29", "84.1415, 43.2537, 8.04918, 0.29", "86.3079, 47.1801, 9.5018, 0.29", "88.9599, 50.7749, 11.0941, 0.29" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-73.9441, -60.627, -59.0825, 0.81", "-74.3191, -61.5781, -60.3067, 0.81", "-74.3903, -61.6989, -60.465, 0.81", "-75.3346, -62.9364, -62.0191, 0.37", "-75.6185, -63.2647, -62.3922, 0.52", "-75.8925, -63.5781, -62.7341, 0.66", "-76.2067, -63.9517, -63.1252, 0.66", "-76.91, -64.6972, -63.8542, 0.37", "-77.356, -65.159, -64.3247, 0.37", "-78.0474, -65.846, -65.0273, 0.37", "-78.4718, -66.2663, -65.478, 0.66", "-79.1523, -66.9296, -66.1882, 1.11", "-79.4741, -67.2312, -66.4985, 1.25", "-80.5591, -68.1636, -67.5756, 0.22", "-81.0097, -68.4927, -68.0171, 0.29", "-81.4027, -68.731, -68.3876, 0.59", "-81.8494, -68.9729, -68.7765, 0.81", "-82.3227, -69.2342, -69.1968, 0.81", "-83.544, -70.0333, -70.2784, 0.37", "-83.902, -70.3136, -70.5839, 0.37", "-84.4832, -70.9027, -71.1317, 0.59", "-84.6958, -71.1671, -71.3404, 0.81", "-85.4487, -72.2732, -72.0632, 0.44", "-85.956, -73.1269, -72.4986, 0.44", "-86.3572, -73.8624, -72.7836, 0.37", "-86.8391, -74.7834, -73.1089, 0.37", "-87.1985, -75.4603, -73.3463, 0.66", "-87.4921, -75.9592, -73.5407, 0.81", "-87.7841, -76.4187, -73.7075, 0.81", "-88.3337, -77.2265, -74.0193, 0.29", "-88.6557, -77.669, -74.1811, 0.96", "-89.4438, -78.7044, -74.4941, 0.29", "-89.9461, -79.3801, -74.6684, 0.29", "-90.4446, -80.0553, -74.7962, 0.44", "-90.7286, -80.4283, -74.8568, 0.44", "-91.1905, -81.0247, -74.916, 0.29", "-91.4443, -81.3583, -74.9679, 0.59", "-91.8311, -81.9102, -75.0603, 0.59", "-92.1897, -82.4669, -75.1862, 0.52", "-92.7632, -83.303, -75.4342, 0.37", "-93.132, -83.8246, -75.6152, 0.88", "-93.8236, -84.7965, -75.9829, 0.44", "-94.209, -85.3563, -76.1913, 0.59", "-94.5235, -85.8174, -76.3566, 0.59", "-94.8996, -86.3766, -76.5262, 0.59", "-95.2887, -86.9453, -76.6458, 0.37", "-95.6019, -87.3473, -76.6938, 0.37", "-96.1225, -87.9226, -76.6837, 0.29", "-96.3204, -88.1183, -76.656, 0.29", "-96.8263, -88.6062, -76.53, 0.88", "-97.1665, -88.9402, -76.409, 1.18", "-97.7411, -89.4526, -76.1795, 0.29", "-98.1662, -89.8007, -76.0132, 0.29", "-98.8046, -90.32, -75.8125, 0.29", "-99.0956, -90.5718, -75.7375, 0.88", "-99.3787, -90.8325, -75.6866, 0.88", "-100.308, -91.7138, -75.623, 0.22", "-100.624, -92.0194, -75.6442, 0.22", "-101.323, -92.6721, -75.7433, 0.59", "-101.479, -92.8148, -75.7769, 0.59", "-102.11, -93.3842, -75.9268, 0.22", "-102.472, -93.7163, -76.0247, 0.44", "-102.977, -94.2302, -76.1938, 0.22", "-103.672, -94.9315, -76.4163, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-73.9441, -60.627, -59.0825, 0.29", "-74.971, -60.7401, -58.9778, 0.29", "-75.6026, -60.8456, -58.887, 0.29", "-76.2219, -60.9746, -58.8052, 0.66", "-76.5172, -61.0522, -58.7701, 0.66", "-77.5554, -61.3594, -58.6414, 0.29", "-78.0032, -61.5001, -58.5906, 0.29", "-78.3322, -61.6258, -58.5228, 0.66", "-78.6439, -61.7601, -58.4534, 0.66", "-79.7097, -62.2441, -58.2152, 0.29", "-80.0888, -62.4012, -58.1377, 0.52", "-80.454, -62.5305, -58.0751, 0.52", "-81.4669, -62.8113, -57.8927, 0.22", "-81.939, -62.9115, -57.8028, 0.59", "-82.242, -62.9611, -57.7325, 0.74", "-82.8319, -63.0245, -57.5913, 0.29", "-83.1305, -63.045, -57.5234, 0.29", "-83.5218, -63.0537, -57.4367, 0.96", "-83.908, -63.0297, -57.3828, 0.96", "-84.9606, -62.951, -57.2018, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-22.8546, -135.419, 25.2017, 0.29", "-22.574, -135.444, 25.9519, 0.29", "-21.9122, -135.547, 27.57, 0.29", "-21.4429, -135.666, 28.7225, 0.59", "-20.8251, -135.938, 30.3282, 0.66", "-19.9558, -136.494, 32.5639, 0.59", "-19.365, -137.032, 34.0122, 0.29", "-18.9554, -137.547, 34.8415, 0.52", "-18.7403, -138.146, 35.1144, 0.66", "-18.4732, -139.465, 35.1358, 0.37", "-18.1805, -141.158, 34.9321, 0.29", "-17.9757, -142.499, 34.6728, 0.29", "-17.8006, -143.829, 34.3476, 0.29", "-17.6268, -145.037, 34.0311, 0.29", "-17.3525, -146.464, 33.6406, 0.29", "-17.053, -147.685, 33.3016, 0.29", "-12.2144, -155.627, 39.7016, 0.29", "-7.7916, -162.202, 47.8708, 0.29", "-1.22205, -169.07, 54.1008, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-22.8546, -135.419, 25.2017, 0.74", "-23.4925, -136.143, 24.9136, 0.74", "-24.0493, -136.89, 24.663, 0.52", "-24.4724, -137.526, 24.4812, 0.52", "-25.1339, -138.69, 24.2109, 0.59", "-25.3994, -139.284, 24.1323, 0.96", "-25.6015, -139.929, 24.074, 1.18", "-25.669, -140.479, 23.9931, 1.18", "-25.6447, -141.0, 23.9153, 0.96", "-25.5007, -141.763, 23.749, 0.66", "-25.1571, -142.845, 23.3212, 0.52", "-24.7697, -143.812, 22.8616, 0.52", "-24.2713, -144.835, 22.2679, 0.29", "-24.0465, -145.218, 21.9947, 0.37", "-23.4271, -146.103, 21.1799, 0.29", "-22.7576, -146.898, 20.1425, 0.29", "-23.1091, -155.539, 18.1298, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-2.77827, -65.5714, -5.4721, 0.37", "-6.42338, -67.0358, -4.78393, 0.37", "-8.08181, -67.8011, -3.90302, 0.37", "-9.28629, -68.3984, -3.08625, 0.37", "-10.102, -68.8152, -2.51562, 0.37", "-11.125, -69.3551, -1.75303, 0.59", "-12.1152, -69.8934, -1.00325, 0.74", "-12.8576, -70.3085, -0.269193, 0.52", "-13.4177, -70.6284, 0.291933, 0.59", "-13.9217, -70.9683, 0.75275, 0.74", "-14.8041, -71.5551, 1.42714, 0.52", "-15.3689, -71.9091, 1.77684, 0.52", "-15.9068, -72.2127, 2.04722, 0.74", "-16.5144, -72.5334, 2.32209, 0.74", "-17.0961, -72.8485, 2.57236, 0.52", "-17.9409, -73.3004, 2.9228, 0.52" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-2.77827, -65.5714, -5.4721, 0.88", "-2.96668, -66.4137, -5.53441, 0.88", "-3.32136, -67.475, -5.50721, 0.66", "-3.67354, -68.225, -5.29237, 0.74", "-3.97518, -68.7248, -5.08003, 0.88", "-4.5041, -69.4817, -4.72634, 0.88", "-4.84219, -69.9392, -4.51411, 1.03", "-5.25535, -70.4398, -4.23702, 1.03", "-6.19342, -71.6064, -3.57468, 1.03", "-6.72564, -72.3395, -3.19518, 1.03", "-7.16054, -73.0788, -2.87971, 0.88", "-7.39996, -73.712, -2.69435, 0.88", "-7.47344, -74.3024, -2.57954, 0.88", "-7.3211, -75.4472, -2.50596, 1.25", "-7.19315, -75.8636, -2.50424, 1.55", "-6.93841, -76.4503, -2.47528, 1.55", "-6.51114, -77.2664, -2.34914, 1.55", "-6.20475, -77.7767, -2.20167, 1.55", "-5.60733, -78.6636, -1.80949, 1.03", "-5.11611, -79.301, -1.4022, 1.03", "-4.69342, -79.8049, -1.01221, 0.81", "-4.00124, -80.5558, -0.318516, 0.81", "-3.50523, -81.0499, 0.193073, 1.03", "-3.01698, -81.4816, 0.663739, 1.03", "-2.45369, -81.9298, 1.14952, 1.03", "-1.98553, -82.2953, 1.48338, 0.88", "-1.2641, -82.8949, 1.92028, 0.88", "-0.901583, -83.2157, 2.09792, 0.96", "-0.484135, -83.6288, 2.27692, 0.96", "0.0823661, -84.2567, 2.49632, 1.33", "0.381918, -84.6331, 2.59386, 1.62", "0.630245, -84.9741, 2.67342, 1.62" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "8.03805, -32.3379, -6.4033, 0.66", "7.52989, -35.4832, -4.09626, 0.66", "7.31379, -36.5057, -3.46393, 0.88", "6.92122, -38.5254, -2.39158, 1.03", "6.77513, -39.4866, -1.92455, 1.03", "6.68566, -40.3338, -1.52356, 1.03", "6.62703, -41.3809, -1.02286, 0.37", "6.59656, -42.5012, -0.611534, 0.37", "6.73516, -43.6239, -0.182449, 0.59", "7.16188, -44.5974, 0.244455, 0.81", "7.55669, -45.1558, 0.58379, 0.81", "8.01771, -45.6565, 1.00363, 0.52", "8.44622, -46.0673, 1.42854, 0.81", "9.06492, -46.6623, 2.09875, 1.25", "9.29458, -46.9566, 2.40114, 1.69", "9.52559, -47.4701, 2.82249, 1.69", "9.67166, -48.6845, 3.49698, 0.96", "9.61967, -49.4636, 3.77822, 0.66", "9.53298, -50.0682, 3.94525, 0.81", "9.32481, -51.3333, 4.26882, 0.44", "9.20603, -52.3412, 4.55751, 0.44", "9.17272, -53.1391, 4.81842, 0.44", "9.23275, -53.8652, 5.16961, 0.88", "9.45476, -54.8291, 5.90832, 1.25", "9.78615, -55.7426, 6.82127, 0.66", "10.1221, -56.4434, 7.62286, 0.52", "10.3353, -56.8539, 8.10029, 0.52", "10.8443, -57.9108, 9.27555, 0.74", "11.2543, -58.8476, 10.2097, 1.25", "11.4206, -59.2462, 10.5398, 1.25", "11.7034, -59.9273, 10.9938, 0.52", "12.0815, -60.8026, 11.4315, 0.44", "12.6161, -61.9557, 11.8552, 0.37", "12.974, -62.6325, 12.016, 0.37", "13.3752, -63.3105, 12.1332, 0.96", "13.6944, -63.8148, 12.2137, 1.33", "14.6697, -65.189, 12.4476, 0.29", "15.0369, -65.6342, 12.5337, 0.29", "15.4177, -66.0362, 12.615, 0.29", "15.5594, -66.1854, 12.6466, 0.44", "18.3057, -74.4693, 16.4388, 0.44", "22.5707, -82.3557, 19.7333, 0.44", "26.2116, -90.8546, 21.8653, 0.44", "30.1605, -99.0803, 24.5744, 0.44", "33.4934, -107.385, 27.8, 0.44", "36.7603, -115.95, 30.2252, 0.44" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "8.03805, -32.3379, -6.4033, 1.03", "8.00848, -34.485, -6.89038, 1.03", "8.19951, -36.6353, -7.28317, 1.03", "8.50697, -38.2022, -7.50245, 0.96", "8.91639, -39.6901, -7.66434, 0.96", "9.42437, -41.1358, -7.7782, 0.96", "9.82962, -42.1164, -7.78899, 1.18", "10.6634, -43.4665, -7.5558, 1.47", "11.5126, -44.5576, -7.17685, 2.21", "11.867, -44.9898, -6.97087, 2.21", "12.3893, -45.6984, -6.56803, 1.99", "13.2344, -47.102, -5.72144, 1.33", "13.9184, -48.6613, -4.83025, 0.88", "14.2676, -49.9159, -4.17434, 0.74", "14.4025, -51.0951, -3.67065, 0.74", "14.3941, -52.5014, -3.20713, 1.33", "14.321, -53.3513, -3.00749, 1.62", "14.2021, -54.2751, -2.87481, 1.92", "14.0808, -55.2595, -2.8181, 1.69", "13.9757, -57.1294, -2.8017, 1.33", "14.0445, -59.0204, -2.84683, 1.03", "14.2236, -60.3197, -2.9076, 0.88", "14.5197, -61.5204, -2.96617, 1.03", "15.0516, -63.0892, -3.04591, 1.03", "15.7227, -64.66, -3.14356, 1.03", "16.3804, -65.991, -3.27516, 1.33", "16.8833, -66.9866, -3.44192, 1.69", "17.4415, -68.1889, -3.73165, 1.47", "17.7692, -69.0254, -4.0032, 1.03", "18.151, -70.2919, -4.50564, 0.96", "18.4099, -71.4392, -5.04835, 0.96", "18.6314, -72.8384, -5.77188, 1.4", "18.795, -74.3213, -6.55097, 1.4", "18.9253, -75.6166, -7.22328, 1.55", "19.0211, -76.3246, -7.55218, 1.77", "19.2693, -77.6939, -8.08558, 0.96", "19.5765, -78.9349, -8.4347, 0.66", "19.9645, -80.1177, -8.57165, 0.66", "20.4811, -81.2728, -8.50961, 0.96", "21.1501, -82.4282, -8.28681, 1.11", "21.5133, -82.9366, -8.14244, 1.4", "21.8512, -83.3415, -8.00579, 1.4", "22.5628, -84.1832, -7.72183, 1.4", "23.4074, -85.2743, -7.42436, 0.66", "23.7858, -85.8522, -7.34172, 0.52", "24.218, -86.6671, -7.31686, 0.52", "24.769, -87.994, -7.32567, 0.81", "25.2303, -89.4761, -7.31662, 1.03", "25.4426, -90.4509, -7.32716, 1.03", "25.6082, -91.7631, -7.33527, 1.03", "25.715, -93.0616, -7.42359, 1.03", "25.7897, -94.4054, -7.57821, 0.88", "25.9048, -96.0376, -7.8866, 1.03", "26.064, -97.487, -8.24759, 0.52", "26.2951, -98.8526, -8.6817, 0.52", "26.7398, -100.829, -9.50481, 0.88", "26.9616, -101.63, -9.9178, 1.11", "27.3456, -102.891, -10.6686, 0.59", "27.5044, -103.425, -10.9866, 0.59", "27.7843, -104.637, -11.5402, 0.52", "27.9212, -105.944, -11.886, 0.52", "27.8105, -107.021, -11.8895, 1.11", "27.5589, -107.935, -11.7656, 1.25", "27.0009, -109.322, -11.4315, 1.18", "26.379, -110.679, -11.0312, 0.52", "25.9217, -111.628, -10.6801, 0.52", "25.3621, -112.93, -10.1985, 0.52", "25.1926, -113.42, -10.0557, 0.81", "24.9782, -114.313, -9.90102, 0.74", "24.7896, -115.454, -9.87104, 0.74", "24.626, -116.576, -9.96339, 1.03", "24.3812, -118.048, -10.23, 0.66", "24.1686, -119.009, -10.479, 0.52", "23.8164, -120.107, -10.8555, 1.11", "23.4532, -121.01, -11.2987, 1.11", "22.8891, -122.275, -12.0678, 0.81", "22.3049, -123.584, -12.9909, 0.66", "21.9182, -124.499, -13.6668, 0.88", "21.4957, -125.749, -14.6292, 0.66", "21.0947, -127.391, -16.0395, 0.59", "20.9381, -128.463, -17.0395, 0.88", "20.8739, -129.401, -17.9558, 1.18", "20.8462, -130.079, -18.6218, 0.96", "20.8233, -130.978, -19.5016, 0.96", "20.7599, -132.626, -21.0011, 0.52", "20.7123, -133.173, -21.4487, 0.81", "20.5967, -134.247, -22.2521, 0.66", "20.4803, -135.079, -22.7257, 0.66", "20.3095, -136.123, -23.1081, 0.96", "20.0411, -137.445, -23.1217, 0.88", "19.7986, -138.626, -22.8577, 0.88", "19.5824, -139.662, -22.5555, 0.37", "19.2193, -141.563, -21.9277, 1.03", "19.0312, -142.561, -21.6219, 1.03", "18.5464, -144.761, -21.0332, 0.44", "18.2139, -146.344, -20.789, 0.44", "18.0983, -147.251, -20.8497, 0.74", "18.1332, -148.17, -21.2008, 0.74", "18.3697, -149.424, -21.9909, 0.44", "18.6561, -150.425, -22.7232, 0.66", "19.18, -151.863, -23.8685, 0.44", "19.9941, -153.923, -25.5021, 0.88", "20.9, -156.193, -27.1916, 0.52", "21.3748, -157.353, -28.0215, 0.74", "22.0312, -158.916, -29.0816, 1.33", "22.3821, -159.807, -29.6413, 1.33", "22.9604, -161.65, -30.6542, 0.74", "23.2166, -162.829, -31.179, 0.66", "23.4071, -164.505, -31.8188, 0.66", "23.4279, -165.664, -32.2732, 0.81", "23.3216, -166.836, -32.7844, 0.59", "23.1571, -167.618, -33.1307, 1.18", "23.0404, -167.978, -33.2995, 1.18", "22.552, -169.248, -33.895, 0.44", "22.0888, -170.362, -34.3078, 0.44", "21.7283, -171.308, -34.5777, 1.03", "21.5353, -171.995, -34.6867, 1.4", "21.2867, -173.485, -34.611, 0.52", "21.1951, -174.505, -34.4722, 0.52", "21.2231, -175.873, -34.0934, 0.74", "21.2654, -176.377, -33.8702, 0.74", "21.3577, -177.404, -33.2149, 0.59", "21.4831, -178.589, -32.2139, 0.96" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "8.03805, -32.3379, -6.4033, 0.88", "12.6483, -32.2572, -10.5247, 0.88", "13.9811, -32.1832, -11.5511, 0.88", "15.3276, -32.0973, -12.4311, 1.03", "16.2466, -32.0351, -12.9435, 1.33", "17.0963, -31.9835, -13.3743, 1.62", "18.3271, -31.9278, -13.9581, 1.84", "19.3926, -31.8184, -14.3118, 1.47", "20.6438, -31.7038, -14.9103, 1.18", "21.5121, -31.6024, -15.7708, 0.81", "22.3802, -31.4683, -17.0243, 0.81", "22.9123, -31.4009, -17.9218, 1.11", "24.0118, -31.3478, -19.9985, 1.33", "25.1511, -31.3562, -22.2798, 1.77", "27.733, -31.5196, -27.55, 1.47", "28.5725, -31.606, -29.2002, 1.11", "29.4472, -31.707, -30.7823, 1.11", "30.6617, -31.8391, -32.6666, 0.81", "31.4321, -31.9234, -33.605, 0.96", "32.7098, -32.0045, -34.7171, 0.88", "33.7838, -31.9088, -35.4411, 0.74", "34.6003, -31.6614, -36.0479, 0.59", "35.6327, -31.1123, -36.9878, 1.03", "36.3948, -30.5953, -37.7294, 1.55", "37.0939, -30.0875, -38.4258, 1.69", "39.1737, -28.5537, -40.5872, 1.69", "39.8131, -28.1012, -41.2808, 1.69", "41.4196, -27.0589, -43.0021, 0.88", "42.34, -26.5579, -43.9189, 0.81", "43.4612, -26.0921, -44.8796, 1.11", "44.9487, -25.6758, -45.9535, 1.18", "46.3288, -25.5051, -46.7266, 0.59", "46.9505, -25.5146, -47.0395, 0.59", "48.4815, -25.7936, -47.6559, 0.96", "49.5804, -26.1781, -48.0656, 1.18", "50.5212, -26.6493, -48.3586, 1.18", "51.4887, -27.226, -48.5714, 1.4", "52.607, -27.9474, -48.7621, 1.4", "53.6472, -28.5926, -48.9216, 1.11", "54.3849, -28.9834, -49.0147, 1.11", "55.2963, -29.3264, -49.1161, 1.03", "56.4924, -29.609, -49.2302, 1.03", "57.5372, -29.7292, -49.3132, 1.03", "58.7439, -29.7552, -49.3917, 0.96", "60.4075, -29.665, -49.4973, 0.88", "62.2217, -29.4709, -49.5691, 0.88", "63.4266, -29.2812, -49.5921, 1.03", "64.3715, -29.1041, -49.6225, 1.11", "65.1449, -28.955, -49.679, 1.18", "65.8357, -28.8533, -49.8168, 1.18", "67.1946, -28.7962, -50.3826, 0.81", "68.1437, -28.9006, -50.9995, 0.74", "69.3655, -29.1692, -51.9689, 1.18", "70.2889, -29.4284, -52.7783, 1.4", "72.151, -30.0023, -54.5567, 1.18", "73.5732, -30.432, -56.0047, 0.88", "74.6252, -30.7078, -57.1684, 0.74", "75.6913, -30.9147, -58.3356, 0.74", "76.6719, -30.9928, -59.3359, 1.11", "77.7248, -30.9477, -60.3562, 1.4", "78.7779, -30.8327, -61.3291, 1.4", "80.2424, -30.6808, -62.7063, 1.11", "81.098, -30.6333, -63.5566, 0.74", "82.17, -30.6951, -64.6811, 0.66", "83.4433, -30.9766, -66.0745, 0.81", "84.7364, -31.4797, -67.4167, 0.74", "85.8178, -32.0239, -68.5149, 1.25", "86.4217, -32.3539, -69.0898, 1.69", "87.2138, -32.7489, -69.7959, 1.69", "88.0499, -33.0416, -70.4138, 1.4", "89.3657, -33.2231, -71.1633, 0.88", "91.2977, -33.0917, -72.0556, 0.81", "92.1779, -32.9484, -72.412, 0.81", "93.4094, -32.7321, -72.8373, 0.81", "94.9983, -32.4626, -73.2721, 0.81", "95.9939, -32.3318, -73.4749, 0.81", "97.4031, -32.2536, -73.6855, 0.81", "98.3517, -32.33, -73.7563, 0.96", "99.8014, -32.689, -73.904, 0.96", "100.775, -33.0942, -74.0997, 1.18", "101.632, -33.5627, -74.3914, 1.47", "102.501, -34.0892, -74.7602, 1.47", "103.765, -34.8664, -75.3544, 0.74", "105.233, -35.7108, -76.0839, 0.74", "107.032, -36.6214, -77.0289, 0.66", "108.709, -37.3684, -77.9734, 0.74", "109.756, -37.7506, -78.5716, 0.81", "110.959, -38.0649, -79.2387, 0.81", "111.573, -38.1521, -79.5562, 1.11", "113.05, -38.179, -80.2805, 1.25", "113.699, -38.1154, -80.6444, 1.62", "114.405, -37.9742, -81.1718, 1.62", "115.768, -37.6329, -82.3773, 0.59", "116.612, -37.409, -83.2061, 0.59", "117.877, -37.09, -84.4884, 0.88", "119.574, -36.7051, -86.2214, 1.4", "121.293, -36.3869, -87.9124, 0.74", "122.311, -36.2493, -88.8673, 0.59", "123.184, -36.1859, -89.604, 0.81", "123.972, -36.1909, -90.1101, 0.81", "124.739, -36.2472, -90.4066, 0.96", "125.536, -36.3106, -90.5726, 0.96", "126.49, -36.3646, -90.7139, 0.59", "127.977, -36.3783, -90.9603, 0.59", "129.414, -36.3133, -91.2022, 0.66", "130.244, -36.2306, -91.4164, 1.03", "131.595, -36.0503, -91.8513, 1.03", "132.909, -35.7759, -92.6428, 0.59", "133.555, -35.5844, -93.1815, 0.59", "134.394, -35.2924, -94.0185, 0.59", "135.662, -34.8856, -95.396, 1.11", "136.229, -34.747, -96.0193, 1.33", "139.432, -34.1749, -99.3746, 1.03", "140.013, -34.0881, -99.9316, 1.4", "141.175, -33.9308, -100.921, 0.81", "142.358, -33.7753, -101.786, 0.74", "143.876, -33.5767, -102.669, 0.59", "144.893, -33.4405, -103.142, 0.59", "146.542, -33.2258, -103.647, 0.59", "148.495, -32.8896, -104.241, 0.88", "149.189, -32.7007, -104.443, 1.25", "149.806, -32.4677, -104.616, 1.55", "150.719, -32.0583, -104.887, 1.55", "151.457, -31.7139, -105.128, 1.33", "152.37, -31.2858, -105.433, 0.66", "153.537, -30.7622, -105.819, 0.66", "154.312, -30.4453, -106.151, 0.66", "155.717, -29.8882, -106.935, 0.66", "156.323, -29.7222, -107.547, 0.66", "156.686, -29.6598, -108.019, 0.96", "157.115, -29.6206, -108.636, 0.96", "158.399, -29.6131, -110.534, 0.74", "159.17, -29.648, -111.661, 1.62", "162.263, -29.8594, -115.973, 0.66", "162.733, -29.8788, -116.597, 0.66", "163.462, -29.8851, -117.464, 1.11", "164.424, -29.8729, -118.468, 1.11", "165.418, -29.8154, -119.297, 0.52", "166.414, -29.6891, -119.927, 0.52", "167.69, -29.3834, -120.523, 1.25", "168.674, -29.1037, -120.99, 0.88", "170.546, -28.4576, -121.885, 0.44", "171.616, -28.0191, -122.379, 0.44", "173.203, -27.2868, -123.081, 0.52", "174.254, -26.7571, -123.529, 0.88", "174.776, -26.4817, -123.74, 1.11", "175.219, -26.2158, -123.976, 1.11", "175.573, -25.9681, -124.233, 1.11", "176.718, -25.0773, -125.407, 0.52", "177.167, -24.7213, -126.052, 0.52", "177.786, -24.2476, -127.065, 0.81", "179.236, -23.2203, -129.503, 0.81", "179.925, -22.7612, -130.628, 1.11", "180.232, -22.5749, -131.073, 1.92", "182.054, -21.6206, -133.233, 0.59", "182.291, -21.5194, -133.446, 0.59", "183.175, -21.238, -133.943, 0.88", "184.334, -20.9752, -134.298, 0.44", "186.235, -20.6341, -134.766, 0.44", "187.738, -20.4133, -135.088, 0.74", "188.585, -20.3268, -135.299, 0.74", "189.841, -20.2821, -135.824, 0.52", "190.587, -20.3198, -136.311, 0.52", "191.698, -20.4607, -137.282, 0.59", "192.118, -20.5181, -137.708, 0.59", "193.949, -20.6956, -139.683, 0.59", "195.155, -20.7312, -140.986, 0.81", "196.288, -20.6725, -142.212, 1.4", "196.893, -20.5639, -142.817, 1.55", "198.3, -20.0618, -143.998, 0.44", "198.903, -19.7298, -144.385, 0.88", "199.654, -19.2223, -144.68, 0.88", "200.471, -18.6635, -144.978, 0.59", "201.735, -17.8551, -145.454, 0.59", "202.585, -17.406, -145.898, 0.81", "203.551, -17.0168, -146.522, 0.81", "204.828, -16.5993, -147.515, 0.52", "206.268, -16.1741, -148.843, 0.74", "206.733, -16.0306, -149.461, 0.74", "207.701, -15.6167, -151.389, 0.37", "208.08, -15.362, -152.438, 0.37", "208.542, -14.8786, -154.138, 0.37", "208.859, -14.3648, -155.643, 0.59", "209.682, -12.7616, -159.767, 0.88", "210.079, -11.9896, -161.644, 0.52", "210.242, -11.7405, -162.306, 0.52", "210.65, -11.3179, -163.75, 0.52", "211.036, -11.046, -164.813, 0.81", "211.602, -10.7533, -166.039, 0.59", "212.136, -10.5494, -166.974, 0.59", "213.951, -10.0316, -169.975, 1.18", "216.089, -9.54971, -173.719, 0.74", "216.599, -9.46116, -174.703, 0.74", "217.057, -9.39486, -175.692, 0.88" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "-40.5108, 98.61, -30.8533, 0.29", "-41.7955, 98.4344, -31.3608, 0.29", "-42.8318, 98.4456, -31.7941, 0.29", "-43.3543, 98.5938, -32.1032, 0.59", "-43.9387, 98.9044, -32.5079, 0.59", "-44.4145, 99.2252, -32.8425, 0.59", "-44.9276, 99.6163, -33.1867, 0.44", "-45.3211, 100.075, -33.474, 0.59", "-46.0133, 101.006, -34.1006, 0.37", "-46.3457, 101.454, -34.4377, 0.29", "-46.6891, 101.863, -34.7716, 0.59", "-47.0691, 102.275, -35.124, 0.59", "-47.901, 103.143, -35.878, 0.29", "-48.6665, 103.979, -36.6093, 0.29", "-49.0149, 104.384, -36.9833, 0.29", "-49.657, 105.169, -37.8208, 0.29", "-50.0443, 105.665, -38.4497, 0.29", "-50.4407, 106.188, -39.1831, 0.52", "-50.7944, 106.675, -39.8845, 0.66", "-51.3043, 107.45, -40.9633, 0.44", "-51.689, 108.084, -41.91, 0.59", "-52.13, 108.83, -43.23, 0.96", "-52.3086, 109.054, -43.7282, 0.52" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "-40.5108, 98.61, -30.8533, 0.66", "-38.8597, 98.7978, -31.0463, 0.66", "-37.5405, 98.9477, -31.2006, 0.29", "-36.5829, 99.0566, -31.3125, 0.44", "-35.4024, 99.1908, -31.4505, 0.44" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-60.8485, 105.159, -24.644, 0.29", "-61.3681, 105.875, -25.368, 0.29", "-62.0255, 106.706, -26.301, 0.59", "-62.454, 107.256, -26.9241, 0.44", "-63.0733, 108.106, -27.8312, 0.88", "-63.3461, 108.54, -28.2588, 1.03", "-63.9524, 109.644, -29.2607, 0.52", "-64.1442, 110.049, -29.6146, 0.44", "-64.5266, 110.92, -30.286, 0.66", "-64.818, 111.629, -30.7873, 0.88", "-65.3895, 113.006, -31.6622, 0.59", "-65.78, 113.911, -32.1982, 0.74", "-66.1893, 114.824, -32.7, 0.74", "-66.7731, 116.024, -33.3652, 0.37", "-67.0498, 116.526, -33.6523, 0.37", "-67.7217, 117.574, -34.2659, 0.66", "-68.2065, 118.189, -34.6363, 0.66", "-68.7285, 118.727, -34.9808, 0.52", "-69.5023, 119.373, -35.4177, 0.88", "-70.0422, 119.74, -35.677, 0.88", "-70.8545, 120.182, -35.994, 0.52", "-71.8498, 120.635, -36.3112, 0.52", "-73.0994, 121.17, -36.6499, 0.88", "-73.9141, 121.528, -36.8435, 0.88", "-74.9349, 121.986, -37.0544, 0.52", "-75.8112, 122.391, -37.224, 0.44", "-76.8079, 122.864, -37.418, 0.37", "-77.7881, 123.375, -37.6004, 0.37", "-78.7662, 123.944, -37.7855, 0.29", "-80.3571, 124.96, -38.1051, 0.29", "-81.0989, 125.452, -38.2612, 0.29", "-81.9518, 126.003, -38.4444, 1.11" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-60.8485, 105.159, -24.644, 0.29", "-61.8396, 104.598, -23.207, 0.29", "-62.3789, 104.293, -22.4249, 0.29", "-62.7611, 104.077, -21.8708, 0.22", "-63.2487, 103.801, -21.1639, 0.22", "-63.7911, 103.494, -20.3773, 0.22" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "165.007, 37.4441, 84.3212, 0.29", "167.211, 43.9615, 91.3958, 0.29", "170.001, 49.5619, 99.1014, 0.29", "173.837, 54.7213, 106.693, 0.29", "176.723, 58.6445, 115.435, 0.29" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "165.007, 37.4441, 84.3212, 0.29", "172.992, 35.8159, 87.0522, 0.29", "180.926, 35.6485, 90.3911, 0.29", "188.298, 36.7518, 94.6834, 0.29" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "82.9272, 37.9085, 0.989173, 0.37", "83.0906, 38.5203, 1.14121, 0.37", "83.2973, 39.4317, 1.40524, 0.37", "83.4471, 40.0919, 1.59652, 0.22", "83.7619, 41.48, 1.99867, 0.22", "84.0018, 42.538, 2.30517, 0.66", "84.2908, 43.8122, 2.6743, 1.11", "84.3497, 44.1308, 2.78587, 1.11", "86.4987, 51.9955, 4.02129, 1.11", "89.1175, 59.7436, 5.12654, 1.11", "92.2181, 67.2172, 6.95478, 1.11", "95.2824, 74.4638, 9.70613, 1.11", "99.309, 81.6155, 10.9996, 1.11", "103.496, 88.6421, 12.5466, 1.11" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "82.9272, 37.9085, 0.989173, 0.44", "83.6229, 38.0654, 1.02487, 0.44", "84.3686, 38.1985, 1.06654, 0.44", "85.1714, 38.3183, 1.16455, 0.74", "85.6608, 38.3827, 1.24241, 1.03", "86.12, 38.4381, 1.32928, 1.03", "86.4824, 38.4796, 1.38598, 1.03", "87.0925, 38.5501, 1.42394, 0.66", "87.9292, 38.6784, 1.39028, 0.66", "88.2222, 38.7505, 1.33524, 0.81", "88.6642, 38.9116, 1.2017, 0.44", "89.5579, 39.3403, 0.855588, 0.44", "90.6155, 39.9513, 0.393897, 0.37", "90.9848, 40.1911, 0.209241, 0.37", "91.5541, 40.5781, -0.0956087, 0.37", "92.2389, 41.0595, -0.440763, 0.66", "92.6395, 41.3506, -0.618005, 0.66", "93.2061, 41.7577, -0.787528, 0.37", "93.5481, 41.9849, -0.846416, 0.37", "93.9831, 42.2646, -0.911632, 0.59", "94.3691, 42.5174, -0.981385, 0.59", "94.7403, 42.7659, -1.11643, 0.44", "95.3672, 43.1408, -1.39408, 0.66", "95.4815, 43.2002, -1.44782, 0.96", "95.9199, 43.38, -1.64003, 0.96", "96.5621, 43.5719, -1.91034, 1.11", "98.0467, 43.9039, -2.46731, 0.44", "98.8809, 44.0535, -2.73945, 0.44", "99.5328, 44.1569, -2.91867, 0.37", "100.335, 44.292, -3.13283, 0.37", "100.824, 44.3853, -3.24932, 0.29", "101.501, 44.563, -3.39165, 0.22", "101.957, 44.778, -3.50531, 0.59", "102.193, 44.9781, -3.60932, 0.59", "102.868, 45.6579, -4.05199, 0.29", "103.152, 45.9512, -4.26131, 0.37", "103.489, 46.2754, -4.51127, 0.52", "103.86, 46.5559, -4.77894, 0.74", "104.382, 46.865, -5.22575, 0.96", "105.306, 47.3412, -6.17059, 0.29", "105.658, 47.5252, -6.60021, 0.52", "105.812, 47.6165, -6.82776, 0.81", "106.308, 47.9766, -7.68921, 1.11", "107.189, 48.7465, -9.45785, 0.81", "107.563, 49.1537, -10.3111, 0.96", "107.949, 49.6773, -11.2805, 0.66", "108.237, 50.1053, -12.0033, 0.52", "108.533, 50.5472, -12.6455, 0.52", "108.667, 50.7352, -12.8472, 0.74", "109.046, 51.0914, -13.0888, 0.74", "109.303, 51.2634, -13.1831, 0.96", "109.71, 51.4577, -13.2978, 0.96", "110.374, 51.7351, -13.5397, 0.74", "111.024, 52.0212, -13.8403, 0.44", "111.73, 52.4069, -14.3013, 0.44", "111.993, 52.5901, -14.5256, 0.96", "112.456, 53.0125, -15.0667, 1.18", "113.078, 53.7411, -16.0171, 0.66", "113.295, 54.057, -16.4424, 0.66", "113.67, 54.7024, -17.3496, 0.59", "113.807, 54.9609, -17.6891, 0.52", "114.201, 55.6754, -18.5572, 0.52", "114.313, 55.8891, -18.7782, 0.96", "114.557, 56.3388, -19.1778, 0.96", "115.024, 57.1991, -19.8384, 0.59", "115.43, 57.9756, -20.3195, 0.59", "115.689, 58.4864, -20.5973, 0.88", "116.067, 59.2408, -20.9276, 0.74", "116.409, 59.8472, -21.17, 0.74", "116.823, 60.4591, -21.3732, 0.88", "117.093, 60.7555, -21.4704, 0.88", "117.609, 61.166, -21.6705, 0.37", "118.158, 61.5138, -21.8969, 0.37", "119.026, 61.957, -22.2663, 0.37", "119.635, 62.2387, -22.5564, 0.37", "120.345, 62.55, -22.9318, 0.37", "120.773, 62.7503, -23.1637, 0.59", "121.304, 63.0189, -23.4463, 0.74", "121.66, 63.2213, -23.642, 0.74", "122.329, 63.664, -24.0399, 0.44", "122.686, 63.9029, -24.2441, 0.37", "123.741, 64.5199, -24.7208, 0.37", "124.246, 64.7594, -24.9045, 0.74", "124.515, 64.8593, -24.9847, 0.74" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "88.9599, 50.7749, 11.0941, 0.29", "95.5978, 59.324, 14.5166, 0.29", "103.052, 67.7801, 15.6357, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "88.9599, 50.7749, 11.0941, 0.29", "93.7147, 57.1564, 13.8626, 0.29", "98.5301, 63.0681, 17.5372, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-23.1091, -155.539, 18.1298, 0.29", "-20.0703, -165.092, 16.1149, 0.29", "-18.4169, -175.115, 15.5163, 0.29", "-17.2023, -185.002, 13.3576, 0.29", "-17.3279, -195.129, 12.4897, 0.29", "-18.3869, -205.205, 11.5848, 0.29" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-23.1091, -155.539, 18.1298, 0.29", "-26.352, -162.15, 14.7716, 0.29" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "0.630245, -84.9741, 2.67342, 0.37", "0.0108076, -86.6641, 0.594351, 0.37", "-0.447593, -87.5578, -0.516594, 0.37", "-0.94373, -88.331, -1.53539, 0.44", "-1.58603, -89.1695, -2.68225, 0.74", "-2.26692, -89.9403, -3.75888, 0.59", "-3.02038, -90.6585, -4.80703, 0.59", "-3.53944, -90.9499, -5.32548, 0.74", "-4.46071, -91.2655, -6.08979, 0.88", "-5.07542, -91.3885, -6.51203, 1.18", "-5.72137, -91.4513, -6.89549, 0.59", "-6.72109, -91.4884, -7.45094, 0.44", "-7.71056, -91.5066, -8.00618, 0.52", "-8.16122, -91.5328, -8.27647, 0.74", "-8.92549, -91.6862, -8.73902, 0.74", "-9.45534, -91.9093, -9.10235, 0.59", "-9.97631, -92.2752, -9.4966, 0.59", "-10.6338, -92.958, -10.0308, 0.59", "-11.3155, -93.8989, -10.5906, 0.44", "-12.0846, -95.152, -11.2, 0.37", "-12.5244, -95.9953, -11.5321, 1.03", "-12.811, -96.6338, -11.7508, 1.03", "-13.0341, -97.2204, -11.923, 0.96", "-13.4006, -98.4385, -12.2017, 0.66", "-13.6659, -99.5355, -12.4105, 0.66", "-13.8992, -100.788, -12.6386, 0.88", "-14.0091, -101.558, -12.7679, 1.03", "-14.1102, -102.65, -12.9487, 0.88", "-14.1781, -104.054, -13.1878, 0.52", "-14.1884, -105.15, -13.3846, 0.52", "-14.1744, -105.983, -13.5502, 0.96", "-14.1647, -106.525, -13.6711, 0.96", "-14.1805, -107.857, -14.0238, 0.59", "-14.2476, -108.916, -14.3547, 0.66", "-14.3588, -109.706, -14.6515, 0.81", "-14.5469, -110.666, -15.0692, 0.81", "-14.6841, -111.2, -15.3364, 0.81", "-14.9274, -112.172, -15.913, 0.44", "-15.0391, -112.678, -16.2503, 0.81", "-15.1416, -113.408, -16.765, 0.81", "-15.1849, -114.45, -17.4909, 0.52", "-15.1137, -115.296, -18.0467, 0.52", "-14.813, -116.842, -18.9879, 0.74", "-14.6121, -117.599, -19.4105, 1.11", "-14.4305, -118.297, -19.7684, 1.11", "-14.2367, -119.188, -20.1779, 0.96", "-14.0988, -120.188, -20.6032, 0.59", "-14.0586, -121.426, -21.1067, 0.44", "-14.234, -122.796, -21.6674, 0.44", "-14.4905, -123.825, -22.1173, 0.44", "-14.8133, -124.787, -22.5385, 0.74", "-15.0666, -125.495, -22.8375, 0.74", "-15.3216, -126.18, -23.1053, 0.74", "-15.7807, -127.406, -23.5393, 0.66", "-16.1169, -128.321, -23.8313, 0.44", "-16.5444, -129.504, -24.1923, 0.44", "-17.2408, -131.153, -24.6867, 0.44", "-17.6561, -131.919, -24.9178, 0.88", "-18.1624, -132.632, -25.1383, 1.18", "-18.5723, -133.094, -25.275, 1.18", "-19.0979, -133.593, -25.425, 1.03", "-20.6083, -134.815, -25.8322, 0.66", "-22.0124, -135.79, -26.1839, 0.66", "-23.2074, -136.59, -26.4776, 1.25", "-23.8429, -137.02, -26.6311, 1.55", "-24.6104, -137.55, -26.8168, 1.03" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "0.630245, -84.9741, 2.67342, 0.74", "0.0298648, -85.949, 1.93659, 0.74", "-0.675053, -87.0666, 1.07491, 0.74", "-1.04514, -87.7378, 0.640782, 0.74", "-1.40144, -88.4924, 0.218691, 0.81", "-2.06683, -90.2314, -0.585295, 0.52", "-2.47703, -91.6216, -1.11879, 0.74", "-2.6219, -92.3648, -1.33691, 0.74", "-2.51979, -94.0294, -1.5084, 0.74", "-2.21958, -94.8633, -1.46659, 0.81", "-1.5904, -95.8812, -1.27883, 0.66", "-1.19158, -96.3863, -1.13738, 1.11", "-0.774367, -96.8788, -1.01303, 1.11", "-0.247935, -97.504, -0.926359, 0.81", "0.402199, -98.3478, -0.953754, 0.81", "0.978025, -99.1681, -1.03541, 0.96", "1.48183, -99.9317, -1.13407, 0.88", "2.07984, -100.87, -1.24586, 0.96", "2.48976, -101.568, -1.34045, 1.11", "2.93134, -102.436, -1.49488, 1.11", "3.27673, -103.249, -1.67253, 0.74", "3.6956, -104.513, -1.97714, 0.66", "3.8674, -105.173, -2.14163, 0.66", "4.14601, -106.7, -2.49904, 0.66", "4.28745, -108.301, -2.84723, 0.59", "4.28057, -109.227, -3.04574, 0.96", "4.17359, -110.378, -3.29183, 1.18", "4.02652, -111.235, -3.45935, 1.03", "3.81424, -112.241, -3.63371, 0.88", "3.54491, -113.548, -3.80815, 0.74", "3.36989, -114.688, -3.85516, 0.59", "3.25528, -115.655, -3.82603, 0.59", "3.16569, -116.458, -3.73167, 1.4", "3.0819, -117.052, -3.6089, 1.4", "2.86948, -118.57, -3.15343, 0.88", "2.66903, -120.36, -2.39391, 0.66", "2.58739, -121.111, -2.01462, 0.88", "2.47738, -122.065, -1.49815, 0.88", "2.27868, -123.552, -0.683852, 0.59", "2.11064, -124.499, -0.176547, 0.81", "1.75372, -126.064, 0.609366, 0.81", "1.54641, -126.869, 0.930818, 1.11", "1.38192, -127.53, 1.14974, 1.11", "1.16846, -128.479, 1.36646, 0.52", "1.00301, -129.376, 1.50202, 0.74", "0.866299, -130.175, 1.57361, 1.03", "0.791952, -130.844, 1.58362, 1.25", "0.787398, -131.504, 1.63024, 1.33", "0.896637, -132.592, 1.84914, 1.03", "1.14467, -133.613, 2.16678, 0.74", "1.46503, -134.443, 2.49155, 0.44", "1.86263, -135.198, 2.83622, 0.29", "2.58945, -136.239, 3.38843, 0.29", "3.61773, -137.385, 4.09745, 0.29", "4.23214, -137.901, 4.47272, 0.29", "4.82026, -138.264, 4.76135, 0.88", "5.3143, -138.523, 4.97567, 0.88", "6.13554, -138.92, 5.29529, 0.52", "6.51255, -139.099, 5.3953, 0.52", "7.19475, -139.452, 5.55938, 0.52", "7.71696, -139.838, 5.74063, 0.52", "8.39239, -140.554, 5.96691, 0.52", "8.70826, -141.009, 6.05125, 0.88", "9.04138, -141.571, 6.09455, 0.88", "9.44966, -142.259, 6.06786, 1.11", "9.88075, -142.898, 6.00999, 0.66", "10.7309, -143.918, 5.84453, 0.66", "11.1503, -144.283, 5.76883, 0.66", "11.9003, -144.804, 5.67326, 0.66", "12.5127, -145.176, 5.62352, 0.52", "13.555, -145.805, 5.52455, 0.66", "13.8909, -146.012, 5.52662, 0.66", "14.6299, -146.479, 5.66346, 0.44", "15.2448, -146.889, 5.87787, 0.44", "16.1006, -147.51, 6.31151, 0.52", "17.1211, -148.311, 6.99398, 0.66", "17.9951, -149.043, 7.65929, 0.44", "18.9327, -149.843, 8.43407, 0.81", "19.8069, -150.587, 9.1319, 0.52", "20.3831, -151.075, 9.55167, 0.74", "21.0842, -151.668, 9.9899, 0.29", "21.457, -151.991, 10.1496, 0.52", "22.012, -152.494, 10.207, 0.59", "23.0695, -153.498, 10.1992, 0.37", "23.8323, -154.231, 10.1114, 0.66", "24.2662, -154.645, 10.0368, 1.03", "24.961, -155.303, 9.88836, 1.03", "25.7292, -156.032, 9.76372, 0.74", "26.973, -157.202, 9.69226, 0.52" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "21.4831, -178.589, -32.2139, 0.44", "21.4055, -180.056, -32.127, 0.44", "21.341, -181.081, -32.065, 0.81", "21.2783, -181.867, -32.0179, 1.18", "21.1833, -182.92, -31.9593, 0.74", "21.0811, -184.013, -31.9045, 0.44", "20.9885, -184.976, -31.8604, 0.96", "20.8877, -185.973, -31.821, 0.96", "20.7852, -186.92, -31.7902, 1.18", "20.5753, -188.332, -31.7462, 0.74", "20.2939, -189.608, -31.7413, 0.66", "19.9823, -190.646, -31.7697, 0.66", "19.5118, -191.942, -31.8702, 0.66", "19.2493, -192.581, -31.9519, 1.03", "18.8511, -193.464, -32.1062, 0.81", "18.2258, -194.864, -32.4758, 0.52", "17.9235, -195.706, -32.7167, 0.44", "17.6847, -196.769, -32.9927, 0.37", "17.6289, -197.378, -33.1159, 0.66", "17.6127, -198.051, -33.195, 0.66", "17.6588, -199.816, -33.3403, 0.44", "17.7139, -201.593, -33.3992, 0.44", "17.6998, -203.014, -33.399, 0.66", "17.6022, -204.266, -33.3627, 0.81", "17.3695, -205.626, -33.3294, 0.96", "16.9273, -207.058, -33.2905, 1.11", "16.4337, -208.169, -33.2589, 0.81", "15.9231, -209.144, -33.2903, 0.88", "15.5192, -209.901, -33.3556, 0.66", "14.9484, -210.967, -33.4863, 0.29", "14.2336, -212.331, -33.6741, 0.29", "13.8193, -213.123, -33.7672, 0.52", "13.1705, -214.349, -33.9243, 0.52", "12.6293, -215.357, -34.0488, 0.37", "12.1147, -216.264, -34.1503, 0.29", "11.6087, -217.057, -34.2087, 0.29", "11.3827, -217.344, -34.2315, 0.88", "10.841, -217.827, -34.2757, 1.11", "10.1572, -218.25, -34.3093, 0.44", "9.28133, -218.663, -34.3356, 0.37", "8.42831, -218.994, -34.3678, 0.59", "7.65874, -219.248, -34.4082, 0.74", "6.64139, -219.558, -34.4724, 0.44", "5.75836, -219.829, -34.5241, 0.37", "5.17483, -220.03, -34.5519, 0.88", "4.51005, -220.311, -34.5673, 1.11", "4.03873, -220.552, -34.5585, 1.11", "3.56052, -220.812, -34.5234, 1.11", "2.38575, -221.484, -34.3993, 0.29", "1.61303, -221.945, -34.3145, 0.59", "1.10179, -222.259, -34.2544, 0.59", "-0.14501, -223.093, -34.0897, 0.29", "-0.897732, -223.656, -33.9738, 0.29", "-1.48129, -224.151, -33.8762, 0.52", "-2.15773, -224.788, -33.7602, 0.52", "-2.51371, -225.142, -33.6978, 0.81", "-3.11002, -225.836, -33.5947, 0.81", "-3.68837, -226.715, -33.497, 0.29", "-4.34092, -227.898, -33.3797, 0.29", "-4.69414, -228.589, -33.3052, 1.18" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "21.4831, -178.589, -32.2139, 0.22", "22.5271, -179.139, -32.1197, 0.22", "23.628, -179.718, -32.0204, 0.22", "24.9571, -180.418, -31.9006, 0.22", "25.8719, -180.9, -31.8181, 0.22", "26.8427, -181.411, -31.7305, 0.22", "27.8414, -181.937, -31.6404, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "217.057, -9.39486, -175.692, 0.74", "220.616, -11.3305, -177.397, 0.74", "221.615, -11.941, -177.693, 0.44", "222.356, -12.3669, -177.842, 0.74", "223.527, -12.9542, -178.013, 0.52", "225.107, -13.6137, -178.171, 0.52", "226.799, -14.2021, -178.354, 0.52", "228.074, -14.5402, -178.325, 0.52", "229.386, -14.7932, -178.326, 0.52", "231.013, -14.9438, -178.467, 0.52", "232.339, -14.901, -178.695, 0.74", "233.688, -14.703, -179.042, 1.03", "234.178, -14.5961, -179.202, 1.4", "234.659, -14.4792, -179.384, 1.4", "236.585, -14.0406, -180.186, 0.44", "237.332, -13.8817, -180.422, 0.74", "238.468, -13.6624, -180.607, 0.74", "239.267, -13.5103, -180.603, 0.96", "240.037, -13.3709, -180.467, 0.96", "241.074, -13.2264, -180.142, 0.96", "243.591, -13.0406, -178.979, 0.66", "244.65, -13.0433, -178.382, 0.81", "245.288, -13.0936, -177.954, 0.81", "246.85, -13.2923, -176.819, 0.52", "248.022, -13.4791, -175.96, 0.52", "249.31, -13.7224, -175.079, 0.52", "250.558, -13.9794, -174.388, 0.52", "252.152, -14.2905, -173.627, 0.44", "253.014, -14.4361, -173.334, 0.96", "253.924, -14.5699, -173.258, 1.11", "255.191, -14.7451, -173.454, 0.44", "256.294, -14.966, -173.902, 0.37", "257.072, -15.2141, -174.398, 0.37", "258.298, -15.7426, -175.442, 0.66", "259.637, -16.4312, -176.801, 0.74", "260.197, -16.741, -177.441, 0.81", "260.994, -17.1925, -178.461, 0.81", "262.01, -17.7424, -179.847, 0.66", "262.943, -18.1737, -181.077, 0.66", "263.84, -18.5252, -182.163, 0.29", "264.472, -18.7467, -182.861, 0.59", "265.155, -18.9553, -183.565, 0.74", "265.803, -19.1329, -184.227, 0.44", "266.658, -19.339, -185.061, 0.37", "267.545, -19.5669, -185.893, 0.37", "268.421, -19.8156, -186.665, 0.59", "269.122, -20.0433, -187.253, 0.59", "270.902, -20.799, -188.95, 0.29", "272.034, -21.4207, -190.153, 0.29", "272.608, -21.8097, -190.83, 0.29", "273.104, -22.18, -191.424, 0.74", "273.596, -22.5795, -192.029, 0.74", "275.557, -24.4665, -194.478, 0.37", "276.142, -25.1645, -195.219, 0.52", "276.578, -25.8109, -195.861, 0.81", "277.028, -26.5469, -196.621, 0.37", "277.418, -27.2028, -197.372, 0.37" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "217.057, -9.39486, -175.692, 0.88", "217.583, -9.07777, -176.795, 0.88", "217.797, -9.02716, -177.292, 1.25", "217.988, -9.02801, -177.805, 1.25", "218.226, -9.03805, -178.536, 0.59", "218.864, -9.06489, -180.49, 0.59", "219.504, -9.09186, -182.453, 0.96", "219.834, -9.16968, -183.516, 1.11", "220.385, -9.39158, -185.475, 1.25", "220.698, -9.58335, -186.728, 1.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "-81.9518, 126.003, -38.4444, 0.22", "-81.8115, 124.668, -37.5141, 0.22", "-81.7242, 123.836, -36.9344, 0.22", "-81.5285, 121.973, -35.6366, 0.22", "-81.4092, 120.836, -34.8448, 0.22", "-81.3066, 119.859, -34.1643, 0.22" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "-81.9518, 126.003, -38.4444, 0.22", "-82.5932, 126.316, -38.3518, 0.22", "-83.1574, 126.608, -38.2714, 0.22", "-83.6941, 126.886, -38.1949, 0.22", "-84.2075, 127.152, -38.1217, 0.22", "-84.9805, 127.552, -38.0116, 0.22", "-85.3748, 127.756, -37.9554, 0.37", "-85.7707, 127.989, -37.8789, 0.37" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "176.723, 58.6445, 115.435, 0.29", "180.325, 63.7222, 123.983, 0.29" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "176.723, 58.6445, 115.435, 0.29", "180.97, 68.184, 124.005, 0.29" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "188.298, 36.7518, 94.6834, 0.29", "190.821, 38.5666, 85.3775, 0.29" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "188.298, 36.7518, 94.6834, 0.29", "177.967, 34.8069, 97.6764, 0.29" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "124.515, 64.8593, -24.9847, 0.37", "123.961, 64.8977, -25.6312, 0.37", "123.318, 64.8278, -26.7423, 0.66", "123.023, 64.6743, -27.647, 0.29", "122.811, 64.5139, -28.4814, 0.29", "122.565, 64.3223, -29.5335, 0.29", "122.038, 63.9527, -31.8235, 0.29", "121.812, 63.7465, -32.8883, 0.81", "121.208, 63.0429, -36.1017, 0.44", "121.035, 62.7779, -37.2342, 0.96", "120.926, 62.5665, -38.2135, 1.18", "120.834, 62.318, -39.5033, 0.88" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "124.515, 64.8593, -24.9847, 0.37", "125.815, 65.1044, -24.9628, 0.37", "127.319, 65.6074, -24.9298, 0.29", "127.872, 65.8387, -24.9132, 0.66", "128.41, 66.0999, -24.8822, 0.66", "129.076, 66.4953, -24.8494, 0.37", "130.0, 67.0834, -24.8178, 0.37", "130.993, 67.8223, -24.7914, 0.81", "131.398, 68.1577, -24.7499, 1.11", "131.962, 68.6454, -24.6567, 1.33", "133.085, 69.7081, -24.388, 0.44", "133.733, 70.3868, -24.1503, 0.52", "134.558, 71.3582, -23.735, 1.03", "135.415, 72.5115, -23.1875, 0.52", "135.808, 73.0936, -22.8758, 0.66", "136.193, 73.7403, -22.4929, 0.66", "136.707, 74.795, -21.809, 0.44", "136.913, 75.3942, -21.4666, 0.29", "137.131, 76.1561, -21.105, 0.44", "137.426, 77.0473, -20.7908, 0.66", "137.733, 77.7962, -20.5753, 0.37", "138.127, 78.6678, -20.3837, 0.37", "138.766, 80.0994, -20.1518, 0.29", "139.16, 81.0245, -20.0063, 0.29", "139.718, 82.5899, -19.7702, 0.29", "140.014, 83.6623, -19.5681, 0.29", "140.162, 84.4945, -19.3629, 1.55", "140.206, 85.18, -19.1473, 1.18", "140.119, 85.8998, -18.8124, 0.96", "139.721, 87.0494, -18.1452, 0.52", "138.953, 88.3574, -17.2466, 0.29", "138.319, 89.1531, -16.6498, 0.29", "137.98, 89.5246, -16.3645, 0.29", "137.031, 90.5385, -15.6263, 0.22", "136.742, 90.8555, -15.423, 0.66", "136.394, 91.2624, -15.1966, 0.66", "135.822, 92.0481, -14.8751, 0.37", "135.421, 92.8504, -14.6142, 0.29", "135.166, 93.6709, -14.4362, 0.22", "135.029, 94.413, -14.2741, 0.22", "134.922, 95.5528, -13.9508, 0.22", "134.926, 96.0661, -13.7804, 0.29", "135.003, 96.8315, -13.4837, 0.29", "135.183, 97.9719, -12.9972, 0.29", "135.512, 99.4498, -12.3624, 0.29", "135.746, 100.367, -11.9517, 0.29", "135.98, 101.103, -11.6119, 0.29", "136.309, 102.064, -11.147, 0.29", "136.87, 103.511, -10.4146, 0.29", "137.373, 104.624, -9.85462, 0.29" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-18.3869, -205.205, 11.5848, 0.29", "-17.5729, -215.161, 10.1242, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-18.3869, -205.205, 11.5848, 0.29", "-15.2927, -202.935, 17.6575, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-24.6104, -137.55, -26.8168, 0.37", "-24.8864, -138.737, -27.3558, 0.37", "-25.0182, -139.305, -27.6133, 0.81" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-24.6104, -137.55, -26.8168, 0.29", "-26.7574, -137.212, -30.3518, 0.29", "-27.4056, -137.114, -31.3625, 0.22", "-28.3056, -137.076, -32.6569, 0.22", "-28.8651, -137.118, -33.39, 1.47", "-29.28, -137.149, -33.9336, 1.69", "-29.6764, -137.178, -34.4529, 1.69", "-30.9776, -137.235, -35.583, 0.96", "-31.8616, -137.384, -36.4703, 0.29", "-32.5738, -137.663, -37.2932, 0.29" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "26.973, -157.202, 9.69226, 0.29", "27.327, -157.9, 8.40268, 0.29", "27.6356, -158.509, 7.27801, 0.44" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "26.973, -157.202, 9.69226, 0.29", "27.3287, -155.414, 8.83603, 0.29", "27.7174, -154.289, 7.78478, 0.29", "28.0334, -153.784, 6.8305, 0.29", "28.3401, -153.293, 5.90457, 0.52", "29.2075, -151.907, 3.28564, 0.44", "29.4986, -151.442, 2.40688, 0.29", "29.9525, -151.536, 0.871807, 0.29", "30.1111, -151.683, 0.311059, 0.29", "31.8974, -146.827, -7.65622, 0.29" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-4.69414, -228.589, -33.3052, 0.22", "-4.80375, -229.318, -33.2328, 0.22", "-4.9295, -230.156, -33.0979, 0.22", "-5.06625, -231.246, -32.9077, 0.22", "-5.16693, -232.141, -32.7475, 0.22", "-5.27272, -233.296, -32.5428, 0.22", "-5.35665, -234.211, -32.3804, 0.22", "-5.44632, -235.28, -32.2009, 0.22", "-5.47751, -235.959, -32.0828, 0.37", "-5.47649, -236.193, -32.0336, 0.37", "-5.45671, -236.849, -31.872, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-4.69414, -228.589, -33.3052, 1.55", "-5.35634, -228.924, -33.6613, 1.55", "-5.74144, -229.172, -33.8838, 1.55", "-6.50585, -229.688, -34.3239, 0.29", "-7.63473, -230.441, -34.9388, 0.44", "-7.91127, -230.607, -35.1151, 0.44", "-9.04176, -231.174, -35.9176, 0.29", "-9.73828, -231.472, -36.4494, 0.29", "-10.4305, -231.72, -36.9734, 0.29", "-11.2045, -231.932, -37.5318, 0.29", "-12.7701, -232.188, -38.5414, 0.29", "-14.1684, -232.258, -39.3775, 0.29", "-15.0584, -232.19, -39.8706, 0.22", "-15.9604, -232.056, -40.3335, 0.22", "-16.6718, -231.927, -40.6722, 0.22", "-17.4635, -231.767, -41.0056, 0.22", "-18.4898, -231.572, -41.3079, 0.22", "-19.2656, -231.385, -41.5039, 0.22", "-19.7967, -231.207, -41.6554, 0.52", "-20.2583, -231.01, -41.8064, 0.52" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "220.698, -9.58335, -186.728, 0.81", "223.682, -9.37775, -188.753, 0.81", "225.976, -9.32924, -190.191, 0.88", "227.798, -9.38869, -191.356, 0.37", "228.326, -9.40445, -191.688, 0.37", "229.48, -9.4389, -192.414, 0.66", "230.231, -9.46132, -192.886, 0.74", "230.485, -9.47407, -193.091, 0.74", "231.943, -9.64658, -193.904, 0.37", "232.673, -9.79359, -194.303, 0.66" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "220.698, -9.58335, -186.728, 0.44", "221.751, -8.75664, -188.285, 0.44", "222.495, -8.17283, -189.385, 0.44", "222.906, -7.85022, -189.993, 0.44", "223.714, -7.21637, -191.187, 1.18" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "120.834, 62.318, -39.5033, 0.96", "120.011, 62.5709, -42.4887, 0.96", "118.991, 62.7747, -45.4742, 0.59", "118.74, 62.8285, -46.1874, 0.59", "118.517, 62.8928, -46.8665, 0.37", "118.047, 63.0917, -48.4408, 0.29", "117.758, 63.2454, -49.4547, 0.29", "117.559, 63.4074, -50.1004, 0.66", "117.248, 63.8704, -51.2829, 0.22", "117.109, 64.1506, -52.0065, 0.22", "116.941, 64.4898, -52.9376, 0.88", "116.827, 64.6959, -53.5029, 0.88", "116.435, 65.2351, -55.0424, 0.37", "116.209, 65.4292, -55.7696, 0.96", "115.958, 65.5632, -56.5023, 1.11", "115.49, 65.7554, -57.9141, 0.44", "115.231, 65.862, -58.7821, 0.37", "115.05, 65.952, -59.4707, 0.52", "114.333, 66.3768, -62.4093, 0.37", "114.074, 66.618, -63.8037, 0.96", "113.913, 66.854, -64.8805, 0.96", "113.774, 67.1137, -65.973, 0.52", "113.684, 67.283, -66.7958, 1.33", "113.572, 67.4573, -67.7959, 1.33", "113.006, 68.1309, -71.8999, 0.52", "112.934, 68.2025, -72.3625, 0.52", "112.767, 68.3403, -73.3549, 0.52", "111.986, 68.831, -77.5588, 0.44", "111.576, 69.0456, -79.466, 0.59", "111.3, 69.199, -80.5905, 0.59", "110.975, 69.3952, -81.6352, 0.88", "110.85, 69.4865, -81.9853, 1.25", "110.579, 69.7241, -82.5637, 1.47", "109.845, 70.4595, -83.6031, 0.29", "109.15, 71.2081, -84.4773, 0.29", "108.862, 71.5196, -84.8151, 0.29", "108.357, 72.0763, -85.3643, 0.29", "108.039, 72.4518, -85.7155, 0.29", "107.285, 73.3983, -86.5477, 0.29", "106.986, 73.7649, -86.8762, 0.29", "106.569, 74.1875, -87.3058, 0.96", "106.297, 74.476, -87.6176, 1.25" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "120.834, 62.318, -39.5033, 0.15", "121.17, 63.5111, -39.7544, 0.15", "121.354, 64.1648, -39.892, 0.15", "121.502, 64.6901, -40.0025, 0.81", "121.631, 65.1462, -40.0985, 1.03", "121.8, 65.7472, -40.225, 1.03" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-25.0182, -139.305, -27.6133, 0.52", "-24.9044, -140.093, -28.1192, 0.52", "-24.7754, -141.362, -28.7888, 0.52", "-24.7581, -142.968, -29.5178, 0.37", "-24.7626, -143.707, -29.8446, 0.52", "-24.7837, -144.699, -30.276, 0.44", "-24.8164, -145.801, -30.7707, 0.37", "-24.8998, -146.917, -31.2496, 0.29", "-25.0548, -148.091, -31.707, 0.29", "-25.265, -149.616, -32.2439, 1.03", "-25.3255, -150.044, -32.4005, 1.18", "-25.5108, -151.265, -32.8978, 0.88", "-25.6295, -152.141, -33.2697, 0.44", "-25.7167, -153.281, -33.7312, 0.37", "-25.6917, -153.951, -33.9591, 0.59", "-25.6077, -154.579, -34.1165, 0.44", "-25.2989, -155.856, -34.3371, 0.44", "-25.0022, -156.762, -34.4292, 0.44", "-24.5002, -158.149, -34.5207, 0.52", "-24.0503, -159.438, -34.6009, 0.66", "-23.7799, -160.501, -34.6451, 0.88", "-23.7022, -161.239, -34.6583, 0.88", "-23.8274, -162.358, -34.6533, 0.52", "-24.2113, -163.319, -34.6844, 0.29", "-24.9571, -164.458, -34.7679, 0.29", "-25.9383, -165.751, -34.974, 0.29", "-26.6012, -166.607, -35.2014, 0.96", "-26.9795, -167.182, -35.4077, 1.18", "-27.3242, -167.823, -35.6472, 1.18", "-27.7498, -169.036, -36.0929, 0.59", "-28.001, -170.317, -36.4627, 0.52", "-28.145, -171.566, -36.7433, 0.52", "-28.2472, -173.182, -37.0832, 0.66", "-28.2905, -174.253, -37.2774, 0.66", "-28.3117, -175.405, -37.4357, 0.81", "-28.3262, -177.07, -37.5031, 0.81", "-28.4091, -178.259, -37.3437, 0.81" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-25.0182, -139.305, -27.6133, 0.37", "-25.802, -139.201, -27.2319, 0.37", "-26.8507, -139.114, -26.7812, 0.37", "-27.3552, -139.074, -26.5899, 0.37", "-28.4816, -138.971, -26.2154, 0.29", "-29.1551, -138.893, -26.0161, 0.29", "-29.9536, -138.8, -25.7798, 0.29", "-30.7237, -138.729, -25.5467, 0.37", "-31.1114, -138.711, -25.4699, 0.37", "-31.4973, -138.705, -25.4319, 0.29", "-31.922, -138.682, -25.4578, 0.22" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "27.6356, -158.509, 7.27801, 0.22", "26.908, -159.366, 7.12374, 0.22", "25.8596, -160.602, 6.90144, 0.22", "25.2637, -161.304, 6.77508, 0.29", "24.9389, -161.687, 6.70621, 0.29", "24.0973, -162.678, 6.52775, 0.22", "23.5473, -163.327, 6.41114, 0.22", "19.078, -171.628, 4.64292, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "27.6356, -158.509, 7.27801, 0.37", "27.2979, -159.77, 7.58792, 0.37", "26.9735, -160.896, 7.66065, 0.96", "26.5577, -162.279, 7.53073, 0.59", "26.2676, -163.321, 7.29623, 0.59", "25.9601, -164.426, 7.04762, 0.22", "25.6671, -165.479, 6.81081, 0.22", "25.3121, -166.592, 6.396, 0.22", "25.0303, -167.517, 5.87429, 0.22", "24.7295, -168.45, 5.145, 0.22", "22.8036, -178.366, 4.76193, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "223.714, -7.21637, -191.187, 0.37", "225.196, -5.78544, -197.159, 0.37", "225.445, -5.51314, -198.166, 0.66", "225.628, -5.25947, -198.941, 0.66", "225.713, -5.12311, -199.308, 0.96", "225.943, -4.71987, -200.223, 1.11", "226.236, -4.19219, -201.261, 1.11", "226.756, -3.2714, -202.36, 0.81", "227.195, -2.50522, -203.099, 1.4", "227.349, -2.24198, -203.302, 1.4", "227.982, -1.22641, -203.891, 0.37", "228.461, -0.523917, -204.141, 0.37", "229.078, 0.279468, -204.258, 0.37", "229.589, 0.898513, -204.237, 0.66", "229.998, 1.40134, -204.17, 0.66", "230.499, 2.14938, -204.065, 0.29", "230.807, 2.75467, -203.971, 0.52", "230.987, 3.21369, -203.908, 0.52", "231.257, 4.00883, -203.84, 0.29", "231.542, 4.84259, -203.809, 1.03", "231.998, 6.10185, -203.848, 0.66", "232.304, 6.90676, -203.905, 0.44", "232.418, 7.19351, -203.93, 0.66", "232.773, 8.08176, -204.022, 0.37", "232.965, 8.52301, -204.058, 0.52", "233.37, 9.35393, -204.087, 0.37", "233.68, 9.89917, -204.054, 0.37", "234.017, 10.4756, -204.012, 0.37", "234.355, 11.1347, -203.955, 0.37", "234.64, 11.7785, -203.881, 0.96", "234.76, 12.0485, -203.847, 0.96", "235.273, 13.1113, -203.69, 0.29", "235.709, 13.9689, -203.572, 0.29", "236.133, 14.7625, -203.475, 0.29", "236.493, 15.4275, -203.403, 1.11" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "223.714, -7.21637, -191.187, 0.52", "223.67, -2.86142, -193.042, 0.52", "223.663, -2.50161, -193.177, 0.52", "223.603, -0.805682, -193.745, 0.37", "223.586, -0.33101, -193.904, 0.29", "223.535, 1.10496, -194.385, 0.29", "223.491, 2.32574, -194.794, 0.29", "223.46, 3.49627, -194.848, 0.29", "223.441, 4.00329, -194.882, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "106.297, 74.476, -87.6176, 0.29", "105.5, 76.6226, -89.0071, 0.29", "105.215, 77.1329, -89.5383, 0.29", "104.8, 77.7669, -90.3467, 0.29", "104.066, 78.9043, -91.8172, 0.29", "103.792, 79.3566, -92.36, 0.44", "103.42, 79.9707, -93.097, 0.44", "102.237, 81.6673, -95.3079, 0.29", "101.67, 82.4258, -96.4075, 0.29", "101.352, 82.8475, -97.0814, 0.29", "100.873, 83.4857, -98.1179, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "106.297, 74.476, -87.6176, 0.22", "105.049, 73.5642, -86.9537, 0.22", "104.035, 72.9038, -86.3829, 0.22", "102.795, 72.1732, -85.6149, 1.4", "101.404, 71.3538, -84.7534, 0.22", "99.8516, 70.4395, -83.7922, 1.84", "98.4923, 69.6387, -82.9503, 0.22", "97.3498, 69.0151, -82.1182, 0.22", "96.2988, 68.4843, -81.2896, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "121.8, 65.7472, -40.225, 0.74", "121.356, 66.7294, -40.3015, 0.74", "120.578, 68.2801, -40.3946, 0.22", "120.037, 69.1868, -40.4624, 0.22", "118.848, 70.9236, -40.5899, 0.22", "117.73, 72.4572, -40.6113, 1.33", "117.175, 73.2234, -40.5739, 1.33", "115.996, 74.7739, -40.37, 0.22", "115.106, 75.854, -40.1489, 0.22", "114.509, 76.5159, -39.9876, 0.22", "113.15, 77.9109, -39.6817, 0.22", "112.162, 78.9786, -39.3653, 0.22", "111.597, 79.7212, -39.1424, 0.37", "111.117, 80.5318, -38.9097, 0.37", "110.696, 81.5173, -38.6223, 0.37", "110.445, 82.2989, -38.4343, 0.15", "109.751, 84.4477, -38.075, 0.22", "109.169, 86.2099, -37.8515, 0.22", "108.737, 87.4423, -37.6825, 0.22", "107.842, 89.6285, -37.4338, 0.22", "107.107, 91.1092, -37.264, 0.22", "106.07, 92.9351, -37.0315, 0.22", "105.656, 93.5853, -36.9493, 0.74", "103.832, 96.171, -36.5695, 0.29", "102.689, 97.6834, -36.3599, 0.29", "101.562, 99.1537, -36.1863, 0.29", "100.759, 100.245, -35.9935, 0.29", "99.8639, 101.614, -35.6282, 0.52", "99.0806, 102.875, -35.2223, 0.37", "98.1021, 104.556, -34.6339, 0.29", "97.8695, 104.973, -34.4753, 0.37", "96.9647, 106.6, -33.8543, 0.37", "95.7138, 108.743, -33.0114, 0.37", "94.7113, 110.378, -32.3262, 0.22", "94.1694, 111.278, -31.9156, 0.22", "93.5833, 112.244, -31.466, 0.74", "93.2448, 112.775, -31.238, 0.88", "92.1486, 114.425, -30.6856, 0.59", "90.7907, 116.293, -30.2871, 0.81" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "121.8, 65.7472, -40.225, 0.29", "123.294, 66.2365, -40.7342, 0.29", "124.746, 66.4373, -41.2848, 0.29", "126.235, 66.5196, -41.8659, 1.03", "126.948, 66.5312, -42.1516, 1.03", "128.72, 66.5266, -42.7883, 0.44", "130.06, 66.5251, -43.2154, 0.29", "131.861, 66.4268, -43.712, 0.96", "132.467, 66.384, -43.8523, 0.96", "134.222, 66.3203, -44.1804, 0.22", "135.543, 66.3462, -44.3997, 0.22", "136.864, 66.4996, -44.5585, 0.22", "138.268, 66.7718, -44.7155, 0.22", "139.858, 67.2071, -44.906, 0.22", "140.838, 67.5352, -45.0451, 0.52", "141.62, 67.8854, -45.1876, 0.29", "142.562, 68.4688, -45.4255, 1.03", "143.126, 68.9902, -45.5806, 1.03", "143.558, 69.6124, -45.7375, 0.88", "143.94, 70.3355, -45.8746, 0.66", "144.362, 71.3306, -46.0283, 0.37", "144.725, 72.4481, -46.1599, 0.59", "145.074, 73.8891, -46.2913, 0.29", "145.331, 75.2033, -46.3505, 0.29" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-28.4091, -178.259, -37.3437, 0.74", "-28.9989, -179.136, -37.4389, 0.74", "-29.985, -180.427, -37.6635, 0.66", "-30.7367, -181.271, -37.9056, 0.52", "-31.7571, -182.292, -38.3294, 0.37", "-32.3238, -182.851, -38.5937, 0.74", "-32.8069, -183.327, -38.7999, 1.03", "-33.469, -183.955, -39.0852, 0.74", "-34.4101, -184.863, -39.4934, 0.52", "-35.3529, -185.882, -39.8772, 0.52", "-35.9777, -186.706, -40.1125, 0.66", "-36.8431, -188.155, -40.3964, 0.88", "-37.0892, -188.675, -40.4682, 1.18", "-37.4064, -189.516, -40.5437, 0.81", "-37.7561, -190.718, -40.6075, 0.52", "-37.986, -191.739, -40.6833, 0.52", "-38.2236, -192.958, -40.8386, 0.52", "-38.319, -193.541, -40.9558, 0.52", "-38.511, -194.689, -41.2155, 0.52", "-38.7175, -195.824, -41.5043, 0.52", "-38.8921, -196.78, -41.788, 1.03", "-39.0304, -197.476, -42.0158, 1.25", "-39.2351, -198.34, -42.356, 0.66", "-39.4698, -199.181, -42.7589, 0.29", "-39.8204, -200.005, -43.3569, 0.29", "-40.0802, -199.892, -43.7592, 0.52", "-40.7492, -199.136, -44.7735, 0.29", "-41.2616, -198.425, -45.565, 0.29", "-41.7949, -197.547, -46.3961, 0.22", "-41.8919, -197.359, -46.5529, 0.52" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-28.4091, -178.259, -37.3437, 0.22", "-28.2088, -179.793, -37.6876, 0.22", "-28.121, -180.407, -37.8232, 0.22", "-27.9528, -181.629, -38.0432, 0.22", "-27.7808, -183.009, -38.2516, 0.22", "-27.6414, -184.128, -38.4205, 0.22", "-27.3707, -186.3, -38.7484, 0.22", "-27.2888, -187.228, -38.9035, 0.22", "-27.0925, -189.064, -39.2, 0.22", "-26.9485, -190.088, -39.3284, 0.22" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "236.493, 15.4275, -203.403, 0.29", "237.472, 14.5967, -203.942, 0.29", "238.035, 14.1188, -204.252, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "236.493, 15.4275, -203.403, 0.37", "237.31, 16.0397, -202.896, 0.37", "238.273, 16.7606, -202.3, 0.37" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_78", "dend_53", "dend_50", "dend_49", "dend_44", "dend_41", "dend_32", "dend_0", "dend_88", "dend_79", "dend_69", "dend_54", "dend_52", "dend_51", "dend_46", "dend_45", "dend_43", "dend_42", "dend_34", "dend_33", "dend_17", "dend_1", "dend_85", "dend_80", "dend_71", "dend_70", "dend_58", "dend_55", "dend_48", "dend_47", "dend_40", "dend_35", "dend_31", "dend_18", "dend_16", "dend_11", "dend_2", "dend_87", "dend_86", "dend_82", "dend_81", "dend_75", "dend_72", "dend_68", "dend_59", "dend_57", "dend_56", "dend_37", "dend_36", "dend_24", "dend_19", "dend_13", "dend_12", "dend_10", "dend_3", "dend_84", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_60", "dend_39", "dend_38", "dend_26", "dend_25", "dend_21", "dend_20", "dend_15", "dend_14", "dend_9", "dend_4", "dend_65", "dend_62", "dend_28", "dend_27", "dend_23", "dend_22", "dend_6", "dend_5", "dend_67", "dend_66", "dend_64", "dend_63", "dend_30", "dend_29", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_78", "dend_53", "dend_50", "dend_49", "dend_44", "dend_41", "dend_32", "dend_0", "dend_88", "dend_79", "dend_69", "dend_54", "dend_52", "dend_51", "dend_46", "dend_45", "dend_43", "dend_42", "dend_34", "dend_33", "dend_17", "dend_1", "dend_85", "dend_80", "dend_71", "dend_70", "dend_58", "dend_55", "dend_48", "dend_47", "dend_40", "dend_35", "dend_31", "dend_18", "dend_16", "dend_11", "dend_2", "dend_87", "dend_86", "dend_82", "dend_81", "dend_75", "dend_72", "dend_68", "dend_59", "dend_57", "dend_56", "dend_37", "dend_36", "dend_24", "dend_19", "dend_13", "dend_12", "dend_10", "dend_3", "dend_84", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_60", "dend_39", "dend_38", "dend_26", "dend_25", "dend_21", "dend_20", "dend_15", "dend_14", "dend_9", "dend_4", "dend_65", "dend_62", "dend_28", "dend_27", "dend_23", "dend_22", "dend_6", "dend_5", "dend_67", "dend_66", "dend_64", "dend_63", "dend_30", "dend_29", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_86", "dend_86", "dend_86", "dend_86", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_75", "dend_75", "dend_75", "dend_75", "dend_72", "dend_72", "dend_72", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_56", "dend_56", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_39", "dend_38", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_8", "dend_8", "dend_7", "dend_7" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L5_ChC_13b6218d56_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_78, id: dend_78, parent: soma_0
create dend_78
public dend_78
// Section: dend_53, id: dend_53, parent: soma_0
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: soma_0
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: soma_0
create dend_49
public dend_49
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_88, id: dend_88, parent: dend_78
create dend_88
public dend_88
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79
// Section: dend_69, id: dend_69, parent: dend_53
create dend_69
public dend_69
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_17, id: dend_17, parent: dend_0
create dend_17
public dend_17
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_85, id: dend_85, parent: dend_79
create dend_85
public dend_85
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_58, id: dend_58, parent: dend_54
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_17
create dend_31
public dend_31
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_1
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_87, id: dend_87, parent: dend_85
create dend_87
public dend_87
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_82, id: dend_82, parent: dend_80
create dend_82
public dend_82
// Section: dend_81, id: dend_81, parent: dend_80
create dend_81
public dend_81
// Section: dend_75, id: dend_75, parent: dend_71
create dend_75
public dend_75
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_68, id: dend_68, parent: dend_58
create dend_68
public dend_68
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_24, id: dend_24, parent: dend_18
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_84, id: dend_84, parent: dend_82
create dend_84
public dend_84
// Section: dend_83, id: dend_83, parent: dend_82
create dend_83
public dend_83
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_74, id: dend_74, parent: dend_72
create dend_74
public dend_74
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_65, id: dend_65, parent: dend_61
create dend_65
public dend_65
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_92
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_75, dend_75, dend_75, dend_75, dend_72, dend_72, dend_72, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_56, dend_56, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_84, dend_84, dend_84, dend_84, dend_84, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_39, dend_38, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_8, dend_8, dend_7, dend_7]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_78(0), soma_0(0.49999968585636767)
    connect dend_53(0), soma_0(0.49999968585636767)
    connect dend_50(0), soma_0(0.49999968585636767)
    connect dend_49(0), soma_0(0.49999968585636767)
    connect dend_44(0), soma_0(0.49999968585636767)
    connect dend_41(0), soma_0(0.49999968585636767)
    connect dend_32(0), soma_0(0.49999968585636767)
    connect dend_0(0), soma_0(0.49999968585636767)
    connect axon_0(0), soma_0(1.0)
    connect dend_88(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)
    connect dend_69(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_17(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_85(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_58(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_1(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_87(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_82(0), dend_80(1.0)
    connect dend_81(0), dend_80(1.0)
    connect dend_75(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_68(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_24(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_84(0), dend_82(1.0)
    connect dend_83(0), dend_82(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_74(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_65(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.699158, -10.4987, 0.384835, 2.69968 ) }
    soma_0 { pt3dadd( -0.589028, -9.39629, 0.347626, 4.40168 ) }
    soma_0 { pt3dadd( -0.478898, -8.29387, 0.310418, 6.28323 ) }
    soma_0 { pt3dadd( -0.368767, -7.19145, 0.273209, 7.64436 ) }
    soma_0 { pt3dadd( -0.258637, -6.08903, 0.236, 8.5434 ) }
    soma_0 { pt3dadd( -0.148506, -4.98661, 0.198792, 9.49409 ) }
    soma_0 { pt3dadd( -0.0383758, -3.88419, 0.161583, 10.6841 ) }
    soma_0 { pt3dadd( 0.0717547, -2.78177, 0.124374, 11.1456 ) }
    soma_0 { pt3dadd( 0.181885, -1.67935, 0.0871655, 11.461 ) }
    soma_0 { pt3dadd( 0.292016, -0.576928, 0.0499568, 11.5573 ) }
    soma_0 { pt3dadd( 0.402146, 0.525493, 0.0127481, 11.5875 ) }
    soma_0 { pt3dadd( 0.512276, 1.62791, -0.0244606, 11.382 ) }
    soma_0 { pt3dadd( 0.622407, 2.73033, -0.0616693, 11.2002 ) }
    soma_0 { pt3dadd( 0.732537, 3.83276, -0.098878, 10.9052 ) }
    soma_0 { pt3dadd( 0.842668, 4.93518, -0.136087, 10.3672 ) }
    soma_0 { pt3dadd( 0.952798, 6.0376, -0.173295, 9.50426 ) }
    soma_0 { pt3dadd( 1.06293, 7.14002, -0.210504, 8.36675 ) }
    soma_0 { pt3dadd( 1.17306, 8.24244, -0.247713, 7.22308 ) }
    soma_0 { pt3dadd( 1.28319, 9.34486, -0.284922, 6.14175 ) }
    soma_0 { pt3dadd( 1.39332, 10.4473, -0.32213, 4.86495 ) }
    soma_0 { pt3dadd( 1.50345, 11.5497, -0.359339, 2.69802 ) }
    // Section: dend_78, id: dend_78, parent: soma_0 (entry count 21/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 0.562386, 10.8306, -3.45834, 0.37 ) }
    dend_78 { pt3dadd( 0.145307, 11.9045, -3.5378, 0.37 ) }
    dend_78 { pt3dadd( 0.0943384, 12.1962, -3.59521, 0.74 ) }
    dend_78 { pt3dadd( 0.127183, 12.4261, -3.68328, 0.74 ) }
    dend_78 { pt3dadd( 0.403628, 13.1321, -4.01828, 0.37 ) }
    dend_78 { pt3dadd( 0.675571, 13.6965, -4.26731, 0.66 ) }
    dend_78 { pt3dadd( 0.993414, 14.2791, -4.53333, 1.33 ) }
    dend_78 { pt3dadd( 1.29281, 14.7134, -4.74081, 1.33 ) }
    dend_78 { pt3dadd( 1.79665, 15.4309, -5.08939, 0.74 ) }
    dend_78 { pt3dadd( 2.17301, 16.0045, -5.35189, 0.74 ) }
    dend_78 { pt3dadd( 2.74653, 16.9527, -5.78502, 1.25 ) }
    dend_78 { pt3dadd( 3.10795, 17.715, -6.11841, 2.06 ) }
    dend_78 { pt3dadd( 3.2913, 18.2842, -6.3411, 2.06 ) }
    dend_78 { pt3dadd( 3.4176, 19.0549, -6.61628, 1.4 ) }
    dend_78 { pt3dadd( 3.36965, 19.9451, -6.92274, 0.74 ) }
    dend_78 { pt3dadd( 3.1583, 20.5289, -7.12559, 1.11 ) }
    dend_78 { pt3dadd( 2.79056, 20.9764, -7.28262, 1.11 ) }
    dend_78 { pt3dadd( 2.26035, 21.3587, -7.40695, 0.81 ) }
    dend_78 { pt3dadd( 1.56207, 21.6817, -7.57831, 0.81 ) }
    dend_78 { pt3dadd( 0.708789, 21.9442, -7.80369, 0.81 ) }
    dend_78 { pt3dadd( -0.123137, 22.1366, -8.04727, 0.96 ) }
    dend_78 { pt3dadd( -0.809958, 22.2947, -8.25639, 1.11 ) }
    dend_78 { pt3dadd( -1.42695, 22.455, -8.4795, 1.11 ) }
    dend_78 { pt3dadd( -2.76729, 22.8887, -9.06492, 1.11 ) }
    dend_78 { pt3dadd( -3.16331, 23.067, -9.28018, 1.11 ) }
    dend_78 { pt3dadd( -3.80212, 23.5411, -9.72252, 0.59 ) }
    dend_78 { pt3dadd( -4.17962, 24.0495, -10.0421, 0.96 ) }
    dend_78 { pt3dadd( -4.40289, 24.5189, -10.2537, 1.25 ) }
    dend_78 { pt3dadd( -4.56047, 24.9422, -10.3986, 1.55 ) }
    dend_78 { pt3dadd( -4.65607, 25.2089, -10.461, 1.55 ) }
    dend_78 { pt3dadd( -4.99744, 26.0277, -10.6348, 0.74 ) }
    dend_78 { pt3dadd( -5.53378, 27.018, -10.8419, 0.96 ) }
    dend_78 { pt3dadd( -5.97796, 27.6183, -10.9913, 0.66 ) }
    dend_78 { pt3dadd( -6.34659, 27.996, -11.1077, 0.66 ) }
    dend_78 { pt3dadd( -6.93858, 28.4653, -11.2924, 0.81 ) }
    dend_78 { pt3dadd( -7.4299, 28.7737, -11.4506, 0.96 ) }
    dend_78 { pt3dadd( -8.07638, 29.1049, -11.6756, 1.47 ) }
    dend_78 { pt3dadd( -8.67204, 29.3907, -11.8944, 1.62 ) }
    dend_78 { pt3dadd( -9.23448, 29.7023, -12.1072, 1.47 ) }
    dend_78 { pt3dadd( -9.75806, 30.0519, -12.3156, 1.11 ) }
    dend_78 { pt3dadd( -10.3495, 30.5326, -12.5682, 0.81 ) }
    dend_78 { pt3dadd( -11.0458, 31.2482, -12.9103, 0.66 ) }
    dend_78 { pt3dadd( -11.4201, 31.742, -13.1181, 0.81 ) }
    dend_78 { pt3dadd( -11.9012, 32.5754, -13.4289, 1.03 ) }
    dend_78 { pt3dadd( -12.0873, 33.0096, -13.5859, 1.25 ) }
    dend_78 { pt3dadd( -12.2197, 33.4137, -13.7389, 1.25 ) }
    dend_78 { pt3dadd( -12.4591, 34.2859, -14.1017, 0.96 ) }
    dend_78 { pt3dadd( -12.6375, 34.959, -14.4218, 0.81 ) }
    dend_78 { pt3dadd( -12.8862, 35.7896, -14.8703, 0.59 ) }
    dend_78 { pt3dadd( -13.0912, 36.3666, -15.2033, 0.59 ) }
    dend_78 { pt3dadd( -13.3732, 37.0503, -15.6027, 0.59 ) }
    dend_78 { pt3dadd( -13.683, 37.7215, -15.981, 0.59 ) }
    dend_78 { pt3dadd( -13.9832, 38.35, -16.2746, 0.44 ) }
    dend_78 { pt3dadd( -14.2676, 39.0061, -16.4996, 0.66 ) }
    dend_78 { pt3dadd( -14.4881, 39.7071, -16.6229, 0.74 ) }
    dend_78 { pt3dadd( -14.5595, 40.147, -16.6446, 0.96 ) }
    dend_78 { pt3dadd( -14.5663, 40.6393, -16.6284, 0.96 ) }
    dend_78 { pt3dadd( -14.4559, 41.7319, -16.6067, 0.52 ) }
    dend_78 { pt3dadd( -14.3034, 42.6178, -16.6193, 0.59 ) }
    dend_78 { pt3dadd( -14.1014, 43.6226, -16.6739, 0.59 ) }
    dend_78 { pt3dadd( -13.9973, 44.184, -16.7305, 0.96 ) }
    dend_78 { pt3dadd( -13.9173, 44.8318, -16.8293, 0.96 ) }
    dend_78 { pt3dadd( -13.8923, 45.982, -17.0785, 0.66 ) }
    dend_78 { pt3dadd( -14.0191, 46.7726, -17.335, 0.66 ) }
    dend_78 { pt3dadd( -14.2989, 47.4131, -17.602, 0.96 ) }
    dend_78 { pt3dadd( -14.6224, 47.8014, -17.7794, 1.03 ) }
    dend_78 { pt3dadd( -15.0354, 48.115, -17.9479, 1.03 ) }
    dend_78 { pt3dadd( -15.5843, 48.4003, -18.1504, 1.03 ) }
    dend_78 { pt3dadd( -16.3242, 48.6682, -18.4439, 0.74 ) }
    dend_78 { pt3dadd( -16.9064, 48.8332, -18.7334, 0.74 ) }
    dend_78 { pt3dadd( -17.2949, 48.9219, -18.969, 0.52 ) }
    dend_78 { pt3dadd( -18.1543, 49.0809, -19.6037, 0.52 ) }
    dend_78 { pt3dadd( -18.8816, 49.1874, -20.2058, 0.52 ) }
    dend_78 { pt3dadd( -19.6232, 49.2719, -20.8484, 1.11 ) }
    dend_78 { pt3dadd( -20.0265, 49.3081, -21.1865, 1.4 ) }
    dend_78 { pt3dadd( -20.4845, 49.3365, -21.5302, 1.4 ) }
    dend_78 { pt3dadd( -21.2672, 49.3565, -22.0183, 0.81 ) }
    dend_78 { pt3dadd( -21.7499, 49.3665, -22.2157, 0.59 ) }
    dend_78 { pt3dadd( -22.4767, 49.401, -22.3709, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_78 { pt3dadd( -23.2068, 49.4686, -22.4131, 0.44 ) }
    dend_78 { pt3dadd( -23.9472, 49.5817, -22.3914, 0.74 ) }
    dend_78 { pt3dadd( -24.6547, 49.7706, -22.336, 1.33 ) }
    dend_78 { pt3dadd( -25.5152, 50.1426, -22.286, 0.88 ) }
    dend_78 { pt3dadd( -25.8966, 50.3913, -22.3394, 0.59 ) }
    dend_78 { pt3dadd( -26.1328, 50.6095, -22.4361, 0.59 ) }
    dend_78 { pt3dadd( -26.4653, 50.9955, -22.6792, 0.74 ) }
    dend_78 { pt3dadd( -26.8766, 51.5369, -23.1045, 0.96 ) }
    dend_78 { pt3dadd( -27.4076, 52.2415, -23.7554, 0.59 ) }
    dend_78 { pt3dadd( -27.9571, 52.9295, -24.4792, 0.59 ) }
    dend_78 { pt3dadd( -28.243, 53.2751, -24.8405, 0.81 ) }
    dend_78 { pt3dadd( -28.604, 53.6704, -25.2365, 0.96 ) }
    dend_78 { pt3dadd( -28.9502, 53.9911, -25.5329, 1.03 ) }
    dend_78 { pt3dadd( -29.5363, 54.4788, -25.9085, 0.66 ) }
    dend_78 { pt3dadd( -29.7159, 54.6333, -26.0017, 0.66 ) }
    dend_78 { pt3dadd( -30.1981, 55.1195, -26.2339, 0.81 ) }
    dend_78 { pt3dadd( -30.6235, 55.6459, -26.4844, 0.81 ) }
    dend_78 { pt3dadd( -30.947, 56.1892, -26.7306, 0.66 ) }
    dend_78 { pt3dadd( -31.2106, 56.7678, -26.9819, 0.66 ) }
    dend_78 { pt3dadd( -31.5387, 57.6677, -27.3657, 0.52 ) }
    dend_78 { pt3dadd( -31.7263, 58.2296, -27.6131, 0.81 ) }
    dend_78 { pt3dadd( -31.8644, 58.6485, -27.8054, 0.74 ) }
    dend_78 { pt3dadd( -32.1983, 59.5474, -28.2135, 0.59 ) }
    dend_78 { pt3dadd( -32.402, 59.9868, -28.3962, 0.74 ) }
    dend_78 { pt3dadd( -32.6743, 60.4217, -28.5544, 0.96 ) }
    dend_78 { pt3dadd( -33.0947, 60.944, -28.6796, 0.96 ) }
    dend_78 { pt3dadd( -33.4627, 61.3473, -28.74, 0.74 ) }
    dend_78 { pt3dadd( -33.972, 61.8714, -28.7817, 1.03 ) }
    dend_78 { pt3dadd( -34.3396, 62.2383, -28.7488, 1.25 ) }
    dend_78 { pt3dadd( -34.5975, 62.5162, -28.696, 0.81 ) }
    dend_78 { pt3dadd( -35.1446, 63.1721, -28.5264, 0.59 ) }
    dend_78 { pt3dadd( -35.478, 63.6172, -28.386, 0.66 ) }
    dend_78 { pt3dadd( -35.7547, 64.0207, -28.2454, 0.66 ) }
    dend_78 { pt3dadd( -36.4722, 65.1375, -27.8268, 0.88 ) }
    dend_78 { pt3dadd( -36.836, 65.7096, -27.5956, 1.11 ) }
    dend_78 { pt3dadd( -37.086, 66.1008, -27.4216, 1.03 ) }
    dend_78 { pt3dadd( -37.3902, 66.5731, -27.2051, 1.25 ) }
    dend_78 { pt3dadd( -37.5038, 66.7486, -27.1173, 1.25 ) }
    // Section: dend_53, id: dend_53, parent: soma_0 (entry count 38/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 4.19239, 9.67164, -4.39834, 1.11 ) }
    dend_53 { pt3dadd( 4.89676, 10.3644, -4.8452, 1.11 ) }
    dend_53 { pt3dadd( 5.4486, 10.9175, -5.21344, 1.11 ) }
    dend_53 { pt3dadd( 6.32902, 11.8426, -5.80037, 1.11 ) }
    dend_53 { pt3dadd( 6.9329, 12.509, -6.24222, 0.96 ) }
    dend_53 { pt3dadd( 7.93313, 13.4985, -6.89512, 1.55 ) }
    dend_53 { pt3dadd( 8.80307, 14.2895, -7.42059, 1.62 ) }
    dend_53 { pt3dadd( 9.31539, 14.7051, -7.70749, 1.62 ) }
    dend_53 { pt3dadd( 10.1071, 15.2815, -8.05602, 1.25 ) }
    dend_53 { pt3dadd( 11.4345, 16.1483, -8.46349, 0.96 ) }
    dend_53 { pt3dadd( 13.4622, 17.3392, -8.83323, 0.88 ) }
    dend_53 { pt3dadd( 14.414, 17.8232, -8.891, 1.55 ) }
    dend_53 { pt3dadd( 15.4533, 18.2788, -8.86592, 1.84 ) }
    dend_53 { pt3dadd( 17.0121, 18.8908, -8.74381, 1.11 ) }
    dend_53 { pt3dadd( 17.8303, 19.1982, -8.63668, 1.03 ) }
    dend_53 { pt3dadd( 18.746, 19.5776, -8.45835, 1.25 ) }
    dend_53 { pt3dadd( 19.6317, 20.0535, -8.27271, 0.88 ) }
    dend_53 { pt3dadd( 20.4485, 20.5981, -8.10223, 0.88 ) }
    dend_53 { pt3dadd( 21.2134, 21.1928, -7.94478, 0.88 ) }
    dend_53 { pt3dadd( 22.1114, 21.9328, -7.75374, 0.88 ) }
    dend_53 { pt3dadd( 22.8794, 22.6067, -7.50641, 0.96 ) }
    dend_53 { pt3dadd( 23.674, 23.3614, -7.20948, 0.96 ) }
    dend_53 { pt3dadd( 24.3991, 24.1255, -6.88615, 0.81 ) }
    dend_53 { pt3dadd( 25.4662, 25.3191, -6.3164, 1.11 ) }
    dend_53 { pt3dadd( 26.166, 26.0755, -5.87352, 1.4 ) }
    dend_53 { pt3dadd( 26.9722, 26.8343, -5.27449, 2.06 ) }
    // Section: dend_50, id: dend_50, parent: soma_0 (entry count 64/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 3.86239, 8.33214, 2.16166, 1.62 ) }
    dend_50 { pt3dadd( 4.72977, 8.88822, 2.93432, 1.62 ) }
    dend_50 { pt3dadd( 5.90431, 9.55416, 3.99208, 1.25 ) }
    dend_50 { pt3dadd( 8.04104, 10.4836, 6.13729, 1.25 ) }
    dend_50 { pt3dadd( 9.17096, 10.9063, 7.34782, 1.25 ) }
    dend_50 { pt3dadd( 10.35, 11.2064, 8.76195, 1.92 ) }
    dend_50 { pt3dadd( 10.8489, 11.2888, 9.39729, 2.5 ) }
    dend_50 { pt3dadd( 11.9338, 11.3168, 10.899, 2.5 ) }
    dend_50 { pt3dadd( 14.1778, 11.0535, 14.2386, 1.77 ) }
    dend_50 { pt3dadd( 15.7343, 10.5913, 16.5498, 0.96 ) }
    dend_50 { pt3dadd( 17.9305, 9.7116, 19.8029, 0.88 ) }
    dend_50 { pt3dadd( 18.5583, 9.42654, 20.7476, 0.88 ) }
    dend_50 { pt3dadd( 19.0536, 9.21046, 21.4706, 1.4 ) }
    dend_50 { pt3dadd( 19.5432, 9.03291, 22.1024, 1.4 ) }
    dend_50 { pt3dadd( 21.329, 8.65097, 23.9112, 0.66 ) }
    dend_50 { pt3dadd( 22.0865, 8.69362, 24.5154, 0.66 ) }
    dend_50 { pt3dadd( 23.8852, 9.37508, 25.5802, 0.88 ) }
    dend_50 { pt3dadd( 25.0154, 9.97995, 26.1576, 0.88 ) }
    dend_50 { pt3dadd( 26.4349, 10.883, 26.7199, 0.74 ) }
    dend_50 { pt3dadd( 27.4929, 11.6477, 27.0369, 1.4 ) }
    dend_50 { pt3dadd( 28.7106, 12.6033, 27.2586, 2.06 ) }
    dend_50 { pt3dadd( 29.9098, 13.5148, 27.3518, 1.84 ) }
    dend_50 { pt3dadd( 31.3478, 14.5573, 27.27, 1.18 ) }
    dend_50 { pt3dadd( 32.844, 15.5635, 27.2247, 1.18 ) }
    dend_50 { pt3dadd( 33.4514, 15.9203, 27.3106, 1.03 ) }
    dend_50 { pt3dadd( 34.467, 16.3994, 27.7323, 1.03 ) }
    dend_50 { pt3dadd( 35.139, 16.6591, 28.4098, 0.59 ) }
    dend_50 { pt3dadd( 35.7629, 16.934, 29.4092, 0.59 ) }
    dend_50 { pt3dadd( 36.9855, 17.5702, 31.8991, 0.88 ) }
    dend_50 { pt3dadd( 38.4075, 18.4326, 35.1743, 1.62 ) }
    dend_50 { pt3dadd( 39.0186, 18.8555, 36.5986, 1.62 ) }
    dend_50 { pt3dadd( 40.4406, 19.9215, 39.8926, 0.88 ) }
    dend_50 { pt3dadd( 41.1029, 20.4167, 41.328, 0.88 ) }
    dend_50 { pt3dadd( 41.7138, 20.8889, 42.5152, 1.47 ) }
    dend_50 { pt3dadd( 42.1431, 21.2252, 43.196, 1.47 ) }
    dend_50 { pt3dadd( 43.2474, 22.0239, 44.5234, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_50 { pt3dadd( 43.8634, 22.3904, 45.1178, 0.59 ) }
    dend_50 { pt3dadd( 44.5221, 22.6877, 45.6368, 0.59 ) }
    dend_50 { pt3dadd( 46.1291, 23.333, 46.9175, 1.25 ) }
    dend_50 { pt3dadd( 48.6563, 24.3822, 49.0249, 0.74 ) }
    dend_50 { pt3dadd( 49.4481, 24.7859, 49.7635, 0.29 ) }
    dend_50 { pt3dadd( 50.1525, 25.1765, 50.5099, 0.29 ) }
    dend_50 { pt3dadd( 50.556, 25.4008, 50.9968, 0.59 ) }
    dend_50 { pt3dadd( 51.6242, 26.0158, 52.3134, 1.11 ) }
    dend_50 { pt3dadd( 52.164, 26.2885, 52.9592, 1.11 ) }
    dend_50 { pt3dadd( 53.3224, 27.2604, 54.3461, 1.11 ) }
    dend_50 { pt3dadd( 53.9768, 28.1446, 55.4485, 0.59 ) }
    dend_50 { pt3dadd( 53.9947, 25.6088, 55.63, 0.59 ) }
    dend_50 { pt3dadd( 54.2189, 22.994, 56.3049, 0.52 ) }
    dend_50 { pt3dadd( 54.3738, 21.1677, 56.7716, 0.59 ) }
    dend_50 { pt3dadd( 64.3327, 24.1995, 65.6486, 0.59 ) }
    dend_50 { pt3dadd( 74.7772, 28.394, 73.3677, 0.59 ) }
    dend_50 { pt3dadd( 83.409, 34.465, 81.901, 0.59 ) }
    dend_50 { pt3dadd( 91.9608, 41.7637, 89.3848, 0.59 ) }
    dend_50 { pt3dadd( 101.905, 49.5955, 94.0026, 0.59 ) }
    dend_50 { pt3dadd( 110.863, 57.8385, 99.7144, 0.59 ) }
    dend_50 { pt3dadd( 120.315, 64.6293, 106.623, 0.59 ) }
    // Section: dend_49, id: dend_49, parent: soma_0 (entry count 21/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -3.56761, 6.11864, 1.60166, 1.69 ) }
    dend_49 { pt3dadd( -3.56761, 6.11864, 1.60166, 1.69 ) }
    dend_49 { pt3dadd( -4.18896, 6.43802, 1.90549, 1.69 ) }
    dend_49 { pt3dadd( -4.96133, 6.75213, 2.31681, 1.4 ) }
    dend_49 { pt3dadd( -5.52704, 6.94652, 2.71238, 1.03 ) }
    dend_49 { pt3dadd( -6.3143, 7.22372, 3.33043, 0.88 ) }
    dend_49 { pt3dadd( -6.86224, 7.43211, 3.79062, 0.88 ) }
    dend_49 { pt3dadd( -7.56918, 7.66933, 4.46078, 0.59 ) }
    dend_49 { pt3dadd( -8.22419, 7.87495, 5.14224, 0.44 ) }
    dend_49 { pt3dadd( -9.44661, 8.24228, 6.49424, 0.37 ) }
    dend_49 { pt3dadd( -9.8712, 8.36944, 6.98015, 0.37 ) }
    dend_49 { pt3dadd( -10.5664, 8.58176, 7.79414, 0.37 ) }
    dend_49 { pt3dadd( -12.2243, 9.111, 9.82404, 1.03 ) }
    dend_49 { pt3dadd( -12.6041, 9.24686, 10.3054, 1.62 ) }
    dend_49 { pt3dadd( -21.4329, 9.89967, 15.2246, 1.62 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 36/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -3.87761, -1.13936, -14.5883, 0.74 ) }
    dend_44 { pt3dadd( -4.91056, -1.80276, -14.5814, 0.74 ) }
    dend_44 { pt3dadd( -6.12548, -2.55227, -14.5748, 1.03 ) }
    dend_44 { pt3dadd( -7.18812, -3.19494, -14.5911, 1.25 ) }
    dend_44 { pt3dadd( -8.03784, -3.71649, -14.6134, 1.62 ) }
    dend_44 { pt3dadd( -8.73415, -4.13667, -14.6353, 1.84 ) }
    dend_44 { pt3dadd( -9.64722, -4.65521, -14.6414, 1.84 ) }
    dend_44 { pt3dadd( -10.456, -5.0604, -14.6046, 1.99 ) }
    dend_44 { pt3dadd( -11.3058, -5.42731, -14.5237, 2.21 ) }
    dend_44 { pt3dadd( -12.2987, -5.78318, -14.3801, 2.65 ) }
    dend_44 { pt3dadd( -13.0031, -5.9942, -14.2672, 2.5 ) }
    dend_44 { pt3dadd( -14.1932, -6.30606, -14.0863, 1.77 ) }
    dend_44 { pt3dadd( -15.4537, -6.62074, -13.9354, 1.33 ) }
    dend_44 { pt3dadd( -16.3107, -6.84038, -13.8949, 1.18 ) }
    dend_44 { pt3dadd( -17.3268, -7.11095, -13.9595, 1.11 ) }
    dend_44 { pt3dadd( -18.0489, -7.32766, -14.1635, 1.11 ) }
    dend_44 { pt3dadd( -18.7927, -7.58231, -14.6179, 1.11 ) }
    dend_44 { pt3dadd( -19.5034, -7.84604, -15.3151, 1.4 ) }
    dend_44 { pt3dadd( -20.2108, -8.09398, -16.2164, 1.03 ) }
    dend_44 { pt3dadd( -20.8065, -8.27906, -17.0896, 0.88 ) }
    dend_44 { pt3dadd( -21.693, -8.49126, -18.5202, 0.88 ) }
    dend_44 { pt3dadd( -22.6509, -8.63866, -20.2098, 1.47 ) }
    dend_44 { pt3dadd( -23.3756, -8.70441, -21.5497, 1.77 ) }
    dend_44 { pt3dadd( -24.1868, -8.71735, -23.1086, 1.84 ) }
    dend_44 { pt3dadd( -24.4736, -8.70086, -23.6743, 2.06 ) }
    dend_44 { pt3dadd( -24.9933, -8.63837, -24.7268, 1.77 ) }
    dend_44 { pt3dadd( -25.7939, -8.47726, -26.3082, 1.33 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 63/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -5.36761, -1.90886, 9.10166, 2.06 ) }
    dend_41 { pt3dadd( -5.36761, -1.90886, 9.10166, 2.06 ) }
    dend_41 { pt3dadd( -6.0287, -1.84609, 9.45134, 2.06 ) }
    dend_41 { pt3dadd( -6.52572, -1.82126, 9.69419, 2.06 ) }
    dend_41 { pt3dadd( -7.81536, -1.8399, 10.2939, 1.84 ) }
    dend_41 { pt3dadd( -8.53333, -1.90283, 10.6181, 1.84 ) }
    dend_41 { pt3dadd( -9.08258, -1.99024, 10.8635, 1.99 ) }
    dend_41 { pt3dadd( -10.0709, -2.22618, 11.3038, 1.55 ) }
    dend_41 { pt3dadd( -10.8751, -2.50651, 11.6529, 1.03 ) }
    dend_41 { pt3dadd( -11.5251, -2.8068, 11.9135, 0.88 ) }
    dend_41 { pt3dadd( -12.1563, -3.18273, 12.0966, 1.18 ) }
    dend_41 { pt3dadd( -12.6664, -3.52524, 12.208, 1.18 ) }
    dend_41 { pt3dadd( -13.0573, -3.81204, 12.2726, 1.47 ) }
    dend_41 { pt3dadd( -13.6376, -4.28074, 12.3232, 1.25 ) }
    dend_41 { pt3dadd( -14.2089, -4.7616, 12.3987, 1.03 ) }
    dend_41 { pt3dadd( -14.7242, -5.19003, 12.514, 1.62 ) }
    dend_41 { pt3dadd( -15.2402, -5.60938, 12.7057, 1.69 ) }
    dend_41 { pt3dadd( -15.6381, -5.91346, 12.9105, 1.33 ) }
    dend_41 { pt3dadd( -16.3488, -6.4135, 13.3941, 1.03 ) }
    dend_41 { pt3dadd( -17.2242, -6.92918, 14.1556, 0.88 ) }
    dend_41 { pt3dadd( -17.8363, -7.20325, 14.8338, 1.11 ) }
    dend_41 { pt3dadd( -18.3666, -7.33998, 15.5302, 1.33 ) }
    dend_41 { pt3dadd( -18.6972, -7.35385, 16.0196, 1.33 ) }
    dend_41 { pt3dadd( -19.0232, -7.27341, 16.5252, 1.18 ) }
    dend_41 { pt3dadd( -19.4112, -7.06123, 17.1096, 0.88 ) }
    dend_41 { pt3dadd( -19.9629, -6.66733, 17.8227, 1.18 ) }
    dend_41 { pt3dadd( -20.307, -6.43005, 18.2098, 1.33 ) }
    dend_41 { pt3dadd( -20.6102, -6.27467, 18.5119, 1.33 ) }
    dend_41 { pt3dadd( -21.1331, -6.12983, 19.0017, 0.59 ) }
    dend_41 { pt3dadd( -21.8503, -6.16593, 19.6112, 0.52 ) }
    dend_41 { pt3dadd( -22.2142, -6.37608, 19.8772, 0.59 ) }
    dend_41 { pt3dadd( -22.7215, -7.03072, 20.2777, 0.59 ) }
    dend_41 { pt3dadd( -23.2101, -7.93096, 20.7648, 0.59 ) }
    dend_41 { pt3dadd( -23.4634, -8.46767, 21.0494, 1.03 ) }
    dend_41 { pt3dadd( -23.7534, -9.13788, 21.4372, 1.03 ) }
    dend_41 { pt3dadd( -23.9932, -9.69534, 21.7923, 1.03 ) }
    dend_41 { pt3dadd( -24.4452, -10.6267, 22.5165, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_41 { pt3dadd( -24.8736, -11.2411, 23.2022, 0.66 ) }
    dend_41 { pt3dadd( -25.2346, -11.5246, 23.7297, 0.66 ) }
    dend_41 { pt3dadd( -25.8706, -11.7593, 24.5655, 0.74 ) }
    dend_41 { pt3dadd( -26.3203, -11.8337, 25.117, 0.81 ) }
    dend_41 { pt3dadd( -26.7386, -11.8613, 25.6109, 0.52 ) }
    dend_41 { pt3dadd( -27.4967, -11.8718, 26.4356, 0.52 ) }
    dend_41 { pt3dadd( -27.8214, -11.8942, 26.7924, 0.44 ) }
    dend_41 { pt3dadd( -28.2941, -12.0916, 27.4209, 0.37 ) }
    dend_41 { pt3dadd( -28.5214, -12.3974, 27.7894, 0.37 ) }
    dend_41 { pt3dadd( -28.7323, -12.8613, 28.1662, 1.11 ) }
    dend_41 { pt3dadd( -28.9123, -13.3372, 28.4606, 1.4 ) }
    dend_41 { pt3dadd( -29.0857, -13.9639, 28.7778, 1.4 ) }
    dend_41 { pt3dadd( -29.2987, -14.9154, 29.2153, 0.81 ) }
    dend_41 { pt3dadd( -29.4422, -15.6319, 29.5081, 0.29 ) }
    dend_41 { pt3dadd( -29.5701, -16.1058, 29.7099, 0.29 ) }
    dend_41 { pt3dadd( -29.7212, -16.4862, 29.8824, 0.29 ) }
    dend_41 { pt3dadd( -33.8801, -19.1529, 34.5074, 0.29 ) }
    dend_41 { pt3dadd( -38.9131, -21.8862, 38.1069, 0.29 ) }
    dend_41 { pt3dadd( -43.5177, -24.6135, 42.2447, 0.29 ) }
    dend_41 { pt3dadd( -47.7908, -26.4963, 47.1822, 0.29 ) }
    dend_41 { pt3dadd( -52.0741, -28.4628, 52.0745, 0.29 ) }
    dend_41 { pt3dadd( -57.0022, -31.3828, 55.6567, 0.29 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 22/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -2.19761, -5.47136, 6.85166, 1.77 ) }
    dend_32 { pt3dadd( -2.19761, -5.47136, 6.85166, 1.77 ) }
    dend_32 { pt3dadd( -2.17449, -6.85707, 7.03243, 1.77 ) }
    dend_32 { pt3dadd( -2.1377, -9.23278, 7.32933, 1.47 ) }
    dend_32 { pt3dadd( -2.11742, -11.6237, 7.59798, 1.25 ) }
    dend_32 { pt3dadd( -2.15206, -13.4501, 7.77949, 1.62 ) }
    dend_32 { pt3dadd( -2.22127, -14.9912, 7.91626, 1.92 ) }
    dend_32 { pt3dadd( -2.31616, -16.3353, 8.03734, 2.14 ) }
    dend_32 { pt3dadd( -2.48808, -18.0089, 8.18514, 2.14 ) }
    dend_32 { pt3dadd( -2.84251, -20.3321, 8.39044, 1.55 ) }
    dend_32 { pt3dadd( -3.29366, -22.5171, 8.57009, 1.33 ) }
    dend_32 { pt3dadd( -3.70224, -24.1724, 8.72136, 1.55 ) }
    dend_32 { pt3dadd( -4.00569, -25.218, 8.82049, 1.92 ) }
    dend_32 { pt3dadd( -4.43686, -26.4862, 8.9865, 2.21 ) }
    dend_32 { pt3dadd( -4.75981, -27.322, 9.12111, 2.5 ) }
    dend_32 { pt3dadd( -5.13741, -28.3085, 9.31436, 2.5 ) }
    dend_32 { pt3dadd( -5.48452, -29.3966, 9.54515, 2.36 ) }
    dend_32 { pt3dadd( -5.85793, -30.8895, 9.8707, 1.69 ) }
    dend_32 { pt3dadd( -6.21687, -32.8469, 10.2807, 1.25 ) }
    dend_32 { pt3dadd( -6.39944, -34.676, 10.6503, 1.4 ) }
    dend_32 { pt3dadd( -6.40717, -36.299, 10.9383, 1.62 ) }
    dend_32 { pt3dadd( -6.21945, -38.28, 11.243, 2.06 ) }
    dend_32 { pt3dadd( -5.99094, -39.5009, 11.4165, 2.36 ) }
    dend_32 { pt3dadd( -5.75979, -40.2924, 11.5142, 2.36 ) }
    dend_32 { pt3dadd( -5.18951, -41.801, 11.6712, 2.14 ) }
    dend_32 { pt3dadd( -4.26089, -43.9179, 11.8734, 1.62 ) }
    dend_32 { pt3dadd( -3.44145, -45.701, 12.0232, 1.25 ) }
    dend_32 { pt3dadd( -2.60094, -47.5405, 12.1978, 1.03 ) }
    dend_32 { pt3dadd( -1.70379, -49.6087, 12.4369, 1.03 ) }
    dend_32 { pt3dadd( -1.0355, -51.3407, 12.6818, 1.03 ) }
    dend_32 { pt3dadd( -0.30794, -53.5826, 13.0815, 1.03 ) }
    dend_32 { pt3dadd( 0.00931698, -54.9177, 13.3727, 0.96 ) }
    dend_32 { pt3dadd( 0.105557, -55.9725, 13.6398, 0.96 ) }
    dend_32 { pt3dadd( -0.025059, -56.9128, 13.9066, 0.96 ) }
    dend_32 { pt3dadd( -0.625679, -58.1512, 14.3509, 0.96 ) }
    dend_32 { pt3dadd( -1.21309, -58.8242, 14.6302, 0.88 ) }
    dend_32 { pt3dadd( -1.82931, -59.3216, 14.849, 1.18 ) }
    dend_32 { pt3dadd( -2.82409, -60.0122, 15.1282, 1.18 ) }
    dend_32 { pt3dadd( -3.78774, -60.6432, 15.3754, 1.33 ) }
    dend_32 { pt3dadd( -4.89727, -61.3589, 15.6839, 1.33 ) }
    dend_32 { pt3dadd( -5.85122, -61.983, 15.9827, 1.4 ) }
    dend_32 { pt3dadd( -6.87385, -62.6947, 16.3521, 1.55 ) }
    dend_32 { pt3dadd( -7.8534, -63.4485, 16.7869, 1.55 ) }
    dend_32 { pt3dadd( -8.96213, -64.4783, 17.4113, 1.84 ) }
    dend_32 { pt3dadd( -9.63355, -65.2303, 17.8541, 2.14 ) }
    dend_32 { pt3dadd( -10.2911, -66.1369, 18.3293, 1.99 ) }
    dend_32 { pt3dadd( -11.2083, -67.7744, 19.0889, 0.88 ) }
    dend_32 { pt3dadd( -11.8347, -69.2866, 19.6861, 0.88 ) }
    dend_32 { pt3dadd( -12.3627, -71.0729, 20.2818, 0.81 ) }
    dend_32 { pt3dadd( -12.6582, -72.6521, 20.6861, 0.74 ) }
    dend_32 { pt3dadd( -12.9325, -74.6461, 21.1301, 0.74 ) }
    dend_32 { pt3dadd( -13.067, -76.5089, 21.4842, 1.03 ) }
    dend_32 { pt3dadd( -13.0617, -78.1825, 21.7116, 1.4 ) }
    dend_32 { pt3dadd( -13.0018, -79.2239, 21.795, 1.69 ) }
    dend_32 { pt3dadd( -12.8779, -80.3913, 21.8279, 1.84 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 77/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.44239, -9.49936, -2.20834, 3.39 ) }
    dend_0 { pt3dadd( 1.44239, -9.49936, -2.20834, 3.39 ) }
    dend_0 { pt3dadd( 2.09748, -11.45, -2.3934, 3.39 ) }
    dend_0 { pt3dadd( 2.62644, -13.0237, -2.61976, 3.02 ) }
    dend_0 { pt3dadd( 3.16202, -14.6171, -2.84895, 3.02 ) }
    dend_0 { pt3dadd( 3.8663, -16.7123, -3.15034, 3.02 ) }
    dend_0 { pt3dadd( 4.62282, -18.963, -3.47408, 3.24 ) }
    dend_0 { pt3dadd( 5.19332, -20.6226, -3.7383, 3.54 ) }
    dend_0 { pt3dadd( 5.84104, -22.4108, -4.08966, 3.54 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 86/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.50345, 11.5497, -0.359339, 0.88 ) }
    axon_0 { pt3dadd( 2.99451, 26.4754, -0.359339, 0.88 ) }
    axon_0 { pt3dadd( 4.48557, 41.4011, -0.359339, 0.88 ) }
    // Section: dend_88, id: dend_88, parent: dend_78 (entry count 89/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -37.5038, 66.7486, -27.1173, 0.44 ) }
    dend_88 { pt3dadd( -39.1101, 68.2454, -28.1216, 0.44 ) }
    dend_88 { pt3dadd( -39.8336, 68.9802, -28.5596, 0.37 ) }
    dend_88 { pt3dadd( -40.1588, 69.3953, -28.7159, 0.66 ) }
    dend_88 { pt3dadd( -40.6582, 70.1559, -28.9169, 0.66 ) }
    dend_88 { pt3dadd( -41.1335, 71.0196, -29.082, 0.59 ) }
    dend_88 { pt3dadd( -41.4238, 71.6705, -29.1797, 0.81 ) }
    dend_88 { pt3dadd( -41.6441, 72.4899, -29.1971, 0.81 ) }
    dend_88 { pt3dadd( -41.8288, 74.3735, -29.2015, 0.52 ) }
    dend_88 { pt3dadd( -41.7513, 75.2603, -29.2128, 0.52 ) }
    dend_88 { pt3dadd( -41.3763, 76.6149, -29.2869, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_88 { pt3dadd( -40.7856, 77.8848, -29.4491, 0.44 ) }
    dend_88 { pt3dadd( -39.9898, 79.0905, -29.7111, 0.74 ) }
    dend_88 { pt3dadd( -39.2842, 79.9207, -29.9557, 0.74 ) }
    dend_88 { pt3dadd( -38.1189, 81.0484, -30.409, 0.44 ) }
    dend_88 { pt3dadd( -37.2313, 81.8308, -30.72, 0.59 ) }
    dend_88 { pt3dadd( -36.3384, 82.5954, -31.0378, 0.59 ) }
    dend_88 { pt3dadd( -35.4444, 83.3885, -31.392, 0.59 ) }
    dend_88 { pt3dadd( -34.7469, 84.0894, -31.7259, 0.37 ) }
    dend_88 { pt3dadd( -34.24, 84.6486, -32.0051, 0.37 ) }
    dend_88 { pt3dadd( -33.477, 85.5326, -32.4614, 0.59 ) }
    dend_88 { pt3dadd( -32.725, 86.3771, -32.9235, 0.37 ) }
    dend_88 { pt3dadd( -32.0456, 87.105, -33.3369, 0.81 ) }
    dend_88 { pt3dadd( -31.335, 87.8381, -33.7752, 0.81 ) }
    dend_88 { pt3dadd( -30.0376, 89.1848, -34.6216, 0.44 ) }
    dend_88 { pt3dadd( -29.0417, 90.2457, -35.2981, 0.44 ) }
    dend_88 { pt3dadd( -28.3428, 90.9781, -35.8099, 0.81 ) }
    dend_88 { pt3dadd( -27.6349, 91.727, -36.3451, 0.44 ) }
    dend_88 { pt3dadd( -27.2524, 92.1573, -36.6636, 0.59 ) }
    dend_88 { pt3dadd( -26.346, 93.2545, -37.5261, 0.59 ) }
    dend_88 { pt3dadd( -25.8168, 94.0402, -38.24, 0.44 ) }
    dend_88 { pt3dadd( -25.2824, 95.1365, -39.2895, 0.44 ) }
    dend_88 { pt3dadd( -24.9709, 96.0718, -40.3154, 0.96 ) }
    dend_88 { pt3dadd( -24.8839, 96.5086, -40.8685, 1.18 ) }
    dend_88 { pt3dadd( -24.8618, 96.9067, -41.4359, 1.18 ) }
    dend_88 { pt3dadd( -25.0332, 97.9342, -43.452, 0.44 ) }
    dend_88 { pt3dadd( -25.305, 98.6535, -45.0716, 0.37 ) }
    dend_88 { pt3dadd( -25.6122, 99.2052, -46.7476, 0.66 ) }
    dend_88 { pt3dadd( -25.7644, 99.4259, -47.5351, 0.66 ) }
    dend_88 { pt3dadd( -26.0192, 99.7478, -48.794, 0.66 ) }
    dend_88 { pt3dadd( -26.9397, 100.909, -53.8196, 0.44 ) }
    dend_88 { pt3dadd( -27.0904, 101.095, -54.7161, 0.44 ) }
    dend_88 { pt3dadd( -27.8385, 102.049, -59.4882, 0.29 ) }
    dend_88 { pt3dadd( -27.9947, 102.279, -60.5012, 0.29 ) }
    dend_88 { pt3dadd( -28.1625, 102.58, -61.6545, 0.29 ) }
    dend_88 { pt3dadd( -28.4992, 103.339, -64.0971, 0.74 ) }
    dend_88 { pt3dadd( -28.8623, 104.454, -66.8553, 0.44 ) }
    dend_88 { pt3dadd( -28.9315, 104.753, -67.4547, 0.44 ) }
    dend_88 { pt3dadd( -29.0727, 105.538, -68.5565, 0.37 ) }
    dend_88 { pt3dadd( -29.2065, 106.374, -69.5333, 0.88 ) }
    dend_88 { pt3dadd( -29.4395, 107.807, -70.7699, 0.29 ) }
    dend_88 { pt3dadd( -29.5718, 108.404, -71.1324, 0.52 ) }
    dend_88 { pt3dadd( -29.8891, 109.501, -71.6688, 0.15 ) }
    dend_88 { pt3dadd( -30.2276, 110.466, -72.1667, 0.22 ) }
    dend_88 { pt3dadd( -30.8082, 111.973, -72.9527, 0.22 ) }
    dend_88 { pt3dadd( -31.3845, 113.286, -73.6005, 0.22 ) }
    dend_88 { pt3dadd( -31.9352, 114.522, -74.1682, 0.22 ) }
    dend_88 { pt3dadd( -32.7958, 116.328, -75.0662, 1.47 ) }
    dend_88 { pt3dadd( -33.4535, 117.649, -75.797, 0.66 ) }
    dend_88 { pt3dadd( -33.8577, 118.496, -76.2878, 0.96 ) }
    dend_88 { pt3dadd( -34.4684, 119.9, -77.094, 0.22 ) }
    dend_88 { pt3dadd( -34.8498, 120.853, -77.5683, 0.22 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 51/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -37.5038, 66.7486, -27.1173, 0.37 ) }
    dend_79 { pt3dadd( -37.4417, 68.1264, -26.7758, 0.37 ) }
    dend_79 { pt3dadd( -37.3338, 68.8138, -26.6691, 0.37 ) }
    dend_79 { pt3dadd( -37.2513, 69.4619, -26.5033, 0.37 ) }
    dend_79 { pt3dadd( -37.209, 70.427, -26.1753, 0.74 ) }
    dend_79 { pt3dadd( -37.2554, 71.2399, -25.8653, 0.29 ) }
    dend_79 { pt3dadd( -37.4207, 72.1921, -25.4848, 0.29 ) }
    dend_79 { pt3dadd( -37.5195, 72.6384, -25.2994, 0.52 ) }
    dend_79 { pt3dadd( -37.8326, 73.6118, -24.7285, 0.44 ) }
    dend_79 { pt3dadd( -38.0722, 74.2274, -24.2948, 0.29 ) }
    dend_79 { pt3dadd( -38.284, 74.7632, -23.8907, 0.29 ) }
    dend_79 { pt3dadd( -38.5002, 75.3576, -23.4154, 0.29 ) }
    dend_79 { pt3dadd( -38.786, 76.3645, -22.6356, 0.44 ) }
    dend_79 { pt3dadd( -38.9614, 77.1836, -22.0167, 0.44 ) }
    dend_79 { pt3dadd( -39.0637, 78.2315, -21.3006, 0.52 ) }
    dend_79 { pt3dadd( -39.0408, 79.0692, -20.7416, 0.37 ) }
    dend_79 { pt3dadd( -38.9429, 79.7403, -20.2968, 0.37 ) }
    dend_79 { pt3dadd( -38.7503, 80.4666, -19.8447, 1.11 ) }
    // Section: dend_69, id: dend_69, parent: dend_53 (entry count 69/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 26.9722, 26.8343, -5.27449, 0.29 ) }
    dend_69 { pt3dadd( 28.1225, 26.4949, -3.53135, 0.29 ) }
    dend_69 { pt3dadd( 29.2081, 26.2251, -2.10054, 0.59 ) }
    dend_69 { pt3dadd( 30.2778, 25.9572, -0.864599, 0.74 ) }
    dend_69 { pt3dadd( 30.8659, 25.8163, -0.238658, 0.37 ) }
    dend_69 { pt3dadd( 31.7678, 25.6273, 0.787714, 0.37 ) }
    dend_69 { pt3dadd( 32.2667, 25.5362, 1.39896, 0.66 ) }
    dend_69 { pt3dadd( 32.6374, 25.5124, 1.87904, 0.96 ) }
    dend_69 { pt3dadd( 33.1607, 25.5351, 2.7901, 1.25 ) }
    dend_69 { pt3dadd( 33.9329, 25.676, 4.51651, 0.37 ) }
    dend_69 { pt3dadd( 34.6188, 25.9405, 6.32606, 0.37 ) }
    dend_69 { pt3dadd( 34.842, 26.0632, 6.95928, 0.37 ) }
    dend_69 { pt3dadd( 35.3336, 26.3514, 8.24694, 0.74 ) }
    dend_69 { pt3dadd( 36.232, 26.8275, 10.2039, 0.66 ) }
    dend_69 { pt3dadd( 36.9898, 27.1818, 11.5246, 0.52 ) }
    dend_69 { pt3dadd( 37.6047, 27.382, 12.2735, 0.66 ) }
    dend_69 { pt3dadd( 38.3816, 27.5304, 12.9134, 0.66 ) }
    dend_69 { pt3dadd( 39.4555, 27.6542, 13.5778, 0.37 ) }
    dend_69 { pt3dadd( 40.7118, 27.7047, 14.1536, 0.52 ) }
    dend_69 { pt3dadd( 41.4152, 27.6834, 14.4102, 0.52 ) }
    dend_69 { pt3dadd( 42.6448, 27.6029, 14.8261, 0.66 ) }
    dend_69 { pt3dadd( 43.336, 27.5353, 15.0492, 0.88 ) }
    dend_69 { pt3dadd( 44.2574, 27.4484, 15.3243, 0.88 ) }
    dend_69 { pt3dadd( 45.3248, 27.3842, 15.6914, 0.66 ) }
    dend_69 { pt3dadd( 46.6599, 27.3727, 16.1745, 0.29 ) }
    dend_69 { pt3dadd( 47.8288, 27.4294, 16.5887, 0.29 ) }
    dend_69 { pt3dadd( 49.5988, 27.6651, 17.1914, 0.88 ) }
    dend_69 { pt3dadd( 50.0889, 27.7514, 17.3555, 0.88 ) }
    dend_69 { pt3dadd( 52.0524, 28.1665, 17.9821, 0.29 ) }
    dend_69 { pt3dadd( 53.5678, 28.5428, 18.4233, 0.29 ) }
    dend_69 { pt3dadd( 55.0175, 28.9508, 18.8041, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_69 { pt3dadd( 56.7422, 29.4776, 19.2249, 0.29 ) }
    dend_69 { pt3dadd( 57.9966, 29.8692, 19.5251, 0.29 ) }
    dend_69 { pt3dadd( 59.1587, 30.209, 19.7764, 0.81 ) }
    dend_69 { pt3dadd( 60.0738, 30.4559, 19.9212, 0.81 ) }
    dend_69 { pt3dadd( 60.8858, 30.6621, 20.0439, 0.81 ) }
    dend_69 { pt3dadd( 62.1167, 30.9476, 20.2235, 0.59 ) }
    dend_69 { pt3dadd( 63.549, 31.2254, 20.4357, 0.29 ) }
    dend_69 { pt3dadd( 64.8123, 31.5135, 20.6391, 0.81 ) }
    dend_69 { pt3dadd( 66.0593, 31.802, 20.8512, 0.22 ) }
    dend_69 { pt3dadd( 67.1661, 32.0376, 21.038, 0.22 ) }
    dend_69 { pt3dadd( 67.8683, 32.1596, 21.143, 0.52 ) }
    dend_69 { pt3dadd( 68.8389, 32.2873, 21.229, 0.22 ) }
    dend_69 { pt3dadd( 78.6772, 34.0393, 27.5202, 0.22 ) }
    dend_69 { pt3dadd( 87.7781, 36.1072, 34.7452, 0.22 ) }
    dend_69 { pt3dadd( 98.2681, 36.2148, 40.1988, 0.22 ) }
    dend_69 { pt3dadd( 108.692, 34.3329, 45.4183, 0.22 ) }
    dend_69 { pt3dadd( 119.071, 33.8592, 51.0604, 0.22 ) }
    dend_69 { pt3dadd( 127.618, 32.0096, 58.997, 0.22 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 18/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 26.9722, 26.8343, -5.27449, 0.81 ) }
    dend_54 { pt3dadd( 28.5487, 27.0082, -4.67148, 0.81 ) }
    dend_54 { pt3dadd( 29.2987, 27.0071, -4.42552, 1.03 ) }
    dend_54 { pt3dadd( 31.302, 26.9085, -3.9639, 0.96 ) }
    dend_54 { pt3dadd( 32.4026, 26.8619, -3.77159, 0.96 ) }
    dend_54 { pt3dadd( 33.6876, 26.861, -3.59254, 0.59 ) }
    dend_54 { pt3dadd( 34.5822, 26.9053, -3.49151, 0.66 ) }
    dend_54 { pt3dadd( 35.784, 26.9706, -3.39611, 0.66 ) }
    dend_54 { pt3dadd( 37.2194, 27.1605, -3.37606, 0.59 ) }
    dend_54 { pt3dadd( 37.9747, 27.3742, -3.45902, 0.81 ) }
    dend_54 { pt3dadd( 38.9294, 27.8064, -3.60117, 0.96 ) }
    dend_54 { pt3dadd( 39.8072, 28.3116, -3.74511, 1.25 ) }
    dend_54 { pt3dadd( 40.4412, 28.6931, -3.84162, 1.4 ) }
    dend_54 { pt3dadd( 41.2373, 29.158, -3.92617, 1.4 ) }
    dend_54 { pt3dadd( 42.5362, 29.8019, -3.9836, 0.59 ) }
    dend_54 { pt3dadd( 43.0656, 29.9759, -3.98887, 0.59 ) }
    dend_54 { pt3dadd( 44.169, 30.1333, -3.96116, 0.59 ) }
    dend_54 { pt3dadd( 45.3761, 30.1322, -3.89457, 1.03 ) }
    dend_54 { pt3dadd( 46.2344, 30.0471, -3.82582, 1.18 ) }
    dend_54 { pt3dadd( 46.9801, 29.9164, -3.71949, 1.18 ) }
    dend_54 { pt3dadd( 48.1828, 29.639, -3.47253, 0.74 ) }
    dend_54 { pt3dadd( 49.3366, 29.3494, -3.15552, 0.66 ) }
    dend_54 { pt3dadd( 49.8839, 29.2154, -2.98101, 0.96 ) }
    dend_54 { pt3dadd( 50.5974, 29.0711, -2.74988, 0.96 ) }
    dend_54 { pt3dadd( 51.8777, 28.8723, -2.35021, 1.03 ) }
    dend_54 { pt3dadd( 52.4819, 28.8163, -2.1659, 1.03 ) }
    dend_54 { pt3dadd( 54.1618, 28.8416, -1.69425, 0.59 ) }
    dend_54 { pt3dadd( 55.073, 28.9519, -1.47054, 0.59 ) }
    dend_54 { pt3dadd( 56.7, 29.2641, -1.13722, 0.59 ) }
    dend_54 { pt3dadd( 57.4969, 29.469, -1.01112, 0.81 ) }
    dend_54 { pt3dadd( 58.2425, 29.7227, -0.939894, 0.81 ) }
    dend_54 { pt3dadd( 59.7635, 30.349, -0.888921, 0.37 ) }
    dend_54 { pt3dadd( 60.7227, 30.7701, -0.918688, 0.66 ) }
    dend_54 { pt3dadd( 61.5745, 31.1132, -0.950943, 0.74 ) }
    dend_54 { pt3dadd( 62.1097, 31.295, -0.980709, 0.74 ) }
    dend_54 { pt3dadd( 63.158, 31.5438, -1.05376, 0.74 ) }
    dend_54 { pt3dadd( 64.2839, 31.664, -1.14011, 0.52 ) }
    dend_54 { pt3dadd( 65.8522, 31.6349, -1.26343, 0.74 ) }
    dend_54 { pt3dadd( 67.0331, 31.5446, -1.3263, 0.88 ) }
    dend_54 { pt3dadd( 67.6789, 31.4867, -1.3248, 0.96 ) }
    dend_54 { pt3dadd( 68.3191, 31.4385, -1.28329, 1.18 ) }
    dend_54 { pt3dadd( 69.2898, 31.3994, -1.15208, 1.18 ) }
    dend_54 { pt3dadd( 70.0244, 31.4359, -0.984265, 0.66 ) }
    dend_54 { pt3dadd( 71.3195, 31.7214, -0.54784, 0.59 ) }
    dend_54 { pt3dadd( 72.1632, 32.0443, -0.112248, 0.59 ) }
    dend_54 { pt3dadd( 72.7191, 32.3188, 0.246005, 0.74 ) }
    dend_54 { pt3dadd( 73.1513, 32.5775, 0.57331, 0.74 ) }
    dend_54 { pt3dadd( 73.5756, 32.8621, 0.935553, 0.74 ) }
    dend_54 { pt3dadd( 74.3818, 33.4423, 1.70133, 0.59 ) }
    dend_54 { pt3dadd( 75.4462, 34.2548, 2.8178, 0.96 ) }
    dend_54 { pt3dadd( 75.9532, 34.6336, 3.35617, 1.25 ) }
    dend_54 { pt3dadd( 76.2279, 34.8322, 3.67012, 1.25 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 70/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 120.315, 64.6293, 106.623, 0.29 ) }
    dend_52 { pt3dadd( 128.59, 68.9215, 115.119, 0.29 ) }
    dend_52 { pt3dadd( 137.948, 73.5177, 122.211, 0.29 ) }
    dend_52 { pt3dadd( 147.406, 79.2051, 128.223, 0.29 ) }
    dend_52 { pt3dadd( 155.83, 83.9296, 136.311, 0.29 ) }
    dend_52 { pt3dadd( 163.54, 89.98, 144.125, 0.29 ) }
    dend_52 { pt3dadd( 169.491, 96.4719, 152.992, 0.29 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 77/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 120.315, 64.6293, 106.623, 0.29 ) }
    dend_51 { pt3dadd( 127.057, 67.7261, 112.109, 0.29 ) }
    dend_51 { pt3dadd( 132.524, 72.2779, 117.874, 0.29 ) }
    dend_51 { pt3dadd( 136.846, 77.2517, 124.186, 0.29 ) }
    dend_51 { pt3dadd( 141.979, 80.8077, 130.943, 0.29 ) }
    dend_51 { pt3dadd( 146.754, 84.8226, 137.675, 0.29 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 83/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -25.7939, -8.47726, -26.3082, 0.74 ) }
    dend_46 { pt3dadd( -27.6337, -9.74658, -26.75, 0.74 ) }
    dend_46 { pt3dadd( -28.6248, -10.2484, -26.9454, 0.74 ) }
    dend_46 { pt3dadd( -29.4651, -10.569, -27.1194, 0.74 ) }
    dend_46 { pt3dadd( -30.7952, -10.8481, -27.5482, 0.66 ) }
    dend_46 { pt3dadd( -31.7634, -10.919, -27.9584, 0.66 ) }
    dend_46 { pt3dadd( -32.7899, -10.9202, -28.4505, 0.59 ) }
    dend_46 { pt3dadd( -33.4995, -10.7928, -28.7951, 1.25 ) }
    dend_46 { pt3dadd( -34.0765, -10.6381, -29.1124, 1.25 ) }
    dend_46 { pt3dadd( -35.8358, -10.1374, -30.1684, 0.66 ) }
    dend_46 { pt3dadd( -36.7103, -9.92025, -30.7192, 0.66 ) }
    dend_46 { pt3dadd( -37.1817, -9.87113, -31.0288, 0.96 ) }
    dend_46 { pt3dadd( -37.8804, -9.9392, -31.4883, 0.96 ) }
    dend_46 { pt3dadd( -38.3666, -10.1143, -31.927, 0.96 ) }
    dend_46 { pt3dadd( -39.1031, -10.6747, -33.0166, 0.74 ) }
    dend_46 { pt3dadd( -39.4916, -11.1473, -33.8603, 0.52 ) }
    dend_46 { pt3dadd( -39.8784, -11.7361, -34.9176, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_46 { pt3dadd( -40.1268, -12.1695, -35.7013, 1.03 ) }
    dend_46 { pt3dadd( -41.0267, -13.9127, -38.908, 1.25 ) }
    dend_46 { pt3dadd( -41.6352, -15.1451, -41.2362, 0.66 ) }
    dend_46 { pt3dadd( -41.9373, -15.7354, -42.3877, 0.66 ) }
    dend_46 { pt3dadd( -42.1298, -16.0331, -42.9917, 1.11 ) }
    dend_46 { pt3dadd( -42.3086, -16.2108, -43.3527, 1.33 ) }
    dend_46 { pt3dadd( -42.5788, -16.3906, -43.6575, 1.18 ) }
    dend_46 { pt3dadd( -43.0255, -16.6122, -43.828, 1.18 ) }
    dend_46 { pt3dadd( -44.0565, -17.0994, -44.0712, 0.59 ) }
    dend_46 { pt3dadd( -45.1174, -17.6723, -44.3557, 0.52 ) }
    dend_46 { pt3dadd( -45.9514, -18.2041, -44.6528, 0.52 ) }
    dend_46 { pt3dadd( -46.6382, -18.7336, -45.0256, 0.81 ) }
    dend_46 { pt3dadd( -47.3055, -19.3634, -45.5632, 0.66 ) }
    dend_46 { pt3dadd( -47.9282, -20.0249, -46.1901, 0.66 ) }
    dend_46 { pt3dadd( -48.3751, -20.552, -46.7387, 1.33 ) }
    dend_46 { pt3dadd( -48.6741, -20.9237, -47.137, 1.33 ) }
    dend_46 { pt3dadd( -49.6065, -22.0898, -48.4019, 0.66 ) }
    dend_46 { pt3dadd( -50.4282, -23.0821, -49.4773, 0.52 ) }
    dend_46 { pt3dadd( -50.8179, -23.5148, -49.9584, 0.52 ) }
    dend_46 { pt3dadd( -51.3289, -23.9977, -50.442, 0.96 ) }
    dend_46 { pt3dadd( -51.6985, -24.3042, -50.6927, 1.18 ) }
    dend_46 { pt3dadd( -51.9675, -24.5116, -50.7982, 1.18 ) }
    dend_46 { pt3dadd( -52.5347, -24.9587, -50.8595, 0.81 ) }
    dend_46 { pt3dadd( -53.3151, -25.6209, -50.8071, 0.74 ) }
    dend_46 { pt3dadd( -54.2853, -26.5243, -50.641, 0.59 ) }
    dend_46 { pt3dadd( -54.7726, -26.9722, -50.5181, 0.74 ) }
    dend_46 { pt3dadd( -55.4243, -27.5417, -50.3164, 0.74 ) }
    dend_46 { pt3dadd( -56.1252, -28.0907, -50.0863, 0.59 ) }
    dend_46 { pt3dadd( -56.7874, -28.5764, -49.857, 0.44 ) }
    dend_46 { pt3dadd( -57.53, -29.1136, -49.5906, 0.44 ) }
    dend_46 { pt3dadd( -58.2451, -29.6254, -49.3675, 0.44 ) }
    dend_46 { pt3dadd( -58.9996, -30.2194, -49.1395, 0.44 ) }
    dend_46 { pt3dadd( -60.239, -31.3121, -48.7783, 0.44 ) }
    dend_46 { pt3dadd( -60.5477, -31.6422, -48.6846, 0.96 ) }
    dend_46 { pt3dadd( -61.1118, -32.4556, -48.5331, 1.18 ) }
    dend_46 { pt3dadd( -61.4706, -33.1956, -48.4545, 0.81 ) }
    dend_46 { pt3dadd( -61.8707, -34.4396, -48.4498, 0.59 ) }
    dend_46 { pt3dadd( -62.0042, -34.9889, -48.5114, 0.74 ) }
    dend_46 { pt3dadd( -62.2094, -35.879, -48.6746, 0.66 ) }
    dend_46 { pt3dadd( -62.4791, -36.7462, -48.8757, 0.66 ) }
    dend_46 { pt3dadd( -62.7414, -37.3828, -49.0514, 0.81 ) }
    dend_46 { pt3dadd( -63.3292, -38.5419, -49.3784, 0.59 ) }
    dend_46 { pt3dadd( -63.9094, -39.551, -49.6498, 0.52 ) }
    dend_46 { pt3dadd( -64.4537, -40.5298, -49.882, 0.81 ) }
    dend_46 { pt3dadd( -64.933, -41.4835, -50.0627, 1.4 ) }
    dend_46 { pt3dadd( -65.1521, -42.0512, -50.0976, 1.69 ) }
    dend_46 { pt3dadd( -65.4504, -43.1638, -50.0263, 0.52 ) }
    dend_46 { pt3dadd( -65.6545, -44.088, -49.9706, 0.44 ) }
    dend_46 { pt3dadd( -65.8269, -45.038, -50.0467, 0.44 ) }
    dend_46 { pt3dadd( -65.9549, -45.7187, -50.2464, 0.29 ) }
    dend_46 { pt3dadd( -66.2781, -46.9954, -50.8222, 1.4 ) }
    dend_46 { pt3dadd( -66.3629, -47.2502, -50.9593, 1.4 ) }
    dend_46 { pt3dadd( -67.3217, -49.5113, -52.4935, 0.52 ) }
    dend_46 { pt3dadd( -67.9511, -50.7582, -53.443, 0.52 ) }
    dend_46 { pt3dadd( -68.3124, -51.4017, -53.9579, 0.52 ) }
    dend_46 { pt3dadd( -68.8605, -52.3593, -54.7229, 0.74 ) }
    dend_46 { pt3dadd( -69.221, -53.0005, -55.2161, 0.88 ) }
    dend_46 { pt3dadd( -69.9767, -54.4529, -56.1598, 0.44 ) }
    dend_46 { pt3dadd( -70.32, -55.1765, -56.5059, 0.59 ) }
    dend_46 { pt3dadd( -70.7244, -55.9823, -56.856, 0.59 ) }
    dend_46 { pt3dadd( -71.1872, -56.7981, -57.2452, 0.37 ) }
    dend_46 { pt3dadd( -71.4805, -57.2904, -57.4968, 0.59 ) }
    dend_46 { pt3dadd( -72.0368, -58.1633, -57.9366, 0.81 ) }
    dend_46 { pt3dadd( -72.5863, -58.9496, -58.2674, 1.18 ) }
    dend_46 { pt3dadd( -72.9462, -59.4315, -58.4773, 1.18 ) }
    dend_46 { pt3dadd( -73.9441, -60.627, -59.0825, 0.74 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 66/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -25.7939, -8.47726, -26.3082, 0.81 ) }
    dend_45 { pt3dadd( -26.2754, -6.87394, -26.3351, 0.81 ) }
    dend_45 { pt3dadd( -26.5272, -6.28752, -26.2925, 0.81 ) }
    dend_45 { pt3dadd( -26.9461, -5.58925, -26.1942, 0.81 ) }
    dend_45 { pt3dadd( -27.4247, -5.05248, -26.0906, 0.88 ) }
    dend_45 { pt3dadd( -28.029, -4.63899, -26.0079, 0.66 ) }
    dend_45 { pt3dadd( -29.1716, -4.08778, -25.9232, 0.59 ) }
    dend_45 { pt3dadd( -30.0025, -3.96187, -25.9141, 0.59 ) }
    dend_45 { pt3dadd( -30.7602, -3.97422, -26.0458, 0.59 ) }
    dend_45 { pt3dadd( -31.7733, -4.11534, -26.393, 0.74 ) }
    dend_45 { pt3dadd( -32.8636, -4.35799, -26.9802, 1.03 ) }
    dend_45 { pt3dadd( -33.245, -4.45409, -27.2287, 1.62 ) }
    dend_45 { pt3dadd( -33.7611, -4.5796, -27.6082, 1.92 ) }
    dend_45 { pt3dadd( -35.3914, -4.92311, -28.7843, 0.88 ) }
    dend_45 { pt3dadd( -36.0165, -5.03554, -29.2265, 0.66 ) }
    dend_45 { pt3dadd( -36.9338, -5.19315, -29.8449, 0.66 ) }
    dend_45 { pt3dadd( -38.1715, -5.40026, -30.6327, 0.66 ) }
    dend_45 { pt3dadd( -38.7207, -5.47908, -30.966, 0.66 ) }
    dend_45 { pt3dadd( -39.9127, -5.58138, -31.6196, 0.66 ) }
    dend_45 { pt3dadd( -40.6685, -5.59378, -31.9927, 0.44 ) }
    dend_45 { pt3dadd( -41.6161, -5.54961, -32.4906, 0.44 ) }
    dend_45 { pt3dadd( -42.3046, -5.4749, -32.8926, 0.44 ) }
    dend_45 { pt3dadd( -43.108, -5.34005, -33.458, 0.66 ) }
    dend_45 { pt3dadd( -43.6658, -5.22564, -33.8842, 0.66 ) }
    dend_45 { pt3dadd( -44.3213, -5.04741, -34.3945, 0.66 ) }
    dend_45 { pt3dadd( -44.8856, -4.8614, -34.7908, 0.66 ) }
    dend_45 { pt3dadd( -45.5259, -4.59311, -35.1926, 0.44 ) }
    dend_45 { pt3dadd( -45.9694, -4.3797, -35.4587, 0.74 ) }
    dend_45 { pt3dadd( -46.6286, -4.04262, -35.8359, 0.74 ) }
    dend_45 { pt3dadd( -47.215, -3.73562, -36.1677, 0.74 ) }
    dend_45 { pt3dadd( -47.7147, -3.47427, -36.4372, 0.74 ) }
    dend_45 { pt3dadd( -48.2877, -3.18081, -36.7323, 0.37 ) }
    dend_45 { pt3dadd( -49.1466, -2.84921, -37.1986, 0.37 ) }
    dend_45 { pt3dadd( -49.5236, -2.78887, -37.4239, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_45 { pt3dadd( -49.9287, -2.82196, -37.7058, 0.88 ) }
    dend_45 { pt3dadd( -50.4742, -2.94061, -38.1045, 1.18 ) }
    dend_45 { pt3dadd( -50.9197, -3.06628, -38.4675, 1.33 ) }
    dend_45 { pt3dadd( -52.0554, -3.42711, -39.4701, 0.44 ) }
    dend_45 { pt3dadd( -52.8652, -3.661, -40.2507, 0.44 ) }
    dend_45 { pt3dadd( -53.5016, -3.78413, -40.9572, 0.44 ) }
    dend_45 { pt3dadd( -54.0626, -3.79356, -41.6486, 0.88 ) }
    dend_45 { pt3dadd( -54.647, -3.64792, -42.415, 1.03 ) }
    dend_45 { pt3dadd( -54.878, -3.50756, -42.7169, 1.03 ) }
    dend_45 { pt3dadd( -55.4594, -2.92314, -43.3647, 0.44 ) }
    dend_45 { pt3dadd( -55.8077, -2.5319, -43.7135, 0.44 ) }
    dend_45 { pt3dadd( -56.228, -2.1069, -44.041, 0.44 ) }
    dend_45 { pt3dadd( -56.5838, -1.82796, -44.2838, 0.59 ) }
    dend_45 { pt3dadd( -57.1893, -1.48409, -44.6271, 0.59 ) }
    dend_45 { pt3dadd( -57.8204, -1.25512, -44.9637, 0.74 ) }
    dend_45 { pt3dadd( -58.9998, -1.06328, -45.5492, 0.37 ) }
    dend_45 { pt3dadd( -59.7491, -1.058, -45.9359, 0.37 ) }
    dend_45 { pt3dadd( -60.8683, -1.20373, -46.5408, 0.59 ) }
    dend_45 { pt3dadd( -61.3097, -1.31452, -46.7959, 0.88 ) }
    dend_45 { pt3dadd( -62.1645, -1.63532, -47.3448, 0.66 ) }
    dend_45 { pt3dadd( -62.742, -1.89811, -47.7367, 0.74 ) }
    dend_45 { pt3dadd( -63.3598, -2.21493, -48.1524, 0.59 ) }
    dend_45 { pt3dadd( -63.8909, -2.50662, -48.5349, 0.52 ) }
    dend_45 { pt3dadd( -64.3879, -2.77644, -48.893, 0.88 ) }
    dend_45 { pt3dadd( -65.297, -3.20638, -49.5731, 0.59 ) }
    dend_45 { pt3dadd( -65.8239, -3.4043, -49.9767, 0.44 ) }
    dend_45 { pt3dadd( -66.4046, -3.56694, -50.4332, 1.03 ) }
    dend_45 { pt3dadd( -66.8092, -3.6427, -50.749, 1.33 ) }
    dend_45 { pt3dadd( -67.0594, -3.66702, -50.9351, 1.4 ) }
    dend_45 { pt3dadd( -68.1175, -3.71006, -51.6563, 0.44 ) }
    dend_45 { pt3dadd( -68.5467, -3.71931, -51.9311, 0.44 ) }
    dend_45 { pt3dadd( -69.1821, -3.71913, -52.3124, 0.44 ) }
    dend_45 { pt3dadd( -69.8527, -3.69936, -52.6845, 0.44 ) }
    dend_45 { pt3dadd( -70.9401, -3.65887, -53.2825, 0.59 ) }
    dend_45 { pt3dadd( -71.6875, -3.63059, -53.7537, 0.88 ) }
    dend_45 { pt3dadd( -72.3616, -3.58172, -54.291, 1.11 ) }
    dend_45 { pt3dadd( -73.2192, -3.48989, -55.0838, 0.52 ) }
    dend_45 { pt3dadd( -73.8259, -3.38913, -55.7063, 0.52 ) }
    dend_45 { pt3dadd( -74.3265, -3.28257, -56.2533, 1.03 ) }
    dend_45 { pt3dadd( -75.4311, -3.02571, -57.5461, 1.25 ) }
    dend_45 { pt3dadd( -76.7434, -2.77051, -59.0744, 0.52 ) }
    dend_45 { pt3dadd( -77.1967, -2.70098, -59.5886, 0.59 ) }
    dend_45 { pt3dadd( -77.809, -2.63381, -60.2428, 0.59 ) }
    dend_45 { pt3dadd( -78.786, -2.53206, -61.1591, 0.44 ) }
    dend_45 { pt3dadd( -79.4659, -2.45526, -61.681, 0.44 ) }
    dend_45 { pt3dadd( -80.4733, -2.29837, -62.3154, 0.44 ) }
    dend_45 { pt3dadd( -81.0093, -2.18541, -62.6401, 0.44 ) }
    dend_45 { pt3dadd( -81.7253, -1.94961, -63.2053, 0.66 ) }
    dend_45 { pt3dadd( -82.2131, -1.70542, -63.7083, 0.88 ) }
    dend_45 { pt3dadd( -82.4603, -1.52186, -64.0159, 0.88 ) }
    dend_45 { pt3dadd( -83.1433, -0.852254, -64.9699, 0.52 ) }
    dend_45 { pt3dadd( -83.5429, -0.359984, -65.5935, 0.52 ) }
    dend_45 { pt3dadd( -84.0752, 0.418062, -66.5764, 0.81 ) }
    dend_45 { pt3dadd( -84.4256, 1.02758, -67.3197, 0.44 ) }
    dend_45 { pt3dadd( -84.6156, 1.40516, -67.7774, 0.44 ) }
    dend_45 { pt3dadd( -84.8095, 1.89652, -68.3455, 0.74 ) }
    dend_45 { pt3dadd( -84.9079, 2.26742, -68.7265, 0.96 ) }
    dend_45 { pt3dadd( -85.0381, 3.22845, -69.5435, 0.66 ) }
    dend_45 { pt3dadd( -85.0918, 3.82978, -70.0303, 0.44 ) }
    dend_45 { pt3dadd( -85.1619, 4.48367, -70.5966, 0.44 ) }
    dend_45 { pt3dadd( -85.2861, 5.10175, -71.2071, 0.44 ) }
    dend_45 { pt3dadd( -85.3707, 5.31301, -71.4495, 0.44 ) }
    dend_45 { pt3dadd( -85.7203, 5.74859, -72.0237, 0.96 ) }
    dend_45 { pt3dadd( -86.6332, 6.22116, -72.8645, 0.66 ) }
    dend_45 { pt3dadd( -87.2634, 6.41511, -73.3291, 0.96 ) }
    dend_45 { pt3dadd( -87.5722, 6.48973, -73.5141, 1.25 ) }
    dend_45 { pt3dadd( -87.9394, 6.56873, -73.7103, 1.25 ) }
    dend_45 { pt3dadd( -88.5211, 6.70976, -74.01, 1.25 ) }
    dend_45 { pt3dadd( -89.5143, 7.04773, -74.5314, 0.37 ) }
    dend_45 { pt3dadd( -90.0966, 7.37646, -74.8266, 0.37 ) }
    dend_45 { pt3dadd( -90.4711, 7.65801, -75.053, 0.66 ) }
    dend_45 { pt3dadd( -90.7564, 7.89099, -75.2234, 0.81 ) }
    dend_45 { pt3dadd( -91.2026, 8.26148, -75.4614, 0.81 ) }
    dend_45 { pt3dadd( -91.8984, 8.83759, -75.7508, 0.44 ) }
    dend_45 { pt3dadd( -92.3843, 9.20644, -75.876, 0.44 ) }
    dend_45 { pt3dadd( -93.2896, 9.79967, -76.0184, 0.44 ) }
    dend_45 { pt3dadd( -94.3012, 10.4222, -76.1122, 0.44 ) }
    dend_45 { pt3dadd( -95.0725, 10.8922, -76.1433, 0.66 ) }
    dend_45 { pt3dadd( -95.8783, 11.3783, -76.1346, 0.96 ) }
    dend_45 { pt3dadd( -96.6956, 11.8641, -76.0684, 0.59 ) }
    dend_45 { pt3dadd( -97.3894, 12.2921, -75.9859, 0.44 ) }
    dend_45 { pt3dadd( -98.1042, 12.7431, -75.8941, 0.44 ) }
    dend_45 { pt3dadd( -98.7973, 13.1779, -75.8485, 0.44 ) }
    dend_45 { pt3dadd( -99.4042, 13.5112, -75.8827, 0.44 ) }
    dend_45 { pt3dadd( -100.115, 13.8066, -76.0285, 0.74 ) }
    dend_45 { pt3dadd( -100.472, 13.9128, -76.147, 0.74 ) }
    dend_45 { pt3dadd( -101.503, 14.1193, -76.5422, 0.52 ) }
    dend_45 { pt3dadd( -101.975, 14.1886, -76.747, 0.59 ) }
    dend_45 { pt3dadd( -102.852, 14.3, -77.1598, 0.44 ) }
    dend_45 { pt3dadd( -103.504, 14.4083, -77.4813, 0.44 ) }
    dend_45 { pt3dadd( -104.309, 14.6156, -77.9258, 0.37 ) }
    dend_45 { pt3dadd( -105.106, 14.8987, -78.3711, 0.52 ) }
    dend_45 { pt3dadd( -105.729, 15.1879, -78.7289, 1.11 ) }
    dend_45 { pt3dadd( -106.208, 15.4523, -79.0415, 1.25 ) }
    dend_45 { pt3dadd( -106.767, 15.7972, -79.4694, 0.37 ) }
    dend_45 { pt3dadd( -107.559, 16.2991, -80.1746, 0.37 ) }
    dend_45 { pt3dadd( -108.095, 16.6156, -80.7068, 0.29 ) }
    dend_45 { pt3dadd( -108.521, 16.8457, -81.1795, 0.29 ) }
    dend_45 { pt3dadd( -109.285, 17.245, -82.0815, 0.59 ) }
    dend_45 { pt3dadd( -109.885, 17.5747, -82.8242, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_45 { pt3dadd( -110.224, 17.7728, -83.2475, 0.29 ) }
    dend_45 { pt3dadd( -110.491, 17.9493, -83.5533, 0.37 ) }
    dend_45 { pt3dadd( -110.91, 18.2783, -84.0033, 0.37 ) }
    dend_45 { pt3dadd( -111.487, 18.7778, -84.5142, 0.44 ) }
    dend_45 { pt3dadd( -111.974, 19.2274, -84.835, 0.44 ) }
    dend_45 { pt3dadd( -112.442, 19.6604, -85.072, 0.44 ) }
    dend_45 { pt3dadd( -113.013, 20.146, -85.328, 0.37 ) }
    dend_45 { pt3dadd( -113.249, 20.3193, -85.4206, 0.37 ) }
    dend_45 { pt3dadd( -113.865, 20.6879, -85.6168, 0.88 ) }
    dend_45 { pt3dadd( -114.227, 20.8669, -85.7174, 1.11 ) }
    dend_45 { pt3dadd( -114.881, 21.1633, -85.8912, 1.11 ) }
    dend_45 { pt3dadd( -115.907, 21.6513, -86.1566, 0.37 ) }
    dend_45 { pt3dadd( -116.698, 22.069, -86.3557, 0.37 ) }
    dend_45 { pt3dadd( -117.147, 22.3509, -86.4633, 0.66 ) }
    dend_45 { pt3dadd( -117.803, 22.895, -86.6531, 0.66 ) }
    dend_45 { pt3dadd( -118.303, 23.4322, -86.8331, 0.37 ) }
    dend_45 { pt3dadd( -118.705, 23.9966, -87.0217, 0.52 ) }
    dend_45 { pt3dadd( -118.846, 24.2442, -87.1049, 0.66 ) }
    dend_45 { pt3dadd( -119.047, 24.647, -87.2357, 0.66 ) }
    dend_45 { pt3dadd( -119.592, 25.7603, -87.5833, 0.37 ) }
    dend_45 { pt3dadd( -119.856, 26.2449, -87.7095, 0.37 ) }
    dend_45 { pt3dadd( -120.17, 26.6575, -87.7653, 0.37 ) }
    dend_45 { pt3dadd( -120.52, 26.9894, -87.7514, 0.88 ) }
    dend_45 { pt3dadd( -121.105, 27.4249, -87.6636, 0.81 ) }
    dend_45 { pt3dadd( -121.399, 27.6066, -87.6021, 0.81 ) }
    dend_45 { pt3dadd( -122.148, 28.0189, -87.415, 0.29 ) }
    dend_45 { pt3dadd( -123.133, 28.5414, -87.1607, 0.29 ) }
    dend_45 { pt3dadd( -123.743, 28.8984, -86.9545, 0.52 ) }
    dend_45 { pt3dadd( -124.474, 29.3758, -86.6901, 0.44 ) }
    dend_45 { pt3dadd( -124.829, 29.6228, -86.5606, 0.44 ) }
    dend_45 { pt3dadd( -125.294, 29.9718, -86.3704, 0.81 ) }
    dend_45 { pt3dadd( -125.833, 30.4353, -86.1266, 0.81 ) }
    dend_45 { pt3dadd( -126.822, 31.4361, -85.6256, 0.29 ) }
    dend_45 { pt3dadd( -127.215, 31.864, -85.4154, 0.44 ) }
    dend_45 { pt3dadd( -127.582, 32.2759, -85.1923, 0.29 ) }
    dend_45 { pt3dadd( -127.993, 32.7141, -84.953, 0.29 ) }
    dend_45 { pt3dadd( -128.539, 33.2582, -84.6697, 0.29 ) }
    dend_45 { pt3dadd( -128.963, 33.652, -84.4871, 0.29 ) }
    dend_45 { pt3dadd( -129.472, 34.082, -84.3094, 0.59 ) }
    dend_45 { pt3dadd( -130.453, 34.8899, -83.9523, 0.22 ) }
    dend_45 { pt3dadd( -131.087, 35.4022, -83.7238, 0.22 ) }
    dend_45 { pt3dadd( -131.428, 35.6536, -83.5998, 0.52 ) }
    dend_45 { pt3dadd( -131.749, 35.8554, -83.4757, 0.52 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 43/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -57.0022, -31.3828, 55.6567, 0.29 ) }
    dend_43 { pt3dadd( -64.5976, -36.2103, 62.9407, 0.29 ) }
    dend_43 { pt3dadd( -70.5248, -42.72, 70.3132, 0.29 ) }
    dend_43 { pt3dadd( -76.0774, -49.1039, 78.0844, 0.29 ) }
    dend_43 { pt3dadd( -80.9978, -56.1332, 85.6585, 0.29 ) }
    dend_43 { pt3dadd( -84.2756, -63.6701, 93.5607, 0.29 ) }
    dend_43 { pt3dadd( -88.5205, -71.1224, 101.091, 0.29 ) }
    dend_43 { pt3dadd( -92.797, -78.5938, 108.583, 0.29 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 51/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -57.0022, -31.3828, 55.6567, 0.29 ) }
    dend_42 { pt3dadd( -62.691, -34.3984, 60.6183, 0.29 ) }
    dend_42 { pt3dadd( -68.3753, -38.3081, 64.8357, 0.29 ) }
    dend_42 { pt3dadd( -73.4806, -42.683, 69.2835, 0.29 ) }
    dend_42 { pt3dadd( -77.8523, -47.3345, 74.183, 0.29 ) }
    dend_42 { pt3dadd( -81.8535, -52.4676, 78.8619, 0.29 ) }
    dend_42 { pt3dadd( -85.0683, -58.4179, 83.0511, 0.29 ) }
    dend_42 { pt3dadd( -88.8569, -63.6784, 87.7511, 0.29 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 59/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -12.8779, -80.3913, 21.8279, 0.66 ) }
    dend_34 { pt3dadd( -13.631, -82.6116, 20.9293, 0.66 ) }
    dend_34 { pt3dadd( -13.823, -83.201, 20.714, 1.03 ) }
    dend_34 { pt3dadd( -14.0167, -83.8181, 20.568, 1.03 ) }
    dend_34 { pt3dadd( -14.3737, -84.9982, 20.4062, 1.03 ) }
    dend_34 { pt3dadd( -14.6136, -85.8931, 20.3522, 1.03 ) }
    dend_34 { pt3dadd( -14.8662, -86.9873, 20.3563, 0.81 ) }
    dend_34 { pt3dadd( -15.0305, -87.9681, 20.5421, 0.81 ) }
    dend_34 { pt3dadd( -15.1283, -89.4087, 20.9432, 1.4 ) }
    dend_34 { pt3dadd( -15.1193, -90.0269, 21.1622, 1.62 ) }
    dend_34 { pt3dadd( -15.0335, -90.9501, 21.5791, 1.4 ) }
    dend_34 { pt3dadd( -14.9303, -91.5591, 21.8773, 1.92 ) }
    dend_34 { pt3dadd( -14.7318, -92.386, 22.2943, 1.4 ) }
    dend_34 { pt3dadd( -14.3549, -93.6379, 22.9364, 1.69 ) }
    dend_34 { pt3dadd( -14.0718, -94.4745, 23.3219, 1.11 ) }
    dend_34 { pt3dadd( -13.6922, -95.5971, 23.8082, 0.81 ) }
    dend_34 { pt3dadd( -13.5246, -96.1276, 24.0208, 1.11 ) }
    dend_34 { pt3dadd( -13.3475, -96.7615, 24.2492, 1.25 ) }
    dend_34 { pt3dadd( -13.0261, -98.1748, 24.708, 0.96 ) }
    dend_34 { pt3dadd( -12.9262, -98.8916, 24.905, 0.74 ) }
    dend_34 { pt3dadd( -12.9019, -99.579, 25.0592, 0.81 ) }
    dend_34 { pt3dadd( -13.0256, -100.626, 25.2137, 0.52 ) }
    dend_34 { pt3dadd( -13.217, -101.377, 25.2703, 0.88 ) }
    dend_34 { pt3dadd( -13.4535, -102.012, 25.2447, 0.88 ) }
    dend_34 { pt3dadd( -13.7762, -102.712, 25.1021, 0.88 ) }
    dend_34 { pt3dadd( -14.0733, -103.334, 24.9145, 0.66 ) }
    dend_34 { pt3dadd( -14.3564, -104.003, 24.6322, 0.66 ) }
    dend_34 { pt3dadd( -14.6581, -104.946, 24.0773, 0.88 ) }
    dend_34 { pt3dadd( -14.7974, -105.577, 23.6319, 1.33 ) }
    dend_34 { pt3dadd( -14.8642, -106.061, 23.2711, 1.47 ) }
    dend_34 { pt3dadd( -14.9078, -106.517, 22.9322, 1.62 ) }
    dend_34 { pt3dadd( -14.9961, -107.447, 22.2865, 0.74 ) }
    dend_34 { pt3dadd( -15.1176, -108.502, 21.6874, 0.74 ) }
    dend_34 { pt3dadd( -15.2658, -109.324, 21.356, 0.74 ) }
    dend_34 { pt3dadd( -15.419, -109.977, 21.2117, 0.74 ) }
    dend_34 { pt3dadd( -15.6471, -110.879, 21.1533, 0.66 ) }
    dend_34 { pt3dadd( -15.8607, -111.816, 21.2341, 0.66 ) }
    dend_34 { pt3dadd( -16.1022, -113.169, 21.5444, 0.96 ) }
    dend_34 { pt3dadd( -16.1705, -113.866, 21.7717, 0.88 ) }
    dend_34 { pt3dadd( -16.1672, -114.492, 21.9957, 0.88 ) }
    dend_34 { pt3dadd( -16.0411, -115.659, 22.4067, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_34 { pt3dadd( -15.8267, -116.733, 22.7712, 1.18 ) }
    dend_34 { pt3dadd( -15.7021, -117.259, 22.9138, 1.62 ) }
    dend_34 { pt3dadd( -15.5685, -117.853, 23.0229, 1.62 ) }
    dend_34 { pt3dadd( -15.4111, -118.691, 23.1515, 0.96 ) }
    dend_34 { pt3dadd( -15.3232, -119.341, 23.2385, 0.96 ) }
    dend_34 { pt3dadd( -15.2631, -120.324, 23.3511, 0.66 ) }
    dend_34 { pt3dadd( -15.3204, -121.617, 23.4602, 0.52 ) }
    dend_34 { pt3dadd( -15.4666, -122.778, 23.5759, 0.59 ) }
    dend_34 { pt3dadd( -15.7508, -124.115, 23.7301, 0.74 ) }
    dend_34 { pt3dadd( -15.8561, -124.462, 23.7795, 1.11 ) }
    dend_34 { pt3dadd( -16.1311, -125.126, 23.9192, 1.25 ) }
    dend_34 { pt3dadd( -16.7103, -126.191, 24.2178, 0.88 ) }
    dend_34 { pt3dadd( -17.0896, -126.721, 24.4247, 0.66 ) }
    dend_34 { pt3dadd( -17.4998, -127.189, 24.6448, 0.66 ) }
    dend_34 { pt3dadd( -17.906, -127.603, 24.8454, 0.59 ) }
    dend_34 { pt3dadd( -18.7124, -128.438, 25.2071, 0.59 ) }
    dend_34 { pt3dadd( -19.1639, -128.919, 25.3777, 0.44 ) }
    dend_34 { pt3dadd( -19.7024, -129.543, 25.528, 0.44 ) }
    dend_34 { pt3dadd( -20.1457, -130.124, 25.5928, 0.74 ) }
    dend_34 { pt3dadd( -20.5015, -130.663, 25.6097, 0.74 ) }
    dend_34 { pt3dadd( -20.8061, -131.177, 25.5907, 0.66 ) }
    dend_34 { pt3dadd( -21.1958, -131.929, 25.5053, 1.03 ) }
    dend_34 { pt3dadd( -21.4881, -132.526, 25.4408, 1.4 ) }
    dend_34 { pt3dadd( -21.8015, -133.198, 25.3749, 1.4 ) }
    dend_34 { pt3dadd( -22.0771, -133.78, 25.3234, 1.47 ) }
    dend_34 { pt3dadd( -22.5152, -134.702, 25.2589, 0.74 ) }
    dend_34 { pt3dadd( -22.8546, -135.419, 25.2017, 0.74 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 27/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -12.8779, -80.3913, 21.8279, 0.44 ) }
    dend_33 { pt3dadd( -12.4622, -80.7731, 22.4205, 0.44 ) }
    dend_33 { pt3dadd( -12.2244, -81.1191, 22.8201, 0.44 ) }
    dend_33 { pt3dadd( -12.0699, -81.5876, 23.1905, 0.37 ) }
    dend_33 { pt3dadd( -11.9124, -82.5237, 23.7229, 0.59 ) }
    dend_33 { pt3dadd( -11.8937, -82.8952, 23.8769, 0.52 ) }
    dend_33 { pt3dadd( -11.9116, -83.3782, 24.035, 0.44 ) }
    dend_33 { pt3dadd( -12.0744, -84.1687, 24.2424, 0.44 ) }
    dend_33 { pt3dadd( -12.3117, -84.8419, 24.408, 0.44 ) }
    dend_33 { pt3dadd( -12.5214, -85.2542, 24.5203, 0.59 ) }
    dend_33 { pt3dadd( -12.8598, -85.7306, 24.7053, 0.59 ) }
    dend_33 { pt3dadd( -13.2643, -86.1345, 25.0167, 0.37 ) }
    dend_33 { pt3dadd( -13.8469, -86.5823, 25.5738, 0.59 ) }
    dend_33 { pt3dadd( -14.3827, -86.9288, 26.1626, 0.88 ) }
    dend_33 { pt3dadd( -14.7271, -87.1235, 26.5529, 0.81 ) }
    dend_33 { pt3dadd( -15.4271, -87.4964, 27.3388, 1.03 ) }
    dend_33 { pt3dadd( -16.1306, -87.8704, 28.1115, 0.88 ) }
    dend_33 { pt3dadd( -16.7543, -88.2305, 28.7438, 0.44 ) }
    dend_33 { pt3dadd( -17.2459, -88.5803, 29.1846, 0.44 ) }
    dend_33 { pt3dadd( -17.5529, -88.8546, 29.4245, 0.66 ) }
    dend_33 { pt3dadd( -17.9559, -89.2621, 29.658, 0.66 ) }
    dend_33 { pt3dadd( -18.2991, -89.6289, 29.7553, 0.66 ) }
    dend_33 { pt3dadd( -18.7798, -90.1512, 29.7789, 0.66 ) }
    dend_33 { pt3dadd( -19.191, -90.6008, 29.7658, 1.33 ) }
    dend_33 { pt3dadd( -19.3704, -90.8124, 29.7467, 1.47 ) }
    dend_33 { pt3dadd( -19.7171, -91.2308, 29.7038, 1.03 ) }
    dend_33 { pt3dadd( -20.1514, -91.7678, 29.6546, 0.81 ) }
    dend_33 { pt3dadd( -20.5204, -92.2211, 29.6227, 0.74 ) }
    dend_33 { pt3dadd( -20.9642, -92.764, 29.6023, 0.52 ) }
    dend_33 { pt3dadd( -21.2782, -93.1637, 29.6019, 0.44 ) }
    dend_33 { pt3dadd( -23.9492, -97.7461, 32.7055, 0.44 ) }
    dend_33 { pt3dadd( -25.8274, -102.644, 35.8468, 0.44 ) }
    dend_33 { pt3dadd( -28.1791, -107.56, 38.6247, 0.44 ) }
    dend_33 { pt3dadd( -31.6766, -112.251, 40.51, 0.44 ) }
    dend_33 { pt3dadd( -35.4695, -116.21, 43.3988, 0.44 ) }
    dend_33 { pt3dadd( -38.7781, -120.158, 46.8394, 0.44 ) }
    dend_33 { pt3dadd( -42.1563, -124.267, 49.9935, 0.44 ) }
    dend_33 { pt3dadd( -46.4834, -128.177, 52.1164, 0.44 ) }
    dend_33 { pt3dadd( -51.5689, -131.693, 52.9404, 0.44 ) }
    // Section: dend_17, id: dend_17, parent: dend_0 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 5.84104, -22.4108, -4.08966, 1.47 ) }
    dend_17 { pt3dadd( 5.36324, -23.7324, -4.53125, 1.47 ) }
    dend_17 { pt3dadd( 4.86214, -25.4394, -4.94641, 1.33 ) }
    dend_17 { pt3dadd( 4.52348, -26.8038, -5.16529, 1.55 ) }
    dend_17 { pt3dadd( 4.29035, -27.9141, -5.24292, 1.55 ) }
    dend_17 { pt3dadd( 4.07418, -29.0694, -5.17526, 1.77 ) }
    dend_17 { pt3dadd( 3.8035, -30.5525, -4.92673, 1.77 ) }
    dend_17 { pt3dadd( 3.65747, -31.4705, -4.63943, 2.14 ) }
    dend_17 { pt3dadd( 3.52975, -32.2388, -4.31219, 2.58 ) }
    dend_17 { pt3dadd( 3.35202, -33.2219, -3.86655, 2.36 ) }
    dend_17 { pt3dadd( 2.99644, -35.0242, -3.14256, 1.77 ) }
    dend_17 { pt3dadd( 2.67184, -36.5762, -2.68923, 1.47 ) }
    dend_17 { pt3dadd( 2.41516, -37.8754, -2.48944, 1.18 ) }
    dend_17 { pt3dadd( 2.17985, -39.2539, -2.42633, 1.11 ) }
    dend_17 { pt3dadd( 2.0156, -40.4784, -2.50073, 1.33 ) }
    dend_17 { pt3dadd( 1.87249, -42.1467, -2.78777, 1.25 ) }
    dend_17 { pt3dadd( 1.84622, -43.6056, -3.16953, 1.47 ) }
    dend_17 { pt3dadd( 1.90376, -44.9131, -3.54963, 1.62 ) }
    dend_17 { pt3dadd( 1.9829, -45.8948, -3.83623, 2.14 ) }
    dend_17 { pt3dadd( 2.03248, -46.5725, -4.02064, 2.58 ) }
    dend_17 { pt3dadd( 2.05715, -47.547, -4.24908, 2.43 ) }
    dend_17 { pt3dadd( 1.99351, -49.1155, -4.56149, 2.14 ) }
    dend_17 { pt3dadd( 1.84926, -50.3811, -4.79548, 1.92 ) }
    dend_17 { pt3dadd( 1.60011, -51.6352, -5.01666, 1.47 ) }
    dend_17 { pt3dadd( 1.15461, -53.1824, -5.29451, 1.25 ) }
    dend_17 { pt3dadd( 0.68306, -54.4581, -5.48609, 1.11 ) }
    dend_17 { pt3dadd( 0.251219, -55.4122, -5.58851, 1.4 ) }
    dend_17 { pt3dadd( -0.0640308, -56.0255, -5.63379, 1.55 ) }
    dend_17 { pt3dadd( -0.562282, -56.963, -5.65928, 1.18 ) }
    dend_17 { pt3dadd( -1.03812, -57.9225, -5.61883, 0.88 ) }
    dend_17 { pt3dadd( -1.46433, -58.9332, -5.57002, 1.18 ) }
    dend_17 { pt3dadd( -1.79842, -59.9235, -5.5216, 1.03 ) }
    dend_17 { pt3dadd( -2.07348, -60.8566, -5.46717, 1.03 ) }
    dend_17 { pt3dadd( -2.41132, -62.2411, -5.39798, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_17 { pt3dadd( -2.56338, -63.1212, -5.37037, 1.77 ) }
    dend_17 { pt3dadd( -2.70912, -64.5065, -5.38022, 1.77 ) }
    dend_17 { pt3dadd( -2.77827, -65.5714, -5.4721, 2.06 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 3/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 5.84104, -22.4108, -4.08966, 1.77 ) }
    dend_1 { pt3dadd( 6.41866, -24.6904, -4.64969, 1.77 ) }
    dend_1 { pt3dadd( 6.67587, -25.8312, -4.91667, 1.99 ) }
    dend_1 { pt3dadd( 6.97162, -27.1429, -5.22366, 1.99 ) }
    dend_1 { pt3dadd( 7.37516, -28.9327, -5.64254, 3.17 ) }
    dend_1 { pt3dadd( 7.55694, -29.7389, -5.83122, 3.76 ) }
    dend_1 { pt3dadd( 7.86799, -31.1185, -6.15409, 4.2 ) }
    dend_1 { pt3dadd( 8.03805, -32.3379, -6.4033, 3.9 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 11/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 4.48557, 41.4011, -0.359339, 0.205294 ) }
    axon_1 { pt3dadd( 5.97663, 56.3268, -0.359339, 0.205294 ) }
    axon_1 { pt3dadd( 7.46769, 71.2525, -0.359339, 0.205294 ) }
    // Section: dend_85, id: dend_85, parent: dend_79 (entry count 14/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( -38.7503, 80.4666, -19.8447, 0.29 ) }
    dend_85 { pt3dadd( -38.9957, 81.4817, -20.0314, 0.29 ) }
    dend_85 { pt3dadd( -39.3176, 82.9801, -20.6558, 0.29 ) }
    dend_85 { pt3dadd( -39.532, 84.3152, -21.3084, 0.29 ) }
    dend_85 { pt3dadd( -39.6837, 85.7446, -22.0842, 0.29 ) }
    dend_85 { pt3dadd( -39.7571, 86.7655, -22.6899, 0.29 ) }
    dend_85 { pt3dadd( -39.8506, 88.4429, -23.6926, 0.29 ) }
    dend_85 { pt3dadd( -39.9499, 91.436, -25.6869, 0.29 ) }
    dend_85 { pt3dadd( -39.9727, 92.3541, -26.3407, 0.37 ) }
    dend_85 { pt3dadd( -40.0168, 93.4579, -27.1582, 0.37 ) }
    dend_85 { pt3dadd( -40.1086, 94.8148, -28.2051, 0.37 ) }
    dend_85 { pt3dadd( -40.1801, 95.9306, -29.0754, 0.22 ) }
    dend_85 { pt3dadd( -40.265, 97.0965, -29.9511, 0.22 ) }
    dend_85 { pt3dadd( -40.4476, 98.3795, -30.717, 1.03 ) }
    dend_85 { pt3dadd( -40.5108, 98.61, -30.8533, 1.03 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 29/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -38.7503, 80.4666, -19.8447, 0.52 ) }
    dend_80 { pt3dadd( -40.5194, 81.6111, -19.556, 0.52 ) }
    dend_80 { pt3dadd( -41.3541, 82.2277, -19.3616, 0.52 ) }
    dend_80 { pt3dadd( -42.2008, 82.9598, -19.1328, 0.44 ) }
    dend_80 { pt3dadd( -42.5807, 83.3435, -19.0205, 0.59 ) }
    dend_80 { pt3dadd( -42.9895, 83.8177, -18.887, 0.59 ) }
    dend_80 { pt3dadd( -43.7441, 84.7301, -18.6166, 0.37 ) }
    dend_80 { pt3dadd( -44.6166, 85.9436, -18.3265, 0.37 ) }
    dend_80 { pt3dadd( -45.1509, 86.7293, -18.1152, 0.37 ) }
    dend_80 { pt3dadd( -45.6942, 87.5187, -17.8941, 0.37 ) }
    dend_80 { pt3dadd( -46.3053, 88.3765, -17.6306, 0.29 ) }
    dend_80 { pt3dadd( -46.8779, 89.1399, -17.3858, 0.29 ) }
    dend_80 { pt3dadd( -47.5374, 89.9301, -17.1302, 0.81 ) }
    dend_80 { pt3dadd( -47.8422, 90.2409, -17.0407, 0.81 ) }
    dend_80 { pt3dadd( -48.3611, 90.7011, -16.9157, 0.74 ) }
    dend_80 { pt3dadd( -49.0651, 91.2835, -16.8169, 0.74 ) }
    dend_80 { pt3dadd( -49.6646, 91.7481, -16.8346, 0.96 ) }
    dend_80 { pt3dadd( -50.2534, 92.1944, -16.957, 0.96 ) }
    dend_80 { pt3dadd( -50.6354, 92.503, -17.0982, 0.59 ) }
    dend_80 { pt3dadd( -51.3511, 93.1758, -17.48, 0.29 ) }
    dend_80 { pt3dadd( -51.98, 93.8948, -17.95, 0.29 ) }
    dend_80 { pt3dadd( -52.6323, 94.7623, -18.5488, 0.29 ) }
    dend_80 { pt3dadd( -53.0847, 95.4216, -18.9856, 0.22 ) }
    dend_80 { pt3dadd( -53.7588, 96.4521, -19.6482, 0.22 ) }
    dend_80 { pt3dadd( -54.285, 97.2992, -20.1699, 0.74 ) }
    dend_80 { pt3dadd( -54.8923, 98.3001, -20.7165, 0.37 ) }
    dend_80 { pt3dadd( -55.3963, 99.1682, -21.095, 0.37 ) }
    dend_80 { pt3dadd( -55.8673, 100.021, -21.4069, 0.81 ) }
    dend_80 { pt3dadd( -56.204, 100.596, -21.6258, 1.18 ) }
    dend_80 { pt3dadd( -56.5318, 101.039, -21.8181, 1.18 ) }
    dend_80 { pt3dadd( -57.3719, 101.977, -22.3226, 0.29 ) }
    dend_80 { pt3dadd( -58.2664, 102.904, -22.8509, 0.29 ) }
    dend_80 { pt3dadd( -58.8299, 103.462, -23.2125, 0.29 ) }
    dend_80 { pt3dadd( -59.3985, 103.999, -23.6103, 0.29 ) }
    dend_80 { pt3dadd( -60.2414, 104.731, -24.204, 0.74 ) }
    dend_80 { pt3dadd( -60.8485, 105.159, -24.644, 0.74 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 65/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 127.618, 32.0096, 58.997, 0.29 ) }
    dend_71 { pt3dadd( 137.154, 32.6347, 65.2702, 0.29 ) }
    dend_71 { pt3dadd( 146.425, 33.004, 71.9509, 0.29 ) }
    dend_71 { pt3dadd( 156.056, 34.5628, 77.89, 0.29 ) }
    dend_71 { pt3dadd( 165.007, 37.4441, 84.3212, 0.29 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 70/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 127.618, 32.0096, 58.997, 0.29 ) }
    dend_70 { pt3dadd( 137.624, 32.7592, 65.7762, 0.29 ) }
    dend_70 { pt3dadd( 147.876, 35.3112, 71.6474, 0.29 ) }
    dend_70 { pt3dadd( 159.129, 37.5981, 75.4017, 0.29 ) }
    dend_70 { pt3dadd( 169.404, 41.7841, 80.0599, 0.29 ) }
    // Section: dend_58, id: dend_58, parent: dend_54 (entry count 75/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 76.2279, 34.8322, 3.67012, 0.44 ) }
    dend_58 { pt3dadd( 77.1673, 34.905, 3.29039, 0.44 ) }
    dend_58 { pt3dadd( 77.5158, 34.9946, 3.10739, 0.37 ) }
    dend_58 { pt3dadd( 78.1329, 35.226, 2.76108, 0.59 ) }
    dend_58 { pt3dadd( 78.468, 35.3699, 2.57171, 0.74 ) }
    dend_58 { pt3dadd( 79.3279, 35.763, 2.10618, 0.37 ) }
    dend_58 { pt3dadd( 80.2148, 36.1862, 1.65464, 0.29 ) }
    dend_58 { pt3dadd( 80.7385, 36.5085, 1.37726, 0.29 ) }
    dend_58 { pt3dadd( 81.1133, 36.7654, 1.20496, 0.88 ) }
    dend_58 { pt3dadd( 81.2508, 36.8716, 1.146, 1.11 ) }
    dend_58 { pt3dadd( 81.5918, 37.143, 1.02388, 1.11 ) }
    dend_58 { pt3dadd( 81.9147, 37.3785, 0.97343, 1.18 ) }
    dend_58 { pt3dadd( 82.5169, 37.7031, 0.9721, 0.74 ) }
    dend_58 { pt3dadd( 82.9272, 37.9085, 0.989173, 0.59 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 89/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 76.2279, 34.8322, 3.67012, 0.29 ) }
    dend_55 { pt3dadd( 76.6189, 35.2301, 3.88265, 0.29 ) }
    dend_55 { pt3dadd( 76.8021, 35.4178, 3.99137, 0.29 ) }
    dend_55 { pt3dadd( 77.0368, 35.6583, 4.13064, 0.66 ) }
    dend_55 { pt3dadd( 77.2902, 35.918, 4.28098, 0.29 ) }
    dend_55 { pt3dadd( 77.4799, 36.1124, 4.39355, 0.29 ) }
    dend_55 { pt3dadd( 77.8601, 36.502, 4.61916, 0.29 ) }
    dend_55 { pt3dadd( 78.0763, 36.7064, 4.77313, 0.29 ) }
    dend_55 { pt3dadd( 81.3718, 39.8561, 6.19769, 0.29 ) }
    dend_55 { pt3dadd( 84.1415, 43.2537, 8.04918, 0.29 ) }
    dend_55 { pt3dadd( 86.3079, 47.1801, 9.5018, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_55 { pt3dadd( 88.9599, 50.7749, 11.0941, 0.29 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 1/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -73.9441, -60.627, -59.0825, 0.81 ) }
    dend_48 { pt3dadd( -74.3191, -61.5781, -60.3067, 0.81 ) }
    dend_48 { pt3dadd( -74.3903, -61.6989, -60.465, 0.81 ) }
    dend_48 { pt3dadd( -75.3346, -62.9364, -62.0191, 0.37 ) }
    dend_48 { pt3dadd( -75.6185, -63.2647, -62.3922, 0.52 ) }
    dend_48 { pt3dadd( -75.8925, -63.5781, -62.7341, 0.66 ) }
    dend_48 { pt3dadd( -76.2067, -63.9517, -63.1252, 0.66 ) }
    dend_48 { pt3dadd( -76.91, -64.6972, -63.8542, 0.37 ) }
    dend_48 { pt3dadd( -77.356, -65.159, -64.3247, 0.37 ) }
    dend_48 { pt3dadd( -78.0474, -65.846, -65.0273, 0.37 ) }
    dend_48 { pt3dadd( -78.4718, -66.2663, -65.478, 0.66 ) }
    dend_48 { pt3dadd( -79.1523, -66.9296, -66.1882, 1.11 ) }
    dend_48 { pt3dadd( -79.4741, -67.2312, -66.4985, 1.25 ) }
    dend_48 { pt3dadd( -80.5591, -68.1636, -67.5756, 0.22 ) }
    dend_48 { pt3dadd( -81.0097, -68.4927, -68.0171, 0.29 ) }
    dend_48 { pt3dadd( -81.4027, -68.731, -68.3876, 0.59 ) }
    dend_48 { pt3dadd( -81.8494, -68.9729, -68.7765, 0.81 ) }
    dend_48 { pt3dadd( -82.3227, -69.2342, -69.1968, 0.81 ) }
    dend_48 { pt3dadd( -83.544, -70.0333, -70.2784, 0.37 ) }
    dend_48 { pt3dadd( -83.902, -70.3136, -70.5839, 0.37 ) }
    dend_48 { pt3dadd( -84.4832, -70.9027, -71.1317, 0.59 ) }
    dend_48 { pt3dadd( -84.6958, -71.1671, -71.3404, 0.81 ) }
    dend_48 { pt3dadd( -85.4487, -72.2732, -72.0632, 0.44 ) }
    dend_48 { pt3dadd( -85.956, -73.1269, -72.4986, 0.44 ) }
    dend_48 { pt3dadd( -86.3572, -73.8624, -72.7836, 0.37 ) }
    dend_48 { pt3dadd( -86.8391, -74.7834, -73.1089, 0.37 ) }
    dend_48 { pt3dadd( -87.1985, -75.4603, -73.3463, 0.66 ) }
    dend_48 { pt3dadd( -87.4921, -75.9592, -73.5407, 0.81 ) }
    dend_48 { pt3dadd( -87.7841, -76.4187, -73.7075, 0.81 ) }
    dend_48 { pt3dadd( -88.3337, -77.2265, -74.0193, 0.29 ) }
    dend_48 { pt3dadd( -88.6557, -77.669, -74.1811, 0.96 ) }
    dend_48 { pt3dadd( -89.4438, -78.7044, -74.4941, 0.29 ) }
    dend_48 { pt3dadd( -89.9461, -79.3801, -74.6684, 0.29 ) }
    dend_48 { pt3dadd( -90.4446, -80.0553, -74.7962, 0.44 ) }
    dend_48 { pt3dadd( -90.7286, -80.4283, -74.8568, 0.44 ) }
    dend_48 { pt3dadd( -91.1905, -81.0247, -74.916, 0.29 ) }
    dend_48 { pt3dadd( -91.4443, -81.3583, -74.9679, 0.59 ) }
    dend_48 { pt3dadd( -91.8311, -81.9102, -75.0603, 0.59 ) }
    dend_48 { pt3dadd( -92.1897, -82.4669, -75.1862, 0.52 ) }
    dend_48 { pt3dadd( -92.7632, -83.303, -75.4342, 0.37 ) }
    dend_48 { pt3dadd( -93.132, -83.8246, -75.6152, 0.88 ) }
    dend_48 { pt3dadd( -93.8236, -84.7965, -75.9829, 0.44 ) }
    dend_48 { pt3dadd( -94.209, -85.3563, -76.1913, 0.59 ) }
    dend_48 { pt3dadd( -94.5235, -85.8174, -76.3566, 0.59 ) }
    dend_48 { pt3dadd( -94.8996, -86.3766, -76.5262, 0.59 ) }
    dend_48 { pt3dadd( -95.2887, -86.9453, -76.6458, 0.37 ) }
    dend_48 { pt3dadd( -95.6019, -87.3473, -76.6938, 0.37 ) }
    dend_48 { pt3dadd( -96.1225, -87.9226, -76.6837, 0.29 ) }
    dend_48 { pt3dadd( -96.3204, -88.1183, -76.656, 0.29 ) }
    dend_48 { pt3dadd( -96.8263, -88.6062, -76.53, 0.88 ) }
    dend_48 { pt3dadd( -97.1665, -88.9402, -76.409, 1.18 ) }
    dend_48 { pt3dadd( -97.7411, -89.4526, -76.1795, 0.29 ) }
    dend_48 { pt3dadd( -98.1662, -89.8007, -76.0132, 0.29 ) }
    dend_48 { pt3dadd( -98.8046, -90.32, -75.8125, 0.29 ) }
    dend_48 { pt3dadd( -99.0956, -90.5718, -75.7375, 0.88 ) }
    dend_48 { pt3dadd( -99.3787, -90.8325, -75.6866, 0.88 ) }
    dend_48 { pt3dadd( -100.308, -91.7138, -75.623, 0.22 ) }
    dend_48 { pt3dadd( -100.624, -92.0194, -75.6442, 0.22 ) }
    dend_48 { pt3dadd( -101.323, -92.6721, -75.7433, 0.59 ) }
    dend_48 { pt3dadd( -101.479, -92.8148, -75.7769, 0.59 ) }
    dend_48 { pt3dadd( -102.11, -93.3842, -75.9268, 0.22 ) }
    dend_48 { pt3dadd( -102.472, -93.7163, -76.0247, 0.44 ) }
    dend_48 { pt3dadd( -102.977, -94.2302, -76.1938, 0.22 ) }
    dend_48 { pt3dadd( -103.672, -94.9315, -76.4163, 0.22 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 65/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -73.9441, -60.627, -59.0825, 0.29 ) }
    dend_47 { pt3dadd( -74.971, -60.7401, -58.9778, 0.29 ) }
    dend_47 { pt3dadd( -75.6026, -60.8456, -58.887, 0.29 ) }
    dend_47 { pt3dadd( -76.2219, -60.9746, -58.8052, 0.66 ) }
    dend_47 { pt3dadd( -76.5172, -61.0522, -58.7701, 0.66 ) }
    dend_47 { pt3dadd( -77.5554, -61.3594, -58.6414, 0.29 ) }
    dend_47 { pt3dadd( -78.0032, -61.5001, -58.5906, 0.29 ) }
    dend_47 { pt3dadd( -78.3322, -61.6258, -58.5228, 0.66 ) }
    dend_47 { pt3dadd( -78.6439, -61.7601, -58.4534, 0.66 ) }
    dend_47 { pt3dadd( -79.7097, -62.2441, -58.2152, 0.29 ) }
    dend_47 { pt3dadd( -80.0888, -62.4012, -58.1377, 0.52 ) }
    dend_47 { pt3dadd( -80.454, -62.5305, -58.0751, 0.52 ) }
    dend_47 { pt3dadd( -81.4669, -62.8113, -57.8927, 0.22 ) }
    dend_47 { pt3dadd( -81.939, -62.9115, -57.8028, 0.59 ) }
    dend_47 { pt3dadd( -82.242, -62.9611, -57.7325, 0.74 ) }
    dend_47 { pt3dadd( -82.8319, -63.0245, -57.5913, 0.29 ) }
    dend_47 { pt3dadd( -83.1305, -63.045, -57.5234, 0.29 ) }
    dend_47 { pt3dadd( -83.5218, -63.0537, -57.4367, 0.96 ) }
    dend_47 { pt3dadd( -83.908, -63.0297, -57.3828, 0.96 ) }
    dend_47 { pt3dadd( -84.9606, -62.951, -57.2018, 0.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 85/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -22.8546, -135.419, 25.2017, 0.29 ) }
    dend_40 { pt3dadd( -22.574, -135.444, 25.9519, 0.29 ) }
    dend_40 { pt3dadd( -21.9122, -135.547, 27.57, 0.29 ) }
    dend_40 { pt3dadd( -21.4429, -135.666, 28.7225, 0.59 ) }
    dend_40 { pt3dadd( -20.8251, -135.938, 30.3282, 0.66 ) }
    dend_40 { pt3dadd( -19.9558, -136.494, 32.5639, 0.59 ) }
    dend_40 { pt3dadd( -19.365, -137.032, 34.0122, 0.29 ) }
    dend_40 { pt3dadd( -18.9554, -137.547, 34.8415, 0.52 ) }
    dend_40 { pt3dadd( -18.7403, -138.146, 35.1144, 0.66 ) }
    dend_40 { pt3dadd( -18.4732, -139.465, 35.1358, 0.37 ) }
    dend_40 { pt3dadd( -18.1805, -141.158, 34.9321, 0.29 ) }
    dend_40 { pt3dadd( -17.9757, -142.499, 34.6728, 0.29 ) }
    dend_40 { pt3dadd( -17.8006, -143.829, 34.3476, 0.29 ) }
    dend_40 { pt3dadd( -17.6268, -145.037, 34.0311, 0.29 ) }
    dend_40 { pt3dadd( -17.3525, -146.464, 33.6406, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_40 { pt3dadd( -17.053, -147.685, 33.3016, 0.29 ) }
    dend_40 { pt3dadd( -12.2144, -155.627, 39.7016, 0.29 ) }
    dend_40 { pt3dadd( -7.7916, -162.202, 47.8708, 0.29 ) }
    dend_40 { pt3dadd( -1.22205, -169.07, 54.1008, 0.29 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 4/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -22.8546, -135.419, 25.2017, 0.74 ) }
    dend_35 { pt3dadd( -23.4925, -136.143, 24.9136, 0.74 ) }
    dend_35 { pt3dadd( -24.0493, -136.89, 24.663, 0.52 ) }
    dend_35 { pt3dadd( -24.4724, -137.526, 24.4812, 0.52 ) }
    dend_35 { pt3dadd( -25.1339, -138.69, 24.2109, 0.59 ) }
    dend_35 { pt3dadd( -25.3994, -139.284, 24.1323, 0.96 ) }
    dend_35 { pt3dadd( -25.6015, -139.929, 24.074, 1.18 ) }
    dend_35 { pt3dadd( -25.669, -140.479, 23.9931, 1.18 ) }
    dend_35 { pt3dadd( -25.6447, -141.0, 23.9153, 0.96 ) }
    dend_35 { pt3dadd( -25.5007, -141.763, 23.749, 0.66 ) }
    dend_35 { pt3dadd( -25.1571, -142.845, 23.3212, 0.52 ) }
    dend_35 { pt3dadd( -24.7697, -143.812, 22.8616, 0.52 ) }
    dend_35 { pt3dadd( -24.2713, -144.835, 22.2679, 0.29 ) }
    dend_35 { pt3dadd( -24.0465, -145.218, 21.9947, 0.37 ) }
    dend_35 { pt3dadd( -23.4271, -146.103, 21.1799, 0.29 ) }
    dend_35 { pt3dadd( -22.7576, -146.898, 20.1425, 0.29 ) }
    dend_35 { pt3dadd( -23.1091, -155.539, 18.1298, 0.29 ) }
    // Section: dend_31, id: dend_31, parent: dend_17 (entry count 21/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -2.77827, -65.5714, -5.4721, 0.37 ) }
    dend_31 { pt3dadd( -6.42338, -67.0358, -4.78393, 0.37 ) }
    dend_31 { pt3dadd( -8.08181, -67.8011, -3.90302, 0.37 ) }
    dend_31 { pt3dadd( -9.28629, -68.3984, -3.08625, 0.37 ) }
    dend_31 { pt3dadd( -10.102, -68.8152, -2.51562, 0.37 ) }
    dend_31 { pt3dadd( -11.125, -69.3551, -1.75303, 0.59 ) }
    dend_31 { pt3dadd( -12.1152, -69.8934, -1.00325, 0.74 ) }
    dend_31 { pt3dadd( -12.8576, -70.3085, -0.269193, 0.52 ) }
    dend_31 { pt3dadd( -13.4177, -70.6284, 0.291933, 0.59 ) }
    dend_31 { pt3dadd( -13.9217, -70.9683, 0.75275, 0.74 ) }
    dend_31 { pt3dadd( -14.8041, -71.5551, 1.42714, 0.52 ) }
    dend_31 { pt3dadd( -15.3689, -71.9091, 1.77684, 0.52 ) }
    dend_31 { pt3dadd( -15.9068, -72.2127, 2.04722, 0.74 ) }
    dend_31 { pt3dadd( -16.5144, -72.5334, 2.32209, 0.74 ) }
    dend_31 { pt3dadd( -17.0961, -72.8485, 2.57236, 0.52 ) }
    dend_31 { pt3dadd( -17.9409, -73.3004, 2.9228, 0.52 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 37/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -2.77827, -65.5714, -5.4721, 0.88 ) }
    dend_18 { pt3dadd( -2.96668, -66.4137, -5.53441, 0.88 ) }
    dend_18 { pt3dadd( -3.32136, -67.475, -5.50721, 0.66 ) }
    dend_18 { pt3dadd( -3.67354, -68.225, -5.29237, 0.74 ) }
    dend_18 { pt3dadd( -3.97518, -68.7248, -5.08003, 0.88 ) }
    dend_18 { pt3dadd( -4.5041, -69.4817, -4.72634, 0.88 ) }
    dend_18 { pt3dadd( -4.84219, -69.9392, -4.51411, 1.03 ) }
    dend_18 { pt3dadd( -5.25535, -70.4398, -4.23702, 1.03 ) }
    dend_18 { pt3dadd( -6.19342, -71.6064, -3.57468, 1.03 ) }
    dend_18 { pt3dadd( -6.72564, -72.3395, -3.19518, 1.03 ) }
    dend_18 { pt3dadd( -7.16054, -73.0788, -2.87971, 0.88 ) }
    dend_18 { pt3dadd( -7.39996, -73.712, -2.69435, 0.88 ) }
    dend_18 { pt3dadd( -7.47344, -74.3024, -2.57954, 0.88 ) }
    dend_18 { pt3dadd( -7.3211, -75.4472, -2.50596, 1.25 ) }
    dend_18 { pt3dadd( -7.19315, -75.8636, -2.50424, 1.55 ) }
    dend_18 { pt3dadd( -6.93841, -76.4503, -2.47528, 1.55 ) }
    dend_18 { pt3dadd( -6.51114, -77.2664, -2.34914, 1.55 ) }
    dend_18 { pt3dadd( -6.20475, -77.7767, -2.20167, 1.55 ) }
    dend_18 { pt3dadd( -5.60733, -78.6636, -1.80949, 1.03 ) }
    dend_18 { pt3dadd( -5.11611, -79.301, -1.4022, 1.03 ) }
    dend_18 { pt3dadd( -4.69342, -79.8049, -1.01221, 0.81 ) }
    dend_18 { pt3dadd( -4.00124, -80.5558, -0.318516, 0.81 ) }
    dend_18 { pt3dadd( -3.50523, -81.0499, 0.193073, 1.03 ) }
    dend_18 { pt3dadd( -3.01698, -81.4816, 0.663739, 1.03 ) }
    dend_18 { pt3dadd( -2.45369, -81.9298, 1.14952, 1.03 ) }
    dend_18 { pt3dadd( -1.98553, -82.2953, 1.48338, 0.88 ) }
    dend_18 { pt3dadd( -1.2641, -82.8949, 1.92028, 0.88 ) }
    dend_18 { pt3dadd( -0.901583, -83.2157, 2.09792, 0.96 ) }
    dend_18 { pt3dadd( -0.484135, -83.6288, 2.27692, 0.96 ) }
    dend_18 { pt3dadd( 0.0823661, -84.2567, 2.49632, 1.33 ) }
    dend_18 { pt3dadd( 0.381918, -84.6331, 2.59386, 1.62 ) }
    dend_18 { pt3dadd( 0.630245, -84.9741, 2.67342, 1.62 ) }
    // Section: dend_16, id: dend_16, parent: dend_1 (entry count 69/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 8.03805, -32.3379, -6.4033, 0.66 ) }
    dend_16 { pt3dadd( 7.52989, -35.4832, -4.09626, 0.66 ) }
    dend_16 { pt3dadd( 7.31379, -36.5057, -3.46393, 0.88 ) }
    dend_16 { pt3dadd( 6.92122, -38.5254, -2.39158, 1.03 ) }
    dend_16 { pt3dadd( 6.77513, -39.4866, -1.92455, 1.03 ) }
    dend_16 { pt3dadd( 6.68566, -40.3338, -1.52356, 1.03 ) }
    dend_16 { pt3dadd( 6.62703, -41.3809, -1.02286, 0.37 ) }
    dend_16 { pt3dadd( 6.59656, -42.5012, -0.611534, 0.37 ) }
    dend_16 { pt3dadd( 6.73516, -43.6239, -0.182449, 0.59 ) }
    dend_16 { pt3dadd( 7.16188, -44.5974, 0.244455, 0.81 ) }
    dend_16 { pt3dadd( 7.55669, -45.1558, 0.58379, 0.81 ) }
    dend_16 { pt3dadd( 8.01771, -45.6565, 1.00363, 0.52 ) }
    dend_16 { pt3dadd( 8.44622, -46.0673, 1.42854, 0.81 ) }
    dend_16 { pt3dadd( 9.06492, -46.6623, 2.09875, 1.25 ) }
    dend_16 { pt3dadd( 9.29458, -46.9566, 2.40114, 1.69 ) }
    dend_16 { pt3dadd( 9.52559, -47.4701, 2.82249, 1.69 ) }
    dend_16 { pt3dadd( 9.67166, -48.6845, 3.49698, 0.96 ) }
    dend_16 { pt3dadd( 9.61967, -49.4636, 3.77822, 0.66 ) }
    dend_16 { pt3dadd( 9.53298, -50.0682, 3.94525, 0.81 ) }
    dend_16 { pt3dadd( 9.32481, -51.3333, 4.26882, 0.44 ) }
    dend_16 { pt3dadd( 9.20603, -52.3412, 4.55751, 0.44 ) }
    dend_16 { pt3dadd( 9.17272, -53.1391, 4.81842, 0.44 ) }
    dend_16 { pt3dadd( 9.23275, -53.8652, 5.16961, 0.88 ) }
    dend_16 { pt3dadd( 9.45476, -54.8291, 5.90832, 1.25 ) }
    dend_16 { pt3dadd( 9.78615, -55.7426, 6.82127, 0.66 ) }
    dend_16 { pt3dadd( 10.1221, -56.4434, 7.62286, 0.52 ) }
    dend_16 { pt3dadd( 10.3353, -56.8539, 8.10029, 0.52 ) }
    dend_16 { pt3dadd( 10.8443, -57.9108, 9.27555, 0.74 ) }
    dend_16 { pt3dadd( 11.2543, -58.8476, 10.2097, 1.25 ) }
    dend_16 { pt3dadd( 11.4206, -59.2462, 10.5398, 1.25 ) }
    dend_16 { pt3dadd( 11.7034, -59.9273, 10.9938, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_16 { pt3dadd( 12.0815, -60.8026, 11.4315, 0.44 ) }
    dend_16 { pt3dadd( 12.6161, -61.9557, 11.8552, 0.37 ) }
    dend_16 { pt3dadd( 12.974, -62.6325, 12.016, 0.37 ) }
    dend_16 { pt3dadd( 13.3752, -63.3105, 12.1332, 0.96 ) }
    dend_16 { pt3dadd( 13.6944, -63.8148, 12.2137, 1.33 ) }
    dend_16 { pt3dadd( 14.6697, -65.189, 12.4476, 0.29 ) }
    dend_16 { pt3dadd( 15.0369, -65.6342, 12.5337, 0.29 ) }
    dend_16 { pt3dadd( 15.4177, -66.0362, 12.615, 0.29 ) }
    dend_16 { pt3dadd( 15.5594, -66.1854, 12.6466, 0.44 ) }
    dend_16 { pt3dadd( 18.3057, -74.4693, 16.4388, 0.44 ) }
    dend_16 { pt3dadd( 22.5707, -82.3557, 19.7333, 0.44 ) }
    dend_16 { pt3dadd( 26.2116, -90.8546, 21.8653, 0.44 ) }
    dend_16 { pt3dadd( 30.1605, -99.0803, 24.5744, 0.44 ) }
    dend_16 { pt3dadd( 33.4934, -107.385, 27.8, 0.44 ) }
    dend_16 { pt3dadd( 36.7603, -115.95, 30.2252, 0.44 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 15/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 8.03805, -32.3379, -6.4033, 1.03 ) }
    dend_11 { pt3dadd( 8.00848, -34.485, -6.89038, 1.03 ) }
    dend_11 { pt3dadd( 8.19951, -36.6353, -7.28317, 1.03 ) }
    dend_11 { pt3dadd( 8.50697, -38.2022, -7.50245, 0.96 ) }
    dend_11 { pt3dadd( 8.91639, -39.6901, -7.66434, 0.96 ) }
    dend_11 { pt3dadd( 9.42437, -41.1358, -7.7782, 0.96 ) }
    dend_11 { pt3dadd( 9.82962, -42.1164, -7.78899, 1.18 ) }
    dend_11 { pt3dadd( 10.6634, -43.4665, -7.5558, 1.47 ) }
    dend_11 { pt3dadd( 11.5126, -44.5576, -7.17685, 2.21 ) }
    dend_11 { pt3dadd( 11.867, -44.9898, -6.97087, 2.21 ) }
    dend_11 { pt3dadd( 12.3893, -45.6984, -6.56803, 1.99 ) }
    dend_11 { pt3dadd( 13.2344, -47.102, -5.72144, 1.33 ) }
    dend_11 { pt3dadd( 13.9184, -48.6613, -4.83025, 0.88 ) }
    dend_11 { pt3dadd( 14.2676, -49.9159, -4.17434, 0.74 ) }
    dend_11 { pt3dadd( 14.4025, -51.0951, -3.67065, 0.74 ) }
    dend_11 { pt3dadd( 14.3941, -52.5014, -3.20713, 1.33 ) }
    dend_11 { pt3dadd( 14.321, -53.3513, -3.00749, 1.62 ) }
    dend_11 { pt3dadd( 14.2021, -54.2751, -2.87481, 1.92 ) }
    dend_11 { pt3dadd( 14.0808, -55.2595, -2.8181, 1.69 ) }
    dend_11 { pt3dadd( 13.9757, -57.1294, -2.8017, 1.33 ) }
    dend_11 { pt3dadd( 14.0445, -59.0204, -2.84683, 1.03 ) }
    dend_11 { pt3dadd( 14.2236, -60.3197, -2.9076, 0.88 ) }
    dend_11 { pt3dadd( 14.5197, -61.5204, -2.96617, 1.03 ) }
    dend_11 { pt3dadd( 15.0516, -63.0892, -3.04591, 1.03 ) }
    dend_11 { pt3dadd( 15.7227, -64.66, -3.14356, 1.03 ) }
    dend_11 { pt3dadd( 16.3804, -65.991, -3.27516, 1.33 ) }
    dend_11 { pt3dadd( 16.8833, -66.9866, -3.44192, 1.69 ) }
    dend_11 { pt3dadd( 17.4415, -68.1889, -3.73165, 1.47 ) }
    dend_11 { pt3dadd( 17.7692, -69.0254, -4.0032, 1.03 ) }
    dend_11 { pt3dadd( 18.151, -70.2919, -4.50564, 0.96 ) }
    dend_11 { pt3dadd( 18.4099, -71.4392, -5.04835, 0.96 ) }
    dend_11 { pt3dadd( 18.6314, -72.8384, -5.77188, 1.4 ) }
    dend_11 { pt3dadd( 18.795, -74.3213, -6.55097, 1.4 ) }
    dend_11 { pt3dadd( 18.9253, -75.6166, -7.22328, 1.55 ) }
    dend_11 { pt3dadd( 19.0211, -76.3246, -7.55218, 1.77 ) }
    dend_11 { pt3dadd( 19.2693, -77.6939, -8.08558, 0.96 ) }
    dend_11 { pt3dadd( 19.5765, -78.9349, -8.4347, 0.66 ) }
    dend_11 { pt3dadd( 19.9645, -80.1177, -8.57165, 0.66 ) }
    dend_11 { pt3dadd( 20.4811, -81.2728, -8.50961, 0.96 ) }
    dend_11 { pt3dadd( 21.1501, -82.4282, -8.28681, 1.11 ) }
    dend_11 { pt3dadd( 21.5133, -82.9366, -8.14244, 1.4 ) }
    dend_11 { pt3dadd( 21.8512, -83.3415, -8.00579, 1.4 ) }
    dend_11 { pt3dadd( 22.5628, -84.1832, -7.72183, 1.4 ) }
    dend_11 { pt3dadd( 23.4074, -85.2743, -7.42436, 0.66 ) }
    dend_11 { pt3dadd( 23.7858, -85.8522, -7.34172, 0.52 ) }
    dend_11 { pt3dadd( 24.218, -86.6671, -7.31686, 0.52 ) }
    dend_11 { pt3dadd( 24.769, -87.994, -7.32567, 0.81 ) }
    dend_11 { pt3dadd( 25.2303, -89.4761, -7.31662, 1.03 ) }
    dend_11 { pt3dadd( 25.4426, -90.4509, -7.32716, 1.03 ) }
    dend_11 { pt3dadd( 25.6082, -91.7631, -7.33527, 1.03 ) }
    dend_11 { pt3dadd( 25.715, -93.0616, -7.42359, 1.03 ) }
    dend_11 { pt3dadd( 25.7897, -94.4054, -7.57821, 0.88 ) }
    dend_11 { pt3dadd( 25.9048, -96.0376, -7.8866, 1.03 ) }
    dend_11 { pt3dadd( 26.064, -97.487, -8.24759, 0.52 ) }
    dend_11 { pt3dadd( 26.2951, -98.8526, -8.6817, 0.52 ) }
    dend_11 { pt3dadd( 26.7398, -100.829, -9.50481, 0.88 ) }
    dend_11 { pt3dadd( 26.9616, -101.63, -9.9178, 1.11 ) }
    dend_11 { pt3dadd( 27.3456, -102.891, -10.6686, 0.59 ) }
    dend_11 { pt3dadd( 27.5044, -103.425, -10.9866, 0.59 ) }
    dend_11 { pt3dadd( 27.7843, -104.637, -11.5402, 0.52 ) }
    dend_11 { pt3dadd( 27.9212, -105.944, -11.886, 0.52 ) }
    dend_11 { pt3dadd( 27.8105, -107.021, -11.8895, 1.11 ) }
    dend_11 { pt3dadd( 27.5589, -107.935, -11.7656, 1.25 ) }
    dend_11 { pt3dadd( 27.0009, -109.322, -11.4315, 1.18 ) }
    dend_11 { pt3dadd( 26.379, -110.679, -11.0312, 0.52 ) }
    dend_11 { pt3dadd( 25.9217, -111.628, -10.6801, 0.52 ) }
    dend_11 { pt3dadd( 25.3621, -112.93, -10.1985, 0.52 ) }
    dend_11 { pt3dadd( 25.1926, -113.42, -10.0557, 0.81 ) }
    dend_11 { pt3dadd( 24.9782, -114.313, -9.90102, 0.74 ) }
    dend_11 { pt3dadd( 24.7896, -115.454, -9.87104, 0.74 ) }
    dend_11 { pt3dadd( 24.626, -116.576, -9.96339, 1.03 ) }
    dend_11 { pt3dadd( 24.3812, -118.048, -10.23, 0.66 ) }
    dend_11 { pt3dadd( 24.1686, -119.009, -10.479, 0.52 ) }
    dend_11 { pt3dadd( 23.8164, -120.107, -10.8555, 1.11 ) }
    dend_11 { pt3dadd( 23.4532, -121.01, -11.2987, 1.11 ) }
    dend_11 { pt3dadd( 22.8891, -122.275, -12.0678, 0.81 ) }
    dend_11 { pt3dadd( 22.3049, -123.584, -12.9909, 0.66 ) }
    dend_11 { pt3dadd( 21.9182, -124.499, -13.6668, 0.88 ) }
    dend_11 { pt3dadd( 21.4957, -125.749, -14.6292, 0.66 ) }
    dend_11 { pt3dadd( 21.0947, -127.391, -16.0395, 0.59 ) }
    dend_11 { pt3dadd( 20.9381, -128.463, -17.0395, 0.88 ) }
    dend_11 { pt3dadd( 20.8739, -129.401, -17.9558, 1.18 ) }
    dend_11 { pt3dadd( 20.8462, -130.079, -18.6218, 0.96 ) }
    dend_11 { pt3dadd( 20.8233, -130.978, -19.5016, 0.96 ) }
    dend_11 { pt3dadd( 20.7599, -132.626, -21.0011, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_11 { pt3dadd( 20.7123, -133.173, -21.4487, 0.81 ) }
    dend_11 { pt3dadd( 20.5967, -134.247, -22.2521, 0.66 ) }
    dend_11 { pt3dadd( 20.4803, -135.079, -22.7257, 0.66 ) }
    dend_11 { pt3dadd( 20.3095, -136.123, -23.1081, 0.96 ) }
    dend_11 { pt3dadd( 20.0411, -137.445, -23.1217, 0.88 ) }
    dend_11 { pt3dadd( 19.7986, -138.626, -22.8577, 0.88 ) }
    dend_11 { pt3dadd( 19.5824, -139.662, -22.5555, 0.37 ) }
    dend_11 { pt3dadd( 19.2193, -141.563, -21.9277, 1.03 ) }
    dend_11 { pt3dadd( 19.0312, -142.561, -21.6219, 1.03 ) }
    dend_11 { pt3dadd( 18.5464, -144.761, -21.0332, 0.44 ) }
    dend_11 { pt3dadd( 18.2139, -146.344, -20.789, 0.44 ) }
    dend_11 { pt3dadd( 18.0983, -147.251, -20.8497, 0.74 ) }
    dend_11 { pt3dadd( 18.1332, -148.17, -21.2008, 0.74 ) }
    dend_11 { pt3dadd( 18.3697, -149.424, -21.9909, 0.44 ) }
    dend_11 { pt3dadd( 18.6561, -150.425, -22.7232, 0.66 ) }
    dend_11 { pt3dadd( 19.18, -151.863, -23.8685, 0.44 ) }
    dend_11 { pt3dadd( 19.9941, -153.923, -25.5021, 0.88 ) }
    dend_11 { pt3dadd( 20.9, -156.193, -27.1916, 0.52 ) }
    dend_11 { pt3dadd( 21.3748, -157.353, -28.0215, 0.74 ) }
    dend_11 { pt3dadd( 22.0312, -158.916, -29.0816, 1.33 ) }
    dend_11 { pt3dadd( 22.3821, -159.807, -29.6413, 1.33 ) }
    dend_11 { pt3dadd( 22.9604, -161.65, -30.6542, 0.74 ) }
    dend_11 { pt3dadd( 23.2166, -162.829, -31.179, 0.66 ) }
    dend_11 { pt3dadd( 23.4071, -164.505, -31.8188, 0.66 ) }
    dend_11 { pt3dadd( 23.4279, -165.664, -32.2732, 0.81 ) }
    dend_11 { pt3dadd( 23.3216, -166.836, -32.7844, 0.59 ) }
    dend_11 { pt3dadd( 23.1571, -167.618, -33.1307, 1.18 ) }
    dend_11 { pt3dadd( 23.0404, -167.978, -33.2995, 1.18 ) }
    dend_11 { pt3dadd( 22.552, -169.248, -33.895, 0.44 ) }
    dend_11 { pt3dadd( 22.0888, -170.362, -34.3078, 0.44 ) }
    dend_11 { pt3dadd( 21.7283, -171.308, -34.5777, 1.03 ) }
    dend_11 { pt3dadd( 21.5353, -171.995, -34.6867, 1.4 ) }
    dend_11 { pt3dadd( 21.2867, -173.485, -34.611, 0.52 ) }
    dend_11 { pt3dadd( 21.1951, -174.505, -34.4722, 0.52 ) }
    dend_11 { pt3dadd( 21.2231, -175.873, -34.0934, 0.74 ) }
    dend_11 { pt3dadd( 21.2654, -176.377, -33.8702, 0.74 ) }
    dend_11 { pt3dadd( 21.3577, -177.404, -33.2149, 0.59 ) }
    dend_11 { pt3dadd( 21.4831, -178.589, -32.2139, 0.96 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 38/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 8.03805, -32.3379, -6.4033, 0.88 ) }
    dend_2 { pt3dadd( 12.6483, -32.2572, -10.5247, 0.88 ) }
    dend_2 { pt3dadd( 13.9811, -32.1832, -11.5511, 0.88 ) }
    dend_2 { pt3dadd( 15.3276, -32.0973, -12.4311, 1.03 ) }
    dend_2 { pt3dadd( 16.2466, -32.0351, -12.9435, 1.33 ) }
    dend_2 { pt3dadd( 17.0963, -31.9835, -13.3743, 1.62 ) }
    dend_2 { pt3dadd( 18.3271, -31.9278, -13.9581, 1.84 ) }
    dend_2 { pt3dadd( 19.3926, -31.8184, -14.3118, 1.47 ) }
    dend_2 { pt3dadd( 20.6438, -31.7038, -14.9103, 1.18 ) }
    dend_2 { pt3dadd( 21.5121, -31.6024, -15.7708, 0.81 ) }
    dend_2 { pt3dadd( 22.3802, -31.4683, -17.0243, 0.81 ) }
    dend_2 { pt3dadd( 22.9123, -31.4009, -17.9218, 1.11 ) }
    dend_2 { pt3dadd( 24.0118, -31.3478, -19.9985, 1.33 ) }
    dend_2 { pt3dadd( 25.1511, -31.3562, -22.2798, 1.77 ) }
    dend_2 { pt3dadd( 27.733, -31.5196, -27.55, 1.47 ) }
    dend_2 { pt3dadd( 28.5725, -31.606, -29.2002, 1.11 ) }
    dend_2 { pt3dadd( 29.4472, -31.707, -30.7823, 1.11 ) }
    dend_2 { pt3dadd( 30.6617, -31.8391, -32.6666, 0.81 ) }
    dend_2 { pt3dadd( 31.4321, -31.9234, -33.605, 0.96 ) }
    dend_2 { pt3dadd( 32.7098, -32.0045, -34.7171, 0.88 ) }
    dend_2 { pt3dadd( 33.7838, -31.9088, -35.4411, 0.74 ) }
    dend_2 { pt3dadd( 34.6003, -31.6614, -36.0479, 0.59 ) }
    dend_2 { pt3dadd( 35.6327, -31.1123, -36.9878, 1.03 ) }
    dend_2 { pt3dadd( 36.3948, -30.5953, -37.7294, 1.55 ) }
    dend_2 { pt3dadd( 37.0939, -30.0875, -38.4258, 1.69 ) }
    dend_2 { pt3dadd( 39.1737, -28.5537, -40.5872, 1.69 ) }
    dend_2 { pt3dadd( 39.8131, -28.1012, -41.2808, 1.69 ) }
    dend_2 { pt3dadd( 41.4196, -27.0589, -43.0021, 0.88 ) }
    dend_2 { pt3dadd( 42.34, -26.5579, -43.9189, 0.81 ) }
    dend_2 { pt3dadd( 43.4612, -26.0921, -44.8796, 1.11 ) }
    dend_2 { pt3dadd( 44.9487, -25.6758, -45.9535, 1.18 ) }
    dend_2 { pt3dadd( 46.3288, -25.5051, -46.7266, 0.59 ) }
    dend_2 { pt3dadd( 46.9505, -25.5146, -47.0395, 0.59 ) }
    dend_2 { pt3dadd( 48.4815, -25.7936, -47.6559, 0.96 ) }
    dend_2 { pt3dadd( 49.5804, -26.1781, -48.0656, 1.18 ) }
    dend_2 { pt3dadd( 50.5212, -26.6493, -48.3586, 1.18 ) }
    dend_2 { pt3dadd( 51.4887, -27.226, -48.5714, 1.4 ) }
    dend_2 { pt3dadd( 52.607, -27.9474, -48.7621, 1.4 ) }
    dend_2 { pt3dadd( 53.6472, -28.5926, -48.9216, 1.11 ) }
    dend_2 { pt3dadd( 54.3849, -28.9834, -49.0147, 1.11 ) }
    dend_2 { pt3dadd( 55.2963, -29.3264, -49.1161, 1.03 ) }
    dend_2 { pt3dadd( 56.4924, -29.609, -49.2302, 1.03 ) }
    dend_2 { pt3dadd( 57.5372, -29.7292, -49.3132, 1.03 ) }
    dend_2 { pt3dadd( 58.7439, -29.7552, -49.3917, 0.96 ) }
    dend_2 { pt3dadd( 60.4075, -29.665, -49.4973, 0.88 ) }
    dend_2 { pt3dadd( 62.2217, -29.4709, -49.5691, 0.88 ) }
    dend_2 { pt3dadd( 63.4266, -29.2812, -49.5921, 1.03 ) }
    dend_2 { pt3dadd( 64.3715, -29.1041, -49.6225, 1.11 ) }
    dend_2 { pt3dadd( 65.1449, -28.955, -49.679, 1.18 ) }
    dend_2 { pt3dadd( 65.8357, -28.8533, -49.8168, 1.18 ) }
    dend_2 { pt3dadd( 67.1946, -28.7962, -50.3826, 0.81 ) }
    dend_2 { pt3dadd( 68.1437, -28.9006, -50.9995, 0.74 ) }
    dend_2 { pt3dadd( 69.3655, -29.1692, -51.9689, 1.18 ) }
    dend_2 { pt3dadd( 70.2889, -29.4284, -52.7783, 1.4 ) }
    dend_2 { pt3dadd( 72.151, -30.0023, -54.5567, 1.18 ) }
    dend_2 { pt3dadd( 73.5732, -30.432, -56.0047, 0.88 ) }
    dend_2 { pt3dadd( 74.6252, -30.7078, -57.1684, 0.74 ) }
    dend_2 { pt3dadd( 75.6913, -30.9147, -58.3356, 0.74 ) }
    dend_2 { pt3dadd( 76.6719, -30.9928, -59.3359, 1.11 ) }
    dend_2 { pt3dadd( 77.7248, -30.9477, -60.3562, 1.4 ) }
    dend_2 { pt3dadd( 78.7779, -30.8327, -61.3291, 1.4 ) }
    dend_2 { pt3dadd( 80.2424, -30.6808, -62.7063, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_2 { pt3dadd( 81.098, -30.6333, -63.5566, 0.74 ) }
    dend_2 { pt3dadd( 82.17, -30.6951, -64.6811, 0.66 ) }
    dend_2 { pt3dadd( 83.4433, -30.9766, -66.0745, 0.81 ) }
    dend_2 { pt3dadd( 84.7364, -31.4797, -67.4167, 0.74 ) }
    dend_2 { pt3dadd( 85.8178, -32.0239, -68.5149, 1.25 ) }
    dend_2 { pt3dadd( 86.4217, -32.3539, -69.0898, 1.69 ) }
    dend_2 { pt3dadd( 87.2138, -32.7489, -69.7959, 1.69 ) }
    dend_2 { pt3dadd( 88.0499, -33.0416, -70.4138, 1.4 ) }
    dend_2 { pt3dadd( 89.3657, -33.2231, -71.1633, 0.88 ) }
    dend_2 { pt3dadd( 91.2977, -33.0917, -72.0556, 0.81 ) }
    dend_2 { pt3dadd( 92.1779, -32.9484, -72.412, 0.81 ) }
    dend_2 { pt3dadd( 93.4094, -32.7321, -72.8373, 0.81 ) }
    dend_2 { pt3dadd( 94.9983, -32.4626, -73.2721, 0.81 ) }
    dend_2 { pt3dadd( 95.9939, -32.3318, -73.4749, 0.81 ) }
    dend_2 { pt3dadd( 97.4031, -32.2536, -73.6855, 0.81 ) }
    dend_2 { pt3dadd( 98.3517, -32.33, -73.7563, 0.96 ) }
    dend_2 { pt3dadd( 99.8014, -32.689, -73.904, 0.96 ) }
    dend_2 { pt3dadd( 100.775, -33.0942, -74.0997, 1.18 ) }
    dend_2 { pt3dadd( 101.632, -33.5627, -74.3914, 1.47 ) }
    dend_2 { pt3dadd( 102.501, -34.0892, -74.7602, 1.47 ) }
    dend_2 { pt3dadd( 103.765, -34.8664, -75.3544, 0.74 ) }
    dend_2 { pt3dadd( 105.233, -35.7108, -76.0839, 0.74 ) }
    dend_2 { pt3dadd( 107.032, -36.6214, -77.0289, 0.66 ) }
    dend_2 { pt3dadd( 108.709, -37.3684, -77.9734, 0.74 ) }
    dend_2 { pt3dadd( 109.756, -37.7506, -78.5716, 0.81 ) }
    dend_2 { pt3dadd( 110.959, -38.0649, -79.2387, 0.81 ) }
    dend_2 { pt3dadd( 111.573, -38.1521, -79.5562, 1.11 ) }
    dend_2 { pt3dadd( 113.05, -38.179, -80.2805, 1.25 ) }
    dend_2 { pt3dadd( 113.699, -38.1154, -80.6444, 1.62 ) }
    dend_2 { pt3dadd( 114.405, -37.9742, -81.1718, 1.62 ) }
    dend_2 { pt3dadd( 115.768, -37.6329, -82.3773, 0.59 ) }
    dend_2 { pt3dadd( 116.612, -37.409, -83.2061, 0.59 ) }
    dend_2 { pt3dadd( 117.877, -37.09, -84.4884, 0.88 ) }
    dend_2 { pt3dadd( 119.574, -36.7051, -86.2214, 1.4 ) }
    dend_2 { pt3dadd( 121.293, -36.3869, -87.9124, 0.74 ) }
    dend_2 { pt3dadd( 122.311, -36.2493, -88.8673, 0.59 ) }
    dend_2 { pt3dadd( 123.184, -36.1859, -89.604, 0.81 ) }
    dend_2 { pt3dadd( 123.972, -36.1909, -90.1101, 0.81 ) }
    dend_2 { pt3dadd( 124.739, -36.2472, -90.4066, 0.96 ) }
    dend_2 { pt3dadd( 125.536, -36.3106, -90.5726, 0.96 ) }
    dend_2 { pt3dadd( 126.49, -36.3646, -90.7139, 0.59 ) }
    dend_2 { pt3dadd( 127.977, -36.3783, -90.9603, 0.59 ) }
    dend_2 { pt3dadd( 129.414, -36.3133, -91.2022, 0.66 ) }
    dend_2 { pt3dadd( 130.244, -36.2306, -91.4164, 1.03 ) }
    dend_2 { pt3dadd( 131.595, -36.0503, -91.8513, 1.03 ) }
    dend_2 { pt3dadd( 132.909, -35.7759, -92.6428, 0.59 ) }
    dend_2 { pt3dadd( 133.555, -35.5844, -93.1815, 0.59 ) }
    dend_2 { pt3dadd( 134.394, -35.2924, -94.0185, 0.59 ) }
    dend_2 { pt3dadd( 135.662, -34.8856, -95.396, 1.11 ) }
    dend_2 { pt3dadd( 136.229, -34.747, -96.0193, 1.33 ) }
    dend_2 { pt3dadd( 139.432, -34.1749, -99.3746, 1.03 ) }
    dend_2 { pt3dadd( 140.013, -34.0881, -99.9316, 1.4 ) }
    dend_2 { pt3dadd( 141.175, -33.9308, -100.921, 0.81 ) }
    dend_2 { pt3dadd( 142.358, -33.7753, -101.786, 0.74 ) }
    dend_2 { pt3dadd( 143.876, -33.5767, -102.669, 0.59 ) }
    dend_2 { pt3dadd( 144.893, -33.4405, -103.142, 0.59 ) }
    dend_2 { pt3dadd( 146.542, -33.2258, -103.647, 0.59 ) }
    dend_2 { pt3dadd( 148.495, -32.8896, -104.241, 0.88 ) }
    dend_2 { pt3dadd( 149.189, -32.7007, -104.443, 1.25 ) }
    dend_2 { pt3dadd( 149.806, -32.4677, -104.616, 1.55 ) }
    dend_2 { pt3dadd( 150.719, -32.0583, -104.887, 1.55 ) }
    dend_2 { pt3dadd( 151.457, -31.7139, -105.128, 1.33 ) }
    dend_2 { pt3dadd( 152.37, -31.2858, -105.433, 0.66 ) }
    dend_2 { pt3dadd( 153.537, -30.7622, -105.819, 0.66 ) }
    dend_2 { pt3dadd( 154.312, -30.4453, -106.151, 0.66 ) }
    dend_2 { pt3dadd( 155.717, -29.8882, -106.935, 0.66 ) }
    dend_2 { pt3dadd( 156.323, -29.7222, -107.547, 0.66 ) }
    dend_2 { pt3dadd( 156.686, -29.6598, -108.019, 0.96 ) }
    dend_2 { pt3dadd( 157.115, -29.6206, -108.636, 0.96 ) }
    dend_2 { pt3dadd( 158.399, -29.6131, -110.534, 0.74 ) }
    dend_2 { pt3dadd( 159.17, -29.648, -111.661, 1.62 ) }
    dend_2 { pt3dadd( 162.263, -29.8594, -115.973, 0.66 ) }
    dend_2 { pt3dadd( 162.733, -29.8788, -116.597, 0.66 ) }
    dend_2 { pt3dadd( 163.462, -29.8851, -117.464, 1.11 ) }
    dend_2 { pt3dadd( 164.424, -29.8729, -118.468, 1.11 ) }
    dend_2 { pt3dadd( 165.418, -29.8154, -119.297, 0.52 ) }
    dend_2 { pt3dadd( 166.414, -29.6891, -119.927, 0.52 ) }
    dend_2 { pt3dadd( 167.69, -29.3834, -120.523, 1.25 ) }
    dend_2 { pt3dadd( 168.674, -29.1037, -120.99, 0.88 ) }
    dend_2 { pt3dadd( 170.546, -28.4576, -121.885, 0.44 ) }
    dend_2 { pt3dadd( 171.616, -28.0191, -122.379, 0.44 ) }
    dend_2 { pt3dadd( 173.203, -27.2868, -123.081, 0.52 ) }
    dend_2 { pt3dadd( 174.254, -26.7571, -123.529, 0.88 ) }
    dend_2 { pt3dadd( 174.776, -26.4817, -123.74, 1.11 ) }
    dend_2 { pt3dadd( 175.219, -26.2158, -123.976, 1.11 ) }
    dend_2 { pt3dadd( 175.573, -25.9681, -124.233, 1.11 ) }
    dend_2 { pt3dadd( 176.718, -25.0773, -125.407, 0.52 ) }
    dend_2 { pt3dadd( 177.167, -24.7213, -126.052, 0.52 ) }
    dend_2 { pt3dadd( 177.786, -24.2476, -127.065, 0.81 ) }
    dend_2 { pt3dadd( 179.236, -23.2203, -129.503, 0.81 ) }
    dend_2 { pt3dadd( 179.925, -22.7612, -130.628, 1.11 ) }
    dend_2 { pt3dadd( 180.232, -22.5749, -131.073, 1.92 ) }
    dend_2 { pt3dadd( 182.054, -21.6206, -133.233, 0.59 ) }
    dend_2 { pt3dadd( 182.291, -21.5194, -133.446, 0.59 ) }
    dend_2 { pt3dadd( 183.175, -21.238, -133.943, 0.88 ) }
    dend_2 { pt3dadd( 184.334, -20.9752, -134.298, 0.44 ) }
    dend_2 { pt3dadd( 186.235, -20.6341, -134.766, 0.44 ) }
    dend_2 { pt3dadd( 187.738, -20.4133, -135.088, 0.74 ) }
    dend_2 { pt3dadd( 188.585, -20.3268, -135.299, 0.74 ) }
    dend_2 { pt3dadd( 189.841, -20.2821, -135.824, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_2 { pt3dadd( 190.587, -20.3198, -136.311, 0.52 ) }
    dend_2 { pt3dadd( 191.698, -20.4607, -137.282, 0.59 ) }
    dend_2 { pt3dadd( 192.118, -20.5181, -137.708, 0.59 ) }
    dend_2 { pt3dadd( 193.949, -20.6956, -139.683, 0.59 ) }
    dend_2 { pt3dadd( 195.155, -20.7312, -140.986, 0.81 ) }
    dend_2 { pt3dadd( 196.288, -20.6725, -142.212, 1.4 ) }
    dend_2 { pt3dadd( 196.893, -20.5639, -142.817, 1.55 ) }
    dend_2 { pt3dadd( 198.3, -20.0618, -143.998, 0.44 ) }
    dend_2 { pt3dadd( 198.903, -19.7298, -144.385, 0.88 ) }
    dend_2 { pt3dadd( 199.654, -19.2223, -144.68, 0.88 ) }
    dend_2 { pt3dadd( 200.471, -18.6635, -144.978, 0.59 ) }
    dend_2 { pt3dadd( 201.735, -17.8551, -145.454, 0.59 ) }
    dend_2 { pt3dadd( 202.585, -17.406, -145.898, 0.81 ) }
    dend_2 { pt3dadd( 203.551, -17.0168, -146.522, 0.81 ) }
    dend_2 { pt3dadd( 204.828, -16.5993, -147.515, 0.52 ) }
    dend_2 { pt3dadd( 206.268, -16.1741, -148.843, 0.74 ) }
    dend_2 { pt3dadd( 206.733, -16.0306, -149.461, 0.74 ) }
    dend_2 { pt3dadd( 207.701, -15.6167, -151.389, 0.37 ) }
    dend_2 { pt3dadd( 208.08, -15.362, -152.438, 0.37 ) }
    dend_2 { pt3dadd( 208.542, -14.8786, -154.138, 0.37 ) }
    dend_2 { pt3dadd( 208.859, -14.3648, -155.643, 0.59 ) }
    dend_2 { pt3dadd( 209.682, -12.7616, -159.767, 0.88 ) }
    dend_2 { pt3dadd( 210.079, -11.9896, -161.644, 0.52 ) }
    dend_2 { pt3dadd( 210.242, -11.7405, -162.306, 0.52 ) }
    dend_2 { pt3dadd( 210.65, -11.3179, -163.75, 0.52 ) }
    dend_2 { pt3dadd( 211.036, -11.046, -164.813, 0.81 ) }
    dend_2 { pt3dadd( 211.602, -10.7533, -166.039, 0.59 ) }
    dend_2 { pt3dadd( 212.136, -10.5494, -166.974, 0.59 ) }
    dend_2 { pt3dadd( 213.951, -10.0316, -169.975, 1.18 ) }
    dend_2 { pt3dadd( 216.089, -9.54971, -173.719, 0.74 ) }
    dend_2 { pt3dadd( 216.599, -9.46116, -174.703, 0.74 ) }
    dend_2 { pt3dadd( 217.057, -9.39486, -175.692, 0.88 ) }
    // Section: dend_87, id: dend_87, parent: dend_85 (entry count 32/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( -40.5108, 98.61, -30.8533, 0.29 ) }
    dend_87 { pt3dadd( -41.7955, 98.4344, -31.3608, 0.29 ) }
    dend_87 { pt3dadd( -42.8318, 98.4456, -31.7941, 0.29 ) }
    dend_87 { pt3dadd( -43.3543, 98.5938, -32.1032, 0.59 ) }
    dend_87 { pt3dadd( -43.9387, 98.9044, -32.5079, 0.59 ) }
    dend_87 { pt3dadd( -44.4145, 99.2252, -32.8425, 0.59 ) }
    dend_87 { pt3dadd( -44.9276, 99.6163, -33.1867, 0.44 ) }
    dend_87 { pt3dadd( -45.3211, 100.075, -33.474, 0.59 ) }
    dend_87 { pt3dadd( -46.0133, 101.006, -34.1006, 0.37 ) }
    dend_87 { pt3dadd( -46.3457, 101.454, -34.4377, 0.29 ) }
    dend_87 { pt3dadd( -46.6891, 101.863, -34.7716, 0.59 ) }
    dend_87 { pt3dadd( -47.0691, 102.275, -35.124, 0.59 ) }
    dend_87 { pt3dadd( -47.901, 103.143, -35.878, 0.29 ) }
    dend_87 { pt3dadd( -48.6665, 103.979, -36.6093, 0.29 ) }
    dend_87 { pt3dadd( -49.0149, 104.384, -36.9833, 0.29 ) }
    dend_87 { pt3dadd( -49.657, 105.169, -37.8208, 0.29 ) }
    dend_87 { pt3dadd( -50.0443, 105.665, -38.4497, 0.29 ) }
    dend_87 { pt3dadd( -50.4407, 106.188, -39.1831, 0.52 ) }
    dend_87 { pt3dadd( -50.7944, 106.675, -39.8845, 0.66 ) }
    dend_87 { pt3dadd( -51.3043, 107.45, -40.9633, 0.44 ) }
    dend_87 { pt3dadd( -51.689, 108.084, -41.91, 0.59 ) }
    dend_87 { pt3dadd( -52.13, 108.83, -43.23, 0.96 ) }
    dend_87 { pt3dadd( -52.3086, 109.054, -43.7282, 0.52 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 55/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( -40.5108, 98.61, -30.8533, 0.66 ) }
    dend_86 { pt3dadd( -38.8597, 98.7978, -31.0463, 0.66 ) }
    dend_86 { pt3dadd( -37.5405, 98.9477, -31.2006, 0.29 ) }
    dend_86 { pt3dadd( -36.5829, 99.0566, -31.3125, 0.44 ) }
    dend_86 { pt3dadd( -35.4024, 99.1908, -31.4505, 0.44 ) }
    // Section: dend_82, id: dend_82, parent: dend_80 (entry count 60/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -60.8485, 105.159, -24.644, 0.29 ) }
    dend_82 { pt3dadd( -61.3681, 105.875, -25.368, 0.29 ) }
    dend_82 { pt3dadd( -62.0255, 106.706, -26.301, 0.59 ) }
    dend_82 { pt3dadd( -62.454, 107.256, -26.9241, 0.44 ) }
    dend_82 { pt3dadd( -63.0733, 108.106, -27.8312, 0.88 ) }
    dend_82 { pt3dadd( -63.3461, 108.54, -28.2588, 1.03 ) }
    dend_82 { pt3dadd( -63.9524, 109.644, -29.2607, 0.52 ) }
    dend_82 { pt3dadd( -64.1442, 110.049, -29.6146, 0.44 ) }
    dend_82 { pt3dadd( -64.5266, 110.92, -30.286, 0.66 ) }
    dend_82 { pt3dadd( -64.818, 111.629, -30.7873, 0.88 ) }
    dend_82 { pt3dadd( -65.3895, 113.006, -31.6622, 0.59 ) }
    dend_82 { pt3dadd( -65.78, 113.911, -32.1982, 0.74 ) }
    dend_82 { pt3dadd( -66.1893, 114.824, -32.7, 0.74 ) }
    dend_82 { pt3dadd( -66.7731, 116.024, -33.3652, 0.37 ) }
    dend_82 { pt3dadd( -67.0498, 116.526, -33.6523, 0.37 ) }
    dend_82 { pt3dadd( -67.7217, 117.574, -34.2659, 0.66 ) }
    dend_82 { pt3dadd( -68.2065, 118.189, -34.6363, 0.66 ) }
    dend_82 { pt3dadd( -68.7285, 118.727, -34.9808, 0.52 ) }
    dend_82 { pt3dadd( -69.5023, 119.373, -35.4177, 0.88 ) }
    dend_82 { pt3dadd( -70.0422, 119.74, -35.677, 0.88 ) }
    dend_82 { pt3dadd( -70.8545, 120.182, -35.994, 0.52 ) }
    dend_82 { pt3dadd( -71.8498, 120.635, -36.3112, 0.52 ) }
    dend_82 { pt3dadd( -73.0994, 121.17, -36.6499, 0.88 ) }
    dend_82 { pt3dadd( -73.9141, 121.528, -36.8435, 0.88 ) }
    dend_82 { pt3dadd( -74.9349, 121.986, -37.0544, 0.52 ) }
    dend_82 { pt3dadd( -75.8112, 122.391, -37.224, 0.44 ) }
    dend_82 { pt3dadd( -76.8079, 122.864, -37.418, 0.37 ) }
    dend_82 { pt3dadd( -77.7881, 123.375, -37.6004, 0.37 ) }
    dend_82 { pt3dadd( -78.7662, 123.944, -37.7855, 0.29 ) }
    dend_82 { pt3dadd( -80.3571, 124.96, -38.1051, 0.29 ) }
    dend_82 { pt3dadd( -81.0989, 125.452, -38.2612, 0.29 ) }
    dend_82 { pt3dadd( -81.9518, 126.003, -38.4444, 1.11 ) }
    // Section: dend_81, id: dend_81, parent: dend_80 (entry count 92/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -60.8485, 105.159, -24.644, 0.29 ) }
    dend_81 { pt3dadd( -61.8396, 104.598, -23.207, 0.29 ) }
    dend_81 { pt3dadd( -62.3789, 104.293, -22.4249, 0.29 ) }
    dend_81 { pt3dadd( -62.7611, 104.077, -21.8708, 0.22 ) }
    dend_81 { pt3dadd( -63.2487, 103.801, -21.1639, 0.22 ) }
    dend_81 { pt3dadd( -63.7911, 103.494, -20.3773, 0.22 ) }
    // Section: dend_75, id: dend_75, parent: dend_71 (entry count 98/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 165.007, 37.4441, 84.3212, 0.29 ) }
    dend_75 { pt3dadd( 167.211, 43.9615, 91.3958, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_75 { pt3dadd( 170.001, 49.5619, 99.1014, 0.29 ) }
    dend_75 { pt3dadd( 173.837, 54.7213, 106.693, 0.29 ) }
    dend_75 { pt3dadd( 176.723, 58.6445, 115.435, 0.29 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 3/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 165.007, 37.4441, 84.3212, 0.29 ) }
    dend_72 { pt3dadd( 172.992, 35.8159, 87.0522, 0.29 ) }
    dend_72 { pt3dadd( 180.926, 35.6485, 90.3911, 0.29 ) }
    dend_72 { pt3dadd( 188.298, 36.7518, 94.6834, 0.29 ) }
    // Section: dend_68, id: dend_68, parent: dend_58 (entry count 7/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 82.9272, 37.9085, 0.989173, 0.37 ) }
    dend_68 { pt3dadd( 83.0906, 38.5203, 1.14121, 0.37 ) }
    dend_68 { pt3dadd( 83.2973, 39.4317, 1.40524, 0.37 ) }
    dend_68 { pt3dadd( 83.4471, 40.0919, 1.59652, 0.22 ) }
    dend_68 { pt3dadd( 83.7619, 41.48, 1.99867, 0.22 ) }
    dend_68 { pt3dadd( 84.0018, 42.538, 2.30517, 0.66 ) }
    dend_68 { pt3dadd( 84.2908, 43.8122, 2.6743, 1.11 ) }
    dend_68 { pt3dadd( 84.3497, 44.1308, 2.78587, 1.11 ) }
    dend_68 { pt3dadd( 86.4987, 51.9955, 4.02129, 1.11 ) }
    dend_68 { pt3dadd( 89.1175, 59.7436, 5.12654, 1.11 ) }
    dend_68 { pt3dadd( 92.2181, 67.2172, 6.95478, 1.11 ) }
    dend_68 { pt3dadd( 95.2824, 74.4638, 9.70613, 1.11 ) }
    dend_68 { pt3dadd( 99.309, 81.6155, 10.9996, 1.11 ) }
    dend_68 { pt3dadd( 103.496, 88.6421, 12.5466, 1.11 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 21/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 82.9272, 37.9085, 0.989173, 0.44 ) }
    dend_59 { pt3dadd( 83.6229, 38.0654, 1.02487, 0.44 ) }
    dend_59 { pt3dadd( 84.3686, 38.1985, 1.06654, 0.44 ) }
    dend_59 { pt3dadd( 85.1714, 38.3183, 1.16455, 0.74 ) }
    dend_59 { pt3dadd( 85.6608, 38.3827, 1.24241, 1.03 ) }
    dend_59 { pt3dadd( 86.12, 38.4381, 1.32928, 1.03 ) }
    dend_59 { pt3dadd( 86.4824, 38.4796, 1.38598, 1.03 ) }
    dend_59 { pt3dadd( 87.0925, 38.5501, 1.42394, 0.66 ) }
    dend_59 { pt3dadd( 87.9292, 38.6784, 1.39028, 0.66 ) }
    dend_59 { pt3dadd( 88.2222, 38.7505, 1.33524, 0.81 ) }
    dend_59 { pt3dadd( 88.6642, 38.9116, 1.2017, 0.44 ) }
    dend_59 { pt3dadd( 89.5579, 39.3403, 0.855588, 0.44 ) }
    dend_59 { pt3dadd( 90.6155, 39.9513, 0.393897, 0.37 ) }
    dend_59 { pt3dadd( 90.9848, 40.1911, 0.209241, 0.37 ) }
    dend_59 { pt3dadd( 91.5541, 40.5781, -0.0956087, 0.37 ) }
    dend_59 { pt3dadd( 92.2389, 41.0595, -0.440763, 0.66 ) }
    dend_59 { pt3dadd( 92.6395, 41.3506, -0.618005, 0.66 ) }
    dend_59 { pt3dadd( 93.2061, 41.7577, -0.787528, 0.37 ) }
    dend_59 { pt3dadd( 93.5481, 41.9849, -0.846416, 0.37 ) }
    dend_59 { pt3dadd( 93.9831, 42.2646, -0.911632, 0.59 ) }
    dend_59 { pt3dadd( 94.3691, 42.5174, -0.981385, 0.59 ) }
    dend_59 { pt3dadd( 94.7403, 42.7659, -1.11643, 0.44 ) }
    dend_59 { pt3dadd( 95.3672, 43.1408, -1.39408, 0.66 ) }
    dend_59 { pt3dadd( 95.4815, 43.2002, -1.44782, 0.96 ) }
    dend_59 { pt3dadd( 95.9199, 43.38, -1.64003, 0.96 ) }
    dend_59 { pt3dadd( 96.5621, 43.5719, -1.91034, 1.11 ) }
    dend_59 { pt3dadd( 98.0467, 43.9039, -2.46731, 0.44 ) }
    dend_59 { pt3dadd( 98.8809, 44.0535, -2.73945, 0.44 ) }
    dend_59 { pt3dadd( 99.5328, 44.1569, -2.91867, 0.37 ) }
    dend_59 { pt3dadd( 100.335, 44.292, -3.13283, 0.37 ) }
    dend_59 { pt3dadd( 100.824, 44.3853, -3.24932, 0.29 ) }
    dend_59 { pt3dadd( 101.501, 44.563, -3.39165, 0.22 ) }
    dend_59 { pt3dadd( 101.957, 44.778, -3.50531, 0.59 ) }
    dend_59 { pt3dadd( 102.193, 44.9781, -3.60932, 0.59 ) }
    dend_59 { pt3dadd( 102.868, 45.6579, -4.05199, 0.29 ) }
    dend_59 { pt3dadd( 103.152, 45.9512, -4.26131, 0.37 ) }
    dend_59 { pt3dadd( 103.489, 46.2754, -4.51127, 0.52 ) }
    dend_59 { pt3dadd( 103.86, 46.5559, -4.77894, 0.74 ) }
    dend_59 { pt3dadd( 104.382, 46.865, -5.22575, 0.96 ) }
    dend_59 { pt3dadd( 105.306, 47.3412, -6.17059, 0.29 ) }
    dend_59 { pt3dadd( 105.658, 47.5252, -6.60021, 0.52 ) }
    dend_59 { pt3dadd( 105.812, 47.6165, -6.82776, 0.81 ) }
    dend_59 { pt3dadd( 106.308, 47.9766, -7.68921, 1.11 ) }
    dend_59 { pt3dadd( 107.189, 48.7465, -9.45785, 0.81 ) }
    dend_59 { pt3dadd( 107.563, 49.1537, -10.3111, 0.96 ) }
    dend_59 { pt3dadd( 107.949, 49.6773, -11.2805, 0.66 ) }
    dend_59 { pt3dadd( 108.237, 50.1053, -12.0033, 0.52 ) }
    dend_59 { pt3dadd( 108.533, 50.5472, -12.6455, 0.52 ) }
    dend_59 { pt3dadd( 108.667, 50.7352, -12.8472, 0.74 ) }
    dend_59 { pt3dadd( 109.046, 51.0914, -13.0888, 0.74 ) }
    dend_59 { pt3dadd( 109.303, 51.2634, -13.1831, 0.96 ) }
    dend_59 { pt3dadd( 109.71, 51.4577, -13.2978, 0.96 ) }
    dend_59 { pt3dadd( 110.374, 51.7351, -13.5397, 0.74 ) }
    dend_59 { pt3dadd( 111.024, 52.0212, -13.8403, 0.44 ) }
    dend_59 { pt3dadd( 111.73, 52.4069, -14.3013, 0.44 ) }
    dend_59 { pt3dadd( 111.993, 52.5901, -14.5256, 0.96 ) }
    dend_59 { pt3dadd( 112.456, 53.0125, -15.0667, 1.18 ) }
    dend_59 { pt3dadd( 113.078, 53.7411, -16.0171, 0.66 ) }
    dend_59 { pt3dadd( 113.295, 54.057, -16.4424, 0.66 ) }
    dend_59 { pt3dadd( 113.67, 54.7024, -17.3496, 0.59 ) }
    dend_59 { pt3dadd( 113.807, 54.9609, -17.6891, 0.52 ) }
    dend_59 { pt3dadd( 114.201, 55.6754, -18.5572, 0.52 ) }
    dend_59 { pt3dadd( 114.313, 55.8891, -18.7782, 0.96 ) }
    dend_59 { pt3dadd( 114.557, 56.3388, -19.1778, 0.96 ) }
    dend_59 { pt3dadd( 115.024, 57.1991, -19.8384, 0.59 ) }
    dend_59 { pt3dadd( 115.43, 57.9756, -20.3195, 0.59 ) }
    dend_59 { pt3dadd( 115.689, 58.4864, -20.5973, 0.88 ) }
    dend_59 { pt3dadd( 116.067, 59.2408, -20.9276, 0.74 ) }
    dend_59 { pt3dadd( 116.409, 59.8472, -21.17, 0.74 ) }
    dend_59 { pt3dadd( 116.823, 60.4591, -21.3732, 0.88 ) }
    dend_59 { pt3dadd( 117.093, 60.7555, -21.4704, 0.88 ) }
    dend_59 { pt3dadd( 117.609, 61.166, -21.6705, 0.37 ) }
    dend_59 { pt3dadd( 118.158, 61.5138, -21.8969, 0.37 ) }
    dend_59 { pt3dadd( 119.026, 61.957, -22.2663, 0.37 ) }
    dend_59 { pt3dadd( 119.635, 62.2387, -22.5564, 0.37 ) }
    dend_59 { pt3dadd( 120.345, 62.55, -22.9318, 0.37 ) }
    dend_59 { pt3dadd( 120.773, 62.7503, -23.1637, 0.59 ) }
    dend_59 { pt3dadd( 121.304, 63.0189, -23.4463, 0.74 ) }
    dend_59 { pt3dadd( 121.66, 63.2213, -23.642, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_59 { pt3dadd( 122.329, 63.664, -24.0399, 0.44 ) }
    dend_59 { pt3dadd( 122.686, 63.9029, -24.2441, 0.37 ) }
    dend_59 { pt3dadd( 123.741, 64.5199, -24.7208, 0.37 ) }
    dend_59 { pt3dadd( 124.246, 64.7594, -24.9045, 0.74 ) }
    dend_59 { pt3dadd( 124.515, 64.8593, -24.9847, 0.74 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 5/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 88.9599, 50.7749, 11.0941, 0.29 ) }
    dend_57 { pt3dadd( 95.5978, 59.324, 14.5166, 0.29 ) }
    dend_57 { pt3dadd( 103.052, 67.7801, 15.6357, 0.29 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 8/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 88.9599, 50.7749, 11.0941, 0.29 ) }
    dend_56 { pt3dadd( 93.7147, 57.1564, 13.8626, 0.29 ) }
    dend_56 { pt3dadd( 98.5301, 63.0681, 17.5372, 0.29 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 11/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -23.1091, -155.539, 18.1298, 0.29 ) }
    dend_37 { pt3dadd( -20.0703, -165.092, 16.1149, 0.29 ) }
    dend_37 { pt3dadd( -18.4169, -175.115, 15.5163, 0.29 ) }
    dend_37 { pt3dadd( -17.2023, -185.002, 13.3576, 0.29 ) }
    dend_37 { pt3dadd( -17.3279, -195.129, 12.4897, 0.29 ) }
    dend_37 { pt3dadd( -18.3869, -205.205, 11.5848, 0.29 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 17/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -23.1091, -155.539, 18.1298, 0.29 ) }
    dend_36 { pt3dadd( -26.352, -162.15, 14.7716, 0.29 ) }
    // Section: dend_24, id: dend_24, parent: dend_18 (entry count 19/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 0.630245, -84.9741, 2.67342, 0.37 ) }
    dend_24 { pt3dadd( 0.0108076, -86.6641, 0.594351, 0.37 ) }
    dend_24 { pt3dadd( -0.447593, -87.5578, -0.516594, 0.37 ) }
    dend_24 { pt3dadd( -0.94373, -88.331, -1.53539, 0.44 ) }
    dend_24 { pt3dadd( -1.58603, -89.1695, -2.68225, 0.74 ) }
    dend_24 { pt3dadd( -2.26692, -89.9403, -3.75888, 0.59 ) }
    dend_24 { pt3dadd( -3.02038, -90.6585, -4.80703, 0.59 ) }
    dend_24 { pt3dadd( -3.53944, -90.9499, -5.32548, 0.74 ) }
    dend_24 { pt3dadd( -4.46071, -91.2655, -6.08979, 0.88 ) }
    dend_24 { pt3dadd( -5.07542, -91.3885, -6.51203, 1.18 ) }
    dend_24 { pt3dadd( -5.72137, -91.4513, -6.89549, 0.59 ) }
    dend_24 { pt3dadd( -6.72109, -91.4884, -7.45094, 0.44 ) }
    dend_24 { pt3dadd( -7.71056, -91.5066, -8.00618, 0.52 ) }
    dend_24 { pt3dadd( -8.16122, -91.5328, -8.27647, 0.74 ) }
    dend_24 { pt3dadd( -8.92549, -91.6862, -8.73902, 0.74 ) }
    dend_24 { pt3dadd( -9.45534, -91.9093, -9.10235, 0.59 ) }
    dend_24 { pt3dadd( -9.97631, -92.2752, -9.4966, 0.59 ) }
    dend_24 { pt3dadd( -10.6338, -92.958, -10.0308, 0.59 ) }
    dend_24 { pt3dadd( -11.3155, -93.8989, -10.5906, 0.44 ) }
    dend_24 { pt3dadd( -12.0846, -95.152, -11.2, 0.37 ) }
    dend_24 { pt3dadd( -12.5244, -95.9953, -11.5321, 1.03 ) }
    dend_24 { pt3dadd( -12.811, -96.6338, -11.7508, 1.03 ) }
    dend_24 { pt3dadd( -13.0341, -97.2204, -11.923, 0.96 ) }
    dend_24 { pt3dadd( -13.4006, -98.4385, -12.2017, 0.66 ) }
    dend_24 { pt3dadd( -13.6659, -99.5355, -12.4105, 0.66 ) }
    dend_24 { pt3dadd( -13.8992, -100.788, -12.6386, 0.88 ) }
    dend_24 { pt3dadd( -14.0091, -101.558, -12.7679, 1.03 ) }
    dend_24 { pt3dadd( -14.1102, -102.65, -12.9487, 0.88 ) }
    dend_24 { pt3dadd( -14.1781, -104.054, -13.1878, 0.52 ) }
    dend_24 { pt3dadd( -14.1884, -105.15, -13.3846, 0.52 ) }
    dend_24 { pt3dadd( -14.1744, -105.983, -13.5502, 0.96 ) }
    dend_24 { pt3dadd( -14.1647, -106.525, -13.6711, 0.96 ) }
    dend_24 { pt3dadd( -14.1805, -107.857, -14.0238, 0.59 ) }
    dend_24 { pt3dadd( -14.2476, -108.916, -14.3547, 0.66 ) }
    dend_24 { pt3dadd( -14.3588, -109.706, -14.6515, 0.81 ) }
    dend_24 { pt3dadd( -14.5469, -110.666, -15.0692, 0.81 ) }
    dend_24 { pt3dadd( -14.6841, -111.2, -15.3364, 0.81 ) }
    dend_24 { pt3dadd( -14.9274, -112.172, -15.913, 0.44 ) }
    dend_24 { pt3dadd( -15.0391, -112.678, -16.2503, 0.81 ) }
    dend_24 { pt3dadd( -15.1416, -113.408, -16.765, 0.81 ) }
    dend_24 { pt3dadd( -15.1849, -114.45, -17.4909, 0.52 ) }
    dend_24 { pt3dadd( -15.1137, -115.296, -18.0467, 0.52 ) }
    dend_24 { pt3dadd( -14.813, -116.842, -18.9879, 0.74 ) }
    dend_24 { pt3dadd( -14.6121, -117.599, -19.4105, 1.11 ) }
    dend_24 { pt3dadd( -14.4305, -118.297, -19.7684, 1.11 ) }
    dend_24 { pt3dadd( -14.2367, -119.188, -20.1779, 0.96 ) }
    dend_24 { pt3dadd( -14.0988, -120.188, -20.6032, 0.59 ) }
    dend_24 { pt3dadd( -14.0586, -121.426, -21.1067, 0.44 ) }
    dend_24 { pt3dadd( -14.234, -122.796, -21.6674, 0.44 ) }
    dend_24 { pt3dadd( -14.4905, -123.825, -22.1173, 0.44 ) }
    dend_24 { pt3dadd( -14.8133, -124.787, -22.5385, 0.74 ) }
    dend_24 { pt3dadd( -15.0666, -125.495, -22.8375, 0.74 ) }
    dend_24 { pt3dadd( -15.3216, -126.18, -23.1053, 0.74 ) }
    dend_24 { pt3dadd( -15.7807, -127.406, -23.5393, 0.66 ) }
    dend_24 { pt3dadd( -16.1169, -128.321, -23.8313, 0.44 ) }
    dend_24 { pt3dadd( -16.5444, -129.504, -24.1923, 0.44 ) }
    dend_24 { pt3dadd( -17.2408, -131.153, -24.6867, 0.44 ) }
    dend_24 { pt3dadd( -17.6561, -131.919, -24.9178, 0.88 ) }
    dend_24 { pt3dadd( -18.1624, -132.632, -25.1383, 1.18 ) }
    dend_24 { pt3dadd( -18.5723, -133.094, -25.275, 1.18 ) }
    dend_24 { pt3dadd( -19.0979, -133.593, -25.425, 1.03 ) }
    dend_24 { pt3dadd( -20.6083, -134.815, -25.8322, 0.66 ) }
    dend_24 { pt3dadd( -22.0124, -135.79, -26.1839, 0.66 ) }
    dend_24 { pt3dadd( -23.2074, -136.59, -26.4776, 1.25 ) }
    dend_24 { pt3dadd( -23.8429, -137.02, -26.6311, 1.55 ) }
    dend_24 { pt3dadd( -24.6104, -137.55, -26.8168, 1.03 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 85/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 0.630245, -84.9741, 2.67342, 0.74 ) }
    dend_19 { pt3dadd( 0.0298648, -85.949, 1.93659, 0.74 ) }
    dend_19 { pt3dadd( -0.675053, -87.0666, 1.07491, 0.74 ) }
    dend_19 { pt3dadd( -1.04514, -87.7378, 0.640782, 0.74 ) }
    dend_19 { pt3dadd( -1.40144, -88.4924, 0.218691, 0.81 ) }
    dend_19 { pt3dadd( -2.06683, -90.2314, -0.585295, 0.52 ) }
    dend_19 { pt3dadd( -2.47703, -91.6216, -1.11879, 0.74 ) }
    dend_19 { pt3dadd( -2.6219, -92.3648, -1.33691, 0.74 ) }
    dend_19 { pt3dadd( -2.51979, -94.0294, -1.5084, 0.74 ) }
    dend_19 { pt3dadd( -2.21958, -94.8633, -1.46659, 0.81 ) }
    dend_19 { pt3dadd( -1.5904, -95.8812, -1.27883, 0.66 ) }
    dend_19 { pt3dadd( -1.19158, -96.3863, -1.13738, 1.11 ) }
    dend_19 { pt3dadd( -0.774367, -96.8788, -1.01303, 1.11 ) }
    dend_19 { pt3dadd( -0.247935, -97.504, -0.926359, 0.81 ) }
    dend_19 { pt3dadd( 0.402199, -98.3478, -0.953754, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_19 { pt3dadd( 0.978025, -99.1681, -1.03541, 0.96 ) }
    dend_19 { pt3dadd( 1.48183, -99.9317, -1.13407, 0.88 ) }
    dend_19 { pt3dadd( 2.07984, -100.87, -1.24586, 0.96 ) }
    dend_19 { pt3dadd( 2.48976, -101.568, -1.34045, 1.11 ) }
    dend_19 { pt3dadd( 2.93134, -102.436, -1.49488, 1.11 ) }
    dend_19 { pt3dadd( 3.27673, -103.249, -1.67253, 0.74 ) }
    dend_19 { pt3dadd( 3.6956, -104.513, -1.97714, 0.66 ) }
    dend_19 { pt3dadd( 3.8674, -105.173, -2.14163, 0.66 ) }
    dend_19 { pt3dadd( 4.14601, -106.7, -2.49904, 0.66 ) }
    dend_19 { pt3dadd( 4.28745, -108.301, -2.84723, 0.59 ) }
    dend_19 { pt3dadd( 4.28057, -109.227, -3.04574, 0.96 ) }
    dend_19 { pt3dadd( 4.17359, -110.378, -3.29183, 1.18 ) }
    dend_19 { pt3dadd( 4.02652, -111.235, -3.45935, 1.03 ) }
    dend_19 { pt3dadd( 3.81424, -112.241, -3.63371, 0.88 ) }
    dend_19 { pt3dadd( 3.54491, -113.548, -3.80815, 0.74 ) }
    dend_19 { pt3dadd( 3.36989, -114.688, -3.85516, 0.59 ) }
    dend_19 { pt3dadd( 3.25528, -115.655, -3.82603, 0.59 ) }
    dend_19 { pt3dadd( 3.16569, -116.458, -3.73167, 1.4 ) }
    dend_19 { pt3dadd( 3.0819, -117.052, -3.6089, 1.4 ) }
    dend_19 { pt3dadd( 2.86948, -118.57, -3.15343, 0.88 ) }
    dend_19 { pt3dadd( 2.66903, -120.36, -2.39391, 0.66 ) }
    dend_19 { pt3dadd( 2.58739, -121.111, -2.01462, 0.88 ) }
    dend_19 { pt3dadd( 2.47738, -122.065, -1.49815, 0.88 ) }
    dend_19 { pt3dadd( 2.27868, -123.552, -0.683852, 0.59 ) }
    dend_19 { pt3dadd( 2.11064, -124.499, -0.176547, 0.81 ) }
    dend_19 { pt3dadd( 1.75372, -126.064, 0.609366, 0.81 ) }
    dend_19 { pt3dadd( 1.54641, -126.869, 0.930818, 1.11 ) }
    dend_19 { pt3dadd( 1.38192, -127.53, 1.14974, 1.11 ) }
    dend_19 { pt3dadd( 1.16846, -128.479, 1.36646, 0.52 ) }
    dend_19 { pt3dadd( 1.00301, -129.376, 1.50202, 0.74 ) }
    dend_19 { pt3dadd( 0.866299, -130.175, 1.57361, 1.03 ) }
    dend_19 { pt3dadd( 0.791952, -130.844, 1.58362, 1.25 ) }
    dend_19 { pt3dadd( 0.787398, -131.504, 1.63024, 1.33 ) }
    dend_19 { pt3dadd( 0.896637, -132.592, 1.84914, 1.03 ) }
    dend_19 { pt3dadd( 1.14467, -133.613, 2.16678, 0.74 ) }
    dend_19 { pt3dadd( 1.46503, -134.443, 2.49155, 0.44 ) }
    dend_19 { pt3dadd( 1.86263, -135.198, 2.83622, 0.29 ) }
    dend_19 { pt3dadd( 2.58945, -136.239, 3.38843, 0.29 ) }
    dend_19 { pt3dadd( 3.61773, -137.385, 4.09745, 0.29 ) }
    dend_19 { pt3dadd( 4.23214, -137.901, 4.47272, 0.29 ) }
    dend_19 { pt3dadd( 4.82026, -138.264, 4.76135, 0.88 ) }
    dend_19 { pt3dadd( 5.3143, -138.523, 4.97567, 0.88 ) }
    dend_19 { pt3dadd( 6.13554, -138.92, 5.29529, 0.52 ) }
    dend_19 { pt3dadd( 6.51255, -139.099, 5.3953, 0.52 ) }
    dend_19 { pt3dadd( 7.19475, -139.452, 5.55938, 0.52 ) }
    dend_19 { pt3dadd( 7.71696, -139.838, 5.74063, 0.52 ) }
    dend_19 { pt3dadd( 8.39239, -140.554, 5.96691, 0.52 ) }
    dend_19 { pt3dadd( 8.70826, -141.009, 6.05125, 0.88 ) }
    dend_19 { pt3dadd( 9.04138, -141.571, 6.09455, 0.88 ) }
    dend_19 { pt3dadd( 9.44966, -142.259, 6.06786, 1.11 ) }
    dend_19 { pt3dadd( 9.88075, -142.898, 6.00999, 0.66 ) }
    dend_19 { pt3dadd( 10.7309, -143.918, 5.84453, 0.66 ) }
    dend_19 { pt3dadd( 11.1503, -144.283, 5.76883, 0.66 ) }
    dend_19 { pt3dadd( 11.9003, -144.804, 5.67326, 0.66 ) }
    dend_19 { pt3dadd( 12.5127, -145.176, 5.62352, 0.52 ) }
    dend_19 { pt3dadd( 13.555, -145.805, 5.52455, 0.66 ) }
    dend_19 { pt3dadd( 13.8909, -146.012, 5.52662, 0.66 ) }
    dend_19 { pt3dadd( 14.6299, -146.479, 5.66346, 0.44 ) }
    dend_19 { pt3dadd( 15.2448, -146.889, 5.87787, 0.44 ) }
    dend_19 { pt3dadd( 16.1006, -147.51, 6.31151, 0.52 ) }
    dend_19 { pt3dadd( 17.1211, -148.311, 6.99398, 0.66 ) }
    dend_19 { pt3dadd( 17.9951, -149.043, 7.65929, 0.44 ) }
    dend_19 { pt3dadd( 18.9327, -149.843, 8.43407, 0.81 ) }
    dend_19 { pt3dadd( 19.8069, -150.587, 9.1319, 0.52 ) }
    dend_19 { pt3dadd( 20.3831, -151.075, 9.55167, 0.74 ) }
    dend_19 { pt3dadd( 21.0842, -151.668, 9.9899, 0.29 ) }
    dend_19 { pt3dadd( 21.457, -151.991, 10.1496, 0.52 ) }
    dend_19 { pt3dadd( 22.012, -152.494, 10.207, 0.59 ) }
    dend_19 { pt3dadd( 23.0695, -153.498, 10.1992, 0.37 ) }
    dend_19 { pt3dadd( 23.8323, -154.231, 10.1114, 0.66 ) }
    dend_19 { pt3dadd( 24.2662, -154.645, 10.0368, 1.03 ) }
    dend_19 { pt3dadd( 24.961, -155.303, 9.88836, 1.03 ) }
    dend_19 { pt3dadd( 25.7292, -156.032, 9.76372, 0.74 ) }
    dend_19 { pt3dadd( 26.973, -157.202, 9.69226, 0.52 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 74/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 21.4831, -178.589, -32.2139, 0.44 ) }
    dend_13 { pt3dadd( 21.4055, -180.056, -32.127, 0.44 ) }
    dend_13 { pt3dadd( 21.341, -181.081, -32.065, 0.81 ) }
    dend_13 { pt3dadd( 21.2783, -181.867, -32.0179, 1.18 ) }
    dend_13 { pt3dadd( 21.1833, -182.92, -31.9593, 0.74 ) }
    dend_13 { pt3dadd( 21.0811, -184.013, -31.9045, 0.44 ) }
    dend_13 { pt3dadd( 20.9885, -184.976, -31.8604, 0.96 ) }
    dend_13 { pt3dadd( 20.8877, -185.973, -31.821, 0.96 ) }
    dend_13 { pt3dadd( 20.7852, -186.92, -31.7902, 1.18 ) }
    dend_13 { pt3dadd( 20.5753, -188.332, -31.7462, 0.74 ) }
    dend_13 { pt3dadd( 20.2939, -189.608, -31.7413, 0.66 ) }
    dend_13 { pt3dadd( 19.9823, -190.646, -31.7697, 0.66 ) }
    dend_13 { pt3dadd( 19.5118, -191.942, -31.8702, 0.66 ) }
    dend_13 { pt3dadd( 19.2493, -192.581, -31.9519, 1.03 ) }
    dend_13 { pt3dadd( 18.8511, -193.464, -32.1062, 0.81 ) }
    dend_13 { pt3dadd( 18.2258, -194.864, -32.4758, 0.52 ) }
    dend_13 { pt3dadd( 17.9235, -195.706, -32.7167, 0.44 ) }
    dend_13 { pt3dadd( 17.6847, -196.769, -32.9927, 0.37 ) }
    dend_13 { pt3dadd( 17.6289, -197.378, -33.1159, 0.66 ) }
    dend_13 { pt3dadd( 17.6127, -198.051, -33.195, 0.66 ) }
    dend_13 { pt3dadd( 17.6588, -199.816, -33.3403, 0.44 ) }
    dend_13 { pt3dadd( 17.7139, -201.593, -33.3992, 0.44 ) }
    dend_13 { pt3dadd( 17.6998, -203.014, -33.399, 0.66 ) }
    dend_13 { pt3dadd( 17.6022, -204.266, -33.3627, 0.81 ) }
    dend_13 { pt3dadd( 17.3695, -205.626, -33.3294, 0.96 ) }
    dend_13 { pt3dadd( 16.9273, -207.058, -33.2905, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_13 { pt3dadd( 16.4337, -208.169, -33.2589, 0.81 ) }
    dend_13 { pt3dadd( 15.9231, -209.144, -33.2903, 0.88 ) }
    dend_13 { pt3dadd( 15.5192, -209.901, -33.3556, 0.66 ) }
    dend_13 { pt3dadd( 14.9484, -210.967, -33.4863, 0.29 ) }
    dend_13 { pt3dadd( 14.2336, -212.331, -33.6741, 0.29 ) }
    dend_13 { pt3dadd( 13.8193, -213.123, -33.7672, 0.52 ) }
    dend_13 { pt3dadd( 13.1705, -214.349, -33.9243, 0.52 ) }
    dend_13 { pt3dadd( 12.6293, -215.357, -34.0488, 0.37 ) }
    dend_13 { pt3dadd( 12.1147, -216.264, -34.1503, 0.29 ) }
    dend_13 { pt3dadd( 11.6087, -217.057, -34.2087, 0.29 ) }
    dend_13 { pt3dadd( 11.3827, -217.344, -34.2315, 0.88 ) }
    dend_13 { pt3dadd( 10.841, -217.827, -34.2757, 1.11 ) }
    dend_13 { pt3dadd( 10.1572, -218.25, -34.3093, 0.44 ) }
    dend_13 { pt3dadd( 9.28133, -218.663, -34.3356, 0.37 ) }
    dend_13 { pt3dadd( 8.42831, -218.994, -34.3678, 0.59 ) }
    dend_13 { pt3dadd( 7.65874, -219.248, -34.4082, 0.74 ) }
    dend_13 { pt3dadd( 6.64139, -219.558, -34.4724, 0.44 ) }
    dend_13 { pt3dadd( 5.75836, -219.829, -34.5241, 0.37 ) }
    dend_13 { pt3dadd( 5.17483, -220.03, -34.5519, 0.88 ) }
    dend_13 { pt3dadd( 4.51005, -220.311, -34.5673, 1.11 ) }
    dend_13 { pt3dadd( 4.03873, -220.552, -34.5585, 1.11 ) }
    dend_13 { pt3dadd( 3.56052, -220.812, -34.5234, 1.11 ) }
    dend_13 { pt3dadd( 2.38575, -221.484, -34.3993, 0.29 ) }
    dend_13 { pt3dadd( 1.61303, -221.945, -34.3145, 0.59 ) }
    dend_13 { pt3dadd( 1.10179, -222.259, -34.2544, 0.59 ) }
    dend_13 { pt3dadd( -0.14501, -223.093, -34.0897, 0.29 ) }
    dend_13 { pt3dadd( -0.897732, -223.656, -33.9738, 0.29 ) }
    dend_13 { pt3dadd( -1.48129, -224.151, -33.8762, 0.52 ) }
    dend_13 { pt3dadd( -2.15773, -224.788, -33.7602, 0.52 ) }
    dend_13 { pt3dadd( -2.51371, -225.142, -33.6978, 0.81 ) }
    dend_13 { pt3dadd( -3.11002, -225.836, -33.5947, 0.81 ) }
    dend_13 { pt3dadd( -3.68837, -226.715, -33.497, 0.29 ) }
    dend_13 { pt3dadd( -4.34092, -227.898, -33.3797, 0.29 ) }
    dend_13 { pt3dadd( -4.69414, -228.589, -33.3052, 1.18 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 34/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 21.4831, -178.589, -32.2139, 0.22 ) }
    dend_12 { pt3dadd( 22.5271, -179.139, -32.1197, 0.22 ) }
    dend_12 { pt3dadd( 23.628, -179.718, -32.0204, 0.22 ) }
    dend_12 { pt3dadd( 24.9571, -180.418, -31.9006, 0.22 ) }
    dend_12 { pt3dadd( 25.8719, -180.9, -31.8181, 0.22 ) }
    dend_12 { pt3dadd( 26.8427, -181.411, -31.7305, 0.22 ) }
    dend_12 { pt3dadd( 27.8414, -181.937, -31.6404, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 41/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 217.057, -9.39486, -175.692, 0.74 ) }
    dend_10 { pt3dadd( 220.616, -11.3305, -177.397, 0.74 ) }
    dend_10 { pt3dadd( 221.615, -11.941, -177.693, 0.44 ) }
    dend_10 { pt3dadd( 222.356, -12.3669, -177.842, 0.74 ) }
    dend_10 { pt3dadd( 223.527, -12.9542, -178.013, 0.52 ) }
    dend_10 { pt3dadd( 225.107, -13.6137, -178.171, 0.52 ) }
    dend_10 { pt3dadd( 226.799, -14.2021, -178.354, 0.52 ) }
    dend_10 { pt3dadd( 228.074, -14.5402, -178.325, 0.52 ) }
    dend_10 { pt3dadd( 229.386, -14.7932, -178.326, 0.52 ) }
    dend_10 { pt3dadd( 231.013, -14.9438, -178.467, 0.52 ) }
    dend_10 { pt3dadd( 232.339, -14.901, -178.695, 0.74 ) }
    dend_10 { pt3dadd( 233.688, -14.703, -179.042, 1.03 ) }
    dend_10 { pt3dadd( 234.178, -14.5961, -179.202, 1.4 ) }
    dend_10 { pt3dadd( 234.659, -14.4792, -179.384, 1.4 ) }
    dend_10 { pt3dadd( 236.585, -14.0406, -180.186, 0.44 ) }
    dend_10 { pt3dadd( 237.332, -13.8817, -180.422, 0.74 ) }
    dend_10 { pt3dadd( 238.468, -13.6624, -180.607, 0.74 ) }
    dend_10 { pt3dadd( 239.267, -13.5103, -180.603, 0.96 ) }
    dend_10 { pt3dadd( 240.037, -13.3709, -180.467, 0.96 ) }
    dend_10 { pt3dadd( 241.074, -13.2264, -180.142, 0.96 ) }
    dend_10 { pt3dadd( 243.591, -13.0406, -178.979, 0.66 ) }
    dend_10 { pt3dadd( 244.65, -13.0433, -178.382, 0.81 ) }
    dend_10 { pt3dadd( 245.288, -13.0936, -177.954, 0.81 ) }
    dend_10 { pt3dadd( 246.85, -13.2923, -176.819, 0.52 ) }
    dend_10 { pt3dadd( 248.022, -13.4791, -175.96, 0.52 ) }
    dend_10 { pt3dadd( 249.31, -13.7224, -175.079, 0.52 ) }
    dend_10 { pt3dadd( 250.558, -13.9794, -174.388, 0.52 ) }
    dend_10 { pt3dadd( 252.152, -14.2905, -173.627, 0.44 ) }
    dend_10 { pt3dadd( 253.014, -14.4361, -173.334, 0.96 ) }
    dend_10 { pt3dadd( 253.924, -14.5699, -173.258, 1.11 ) }
    dend_10 { pt3dadd( 255.191, -14.7451, -173.454, 0.44 ) }
    dend_10 { pt3dadd( 256.294, -14.966, -173.902, 0.37 ) }
    dend_10 { pt3dadd( 257.072, -15.2141, -174.398, 0.37 ) }
    dend_10 { pt3dadd( 258.298, -15.7426, -175.442, 0.66 ) }
    dend_10 { pt3dadd( 259.637, -16.4312, -176.801, 0.74 ) }
    dend_10 { pt3dadd( 260.197, -16.741, -177.441, 0.81 ) }
    dend_10 { pt3dadd( 260.994, -17.1925, -178.461, 0.81 ) }
    dend_10 { pt3dadd( 262.01, -17.7424, -179.847, 0.66 ) }
    dend_10 { pt3dadd( 262.943, -18.1737, -181.077, 0.66 ) }
    dend_10 { pt3dadd( 263.84, -18.5252, -182.163, 0.29 ) }
    dend_10 { pt3dadd( 264.472, -18.7467, -182.861, 0.59 ) }
    dend_10 { pt3dadd( 265.155, -18.9553, -183.565, 0.74 ) }
    dend_10 { pt3dadd( 265.803, -19.1329, -184.227, 0.44 ) }
    dend_10 { pt3dadd( 266.658, -19.339, -185.061, 0.37 ) }
    dend_10 { pt3dadd( 267.545, -19.5669, -185.893, 0.37 ) }
    dend_10 { pt3dadd( 268.421, -19.8156, -186.665, 0.59 ) }
    dend_10 { pt3dadd( 269.122, -20.0433, -187.253, 0.59 ) }
    dend_10 { pt3dadd( 270.902, -20.799, -188.95, 0.29 ) }
    dend_10 { pt3dadd( 272.034, -21.4207, -190.153, 0.29 ) }
    dend_10 { pt3dadd( 272.608, -21.8097, -190.83, 0.29 ) }
    dend_10 { pt3dadd( 273.104, -22.18, -191.424, 0.74 ) }
    dend_10 { pt3dadd( 273.596, -22.5795, -192.029, 0.74 ) }
    dend_10 { pt3dadd( 275.557, -24.4665, -194.478, 0.37 ) }
    dend_10 { pt3dadd( 276.142, -25.1645, -195.219, 0.52 ) }
    dend_10 { pt3dadd( 276.578, -25.8109, -195.861, 0.81 ) }
    dend_10 { pt3dadd( 277.028, -26.5469, -196.621, 0.37 ) }
    dend_10 { pt3dadd( 277.418, -27.2028, -197.372, 0.37 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 98/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 217.057, -9.39486, -175.692, 0.88 ) }
    dend_3 { pt3dadd( 217.583, -9.07777, -176.795, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_3 { pt3dadd( 217.797, -9.02716, -177.292, 1.25 ) }
    dend_3 { pt3dadd( 217.988, -9.02801, -177.805, 1.25 ) }
    dend_3 { pt3dadd( 218.226, -9.03805, -178.536, 0.59 ) }
    dend_3 { pt3dadd( 218.864, -9.06489, -180.49, 0.59 ) }
    dend_3 { pt3dadd( 219.504, -9.09186, -182.453, 0.96 ) }
    dend_3 { pt3dadd( 219.834, -9.16968, -183.516, 1.11 ) }
    dend_3 { pt3dadd( 220.385, -9.39158, -185.475, 1.25 ) }
    dend_3 { pt3dadd( 220.698, -9.58335, -186.728, 1.55 ) }
    // Section: dend_84, id: dend_84, parent: dend_82 (entry count 8/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( -81.9518, 126.003, -38.4444, 0.22 ) }
    dend_84 { pt3dadd( -81.8115, 124.668, -37.5141, 0.22 ) }
    dend_84 { pt3dadd( -81.7242, 123.836, -36.9344, 0.22 ) }
    dend_84 { pt3dadd( -81.5285, 121.973, -35.6366, 0.22 ) }
    dend_84 { pt3dadd( -81.4092, 120.836, -34.8448, 0.22 ) }
    dend_84 { pt3dadd( -81.3066, 119.859, -34.1643, 0.22 ) }
    // Section: dend_83, id: dend_83, parent: dend_82 (entry count 14/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( -81.9518, 126.003, -38.4444, 0.22 ) }
    dend_83 { pt3dadd( -82.5932, 126.316, -38.3518, 0.22 ) }
    dend_83 { pt3dadd( -83.1574, 126.608, -38.2714, 0.22 ) }
    dend_83 { pt3dadd( -83.6941, 126.886, -38.1949, 0.22 ) }
    dend_83 { pt3dadd( -84.2075, 127.152, -38.1217, 0.22 ) }
    dend_83 { pt3dadd( -84.9805, 127.552, -38.0116, 0.22 ) }
    dend_83 { pt3dadd( -85.3748, 127.756, -37.9554, 0.37 ) }
    dend_83 { pt3dadd( -85.7707, 127.989, -37.8789, 0.37 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 22/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 176.723, 58.6445, 115.435, 0.29 ) }
    dend_77 { pt3dadd( 180.325, 63.7222, 123.983, 0.29 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 24/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 176.723, 58.6445, 115.435, 0.29 ) }
    dend_76 { pt3dadd( 180.97, 68.184, 124.005, 0.29 ) }
    // Section: dend_74, id: dend_74, parent: dend_72 (entry count 26/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 188.298, 36.7518, 94.6834, 0.29 ) }
    dend_74 { pt3dadd( 190.821, 38.5666, 85.3775, 0.29 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 28/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 188.298, 36.7518, 94.6834, 0.29 ) }
    dend_73 { pt3dadd( 177.967, 34.8069, 97.6764, 0.29 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 30/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 124.515, 64.8593, -24.9847, 0.37 ) }
    dend_61 { pt3dadd( 123.961, 64.8977, -25.6312, 0.37 ) }
    dend_61 { pt3dadd( 123.318, 64.8278, -26.7423, 0.66 ) }
    dend_61 { pt3dadd( 123.023, 64.6743, -27.647, 0.29 ) }
    dend_61 { pt3dadd( 122.811, 64.5139, -28.4814, 0.29 ) }
    dend_61 { pt3dadd( 122.565, 64.3223, -29.5335, 0.29 ) }
    dend_61 { pt3dadd( 122.038, 63.9527, -31.8235, 0.29 ) }
    dend_61 { pt3dadd( 121.812, 63.7465, -32.8883, 0.81 ) }
    dend_61 { pt3dadd( 121.208, 63.0429, -36.1017, 0.44 ) }
    dend_61 { pt3dadd( 121.035, 62.7779, -37.2342, 0.96 ) }
    dend_61 { pt3dadd( 120.926, 62.5665, -38.2135, 1.18 ) }
    dend_61 { pt3dadd( 120.834, 62.318, -39.5033, 0.88 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 42/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 124.515, 64.8593, -24.9847, 0.37 ) }
    dend_60 { pt3dadd( 125.815, 65.1044, -24.9628, 0.37 ) }
    dend_60 { pt3dadd( 127.319, 65.6074, -24.9298, 0.29 ) }
    dend_60 { pt3dadd( 127.872, 65.8387, -24.9132, 0.66 ) }
    dend_60 { pt3dadd( 128.41, 66.0999, -24.8822, 0.66 ) }
    dend_60 { pt3dadd( 129.076, 66.4953, -24.8494, 0.37 ) }
    dend_60 { pt3dadd( 130.0, 67.0834, -24.8178, 0.37 ) }
    dend_60 { pt3dadd( 130.993, 67.8223, -24.7914, 0.81 ) }
    dend_60 { pt3dadd( 131.398, 68.1577, -24.7499, 1.11 ) }
    dend_60 { pt3dadd( 131.962, 68.6454, -24.6567, 1.33 ) }
    dend_60 { pt3dadd( 133.085, 69.7081, -24.388, 0.44 ) }
    dend_60 { pt3dadd( 133.733, 70.3868, -24.1503, 0.52 ) }
    dend_60 { pt3dadd( 134.558, 71.3582, -23.735, 1.03 ) }
    dend_60 { pt3dadd( 135.415, 72.5115, -23.1875, 0.52 ) }
    dend_60 { pt3dadd( 135.808, 73.0936, -22.8758, 0.66 ) }
    dend_60 { pt3dadd( 136.193, 73.7403, -22.4929, 0.66 ) }
    dend_60 { pt3dadd( 136.707, 74.795, -21.809, 0.44 ) }
    dend_60 { pt3dadd( 136.913, 75.3942, -21.4666, 0.29 ) }
    dend_60 { pt3dadd( 137.131, 76.1561, -21.105, 0.44 ) }
    dend_60 { pt3dadd( 137.426, 77.0473, -20.7908, 0.66 ) }
    dend_60 { pt3dadd( 137.733, 77.7962, -20.5753, 0.37 ) }
    dend_60 { pt3dadd( 138.127, 78.6678, -20.3837, 0.37 ) }
    dend_60 { pt3dadd( 138.766, 80.0994, -20.1518, 0.29 ) }
    dend_60 { pt3dadd( 139.16, 81.0245, -20.0063, 0.29 ) }
    dend_60 { pt3dadd( 139.718, 82.5899, -19.7702, 0.29 ) }
    dend_60 { pt3dadd( 140.014, 83.6623, -19.5681, 0.29 ) }
    dend_60 { pt3dadd( 140.162, 84.4945, -19.3629, 1.55 ) }
    dend_60 { pt3dadd( 140.206, 85.18, -19.1473, 1.18 ) }
    dend_60 { pt3dadd( 140.119, 85.8998, -18.8124, 0.96 ) }
    dend_60 { pt3dadd( 139.721, 87.0494, -18.1452, 0.52 ) }
    dend_60 { pt3dadd( 138.953, 88.3574, -17.2466, 0.29 ) }
    dend_60 { pt3dadd( 138.319, 89.1531, -16.6498, 0.29 ) }
    dend_60 { pt3dadd( 137.98, 89.5246, -16.3645, 0.29 ) }
    dend_60 { pt3dadd( 137.031, 90.5385, -15.6263, 0.22 ) }
    dend_60 { pt3dadd( 136.742, 90.8555, -15.423, 0.66 ) }
    dend_60 { pt3dadd( 136.394, 91.2624, -15.1966, 0.66 ) }
    dend_60 { pt3dadd( 135.822, 92.0481, -14.8751, 0.37 ) }
    dend_60 { pt3dadd( 135.421, 92.8504, -14.6142, 0.29 ) }
    dend_60 { pt3dadd( 135.166, 93.6709, -14.4362, 0.22 ) }
    dend_60 { pt3dadd( 135.029, 94.413, -14.2741, 0.22 ) }
    dend_60 { pt3dadd( 134.922, 95.5528, -13.9508, 0.22 ) }
    dend_60 { pt3dadd( 134.926, 96.0661, -13.7804, 0.29 ) }
    dend_60 { pt3dadd( 135.003, 96.8315, -13.4837, 0.29 ) }
    dend_60 { pt3dadd( 135.183, 97.9719, -12.9972, 0.29 ) }
    dend_60 { pt3dadd( 135.512, 99.4498, -12.3624, 0.29 ) }
    dend_60 { pt3dadd( 135.746, 100.367, -11.9517, 0.29 ) }
    dend_60 { pt3dadd( 135.98, 101.103, -11.6119, 0.29 ) }
    dend_60 { pt3dadd( 136.309, 102.064, -11.147, 0.29 ) }
    dend_60 { pt3dadd( 136.87, 103.511, -10.4146, 0.29 ) }
    dend_60 { pt3dadd( 137.373, 104.624, -9.85462, 0.29 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 92/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -18.3869, -205.205, 11.5848, 0.29 ) }
    dend_39 { pt3dadd( -17.5729, -215.161, 10.1242, 0.29 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 94/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -18.3869, -205.205, 11.5848, 0.29 ) }
    dend_38 { pt3dadd( -15.2927, -202.935, 17.6575, 0.29 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 96/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -24.6104, -137.55, -26.8168, 0.37 ) }
    dend_26 { pt3dadd( -24.8864, -138.737, -27.3558, 0.37 ) }
    dend_26 { pt3dadd( -25.0182, -139.305, -27.6133, 0.81 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 99/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -24.6104, -137.55, -26.8168, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_25 { pt3dadd( -26.7574, -137.212, -30.3518, 0.29 ) }
    dend_25 { pt3dadd( -27.4056, -137.114, -31.3625, 0.22 ) }
    dend_25 { pt3dadd( -28.3056, -137.076, -32.6569, 0.22 ) }
    dend_25 { pt3dadd( -28.8651, -137.118, -33.39, 1.47 ) }
    dend_25 { pt3dadd( -29.28, -137.149, -33.9336, 1.69 ) }
    dend_25 { pt3dadd( -29.6764, -137.178, -34.4529, 1.69 ) }
    dend_25 { pt3dadd( -30.9776, -137.235, -35.583, 0.96 ) }
    dend_25 { pt3dadd( -31.8616, -137.384, -36.4703, 0.29 ) }
    dend_25 { pt3dadd( -32.5738, -137.663, -37.2932, 0.29 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 9/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 26.973, -157.202, 9.69226, 0.29 ) }
    dend_21 { pt3dadd( 27.327, -157.9, 8.40268, 0.29 ) }
    dend_21 { pt3dadd( 27.6356, -158.509, 7.27801, 0.44 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 12/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 26.973, -157.202, 9.69226, 0.29 ) }
    dend_20 { pt3dadd( 27.3287, -155.414, 8.83603, 0.29 ) }
    dend_20 { pt3dadd( 27.7174, -154.289, 7.78478, 0.29 ) }
    dend_20 { pt3dadd( 28.0334, -153.784, 6.8305, 0.29 ) }
    dend_20 { pt3dadd( 28.3401, -153.293, 5.90457, 0.52 ) }
    dend_20 { pt3dadd( 29.2075, -151.907, 3.28564, 0.44 ) }
    dend_20 { pt3dadd( 29.4986, -151.442, 2.40688, 0.29 ) }
    dend_20 { pt3dadd( 29.9525, -151.536, 0.871807, 0.29 ) }
    dend_20 { pt3dadd( 30.1111, -151.683, 0.311059, 0.29 ) }
    dend_20 { pt3dadd( 31.8974, -146.827, -7.65622, 0.29 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 22/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -4.69414, -228.589, -33.3052, 0.22 ) }
    dend_15 { pt3dadd( -4.80375, -229.318, -33.2328, 0.22 ) }
    dend_15 { pt3dadd( -4.9295, -230.156, -33.0979, 0.22 ) }
    dend_15 { pt3dadd( -5.06625, -231.246, -32.9077, 0.22 ) }
    dend_15 { pt3dadd( -5.16693, -232.141, -32.7475, 0.22 ) }
    dend_15 { pt3dadd( -5.27272, -233.296, -32.5428, 0.22 ) }
    dend_15 { pt3dadd( -5.35665, -234.211, -32.3804, 0.22 ) }
    dend_15 { pt3dadd( -5.44632, -235.28, -32.2009, 0.22 ) }
    dend_15 { pt3dadd( -5.47751, -235.959, -32.0828, 0.37 ) }
    dend_15 { pt3dadd( -5.47649, -236.193, -32.0336, 0.37 ) }
    dend_15 { pt3dadd( -5.45671, -236.849, -31.872, 0.22 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 33/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -4.69414, -228.589, -33.3052, 1.55 ) }
    dend_14 { pt3dadd( -5.35634, -228.924, -33.6613, 1.55 ) }
    dend_14 { pt3dadd( -5.74144, -229.172, -33.8838, 1.55 ) }
    dend_14 { pt3dadd( -6.50585, -229.688, -34.3239, 0.29 ) }
    dend_14 { pt3dadd( -7.63473, -230.441, -34.9388, 0.44 ) }
    dend_14 { pt3dadd( -7.91127, -230.607, -35.1151, 0.44 ) }
    dend_14 { pt3dadd( -9.04176, -231.174, -35.9176, 0.29 ) }
    dend_14 { pt3dadd( -9.73828, -231.472, -36.4494, 0.29 ) }
    dend_14 { pt3dadd( -10.4305, -231.72, -36.9734, 0.29 ) }
    dend_14 { pt3dadd( -11.2045, -231.932, -37.5318, 0.29 ) }
    dend_14 { pt3dadd( -12.7701, -232.188, -38.5414, 0.29 ) }
    dend_14 { pt3dadd( -14.1684, -232.258, -39.3775, 0.29 ) }
    dend_14 { pt3dadd( -15.0584, -232.19, -39.8706, 0.22 ) }
    dend_14 { pt3dadd( -15.9604, -232.056, -40.3335, 0.22 ) }
    dend_14 { pt3dadd( -16.6718, -231.927, -40.6722, 0.22 ) }
    dend_14 { pt3dadd( -17.4635, -231.767, -41.0056, 0.22 ) }
    dend_14 { pt3dadd( -18.4898, -231.572, -41.3079, 0.22 ) }
    dend_14 { pt3dadd( -19.2656, -231.385, -41.5039, 0.22 ) }
    dend_14 { pt3dadd( -19.7967, -231.207, -41.6554, 0.52 ) }
    dend_14 { pt3dadd( -20.2583, -231.01, -41.8064, 0.52 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 53/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 220.698, -9.58335, -186.728, 0.81 ) }
    dend_9 { pt3dadd( 223.682, -9.37775, -188.753, 0.81 ) }
    dend_9 { pt3dadd( 225.976, -9.32924, -190.191, 0.88 ) }
    dend_9 { pt3dadd( 227.798, -9.38869, -191.356, 0.37 ) }
    dend_9 { pt3dadd( 228.326, -9.40445, -191.688, 0.37 ) }
    dend_9 { pt3dadd( 229.48, -9.4389, -192.414, 0.66 ) }
    dend_9 { pt3dadd( 230.231, -9.46132, -192.886, 0.74 ) }
    dend_9 { pt3dadd( 230.485, -9.47407, -193.091, 0.74 ) }
    dend_9 { pt3dadd( 231.943, -9.64658, -193.904, 0.37 ) }
    dend_9 { pt3dadd( 232.673, -9.79359, -194.303, 0.66 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 63/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 220.698, -9.58335, -186.728, 0.44 ) }
    dend_4 { pt3dadd( 221.751, -8.75664, -188.285, 0.44 ) }
    dend_4 { pt3dadd( 222.495, -8.17283, -189.385, 0.44 ) }
    dend_4 { pt3dadd( 222.906, -7.85022, -189.993, 0.44 ) }
    dend_4 { pt3dadd( 223.714, -7.21637, -191.187, 1.18 ) }
    // Section: dend_65, id: dend_65, parent: dend_61 (entry count 68/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 120.834, 62.318, -39.5033, 0.96 ) }
    dend_65 { pt3dadd( 120.011, 62.5709, -42.4887, 0.96 ) }
    dend_65 { pt3dadd( 118.991, 62.7747, -45.4742, 0.59 ) }
    dend_65 { pt3dadd( 118.74, 62.8285, -46.1874, 0.59 ) }
    dend_65 { pt3dadd( 118.517, 62.8928, -46.8665, 0.37 ) }
    dend_65 { pt3dadd( 118.047, 63.0917, -48.4408, 0.29 ) }
    dend_65 { pt3dadd( 117.758, 63.2454, -49.4547, 0.29 ) }
    dend_65 { pt3dadd( 117.559, 63.4074, -50.1004, 0.66 ) }
    dend_65 { pt3dadd( 117.248, 63.8704, -51.2829, 0.22 ) }
    dend_65 { pt3dadd( 117.109, 64.1506, -52.0065, 0.22 ) }
    dend_65 { pt3dadd( 116.941, 64.4898, -52.9376, 0.88 ) }
    dend_65 { pt3dadd( 116.827, 64.6959, -53.5029, 0.88 ) }
    dend_65 { pt3dadd( 116.435, 65.2351, -55.0424, 0.37 ) }
    dend_65 { pt3dadd( 116.209, 65.4292, -55.7696, 0.96 ) }
    dend_65 { pt3dadd( 115.958, 65.5632, -56.5023, 1.11 ) }
    dend_65 { pt3dadd( 115.49, 65.7554, -57.9141, 0.44 ) }
    dend_65 { pt3dadd( 115.231, 65.862, -58.7821, 0.37 ) }
    dend_65 { pt3dadd( 115.05, 65.952, -59.4707, 0.52 ) }
    dend_65 { pt3dadd( 114.333, 66.3768, -62.4093, 0.37 ) }
    dend_65 { pt3dadd( 114.074, 66.618, -63.8037, 0.96 ) }
    dend_65 { pt3dadd( 113.913, 66.854, -64.8805, 0.96 ) }
    dend_65 { pt3dadd( 113.774, 67.1137, -65.973, 0.52 ) }
    dend_65 { pt3dadd( 113.684, 67.283, -66.7958, 1.33 ) }
    dend_65 { pt3dadd( 113.572, 67.4573, -67.7959, 1.33 ) }
    dend_65 { pt3dadd( 113.006, 68.1309, -71.8999, 0.52 ) }
    dend_65 { pt3dadd( 112.934, 68.2025, -72.3625, 0.52 ) }
    dend_65 { pt3dadd( 112.767, 68.3403, -73.3549, 0.52 ) }
    dend_65 { pt3dadd( 111.986, 68.831, -77.5588, 0.44 ) }
    dend_65 { pt3dadd( 111.576, 69.0456, -79.466, 0.59 ) }
    dend_65 { pt3dadd( 111.3, 69.199, -80.5905, 0.59 ) }
    dend_65 { pt3dadd( 110.975, 69.3952, -81.6352, 0.88 ) }
    dend_65 { pt3dadd( 110.85, 69.4865, -81.9853, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_65 { pt3dadd( 110.579, 69.7241, -82.5637, 1.47 ) }
    dend_65 { pt3dadd( 109.845, 70.4595, -83.6031, 0.29 ) }
    dend_65 { pt3dadd( 109.15, 71.2081, -84.4773, 0.29 ) }
    dend_65 { pt3dadd( 108.862, 71.5196, -84.8151, 0.29 ) }
    dend_65 { pt3dadd( 108.357, 72.0763, -85.3643, 0.29 ) }
    dend_65 { pt3dadd( 108.039, 72.4518, -85.7155, 0.29 ) }
    dend_65 { pt3dadd( 107.285, 73.3983, -86.5477, 0.29 ) }
    dend_65 { pt3dadd( 106.986, 73.7649, -86.8762, 0.29 ) }
    dend_65 { pt3dadd( 106.569, 74.1875, -87.3058, 0.96 ) }
    dend_65 { pt3dadd( 106.297, 74.476, -87.6176, 1.25 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 10/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 120.834, 62.318, -39.5033, 0.15 ) }
    dend_62 { pt3dadd( 121.17, 63.5111, -39.7544, 0.15 ) }
    dend_62 { pt3dadd( 121.354, 64.1648, -39.892, 0.15 ) }
    dend_62 { pt3dadd( 121.502, 64.6901, -40.0025, 0.81 ) }
    dend_62 { pt3dadd( 121.631, 65.1462, -40.0985, 1.03 ) }
    dend_62 { pt3dadd( 121.8, 65.7472, -40.225, 1.03 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 16/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -25.0182, -139.305, -27.6133, 0.52 ) }
    dend_28 { pt3dadd( -24.9044, -140.093, -28.1192, 0.52 ) }
    dend_28 { pt3dadd( -24.7754, -141.362, -28.7888, 0.52 ) }
    dend_28 { pt3dadd( -24.7581, -142.968, -29.5178, 0.37 ) }
    dend_28 { pt3dadd( -24.7626, -143.707, -29.8446, 0.52 ) }
    dend_28 { pt3dadd( -24.7837, -144.699, -30.276, 0.44 ) }
    dend_28 { pt3dadd( -24.8164, -145.801, -30.7707, 0.37 ) }
    dend_28 { pt3dadd( -24.8998, -146.917, -31.2496, 0.29 ) }
    dend_28 { pt3dadd( -25.0548, -148.091, -31.707, 0.29 ) }
    dend_28 { pt3dadd( -25.265, -149.616, -32.2439, 1.03 ) }
    dend_28 { pt3dadd( -25.3255, -150.044, -32.4005, 1.18 ) }
    dend_28 { pt3dadd( -25.5108, -151.265, -32.8978, 0.88 ) }
    dend_28 { pt3dadd( -25.6295, -152.141, -33.2697, 0.44 ) }
    dend_28 { pt3dadd( -25.7167, -153.281, -33.7312, 0.37 ) }
    dend_28 { pt3dadd( -25.6917, -153.951, -33.9591, 0.59 ) }
    dend_28 { pt3dadd( -25.6077, -154.579, -34.1165, 0.44 ) }
    dend_28 { pt3dadd( -25.2989, -155.856, -34.3371, 0.44 ) }
    dend_28 { pt3dadd( -25.0022, -156.762, -34.4292, 0.44 ) }
    dend_28 { pt3dadd( -24.5002, -158.149, -34.5207, 0.52 ) }
    dend_28 { pt3dadd( -24.0503, -159.438, -34.6009, 0.66 ) }
    dend_28 { pt3dadd( -23.7799, -160.501, -34.6451, 0.88 ) }
    dend_28 { pt3dadd( -23.7022, -161.239, -34.6583, 0.88 ) }
    dend_28 { pt3dadd( -23.8274, -162.358, -34.6533, 0.52 ) }
    dend_28 { pt3dadd( -24.2113, -163.319, -34.6844, 0.29 ) }
    dend_28 { pt3dadd( -24.9571, -164.458, -34.7679, 0.29 ) }
    dend_28 { pt3dadd( -25.9383, -165.751, -34.974, 0.29 ) }
    dend_28 { pt3dadd( -26.6012, -166.607, -35.2014, 0.96 ) }
    dend_28 { pt3dadd( -26.9795, -167.182, -35.4077, 1.18 ) }
    dend_28 { pt3dadd( -27.3242, -167.823, -35.6472, 1.18 ) }
    dend_28 { pt3dadd( -27.7498, -169.036, -36.0929, 0.59 ) }
    dend_28 { pt3dadd( -28.001, -170.317, -36.4627, 0.52 ) }
    dend_28 { pt3dadd( -28.145, -171.566, -36.7433, 0.52 ) }
    dend_28 { pt3dadd( -28.2472, -173.182, -37.0832, 0.66 ) }
    dend_28 { pt3dadd( -28.2905, -174.253, -37.2774, 0.66 ) }
    dend_28 { pt3dadd( -28.3117, -175.405, -37.4357, 0.81 ) }
    dend_28 { pt3dadd( -28.3262, -177.07, -37.5031, 0.81 ) }
    dend_28 { pt3dadd( -28.4091, -178.259, -37.3437, 0.81 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 53/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -25.0182, -139.305, -27.6133, 0.37 ) }
    dend_27 { pt3dadd( -25.802, -139.201, -27.2319, 0.37 ) }
    dend_27 { pt3dadd( -26.8507, -139.114, -26.7812, 0.37 ) }
    dend_27 { pt3dadd( -27.3552, -139.074, -26.5899, 0.37 ) }
    dend_27 { pt3dadd( -28.4816, -138.971, -26.2154, 0.29 ) }
    dend_27 { pt3dadd( -29.1551, -138.893, -26.0161, 0.29 ) }
    dend_27 { pt3dadd( -29.9536, -138.8, -25.7798, 0.29 ) }
    dend_27 { pt3dadd( -30.7237, -138.729, -25.5467, 0.37 ) }
    dend_27 { pt3dadd( -31.1114, -138.711, -25.4699, 0.37 ) }
    dend_27 { pt3dadd( -31.4973, -138.705, -25.4319, 0.29 ) }
    dend_27 { pt3dadd( -31.922, -138.682, -25.4578, 0.22 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 64/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 27.6356, -158.509, 7.27801, 0.22 ) }
    dend_23 { pt3dadd( 26.908, -159.366, 7.12374, 0.22 ) }
    dend_23 { pt3dadd( 25.8596, -160.602, 6.90144, 0.22 ) }
    dend_23 { pt3dadd( 25.2637, -161.304, 6.77508, 0.29 ) }
    dend_23 { pt3dadd( 24.9389, -161.687, 6.70621, 0.29 ) }
    dend_23 { pt3dadd( 24.0973, -162.678, 6.52775, 0.22 ) }
    dend_23 { pt3dadd( 23.5473, -163.327, 6.41114, 0.22 ) }
    dend_23 { pt3dadd( 19.078, -171.628, 4.64292, 0.22 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 72/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 27.6356, -158.509, 7.27801, 0.37 ) }
    dend_22 { pt3dadd( 27.2979, -159.77, 7.58792, 0.37 ) }
    dend_22 { pt3dadd( 26.9735, -160.896, 7.66065, 0.96 ) }
    dend_22 { pt3dadd( 26.5577, -162.279, 7.53073, 0.59 ) }
    dend_22 { pt3dadd( 26.2676, -163.321, 7.29623, 0.59 ) }
    dend_22 { pt3dadd( 25.9601, -164.426, 7.04762, 0.22 ) }
    dend_22 { pt3dadd( 25.6671, -165.479, 6.81081, 0.22 ) }
    dend_22 { pt3dadd( 25.3121, -166.592, 6.396, 0.22 ) }
    dend_22 { pt3dadd( 25.0303, -167.517, 5.87429, 0.22 ) }
    dend_22 { pt3dadd( 24.7295, -168.45, 5.145, 0.22 ) }
    dend_22 { pt3dadd( 22.8036, -178.366, 4.76193, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 83/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 223.714, -7.21637, -191.187, 0.37 ) }
    dend_6 { pt3dadd( 225.196, -5.78544, -197.159, 0.37 ) }
    dend_6 { pt3dadd( 225.445, -5.51314, -198.166, 0.66 ) }
    dend_6 { pt3dadd( 225.628, -5.25947, -198.941, 0.66 ) }
    dend_6 { pt3dadd( 225.713, -5.12311, -199.308, 0.96 ) }
    dend_6 { pt3dadd( 225.943, -4.71987, -200.223, 1.11 ) }
    dend_6 { pt3dadd( 226.236, -4.19219, -201.261, 1.11 ) }
    dend_6 { pt3dadd( 226.756, -3.2714, -202.36, 0.81 ) }
    dend_6 { pt3dadd( 227.195, -2.50522, -203.099, 1.4 ) }
    dend_6 { pt3dadd( 227.349, -2.24198, -203.302, 1.4 ) }
    dend_6 { pt3dadd( 227.982, -1.22641, -203.891, 0.37 ) }
    dend_6 { pt3dadd( 228.461, -0.523917, -204.141, 0.37 ) }
    dend_6 { pt3dadd( 229.078, 0.279468, -204.258, 0.37 ) }
    dend_6 { pt3dadd( 229.589, 0.898513, -204.237, 0.66 ) }
    dend_6 { pt3dadd( 229.998, 1.40134, -204.17, 0.66 ) }
    dend_6 { pt3dadd( 230.499, 2.14938, -204.065, 0.29 ) }
    dend_6 { pt3dadd( 230.807, 2.75467, -203.971, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_6 { pt3dadd( 230.987, 3.21369, -203.908, 0.52 ) }
    dend_6 { pt3dadd( 231.257, 4.00883, -203.84, 0.29 ) }
    dend_6 { pt3dadd( 231.542, 4.84259, -203.809, 1.03 ) }
    dend_6 { pt3dadd( 231.998, 6.10185, -203.848, 0.66 ) }
    dend_6 { pt3dadd( 232.304, 6.90676, -203.905, 0.44 ) }
    dend_6 { pt3dadd( 232.418, 7.19351, -203.93, 0.66 ) }
    dend_6 { pt3dadd( 232.773, 8.08176, -204.022, 0.37 ) }
    dend_6 { pt3dadd( 232.965, 8.52301, -204.058, 0.52 ) }
    dend_6 { pt3dadd( 233.37, 9.35393, -204.087, 0.37 ) }
    dend_6 { pt3dadd( 233.68, 9.89917, -204.054, 0.37 ) }
    dend_6 { pt3dadd( 234.017, 10.4756, -204.012, 0.37 ) }
    dend_6 { pt3dadd( 234.355, 11.1347, -203.955, 0.37 ) }
    dend_6 { pt3dadd( 234.64, 11.7785, -203.881, 0.96 ) }
    dend_6 { pt3dadd( 234.76, 12.0485, -203.847, 0.96 ) }
    dend_6 { pt3dadd( 235.273, 13.1113, -203.69, 0.29 ) }
    dend_6 { pt3dadd( 235.709, 13.9689, -203.572, 0.29 ) }
    dend_6 { pt3dadd( 236.133, 14.7625, -203.475, 0.29 ) }
    dend_6 { pt3dadd( 236.493, 15.4275, -203.403, 1.11 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 18/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 223.714, -7.21637, -191.187, 0.52 ) }
    dend_5 { pt3dadd( 223.67, -2.86142, -193.042, 0.52 ) }
    dend_5 { pt3dadd( 223.663, -2.50161, -193.177, 0.52 ) }
    dend_5 { pt3dadd( 223.603, -0.805682, -193.745, 0.37 ) }
    dend_5 { pt3dadd( 223.586, -0.33101, -193.904, 0.29 ) }
    dend_5 { pt3dadd( 223.535, 1.10496, -194.385, 0.29 ) }
    dend_5 { pt3dadd( 223.491, 2.32574, -194.794, 0.29 ) }
    dend_5 { pt3dadd( 223.46, 3.49627, -194.848, 0.29 ) }
    dend_5 { pt3dadd( 223.441, 4.00329, -194.882, 0.52 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 27/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 106.297, 74.476, -87.6176, 0.29 ) }
    dend_67 { pt3dadd( 105.5, 76.6226, -89.0071, 0.29 ) }
    dend_67 { pt3dadd( 105.215, 77.1329, -89.5383, 0.29 ) }
    dend_67 { pt3dadd( 104.8, 77.7669, -90.3467, 0.29 ) }
    dend_67 { pt3dadd( 104.066, 78.9043, -91.8172, 0.29 ) }
    dend_67 { pt3dadd( 103.792, 79.3566, -92.36, 0.44 ) }
    dend_67 { pt3dadd( 103.42, 79.9707, -93.097, 0.44 ) }
    dend_67 { pt3dadd( 102.237, 81.6673, -95.3079, 0.29 ) }
    dend_67 { pt3dadd( 101.67, 82.4258, -96.4075, 0.29 ) }
    dend_67 { pt3dadd( 101.352, 82.8475, -97.0814, 0.29 ) }
    dend_67 { pt3dadd( 100.873, 83.4857, -98.1179, 0.22 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 38/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 106.297, 74.476, -87.6176, 0.22 ) }
    dend_66 { pt3dadd( 105.049, 73.5642, -86.9537, 0.22 ) }
    dend_66 { pt3dadd( 104.035, 72.9038, -86.3829, 0.22 ) }
    dend_66 { pt3dadd( 102.795, 72.1732, -85.6149, 1.4 ) }
    dend_66 { pt3dadd( 101.404, 71.3538, -84.7534, 0.22 ) }
    dend_66 { pt3dadd( 99.8516, 70.4395, -83.7922, 1.84 ) }
    dend_66 { pt3dadd( 98.4923, 69.6387, -82.9503, 0.22 ) }
    dend_66 { pt3dadd( 97.3498, 69.0151, -82.1182, 0.22 ) }
    dend_66 { pt3dadd( 96.2988, 68.4843, -81.2896, 0.22 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 47/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 121.8, 65.7472, -40.225, 0.74 ) }
    dend_64 { pt3dadd( 121.356, 66.7294, -40.3015, 0.74 ) }
    dend_64 { pt3dadd( 120.578, 68.2801, -40.3946, 0.22 ) }
    dend_64 { pt3dadd( 120.037, 69.1868, -40.4624, 0.22 ) }
    dend_64 { pt3dadd( 118.848, 70.9236, -40.5899, 0.22 ) }
    dend_64 { pt3dadd( 117.73, 72.4572, -40.6113, 1.33 ) }
    dend_64 { pt3dadd( 117.175, 73.2234, -40.5739, 1.33 ) }
    dend_64 { pt3dadd( 115.996, 74.7739, -40.37, 0.22 ) }
    dend_64 { pt3dadd( 115.106, 75.854, -40.1489, 0.22 ) }
    dend_64 { pt3dadd( 114.509, 76.5159, -39.9876, 0.22 ) }
    dend_64 { pt3dadd( 113.15, 77.9109, -39.6817, 0.22 ) }
    dend_64 { pt3dadd( 112.162, 78.9786, -39.3653, 0.22 ) }
    dend_64 { pt3dadd( 111.597, 79.7212, -39.1424, 0.37 ) }
    dend_64 { pt3dadd( 111.117, 80.5318, -38.9097, 0.37 ) }
    dend_64 { pt3dadd( 110.696, 81.5173, -38.6223, 0.37 ) }
    dend_64 { pt3dadd( 110.445, 82.2989, -38.4343, 0.15 ) }
    dend_64 { pt3dadd( 109.751, 84.4477, -38.075, 0.22 ) }
    dend_64 { pt3dadd( 109.169, 86.2099, -37.8515, 0.22 ) }
    dend_64 { pt3dadd( 108.737, 87.4423, -37.6825, 0.22 ) }
    dend_64 { pt3dadd( 107.842, 89.6285, -37.4338, 0.22 ) }
    dend_64 { pt3dadd( 107.107, 91.1092, -37.264, 0.22 ) }
    dend_64 { pt3dadd( 106.07, 92.9351, -37.0315, 0.22 ) }
    dend_64 { pt3dadd( 105.656, 93.5853, -36.9493, 0.74 ) }
    dend_64 { pt3dadd( 103.832, 96.171, -36.5695, 0.29 ) }
    dend_64 { pt3dadd( 102.689, 97.6834, -36.3599, 0.29 ) }
    dend_64 { pt3dadd( 101.562, 99.1537, -36.1863, 0.29 ) }
    dend_64 { pt3dadd( 100.759, 100.245, -35.9935, 0.29 ) }
    dend_64 { pt3dadd( 99.8639, 101.614, -35.6282, 0.52 ) }
    dend_64 { pt3dadd( 99.0806, 102.875, -35.2223, 0.37 ) }
    dend_64 { pt3dadd( 98.1021, 104.556, -34.6339, 0.29 ) }
    dend_64 { pt3dadd( 97.8695, 104.973, -34.4753, 0.37 ) }
    dend_64 { pt3dadd( 96.9647, 106.6, -33.8543, 0.37 ) }
    dend_64 { pt3dadd( 95.7138, 108.743, -33.0114, 0.37 ) }
    dend_64 { pt3dadd( 94.7113, 110.378, -32.3262, 0.22 ) }
    dend_64 { pt3dadd( 94.1694, 111.278, -31.9156, 0.22 ) }
    dend_64 { pt3dadd( 93.5833, 112.244, -31.466, 0.74 ) }
    dend_64 { pt3dadd( 93.2448, 112.775, -31.238, 0.88 ) }
    dend_64 { pt3dadd( 92.1486, 114.425, -30.6856, 0.59 ) }
    dend_64 { pt3dadd( 90.7907, 116.293, -30.2871, 0.81 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 86/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 121.8, 65.7472, -40.225, 0.29 ) }
    dend_63 { pt3dadd( 123.294, 66.2365, -40.7342, 0.29 ) }
    dend_63 { pt3dadd( 124.746, 66.4373, -41.2848, 0.29 ) }
    dend_63 { pt3dadd( 126.235, 66.5196, -41.8659, 1.03 ) }
    dend_63 { pt3dadd( 126.948, 66.5312, -42.1516, 1.03 ) }
    dend_63 { pt3dadd( 128.72, 66.5266, -42.7883, 0.44 ) }
    dend_63 { pt3dadd( 130.06, 66.5251, -43.2154, 0.29 ) }
    dend_63 { pt3dadd( 131.861, 66.4268, -43.712, 0.96 ) }
    dend_63 { pt3dadd( 132.467, 66.384, -43.8523, 0.96 ) }
    dend_63 { pt3dadd( 134.222, 66.3203, -44.1804, 0.22 ) }
    dend_63 { pt3dadd( 135.543, 66.3462, -44.3997, 0.22 ) }
    dend_63 { pt3dadd( 136.864, 66.4996, -44.5585, 0.22 ) }
    dend_63 { pt3dadd( 138.268, 66.7718, -44.7155, 0.22 ) }
    dend_63 { pt3dadd( 139.858, 67.2071, -44.906, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_63 { pt3dadd( 140.838, 67.5352, -45.0451, 0.52 ) }
    dend_63 { pt3dadd( 141.62, 67.8854, -45.1876, 0.29 ) }
    dend_63 { pt3dadd( 142.562, 68.4688, -45.4255, 1.03 ) }
    dend_63 { pt3dadd( 143.126, 68.9902, -45.5806, 1.03 ) }
    dend_63 { pt3dadd( 143.558, 69.6124, -45.7375, 0.88 ) }
    dend_63 { pt3dadd( 143.94, 70.3355, -45.8746, 0.66 ) }
    dend_63 { pt3dadd( 144.362, 71.3306, -46.0283, 0.37 ) }
    dend_63 { pt3dadd( 144.725, 72.4481, -46.1599, 0.59 ) }
    dend_63 { pt3dadd( 145.074, 73.8891, -46.2913, 0.29 ) }
    dend_63 { pt3dadd( 145.331, 75.2033, -46.3505, 0.29 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 10/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -28.4091, -178.259, -37.3437, 0.74 ) }
    dend_30 { pt3dadd( -28.9989, -179.136, -37.4389, 0.74 ) }
    dend_30 { pt3dadd( -29.985, -180.427, -37.6635, 0.66 ) }
    dend_30 { pt3dadd( -30.7367, -181.271, -37.9056, 0.52 ) }
    dend_30 { pt3dadd( -31.7571, -182.292, -38.3294, 0.37 ) }
    dend_30 { pt3dadd( -32.3238, -182.851, -38.5937, 0.74 ) }
    dend_30 { pt3dadd( -32.8069, -183.327, -38.7999, 1.03 ) }
    dend_30 { pt3dadd( -33.469, -183.955, -39.0852, 0.74 ) }
    dend_30 { pt3dadd( -34.4101, -184.863, -39.4934, 0.52 ) }
    dend_30 { pt3dadd( -35.3529, -185.882, -39.8772, 0.52 ) }
    dend_30 { pt3dadd( -35.9777, -186.706, -40.1125, 0.66 ) }
    dend_30 { pt3dadd( -36.8431, -188.155, -40.3964, 0.88 ) }
    dend_30 { pt3dadd( -37.0892, -188.675, -40.4682, 1.18 ) }
    dend_30 { pt3dadd( -37.4064, -189.516, -40.5437, 0.81 ) }
    dend_30 { pt3dadd( -37.7561, -190.718, -40.6075, 0.52 ) }
    dend_30 { pt3dadd( -37.986, -191.739, -40.6833, 0.52 ) }
    dend_30 { pt3dadd( -38.2236, -192.958, -40.8386, 0.52 ) }
    dend_30 { pt3dadd( -38.319, -193.541, -40.9558, 0.52 ) }
    dend_30 { pt3dadd( -38.511, -194.689, -41.2155, 0.52 ) }
    dend_30 { pt3dadd( -38.7175, -195.824, -41.5043, 0.52 ) }
    dend_30 { pt3dadd( -38.8921, -196.78, -41.788, 1.03 ) }
    dend_30 { pt3dadd( -39.0304, -197.476, -42.0158, 1.25 ) }
    dend_30 { pt3dadd( -39.2351, -198.34, -42.356, 0.66 ) }
    dend_30 { pt3dadd( -39.4698, -199.181, -42.7589, 0.29 ) }
    dend_30 { pt3dadd( -39.8204, -200.005, -43.3569, 0.29 ) }
    dend_30 { pt3dadd( -40.0802, -199.892, -43.7592, 0.52 ) }
    dend_30 { pt3dadd( -40.7492, -199.136, -44.7735, 0.29 ) }
    dend_30 { pt3dadd( -41.2616, -198.425, -45.565, 0.29 ) }
    dend_30 { pt3dadd( -41.7949, -197.547, -46.3961, 0.22 ) }
    dend_30 { pt3dadd( -41.8919, -197.359, -46.5529, 0.52 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 40/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -28.4091, -178.259, -37.3437, 0.22 ) }
    dend_29 { pt3dadd( -28.2088, -179.793, -37.6876, 0.22 ) }
    dend_29 { pt3dadd( -28.121, -180.407, -37.8232, 0.22 ) }
    dend_29 { pt3dadd( -27.9528, -181.629, -38.0432, 0.22 ) }
    dend_29 { pt3dadd( -27.7808, -183.009, -38.2516, 0.22 ) }
    dend_29 { pt3dadd( -27.6414, -184.128, -38.4205, 0.22 ) }
    dend_29 { pt3dadd( -27.3707, -186.3, -38.7484, 0.22 ) }
    dend_29 { pt3dadd( -27.2888, -187.228, -38.9035, 0.22 ) }
    dend_29 { pt3dadd( -27.0925, -189.064, -39.2, 0.22 ) }
    dend_29 { pt3dadd( -26.9485, -190.088, -39.3284, 0.22 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 50/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 236.493, 15.4275, -203.403, 0.29 ) }
    dend_8 { pt3dadd( 237.472, 14.5967, -203.942, 0.29 ) }
    dend_8 { pt3dadd( 238.035, 14.1188, -204.252, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 53/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 236.493, 15.4275, -203.403, 0.37 ) }
    dend_7 { pt3dadd( 237.31, 16.0397, -202.896, 0.37 ) }
    dend_7 { pt3dadd( 238.273, 16.7606, -202.3, 0.37 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
    ModelViewParmSubset_2 = new SectionList()
    dend_78 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_78 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_0 ModelViewParmSubset_3.append()
    dend_88 ModelViewParmSubset_3.append()
    dend_79 ModelViewParmSubset_3.append()
    dend_69 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_85 ModelViewParmSubset_3.append()
    dend_80 ModelViewParmSubset_3.append()
    dend_71 ModelViewParmSubset_3.append()
    dend_70 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_87 ModelViewParmSubset_3.append()
    dend_86 ModelViewParmSubset_3.append()
    dend_82 ModelViewParmSubset_3.append()
    dend_81 ModelViewParmSubset_3.append()
    dend_75 ModelViewParmSubset_3.append()
    dend_72 ModelViewParmSubset_3.append()
    dend_68 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_84 ModelViewParmSubset_3.append()
    dend_83 ModelViewParmSubset_3.append()
    dend_77 ModelViewParmSubset_3.append()
    dend_76 ModelViewParmSubset_3.append()
    dend_74 ModelViewParmSubset_3.append()
    dend_73 ModelViewParmSubset_3.append()
    dend_61 ModelViewParmSubset_3.append()
    dend_60 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_65 ModelViewParmSubset_3.append()
    dend_62 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_67 ModelViewParmSubset_3.append()
    dend_66 ModelViewParmSubset_3.append()
    dend_64 ModelViewParmSubset_3.append()
    dend_63 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_78 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_50 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_41 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_32 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_88 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_69 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_54 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_52 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_51 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_46 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_45 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_43 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_42 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_34 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_33 OneSecGrp_SectionRef_22.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_17 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_71 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_70 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_48 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_40 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_16 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_11 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_2 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_68 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_59 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_37 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_24 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_19 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_13 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_10 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_60 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_65 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_28 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_64 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_49 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_1 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_53 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_44 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_31 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_18 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_58 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_79 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_55 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_85 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_56 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_86 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_57 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_47 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_80 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_81 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_87 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_26 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_27 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_61 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_35 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_82 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_25 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_62 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_83 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_36 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_84 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_21 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_23 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_12 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_20 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_22 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_63 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_29 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_38 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_72 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_39 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_30 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_66 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_67 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_74 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_73 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_75 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_77 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_76 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_15 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_14 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_3 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_4 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_9 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_5 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_6 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_8 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_7 OneSecGrp_SectionRef_92.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_75, dend_75, dend_75, dend_75, dend_72, dend_72, dend_72, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_56, dend_56, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_84, dend_84, dend_84, dend_84, dend_84, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_39, dend_38, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_8, dend_8, dend_7, dend_7]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_78 all.append()
    dend_78 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_74 all.append()
    dend_73 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_78 nseg = 5
    dend_50 nseg = 9
    dend_41 nseg = 5
    dend_32 nseg = 5
    dend_88 nseg = 5
    dend_69 nseg = 7
    dend_54 nseg = 3
    dend_52 nseg = 3
    dend_51 nseg = 3
    dend_46 nseg = 5
    dend_45 nseg = 7
    dend_43 nseg = 5
    dend_42 nseg = 3
    dend_34 nseg = 3
    dend_33 nseg = 3
    dend_17 nseg = 3
    dend_71 nseg = 3
    dend_70 nseg = 3
    dend_48 nseg = 3
    dend_40 nseg = 3
    dend_16 nseg = 5
    dend_11 nseg = 9
    dend_2 nseg = 15
    dend_68 nseg = 3
    dend_59 nseg = 3
    dend_37 nseg = 3
    dend_24 nseg = 3
    dend_19 nseg = 5
    dend_13 nseg = 3
    dend_10 nseg = 3
    dend_60 nseg = 3
    dend_65 nseg = 3
    dend_28 nseg = 3
    dend_64 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L5_ChC_13b6218d56_0_0


