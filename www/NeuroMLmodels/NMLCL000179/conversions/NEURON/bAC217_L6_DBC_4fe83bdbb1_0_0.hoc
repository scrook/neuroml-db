// Cell: bAC217_L6_DBC_4fe83bdbb1_0_0
/*
{
  "id" : "bAC217_L6_DBC_4fe83bdbb1_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.46438, -10.9587, 0.660551, 2.48146", "-1.32683, -9.87667, 0.597834, 3.97794", "-1.18928, -8.79467, 0.535117, 5.03907", "-1.05173, -7.71267, 0.4724, 6.13889", "-0.914177, -6.63067, 0.409682, 7.21767", "-0.776625, -5.54866, 0.346965, 8.03623", "-0.639073, -4.46666, 0.284248, 8.69756", "-0.501522, -3.38466, 0.221531, 9.05897", "-0.36397, -2.30266, 0.158814, 9.32273", "-0.226418, -1.22066, 0.0960968, 9.64559", "-0.0888665, -0.138661, 0.0333797, 9.88524", "0.0486852, 0.943339, -0.0293375, 9.94228", "0.186237, 2.02534, -0.0920546, 10.0768", "0.323789, 3.10734, -0.154772, 10.303", "0.46134, 4.18934, -0.217489, 10.477", "0.598892, 5.27134, -0.280206, 10.0133", "0.736444, 6.35334, -0.342923, 9.03357", "0.873996, 7.43534, -0.40564, 7.79644", "1.01155, 8.51734, -0.468357, 6.40893", "1.1491, 9.59934, -0.531074, 4.35077", "1.28665, 10.6813, -0.593792, 2.55388" ]
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "2.53825, -1.0616, -8.8572, 1.11", "2.57093, -1.6661, -8.93003, 1.11", "2.62673, -2.79559, -9.09871, 1.11", "2.66174, -3.4334, -9.21561, 1.03", "2.70689, -4.27401, -9.37752, 1.03", "2.74599, -5.3025, -9.6873, 1.03", "2.74672, -6.13544, -10.0093, 1.18", "2.72034, -6.94026, -10.3863, 1.18", "2.66556, -7.75485, -10.8498, 1.4", "2.59792, -8.22501, -11.2296, 1.55", "2.28413, -9.75097, -12.7635, 1.25", "2.09444, -10.5278, -13.7648, 1.25", "2.01356, -10.8601, -14.292, 1.47", "1.88253, -11.6066, -15.6033, 1.69", "1.74707, -13.1013, -18.3179, 1.69", "1.74721, -13.1212, -18.3537, 1.69", "1.88605, -14.4123, -20.5327, 1.33", "2.03949, -15.2842, -21.8749, 1.11", "2.19654, -16.1018, -22.9651, 1.25", "2.34549, -16.8997, -23.7626, 1.4", "2.40927, -17.445, -24.1229, 1.4", "2.40976, -18.1375, -24.5033, 1.33", "2.26955, -19.0724, -24.8592, 1.18", "2.05708, -19.7793, -25.126, 1.18", "1.70494, -20.6209, -25.5067, 1.33", "1.23101, -21.6919, -26.0651, 1.03", "0.905421, -22.496, -26.5057, 1.25", "0.736848, -23.0002, -26.7855, 1.62", "0.433497, -24.1635, -27.4211, 1.62", "0.284229, -24.9982, -27.8431, 1.03", "0.161082, -26.3843, -28.4443, 1.03", "0.147091, -27.4361, -28.8162, 1.18", "0.189886, -28.4212, -29.1107, 1.18", "0.218181, -28.7644, -29.2017, 1.55", "0.27524, -29.3445, -29.3216, 1.55", "0.343505, -30.138, -29.4896, 1.69", "0.392543, -30.9586, -29.7219, 1.84", "0.419093, -31.7062, -30.0065, 1.47", "0.443488, -32.7285, -30.447, 1.18", "0.443747, -33.608, -30.8649, 1.18", "0.423388, -34.6113, -31.3852, 1.18", "0.421165, -35.7269, -31.9164, 1.33", "0.470172, -36.6538, -32.2606, 1.03", "0.541899, -37.3637, -32.5075, 1.03", "0.646455, -38.1073, -32.7321, 1.03", "0.785734, -39.0424, -32.9949, 1.33", "1.02877, -40.9575, -33.5292, 1.33", "1.18732, -42.6398, -34.0514, 1.33", "1.26613, -43.838, -34.4791, 1.18", "1.30659, -44.521, -34.7577, 1.4", "1.39428, -45.7742, -35.3777, 1.4", "1.48916, -47.0852, -36.1497, 1.33", "1.57679, -48.2419, -36.9807, 1.18", "1.58136, -48.2852, -37.0144, 1.18", "1.69381, -49.0537, -37.6083, 1.47", "1.91189, -50.1549, -38.4837, 1.84", "2.0976, -50.8253, -39.0017, 1.62", "2.37984, -51.6314, -39.6006, 1.55", "2.72647, -52.5718, -40.295, 1.33", "2.99573, -53.3864, -40.9155, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000180399916434,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-0.511751, -10.1116, 0.0228061, 3.68", "-0.491166, -10.1873, 0.0228061, 3.68", "-0.323693, -10.8036, 0.0228061, 3.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000180399916434
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.07825, 10.7084, 0.142806, 2.43", "1.50251, 11.595, 0.142806, 2.43", "2.30278, 13.2467, 0.142806, 2.14", "2.86073, 14.4354, 0.148366, 1.92", "3.06929, 14.893, 0.151787, 1.92", "3.37525, 15.5465, 0.157603, 1.92", "3.58143, 15.9733, 0.161587, 1.92", "3.90745, 16.6128, 0.16843, 1.92", "4.17094, 17.1137, 0.173938, 1.99", "4.56701, 17.8652, 0.18123, 1.99", "5.14965, 19.0313, 0.190613, 1.99", "5.62813, 20.0013, 0.197009, 1.99", "6.13361, 21.0743, 0.202181, 1.99", "6.68783, 22.3484, 0.181776, 2.21", "7.1556, 23.5742, 0.140286, 2.21", "7.45054, 24.4938, 0.082295, 1.99", "7.55184, 24.8945, 0.0402923, 1.99", "7.73332, 25.7903, -0.0792308, 1.99", "7.9082, 26.9397, -0.251344, 2.06", "8.06887, 28.3774, -0.504678, 1.92", "8.18937, 29.7672, -0.792206, 1.92", "8.30985, 31.3193, -1.1725, 1.99", "8.36373, 32.1338, -1.40408, 2.14", "8.44979, 33.4972, -1.81109, 2.14", "8.54973, 35.1772, -2.33057, 1.99", "8.5962, 36.2007, -2.68042, 2.06", "8.61553, 37.4245, -3.12313, 2.43", "8.6174, 38.3743, -3.50594, 2.65" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000180399916434
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.28665, 10.6813, -0.593792, 0.551478", "3.17833, 25.5615, -0.593792, 0.551478", "5.07001, 40.4418, -0.593792, 0.551478" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_98",
    "id" : "dend_98",
    "points3d" : [ "2.99573, -53.3864, -40.9155, 0.52", "2.11017, -54.4999, -42.1519, 0.52", "1.52875, -55.4266, -43.1133, 0.52", "1.22877, -56.1608, -43.8457, 0.52", "0.975841, -57.2744, -44.9405, 0.52", "0.924664, -57.8315, -45.494, 1.11", "0.911121, -58.5109, -46.1362, 1.4", "1.01495, -59.0393, -46.5894, 1.69", "1.34684, -60.0393, -47.3871, 1.62", "1.69277, -60.8589, -48.0193, 1.4", "2.20136, -61.9534, -48.8195, 0.88", "2.52128, -62.6438, -49.3205, 0.66", "2.96598, -63.6412, -49.9896, 0.66", "3.22377, -64.2428, -50.3902, 0.88", "3.51365, -64.9553, -50.8264, 1.11", "3.77705, -65.5524, -51.1585, 1.18", "4.0642, -66.1265, -51.4528, 1.18", "4.30772, -66.563, -51.7065, 1.18" ],
    "parent" : "dend_92",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "2.99573, -53.3864, -40.9155, 0.66", "2.65555, -54.4713, -40.4363, 0.66", "2.29874, -55.2498, -40.0099, 0.52", "2.26721, -55.3059, -39.9794, 0.52", "1.65847, -56.2732, -39.4452, 0.74", "1.059, -57.2036, -38.9717, 0.88", "0.604716, -57.9034, -38.6019, 0.74", "-0.0335281, -58.836, -38.0403, 0.37", "-0.480723, -59.5243, -37.591, 1.18", "-0.921294, -60.3237, -37.0558, 1.4", "-1.34403, -61.2363, -36.4328, 0.96", "-1.64064, -62.2049, -35.6544, 0.74", "-1.78629, -63.1768, -34.7422, 0.29", "-1.80123, -64.0822, -33.8358, 0.74", "-1.74976, -64.6867, -33.2059, 0.96", "-1.74343, -64.7294, -33.1636, 0.96", "-1.47509, -66.4214, -31.6541, 0.59", "-1.39294, -67.1945, -31.1294, 1.11", "-1.37291, -67.8312, -30.795, 1.25", "-1.4311, -68.4813, -30.555, 1.18", "-1.65766, -69.6348, -30.209, 0.81", "-1.93059, -70.6362, -29.9765, 0.59", "-2.31295, -71.708, -29.8244, 0.44", "-2.34408, -71.7843, -29.8133, 0.44", "-2.73775, -72.5848, -29.6588, 0.29", "-3.43058, -73.782, -29.3837, 0.29", "-3.88545, -74.5147, -29.1979, 0.81", "-4.22605, -75.0971, -29.0529, 1.33", "-4.55902, -75.7538, -28.9461, 1.33", "-5.01407, -76.8709, -28.9224, 0.96", "-5.24332, -77.6606, -29.0147, 0.81", "-5.40596, -78.5157, -29.2176, 0.81", "-5.53543, -79.5622, -29.5411, 0.74", "-5.63447, -80.962, -30.0375, 0.44", "-5.6746, -82.2174, -30.5623, 0.66", "-5.68175, -83.0273, -30.9499, 0.74", "-5.70328, -83.7614, -31.3069, 1.03", "-5.77321, -84.6188, -31.7114, 1.25", "-5.90566, -85.5201, -32.0868, 1.11", "-6.12958, -86.625, -32.4694, 0.59", "-6.3367, -87.5257, -32.7422, 0.59", "-6.56853, -88.4729, -33.0408, 0.66", "-6.73865, -89.1601, -33.2535, 0.66", "-6.97849, -90.2117, -33.5473, 0.52", "-7.17255, -91.1869, -33.814, 0.52", "-7.301, -92.0446, -34.0249, 0.59", "-7.40765, -93.1487, -34.3252, 1.25", "-7.42932, -93.5729, -34.453, 1.4", "-7.43961, -94.3397, -34.6964, 1.4", "-7.44099, -95.4595, -35.0042, 0.88", "-7.44501, -96.176, -35.1611, 0.52", "-7.50092, -97.4205, -35.3738, 0.52", "-7.59106, -98.2023, -35.3831, 0.52", "-7.60617, -98.2831, -35.3709, 0.52", "-7.88125, -99.4906, -34.9626, 0.52", "-7.89528, -99.554, -34.9334, 0.52", "-8.00198, -100.072, -34.6649, 0.96", "-8.23179, -101.46, -33.8958, 1.33", "-8.3579, -102.512, -33.3682, 0.66", "-8.45325, -103.536, -32.9324, 0.59", "-8.52365, -104.531, -32.6019, 0.74", "-8.52999, -104.611, -32.5798, 0.74", "-8.60831, -105.454, -32.4086, 0.74", "-8.70266, -106.129, -32.3368, 1.03", "-8.83587, -106.68, -32.2887, 1.25", "-9.07079, -107.384, -32.25, 1.18", "-9.33922, -108.032, -32.2206, 0.59", "-9.65268, -108.691, -32.2003, 0.29", "-9.94836, -109.239, -32.1938, 0.29", "-10.1871, -109.658, -32.192, 0.81", "-10.3942, -110.021, -32.1936, 1.11", "-10.6922, -110.59, -32.2021, 1.11", "-10.9927, -111.314, -32.2156, 0.59", "-11.0108, -111.393, -32.2172, 0.59", "-11.0299, -112.094, -32.2318, 0.44", "-11.017, -112.165, -32.2331, 0.44", "-10.7543, -112.866, -32.2444, 0.44", "-10.4494, -113.45, -32.2657, 0.81", "-10.0886, -114.05, -32.295, 1.11", "-9.85937, -114.426, -32.3307, 1.11", "-9.54486, -114.955, -32.4097, 0.88", "-9.28401, -115.445, -32.4998, 0.66", "-8.98018, -116.095, -32.6375, 0.66", "-8.71449, -116.769, -32.786, 0.44", "-8.47882, -117.502, -32.9429, 0.29", "-8.2789, -118.337, -33.107, 0.88", "-8.17882, -118.979, -33.2118, 0.88", "-8.14095, -119.5, -33.2767, 0.88", "-8.13765, -120.239, -33.3361, 0.74", "-8.17045, -120.983, -33.3717, 0.37", "-8.21888, -121.679, -33.3764, 0.29", "-8.29669, -122.697, -33.3649, 0.29", "-8.35674, -123.529, -33.3556, 0.81", "-8.39763, -124.297, -33.3479, 1.03", "-8.39811, -124.38, -33.3472, 1.03", "-8.35709, -125.039, -33.3431, 1.18", "-8.27984, -125.776, -33.3405, 1.33", "-8.19379, -126.419, -33.3404, 1.33", "-8.04436, -127.397, -33.3497, 0.59", "-7.89747, -128.364, -33.3655, 0.44", "-7.77488, -129.226, -33.3837, 0.44", "-7.66738, -130.016, -33.4009, 0.81", "-7.55539, -130.903, -33.4202, 1.11", "-7.4762, -131.72, -33.4374, 1.11", "-7.46309, -132.234, -33.4481, 1.25", "-7.52634, -133.054, -33.4635, 1.11", "-7.69454, -134.073, -33.5023, 0.66", "-7.85797, -134.8, -33.5417, 0.37", "-8.06855, -135.497, -33.5884, 0.29", "-8.38071, -136.498, -33.6607, 0.37", "-8.54887, -137.208, -33.7525, 0.52", "-8.63097, -137.961, -33.8601, 0.88", "-8.6185, -138.471, -33.9346, 1.03", "-8.5851, -138.692, -33.9661, 1.03", "-8.35478, -139.831, -34.0417, 0.74", "-8.07442, -141.125, -34.0562, 0.59", "-7.87229, -142.145, -34.0361, 0.59", "-7.77607, -142.689, -33.9833, 1.4", "-7.67379, -143.307, -33.8979, 1.77", "-7.42659, -145.011, -33.5564, 0.81", "-7.32834, -145.883, -33.3238, 0.81", "-7.2235, -147.082, -32.8898, 0.81", "-7.10486, -148.251, -32.423, 1.11", "-7.0261, -148.828, -32.1717, 1.11", "-6.86235, -149.737, -31.7568, 0.88", "-6.84097, -149.844, -31.7054, 0.88", "-6.7096, -150.747, -31.2524, 0.59", "-6.66459, -151.686, -30.8043, 0.59", "-6.66286, -152.428, -30.4914, 0.52", "-6.68343, -153.063, -30.2354, 0.52", "-6.75102, -154.564, -29.7072, 0.74", "-6.79146, -155.255, -29.4841, 1.33", "-6.87175, -156.157, -29.2352, 1.69" ],
    "parent" : "dend_92",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-0.323693, -10.8036, 0.0228061, 2.73", "0.0171279, -13.334, -0.0310105, 2.73", "0.33424, -15.9217, -0.0820551, 2.14", "0.552781, -17.9599, -0.118296, 2.14", "0.774749, -20.2931, -0.1562, 2.28", "0.963164, -22.5227, -0.217201, 2.14", "1.19912, -25.4138, -0.314694, 1.92", "1.33417, -27.5381, -0.420842, 2.06", "1.46624, -30.4916, -0.603669, 1.84", "1.50304, -33.2461, -0.833745, 1.84", "1.47948, -35.3232, -1.04295, 1.84", "1.37399, -37.9392, -1.36538, 1.92", "1.16036, -40.4512, -1.76617, 1.92", "0.859051, -42.521, -2.16602, 1.92", "0.388627, -44.5991, -2.60289, 1.84", "-0.259146, -46.8214, -3.08882, 1.84", "-0.739687, -48.1586, -3.39088, 1.77", "-1.88357, -50.943, -4.05299, 1.69", "-3.1928, -53.8523, -4.7494, 1.69", "-4.34478, -56.2226, -5.34028, 1.84", "-4.38982, -56.3058, -5.35989, 1.84", "-5.07014, -57.3937, -5.62604, 2.06" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-0.323693, -10.8036, 0.0228061, 0.96", "-0.0901416, -12.5476, -0.942888, 0.96", "0.00741105, -14.3024, -1.77569, 1.25", "-0.0388987, -16.3771, -2.64629, 0.96", "-0.188185, -17.7311, -3.09636, 1.25", "-0.361503, -18.6896, -3.3747, 1.47", "-0.63217, -19.929, -3.70798, 1.11", "-1.10127, -21.5233, -4.03411, 0.96", "-1.70019, -23.0484, -4.27548, 1.11", "-2.62857, -24.9804, -4.56917, 1.11", "-3.30188, -26.2331, -4.80678, 1.11", "-3.35868, -26.3295, -4.82873, 1.11", "-4.13542, -27.4943, -5.16526, 0.96", "-4.1711, -27.5428, -5.18454, 0.96", "-4.87748, -28.3828, -5.65658, 1.03", "-5.37587, -28.9594, -6.07217, 1.25", "-5.42348, -29.0192, -6.11355, 1.25", "-6.08452, -29.8976, -6.70394, 0.88", "-6.70192, -30.788, -7.28003, 0.88", "-7.46078, -31.9963, -8.05793, 1.11", "-8.03833, -33.031, -8.69714, 1.11", "-8.57128, -34.0829, -9.3274, 1.25", "-8.61956, -34.1958, -9.38805, 1.25", "-9.03418, -35.472, -10.0028, 0.96", "-9.38133, -36.8054, -10.5734, 0.96", "-9.62396, -37.9213, -11.0082, 1.03", "-9.64122, -38.0011, -11.0378, 1.03", "-9.9566, -39.3903, -11.535, 1.03", "-10.2147, -40.4757, -11.8949, 1.03", "-10.4615, -41.4446, -12.1635, 1.25", "-10.7398, -42.468, -12.3926, 1.62", "-11.2005, -44.0046, -12.7017, 1.25", "-11.5712, -45.1345, -12.9083, 1.18", "-11.8982, -45.9516, -13.0241, 1.18", "-12.3619, -46.947, -13.1137, 1.33", "-12.9736, -48.0863, -13.1911, 1.33", "-13.5478, -49.0805, -13.2634, 1.03", "-13.583, -49.1369, -13.2681, 1.03", "-14.2067, -50.1806, -13.4296, 0.81", "-14.6315, -50.9832, -13.6468, 0.66", "-14.9898, -51.8004, -14.0048, 0.81", "-15.332, -52.8192, -14.6327, 1.03", "-15.4668, -53.3771, -15.0392, 1.33", "-15.5581, -54.1282, -15.6212, 1.62", "-15.5741, -55.015, -16.3164, 1.55", "-15.5469, -56.0109, -17.0419, 1.18", "-15.5095, -57.202, -17.8146, 0.96", "-15.5085, -57.2686, -17.8526, 0.96", "-15.5036, -58.8167, -18.6258, 0.88", "-15.541, -60.1534, -19.18, 0.88", "-15.5887, -61.3247, -19.5588, 1.18", "-15.6343, -62.5068, -19.8701, 1.4", "-15.7, -63.824, -20.192, 1.4", "-15.7683, -64.7361, -20.4449, 1.18", "-15.9, -65.7821, -20.7736, 0.96", "-16.0646, -66.7223, -21.1434, 1.11", "-16.3356, -67.8971, -21.7779, 0.88", "-16.5754, -68.798, -22.3346, 0.74", "-16.8837, -69.691, -22.9819, 0.96", "-17.1298, -70.2715, -23.4893, 1.25", "-17.5148, -70.985, -24.2603, 1.33", "-18.0549, -71.7178, -25.2451, 1.4" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "8.6174, 38.3743, -3.50594, 1.4", "7.99379, 40.0224, -3.69628, 1.4", "7.65183, 41.1658, -3.77342, 1.4", "7.27772, 42.815, -3.68251, 1.25", "7.2382, 43.0717, -3.62947, 1.25", "7.15134, 43.8452, -3.40656, 1.03", "7.06538, 44.7741, -3.10521, 1.03", "7.05536, 45.664, -2.73828, 1.18", "7.11383, 47.0444, -1.94859, 1.33", "7.22812, 48.2886, -1.05368, 1.33", "7.32912, 49.1594, -0.394693, 1.47", "7.42271, 49.8015, 0.089724, 1.47", "7.57613, 50.6942, 0.71054, 1.47", "7.94446, 52.6387, 1.88611, 1.4", "8.19562, 53.8698, 2.49959, 1.4", "8.37081, 54.688, 2.83021, 1.4", "8.63401, 55.8245, 3.21344, 1.62", "8.94401, 57.1504, 3.55991, 1.18", "9.19444, 58.239, 3.73093, 1.18", "9.21353, 58.3271, 3.73423, 1.18", "9.49016, 59.7914, 3.75682, 1.18", "9.68337, 60.9668, 3.78788, 1.47", "9.73588, 61.3356, 3.80094, 1.47", "9.90451, 62.586, 3.85021, 1.4", "10.084, 63.9101, 3.90481, 1.33", "10.2956, 65.4976, 3.97415, 1.33", "10.4827, 66.9905, 4.04811, 1.62", "10.5969, 68.0772, 4.11114, 1.92" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "8.6174, 38.3743, -3.50594, 1.18", "9.44132, 38.6252, -3.00868, 1.18", "10.1633, 38.8255, -2.40353, 0.96", "10.5542, 38.9264, -2.06003, 1.25", "10.5976, 38.9407, -2.01663, 1.25", "11.2254, 39.1775, -1.38522, 1.25", "11.8101, 39.4393, -0.806594, 1.25", "12.8669, 39.9406, 0.233575, 1.18", "13.3584, 40.2059, 0.705888, 0.81", "14.0344, 40.633, 1.36166, 0.96", "14.5609, 41.0323, 1.83353, 0.96", "14.9889, 41.4523, 2.15551, 0.96", "15.0199, 41.486, 2.17066, 0.96", "15.5687, 42.0655, 2.28229, 0.96", "15.6067, 42.106, 2.2863, 0.96", "16.1238, 42.633, 2.2916, 1.18", "16.7961, 43.3129, 2.29357, 1.4", "17.3542, 43.8522, 2.30084, 1.33", "17.4172, 43.9122, 2.30589, 1.33", "18.0247, 44.4629, 2.40612, 1.18", "18.1252, 44.5465, 2.44145, 1.18", "18.5519, 44.8757, 2.66907, 1.18", "18.6588, 44.9543, 2.7566, 1.18", "19.1738, 45.334, 3.29044, 0.96", "19.655, 45.7012, 3.85113, 0.96", "20.2905, 46.2473, 4.70578, 1.03", "20.3369, 46.2939, 4.76968, 1.03", "21.0242, 47.1158, 5.70847, 1.03", "21.0672, 47.1706, 5.76864, 1.03", "21.3072, 47.52, 6.11423, 1.03", "21.6206, 48.0637, 6.5732, 1.18", "22.0351, 48.8775, 7.04547, 1.4", "22.3878, 49.5769, 7.36029, 1.62" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "5.07001, 40.4418, -0.593792, 0.15", "6.9617, 55.322, -0.593792, 0.15", "8.85338, 70.2023, -0.593792, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_102",
    "id" : "dend_102",
    "points3d" : [ "4.30772, -66.563, -51.7065, 0.52", "3.51338, -67.1333, -52.2666, 0.52", "2.51787, -67.8993, -52.9042, 0.52", "2.1385, -68.2436, -53.1769, 0.96", "1.35261, -69.1228, -53.8778, 1.33", "0.947567, -69.6828, -54.3103, 0.81", "0.489339, -70.5107, -54.9155, 0.52", "0.477396, -70.5597, -54.9457, 0.52", "0.564666, -71.6878, -55.6783, 0.88", "0.827254, -72.5167, -56.2648, 1.25", "1.06488, -72.9661, -56.6144, 1.47", "1.46605, -73.5629, -57.1363, 1.47", "1.99377, -74.2238, -57.7506, 0.88", "2.79851, -75.1767, -58.6717, 0.88", "3.21324, -75.6527, -59.1794, 0.37", "3.63816, -76.2117, -59.7999, 0.66", "3.66532, -76.2598, -59.8564, 0.66", "3.7758, -76.588, -60.2345, 0.96", "3.88388, -77.4912, -61.1571, 1.11", "3.78171, -78.8078, -62.2443, 0.44", "3.65476, -79.5235, -62.7527, 0.44", "3.42117, -80.5953, -63.4736, 0.52", "3.28758, -81.1867, -63.8712, 0.74", "3.11094, -81.845, -64.2786, 0.74", "2.85237, -82.6737, -64.7753, 1.03", "2.46231, -84.0545, -65.6396, 0.88", "2.16382, -85.3848, -66.5393, 1.18", "1.97486, -86.6601, -67.5188, 0.96", "1.90837, -87.6918, -68.5291, 0.59", "1.89226, -88.8295, -69.8439, 0.29", "1.9103, -89.6644, -70.9294, 0.88", "1.91239, -89.9099, -71.2734, 1.47", "1.91082, -90.9313, -72.7259, 1.33", "1.8642, -92.4571, -74.8613, 0.52", "1.83322, -92.8656, -75.3966, 0.29", "1.76797, -93.225, -75.7662, 0.96", "1.47785, -94.2384, -76.6163, 1.77", "1.35393, -94.6663, -76.9533, 1.77", "1.07278, -95.6136, -77.5961, 1.11", "0.887679, -96.389, -78.2049, 0.37", "0.82072, -96.9144, -78.8239, 0.29", "0.787642, -97.6811, -79.9418, 0.74", "0.867549, -98.7749, -81.7516, 1.33", "0.872353, -98.8076, -81.8117, 1.33", "1.09659, -99.7977, -83.8981, 1.55", "1.41542, -101.043, -86.7104, 0.96", "1.42214, -101.073, -86.7783, 0.96", "1.47967, -101.461, -87.5595, 1.18", "1.48229, -101.491, -87.6105, 1.18", "1.50288, -102.744, -89.2877, 0.44", "1.40073, -103.422, -89.8888, 0.37", "1.25633, -104.0, -90.4513, 0.52", "1.13959, -104.453, -90.9917, 0.81", "1.00858, -104.992, -91.6711, 1.33", "0.940573, -105.359, -92.1453, 0.96", "0.829448, -106.515, -93.6727, 1.25", "0.851931, -108.91, -96.9447, 0.52", "0.961409, -110.026, -98.545, 0.44", "1.07359, -110.579, -99.3657, 0.59", "1.3594, -111.494, -100.757, 0.59", "1.75508, -112.364, -102.065, 0.74", "2.04222, -112.814, -102.688, 1.18", "2.07412, -112.856, -102.732, 1.18", "2.44128, -113.267, -103.143, 1.47", "2.48079, -113.306, -103.183, 1.47", "3.41138, -114.252, -103.96, 1.18", "3.4522, -114.301, -103.993, 1.18", "3.82853, -114.878, -104.31, 1.18", "4.29054, -115.879, -104.83, 0.52", "4.46879, -116.549, -105.159, 0.29", "4.58523, -117.322, -105.548, 0.29", "4.62615, -117.854, -105.823, 0.88", "4.64485, -118.584, -106.239, 1.11", "4.61021, -119.982, -107.078, 0.81", "4.57217, -120.872, -107.707, 0.37", "4.53036, -121.813, -108.676, 0.29", "4.50233, -122.244, -109.25, 0.96", "4.49681, -122.285, -109.32, 0.96", "4.40991, -122.638, -110.033, 1.18", "4.10332, -123.388, -111.68, 1.11", "3.34235, -124.694, -114.63, 0.44", "3.03435, -125.097, -115.537, 0.74", "2.43218, -125.794, -116.984, 0.59", "2.05682, -126.205, -117.744, 0.81", "1.47602, -126.794, -118.656, 0.44", "1.09128, -127.222, -119.067, 0.59", "1.05314, -127.277, -119.091, 0.59", "0.644811, -128.091, -119.341, 0.52", "0.399971, -128.744, -119.498, 1.03", "0.180638, -129.516, -119.698, 1.4", "-0.0935517, -130.698, -119.986, 1.33", "-0.264401, -131.522, -120.249, 1.11", "-0.37429, -132.335, -120.647, 0.59", "-0.376868, -132.395, -120.686, 0.59", "-0.339418, -132.93, -121.137, 0.44", "-0.180762, -133.774, -122.052, 0.44", "0.0760772, -134.698, -123.246, 0.74", "0.493182, -136.0, -125.081, 0.74", "0.597731, -136.311, -125.522, 1.25", "0.893914, -137.275, -126.891, 1.55", "1.18005, -138.313, -128.381, 1.77", "1.4371, -139.581, -130.217, 0.74", "1.48561, -140.264, -131.12, 0.52", "1.44579, -140.733, -131.676, 0.52", "1.2474, -141.737, -132.799, 0.96", "1.10631, -142.165, -133.212, 1.18", "0.598413, -143.217, -134.126, 0.52", "0.267878, -143.732, -134.552, 0.52", "0.0281786, -144.042, -134.817, 0.66", "-0.0108354, -144.085, -134.855, 0.66", "-0.347961, -144.406, -135.126, 0.44", "-1.23735, -145.146, -135.736, 0.29", "-1.29122, -145.182, -135.76, 0.29", "-1.71385, -145.415, -135.929, 0.52", "-2.14407, -145.638, -136.059, 0.81", "-2.65702, -145.925, -136.149, 0.96", "-3.1562, -146.221, -136.175, 1.11", "-3.83155, -146.672, -136.118, 0.29", "-3.91636, -146.735, -136.107, 0.29", "-4.64978, -147.29, -135.978, 0.29", "-5.32063, -147.786, -135.841, 0.88", "-5.56274, -147.961, -135.784, 1.03", "-6.11686, -148.326, -135.654, 1.18", "-6.97326, -148.797, -135.492, 0.29", "-8.00714, -149.265, -135.352, 0.29", "-8.44165, -149.424, -135.331, 0.59", "-8.50725, -149.446, -135.335, 0.59", "-9.27214, -149.703, -135.446, 0.59", "-10.0219, -150.0, -135.629, 1.11", "-10.654, -150.312, -135.844, 1.4", "-11.4157, -150.77, -136.157, 0.96", "-12.1739, -151.324, -136.497, 0.59", "-13.038, -152.071, -136.899, 0.37", "-13.6795, -152.736, -137.201, 0.37", "-14.0636, -153.174, -137.351, 0.74", "-14.1074, -153.229, -137.365, 0.74", "-14.5324, -153.82, -137.434, 0.74", "-14.8605, -154.301, -137.457, 1.03", "-15.2364, -154.868, -137.448, 1.33", "-15.8106, -155.64, -137.404, 1.47", "-16.4613, -156.447, -137.349, 0.37", "-17.262, -157.411, -137.284, 1.18" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_99",
    "id" : "dend_99",
    "points3d" : [ "4.30772, -66.563, -51.7065, 0.52", "5.26688, -67.2703, -50.5507, 0.52", "6.36642, -68.1874, -49.3606, 0.44", "6.91903, -68.7191, -48.8346, 0.88", "6.96223, -68.7671, -48.7975, 0.88", "7.3217, -69.2086, -48.5154, 1.03", "7.69973, -69.7226, -48.2417, 0.81", "8.11245, -70.4385, -48.0576, 0.29", "8.50886, -71.2521, -47.9537, 0.22", "8.78661, -71.8783, -47.8899, 0.52", "8.92291, -72.2173, -47.8537, 0.74", "9.2322, -73.1058, -47.7561, 0.29", "9.4604, -73.8905, -47.661, 0.29", "9.64712, -74.6747, -47.5662, 0.74", "9.73513, -75.124, -47.5043, 1.03", "9.83499, -75.683, -47.4235, 0.96", "9.92463, -76.2748, -47.337, 0.59", "10.0568, -77.1124, -47.1891, 0.22", "10.1618, -77.6245, -47.0831, 0.37", "10.2001, -77.7524, -47.0555, 0.37", "10.4237, -78.2653, -46.9617, 0.37", "10.46, -78.3265, -46.9541, 0.37", "11.0858, -79.208, -46.9986, 0.29", "11.5472, -79.7967, -47.1083, 0.88", "11.8381, -80.1675, -47.2031, 1.18", "12.3941, -80.9089, -47.422, 0.29", "12.906, -81.6151, -47.6599, 0.29", "13.6653, -82.7085, -47.9908, 0.52", "13.9889, -83.206, -48.1255, 0.81", "14.4991, -84.0176, -48.2896, 0.22", "14.7287, -84.4032, -48.339, 0.59", "14.7752, -84.4875, -48.3449, 0.59", "15.4567, -85.8279, -48.3796, 0.44", "15.9159, -86.7771, -48.3672, 0.66", "16.2174, -87.4206, -48.3715, 0.59", "16.4645, -87.9616, -48.4045, 0.44", "16.8578, -88.8498, -48.5078, 0.96", "17.1727, -89.5226, -48.6738, 1.33", "17.5336, -90.1919, -48.9736, 0.59", "17.5758, -90.2549, -49.0104, 0.59", "18.0115, -90.7755, -49.4083, 0.59", "18.0467, -90.8151, -49.4454, 0.59", "18.741, -91.6606, -50.3532, 0.29", "19.0286, -92.0787, -50.8217, 0.44", "19.258, -92.4782, -51.2199, 0.44", "19.5643, -93.0885, -51.7643, 0.44", "19.9011, -93.8921, -52.3767, 1.33", "20.2849, -94.8663, -53.039, 1.11", "20.6129, -95.7818, -53.5776, 0.52", "20.9371, -96.6147, -54.0649, 0.29", "20.9609, -96.6743, -54.0983, 0.29", "21.2062, -97.1833, -54.3393, 0.29", "21.6882, -97.8236, -54.5944, 0.29", "22.0281, -98.111, -54.6695, 0.96", "22.4839, -98.3189, -54.7168, 1.25" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_97",
    "id" : "dend_97",
    "points3d" : [ "-6.87175, -156.157, -29.2352, 0.29", "-8.16187, -156.761, -28.3103, 0.29", "-8.93977, -157.245, -27.6549, 0.29", "-9.17525, -157.402, -27.4545, 0.74", "-9.23525, -157.443, -27.4044, 0.74", "-9.62507, -157.703, -27.1006, 0.74", "-10.5064, -158.21, -26.5691, 0.29", "-11.2104, -158.602, -26.2999, 0.29", "-11.562, -158.762, -26.2176, 0.74", "-11.8735, -158.871, -26.1845, 1.11", "-12.4, -159.048, -26.1551, 1.11", "-13.7822, -159.504, -26.1554, 0.29", "-14.2328, -159.672, -26.1619, 0.37", "-14.8624, -159.973, -26.0917, 0.37", "-15.5544, -160.392, -25.9133, 0.66", "-16.2391, -160.908, -25.6468, 0.52", "-16.635, -161.25, -25.4474, 0.96", "-17.338, -161.913, -25.0313, 1.33", "-18.3733, -162.849, -24.4561, 0.59", "-18.8383, -163.261, -24.1754, 0.37", "-19.2109, -163.581, -23.9442, 0.22", "-19.872, -164.126, -23.5555, 0.22", "-20.4373, -164.596, -23.2376, 0.66", "-21.156, -165.238, -22.8766, 0.66", "-22.2313, -166.328, -22.3869, 0.52", "-22.3801, -166.499, -22.316, 0.29", "-22.7742, -167.012, -22.147, 0.74", "-22.9383, -167.254, -22.0554, 0.74", "-23.6661, -168.411, -21.6084, 0.37", "-24.2606, -169.426, -21.2448, 0.44", "-24.5594, -169.928, -21.1004, 0.59", "-25.0854, -170.792, -20.8573, 0.52", "-26.2344, -172.551, -20.3635, 0.37", "-26.7744, -173.296, -20.1532, 0.37", "-27.4286, -174.094, -19.9343, 0.29", "-28.2712, -175.02, -19.6817, 0.59", "-28.4428, -175.204, -19.6386, 0.88", "-29.004, -175.759, -19.5408, 0.66", "-29.6877, -176.379, -19.53, 0.15", "-30.4816, -176.975, -19.5014, 0.15", "-30.5471, -177.013, -19.4985, 0.15", "-31.337, -177.396, -19.5162, 0.59", "-31.8691, -177.664, -19.5736, 0.88", "-31.9272, -177.697, -19.5846, 0.88", "-32.3552, -177.974, -19.6956, 0.88", "-32.9998, -178.471, -19.9075, 0.88", "-33.9537, -179.388, -20.2851, 0.29", "-34.4167, -179.916, -20.4914, 0.29", "-34.7894, -180.438, -20.6728, 0.66", "-35.0785, -180.896, -20.807, 0.81", "-35.4482, -181.606, -20.9746, 0.66", "-35.8779, -182.567, -21.1448, 0.29", "-36.0839, -183.073, -21.2059, 0.81", "-36.2388, -183.442, -21.2434, 0.81", "-36.6569, -184.3, -21.3062, 0.22", "-36.9792, -184.868, -21.2882, 0.22", "-37.1875, -185.208, -21.2393, 0.81", "-37.3803, -185.484, -21.175, 0.96", "-38.041, -186.304, -20.8225, 0.22", "-38.4772, -186.722, -20.4227, 0.22", "-39.0954, -187.168, -19.6351, 0.74", "-39.3094, -187.298, -19.3283, 1.18", "-39.6823, -187.505, -18.7601, 0.74", "-40.5613, -187.938, -17.3913, 0.59", "-41.7625, -188.481, -15.5215, 0.44", "-42.732, -188.969, -14.0573, 0.37", "-42.7815, -188.997, -13.9899, 0.37", "-43.0515, -189.174, -13.649, 0.66", "-43.2898, -189.411, -13.3201, 0.74", "-43.8549, -190.176, -12.5136, 0.29", "-44.2315, -190.798, -11.9539, 0.29", "-44.6126, -191.417, -11.3575, 0.29", "-44.7064, -191.576, -11.1935, 0.74", "-45.5593, -193.185, -9.36282, 0.66", "-45.8852, -193.913, -8.42956, 0.22", "-45.9566, -194.113, -8.10467, 0.22", "-46.0977, -194.494, -7.24048, 0.44" ],
    "parent" : "dend_93",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_94",
    "id" : "dend_94",
    "points3d" : [ "-6.87175, -156.157, -29.2352, 0.37", "-6.48694, -157.429, -30.1636, 0.37", "-6.28693, -158.13, -30.6191, 0.37", "-6.27651, -158.172, -30.6426, 0.37", "-6.18335, -158.625, -30.8675, 0.81", "-6.05762, -159.303, -31.1741, 0.88", "-6.00942, -159.586, -31.292, 0.88", "-5.92364, -160.164, -31.4857, 0.52", "-5.84754, -160.823, -31.6992, 0.52", "-5.8063, -161.43, -31.9237, 0.52", "-5.81148, -161.767, -32.0613, 0.96", "-5.83908, -162.06, -32.1849, 0.96", "-5.96054, -162.852, -32.5489, 0.37", "-6.06778, -163.322, -32.7793, 0.29", "-6.21402, -163.782, -33.0292, 0.59", "-6.39293, -164.207, -33.2662, 0.96", "-6.54766, -164.514, -33.4336, 1.18", "-6.57066, -164.554, -33.4534, 1.18", "-6.71764, -164.796, -33.5719, 1.18", "-6.95003, -165.242, -33.7915, 1.03", "-7.17831, -165.771, -34.0323, 0.59", "-7.30888, -166.128, -34.1682, 0.52", "-7.41396, -166.425, -34.2594, 0.66", "-7.70076, -167.181, -34.4371, 0.29", "-7.9184, -167.704, -34.5123, 0.44", "-8.02553, -167.944, -34.5178, 0.52", "-8.39779, -168.704, -34.4721, 0.66", "-8.63225, -169.134, -34.4253, 0.37", "-8.91832, -169.609, -34.3575, 0.88", "-9.09983, -169.879, -34.3133, 1.18", "-9.47022, -170.406, -34.2447, 0.96", "-9.72077, -170.782, -34.2128, 0.66", "-9.88575, -171.064, -34.1916, 1.03", "-10.1423, -171.601, -34.1311, 0.52", "-10.3881, -172.281, -34.0296, 0.52", "-10.5024, -172.747, -33.9532, 1.11", "-10.5608, -173.211, -33.8686, 1.11", "-10.5919, -173.954, -33.7331, 0.74", "-10.588, -174.373, -33.6593, 0.44", "-10.5617, -175.013, -33.5526, 0.59", "-10.5258, -175.885, -33.431, 0.59", "-10.5246, -176.716, -33.3502, 0.59", "-10.5533, -177.42, -33.305, 0.52", "-10.5968, -177.87, -33.2958, 1.18", "-10.639, -178.158, -33.2937, 1.33", "-10.8012, -178.931, -33.3034, 1.18", "-10.9677, -179.544, -33.315, 0.88", "-11.1204, -180.034, -33.3265, 0.52", "-11.2835, -180.583, -33.3386, 0.66", "-11.2963, -180.641, -33.3368, 0.66", "-11.3513, -181.121, -33.2998, 0.81", "-11.3877, -181.674, -33.2448, 0.44", "-11.3995, -182.275, -33.1718, 0.44", "-11.3869, -183.013, -33.0673, 0.44", "-11.323, -183.952, -32.9075, 0.37", "-11.2619, -184.566, -32.7888, 0.29" ],
    "parent" : "dend_93",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-5.07014, -57.3937, -5.62604, 1.03", "-6.32949, -57.7189, -5.64501, 1.03", "-7.21241, -58.067, -5.52933, 1.03", "-8.29965, -58.6319, -5.32506, 0.96", "-9.02094, -59.1078, -5.17832, 0.96", "-9.1151, -59.1767, -5.15854, 0.96", "-10.9636, -60.7215, -4.77701, 0.81", "-11.6374, -61.4456, -4.60768, 1.11", "-12.2975, -62.237, -4.43144, 1.11", "-13.1433, -63.2944, -4.20785, 1.03", "-13.1853, -63.3447, -4.1983, 1.03", "-14.0856, -64.3312, -4.0057, 1.03", "-14.7338, -65.0127, -3.90785, 1.25", "-15.2931, -65.5732, -3.78082, 1.4", "-15.6817, -65.945, -3.66671, 1.4", "-16.4369, -66.6798, -3.36886, 1.25", "-17.2218, -67.5549, -2.9918, 1.11", "-17.6413, -68.1114, -2.74866, 1.11", "-18.0875, -68.8571, -2.44251, 1.03", "-18.1411, -68.9682, -2.40551, 1.03", "-18.4844, -69.7905, -2.23968, 0.81", "-18.8223, -70.694, -2.16776, 0.96", "-19.164, -71.6821, -2.16815, 0.96", "-19.5303, -72.805, -2.20033, 0.81", "-19.7555, -73.6324, -2.25734, 0.74", "-20.0536, -74.8741, -2.38304, 0.81", "-20.1851, -75.5525, -2.47369, 1.11", "-20.3224, -76.5295, -2.60878, 1.11", "-20.3853, -77.2712, -2.70971, 1.11", "-20.4499, -78.7125, -2.89395, 0.88", "-20.4655, -79.437, -2.95244, 1.11", "-20.4657, -80.2879, -3.0042, 1.11", "-20.4594, -80.9468, -3.0524, 1.33", "-20.463, -81.6302, -3.10613, 0.96", "-20.4837, -82.4473, -3.17155, 1.11", "-20.5038, -83.4452, -3.24307, 1.11", "-20.498, -84.2782, -3.31461, 1.4", "-20.4897, -85.0096, -3.39424, 1.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-5.07014, -57.3937, -5.62604, 1.47", "-5.03495, -58.6671, -5.69454, 1.47", "-5.01326, -59.4519, -5.73676, 1.47", "-4.96601, -61.1617, -5.82873, 1.47", "-4.93449, -62.302, -5.89007, 1.62", "-4.89593, -63.6975, -5.96514, 1.92", "-4.85862, -65.0475, -6.03776, 1.92" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-18.0549, -71.7178, -25.2451, 0.88", "-19.5958, -71.9576, -25.5615, 0.88", "-20.0446, -72.0537, -25.6907, 1.11", "-20.5408, -72.1871, -25.8929, 0.88", "-21.1535, -72.3657, -26.1696, 0.81", "-21.8536, -72.6153, -26.5289, 0.74", "-22.5057, -72.9062, -26.8895, 0.96", "-23.1096, -73.2675, -27.3153, 0.96", "-23.9073, -73.8598, -27.9074, 0.81", "-23.943, -73.893, -27.9347, 0.81", "-24.5569, -74.5754, -28.4158, 0.74", "-25.0723, -75.2289, -28.8247, 0.74", "-25.2573, -75.4705, -28.9611, 1.03", "-25.6164, -75.9204, -29.2063, 1.11", "-26.2433, -76.6351, -29.5871, 1.11", "-26.2927, -76.6858, -29.6172, 1.11", "-27.0486, -77.3518, -30.0627, 0.88", "-27.9467, -78.0774, -30.597, 0.88", "-28.3458, -78.3794, -30.836, 1.25", "-28.8501, -78.7299, -31.1407, 1.25", "-29.5469, -79.1803, -31.5664, 1.4", "-30.062, -79.5117, -31.8788, 1.62" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-18.0549, -71.7178, -25.2451, 0.74", "-17.2562, -72.2633, -26.4226, 0.74", "-16.2182, -72.9828, -28.007, 0.44", "-16.1473, -73.0347, -28.1138, 0.44", "-15.4476, -73.5807, -29.0972, 0.44", "-14.2049, -74.5785, -30.7582, 1.03", "-11.8276, -76.6354, -33.9502, 1.03", "-11.0916, -77.3116, -34.9919, 1.33", "-10.1328, -78.2912, -36.4399, 1.11", "-9.49025, -78.9898, -37.5394, 0.59", "-8.59659, -80.0435, -39.2655, 0.44", "-7.62106, -81.4633, -41.4896, 0.44", "-7.05736, -82.4097, -42.9896, 0.88", "-6.82875, -82.8463, -43.7618, 1.25", "-6.11134, -84.5526, -46.9258, 1.25", "-6.0964, -84.5968, -47.0119, 1.25", "-6.04709, -84.8045, -47.384, 1.25", "-6.0378, -84.8545, -47.4552, 1.25", "-5.72853, -86.6144, -49.0284, 0.74", "-5.52596, -87.6899, -49.7591, 0.74", "-5.51239, -87.7754, -49.8026, 0.74", "-5.36402, -88.5414, -50.2598, 0.74", "-5.10406, -89.6051, -51.0813, 0.81", "-4.89146, -90.4965, -51.8737, 0.81", "-4.50645, -92.2789, -53.7396, 0.44", "-4.49663, -92.3408, -53.8134, 0.44", "-4.36671, -93.4187, -55.1889, 0.74", "-4.2097, -94.8522, -57.1585, 0.88", "-4.12797, -95.5295, -58.0854, 1.03", "-3.99624, -96.6273, -59.4963, 1.03", "-3.90968, -97.3431, -60.2547, 1.18", "-3.89996, -97.4075, -60.3131, 1.18", "-3.58418, -98.9293, -61.3171, 0.52", "-3.19276, -100.041, -61.7675, 0.44", "-2.8549, -100.618, -61.9386, 0.81", "-2.50604, -101.091, -62.042, 0.88", "-2.37377, -101.256, -62.0858, 0.88", "-1.7751, -102.036, -62.3157, 0.74", "-1.10167, -103.002, -62.627, 0.44", "-0.50547, -104.009, -63.0149, 0.59", "0.145381, -105.408, -63.5643, 0.52", "0.571431, -106.525, -64.0247, 0.88", "0.813141, -107.295, -64.3418, 1.18", "1.09648, -108.406, -64.838, 0.52", "1.22346, -109.143, -65.1806, 0.44", "1.33233, -110.236, -65.6663, 0.44", "1.37578, -111.208, -66.0823, 0.74", "1.38108, -111.757, -66.317, 0.74", "1.3721, -113.514, -67.1111, 0.59", "1.33345, -114.802, -67.6945, 0.66", "1.31653, -115.53, -68.0447, 1.18", "1.30128, -116.645, -68.5781, 1.33", "1.31704, -117.743, -69.0503, 1.11", "1.32539, -117.833, -69.0877, 1.11", "1.49438, -118.854, -69.4569, 0.96", "1.80829, -120.184, -69.9152, 0.66", "2.08466, -121.196, -70.2952, 0.37", "2.32597, -122.175, -70.6993, 0.29", "2.68621, -123.893, -71.5183, 1.03", "2.83711, -124.748, -71.9587, 1.33", "2.94748, -125.434, -72.3261, 1.47", "3.18464, -127.201, -73.2162, 0.37", "3.34492, -128.275, -73.7693, 0.37", "3.5442, -129.769, -74.5009, 0.29", "3.61573, -130.331, -74.7374, 0.44", "3.72455, -131.184, -75.0515, 0.59", "3.89665, -132.535, -75.476, 0.59", "4.13807, -134.25, -75.9376, 0.74", "4.34637, -135.516, -76.2408, 0.59", "4.50864, -136.659, -76.4879, 0.44", "4.72074, -138.195, -76.8336, 0.44", "4.74991, -138.294, -76.8835, 0.44", "5.20767, -139.243, -77.6044, 0.96", "5.55964, -139.782, -78.1021, 1.4", "5.60763, -139.845, -78.1642, 1.4", "6.08556, -140.438, -78.7501, 1.18", "9.03267, -144.129, -82.3636, 0.59", "9.62628, -144.91, -83.1005, 0.88", "10.1497, -145.646, -83.7739, 1.03", "10.6799, -146.465, -84.4993, 0.52", "11.1858, -147.426, -85.2588, 0.37", "11.5446, -148.42, -85.8959, 0.37", "11.5566, -148.499, -85.9203, 0.37", "11.6071, -148.852, -86.0261, 1.03", "11.7123, -149.609, -86.2203, 1.03", "11.9382, -150.773, -86.4848, 0.44", "12.3555, -152.002, -86.7965, 0.37", "12.9292, -153.193, -87.1055, 0.88", "13.3299, -153.887, -87.3392, 1.25", "13.648, -154.402, -87.5425, 1.25", "14.2811, -155.379, -88.0069, 0.81", "15.4156, -157.188, -88.9698, 0.29", "15.6775, -157.668, -89.2332, 0.29", "16.2046, -158.793, -89.9004, 0.37", "16.6345, -159.828, -90.558, 0.37", "17.0118, -160.89, -91.2214, 0.66", "17.2554, -161.783, -91.7292, 1.25", "17.4745, -162.719, -92.1615, 1.4", "17.9051, -164.388, -92.8331, 0.81", "18.3627, -165.909, -93.3338, 0.59", "18.6543, -166.751, -93.5693, 0.29", "19.061, -167.837, -93.8158, 0.29", "19.6435, -169.077, -94.2804, 0.29", "19.8779, -169.498, -94.5071, 1.03", "19.9235, -169.571, -94.5542, 1.03", "20.3636, -170.226, -95.0268, 1.4", "21.0016, -171.173, -95.7721, 1.4", "22.9036, -174.023, -98.0892, 0.52", "23.6097, -175.191, -99.012, 0.74", "23.6748, -175.314, -99.1026, 0.74", "24.1174, -176.25, -99.7429, 0.52", "24.4948, -177.209, -100.337, 0.52", "24.7091, -178.03, -100.729, 0.74", "24.8978, -179.19, -101.143, 0.66", "25.2957, -181.052, -102.034, 0.59", "25.3179, -181.12, -102.076, 0.59", "25.6437, -181.909, -102.633, 0.52", "26.0418, -182.755, -103.245, 1.18", "26.7556, -184.184, -104.262, 1.62", "27.9398, -186.318, -105.79, 1.18", "28.7646, -187.757, -106.751, 0.52", "29.3867, -188.851, -107.424, 0.37", "29.963, -189.889, -107.991, 0.74", "30.2037, -190.383, -108.218, 1.11", "30.7023, -191.904, -108.724, 0.88", "30.8032, -192.797, -108.952, 0.81", "30.7195, -193.947, -109.29, 0.44", "30.52, -194.832, -109.614, 0.59", "30.2112, -195.764, -110.055, 0.59", "29.782, -196.826, -110.616, 0.37", "29.2, -198.106, -111.302, 0.29", "28.8235, -198.95, -111.78, 0.81", "28.5276, -199.715, -112.229, 1.11", "28.0604, -201.141, -113.05, 1.4", "27.8667, -201.835, -113.428, 1.33", "27.5987, -202.975, -113.981, 0.81", "27.3581, -204.081, -114.424, 0.52", "27.0317, -205.558, -114.904, 0.44", "26.7934, -206.67, -115.197, 0.37", "26.5157, -207.967, -115.388, 0.37", "26.2824, -209.196, -115.489, 0.66", "26.0822, -210.492, -115.505, 0.96", "25.9738, -211.495, -115.445, 1.03", "25.9117, -212.502, -115.319, 1.25", "25.9845, -214.342, -115.008, 0.81", "26.0766, -215.132, -114.863, 0.52", "26.2516, -216.222, -114.707, 0.52", "26.3862, -217.027, -114.639, 0.29", "26.5346, -218.205, -114.627, 0.29", "26.6606, -219.817, -114.797, 0.29", "26.6349, -220.841, -115.06, 0.81", "26.4808, -221.894, -115.422, 1.11", "26.2539, -222.75, -115.79, 1.11", "25.938, -223.598, -116.208, 0.74", "25.5107, -224.464, -116.702, 0.37", "24.8734, -225.619, -117.447, 0.29", "24.685, -226.016, -117.689, 0.74", "24.6512, -226.112, -117.74, 0.74", "24.5469, -226.758, -118.078, 0.96", "24.5413, -226.919, -118.158, 0.96", "24.5761, -228.378, -118.807, 0.29", "24.5856, -229.32, -119.224, 0.29", "24.5563, -229.978, -119.508, 0.81", "24.3894, -231.369, -120.1, 1.03", "24.2058, -232.195, -120.452, 0.81", "23.8462, -233.258, -120.933, 0.29", "23.3137, -234.358, -121.46, 0.29", "22.9627, -234.92, -121.76, 0.44", "22.5031, -235.583, -122.118, 0.44", "21.884, -236.339, -122.525, 0.66", "21.1595, -237.109, -123.003, 0.96", "20.7716, -237.463, -123.267, 1.4", "19.7082, -238.354, -124.034, 1.69" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "10.5969, 68.0772, 4.11114, 1.11", "10.3878, 70.1969, 4.67707, 1.11", "10.3059, 70.8111, 4.84103, 0.96", "10.155, 71.6077, 5.06348, 0.96", "9.95978, 72.4979, 5.31874, 0.96", "9.69526, 73.5377, 5.63228, 0.96", "9.25857, 75.1097, 6.12266, 0.96", "9.2265, 75.189, 6.14922, 0.96", "8.68057, 76.4031, 6.58935, 1.11", "8.62476, 76.5172, 6.63398, 1.11", "8.14553, 77.4426, 7.01631, 1.11", "8.0993, 77.5258, 7.05338, 1.11", "7.58169, 78.4363, 7.47254, 1.33", "7.11075, 79.2802, 7.85352, 1.18", "6.62876, 80.2296, 8.24963, 0.96", "6.59001, 80.3208, 8.28256, 0.96", "6.30868, 81.1037, 8.53417, 0.88", "6.00226, 82.1484, 8.82502, 0.88", "5.9851, 82.2333, 8.84381, 0.88", "5.81598, 83.5845, 9.0757, 0.88", "5.73326, 84.9142, 9.24821, 1.11", "5.73156, 85.0415, 9.26102, 1.11", "5.7711, 86.1495, 9.33939, 1.11", "5.83868, 87.0912, 9.38988, 1.33", "5.89605, 87.6773, 9.41497, 1.33", "6.03304, 88.7351, 9.39488, 1.18", "6.1896, 89.7752, 9.32404, 1.18", "6.20923, 89.8974, 9.30387, 1.18", "6.39466, 90.9289, 9.04506, 1.11", "6.60129, 91.9641, 8.71465, 1.11", "6.83416, 92.9998, 8.32145, 1.03", "7.04407, 93.9397, 7.93195, 0.88", "7.31773, 95.3897, 7.33127, 0.88", "7.33903, 95.5618, 7.26834, 0.88", "7.45499, 96.768, 6.95299, 0.88", "7.46025, 96.8568, 6.94293, 0.88", "7.45852, 97.8121, 7.02931, 0.88", "7.37932, 99.0467, 7.33162, 0.88", "7.26756, 99.9236, 7.65989, 0.88", "7.00424, 101.267, 8.21396, 0.96", "6.92683, 101.522, 8.33341, 0.96", "6.6576, 102.269, 8.68925, 1.47", "6.3898, 102.969, 9.03271, 1.62", "6.01716, 103.894, 9.51589, 1.11", "5.63782, 104.812, 9.98122, 1.11", "5.14066, 105.974, 10.5326, 1.11", "4.75909, 106.982, 10.997, 0.96", "4.44966, 107.936, 11.4223, 0.96", "4.09657, 109.081, 11.9292, 0.96", "4.07249, 109.175, 11.967, 0.96", "3.91728, 109.874, 12.1911, 0.96", "3.63263, 111.151, 12.4371, 1.18", "3.60297, 111.273, 12.4492, 1.18", "3.18596, 112.839, 12.5189, 1.18", "2.73938, 114.455, 12.539, 1.03", "2.41401, 115.61, 12.5558, 0.88", "1.96131, 117.174, 12.5715, 1.03", "1.64517, 118.257, 12.5847, 1.03", "1.48602, 118.867, 12.602, 1.03", "1.45667, 119.029, 12.6075, 1.03", "1.32296, 120.038, 12.6916, 1.03", "1.30666, 120.227, 12.7189, 1.03", "1.26399, 121.115, 12.947, 1.03", "1.19245, 122.623, 13.3938, 1.18", "1.14899, 123.952, 13.8466, 1.18", "1.12877, 124.761, 14.1503, 1.18", "1.11407, 125.634, 14.5073, 1.18", "1.08019, 127.453, 15.2791, 1.18", "1.07852, 128.73, 15.8622, 1.18", "1.09679, 130.034, 16.4759, 1.18", "1.09778, 130.118, 16.5137, 1.18", "1.09036, 130.885, 16.817, 1.18", "1.02999, 132.291, 17.2845, 1.47", "0.964965, 133.265, 17.5358, 1.47", "0.884311, 134.234, 17.7647, 1.33", "0.754949, 135.694, 18.0651, 1.03", "0.562278, 137.707, 18.4677, 0.96", "0.393591, 139.36, 18.7851, 0.96", "0.249257, 140.539, 18.9823, 0.96", "0.104921, 141.535, 19.1232, 1.11", "0.0210334, 142.12, 19.1975, 1.11", "-0.1384, 143.317, 19.3184, 1.25", "-0.197941, 143.857, 19.3579, 1.25", "-0.368971, 145.22, 19.4371, 1.03", "-0.402946, 145.425, 19.4515, 1.03", "-0.499703, 146.048, 19.519, 1.03", "-0.590176, 146.665, 19.6128, 1.03", "-0.643998, 147.398, 19.7768, 1.03", "-0.669972, 148.588, 20.1274, 1.03", "-0.635514, 149.464, 20.4348, 1.03", "-0.554373, 150.268, 20.7857, 1.03", "-0.530962, 150.424, 20.8646, 1.03", "-0.305415, 151.638, 21.5309, 1.03", "-0.289613, 151.714, 21.576, 1.03", "-0.0395881, 153.043, 22.3836, 1.03", "0.155401, 154.423, 23.1777, 1.03", "0.164607, 154.543, 23.2379, 1.03", "0.232592, 155.492, 23.6227, 1.03", "0.240904, 155.579, 23.6518, 1.03", "0.476138, 157.173, 24.0766, 1.03", "0.511212, 157.359, 24.1121, 1.03", "0.722235, 158.467, 24.2589, 1.25", "1.02737, 160.091, 24.4643, 1.25", "1.28995, 161.459, 24.628, 1.25", "1.48898, 162.702, 24.7877, 0.88", "1.61809, 163.934, 24.9402, 0.74", "1.63295, 164.969, 25.0606, 1.18", "1.50686, 166.606, 25.2428, 1.4", "1.47153, 166.796, 25.2648, 1.4", "1.11017, 168.114, 25.4137, 1.4", "0.633993, 169.537, 25.6058, 1.18", "0.163472, 170.833, 25.7873, 1.03", "0.131974, 170.917, 25.7983, 1.03", "-0.345107, 172.12, 25.949, 1.03", "-0.586632, 172.745, 26.0282, 0.88", "-1.21041, 174.494, 26.2584, 1.11", "-1.23766, 174.58, 26.2755, 1.11" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "10.5969, 68.0772, 4.11114, 0.52", "10.253, 68.8846, 3.52442, 0.52", "9.91681, 69.4797, 3.07789, 0.74", "9.57385, 69.9082, 2.71087, 0.74", "9.43469, 70.0553, 2.57557, 0.74", "9.16624, 70.2968, 2.25561, 0.74", "8.72535, 70.6459, 1.62784, 0.44", "8.47376, 70.808, 1.24234, 0.81", "8.02895, 71.0837, 0.511381, 0.81", "8.00579, 71.0995, 0.467301, 0.81", "7.2068, 71.7414, -1.15284, 1.03", "6.68137, 72.2634, -2.32572, 0.81", "6.53746, 72.4452, -2.67552, 0.81", "6.23467, 72.8884, -3.39069, 0.88", "5.87528, 73.4443, -4.14437, 0.81", "5.55911, 73.8631, -4.66489, 0.81", "5.05814, 74.4064, -5.2585, 0.59", "4.75607, 74.6439, -5.56563, 0.59", "4.21333, 74.8979, -6.11333, 0.88", "3.54803, 75.0808, -7.22603, 0.88", "3.05896, 75.1564, -8.30994, 0.88", "2.82817, 75.1737, -8.91813, 1.25", "2.42123, 75.1814, -10.1021, 1.25", "1.95427, 75.1852, -11.5669, 1.11", "0.558195, 75.2702, -16.4338, 1.03", "0.19691, 75.3242, -17.8425, 0.66", "0.185214, 75.3292, -17.8996, 0.66", "0.00330876, 75.4894, -19.0214, 0.52", "-0.0587322, 75.6002, -19.5305, 0.52", "-0.112854, 75.8521, -20.29, 0.52", "-0.106603, 75.8838, -20.3408, 0.52", "0.243057, 76.7253, -21.5957, 1.25", "0.318799, 76.9142, -21.882, 1.69", "0.334869, 76.9504, -21.9375, 1.69", "0.406166, 77.1465, -22.2423, 1.69", "0.551022, 78.0663, -23.6895, 0.88", "0.478375, 79.0219, -25.0348, 0.59", "0.366921, 79.3743, -25.4932, 0.81", "0.351771, 79.4134, -25.5469, 0.81", "0.215612, 79.7685, -26.0721, 1.11", "-0.0583415, 80.5082, -27.1764, 1.11", "-0.202037, 80.9207, -27.7637, 0.96", "-0.41027, 81.711, -28.9098, 0.88", "-0.592129, 82.6895, -30.2523, 0.81", "-0.674486, 83.559, -31.4265, 0.52", "-0.656429, 83.8195, -31.8214, 0.52", "-0.570235, 84.1483, -32.3328, 0.59", "-0.539085, 84.2137, -32.4346, 0.59", "-0.250921, 84.6564, -33.0805, 0.59", "0.281231, 85.3822, -34.1071, 0.81", "1.08546, 86.343, -35.5464, 1.4", "1.37195, 86.6338, -36.0583, 1.62", "1.80485, 86.9843, -36.7919, 1.84", "1.83385, 87.0039, -36.8387, 1.84" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "22.3878, 49.5769, 7.36029, 1.18", "21.4784, 51.4037, 8.57798, 1.18", "21.1088, 52.5523, 9.17, 0.96", "21.0988, 52.6435, 9.20438, 0.96", "21.2123, 53.9036, 9.58408, 0.74", "21.2319, 53.9945, 9.60663, 0.74", "21.4567, 54.691, 9.75983, 0.88", "21.9215, 55.6379, 9.93583, 0.88", "22.4487, 56.5969, 10.159, 0.59", "22.9206, 57.4678, 10.5007, 0.52", "23.2761, 58.1238, 10.8673, 0.81", "23.7357, 59.0005, 11.4033, 0.52", "24.4224, 60.3865, 12.3985, 0.88", "24.5101, 60.6014, 12.5836, 0.88", "24.8688, 61.7844, 13.8277, 1.33", "24.8972, 61.9671, 14.06, 1.33" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "22.3878, 49.5769, 7.36029, 1.11", "24.8591, 48.6991, 6.01183, 1.11", "25.678, 48.461, 5.67397, 1.03", "26.6084, 48.2048, 5.35857, 0.88", "28.2907, 47.7526, 4.95561, 0.59", "29.2348, 47.4749, 4.76585, 0.81", "30.0797, 47.2087, 4.60261, 0.81", "30.7957, 46.9908, 4.51555, 1.03", "31.1058, 46.921, 4.45764, 1.03", "32.2083, 46.7237, 4.13134, 1.03", "33.853, 46.3666, 3.5018, 0.66", "35.1383, 46.0153, 2.89402, 0.81", "36.3567, 45.589, 2.22423, 0.59", "37.4915, 45.1049, 1.51108, 0.96", "39.0599, 44.3153, 0.436466, 0.59", "40.1309, 43.6807, -0.3661, 0.59", "41.1334, 43.0019, -1.09795, 0.96", "42.013, 42.3481, -1.66323, 0.81", "42.8552, 41.6829, -2.08356, 0.81", "43.355, 41.3026, -2.23826, 0.96", "44.4569, 40.6419, -2.40821, 0.37", "45.4751, 40.255, -2.48776, 0.37", "46.6924, 39.9964, -2.51359, 0.44", "47.5043, 39.9254, -2.52127, 0.81", "48.4536, 39.9055, -2.52778, 1.03", "49.8607, 39.8779, -2.5564, 0.52", "50.3698, 39.8315, -2.58554, 0.44", "50.4382, 39.8151, -2.59697, 0.44", "51.8267, 39.1928, -2.89795, 0.44", "52.3057, 38.9008, -3.00718, 0.88", "53.1266, 38.2839, -3.15271, 1.03", "54.1772, 37.41, -3.21411, 1.03", "55.1083, 36.6407, -3.19623, 0.96", "56.0641, 35.9284, -3.0849, 0.52", "56.1201, 35.8898, -3.0722, 0.52", "56.7985, 35.5259, -2.85688, 0.59", "57.6855, 35.2041, -2.46697, 0.59", "58.3106, 35.0573, -2.11171, 0.29", "59.2176, 34.9081, -1.53726, 0.29", "59.2756, 34.8992, -1.50063, 0.29", "59.9965, 34.7469, -1.05036, 0.66", "60.5794, 34.5879, -0.69083, 0.81", "61.3011, 34.2881, -0.237138, 0.88", "61.4018, 34.2259, -0.162185, 0.88", "61.9413, 33.7946, 0.277997, 1.03", "62.3759, 33.4262, 0.629357, 1.03", "62.4209, 33.3866, 0.663916, 1.03", "62.9958, 32.871, 1.10336, 0.81", "63.9492, 32.0415, 1.80962, 0.37", "64.4771, 31.6205, 2.1741, 0.66", "64.9276, 31.2847, 2.46278, 0.66", "65.5947, 30.8236, 2.81786, 0.52", "66.1673, 30.4653, 3.04774, 0.52", "67.0219, 29.9587, 3.29839, 0.96", "67.6749, 29.5553, 3.42382, 1.25", "68.4815, 29.0317, 3.55559, 1.03", "69.3553, 28.4323, 3.6779, 0.81", "70.2941, 27.8004, 3.79078, 0.66", "70.7747, 27.5034, 3.85045, 0.74", "71.3314, 27.1846, 3.93213, 0.74", "72.1439, 26.7532, 4.10408, 0.37", "72.195, 26.7289, 4.11982, 0.37", "72.8807, 26.4326, 4.40045, 0.29", "73.89, 26.0607, 4.73913, 0.66", "74.6387, 25.8057, 4.93009, 1.03", "75.4385, 25.5313, 5.09327, 0.74", "76.3882, 25.18, 5.24924, 0.74", "76.9808, 24.9254, 5.33458, 0.96", "78.4019, 24.1999, 5.51386, 1.18", "78.9516, 23.8959, 5.57274, 0.96", "79.6581, 23.4905, 5.65177, 0.44", "79.7259, 23.451, 5.6598, 0.44", "80.5719, 22.9383, 5.75355, 0.66", "81.1327, 22.5983, 5.80219, 0.81", "81.4113, 22.4348, 5.80517, 0.81", "82.0895, 22.0684, 5.75671, 0.66", "82.3279, 21.9498, 5.73468, 0.66", "83.1993, 21.538, 5.6942, 0.66", "84.1881, 21.1023, 5.6872, 0.44", "85.6838, 20.4304, 5.74919, 0.37", "86.456, 20.0545, 5.81175, 0.88", "87.5293, 19.4903, 5.9923, 0.88", "88.3693, 19.043, 6.21761, 1.03", "89.0135, 18.7017, 6.46843, 1.03", "89.6047, 18.4119, 6.76188, 0.74", "90.3161, 18.0961, 7.17305, 0.52", "91.225, 17.7285, 7.68546, 0.52", "92.0008, 17.418, 8.10674, 0.29", "92.0697, 17.3896, 8.13755, 0.29", "92.7042, 17.0777, 8.39639, 0.29", "93.2626, 16.7391, 8.58115, 0.59", "93.3461, 16.6778, 8.6028, 0.59", "93.9812, 16.0829, 8.68301, 0.88", "94.5733, 15.3832, 8.72773, 0.74", "95.1337, 14.616, 8.69279, 0.44", "95.5623, 13.9424, 8.60712, 0.29", "95.7831, 13.5565, 8.5329, 0.59", "96.079, 12.9533, 8.38194, 0.44", "96.2907, 12.4309, 8.21334, 0.44", "96.5858, 11.4189, 7.85828, 0.81", "96.5972, 11.3551, 7.83407, 0.81", "96.6416, 10.7419, 7.63029, 1.03", "96.6543, 9.99989, 7.41661, 0.88", "96.6546, 9.93309, 7.40144, 0.88", "96.6686, 8.98708, 7.24678, 0.59", "96.6931, 8.31568, 7.19243, 0.59", "96.758, 7.56234, 7.1667, 0.88", "96.7844, 7.35483, 7.16782, 0.88", "96.9794, 6.34086, 7.23757, 0.37", "97.1364, 5.73482, 7.30309, 0.74", "97.3228, 5.15588, 7.38885, 0.96", "97.605, 4.35215, 7.48182, 0.96", "97.6282, 4.28799, 7.4879, 0.96", "97.8983, 3.59657, 7.51913, 1.25", "98.33, 2.66594, 7.54801, 0.44", "98.658, 2.09846, 7.53219, 0.37", "99.2211, 1.27317, 7.48252, 0.96", "99.7571, 0.58171, 7.43638, 0.96", "100.613, -0.383674, 7.35682, 0.74", "101.343, -1.1071, 7.26228, 0.74", "102.291, -1.94868, 7.14114, 0.29", "102.766, -2.35836, 7.10633, 0.52", "103.482, -2.99394, 7.0986, 0.88", "104.078, -3.55196, 7.11887, 1.03", "105.053, -4.56789, 7.22094, 0.29", "105.429, -5.0307, 7.32792, 0.88", "106.036, -5.89943, 7.73558, 0.81", "106.338, -6.36623, 8.10219, 0.96", "106.626, -6.83248, 8.65152, 0.59", "106.651, -6.87431, 8.71593, 0.59", "107.115, -7.64399, 10.1414, 0.52", "107.387, -8.07714, 10.931, 0.52", "107.732, -8.59844, 11.7721, 0.88", "107.757, -8.63701, 11.8237, 0.88", "107.896, -8.87444, 12.0896, 1.03", "108.201, -9.45799, 12.6156, 1.03", "108.481, -10.1355, 13.0781, 0.44", "108.724, -10.9174, 13.5417, 0.44", "108.926, -11.6761, 13.9572, 0.44", "109.131, -12.4472, 14.3953, 0.52", "109.289, -13.0067, 14.7223, 0.44", "109.54, -13.8258, 15.2095, 0.44", "109.729, -14.3824, 15.5326, 0.81", "109.961, -14.9784, 15.8485, 0.81", "110.284, -15.6923, 16.2193, 0.37", "110.642, -16.402, 16.5569, 0.81", "110.887, -16.8536, 16.7698, 0.88", "111.08, -17.1928, 16.9214, 0.88", "111.398, -17.7771, 17.1879, 0.66", "111.866, -18.6722, 17.5976, 0.44", "112.282, -19.4222, 17.9494, 0.29", "112.653, -19.9871, 18.1969, 0.59", "113.038, -20.5141, 18.4058, 0.74", "113.125, -20.6271, 18.4448, 0.74", "113.56, -21.172, 18.5626, 0.59", "114.225, -22.0057, 18.6081, 0.44", "114.932, -22.932, 18.5816, 0.44", "115.26, -23.4057, 18.541, 0.44", "115.667, -24.0658, 18.4669, 0.74", "116.167, -24.9671, 18.3521, 0.74", "116.64, -25.9332, 18.2178, 0.29", "116.824, -26.345, 18.1568, 0.96", "117.025, -26.7983, 18.107, 0.96", "117.34, -27.4394, 18.0511, 0.81", "117.375, -27.5017, 18.0501, 0.81", "117.665, -27.9802, 18.1059, 0.96", "118.129, -28.668, 18.2116, 0.52", "118.474, -29.1457, 18.2866, 0.52", "118.508, -29.1931, 18.2942, 0.52", "118.952, -29.8582, 18.3606, 0.44", "119.45, -30.6533, 18.4069, 0.59", "120.149, -31.8357, 18.454, 0.29", "120.392, -32.2627, 18.4687, 0.96", "120.783, -32.9733, 18.4831, 1.33", "121.421, -34.1784, 18.5068, 0.29", "121.983, -35.2593, 18.5372, 0.29", "122.295, -35.8717, 18.5649, 0.88", "122.326, -35.9358, 18.5721, 0.88", "122.634, -36.6588, 18.7005, 0.88", "123.046, -37.7751, 18.9846, 0.29", "123.304, -38.617, 19.2761, 0.29", "123.365, -38.8826, 19.3843, 0.66", "123.531, -39.8358, 19.789, 0.66", "123.632, -40.5344, 20.0979, 0.66", "123.711, -41.1708, 20.3908, 0.96", "123.774, -41.7704, 20.654, 0.74", "123.832, -42.4494, 20.9487, 0.52", "123.898, -43.3, 21.335, 0.44", "123.921, -43.5085, 21.4301, 0.44", "124.059, -44.383, 21.8088, 0.37", "124.268, -45.4264, 22.243, 0.37", "124.513, -46.5383, 22.681, 0.74", "124.794, -47.4569, 22.9854, 0.29", "125.177, -48.3416, 23.2576, 0.29", "125.692, -49.257, 23.4788, 0.74", "125.969, -49.6166, 23.5406, 1.03", "126.018, -49.6652, 23.545, 1.03", "127.131, -50.5877, 23.5667, 0.22", "128.074, -51.3145, 23.5456, 0.22", "128.646, -51.747, 23.5357, 0.81", "129.246, -52.223, 23.5493, 0.81", "129.298, -52.268, 23.5508, 0.81", "130.077, -53.0435, 23.6053, 0.29", "130.599, -53.6934, 23.6103, 0.44", "130.661, -53.7725, 23.599, 0.44", "131.043, -54.2307, 23.5068, 0.44", "131.094, -54.2891, 23.4844, 0.44", "131.672, -54.9757, 23.1695, 0.52", "132.58, -56.1099, 22.5152, 0.52", "133.172, -56.8141, 22.0198, 0.66", "133.592, -57.2583, 21.6433, 0.59", "134.618, -58.2623, 20.6626, 0.37", "135.081, -58.7057, 20.2229, 0.29", "136.03, -59.6025, 19.3164, 0.74", "137.123, -60.6737, 18.3054, 0.81", "138.481, -62.0603, 17.0398, 0.29", "138.966, -62.5606, 16.5564, 0.66", "139.576, -63.1768, 15.9639, 0.29", "140.25, -63.8583, 15.3148, 0.59", "140.66, -64.2902, 14.9196, 0.74", "141.601, -65.3561, 13.9896, 1.33", "143.108, -67.1132, 12.4856, 0.29", "143.395, -67.4352, 12.2097, 0.59", "143.598, -67.6522, 12.0265, 0.59", "144.615, -68.681, 11.2693, 0.52", "145.101, -69.1418, 10.99, 0.74", "145.467, -69.4755, 10.8694, 0.74", "146.205, -70.1106, 10.7874, 0.37", "147.316, -71.0162, 10.6808, 0.37", "148.118, -71.645, 10.6583, 0.37", "148.532, -71.9627, 10.6811, 0.66", "148.931, -72.2658, 10.6986, 0.88", "149.257, -72.5147, 10.7046, 0.88", "150.627, -73.5781, 10.7152, 0.29", "151.775, -74.5121, 10.6993, 0.22", "152.0, -74.7082, 10.692, 0.66", "152.801, -75.4509, 10.6523, 0.22", "153.108, -75.7595, 10.6168, 0.52", "153.64, -76.3652, 10.5291, 0.29", "153.895, -76.7179, 10.4791, 0.74", "154.136, -77.112, 10.4008, 0.74", "154.59, -77.9303, 10.2061, 0.22", "155.092, -78.9246, 9.95545, 0.37", "155.32, -79.3705, 9.81228, 0.37", "155.561, -79.8641, 9.63313, 0.59", "155.772, -80.2905, 9.48312, 0.59", "156.122, -81.0221, 9.22591, 0.22", "156.281, -81.3486, 9.12158, 0.52", "156.88, -82.4726, 8.80958, 0.29", "157.21, -83.0219, 8.63268, 1.11", "157.583, -83.5931, 8.42357, 1.18" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_104",
    "id" : "dend_104",
    "points3d" : [ "-17.262, -157.411, -137.284, 0.29", "-17.2094, -158.667, -137.5, 0.29", "-17.2151, -159.455, -137.62, 0.29", "-17.2848, -160.409, -137.64, 0.22", "-17.3832, -160.999, -137.549, 0.74", "-17.4786, -161.442, -137.397, 0.88", "-17.4911, -161.501, -137.372, 0.88", "-17.5982, -161.856, -137.167, 0.88", "-17.936, -162.81, -136.495, 0.29", "-18.216, -163.594, -135.826, 0.29", "-18.4686, -164.358, -135.094, 0.88", "-18.6143, -164.812, -134.629, 0.88" ],
    "parent" : "dend_102",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_103",
    "id" : "dend_103",
    "points3d" : [ "-17.262, -157.411, -137.284, 0.59", "-18.5871, -158.713, -139.961, 0.59", "-18.9326, -159.065, -140.65, 0.37", "-19.3796, -159.49, -141.445, 0.37", "-19.975, -160.064, -142.455, 0.96", "-20.5313, -160.627, -143.389, 1.33", "-21.6448, -161.833, -145.292, 0.59", "-21.889, -162.17, -145.739, 0.29", "-22.2347, -162.687, -146.447, 0.29", "-22.4359, -163.034, -146.976, 0.88", "-22.5505, -163.248, -147.334, 0.88", "-22.766, -163.687, -148.11, 0.66", "-22.9949, -164.233, -149.104, 0.88", "-23.2986, -165.074, -150.643, 1.4", "-23.8593, -166.692, -153.648, 0.59", "-24.1677, -167.418, -155.027, 0.59", "-24.2963, -167.7, -155.576, 0.52", "-24.379, -167.887, -155.946, 1.03", "-24.4999, -168.154, -156.464, 0.88", "-24.9789, -169.129, -158.291, 0.22", "-25.352, -169.756, -159.375, 0.59", "-25.8707, -170.433, -160.621, 0.74", "-26.4152, -171.045, -161.828, 0.44", "-26.7533, -171.4, -162.524, 0.74", "-27.3706, -172.082, -163.766, 1.11", "-27.6807, -172.462, -164.358, 0.96", "-28.7685, -173.877, -166.25, 0.74", "-28.7932, -173.907, -166.285, 0.74", "-29.227, -174.435, -166.825, 0.74", "-29.8247, -175.237, -167.575, 0.74", "-30.3961, -176.103, -168.256, 0.37", "-30.6821, -176.588, -168.616, 1.03", "-30.9433, -177.112, -168.935, 1.18", "-31.6719, -178.576, -169.848, 0.29", "-31.9199, -179.065, -170.158, 0.59", "-32.1157, -179.46, -170.381, 0.59", "-32.3636, -180.07, -170.661, 0.44", "-32.5311, -180.563, -170.847, 0.29", "-32.5485, -180.619, -170.863, 0.29", "-32.6854, -181.059, -170.946, 0.59", "-32.8362, -181.525, -171.187, 0.59", "-32.9466, -181.941, -171.559, 0.44", "-33.0224, -182.348, -172.076, 0.29", "-33.1058, -182.803, -172.805, 0.88", "-33.193, -183.285, -173.719, 1.11", "-33.3993, -184.352, -176.007, 0.74", "-33.5231, -184.954, -177.334, 0.59", "-33.6757, -185.632, -178.841, 0.29", "-33.8742, -186.375, -180.457, 0.74", "-34.2003, -187.395, -182.554, 1.03", "-34.6149, -188.457, -184.499, 0.52", "-34.8165, -188.89, -185.114, 0.44", "-34.9803, -189.204, -185.456, 0.88", "-35.324, -189.822, -185.912, 1.11", "-35.5381, -190.197, -186.051, 1.11", "-35.959, -190.903, -186.113, 0.59", "-36.4024, -191.664, -186.084, 0.44", "-36.6518, -192.115, -186.087, 0.66", "-37.0654, -192.97, -186.124, 0.59", "-37.3669, -193.635, -186.36, 0.37", "-37.6383, -194.21, -186.708, 0.44", "-37.9823, -194.902, -187.269, 0.66", "-38.2503, -195.428, -187.777, 0.81", "-38.5023, -195.919, -188.308, 0.88", "-39.8539, -198.341, -191.137, 0.52", "-40.0914, -198.703, -191.585, 0.29", "-40.2485, -198.901, -191.845, 0.59", "-40.4597, -199.115, -192.116, 0.59", "-41.0261, -199.585, -192.593, 0.37", "-41.6504, -200.004, -192.855, 0.37", "-42.3265, -200.393, -192.811, 0.37", "-42.3845, -200.425, -192.807, 0.37", "-43.2674, -200.881, -192.733, 0.22", "-43.6278, -201.037, -192.69, 0.37", "-43.9743, -201.147, -192.623, 0.37", "-44.8034, -201.354, -192.47, 0.29" ],
    "parent" : "dend_102",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_101",
    "id" : "dend_101",
    "points3d" : [ "22.4839, -98.3189, -54.7168, 0.29", "23.1101, -98.5015, -55.0636, 0.29", "23.3892, -98.6086, -55.2192, 0.37", "23.4351, -98.6303, -55.2424, 0.37", "23.9876, -98.9696, -55.5282, 0.22", "24.0351, -99.0007, -55.5527, 0.22", "24.3404, -99.2111, -55.7065, 0.52", "24.3785, -99.2438, -55.7256, 0.52", "24.6978, -99.5329, -55.8542, 0.52", "25.2687, -100.037, -56.0393, 0.22", "25.3092, -100.071, -56.0498, 0.22", "25.492, -100.228, -56.0971, 0.37", "25.8177, -100.508, -56.1804, 0.22", "26.4791, -101.074, -56.3374, 0.96", "26.5207, -101.11, -56.3453, 0.96" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_100",
    "id" : "dend_100",
    "points3d" : [ "22.4839, -98.3189, -54.7168, 0.37", "22.9167, -99.1714, -55.6524, 0.37", "23.1838, -99.8042, -56.2823, 0.66", "23.3049, -100.125, -56.575, 0.88", "23.4273, -100.486, -56.8731, 1.18", "23.7799, -101.644, -57.7416, 0.44", "23.8723, -101.962, -57.9585, 0.29", "23.9858, -102.477, -58.2368, 0.88", "24.0476, -102.78, -58.3678, 1.11", "24.1359, -103.167, -58.504, 0.66", "24.2719, -103.67, -58.6227, 0.37", "24.4484, -104.122, -58.6526, 0.52", "24.4932, -104.206, -58.6552, 0.52", "24.8342, -104.697, -58.6717, 0.59", "25.0792, -105.0, -58.6822, 0.66", "25.1392, -105.064, -58.6795, 0.66", "25.493, -105.432, -58.643, 0.37", "25.901, -105.85, -58.5064, 0.37", "26.2156, -106.166, -58.3651, 0.37", "26.5513, -106.496, -58.1962, 0.96", "27.0794, -106.986, -57.9254, 1.25", "27.5646, -107.407, -57.6982, 0.96", "28.7889, -108.406, -57.1031, 0.52", "29.3036, -108.809, -56.8498, 0.59", "29.6173, -109.045, -56.6984, 0.74", "30.0158, -109.337, -56.521, 0.74", "30.6507, -109.798, -56.2983, 0.29", "31.216, -110.199, -56.1458, 0.66", "31.2526, -110.229, -56.1425, 0.66", "31.5344, -110.509, -56.1207, 0.29", "31.7897, -110.822, -56.1065, 0.74", "32.0192, -111.174, -56.1067, 0.88", "32.0437, -111.215, -56.1078, 0.88", "32.3282, -111.671, -56.1454, 0.37", "32.6524, -112.151, -56.1825, 0.59", "32.8524, -112.426, -56.203, 0.88", "33.2133, -112.89, -56.2389, 0.29", "33.5077, -113.244, -56.2535, 0.22", "33.6472, -113.405, -56.2562, 0.81", "33.8867, -113.666, -56.2543, 1.18", "33.9207, -113.701, -56.2538, 1.18", "34.3113, -114.09, -56.242, 1.03", "34.8352, -114.641, -56.1614, 0.29", "35.2762, -115.172, -56.0449, 0.22", "35.3145, -115.227, -56.0274, 0.22", "35.5777, -115.647, -55.8698, 0.29", "35.7947, -116.01, -55.7297, 1.18", "36.2557, -116.75, -55.4175, 0.74", "36.4983, -117.128, -55.2571, 0.52", "36.8342, -117.602, -55.0276, 0.29", "37.1275, -117.989, -54.8093, 0.52", "37.4492, -118.373, -54.5539, 0.96", "37.9201, -118.874, -54.2197, 1.18", "38.4039, -119.331, -53.8917, 1.03", "39.0738, -119.941, -53.4274, 0.74", "39.7743, -120.601, -52.9283, 0.66", "40.1743, -121.021, -52.6268, 1.03", "40.6838, -121.623, -52.2388, 0.88", "41.2198, -122.333, -51.8645, 0.74", "41.5954, -122.881, -51.649, 0.74", "41.9154, -123.404, -51.5257, 0.74", "42.2705, -124.043, -51.4494, 0.52", "42.5454, -124.563, -51.4193, 0.52", "42.8283, -125.111, -51.4096, 0.44", "43.0994, -125.633, -51.433, 0.74", "43.3112, -126.012, -51.4569, 0.96", "43.5125, -126.354, -51.481, 0.96", "43.9358, -127.051, -51.5345, 0.37", "44.3077, -127.631, -51.5878, 0.37", "44.33, -127.664, -51.5912, 0.37", "44.6592, -128.081, -51.6504, 0.66", "44.9139, -128.389, -51.6997, 0.88", "45.2546, -128.775, -51.7748, 0.59", "45.5928, -129.131, -51.8685, 0.22", "45.6292, -129.161, -51.8782, 0.22", "46.09, -129.504, -51.9988, 0.22" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_96",
    "id" : "dend_96",
    "points3d" : [ "-11.2619, -184.566, -32.7888, 0.52", "-9.70167, -184.462, -33.5377, 0.52", "-8.92888, -184.479, -33.9504, 0.52", "-8.12563, -184.569, -34.5086, 0.66", "-7.32034, -184.714, -35.1659, 0.59", "-6.34915, -184.949, -36.01, 0.29", "-6.06747, -185.044, -36.2951, 0.59", "-5.76757, -185.19, -36.7131, 0.59", "-4.9729, -185.668, -37.9653, 0.29", "-4.54799, -185.97, -38.683, 0.88", "-4.37514, -186.104, -39.0063, 0.88", "-3.56537, -186.674, -40.8545, 0.29", "-3.0919, -186.943, -42.1168, 0.59", "-2.92045, -187.003, -42.7093, 0.44", "-2.90616, -187.005, -42.7723, 0.44", "-2.6351, -186.963, -44.2218, 0.44", "-2.22479, -186.736, -46.7853, 0.29", "-2.14906, -186.656, -47.3151, 0.29", "-1.76674, -186.218, -49.5793, 0.29", "-1.75662, -186.205, -49.651, 0.29", "-1.74644, -186.192, -49.7156, 0.44", "-1.7243, -186.168, -49.8422, 0.44", "-1.55508, -185.985, -50.8024, 0.29", "-1.413, -185.825, -51.6083, 0.81", "-0.285894, -184.526, -57.9815, 0.29", "-0.0481738, -184.243, -59.3507, 0.22", "0.1933, -183.961, -60.8045, 0.44", "0.61108, -183.48, -63.6551, 0.29", "0.682327, -183.396, -64.217, 0.88", "0.728633, -183.361, -64.6156, 0.88", "0.738127, -183.359, -64.6795, 0.88", "1.14715, -183.301, -67.8832, 0.29", "1.47175, -183.233, -71.0587, 0.52", "1.47717, -183.231, -71.1224, 0.52", "1.80326, -183.108, -75.3047, 0.22", "1.87347, -183.066, -76.2791, 0.37", "1.99919, -182.964, -78.1592, 0.96", "2.13989, -182.753, -80.6218, 0.22", "2.16181, -182.701, -81.0296, 0.59" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_95",
    "id" : "dend_95",
    "points3d" : [ "-11.2619, -184.566, -32.7888, 0.81", "-11.2484, -185.362, -32.9908, 0.81", "-11.2146, -186.106, -33.1612, 1.03", "-11.1351, -187.207, -33.3919, 0.96", "-11.0309, -188.191, -33.5805, 0.74", "-10.9114, -189.058, -33.643, 0.29", "-10.8308, -189.597, -33.6381, 0.29", "-10.7608, -189.996, -33.5935, 0.52", "-10.7071, -190.356, -33.5092, 0.52", "-10.6543, -190.821, -33.3505, 0.52", "-10.5103, -192.428, -32.7679, 0.29", "-10.4502, -193.148, -32.5266, 0.52", "-10.4052, -193.585, -32.3821, 0.81", "-10.2831, -194.416, -32.0951, 0.88", "-10.1241, -195.071, -31.8776, 1.18", "-9.85668, -195.909, -31.6161, 1.4", "-9.35967, -197.11, -31.2964, 0.52", "-8.81222, -198.175, -31.0174, 0.52", "-8.07996, -199.404, -30.7236, 0.52", "-7.27764, -200.638, -30.4644, 0.74", "-7.22934, -200.711, -30.4508, 0.74", "-6.69236, -201.592, -30.3449, 0.29", "-6.16754, -202.613, -30.3024, 0.29", "-5.68451, -203.754, -30.3552, 0.66", "-5.47087, -204.391, -30.4232, 0.88", "-5.25396, -205.266, -30.5298, 0.88", "-4.94972, -206.614, -30.7526, 0.29", "-4.82542, -207.179, -30.8703, 0.88", "-4.80758, -207.264, -30.8975, 0.88", "-4.67029, -207.843, -31.1323, 1.03", "-4.64539, -207.934, -31.1724, 1.03", "-4.25285, -209.298, -31.75, 0.74", "-3.90581, -210.281, -32.1262, 0.88", "-3.38872, -211.598, -32.5942, 1.18", "-3.12586, -212.244, -32.7955, 1.18", "-2.81001, -212.993, -32.9909, 0.66", "-2.37335, -213.993, -33.1911, 0.29", "-1.92344, -214.983, -33.3085, 0.29", "-1.61814, -215.658, -33.3502, 0.59", "-1.23518, -216.502, -33.3458, 0.74", "-0.86275, -217.351, -33.3297, 0.74", "-0.659255, -217.867, -33.2613, 0.74", "-0.488289, -218.41, -33.1423, 0.88", "-0.250083, -219.297, -32.8925, 0.81", "0.0526898, -220.376, -32.5326, 0.81", "0.369922, -221.425, -32.1293, 0.59", "0.994954, -223.303, -31.3405, 0.37", "1.30227, -224.124, -30.9715, 0.52", "1.59509, -224.781, -30.6652, 0.44", "1.91232, -225.346, -30.4018, 0.52", "2.0134, -225.495, -30.3391, 0.52", "2.4345, -226.025, -30.2133, 0.37", "2.55296, -226.175, -30.2134, 0.37", "2.97899, -226.822, -30.2258, 0.81", "3.18991, -227.335, -30.2689, 0.96", "3.20829, -227.41, -30.284, 0.96", "3.26368, -227.871, -30.4053, 0.81", "3.30015, -228.82, -30.7356, 0.52", "3.30478, -229.458, -30.9737, 0.52", "3.30593, -230.575, -31.402, 0.29", "3.31762, -231.724, -31.8304, 0.74", "3.33354, -232.517, -32.1171, 0.88", "3.38389, -233.664, -32.4577, 0.52", "3.46157, -234.821, -32.709, 0.52", "3.53518, -235.666, -32.803, 0.74", "3.62919, -236.476, -32.8056, 0.44", "3.65406, -236.662, -32.7902, 0.44", "3.82303, -238.14, -32.5938, 0.44", "3.87535, -239.024, -32.4186, 0.22", "3.84605, -239.872, -32.2413, 0.22", "3.76565, -240.498, -32.1572, 0.74", "3.74927, -240.585, -32.1533, 0.74", "3.58713, -241.291, -32.1824, 0.96", "3.56361, -241.378, -32.1955, 0.96", "3.37642, -242.201, -32.3336, 0.96", "3.20516, -243.615, -32.6262, 0.44", "3.16514, -244.357, -32.7173, 0.52", "3.16455, -244.445, -32.723, 0.52", "3.17533, -245.18, -32.7606, 0.81", "3.21996, -246.197, -32.8232, 0.74", "3.32559, -247.653, -32.9094, 0.37", "3.43745, -249.502, -32.9888, 0.37", "3.45895, -250.19, -32.9894, 1.18", "3.47147, -251.451, -32.9585, 0.96", "3.45816, -252.806, -32.897, 0.52", "3.40758, -254.354, -32.798, 0.52", "3.33162, -256.091, -32.6396, 0.74", "3.28861, -257.91, -32.4884, 0.81", "3.28805, -258.009, -32.4747, 0.81", "3.2947, -258.81, -32.2826, 1.03", "3.29554, -258.908, -32.2512, 1.03", "3.33021, -259.815, -31.9289, 0.52", "3.39572, -260.682, -31.6357, 0.37", "3.48425, -261.519, -31.4069, 0.88", "3.58055, -262.422, -31.1733, 0.96", "3.6676, -263.121, -30.9957, 0.74", "3.79203, -263.943, -30.8078, 0.22", "3.9594, -264.772, -30.6232, 0.22", "4.1829, -265.463, -30.4737, 0.74", "4.41167, -265.934, -30.3743, 1.03", "4.76832, -266.479, -30.2643, 1.03", "5.3155, -267.125, -30.079, 0.59", "6.15571, -267.98, -29.7843, 0.37", "7.01666, -268.812, -29.4698, 0.22", "7.63919, -269.446, -29.2328, 0.81", "8.11707, -269.972, -29.0529, 0.81", "8.91206, -270.969, -28.7645, 0.29", "9.28708, -271.485, -28.6382, 0.59", "9.64671, -272.034, -28.547, 0.74", "10.1385, -272.911, -28.4458, 0.74", "10.5511, -273.722, -28.4048, 0.52", "11.2182, -275.045, -28.5177, 0.22", "11.5524, -275.735, -28.655, 0.22", "11.7839, -276.227, -28.7721, 0.74", "12.0716, -276.883, -28.9522, 0.74", "12.7152, -278.457, -29.4311, 0.22", "13.3008, -280.153, -29.9702, 0.81", "13.5003, -280.864, -30.1858, 0.81", "13.7896, -282.095, -30.5096, 0.22", "13.9943, -283.106, -30.7176, 0.22", "14.072, -283.545, -30.7855, 0.81", "14.1701, -284.198, -30.8449, 1.03", "14.3871, -285.726, -30.8741, 0.29", "14.4698, -286.281, -30.8857, 0.29", "14.652, -287.556, -30.915, 0.29", "14.7981, -288.652, -30.9193, 0.15", "14.8492, -289.095, -30.921, 0.52", "14.8946, -289.464, -30.9224, 0.66" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-20.4897, -85.0096, -3.39424, 0.96", "-20.1507, -86.2885, -3.80229, 0.96", "-19.8342, -87.6374, -4.20699, 0.96", "-19.5354, -89.1427, -4.61855, 0.96", "-19.2751, -90.6981, -5.00816, 0.81", "-19.0499, -92.2581, -5.42488, 0.66", "-18.8912, -93.5759, -5.77643, 0.66", "-18.8806, -93.7252, -5.81344, 0.66", "-18.8304, -94.7028, -6.05679, 0.88", "-18.789, -95.349, -6.21192, 1.03", "-18.5294, -97.0095, -6.62278, 0.74", "-18.2591, -98.0161, -6.87249, 0.74", "-17.8519, -99.0904, -7.13838, 0.74", "-17.2412, -100.425, -7.45185, 0.96", "-16.8135, -101.216, -7.6199, 1.03", "-16.2236, -102.272, -7.79632, 1.03", "-15.5379, -103.599, -7.93485, 0.88", "-15.1628, -104.485, -8.0009, 0.88", "-15.1019, -104.764, -8.01168, 0.88", "-15.1693, -105.454, -7.95372, 0.59", "-15.7461, -106.776, -7.76447, 0.52", "-16.4757, -107.756, -7.5841, 0.74", "-17.1304, -108.38, -7.39518, 0.66", "-18.0565, -109.129, -7.12172, 0.52", "-19.5341, -110.218, -6.64402, 0.52", "-20.2823, -110.742, -6.38767, 0.74", "-21.2477, -111.422, -6.05693, 1.03", "-22.4564, -112.35, -5.66187, 1.03", "-23.2792, -113.047, -5.41998, 1.03", "-24.3932, -114.118, -5.13752, 0.74", "-25.0746, -114.873, -5.03329, 0.66", "-25.7678, -115.747, -4.91838, 0.52", "-26.3215, -116.572, -4.80166, 0.52", "-26.359, -116.638, -4.79367, 0.52", "-26.7164, -117.344, -4.66422, 0.66", "-27.0268, -118.048, -4.50433, 0.81", "-27.4541, -119.023, -4.22394, 0.52", "-27.9781, -120.226, -3.92635, 0.52", "-28.0858, -120.471, -3.90853, 0.81", "-28.4667, -121.263, -4.0111, 0.81", "-28.838, -121.904, -4.24295, 0.96", "-29.4241, -122.718, -4.77176, 1.03", "-30.2899, -123.601, -5.61178, 1.18", "-31.3833, -124.507, -6.66511, 0.81", "-31.92, -124.897, -7.1852, 0.88", "-32.6011, -125.321, -7.81904, 1.18", "-33.329, -125.742, -8.44235, 1.55", "-34.4104, -126.368, -9.20671, 0.66", "-34.9211, -126.698, -9.46398, 0.66", "-35.3928, -127.075, -9.60888, 0.52", "-36.2187, -127.888, -9.76175, 0.52", "-36.8568, -128.674, -9.80377, 0.37", "-37.5648, -129.743, -9.69763, 0.37", "-37.9985, -130.54, -9.55996, 0.74", "-38.4721, -131.474, -9.34136, 1.25", "-38.5014, -131.53, -9.32651, 1.25", "-38.9559, -132.332, -9.11399, 1.18", "-39.6855, -133.478, -8.831, 1.03", "-40.1774, -134.167, -8.70201, 0.66", "-40.7842, -134.963, -8.59713, 0.37", "-41.5811, -135.973, -8.53863, 0.37", "-42.1361, -136.656, -8.5404, 0.44", "-42.1931, -136.721, -8.54575, 0.44", "-42.9121, -137.501, -8.69028, 0.37", "-43.4434, -138.076, -8.81402, 0.59", "-43.7672, -138.442, -8.90036, 0.59", "-44.3116, -139.127, -9.06455, 0.44", "-44.7521, -139.715, -9.20488, 0.66", "-45.2416, -140.388, -9.35934, 0.88", "-45.7798, -141.158, -9.52838, 0.88", "-46.5315, -142.242, -9.78346, 0.66", "-47.1074, -143.107, -10.0037, 0.96", "-47.5312, -143.73, -10.1786, 1.18", "-48.452, -144.956, -10.544, 0.88", "-48.8369, -145.389, -10.6869, 0.96", "-49.771, -146.206, -11.0019, 0.59", "-49.8253, -146.238, -11.0177, 0.59", "-50.9244, -146.623, -11.2584, 0.59", "-51.8905, -146.824, -11.4345, 0.52", "-52.5926, -146.917, -11.5409, 0.52", "-53.3266, -147.02, -11.5882, 0.74", "-54.1053, -147.147, -11.5856, 0.96", "-54.8699, -147.302, -11.5702, 0.81", "-56.2193, -147.662, -11.5288, 0.96", "-57.0933, -147.96, -11.5112, 0.96", "-58.4176, -148.473, -11.4792, 0.44", "-59.222, -148.828, -11.4651, 0.44", "-60.0887, -149.251, -11.4734, 0.66", "-60.8135, -149.609, -11.5222, 0.59", "-61.6648, -150.036, -11.6128, 0.59", "-61.7433, -150.075, -11.626, 0.59", "-62.3868, -150.409, -11.7962, 0.88", "-63.5418, -151.094, -12.1283, 0.96", "-64.392, -151.678, -12.3904, 0.37", "-64.5157, -151.78, -12.4211, 0.37", "-65.3085, -152.585, -12.556, 0.37", "-65.9022, -153.315, -12.6055, 0.29", "-66.4322, -154.114, -12.5931, 0.29", "-66.8046, -154.75, -12.5506, 0.52", "-67.5961, -156.101, -12.4409, 1.03", "-68.0093, -156.761, -12.3951, 1.25", "-68.3589, -157.275, -12.3765, 1.25", "-69.0728, -158.143, -12.3918, 0.88", "-69.8078, -158.87, -12.4734, 0.74", "-70.5996, -159.538, -12.644, 0.74", "-71.2374, -160.01, -12.8421, 0.96", "-72.1265, -160.617, -13.1419, 0.66", "-72.8676, -161.123, -13.4496, 0.74", "-73.3047, -161.435, -13.6509, 1.03", "-73.9135, -161.919, -13.9538, 1.4", "-73.9603, -161.962, -13.9781, 1.4", "-74.3983, -162.476, -14.2074, 1.4", "-75.1813, -163.704, -14.5909, 0.52", "-75.5608, -164.473, -14.7806, 0.81", "-75.8156, -165.028, -14.8963, 0.88", "-76.0693, -165.601, -14.9929, 0.52", "-76.4644, -166.447, -15.1319, 0.44", "-76.8138, -167.171, -15.24, 0.44", "-77.1648, -167.769, -15.3147, 0.44", "-77.5862, -168.333, -15.4343, 0.66", "-77.7016, -168.437, -15.4547, 0.66", "-78.2042, -168.746, -15.5077, 0.88", "-78.3055, -168.791, -15.5137, 0.88", "-78.9681, -169.071, -15.5254, 0.96", "-79.3527, -169.256, -15.5215, 0.66", "-80.3001, -169.773, -15.5073, 0.52", "-80.9443, -170.157, -15.5063, 0.44", "-81.4163, -170.474, -15.5167, 0.74", "-82.0111, -170.918, -15.5492, 0.81", "-82.7468, -171.581, -15.6156, 0.52", "-82.806, -171.646, -15.628, 0.52", "-83.1713, -172.117, -15.759, 0.81", "-83.6935, -172.891, -15.9827, 0.96", "-83.9753, -173.367, -16.1232, 1.11", "-84.3922, -174.082, -16.3345, 0.81", "-84.948, -175.0, -16.6488, 0.66", "-84.9821, -175.051, -16.6698, 0.66", "-85.55, -175.755, -16.9892, 0.52", "-86.1577, -176.272, -17.2665, 0.37", "-86.6949, -176.534, -17.4042, 0.29", "-87.6232, -176.792, -17.5015, 0.66", "-88.1785, -176.91, -17.5053, 0.74", "-89.314, -177.202, -17.4195, 0.29", "-89.8458, -177.37, -17.3502, 0.66", "-90.5778, -177.678, -17.2324, 0.88", "-91.2843, -178.056, -17.1169, 0.88", "-91.6819, -178.304, -17.0544, 0.88", "-92.8255, -179.081, -16.9336, 0.58", "-93.5527, -179.614, -16.9182, 0.81", "-94.1979, -180.104, -16.9342, 1.11", "-94.7717, -180.558, -16.9814, 0.74", "-95.4205, -181.063, -17.0359, 0.88", "-96.0634, -181.515, -17.1025, 0.81", "-96.6945, -181.905, -17.1882, 0.74", "-97.7156, -182.472, -17.3198, 0.44", "-98.6658, -182.97, -17.4385, 0.74", "-99.4325, -183.339, -17.5271, 0.88", "-100.48, -183.725, -17.5615, 0.52", "-101.088, -183.909, -17.5258, 0.59", "-102.229, -184.214, -17.3778, 0.59", "-102.29, -184.232, -17.3665, 0.59", "-102.901, -184.459, -17.2315, 0.66", "-104.603, -185.415, -16.8925, 0.59", "-105.371, -186.005, -16.7521, 0.59", "-105.854, -186.474, -16.7042, 0.81", "-106.548, -187.258, -16.6931, 0.52", "-107.259, -188.151, -16.7699, 0.66", "-108.02, -189.23, -16.9667, 0.44", "-108.443, -189.931, -17.1516, 1.11", "-109.238, -191.28, -17.5491, 0.59", "-109.276, -191.343, -17.5666, 0.59", "-109.738, -192.071, -17.7559, 0.44", "-109.966, -192.387, -17.8326, 0.44", "-110.747, -193.274, -17.9764, 0.44", "-111.303, -193.765, -18.0222, 0.37", "-111.949, -194.185, -18.0146, 0.29", "-112.516, -194.486, -17.9506, 0.66", "-113.083, -194.718, -17.8476, 1.03", "-113.791, -194.952, -17.7079, 1.03", "-114.318, -195.091, -17.6053, 0.81", "-115.224, -195.352, -17.4448, 0.52", "-116.216, -195.749, -17.3011, 0.66", "-116.765, -196.064, -17.2301, 0.29", "-117.035, -196.262, -17.2027, 0.59", "-117.517, -196.65, -17.19, 0.81", "-118.074, -197.084, -17.2086, 0.81", "-118.783, -197.558, -17.289, 0.52", "-119.652, -198.066, -17.4657, 0.74", "-119.712, -198.096, -17.4781, 0.74", "-120.618, -198.496, -17.6689, 0.44", "-121.257, -198.771, -17.8132, 0.74", "-121.954, -199.073, -17.9777, 1.11", "-122.979, -199.551, -18.2262, 0.59", "-123.588, -199.893, -18.3751, 0.66", "-124.196, -200.326, -18.5234, 0.81", "-124.898, -200.98, -18.6914, 0.52", "-125.344, -201.47, -18.7964, 0.66", "-125.74, -201.93, -18.8875, 0.66", "-126.132, -202.37, -19.0077, 0.44", "-126.184, -202.423, -19.0267, 0.44", "-126.994, -203.073, -19.3591, 0.37", "-127.13, -203.144, -19.4181, 0.37", "-128.065, -203.353, -19.8311, 0.37", "-128.906, -203.361, -20.2657, 0.29", "-129.403, -203.31, -20.5429, 0.37", "-129.934, -203.234, -20.8206, 0.44", "-130.663, -203.064, -21.2167, 0.37", "-131.657, -202.786, -21.7592, 0.29", "-132.757, -202.383, -22.3562, 0.22", "-132.986, -202.29, -22.4652, 0.44", "-134.016, -201.839, -23.0177, 0.52" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-20.4897, -85.0096, -3.39424, 0.74", "-21.0997, -85.5231, -3.24342, 0.74", "-21.8443, -86.1538, -3.06005, 0.44", "-22.5785, -86.7644, -2.88101, 0.59", "-23.499, -87.5012, -2.70108, 0.37", "-24.2045, -88.0725, -2.5647, 0.59", "-24.5089, -88.3163, -2.50642, 0.88", "-24.5783, -88.3697, -2.49586, 0.88", "-24.876, -88.5906, -2.46435, 1.11", "-25.5493, -89.0027, -2.41708, 0.88", "-26.3783, -89.3776, -2.37488, 0.37", "-26.894, -89.5517, -2.35991, 0.66", "-27.6975, -89.7655, -2.37315, 0.81", "-28.4415, -89.9544, -2.39979, 0.74", "-29.4765, -90.1998, -2.44893, 0.88", "-30.2058, -90.366, -2.48282, 0.74", "-31.3256, -90.6355, -2.58521, 0.52", "-32.6576, -91.0274, -2.72165, 0.52", "-33.458, -91.3272, -2.76673, 0.74", "-33.5286, -91.3619, -2.76225, 0.74", "-34.1441, -91.8164, -2.29956, 0.88", "-34.8615, -92.4812, -1.28356, 1.03", "-35.2701, -92.8928, -0.547074, 1.18", "-35.8382, -93.4698, 0.630035, 0.96", "-36.5991, -94.2272, 2.3334, 1.18", "-38.8093, -96.3237, 7.33105, 0.66", "-39.1144, -96.6241, 8.08413, 0.66", "-39.4328, -96.9482, 8.8922, 0.81", "-39.7448, -97.2634, 9.62963, 0.81", "-39.7854, -97.3061, 9.71392, 0.81", "-40.272, -97.893, 10.6254, 0.88", "-41.061, -98.935, 12.1259, 0.88", "-41.4768, -99.5914, 13.184, 0.74", "-41.6472, -99.8948, 13.6988, 0.96", "-42.3556, -101.248, 15.9746, 0.44", "-42.9545, -102.442, 17.9652, 1.25", "-43.7439, -104.117, 20.7009, 0.59", "-44.2433, -105.107, 22.2658, 0.96", "-44.2685, -105.156, 22.3383, 0.96", "-44.6328, -105.816, 23.1998, 0.59", "-45.0533, -106.492, 23.8936, 0.52", "-45.906, -107.779, 24.9212, 0.81", "-46.9864, -109.449, 25.9574, 0.44", "-47.5396, -110.31, 26.4362, 0.59", "-48.0171, -111.102, 26.8992, 0.74", "-48.4921, -111.968, 27.4868, 0.44", "-48.999, -112.983, 28.2313, 0.44", "-49.5362, -114.141, 29.0879, 0.29", "-49.9518, -115.198, 29.8919, 0.44", "-50.4001, -116.547, 31.04, 0.81", "-50.8206, -118.102, 32.5271, 1.03", "-50.8306, -118.155, 32.5843, 1.03", "-56.4861, -126.764, 39.6157, 1.03", "-62.7965, -135.136, 46.3705, 1.03", "-68.4509, -144.876, 51.7279, 1.03", "-75.6947, -153.834, 56.5044, 1.03" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-4.85862, -65.0475, -6.03776, 1.4", "-4.29601, -65.6554, -6.39174, 1.4", "-3.43115, -66.5939, -7.07093, 1.11", "-2.4786, -67.7846, -8.08663, 0.96", "-1.82648, -68.7601, -9.02225, 0.96", "-1.37922, -69.6035, -9.90108, 1.11", "-0.915058, -70.5932, -10.9451, 1.25", "-0.394075, -71.9082, -12.3862, 1.18", "0.115983, -73.4704, -14.0541, 1.18", "0.444724, -74.7895, -15.3473, 1.03", "0.759409, -76.5615, -16.86, 0.88", "0.871033, -77.434, -17.4669, 0.96", "1.03894, -79.0613, -18.3668, 1.11", "1.1839, -80.8003, -19.0887, 1.11", "1.26995, -82.0246, -19.4259, 0.96", "1.33914, -83.6642, -19.7142, 1.11", "1.30619, -85.9436, -19.9688, 1.18", "1.21143, -87.0696, -20.0795, 1.18", "1.03248, -88.3352, -20.1979, 1.18", "0.610771, -90.7461, -20.4317, 0.96", "0.299948, -92.3552, -20.6029, 1.03", "-0.223191, -94.8269, -20.9177, 1.03", "-0.64579, -96.6097, -21.1835, 1.33", "-0.961109, -97.9147, -21.415, 1.55", "-1.21014, -98.9834, -21.6554, 1.33", "-1.58502, -100.682, -22.1093, 1.03", "-1.84014, -102.103, -22.5153, 1.33", "-2.01684, -103.36, -22.8882, 1.33", "-2.31377, -105.741, -23.56, 1.25", "-2.67056, -108.309, -24.2916, 1.03", "-2.906, -109.766, -24.7056, 0.96", "-3.26731, -111.603, -25.2168, 0.96", "-3.53623, -112.736, -25.5143, 0.96", "-3.98044, -114.409, -25.9658, 0.96", "-4.49872, -115.975, -26.3693, 1.11", "-4.82734, -116.736, -26.5382, 1.25", "-5.56871, -118.059, -26.8322, 1.4", "-6.17251, -118.851, -27.0171, 1.4" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-4.85862, -65.0475, -6.03776, 1.11", "-4.27746, -68.1337, -3.35234, 1.11", "-4.1658, -68.8386, -2.95135, 1.11", "-3.99614, -69.9765, -2.42489, 1.03", "-3.73809, -71.714, -1.81865, 1.11", "-3.72658, -71.7944, -1.79887, 1.11", "-3.54565, -73.242, -1.52449, 1.11", "-3.36, -74.873, -1.44416, 1.11", "-3.3504, -74.9584, -1.44048, 1.11", "-3.19972, -76.4241, -1.38957, 1.11", "-3.04347, -78.2419, -1.36265, 1.03", "-2.96637, -79.4148, -1.35459, 1.33", "-2.93292, -80.8133, -1.33409, 1.18", "-3.03278, -82.5832, -1.26147, 0.88", "-3.04216, -82.6686, -1.25679, 0.88", "-3.394, -84.6055, -1.0721, 0.88", "-3.775, -86.1318, -0.877034, 0.88", "-4.19947, -87.4644, -0.670547, 1.11", "-4.81376, -89.2577, -0.293975, 0.88", "-4.83739, -89.3259, -0.274545, 0.88", "-5.22602, -90.5918, 0.134807, 0.88", "-5.28779, -90.823, 0.22317, 0.88", "-5.45079, -91.9031, 0.629126, 0.96", "-5.5267, -94.0894, 1.36765, 0.81", "-5.50436, -94.7432, 1.56051, 1.18", "-5.44733, -95.8299, 1.84292, 0.96", "-5.43648, -95.9952, 1.87742, 0.96", "-5.3175, -97.5519, 2.13597, 0.74", "-5.25896, -98.6341, 2.19315, 0.96", "-5.25836, -99.5526, 2.12952, 1.03", "-5.26569, -99.7187, 2.09809, 1.03", "-5.34559, -100.798, 1.80271, 1.33", "-5.4471, -101.89, 1.41548, 1.55", "-5.62936, -103.543, 0.713637, 1.25", "-5.7176, -104.774, 0.109995, 1.4", "-5.7849, -106.497, -0.773487, 1.55", "-5.81281, -107.729, -1.41385, 1.11", "-5.82149, -109.286, -2.2505, 0.74", "-5.8217, -109.371, -2.29301, 0.74", "-5.82942, -110.456, -2.78105, 0.74", "-5.81088, -111.235, -3.04313, 0.96", "-5.80403, -111.345, -3.06447, 0.96", "-5.71708, -112.83, -3.25123, 1.11", "-5.57281, -114.072, -3.37417, 1.11", "-5.39471, -115.735, -3.64861, 1.25", "-5.14271, -118.255, -4.16419, 0.96", "-4.95468, -120.019, -4.62359, 0.96", "-4.80799, -121.29, -5.00427, 1.11", "-4.47897, -123.836, -5.85592, 1.11", "-4.16076, -126.246, -6.77358, 1.25", "-4.07461, -126.96, -7.06725, 1.55", "-3.99063, -128.407, -7.74536, 1.47", "-3.98734, -128.485, -7.77564, 1.47", "-3.97126, -129.407, -8.01527, 0.88", "-3.9737, -130.663, -8.05054, 0.59", "-3.91697, -131.959, -7.8371, 0.74", "-3.87236, -132.879, -7.61345, 1.03", "-3.78664, -134.687, -7.1084, 1.03", "-3.75369, -135.479, -6.8825, 1.25", "-3.67716, -137.294, -6.35398, 1.25", "-3.6136, -138.677, -5.94706, 0.74", "-3.59158, -139.817, -5.66618, 0.74", "-3.63166, -140.983, -5.53418, 0.96", "-3.63861, -141.057, -5.5395, 0.96", "-3.78096, -142.367, -5.79768, 1.18", "-3.79107, -142.46, -5.82665, 1.18", "-3.91365, -144.106, -6.42155, 1.33", "-3.97907, -146.07, -7.13101, 1.03", "-3.99434, -147.681, -7.66552, 0.88", "-3.99724, -148.289, -7.84601, 1.33", "-4.00824, -149.532, -8.16016, 1.33", "-4.03568, -150.931, -8.42717, 1.55", "-4.09552, -152.321, -8.55024, 1.33", "-4.23143, -153.593, -8.53505, 1.11", "-4.49055, -154.958, -8.4225, 0.66", "-4.85101, -156.3, -8.242, 0.66", "-5.2968, -157.593, -8.00157, 0.74", "-5.83652, -158.955, -7.69568, 0.59", "-6.19174, -159.866, -7.4758, 0.88", "-6.48823, -160.788, -7.27825, 0.96", "-6.65591, -161.684, -7.14691, 0.88", "-6.65158, -161.767, -7.13718, 0.88", "-6.37087, -162.945, -7.03745, 0.74", "-6.00798, -164.065, -6.96943, 1.25", "-5.59542, -165.283, -6.87936, 1.25", "-5.18394, -166.641, -6.74391, 1.03", "-4.66692, -168.931, -6.42775, 0.74", "-4.4819, -170.236, -6.19881, 0.59", "-4.46632, -171.009, -6.02665, 0.81", "-4.61626, -172.099, -5.742, 0.88", "-4.94723, -173.367, -5.39868, 1.03", "-5.27459, -174.439, -5.16214, 1.11", "-5.35859, -174.679, -5.14032, 1.11", "-5.76852, -175.86, -5.17713, 0.96", "-6.20956, -177.194, -5.34041, 1.11", "-6.60789, -178.528, -5.61481, 0.96", "-7.13064, -180.471, -6.12408, 1.18", "-7.63396, -182.555, -6.62478, 1.03", "-8.1253, -184.695, -7.09982, 0.96", "-8.1538, -184.843, -7.13127, 0.96", "-8.36494, -186.398, -7.41988, 0.96", "-8.42111, -187.537, -7.53516, 1.4", "-8.29666, -189.766, -7.54243, 1.11", "-8.27927, -189.875, -7.53376, 1.11", "-8.00788, -191.175, -7.39433, 1.25", "-7.6379, -192.863, -7.23035, 1.11", "-7.20811, -194.715, -7.0992, 0.88", "-6.96807, -195.728, -7.0741, 1.18", "-6.57016, -197.329, -7.149, 1.25", "-6.32078, -198.424, -7.20461, 1.4", "-6.30356, -198.518, -7.21005, 1.4", "-6.08137, -200.142, -7.28995, 1.03", "-6.06648, -200.396, -7.29919, 1.03", "-6.07595, -201.792, -7.28139, 0.74", "-6.15582, -203.0, -7.1434, 0.74", "-6.29609, -203.948, -6.94386, 0.96", "-6.6027, -205.36, -6.54695, 0.88", "-6.97785, -206.639, -6.09229, 0.88", "-7.35083, -207.735, -5.65873, 0.88", "-7.92523, -209.177, -5.01368, 1.11", "-8.33732, -210.184, -4.55684, 1.25", "-8.71914, -211.143, -4.14892, 1.4", "-8.83579, -211.431, -4.05107, 1.4", "-9.11765, -212.242, -3.86164, 1.4", "-9.20201, -212.483, -3.85551, 1.4", "-9.69879, -213.895, -4.12552, 1.25", "-10.049, -214.959, -4.44387, 1.18", "-10.3338, -215.9, -4.83388, 0.96", "-10.7182, -217.231, -5.47146, 0.96", "-11.3917, -219.466, -6.74263, 0.81", "-11.9776, -221.331, -7.97012, 0.81", "-12.2667, -222.162, -8.57061, 1.03", "-12.9883, -224.129, -9.98237, 1.03", "-13.0233, -224.224, -10.0475, 1.03", "-13.6181, -225.88, -11.0871, 1.55", "-14.2589, -227.869, -12.1156, 0.88", "-14.8453, -229.757, -12.97, 0.81", "-15.3195, -231.227, -13.5934, 0.81", "-15.6699, -232.311, -14.0061, 0.96", "-16.0153, -233.447, -14.4032, 0.96", "-16.3218, -234.605, -14.7439, 0.74", "-16.7783, -236.505, -15.2563, 1.25", "-17.1439, -238.328, -15.7743, 0.81", "-17.1583, -238.407, -15.7967, 0.81", "-17.3555, -239.727, -16.0554, 0.81", "-17.4948, -240.764, -16.1634, 1.18", "-17.5098, -240.924, -16.164, 1.18", "-17.5687, -242.052, -16.0657, 1.18", "-17.5905, -244.02, -15.8257, 0.81", "-17.6051, -245.949, -15.5981, 0.81", "-17.6079, -246.995, -15.4739, 1.11", "-17.6303, -248.747, -15.2927, 1.11", "-17.6298, -248.929, -15.272, 1.11", "-17.5463, -250.456, -14.9909, 0.96", "-17.4659, -251.202, -14.8251, 1.25", "-17.4563, -251.282, -14.8061, 1.25", "-17.2674, -252.687, -14.4326, 1.25", "-16.9984, -254.944, -13.7715, 1.03", "-16.7069, -257.652, -12.948, 0.81", "-16.6073, -258.588, -12.6722, 1.11", "-16.4374, -260.207, -12.2596, 0.96", "-16.4147, -260.47, -12.205, 0.96", "-16.3212, -261.844, -11.9897, 0.81", "-16.3203, -261.955, -11.9842, 0.81", "-16.4035, -263.859, -12.0333, 0.96", "-16.4507, -265.083, -12.0708, 1.18", "-16.4898, -266.396, -12.1193, 1.03", "-16.4936, -266.482, -12.1217, 1.03", "-16.5899, -267.992, -12.1452, 0.74", "-16.7772, -270.033, -12.1745, 0.74", "-16.9209, -271.147, -12.2295, 0.81", "-16.9361, -271.257, -12.2386, 0.81", "-17.0666, -272.329, -12.3741, 0.81", "-17.2148, -273.926, -12.6374, 0.81", "-17.3149, -275.783, -13.0692, 1.03", "-17.3668, -277.364, -13.5046, 1.03", "-17.3703, -277.444, -13.5266, 1.03", "-17.4489, -278.534, -13.7967, 1.25", "-17.5429, -279.565, -14.0355, 0.96", "-17.708, -280.947, -14.2778, 0.81", "-17.8471, -281.835, -14.3769, 1.11", "-18.0567, -283.166, -14.4755, 1.33", "-18.2787, -284.461, -14.5744, 1.33", "-18.2955, -284.554, -14.5839, 1.33", "-18.5833, -286.32, -14.8003, 0.74", "-18.8137, -288.16, -15.1185, 0.96", "-18.8988, -289.685, -15.4843, 0.96", "-18.8938, -289.834, -15.5233, 0.96", "-18.7297, -291.374, -15.9339, 0.96", "-18.5027, -292.758, -16.2149, 0.81", "-18.1991, -294.252, -16.4077, 0.66", "-17.896, -295.721, -16.4668, 0.66", "-17.6422, -297.131, -16.4248, 1.33", "-17.4584, -298.317, -16.2866, 1.33", "-17.191, -300.467, -15.848, 1.11", "-17.0171, -302.009, -15.4746, 1.18", "-16.9291, -302.872, -15.2527, 1.4", "-16.7968, -304.204, -14.9702, 1.11", "-16.6063, -305.756, -14.7849, 0.59", "-16.4394, -306.757, -14.7645, 0.52", "-16.1516, -308.116, -14.8782, 0.88", "-15.8229, -309.449, -15.0993, 1.18", "-15.4822, -310.893, -15.4058, 1.03", "-15.0861, -312.715, -15.8704, 0.96", "-14.79, -314.522, -16.4126, 0.81", "-14.6756, -315.588, -16.7406, 1.11", "-14.6437, -316.834, -17.1119, 1.69", "-14.7111, -318.231, -17.5246, 1.18", "-14.7214, -318.324, -17.5448, 1.18", "-14.9317, -319.797, -17.7217, 0.59", "-14.9364, -319.88, -17.7151, 0.59", "-14.8552, -321.143, -17.4, 1.03", "-14.8323, -321.286, -17.349, 1.03", "-14.3719, -323.134, -16.6486, 1.25", "-14.1426, -323.925, -16.3542, 1.25", "-13.5593, -325.806, -15.6723, 0.96", "-13.265, -326.878, -15.3265, 0.66", "-13.0449, -327.832, -15.0668, 0.66", "-12.9121, -328.659, -14.9018, 0.37", "-12.8705, -329.785, -14.8595, 0.52", "-12.9758, -331.093, -14.9261, 0.81", "-13.1997, -332.132, -15.0445, 1.11", "-13.5135, -333.163, -15.2161, 1.4", "-13.9478, -334.439, -15.469, 1.4", "-14.7829, -336.662, -15.9546, 0.81", "-15.2562, -337.916, -16.2782, 0.66", "-15.6605, -339.112, -16.6446, 0.52", "-16.0693, -340.736, -17.2121, 0.37", "-16.2297, -341.635, -17.5531, 0.88", "-16.2387, -341.713, -17.5808, 0.88", "-16.2967, -342.547, -17.781, 1.25", "-16.3824, -343.521, -17.9599, 1.25", "-16.5248, -344.633, -18.0848, 0.88", "-16.8929, -346.526, -18.1307, 0.66", "-17.3664, -348.302, -18.0855, 0.66", "-17.9247, -349.986, -17.993, 0.88", "-18.407, -351.193, -17.9392, 0.88", "-18.8632, -352.192, -17.937, 1.11", "-19.282, -353.098, -17.9733, 1.18", "-19.572, -353.806, -18.002, 1.18", "-20.321, -355.925, -18.1508, 0.88", "-20.8333, -357.728, -18.3263, 1.25", "-21.256, -359.708, -18.5418, 0.74", "-21.5114, -361.33, -18.7138, 0.59", "-21.7101, -363.188, -18.889, 1.03", "-21.7672, -364.31, -18.9462, 0.74", "-21.7404, -365.597, -18.9101, 0.59", "-21.7301, -365.858, -18.876, 0.59", "-21.715, -367.197, -18.5908, 0.74", "-21.7276, -367.281, -18.575, 0.74", "-22.0711, -368.504, -18.4708, 0.59", "-22.1021, -368.597, -18.4675, 0.59", "-22.6367, -370.204, -18.4992, 0.74", "-23.1403, -371.824, -18.6033, 0.59", "-23.7025, -373.921, -18.865, 0.59", "-24.1651, -375.817, -19.193, 0.59", "-24.4393, -377.154, -19.5088, 0.59", "-24.6385, -378.327, -19.8397, 0.81", "-24.6678, -378.576, -19.9252, 0.81", "-24.7076, -379.553, -20.3172, 0.81", "-24.7018, -379.621, -20.3399, 0.81", "-24.5927, -380.817, -20.5666, 0.81", "-24.5878, -380.892, -20.5675, 0.81", "-24.5368, -382.169, -20.4631, 0.66", "-24.5332, -382.243, -20.4556, 0.66", "-24.4546, -383.724, -20.2797, 0.66", "-24.2897, -385.532, -20.1006, 0.44", "-24.0023, -387.936, -19.8882, 0.66", "-23.6107, -390.006, -19.733, 0.96", "-23.1638, -391.755, -19.624, 0.96", "-23.124, -391.884, -19.6187, 0.96", "-22.4618, -393.561, -19.6036, 0.81", "-22.3895, -393.717, -19.61, 0.81", "-21.5661, -395.423, -19.8085, 0.74", "-21.5279, -395.499, -19.8171, 0.74", "-21.1956, -396.307, -19.882, 0.96", "-21.1465, -396.47, -19.9036, 0.96", "-20.87, -397.869, -20.0725, 0.96", "-20.7442, -398.866, -20.2118, 0.96", "-20.744, -398.951, -20.2266, 0.96", "-20.7485, -400.224, -20.4554, 0.52", "-20.7667, -401.625, -20.7258, 0.52" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-30.062, -79.5117, -31.8788, 0.74", "-30.7454, -79.4633, -31.7384, 0.74", "-30.81, -79.4677, -31.7131, 0.74", "-31.728, -79.6271, -31.2458, 0.52", "-32.2081, -79.7315, -30.9964, 0.44", "-33.0007, -79.9107, -30.6108, 0.44", "-33.7562, -80.0829, -30.2776, 0.96", "-35.132, -80.463, -29.7087, 0.74", "-35.9506, -80.7145, -29.4205, 0.74", "-36.3435, -80.8584, -29.3151, 0.74", "-36.8959, -81.0567, -29.2115, 0.59", "-37.3702, -81.2037, -29.1621, 0.52", "-38.0306, -81.3765, -29.1489, 0.52", "-38.4673, -81.4753, -29.1782, 0.88", "-39.1941, -81.6112, -29.2357, 0.59", "-40.322, -81.7738, -29.26, 0.96", "-41.6019, -81.9236, -29.2246, 1.33", "-42.0973, -81.9735, -29.1897, 1.33", "-42.9019, -82.0527, -29.1171, 0.44", "-43.3777, -82.088, -29.0758, 0.44", "-44.3985, -82.1366, -29.026, 0.44", "-44.449, -82.139, -29.0273, 0.44", "-45.2347, -82.1516, -29.1108, 0.81", "-45.7926, -82.1562, -29.1232, 0.96" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-30.062, -79.5117, -31.8788, 0.59", "-31.1523, -80.7792, -32.6938, 0.59", "-31.7325, -81.5025, -33.0844, 0.52", "-32.0772, -81.9336, -33.3212, 0.88", "-32.7317, -82.6854, -33.8227, 0.88", "-33.1868, -83.1602, -34.294, 0.88", "-33.5976, -83.5383, -34.7834, 1.03", "-34.2012, -83.9383, -35.5338, 0.59", "-34.7226, -84.1317, -36.2987, 0.44", "-35.4237, -84.1745, -37.3924, 0.74", "-36.6266, -83.8818, -39.3754, 0.44", "-36.9406, -83.7288, -39.8695, 0.44", "-37.3064, -83.5072, -40.4065, 0.44", "-37.7417, -83.2259, -40.9748, 0.74", "-38.0488, -83.0505, -41.3035, 0.96", "-38.1041, -83.0307, -41.3455, 0.96", "-38.7092, -82.9325, -41.6636, 0.88", "-39.9949, -82.788, -42.3446, 0.44", "-40.389, -82.7401, -42.5496, 0.44", "-40.4499, -82.7265, -42.5901, 0.44", "-40.8891, -82.5791, -42.9096, 0.44", "-41.5359, -82.2868, -43.4165, 0.44", "-41.9629, -82.039, -43.7518, 0.81", "-42.3531, -81.7542, -44.0741, 1.33", "-43.627, -80.7524, -45.1756, 1.33", "-44.1575, -80.3495, -45.6238, 1.25", "-44.7707, -79.9085, -46.1305, 0.96", "-45.4259, -79.4781, -46.6826, 0.88", "-46.1848, -79.0207, -47.2948, 0.74", "-46.782, -78.694, -47.7374, 0.74", "-47.6153, -78.2695, -48.3092, 0.66", "-48.0638, -78.039, -48.6449, 0.52", "-48.7973, -77.6549, -49.1968, 0.29", "-49.2656, -77.3685, -49.6229, 0.37", "-49.3171, -77.3315, -49.6755, 0.37", "-50.0685, -76.604, -50.5849, 0.88", "-50.2863, -76.2957, -50.9532, 1.25", "-50.5631, -75.8348, -51.5496, 1.18", "-51.0899, -74.9955, -52.7061, 0.66", "-51.1176, -74.9569, -52.7634, 0.66", "-51.4998, -74.5092, -53.438, 0.74", "-52.3501, -73.7105, -54.7117, 0.88", "-52.9929, -73.182, -55.613, 0.52", "-53.5071, -72.8688, -56.2199, 0.88", "-54.1067, -72.6564, -56.7708, 1.03", "-54.7697, -72.5065, -57.3175, 1.33", "-55.3856, -72.4414, -57.7521, 0.88", "-55.4484, -72.4367, -57.7916, 0.88", "-56.2505, -72.368, -58.3323, 0.59", "-57.2509, -72.2586, -59.1256, 0.52", "-57.3613, -72.2417, -59.2238, 0.52", "-57.6989, -72.1599, -59.5418, 0.81", "-58.7815, -71.71, -60.7272, 0.29", "-58.8246, -71.6889, -60.7812, 0.29", "-59.1687, -71.4759, -61.3627, 0.29", "-59.2971, -71.3904, -61.6165, 0.88", "-59.4342, -71.3143, -61.9466, 1.18", "-60.0487, -71.0544, -63.6026, 0.37", "-60.4211, -70.9708, -64.6175, 0.74", "-60.9192, -70.955, -66.026, 1.03", "-60.9437, -70.9588, -66.0939, 1.03", "-61.4957, -71.1214, -67.5164, 0.44", "-61.6511, -71.1762, -67.8679, 1.18", "-61.9558, -71.2834, -68.404, 1.47", "-62.7303, -71.4637, -69.9629, 0.81", "-63.0556, -71.5154, -70.6382, 0.52", "-63.5151, -71.569, -71.6099, 0.37", "-63.7901, -71.5932, -72.1827, 0.37", "-64.1402, -71.626, -72.9251, 1.18", "-65.911, -71.8234, -76.823, 0.81", "-65.9717, -71.8314, -76.9559, 0.81", "-66.3071, -71.8931, -77.7026, 0.81", "-66.5514, -71.9436, -78.1961, 0.88", "-66.8094, -72.0163, -78.6992, 0.81", "-67.425, -72.2561, -79.7311, 0.29", "-67.5831, -72.324, -79.907, 0.29", "-67.8403, -72.4609, -80.2627, 0.29", "-68.2876, -72.762, -80.982, 1.18", "-69.2019, -73.5775, -82.569, 0.59", "-69.482, -73.9025, -83.0549, 1.33", "-69.5162, -73.9507, -83.1121, 1.33", "-70.1747, -74.9657, -84.1554, 0.74", "-70.5016, -75.5197, -84.658, 0.66", "-70.8726, -76.1884, -85.2585, 0.37", "-71.2603, -76.8659, -85.828, 0.88", "-71.6612, -77.5622, -86.4363, 1.03", "-71.9892, -78.1376, -86.9688, 0.88", "-72.0156, -78.1869, -87.0145, 0.88", "-72.601, -79.4916, -88.2801, 0.74", "-72.8479, -80.1264, -89.0263, 0.44", "-72.9748, -80.4591, -89.4752, 1.47", "-73.2426, -81.0992, -90.4689, 1.03", "-73.4205, -81.4233, -91.0572, 0.74", "-73.6169, -81.6491, -91.5354, 0.74", "-74.498, -82.2394, -93.1812, 0.52", "-74.9497, -82.4252, -93.9751, 0.66", "-75.3678, -82.5705, -94.7355, 0.37", "-75.653, -82.6818, -95.3974, 0.29", "-75.8987, -82.7874, -96.0644, 0.29", "-76.1678, -82.9202, -96.8966, 0.74", "-76.5139, -83.1433, -98.1157, 0.96", "-76.9429, -83.4404, -99.8201, 0.96", "-77.537, -83.8134, -102.374, 0.88", "-77.5517, -83.8197, -102.433, 0.88", "-77.8396, -83.8836, -103.481, 0.88", "-77.9904, -83.8885, -103.939, 1.03", "-78.2714, -83.8796, -104.623, 1.03", "-78.7732, -83.8947, -105.618, 0.74", "-79.3523, -84.0042, -106.677, 0.37", "-79.383, -84.017, -106.744, 0.37", "-79.9271, -84.3598, -108.09, 0.37", "-80.3727, -84.7369, -109.373, 0.37", "-80.7653, -85.1331, -110.571, 0.88", "-81.1552, -85.5214, -111.68, 1.18", "-81.7206, -86.0359, -113.438, 0.59", "-81.7436, -86.0503, -113.507, 0.59", "-82.3025, -86.1924, -115.026, 0.44", "-82.4654, -86.1695, -115.521, 0.37", "-82.7437, -86.0336, -116.45, 0.37", "-83.3901, -85.578, -118.564, 1.03", "-83.7326, -85.303, -119.608, 1.03", "-84.0368, -85.086, -120.459, 1.25", "-84.7805, -84.6434, -122.6, 1.18", "-84.8016, -84.6373, -122.669, 1.18", "-85.1194, -84.6625, -123.676, 0.59", "-85.3218, -84.7468, -124.247, 0.74", "-85.5453, -84.8952, -124.868, 0.74", "-86.2748, -85.5024, -126.948, 0.88", "-86.8523, -86.0879, -129.247, 0.52", "-86.9836, -86.2481, -129.922, 1.18", "-87.1592, -86.5294, -131.209, 1.55", "-87.2351, -86.6712, -131.891, 1.25", "-87.4971, -87.195, -134.347, 0.74", "-87.9892, -88.2393, -138.967, 0.74", "-88.0416, -88.3679, -139.539, 1.4", "-88.2597, -88.9685, -142.385, 0.74", "-88.2718, -88.9976, -142.538, 0.74", "-88.3572, -89.1492, -143.472, 0.59", "-88.3692, -89.1601, -143.544, 0.59", "-89.0803, -89.5014, -145.754, 0.59", "-89.1254, -89.5192, -145.866, 0.59", "-89.6036, -89.6617, -146.896, 0.66", "-89.8845, -89.7367, -147.507, 0.88", "-90.8933, -89.9517, -149.688, 0.44", "-91.0332, -89.985, -149.952, 1.03", "-91.8869, -90.2308, -151.133, 1.33" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "19.7082, -238.354, -124.034, 0.29", "18.6517, -239.003, -124.498, 0.29", "17.9927, -239.38, -124.769, 0.29", "17.0415, -239.89, -125.235, 0.22", "16.6287, -240.134, -125.449, 0.81", "16.2278, -240.388, -125.66, 0.81", "15.8935, -240.611, -125.868, 0.81", "15.341, -241.003, -126.274, 0.52", "14.2904, -241.811, -127.165, 0.22", "13.6064, -242.387, -127.792, 0.22", "13.2938, -242.672, -128.098, 0.81", "12.4163, -243.525, -128.988, 0.96", "12.2093, -243.743, -129.233, 1.11", "11.5621, -244.513, -130.194, 0.22", "11.2524, -244.902, -130.692, 0.22", "11.0798, -245.116, -130.978, 0.74", "10.8917, -245.365, -131.306, 0.96", "10.2334, -246.307, -132.557, 0.59", "9.63487, -247.193, -133.788, 0.29", "9.23328, -247.795, -134.743, 0.22", "9.127, -247.947, -135.003, 0.37", "8.62322, -248.618, -136.22, 0.22", "8.20529, -249.162, -137.233, 0.81", "8.02123, -249.398, -137.662, 1.03", "7.41816, -250.241, -139.315, 0.37", "7.21798, -250.536, -139.925, 0.52", "6.75125, -251.234, -141.366, 0.29", "6.55744, -251.512, -141.914, 0.66", "6.39347, -251.751, -142.351, 0.81", "5.72174, -252.851, -144.381, 0.29", "5.56398, -253.153, -144.901, 0.44", "5.5464, -253.194, -144.975, 0.44", "5.39183, -253.592, -145.662, 0.59", "5.24498, -254.146, -146.615, 1.03", "5.14165, -255.2, -148.43, 1.03", "5.19216, -256.112, -149.985, 0.29", "5.30933, -256.944, -151.422, 0.88", "5.35583, -257.243, -151.94, 1.25", "5.6293, -259.182, -155.326, 0.29", "5.78649, -260.392, -157.431, 0.37", "5.87203, -261.291, -158.926, 0.81", "5.92451, -262.116, -160.298, 0.44", "5.92013, -262.632, -161.126, 0.37", "5.85705, -263.373, -162.261, 0.37", "5.62001, -264.367, -163.585, 0.37", "5.34802, -265.148, -164.521, 0.37", "5.1135, -265.797, -165.242, 1.11", "4.95723, -266.226, -165.699, 1.25", "4.5582, -267.224, -166.82, 0.81", "4.14311, -268.11, -167.811, 0.52", "3.89817, -268.508, -168.216, 0.52", "3.86291, -268.561, -168.274, 0.52", "3.41181, -269.222, -168.987, 0.52", "2.61207, -270.332, -170.266, 0.44", "2.22667, -270.846, -170.856, 0.44", "1.60537, -271.715, -171.957, 0.74", "0.849953, -272.846, -173.449, 0.74", "0.82489, -272.887, -173.502, 0.74", "0.264394, -273.915, -174.824, 0.37", "0.0569811, -274.308, -175.336, 0.81", "-0.652544, -275.517, -177.101, 0.29", "-0.909618, -275.891, -177.708, 0.29", "-1.18133, -276.261, -178.236, 0.88", "-1.29046, -276.416, -178.451, 1.25" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "19.7082, -238.354, -124.034, 0.59", "20.5014, -241.144, -124.778, 0.59", "20.7958, -242.307, -125.044, 0.59", "20.8785, -242.631, -125.108, 0.81", "21.0805, -243.385, -125.226, 0.81", "21.3894, -244.476, -125.367, 0.15", "21.6939, -245.475, -125.465, 0.15", "21.7144, -245.547, -125.457, 0.15", "21.8536, -245.969, -125.407, 0.59", "22.0718, -246.592, -125.332, 0.88", "22.1268, -246.753, -125.315, 0.88", "22.2829, -247.314, -125.275, 0.88", "22.5133, -248.504, -125.208, 0.52", "22.614, -249.485, -125.176, 0.44", "22.6265, -250.037, -125.171, 0.74", "22.5971, -250.737, -125.177, 0.44", "22.4857, -251.708, -125.16, 0.29", "22.3494, -252.374, -125.143, 0.88", "22.2123, -252.991, -125.108, 0.96", "22.0313, -253.946, -125.012, 0.81", "21.8927, -255.046, -124.871, 0.29", "21.8509, -256.195, -124.712, 0.44", "21.8917, -257.009, -124.577, 0.22", "22.0822, -258.3, -124.343, 0.22", "22.2922, -259.077, -124.172, 0.59", "22.6204, -259.949, -123.904, 0.81", "22.97, -260.704, -123.63, 0.81", "23.2576, -261.279, -123.415, 0.88", "23.7293, -262.366, -123.013, 0.37", "24.0244, -263.476, -122.677, 0.59", "24.1801, -264.581, -122.429, 0.96", "24.218, -265.372, -122.299, 0.59", "24.181, -266.332, -122.206, 0.29", "24.0671, -267.665, -122.251, 0.29", "23.8847, -269.117, -122.448, 0.74", "23.7772, -269.96, -122.625, 0.96", "23.7644, -270.085, -122.654, 0.96", "23.7093, -270.765, -122.793, 0.96", "23.6272, -272.017, -123.021, 0.44", "23.5812, -272.881, -123.153, 0.29", "23.4308, -274.051, -123.273, 0.59", "23.2043, -275.01, -123.333, 1.03", "23.1098, -275.305, -123.346, 1.11", "22.8912, -275.882, -123.353, 0.96", "22.601, -276.574, -123.341, 0.96", "22.1381, -277.607, -123.325, 0.37", "21.6777, -278.622, -123.326, 0.22", "21.4099, -279.273, -123.34, 0.44", "20.9997, -280.384, -123.351, 0.44", "20.7763, -281.171, -123.338, 0.66", "20.6393, -281.976, -123.303, 0.88", "20.5613, -282.828, -123.272, 0.29", "20.4578, -283.779, -123.151, 0.29", "20.4457, -283.884, -123.13, 0.29", "20.3143, -284.793, -122.917, 0.29", "20.124, -285.952, -122.641, 0.29", "19.8934, -287.263, -122.334, 0.29", "19.4964, -288.916, -121.899, 0.59", "19.3569, -289.334, -121.792, 0.74", "18.9314, -290.418, -121.544, 0.29", "18.5645, -291.264, -121.384, 0.29", "18.5352, -291.344, -121.37, 0.29", "18.3376, -292.346, -121.249, 0.81", "18.3047, -292.968, -121.225, 1.25", "18.3205, -293.65, -121.232, 0.88", "18.4542, -294.787, -121.266, 0.52", "18.6934, -296.177, -121.274, 0.29", "18.8363, -296.874, -121.272, 0.66", "19.0866, -297.786, -121.258, 0.74", "19.6063, -299.291, -121.154, 0.22", "19.9518, -300.164, -121.054, 0.22", "20.3273, -301.038, -120.872, 0.88", "20.361, -301.124, -120.847, 0.88", "20.642, -301.904, -120.556, 0.81", "20.9337, -302.739, -120.22, 0.74", "20.9556, -302.818, -120.19, 0.74", "21.1479, -303.966, -119.882, 0.29", "21.2564, -305.098, -119.688, 0.74", "21.2589, -305.488, -119.644, 0.81", "21.1579, -306.602, -119.628, 0.22", "21.0587, -307.156, -119.671, 0.66", "20.938, -307.718, -119.754, 0.74", "20.9197, -307.789, -119.771, 0.74", "20.6757, -308.6, -120.007, 0.74", "20.3409, -309.538, -120.321, 0.22", "20.0466, -310.289, -120.688, 0.22", "20.0248, -310.348, -120.722, 0.22", "19.9072, -310.772, -120.992, 0.66", "19.8975, -310.854, -121.041, 0.66", "19.9126, -311.298, -121.3, 0.66", "20.0056, -312.541, -121.959, 0.52", "20.0138, -312.603, -122.002, 0.52", "20.102, -313.427, -122.6, 0.22", "20.1467, -314.1, -123.09, 1.03", "20.1791, -314.512, -123.397, 1.11", "20.2354, -315.27, -123.94, 0.88", "20.3453, -317.714, -125.569, 0.22", "20.3684, -318.303, -125.947, 0.88", "20.3864, -318.938, -126.358, 0.59", "20.419, -319.885, -126.941, 0.52", "20.4686, -320.747, -127.404, 0.81", "20.5755, -321.376, -127.751, 0.81", "20.9542, -322.698, -128.593, 0.29", "20.976, -322.753, -128.633, 0.29", "21.2226, -323.22, -129.035, 0.96", "21.5159, -323.671, -129.478, 1.25", "23.0532, -325.676, -131.637, 0.52", "24.1679, -326.977, -133.119, 0.44", "24.5009, -327.331, -133.522, 0.66", "25.5264, -328.376, -134.679, 0.52", "26.6888, -329.5, -135.867, 0.29", "26.9764, -329.77, -136.127, 0.59", "27.0941, -329.888, -136.21, 0.59", "28.2441, -331.031, -136.84, 0.22", "28.3088, -331.097, -136.874, 0.22", "28.743, -331.574, -137.003, 0.59", "28.8731, -331.721, -137.013, 0.59", "29.0532, -331.919, -137.028, 0.59", "29.1113, -331.984, -137.032, 0.59" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-1.23766, 174.58, 26.2755, 0.29", "-2.00111, 175.127, 26.0576, 0.29", "-2.5285, 175.491, 25.9543, 0.29", "-3.25894, 175.985, 25.8468, 0.66", "-3.89622, 176.417, 25.7375, 0.29", "-4.21556, 176.635, 25.6803, 0.37", "-4.87487, 177.09, 25.5641, 0.37", "-5.55464, 177.578, 25.4761, 0.59", "-5.89531, 177.825, 25.4313, 0.81", "-6.47453, 178.248, 25.3657, 0.37", "-6.65669, 178.395, 25.3567, 0.88", "-6.91748, 178.629, 25.3402, 1.03", "-7.24171, 178.96, 25.3196, 0.81", "-7.49373, 179.246, 25.3115, 0.37", "-7.5234, 179.287, 25.3137, 0.37", "-7.80136, 179.764, 25.3742, 0.37", "-7.8289, 179.822, 25.3806, 0.37", "-8.01384, 180.286, 25.4918, 0.37", "-8.02698, 180.327, 25.5061, 0.37", "-8.21168, 180.932, 25.7749, 0.22", "-8.31227, 181.265, 25.9375, 0.74", "-8.32313, 181.304, 25.9577, 0.74", "-8.57123, 182.217, 26.4226, 0.29", "-8.61701, 182.401, 26.521, 0.66", "-8.68148, 182.652, 26.658, 0.66", "-8.80308, 183.096, 26.9034, 0.37", "-8.885, 183.416, 27.0661, 0.29", "-8.96044, 183.744, 27.2016, 0.29", "-9.05403, 184.235, 27.3488, 0.96", "-9.06211, 184.277, 27.3613, 0.96", "-9.10356, 184.545, 27.4397, 0.66", "-9.15673, 184.955, 27.5559, 0.29", "-9.21719, 185.362, 27.6598, 0.29", "-9.22458, 185.404, 27.6679, 0.29", "-9.30375, 185.827, 27.7203, 1.11", "-9.3508, 186.231, 27.7594, 1.47", "-9.35672, 186.342, 27.768, 1.47", "-9.36781, 186.904, 27.8039, 0.66", "-9.36794, 187.343, 27.8322, 0.37", "-9.36605, 187.893, 27.8695, 0.37", "-9.36016, 188.757, 27.874, 0.29", "-9.36489, 189.674, 27.8405, 0.29", "-9.36487, 189.769, 27.8362, 0.29", "-9.35216, 190.358, 27.7984, 0.96", "-9.34426, 190.677, 27.7728, 1.18", "-9.34138, 191.724, 27.6318, 0.37", "-9.37013, 192.074, 27.5503, 0.37", "-12.4776, 197.482, 27.76, 0.37", "-14.4642, 203.371, 27.2071, 0.37" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-1.23766, 174.58, 26.2755, 1.03", "-1.21266, 175.051, 26.4801, 1.03", "-1.20593, 176.184, 26.9508, 1.4", "-1.21463, 177.615, 27.4812, 1.4", "-1.21507, 177.704, 27.5114, 1.4", "-1.21421, 179.013, 27.907, 1.25", "-1.17427, 180.397, 28.3033, 0.81", "-1.167, 180.486, 28.331, 0.81", "-1.05237, 181.507, 28.6449, 0.96", "-1.00562, 181.868, 28.7436, 0.96", "-0.856302, 182.883, 29.0254, 1.18", "-0.643367, 184.042, 29.3557, 0.96", "-0.397215, 185.688, 29.7725, 1.18", "-0.383311, 185.823, 29.8039, 1.18", "-0.329265, 186.939, 30.0092, 1.18", "-0.335835, 188.221, 30.1324, 0.96", "-0.342678, 188.338, 30.1334, 0.96", "-0.473272, 189.919, 30.0313, 1.47", "-0.481379, 190.012, 30.0199, 1.47", "-0.531373, 191.473, 29.832, 1.18", "-0.490584, 192.98, 29.6048, 0.81", "-0.469974, 193.147, 29.5802, 0.81", "-0.237795, 194.17, 29.5578, 0.74", "-0.211028, 194.25, 29.5706, 0.74", "-0.00321549, 194.924, 29.7813, 0.74", "0.0150996, 195.008, 29.8215, 0.74", "0.0740123, 195.7, 30.2077, 0.81", "0.021711, 197.222, 31.0748, 1.18", "-0.0538648, 197.834, 31.4281, 1.4", "-0.236469, 198.939, 32.0517, 0.96", "-0.446078, 200.009, 32.639, 0.96", "-0.65352, 200.965, 33.1292, 0.96", "-0.950173, 202.169, 33.6638, 0.96", "-0.967624, 202.253, 33.7008, 0.96", "-1.04826, 202.877, 34.0109, 0.96", "-1.07558, 203.338, 34.255, 1.18", "-1.07343, 203.556, 34.3772, 1.18", "-1.04957, 204.46, 34.8853, 1.18", "-1.01465, 206.291, 35.8631, 0.96", "-0.990218, 207.792, 36.6682, 0.66", "-0.982797, 208.512, 37.0579, 0.66", "-0.996469, 209.474, 37.558, 0.88", "-1.02069, 210.457, 38.0368, 0.88", "-1.05397, 211.394, 38.4591, 1.03", "-1.11672, 212.419, 38.8451, 1.03", "-1.12025, 212.496, 38.8747, 1.03", "-1.17351, 213.372, 39.1945, 1.11", "-1.2531, 214.304, 39.5025, 1.11", "-1.26717, 214.437, 39.5449, 1.11", "-1.44764, 215.811, 39.952, 0.96", "-1.56815, 216.766, 40.2577, 0.96", "-1.69642, 218.059, 40.6916, 1.4", "-1.76439, 218.965, 41.0048, 1.03", "-1.82188, 220.094, 41.3758, 1.25", "-1.82943, 221.484, 41.7876, 0.88", "-1.75352, 222.786, 42.1164, 0.88", "-1.61716, 223.914, 42.3724, 0.88", "-1.56659, 224.175, 42.4205, 0.88", "-1.3557, 225.114, 42.5543, 0.88", "-1.09771, 226.404, 42.6969, 0.81", "-0.905145, 227.603, 42.791, 0.81", "-0.899646, 227.685, 42.7964, 0.81", "-0.881267, 228.483, 42.9192, 0.96", "-0.928707, 229.845, 43.2342, 0.96", "-1.0459, 231.301, 43.6561, 1.03", "-1.05345, 231.37, 43.6791, 1.03", "-1.28791, 233.134, 44.3027, 1.03", "-1.48411, 234.596, 44.814, 1.03", "-1.65787, 236.055, 45.3032, 1.03", "-1.69976, 236.605, 45.4707, 1.03", "-1.7157, 237.296, 45.6453, 1.03", "-1.70841, 238.41, 45.8752, 0.88", "-1.64475, 239.776, 46.0602, 0.88", "-1.5721, 240.959, 46.1304, 1.11", "-1.52849, 241.446, 46.1265, 1.11", "-1.4279, 242.753, 46.0651, 1.11", "-1.41433, 242.93, 46.0496, 1.11", "-1.34647, 243.847, 45.9364, 0.96", "-1.3438, 243.916, 45.9264, 0.96", "-1.34959, 245.381, 45.7318, 0.88", "-1.39207, 246.491, 45.6063, 0.66", "-1.40105, 246.66, 45.5919, 0.66", "-1.43388, 247.69, 45.5251, 0.66", "-1.43358, 247.784, 45.5214, 0.66", "-1.35264, 248.865, 45.505, 0.96", "-1.32621, 249.03, 45.5077, 0.96", "-1.09586, 250.089, 45.4861, 0.96", "-1.04834, 250.284, 45.4787, 0.96", "-0.907847, 250.847, 45.457, 0.96", "-0.621031, 251.916, 45.4755, 0.96", "-0.402064, 252.687, 45.5202, 1.18", "-0.161227, 253.592, 45.6061, 0.74", "0.0741387, 254.665, 45.7528, 0.74", "0.201311, 255.486, 45.8973, 1.18", "0.265793, 256.762, 46.1901, 0.66", "0.204518, 257.718, 46.4593, 0.66", "0.0278716, 258.864, 46.8189, 0.66", "-0.230333, 259.987, 47.2024, 1.18", "-0.47139, 260.798, 47.4674, 1.18", "-1.02283, 262.389, 47.9381, 0.96", "-1.41224, 263.476, 48.2511, 0.96", "-1.67295, 264.265, 48.4923, 0.66", "-1.69127, 264.329, 48.5123, 0.66", "-1.98269, 265.606, 48.9065, 0.59", "-2.12756, 266.421, 49.1566, 1.03", "-2.30051, 267.908, 49.7027, 0.81", "-2.37172, 268.697, 50.036, 1.03", "-2.38674, 268.85, 50.1072, 1.03", "-2.49945, 269.811, 50.5712, 1.03", "-2.5464, 270.134, 50.738, 1.03", "-2.78262, 271.435, 51.3912, 0.96", "-3.01457, 272.616, 51.9081, 0.96", "-3.15787, 273.523, 52.2584, 0.96", "-3.26903, 274.445, 52.5682, 1.11", "-3.31781, 275.121, 52.7501, 1.33", "-3.32183, 275.213, 52.7688, 1.33", "-3.32394, 276.47, 52.8959, 0.88", "-3.26214, 277.438, 52.9605, 1.11", "-3.23311, 277.614, 52.971, 1.11", "-3.02248, 278.379, 53.0095, 1.11", "-2.9933, 278.456, 53.012, 1.11", "-2.60009, 279.222, 53.0952, 0.88", "-2.55752, 279.291, 53.1064, 0.81", "-2.088, 280.061, 53.2394, 1.03", "-1.75113, 280.622, 53.3501, 1.03", "-1.2339, 281.555, 53.5514, 0.81", "-0.54983, 282.971, 53.8775, 0.74", "-0.134025, 284.006, 54.1265, 0.74", "0.2277, 285.055, 54.4099, 0.88", "0.398075, 285.644, 54.5752, 0.88", "0.60263, 286.52, 54.8517, 0.88", "0.707823, 287.099, 55.0372, 0.88", "0.840916, 287.9, 55.2482, 0.88", "1.07854, 289.047, 55.5095, 0.88", "1.24615, 289.633, 55.6347, 0.88", "1.29999, 289.801, 55.6653, 0.88", "1.66877, 290.831, 55.8312, 0.88", "2.05235, 291.914, 55.9819, 0.88", "2.46629, 293.102, 56.1175, 0.44", "2.81268, 294.187, 56.2601, 0.81", "3.03472, 295.004, 56.4075, 1.25", "3.27607, 296.029, 56.6295, 0.96", "3.51245, 297.358, 56.9724, 1.33", "3.56296, 297.768, 57.091, 1.47", "3.68541, 299.492, 57.5997, 1.11", "3.70416, 300.534, 57.8931, 0.96", "3.70398, 300.613, 57.9155, 0.96", "3.69584, 301.537, 58.1396, 0.96", "3.69539, 301.61, 58.1533, 0.96", "3.72098, 302.8, 58.3108, 0.96", "3.72848, 302.966, 58.3178, 0.96", "3.84131, 304.529, 58.3223, 0.96", "3.97795, 306.319, 58.2203, 0.96", "4.1111, 307.93, 58.0565, 0.96", "4.21123, 308.9, 57.962, 0.96", "4.31984, 309.765, 57.8715, 0.96", "4.49002, 310.938, 57.7518, 1.11", "4.78049, 312.684, 57.5788, 1.11", "4.79588, 312.756, 57.577, 1.11", "5.22395, 314.279, 57.7253, 1.11", "5.24856, 314.356, 57.7421, 1.11", "5.59578, 315.317, 58.0521, 1.11", "5.90013, 316.101, 58.3507, 1.18", "6.42594, 317.431, 58.9259, 0.88", "6.77477, 318.37, 59.294, 0.66", "6.79876, 318.447, 59.32, 0.66", "6.9501, 319.174, 59.5692, 0.81", "7.06217, 320.113, 59.8784, 0.81", "7.06693, 320.194, 59.9015, 0.81", "7.07047, 321.09, 60.0929, 0.66", "7.06387, 322.037, 60.2581, 1.18", "7.05559, 323.539, 60.4992, 1.03", "7.05178, 324.49, 60.637, 0.88", "7.04718, 325.702, 60.7641, 0.74", "7.04992, 327.089, 60.8582, 1.25", "7.04868, 327.828, 60.8806, 1.03", "7.05216, 328.005, 60.8802, 1.03", "7.08455, 329.23, 60.8184, 1.03", "7.13394, 330.214, 60.8317, 1.03", "7.14594, 330.298, 60.8395, 1.03", "7.44118, 331.523, 61.0537, 1.25", "7.46879, 331.598, 61.0733, 1.25", "8.02521, 332.828, 61.4496, 1.4", "9.02901, 334.701, 62.1188, 0.74", "9.67301, 335.837, 62.5556, 0.59", "9.73026, 335.936, 62.5931, 0.59", "10.5315, 337.268, 63.0677, 0.59", "10.9507, 338.024, 63.2951, 0.81", "10.9857, 338.097, 63.3121, 0.81", "11.2833, 339.007, 63.4052, 0.81", "11.337, 339.252, 63.4229, 0.81", "11.5055, 340.277, 63.479, 1.03", "11.6265, 341.306, 63.5085, 1.25", "11.7586, 342.088, 63.562, 1.25", "11.7734, 342.158, 63.5683, 1.25", "12.0473, 343.142, 63.7362, 0.96", "12.4989, 344.561, 64.0549, 0.74", "12.7264, 345.191, 64.2654, 0.74", "13.271, 346.585, 64.8322, 0.88", "13.537, 347.276, 65.1427, 0.74", "14.0714, 348.726, 65.8192, 0.74", "14.3179, 349.452, 66.1729, 0.74", "14.7386, 350.895, 66.8847, 0.96", "14.938, 351.758, 67.2851, 1.03", "15.0654, 352.63, 67.6433, 1.03", "15.1598, 353.505, 67.9545, 1.18", "15.2333, 354.47, 68.1944, 0.59", "15.2773, 355.046, 68.3008, 0.37", "15.3134, 355.512, 68.3442, 0.81", "15.3578, 356.001, 68.3692, 0.81", "15.432, 356.917, 68.3945, 0.81", "15.4594, 357.77, 68.419, 0.81", "15.4245, 358.481, 68.456, 0.88", "15.3349, 359.051, 68.5133, 0.81", "15.0931, 359.971, 68.6536, 0.74", "14.7799, 360.874, 68.8316, 0.74", "14.3813, 361.795, 69.0584, 0.96", "13.9477, 362.711, 69.3168, 0.44", "13.5248, 363.578, 69.5833, 0.44", "13.1368, 364.401, 69.8506, 0.96", "13.0997, 364.485, 69.8797, 0.96", "12.8603, 365.102, 70.077, 0.96", "12.6022, 365.889, 70.3053, 0.96", "12.5464, 366.123, 70.3746, 0.96", "12.3713, 366.835, 70.6219, 0.81", "12.324, 367.069, 70.727, 0.81", "12.129, 368.089, 71.2563, 0.81", "12.1172, 368.16, 71.2956, 0.81", "11.9819, 369.088, 71.8351, 0.96", "11.8594, 370.154, 72.438, 0.81", "11.7474, 371.542, 73.2084, 0.81", "11.7444, 371.616, 73.246, 0.81", "11.7612, 372.583, 73.6617, 0.81", "11.7651, 372.661, 73.6866, 0.81", "11.813, 373.619, 73.7815, 0.59", "11.8216, 373.743, 73.7834, 0.59", "11.8381, 374.431, 73.7333, 0.59", "11.8584, 375.41, 73.6421, 0.59", "11.8732, 376.564, 73.4903, 0.81", "11.8914, 378.233, 73.2209, 0.81" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "1.83385, 87.0039, -36.8387, 0.52", "2.66774, 88.1999, -39.6649, 0.52", "2.68874, 88.2364, -39.7359, 0.52", "3.12647, 89.1491, -41.1026, 0.44", "3.15336, 89.2171, -41.1841, 0.44", "3.38955, 89.8143, -41.9242, 0.88", "3.64772, 90.3509, -42.6501, 1.11", "3.67624, 90.4088, -42.7198, 1.11", "4.0821, 91.0495, -43.6074, 1.03", "4.75098, 91.8737, -44.9394, 0.37", "5.60566, 92.6825, -46.6856, 0.44", "6.0805, 93.0168, -47.6466, 0.44", "6.15593, 93.0658, -47.8009, 0.44", "6.51416, 93.378, -48.676, 0.44", "6.54523, 93.4307, -48.7885, 0.44", "6.79616, 94.3512, -50.2868, 0.96", "6.83355, 94.7345, -50.7373, 1.33", "6.88799, 95.6535, -51.6644, 1.18", "6.96436, 97.0559, -52.9512, 0.81", "7.06583, 98.5856, -54.1847, 0.37", "7.07491, 98.6728, -54.2502, 0.37", "7.21181, 99.5468, -54.8177, 0.66", "7.33856, 100.109, -55.1983, 0.88", "7.39609, 100.29, -55.3141, 0.88", "7.69776, 101.111, -55.8345, 0.88", "8.06699, 102.139, -56.4965, 0.74", "8.34217, 103.055, -57.0668, 0.59", "8.66581, 104.364, -57.8466, 1.03", "8.85527, 105.399, -58.3999, 0.29", "9.04604, 106.62, -58.9696, 0.81", "9.12904, 107.261, -59.2181, 0.88", "9.21895, 108.018, -59.438, 0.96", "9.29614, 108.776, -59.6431, 0.66", "9.44632, 110.127, -59.951, 0.22", "9.61425, 111.375, -60.2373, 1.62", "9.76088, 112.23, -60.4212, 1.99", "9.90739, 112.989, -60.574, 1.77", "10.2234, 114.571, -60.8435, 1.25", "10.4687, 115.746, -60.9855, 0.81", "10.6699, 116.645, -61.0495, 0.66", "10.8842, 117.607, -61.0752, 0.81", "11.159, 118.743, -61.06, 0.29", "11.5075, 120.087, -60.9766, 0.29", "11.7109, 120.781, -60.8758, 0.44", "11.7394, 120.872, -60.8624, 0.44", "12.0621, 121.914, -60.7263, 0.59", "12.2799, 122.616, -60.6605, 1.11", "12.5139, 123.395, -60.6202, 1.11", "12.81, 124.395, -60.5894, 0.88", "13.223, 125.844, -60.5664, 0.52", "13.6796, 127.467, -60.5501, 0.52", "14.1009, 128.96, -60.547, 0.66", "14.455, 130.194, -60.5628, 0.29", "14.8091, 131.378, -60.6084, 0.81", "14.8393, 131.471, -60.6161, 0.81", "15.0648, 132.077, -60.7059, 1.03", "15.1562, 132.284, -60.7566, 1.03", "15.48, 132.975, -60.9774, 1.03", "15.8469, 133.736, -61.2563, 0.96", "16.1397, 134.419, -61.5047, 0.66", "16.4505, 135.339, -61.7908, 0.52", "16.5907, 136.002, -61.9432, 0.44", "16.7505, 137.28, -62.1617, 0.44", "16.7544, 137.487, -62.1789, 0.44", "16.7035, 138.281, -62.1734, 0.37", "16.578, 139.282, -62.0806, 0.37", "16.3979, 140.568, -61.8716, 1.03", "16.3875, 140.663, -61.8561, 1.03", "16.3379, 141.466, -61.7376, 1.18", "16.3352, 142.263, -61.6424, 0.59", "16.3965, 143.174, -61.5648, 0.37", "16.5362, 144.159, -61.5232, 0.29", "16.8189, 145.452, -61.4763, 0.22", "16.9683, 146.065, -61.4484, 0.44", "17.0232, 146.268, -61.4395, 0.44", "17.2949, 147.101, -61.3224, 0.44", "17.3302, 147.187, -61.2985, 0.44", "17.8758, 148.374, -60.8576, 0.74", "18.321, 149.306, -60.4572, 1.33", "18.8892, 150.452, -59.9343, 1.4", "19.7853, 152.237, -59.1128, 0.52", "20.3568, 153.397, -58.5905, 0.59", "20.7611, 154.266, -58.2288, 0.74", "21.0231, 154.867, -58.0149, 0.74", "21.0623, 154.968, -57.9864, 0.74", "21.2967, 155.707, -57.8465, 0.44", "21.5312, 156.774, -57.7831, 0.52", "21.6766, 157.48, -57.7778, 0.66", "21.8288, 158.112, -57.7587, 0.44", "22.0595, 158.981, -57.7184, 0.22", "22.3869, 160.195, -57.6402, 0.66", "22.5345, 160.8, -57.6024, 0.88", "22.723, 161.655, -57.5501, 0.29", "22.9265, 162.693, -57.4812, 0.22", "23.0467, 163.39, -57.4351, 0.37", "23.1409, 164.113, -57.4138, 0.52", "23.2265, 165.222, -57.4551, 0.29", "23.2684, 165.803, -57.4946, 0.59", "23.2954, 166.024, -57.5117, 0.59", "23.4228, 166.61, -57.5726, 0.59", "23.4515, 166.7, -57.5818, 0.59", "23.7705, 167.527, -57.6544, 0.59", "24.3087, 168.729, -57.6966, 0.44", "24.7567, 169.715, -57.705, 0.59", "25.1222, 170.537, -57.6984, 1.03", "25.4701, 171.364, -57.6754, 1.03", "25.7862, 172.205, -57.6347, 0.81", "26.0778, 173.105, -57.5743, 0.59", "26.3257, 174.076, -57.5014, 0.37", "26.5959, 175.473, -57.4032, 0.37", "26.7916, 176.628, -57.3229, 0.37", "26.9348, 177.563, -57.2653, 0.44", "27.0741, 178.548, -57.2189, 0.44", "27.2268, 179.472, -57.1871, 0.29", "27.4622, 180.656, -57.1402, 0.29", "27.6941, 181.558, -57.111, 0.81", "27.9845, 182.406, -57.0681, 1.11", "28.3294, 183.246, -57.0131, 0.81", "28.8792, 184.467, -56.913, 0.52", "28.9207, 184.554, -56.9047, 0.52", "29.4195, 185.639, -56.7703, 0.52", "29.9026, 186.836, -56.5946, 0.29", "30.1964, 187.673, -56.4612, 0.59", "30.4176, 188.534, -56.3196, 0.81", "30.4454, 188.721, -56.2892, 0.81", "30.5512, 189.554, -56.1697, 0.81", "30.6568, 190.356, -56.0864, 0.66", "30.672, 190.465, -56.0807, 0.66", "30.8325, 191.456, -56.0378, 0.44", "31.0315, 192.641, -55.991, 0.37", "31.2235, 193.741, -55.9537, 0.37", "31.4311, 194.932, -55.9161, 0.52", "31.5871, 195.899, -55.8824, 0.37", "31.6866, 196.678, -55.8464, 0.37", "31.7755, 197.498, -55.8069, 0.81", "31.837, 198.269, -55.7662, 0.88", "31.8671, 198.946, -55.7186, 0.59", "31.8803, 199.351, -55.6876, 0.44", "31.9675, 200.562, -55.6191, 0.37", "32.1475, 201.982, -55.5777, 0.37", "32.2786, 202.674, -55.6063, 0.66", "32.3041, 202.78, -55.6166, 0.66", "32.6337, 203.793, -55.7844, 0.74", "32.8172, 204.302, -55.8857, 0.88", "33.2874, 205.436, -56.174, 0.59", "33.7849, 206.546, -56.5115, 0.29", "33.8307, 206.64, -56.5441, 0.29", "34.5809, 208.094, -57.0985, 1.18" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "1.83385, 87.0039, -36.8387, 0.59", "1.90064, 87.684, -36.7011, 0.59", "1.94127, 88.1723, -36.5907, 0.29", "1.96932, 88.58, -36.4988, 0.29", "1.99866, 89.1169, -36.3807, 0.29", "2.04257, 90.3501, -36.1138, 0.29", "2.05902, 91.1488, -35.9471, 0.74", "2.04814, 91.6713, -35.847, 0.74", "2.02284, 92.2115, -35.7577, 0.52", "2.00197, 92.5393, -35.7154, 0.44", "1.97226, 92.9463, -35.6738, 0.29", "1.93574, 93.4272, -35.6449, 0.29", "1.89673, 94.0646, -35.6257, 0.66", "1.88162, 94.4788, -35.6055, 0.96", "1.88706, 94.862, -35.5755, 0.66", "1.89497, 95.0029, -35.5612, 0.66", "1.93273, 95.4286, -35.5097, 0.44", "1.96487, 95.8654, -35.4479, 0.29", "1.98723, 96.2962, -35.3811, 0.22", "1.97808, 96.9968, -35.2236, 0.29", "1.97294, 97.0534, -35.2088, 0.29", "1.89833, 97.5848, -35.0585, 0.37", "1.7807, 98.1611, -34.8951, 0.66", "1.67869, 98.5604, -34.7827, 0.96", "1.4429, 99.4701, -34.5395, 0.81", "1.31097, 100.049, -34.3941, 0.59", "1.30093, 100.112, -34.3802, 0.59", "1.24169, 100.796, -34.2547, 0.59", "1.23646, 101.228, -34.1932, 0.66", "1.29258, 102.145, -34.0961, 0.22", "1.36125, 102.603, -34.0711, 0.22", "1.48233, 103.171, -34.0346, 0.74", "1.59419, 103.651, -34.0013, 0.81", "1.6098, 103.716, -33.9965, 0.81", "1.71513, 104.243, -33.9576, 0.88", "1.78502, 104.667, -33.9217, 0.81", "1.85915, 105.183, -33.882, 0.29", "1.92949, 106.069, -33.8213, 0.29", "1.97531, 107.334, -33.7449, 0.74", "1.96993, 107.946, -33.7135, 1.11", "1.93681, 108.485, -33.6931, 0.88", "1.83903, 109.369, -33.6602, 0.22", "1.70393, 110.291, -33.6275, 0.22", "1.68935, 110.382, -33.6271, 0.22", "1.65389, 110.615, -33.6445, 0.22", "1.58496, 111.147, -33.7092, 0.74", "1.54132, 111.481, -33.7585, 1.11", "1.45523, 112.118, -33.8898, 1.25", "1.36565, 112.845, -34.057, 0.74", "1.23903, 113.826, -34.3125, 0.22", "1.15821, 114.415, -34.4724, 0.37", "1.04283, 115.201, -34.6856, 0.37", "0.869113, 116.32, -34.9706, 0.52", "0.797594, 116.775, -35.0742, 0.88", "0.64528, 117.732, -35.2495, 1.03", "0.558119, 118.335, -35.3388, 0.66", "0.471062, 119.011, -35.4243, 0.29", "0.387841, 119.763, -35.4969, 0.22", "0.320988, 120.401, -35.5259, 0.22", "0.260225, 121.01, -35.5433, 0.44", "0.227159, 121.417, -35.544, 0.59", "0.198671, 122.003, -35.5496, 0.37", "0.190328, 122.579, -35.5568, 0.29", "0.209657, 123.259, -35.5656, 0.44", "0.267913, 123.902, -35.5934, 0.29", "0.400711, 124.615, -35.6835, 0.66", "0.487004, 125.052, -35.7628, 1.03", "0.543923, 125.328, -35.8241, 1.25", "0.640463, 125.876, -35.9604, 0.44", "0.744334, 126.714, -36.1845, 0.52", "0.806884, 127.696, -36.4608, 0.29", "0.825865, 128.863, -36.7861, 0.29", "0.826693, 128.948, -36.8075, 0.29", "0.831023, 129.477, -36.9391, 0.29", "0.874205, 130.213, -37.1018, 0.81", "0.882527, 130.28, -37.1118, 0.81", "0.979618, 130.708, -37.1696, 0.88", "1.18777, 131.342, -37.3139, 0.88", "1.36546, 131.894, -37.4619, 0.44", "1.5924, 132.631, -37.6803, 0.22", "1.77873, 133.35, -37.9511, 0.22", "1.9663, 134.255, -38.3391, 0.81", "2.06731, 134.983, -38.6767, 0.88", "2.09895, 135.491, -38.9112, 0.96", "2.1051, 135.923, -39.1027, 0.96", "2.06389, 136.99, -39.5832, 0.44", "2.06231, 137.049, -39.6083, 0.44", "2.06365, 137.634, -39.7937, 0.44", "2.08363, 138.452, -40.0053, 0.66", "2.08863, 138.589, -40.0379, 0.66", "2.10286, 138.968, -40.1513, 0.88", "2.12869, 139.617, -40.3555, 0.52", "2.16467, 140.199, -40.5719, 0.37", "2.23671, 141.516, -41.1446, 1.11", "2.24185, 141.828, -41.2945, 1.25", "2.20059, 143.064, -41.8993, 0.22", "2.19381, 143.122, -41.9289, 0.22", "2.09395, 143.541, -42.1704, 0.22", "1.92166, 144.046, -42.4724, 0.22", "1.7768, 144.371, -42.6411, 0.74", "1.62725, 144.675, -42.7918, 1.03", "1.38625, 145.137, -42.9889, 0.81", "0.987146, 145.94, -43.3356, 0.52", "0.852866, 146.222, -43.4907, 0.37", "0.626482, 146.77, -43.8427, 0.29", "0.439872, 147.334, -44.2176, 0.59", "0.362824, 147.683, -44.441, 0.96", "0.319782, 148.031, -44.6499, 1.11", "0.243974, 149.106, -45.1956, 0.37", "0.240829, 149.166, -45.2236, 0.37", "0.191277, 149.815, -45.4791, 0.29", "0.109438, 150.481, -45.6441, 0.29", "0.0953055, 150.544, -45.6524, 0.29", "-0.116751, 151.191, -45.667, 0.37", "-0.234409, 151.515, -45.6427, 0.59", "-0.480527, 152.172, -45.5864, 0.74", "-0.693781, 152.708, -45.5355, 0.52", "-1.00816, 153.525, -45.4549, 0.22", "-1.19758, 154.103, -45.4013, 0.22", "-1.32709, 154.57, -45.3851, 0.22", "-1.49269, 155.259, -45.4012, 0.74", "-1.6144, 155.858, -45.4471, 0.88", "-1.71429, 156.402, -45.5136, 0.74", "-1.82723, 157.076, -45.6117, 0.66", "-2.03557, 158.2, -45.7942, 0.29", "-2.20072, 158.953, -45.9249, 0.29", "-2.28884, 159.348, -45.9978, 0.44", "-2.31822, 159.484, -46.0224, 0.44", "-2.39464, 159.88, -46.0822, 0.44", "-2.45275, 160.261, -46.1194, 0.29", "-2.48153, 160.648, -46.1249, 0.74", "-2.47173, 161.199, -46.1209, 0.96", "-2.44932, 161.482, -46.1171, 0.88", "-2.37097, 162.164, -46.1065, 0.29", "-2.3044, 162.631, -46.0983, 0.44", "-2.21038, 163.229, -46.0862, 0.29", "-2.09977, 164.101, -46.0656, 0.37", "-2.05402, 164.471, -46.0554, 0.59", "-1.97474, 165.014, -46.0404, 0.74", "-1.92659, 165.354, -46.0311, 0.52", "-1.86753, 165.776, -46.0103, 0.37", "-1.73881, 166.773, -45.9194, 0.52", "-1.63663, 167.591, -45.8185, 0.44", "-1.48143, 168.791, -45.6465, 0.88", "-1.41247, 169.27, -45.5715, 1.25", "-1.34544, 169.752, -45.4937, 1.03", "-1.24164, 170.509, -45.3666, 0.29", "-1.16257, 171.166, -45.2556, 0.44", "-1.12893, 171.91, -45.1553, 0.37", "-1.1406, 172.626, -45.0892, 0.74", "-1.17662, 173.372, -45.0589, 0.74", "-1.18298, 173.438, -45.06, 0.74", "-1.28862, 174.175, -45.0995, 0.74", "-1.43439, 174.985, -45.1476, 0.22", "-1.51196, 175.404, -45.1721, 0.52", "-1.59686, 175.874, -45.1953, 0.96", "-1.71816, 176.608, -45.2224, 0.22", "-1.80098, 177.208, -45.2341, 0.66", "-1.85478, 177.755, -45.2318, 1.03", "-1.90281, 178.516, -45.1742, 0.81", "-1.954, 179.339, -45.0791, 0.52", "-1.99032, 179.806, -45.0213, 0.44", "-2.09001, 180.771, -44.8999, 0.37", "-2.20461, 181.62, -44.7941, 0.88", "-2.34085, 182.55, -44.6817, 1.25", "-2.41702, 183.094, -44.6198, 0.88", "-2.50085, 183.832, -44.5468, 0.44", "-2.5863, 184.636, -44.4847, 0.59", "-2.63097, 185.114, -44.4606, 0.81", "-2.6692, 185.646, -44.4512, 0.59", "-2.69554, 186.32, -44.4605, 0.37", "-2.6947, 187.417, -44.4485, 0.52", "-2.68676, 188.119, -44.4183, 0.37", "-2.69079, 188.442, -44.4034, 0.74", "-2.72784, 188.921, -44.3805, 0.88", "-2.77469, 189.18, -44.3788, 0.88", "-2.88711, 189.646, -44.4368, 1.11", "-2.98809, 190.121, -44.5449, 1.03", "-3.06809, 190.573, -44.6731, 0.37", "-3.14494, 191.116, -44.8429, 0.37", "-3.21202, 191.939, -45.1304, 0.66", "-3.26237, 193.203, -45.5739, 0.29", "-3.27047, 194.042, -45.8574, 0.52", "-3.26978, 194.097, -45.8751, 0.52", "-3.25571, 194.565, -46.0056, 0.66", "-3.22562, 195.384, -46.1812, 0.37", "-3.20244, 196.311, -46.3074, 0.66", "-3.20453, 196.989, -46.3553, 0.59", "-3.2205, 197.476, -46.3648, 0.74", "-3.24943, 198.12, -46.3456, 0.37", "-3.29361, 198.989, -46.2116, 0.59", "-3.30046, 199.117, -46.1782, 0.59", "-3.32418, 199.618, -46.0253, 0.37", "-3.36406, 200.61, -45.6997, 0.29", "-3.39723, 201.464, -45.4319, 0.52", "-3.45127, 202.831, -45.0171, 0.22", "-3.46492, 203.678, -44.7844, 0.52", "-3.47693, 204.128, -44.6822, 0.81", "-3.50913, 204.651, -44.5964, 0.52", "-3.59331, 205.581, -44.5297, 0.74", "-3.60302, 205.646, -44.5307, 0.74", "-3.80383, 206.493, -44.6205, 1.33", "-4.00094, 207.144, -44.6857, 0.88", "-4.2681, 207.872, -44.7468, 0.66", "-4.57098, 208.564, -44.7833, 0.52", "-4.95821, 209.362, -44.8158, 0.52", "-5.29276, 210.008, -44.8438, 0.52", "-5.70301, 210.72, -44.8786, 0.29", "-5.97985, 211.219, -44.9029, 0.52", "-6.24507, 211.685, -44.921, 0.66" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "24.8972, 61.9671, 14.06, 0.59", "28.5385, 61.5892, 12.6923, 0.59", "30.3794, 61.4778, 12.1257, 0.74", "30.4562, 61.4753, 12.1054, 0.74", "31.2306, 61.485, 11.9357, 0.74", "32.4777, 61.5224, 11.7474, 0.96", "32.5568, 61.5224, 11.7396, 0.96", "33.3662, 61.5365, 11.8623, 0.96", "33.4446, 61.5352, 11.8753, 0.96", "34.9818, 61.5045, 12.0736, 0.52", "36.001, 61.4836, 12.1666, 0.52", "37.3834, 61.4613, 12.2734, 0.81", "38.1368, 61.463, 12.3363, 0.88", "39.4596, 61.4387, 12.4237, 0.52", "39.8537, 61.4386, 12.4574, 0.74", "40.0127, 61.438, 12.4576, 0.74", "40.6189, 61.4524, 12.3963, 0.29", "41.3921, 61.5048, 12.2757, 0.59", "42.8104, 61.5925, 11.9032, 0.74", "43.6148, 61.6479, 11.6609, 0.59", "45.5666, 61.7798, 10.9956, 1.03", "45.6875, 61.7907, 10.9531, 1.03", "46.0793, 61.8344, 10.8061, 0.74", "47.6879, 62.0997, 10.1729, 0.44", "48.2883, 62.2508, 9.94635, 0.59", "49.3892, 62.5533, 9.5827, 0.66", "50.0414, 62.765, 9.45288, 0.74", "50.1147, 62.7879, 9.44108, 0.74", "50.3851, 62.8738, 9.4107, 0.74", "50.4485, 62.8968, 9.40934, 0.74", "51.8978, 63.4055, 9.2234, 0.29", "52.3374, 63.5787, 9.07738, 0.66", "52.4736, 63.6353, 9.00181, 0.66", "52.8155, 63.7493, 8.78469, 0.88", "52.8836, 63.7659, 8.73013, 0.88", "54.1987, 64.0662, 7.54313, 0.29", "55.312, 64.3085, 6.43599, 0.29", "56.6307, 64.5748, 5.05209, 1.11", "57.866, 64.8093, 3.70489, 0.96", "60.152, 65.2668, 1.10215, 0.66", "60.5817, 65.361, 0.591131, 0.66", "60.7154, 65.3967, 0.421228, 0.66", "61.3819, 65.6194, -0.440278, 0.59", "61.4893, 65.6727, -0.578683, 0.59", "62.273, 66.3109, -1.57294, 0.52", "62.3075, 66.3459, -1.60488, 0.52", "62.7181, 66.7352, -1.91728, 0.96", "63.2211, 67.2082, -2.23534, 1.11", "64.2782, 68.2258, -2.75799, 0.29", "64.3304, 68.268, -2.7783, 0.29", "64.7747, 68.5136, -2.89796, 0.52", "64.836, 68.5392, -2.91321, 0.52", "65.0717, 68.6179, -2.96765, 0.74", "65.143, 68.6407, -2.98847, 0.74", "66.2531, 69.1073, -3.34409, 0.74", "67.1751, 69.6084, -3.70182, 0.59", "67.2361, 69.6479, -3.7295, 0.59", "67.7566, 70.0385, -3.96458, 0.29", "68.5372, 70.7311, -4.3229, 0.29", "69.1284, 71.3284, -4.6154, 0.88", "69.4169, 71.6986, -4.76418, 1.11", "69.4549, 71.7516, -4.78384, 1.11", "69.856, 72.2792, -4.96153, 0.88", "70.0423, 72.4765, -5.02882, 0.52", "70.8625, 73.1989, -5.22633, 0.37", "71.6367, 73.7758, -5.3838, 0.22", "71.7014, 73.8204, -5.39533, 0.22", "72.1123, 74.1152, -5.46932, 0.74", "73.0392, 74.7969, -5.70956, 0.88", "73.4945, 75.1333, -5.82395, 0.22", "73.949, 75.4248, -5.92691, 0.29", "74.0167, 75.4604, -5.94062, 0.29", "74.603, 75.6781, -6.10814, 0.29", "75.8657, 75.9521, -6.56343, 0.88", "76.3427, 76.0184, -6.73662, 1.18", "77.8224, 76.1436, -7.28147, 0.29", "78.4853, 76.1821, -7.52327, 0.88", "80.7244, 76.3246, -8.31964, 1.33", "82.5454, 76.4346, -8.93383, 0.52", "83.1607, 76.4832, -9.13173, 1.25", "83.2249, 76.492, -9.15279, 1.25", "84.6738, 76.824, -9.64355, 0.29", "85.3626, 77.0455, -9.86897, 0.29", "85.9349, 77.3351, -9.99854, 0.59", "86.2402, 77.5187, -10.0634, 0.96", "86.8663, 77.8902, -10.1985, 0.96", "87.8785, 78.4329, -10.3832, 0.59", "87.9479, 78.4666, -10.3917, 0.59", "88.4899, 78.7158, -10.4451, 0.29", "89.2469, 79.089, -10.5048, 0.44", "89.6991, 79.328, -10.5295, 0.66", "90.3707, 79.7266, -10.5803, 0.29", "90.7925, 80.0029, -10.5953, 0.22", "91.3506, 80.3744, -10.6238, 0.66", "91.6483, 80.5723, -10.6379, 0.74", "91.9542, 80.7875, -10.6508, 0.59", "93.0236, 81.4971, -10.6675, 0.22", "93.5019, 81.7319, -10.6508, 0.44", "93.578, 81.7538, -10.6439, 0.44", "94.0014, 81.8216, -10.5784, 0.59", "94.0683, 81.8286, -10.5679, 0.59", "94.7131, 81.8727, -10.456, 0.59", "95.7398, 81.94, -10.2496, 0.22", "96.3042, 82.0154, -10.1533, 0.59", "96.6779, 82.0852, -10.0918, 0.66", "97.4155, 82.2591, -10.0292, 0.66", "97.4826, 82.2792, -10.0261, 0.66", "98.3894, 82.6125, -10.0335, 0.22", "99.0316, 82.8912, -10.0473, 0.66", "99.3193, 83.0217, -10.0585, 0.96", "100.823, 83.7304, -10.119, 0.22", "101.362, 83.9726, -10.1707, 0.22", "102.231, 84.3067, -10.3664, 0.59", "102.685, 84.4524, -10.5303, 0.96", "102.911, 84.5128, -10.6249, 1.18", "102.972, 84.5269, -10.6514, 1.18", "104.547, 84.8119, -11.2506, 0.44", "105.827, 84.9768, -11.6597, 0.37", "106.78, 85.0698, -11.9094, 0.29", "107.348, 85.1235, -12.0237, 0.44", "107.763, 85.1712, -12.0948, 0.44", "108.901, 85.3482, -12.1996, 0.22", "109.688, 85.481, -12.154, 0.81", "109.831, 85.504, -12.1348, 0.81", "110.288, 85.554, -12.0577, 0.96", "112.035, 85.6931, -11.7537, 0.37", "113.046, 85.7855, -11.5868, 0.37", "114.051, 85.8925, -11.4936, 0.29", "114.11, 85.8963, -11.491, 0.29", "114.864, 85.9241, -11.4706, 0.29", "115.446, 85.9382, -11.4507, 0.74", "116.15, 85.9689, -11.3611, 1.03", "117.418, 86.0569, -11.1823, 0.88", "119.039, 86.2745, -10.7806, 0.29", "119.564, 86.3544, -10.5779, 0.44", "120.258, 86.4597, -10.2108, 0.29", "121.28, 86.5893, -9.48767, 1.33", "121.611, 86.6181, -9.17486, 1.69", "122.595, 86.7089, -7.99856, 0.29", "122.989, 86.7532, -7.45231, 0.29", "123.232, 86.764, -7.12344, 0.66", "123.27, 86.7623, -7.0761, 0.66", "123.591, 86.7242, -6.76332, 0.66", "124.186, 86.6134, -6.26182, 0.22", "124.571, 86.4897, -5.98066, 0.44", "124.63, 86.4682, -5.9328, 0.44", "125.057, 86.2986, -5.5639, 0.44", "125.104, 86.28, -5.53345, 0.44", "125.737, 86.0477, -5.19279, 0.29", "126.475, 85.7765, -4.89383, 0.29", "127.042, 85.569, -4.71069, 0.74", "127.36, 85.4553, -4.62034, 0.96", "129.078, 84.8693, -4.23438, 0.37", "129.471, 84.7496, -4.16923, 1.03", "130.498, 84.4983, -4.1081, 1.03", "130.986, 84.4012, -4.12964, 0.88" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "24.8972, 61.9671, 14.06, 0.88", "25.3216, 62.6941, 15.4237, 0.88", "25.564, 63.0878, 16.0113, 0.66", "25.6949, 63.3367, 16.3155, 0.66", "25.7065, 63.3626, 16.342, 0.66", "25.8297, 63.6987, 16.6216, 0.66", "25.8401, 63.73, 16.6442, 0.66", "25.9569, 64.1777, 16.8492, 0.74", "26.0824, 64.9168, 17.1795, 0.44", "26.1209, 65.2521, 17.3401, 0.37", "26.1651, 65.7317, 17.5815, 0.37", "26.182, 65.9566, 17.6973, 0.59", "26.2226, 66.4922, 17.9689, 0.59", "26.2577, 66.88, 18.16, 0.59", "26.2909, 67.0557, 18.2356, 0.88", "26.3017, 67.0935, 18.2553, 0.88", "26.4157, 67.4298, 18.4907, 1.18", "26.437, 67.4922, 18.5447, 1.18", "26.4951, 67.6773, 18.7256, 0.88", "26.6124, 68.0742, 19.1304, 0.44", "26.7584, 68.5341, 19.5921, 0.74", "26.9559, 69.1279, 20.1955, 1.33", "27.1389, 69.6671, 20.7353, 0.96", "27.3288, 70.2254, 21.2748, 0.52", "27.4431, 70.5775, 21.593, 0.44", "27.584, 71.052, 22.0101, 0.37", "27.6968, 71.5427, 22.4271, 0.37", "27.7474, 71.8719, 22.7115, 0.37", "27.7512, 71.9599, 22.791, 0.37", "27.7282, 72.2511, 23.0835, 0.59", "27.5838, 72.8903, 23.7845, 0.88", "27.4086, 73.3677, 24.3375, 0.88", "27.2372, 73.7397, 24.7627, 0.52", "27.1207, 73.9634, 25.0254, 0.52", "27.1104, 73.9846, 25.0485, 0.52", "27.0373, 74.1853, 25.2198, 0.52", "27.0356, 74.222, 25.2321, 0.52", "27.0816, 74.4771, 25.2629, 0.74", "27.0974, 74.5333, 25.2656, 0.74", "27.2184, 74.8789, 25.2841, 0.37", "27.4128, 75.3921, 25.3114, 0.44", "27.5972, 75.8169, 25.3107, 0.44", "27.7574, 76.1638, 25.2962, 0.74", "27.792, 76.2332, 25.2908, 0.74", "28.0078, 76.6747, 25.2375, 0.74", "28.0247, 76.7093, 25.2321, 0.74", "28.2659, 77.228, 25.1409, 0.66", "28.2813, 77.2644, 25.1347, 0.66", "28.4128, 77.5834, 25.0936, 0.74", "28.6344, 78.1612, 25.0405, 0.29", "28.7543, 78.5139, 25.0398, 0.44", "28.8787, 78.9265, 25.0725, 0.22", "28.954, 79.2377, 25.1261, 0.66", "29.0015, 79.4753, 25.175, 0.66", "29.0068, 79.519, 25.1859, 0.66", "29.0619, 80.0674, 25.3626, 0.44", "29.068, 80.1053, 25.3736, 0.44", "29.115, 80.2956, 25.4207, 0.52", "29.1496, 80.4118, 25.44, 0.52", "29.2227, 80.64, 25.4592, 0.52", "29.3785, 81.1464, 25.4724, 0.29", "29.5051, 81.635, 25.4665, 0.29", "29.5104, 81.668, 25.4666, 0.29", "29.5421, 82.0362, 25.4713, 0.44", "29.5412, 82.1636, 25.4741, 0.44", "29.495, 82.5571, 25.5081, 0.44", "29.4094, 82.9216, 25.5571, 0.59", "29.3288, 83.2403, 25.6374, 0.74", "29.321, 83.2817, 25.6508, 0.74", "29.2966, 83.5886, 25.77, 0.74", "29.3179, 84.037, 26.0365, 0.52", "29.323, 84.0681, 26.0593, 0.52", "29.4032, 84.4225, 26.3257, 0.44", "29.4454, 84.6209, 26.4842, 0.29", "29.495, 84.9438, 26.7326, 0.29", "29.5456, 85.6341, 27.3065, 0.29", "29.5517, 85.8915, 27.5136, 0.37", "29.5557, 86.2477, 27.7895, 0.44", "29.5488, 86.7695, 28.1784, 0.96", "29.5511, 87.0931, 28.4162, 1.25", "29.6179, 87.8936, 29.0161, 0.52", "29.6801, 88.2263, 29.2475, 0.52", "29.7638, 88.4984, 29.4473, 0.66", "29.7788, 88.5311, 29.4732, 0.66", "29.9574, 88.8359, 29.6964, 0.44", "30.2459, 89.2784, 30.0001, 0.29", "30.3338, 89.4344, 30.0842, 0.52", "30.4539, 89.7039, 30.2321, 0.52", "30.5866, 90.0521, 30.4214, 0.44", "30.6918, 90.3204, 30.5583, 0.29", "30.7802, 90.5433, 30.6893, 0.52", "30.9879, 90.9958, 30.9605, 0.88", "31.0999, 91.2107, 31.0968, 0.52", "31.3668, 91.6531, 31.3927, 0.44", "31.5921, 91.9805, 31.6142, 0.59", "32.0151, 92.5098, 32.0189, 0.29", "32.3328, 92.8611, 32.3192, 0.29", "33.2705, 97.5478, 35.0299, 0.29", "33.9444, 102.756, 36.6489, 0.29" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "-134.016, -201.839, -23.0177, 0.29", "-134.284, -202.545, -22.8258, 0.29", "-134.375, -202.786, -22.7604, 0.74", "-134.546, -203.236, -22.638, 0.29", "-134.706, -203.659, -22.523, 0.29", "-134.924, -204.234, -22.3667, 0.37", "-136.862, -210.303, -21.564, 0.37" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-134.016, -201.839, -23.0177, 0.37", "-134.932, -201.939, -22.3449, 0.37", "-135.426, -201.992, -22.0263, 0.37", "-136.336, -202.064, -21.4404, 0.44", "-136.976, -202.114, -21.0485, 0.37", "-138.241, -202.244, -20.3049, 0.88", "-138.688, -202.307, -20.0196, 1.11", "-139.232, -202.4, -19.6734, 0.81", "-140.529, -202.701, -18.7774, 0.29", "-140.945, -202.808, -18.5026, 0.29", "-141.317, -202.903, -18.2498, 0.74", "-142.558, -203.209, -17.471, 0.44", "-142.944, -203.295, -17.2262, 0.44", "-143.787, -203.437, -16.7325, 0.29", "-144.702, -203.6, -16.1394, 0.29", "-145.325, -203.694, -15.6145, 0.59", "-145.755, -203.744, -15.2197, 0.66", "-146.389, -203.799, -14.6252, 0.44", "-146.982, -203.846, -14.0185, 0.37", "-148.433, -203.967, -12.4208, 0.66", "-149.839, -204.114, -10.8038, 0.81", "-150.155, -204.14, -10.4566, 0.88", "-150.432, -204.161, -10.1386, 0.88", "-150.479, -204.164, -10.0843, 0.88", "-151.3, -204.204, -9.19317, 0.52", "-151.781, -204.168, -8.85926, 0.52", "-153.374, -204.072, -8.03406, 1.69" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-6.17251, -118.851, -27.0171, 0.74", "-6.47432, -120.145, -27.5438, 0.74", "-6.62009, -121.192, -28.0024, 0.74", "-6.73437, -122.626, -28.6268, 0.88", "-6.7684, -123.503, -29.0068, 0.88", "-6.82419, -124.941, -29.6296, 0.81", "-6.89987, -126.892, -30.4745, 0.88", "-6.84438, -128.081, -31.0033, 0.88", "-6.75358, -128.908, -31.3967, 1.33", "-6.60082, -129.78, -31.8054, 1.18" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-6.17251, -118.851, -27.0171, 0.59", "-6.14972, -119.698, -27.2353, 0.59", "-6.16865, -120.799, -27.6885, 0.52", "-6.16124, -121.905, -28.1974, 0.44", "-6.14367, -122.859, -28.6556, 0.44", "-6.07232, -124.154, -29.2608, 0.59", "-5.94985, -125.701, -29.9981, 0.74", "-5.83463, -126.859, -30.5992, 0.59", "-5.72771, -127.696, -31.0567, 0.59", "-5.71584, -127.763, -31.0922, 0.59", "-5.42022, -129.059, -31.7048, 0.59", "-5.00882, -130.452, -32.2001, 0.74", "-4.72935, -131.245, -32.4225, 0.74", "-4.23908, -132.532, -32.7423, 0.66", "-3.76318, -133.715, -33.0177, 0.59", "-3.6922, -133.862, -33.0428, 0.59", "-3.00361, -134.95, -33.1377, 0.59", "-2.69453, -135.33, -33.1309, 0.81", "-2.63542, -135.396, -33.1269, 0.81", "-2.06799, -136.025, -33.0909, 0.81", "-1.04785, -137.221, -33.1226, 0.66", "-0.339759, -138.161, -33.2026, 0.66", "0.253781, -139.084, -33.2717, 0.66", "0.852258, -140.122, -33.2939, 0.81", "1.27902, -140.949, -33.2882, 0.96", "1.83442, -142.183, -33.2619, 0.52", "2.2199, -143.153, -33.2457, 0.52", "2.70788, -144.426, -33.1631, 0.81", "3.1221, -145.445, -33.0655, 0.81", "3.51187, -146.379, -32.9562, 0.81", "3.54377, -146.462, -32.9456, 0.81", "3.99326, -147.718, -32.8057, 0.81", "4.0411, -147.865, -32.7983, 0.81", "4.44425, -149.344, -32.7878, 0.81", "4.68612, -150.466, -32.7827, 0.81", "4.8734, -151.522, -32.7538, 0.66", "4.88725, -151.61, -32.7464, 0.66", "5.03867, -152.734, -32.6029, 0.37", "5.23261, -154.068, -32.4131, 0.66", "5.326, -154.683, -32.314, 0.96", "5.55483, -155.895, -32.0671, 0.74", "5.86194, -157.355, -31.7269, 0.96", "6.08768, -158.472, -31.4759, 0.81", "6.34516, -159.791, -31.1966, 0.74", "6.35511, -159.855, -31.1878, 0.74", "6.52938, -161.234, -31.1079, 0.74", "6.53971, -161.312, -31.1123, 0.74", "6.75561, -162.642, -31.4792, 0.44", "6.88537, -163.325, -31.7485, 0.44", "7.16609, -164.704, -32.4165, 1.4", "7.37528, -165.579, -32.9378, 1.18", "7.67121, -166.644, -33.7243, 1.03", "8.27269, -168.37, -35.1469, 0.66", "8.55748, -169.01, -35.7095, 0.66", "8.63143, -169.153, -35.8366, 0.66", "9.37586, -170.441, -36.942, 0.81", "9.92729, -171.388, -37.7974, 0.96", "10.6588, -172.611, -38.9426, 0.74", "11.2626, -173.531, -39.7829, 0.74", "11.7432, -174.228, -40.4126, 0.96", "12.1184, -174.761, -40.8496, 1.25" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-20.7667, -401.625, -20.7258, 0.29", "-19.4533, -401.568, -21.0798, 0.29", "-18.6571, -401.533, -21.2944, 0.29", "-17.1024, -401.466, -21.7135, 0.22", "-16.341, -401.433, -21.9187, 0.29" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-20.7667, -401.625, -20.7258, 0.59", "-21.0125, -402.773, -20.773, 0.59", "-21.0314, -402.848, -20.7743, 0.59", "-21.3655, -404.032, -20.7589, 0.52", "-21.7116, -405.229, -20.7296, 0.66", "-22.0066, -406.36, -20.7024, 0.66", "-22.294, -407.532, -20.6751, 0.81", "-22.3548, -407.769, -20.6622, 0.81", "-22.5825, -408.958, -20.5584, 0.81", "-22.5997, -409.116, -20.5404, 0.81", "-22.5211, -410.494, -20.3156, 0.81", "-22.5125, -410.579, -20.3068, 0.81", "-22.4415, -411.815, -20.3617, 0.59", "-22.4313, -413.044, -20.5337, 0.37", "-22.4752, -413.789, -20.7704, 0.74", "-22.7761, -415.248, -21.6115, 0.81", "-23.2012, -416.761, -22.7767, 0.52", "-23.7406, -418.557, -24.4233, 0.52", "-23.756, -418.602, -24.4699, 0.52", "-24.2942, -419.886, -26.0968, 0.96", "-24.9903, -421.384, -28.3938, 1.69", "-25.2547, -421.935, -29.4074, 0.37", "-25.5607, -422.614, -30.9013, 0.37", "-25.6688, -422.907, -31.6138, 0.66", "-26.0677, -424.24, -34.9887, 1.25", "-26.2604, -425.115, -37.3533, 0.44", "-26.3243, -425.646, -38.8234, 0.81", "-26.4052, -426.661, -41.6304, 0.37", "-26.3927, -427.058, -42.714, 0.29", "-26.2655, -427.614, -44.174, 0.29", "-26.1325, -427.896, -44.7869, 0.96", "-25.945, -428.2, -45.3966, 0.96", "-25.4856, -428.905, -46.6355, 0.44", "-25.3246, -429.144, -47.1068, 0.81", "-25.1227, -429.433, -47.7952, 1.03", "-25.0992, -429.465, -47.8729, 1.03", "-24.4491, -430.397, -49.9068, 0.37", "-24.0049, -431.071, -51.2618, 1.4", "-23.3638, -432.439, -53.797, 0.37", "-23.2123, -432.878, -54.5335, 0.66", "-23.0016, -433.573, -55.5808, 0.29", "-22.7903, -434.2, -56.3995, 0.96", "-22.6753, -434.505, -56.7281, 0.96", "-21.6965, -436.968, -58.9312, 0.37", "-21.5496, -437.326, -59.1745, 0.59", "-21.1418, -438.31, -59.8655, 0.29", "-20.7163, -439.29, -60.6653, 0.96", "-20.6912, -439.343, -60.7121, 0.96", "-20.3895, -439.796, -61.0182, 1.33", "-20.3327, -439.848, -61.0184, 1.33", "-19.9396, -440.209, -60.9948, 1.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-45.7926, -82.1562, -29.1232, 0.29", "-45.9735, -83.0822, -28.3816, 0.29", "-46.1024, -83.742, -27.8532, 0.37", "-46.2214, -84.3512, -27.3654, 0.37", "-46.3918, -85.2236, -26.6668, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-45.7926, -82.1562, -29.1232, 0.37", "-46.9961, -82.8404, -29.49, 0.37", "-47.8846, -83.2004, -29.6754, 0.37", "-48.9158, -83.5067, -29.8736, 0.81", "-49.6799, -83.6332, -29.9253, 1.25", "-50.2802, -83.6943, -29.9293, 1.25", "-52.8487, -83.9535, -29.9262, 0.44", "-53.029, -83.9622, -29.9215, 0.44", "-53.6381, -83.976, -29.9063, 0.74", "-56.0127, -84.0573, -29.8923, 0.52", "-57.2296, -84.1721, -29.9244, 0.59", "-58.0654, -84.3777, -30.046, 0.44", "-58.6543, -84.6831, -30.2638, 0.29", "-59.2383, -85.1014, -30.5558, 0.29", "-59.9067, -85.7736, -30.9969, 1.11", "-60.2796, -86.2882, -31.3213, 1.33", "-61.1268, -87.7672, -32.0998, 0.74", "-61.5497, -88.6367, -32.4575, 0.74", "-61.7827, -89.1922, -32.6252, 1.11", "-62.0704, -89.8764, -32.769, 0.88", "-62.4313, -90.7075, -32.8764, 0.66", "-62.8677, -91.6816, -32.9376, 0.37", "-63.1515, -92.327, -32.9098, 0.37", "-63.5623, -93.3298, -32.8371, 0.37", "-63.9756, -94.443, -32.7258, 0.37", "-64.2589, -95.2726, -32.6304, 0.29", "-64.5119, -96.0619, -32.499, 0.59", "-64.7757, -96.8558, -32.3186, 0.81", "-64.7938, -96.9203, -32.3006, 0.81", "-65.0122, -97.7901, -31.9902, 0.74", "-65.1254, -98.34, -31.7698, 1.11", "-65.3689, -99.5452, -31.2471, 0.59", "-65.4908, -100.093, -31.0031, 1.03", "-65.7752, -101.149, -30.5213, 0.52", "-66.0388, -102.027, -30.1259, 0.74", "-66.2391, -102.646, -29.8601, 0.66", "-66.616, -103.773, -29.4004, 0.44", "-66.9893, -104.77, -29.0359, 0.44", "-67.4564, -105.808, -28.7178, 0.44", "-67.6847, -106.223, -28.6236, 0.81", "-68.1396, -106.971, -28.5167, 1.18", "-68.3357, -107.251, -28.4955, 1.33", "-69.2183, -108.375, -28.4519, 0.44", "-69.9334, -109.254, -28.4443, 0.59", "-70.5382, -109.876, -28.3948, 0.81", "-70.8634, -110.155, -28.3607, 0.81", "-71.7301, -110.731, -28.2533, 0.37", "-72.6975, -111.266, -28.1567, 0.74", "-73.0924, -111.444, -28.127, 0.96", "-75.3233, -112.318, -27.9448, 0.59", "-76.293, -112.652, -27.8755, 0.81", "-78.2219, -113.23, -27.76, 0.52", "-79.3797, -113.515, -27.7209, 0.52", "-80.3677, -113.725, -27.7374, 0.74", "-89.0828, -121.109, -25.9307, 0.74", "-97.4127, -129.098, -25.2058, 0.74" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-91.8869, -90.2308, -151.133, 0.52", "-91.3748, -91.5791, -151.823, 0.52", "-90.7658, -93.1432, -152.584, 0.88", "-90.4537, -93.8786, -152.904, 0.88", "-89.8796, -95.1036, -153.413, 0.37", "-89.6217, -95.6385, -153.618, 0.29", "-89.3944, -96.1351, -153.795, 0.88", "-89.3479, -96.2374, -153.826, 0.88", "-89.026, -97.0581, -153.986, 0.88", "-88.6582, -98.151, -154.155, 0.29", "-88.4523, -98.9143, -154.217, 0.29", "-88.3061, -99.6214, -154.266, 0.22", "-88.1902, -100.433, -154.315, 0.22", "-88.1643, -100.827, -154.337, 0.81", "-88.1761, -101.543, -154.371, 1.25", "-88.2436, -102.721, -154.394, 0.37", "-88.3242, -103.823, -154.421, 0.22", "-88.3796, -104.496, -154.44, 0.66", "-88.4439, -105.13, -154.461, 0.81", "-88.602, -106.402, -154.515, 0.22", "-88.6993, -107.022, -154.548, 0.88", "-88.7664, -107.365, -154.571, 1.03", "-88.857, -107.881, -154.606, 1.03", "-88.9316, -108.425, -154.637, 0.74", "-88.9364, -108.514, -154.64, 0.74" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-91.8869, -90.2308, -151.133, 0.22", "-92.9951, -90.2652, -153.343, 0.22", "-93.4546, -90.3231, -154.171, 0.22", "-93.9722, -90.4155, -154.99, 0.81", "-94.2635, -90.4809, -155.391, 1.11", "-94.6371, -90.5791, -155.838, 1.03", "-95.7172, -90.877, -157.002, 0.22", "-95.9301, -90.9525, -157.174, 0.66", "-96.4072, -91.1424, -157.552, 0.96", "-96.9683, -91.3309, -157.942, 0.29", "-97.6131, -91.4918, -158.38, 0.29", "-97.8618, -91.5314, -158.535, 0.96", "-98.3628, -91.5699, -158.844, 1.18", "-98.4091, -91.5695, -158.878, 1.18", "-98.9992, -91.5226, -159.358, 0.88", "-99.0871, -91.5139, -159.432, 0.88", "-99.4567, -91.4949, -159.735, 0.66", "-100.335, -91.5442, -160.503, 0.29", "-100.502, -91.5633, -160.647, 0.29", "-101.192, -91.6784, -161.243, 0.29", "-101.536, -91.7276, -161.616, 0.59", "-101.805, -91.7477, -161.939, 0.59", "-102.583, -91.765, -162.972, 0.29", "-102.795, -91.7572, -163.259, 1.03", "-103.086, -91.708, -163.744, 1.33", "-103.881, -91.3912, -165.46, 0.29", "-104.019, -91.3088, -165.782, 0.29", "-104.044, -91.2901, -165.844, 0.29", "-104.246, -91.1404, -166.43, 0.59", "-104.713, -90.8692, -167.872, 0.81", "-105.011, -90.7785, -168.934, 0.52", "-105.156, -90.8005, -169.498, 1.11", "-105.396, -90.9283, -170.592, 1.4", "-105.731, -91.1587, -172.248, 0.29", "-105.801, -91.231, -172.65, 0.88", "-106.087, -91.6794, -174.302, 0.52", "-106.286, -92.1468, -175.631, 0.81", "-106.343, -92.3565, -176.146, 0.88" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "11.8914, 378.233, 73.2209, 0.37", "12.1903, 378.259, 72.55, 0.37", "12.7598, 378.225, 71.2496, 0.66", "12.7986, 378.217, 71.1647, 0.66", "13.0822, 378.157, 70.5485, 0.29", "13.1284, 378.148, 70.45, 0.29", "13.8471, 378.064, 68.7444, 0.29", "13.8825, 378.064, 68.6587, 0.29", "14.0604, 378.098, 68.2637, 0.66", "14.2595, 378.157, 67.7872, 0.52", "14.2927, 378.173, 67.6982, 0.52", "14.9159, 378.622, 66.0792, 0.22", "15.2493, 379.01, 65.3236, 0.22", "15.424, 379.238, 64.9096, 0.29", "22.3514, 383.046, 54.2781, 0.29", "29.4111, 389.137, 44.8665, 0.29", "34.1622, 396.345, 34.8169, 0.29" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "11.8914, 378.233, 73.2209, 0.29", "12.0567, 379.686, 73.1297, 0.29", "12.0885, 380.175, 73.1154, 0.29", "12.0923, 380.239, 73.1197, 0.29", "12.1304, 380.98, 73.2144, 0.29", "12.1327, 381.035, 73.2238, 0.29", "12.1908, 382.02, 73.4658, 0.29", "12.1911, 382.071, 73.4873, 0.29", "12.2449, 382.672, 73.7546, 0.52", "12.2626, 382.793, 73.8035, 0.52", "12.3074, 383.047, 73.8857, 0.52", "12.4196, 383.669, 74.0438, 0.22", "12.5183, 384.28, 74.1498, 0.22", "12.6115, 384.893, 74.231, 0.44", "12.6744, 385.365, 74.2604, 0.44", "12.7587, 386.036, 74.2849, 0.22", "12.7656, 386.102, 74.2844, 0.22", "12.8033, 387.048, 74.2029, 0.22", "12.5424, 396.144, 75.2431, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "34.5809, 208.094, -57.0985, 0.66", "34.8051, 208.805, -57.1398, 0.66", "35.0467, 209.472, -57.1963, 0.29", "35.0743, 209.542, -57.2036, 0.29", "35.3585, 210.221, -57.2832, 0.29", "35.827, 211.403, -57.4082, 0.29", "36.0122, 211.921, -57.4523, 0.52", "36.0694, 212.094, -57.4643, 0.52", "36.1495, 212.345, -57.4815, 0.52", "36.2887, 212.809, -57.5082, 0.37", "36.4549, 213.458, -57.5297, 0.37", "36.582, 214.473, -57.4895, 0.88", "36.5926, 214.612, -57.4778, 0.88", "36.63, 215.176, -57.4203, 1.03", "36.6741, 215.717, -57.3642, 1.18", "36.7426, 216.303, -57.3096, 0.66", "36.8601, 217.023, -57.2546, 0.52", "36.9325, 217.367, -57.235, 0.59", "37.0379, 217.735, -57.2334, 0.44", "37.4036, 218.704, -57.2888, 0.29", "37.5675, 219.068, -57.33, 0.37", "37.5993, 219.138, -57.3439, 0.37", "37.7697, 219.551, -57.4393, 0.22", "38.0671, 220.384, -57.5886, 0.59", "38.2075, 220.825, -57.648, 0.88", "38.423, 221.575, -57.7157, 0.52", "38.6746, 222.527, -57.7668, 0.29", "38.8468, 223.233, -57.779, 0.29", "39.049, 224.188, -57.7535, 0.59", "39.065, 224.263, -57.744, 0.59", "39.1877, 224.778, -57.642, 0.29", "39.2187, 224.885, -57.6128, 0.29", "39.5437, 225.655, -57.4051, 0.52", "39.7004, 226.007, -57.3454, 0.66", "40.053, 226.862, -57.2659, 0.52", "40.0818, 226.934, -57.2607, 0.52", "40.2752, 227.452, -57.2349, 0.29", "40.6704, 228.722, -57.264, 0.29", "40.8989, 229.659, -57.3543, 0.66", "40.9715, 230.0, -57.3863, 0.88", "40.985, 230.074, -57.3935, 0.88", "41.0914, 230.774, -57.4216, 0.52", "41.1909, 231.696, -57.3992, 0.52", "41.2667, 232.475, -57.3463, 0.29", "41.4074, 233.485, -57.2716, 0.29", "41.5484, 234.261, -57.2074, 1.03", "41.7271, 235.081, -57.1365, 0.74", "41.9962, 235.989, -57.0272, 0.29", "42.4539, 237.238, -56.849, 0.44", "42.7236, 237.875, -56.7619, 0.37", "43.0684, 238.617, -56.675, 0.37", "43.4885, 239.396, -56.5739, 0.96", "44.1357, 240.412, -56.4438, 0.37", "44.6098, 241.071, -56.3541, 0.37", "45.056, 241.637, -56.2699, 0.59", "45.3064, 241.941, -56.2361, 0.88", "45.4571, 242.124, -56.2242, 0.88", "45.9298, 242.703, -56.2164, 0.59", "45.9687, 242.754, -56.2194, 0.52", "46.9486, 244.018, -56.3246, 0.15", "47.3829, 244.601, -56.3953, 0.59", "47.4277, 244.661, -56.4037, 0.59", "47.784, 245.104, -56.4944, 0.59", "47.8318, 245.16, -56.5099, 0.59", "48.2309, 245.608, -56.659, 0.88", "48.7845, 246.244, -56.8979, 1.18", "49.0283, 246.534, -57.0019, 1.18", "49.9165, 247.668, -57.349, 0.15", "50.5318, 248.54, -57.5652, 0.15", "50.8372, 249.04, -57.658, 0.52", "51.1607, 249.654, -57.7381, 0.66", "51.323, 250.025, -57.7664, 0.74", "51.5984, 250.8, -57.7887, 0.29", "51.8251, 251.55, -57.7878, 0.37", "52.1757, 252.499, -57.7617, 0.29", "52.2114, 252.577, -57.759, 0.29", "52.8196, 253.561, -57.7607, 0.52", "52.8667, 253.62, -57.764, 0.52", "53.6045, 254.355, -57.855, 0.81", "54.4513, 255.063, -57.9792, 0.37", "54.5116, 255.108, -57.9876, 0.37", "55.3841, 255.823, -58.1019, 0.29", "55.7644, 256.168, -58.1477, 0.37", "55.8085, 256.216, -58.1535, 0.37", "56.2407, 256.758, -58.2285, 0.37", "56.936, 257.63, -58.3022, 0.29", "57.7613, 258.572, -58.3336, 0.37", "58.0753, 258.918, -58.334, 0.88", "58.444, 259.292, -58.3429, 0.96", "59.4176, 260.116, -58.3721, 0.52", "60.7278, 261.048, -58.4363, 0.66", "61.2612, 261.366, -58.4629, 0.66", "61.9921, 261.729, -58.5018, 0.29", "62.8448, 262.116, -58.5452, 0.44", "63.8478, 262.547, -58.5879, 1.11", "64.6508, 262.893, -58.6164, 1.11", "65.8716, 263.451, -58.686, 1.11", "66.4089, 263.686, -58.6906, 1.55", "67.3278, 264.046, -58.6644, 1.55", "67.4495, 264.086, -58.6559, 1.55", "68.2069, 264.282, -58.5574, 1.55", "68.2691, 264.294, -58.5475, 1.55", "69.2537, 264.439, -58.3749, 2.06", "69.3272, 264.448, -58.3596, 2.06", "71.3436, 264.628, -57.9119, 0.52", "72.5468, 264.707, -57.6442, 0.74" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "34.5809, 208.094, -57.0985, 0.74", "34.7051, 207.051, -56.9437, 0.74", "34.7089, 206.994, -56.9361, 0.74", "34.7341, 206.288, -56.8499, 0.37", "34.7358, 205.268, -56.7321, 0.22", "34.7143, 204.782, -56.6791, 0.37", "34.6727, 204.185, -56.6215, 0.15", "34.5626, 203.273, -56.5546, 0.15", "34.5108, 202.868, -56.5247, 0.44", "34.4445, 202.428, -56.491, 0.44", "34.2816, 201.583, -56.43, 0.22", "34.0693, 200.607, -56.3888, 0.37" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "130.986, 84.4012, -4.12964, 0.22", "132.194, 84.7309, -4.91587, 0.22", "132.62, 84.8474, -5.19376, 0.74", "132.847, 84.9092, -5.34129, 0.74", "134.628, 85.3952, -6.50043, 0.29", "135.065, 85.5146, -6.78511, 0.44" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "130.986, 84.4012, -4.12964, 0.22", "131.647, 84.0785, -3.56551, 0.22", "132.165, 83.8668, -3.20001, 0.66", "132.515, 83.737, -2.96762, 0.66", "132.93, 83.6102, -2.70304, 0.52", "133.789, 83.4465, -2.22862, 0.22", "134.212, 83.421, -2.02146, 0.22", "134.835, 83.5257, -1.76877, 0.59", "135.143, 83.6229, -1.65057, 0.74", "135.561, 83.7979, -1.47512, 0.74", "136.358, 84.2193, -1.10258, 0.29", "136.991, 84.6381, -0.769702, 0.29", "137.749, 85.1818, -0.353591, 0.59", "138.083, 85.4467, -0.152771, 0.52", "138.73, 85.9727, 0.252093, 0.22", "139.071, 86.2487, 0.495508, 0.29", "139.492, 86.5859, 0.887729, 0.29" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "33.9444, 102.756, 36.6489, 0.29", "35.7612, 110.566, 41.0713, 0.29", "36.5523, 119.147, 44.1706, 0.29", "37.1562, 127.621, 47.5887, 0.29", "36.7435, 135.706, 51.8705, 0.29" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "33.9444, 102.756, 36.6489, 0.44", "35.633, 110.375, 40.9689, 0.29", "37.6389, 118.012, 45.1185, 0.29", "40.9608, 125.725, 48.1244, 0.29", "43.2911, 134.217, 49.5467, 0.29", "46.7885, 142.423, 49.4463, 0.29", "49.7732, 150.826, 49.658, 0.29", "51.6501, 159.536, 50.0679, 0.29" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "-136.862, -210.303, -21.564, 0.29", "-140.228, -219.17, -17.7624, 0.29" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-136.862, -210.303, -21.564, 0.44", "-142.494, -219.616, -24.9716, 0.29", "-145.72, -229.669, -29.2858, 0.29" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-153.374, -204.072, -8.03406, 0.66", "-153.92, -202.592, -7.31676, 0.66", "-154.146, -201.689, -6.93305, 0.29", "-154.336, -200.673, -6.57644, 0.29", "-154.35, -200.59, -6.55552, 0.29", "-154.599, -199.015, -6.25507, 0.52", "-154.646, -198.706, -6.21016, 0.74", "-154.76, -197.507, -6.14976, 0.37", "-154.844, -196.478, -6.13544, 0.37", "-154.941, -195.465, -6.16854, 0.29", "-154.98, -194.847, -6.21146, 0.59", "-154.99, -194.167, -6.29179, 0.59", "-154.941, -193.38, -6.36367, 0.59", "-154.771, -192.338, -6.41967, 0.52", "-154.564, -191.57, -6.42622, 0.96", "-154.242, -190.659, -6.39431, 0.37", "-154.003, -190.096, -6.36617, 0.29", "-153.488, -189.039, -6.29957, 0.29", "-153.057, -188.182, -6.24284, 0.29", "-152.779, -187.622, -6.20643, 0.52", "-152.748, -187.544, -6.2045, 0.52", "-152.6, -187.077, -6.20769, 0.52", "-152.392, -186.155, -6.23559, 0.37", "-152.202, -185.094, -6.28197, 0.37", "-152.19, -185.008, -6.28645, 0.37", "-152.014, -183.299, -6.38511, 0.37", "-151.909, -181.761, -6.48156, 0.37", "-151.837, -179.846, -6.61023, 0.37", "-151.834, -179.688, -6.62069, 0.37", "-151.756, -178.204, -6.72263, 0.37", "-151.751, -178.129, -6.72763, 0.37", "-151.645, -177.18, -6.78396, 0.88", "-151.616, -176.99, -6.79599, 0.88", "-151.349, -175.818, -6.86243, 0.29", "-150.932, -174.351, -6.92781, 0.29", "-150.611, -173.421, -6.95814, 0.44", "-150.362, -172.73, -6.97509, 0.44", "-150.056, -171.919, -7.01339, 0.29", "-150.018, -171.814, -7.02057, 0.29", "-149.542, -170.66, -7.10196, 0.66", "-149.412, -170.377, -7.10496, 0.66", "-149.172, -169.885, -7.09338, 0.59", "-148.578, -168.643, -7.02815, 0.37", "-148.543, -168.565, -7.01848, 0.37", "-147.79, -166.784, -6.69382, 0.37", "-147.409, -165.745, -6.43532, 0.37", "-147.153, -165.039, -6.22631, 0.37", "-147.057, -164.765, -6.1227, 0.88", "-146.799, -163.917, -5.68011, 0.74", "-146.785, -163.842, -5.63924, 0.74", "-146.918, -163.257, -5.27906, 0.52" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-153.374, -204.072, -8.03406, 0.52", "-154.12, -204.637, -8.13015, 0.52", "-154.837, -205.115, -8.21673, 0.29", "-155.534, -205.549, -8.29795, 0.29", "-156.622, -206.186, -8.41622, 0.44", "-157.54, -206.718, -8.51263, 0.37", "-157.942, -206.951, -8.55417, 0.66", "-158.306, -207.133, -8.58771, 0.88", "-158.773, -207.324, -8.66008, 0.88", "-159.461, -207.569, -8.81071, 0.44", "-160.301, -207.863, -9.04795, 0.44", "-160.36, -207.884, -9.06736, 0.44", "-161.083, -208.116, -9.321, 0.44", "-162.263, -208.468, -9.74817, 0.29", "-163.002, -208.663, -10.0141, 0.29", "-163.933, -208.86, -10.2805, 0.29", "-164.005, -208.871, -10.2949, 0.74", "-164.068, -208.881, -10.3022, 0.74", "-164.724, -209.005, -10.3751, 0.74", "-165.303, -209.159, -10.4261, 0.74", "-166.491, -209.543, -10.5871, 0.29", "-167.122, -209.798, -10.7338, 0.29", "-167.986, -210.198, -11.0009, 0.29", "-169.085, -210.774, -11.4245, 0.29", "-169.6, -211.074, -11.6239, 0.59", "-169.848, -211.217, -11.7176, 0.59", "-170.589, -211.613, -11.985, 0.37", "-170.719, -211.658, -11.9913, 0.37", "-171.42, -211.76, -11.8067, 0.37", "-172.566, -211.811, -11.3792, 0.29", "-173.274, -211.843, -10.994, 0.29", "-173.819, -211.873, -10.6305, 0.59", "-174.893, -211.994, -9.78355, 0.59", "-175.482, -212.1, -9.27099, 0.59", "-175.924, -212.238, -8.81352, 0.59", "-177.121, -212.834, -7.47904, 0.44", "-177.154, -212.856, -7.4419, 0.44", "-177.634, -213.237, -6.90174, 0.44", "-177.667, -213.264, -6.86836, 0.44", "-178.374, -213.811, -6.23226, 0.59", "-178.855, -214.133, -5.89095, 0.59", "-179.572, -214.515, -5.56747, 0.29", "-179.626, -214.539, -5.54489, 0.29", "-180.892, -215.02, -5.11991, 0.44", "-181.454, -215.217, -4.99313, 0.96", "-182.022, -215.401, -4.92361, 1.33", "-182.761, -215.641, -4.86198, 0.88", "-183.977, -216.074, -4.82676, 0.44", "-184.932, -216.434, -4.85995, 0.44", "-185.967, -216.832, -4.97519, 0.52", "-186.713, -217.088, -5.06785, 0.52", "-186.775, -217.107, -5.07651, 0.52", "-187.739, -217.331, -5.22748, 0.37", "-188.446, -217.449, -5.35489, 0.37", "-189.189, -217.516, -5.44028, 0.37", "-190.223, -217.525, -5.47732, 0.52", "-190.555, -217.509, -5.48126, 0.96", "-190.923, -217.478, -5.49275, 0.96", "-191.406, -217.416, -5.51869, 0.96", "-192.052, -217.35, -5.5699, 0.81", "-193.152, -217.318, -5.689, 0.37", "-193.205, -217.322, -5.69624, 0.37", "-194.124, -217.434, -5.83614, 0.37", "-194.656, -217.525, -5.9247, 0.59", "-195.048, -217.599, -5.99329, 0.66", "-195.658, -217.711, -6.10336, 0.52", "-196.421, -217.817, -6.28313, 0.29", "-196.493, -217.822, -6.2995, 0.29", "-197.206, -217.842, -6.44708, 0.29", "-197.916, -217.865, -6.56232, 0.44", "-198.394, -217.894, -6.62617, 0.44", "-199.364, -217.978, -6.73067, 0.44", "-200.339, -218.103, -6.8131, 0.37", "-200.789, -218.175, -6.8169, 0.37", "-202.092, -218.397, -6.6523, 0.37", "-202.689, -218.501, -6.4942, 0.37", "-203.294, -218.603, -6.25238, 0.37", "-203.825, -218.667, -5.96424, 0.37", "-204.686, -218.708, -5.40406, 0.37", "-205.626, -218.677, -4.74068, 0.37", "-205.928, -218.655, -4.50924, 0.81", "-206.154, -218.661, -4.3437, 1.11", "-206.62, -218.735, -4.02934, 1.11", "-206.667, -218.748, -4.00493, 1.11", "-207.415, -219.017, -3.70463, 0.59", "-208.542, -219.487, -3.28722, 0.44", "-209.285, -219.795, -2.9825, 0.66", "-209.335, -219.815, -2.9624, 0.66", "-209.855, -220.004, -2.77496, 0.66", "-210.704, -220.253, -2.52089, 0.44", "-210.804, -220.28, -2.48958, 0.44", "-211.626, -220.507, -2.25095, 0.37", "-212.486, -220.773, -1.99454, 0.37", "-213.285, -221.048, -1.76692, 0.88", "-213.835, -221.257, -1.62205, 1.18", "-215.459, -221.864, -1.21539, 0.37", "-216.191, -222.124, -1.02235, 0.29", "-216.656, -222.277, -0.892979, 0.81", "-216.725, -222.296, -0.870498, 0.81", "-217.019, -222.379, -0.755215, 0.81", "-218.235, -222.708, -0.260048, 0.37", "-218.695, -222.816, -0.0761469, 0.74", "-219.189, -222.942, 0.134014, 0.74", "-220.088, -223.171, 0.510204, 0.81", "-221.307, -223.501, 1.01271, 0.29", "-221.721, -223.624, 1.18287, 0.29", "-221.77, -223.64, 1.20085, 0.29", "-222.325, -223.843, 1.38313, 0.74", "-222.756, -223.994, 1.52165, 0.81", "-223.841, -224.303, 1.84679, 0.37", "-223.903, -224.316, 1.86527, 0.37", "-224.56, -224.452, 2.08, 0.29", "-225.079, -224.557, 2.25973, 0.29", "-225.869, -224.706, 2.57508, 0.52", "-226.539, -224.842, 2.87026, 0.88", "-226.784, -224.876, 2.9846, 1.03" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-6.60082, -129.78, -31.8054, 0.96", "-6.01325, -132.162, -31.3605, 0.96", "-5.6139, -133.63, -31.1119, 0.96", "-5.24468, -134.898, -30.9331, 1.03", "-5.00896, -135.652, -30.8594, 1.25", "-4.70124, -136.601, -30.7883, 1.11", "-4.20919, -137.969, -30.6961, 0.74", "-3.78985, -139.06, -30.7197, 0.96", "-3.43449, -139.838, -30.7603, 0.74", "-2.8458, -141.021, -30.8761, 0.59", "-2.81544, -141.083, -30.8868, 0.59", "-2.16999, -142.49, -31.2121, 0.59", "-1.72197, -143.741, -31.6016, 0.59", "-1.70843, -143.797, -31.6226, 0.59", "-1.51042, -144.967, -32.0164, 0.88", "-1.38496, -146.128, -32.3728, 0.88", "-1.33562, -146.834, -32.5787, 0.88", "-1.28452, -147.983, -32.8674, 0.66", "-1.17151, -149.181, -33.0535, 0.52", "-0.980034, -150.36, -33.1456, 1.11", "-0.852183, -150.916, -33.1413, 1.11", "-0.61433, -151.784, -33.0946, 0.88", "-0.259031, -152.935, -33.0382, 0.81", "0.074007, -153.975, -33.0146, 0.88", "0.300342, -154.74, -33.0793, 1.03", "0.607512, -155.924, -33.3018, 0.74", "0.822564, -156.803, -33.5224, 0.59", "1.06889, -157.814, -33.8473, 0.52", "1.24067, -158.589, -34.1701, 0.74", "1.52969, -159.946, -34.828, 0.66", "1.73033, -160.89, -35.3141, 0.74", "1.91545, -161.709, -35.7301, 0.81", "2.10713, -162.481, -36.0714, 1.11", "2.33683, -163.323, -36.3864, 0.88", "2.35143, -163.387, -36.4107, 0.88", "2.49437, -164.351, -36.8523, 0.59", "2.56221, -165.329, -37.3786, 0.59", "2.58533, -166.325, -37.9582, 0.81", "2.59719, -167.54, -38.6902, 1.03", "2.62879, -169.727, -40.1094, 1.03", "2.67809, -171.314, -41.1933, 0.81", "2.74162, -172.609, -42.1425, 0.59", "2.74502, -172.666, -42.1852, 0.59", "2.82039, -173.612, -42.864, 0.74", "2.98098, -174.698, -43.548, 0.66", "3.25455, -175.789, -44.1078, 0.66", "3.56121, -176.888, -44.6183, 0.66", "3.80994, -177.854, -45.0279, 0.96", "3.96027, -178.661, -45.321, 1.18", "4.03754, -179.684, -45.6285, 1.03", "3.98088, -180.598, -45.8373, 0.88", "3.77484, -181.676, -46.0438, 0.66", "3.58933, -182.35, -46.1468, 0.74", "3.17972, -183.658, -46.3317, 0.74", "2.85937, -184.669, -46.4524, 0.81", "2.44814, -186.056, -46.5853, 0.81", "2.16536, -187.279, -46.6955, 1.03", "2.05149, -188.137, -46.7773, 1.11", "2.02451, -189.059, -46.8997, 0.81", "2.13231, -190.493, -47.1308, 0.66", "2.33934, -191.613, -47.322, 0.81", "2.5718, -192.398, -47.4879, 0.81", "2.87207, -193.182, -47.7023, 0.81", "3.10835, -193.694, -47.8758, 1.03", "3.14041, -193.752, -47.9, 1.03", "3.61171, -194.464, -48.2639, 0.74", "4.14075, -195.226, -48.7554, 0.44", "4.31105, -195.477, -48.9393, 0.74", "4.3415, -195.526, -48.9809, 0.74", "4.56279, -195.939, -49.3273, 0.74", "4.5908, -195.997, -49.3734, 0.74", "5.13612, -197.189, -50.2169, 0.59", "5.29607, -197.563, -50.4497, 0.88", "5.62285, -198.402, -50.9039, 0.88", "6.01961, -199.517, -51.4149, 0.66", "6.27514, -200.319, -51.7147, 0.74", "6.55786, -201.39, -52.0686, 0.88", "6.6854, -202.153, -52.3063, 0.44", "6.7246, -202.849, -52.554, 0.44", "6.69258, -203.655, -52.8586, 0.52", "6.60133, -204.309, -53.1558, 0.81", "6.38915, -205.456, -53.7458, 1.03", "6.1513, -206.736, -54.4786, 0.88", "5.98473, -207.931, -55.2078, 0.59", "5.93263, -208.576, -55.6233, 0.74", "5.96943, -209.721, -56.3622, 0.52", "6.08329, -210.34, -56.7429, 0.52", "6.39763, -211.148, -57.1759, 0.81", "6.73744, -211.734, -57.4594, 1.03", "7.00726, -212.102, -57.6313, 1.03", "7.81839, -213.095, -58.0935, 0.52", "8.13471, -213.483, -58.268, 0.66", "8.62501, -214.142, -58.5697, 0.66", "8.6664, -214.205, -58.5982, 0.66", "9.02929, -214.822, -58.8792, 0.81", "9.4587, -215.64, -59.2582, 0.59", "9.93869, -216.67, -59.7541, 0.37", "10.193, -217.209, -60.0182, 0.88", "10.5099, -217.841, -60.3688, 1.18", "10.5401, -217.893, -60.4023, 1.18", "10.7988, -218.359, -60.7944, 1.11", "11.0242, -218.835, -61.306, 0.96", "11.0419, -218.88, -61.359, 0.96", "11.3038, -219.732, -62.4024, 0.59", "11.4317, -220.272, -63.0278, 0.81", "11.6906, -221.687, -64.4743, 0.59", "11.7858, -222.408, -65.1017, 0.88", "11.8291, -222.928, -65.4698, 0.88", "11.8675, -223.53, -65.8029, 0.81", "11.9054, -224.381, -66.1281, 0.59", "11.958, -225.289, -66.3574, 0.66", "12.0627, -226.352, -66.5109, 1.03", "12.1401, -227.019, -66.6028, 1.33", "12.2006, -227.589, -66.6919, 1.18", "12.2569, -228.354, -66.8526, 0.81", "12.2831, -229.327, -67.1836, 0.59", "12.3248, -230.233, -67.6248, 0.74", "12.3942, -230.778, -67.9364, 0.96", "12.4051, -230.827, -67.9668, 0.96", "12.6993, -231.787, -68.5814, 0.96", "13.2836, -233.282, -69.588, 0.74", "13.7893, -234.337, -70.3424, 0.74", "14.3018, -235.272, -71.0195, 0.88", "14.8282, -236.108, -71.5188, 0.88", "15.4378, -236.981, -71.9157, 0.59", "15.9466, -237.638, -72.0344, 0.59", "16.4231, -238.251, -71.96, 0.59", "16.4547, -238.298, -71.9452, 0.59", "17.5317, -240.332, -71.0887, 0.52", "17.888, -241.225, -70.6382, 0.52", "18.3087, -242.98, -69.7844, 1.18", "18.4304, -244.038, -69.3284, 1.18", "18.4308, -244.973, -69.052, 0.52", "18.2862, -246.353, -68.9519, 0.52", "18.0793, -247.443, -69.1183, 0.66", "17.7076, -249.189, -69.6418, 0.66", "17.4808, -250.166, -70.1117, 0.66", "17.1361, -251.838, -71.1016, 0.66", "16.8735, -253.575, -72.3254, 0.74", "16.829, -254.175, -72.8147, 1.03", "16.8339, -254.712, -73.2944, 1.03", "16.944, -255.766, -74.278, 0.66", "17.0508, -256.486, -74.9781, 0.37", "17.2066, -257.141, -75.5773, 0.74", "17.3792, -257.716, -76.0618, 1.03", "17.3962, -257.766, -76.1056, 1.03", "17.5036, -257.974, -76.299, 1.25", "17.5496, -258.023, -76.3434, 1.25", "17.8897, -258.321, -76.6121, 1.25", "17.935, -258.364, -76.6431, 1.25", "18.2885, -258.733, -76.8725, 1.25", "18.6236, -259.142, -77.0826, 1.25", "19.4334, -260.236, -77.5173, 0.59", "20.0661, -261.099, -77.8277, 0.59", "20.7653, -262.071, -78.1442, 0.66", "21.3124, -262.81, -78.381, 0.66", "22.0318, -263.735, -78.6808, 0.59", "22.6416, -264.477, -78.9245, 0.44", "23.2318, -265.077, -79.1597, 0.29", "23.2796, -265.11, -79.1804, 0.29", "24.0592, -265.392, -79.5329, 0.59", "24.7961, -265.587, -79.8864, 0.74", "24.8603, -265.602, -79.9136, 0.74", "25.8153, -265.845, -80.2947, 0.74", "25.8785, -265.864, -80.313, 0.74", "27.4682, -266.329, -80.6114, 0.59", "28.2973, -266.572, -80.707, 0.81", "29.6465, -267.007, -80.7886, 0.66", "29.7214, -267.031, -80.7924, 0.66", "31.0932, -267.442, -80.8153, 1.03", "32.1442, -267.691, -80.7744, 1.47", "32.7031, -267.801, -80.6923, 1.55", "33.9261, -268.034, -80.4352, 0.29", "34.8088, -268.206, -80.2183, 0.59", "36.1038, -268.476, -79.8908, 0.81", "37.6542, -268.815, -79.4743, 1.18", "39.6284, -269.297, -78.9379, 0.44", "40.9545, -269.641, -78.5664, 0.59", "41.0209, -269.659, -78.5488, 0.59", "41.7775, -269.951, -78.3817, 0.81", "41.8289, -269.979, -78.3762, 0.81", "42.5487, -270.451, -78.4023, 0.37", "43.3063, -270.982, -78.5212, 0.88", "43.8585, -271.417, -78.6221, 1.33", "44.3962, -271.898, -78.7205, 1.47", "45.4619, -272.981, -78.9783, 0.88", "45.5087, -273.033, -78.993, 0.88", "45.9227, -273.522, -79.166, 1.03", "46.5369, -274.333, -79.5294, 0.44", "47.1222, -275.173, -79.9615, 0.44", "47.5776, -275.911, -80.3893, 0.66", "47.6069, -275.963, -80.4243, 0.66", "47.8978, -276.44, -80.7481, 0.44", "48.2344, -276.953, -81.1033, 0.81", "48.4609, -277.253, -81.3168, 0.96", "48.8262, -277.7, -81.6211, 1.11", "49.3162, -278.286, -81.9655, 0.29", "49.7186, -278.785, -82.2484, 0.22", "49.7584, -278.837, -82.2763, 0.22", "50.2604, -279.46, -82.6292, 1.47", "50.3019, -279.507, -82.6583, 1.47" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-6.60082, -129.78, -31.8054, 0.44", "-6.77828, -130.766, -32.6957, 0.44", "-6.91976, -131.746, -33.6, 0.59", "-7.16978, -134.301, -35.9649, 0.59", "-7.23785, -135.481, -37.0431, 0.81", "-7.27516, -136.974, -38.402, 0.81", "-7.2761, -138.37, -39.6521, 0.88", "-7.24991, -139.172, -40.345, 1.03", "-7.13466, -140.356, -41.3549, 0.52", "-7.02308, -140.889, -41.77, 0.88", "-6.83335, -141.74, -42.4198, 0.88", "-6.75179, -142.214, -42.7445, 0.88", "-6.7549, -142.276, -42.7808, 0.88", "-7.08012, -143.136, -43.2902, 0.44", "-7.42342, -143.726, -43.6873, 0.74", "-7.81078, -144.407, -44.211, 0.74", "-8.23613, -145.254, -44.9425, 0.96", "-8.69737, -146.408, -46.0582, 0.96", "-8.9944, -147.575, -47.2412, 0.96", "-9.16954, -148.718, -48.4495, 0.96", "-9.21507, -150.023, -49.7946, 0.88", "-9.12903, -151.275, -51.0245, 0.88", "-8.97431, -152.394, -52.0351, 0.59", "-8.77509, -153.533, -52.9981, 0.59", "-8.62903, -154.426, -53.6968, 0.96", "-8.51772, -155.34, -54.3505, 1.25", "-8.46618, -156.243, -54.9391, 1.33", "-8.42172, -157.561, -55.7227, 0.96", "-8.3934, -158.575, -56.2995, 0.81", "-8.34725, -159.679, -56.951, 0.88", "-8.24831, -160.192, -57.268, 1.11", "-8.23327, -160.234, -57.3001, 1.11", "-7.87316, -160.845, -57.8285, 1.11", "-7.49515, -161.264, -58.209, 1.25", "-7.4045, -161.349, -58.2979, 1.25", "-6.80085, -161.909, -59.0041, 1.33", "-6.25485, -162.513, -59.8574, 1.03", "-6.00429, -162.898, -60.4276, 0.59", "-5.87297, -163.222, -60.9313, 0.81", "-5.76324, -164.124, -62.3607, 0.81", "-5.8664, -164.845, -63.4852, 1.11", "-6.14895, -165.626, -64.634, 0.88", "-6.58128, -166.572, -65.9182, 0.59", "-6.85488, -167.134, -66.6636, 0.81", "-7.32592, -168.095, -67.9553, 0.96", "-7.66784, -168.906, -69.0042, 0.81", "-8.00195, -169.999, -70.3146, 0.37", "-8.16703, -171.006, -71.443, 1.03", "-8.18241, -172.441, -72.9112, 0.96", "-8.01358, -173.886, -74.2967, 1.18", "-7.78134, -174.941, -75.2794, 1.18", "-7.46289, -176.037, -76.2884, 1.18", "-7.11459, -177.068, -77.2302, 0.81", "-6.68786, -178.209, -78.2269, 0.66", "-6.43169, -178.848, -78.7436, 0.96", "-5.89433, -180.077, -79.6898, 1.25", "-5.87072, -180.13, -79.7326, 1.25", "-5.38697, -181.07, -80.4974, 1.11", "-4.99773, -181.807, -81.0161, 0.81", "-4.7449, -182.308, -81.3137, 1.25", "-4.44419, -182.947, -81.5981, 1.25", "-4.17858, -183.61, -81.7809, 0.66", "-4.00867, -184.302, -81.9662, 0.59", "-3.97064, -185.199, -82.1714, 0.59", "-4.03011, -185.637, -82.2806, 0.88", "-4.04538, -185.703, -82.2989, 0.88", "-4.2599, -186.544, -82.5862, 0.88", "-4.54746, -188.036, -83.2117, 0.59", "-4.59591, -188.688, -83.5589, 0.44", "-4.58975, -188.803, -83.6255, 0.44", "-4.50741, -189.388, -83.9733, 0.74", "-4.32712, -190.301, -84.492, 0.96", "-4.15795, -191.064, -84.9432, 0.96", "-3.88295, -192.227, -85.574, 0.59", "-3.76113, -192.843, -85.904, 0.88", "-3.75131, -192.905, -85.9359, 0.88", "-3.65781, -193.568, -86.2567, 0.96", "-3.50455, -195.11, -86.9814, 0.59", "-3.42969, -195.987, -87.4009, 1.03", "-3.3485, -196.667, -87.7262, 1.18", "-3.18022, -197.796, -88.2889, 0.88", "-3.03079, -198.765, -88.7599, 0.74", "-2.87083, -199.811, -89.2463, 0.66", "-2.69228, -201.147, -89.7944, 0.52", "-2.62856, -201.969, -90.1129, 0.81", "-2.63027, -202.829, -90.4242, 0.37", "-2.72496, -203.565, -90.6585, 0.37", "-2.84502, -204.094, -90.8102, 0.88", "-3.00778, -204.595, -90.9414, 1.18", "-3.27198, -205.192, -91.0859, 1.33", "-3.75109, -206.211, -91.3675, 0.88", "-4.24985, -207.326, -91.7424, 0.74", "-4.27752, -207.388, -91.7653, 0.74", "-4.91833, -208.864, -92.3448, 0.52", "-5.32061, -209.801, -92.7309, 0.66", "-6.02989, -211.495, -93.4467, 0.59", "-6.38263, -212.457, -93.8434, 0.88" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "12.1184, -174.761, -40.8496, 0.37", "13.3186, -175.056, -40.6129, 0.37", "14.6302, -175.468, -40.361, 0.59", "15.4279, -175.727, -40.2273, 0.59", "16.8569, -176.164, -40.0254, 0.59", "17.0483, -176.221, -40.0014, 0.59", "18.0742, -176.508, -39.9188, 0.22", "18.5943, -176.612, -39.9644, 0.44", "19.4111, -176.706, -40.2109, 0.44", "20.016, -176.749, -40.4978, 0.81", "20.1154, -176.746, -40.5558, 0.81", "20.8071, -176.624, -41.0382, 0.96", "22.2817, -176.188, -42.3049, 0.52", "22.7602, -176.024, -42.7444, 0.52", "22.8255, -176.0, -42.806, 0.52", "23.6353, -175.695, -43.5698, 0.44", "25.1343, -175.107, -44.9237, 0.74", "26.5246, -174.53, -46.2108, 0.29", "27.1282, -174.262, -46.7551, 0.29", "27.5397, -174.096, -47.1261, 0.59", "27.5978, -174.078, -47.1791, 0.59", "28.0257, -174.002, -47.6114, 1.18", "29.3966, -173.921, -48.9197, 1.11", "30.1512, -173.944, -49.6662, 0.37", "31.2015, -174.028, -50.7223, 0.29", "32.4292, -174.165, -51.9083, 1.11", "34.0882, -174.368, -53.4163, 0.66", "35.1596, -174.519, -54.3408, 0.44", "36.5466, -174.725, -55.5168, 1.18", "37.0698, -174.799, -55.9802, 1.62", "37.8492, -174.873, -56.6602, 1.18", "38.7733, -174.91, -57.3988, 0.74", "38.839, -174.909, -57.4468, 0.74", "40.5149, -174.836, -58.8658, 0.59", "40.5757, -174.83, -58.9195, 0.59" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "12.1184, -174.761, -40.8496, 0.59", "12.5801, -176.477, -40.46, 0.59", "12.9917, -177.326, -40.0716, 0.66", "13.2821, -177.743, -39.7978, 1.03", "13.3945, -177.899, -39.6799, 1.03", "13.6455, -178.2, -39.3555, 1.03", "14.3493, -178.981, -38.3707, 0.74", "15.48, -180.08, -36.6086, 1.03", "16.3619, -180.7, -35.3143, 1.11", "16.7508, -180.961, -34.7562, 0.74", "18.3564, -182.109, -32.3638, 0.74", "18.4156, -182.153, -32.2727, 0.74", "19.0293, -182.654, -31.3077, 0.66", "21.3544, -184.957, -27.784, 0.66", "21.9585, -185.667, -26.9405, 0.52", "22.639, -186.59, -26.1255, 0.74", "22.6706, -186.644, -26.0952, 0.74", "23.0701, -187.417, -25.7752, 0.88", "23.9484, -189.412, -25.2647, 0.52", "24.2543, -190.387, -25.1754, 0.52", "24.5986, -191.405, -25.0966, 0.52", "24.9383, -192.388, -25.0549, 0.44", "25.177, -193.153, -25.0291, 0.37", "25.5852, -194.498, -24.9752, 0.37", "25.903, -195.57, -24.9653, 0.59", "26.1146, -196.198, -24.9485, 0.88", "26.1423, -196.263, -24.9431, 0.88", "26.4131, -196.799, -24.8797, 0.96", "27.3017, -198.221, -24.5389, 0.44", "27.8434, -198.971, -24.3055, 0.59", "27.8817, -199.016, -24.2868, 0.59", "28.8409, -200.096, -23.8515, 0.81", "29.1635, -200.471, -23.6984, 0.96", "30.4794, -202.082, -23.0597, 0.52", "30.7613, -202.466, -22.9154, 0.74", "31.6295, -203.799, -22.4475, 0.52", "32.1124, -204.673, -22.2256, 0.74", "32.4939, -205.477, -22.0688, 0.44", "32.8139, -206.179, -21.9017, 0.29", "33.0198, -206.624, -21.7655, 0.37", "33.3885, -207.271, -21.4429, 0.59", "33.9081, -208.038, -20.9738, 0.59", "34.8871, -209.251, -20.1597, 0.81", "36.0959, -210.486, -19.3113, 0.44", "37.4286, -211.607, -18.5236, 0.88", "39.0757, -212.76, -17.7063, 0.74", "39.8148, -213.155, -17.4459, 0.29", "40.9823, -213.599, -17.2385, 0.37", "42.0157, -213.701, -17.5652, 0.37", "42.7113, -213.587, -18.0926, 0.66", "42.7601, -213.572, -18.142, 0.66", "43.4401, -213.265, -19.014, 0.29", "43.4881, -213.242, -19.0744, 0.29", "44.282, -212.818, -19.9734, 0.15", "44.985, -212.365, -20.8699, 0.15", "51.3209, -218.897, -17.31, 0.15", "57.0194, -225.619, -13.0876, 0.15", "62.9491, -233.005, -10.6865, 0.15", "70.7628, -238.513, -8.66428, 0.15" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-19.9396, -440.209, -60.9948, 1.18", "-18.9692, -441.748, -60.967, 1.18", "-17.9343, -443.286, -60.9136, 0.96", "-17.4837, -443.93, -60.9031, 1.47", "-16.9403, -444.7, -60.9121, 1.84", "-16.274, -445.633, -60.9386, 1.33", "-15.3665, -446.925, -61.0123, 0.74", "-15.3174, -446.996, -61.0231, 0.74", "-14.6771, -447.927, -61.1928, 0.81", "-14.1665, -448.675, -61.3656, 0.44", "-14.1217, -448.747, -61.3896, 0.44", "-13.4755, -449.955, -61.878, 0.29", "-12.9444, -451.04, -62.4106, 0.44", "-12.6234, -451.715, -62.7573, 0.81", "-12.2854, -452.353, -63.08, 0.81", "-11.5103, -453.554, -63.6806, 0.37", "-11.4531, -453.629, -63.7127, 0.37", "-10.7689, -454.434, -63.9948, 0.81", "-10.0507, -455.272, -64.214, 1.11", "-9.07437, -456.488, -64.428, 1.11", "-7.91073, -458.11, -64.5898, 0.29", "-7.11809, -459.401, -64.624, 0.29", "-6.63966, -460.361, -64.589, 0.66", "-6.19696, -461.594, -64.47, 0.88", "-5.93802, -462.659, -64.3287, 1.03", "-5.85771, -463.562, -64.1853, 1.03", "-5.89588, -464.633, -63.9502, 0.74", "-6.05174, -466.136, -63.5561, 0.22", "-6.16067, -467.098, -63.2462, 0.74", "-6.17007, -467.188, -63.2101, 0.74", "-6.24084, -468.053, -62.8282, 0.74", "-6.2491, -468.133, -62.7919, 0.74", "-6.37264, -469.152, -62.3536, 0.29", "-6.45162, -469.886, -62.1082, 0.29", "-6.51304, -470.84, -61.8566, 1.03", "-6.56591, -471.82, -61.7166, 1.4", "-6.62404, -472.917, -61.6673, 0.52", "-6.69347, -473.614, -61.6803, 0.29", "-6.93632, -474.751, -61.8499, 0.37", "-7.1806, -475.452, -62.0654, 0.66", "-7.69971, -476.526, -62.6228, 0.37", "-8.00085, -477.005, -63.0119, 0.96", "-8.31336, -477.468, -63.4614, 0.96", "-9.15331, -478.617, -64.6862, 0.37", "-9.95794, -479.684, -65.93, 0.74", "-10.7887, -480.835, -67.3504, 1.25", "-12.1385, -482.906, -70.0767, 0.29", "-12.5699, -483.599, -71.0412, 0.29", "-12.5995, -483.652, -71.1173, 0.29", "-12.9402, -484.392, -72.219, 0.88", "-13.0586, -484.737, -72.7425, 1.18", "-13.2269, -485.746, -74.2817, 0.52" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-19.9396, -440.209, -60.9948, 0.44", "-19.304, -440.868, -61.2496, 0.44", "-18.5302, -441.693, -61.5376, 0.44", "-18.4862, -441.744, -61.5526, 0.44", "-18.1811, -442.105, -61.652, 0.29", "-17.8037, -442.539, -61.7712, 0.81", "-17.3656, -443.015, -61.9071, 1.11", "-17.3312, -443.054, -61.9151, 1.11", "-16.8462, -443.625, -62.0378, 0.44", "-16.8097, -443.67, -62.048, 0.44", "-16.3713, -444.245, -62.1882, 0.37", "-16.075, -444.67, -62.2846, 0.37", "-15.6113, -445.408, -62.4393, 0.29", "-15.3487, -445.834, -62.536, 0.74", "-15.195, -446.082, -62.5969, 0.81", "-15.1295, -446.189, -62.6296, 0.81", "-14.7597, -446.792, -62.8428, 0.44", "-14.4256, -447.316, -63.0512, 0.29", "-14.0378, -447.859, -63.2993, 0.52", "-13.8083, -448.151, -63.4459, 0.52", "-13.2107, -448.9, -63.8592, 0.29", "-12.798, -449.434, -64.1902, 0.59", "-12.7684, -449.477, -64.2211, 0.59", "-12.6069, -449.77, -64.4232, 0.59", "-12.5852, -449.816, -64.454, 0.59", "-12.2183, -450.704, -65.0536, 0.81", "-12.0431, -451.21, -65.3918, 1.03", "-11.8341, -451.943, -65.9056, 0.59", "-11.6263, -452.745, -66.4715, 0.29" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-97.4127, -129.098, -25.2058, 0.37", "-107.749, -137.241, -25.5962, 0.37", "-117.869, -144.668, -29.5616, 0.37", "-127.441, -151.116, -35.8934, 0.37", "-138.084, -157.736, -39.9202, 0.37", "-149.032, -163.908, -43.8356, 0.37", "-159.09, -171.866, -46.8051, 0.37", "-169.115, -180.301, -48.0804, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-97.4127, -129.098, -25.2058, 0.29", "-106.094, -136.155, -25.218, 0.37", "-113.972, -144.037, -24.2224, 0.37", "-121.046, -152.662, -23.372, 0.37", "-129.235, -160.24, -22.5417, 0.37", "-136.592, -168.608, -23.5545, 0.37", "-144.977, -176.009, -23.8472, 0.37", "-154.445, -181.961, -23.5493, 0.37", "-164.08, -187.646, -23.3924, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "36.7435, 135.706, 51.8705, 0.29", "37.5441, 144.066, 56.0599, 0.29", "38.7648, 151.7, 61.3794, 0.29", "39.1274, 159.467, 66.6355, 0.29", "40.2768, 167.004, 72.109, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "36.7435, 135.706, 51.8705, 0.44", "37.4849, 145.142, 56.2315, 0.29", "36.9709, 154.591, 60.5987, 0.29", "36.7878, 163.302, 66.3182, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "-145.72, -229.669, -29.2858, 0.29", "-152.875, -240.037, -34.6296, 0.29", "-160.332, -249.03, -41.7557, 0.29", "-166.726, -257.707, -50.186, 0.29", "-175.135, -266.679, -56.191, 0.29", "-183.446, -275.832, -62.056, 0.29" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "-145.72, -229.669, -29.2858, 0.44", "-149.646, -237.489, -32.6654, 0.29", "-152.991, -245.567, -36.0619, 0.29", "-155.506, -254.232, -38.6255, 0.29", "-158.681, -262.777, -40.8367, 0.29", "-162.076, -271.371, -42.4501, 0.29" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "-146.918, -163.257, -5.27906, 0.22", "-146.305, -162.775, -4.71122, 0.22", "-146.022, -162.563, -4.46461, 0.52", "-145.808, -162.422, -4.30341, 0.74", "-145.112, -162.02, -3.83275, 0.37", "-144.313, -161.587, -3.34478, 0.37", "-144.017, -161.426, -3.16451, 0.37", "-143.888, -161.365, -3.09646, 0.37", "-143.263, -161.099, -2.77531, 0.37", "-142.967, -160.989, -2.63937, 0.88", "-142.502, -160.847, -2.5099, 0.88", "-137.037, -158.645, 1.72187, 0.88", "-131.691, -155.187, 5.1986, 0.88" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-146.918, -163.257, -5.27906, 0.44", "-146.905, -161.419, -5.25114, 0.44", "-146.824, -159.65, -5.19493, 0.37", "-146.818, -159.568, -5.18785, 0.37", "-146.733, -158.153, -5.0171, 0.37", "-146.731, -158.009, -4.99247, 0.37", "-146.759, -156.29, -4.64818, 0.37", "-146.763, -156.2, -4.62142, 0.37", "-146.88, -155.084, -4.24978, 0.29", "-147.073, -153.898, -3.85777, 0.29", "-147.323, -152.809, -3.49719, 0.29", "-147.4, -152.547, -3.41497, 0.66", "-147.473, -152.352, -3.36456, 0.66", "-147.724, -151.683, -3.24762, 0.66", "-148.14, -150.604, -3.16254, 0.29", "-148.33, -150.145, -3.1539, 0.44", "-148.408, -149.976, -3.15743, 0.44", "-148.835, -149.164, -3.17113, 0.37", "-149.346, -148.277, -3.17579, 0.37", "-149.394, -148.198, -3.17486, 0.37", "-150.336, -146.765, -3.13072, 0.29", "-150.897, -145.907, -3.08883, 0.44", "-151.059, -145.655, -3.06496, 0.44", "-151.574, -144.845, -2.94553, 0.44", "-152.065, -144.045, -2.81026, 0.29", "-152.166, -143.873, -2.77806, 0.29", "-152.432, -143.371, -2.6703, 0.44", "-152.719, -142.814, -2.54506, 0.44", "-152.765, -142.72, -2.52386, 0.44", "-153.06, -142.05, -2.38107, 0.44", "-153.326, -141.324, -2.20859, 0.44", "-153.349, -141.234, -2.18731, 0.44", "-153.497, -140.408, -2.00433, 0.37", "-153.556, -140.003, -1.92364, 0.37", "-153.678, -138.955, -1.74785, 0.44", "-153.755, -138.024, -1.60766, 0.44", "-153.808, -137.001, -1.55022, 0.44", "-153.861, -135.564, -1.55091, 0.44", "-153.919, -134.236, -1.60854, 0.74", "-154.017, -132.462, -1.75613, 0.81", "-154.067, -131.731, -1.85165, 0.74", "-154.271, -129.164, -2.32597, 0.29", "-154.278, -129.084, -2.34384, 0.29", "-154.323, -128.505, -2.48805, 0.29", "-154.333, -128.307, -2.53089, 0.29", "-154.358, -127.821, -2.58255, 0.44", "-154.361, -127.729, -2.5851, 0.44", "-154.368, -127.07, -2.54798, 0.44", "-154.342, -126.002, -2.49595, 0.88", "-154.257, -124.501, -2.43201, 0.52", "-154.18, -123.333, -2.38188, 0.52", "-154.112, -122.389, -2.35812, 0.44", "-154.052, -121.35, -2.3442, 0.29", "-154.015, -120.571, -2.3434, 0.59", "-154.008, -120.269, -2.34568, 0.59", "-154.02, -119.506, -2.35323, 0.59", "-154.036, -118.748, -2.35947, 0.29", "-154.064, -117.712, -2.34447, 0.29", "-154.065, -117.605, -2.34202, 0.29", "-154.062, -116.823, -2.33319, 0.59", "-154.06, -116.7, -2.33198, 0.59", "-154.045, -115.829, -2.31171, 0.66", "-154.024, -114.865, -2.27374, 0.66", "-153.99, -113.842, -2.23307, 0.29", "-153.935, -112.413, -2.17302, 0.29", "-153.929, -112.306, -2.16788, 0.29", "-153.801, -110.501, -2.01244, 0.29", "-153.786, -110.297, -1.98723, 0.29", "-153.72, -109.148, -1.80568, 0.52", "-153.714, -108.949, -1.76732, 0.52", "-153.702, -107.761, -1.49814, 0.81", "-153.733, -106.63, -1.24361, 0.52", "-153.792, -105.705, -1.03284, 0.52", "-153.87, -104.846, -0.859297, 0.74", "-153.984, -103.82, -0.690464, 0.88", "-154.012, -103.434, -0.654017, 0.88", "-153.98, -102.2, -0.667843, 0.88", "-153.966, -102.107, -0.676721, 0.88", "-153.803, -101.457, -0.76276, 0.66", "-153.488, -100.47, -0.851438, 0.44", "-152.973, -99.0149, -0.86605, 0.37", "-152.483, -97.5875, -0.785993, 0.29", "-152.147, -96.6232, -0.68491, 0.29", "-152.119, -96.5337, -0.671422, 0.29", "-151.691, -94.8933, -0.342606, 0.29", "-151.258, -92.8355, 0.15714, 0.29", "-151.099, -91.6277, 0.492523, 0.37", "-151.085, -91.4331, 0.545977, 0.37", "-151.047, -90.4045, 0.785728, 0.37", "-151.002, -89.3844, 1.01064, 0.37", "-150.993, -89.1984, 1.04684, 0.37", "-150.966, -87.7873, 1.34549, 0.52", "-150.974, -86.3513, 1.66985, 0.44", "-151.01, -84.8403, 2.02484, 1.11", "-151.046, -82.8213, 2.51273, 0.29", "-151.047, -82.718, 2.54209, 0.29", "-151.028, -81.1786, 3.01455, 0.29", "-150.993, -80.309, 3.29375, 0.29", "-150.988, -80.2337, 3.31791, 0.29", "-150.868, -78.6837, 3.78603, 0.37", "-150.658, -76.3708, 4.41407, 0.37", "-150.466, -74.7308, 4.84165, 0.37", "-150.261, -73.4208, 5.17273, 0.81", "-150.116, -72.5566, 5.38218, 1.03", "-149.879, -71.0944, 5.70673, 0.29", "-149.729, -70.0975, 5.89681, 0.29", "-149.636, -69.419, 5.98392, 0.44", "-149.627, -69.328, 5.99548, 0.44", "-149.601, -68.8375, 6.05718, 0.44", "-149.599, -67.6159, 6.2567, 0.29", "-149.607, -67.4331, 6.29254, 0.29", "-149.711, -65.9097, 6.62568, 0.29", "-149.72, -65.8177, 6.6466, 0.29", "-149.934, -64.157, 7.0327, 0.29", "-150.068, -63.1851, 7.26093, 0.66", "-150.156, -62.4838, 7.42614, 0.74", "-150.17, -62.3024, 7.467, 0.74", "-150.184, -60.6094, 7.82401, 0.29", "-150.175, -60.4355, 7.85653, 0.29", "-150.077, -59.3795, 8.00546, 0.29", "-149.995, -58.6402, 8.08442, 0.74", "-149.829, -57.4699, 8.20215, 0.22", "-149.532, -55.7867, 8.36445, 0.22", "-149.157, -54.2628, 8.5101, 1.03", "-148.735, -52.7318, 8.65607, 0.29", "-148.649, -52.4449, 8.68373, 0.29", "-148.161, -50.8967, 8.83453, 0.29", "-148.065, -50.6138, 8.86293, 0.29", "-147.182, -48.2074, 9.11502, 0.29", "-147.094, -47.9678, 9.14321, 0.29", "-146.486, -46.2888, 9.30829, 0.29", "-146.453, -46.1869, 9.31506, 0.29", "-146.09, -44.8541, 9.35562, 0.44", "-146.068, -44.7617, 9.35562, 0.44", "-145.875, -43.6313, 9.31345, 0.44", "-145.681, -42.4569, 9.25678, 0.74", "-145.668, -42.3632, 9.25063, 0.74", "-145.603, -41.8116, 9.21732, 1.03", "-145.518, -40.7918, 9.176, 0.59", "-145.492, -39.7289, 9.28004, 0.29", "-145.498, -39.5325, 9.32768, 0.29", "-145.56, -38.8599, 9.57865, 0.29", "-145.572, -38.7617, 9.6202, 0.29", "-145.735, -37.728, 10.0968, 0.88", "-145.987, -36.2216, 10.7817, 0.88", "-146.014, -36.0516, 10.8533, 0.88", "-146.113, -35.3359, 11.1306, 0.66", "-146.172, -34.6307, 11.425, 0.29", "-146.198, -33.9004, 11.7371, 0.29", "-146.185, -32.4942, 12.3268, 0.29", "-146.147, -31.7825, 12.6031, 0.44", "-146.139, -31.6842, 12.6457, 0.44", "-146.014, -30.2594, 13.4315, 0.37", "-145.959, -29.3011, 14.0073, 0.29", "-145.958, -29.2195, 14.0555, 0.29", "-145.981, -28.5544, 14.4367, 0.74", "-145.989, -28.4844, 14.4706, 0.74", "-146.287, -26.6592, 15.2286, 0.29", "-146.636, -24.9708, 15.7794, 0.29", "-146.944, -23.5542, 16.2347, 0.22", "-147.007, -23.2809, 16.3223, 0.22", "-147.453, -21.4057, 16.8916, 0.29", "-147.477, -21.3049, 16.9201, 0.29", "-147.853, -19.6681, 17.3135, 0.29", "-148.166, -18.288, 17.7001, 0.29", "-148.472, -16.8805, 18.1552, 0.74" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-226.784, -224.876, 2.9846, 0.37", "-226.889, -225.399, 2.64583, 0.37", "-227.201, -226.493, 1.94969, 0.37", "-227.489, -227.418, 1.40323, 0.29", "-227.669, -227.966, 1.06724, 0.44", "-227.848, -228.511, 0.74099, 0.44", "-228.205, -229.589, 0.119247, 0.29", "-228.353, -229.982, -0.100899, 0.37", "-228.596, -230.538, -0.381726, 0.37", "-229.095, -231.655, -1.00305, 0.37", "-229.321, -232.173, -1.30822, 0.37", "-229.469, -232.543, -1.52896, 0.66", "-229.49, -232.594, -1.55806, 0.66", "-229.642, -232.924, -1.76417, 0.74", "-230.081, -233.739, -2.31696, 0.37", "-230.385, -234.211, -2.63173, 0.37", "-230.422, -234.259, -2.67171, 0.37", "-230.699, -234.601, -2.991, 0.37", "-232.996, -242.512, -6.03883, 0.37", "-234.398, -250.993, -7.84359, 0.37" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-226.784, -224.876, 2.9846, 0.29", "-227.927, -224.69, 3.43252, 0.29", "-228.972, -224.585, 3.96471, 0.52", "-230.459, -224.532, 4.71579, 0.44", "-230.984, -224.568, 4.96257, 0.29", "-231.979, -224.705, 5.37575, 0.29", "-232.795, -224.836, 5.73095, 0.44", "-234.757, -225.223, 6.6533, 0.29", "-235.577, -225.383, 7.01731, 0.29", "-236.765, -225.635, 7.53076, 0.29", "-237.892, -225.882, 8.0721, 0.29", "-239.078, -226.129, 8.67647, 0.29", "-239.136, -226.141, 8.706, 0.29", "-240.162, -226.291, 9.1997, 0.44", "-241.645, -226.373, 10.0342, 0.44", "-241.788, -226.364, 10.1258, 0.44", "-242.573, -226.302, 10.6716, 0.66", "-243.416, -226.312, 11.1281, 0.66", "-253.09, -226.986, 16.2066, 0.66", "-261.359, -227.67, 23.3477, 0.66" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "50.3019, -279.507, -82.6583, 0.52", "49.7758, -280.165, -82.2916, 0.52", "49.3641, -280.699, -82.0224, 0.29", "48.9248, -281.308, -81.7631, 0.22", "48.708, -281.632, -81.6239, 0.52", "48.5174, -281.929, -81.4947, 0.74", "48.2781, -282.31, -81.3295, 0.81", "48.0537, -282.665, -81.1773, 0.66", "47.7276, -283.178, -80.9772, 0.29", "47.3784, -283.824, -80.7515, 0.29", "47.3572, -283.866, -80.7376, 0.29", "47.2919, -284.003, -80.6951, 0.66", "47.1038, -284.394, -80.571, 0.81", "46.8632, -284.876, -80.4167, 0.22", "46.6485, -285.293, -80.2937, 0.22", "46.5411, -285.498, -80.2565, 0.52", "46.4108, -285.757, -80.2133, 0.52" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "50.3019, -279.507, -82.6583, 1.18", "50.8871, -280.256, -82.8861, 1.18", "51.132, -280.611, -82.9652, 1.4", "51.5683, -281.3, -83.0227, 0.37", "51.9242, -281.954, -82.9424, 0.44", "52.1677, -282.516, -82.7964, 0.66", "52.4603, -283.332, -82.4641, 0.66", "52.5702, -283.758, -82.244, 0.66", "52.7734, -284.732, -81.6994, 0.59", "52.9978, -285.998, -80.964, 0.37", "53.127, -286.749, -80.5296, 1.55", "53.3881, -288.086, -79.8255, 0.37", "53.5752, -288.924, -79.4734, 0.44", "53.805, -289.755, -79.231, 0.44", "53.9535, -290.218, -79.1805, 0.88", "54.107, -290.642, -79.2045, 1.03", "54.4016, -291.468, -79.304, 0.37", "54.5956, -292.114, -79.4154, 0.37", "54.6832, -292.439, -79.4603, 0.88", "54.7929, -292.879, -79.5113, 0.96", "54.9512, -293.614, -79.5751, 0.96", "55.1394, -294.525, -79.6475, 0.29", "55.3892, -295.449, -79.6784, 0.29", "55.499, -295.779, -79.6774, 0.66", "55.6577, -296.154, -79.6461, 0.88", "55.6853, -296.21, -79.6378, 0.88", "55.9443, -296.661, -79.544, 0.74", "56.6011, -297.793, -79.2244, 0.29", "56.9227, -298.397, -79.0292, 0.29", "57.3486, -299.203, -78.8202, 1.11", "57.5714, -299.597, -78.7583, 1.11", "57.6034, -299.651, -78.7561, 1.11", "57.8782, -300.103, -78.7927, 1.11", "58.5651, -301.136, -78.9698, 0.29", "59.1731, -302.002, -79.1409, 0.29", "59.7009, -302.759, -79.2901, 0.29", "59.994, -303.184, -79.359, 0.81", "60.3519, -303.705, -79.4052, 0.96", "61.1215, -304.706, -79.3651, 0.96", "61.5929, -305.3, -79.268, 0.37", "62.0527, -305.895, -79.1086, 0.88", "62.4092, -306.381, -78.9512, 0.88", "63.0839, -307.353, -78.6197, 0.59", "63.9218, -308.678, -78.1895, 0.44", "64.2138, -309.209, -78.0518, 0.59", "64.4176, -309.643, -77.9576, 0.59", "64.6719, -310.339, -77.8545, 0.88", "64.8512, -310.97, -77.8214, 0.29", "65.0083, -311.709, -77.8444, 0.29", "65.1659, -312.476, -77.888, 0.37", "65.3764, -313.308, -77.9212, 0.96", "65.5473, -313.909, -77.9346, 1.33", "65.8904, -314.901, -77.9041, 0.37", "66.1567, -315.612, -77.839, 0.52", "66.5125, -316.535, -77.7006, 0.44", "66.7055, -317.021, -77.6102, 0.29", "66.9243, -317.544, -77.5093, 0.88", "67.2991, -318.476, -77.3229, 0.74", "67.5673, -319.084, -77.19, 0.29", "67.8461, -319.645, -77.0995, 0.59", "68.1496, -320.25, -77.0235, 0.74", "68.4157, -320.739, -76.9442, 0.88", "68.448, -320.799, -76.9326, 0.88", "69.0335, -322.037, -76.6553, 0.52", "69.2289, -322.532, -76.4961, 0.52", "69.462, -323.281, -76.1564, 0.52", "69.661, -324.063, -75.7694, 0.96", "69.7743, -324.468, -75.5407, 1.33", "69.9624, -325.043, -75.2055, 0.59", "70.2066, -325.773, -74.7882, 0.37", "70.6127, -326.812, -74.2293, 0.44", "70.8726, -327.423, -73.9554, 0.66", "71.3521, -328.546, -73.5818, 0.96", "71.8588, -329.68, -73.2831, 0.44", "72.1177, -330.259, -73.1692, 1.03", "72.424, -330.944, -73.0992, 1.18", "72.7845, -331.889, -73.1038, 0.29", "73.0499, -332.795, -73.1904, 0.29", "73.0768, -332.931, -73.2168, 0.88", "73.119, -333.258, -73.2895, 1.25", "73.202, -333.935, -73.4081, 0.66", "73.2849, -334.681, -73.4975, 0.59", "73.3956, -335.72, -73.5712, 0.52", "73.4486, -336.338, -73.5894, 0.52", "73.5227, -337.228, -73.5943, 0.52", "73.6126, -338.067, -73.5609, 0.37", "73.6769, -338.846, -73.5268, 0.29", "73.7016, -339.154, -73.5215, 0.74", "73.7161, -339.337, -73.527, 0.74", "73.7472, -339.842, -73.5789, 0.74", "73.7842, -340.653, -73.7276, 0.81", "73.7764, -341.901, -74.0353, 0.81", "73.7772, -342.709, -74.2703, 0.81", "73.7966, -343.602, -74.5539, 0.81", "73.7988, -343.66, -74.5729, 0.81", "73.8441, -344.439, -74.8386, 0.59", "73.9238, -345.407, -75.181, 0.44", "74.0245, -346.024, -75.3751, 0.44", "74.1735, -346.728, -75.5935, 0.29", "74.3202, -347.324, -75.7581, 0.74", "74.4055, -347.683, -75.8386, 0.96", "74.4204, -347.741, -75.8451, 0.96", "74.5681, -348.363, -75.8429, 0.52", "74.7645, -349.284, -75.7337, 0.52", "74.9535, -350.148, -75.5671, 0.52", "75.0925, -350.719, -75.4464, 0.59", "75.3653, -351.697, -75.2514, 0.74", "75.5361, -352.232, -75.1587, 0.52", "75.8675, -353.209, -75.0262, 0.37", "75.8884, -353.268, -75.021, 0.37", "76.2364, -354.144, -75.0392, 0.44", "76.5004, -354.764, -75.1327, 0.37", "76.6762, -355.193, -75.2614, 0.74", "76.9261, -355.847, -75.4887, 0.29", "76.94, -355.893, -75.5056, 0.29", "77.022, -356.207, -75.6083, 0.44", "77.0313, -356.256, -75.6209, 0.44", "77.0882, -356.699, -75.7089, 0.44", "77.1944, -357.575, -75.848, 0.22", "77.302, -358.191, -75.9272, 0.29" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-6.38263, -212.457, -93.8434, 0.29", "-7.30781, -211.935, -94.7817, 0.29", "-7.43095, -211.868, -94.891, 0.29", "-8.02165, -211.54, -95.3636, 0.29", "-9.447, -210.682, -96.4065, 0.29", "-9.95434, -210.34, -96.797, 0.59", "-11.3442, -209.285, -97.8749, 0.59", "-12.084, -208.614, -98.4581, 0.37", "-12.4612, -208.208, -98.7788, 0.66", "-12.8425, -207.747, -99.1318, 0.88", "-14.1069, -206.058, -100.376, 0.22", "-14.5582, -205.399, -100.862, 0.44", "-14.9161, -204.806, -101.272, 0.59", "-15.4827, -203.788, -102.06, 0.29", "-15.976, -202.908, -102.811, 0.74", "-16.5631, -201.892, -103.758, 1.03" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-6.38263, -212.457, -93.8434, 0.52", "-6.88093, -213.52, -95.3041, 0.52", "-6.89698, -213.551, -95.3361, 0.52", "-7.04715, -213.849, -95.5835, 0.52", "-7.5396, -214.908, -96.3306, 1.33", "-7.72411, -215.321, -96.5962, 1.77", "-7.96577, -215.938, -96.9432, 0.66", "-8.24428, -216.717, -97.2537, 0.66", "-8.56633, -217.766, -97.6823, 0.66", "-8.69305, -218.343, -97.9397, 0.88", "-8.707, -218.494, -98.0085, 0.88", "-8.71096, -219.432, -98.4626, 0.88", "-8.70883, -219.468, -98.4815, 0.88", "-8.55436, -220.609, -99.0792, 0.66", "-8.37267, -221.494, -99.5864, 0.44", "-8.24869, -222.027, -99.9301, 0.96", "-8.06101, -222.781, -100.455, 0.96" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-164.08, -187.646, -23.3924, 0.29", "-174.416, -188.893, -20.3969, 0.29", "-184.961, -189.68, -18.0425, 0.29", "-195.498, -190.919, -15.8529, 0.29", "-205.345, -195.3, -14.7477, 0.29", "-215.28, -199.125, -12.7419, 0.29", "-225.292, -202.571, -10.4515, 0.29", "-235.478, -205.59, -8.33264, 0.29", "-245.398, -209.202, -5.90203, 0.29", "-255.067, -213.228, -3.13299, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-164.08, -187.646, -23.3924, 0.44", "-167.345, -195.636, -25.8281, 0.29", "-170.312, -203.209, -29.6088, 0.29", "-173.221, -211.057, -32.8312, 0.29", "-175.019, -219.51, -35.2305, 0.29", "-175.458, -228.276, -37.076, 0.29", "-174.835, -237.064, -38.7528, 0.29", "-173.563, -245.544, -41.3833, 0.29", "-172.639, -253.705, -44.9857, 0.29", "-172.348, -262.492, -46.7569, 0.29", "-173.617, -271.322, -47.6853, 0.29", "-176.549, -279.78, -48.2436, 0.29", "-181.345, -287.247, -49.5423, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "40.2768, 167.004, 72.109, 0.29", "40.4943, 177.716, 77.5036, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "40.2768, 167.004, 72.109, 0.44", "42.0278, 176.688, 78.9797, 0.29", "44.6303, 185.978, 86.1205, 0.29", "46.7323, 195.194, 93.517, 0.29", "49.6532, 203.494, 101.68, 0.29", "50.2512, 211.928, 110.199, 0.29", "51.3839, 219.453, 119.481, 0.29", "50.1087, 227.544, 128.254, 0.29", "48.6659, 234.88, 137.644, 0.29", "47.3365, 240.1, 148.37, 0.29", "47.3191, 246.123, 158.752, 0.29", "50.2024, 252.067, 168.773, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "-148.472, -16.8805, 18.1552, 0.22", "-149.924, -16.8619, 18.1269, 0.22", "-152.326, -16.8311, 18.0801, 0.22", "-153.377, -16.8177, 18.0596, 0.52", "-154.023, -16.8094, 18.0471, 0.74", "-167.782, -14.535, 19.3648, 0.74", "-181.528, -13.1303, 21.6691, 0.74", "-194.541, -10.1127, 25.8865, 0.74", "-207.321, -9.12205, 31.5381, 0.74", "-219.208, -5.82767, 38.1781, 0.74", "-229.556, -3.11162, 47.2207, 0.74", "-237.81, 0.0039692, 58.1022, 0.74", "-245.501, 4.23597, 69.0184, 0.74", "-253.53, 9.60669, 79.164, 0.74", "-260.856, 13.4878, 90.4559, 0.74" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-148.472, -16.8805, 18.1552, 0.44", "-148.421, -16.1281, 18.4206, 0.44", "-148.391, -15.5782, 18.604, 0.66", "-148.389, -15.476, 18.6363, 0.66", "-148.383, -15.1666, 18.7319, 0.59", "-148.362, -14.4565, 18.9454, 0.29", "-148.299, -13.3196, 19.2781, 0.29", "-148.293, -13.2012, 19.3167, 0.29", "-148.247, -12.3812, 19.6126, 0.52", "-148.244, -12.3195, 19.6364, 0.52", "-148.185, -11.4855, 19.9753, 0.52", "-148.091, -10.4769, 20.4032, 1.03", "-147.926, -9.25319, 20.9545, 0.29", "-147.918, -9.20071, 20.979, 0.29", "-147.768, -8.50277, 21.3325, 0.29", "-147.628, -8.01726, 21.5827, 0.52", "-147.453, -7.52894, 21.8402, 0.52", "-147.227, -6.99934, 22.1059, 0.96", "-147.208, -6.95899, 22.1243, 0.96", "-146.643, -5.74454, 22.6717, 0.29", "-146.18, -4.73266, 23.1242, 0.29", "-146.157, -4.67574, 23.1488, 0.29", "-145.844, -3.72143, 23.5347, 0.29", "-145.772, -3.39441, 23.6514, 0.59", "-145.752, -3.22862, 23.705, 0.59", "-145.762, -2.77414, 23.8302, 0.52", "-145.81, -2.29281, 23.9634, 0.66", "-145.867, -1.78502, 24.104, 0.66", "-145.972, -0.998467, 24.3213, 0.29", "-145.985, -0.881113, 24.3616, 0.29", "-146.023, -0.382004, 24.5599, 0.29", "-146.04, -0.0086517, 24.7663, 0.52", "-146.041, 0.0385744, 24.7978, 0.52", "-146.008, 0.69977, 25.2887, 0.37", "-145.933, 1.47857, 25.9137, 0.59", "-145.877, 1.86031, 26.2211, 0.96", "-145.686, 2.91996, 27.084, 0.37", "-145.671, 2.98166, 27.137, 0.37", "-145.465, 3.68533, 27.7514, 0.37", "-145.45, 3.72754, 27.7889, 0.37", "-145.256, 4.22516, 28.1916, 0.37", "-145.209, 4.37158, 28.2874, 0.37", "-144.97, 5.49046, 28.8147, 0.59", "-144.937, 5.70123, 28.9056, 0.88", "-144.93, 5.75546, 28.9263, 0.88", "-144.874, 6.20073, 29.0816, 0.88", "-144.663, 7.8291, 29.5894, 0.29", "-144.445, 9.26582, 29.9429, 0.29", "-144.41, 9.47261, 29.9826, 0.29", "-144.125, 11.1459, 30.3375, 0.29", "-144.091, 11.3785, 30.391, 0.29", "-143.953, 12.4822, 30.661, 0.37", "-143.83, 13.8445, 31.0262, 0.37", "-143.804, 14.5014, 31.2559, 0.37", "-143.813, 15.4938, 31.6792, 0.29", "-143.895, 16.4577, 32.1551, 0.29", "-143.91, 16.5657, 32.2156, 0.29", "-144.029, 17.0322, 32.5505, 0.29", "-144.424, 18.063, 33.5294, 1.18", "-144.501, 18.2611, 33.7283, 1.47" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-8.06101, -222.781, -100.455, 0.88", "-8.81312, -224.157, -101.177, 0.88", "-9.31091, -225.149, -101.629, 1.47", "-9.73596, -226.137, -102.027, 1.69", "-10.4652, -228.187, -102.756, 0.59", "-10.4862, -228.258, -102.781, 0.59", "-10.8178, -229.532, -103.236, 0.29", "-11.0081, -230.547, -103.571, 0.44", "-11.1213, -231.438, -103.942, 0.66", "-11.1953, -232.407, -104.502, 1.11", "-11.2237, -233.354, -105.108, 1.47", "-11.2485, -233.834, -105.435, 1.47", "-11.2545, -233.91, -105.49, 1.47", "-11.5303, -236.152, -106.987, 1.11", "-11.9137, -238.184, -108.152, 0.59", "-12.1239, -239.238, -108.628, 0.81", "-12.3031, -240.219, -108.962, 1.11", "-12.4462, -241.236, -109.217, 1.25", "-12.6074, -242.74, -109.46, 0.66", "-12.7427, -244.466, -109.538, 0.52", "-12.8326, -246.118, -109.533, 1.03", "-12.8693, -246.93, -109.553, 1.25", "-12.9133, -248.641, -109.651, 0.66", "-12.9256, -249.152, -109.711, 0.44", "-12.9224, -249.818, -109.83, 0.96", "-12.9096, -250.399, -109.968, 1.25", "-12.9037, -251.894, -110.379, 1.11", "-12.9163, -253.075, -110.744, 0.96", "-12.9227, -254.362, -111.11, 0.66", "-12.9316, -255.715, -111.434, 0.59", "-12.932, -255.807, -111.452, 0.59", "-12.967, -256.85, -111.593, 0.59", "-13.1377, -258.242, -111.632, 0.52", "-13.4869, -259.582, -111.539, 0.81", "-13.9034, -260.554, -111.369, 1.03", "-13.9764, -260.676, -111.341, 1.03", "-14.566, -261.55, -111.109, 1.03", "-15.4776, -262.668, -110.747, 0.52", "-16.0479, -263.264, -110.514, 1.11", "-16.7371, -263.886, -110.322, 1.33", "-16.8074, -263.945, -110.301, 1.33" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-8.06101, -222.781, -100.455, 0.52", "-7.34129, -223.227, -99.977, 0.52", "-6.03335, -224.041, -99.0377, 0.29", "-5.26382, -224.537, -98.4935, 0.59", "-4.80681, -224.838, -98.1416, 0.96", "-3.41595, -225.764, -97.0578, 0.22", "-2.46194, -226.388, -96.3277, 0.59", "-2.4107, -226.421, -96.2882, 0.59", "-1.70065, -226.873, -95.7992, 0.52", "-0.668374, -227.62, -95.0654, 0.37", "-0.233747, -227.98, -94.7712, 0.81", "0.113679, -228.297, -94.5813, 0.96", "0.991404, -229.14, -94.1662, 0.37", "1.81167, -229.915, -93.9307, 0.37", "2.61214, -230.667, -93.872, 0.44", "3.08486, -231.107, -93.9401, 0.44", "3.7239, -231.703, -94.0446, 0.22", "4.18491, -232.11, -94.1246, 0.44", "5.93652, -233.519, -94.4441, 0.37", "6.64314, -234.042, -94.5711, 0.52", "7.44324, -234.596, -94.7101, 0.59", "8.35586, -235.186, -94.8141, 0.81", "9.30168, -235.774, -94.8517, 0.29", "10.1458, -236.266, -94.801, 0.52", "10.598, -236.511, -94.7155, 0.81", "11.0733, -236.723, -94.6414, 1.11", "11.2807, -236.799, -94.6187, 1.11", "11.6989, -236.929, -94.5962, 0.96", "12.4714, -237.11, -94.4751, 0.59", "13.7312, -237.304, -94.0678, 0.29", "14.3427, -237.396, -93.8123, 0.52", "14.8145, -237.47, -93.5874, 0.66", "14.8759, -237.483, -93.5557, 0.66", "16.3898, -237.861, -92.6898, 0.52", "17.5243, -238.195, -91.9948, 0.74", "18.6345, -238.546, -91.2993, 0.22", "18.9387, -238.657, -91.1252, 0.74", "19.4918, -238.893, -90.8281, 0.81", "20.7126, -239.508, -90.2468, 0.22", "21.0909, -239.746, -90.1135, 0.66", "21.4443, -239.999, -90.0064, 0.74", "22.281, -240.685, -89.7373, 0.22", "22.9863, -241.342, -89.4776, 0.66", "23.2261, -241.589, -89.3851, 0.81", "23.6379, -242.088, -89.2256, 0.52", "23.674, -242.133, -89.2111, 0.52", "24.2247, -242.861, -89.0147, 0.22", "24.9448, -243.864, -88.8152, 0.74", "25.3477, -244.386, -88.8021, 0.81", "25.4376, -244.494, -88.8085, 0.81", "25.8947, -244.989, -88.8955, 0.59", "26.3626, -245.438, -89.0849, 0.29", "26.871, -245.904, -89.3846, 1.03", "27.6292, -246.662, -89.9502, 1.03", "27.7634, -246.816, -90.0635, 1.25", "28.2222, -247.467, -90.482, 0.66", "28.907, -248.655, -91.152, 0.52", "29.283, -249.452, -91.5192, 0.37", "29.526, -250.118, -91.7729, 0.29", "29.6915, -250.801, -91.949, 0.29", "29.8958, -252.01, -92.175, 0.29", "29.9473, -252.433, -92.2436, 0.81", "30.0152, -253.021, -92.3223, 1.03", "30.0287, -253.091, -92.3335, 1.03", "30.3095, -254.059, -92.5166, 0.59", "30.6454, -254.969, -92.6555, 0.44", "31.044, -255.993, -92.7695, 0.88", "31.1597, -256.284, -92.7918, 1.25", "31.3779, -256.798, -92.787, 1.55", "31.6847, -257.449, -92.7272, 0.29", "32.2188, -258.47, -92.3666, 0.29", "32.681, -259.329, -91.9072, 0.29", "32.7091, -259.383, -91.8741, 0.29", "33.1298, -260.23, -91.3537, 1.47", "33.4804, -260.965, -90.9085, 1.77", "34.3996, -262.889, -89.7525, 0.37", "34.7169, -263.548, -89.3544, 0.22", "35.1369, -264.416, -88.8101, 0.29", "35.3198, -264.823, -88.5706, 0.52", "35.5324, -265.382, -88.2928, 0.66", "35.5515, -265.447, -88.2662, 0.66" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "-260.856, 13.4878, 90.4559, 0.37", "-271.63, 16.6169, 96.9793, 0.37", "-283.218, 18.2934, 102.576, 0.37", "-293.401, 20.5314, 110.304, 0.37", "-304.14, 21.0109, 117.575, 0.37", "-316.018, 19.1968, 122.479, 0.37", "-327.061, 17.5348, 129.09, 0.37", "-337.382, 14.5526, 136.37, 0.37", "-345.343, 9.95048, 145.529, 0.37", "-352.384, 2.28389, 153.279, 0.37", "-359.043, -7.12309, 159.245, 0.37", "-364.569, -16.7355, 165.99, 0.37", "-370.044, -26.3238, 172.809, 0.37" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "-260.856, 13.4878, 90.4559, 0.29", "-272.082, 16.716, 97.4307, 0.37", "-283.751, 20.1328, 103.536, 0.37", "-295.992, 22.3636, 109.04, 0.37", "-306.382, 26.4932, 116.792, 0.37", "-315.933, 29.8986, 125.863, 0.37", "-326.105, 31.6458, 134.728, 0.37", "-337.619, 34.9589, 141.175, 0.37", "-349.839, 39.7031, 144.817, 0.37" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-144.501, 18.2611, 33.7283, 0.59", "-142.875, 18.5658, 35.0293, 0.59", "-142.802, 18.578, 35.0884, 0.59", "-141.353, 18.9619, 36.2839, 0.29", "-140.589, 19.2713, 36.889, 0.29", "-140.518, 19.305, 36.9445, 0.29", "-138.969, 20.2005, 38.0809, 0.29", "-138.921, 20.2388, 38.1138, 0.29", "-137.594, 21.4088, 38.9512, 0.29", "-136.097, 22.8001, 39.7429, 0.29", "-135.973, 22.915, 39.8002, 0.29", "-134.628, 24.1088, 40.353, 0.74", "-133.474, 25.0711, 40.8061, 0.29", "-133.143, 25.3061, 40.9558, 0.29", "-131.459, 26.3664, 41.7094, 0.29", "-130.655, 26.8056, 42.0828, 0.29", "-129.332, 27.4376, 42.7327, 0.29", "-127.694, 28.0223, 43.638, 0.29", "-126.288, 28.4105, 44.4762, 0.88", "-119.122, 35.2506, 50.6245, 0.88", "-113.58, 41.9255, 58.4133, 0.88", "-107.494, 49.1103, 65.2893, 0.88", "-100.513, 56.0251, 71.5655, 0.88", "-93.3478, 62.157, 78.4214, 0.88", "-86.9009, 69.1093, 85.2069, 0.88", "-79.8365, 75.222, 92.1832, 0.88", "-71.7163, 80.0366, 99.0258, 0.88" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-144.501, 18.2611, 33.7283, 0.59", "-144.918, 19.3152, 34.42, 0.59", "-145.249, 20.2401, 35.0721, 0.59", "-145.529, 21.1261, 35.7645, 0.37", "-145.854, 22.2493, 36.6705, 0.29", "-146.099, 23.2822, 37.5804, 0.29", "-146.114, 23.3535, 37.6459, 0.29", "-146.25, 24.2296, 38.5178, 0.29", "-146.359, 24.9862, 39.3116, 0.66", "-146.411, 25.4745, 39.7959, 0.81", "-146.524, 26.6244, 40.7715, 0.29", "-146.532, 26.7002, 40.8331, 0.29", "-146.648, 27.7559, 41.5824, 0.29", "-146.656, 27.83, 41.6263, 0.29", "-146.76, 29.0755, 42.2203, 0.52", "-146.845, 29.9607, 42.574, 0.74", "-146.859, 30.0531, 42.6036, 0.74", "-147.01, 30.8823, 42.9183, 0.74", "-147.026, 30.9608, 42.9511, 0.74", "-147.309, 32.081, 43.4508, 0.29", "-147.657, 33.2336, 43.9968, 0.29", "-148.176, 34.7774, 44.7442, 0.29", "-148.599, 36.1153, 45.3742, 0.29", "-148.638, 36.2673, 45.4468, 0.29", "-148.825, 37.5311, 46.0322, 0.29", "-148.832, 37.6097, 46.0679, 0.29", "-148.776, 38.8912, 46.6216, 0.29", "-148.544, 40.8339, 47.4181, 0.29", "-148.185, 43.4122, 48.3925, 0.29", "-147.827, 45.7691, 49.2728, 0.29", "-147.804, 45.926, 49.3346, 0.29", "-147.507, 48.2532, 50.2826, 0.29", "-147.489, 48.4201, 50.3522, 0.29", "-147.292, 51.1206, 51.499, 0.29", "-147.289, 51.2108, 51.5373, 0.29", "-147.385, 53.628, 52.604, 0.29", "-147.395, 53.7171, 52.6436, 0.29", "-147.785, 55.5558, 53.4188, 0.29", "-147.898, 56.0345, 53.6029, 0.74", "-147.921, 56.1241, 53.6354, 0.74", "-148.086, 56.7344, 53.8279, 0.59", "-148.584, 58.3239, 54.1311, 0.29", "-148.951, 59.2857, 54.2928, 0.88", "-149.291, 59.878, 54.3563, 0.96" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-16.8074, -263.945, -110.301, 0.52", "-17.4856, -264.809, -110.107, 0.52", "-18.0023, -265.506, -109.964, 0.37", "-18.4724, -266.189, -109.801, 0.29", "-18.8417, -266.707, -109.665, 0.66", "-19.1676, -267.157, -109.543, 0.66", "-19.2132, -267.219, -109.526, 0.66", "-19.5151, -267.642, -109.412, 0.59", "-20.068, -268.378, -109.223, 0.29", "-20.6358, -269.152, -109.038, 0.29", "-20.8629, -269.479, -108.968, 0.66", "-21.2142, -270.02, -108.868, 0.96", "-21.4741, -270.481, -108.797, 1.18", "-21.9642, -271.455, -108.679, 0.29", "-22.254, -272.098, -108.629, 0.29", "-22.4159, -272.483, -108.599, 0.52", "-22.4764, -272.615, -108.568, 0.52", "-22.7403, -273.095, -108.376, 0.22", "-23.0132, -273.478, -108.145, 0.44", "-23.2809, -273.791, -107.865, 0.66", "-23.652, -274.169, -107.487, 0.66", "-24.5743, -275.048, -106.602, 0.29", "-24.8416, -275.305, -106.358, 0.96", "-25.1137, -275.588, -106.116, 1.25", "-25.9777, -276.641, -105.338, 0.52", "-26.473, -277.346, -104.911, 0.52", "-26.8611, -277.956, -104.617, 0.29", "-27.2063, -278.497, -104.429, 0.37", "-27.5882, -279.058, -104.255, 0.44", "-27.8928, -279.422, -104.154, 0.44", "-28.4262, -279.927, -104.052, 0.22", "-28.7625, -280.17, -103.988, 0.37", "-29.3521, -280.51, -103.831, 0.59", "-30.1471, -280.895, -103.579, 1.18", "-30.8962, -281.232, -103.278, 0.74", "-30.9622, -281.261, -103.246, 0.74", "-32.0043, -281.76, -102.676, 0.37", "-32.9743, -282.305, -102.061, 0.29", "-33.2002, -282.446, -101.878, 0.59", "-33.71, -282.76, -101.326, 0.74", "-33.7624, -282.79, -101.252, 0.74", "-34.0038, -282.921, -100.776, 0.74", "-34.026, -282.929, -100.724, 0.74", "-34.4389, -283.021, -99.7295, 0.29", "-34.9159, -283.089, -98.5606, 0.59", "-35.3133, -283.12, -97.5586, 0.96", "-35.9919, -283.16, -95.7961, 0.59", "-36.2635, -283.167, -95.0571, 0.29", "-36.2871, -283.169, -94.9919, 0.29", "-36.7071, -283.224, -93.7718, 0.88", "-37.0611, -283.274, -92.6472, 1.03" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-16.8074, -263.945, -110.301, 0.52", "-16.8453, -264.9, -111.234, 0.52", "-16.8486, -264.952, -111.278, 0.52", "-16.9208, -265.723, -111.89, 0.66", "-17.1198, -267.42, -113.11, 0.44", "-17.3109, -268.679, -113.985, 0.37", "-17.4397, -269.369, -114.43, 0.66", "-17.623, -270.145, -114.858, 0.88", "-17.8687, -271.018, -115.312, 0.88", "-18.1201, -271.797, -115.68, 0.88", "-18.4602, -272.864, -116.153, 0.59", "-18.7295, -273.843, -116.613, 0.37", "-18.9603, -274.872, -117.154, 0.37", "-19.1263, -275.985, -117.802, 0.74", "-19.1623, -276.466, -118.089, 1.11", "-19.2154, -278.16, -119.19, 0.74", "-19.2193, -278.964, -119.731, 0.44", "-19.2202, -279.02, -119.768, 0.44", "-19.2617, -280.213, -120.54, 1.03", "-19.3094, -280.85, -120.892, 1.33", "-19.5274, -282.271, -121.542, 0.66", "-19.8154, -283.552, -121.962, 0.66", "-20.1469, -284.819, -122.31, 0.88", "-20.1628, -284.885, -122.324, 0.88", "-20.3846, -285.882, -122.487, 1.11", "-20.6785, -287.382, -122.679, 1.03", "-20.861, -288.509, -122.753, 0.52", "-20.8727, -288.577, -122.763, 0.52", "-21.103, -289.715, -123.033, 0.88", "-21.2714, -290.441, -123.249, 0.96", "-21.4483, -291.077, -123.524, 0.96", "-21.6785, -291.718, -123.905, 0.66", "-22.4855, -293.487, -125.105, 0.44", "-22.8058, -294.129, -125.558, 0.96", "-23.1366, -294.708, -125.993, 1.25", "-23.8349, -295.888, -126.911, 1.11", "-24.4607, -296.904, -127.776, 0.74", "-24.8069, -297.428, -128.257, 0.74" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-149.291, 59.878, 54.3563, 0.29", "-150.768, 60.3678, 54.2994, 0.29", "-150.857, 60.3928, 54.2963, 0.29", "-151.94, 60.7707, 54.1205, 0.29", "-152.025, 60.8025, 54.1028, 0.29", "-152.991, 61.2198, 53.9198, 0.66", "-153.725, 61.5647, 53.7938, 0.81", "-153.788, 61.5953, 53.7835, 0.81", "-155.705, 62.5319, 53.6134, 0.29", "-155.88, 62.6192, 53.6064, 0.29", "-157.281, 63.339, 53.6313, 0.29", "-158.893, 64.2097, 53.7543, 0.29", "-158.964, 64.2483, 53.7649, 0.29", "-160.441, 65.0131, 54.0907, 0.44", "-160.51, 65.0487, 54.1146, 0.44", "-161.062, 65.3505, 54.3151, 0.44", "-161.127, 65.3884, 54.3407, 0.44", "-162.26, 66.1593, 54.8186, 0.29", "-162.392, 66.2631, 54.8638, 0.29", "-163.237, 67.0338, 55.0796, 0.29", "-163.652, 67.428, 55.1864, 0.59", "-163.773, 67.5486, 55.2183, 0.59", "-164.139, 67.9059, 55.3106, 0.59", "-165.041, 68.7726, 55.5279, 0.37", "-165.176, 68.8937, 55.5585, 0.37", "-165.889, 69.5651, 55.6658, 0.37", "-165.947, 69.6224, 55.672, 0.37", "-166.747, 70.3935, 55.7271, 0.37", "-166.874, 70.5138, 55.7316, 0.37", "-167.727, 71.2415, 55.7633, 0.37", "-168.877, 72.1262, 55.8099, 0.22", "-169.029, 72.2261, 55.819, 0.22", "-169.892, 72.7127, 55.8937, 0.22", "-169.966, 72.7466, 55.9032, 0.22", "-170.975, 72.9562, 56.1923, 0.81", "-171.325, 72.9747, 56.3263, 0.81", "-172.31, 72.9378, 56.7194, 0.22", "-172.387, 72.9299, 56.7466, 0.22", "-173.243, 72.7795, 57.0587, 0.22", "-175.642, 72.309, 57.8664, 0.22", "-175.805, 72.2758, 57.9178, 0.22", "-176.966, 72.0409, 58.2731, 0.22", "-178.074, 71.8169, 58.5974, 0.22", "-179.759, 71.5107, 59.0663, 0.22", "-180.963, 71.329, 59.3779, 0.22", "-181.053, 71.324, 59.3976, 0.22", "-182.39, 71.4388, 59.7256, 0.52", "-182.774, 71.5711, 59.8417, 0.81", "-182.913, 71.6592, 59.8885, 0.81", "-183.231, 71.9372, 59.9827, 0.81", "-183.296, 72.0022, 59.9933, 0.81", "-184.27, 72.9893, 60.0309, 0.37", "-184.803, 73.5629, 59.9987, 0.59", "-184.858, 73.6229, 59.9925, 0.59", "-185.535, 74.3941, 59.9076, 0.44", "-186.644, 75.7268, 59.5814, 0.29", "-186.749, 75.8585, 59.5374, 0.29", "-187.339, 76.6036, 59.1112, 0.29", "-187.378, 76.6526, 59.0774, 0.29", "-187.968, 77.3773, 58.5358, 0.29", "-188.92, 78.6158, 57.3561, 0.29", "-188.952, 78.656, 57.3126, 0.29", "-190.106, 79.95, 55.6993, 0.29", "-190.14, 79.9837, 55.6525, 0.29", "-190.509, 80.3093, 55.1938, 0.66", "-192.267, 81.6699, 53.1648, 0.37", "-192.384, 81.7486, 53.0492, 0.37", "-193.071, 82.1473, 52.4623, 0.29", "-193.787, 82.4938, 52.0066, 0.15", "-194.238, 82.6913, 51.7647, 0.74", "-194.454, 82.767, 51.6862, 0.74", "-195.942, 83.1571, 51.4216, 0.37", "-196.646, 83.3697, 51.3128, 0.29", "-197.59, 83.6985, 51.2354, 0.29", "-197.698, 83.7374, 51.2338, 0.29", "-199.07, 84.2189, 51.3305, 0.29", "-199.232, 84.2782, 51.3571, 0.29", "-200.127, 84.6224, 51.5958, 0.29", "-200.991, 84.9764, 51.8299, 0.29", "-201.065, 85.0064, 51.8446, 0.29", "-202.218, 85.4783, 52.0036, 0.29", "-203.322, 85.9417, 52.0468, 0.29", "-203.536, 86.0276, 52.0409, 0.29", "-204.524, 86.4742, 51.9078, 0.29", "-205.603, 87.06, 51.6995, 0.52", "-206.14, 87.4025, 51.5898, 0.66", "-207.351, 88.2962, 51.3216, 0.29", "-208.682, 89.3706, 51.0229, 1.11", "-210.014, 90.5119, 50.6593, 0.29", "-210.721, 91.1566, 50.4417, 0.29", "-211.325, 91.7235, 50.2624, 0.74", "-211.455, 91.847, 50.2203, 0.74", "-211.817, 92.1986, 50.0949, 0.74", "-213.686, 93.9239, 49.3533, 0.29", "-213.776, 93.9966, 49.319, 0.29", "-214.473, 94.5315, 49.0421, 0.29", "-214.524, 94.5716, 49.0219, 0.29", "-215.398, 95.2712, 48.6998, 0.59", "-217.038, 96.663, 48.1904, 0.29", "-217.104, 96.7265, 48.1801, 0.29", "-217.576, 97.2399, 48.1402, 0.29", "-217.816, 97.5794, 48.1491, 0.59", "-217.863, 97.6583, 48.1576, 0.59", "-218.213, 98.3452, 48.2793, 0.59", "-218.539, 99.0604, 48.4441, 0.29", "-218.846, 99.6425, 48.5633, 0.29", "-219.863, 101.328, 48.8663, 0.29", "-219.905, 101.385, 48.8756, 0.29", "-220.518, 102.122, 48.989, 0.29", "-220.812, 102.419, 49.0299, 0.29", "-221.672, 103.122, 49.1144, 0.52", "-222.066, 103.378, 49.1517, 0.59", "-223.255, 104.001, 49.2853, 0.22", "-223.576, 104.175, 49.3092, 0.22", "-224.221, 104.577, 49.3558, 0.22", "-224.818, 105.023, 49.4038, 0.81", "-225.22, 105.364, 49.4346, 1.03", "-225.866, 105.933, 49.4705, 0.52", "-227.051, 106.978, 49.5093, 0.29", "-228.416, 108.155, 49.5375, 0.22", "-229.715, 109.337, 49.562, 0.22", "-229.868, 109.486, 49.5658, 0.22", "-230.503, 110.119, 49.5852, 0.74", "-230.85, 110.456, 49.6008, 0.74", "-231.29, 110.828, 49.6598, 0.74", "-240.53, 116.96, 48.0637, 0.74" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-149.291, 59.878, 54.3563, 0.29", "-149.084, 60.6567, 54.6759, 0.29", "-148.692, 62.0416, 55.1832, 0.29", "-148.675, 62.1, 55.2039, 0.29", "-148.31, 63.4106, 55.6627, 0.29", "-148.294, 63.4765, 55.6858, 0.29", "-147.857, 65.4389, 56.381, 0.52", "-147.656, 66.5436, 56.7803, 0.52", "-147.546, 67.3456, 57.0655, 0.52", "-147.525, 67.5741, 57.1424, 0.52", "-147.499, 68.5397, 57.5431, 0.52", "-147.541, 69.2577, 57.9042, 0.81", "-147.571, 69.3875, 57.9882, 0.81", "-147.756, 69.9086, 58.4002, 0.66", "-147.983, 70.4022, 58.8162, 0.37", "-148.738, 71.876, 60.109, 0.37", "-148.766, 71.9286, 60.1523, 0.37", "-149.067, 72.4679, 60.5547, 0.52", "-149.109, 72.5492, 60.6042, 0.52", "-149.637, 73.603, 61.1407, 0.44", "-149.696, 73.7284, 61.192, 0.44", "-150.119, 74.6606, 61.4453, 0.44", "-150.238, 74.9448, 61.5249, 0.44", "-150.759, 76.3792, 61.952, 0.44", "-150.781, 76.4464, 61.9731, 0.44", "-150.977, 77.1357, 62.2056, 0.52", "-151.01, 77.2821, 62.253, 0.52", "-151.182, 78.1839, 62.5476, 0.37", "-151.336, 79.2347, 62.8792, 0.74", "-151.345, 79.3046, 62.9016, 0.74", "-151.402, 79.7884, 63.0582, 0.74", "-151.657, 82.0533, 63.8783, 0.52", "-151.664, 82.1218, 63.905, 0.52", "-151.845, 83.9548, 64.6839, 0.52", "-152.053, 86.1069, 65.6599, 0.52", "-152.061, 86.1929, 65.7011, 0.52", "-152.191, 87.5622, 66.3988, 0.88", "-152.22, 87.8537, 66.5607, 0.88", "-152.369, 89.4883, 67.4677, 0.52", "-152.452, 90.5274, 68.0438, 0.52", "-152.464, 90.7169, 68.158, 0.52", "-152.526, 91.6753, 68.6997, 0.52", "-152.55, 91.9466, 68.8373, 0.52", "-152.643, 92.6243, 69.1722, 0.59", "-152.77, 93.4137, 69.5492, 0.37", "-152.99, 94.6867, 70.1448, 0.44", "-153.224, 96.0713, 70.7768, 0.22", "-153.438, 97.3212, 71.3329, 0.22", "-153.526, 97.8498, 71.5761, 0.37", "-153.734, 99.0771, 72.1485, 0.22", "-153.754, 99.2008, 72.2063, 0.22", "-153.905, 100.216, 72.7413, 0.22", "-153.913, 100.277, 72.7822, 0.22", "-153.986, 101.253, 73.4805, 0.22", "-153.988, 101.306, 73.518, 0.22", "-154.057, 102.575, 74.4422, 0.22", "-154.118, 104.007, 75.4654, 0.66", "-154.138, 104.558, 75.8497, 0.96", "-154.172, 105.569, 76.5686, 0.22", "-154.203, 106.438, 77.1853, 0.22", "-154.205, 106.505, 77.2345, 0.22", "-154.227, 107.005, 77.6059, 0.59", "-154.265, 107.454, 77.8872, 0.88", "-154.39, 108.53, 78.5097, 0.44", "-154.482, 109.186, 78.8566, 0.29", "-154.508, 109.391, 78.9541, 0.29", "-154.562, 109.882, 79.164, 0.29", "-154.632, 111.154, 79.5763, 0.74", "-154.636, 111.778, 79.7259, 0.29", "-154.626, 112.435, 79.8426, 0.44", "-154.61, 112.964, 79.9388, 0.59", "-154.608, 113.037, 79.9539, 0.59", "-154.556, 114.595, 80.3254, 0.22", "-154.551, 114.822, 80.391, 0.22", "-154.552, 116.08, 80.8567, 0.22", "-154.552, 116.145, 80.8864, 0.22", "-154.543, 116.858, 81.2717, 0.44", "-154.541, 116.929, 81.3164, 0.44", "-154.528, 117.282, 81.5921, 0.44", "-154.429, 118.405, 82.5406, 0.29", "-154.359, 118.801, 82.9245, 0.44", "-154.336, 118.91, 83.036, 0.44", "-154.209, 119.391, 83.5821, 0.44" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-24.8069, -297.428, -128.257, 0.29", "-25.7162, -297.543, -128.094, 0.29", "-26.8213, -297.844, -127.943, 0.29", "-27.0233, -297.912, -127.919, 0.59", "-27.7433, -298.168, -127.834, 0.66", "-27.8872, -298.216, -127.83, 0.66", "-28.6339, -298.446, -127.835, 0.66", "-29.9496, -298.898, -127.883, 0.22", "-30.4902, -299.099, -127.909, 0.66", "-31.1252, -299.335, -127.945, 0.66", "-32.8245, -299.955, -128.062, 0.22", "-33.8108, -300.302, -128.138, 0.22", "-35.188, -300.762, -128.262, 0.22", "-36.148, -301.044, -128.35, 0.74" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-24.8069, -297.428, -128.257, 0.29", "-24.8446, -298.806, -128.678, 0.29", "-24.8179, -299.653, -128.977, 0.29", "-24.8226, -300.07, -129.123, 0.74", "-24.8368, -300.437, -129.269, 0.88", "-24.8419, -300.526, -129.307, 0.88", "-24.9017, -301.16, -129.566, 0.88", "-24.9853, -302.27, -129.951, 0.22", "-25.0459, -302.901, -130.175, 0.22", "-25.1243, -303.626, -130.457, 0.88", "-25.1282, -303.685, -130.479, 0.88", "-25.144, -304.448, -130.753, 0.74", "-25.0779, -305.403, -131.056, 0.37", "-25.0623, -305.463, -131.071, 0.37", "-24.4822, -306.778, -131.219, 0.29", "-24.1375, -307.395, -131.232, 0.59", "-24.0295, -307.564, -131.229, 0.59", "-23.4757, -308.325, -131.191, 0.88", "-22.6378, -309.389, -130.957, 0.74", "-21.6424, -310.592, -130.551, 0.29", "-21.1097, -311.208, -130.288, 0.74", "-21.0706, -311.255, -130.267, 0.74", "-20.7524, -311.627, -130.079, 0.74", "-19.3252, -313.252, -129.07, 0.44", "-18.8669, -313.773, -128.662, 0.44" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "-154.209, 119.391, 83.5821, 0.29", "-153.355, 118.578, 83.5437, 0.29", "-153.256, 118.486, 83.5317, 0.29", "-152.947, 118.202, 83.4867, 0.29", "-152.897, 118.156, 83.4795, 0.29", "-152.184, 117.5, 83.3756, 0.29", "-151.875, 117.216, 83.3306, 0.81", "-151.501, 116.931, 83.2454, 1.03", "-151.45, 116.889, 83.2309, 1.03", "-144.759, 111.006, 80.3983, 1.03" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-154.209, 119.391, 83.5821, 0.44", "-154.295, 120.653, 84.0368, 0.44", "-154.377, 122.068, 84.5363, 0.37", "-154.493, 124.628, 85.5344, 0.29", "-154.62, 126.89, 86.464, 0.29", "-154.667, 127.906, 86.8893, 0.74", "-154.686, 128.402, 87.0991, 0.74", "-154.691, 129.043, 87.3627, 0.44", "-154.633, 130.507, 87.9843, 0.37", "-154.496, 132.029, 88.6444, 0.29", "-154.333, 133.552, 89.306, 0.29", "-154.313, 133.704, 89.3753, 0.29", "-154.012, 135.781, 90.3429, 0.29", "-153.949, 136.176, 90.5255, 0.29", "-153.732, 137.467, 91.0956, 0.29", "-153.72, 137.531, 91.1263, 0.29", "-153.618, 138.748, 91.7519, 0.29", "-153.674, 139.41, 92.083, 0.44", "-153.706, 139.546, 92.1503, 0.44", "-153.861, 140.042, 92.378, 0.29", "-153.891, 140.126, 92.4137, 0.29", "-154.375, 141.461, 92.8727, 0.29", "-155.214, 143.774, 93.5158, 0.29", "-155.306, 144.044, 93.5872, 0.29", "-155.577, 144.877, 93.8012, 0.74", "-155.787, 145.571, 93.978, 0.88", "-156.198, 146.962, 94.3293, 0.52", "-156.561, 148.221, 94.6468, 0.37", "-157.078, 149.955, 95.1143, 0.29", "-157.161, 150.225, 95.1935, 0.29", "-157.847, 152.415, 95.8866, 0.29", "-157.905, 152.597, 95.9503, 0.29", "-158.382, 154.07, 96.5469, 0.29", "-158.573, 154.628, 96.8049, 0.52", "-158.734, 155.057, 97.0376, 0.66", "-158.785, 155.185, 97.1164, 0.66", "-158.98, 155.63, 97.455, 0.66", "-159.017, 155.708, 97.5135, 0.66", "-159.418, 156.496, 98.0603, 0.29", "-159.552, 156.743, 98.223, 0.22", "-159.814, 157.202, 98.5286, 0.52", "-159.952, 157.463, 98.6962, 0.52", "-160.286, 158.119, 99.1063, 0.29", "-160.699, 159.017, 99.6241, 0.29", "-161.267, 160.417, 100.425, 0.29", "-161.299, 160.502, 100.475, 0.29", "-161.781, 161.931, 101.346, 0.29", "-161.821, 162.061, 101.427, 0.29", "-162.242, 163.612, 102.39, 0.29", "-162.556, 164.916, 103.167, 0.29", "-162.596, 165.113, 103.262, 0.29", "-162.726, 165.797, 103.542, 0.29", "-162.737, 165.855, 103.561, 0.29", "-162.884, 166.786, 103.815, 0.88", "-162.925, 167.071, 103.874, 0.88", "-163.099, 168.432, 104.114, 0.22", "-163.252, 169.778, 104.311, 0.22", "-163.274, 169.985, 104.339, 0.22", "-163.424, 171.472, 104.53, 0.22", "-163.43, 171.536, 104.539, 0.22", "-163.648, 173.555, 104.673, 0.52", "-163.83, 175.028, 104.717, 0.29", "-163.924, 175.693, 104.701, 0.37", "-163.944, 175.828, 104.694, 0.37", "-164.066, 176.572, 104.641, 0.37", "-164.461, 178.874, 104.356, 0.22", "-164.708, 180.254, 104.157, 0.22", "-164.72, 180.327, 104.149, 0.22", "-164.828, 181.058, 104.076, 0.52", "-164.971, 182.083, 103.998, 0.66", "-165.233, 184.167, 103.804, 0.15", "-165.412, 185.876, 103.672, 0.15", "-165.502, 186.744, 103.554, 0.29", "-165.511, 186.817, 103.543, 0.29", "-165.579, 187.342, 103.446, 0.29", "-165.82, 188.968, 103.132, 0.44", "-165.893, 189.415, 103.005, 0.44", "-166.135, 190.53, 102.653, 0.22", "-166.277, 191.13, 102.485, 0.52", "-166.294, 191.2, 102.467, 0.52", "-166.424, 191.708, 102.373, 0.88", "-167.208, 194.658, 102.078, 0.29", "-167.871, 197.107, 101.906, 0.29", "-168.076, 197.959, 101.895, 0.29", "-168.09, 198.032, 101.899, 0.29", "-168.279, 199.465, 102.048, 0.29", "-168.338, 200.715, 102.284, 0.29", "-168.335, 200.773, 102.302, 0.29", "-168.036, 202.506, 102.839, 0.29", "-167.757, 203.795, 103.242, 0.59", "-167.6, 204.434, 103.44, 0.59", "-167.336, 205.543, 103.781, 0.22", "-167.065, 206.799, 104.167, 0.22", "-167.037, 206.955, 104.215, 0.22", "-166.759, 208.893, 104.813, 0.22", "-166.743, 209.043, 104.859, 0.22", "-166.489, 212.105, 105.812, 0.22", "-166.486, 212.185, 105.837, 0.22", "-166.502, 214.014, 106.415, 0.22", "-166.515, 214.228, 106.483, 0.22", "-166.552, 214.535, 106.581, 0.59", "-166.654, 215.169, 106.786, 0.59", "-166.987, 216.767, 107.187, 0.29", "-167.156, 217.5, 107.335, 0.59", "-167.446, 218.648, 107.523, 0.52", "-167.688, 219.65, 107.667, 0.74", "-167.889, 220.52, 107.774, 0.74", "-168.237, 222.27, 107.948, 0.22", "-168.355, 223.015, 107.999, 0.44", "-168.442, 223.679, 108.046, 0.74", "-168.484, 224.062, 108.083, 1.03", "-168.49, 224.123, 108.089, 1.03", "-168.572, 224.943, 108.232, 1.03", "-168.579, 225.013, 108.256, 1.03", "-168.683, 226.149, 108.628, 0.37", "-168.793, 227.279, 108.99, 0.29", "-168.708, 236.903, 112.334, 0.29", "-169.894, 246.017, 116.729, 0.29", "-170.846, 254.916, 121.598, 0.29", "-171.428, 263.142, 127.582, 0.29", "-171.151, 270.809, 134.286, 0.29", "-172.007, 277.196, 142.177, 0.29" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-144.759, 111.006, 80.3983, 0.22", "-137.167, 105.162, 78.3314, 0.22", "-129.695, 98.9122, 77.2398, 0.22", "-121.579, 93.4868, 76.3676, 0.22" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-144.759, 111.006, 80.3983, 0.22", "-137.558, 104.053, 77.4987, 0.22", "-130.416, 97.0212, 74.6419, 0.22" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_92", "dend_25", "dend_0", "dend_98", "dend_93", "dend_41", "dend_26", "dend_14", "dend_1", "dend_102", "dend_99", "dend_97", "dend_94", "dend_65", "dend_42", "dend_30", "dend_27", "dend_20", "dend_15", "dend_3", "dend_2", "dend_104", "dend_103", "dend_101", "dend_100", "dend_96", "dend_95", "dend_67", "dend_66", "dend_48", "dend_43", "dend_34", "dend_31", "dend_29", "dend_28", "dend_24", "dend_21", "dend_17", "dend_16", "dend_11", "dend_4", "dend_87", "dend_68", "dend_52", "dend_49", "dend_47", "dend_44", "dend_40", "dend_35", "dend_33", "dend_32", "dend_23", "dend_22", "dend_19", "dend_18", "dend_13", "dend_12", "dend_6", "dend_5", "dend_91", "dend_88", "dend_72", "dend_69", "dend_62", "dend_53", "dend_51", "dend_50", "dend_46", "dend_45", "dend_39", "dend_36", "dend_8", "dend_7", "dend_90", "dend_89", "dend_86", "dend_73", "dend_71", "dend_70", "dend_64", "dend_63", "dend_61", "dend_54", "dend_38", "dend_37", "dend_10", "dend_9", "dend_83", "dend_74", "dend_56", "dend_55", "dend_85", "dend_84", "dend_82", "dend_75", "dend_60", "dend_57", "dend_81", "dend_76", "dend_59", "dend_58", "dend_78", "dend_77", "dend_80", "dend_79" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_92", "dend_25", "dend_0", "dend_98", "dend_93", "dend_41", "dend_26", "dend_14", "dend_1", "dend_102", "dend_99", "dend_97", "dend_94", "dend_65", "dend_42", "dend_30", "dend_27", "dend_20", "dend_15", "dend_3", "dend_2", "dend_104", "dend_103", "dend_101", "dend_100", "dend_96", "dend_95", "dend_67", "dend_66", "dend_48", "dend_43", "dend_34", "dend_31", "dend_29", "dend_28", "dend_24", "dend_21", "dend_17", "dend_16", "dend_11", "dend_4", "dend_87", "dend_68", "dend_52", "dend_49", "dend_47", "dend_44", "dend_40", "dend_35", "dend_33", "dend_32", "dend_23", "dend_22", "dend_19", "dend_18", "dend_13", "dend_12", "dend_6", "dend_5", "dend_91", "dend_88", "dend_72", "dend_69", "dend_62", "dend_53", "dend_51", "dend_50", "dend_46", "dend_45", "dend_39", "dend_36", "dend_8", "dend_7", "dend_90", "dend_89", "dend_86", "dend_73", "dend_71", "dend_70", "dend_64", "dend_63", "dend_61", "dend_54", "dend_38", "dend_37", "dend_10", "dend_9", "dend_83", "dend_74", "dend_56", "dend_55", "dend_85", "dend_84", "dend_82", "dend_75", "dend_60", "dend_57", "dend_81", "dend_76", "dend_59", "dend_58", "dend_78", "dend_77", "dend_80", "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_102" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_99" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_97" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_103" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_100" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_96" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_95" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_98",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_101",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_102",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_106",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_98" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_101" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_94" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_104" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_99",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_100",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_103",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_104",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_105",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_108",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_107",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93", "dend_94", "dend_95", "dend_96", "dend_97", "dend_98", "dend_99", "dend_100", "dend_101", "dend_102", "dend_103", "dend_104" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_25", "dend_25", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_91", "dend_88", "dend_88", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_80", "dend_80", "dend_80", "dend_79", "dend_79" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L6_DBC_4fe83bdbb1_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_92, id: dend_92, parent: soma_0
create dend_92
public dend_92
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_98, id: dend_98, parent: dend_92
create dend_98
public dend_98
// Section: dend_93, id: dend_93, parent: dend_92
create dend_93
public dend_93
// Section: dend_41, id: dend_41, parent: dend_25
create dend_41
public dend_41
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_102, id: dend_102, parent: dend_98
create dend_102
public dend_102
// Section: dend_99, id: dend_99, parent: dend_98
create dend_99
public dend_99
// Section: dend_97, id: dend_97, parent: dend_93
create dend_97
public dend_97
// Section: dend_94, id: dend_94, parent: dend_93
create dend_94
public dend_94
// Section: dend_65, id: dend_65, parent: dend_41
create dend_65
public dend_65
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_104, id: dend_104, parent: dend_102
create dend_104
public dend_104
// Section: dend_103, id: dend_103, parent: dend_102
create dend_103
public dend_103
// Section: dend_101, id: dend_101, parent: dend_99
create dend_101
public dend_101
// Section: dend_100, id: dend_100, parent: dend_99
create dend_100
public dend_100
// Section: dend_96, id: dend_96, parent: dend_94
create dend_96
public dend_96
// Section: dend_95, id: dend_95, parent: dend_94
create dend_95
public dend_95
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_48, id: dend_48, parent: dend_42
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_3
create dend_11
public dend_11
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_87, id: dend_87, parent: dend_67
create dend_87
public dend_87
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_43
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_91, id: dend_91, parent: dend_87
create dend_91
public dend_91
// Section: dend_88, id: dend_88, parent: dend_87
create dend_88
public dend_88
// Section: dend_72, id: dend_72, parent: dend_68
create dend_72
public dend_72
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_62, id: dend_62, parent: dend_52
create dend_62
public dend_62
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_90, id: dend_90, parent: dend_88
create dend_90
public dend_90
// Section: dend_89, id: dend_89, parent: dend_88
create dend_89
public dend_89
// Section: dend_86, id: dend_86, parent: dend_72
create dend_86
public dend_86
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_61, id: dend_61, parent: dend_53
create dend_61
public dend_61
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_83, id: dend_83, parent: dend_73
create dend_83
public dend_83
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_85, id: dend_85, parent: dend_83
create dend_85
public dend_85
// Section: dend_84, id: dend_84, parent: dend_83
create dend_84
public dend_84
// Section: dend_82, id: dend_82, parent: dend_74
create dend_82
public dend_82
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_81, id: dend_81, parent: dend_75
create dend_81
public dend_81
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_78, id: dend_78, parent: dend_76
create dend_78
public dend_78
// Section: dend_77, id: dend_77, parent: dend_76
create dend_77
public dend_77
// Section: dend_80, id: dend_80, parent: dend_78
create dend_80
public dend_80
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_92, dend_25, dend_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_92, dend_25, dend_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_102]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_99]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_97]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_103]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_100]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_96]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_95]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_96
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_97
// Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_98
// Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_101
// Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_102
// Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_106
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_98]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_101]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_94]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_104]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_99
// Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_100
// Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_103
// Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_104
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_105
// Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_108
// Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_107
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_91, dend_88, dend_88, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_90, dend_90, dend_90, dend_90, dend_90, dend_89, dend_89, dend_89, dend_89, dend_89, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_80, dend_80, dend_80, dend_79, dend_79]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_92(0), soma_0(0.45000180399916434)
    connect dend_25(0), soma_0(0.45000180399916434)
    connect dend_0(0), soma_0(0.45000180399916434)
    connect axon_0(0), soma_0(1.0)
    connect dend_98(0), dend_92(1.0)
    connect dend_93(0), dend_92(1.0)
    connect dend_41(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_102(0), dend_98(1.0)
    connect dend_99(0), dend_98(1.0)
    connect dend_97(0), dend_93(1.0)
    connect dend_94(0), dend_93(1.0)
    connect dend_65(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_104(0), dend_102(1.0)
    connect dend_103(0), dend_102(1.0)
    connect dend_101(0), dend_99(1.0)
    connect dend_100(0), dend_99(1.0)
    connect dend_96(0), dend_94(1.0)
    connect dend_95(0), dend_94(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_48(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_11(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_87(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_91(0), dend_87(1.0)
    connect dend_88(0), dend_87(1.0)
    connect dend_72(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_62(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_90(0), dend_88(1.0)
    connect dend_89(0), dend_88(1.0)
    connect dend_86(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_61(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_83(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_85(0), dend_83(1.0)
    connect dend_84(0), dend_83(1.0)
    connect dend_82(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_81(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_78(0), dend_76(1.0)
    connect dend_77(0), dend_76(1.0)
    connect dend_80(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.46438, -10.9587, 0.660551, 2.48146 ) }
    soma_0 { pt3dadd( -1.32683, -9.87667, 0.597834, 3.97794 ) }
    soma_0 { pt3dadd( -1.18928, -8.79467, 0.535117, 5.03907 ) }
    soma_0 { pt3dadd( -1.05173, -7.71267, 0.4724, 6.13889 ) }
    soma_0 { pt3dadd( -0.914177, -6.63067, 0.409682, 7.21767 ) }
    soma_0 { pt3dadd( -0.776625, -5.54866, 0.346965, 8.03623 ) }
    soma_0 { pt3dadd( -0.639073, -4.46666, 0.284248, 8.69756 ) }
    soma_0 { pt3dadd( -0.501522, -3.38466, 0.221531, 9.05897 ) }
    soma_0 { pt3dadd( -0.36397, -2.30266, 0.158814, 9.32273 ) }
    soma_0 { pt3dadd( -0.226418, -1.22066, 0.0960968, 9.64559 ) }
    soma_0 { pt3dadd( -0.0888665, -0.138661, 0.0333797, 9.88524 ) }
    soma_0 { pt3dadd( 0.0486852, 0.943339, -0.0293375, 9.94228 ) }
    soma_0 { pt3dadd( 0.186237, 2.02534, -0.0920546, 10.0768 ) }
    soma_0 { pt3dadd( 0.323789, 3.10734, -0.154772, 10.303 ) }
    soma_0 { pt3dadd( 0.46134, 4.18934, -0.217489, 10.477 ) }
    soma_0 { pt3dadd( 0.598892, 5.27134, -0.280206, 10.0133 ) }
    soma_0 { pt3dadd( 0.736444, 6.35334, -0.342923, 9.03357 ) }
    soma_0 { pt3dadd( 0.873996, 7.43534, -0.40564, 7.79644 ) }
    soma_0 { pt3dadd( 1.01155, 8.51734, -0.468357, 6.40893 ) }
    soma_0 { pt3dadd( 1.1491, 9.59934, -0.531074, 4.35077 ) }
    soma_0 { pt3dadd( 1.28665, 10.6813, -0.593792, 2.55388 ) }
    // Section: dend_92, id: dend_92, parent: soma_0 (entry count 21/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( 2.53825, -1.0616, -8.8572, 1.11 ) }
    dend_92 { pt3dadd( 2.57093, -1.6661, -8.93003, 1.11 ) }
    dend_92 { pt3dadd( 2.62673, -2.79559, -9.09871, 1.11 ) }
    dend_92 { pt3dadd( 2.66174, -3.4334, -9.21561, 1.03 ) }
    dend_92 { pt3dadd( 2.70689, -4.27401, -9.37752, 1.03 ) }
    dend_92 { pt3dadd( 2.74599, -5.3025, -9.6873, 1.03 ) }
    dend_92 { pt3dadd( 2.74672, -6.13544, -10.0093, 1.18 ) }
    dend_92 { pt3dadd( 2.72034, -6.94026, -10.3863, 1.18 ) }
    dend_92 { pt3dadd( 2.66556, -7.75485, -10.8498, 1.4 ) }
    dend_92 { pt3dadd( 2.59792, -8.22501, -11.2296, 1.55 ) }
    dend_92 { pt3dadd( 2.28413, -9.75097, -12.7635, 1.25 ) }
    dend_92 { pt3dadd( 2.09444, -10.5278, -13.7648, 1.25 ) }
    dend_92 { pt3dadd( 2.01356, -10.8601, -14.292, 1.47 ) }
    dend_92 { pt3dadd( 1.88253, -11.6066, -15.6033, 1.69 ) }
    dend_92 { pt3dadd( 1.74707, -13.1013, -18.3179, 1.69 ) }
    dend_92 { pt3dadd( 1.74721, -13.1212, -18.3537, 1.69 ) }
    dend_92 { pt3dadd( 1.88605, -14.4123, -20.5327, 1.33 ) }
    dend_92 { pt3dadd( 2.03949, -15.2842, -21.8749, 1.11 ) }
    dend_92 { pt3dadd( 2.19654, -16.1018, -22.9651, 1.25 ) }
    dend_92 { pt3dadd( 2.34549, -16.8997, -23.7626, 1.4 ) }
    dend_92 { pt3dadd( 2.40927, -17.445, -24.1229, 1.4 ) }
    dend_92 { pt3dadd( 2.40976, -18.1375, -24.5033, 1.33 ) }
    dend_92 { pt3dadd( 2.26955, -19.0724, -24.8592, 1.18 ) }
    dend_92 { pt3dadd( 2.05708, -19.7793, -25.126, 1.18 ) }
    dend_92 { pt3dadd( 1.70494, -20.6209, -25.5067, 1.33 ) }
    dend_92 { pt3dadd( 1.23101, -21.6919, -26.0651, 1.03 ) }
    dend_92 { pt3dadd( 0.905421, -22.496, -26.5057, 1.25 ) }
    dend_92 { pt3dadd( 0.736848, -23.0002, -26.7855, 1.62 ) }
    dend_92 { pt3dadd( 0.433497, -24.1635, -27.4211, 1.62 ) }
    dend_92 { pt3dadd( 0.284229, -24.9982, -27.8431, 1.03 ) }
    dend_92 { pt3dadd( 0.161082, -26.3843, -28.4443, 1.03 ) }
    dend_92 { pt3dadd( 0.147091, -27.4361, -28.8162, 1.18 ) }
    dend_92 { pt3dadd( 0.189886, -28.4212, -29.1107, 1.18 ) }
    dend_92 { pt3dadd( 0.218181, -28.7644, -29.2017, 1.55 ) }
    dend_92 { pt3dadd( 0.27524, -29.3445, -29.3216, 1.55 ) }
    dend_92 { pt3dadd( 0.343505, -30.138, -29.4896, 1.69 ) }
    dend_92 { pt3dadd( 0.392543, -30.9586, -29.7219, 1.84 ) }
    dend_92 { pt3dadd( 0.419093, -31.7062, -30.0065, 1.47 ) }
    dend_92 { pt3dadd( 0.443488, -32.7285, -30.447, 1.18 ) }
    dend_92 { pt3dadd( 0.443747, -33.608, -30.8649, 1.18 ) }
    dend_92 { pt3dadd( 0.423388, -34.6113, -31.3852, 1.18 ) }
    dend_92 { pt3dadd( 0.421165, -35.7269, -31.9164, 1.33 ) }
    dend_92 { pt3dadd( 0.470172, -36.6538, -32.2606, 1.03 ) }
    dend_92 { pt3dadd( 0.541899, -37.3637, -32.5075, 1.03 ) }
    dend_92 { pt3dadd( 0.646455, -38.1073, -32.7321, 1.03 ) }
    dend_92 { pt3dadd( 0.785734, -39.0424, -32.9949, 1.33 ) }
    dend_92 { pt3dadd( 1.02877, -40.9575, -33.5292, 1.33 ) }
    dend_92 { pt3dadd( 1.18732, -42.6398, -34.0514, 1.33 ) }
    dend_92 { pt3dadd( 1.26613, -43.838, -34.4791, 1.18 ) }
    dend_92 { pt3dadd( 1.30659, -44.521, -34.7577, 1.4 ) }
    dend_92 { pt3dadd( 1.39428, -45.7742, -35.3777, 1.4 ) }
    dend_92 { pt3dadd( 1.48916, -47.0852, -36.1497, 1.33 ) }
    dend_92 { pt3dadd( 1.57679, -48.2419, -36.9807, 1.18 ) }
    dend_92 { pt3dadd( 1.58136, -48.2852, -37.0144, 1.18 ) }
    dend_92 { pt3dadd( 1.69381, -49.0537, -37.6083, 1.47 ) }
    dend_92 { pt3dadd( 1.91189, -50.1549, -38.4837, 1.84 ) }
    dend_92 { pt3dadd( 2.0976, -50.8253, -39.0017, 1.62 ) }
    dend_92 { pt3dadd( 2.37984, -51.6314, -39.6006, 1.55 ) }
    dend_92 { pt3dadd( 2.72647, -52.5718, -40.295, 1.33 ) }
    dend_92 { pt3dadd( 2.99573, -53.3864, -40.9155, 1.62 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 81/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -0.511751, -10.1116, 0.0228061, 3.68 ) }
    dend_25 { pt3dadd( -0.491166, -10.1873, 0.0228061, 3.68 ) }
    dend_25 { pt3dadd( -0.323693, -10.8036, 0.0228061, 3.61 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 84/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.07825, 10.7084, 0.142806, 2.43 ) }
    dend_0 { pt3dadd( 1.50251, 11.595, 0.142806, 2.43 ) }
    dend_0 { pt3dadd( 2.30278, 13.2467, 0.142806, 2.14 ) }
    dend_0 { pt3dadd( 2.86073, 14.4354, 0.148366, 1.92 ) }
    dend_0 { pt3dadd( 3.06929, 14.893, 0.151787, 1.92 ) }
    dend_0 { pt3dadd( 3.37525, 15.5465, 0.157603, 1.92 ) }
    dend_0 { pt3dadd( 3.58143, 15.9733, 0.161587, 1.92 ) }
    dend_0 { pt3dadd( 3.90745, 16.6128, 0.16843, 1.92 ) }
    dend_0 { pt3dadd( 4.17094, 17.1137, 0.173938, 1.99 ) }
    dend_0 { pt3dadd( 4.56701, 17.8652, 0.18123, 1.99 ) }
    dend_0 { pt3dadd( 5.14965, 19.0313, 0.190613, 1.99 ) }
    dend_0 { pt3dadd( 5.62813, 20.0013, 0.197009, 1.99 ) }
    dend_0 { pt3dadd( 6.13361, 21.0743, 0.202181, 1.99 ) }
    dend_0 { pt3dadd( 6.68783, 22.3484, 0.181776, 2.21 ) }
    dend_0 { pt3dadd( 7.1556, 23.5742, 0.140286, 2.21 ) }
    dend_0 { pt3dadd( 7.45054, 24.4938, 0.082295, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 7.55184, 24.8945, 0.0402923, 1.99 ) }
    dend_0 { pt3dadd( 7.73332, 25.7903, -0.0792308, 1.99 ) }
    dend_0 { pt3dadd( 7.9082, 26.9397, -0.251344, 2.06 ) }
    dend_0 { pt3dadd( 8.06887, 28.3774, -0.504678, 1.92 ) }
    dend_0 { pt3dadd( 8.18937, 29.7672, -0.792206, 1.92 ) }
    dend_0 { pt3dadd( 8.30985, 31.3193, -1.1725, 1.99 ) }
    dend_0 { pt3dadd( 8.36373, 32.1338, -1.40408, 2.14 ) }
    dend_0 { pt3dadd( 8.44979, 33.4972, -1.81109, 2.14 ) }
    dend_0 { pt3dadd( 8.54973, 35.1772, -2.33057, 1.99 ) }
    dend_0 { pt3dadd( 8.5962, 36.2007, -2.68042, 2.06 ) }
    dend_0 { pt3dadd( 8.61553, 37.4245, -3.12313, 2.43 ) }
    dend_0 { pt3dadd( 8.6174, 38.3743, -3.50594, 2.65 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 12/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.28665, 10.6813, -0.593792, 0.551478 ) }
    axon_0 { pt3dadd( 3.17833, 25.5615, -0.593792, 0.551478 ) }
    axon_0 { pt3dadd( 5.07001, 40.4418, -0.593792, 0.551478 ) }
    // Section: dend_98, id: dend_98, parent: dend_92 (entry count 15/100)
    dend_98 { pt3dclear() }
    dend_98 { pt3dadd( 2.99573, -53.3864, -40.9155, 0.52 ) }
    dend_98 { pt3dadd( 2.11017, -54.4999, -42.1519, 0.52 ) }
    dend_98 { pt3dadd( 1.52875, -55.4266, -43.1133, 0.52 ) }
    dend_98 { pt3dadd( 1.22877, -56.1608, -43.8457, 0.52 ) }
    dend_98 { pt3dadd( 0.975841, -57.2744, -44.9405, 0.52 ) }
    dend_98 { pt3dadd( 0.924664, -57.8315, -45.494, 1.11 ) }
    dend_98 { pt3dadd( 0.911121, -58.5109, -46.1362, 1.4 ) }
    dend_98 { pt3dadd( 1.01495, -59.0393, -46.5894, 1.69 ) }
    dend_98 { pt3dadd( 1.34684, -60.0393, -47.3871, 1.62 ) }
    dend_98 { pt3dadd( 1.69277, -60.8589, -48.0193, 1.4 ) }
    dend_98 { pt3dadd( 2.20136, -61.9534, -48.8195, 0.88 ) }
    dend_98 { pt3dadd( 2.52128, -62.6438, -49.3205, 0.66 ) }
    dend_98 { pt3dadd( 2.96598, -63.6412, -49.9896, 0.66 ) }
    dend_98 { pt3dadd( 3.22377, -64.2428, -50.3902, 0.88 ) }
    dend_98 { pt3dadd( 3.51365, -64.9553, -50.8264, 1.11 ) }
    dend_98 { pt3dadd( 3.77705, -65.5524, -51.1585, 1.18 ) }
    dend_98 { pt3dadd( 4.0642, -66.1265, -51.4528, 1.18 ) }
    dend_98 { pt3dadd( 4.30772, -66.563, -51.7065, 1.18 ) }
    // Section: dend_93, id: dend_93, parent: dend_92 (entry count 33/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( 2.99573, -53.3864, -40.9155, 0.66 ) }
    dend_93 { pt3dadd( 2.65555, -54.4713, -40.4363, 0.66 ) }
    dend_93 { pt3dadd( 2.29874, -55.2498, -40.0099, 0.52 ) }
    dend_93 { pt3dadd( 2.26721, -55.3059, -39.9794, 0.52 ) }
    dend_93 { pt3dadd( 1.65847, -56.2732, -39.4452, 0.74 ) }
    dend_93 { pt3dadd( 1.059, -57.2036, -38.9717, 0.88 ) }
    dend_93 { pt3dadd( 0.604716, -57.9034, -38.6019, 0.74 ) }
    dend_93 { pt3dadd( -0.0335281, -58.836, -38.0403, 0.37 ) }
    dend_93 { pt3dadd( -0.480723, -59.5243, -37.591, 1.18 ) }
    dend_93 { pt3dadd( -0.921294, -60.3237, -37.0558, 1.4 ) }
    dend_93 { pt3dadd( -1.34403, -61.2363, -36.4328, 0.96 ) }
    dend_93 { pt3dadd( -1.64064, -62.2049, -35.6544, 0.74 ) }
    dend_93 { pt3dadd( -1.78629, -63.1768, -34.7422, 0.29 ) }
    dend_93 { pt3dadd( -1.80123, -64.0822, -33.8358, 0.74 ) }
    dend_93 { pt3dadd( -1.74976, -64.6867, -33.2059, 0.96 ) }
    dend_93 { pt3dadd( -1.74343, -64.7294, -33.1636, 0.96 ) }
    dend_93 { pt3dadd( -1.47509, -66.4214, -31.6541, 0.59 ) }
    dend_93 { pt3dadd( -1.39294, -67.1945, -31.1294, 1.11 ) }
    dend_93 { pt3dadd( -1.37291, -67.8312, -30.795, 1.25 ) }
    dend_93 { pt3dadd( -1.4311, -68.4813, -30.555, 1.18 ) }
    dend_93 { pt3dadd( -1.65766, -69.6348, -30.209, 0.81 ) }
    dend_93 { pt3dadd( -1.93059, -70.6362, -29.9765, 0.59 ) }
    dend_93 { pt3dadd( -2.31295, -71.708, -29.8244, 0.44 ) }
    dend_93 { pt3dadd( -2.34408, -71.7843, -29.8133, 0.44 ) }
    dend_93 { pt3dadd( -2.73775, -72.5848, -29.6588, 0.29 ) }
    dend_93 { pt3dadd( -3.43058, -73.782, -29.3837, 0.29 ) }
    dend_93 { pt3dadd( -3.88545, -74.5147, -29.1979, 0.81 ) }
    dend_93 { pt3dadd( -4.22605, -75.0971, -29.0529, 1.33 ) }
    dend_93 { pt3dadd( -4.55902, -75.7538, -28.9461, 1.33 ) }
    dend_93 { pt3dadd( -5.01407, -76.8709, -28.9224, 0.96 ) }
    dend_93 { pt3dadd( -5.24332, -77.6606, -29.0147, 0.81 ) }
    dend_93 { pt3dadd( -5.40596, -78.5157, -29.2176, 0.81 ) }
    dend_93 { pt3dadd( -5.53543, -79.5622, -29.5411, 0.74 ) }
    dend_93 { pt3dadd( -5.63447, -80.962, -30.0375, 0.44 ) }
    dend_93 { pt3dadd( -5.6746, -82.2174, -30.5623, 0.66 ) }
    dend_93 { pt3dadd( -5.68175, -83.0273, -30.9499, 0.74 ) }
    dend_93 { pt3dadd( -5.70328, -83.7614, -31.3069, 1.03 ) }
    dend_93 { pt3dadd( -5.77321, -84.6188, -31.7114, 1.25 ) }
    dend_93 { pt3dadd( -5.90566, -85.5201, -32.0868, 1.11 ) }
    dend_93 { pt3dadd( -6.12958, -86.625, -32.4694, 0.59 ) }
    dend_93 { pt3dadd( -6.3367, -87.5257, -32.7422, 0.59 ) }
    dend_93 { pt3dadd( -6.56853, -88.4729, -33.0408, 0.66 ) }
    dend_93 { pt3dadd( -6.73865, -89.1601, -33.2535, 0.66 ) }
    dend_93 { pt3dadd( -6.97849, -90.2117, -33.5473, 0.52 ) }
    dend_93 { pt3dadd( -7.17255, -91.1869, -33.814, 0.52 ) }
    dend_93 { pt3dadd( -7.301, -92.0446, -34.0249, 0.59 ) }
    dend_93 { pt3dadd( -7.40765, -93.1487, -34.3252, 1.25 ) }
    dend_93 { pt3dadd( -7.42932, -93.5729, -34.453, 1.4 ) }
    dend_93 { pt3dadd( -7.43961, -94.3397, -34.6964, 1.4 ) }
    dend_93 { pt3dadd( -7.44099, -95.4595, -35.0042, 0.88 ) }
    dend_93 { pt3dadd( -7.44501, -96.176, -35.1611, 0.52 ) }
    dend_93 { pt3dadd( -7.50092, -97.4205, -35.3738, 0.52 ) }
    dend_93 { pt3dadd( -7.59106, -98.2023, -35.3831, 0.52 ) }
    dend_93 { pt3dadd( -7.60617, -98.2831, -35.3709, 0.52 ) }
    dend_93 { pt3dadd( -7.88125, -99.4906, -34.9626, 0.52 ) }
    dend_93 { pt3dadd( -7.89528, -99.554, -34.9334, 0.52 ) }
    dend_93 { pt3dadd( -8.00198, -100.072, -34.6649, 0.96 ) }
    dend_93 { pt3dadd( -8.23179, -101.46, -33.8958, 1.33 ) }
    dend_93 { pt3dadd( -8.3579, -102.512, -33.3682, 0.66 ) }
    dend_93 { pt3dadd( -8.45325, -103.536, -32.9324, 0.59 ) }
    dend_93 { pt3dadd( -8.52365, -104.531, -32.6019, 0.74 ) }
    dend_93 { pt3dadd( -8.52999, -104.611, -32.5798, 0.74 ) }
    dend_93 { pt3dadd( -8.60831, -105.454, -32.4086, 0.74 ) }
    dend_93 { pt3dadd( -8.70266, -106.129, -32.3368, 1.03 ) }
    dend_93 { pt3dadd( -8.83587, -106.68, -32.2887, 1.25 ) }
    dend_93 { pt3dadd( -9.07079, -107.384, -32.25, 1.18 ) }
    dend_93 { pt3dadd( -9.33922, -108.032, -32.2206, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_93 { pt3dadd( -9.65268, -108.691, -32.2003, 0.29 ) }
    dend_93 { pt3dadd( -9.94836, -109.239, -32.1938, 0.29 ) }
    dend_93 { pt3dadd( -10.1871, -109.658, -32.192, 0.81 ) }
    dend_93 { pt3dadd( -10.3942, -110.021, -32.1936, 1.11 ) }
    dend_93 { pt3dadd( -10.6922, -110.59, -32.2021, 1.11 ) }
    dend_93 { pt3dadd( -10.9927, -111.314, -32.2156, 0.59 ) }
    dend_93 { pt3dadd( -11.0108, -111.393, -32.2172, 0.59 ) }
    dend_93 { pt3dadd( -11.0299, -112.094, -32.2318, 0.44 ) }
    dend_93 { pt3dadd( -11.017, -112.165, -32.2331, 0.44 ) }
    dend_93 { pt3dadd( -10.7543, -112.866, -32.2444, 0.44 ) }
    dend_93 { pt3dadd( -10.4494, -113.45, -32.2657, 0.81 ) }
    dend_93 { pt3dadd( -10.0886, -114.05, -32.295, 1.11 ) }
    dend_93 { pt3dadd( -9.85937, -114.426, -32.3307, 1.11 ) }
    dend_93 { pt3dadd( -9.54486, -114.955, -32.4097, 0.88 ) }
    dend_93 { pt3dadd( -9.28401, -115.445, -32.4998, 0.66 ) }
    dend_93 { pt3dadd( -8.98018, -116.095, -32.6375, 0.66 ) }
    dend_93 { pt3dadd( -8.71449, -116.769, -32.786, 0.44 ) }
    dend_93 { pt3dadd( -8.47882, -117.502, -32.9429, 0.29 ) }
    dend_93 { pt3dadd( -8.2789, -118.337, -33.107, 0.88 ) }
    dend_93 { pt3dadd( -8.17882, -118.979, -33.2118, 0.88 ) }
    dend_93 { pt3dadd( -8.14095, -119.5, -33.2767, 0.88 ) }
    dend_93 { pt3dadd( -8.13765, -120.239, -33.3361, 0.74 ) }
    dend_93 { pt3dadd( -8.17045, -120.983, -33.3717, 0.37 ) }
    dend_93 { pt3dadd( -8.21888, -121.679, -33.3764, 0.29 ) }
    dend_93 { pt3dadd( -8.29669, -122.697, -33.3649, 0.29 ) }
    dend_93 { pt3dadd( -8.35674, -123.529, -33.3556, 0.81 ) }
    dend_93 { pt3dadd( -8.39763, -124.297, -33.3479, 1.03 ) }
    dend_93 { pt3dadd( -8.39811, -124.38, -33.3472, 1.03 ) }
    dend_93 { pt3dadd( -8.35709, -125.039, -33.3431, 1.18 ) }
    dend_93 { pt3dadd( -8.27984, -125.776, -33.3405, 1.33 ) }
    dend_93 { pt3dadd( -8.19379, -126.419, -33.3404, 1.33 ) }
    dend_93 { pt3dadd( -8.04436, -127.397, -33.3497, 0.59 ) }
    dend_93 { pt3dadd( -7.89747, -128.364, -33.3655, 0.44 ) }
    dend_93 { pt3dadd( -7.77488, -129.226, -33.3837, 0.44 ) }
    dend_93 { pt3dadd( -7.66738, -130.016, -33.4009, 0.81 ) }
    dend_93 { pt3dadd( -7.55539, -130.903, -33.4202, 1.11 ) }
    dend_93 { pt3dadd( -7.4762, -131.72, -33.4374, 1.11 ) }
    dend_93 { pt3dadd( -7.46309, -132.234, -33.4481, 1.25 ) }
    dend_93 { pt3dadd( -7.52634, -133.054, -33.4635, 1.11 ) }
    dend_93 { pt3dadd( -7.69454, -134.073, -33.5023, 0.66 ) }
    dend_93 { pt3dadd( -7.85797, -134.8, -33.5417, 0.37 ) }
    dend_93 { pt3dadd( -8.06855, -135.497, -33.5884, 0.29 ) }
    dend_93 { pt3dadd( -8.38071, -136.498, -33.6607, 0.37 ) }
    dend_93 { pt3dadd( -8.54887, -137.208, -33.7525, 0.52 ) }
    dend_93 { pt3dadd( -8.63097, -137.961, -33.8601, 0.88 ) }
    dend_93 { pt3dadd( -8.6185, -138.471, -33.9346, 1.03 ) }
    dend_93 { pt3dadd( -8.5851, -138.692, -33.9661, 1.03 ) }
    dend_93 { pt3dadd( -8.35478, -139.831, -34.0417, 0.74 ) }
    dend_93 { pt3dadd( -8.07442, -141.125, -34.0562, 0.59 ) }
    dend_93 { pt3dadd( -7.87229, -142.145, -34.0361, 0.59 ) }
    dend_93 { pt3dadd( -7.77607, -142.689, -33.9833, 1.4 ) }
    dend_93 { pt3dadd( -7.67379, -143.307, -33.8979, 1.77 ) }
    dend_93 { pt3dadd( -7.42659, -145.011, -33.5564, 0.81 ) }
    dend_93 { pt3dadd( -7.32834, -145.883, -33.3238, 0.81 ) }
    dend_93 { pt3dadd( -7.2235, -147.082, -32.8898, 0.81 ) }
    dend_93 { pt3dadd( -7.10486, -148.251, -32.423, 1.11 ) }
    dend_93 { pt3dadd( -7.0261, -148.828, -32.1717, 1.11 ) }
    dend_93 { pt3dadd( -6.86235, -149.737, -31.7568, 0.88 ) }
    dend_93 { pt3dadd( -6.84097, -149.844, -31.7054, 0.88 ) }
    dend_93 { pt3dadd( -6.7096, -150.747, -31.2524, 0.59 ) }
    dend_93 { pt3dadd( -6.66459, -151.686, -30.8043, 0.59 ) }
    dend_93 { pt3dadd( -6.66286, -152.428, -30.4914, 0.52 ) }
    dend_93 { pt3dadd( -6.68343, -153.063, -30.2354, 0.52 ) }
    dend_93 { pt3dadd( -6.75102, -154.564, -29.7072, 0.74 ) }
    dend_93 { pt3dadd( -6.79146, -155.255, -29.4841, 1.33 ) }
    dend_93 { pt3dadd( -6.87175, -156.157, -29.2352, 1.69 ) }
    // Section: dend_41, id: dend_41, parent: dend_25 (entry count 66/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -0.323693, -10.8036, 0.0228061, 2.73 ) }
    dend_41 { pt3dadd( 0.0171279, -13.334, -0.0310105, 2.73 ) }
    dend_41 { pt3dadd( 0.33424, -15.9217, -0.0820551, 2.14 ) }
    dend_41 { pt3dadd( 0.552781, -17.9599, -0.118296, 2.14 ) }
    dend_41 { pt3dadd( 0.774749, -20.2931, -0.1562, 2.28 ) }
    dend_41 { pt3dadd( 0.963164, -22.5227, -0.217201, 2.14 ) }
    dend_41 { pt3dadd( 1.19912, -25.4138, -0.314694, 1.92 ) }
    dend_41 { pt3dadd( 1.33417, -27.5381, -0.420842, 2.06 ) }
    dend_41 { pt3dadd( 1.46624, -30.4916, -0.603669, 1.84 ) }
    dend_41 { pt3dadd( 1.50304, -33.2461, -0.833745, 1.84 ) }
    dend_41 { pt3dadd( 1.47948, -35.3232, -1.04295, 1.84 ) }
    dend_41 { pt3dadd( 1.37399, -37.9392, -1.36538, 1.92 ) }
    dend_41 { pt3dadd( 1.16036, -40.4512, -1.76617, 1.92 ) }
    dend_41 { pt3dadd( 0.859051, -42.521, -2.16602, 1.92 ) }
    dend_41 { pt3dadd( 0.388627, -44.5991, -2.60289, 1.84 ) }
    dend_41 { pt3dadd( -0.259146, -46.8214, -3.08882, 1.84 ) }
    dend_41 { pt3dadd( -0.739687, -48.1586, -3.39088, 1.77 ) }
    dend_41 { pt3dadd( -1.88357, -50.943, -4.05299, 1.69 ) }
    dend_41 { pt3dadd( -3.1928, -53.8523, -4.7494, 1.69 ) }
    dend_41 { pt3dadd( -4.34478, -56.2226, -5.34028, 1.84 ) }
    dend_41 { pt3dadd( -4.38982, -56.3058, -5.35989, 1.84 ) }
    dend_41 { pt3dadd( -5.07014, -57.3937, -5.62604, 2.06 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 88/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -0.323693, -10.8036, 0.0228061, 0.96 ) }
    dend_26 { pt3dadd( -0.0901416, -12.5476, -0.942888, 0.96 ) }
    dend_26 { pt3dadd( 0.00741105, -14.3024, -1.77569, 1.25 ) }
    dend_26 { pt3dadd( -0.0388987, -16.3771, -2.64629, 0.96 ) }
    dend_26 { pt3dadd( -0.188185, -17.7311, -3.09636, 1.25 ) }
    dend_26 { pt3dadd( -0.361503, -18.6896, -3.3747, 1.47 ) }
    dend_26 { pt3dadd( -0.63217, -19.929, -3.70798, 1.11 ) }
    dend_26 { pt3dadd( -1.10127, -21.5233, -4.03411, 0.96 ) }
    dend_26 { pt3dadd( -1.70019, -23.0484, -4.27548, 1.11 ) }
    dend_26 { pt3dadd( -2.62857, -24.9804, -4.56917, 1.11 ) }
    dend_26 { pt3dadd( -3.30188, -26.2331, -4.80678, 1.11 ) }
    dend_26 { pt3dadd( -3.35868, -26.3295, -4.82873, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_26 { pt3dadd( -4.13542, -27.4943, -5.16526, 0.96 ) }
    dend_26 { pt3dadd( -4.1711, -27.5428, -5.18454, 0.96 ) }
    dend_26 { pt3dadd( -4.87748, -28.3828, -5.65658, 1.03 ) }
    dend_26 { pt3dadd( -5.37587, -28.9594, -6.07217, 1.25 ) }
    dend_26 { pt3dadd( -5.42348, -29.0192, -6.11355, 1.25 ) }
    dend_26 { pt3dadd( -6.08452, -29.8976, -6.70394, 0.88 ) }
    dend_26 { pt3dadd( -6.70192, -30.788, -7.28003, 0.88 ) }
    dend_26 { pt3dadd( -7.46078, -31.9963, -8.05793, 1.11 ) }
    dend_26 { pt3dadd( -8.03833, -33.031, -8.69714, 1.11 ) }
    dend_26 { pt3dadd( -8.57128, -34.0829, -9.3274, 1.25 ) }
    dend_26 { pt3dadd( -8.61956, -34.1958, -9.38805, 1.25 ) }
    dend_26 { pt3dadd( -9.03418, -35.472, -10.0028, 0.96 ) }
    dend_26 { pt3dadd( -9.38133, -36.8054, -10.5734, 0.96 ) }
    dend_26 { pt3dadd( -9.62396, -37.9213, -11.0082, 1.03 ) }
    dend_26 { pt3dadd( -9.64122, -38.0011, -11.0378, 1.03 ) }
    dend_26 { pt3dadd( -9.9566, -39.3903, -11.535, 1.03 ) }
    dend_26 { pt3dadd( -10.2147, -40.4757, -11.8949, 1.03 ) }
    dend_26 { pt3dadd( -10.4615, -41.4446, -12.1635, 1.25 ) }
    dend_26 { pt3dadd( -10.7398, -42.468, -12.3926, 1.62 ) }
    dend_26 { pt3dadd( -11.2005, -44.0046, -12.7017, 1.25 ) }
    dend_26 { pt3dadd( -11.5712, -45.1345, -12.9083, 1.18 ) }
    dend_26 { pt3dadd( -11.8982, -45.9516, -13.0241, 1.18 ) }
    dend_26 { pt3dadd( -12.3619, -46.947, -13.1137, 1.33 ) }
    dend_26 { pt3dadd( -12.9736, -48.0863, -13.1911, 1.33 ) }
    dend_26 { pt3dadd( -13.5478, -49.0805, -13.2634, 1.03 ) }
    dend_26 { pt3dadd( -13.583, -49.1369, -13.2681, 1.03 ) }
    dend_26 { pt3dadd( -14.2067, -50.1806, -13.4296, 0.81 ) }
    dend_26 { pt3dadd( -14.6315, -50.9832, -13.6468, 0.66 ) }
    dend_26 { pt3dadd( -14.9898, -51.8004, -14.0048, 0.81 ) }
    dend_26 { pt3dadd( -15.332, -52.8192, -14.6327, 1.03 ) }
    dend_26 { pt3dadd( -15.4668, -53.3771, -15.0392, 1.33 ) }
    dend_26 { pt3dadd( -15.5581, -54.1282, -15.6212, 1.62 ) }
    dend_26 { pt3dadd( -15.5741, -55.015, -16.3164, 1.55 ) }
    dend_26 { pt3dadd( -15.5469, -56.0109, -17.0419, 1.18 ) }
    dend_26 { pt3dadd( -15.5095, -57.202, -17.8146, 0.96 ) }
    dend_26 { pt3dadd( -15.5085, -57.2686, -17.8526, 0.96 ) }
    dend_26 { pt3dadd( -15.5036, -58.8167, -18.6258, 0.88 ) }
    dend_26 { pt3dadd( -15.541, -60.1534, -19.18, 0.88 ) }
    dend_26 { pt3dadd( -15.5887, -61.3247, -19.5588, 1.18 ) }
    dend_26 { pt3dadd( -15.6343, -62.5068, -19.8701, 1.4 ) }
    dend_26 { pt3dadd( -15.7, -63.824, -20.192, 1.4 ) }
    dend_26 { pt3dadd( -15.7683, -64.7361, -20.4449, 1.18 ) }
    dend_26 { pt3dadd( -15.9, -65.7821, -20.7736, 0.96 ) }
    dend_26 { pt3dadd( -16.0646, -66.7223, -21.1434, 1.11 ) }
    dend_26 { pt3dadd( -16.3356, -67.8971, -21.7779, 0.88 ) }
    dend_26 { pt3dadd( -16.5754, -68.798, -22.3346, 0.74 ) }
    dend_26 { pt3dadd( -16.8837, -69.691, -22.9819, 0.96 ) }
    dend_26 { pt3dadd( -17.1298, -70.2715, -23.4893, 1.25 ) }
    dend_26 { pt3dadd( -17.5148, -70.985, -24.2603, 1.33 ) }
    dend_26 { pt3dadd( -18.0549, -71.7178, -25.2451, 1.4 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 50/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 8.6174, 38.3743, -3.50594, 1.4 ) }
    dend_14 { pt3dadd( 7.99379, 40.0224, -3.69628, 1.4 ) }
    dend_14 { pt3dadd( 7.65183, 41.1658, -3.77342, 1.4 ) }
    dend_14 { pt3dadd( 7.27772, 42.815, -3.68251, 1.25 ) }
    dend_14 { pt3dadd( 7.2382, 43.0717, -3.62947, 1.25 ) }
    dend_14 { pt3dadd( 7.15134, 43.8452, -3.40656, 1.03 ) }
    dend_14 { pt3dadd( 7.06538, 44.7741, -3.10521, 1.03 ) }
    dend_14 { pt3dadd( 7.05536, 45.664, -2.73828, 1.18 ) }
    dend_14 { pt3dadd( 7.11383, 47.0444, -1.94859, 1.33 ) }
    dend_14 { pt3dadd( 7.22812, 48.2886, -1.05368, 1.33 ) }
    dend_14 { pt3dadd( 7.32912, 49.1594, -0.394693, 1.47 ) }
    dend_14 { pt3dadd( 7.42271, 49.8015, 0.089724, 1.47 ) }
    dend_14 { pt3dadd( 7.57613, 50.6942, 0.71054, 1.47 ) }
    dend_14 { pt3dadd( 7.94446, 52.6387, 1.88611, 1.4 ) }
    dend_14 { pt3dadd( 8.19562, 53.8698, 2.49959, 1.4 ) }
    dend_14 { pt3dadd( 8.37081, 54.688, 2.83021, 1.4 ) }
    dend_14 { pt3dadd( 8.63401, 55.8245, 3.21344, 1.62 ) }
    dend_14 { pt3dadd( 8.94401, 57.1504, 3.55991, 1.18 ) }
    dend_14 { pt3dadd( 9.19444, 58.239, 3.73093, 1.18 ) }
    dend_14 { pt3dadd( 9.21353, 58.3271, 3.73423, 1.18 ) }
    dend_14 { pt3dadd( 9.49016, 59.7914, 3.75682, 1.18 ) }
    dend_14 { pt3dadd( 9.68337, 60.9668, 3.78788, 1.47 ) }
    dend_14 { pt3dadd( 9.73588, 61.3356, 3.80094, 1.47 ) }
    dend_14 { pt3dadd( 9.90451, 62.586, 3.85021, 1.4 ) }
    dend_14 { pt3dadd( 10.084, 63.9101, 3.90481, 1.33 ) }
    dend_14 { pt3dadd( 10.2956, 65.4976, 3.97415, 1.33 ) }
    dend_14 { pt3dadd( 10.4827, 66.9905, 4.04811, 1.62 ) }
    dend_14 { pt3dadd( 10.5969, 68.0772, 4.11114, 1.92 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 78/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 8.6174, 38.3743, -3.50594, 1.18 ) }
    dend_1 { pt3dadd( 9.44132, 38.6252, -3.00868, 1.18 ) }
    dend_1 { pt3dadd( 10.1633, 38.8255, -2.40353, 0.96 ) }
    dend_1 { pt3dadd( 10.5542, 38.9264, -2.06003, 1.25 ) }
    dend_1 { pt3dadd( 10.5976, 38.9407, -2.01663, 1.25 ) }
    dend_1 { pt3dadd( 11.2254, 39.1775, -1.38522, 1.25 ) }
    dend_1 { pt3dadd( 11.8101, 39.4393, -0.806594, 1.25 ) }
    dend_1 { pt3dadd( 12.8669, 39.9406, 0.233575, 1.18 ) }
    dend_1 { pt3dadd( 13.3584, 40.2059, 0.705888, 0.81 ) }
    dend_1 { pt3dadd( 14.0344, 40.633, 1.36166, 0.96 ) }
    dend_1 { pt3dadd( 14.5609, 41.0323, 1.83353, 0.96 ) }
    dend_1 { pt3dadd( 14.9889, 41.4523, 2.15551, 0.96 ) }
    dend_1 { pt3dadd( 15.0199, 41.486, 2.17066, 0.96 ) }
    dend_1 { pt3dadd( 15.5687, 42.0655, 2.28229, 0.96 ) }
    dend_1 { pt3dadd( 15.6067, 42.106, 2.2863, 0.96 ) }
    dend_1 { pt3dadd( 16.1238, 42.633, 2.2916, 1.18 ) }
    dend_1 { pt3dadd( 16.7961, 43.3129, 2.29357, 1.4 ) }
    dend_1 { pt3dadd( 17.3542, 43.8522, 2.30084, 1.33 ) }
    dend_1 { pt3dadd( 17.4172, 43.9122, 2.30589, 1.33 ) }
    dend_1 { pt3dadd( 18.0247, 44.4629, 2.40612, 1.18 ) }
    dend_1 { pt3dadd( 18.1252, 44.5465, 2.44145, 1.18 ) }
    dend_1 { pt3dadd( 18.5519, 44.8757, 2.66907, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_1 { pt3dadd( 18.6588, 44.9543, 2.7566, 1.18 ) }
    dend_1 { pt3dadd( 19.1738, 45.334, 3.29044, 0.96 ) }
    dend_1 { pt3dadd( 19.655, 45.7012, 3.85113, 0.96 ) }
    dend_1 { pt3dadd( 20.2905, 46.2473, 4.70578, 1.03 ) }
    dend_1 { pt3dadd( 20.3369, 46.2939, 4.76968, 1.03 ) }
    dend_1 { pt3dadd( 21.0242, 47.1158, 5.70847, 1.03 ) }
    dend_1 { pt3dadd( 21.0672, 47.1706, 5.76864, 1.03 ) }
    dend_1 { pt3dadd( 21.3072, 47.52, 6.11423, 1.03 ) }
    dend_1 { pt3dadd( 21.6206, 48.0637, 6.5732, 1.18 ) }
    dend_1 { pt3dadd( 22.0351, 48.8775, 7.04547, 1.4 ) }
    dend_1 { pt3dadd( 22.3878, 49.5769, 7.36029, 1.62 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 11/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 5.07001, 40.4418, -0.593792, 0.15 ) }
    axon_1 { pt3dadd( 6.9617, 55.322, -0.593792, 0.15 ) }
    axon_1 { pt3dadd( 8.85338, 70.2023, -0.593792, 0.15 ) }
    // Section: dend_102, id: dend_102, parent: dend_98 (entry count 14/100)
    dend_102 { pt3dclear() }
    dend_102 { pt3dadd( 4.30772, -66.563, -51.7065, 0.52 ) }
    dend_102 { pt3dadd( 3.51338, -67.1333, -52.2666, 0.52 ) }
    dend_102 { pt3dadd( 2.51787, -67.8993, -52.9042, 0.52 ) }
    dend_102 { pt3dadd( 2.1385, -68.2436, -53.1769, 0.96 ) }
    dend_102 { pt3dadd( 1.35261, -69.1228, -53.8778, 1.33 ) }
    dend_102 { pt3dadd( 0.947567, -69.6828, -54.3103, 0.81 ) }
    dend_102 { pt3dadd( 0.489339, -70.5107, -54.9155, 0.52 ) }
    dend_102 { pt3dadd( 0.477396, -70.5597, -54.9457, 0.52 ) }
    dend_102 { pt3dadd( 0.564666, -71.6878, -55.6783, 0.88 ) }
    dend_102 { pt3dadd( 0.827254, -72.5167, -56.2648, 1.25 ) }
    dend_102 { pt3dadd( 1.06488, -72.9661, -56.6144, 1.47 ) }
    dend_102 { pt3dadd( 1.46605, -73.5629, -57.1363, 1.47 ) }
    dend_102 { pt3dadd( 1.99377, -74.2238, -57.7506, 0.88 ) }
    dend_102 { pt3dadd( 2.79851, -75.1767, -58.6717, 0.88 ) }
    dend_102 { pt3dadd( 3.21324, -75.6527, -59.1794, 0.37 ) }
    dend_102 { pt3dadd( 3.63816, -76.2117, -59.7999, 0.66 ) }
    dend_102 { pt3dadd( 3.66532, -76.2598, -59.8564, 0.66 ) }
    dend_102 { pt3dadd( 3.7758, -76.588, -60.2345, 0.96 ) }
    dend_102 { pt3dadd( 3.88388, -77.4912, -61.1571, 1.11 ) }
    dend_102 { pt3dadd( 3.78171, -78.8078, -62.2443, 0.44 ) }
    dend_102 { pt3dadd( 3.65476, -79.5235, -62.7527, 0.44 ) }
    dend_102 { pt3dadd( 3.42117, -80.5953, -63.4736, 0.52 ) }
    dend_102 { pt3dadd( 3.28758, -81.1867, -63.8712, 0.74 ) }
    dend_102 { pt3dadd( 3.11094, -81.845, -64.2786, 0.74 ) }
    dend_102 { pt3dadd( 2.85237, -82.6737, -64.7753, 1.03 ) }
    dend_102 { pt3dadd( 2.46231, -84.0545, -65.6396, 0.88 ) }
    dend_102 { pt3dadd( 2.16382, -85.3848, -66.5393, 1.18 ) }
    dend_102 { pt3dadd( 1.97486, -86.6601, -67.5188, 0.96 ) }
    dend_102 { pt3dadd( 1.90837, -87.6918, -68.5291, 0.59 ) }
    dend_102 { pt3dadd( 1.89226, -88.8295, -69.8439, 0.29 ) }
    dend_102 { pt3dadd( 1.9103, -89.6644, -70.9294, 0.88 ) }
    dend_102 { pt3dadd( 1.91239, -89.9099, -71.2734, 1.47 ) }
    dend_102 { pt3dadd( 1.91082, -90.9313, -72.7259, 1.33 ) }
    dend_102 { pt3dadd( 1.8642, -92.4571, -74.8613, 0.52 ) }
    dend_102 { pt3dadd( 1.83322, -92.8656, -75.3966, 0.29 ) }
    dend_102 { pt3dadd( 1.76797, -93.225, -75.7662, 0.96 ) }
    dend_102 { pt3dadd( 1.47785, -94.2384, -76.6163, 1.77 ) }
    dend_102 { pt3dadd( 1.35393, -94.6663, -76.9533, 1.77 ) }
    dend_102 { pt3dadd( 1.07278, -95.6136, -77.5961, 1.11 ) }
    dend_102 { pt3dadd( 0.887679, -96.389, -78.2049, 0.37 ) }
    dend_102 { pt3dadd( 0.82072, -96.9144, -78.8239, 0.29 ) }
    dend_102 { pt3dadd( 0.787642, -97.6811, -79.9418, 0.74 ) }
    dend_102 { pt3dadd( 0.867549, -98.7749, -81.7516, 1.33 ) }
    dend_102 { pt3dadd( 0.872353, -98.8076, -81.8117, 1.33 ) }
    dend_102 { pt3dadd( 1.09659, -99.7977, -83.8981, 1.55 ) }
    dend_102 { pt3dadd( 1.41542, -101.043, -86.7104, 0.96 ) }
    dend_102 { pt3dadd( 1.42214, -101.073, -86.7783, 0.96 ) }
    dend_102 { pt3dadd( 1.47967, -101.461, -87.5595, 1.18 ) }
    dend_102 { pt3dadd( 1.48229, -101.491, -87.6105, 1.18 ) }
    dend_102 { pt3dadd( 1.50288, -102.744, -89.2877, 0.44 ) }
    dend_102 { pt3dadd( 1.40073, -103.422, -89.8888, 0.37 ) }
    dend_102 { pt3dadd( 1.25633, -104.0, -90.4513, 0.52 ) }
    dend_102 { pt3dadd( 1.13959, -104.453, -90.9917, 0.81 ) }
    dend_102 { pt3dadd( 1.00858, -104.992, -91.6711, 1.33 ) }
    dend_102 { pt3dadd( 0.940573, -105.359, -92.1453, 0.96 ) }
    dend_102 { pt3dadd( 0.829448, -106.515, -93.6727, 1.25 ) }
    dend_102 { pt3dadd( 0.851931, -108.91, -96.9447, 0.52 ) }
    dend_102 { pt3dadd( 0.961409, -110.026, -98.545, 0.44 ) }
    dend_102 { pt3dadd( 1.07359, -110.579, -99.3657, 0.59 ) }
    dend_102 { pt3dadd( 1.3594, -111.494, -100.757, 0.59 ) }
    dend_102 { pt3dadd( 1.75508, -112.364, -102.065, 0.74 ) }
    dend_102 { pt3dadd( 2.04222, -112.814, -102.688, 1.18 ) }
    dend_102 { pt3dadd( 2.07412, -112.856, -102.732, 1.18 ) }
    dend_102 { pt3dadd( 2.44128, -113.267, -103.143, 1.47 ) }
    dend_102 { pt3dadd( 2.48079, -113.306, -103.183, 1.47 ) }
    dend_102 { pt3dadd( 3.41138, -114.252, -103.96, 1.18 ) }
    dend_102 { pt3dadd( 3.4522, -114.301, -103.993, 1.18 ) }
    dend_102 { pt3dadd( 3.82853, -114.878, -104.31, 1.18 ) }
    dend_102 { pt3dadd( 4.29054, -115.879, -104.83, 0.52 ) }
    dend_102 { pt3dadd( 4.46879, -116.549, -105.159, 0.29 ) }
    dend_102 { pt3dadd( 4.58523, -117.322, -105.548, 0.29 ) }
    dend_102 { pt3dadd( 4.62615, -117.854, -105.823, 0.88 ) }
    dend_102 { pt3dadd( 4.64485, -118.584, -106.239, 1.11 ) }
    dend_102 { pt3dadd( 4.61021, -119.982, -107.078, 0.81 ) }
    dend_102 { pt3dadd( 4.57217, -120.872, -107.707, 0.37 ) }
    dend_102 { pt3dadd( 4.53036, -121.813, -108.676, 0.29 ) }
    dend_102 { pt3dadd( 4.50233, -122.244, -109.25, 0.96 ) }
    dend_102 { pt3dadd( 4.49681, -122.285, -109.32, 0.96 ) }
    dend_102 { pt3dadd( 4.40991, -122.638, -110.033, 1.18 ) }
    dend_102 { pt3dadd( 4.10332, -123.388, -111.68, 1.11 ) }
    dend_102 { pt3dadd( 3.34235, -124.694, -114.63, 0.44 ) }
    dend_102 { pt3dadd( 3.03435, -125.097, -115.537, 0.74 ) }
    dend_102 { pt3dadd( 2.43218, -125.794, -116.984, 0.59 ) }
    dend_102 { pt3dadd( 2.05682, -126.205, -117.744, 0.81 ) }
    dend_102 { pt3dadd( 1.47602, -126.794, -118.656, 0.44 ) }
    dend_102 { pt3dadd( 1.09128, -127.222, -119.067, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_102 { pt3dadd( 1.05314, -127.277, -119.091, 0.59 ) }
    dend_102 { pt3dadd( 0.644811, -128.091, -119.341, 0.52 ) }
    dend_102 { pt3dadd( 0.399971, -128.744, -119.498, 1.03 ) }
    dend_102 { pt3dadd( 0.180638, -129.516, -119.698, 1.4 ) }
    dend_102 { pt3dadd( -0.0935517, -130.698, -119.986, 1.33 ) }
    dend_102 { pt3dadd( -0.264401, -131.522, -120.249, 1.11 ) }
    dend_102 { pt3dadd( -0.37429, -132.335, -120.647, 0.59 ) }
    dend_102 { pt3dadd( -0.376868, -132.395, -120.686, 0.59 ) }
    dend_102 { pt3dadd( -0.339418, -132.93, -121.137, 0.44 ) }
    dend_102 { pt3dadd( -0.180762, -133.774, -122.052, 0.44 ) }
    dend_102 { pt3dadd( 0.0760772, -134.698, -123.246, 0.74 ) }
    dend_102 { pt3dadd( 0.493182, -136.0, -125.081, 0.74 ) }
    dend_102 { pt3dadd( 0.597731, -136.311, -125.522, 1.25 ) }
    dend_102 { pt3dadd( 0.893914, -137.275, -126.891, 1.55 ) }
    dend_102 { pt3dadd( 1.18005, -138.313, -128.381, 1.77 ) }
    dend_102 { pt3dadd( 1.4371, -139.581, -130.217, 0.74 ) }
    dend_102 { pt3dadd( 1.48561, -140.264, -131.12, 0.52 ) }
    dend_102 { pt3dadd( 1.44579, -140.733, -131.676, 0.52 ) }
    dend_102 { pt3dadd( 1.2474, -141.737, -132.799, 0.96 ) }
    dend_102 { pt3dadd( 1.10631, -142.165, -133.212, 1.18 ) }
    dend_102 { pt3dadd( 0.598413, -143.217, -134.126, 0.52 ) }
    dend_102 { pt3dadd( 0.267878, -143.732, -134.552, 0.52 ) }
    dend_102 { pt3dadd( 0.0281786, -144.042, -134.817, 0.66 ) }
    dend_102 { pt3dadd( -0.0108354, -144.085, -134.855, 0.66 ) }
    dend_102 { pt3dadd( -0.347961, -144.406, -135.126, 0.44 ) }
    dend_102 { pt3dadd( -1.23735, -145.146, -135.736, 0.29 ) }
    dend_102 { pt3dadd( -1.29122, -145.182, -135.76, 0.29 ) }
    dend_102 { pt3dadd( -1.71385, -145.415, -135.929, 0.52 ) }
    dend_102 { pt3dadd( -2.14407, -145.638, -136.059, 0.81 ) }
    dend_102 { pt3dadd( -2.65702, -145.925, -136.149, 0.96 ) }
    dend_102 { pt3dadd( -3.1562, -146.221, -136.175, 1.11 ) }
    dend_102 { pt3dadd( -3.83155, -146.672, -136.118, 0.29 ) }
    dend_102 { pt3dadd( -3.91636, -146.735, -136.107, 0.29 ) }
    dend_102 { pt3dadd( -4.64978, -147.29, -135.978, 0.29 ) }
    dend_102 { pt3dadd( -5.32063, -147.786, -135.841, 0.88 ) }
    dend_102 { pt3dadd( -5.56274, -147.961, -135.784, 1.03 ) }
    dend_102 { pt3dadd( -6.11686, -148.326, -135.654, 1.18 ) }
    dend_102 { pt3dadd( -6.97326, -148.797, -135.492, 0.29 ) }
    dend_102 { pt3dadd( -8.00714, -149.265, -135.352, 0.29 ) }
    dend_102 { pt3dadd( -8.44165, -149.424, -135.331, 0.59 ) }
    dend_102 { pt3dadd( -8.50725, -149.446, -135.335, 0.59 ) }
    dend_102 { pt3dadd( -9.27214, -149.703, -135.446, 0.59 ) }
    dend_102 { pt3dadd( -10.0219, -150.0, -135.629, 1.11 ) }
    dend_102 { pt3dadd( -10.654, -150.312, -135.844, 1.4 ) }
    dend_102 { pt3dadd( -11.4157, -150.77, -136.157, 0.96 ) }
    dend_102 { pt3dadd( -12.1739, -151.324, -136.497, 0.59 ) }
    dend_102 { pt3dadd( -13.038, -152.071, -136.899, 0.37 ) }
    dend_102 { pt3dadd( -13.6795, -152.736, -137.201, 0.37 ) }
    dend_102 { pt3dadd( -14.0636, -153.174, -137.351, 0.74 ) }
    dend_102 { pt3dadd( -14.1074, -153.229, -137.365, 0.74 ) }
    dend_102 { pt3dadd( -14.5324, -153.82, -137.434, 0.74 ) }
    dend_102 { pt3dadd( -14.8605, -154.301, -137.457, 1.03 ) }
    dend_102 { pt3dadd( -15.2364, -154.868, -137.448, 1.33 ) }
    dend_102 { pt3dadd( -15.8106, -155.64, -137.404, 1.47 ) }
    dend_102 { pt3dadd( -16.4613, -156.447, -137.349, 0.37 ) }
    dend_102 { pt3dadd( -17.262, -157.411, -137.284, 1.18 ) }
    // Section: dend_99, id: dend_99, parent: dend_98 (entry count 56/100)
    dend_99 { pt3dclear() }
    dend_99 { pt3dadd( 4.30772, -66.563, -51.7065, 0.52 ) }
    dend_99 { pt3dadd( 5.26688, -67.2703, -50.5507, 0.52 ) }
    dend_99 { pt3dadd( 6.36642, -68.1874, -49.3606, 0.44 ) }
    dend_99 { pt3dadd( 6.91903, -68.7191, -48.8346, 0.88 ) }
    dend_99 { pt3dadd( 6.96223, -68.7671, -48.7975, 0.88 ) }
    dend_99 { pt3dadd( 7.3217, -69.2086, -48.5154, 1.03 ) }
    dend_99 { pt3dadd( 7.69973, -69.7226, -48.2417, 0.81 ) }
    dend_99 { pt3dadd( 8.11245, -70.4385, -48.0576, 0.29 ) }
    dend_99 { pt3dadd( 8.50886, -71.2521, -47.9537, 0.22 ) }
    dend_99 { pt3dadd( 8.78661, -71.8783, -47.8899, 0.52 ) }
    dend_99 { pt3dadd( 8.92291, -72.2173, -47.8537, 0.74 ) }
    dend_99 { pt3dadd( 9.2322, -73.1058, -47.7561, 0.29 ) }
    dend_99 { pt3dadd( 9.4604, -73.8905, -47.661, 0.29 ) }
    dend_99 { pt3dadd( 9.64712, -74.6747, -47.5662, 0.74 ) }
    dend_99 { pt3dadd( 9.73513, -75.124, -47.5043, 1.03 ) }
    dend_99 { pt3dadd( 9.83499, -75.683, -47.4235, 0.96 ) }
    dend_99 { pt3dadd( 9.92463, -76.2748, -47.337, 0.59 ) }
    dend_99 { pt3dadd( 10.0568, -77.1124, -47.1891, 0.22 ) }
    dend_99 { pt3dadd( 10.1618, -77.6245, -47.0831, 0.37 ) }
    dend_99 { pt3dadd( 10.2001, -77.7524, -47.0555, 0.37 ) }
    dend_99 { pt3dadd( 10.4237, -78.2653, -46.9617, 0.37 ) }
    dend_99 { pt3dadd( 10.46, -78.3265, -46.9541, 0.37 ) }
    dend_99 { pt3dadd( 11.0858, -79.208, -46.9986, 0.29 ) }
    dend_99 { pt3dadd( 11.5472, -79.7967, -47.1083, 0.88 ) }
    dend_99 { pt3dadd( 11.8381, -80.1675, -47.2031, 1.18 ) }
    dend_99 { pt3dadd( 12.3941, -80.9089, -47.422, 0.29 ) }
    dend_99 { pt3dadd( 12.906, -81.6151, -47.6599, 0.29 ) }
    dend_99 { pt3dadd( 13.6653, -82.7085, -47.9908, 0.52 ) }
    dend_99 { pt3dadd( 13.9889, -83.206, -48.1255, 0.81 ) }
    dend_99 { pt3dadd( 14.4991, -84.0176, -48.2896, 0.22 ) }
    dend_99 { pt3dadd( 14.7287, -84.4032, -48.339, 0.59 ) }
    dend_99 { pt3dadd( 14.7752, -84.4875, -48.3449, 0.59 ) }
    dend_99 { pt3dadd( 15.4567, -85.8279, -48.3796, 0.44 ) }
    dend_99 { pt3dadd( 15.9159, -86.7771, -48.3672, 0.66 ) }
    dend_99 { pt3dadd( 16.2174, -87.4206, -48.3715, 0.59 ) }
    dend_99 { pt3dadd( 16.4645, -87.9616, -48.4045, 0.44 ) }
    dend_99 { pt3dadd( 16.8578, -88.8498, -48.5078, 0.96 ) }
    dend_99 { pt3dadd( 17.1727, -89.5226, -48.6738, 1.33 ) }
    dend_99 { pt3dadd( 17.5336, -90.1919, -48.9736, 0.59 ) }
    dend_99 { pt3dadd( 17.5758, -90.2549, -49.0104, 0.59 ) }
    dend_99 { pt3dadd( 18.0115, -90.7755, -49.4083, 0.59 ) }
    dend_99 { pt3dadd( 18.0467, -90.8151, -49.4454, 0.59 ) }
    dend_99 { pt3dadd( 18.741, -91.6606, -50.3532, 0.29 ) }
    dend_99 { pt3dadd( 19.0286, -92.0787, -50.8217, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_99 { pt3dadd( 19.258, -92.4782, -51.2199, 0.44 ) }
    dend_99 { pt3dadd( 19.5643, -93.0885, -51.7643, 0.44 ) }
    dend_99 { pt3dadd( 19.9011, -93.8921, -52.3767, 1.33 ) }
    dend_99 { pt3dadd( 20.2849, -94.8663, -53.039, 1.11 ) }
    dend_99 { pt3dadd( 20.6129, -95.7818, -53.5776, 0.52 ) }
    dend_99 { pt3dadd( 20.9371, -96.6147, -54.0649, 0.29 ) }
    dend_99 { pt3dadd( 20.9609, -96.6743, -54.0983, 0.29 ) }
    dend_99 { pt3dadd( 21.2062, -97.1833, -54.3393, 0.29 ) }
    dend_99 { pt3dadd( 21.6882, -97.8236, -54.5944, 0.29 ) }
    dend_99 { pt3dadd( 22.0281, -98.111, -54.6695, 0.96 ) }
    dend_99 { pt3dadd( 22.4839, -98.3189, -54.7168, 1.25 ) }
    // Section: dend_97, id: dend_97, parent: dend_93 (entry count 11/100)
    dend_97 { pt3dclear() }
    dend_97 { pt3dadd( -6.87175, -156.157, -29.2352, 0.29 ) }
    dend_97 { pt3dadd( -8.16187, -156.761, -28.3103, 0.29 ) }
    dend_97 { pt3dadd( -8.93977, -157.245, -27.6549, 0.29 ) }
    dend_97 { pt3dadd( -9.17525, -157.402, -27.4545, 0.74 ) }
    dend_97 { pt3dadd( -9.23525, -157.443, -27.4044, 0.74 ) }
    dend_97 { pt3dadd( -9.62507, -157.703, -27.1006, 0.74 ) }
    dend_97 { pt3dadd( -10.5064, -158.21, -26.5691, 0.29 ) }
    dend_97 { pt3dadd( -11.2104, -158.602, -26.2999, 0.29 ) }
    dend_97 { pt3dadd( -11.562, -158.762, -26.2176, 0.74 ) }
    dend_97 { pt3dadd( -11.8735, -158.871, -26.1845, 1.11 ) }
    dend_97 { pt3dadd( -12.4, -159.048, -26.1551, 1.11 ) }
    dend_97 { pt3dadd( -13.7822, -159.504, -26.1554, 0.29 ) }
    dend_97 { pt3dadd( -14.2328, -159.672, -26.1619, 0.37 ) }
    dend_97 { pt3dadd( -14.8624, -159.973, -26.0917, 0.37 ) }
    dend_97 { pt3dadd( -15.5544, -160.392, -25.9133, 0.66 ) }
    dend_97 { pt3dadd( -16.2391, -160.908, -25.6468, 0.52 ) }
    dend_97 { pt3dadd( -16.635, -161.25, -25.4474, 0.96 ) }
    dend_97 { pt3dadd( -17.338, -161.913, -25.0313, 1.33 ) }
    dend_97 { pt3dadd( -18.3733, -162.849, -24.4561, 0.59 ) }
    dend_97 { pt3dadd( -18.8383, -163.261, -24.1754, 0.37 ) }
    dend_97 { pt3dadd( -19.2109, -163.581, -23.9442, 0.22 ) }
    dend_97 { pt3dadd( -19.872, -164.126, -23.5555, 0.22 ) }
    dend_97 { pt3dadd( -20.4373, -164.596, -23.2376, 0.66 ) }
    dend_97 { pt3dadd( -21.156, -165.238, -22.8766, 0.66 ) }
    dend_97 { pt3dadd( -22.2313, -166.328, -22.3869, 0.52 ) }
    dend_97 { pt3dadd( -22.3801, -166.499, -22.316, 0.29 ) }
    dend_97 { pt3dadd( -22.7742, -167.012, -22.147, 0.74 ) }
    dend_97 { pt3dadd( -22.9383, -167.254, -22.0554, 0.74 ) }
    dend_97 { pt3dadd( -23.6661, -168.411, -21.6084, 0.37 ) }
    dend_97 { pt3dadd( -24.2606, -169.426, -21.2448, 0.44 ) }
    dend_97 { pt3dadd( -24.5594, -169.928, -21.1004, 0.59 ) }
    dend_97 { pt3dadd( -25.0854, -170.792, -20.8573, 0.52 ) }
    dend_97 { pt3dadd( -26.2344, -172.551, -20.3635, 0.37 ) }
    dend_97 { pt3dadd( -26.7744, -173.296, -20.1532, 0.37 ) }
    dend_97 { pt3dadd( -27.4286, -174.094, -19.9343, 0.29 ) }
    dend_97 { pt3dadd( -28.2712, -175.02, -19.6817, 0.59 ) }
    dend_97 { pt3dadd( -28.4428, -175.204, -19.6386, 0.88 ) }
    dend_97 { pt3dadd( -29.004, -175.759, -19.5408, 0.66 ) }
    dend_97 { pt3dadd( -29.6877, -176.379, -19.53, 0.15 ) }
    dend_97 { pt3dadd( -30.4816, -176.975, -19.5014, 0.15 ) }
    dend_97 { pt3dadd( -30.5471, -177.013, -19.4985, 0.15 ) }
    dend_97 { pt3dadd( -31.337, -177.396, -19.5162, 0.59 ) }
    dend_97 { pt3dadd( -31.8691, -177.664, -19.5736, 0.88 ) }
    dend_97 { pt3dadd( -31.9272, -177.697, -19.5846, 0.88 ) }
    dend_97 { pt3dadd( -32.3552, -177.974, -19.6956, 0.88 ) }
    dend_97 { pt3dadd( -32.9998, -178.471, -19.9075, 0.88 ) }
    dend_97 { pt3dadd( -33.9537, -179.388, -20.2851, 0.29 ) }
    dend_97 { pt3dadd( -34.4167, -179.916, -20.4914, 0.29 ) }
    dend_97 { pt3dadd( -34.7894, -180.438, -20.6728, 0.66 ) }
    dend_97 { pt3dadd( -35.0785, -180.896, -20.807, 0.81 ) }
    dend_97 { pt3dadd( -35.4482, -181.606, -20.9746, 0.66 ) }
    dend_97 { pt3dadd( -35.8779, -182.567, -21.1448, 0.29 ) }
    dend_97 { pt3dadd( -36.0839, -183.073, -21.2059, 0.81 ) }
    dend_97 { pt3dadd( -36.2388, -183.442, -21.2434, 0.81 ) }
    dend_97 { pt3dadd( -36.6569, -184.3, -21.3062, 0.22 ) }
    dend_97 { pt3dadd( -36.9792, -184.868, -21.2882, 0.22 ) }
    dend_97 { pt3dadd( -37.1875, -185.208, -21.2393, 0.81 ) }
    dend_97 { pt3dadd( -37.3803, -185.484, -21.175, 0.96 ) }
    dend_97 { pt3dadd( -38.041, -186.304, -20.8225, 0.22 ) }
    dend_97 { pt3dadd( -38.4772, -186.722, -20.4227, 0.22 ) }
    dend_97 { pt3dadd( -39.0954, -187.168, -19.6351, 0.74 ) }
    dend_97 { pt3dadd( -39.3094, -187.298, -19.3283, 1.18 ) }
    dend_97 { pt3dadd( -39.6823, -187.505, -18.7601, 0.74 ) }
    dend_97 { pt3dadd( -40.5613, -187.938, -17.3913, 0.59 ) }
    dend_97 { pt3dadd( -41.7625, -188.481, -15.5215, 0.44 ) }
    dend_97 { pt3dadd( -42.732, -188.969, -14.0573, 0.37 ) }
    dend_97 { pt3dadd( -42.7815, -188.997, -13.9899, 0.37 ) }
    dend_97 { pt3dadd( -43.0515, -189.174, -13.649, 0.66 ) }
    dend_97 { pt3dadd( -43.2898, -189.411, -13.3201, 0.74 ) }
    dend_97 { pt3dadd( -43.8549, -190.176, -12.5136, 0.29 ) }
    dend_97 { pt3dadd( -44.2315, -190.798, -11.9539, 0.29 ) }
    dend_97 { pt3dadd( -44.6126, -191.417, -11.3575, 0.29 ) }
    dend_97 { pt3dadd( -44.7064, -191.576, -11.1935, 0.74 ) }
    dend_97 { pt3dadd( -45.5593, -193.185, -9.36282, 0.66 ) }
    dend_97 { pt3dadd( -45.8852, -193.913, -8.42956, 0.22 ) }
    dend_97 { pt3dadd( -45.9566, -194.113, -8.10467, 0.22 ) }
    dend_97 { pt3dadd( -46.0977, -194.494, -7.24048, 0.44 ) }
    // Section: dend_94, id: dend_94, parent: dend_93 (entry count 88/100)
    dend_94 { pt3dclear() }
    dend_94 { pt3dadd( -6.87175, -156.157, -29.2352, 0.37 ) }
    dend_94 { pt3dadd( -6.48694, -157.429, -30.1636, 0.37 ) }
    dend_94 { pt3dadd( -6.28693, -158.13, -30.6191, 0.37 ) }
    dend_94 { pt3dadd( -6.27651, -158.172, -30.6426, 0.37 ) }
    dend_94 { pt3dadd( -6.18335, -158.625, -30.8675, 0.81 ) }
    dend_94 { pt3dadd( -6.05762, -159.303, -31.1741, 0.88 ) }
    dend_94 { pt3dadd( -6.00942, -159.586, -31.292, 0.88 ) }
    dend_94 { pt3dadd( -5.92364, -160.164, -31.4857, 0.52 ) }
    dend_94 { pt3dadd( -5.84754, -160.823, -31.6992, 0.52 ) }
    dend_94 { pt3dadd( -5.8063, -161.43, -31.9237, 0.52 ) }
    dend_94 { pt3dadd( -5.81148, -161.767, -32.0613, 0.96 ) }
    dend_94 { pt3dadd( -5.83908, -162.06, -32.1849, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_94 { pt3dadd( -5.96054, -162.852, -32.5489, 0.37 ) }
    dend_94 { pt3dadd( -6.06778, -163.322, -32.7793, 0.29 ) }
    dend_94 { pt3dadd( -6.21402, -163.782, -33.0292, 0.59 ) }
    dend_94 { pt3dadd( -6.39293, -164.207, -33.2662, 0.96 ) }
    dend_94 { pt3dadd( -6.54766, -164.514, -33.4336, 1.18 ) }
    dend_94 { pt3dadd( -6.57066, -164.554, -33.4534, 1.18 ) }
    dend_94 { pt3dadd( -6.71764, -164.796, -33.5719, 1.18 ) }
    dend_94 { pt3dadd( -6.95003, -165.242, -33.7915, 1.03 ) }
    dend_94 { pt3dadd( -7.17831, -165.771, -34.0323, 0.59 ) }
    dend_94 { pt3dadd( -7.30888, -166.128, -34.1682, 0.52 ) }
    dend_94 { pt3dadd( -7.41396, -166.425, -34.2594, 0.66 ) }
    dend_94 { pt3dadd( -7.70076, -167.181, -34.4371, 0.29 ) }
    dend_94 { pt3dadd( -7.9184, -167.704, -34.5123, 0.44 ) }
    dend_94 { pt3dadd( -8.02553, -167.944, -34.5178, 0.52 ) }
    dend_94 { pt3dadd( -8.39779, -168.704, -34.4721, 0.66 ) }
    dend_94 { pt3dadd( -8.63225, -169.134, -34.4253, 0.37 ) }
    dend_94 { pt3dadd( -8.91832, -169.609, -34.3575, 0.88 ) }
    dend_94 { pt3dadd( -9.09983, -169.879, -34.3133, 1.18 ) }
    dend_94 { pt3dadd( -9.47022, -170.406, -34.2447, 0.96 ) }
    dend_94 { pt3dadd( -9.72077, -170.782, -34.2128, 0.66 ) }
    dend_94 { pt3dadd( -9.88575, -171.064, -34.1916, 1.03 ) }
    dend_94 { pt3dadd( -10.1423, -171.601, -34.1311, 0.52 ) }
    dend_94 { pt3dadd( -10.3881, -172.281, -34.0296, 0.52 ) }
    dend_94 { pt3dadd( -10.5024, -172.747, -33.9532, 1.11 ) }
    dend_94 { pt3dadd( -10.5608, -173.211, -33.8686, 1.11 ) }
    dend_94 { pt3dadd( -10.5919, -173.954, -33.7331, 0.74 ) }
    dend_94 { pt3dadd( -10.588, -174.373, -33.6593, 0.44 ) }
    dend_94 { pt3dadd( -10.5617, -175.013, -33.5526, 0.59 ) }
    dend_94 { pt3dadd( -10.5258, -175.885, -33.431, 0.59 ) }
    dend_94 { pt3dadd( -10.5246, -176.716, -33.3502, 0.59 ) }
    dend_94 { pt3dadd( -10.5533, -177.42, -33.305, 0.52 ) }
    dend_94 { pt3dadd( -10.5968, -177.87, -33.2958, 1.18 ) }
    dend_94 { pt3dadd( -10.639, -178.158, -33.2937, 1.33 ) }
    dend_94 { pt3dadd( -10.8012, -178.931, -33.3034, 1.18 ) }
    dend_94 { pt3dadd( -10.9677, -179.544, -33.315, 0.88 ) }
    dend_94 { pt3dadd( -11.1204, -180.034, -33.3265, 0.52 ) }
    dend_94 { pt3dadd( -11.2835, -180.583, -33.3386, 0.66 ) }
    dend_94 { pt3dadd( -11.2963, -180.641, -33.3368, 0.66 ) }
    dend_94 { pt3dadd( -11.3513, -181.121, -33.2998, 0.81 ) }
    dend_94 { pt3dadd( -11.3877, -181.674, -33.2448, 0.44 ) }
    dend_94 { pt3dadd( -11.3995, -182.275, -33.1718, 0.44 ) }
    dend_94 { pt3dadd( -11.3869, -183.013, -33.0673, 0.44 ) }
    dend_94 { pt3dadd( -11.323, -183.952, -32.9075, 0.37 ) }
    dend_94 { pt3dadd( -11.2619, -184.566, -32.7888, 0.29 ) }
    // Section: dend_65, id: dend_65, parent: dend_41 (entry count 44/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -5.07014, -57.3937, -5.62604, 1.03 ) }
    dend_65 { pt3dadd( -6.32949, -57.7189, -5.64501, 1.03 ) }
    dend_65 { pt3dadd( -7.21241, -58.067, -5.52933, 1.03 ) }
    dend_65 { pt3dadd( -8.29965, -58.6319, -5.32506, 0.96 ) }
    dend_65 { pt3dadd( -9.02094, -59.1078, -5.17832, 0.96 ) }
    dend_65 { pt3dadd( -9.1151, -59.1767, -5.15854, 0.96 ) }
    dend_65 { pt3dadd( -10.9636, -60.7215, -4.77701, 0.81 ) }
    dend_65 { pt3dadd( -11.6374, -61.4456, -4.60768, 1.11 ) }
    dend_65 { pt3dadd( -12.2975, -62.237, -4.43144, 1.11 ) }
    dend_65 { pt3dadd( -13.1433, -63.2944, -4.20785, 1.03 ) }
    dend_65 { pt3dadd( -13.1853, -63.3447, -4.1983, 1.03 ) }
    dend_65 { pt3dadd( -14.0856, -64.3312, -4.0057, 1.03 ) }
    dend_65 { pt3dadd( -14.7338, -65.0127, -3.90785, 1.25 ) }
    dend_65 { pt3dadd( -15.2931, -65.5732, -3.78082, 1.4 ) }
    dend_65 { pt3dadd( -15.6817, -65.945, -3.66671, 1.4 ) }
    dend_65 { pt3dadd( -16.4369, -66.6798, -3.36886, 1.25 ) }
    dend_65 { pt3dadd( -17.2218, -67.5549, -2.9918, 1.11 ) }
    dend_65 { pt3dadd( -17.6413, -68.1114, -2.74866, 1.11 ) }
    dend_65 { pt3dadd( -18.0875, -68.8571, -2.44251, 1.03 ) }
    dend_65 { pt3dadd( -18.1411, -68.9682, -2.40551, 1.03 ) }
    dend_65 { pt3dadd( -18.4844, -69.7905, -2.23968, 0.81 ) }
    dend_65 { pt3dadd( -18.8223, -70.694, -2.16776, 0.96 ) }
    dend_65 { pt3dadd( -19.164, -71.6821, -2.16815, 0.96 ) }
    dend_65 { pt3dadd( -19.5303, -72.805, -2.20033, 0.81 ) }
    dend_65 { pt3dadd( -19.7555, -73.6324, -2.25734, 0.74 ) }
    dend_65 { pt3dadd( -20.0536, -74.8741, -2.38304, 0.81 ) }
    dend_65 { pt3dadd( -20.1851, -75.5525, -2.47369, 1.11 ) }
    dend_65 { pt3dadd( -20.3224, -76.5295, -2.60878, 1.11 ) }
    dend_65 { pt3dadd( -20.3853, -77.2712, -2.70971, 1.11 ) }
    dend_65 { pt3dadd( -20.4499, -78.7125, -2.89395, 0.88 ) }
    dend_65 { pt3dadd( -20.4655, -79.437, -2.95244, 1.11 ) }
    dend_65 { pt3dadd( -20.4657, -80.2879, -3.0042, 1.11 ) }
    dend_65 { pt3dadd( -20.4594, -80.9468, -3.0524, 1.33 ) }
    dend_65 { pt3dadd( -20.463, -81.6302, -3.10613, 0.96 ) }
    dend_65 { pt3dadd( -20.4837, -82.4473, -3.17155, 1.11 ) }
    dend_65 { pt3dadd( -20.5038, -83.4452, -3.24307, 1.11 ) }
    dend_65 { pt3dadd( -20.498, -84.2782, -3.31461, 1.4 ) }
    dend_65 { pt3dadd( -20.4897, -85.0096, -3.39424, 1.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 82/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -5.07014, -57.3937, -5.62604, 1.47 ) }
    dend_42 { pt3dadd( -5.03495, -58.6671, -5.69454, 1.47 ) }
    dend_42 { pt3dadd( -5.01326, -59.4519, -5.73676, 1.47 ) }
    dend_42 { pt3dadd( -4.96601, -61.1617, -5.82873, 1.47 ) }
    dend_42 { pt3dadd( -4.93449, -62.302, -5.89007, 1.62 ) }
    dend_42 { pt3dadd( -4.89593, -63.6975, -5.96514, 1.92 ) }
    dend_42 { pt3dadd( -4.85862, -65.0475, -6.03776, 1.92 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 89/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -18.0549, -71.7178, -25.2451, 0.88 ) }
    dend_30 { pt3dadd( -19.5958, -71.9576, -25.5615, 0.88 ) }
    dend_30 { pt3dadd( -20.0446, -72.0537, -25.6907, 1.11 ) }
    dend_30 { pt3dadd( -20.5408, -72.1871, -25.8929, 0.88 ) }
    dend_30 { pt3dadd( -21.1535, -72.3657, -26.1696, 0.81 ) }
    dend_30 { pt3dadd( -21.8536, -72.6153, -26.5289, 0.74 ) }
    dend_30 { pt3dadd( -22.5057, -72.9062, -26.8895, 0.96 ) }
    dend_30 { pt3dadd( -23.1096, -73.2675, -27.3153, 0.96 ) }
    dend_30 { pt3dadd( -23.9073, -73.8598, -27.9074, 0.81 ) }
    dend_30 { pt3dadd( -23.943, -73.893, -27.9347, 0.81 ) }
    dend_30 { pt3dadd( -24.5569, -74.5754, -28.4158, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_30 { pt3dadd( -25.0723, -75.2289, -28.8247, 0.74 ) }
    dend_30 { pt3dadd( -25.2573, -75.4705, -28.9611, 1.03 ) }
    dend_30 { pt3dadd( -25.6164, -75.9204, -29.2063, 1.11 ) }
    dend_30 { pt3dadd( -26.2433, -76.6351, -29.5871, 1.11 ) }
    dend_30 { pt3dadd( -26.2927, -76.6858, -29.6172, 1.11 ) }
    dend_30 { pt3dadd( -27.0486, -77.3518, -30.0627, 0.88 ) }
    dend_30 { pt3dadd( -27.9467, -78.0774, -30.597, 0.88 ) }
    dend_30 { pt3dadd( -28.3458, -78.3794, -30.836, 1.25 ) }
    dend_30 { pt3dadd( -28.8501, -78.7299, -31.1407, 1.25 ) }
    dend_30 { pt3dadd( -29.5469, -79.1803, -31.5664, 1.4 ) }
    dend_30 { pt3dadd( -30.062, -79.5117, -31.8788, 1.62 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 11/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -18.0549, -71.7178, -25.2451, 0.74 ) }
    dend_27 { pt3dadd( -17.2562, -72.2633, -26.4226, 0.74 ) }
    dend_27 { pt3dadd( -16.2182, -72.9828, -28.007, 0.44 ) }
    dend_27 { pt3dadd( -16.1473, -73.0347, -28.1138, 0.44 ) }
    dend_27 { pt3dadd( -15.4476, -73.5807, -29.0972, 0.44 ) }
    dend_27 { pt3dadd( -14.2049, -74.5785, -30.7582, 1.03 ) }
    dend_27 { pt3dadd( -11.8276, -76.6354, -33.9502, 1.03 ) }
    dend_27 { pt3dadd( -11.0916, -77.3116, -34.9919, 1.33 ) }
    dend_27 { pt3dadd( -10.1328, -78.2912, -36.4399, 1.11 ) }
    dend_27 { pt3dadd( -9.49025, -78.9898, -37.5394, 0.59 ) }
    dend_27 { pt3dadd( -8.59659, -80.0435, -39.2655, 0.44 ) }
    dend_27 { pt3dadd( -7.62106, -81.4633, -41.4896, 0.44 ) }
    dend_27 { pt3dadd( -7.05736, -82.4097, -42.9896, 0.88 ) }
    dend_27 { pt3dadd( -6.82875, -82.8463, -43.7618, 1.25 ) }
    dend_27 { pt3dadd( -6.11134, -84.5526, -46.9258, 1.25 ) }
    dend_27 { pt3dadd( -6.0964, -84.5968, -47.0119, 1.25 ) }
    dend_27 { pt3dadd( -6.04709, -84.8045, -47.384, 1.25 ) }
    dend_27 { pt3dadd( -6.0378, -84.8545, -47.4552, 1.25 ) }
    dend_27 { pt3dadd( -5.72853, -86.6144, -49.0284, 0.74 ) }
    dend_27 { pt3dadd( -5.52596, -87.6899, -49.7591, 0.74 ) }
    dend_27 { pt3dadd( -5.51239, -87.7754, -49.8026, 0.74 ) }
    dend_27 { pt3dadd( -5.36402, -88.5414, -50.2598, 0.74 ) }
    dend_27 { pt3dadd( -5.10406, -89.6051, -51.0813, 0.81 ) }
    dend_27 { pt3dadd( -4.89146, -90.4965, -51.8737, 0.81 ) }
    dend_27 { pt3dadd( -4.50645, -92.2789, -53.7396, 0.44 ) }
    dend_27 { pt3dadd( -4.49663, -92.3408, -53.8134, 0.44 ) }
    dend_27 { pt3dadd( -4.36671, -93.4187, -55.1889, 0.74 ) }
    dend_27 { pt3dadd( -4.2097, -94.8522, -57.1585, 0.88 ) }
    dend_27 { pt3dadd( -4.12797, -95.5295, -58.0854, 1.03 ) }
    dend_27 { pt3dadd( -3.99624, -96.6273, -59.4963, 1.03 ) }
    dend_27 { pt3dadd( -3.90968, -97.3431, -60.2547, 1.18 ) }
    dend_27 { pt3dadd( -3.89996, -97.4075, -60.3131, 1.18 ) }
    dend_27 { pt3dadd( -3.58418, -98.9293, -61.3171, 0.52 ) }
    dend_27 { pt3dadd( -3.19276, -100.041, -61.7675, 0.44 ) }
    dend_27 { pt3dadd( -2.8549, -100.618, -61.9386, 0.81 ) }
    dend_27 { pt3dadd( -2.50604, -101.091, -62.042, 0.88 ) }
    dend_27 { pt3dadd( -2.37377, -101.256, -62.0858, 0.88 ) }
    dend_27 { pt3dadd( -1.7751, -102.036, -62.3157, 0.74 ) }
    dend_27 { pt3dadd( -1.10167, -103.002, -62.627, 0.44 ) }
    dend_27 { pt3dadd( -0.50547, -104.009, -63.0149, 0.59 ) }
    dend_27 { pt3dadd( 0.145381, -105.408, -63.5643, 0.52 ) }
    dend_27 { pt3dadd( 0.571431, -106.525, -64.0247, 0.88 ) }
    dend_27 { pt3dadd( 0.813141, -107.295, -64.3418, 1.18 ) }
    dend_27 { pt3dadd( 1.09648, -108.406, -64.838, 0.52 ) }
    dend_27 { pt3dadd( 1.22346, -109.143, -65.1806, 0.44 ) }
    dend_27 { pt3dadd( 1.33233, -110.236, -65.6663, 0.44 ) }
    dend_27 { pt3dadd( 1.37578, -111.208, -66.0823, 0.74 ) }
    dend_27 { pt3dadd( 1.38108, -111.757, -66.317, 0.74 ) }
    dend_27 { pt3dadd( 1.3721, -113.514, -67.1111, 0.59 ) }
    dend_27 { pt3dadd( 1.33345, -114.802, -67.6945, 0.66 ) }
    dend_27 { pt3dadd( 1.31653, -115.53, -68.0447, 1.18 ) }
    dend_27 { pt3dadd( 1.30128, -116.645, -68.5781, 1.33 ) }
    dend_27 { pt3dadd( 1.31704, -117.743, -69.0503, 1.11 ) }
    dend_27 { pt3dadd( 1.32539, -117.833, -69.0877, 1.11 ) }
    dend_27 { pt3dadd( 1.49438, -118.854, -69.4569, 0.96 ) }
    dend_27 { pt3dadd( 1.80829, -120.184, -69.9152, 0.66 ) }
    dend_27 { pt3dadd( 2.08466, -121.196, -70.2952, 0.37 ) }
    dend_27 { pt3dadd( 2.32597, -122.175, -70.6993, 0.29 ) }
    dend_27 { pt3dadd( 2.68621, -123.893, -71.5183, 1.03 ) }
    dend_27 { pt3dadd( 2.83711, -124.748, -71.9587, 1.33 ) }
    dend_27 { pt3dadd( 2.94748, -125.434, -72.3261, 1.47 ) }
    dend_27 { pt3dadd( 3.18464, -127.201, -73.2162, 0.37 ) }
    dend_27 { pt3dadd( 3.34492, -128.275, -73.7693, 0.37 ) }
    dend_27 { pt3dadd( 3.5442, -129.769, -74.5009, 0.29 ) }
    dend_27 { pt3dadd( 3.61573, -130.331, -74.7374, 0.44 ) }
    dend_27 { pt3dadd( 3.72455, -131.184, -75.0515, 0.59 ) }
    dend_27 { pt3dadd( 3.89665, -132.535, -75.476, 0.59 ) }
    dend_27 { pt3dadd( 4.13807, -134.25, -75.9376, 0.74 ) }
    dend_27 { pt3dadd( 4.34637, -135.516, -76.2408, 0.59 ) }
    dend_27 { pt3dadd( 4.50864, -136.659, -76.4879, 0.44 ) }
    dend_27 { pt3dadd( 4.72074, -138.195, -76.8336, 0.44 ) }
    dend_27 { pt3dadd( 4.74991, -138.294, -76.8835, 0.44 ) }
    dend_27 { pt3dadd( 5.20767, -139.243, -77.6044, 0.96 ) }
    dend_27 { pt3dadd( 5.55964, -139.782, -78.1021, 1.4 ) }
    dend_27 { pt3dadd( 5.60763, -139.845, -78.1642, 1.4 ) }
    dend_27 { pt3dadd( 6.08556, -140.438, -78.7501, 1.18 ) }
    dend_27 { pt3dadd( 9.03267, -144.129, -82.3636, 0.59 ) }
    dend_27 { pt3dadd( 9.62628, -144.91, -83.1005, 0.88 ) }
    dend_27 { pt3dadd( 10.1497, -145.646, -83.7739, 1.03 ) }
    dend_27 { pt3dadd( 10.6799, -146.465, -84.4993, 0.52 ) }
    dend_27 { pt3dadd( 11.1858, -147.426, -85.2588, 0.37 ) }
    dend_27 { pt3dadd( 11.5446, -148.42, -85.8959, 0.37 ) }
    dend_27 { pt3dadd( 11.5566, -148.499, -85.9203, 0.37 ) }
    dend_27 { pt3dadd( 11.6071, -148.852, -86.0261, 1.03 ) }
    dend_27 { pt3dadd( 11.7123, -149.609, -86.2203, 1.03 ) }
    dend_27 { pt3dadd( 11.9382, -150.773, -86.4848, 0.44 ) }
    dend_27 { pt3dadd( 12.3555, -152.002, -86.7965, 0.37 ) }
    dend_27 { pt3dadd( 12.9292, -153.193, -87.1055, 0.88 ) }
    dend_27 { pt3dadd( 13.3299, -153.887, -87.3392, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_27 { pt3dadd( 13.648, -154.402, -87.5425, 1.25 ) }
    dend_27 { pt3dadd( 14.2811, -155.379, -88.0069, 0.81 ) }
    dend_27 { pt3dadd( 15.4156, -157.188, -88.9698, 0.29 ) }
    dend_27 { pt3dadd( 15.6775, -157.668, -89.2332, 0.29 ) }
    dend_27 { pt3dadd( 16.2046, -158.793, -89.9004, 0.37 ) }
    dend_27 { pt3dadd( 16.6345, -159.828, -90.558, 0.37 ) }
    dend_27 { pt3dadd( 17.0118, -160.89, -91.2214, 0.66 ) }
    dend_27 { pt3dadd( 17.2554, -161.783, -91.7292, 1.25 ) }
    dend_27 { pt3dadd( 17.4745, -162.719, -92.1615, 1.4 ) }
    dend_27 { pt3dadd( 17.9051, -164.388, -92.8331, 0.81 ) }
    dend_27 { pt3dadd( 18.3627, -165.909, -93.3338, 0.59 ) }
    dend_27 { pt3dadd( 18.6543, -166.751, -93.5693, 0.29 ) }
    dend_27 { pt3dadd( 19.061, -167.837, -93.8158, 0.29 ) }
    dend_27 { pt3dadd( 19.6435, -169.077, -94.2804, 0.29 ) }
    dend_27 { pt3dadd( 19.8779, -169.498, -94.5071, 1.03 ) }
    dend_27 { pt3dadd( 19.9235, -169.571, -94.5542, 1.03 ) }
    dend_27 { pt3dadd( 20.3636, -170.226, -95.0268, 1.4 ) }
    dend_27 { pt3dadd( 21.0016, -171.173, -95.7721, 1.4 ) }
    dend_27 { pt3dadd( 22.9036, -174.023, -98.0892, 0.52 ) }
    dend_27 { pt3dadd( 23.6097, -175.191, -99.012, 0.74 ) }
    dend_27 { pt3dadd( 23.6748, -175.314, -99.1026, 0.74 ) }
    dend_27 { pt3dadd( 24.1174, -176.25, -99.7429, 0.52 ) }
    dend_27 { pt3dadd( 24.4948, -177.209, -100.337, 0.52 ) }
    dend_27 { pt3dadd( 24.7091, -178.03, -100.729, 0.74 ) }
    dend_27 { pt3dadd( 24.8978, -179.19, -101.143, 0.66 ) }
    dend_27 { pt3dadd( 25.2957, -181.052, -102.034, 0.59 ) }
    dend_27 { pt3dadd( 25.3179, -181.12, -102.076, 0.59 ) }
    dend_27 { pt3dadd( 25.6437, -181.909, -102.633, 0.52 ) }
    dend_27 { pt3dadd( 26.0418, -182.755, -103.245, 1.18 ) }
    dend_27 { pt3dadd( 26.7556, -184.184, -104.262, 1.62 ) }
    dend_27 { pt3dadd( 27.9398, -186.318, -105.79, 1.18 ) }
    dend_27 { pt3dadd( 28.7646, -187.757, -106.751, 0.52 ) }
    dend_27 { pt3dadd( 29.3867, -188.851, -107.424, 0.37 ) }
    dend_27 { pt3dadd( 29.963, -189.889, -107.991, 0.74 ) }
    dend_27 { pt3dadd( 30.2037, -190.383, -108.218, 1.11 ) }
    dend_27 { pt3dadd( 30.7023, -191.904, -108.724, 0.88 ) }
    dend_27 { pt3dadd( 30.8032, -192.797, -108.952, 0.81 ) }
    dend_27 { pt3dadd( 30.7195, -193.947, -109.29, 0.44 ) }
    dend_27 { pt3dadd( 30.52, -194.832, -109.614, 0.59 ) }
    dend_27 { pt3dadd( 30.2112, -195.764, -110.055, 0.59 ) }
    dend_27 { pt3dadd( 29.782, -196.826, -110.616, 0.37 ) }
    dend_27 { pt3dadd( 29.2, -198.106, -111.302, 0.29 ) }
    dend_27 { pt3dadd( 28.8235, -198.95, -111.78, 0.81 ) }
    dend_27 { pt3dadd( 28.5276, -199.715, -112.229, 1.11 ) }
    dend_27 { pt3dadd( 28.0604, -201.141, -113.05, 1.4 ) }
    dend_27 { pt3dadd( 27.8667, -201.835, -113.428, 1.33 ) }
    dend_27 { pt3dadd( 27.5987, -202.975, -113.981, 0.81 ) }
    dend_27 { pt3dadd( 27.3581, -204.081, -114.424, 0.52 ) }
    dend_27 { pt3dadd( 27.0317, -205.558, -114.904, 0.44 ) }
    dend_27 { pt3dadd( 26.7934, -206.67, -115.197, 0.37 ) }
    dend_27 { pt3dadd( 26.5157, -207.967, -115.388, 0.37 ) }
    dend_27 { pt3dadd( 26.2824, -209.196, -115.489, 0.66 ) }
    dend_27 { pt3dadd( 26.0822, -210.492, -115.505, 0.96 ) }
    dend_27 { pt3dadd( 25.9738, -211.495, -115.445, 1.03 ) }
    dend_27 { pt3dadd( 25.9117, -212.502, -115.319, 1.25 ) }
    dend_27 { pt3dadd( 25.9845, -214.342, -115.008, 0.81 ) }
    dend_27 { pt3dadd( 26.0766, -215.132, -114.863, 0.52 ) }
    dend_27 { pt3dadd( 26.2516, -216.222, -114.707, 0.52 ) }
    dend_27 { pt3dadd( 26.3862, -217.027, -114.639, 0.29 ) }
    dend_27 { pt3dadd( 26.5346, -218.205, -114.627, 0.29 ) }
    dend_27 { pt3dadd( 26.6606, -219.817, -114.797, 0.29 ) }
    dend_27 { pt3dadd( 26.6349, -220.841, -115.06, 0.81 ) }
    dend_27 { pt3dadd( 26.4808, -221.894, -115.422, 1.11 ) }
    dend_27 { pt3dadd( 26.2539, -222.75, -115.79, 1.11 ) }
    dend_27 { pt3dadd( 25.938, -223.598, -116.208, 0.74 ) }
    dend_27 { pt3dadd( 25.5107, -224.464, -116.702, 0.37 ) }
    dend_27 { pt3dadd( 24.8734, -225.619, -117.447, 0.29 ) }
    dend_27 { pt3dadd( 24.685, -226.016, -117.689, 0.74 ) }
    dend_27 { pt3dadd( 24.6512, -226.112, -117.74, 0.74 ) }
    dend_27 { pt3dadd( 24.5469, -226.758, -118.078, 0.96 ) }
    dend_27 { pt3dadd( 24.5413, -226.919, -118.158, 0.96 ) }
    dend_27 { pt3dadd( 24.5761, -228.378, -118.807, 0.29 ) }
    dend_27 { pt3dadd( 24.5856, -229.32, -119.224, 0.29 ) }
    dend_27 { pt3dadd( 24.5563, -229.978, -119.508, 0.81 ) }
    dend_27 { pt3dadd( 24.3894, -231.369, -120.1, 1.03 ) }
    dend_27 { pt3dadd( 24.2058, -232.195, -120.452, 0.81 ) }
    dend_27 { pt3dadd( 23.8462, -233.258, -120.933, 0.29 ) }
    dend_27 { pt3dadd( 23.3137, -234.358, -121.46, 0.29 ) }
    dend_27 { pt3dadd( 22.9627, -234.92, -121.76, 0.44 ) }
    dend_27 { pt3dadd( 22.5031, -235.583, -122.118, 0.44 ) }
    dend_27 { pt3dadd( 21.884, -236.339, -122.525, 0.66 ) }
    dend_27 { pt3dadd( 21.1595, -237.109, -123.003, 0.96 ) }
    dend_27 { pt3dadd( 20.7716, -237.463, -123.267, 1.4 ) }
    dend_27 { pt3dadd( 19.7082, -238.354, -124.034, 1.69 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 84/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 10.5969, 68.0772, 4.11114, 1.11 ) }
    dend_20 { pt3dadd( 10.3878, 70.1969, 4.67707, 1.11 ) }
    dend_20 { pt3dadd( 10.3059, 70.8111, 4.84103, 0.96 ) }
    dend_20 { pt3dadd( 10.155, 71.6077, 5.06348, 0.96 ) }
    dend_20 { pt3dadd( 9.95978, 72.4979, 5.31874, 0.96 ) }
    dend_20 { pt3dadd( 9.69526, 73.5377, 5.63228, 0.96 ) }
    dend_20 { pt3dadd( 9.25857, 75.1097, 6.12266, 0.96 ) }
    dend_20 { pt3dadd( 9.2265, 75.189, 6.14922, 0.96 ) }
    dend_20 { pt3dadd( 8.68057, 76.4031, 6.58935, 1.11 ) }
    dend_20 { pt3dadd( 8.62476, 76.5172, 6.63398, 1.11 ) }
    dend_20 { pt3dadd( 8.14553, 77.4426, 7.01631, 1.11 ) }
    dend_20 { pt3dadd( 8.0993, 77.5258, 7.05338, 1.11 ) }
    dend_20 { pt3dadd( 7.58169, 78.4363, 7.47254, 1.33 ) }
    dend_20 { pt3dadd( 7.11075, 79.2802, 7.85352, 1.18 ) }
    dend_20 { pt3dadd( 6.62876, 80.2296, 8.24963, 0.96 ) }
    dend_20 { pt3dadd( 6.59001, 80.3208, 8.28256, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_20 { pt3dadd( 6.30868, 81.1037, 8.53417, 0.88 ) }
    dend_20 { pt3dadd( 6.00226, 82.1484, 8.82502, 0.88 ) }
    dend_20 { pt3dadd( 5.9851, 82.2333, 8.84381, 0.88 ) }
    dend_20 { pt3dadd( 5.81598, 83.5845, 9.0757, 0.88 ) }
    dend_20 { pt3dadd( 5.73326, 84.9142, 9.24821, 1.11 ) }
    dend_20 { pt3dadd( 5.73156, 85.0415, 9.26102, 1.11 ) }
    dend_20 { pt3dadd( 5.7711, 86.1495, 9.33939, 1.11 ) }
    dend_20 { pt3dadd( 5.83868, 87.0912, 9.38988, 1.33 ) }
    dend_20 { pt3dadd( 5.89605, 87.6773, 9.41497, 1.33 ) }
    dend_20 { pt3dadd( 6.03304, 88.7351, 9.39488, 1.18 ) }
    dend_20 { pt3dadd( 6.1896, 89.7752, 9.32404, 1.18 ) }
    dend_20 { pt3dadd( 6.20923, 89.8974, 9.30387, 1.18 ) }
    dend_20 { pt3dadd( 6.39466, 90.9289, 9.04506, 1.11 ) }
    dend_20 { pt3dadd( 6.60129, 91.9641, 8.71465, 1.11 ) }
    dend_20 { pt3dadd( 6.83416, 92.9998, 8.32145, 1.03 ) }
    dend_20 { pt3dadd( 7.04407, 93.9397, 7.93195, 0.88 ) }
    dend_20 { pt3dadd( 7.31773, 95.3897, 7.33127, 0.88 ) }
    dend_20 { pt3dadd( 7.33903, 95.5618, 7.26834, 0.88 ) }
    dend_20 { pt3dadd( 7.45499, 96.768, 6.95299, 0.88 ) }
    dend_20 { pt3dadd( 7.46025, 96.8568, 6.94293, 0.88 ) }
    dend_20 { pt3dadd( 7.45852, 97.8121, 7.02931, 0.88 ) }
    dend_20 { pt3dadd( 7.37932, 99.0467, 7.33162, 0.88 ) }
    dend_20 { pt3dadd( 7.26756, 99.9236, 7.65989, 0.88 ) }
    dend_20 { pt3dadd( 7.00424, 101.267, 8.21396, 0.96 ) }
    dend_20 { pt3dadd( 6.92683, 101.522, 8.33341, 0.96 ) }
    dend_20 { pt3dadd( 6.6576, 102.269, 8.68925, 1.47 ) }
    dend_20 { pt3dadd( 6.3898, 102.969, 9.03271, 1.62 ) }
    dend_20 { pt3dadd( 6.01716, 103.894, 9.51589, 1.11 ) }
    dend_20 { pt3dadd( 5.63782, 104.812, 9.98122, 1.11 ) }
    dend_20 { pt3dadd( 5.14066, 105.974, 10.5326, 1.11 ) }
    dend_20 { pt3dadd( 4.75909, 106.982, 10.997, 0.96 ) }
    dend_20 { pt3dadd( 4.44966, 107.936, 11.4223, 0.96 ) }
    dend_20 { pt3dadd( 4.09657, 109.081, 11.9292, 0.96 ) }
    dend_20 { pt3dadd( 4.07249, 109.175, 11.967, 0.96 ) }
    dend_20 { pt3dadd( 3.91728, 109.874, 12.1911, 0.96 ) }
    dend_20 { pt3dadd( 3.63263, 111.151, 12.4371, 1.18 ) }
    dend_20 { pt3dadd( 3.60297, 111.273, 12.4492, 1.18 ) }
    dend_20 { pt3dadd( 3.18596, 112.839, 12.5189, 1.18 ) }
    dend_20 { pt3dadd( 2.73938, 114.455, 12.539, 1.03 ) }
    dend_20 { pt3dadd( 2.41401, 115.61, 12.5558, 0.88 ) }
    dend_20 { pt3dadd( 1.96131, 117.174, 12.5715, 1.03 ) }
    dend_20 { pt3dadd( 1.64517, 118.257, 12.5847, 1.03 ) }
    dend_20 { pt3dadd( 1.48602, 118.867, 12.602, 1.03 ) }
    dend_20 { pt3dadd( 1.45667, 119.029, 12.6075, 1.03 ) }
    dend_20 { pt3dadd( 1.32296, 120.038, 12.6916, 1.03 ) }
    dend_20 { pt3dadd( 1.30666, 120.227, 12.7189, 1.03 ) }
    dend_20 { pt3dadd( 1.26399, 121.115, 12.947, 1.03 ) }
    dend_20 { pt3dadd( 1.19245, 122.623, 13.3938, 1.18 ) }
    dend_20 { pt3dadd( 1.14899, 123.952, 13.8466, 1.18 ) }
    dend_20 { pt3dadd( 1.12877, 124.761, 14.1503, 1.18 ) }
    dend_20 { pt3dadd( 1.11407, 125.634, 14.5073, 1.18 ) }
    dend_20 { pt3dadd( 1.08019, 127.453, 15.2791, 1.18 ) }
    dend_20 { pt3dadd( 1.07852, 128.73, 15.8622, 1.18 ) }
    dend_20 { pt3dadd( 1.09679, 130.034, 16.4759, 1.18 ) }
    dend_20 { pt3dadd( 1.09778, 130.118, 16.5137, 1.18 ) }
    dend_20 { pt3dadd( 1.09036, 130.885, 16.817, 1.18 ) }
    dend_20 { pt3dadd( 1.02999, 132.291, 17.2845, 1.47 ) }
    dend_20 { pt3dadd( 0.964965, 133.265, 17.5358, 1.47 ) }
    dend_20 { pt3dadd( 0.884311, 134.234, 17.7647, 1.33 ) }
    dend_20 { pt3dadd( 0.754949, 135.694, 18.0651, 1.03 ) }
    dend_20 { pt3dadd( 0.562278, 137.707, 18.4677, 0.96 ) }
    dend_20 { pt3dadd( 0.393591, 139.36, 18.7851, 0.96 ) }
    dend_20 { pt3dadd( 0.249257, 140.539, 18.9823, 0.96 ) }
    dend_20 { pt3dadd( 0.104921, 141.535, 19.1232, 1.11 ) }
    dend_20 { pt3dadd( 0.0210334, 142.12, 19.1975, 1.11 ) }
    dend_20 { pt3dadd( -0.1384, 143.317, 19.3184, 1.25 ) }
    dend_20 { pt3dadd( -0.197941, 143.857, 19.3579, 1.25 ) }
    dend_20 { pt3dadd( -0.368971, 145.22, 19.4371, 1.03 ) }
    dend_20 { pt3dadd( -0.402946, 145.425, 19.4515, 1.03 ) }
    dend_20 { pt3dadd( -0.499703, 146.048, 19.519, 1.03 ) }
    dend_20 { pt3dadd( -0.590176, 146.665, 19.6128, 1.03 ) }
    dend_20 { pt3dadd( -0.643998, 147.398, 19.7768, 1.03 ) }
    dend_20 { pt3dadd( -0.669972, 148.588, 20.1274, 1.03 ) }
    dend_20 { pt3dadd( -0.635514, 149.464, 20.4348, 1.03 ) }
    dend_20 { pt3dadd( -0.554373, 150.268, 20.7857, 1.03 ) }
    dend_20 { pt3dadd( -0.530962, 150.424, 20.8646, 1.03 ) }
    dend_20 { pt3dadd( -0.305415, 151.638, 21.5309, 1.03 ) }
    dend_20 { pt3dadd( -0.289613, 151.714, 21.576, 1.03 ) }
    dend_20 { pt3dadd( -0.0395881, 153.043, 22.3836, 1.03 ) }
    dend_20 { pt3dadd( 0.155401, 154.423, 23.1777, 1.03 ) }
    dend_20 { pt3dadd( 0.164607, 154.543, 23.2379, 1.03 ) }
    dend_20 { pt3dadd( 0.232592, 155.492, 23.6227, 1.03 ) }
    dend_20 { pt3dadd( 0.240904, 155.579, 23.6518, 1.03 ) }
    dend_20 { pt3dadd( 0.476138, 157.173, 24.0766, 1.03 ) }
    dend_20 { pt3dadd( 0.511212, 157.359, 24.1121, 1.03 ) }
    dend_20 { pt3dadd( 0.722235, 158.467, 24.2589, 1.25 ) }
    dend_20 { pt3dadd( 1.02737, 160.091, 24.4643, 1.25 ) }
    dend_20 { pt3dadd( 1.28995, 161.459, 24.628, 1.25 ) }
    dend_20 { pt3dadd( 1.48898, 162.702, 24.7877, 0.88 ) }
    dend_20 { pt3dadd( 1.61809, 163.934, 24.9402, 0.74 ) }
    dend_20 { pt3dadd( 1.63295, 164.969, 25.0606, 1.18 ) }
    dend_20 { pt3dadd( 1.50686, 166.606, 25.2428, 1.4 ) }
    dend_20 { pt3dadd( 1.47153, 166.796, 25.2648, 1.4 ) }
    dend_20 { pt3dadd( 1.11017, 168.114, 25.4137, 1.4 ) }
    dend_20 { pt3dadd( 0.633993, 169.537, 25.6058, 1.18 ) }
    dend_20 { pt3dadd( 0.163472, 170.833, 25.7873, 1.03 ) }
    dend_20 { pt3dadd( 0.131974, 170.917, 25.7983, 1.03 ) }
    dend_20 { pt3dadd( -0.345107, 172.12, 25.949, 1.03 ) }
    dend_20 { pt3dadd( -0.586632, 172.745, 26.0282, 0.88 ) }
    dend_20 { pt3dadd( -1.21041, 174.494, 26.2584, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_20 { pt3dadd( -1.23766, 174.58, 26.2755, 1.11 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 1/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 10.5969, 68.0772, 4.11114, 0.52 ) }
    dend_15 { pt3dadd( 10.253, 68.8846, 3.52442, 0.52 ) }
    dend_15 { pt3dadd( 9.91681, 69.4797, 3.07789, 0.74 ) }
    dend_15 { pt3dadd( 9.57385, 69.9082, 2.71087, 0.74 ) }
    dend_15 { pt3dadd( 9.43469, 70.0553, 2.57557, 0.74 ) }
    dend_15 { pt3dadd( 9.16624, 70.2968, 2.25561, 0.74 ) }
    dend_15 { pt3dadd( 8.72535, 70.6459, 1.62784, 0.44 ) }
    dend_15 { pt3dadd( 8.47376, 70.808, 1.24234, 0.81 ) }
    dend_15 { pt3dadd( 8.02895, 71.0837, 0.511381, 0.81 ) }
    dend_15 { pt3dadd( 8.00579, 71.0995, 0.467301, 0.81 ) }
    dend_15 { pt3dadd( 7.2068, 71.7414, -1.15284, 1.03 ) }
    dend_15 { pt3dadd( 6.68137, 72.2634, -2.32572, 0.81 ) }
    dend_15 { pt3dadd( 6.53746, 72.4452, -2.67552, 0.81 ) }
    dend_15 { pt3dadd( 6.23467, 72.8884, -3.39069, 0.88 ) }
    dend_15 { pt3dadd( 5.87528, 73.4443, -4.14437, 0.81 ) }
    dend_15 { pt3dadd( 5.55911, 73.8631, -4.66489, 0.81 ) }
    dend_15 { pt3dadd( 5.05814, 74.4064, -5.2585, 0.59 ) }
    dend_15 { pt3dadd( 4.75607, 74.6439, -5.56563, 0.59 ) }
    dend_15 { pt3dadd( 4.21333, 74.8979, -6.11333, 0.88 ) }
    dend_15 { pt3dadd( 3.54803, 75.0808, -7.22603, 0.88 ) }
    dend_15 { pt3dadd( 3.05896, 75.1564, -8.30994, 0.88 ) }
    dend_15 { pt3dadd( 2.82817, 75.1737, -8.91813, 1.25 ) }
    dend_15 { pt3dadd( 2.42123, 75.1814, -10.1021, 1.25 ) }
    dend_15 { pt3dadd( 1.95427, 75.1852, -11.5669, 1.11 ) }
    dend_15 { pt3dadd( 0.558195, 75.2702, -16.4338, 1.03 ) }
    dend_15 { pt3dadd( 0.19691, 75.3242, -17.8425, 0.66 ) }
    dend_15 { pt3dadd( 0.185214, 75.3292, -17.8996, 0.66 ) }
    dend_15 { pt3dadd( 0.00330876, 75.4894, -19.0214, 0.52 ) }
    dend_15 { pt3dadd( -0.0587322, 75.6002, -19.5305, 0.52 ) }
    dend_15 { pt3dadd( -0.112854, 75.8521, -20.29, 0.52 ) }
    dend_15 { pt3dadd( -0.106603, 75.8838, -20.3408, 0.52 ) }
    dend_15 { pt3dadd( 0.243057, 76.7253, -21.5957, 1.25 ) }
    dend_15 { pt3dadd( 0.318799, 76.9142, -21.882, 1.69 ) }
    dend_15 { pt3dadd( 0.334869, 76.9504, -21.9375, 1.69 ) }
    dend_15 { pt3dadd( 0.406166, 77.1465, -22.2423, 1.69 ) }
    dend_15 { pt3dadd( 0.551022, 78.0663, -23.6895, 0.88 ) }
    dend_15 { pt3dadd( 0.478375, 79.0219, -25.0348, 0.59 ) }
    dend_15 { pt3dadd( 0.366921, 79.3743, -25.4932, 0.81 ) }
    dend_15 { pt3dadd( 0.351771, 79.4134, -25.5469, 0.81 ) }
    dend_15 { pt3dadd( 0.215612, 79.7685, -26.0721, 1.11 ) }
    dend_15 { pt3dadd( -0.0583415, 80.5082, -27.1764, 1.11 ) }
    dend_15 { pt3dadd( -0.202037, 80.9207, -27.7637, 0.96 ) }
    dend_15 { pt3dadd( -0.41027, 81.711, -28.9098, 0.88 ) }
    dend_15 { pt3dadd( -0.592129, 82.6895, -30.2523, 0.81 ) }
    dend_15 { pt3dadd( -0.674486, 83.559, -31.4265, 0.52 ) }
    dend_15 { pt3dadd( -0.656429, 83.8195, -31.8214, 0.52 ) }
    dend_15 { pt3dadd( -0.570235, 84.1483, -32.3328, 0.59 ) }
    dend_15 { pt3dadd( -0.539085, 84.2137, -32.4346, 0.59 ) }
    dend_15 { pt3dadd( -0.250921, 84.6564, -33.0805, 0.59 ) }
    dend_15 { pt3dadd( 0.281231, 85.3822, -34.1071, 0.81 ) }
    dend_15 { pt3dadd( 1.08546, 86.343, -35.5464, 1.4 ) }
    dend_15 { pt3dadd( 1.37195, 86.6338, -36.0583, 1.62 ) }
    dend_15 { pt3dadd( 1.80485, 86.9843, -36.7919, 1.84 ) }
    dend_15 { pt3dadd( 1.83385, 87.0039, -36.8387, 1.84 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 55/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 22.3878, 49.5769, 7.36029, 1.18 ) }
    dend_3 { pt3dadd( 21.4784, 51.4037, 8.57798, 1.18 ) }
    dend_3 { pt3dadd( 21.1088, 52.5523, 9.17, 0.96 ) }
    dend_3 { pt3dadd( 21.0988, 52.6435, 9.20438, 0.96 ) }
    dend_3 { pt3dadd( 21.2123, 53.9036, 9.58408, 0.74 ) }
    dend_3 { pt3dadd( 21.2319, 53.9945, 9.60663, 0.74 ) }
    dend_3 { pt3dadd( 21.4567, 54.691, 9.75983, 0.88 ) }
    dend_3 { pt3dadd( 21.9215, 55.6379, 9.93583, 0.88 ) }
    dend_3 { pt3dadd( 22.4487, 56.5969, 10.159, 0.59 ) }
    dend_3 { pt3dadd( 22.9206, 57.4678, 10.5007, 0.52 ) }
    dend_3 { pt3dadd( 23.2761, 58.1238, 10.8673, 0.81 ) }
    dend_3 { pt3dadd( 23.7357, 59.0005, 11.4033, 0.52 ) }
    dend_3 { pt3dadd( 24.4224, 60.3865, 12.3985, 0.88 ) }
    dend_3 { pt3dadd( 24.5101, 60.6014, 12.5836, 0.88 ) }
    dend_3 { pt3dadd( 24.8688, 61.7844, 13.8277, 1.33 ) }
    dend_3 { pt3dadd( 24.8972, 61.9671, 14.06, 1.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 71/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 22.3878, 49.5769, 7.36029, 1.11 ) }
    dend_2 { pt3dadd( 24.8591, 48.6991, 6.01183, 1.11 ) }
    dend_2 { pt3dadd( 25.678, 48.461, 5.67397, 1.03 ) }
    dend_2 { pt3dadd( 26.6084, 48.2048, 5.35857, 0.88 ) }
    dend_2 { pt3dadd( 28.2907, 47.7526, 4.95561, 0.59 ) }
    dend_2 { pt3dadd( 29.2348, 47.4749, 4.76585, 0.81 ) }
    dend_2 { pt3dadd( 30.0797, 47.2087, 4.60261, 0.81 ) }
    dend_2 { pt3dadd( 30.7957, 46.9908, 4.51555, 1.03 ) }
    dend_2 { pt3dadd( 31.1058, 46.921, 4.45764, 1.03 ) }
    dend_2 { pt3dadd( 32.2083, 46.7237, 4.13134, 1.03 ) }
    dend_2 { pt3dadd( 33.853, 46.3666, 3.5018, 0.66 ) }
    dend_2 { pt3dadd( 35.1383, 46.0153, 2.89402, 0.81 ) }
    dend_2 { pt3dadd( 36.3567, 45.589, 2.22423, 0.59 ) }
    dend_2 { pt3dadd( 37.4915, 45.1049, 1.51108, 0.96 ) }
    dend_2 { pt3dadd( 39.0599, 44.3153, 0.436466, 0.59 ) }
    dend_2 { pt3dadd( 40.1309, 43.6807, -0.3661, 0.59 ) }
    dend_2 { pt3dadd( 41.1334, 43.0019, -1.09795, 0.96 ) }
    dend_2 { pt3dadd( 42.013, 42.3481, -1.66323, 0.81 ) }
    dend_2 { pt3dadd( 42.8552, 41.6829, -2.08356, 0.81 ) }
    dend_2 { pt3dadd( 43.355, 41.3026, -2.23826, 0.96 ) }
    dend_2 { pt3dadd( 44.4569, 40.6419, -2.40821, 0.37 ) }
    dend_2 { pt3dadd( 45.4751, 40.255, -2.48776, 0.37 ) }
    dend_2 { pt3dadd( 46.6924, 39.9964, -2.51359, 0.44 ) }
    dend_2 { pt3dadd( 47.5043, 39.9254, -2.52127, 0.81 ) }
    dend_2 { pt3dadd( 48.4536, 39.9055, -2.52778, 1.03 ) }
    dend_2 { pt3dadd( 49.8607, 39.8779, -2.5564, 0.52 ) }
    dend_2 { pt3dadd( 50.3698, 39.8315, -2.58554, 0.44 ) }
    dend_2 { pt3dadd( 50.4382, 39.8151, -2.59697, 0.44 ) }
    dend_2 { pt3dadd( 51.8267, 39.1928, -2.89795, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_2 { pt3dadd( 52.3057, 38.9008, -3.00718, 0.88 ) }
    dend_2 { pt3dadd( 53.1266, 38.2839, -3.15271, 1.03 ) }
    dend_2 { pt3dadd( 54.1772, 37.41, -3.21411, 1.03 ) }
    dend_2 { pt3dadd( 55.1083, 36.6407, -3.19623, 0.96 ) }
    dend_2 { pt3dadd( 56.0641, 35.9284, -3.0849, 0.52 ) }
    dend_2 { pt3dadd( 56.1201, 35.8898, -3.0722, 0.52 ) }
    dend_2 { pt3dadd( 56.7985, 35.5259, -2.85688, 0.59 ) }
    dend_2 { pt3dadd( 57.6855, 35.2041, -2.46697, 0.59 ) }
    dend_2 { pt3dadd( 58.3106, 35.0573, -2.11171, 0.29 ) }
    dend_2 { pt3dadd( 59.2176, 34.9081, -1.53726, 0.29 ) }
    dend_2 { pt3dadd( 59.2756, 34.8992, -1.50063, 0.29 ) }
    dend_2 { pt3dadd( 59.9965, 34.7469, -1.05036, 0.66 ) }
    dend_2 { pt3dadd( 60.5794, 34.5879, -0.69083, 0.81 ) }
    dend_2 { pt3dadd( 61.3011, 34.2881, -0.237138, 0.88 ) }
    dend_2 { pt3dadd( 61.4018, 34.2259, -0.162185, 0.88 ) }
    dend_2 { pt3dadd( 61.9413, 33.7946, 0.277997, 1.03 ) }
    dend_2 { pt3dadd( 62.3759, 33.4262, 0.629357, 1.03 ) }
    dend_2 { pt3dadd( 62.4209, 33.3866, 0.663916, 1.03 ) }
    dend_2 { pt3dadd( 62.9958, 32.871, 1.10336, 0.81 ) }
    dend_2 { pt3dadd( 63.9492, 32.0415, 1.80962, 0.37 ) }
    dend_2 { pt3dadd( 64.4771, 31.6205, 2.1741, 0.66 ) }
    dend_2 { pt3dadd( 64.9276, 31.2847, 2.46278, 0.66 ) }
    dend_2 { pt3dadd( 65.5947, 30.8236, 2.81786, 0.52 ) }
    dend_2 { pt3dadd( 66.1673, 30.4653, 3.04774, 0.52 ) }
    dend_2 { pt3dadd( 67.0219, 29.9587, 3.29839, 0.96 ) }
    dend_2 { pt3dadd( 67.6749, 29.5553, 3.42382, 1.25 ) }
    dend_2 { pt3dadd( 68.4815, 29.0317, 3.55559, 1.03 ) }
    dend_2 { pt3dadd( 69.3553, 28.4323, 3.6779, 0.81 ) }
    dend_2 { pt3dadd( 70.2941, 27.8004, 3.79078, 0.66 ) }
    dend_2 { pt3dadd( 70.7747, 27.5034, 3.85045, 0.74 ) }
    dend_2 { pt3dadd( 71.3314, 27.1846, 3.93213, 0.74 ) }
    dend_2 { pt3dadd( 72.1439, 26.7532, 4.10408, 0.37 ) }
    dend_2 { pt3dadd( 72.195, 26.7289, 4.11982, 0.37 ) }
    dend_2 { pt3dadd( 72.8807, 26.4326, 4.40045, 0.29 ) }
    dend_2 { pt3dadd( 73.89, 26.0607, 4.73913, 0.66 ) }
    dend_2 { pt3dadd( 74.6387, 25.8057, 4.93009, 1.03 ) }
    dend_2 { pt3dadd( 75.4385, 25.5313, 5.09327, 0.74 ) }
    dend_2 { pt3dadd( 76.3882, 25.18, 5.24924, 0.74 ) }
    dend_2 { pt3dadd( 76.9808, 24.9254, 5.33458, 0.96 ) }
    dend_2 { pt3dadd( 78.4019, 24.1999, 5.51386, 1.18 ) }
    dend_2 { pt3dadd( 78.9516, 23.8959, 5.57274, 0.96 ) }
    dend_2 { pt3dadd( 79.6581, 23.4905, 5.65177, 0.44 ) }
    dend_2 { pt3dadd( 79.7259, 23.451, 5.6598, 0.44 ) }
    dend_2 { pt3dadd( 80.5719, 22.9383, 5.75355, 0.66 ) }
    dend_2 { pt3dadd( 81.1327, 22.5983, 5.80219, 0.81 ) }
    dend_2 { pt3dadd( 81.4113, 22.4348, 5.80517, 0.81 ) }
    dend_2 { pt3dadd( 82.0895, 22.0684, 5.75671, 0.66 ) }
    dend_2 { pt3dadd( 82.3279, 21.9498, 5.73468, 0.66 ) }
    dend_2 { pt3dadd( 83.1993, 21.538, 5.6942, 0.66 ) }
    dend_2 { pt3dadd( 84.1881, 21.1023, 5.6872, 0.44 ) }
    dend_2 { pt3dadd( 85.6838, 20.4304, 5.74919, 0.37 ) }
    dend_2 { pt3dadd( 86.456, 20.0545, 5.81175, 0.88 ) }
    dend_2 { pt3dadd( 87.5293, 19.4903, 5.9923, 0.88 ) }
    dend_2 { pt3dadd( 88.3693, 19.043, 6.21761, 1.03 ) }
    dend_2 { pt3dadd( 89.0135, 18.7017, 6.46843, 1.03 ) }
    dend_2 { pt3dadd( 89.6047, 18.4119, 6.76188, 0.74 ) }
    dend_2 { pt3dadd( 90.3161, 18.0961, 7.17305, 0.52 ) }
    dend_2 { pt3dadd( 91.225, 17.7285, 7.68546, 0.52 ) }
    dend_2 { pt3dadd( 92.0008, 17.418, 8.10674, 0.29 ) }
    dend_2 { pt3dadd( 92.0697, 17.3896, 8.13755, 0.29 ) }
    dend_2 { pt3dadd( 92.7042, 17.0777, 8.39639, 0.29 ) }
    dend_2 { pt3dadd( 93.2626, 16.7391, 8.58115, 0.59 ) }
    dend_2 { pt3dadd( 93.3461, 16.6778, 8.6028, 0.59 ) }
    dend_2 { pt3dadd( 93.9812, 16.0829, 8.68301, 0.88 ) }
    dend_2 { pt3dadd( 94.5733, 15.3832, 8.72773, 0.74 ) }
    dend_2 { pt3dadd( 95.1337, 14.616, 8.69279, 0.44 ) }
    dend_2 { pt3dadd( 95.5623, 13.9424, 8.60712, 0.29 ) }
    dend_2 { pt3dadd( 95.7831, 13.5565, 8.5329, 0.59 ) }
    dend_2 { pt3dadd( 96.079, 12.9533, 8.38194, 0.44 ) }
    dend_2 { pt3dadd( 96.2907, 12.4309, 8.21334, 0.44 ) }
    dend_2 { pt3dadd( 96.5858, 11.4189, 7.85828, 0.81 ) }
    dend_2 { pt3dadd( 96.5972, 11.3551, 7.83407, 0.81 ) }
    dend_2 { pt3dadd( 96.6416, 10.7419, 7.63029, 1.03 ) }
    dend_2 { pt3dadd( 96.6543, 9.99989, 7.41661, 0.88 ) }
    dend_2 { pt3dadd( 96.6546, 9.93309, 7.40144, 0.88 ) }
    dend_2 { pt3dadd( 96.6686, 8.98708, 7.24678, 0.59 ) }
    dend_2 { pt3dadd( 96.6931, 8.31568, 7.19243, 0.59 ) }
    dend_2 { pt3dadd( 96.758, 7.56234, 7.1667, 0.88 ) }
    dend_2 { pt3dadd( 96.7844, 7.35483, 7.16782, 0.88 ) }
    dend_2 { pt3dadd( 96.9794, 6.34086, 7.23757, 0.37 ) }
    dend_2 { pt3dadd( 97.1364, 5.73482, 7.30309, 0.74 ) }
    dend_2 { pt3dadd( 97.3228, 5.15588, 7.38885, 0.96 ) }
    dend_2 { pt3dadd( 97.605, 4.35215, 7.48182, 0.96 ) }
    dend_2 { pt3dadd( 97.6282, 4.28799, 7.4879, 0.96 ) }
    dend_2 { pt3dadd( 97.8983, 3.59657, 7.51913, 1.25 ) }
    dend_2 { pt3dadd( 98.33, 2.66594, 7.54801, 0.44 ) }
    dend_2 { pt3dadd( 98.658, 2.09846, 7.53219, 0.37 ) }
    dend_2 { pt3dadd( 99.2211, 1.27317, 7.48252, 0.96 ) }
    dend_2 { pt3dadd( 99.7571, 0.58171, 7.43638, 0.96 ) }
    dend_2 { pt3dadd( 100.613, -0.383674, 7.35682, 0.74 ) }
    dend_2 { pt3dadd( 101.343, -1.1071, 7.26228, 0.74 ) }
    dend_2 { pt3dadd( 102.291, -1.94868, 7.14114, 0.29 ) }
    dend_2 { pt3dadd( 102.766, -2.35836, 7.10633, 0.52 ) }
    dend_2 { pt3dadd( 103.482, -2.99394, 7.0986, 0.88 ) }
    dend_2 { pt3dadd( 104.078, -3.55196, 7.11887, 1.03 ) }
    dend_2 { pt3dadd( 105.053, -4.56789, 7.22094, 0.29 ) }
    dend_2 { pt3dadd( 105.429, -5.0307, 7.32792, 0.88 ) }
    dend_2 { pt3dadd( 106.036, -5.89943, 7.73558, 0.81 ) }
    dend_2 { pt3dadd( 106.338, -6.36623, 8.10219, 0.96 ) }
    dend_2 { pt3dadd( 106.626, -6.83248, 8.65152, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_2 { pt3dadd( 106.651, -6.87431, 8.71593, 0.59 ) }
    dend_2 { pt3dadd( 107.115, -7.64399, 10.1414, 0.52 ) }
    dend_2 { pt3dadd( 107.387, -8.07714, 10.931, 0.52 ) }
    dend_2 { pt3dadd( 107.732, -8.59844, 11.7721, 0.88 ) }
    dend_2 { pt3dadd( 107.757, -8.63701, 11.8237, 0.88 ) }
    dend_2 { pt3dadd( 107.896, -8.87444, 12.0896, 1.03 ) }
    dend_2 { pt3dadd( 108.201, -9.45799, 12.6156, 1.03 ) }
    dend_2 { pt3dadd( 108.481, -10.1355, 13.0781, 0.44 ) }
    dend_2 { pt3dadd( 108.724, -10.9174, 13.5417, 0.44 ) }
    dend_2 { pt3dadd( 108.926, -11.6761, 13.9572, 0.44 ) }
    dend_2 { pt3dadd( 109.131, -12.4472, 14.3953, 0.52 ) }
    dend_2 { pt3dadd( 109.289, -13.0067, 14.7223, 0.44 ) }
    dend_2 { pt3dadd( 109.54, -13.8258, 15.2095, 0.44 ) }
    dend_2 { pt3dadd( 109.729, -14.3824, 15.5326, 0.81 ) }
    dend_2 { pt3dadd( 109.961, -14.9784, 15.8485, 0.81 ) }
    dend_2 { pt3dadd( 110.284, -15.6923, 16.2193, 0.37 ) }
    dend_2 { pt3dadd( 110.642, -16.402, 16.5569, 0.81 ) }
    dend_2 { pt3dadd( 110.887, -16.8536, 16.7698, 0.88 ) }
    dend_2 { pt3dadd( 111.08, -17.1928, 16.9214, 0.88 ) }
    dend_2 { pt3dadd( 111.398, -17.7771, 17.1879, 0.66 ) }
    dend_2 { pt3dadd( 111.866, -18.6722, 17.5976, 0.44 ) }
    dend_2 { pt3dadd( 112.282, -19.4222, 17.9494, 0.29 ) }
    dend_2 { pt3dadd( 112.653, -19.9871, 18.1969, 0.59 ) }
    dend_2 { pt3dadd( 113.038, -20.5141, 18.4058, 0.74 ) }
    dend_2 { pt3dadd( 113.125, -20.6271, 18.4448, 0.74 ) }
    dend_2 { pt3dadd( 113.56, -21.172, 18.5626, 0.59 ) }
    dend_2 { pt3dadd( 114.225, -22.0057, 18.6081, 0.44 ) }
    dend_2 { pt3dadd( 114.932, -22.932, 18.5816, 0.44 ) }
    dend_2 { pt3dadd( 115.26, -23.4057, 18.541, 0.44 ) }
    dend_2 { pt3dadd( 115.667, -24.0658, 18.4669, 0.74 ) }
    dend_2 { pt3dadd( 116.167, -24.9671, 18.3521, 0.74 ) }
    dend_2 { pt3dadd( 116.64, -25.9332, 18.2178, 0.29 ) }
    dend_2 { pt3dadd( 116.824, -26.345, 18.1568, 0.96 ) }
    dend_2 { pt3dadd( 117.025, -26.7983, 18.107, 0.96 ) }
    dend_2 { pt3dadd( 117.34, -27.4394, 18.0511, 0.81 ) }
    dend_2 { pt3dadd( 117.375, -27.5017, 18.0501, 0.81 ) }
    dend_2 { pt3dadd( 117.665, -27.9802, 18.1059, 0.96 ) }
    dend_2 { pt3dadd( 118.129, -28.668, 18.2116, 0.52 ) }
    dend_2 { pt3dadd( 118.474, -29.1457, 18.2866, 0.52 ) }
    dend_2 { pt3dadd( 118.508, -29.1931, 18.2942, 0.52 ) }
    dend_2 { pt3dadd( 118.952, -29.8582, 18.3606, 0.44 ) }
    dend_2 { pt3dadd( 119.45, -30.6533, 18.4069, 0.59 ) }
    dend_2 { pt3dadd( 120.149, -31.8357, 18.454, 0.29 ) }
    dend_2 { pt3dadd( 120.392, -32.2627, 18.4687, 0.96 ) }
    dend_2 { pt3dadd( 120.783, -32.9733, 18.4831, 1.33 ) }
    dend_2 { pt3dadd( 121.421, -34.1784, 18.5068, 0.29 ) }
    dend_2 { pt3dadd( 121.983, -35.2593, 18.5372, 0.29 ) }
    dend_2 { pt3dadd( 122.295, -35.8717, 18.5649, 0.88 ) }
    dend_2 { pt3dadd( 122.326, -35.9358, 18.5721, 0.88 ) }
    dend_2 { pt3dadd( 122.634, -36.6588, 18.7005, 0.88 ) }
    dend_2 { pt3dadd( 123.046, -37.7751, 18.9846, 0.29 ) }
    dend_2 { pt3dadd( 123.304, -38.617, 19.2761, 0.29 ) }
    dend_2 { pt3dadd( 123.365, -38.8826, 19.3843, 0.66 ) }
    dend_2 { pt3dadd( 123.531, -39.8358, 19.789, 0.66 ) }
    dend_2 { pt3dadd( 123.632, -40.5344, 20.0979, 0.66 ) }
    dend_2 { pt3dadd( 123.711, -41.1708, 20.3908, 0.96 ) }
    dend_2 { pt3dadd( 123.774, -41.7704, 20.654, 0.74 ) }
    dend_2 { pt3dadd( 123.832, -42.4494, 20.9487, 0.52 ) }
    dend_2 { pt3dadd( 123.898, -43.3, 21.335, 0.44 ) }
    dend_2 { pt3dadd( 123.921, -43.5085, 21.4301, 0.44 ) }
    dend_2 { pt3dadd( 124.059, -44.383, 21.8088, 0.37 ) }
    dend_2 { pt3dadd( 124.268, -45.4264, 22.243, 0.37 ) }
    dend_2 { pt3dadd( 124.513, -46.5383, 22.681, 0.74 ) }
    dend_2 { pt3dadd( 124.794, -47.4569, 22.9854, 0.29 ) }
    dend_2 { pt3dadd( 125.177, -48.3416, 23.2576, 0.29 ) }
    dend_2 { pt3dadd( 125.692, -49.257, 23.4788, 0.74 ) }
    dend_2 { pt3dadd( 125.969, -49.6166, 23.5406, 1.03 ) }
    dend_2 { pt3dadd( 126.018, -49.6652, 23.545, 1.03 ) }
    dend_2 { pt3dadd( 127.131, -50.5877, 23.5667, 0.22 ) }
    dend_2 { pt3dadd( 128.074, -51.3145, 23.5456, 0.22 ) }
    dend_2 { pt3dadd( 128.646, -51.747, 23.5357, 0.81 ) }
    dend_2 { pt3dadd( 129.246, -52.223, 23.5493, 0.81 ) }
    dend_2 { pt3dadd( 129.298, -52.268, 23.5508, 0.81 ) }
    dend_2 { pt3dadd( 130.077, -53.0435, 23.6053, 0.29 ) }
    dend_2 { pt3dadd( 130.599, -53.6934, 23.6103, 0.44 ) }
    dend_2 { pt3dadd( 130.661, -53.7725, 23.599, 0.44 ) }
    dend_2 { pt3dadd( 131.043, -54.2307, 23.5068, 0.44 ) }
    dend_2 { pt3dadd( 131.094, -54.2891, 23.4844, 0.44 ) }
    dend_2 { pt3dadd( 131.672, -54.9757, 23.1695, 0.52 ) }
    dend_2 { pt3dadd( 132.58, -56.1099, 22.5152, 0.52 ) }
    dend_2 { pt3dadd( 133.172, -56.8141, 22.0198, 0.66 ) }
    dend_2 { pt3dadd( 133.592, -57.2583, 21.6433, 0.59 ) }
    dend_2 { pt3dadd( 134.618, -58.2623, 20.6626, 0.37 ) }
    dend_2 { pt3dadd( 135.081, -58.7057, 20.2229, 0.29 ) }
    dend_2 { pt3dadd( 136.03, -59.6025, 19.3164, 0.74 ) }
    dend_2 { pt3dadd( 137.123, -60.6737, 18.3054, 0.81 ) }
    dend_2 { pt3dadd( 138.481, -62.0603, 17.0398, 0.29 ) }
    dend_2 { pt3dadd( 138.966, -62.5606, 16.5564, 0.66 ) }
    dend_2 { pt3dadd( 139.576, -63.1768, 15.9639, 0.29 ) }
    dend_2 { pt3dadd( 140.25, -63.8583, 15.3148, 0.59 ) }
    dend_2 { pt3dadd( 140.66, -64.2902, 14.9196, 0.74 ) }
    dend_2 { pt3dadd( 141.601, -65.3561, 13.9896, 1.33 ) }
    dend_2 { pt3dadd( 143.108, -67.1132, 12.4856, 0.29 ) }
    dend_2 { pt3dadd( 143.395, -67.4352, 12.2097, 0.59 ) }
    dend_2 { pt3dadd( 143.598, -67.6522, 12.0265, 0.59 ) }
    dend_2 { pt3dadd( 144.615, -68.681, 11.2693, 0.52 ) }
    dend_2 { pt3dadd( 145.101, -69.1418, 10.99, 0.74 ) }
    dend_2 { pt3dadd( 145.467, -69.4755, 10.8694, 0.74 ) }
    dend_2 { pt3dadd( 146.205, -70.1106, 10.7874, 0.37 ) }
    dend_2 { pt3dadd( 147.316, -71.0162, 10.6808, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_2 { pt3dadd( 148.118, -71.645, 10.6583, 0.37 ) }
    dend_2 { pt3dadd( 148.532, -71.9627, 10.6811, 0.66 ) }
    dend_2 { pt3dadd( 148.931, -72.2658, 10.6986, 0.88 ) }
    dend_2 { pt3dadd( 149.257, -72.5147, 10.7046, 0.88 ) }
    dend_2 { pt3dadd( 150.627, -73.5781, 10.7152, 0.29 ) }
    dend_2 { pt3dadd( 151.775, -74.5121, 10.6993, 0.22 ) }
    dend_2 { pt3dadd( 152.0, -74.7082, 10.692, 0.66 ) }
    dend_2 { pt3dadd( 152.801, -75.4509, 10.6523, 0.22 ) }
    dend_2 { pt3dadd( 153.108, -75.7595, 10.6168, 0.52 ) }
    dend_2 { pt3dadd( 153.64, -76.3652, 10.5291, 0.29 ) }
    dend_2 { pt3dadd( 153.895, -76.7179, 10.4791, 0.74 ) }
    dend_2 { pt3dadd( 154.136, -77.112, 10.4008, 0.74 ) }
    dend_2 { pt3dadd( 154.59, -77.9303, 10.2061, 0.22 ) }
    dend_2 { pt3dadd( 155.092, -78.9246, 9.95545, 0.37 ) }
    dend_2 { pt3dadd( 155.32, -79.3705, 9.81228, 0.37 ) }
    dend_2 { pt3dadd( 155.561, -79.8641, 9.63313, 0.59 ) }
    dend_2 { pt3dadd( 155.772, -80.2905, 9.48312, 0.59 ) }
    dend_2 { pt3dadd( 156.122, -81.0221, 9.22591, 0.22 ) }
    dend_2 { pt3dadd( 156.281, -81.3486, 9.12158, 0.52 ) }
    dend_2 { pt3dadd( 156.88, -82.4726, 8.80958, 0.29 ) }
    dend_2 { pt3dadd( 157.21, -83.0219, 8.63268, 1.11 ) }
    dend_2 { pt3dadd( 157.583, -83.5931, 8.42357, 1.18 ) }
    // Section: dend_104, id: dend_104, parent: dend_102 (entry count 22/100)
    dend_104 { pt3dclear() }
    dend_104 { pt3dadd( -17.262, -157.411, -137.284, 0.29 ) }
    dend_104 { pt3dadd( -17.2094, -158.667, -137.5, 0.29 ) }
    dend_104 { pt3dadd( -17.2151, -159.455, -137.62, 0.29 ) }
    dend_104 { pt3dadd( -17.2848, -160.409, -137.64, 0.22 ) }
    dend_104 { pt3dadd( -17.3832, -160.999, -137.549, 0.74 ) }
    dend_104 { pt3dadd( -17.4786, -161.442, -137.397, 0.88 ) }
    dend_104 { pt3dadd( -17.4911, -161.501, -137.372, 0.88 ) }
    dend_104 { pt3dadd( -17.5982, -161.856, -137.167, 0.88 ) }
    dend_104 { pt3dadd( -17.936, -162.81, -136.495, 0.29 ) }
    dend_104 { pt3dadd( -18.216, -163.594, -135.826, 0.29 ) }
    dend_104 { pt3dadd( -18.4686, -164.358, -135.094, 0.88 ) }
    dend_104 { pt3dadd( -18.6143, -164.812, -134.629, 0.88 ) }
    // Section: dend_103, id: dend_103, parent: dend_102 (entry count 34/100)
    dend_103 { pt3dclear() }
    dend_103 { pt3dadd( -17.262, -157.411, -137.284, 0.59 ) }
    dend_103 { pt3dadd( -18.5871, -158.713, -139.961, 0.59 ) }
    dend_103 { pt3dadd( -18.9326, -159.065, -140.65, 0.37 ) }
    dend_103 { pt3dadd( -19.3796, -159.49, -141.445, 0.37 ) }
    dend_103 { pt3dadd( -19.975, -160.064, -142.455, 0.96 ) }
    dend_103 { pt3dadd( -20.5313, -160.627, -143.389, 1.33 ) }
    dend_103 { pt3dadd( -21.6448, -161.833, -145.292, 0.59 ) }
    dend_103 { pt3dadd( -21.889, -162.17, -145.739, 0.29 ) }
    dend_103 { pt3dadd( -22.2347, -162.687, -146.447, 0.29 ) }
    dend_103 { pt3dadd( -22.4359, -163.034, -146.976, 0.88 ) }
    dend_103 { pt3dadd( -22.5505, -163.248, -147.334, 0.88 ) }
    dend_103 { pt3dadd( -22.766, -163.687, -148.11, 0.66 ) }
    dend_103 { pt3dadd( -22.9949, -164.233, -149.104, 0.88 ) }
    dend_103 { pt3dadd( -23.2986, -165.074, -150.643, 1.4 ) }
    dend_103 { pt3dadd( -23.8593, -166.692, -153.648, 0.59 ) }
    dend_103 { pt3dadd( -24.1677, -167.418, -155.027, 0.59 ) }
    dend_103 { pt3dadd( -24.2963, -167.7, -155.576, 0.52 ) }
    dend_103 { pt3dadd( -24.379, -167.887, -155.946, 1.03 ) }
    dend_103 { pt3dadd( -24.4999, -168.154, -156.464, 0.88 ) }
    dend_103 { pt3dadd( -24.9789, -169.129, -158.291, 0.22 ) }
    dend_103 { pt3dadd( -25.352, -169.756, -159.375, 0.59 ) }
    dend_103 { pt3dadd( -25.8707, -170.433, -160.621, 0.74 ) }
    dend_103 { pt3dadd( -26.4152, -171.045, -161.828, 0.44 ) }
    dend_103 { pt3dadd( -26.7533, -171.4, -162.524, 0.74 ) }
    dend_103 { pt3dadd( -27.3706, -172.082, -163.766, 1.11 ) }
    dend_103 { pt3dadd( -27.6807, -172.462, -164.358, 0.96 ) }
    dend_103 { pt3dadd( -28.7685, -173.877, -166.25, 0.74 ) }
    dend_103 { pt3dadd( -28.7932, -173.907, -166.285, 0.74 ) }
    dend_103 { pt3dadd( -29.227, -174.435, -166.825, 0.74 ) }
    dend_103 { pt3dadd( -29.8247, -175.237, -167.575, 0.74 ) }
    dend_103 { pt3dadd( -30.3961, -176.103, -168.256, 0.37 ) }
    dend_103 { pt3dadd( -30.6821, -176.588, -168.616, 1.03 ) }
    dend_103 { pt3dadd( -30.9433, -177.112, -168.935, 1.18 ) }
    dend_103 { pt3dadd( -31.6719, -178.576, -169.848, 0.29 ) }
    dend_103 { pt3dadd( -31.9199, -179.065, -170.158, 0.59 ) }
    dend_103 { pt3dadd( -32.1157, -179.46, -170.381, 0.59 ) }
    dend_103 { pt3dadd( -32.3636, -180.07, -170.661, 0.44 ) }
    dend_103 { pt3dadd( -32.5311, -180.563, -170.847, 0.29 ) }
    dend_103 { pt3dadd( -32.5485, -180.619, -170.863, 0.29 ) }
    dend_103 { pt3dadd( -32.6854, -181.059, -170.946, 0.59 ) }
    dend_103 { pt3dadd( -32.8362, -181.525, -171.187, 0.59 ) }
    dend_103 { pt3dadd( -32.9466, -181.941, -171.559, 0.44 ) }
    dend_103 { pt3dadd( -33.0224, -182.348, -172.076, 0.29 ) }
    dend_103 { pt3dadd( -33.1058, -182.803, -172.805, 0.88 ) }
    dend_103 { pt3dadd( -33.193, -183.285, -173.719, 1.11 ) }
    dend_103 { pt3dadd( -33.3993, -184.352, -176.007, 0.74 ) }
    dend_103 { pt3dadd( -33.5231, -184.954, -177.334, 0.59 ) }
    dend_103 { pt3dadd( -33.6757, -185.632, -178.841, 0.29 ) }
    dend_103 { pt3dadd( -33.8742, -186.375, -180.457, 0.74 ) }
    dend_103 { pt3dadd( -34.2003, -187.395, -182.554, 1.03 ) }
    dend_103 { pt3dadd( -34.6149, -188.457, -184.499, 0.52 ) }
    dend_103 { pt3dadd( -34.8165, -188.89, -185.114, 0.44 ) }
    dend_103 { pt3dadd( -34.9803, -189.204, -185.456, 0.88 ) }
    dend_103 { pt3dadd( -35.324, -189.822, -185.912, 1.11 ) }
    dend_103 { pt3dadd( -35.5381, -190.197, -186.051, 1.11 ) }
    dend_103 { pt3dadd( -35.959, -190.903, -186.113, 0.59 ) }
    dend_103 { pt3dadd( -36.4024, -191.664, -186.084, 0.44 ) }
    dend_103 { pt3dadd( -36.6518, -192.115, -186.087, 0.66 ) }
    dend_103 { pt3dadd( -37.0654, -192.97, -186.124, 0.59 ) }
    dend_103 { pt3dadd( -37.3669, -193.635, -186.36, 0.37 ) }
    dend_103 { pt3dadd( -37.6383, -194.21, -186.708, 0.44 ) }
    dend_103 { pt3dadd( -37.9823, -194.902, -187.269, 0.66 ) }
    dend_103 { pt3dadd( -38.2503, -195.428, -187.777, 0.81 ) }
    dend_103 { pt3dadd( -38.5023, -195.919, -188.308, 0.88 ) }
    dend_103 { pt3dadd( -39.8539, -198.341, -191.137, 0.52 ) }
    dend_103 { pt3dadd( -40.0914, -198.703, -191.585, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_103 { pt3dadd( -40.2485, -198.901, -191.845, 0.59 ) }
    dend_103 { pt3dadd( -40.4597, -199.115, -192.116, 0.59 ) }
    dend_103 { pt3dadd( -41.0261, -199.585, -192.593, 0.37 ) }
    dend_103 { pt3dadd( -41.6504, -200.004, -192.855, 0.37 ) }
    dend_103 { pt3dadd( -42.3265, -200.393, -192.811, 0.37 ) }
    dend_103 { pt3dadd( -42.3845, -200.425, -192.807, 0.37 ) }
    dend_103 { pt3dadd( -43.2674, -200.881, -192.733, 0.22 ) }
    dend_103 { pt3dadd( -43.6278, -201.037, -192.69, 0.37 ) }
    dend_103 { pt3dadd( -43.9743, -201.147, -192.623, 0.37 ) }
    dend_103 { pt3dadd( -44.8034, -201.354, -192.47, 0.29 ) }
    // Section: dend_101, id: dend_101, parent: dend_99 (entry count 10/100)
    dend_101 { pt3dclear() }
    dend_101 { pt3dadd( 22.4839, -98.3189, -54.7168, 0.29 ) }
    dend_101 { pt3dadd( 23.1101, -98.5015, -55.0636, 0.29 ) }
    dend_101 { pt3dadd( 23.3892, -98.6086, -55.2192, 0.37 ) }
    dend_101 { pt3dadd( 23.4351, -98.6303, -55.2424, 0.37 ) }
    dend_101 { pt3dadd( 23.9876, -98.9696, -55.5282, 0.22 ) }
    dend_101 { pt3dadd( 24.0351, -99.0007, -55.5527, 0.22 ) }
    dend_101 { pt3dadd( 24.3404, -99.2111, -55.7065, 0.52 ) }
    dend_101 { pt3dadd( 24.3785, -99.2438, -55.7256, 0.52 ) }
    dend_101 { pt3dadd( 24.6978, -99.5329, -55.8542, 0.52 ) }
    dend_101 { pt3dadd( 25.2687, -100.037, -56.0393, 0.22 ) }
    dend_101 { pt3dadd( 25.3092, -100.071, -56.0498, 0.22 ) }
    dend_101 { pt3dadd( 25.492, -100.228, -56.0971, 0.37 ) }
    dend_101 { pt3dadd( 25.8177, -100.508, -56.1804, 0.22 ) }
    dend_101 { pt3dadd( 26.4791, -101.074, -56.3374, 0.96 ) }
    dend_101 { pt3dadd( 26.5207, -101.11, -56.3453, 0.96 ) }
    // Section: dend_100, id: dend_100, parent: dend_99 (entry count 25/100)
    dend_100 { pt3dclear() }
    dend_100 { pt3dadd( 22.4839, -98.3189, -54.7168, 0.37 ) }
    dend_100 { pt3dadd( 22.9167, -99.1714, -55.6524, 0.37 ) }
    dend_100 { pt3dadd( 23.1838, -99.8042, -56.2823, 0.66 ) }
    dend_100 { pt3dadd( 23.3049, -100.125, -56.575, 0.88 ) }
    dend_100 { pt3dadd( 23.4273, -100.486, -56.8731, 1.18 ) }
    dend_100 { pt3dadd( 23.7799, -101.644, -57.7416, 0.44 ) }
    dend_100 { pt3dadd( 23.8723, -101.962, -57.9585, 0.29 ) }
    dend_100 { pt3dadd( 23.9858, -102.477, -58.2368, 0.88 ) }
    dend_100 { pt3dadd( 24.0476, -102.78, -58.3678, 1.11 ) }
    dend_100 { pt3dadd( 24.1359, -103.167, -58.504, 0.66 ) }
    dend_100 { pt3dadd( 24.2719, -103.67, -58.6227, 0.37 ) }
    dend_100 { pt3dadd( 24.4484, -104.122, -58.6526, 0.52 ) }
    dend_100 { pt3dadd( 24.4932, -104.206, -58.6552, 0.52 ) }
    dend_100 { pt3dadd( 24.8342, -104.697, -58.6717, 0.59 ) }
    dend_100 { pt3dadd( 25.0792, -105.0, -58.6822, 0.66 ) }
    dend_100 { pt3dadd( 25.1392, -105.064, -58.6795, 0.66 ) }
    dend_100 { pt3dadd( 25.493, -105.432, -58.643, 0.37 ) }
    dend_100 { pt3dadd( 25.901, -105.85, -58.5064, 0.37 ) }
    dend_100 { pt3dadd( 26.2156, -106.166, -58.3651, 0.37 ) }
    dend_100 { pt3dadd( 26.5513, -106.496, -58.1962, 0.96 ) }
    dend_100 { pt3dadd( 27.0794, -106.986, -57.9254, 1.25 ) }
    dend_100 { pt3dadd( 27.5646, -107.407, -57.6982, 0.96 ) }
    dend_100 { pt3dadd( 28.7889, -108.406, -57.1031, 0.52 ) }
    dend_100 { pt3dadd( 29.3036, -108.809, -56.8498, 0.59 ) }
    dend_100 { pt3dadd( 29.6173, -109.045, -56.6984, 0.74 ) }
    dend_100 { pt3dadd( 30.0158, -109.337, -56.521, 0.74 ) }
    dend_100 { pt3dadd( 30.6507, -109.798, -56.2983, 0.29 ) }
    dend_100 { pt3dadd( 31.216, -110.199, -56.1458, 0.66 ) }
    dend_100 { pt3dadd( 31.2526, -110.229, -56.1425, 0.66 ) }
    dend_100 { pt3dadd( 31.5344, -110.509, -56.1207, 0.29 ) }
    dend_100 { pt3dadd( 31.7897, -110.822, -56.1065, 0.74 ) }
    dend_100 { pt3dadd( 32.0192, -111.174, -56.1067, 0.88 ) }
    dend_100 { pt3dadd( 32.0437, -111.215, -56.1078, 0.88 ) }
    dend_100 { pt3dadd( 32.3282, -111.671, -56.1454, 0.37 ) }
    dend_100 { pt3dadd( 32.6524, -112.151, -56.1825, 0.59 ) }
    dend_100 { pt3dadd( 32.8524, -112.426, -56.203, 0.88 ) }
    dend_100 { pt3dadd( 33.2133, -112.89, -56.2389, 0.29 ) }
    dend_100 { pt3dadd( 33.5077, -113.244, -56.2535, 0.22 ) }
    dend_100 { pt3dadd( 33.6472, -113.405, -56.2562, 0.81 ) }
    dend_100 { pt3dadd( 33.8867, -113.666, -56.2543, 1.18 ) }
    dend_100 { pt3dadd( 33.9207, -113.701, -56.2538, 1.18 ) }
    dend_100 { pt3dadd( 34.3113, -114.09, -56.242, 1.03 ) }
    dend_100 { pt3dadd( 34.8352, -114.641, -56.1614, 0.29 ) }
    dend_100 { pt3dadd( 35.2762, -115.172, -56.0449, 0.22 ) }
    dend_100 { pt3dadd( 35.3145, -115.227, -56.0274, 0.22 ) }
    dend_100 { pt3dadd( 35.5777, -115.647, -55.8698, 0.29 ) }
    dend_100 { pt3dadd( 35.7947, -116.01, -55.7297, 1.18 ) }
    dend_100 { pt3dadd( 36.2557, -116.75, -55.4175, 0.74 ) }
    dend_100 { pt3dadd( 36.4983, -117.128, -55.2571, 0.52 ) }
    dend_100 { pt3dadd( 36.8342, -117.602, -55.0276, 0.29 ) }
    dend_100 { pt3dadd( 37.1275, -117.989, -54.8093, 0.52 ) }
    dend_100 { pt3dadd( 37.4492, -118.373, -54.5539, 0.96 ) }
    dend_100 { pt3dadd( 37.9201, -118.874, -54.2197, 1.18 ) }
    dend_100 { pt3dadd( 38.4039, -119.331, -53.8917, 1.03 ) }
    dend_100 { pt3dadd( 39.0738, -119.941, -53.4274, 0.74 ) }
    dend_100 { pt3dadd( 39.7743, -120.601, -52.9283, 0.66 ) }
    dend_100 { pt3dadd( 40.1743, -121.021, -52.6268, 1.03 ) }
    dend_100 { pt3dadd( 40.6838, -121.623, -52.2388, 0.88 ) }
    dend_100 { pt3dadd( 41.2198, -122.333, -51.8645, 0.74 ) }
    dend_100 { pt3dadd( 41.5954, -122.881, -51.649, 0.74 ) }
    dend_100 { pt3dadd( 41.9154, -123.404, -51.5257, 0.74 ) }
    dend_100 { pt3dadd( 42.2705, -124.043, -51.4494, 0.52 ) }
    dend_100 { pt3dadd( 42.5454, -124.563, -51.4193, 0.52 ) }
    dend_100 { pt3dadd( 42.8283, -125.111, -51.4096, 0.44 ) }
    dend_100 { pt3dadd( 43.0994, -125.633, -51.433, 0.74 ) }
    dend_100 { pt3dadd( 43.3112, -126.012, -51.4569, 0.96 ) }
    dend_100 { pt3dadd( 43.5125, -126.354, -51.481, 0.96 ) }
    dend_100 { pt3dadd( 43.9358, -127.051, -51.5345, 0.37 ) }
    dend_100 { pt3dadd( 44.3077, -127.631, -51.5878, 0.37 ) }
    dend_100 { pt3dadd( 44.33, -127.664, -51.5912, 0.37 ) }
    dend_100 { pt3dadd( 44.6592, -128.081, -51.6504, 0.66 ) }
    dend_100 { pt3dadd( 44.9139, -128.389, -51.6997, 0.88 ) }
    dend_100 { pt3dadd( 45.2546, -128.775, -51.7748, 0.59 ) }
    dend_100 { pt3dadd( 45.5928, -129.131, -51.8685, 0.22 ) }
    dend_100 { pt3dadd( 45.6292, -129.161, -51.8782, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_100 { pt3dadd( 46.09, -129.504, -51.9988, 0.22 ) }
    // Section: dend_96, id: dend_96, parent: dend_94 (entry count 1/100)
    dend_96 { pt3dclear() }
    dend_96 { pt3dadd( -11.2619, -184.566, -32.7888, 0.52 ) }
    dend_96 { pt3dadd( -9.70167, -184.462, -33.5377, 0.52 ) }
    dend_96 { pt3dadd( -8.92888, -184.479, -33.9504, 0.52 ) }
    dend_96 { pt3dadd( -8.12563, -184.569, -34.5086, 0.66 ) }
    dend_96 { pt3dadd( -7.32034, -184.714, -35.1659, 0.59 ) }
    dend_96 { pt3dadd( -6.34915, -184.949, -36.01, 0.29 ) }
    dend_96 { pt3dadd( -6.06747, -185.044, -36.2951, 0.59 ) }
    dend_96 { pt3dadd( -5.76757, -185.19, -36.7131, 0.59 ) }
    dend_96 { pt3dadd( -4.9729, -185.668, -37.9653, 0.29 ) }
    dend_96 { pt3dadd( -4.54799, -185.97, -38.683, 0.88 ) }
    dend_96 { pt3dadd( -4.37514, -186.104, -39.0063, 0.88 ) }
    dend_96 { pt3dadd( -3.56537, -186.674, -40.8545, 0.29 ) }
    dend_96 { pt3dadd( -3.0919, -186.943, -42.1168, 0.59 ) }
    dend_96 { pt3dadd( -2.92045, -187.003, -42.7093, 0.44 ) }
    dend_96 { pt3dadd( -2.90616, -187.005, -42.7723, 0.44 ) }
    dend_96 { pt3dadd( -2.6351, -186.963, -44.2218, 0.44 ) }
    dend_96 { pt3dadd( -2.22479, -186.736, -46.7853, 0.29 ) }
    dend_96 { pt3dadd( -2.14906, -186.656, -47.3151, 0.29 ) }
    dend_96 { pt3dadd( -1.76674, -186.218, -49.5793, 0.29 ) }
    dend_96 { pt3dadd( -1.75662, -186.205, -49.651, 0.29 ) }
    dend_96 { pt3dadd( -1.74644, -186.192, -49.7156, 0.44 ) }
    dend_96 { pt3dadd( -1.7243, -186.168, -49.8422, 0.44 ) }
    dend_96 { pt3dadd( -1.55508, -185.985, -50.8024, 0.29 ) }
    dend_96 { pt3dadd( -1.413, -185.825, -51.6083, 0.81 ) }
    dend_96 { pt3dadd( -0.285894, -184.526, -57.9815, 0.29 ) }
    dend_96 { pt3dadd( -0.0481738, -184.243, -59.3507, 0.22 ) }
    dend_96 { pt3dadd( 0.1933, -183.961, -60.8045, 0.44 ) }
    dend_96 { pt3dadd( 0.61108, -183.48, -63.6551, 0.29 ) }
    dend_96 { pt3dadd( 0.682327, -183.396, -64.217, 0.88 ) }
    dend_96 { pt3dadd( 0.728633, -183.361, -64.6156, 0.88 ) }
    dend_96 { pt3dadd( 0.738127, -183.359, -64.6795, 0.88 ) }
    dend_96 { pt3dadd( 1.14715, -183.301, -67.8832, 0.29 ) }
    dend_96 { pt3dadd( 1.47175, -183.233, -71.0587, 0.52 ) }
    dend_96 { pt3dadd( 1.47717, -183.231, -71.1224, 0.52 ) }
    dend_96 { pt3dadd( 1.80326, -183.108, -75.3047, 0.22 ) }
    dend_96 { pt3dadd( 1.87347, -183.066, -76.2791, 0.37 ) }
    dend_96 { pt3dadd( 1.99919, -182.964, -78.1592, 0.96 ) }
    dend_96 { pt3dadd( 2.13989, -182.753, -80.6218, 0.22 ) }
    dend_96 { pt3dadd( 2.16181, -182.701, -81.0296, 0.59 ) }
    // Section: dend_95, id: dend_95, parent: dend_94 (entry count 40/100)
    dend_95 { pt3dclear() }
    dend_95 { pt3dadd( -11.2619, -184.566, -32.7888, 0.81 ) }
    dend_95 { pt3dadd( -11.2484, -185.362, -32.9908, 0.81 ) }
    dend_95 { pt3dadd( -11.2146, -186.106, -33.1612, 1.03 ) }
    dend_95 { pt3dadd( -11.1351, -187.207, -33.3919, 0.96 ) }
    dend_95 { pt3dadd( -11.0309, -188.191, -33.5805, 0.74 ) }
    dend_95 { pt3dadd( -10.9114, -189.058, -33.643, 0.29 ) }
    dend_95 { pt3dadd( -10.8308, -189.597, -33.6381, 0.29 ) }
    dend_95 { pt3dadd( -10.7608, -189.996, -33.5935, 0.52 ) }
    dend_95 { pt3dadd( -10.7071, -190.356, -33.5092, 0.52 ) }
    dend_95 { pt3dadd( -10.6543, -190.821, -33.3505, 0.52 ) }
    dend_95 { pt3dadd( -10.5103, -192.428, -32.7679, 0.29 ) }
    dend_95 { pt3dadd( -10.4502, -193.148, -32.5266, 0.52 ) }
    dend_95 { pt3dadd( -10.4052, -193.585, -32.3821, 0.81 ) }
    dend_95 { pt3dadd( -10.2831, -194.416, -32.0951, 0.88 ) }
    dend_95 { pt3dadd( -10.1241, -195.071, -31.8776, 1.18 ) }
    dend_95 { pt3dadd( -9.85668, -195.909, -31.6161, 1.4 ) }
    dend_95 { pt3dadd( -9.35967, -197.11, -31.2964, 0.52 ) }
    dend_95 { pt3dadd( -8.81222, -198.175, -31.0174, 0.52 ) }
    dend_95 { pt3dadd( -8.07996, -199.404, -30.7236, 0.52 ) }
    dend_95 { pt3dadd( -7.27764, -200.638, -30.4644, 0.74 ) }
    dend_95 { pt3dadd( -7.22934, -200.711, -30.4508, 0.74 ) }
    dend_95 { pt3dadd( -6.69236, -201.592, -30.3449, 0.29 ) }
    dend_95 { pt3dadd( -6.16754, -202.613, -30.3024, 0.29 ) }
    dend_95 { pt3dadd( -5.68451, -203.754, -30.3552, 0.66 ) }
    dend_95 { pt3dadd( -5.47087, -204.391, -30.4232, 0.88 ) }
    dend_95 { pt3dadd( -5.25396, -205.266, -30.5298, 0.88 ) }
    dend_95 { pt3dadd( -4.94972, -206.614, -30.7526, 0.29 ) }
    dend_95 { pt3dadd( -4.82542, -207.179, -30.8703, 0.88 ) }
    dend_95 { pt3dadd( -4.80758, -207.264, -30.8975, 0.88 ) }
    dend_95 { pt3dadd( -4.67029, -207.843, -31.1323, 1.03 ) }
    dend_95 { pt3dadd( -4.64539, -207.934, -31.1724, 1.03 ) }
    dend_95 { pt3dadd( -4.25285, -209.298, -31.75, 0.74 ) }
    dend_95 { pt3dadd( -3.90581, -210.281, -32.1262, 0.88 ) }
    dend_95 { pt3dadd( -3.38872, -211.598, -32.5942, 1.18 ) }
    dend_95 { pt3dadd( -3.12586, -212.244, -32.7955, 1.18 ) }
    dend_95 { pt3dadd( -2.81001, -212.993, -32.9909, 0.66 ) }
    dend_95 { pt3dadd( -2.37335, -213.993, -33.1911, 0.29 ) }
    dend_95 { pt3dadd( -1.92344, -214.983, -33.3085, 0.29 ) }
    dend_95 { pt3dadd( -1.61814, -215.658, -33.3502, 0.59 ) }
    dend_95 { pt3dadd( -1.23518, -216.502, -33.3458, 0.74 ) }
    dend_95 { pt3dadd( -0.86275, -217.351, -33.3297, 0.74 ) }
    dend_95 { pt3dadd( -0.659255, -217.867, -33.2613, 0.74 ) }
    dend_95 { pt3dadd( -0.488289, -218.41, -33.1423, 0.88 ) }
    dend_95 { pt3dadd( -0.250083, -219.297, -32.8925, 0.81 ) }
    dend_95 { pt3dadd( 0.0526898, -220.376, -32.5326, 0.81 ) }
    dend_95 { pt3dadd( 0.369922, -221.425, -32.1293, 0.59 ) }
    dend_95 { pt3dadd( 0.994954, -223.303, -31.3405, 0.37 ) }
    dend_95 { pt3dadd( 1.30227, -224.124, -30.9715, 0.52 ) }
    dend_95 { pt3dadd( 1.59509, -224.781, -30.6652, 0.44 ) }
    dend_95 { pt3dadd( 1.91232, -225.346, -30.4018, 0.52 ) }
    dend_95 { pt3dadd( 2.0134, -225.495, -30.3391, 0.52 ) }
    dend_95 { pt3dadd( 2.4345, -226.025, -30.2133, 0.37 ) }
    dend_95 { pt3dadd( 2.55296, -226.175, -30.2134, 0.37 ) }
    dend_95 { pt3dadd( 2.97899, -226.822, -30.2258, 0.81 ) }
    dend_95 { pt3dadd( 3.18991, -227.335, -30.2689, 0.96 ) }
    dend_95 { pt3dadd( 3.20829, -227.41, -30.284, 0.96 ) }
    dend_95 { pt3dadd( 3.26368, -227.871, -30.4053, 0.81 ) }
    dend_95 { pt3dadd( 3.30015, -228.82, -30.7356, 0.52 ) }
    dend_95 { pt3dadd( 3.30478, -229.458, -30.9737, 0.52 ) }
    dend_95 { pt3dadd( 3.30593, -230.575, -31.402, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_95 { pt3dadd( 3.31762, -231.724, -31.8304, 0.74 ) }
    dend_95 { pt3dadd( 3.33354, -232.517, -32.1171, 0.88 ) }
    dend_95 { pt3dadd( 3.38389, -233.664, -32.4577, 0.52 ) }
    dend_95 { pt3dadd( 3.46157, -234.821, -32.709, 0.52 ) }
    dend_95 { pt3dadd( 3.53518, -235.666, -32.803, 0.74 ) }
    dend_95 { pt3dadd( 3.62919, -236.476, -32.8056, 0.44 ) }
    dend_95 { pt3dadd( 3.65406, -236.662, -32.7902, 0.44 ) }
    dend_95 { pt3dadd( 3.82303, -238.14, -32.5938, 0.44 ) }
    dend_95 { pt3dadd( 3.87535, -239.024, -32.4186, 0.22 ) }
    dend_95 { pt3dadd( 3.84605, -239.872, -32.2413, 0.22 ) }
    dend_95 { pt3dadd( 3.76565, -240.498, -32.1572, 0.74 ) }
    dend_95 { pt3dadd( 3.74927, -240.585, -32.1533, 0.74 ) }
    dend_95 { pt3dadd( 3.58713, -241.291, -32.1824, 0.96 ) }
    dend_95 { pt3dadd( 3.56361, -241.378, -32.1955, 0.96 ) }
    dend_95 { pt3dadd( 3.37642, -242.201, -32.3336, 0.96 ) }
    dend_95 { pt3dadd( 3.20516, -243.615, -32.6262, 0.44 ) }
    dend_95 { pt3dadd( 3.16514, -244.357, -32.7173, 0.52 ) }
    dend_95 { pt3dadd( 3.16455, -244.445, -32.723, 0.52 ) }
    dend_95 { pt3dadd( 3.17533, -245.18, -32.7606, 0.81 ) }
    dend_95 { pt3dadd( 3.21996, -246.197, -32.8232, 0.74 ) }
    dend_95 { pt3dadd( 3.32559, -247.653, -32.9094, 0.37 ) }
    dend_95 { pt3dadd( 3.43745, -249.502, -32.9888, 0.37 ) }
    dend_95 { pt3dadd( 3.45895, -250.19, -32.9894, 1.18 ) }
    dend_95 { pt3dadd( 3.47147, -251.451, -32.9585, 0.96 ) }
    dend_95 { pt3dadd( 3.45816, -252.806, -32.897, 0.52 ) }
    dend_95 { pt3dadd( 3.40758, -254.354, -32.798, 0.52 ) }
    dend_95 { pt3dadd( 3.33162, -256.091, -32.6396, 0.74 ) }
    dend_95 { pt3dadd( 3.28861, -257.91, -32.4884, 0.81 ) }
    dend_95 { pt3dadd( 3.28805, -258.009, -32.4747, 0.81 ) }
    dend_95 { pt3dadd( 3.2947, -258.81, -32.2826, 1.03 ) }
    dend_95 { pt3dadd( 3.29554, -258.908, -32.2512, 1.03 ) }
    dend_95 { pt3dadd( 3.33021, -259.815, -31.9289, 0.52 ) }
    dend_95 { pt3dadd( 3.39572, -260.682, -31.6357, 0.37 ) }
    dend_95 { pt3dadd( 3.48425, -261.519, -31.4069, 0.88 ) }
    dend_95 { pt3dadd( 3.58055, -262.422, -31.1733, 0.96 ) }
    dend_95 { pt3dadd( 3.6676, -263.121, -30.9957, 0.74 ) }
    dend_95 { pt3dadd( 3.79203, -263.943, -30.8078, 0.22 ) }
    dend_95 { pt3dadd( 3.9594, -264.772, -30.6232, 0.22 ) }
    dend_95 { pt3dadd( 4.1829, -265.463, -30.4737, 0.74 ) }
    dend_95 { pt3dadd( 4.41167, -265.934, -30.3743, 1.03 ) }
    dend_95 { pt3dadd( 4.76832, -266.479, -30.2643, 1.03 ) }
    dend_95 { pt3dadd( 5.3155, -267.125, -30.079, 0.59 ) }
    dend_95 { pt3dadd( 6.15571, -267.98, -29.7843, 0.37 ) }
    dend_95 { pt3dadd( 7.01666, -268.812, -29.4698, 0.22 ) }
    dend_95 { pt3dadd( 7.63919, -269.446, -29.2328, 0.81 ) }
    dend_95 { pt3dadd( 8.11707, -269.972, -29.0529, 0.81 ) }
    dend_95 { pt3dadd( 8.91206, -270.969, -28.7645, 0.29 ) }
    dend_95 { pt3dadd( 9.28708, -271.485, -28.6382, 0.59 ) }
    dend_95 { pt3dadd( 9.64671, -272.034, -28.547, 0.74 ) }
    dend_95 { pt3dadd( 10.1385, -272.911, -28.4458, 0.74 ) }
    dend_95 { pt3dadd( 10.5511, -273.722, -28.4048, 0.52 ) }
    dend_95 { pt3dadd( 11.2182, -275.045, -28.5177, 0.22 ) }
    dend_95 { pt3dadd( 11.5524, -275.735, -28.655, 0.22 ) }
    dend_95 { pt3dadd( 11.7839, -276.227, -28.7721, 0.74 ) }
    dend_95 { pt3dadd( 12.0716, -276.883, -28.9522, 0.74 ) }
    dend_95 { pt3dadd( 12.7152, -278.457, -29.4311, 0.22 ) }
    dend_95 { pt3dadd( 13.3008, -280.153, -29.9702, 0.81 ) }
    dend_95 { pt3dadd( 13.5003, -280.864, -30.1858, 0.81 ) }
    dend_95 { pt3dadd( 13.7896, -282.095, -30.5096, 0.22 ) }
    dend_95 { pt3dadd( 13.9943, -283.106, -30.7176, 0.22 ) }
    dend_95 { pt3dadd( 14.072, -283.545, -30.7855, 0.81 ) }
    dend_95 { pt3dadd( 14.1701, -284.198, -30.8449, 1.03 ) }
    dend_95 { pt3dadd( 14.3871, -285.726, -30.8741, 0.29 ) }
    dend_95 { pt3dadd( 14.4698, -286.281, -30.8857, 0.29 ) }
    dend_95 { pt3dadd( 14.652, -287.556, -30.915, 0.29 ) }
    dend_95 { pt3dadd( 14.7981, -288.652, -30.9193, 0.15 ) }
    dend_95 { pt3dadd( 14.8492, -289.095, -30.921, 0.52 ) }
    dend_95 { pt3dadd( 14.8946, -289.464, -30.9224, 0.66 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 68/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -20.4897, -85.0096, -3.39424, 0.96 ) }
    dend_67 { pt3dadd( -20.1507, -86.2885, -3.80229, 0.96 ) }
    dend_67 { pt3dadd( -19.8342, -87.6374, -4.20699, 0.96 ) }
    dend_67 { pt3dadd( -19.5354, -89.1427, -4.61855, 0.96 ) }
    dend_67 { pt3dadd( -19.2751, -90.6981, -5.00816, 0.81 ) }
    dend_67 { pt3dadd( -19.0499, -92.2581, -5.42488, 0.66 ) }
    dend_67 { pt3dadd( -18.8912, -93.5759, -5.77643, 0.66 ) }
    dend_67 { pt3dadd( -18.8806, -93.7252, -5.81344, 0.66 ) }
    dend_67 { pt3dadd( -18.8304, -94.7028, -6.05679, 0.88 ) }
    dend_67 { pt3dadd( -18.789, -95.349, -6.21192, 1.03 ) }
    dend_67 { pt3dadd( -18.5294, -97.0095, -6.62278, 0.74 ) }
    dend_67 { pt3dadd( -18.2591, -98.0161, -6.87249, 0.74 ) }
    dend_67 { pt3dadd( -17.8519, -99.0904, -7.13838, 0.74 ) }
    dend_67 { pt3dadd( -17.2412, -100.425, -7.45185, 0.96 ) }
    dend_67 { pt3dadd( -16.8135, -101.216, -7.6199, 1.03 ) }
    dend_67 { pt3dadd( -16.2236, -102.272, -7.79632, 1.03 ) }
    dend_67 { pt3dadd( -15.5379, -103.599, -7.93485, 0.88 ) }
    dend_67 { pt3dadd( -15.1628, -104.485, -8.0009, 0.88 ) }
    dend_67 { pt3dadd( -15.1019, -104.764, -8.01168, 0.88 ) }
    dend_67 { pt3dadd( -15.1693, -105.454, -7.95372, 0.59 ) }
    dend_67 { pt3dadd( -15.7461, -106.776, -7.76447, 0.52 ) }
    dend_67 { pt3dadd( -16.4757, -107.756, -7.5841, 0.74 ) }
    dend_67 { pt3dadd( -17.1304, -108.38, -7.39518, 0.66 ) }
    dend_67 { pt3dadd( -18.0565, -109.129, -7.12172, 0.52 ) }
    dend_67 { pt3dadd( -19.5341, -110.218, -6.64402, 0.52 ) }
    dend_67 { pt3dadd( -20.2823, -110.742, -6.38767, 0.74 ) }
    dend_67 { pt3dadd( -21.2477, -111.422, -6.05693, 1.03 ) }
    dend_67 { pt3dadd( -22.4564, -112.35, -5.66187, 1.03 ) }
    dend_67 { pt3dadd( -23.2792, -113.047, -5.41998, 1.03 ) }
    dend_67 { pt3dadd( -24.3932, -114.118, -5.13752, 0.74 ) }
    dend_67 { pt3dadd( -25.0746, -114.873, -5.03329, 0.66 ) }
    dend_67 { pt3dadd( -25.7678, -115.747, -4.91838, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_67 { pt3dadd( -26.3215, -116.572, -4.80166, 0.52 ) }
    dend_67 { pt3dadd( -26.359, -116.638, -4.79367, 0.52 ) }
    dend_67 { pt3dadd( -26.7164, -117.344, -4.66422, 0.66 ) }
    dend_67 { pt3dadd( -27.0268, -118.048, -4.50433, 0.81 ) }
    dend_67 { pt3dadd( -27.4541, -119.023, -4.22394, 0.52 ) }
    dend_67 { pt3dadd( -27.9781, -120.226, -3.92635, 0.52 ) }
    dend_67 { pt3dadd( -28.0858, -120.471, -3.90853, 0.81 ) }
    dend_67 { pt3dadd( -28.4667, -121.263, -4.0111, 0.81 ) }
    dend_67 { pt3dadd( -28.838, -121.904, -4.24295, 0.96 ) }
    dend_67 { pt3dadd( -29.4241, -122.718, -4.77176, 1.03 ) }
    dend_67 { pt3dadd( -30.2899, -123.601, -5.61178, 1.18 ) }
    dend_67 { pt3dadd( -31.3833, -124.507, -6.66511, 0.81 ) }
    dend_67 { pt3dadd( -31.92, -124.897, -7.1852, 0.88 ) }
    dend_67 { pt3dadd( -32.6011, -125.321, -7.81904, 1.18 ) }
    dend_67 { pt3dadd( -33.329, -125.742, -8.44235, 1.55 ) }
    dend_67 { pt3dadd( -34.4104, -126.368, -9.20671, 0.66 ) }
    dend_67 { pt3dadd( -34.9211, -126.698, -9.46398, 0.66 ) }
    dend_67 { pt3dadd( -35.3928, -127.075, -9.60888, 0.52 ) }
    dend_67 { pt3dadd( -36.2187, -127.888, -9.76175, 0.52 ) }
    dend_67 { pt3dadd( -36.8568, -128.674, -9.80377, 0.37 ) }
    dend_67 { pt3dadd( -37.5648, -129.743, -9.69763, 0.37 ) }
    dend_67 { pt3dadd( -37.9985, -130.54, -9.55996, 0.74 ) }
    dend_67 { pt3dadd( -38.4721, -131.474, -9.34136, 1.25 ) }
    dend_67 { pt3dadd( -38.5014, -131.53, -9.32651, 1.25 ) }
    dend_67 { pt3dadd( -38.9559, -132.332, -9.11399, 1.18 ) }
    dend_67 { pt3dadd( -39.6855, -133.478, -8.831, 1.03 ) }
    dend_67 { pt3dadd( -40.1774, -134.167, -8.70201, 0.66 ) }
    dend_67 { pt3dadd( -40.7842, -134.963, -8.59713, 0.37 ) }
    dend_67 { pt3dadd( -41.5811, -135.973, -8.53863, 0.37 ) }
    dend_67 { pt3dadd( -42.1361, -136.656, -8.5404, 0.44 ) }
    dend_67 { pt3dadd( -42.1931, -136.721, -8.54575, 0.44 ) }
    dend_67 { pt3dadd( -42.9121, -137.501, -8.69028, 0.37 ) }
    dend_67 { pt3dadd( -43.4434, -138.076, -8.81402, 0.59 ) }
    dend_67 { pt3dadd( -43.7672, -138.442, -8.90036, 0.59 ) }
    dend_67 { pt3dadd( -44.3116, -139.127, -9.06455, 0.44 ) }
    dend_67 { pt3dadd( -44.7521, -139.715, -9.20488, 0.66 ) }
    dend_67 { pt3dadd( -45.2416, -140.388, -9.35934, 0.88 ) }
    dend_67 { pt3dadd( -45.7798, -141.158, -9.52838, 0.88 ) }
    dend_67 { pt3dadd( -46.5315, -142.242, -9.78346, 0.66 ) }
    dend_67 { pt3dadd( -47.1074, -143.107, -10.0037, 0.96 ) }
    dend_67 { pt3dadd( -47.5312, -143.73, -10.1786, 1.18 ) }
    dend_67 { pt3dadd( -48.452, -144.956, -10.544, 0.88 ) }
    dend_67 { pt3dadd( -48.8369, -145.389, -10.6869, 0.96 ) }
    dend_67 { pt3dadd( -49.771, -146.206, -11.0019, 0.59 ) }
    dend_67 { pt3dadd( -49.8253, -146.238, -11.0177, 0.59 ) }
    dend_67 { pt3dadd( -50.9244, -146.623, -11.2584, 0.59 ) }
    dend_67 { pt3dadd( -51.8905, -146.824, -11.4345, 0.52 ) }
    dend_67 { pt3dadd( -52.5926, -146.917, -11.5409, 0.52 ) }
    dend_67 { pt3dadd( -53.3266, -147.02, -11.5882, 0.74 ) }
    dend_67 { pt3dadd( -54.1053, -147.147, -11.5856, 0.96 ) }
    dend_67 { pt3dadd( -54.8699, -147.302, -11.5702, 0.81 ) }
    dend_67 { pt3dadd( -56.2193, -147.662, -11.5288, 0.96 ) }
    dend_67 { pt3dadd( -57.0933, -147.96, -11.5112, 0.96 ) }
    dend_67 { pt3dadd( -58.4176, -148.473, -11.4792, 0.44 ) }
    dend_67 { pt3dadd( -59.222, -148.828, -11.4651, 0.44 ) }
    dend_67 { pt3dadd( -60.0887, -149.251, -11.4734, 0.66 ) }
    dend_67 { pt3dadd( -60.8135, -149.609, -11.5222, 0.59 ) }
    dend_67 { pt3dadd( -61.6648, -150.036, -11.6128, 0.59 ) }
    dend_67 { pt3dadd( -61.7433, -150.075, -11.626, 0.59 ) }
    dend_67 { pt3dadd( -62.3868, -150.409, -11.7962, 0.88 ) }
    dend_67 { pt3dadd( -63.5418, -151.094, -12.1283, 0.96 ) }
    dend_67 { pt3dadd( -64.392, -151.678, -12.3904, 0.37 ) }
    dend_67 { pt3dadd( -64.5157, -151.78, -12.4211, 0.37 ) }
    dend_67 { pt3dadd( -65.3085, -152.585, -12.556, 0.37 ) }
    dend_67 { pt3dadd( -65.9022, -153.315, -12.6055, 0.29 ) }
    dend_67 { pt3dadd( -66.4322, -154.114, -12.5931, 0.29 ) }
    dend_67 { pt3dadd( -66.8046, -154.75, -12.5506, 0.52 ) }
    dend_67 { pt3dadd( -67.5961, -156.101, -12.4409, 1.03 ) }
    dend_67 { pt3dadd( -68.0093, -156.761, -12.3951, 1.25 ) }
    dend_67 { pt3dadd( -68.3589, -157.275, -12.3765, 1.25 ) }
    dend_67 { pt3dadd( -69.0728, -158.143, -12.3918, 0.88 ) }
    dend_67 { pt3dadd( -69.8078, -158.87, -12.4734, 0.74 ) }
    dend_67 { pt3dadd( -70.5996, -159.538, -12.644, 0.74 ) }
    dend_67 { pt3dadd( -71.2374, -160.01, -12.8421, 0.96 ) }
    dend_67 { pt3dadd( -72.1265, -160.617, -13.1419, 0.66 ) }
    dend_67 { pt3dadd( -72.8676, -161.123, -13.4496, 0.74 ) }
    dend_67 { pt3dadd( -73.3047, -161.435, -13.6509, 1.03 ) }
    dend_67 { pt3dadd( -73.9135, -161.919, -13.9538, 1.4 ) }
    dend_67 { pt3dadd( -73.9603, -161.962, -13.9781, 1.4 ) }
    dend_67 { pt3dadd( -74.3983, -162.476, -14.2074, 1.4 ) }
    dend_67 { pt3dadd( -75.1813, -163.704, -14.5909, 0.52 ) }
    dend_67 { pt3dadd( -75.5608, -164.473, -14.7806, 0.81 ) }
    dend_67 { pt3dadd( -75.8156, -165.028, -14.8963, 0.88 ) }
    dend_67 { pt3dadd( -76.0693, -165.601, -14.9929, 0.52 ) }
    dend_67 { pt3dadd( -76.4644, -166.447, -15.1319, 0.44 ) }
    dend_67 { pt3dadd( -76.8138, -167.171, -15.24, 0.44 ) }
    dend_67 { pt3dadd( -77.1648, -167.769, -15.3147, 0.44 ) }
    dend_67 { pt3dadd( -77.5862, -168.333, -15.4343, 0.66 ) }
    dend_67 { pt3dadd( -77.7016, -168.437, -15.4547, 0.66 ) }
    dend_67 { pt3dadd( -78.2042, -168.746, -15.5077, 0.88 ) }
    dend_67 { pt3dadd( -78.3055, -168.791, -15.5137, 0.88 ) }
    dend_67 { pt3dadd( -78.9681, -169.071, -15.5254, 0.96 ) }
    dend_67 { pt3dadd( -79.3527, -169.256, -15.5215, 0.66 ) }
    dend_67 { pt3dadd( -80.3001, -169.773, -15.5073, 0.52 ) }
    dend_67 { pt3dadd( -80.9443, -170.157, -15.5063, 0.44 ) }
    dend_67 { pt3dadd( -81.4163, -170.474, -15.5167, 0.74 ) }
    dend_67 { pt3dadd( -82.0111, -170.918, -15.5492, 0.81 ) }
    dend_67 { pt3dadd( -82.7468, -171.581, -15.6156, 0.52 ) }
    dend_67 { pt3dadd( -82.806, -171.646, -15.628, 0.52 ) }
    dend_67 { pt3dadd( -83.1713, -172.117, -15.759, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_67 { pt3dadd( -83.6935, -172.891, -15.9827, 0.96 ) }
    dend_67 { pt3dadd( -83.9753, -173.367, -16.1232, 1.11 ) }
    dend_67 { pt3dadd( -84.3922, -174.082, -16.3345, 0.81 ) }
    dend_67 { pt3dadd( -84.948, -175.0, -16.6488, 0.66 ) }
    dend_67 { pt3dadd( -84.9821, -175.051, -16.6698, 0.66 ) }
    dend_67 { pt3dadd( -85.55, -175.755, -16.9892, 0.52 ) }
    dend_67 { pt3dadd( -86.1577, -176.272, -17.2665, 0.37 ) }
    dend_67 { pt3dadd( -86.6949, -176.534, -17.4042, 0.29 ) }
    dend_67 { pt3dadd( -87.6232, -176.792, -17.5015, 0.66 ) }
    dend_67 { pt3dadd( -88.1785, -176.91, -17.5053, 0.74 ) }
    dend_67 { pt3dadd( -89.314, -177.202, -17.4195, 0.29 ) }
    dend_67 { pt3dadd( -89.8458, -177.37, -17.3502, 0.66 ) }
    dend_67 { pt3dadd( -90.5778, -177.678, -17.2324, 0.88 ) }
    dend_67 { pt3dadd( -91.2843, -178.056, -17.1169, 0.88 ) }
    dend_67 { pt3dadd( -91.6819, -178.304, -17.0544, 0.88 ) }
    dend_67 { pt3dadd( -92.8255, -179.081, -16.9336, 0.58 ) }
    dend_67 { pt3dadd( -93.5527, -179.614, -16.9182, 0.81 ) }
    dend_67 { pt3dadd( -94.1979, -180.104, -16.9342, 1.11 ) }
    dend_67 { pt3dadd( -94.7717, -180.558, -16.9814, 0.74 ) }
    dend_67 { pt3dadd( -95.4205, -181.063, -17.0359, 0.88 ) }
    dend_67 { pt3dadd( -96.0634, -181.515, -17.1025, 0.81 ) }
    dend_67 { pt3dadd( -96.6945, -181.905, -17.1882, 0.74 ) }
    dend_67 { pt3dadd( -97.7156, -182.472, -17.3198, 0.44 ) }
    dend_67 { pt3dadd( -98.6658, -182.97, -17.4385, 0.74 ) }
    dend_67 { pt3dadd( -99.4325, -183.339, -17.5271, 0.88 ) }
    dend_67 { pt3dadd( -100.48, -183.725, -17.5615, 0.52 ) }
    dend_67 { pt3dadd( -101.088, -183.909, -17.5258, 0.59 ) }
    dend_67 { pt3dadd( -102.229, -184.214, -17.3778, 0.59 ) }
    dend_67 { pt3dadd( -102.29, -184.232, -17.3665, 0.59 ) }
    dend_67 { pt3dadd( -102.901, -184.459, -17.2315, 0.66 ) }
    dend_67 { pt3dadd( -104.603, -185.415, -16.8925, 0.59 ) }
    dend_67 { pt3dadd( -105.371, -186.005, -16.7521, 0.59 ) }
    dend_67 { pt3dadd( -105.854, -186.474, -16.7042, 0.81 ) }
    dend_67 { pt3dadd( -106.548, -187.258, -16.6931, 0.52 ) }
    dend_67 { pt3dadd( -107.259, -188.151, -16.7699, 0.66 ) }
    dend_67 { pt3dadd( -108.02, -189.23, -16.9667, 0.44 ) }
    dend_67 { pt3dadd( -108.443, -189.931, -17.1516, 1.11 ) }
    dend_67 { pt3dadd( -109.238, -191.28, -17.5491, 0.59 ) }
    dend_67 { pt3dadd( -109.276, -191.343, -17.5666, 0.59 ) }
    dend_67 { pt3dadd( -109.738, -192.071, -17.7559, 0.44 ) }
    dend_67 { pt3dadd( -109.966, -192.387, -17.8326, 0.44 ) }
    dend_67 { pt3dadd( -110.747, -193.274, -17.9764, 0.44 ) }
    dend_67 { pt3dadd( -111.303, -193.765, -18.0222, 0.37 ) }
    dend_67 { pt3dadd( -111.949, -194.185, -18.0146, 0.29 ) }
    dend_67 { pt3dadd( -112.516, -194.486, -17.9506, 0.66 ) }
    dend_67 { pt3dadd( -113.083, -194.718, -17.8476, 1.03 ) }
    dend_67 { pt3dadd( -113.791, -194.952, -17.7079, 1.03 ) }
    dend_67 { pt3dadd( -114.318, -195.091, -17.6053, 0.81 ) }
    dend_67 { pt3dadd( -115.224, -195.352, -17.4448, 0.52 ) }
    dend_67 { pt3dadd( -116.216, -195.749, -17.3011, 0.66 ) }
    dend_67 { pt3dadd( -116.765, -196.064, -17.2301, 0.29 ) }
    dend_67 { pt3dadd( -117.035, -196.262, -17.2027, 0.59 ) }
    dend_67 { pt3dadd( -117.517, -196.65, -17.19, 0.81 ) }
    dend_67 { pt3dadd( -118.074, -197.084, -17.2086, 0.81 ) }
    dend_67 { pt3dadd( -118.783, -197.558, -17.289, 0.52 ) }
    dend_67 { pt3dadd( -119.652, -198.066, -17.4657, 0.74 ) }
    dend_67 { pt3dadd( -119.712, -198.096, -17.4781, 0.74 ) }
    dend_67 { pt3dadd( -120.618, -198.496, -17.6689, 0.44 ) }
    dend_67 { pt3dadd( -121.257, -198.771, -17.8132, 0.74 ) }
    dend_67 { pt3dadd( -121.954, -199.073, -17.9777, 1.11 ) }
    dend_67 { pt3dadd( -122.979, -199.551, -18.2262, 0.59 ) }
    dend_67 { pt3dadd( -123.588, -199.893, -18.3751, 0.66 ) }
    dend_67 { pt3dadd( -124.196, -200.326, -18.5234, 0.81 ) }
    dend_67 { pt3dadd( -124.898, -200.98, -18.6914, 0.52 ) }
    dend_67 { pt3dadd( -125.344, -201.47, -18.7964, 0.66 ) }
    dend_67 { pt3dadd( -125.74, -201.93, -18.8875, 0.66 ) }
    dend_67 { pt3dadd( -126.132, -202.37, -19.0077, 0.44 ) }
    dend_67 { pt3dadd( -126.184, -202.423, -19.0267, 0.44 ) }
    dend_67 { pt3dadd( -126.994, -203.073, -19.3591, 0.37 ) }
    dend_67 { pt3dadd( -127.13, -203.144, -19.4181, 0.37 ) }
    dend_67 { pt3dadd( -128.065, -203.353, -19.8311, 0.37 ) }
    dend_67 { pt3dadd( -128.906, -203.361, -20.2657, 0.29 ) }
    dend_67 { pt3dadd( -129.403, -203.31, -20.5429, 0.37 ) }
    dend_67 { pt3dadd( -129.934, -203.234, -20.8206, 0.44 ) }
    dend_67 { pt3dadd( -130.663, -203.064, -21.2167, 0.37 ) }
    dend_67 { pt3dadd( -131.657, -202.786, -21.7592, 0.29 ) }
    dend_67 { pt3dadd( -132.757, -202.383, -22.3562, 0.22 ) }
    dend_67 { pt3dadd( -132.986, -202.29, -22.4652, 0.44 ) }
    dend_67 { pt3dadd( -134.016, -201.839, -23.0177, 0.52 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 79/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -20.4897, -85.0096, -3.39424, 0.74 ) }
    dend_66 { pt3dadd( -21.0997, -85.5231, -3.24342, 0.74 ) }
    dend_66 { pt3dadd( -21.8443, -86.1538, -3.06005, 0.44 ) }
    dend_66 { pt3dadd( -22.5785, -86.7644, -2.88101, 0.59 ) }
    dend_66 { pt3dadd( -23.499, -87.5012, -2.70108, 0.37 ) }
    dend_66 { pt3dadd( -24.2045, -88.0725, -2.5647, 0.59 ) }
    dend_66 { pt3dadd( -24.5089, -88.3163, -2.50642, 0.88 ) }
    dend_66 { pt3dadd( -24.5783, -88.3697, -2.49586, 0.88 ) }
    dend_66 { pt3dadd( -24.876, -88.5906, -2.46435, 1.11 ) }
    dend_66 { pt3dadd( -25.5493, -89.0027, -2.41708, 0.88 ) }
    dend_66 { pt3dadd( -26.3783, -89.3776, -2.37488, 0.37 ) }
    dend_66 { pt3dadd( -26.894, -89.5517, -2.35991, 0.66 ) }
    dend_66 { pt3dadd( -27.6975, -89.7655, -2.37315, 0.81 ) }
    dend_66 { pt3dadd( -28.4415, -89.9544, -2.39979, 0.74 ) }
    dend_66 { pt3dadd( -29.4765, -90.1998, -2.44893, 0.88 ) }
    dend_66 { pt3dadd( -30.2058, -90.366, -2.48282, 0.74 ) }
    dend_66 { pt3dadd( -31.3256, -90.6355, -2.58521, 0.52 ) }
    dend_66 { pt3dadd( -32.6576, -91.0274, -2.72165, 0.52 ) }
    dend_66 { pt3dadd( -33.458, -91.3272, -2.76673, 0.74 ) }
    dend_66 { pt3dadd( -33.5286, -91.3619, -2.76225, 0.74 ) }
    dend_66 { pt3dadd( -34.1441, -91.8164, -2.29956, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_66 { pt3dadd( -34.8615, -92.4812, -1.28356, 1.03 ) }
    dend_66 { pt3dadd( -35.2701, -92.8928, -0.547074, 1.18 ) }
    dend_66 { pt3dadd( -35.8382, -93.4698, 0.630035, 0.96 ) }
    dend_66 { pt3dadd( -36.5991, -94.2272, 2.3334, 1.18 ) }
    dend_66 { pt3dadd( -38.8093, -96.3237, 7.33105, 0.66 ) }
    dend_66 { pt3dadd( -39.1144, -96.6241, 8.08413, 0.66 ) }
    dend_66 { pt3dadd( -39.4328, -96.9482, 8.8922, 0.81 ) }
    dend_66 { pt3dadd( -39.7448, -97.2634, 9.62963, 0.81 ) }
    dend_66 { pt3dadd( -39.7854, -97.3061, 9.71392, 0.81 ) }
    dend_66 { pt3dadd( -40.272, -97.893, 10.6254, 0.88 ) }
    dend_66 { pt3dadd( -41.061, -98.935, 12.1259, 0.88 ) }
    dend_66 { pt3dadd( -41.4768, -99.5914, 13.184, 0.74 ) }
    dend_66 { pt3dadd( -41.6472, -99.8948, 13.6988, 0.96 ) }
    dend_66 { pt3dadd( -42.3556, -101.248, 15.9746, 0.44 ) }
    dend_66 { pt3dadd( -42.9545, -102.442, 17.9652, 1.25 ) }
    dend_66 { pt3dadd( -43.7439, -104.117, 20.7009, 0.59 ) }
    dend_66 { pt3dadd( -44.2433, -105.107, 22.2658, 0.96 ) }
    dend_66 { pt3dadd( -44.2685, -105.156, 22.3383, 0.96 ) }
    dend_66 { pt3dadd( -44.6328, -105.816, 23.1998, 0.59 ) }
    dend_66 { pt3dadd( -45.0533, -106.492, 23.8936, 0.52 ) }
    dend_66 { pt3dadd( -45.906, -107.779, 24.9212, 0.81 ) }
    dend_66 { pt3dadd( -46.9864, -109.449, 25.9574, 0.44 ) }
    dend_66 { pt3dadd( -47.5396, -110.31, 26.4362, 0.59 ) }
    dend_66 { pt3dadd( -48.0171, -111.102, 26.8992, 0.74 ) }
    dend_66 { pt3dadd( -48.4921, -111.968, 27.4868, 0.44 ) }
    dend_66 { pt3dadd( -48.999, -112.983, 28.2313, 0.44 ) }
    dend_66 { pt3dadd( -49.5362, -114.141, 29.0879, 0.29 ) }
    dend_66 { pt3dadd( -49.9518, -115.198, 29.8919, 0.44 ) }
    dend_66 { pt3dadd( -50.4001, -116.547, 31.04, 0.81 ) }
    dend_66 { pt3dadd( -50.8206, -118.102, 32.5271, 1.03 ) }
    dend_66 { pt3dadd( -50.8306, -118.155, 32.5843, 1.03 ) }
    dend_66 { pt3dadd( -56.4861, -126.764, 39.6157, 1.03 ) }
    dend_66 { pt3dadd( -62.7965, -135.136, 46.3705, 1.03 ) }
    dend_66 { pt3dadd( -68.4509, -144.876, 51.7279, 1.03 ) }
    dend_66 { pt3dadd( -75.6947, -153.834, 56.5044, 1.03 ) }
    // Section: dend_48, id: dend_48, parent: dend_42 (entry count 35/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -4.85862, -65.0475, -6.03776, 1.4 ) }
    dend_48 { pt3dadd( -4.29601, -65.6554, -6.39174, 1.4 ) }
    dend_48 { pt3dadd( -3.43115, -66.5939, -7.07093, 1.11 ) }
    dend_48 { pt3dadd( -2.4786, -67.7846, -8.08663, 0.96 ) }
    dend_48 { pt3dadd( -1.82648, -68.7601, -9.02225, 0.96 ) }
    dend_48 { pt3dadd( -1.37922, -69.6035, -9.90108, 1.11 ) }
    dend_48 { pt3dadd( -0.915058, -70.5932, -10.9451, 1.25 ) }
    dend_48 { pt3dadd( -0.394075, -71.9082, -12.3862, 1.18 ) }
    dend_48 { pt3dadd( 0.115983, -73.4704, -14.0541, 1.18 ) }
    dend_48 { pt3dadd( 0.444724, -74.7895, -15.3473, 1.03 ) }
    dend_48 { pt3dadd( 0.759409, -76.5615, -16.86, 0.88 ) }
    dend_48 { pt3dadd( 0.871033, -77.434, -17.4669, 0.96 ) }
    dend_48 { pt3dadd( 1.03894, -79.0613, -18.3668, 1.11 ) }
    dend_48 { pt3dadd( 1.1839, -80.8003, -19.0887, 1.11 ) }
    dend_48 { pt3dadd( 1.26995, -82.0246, -19.4259, 0.96 ) }
    dend_48 { pt3dadd( 1.33914, -83.6642, -19.7142, 1.11 ) }
    dend_48 { pt3dadd( 1.30619, -85.9436, -19.9688, 1.18 ) }
    dend_48 { pt3dadd( 1.21143, -87.0696, -20.0795, 1.18 ) }
    dend_48 { pt3dadd( 1.03248, -88.3352, -20.1979, 1.18 ) }
    dend_48 { pt3dadd( 0.610771, -90.7461, -20.4317, 0.96 ) }
    dend_48 { pt3dadd( 0.299948, -92.3552, -20.6029, 1.03 ) }
    dend_48 { pt3dadd( -0.223191, -94.8269, -20.9177, 1.03 ) }
    dend_48 { pt3dadd( -0.64579, -96.6097, -21.1835, 1.33 ) }
    dend_48 { pt3dadd( -0.961109, -97.9147, -21.415, 1.55 ) }
    dend_48 { pt3dadd( -1.21014, -98.9834, -21.6554, 1.33 ) }
    dend_48 { pt3dadd( -1.58502, -100.682, -22.1093, 1.03 ) }
    dend_48 { pt3dadd( -1.84014, -102.103, -22.5153, 1.33 ) }
    dend_48 { pt3dadd( -2.01684, -103.36, -22.8882, 1.33 ) }
    dend_48 { pt3dadd( -2.31377, -105.741, -23.56, 1.25 ) }
    dend_48 { pt3dadd( -2.67056, -108.309, -24.2916, 1.03 ) }
    dend_48 { pt3dadd( -2.906, -109.766, -24.7056, 0.96 ) }
    dend_48 { pt3dadd( -3.26731, -111.603, -25.2168, 0.96 ) }
    dend_48 { pt3dadd( -3.53623, -112.736, -25.5143, 0.96 ) }
    dend_48 { pt3dadd( -3.98044, -114.409, -25.9658, 0.96 ) }
    dend_48 { pt3dadd( -4.49872, -115.975, -26.3693, 1.11 ) }
    dend_48 { pt3dadd( -4.82734, -116.736, -26.5382, 1.25 ) }
    dend_48 { pt3dadd( -5.56871, -118.059, -26.8322, 1.4 ) }
    dend_48 { pt3dadd( -6.17251, -118.851, -27.0171, 1.4 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 73/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -4.85862, -65.0475, -6.03776, 1.11 ) }
    dend_43 { pt3dadd( -4.27746, -68.1337, -3.35234, 1.11 ) }
    dend_43 { pt3dadd( -4.1658, -68.8386, -2.95135, 1.11 ) }
    dend_43 { pt3dadd( -3.99614, -69.9765, -2.42489, 1.03 ) }
    dend_43 { pt3dadd( -3.73809, -71.714, -1.81865, 1.11 ) }
    dend_43 { pt3dadd( -3.72658, -71.7944, -1.79887, 1.11 ) }
    dend_43 { pt3dadd( -3.54565, -73.242, -1.52449, 1.11 ) }
    dend_43 { pt3dadd( -3.36, -74.873, -1.44416, 1.11 ) }
    dend_43 { pt3dadd( -3.3504, -74.9584, -1.44048, 1.11 ) }
    dend_43 { pt3dadd( -3.19972, -76.4241, -1.38957, 1.11 ) }
    dend_43 { pt3dadd( -3.04347, -78.2419, -1.36265, 1.03 ) }
    dend_43 { pt3dadd( -2.96637, -79.4148, -1.35459, 1.33 ) }
    dend_43 { pt3dadd( -2.93292, -80.8133, -1.33409, 1.18 ) }
    dend_43 { pt3dadd( -3.03278, -82.5832, -1.26147, 0.88 ) }
    dend_43 { pt3dadd( -3.04216, -82.6686, -1.25679, 0.88 ) }
    dend_43 { pt3dadd( -3.394, -84.6055, -1.0721, 0.88 ) }
    dend_43 { pt3dadd( -3.775, -86.1318, -0.877034, 0.88 ) }
    dend_43 { pt3dadd( -4.19947, -87.4644, -0.670547, 1.11 ) }
    dend_43 { pt3dadd( -4.81376, -89.2577, -0.293975, 0.88 ) }
    dend_43 { pt3dadd( -4.83739, -89.3259, -0.274545, 0.88 ) }
    dend_43 { pt3dadd( -5.22602, -90.5918, 0.134807, 0.88 ) }
    dend_43 { pt3dadd( -5.28779, -90.823, 0.22317, 0.88 ) }
    dend_43 { pt3dadd( -5.45079, -91.9031, 0.629126, 0.96 ) }
    dend_43 { pt3dadd( -5.5267, -94.0894, 1.36765, 0.81 ) }
    dend_43 { pt3dadd( -5.50436, -94.7432, 1.56051, 1.18 ) }
    dend_43 { pt3dadd( -5.44733, -95.8299, 1.84292, 0.96 ) }
    dend_43 { pt3dadd( -5.43648, -95.9952, 1.87742, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_43 { pt3dadd( -5.3175, -97.5519, 2.13597, 0.74 ) }
    dend_43 { pt3dadd( -5.25896, -98.6341, 2.19315, 0.96 ) }
    dend_43 { pt3dadd( -5.25836, -99.5526, 2.12952, 1.03 ) }
    dend_43 { pt3dadd( -5.26569, -99.7187, 2.09809, 1.03 ) }
    dend_43 { pt3dadd( -5.34559, -100.798, 1.80271, 1.33 ) }
    dend_43 { pt3dadd( -5.4471, -101.89, 1.41548, 1.55 ) }
    dend_43 { pt3dadd( -5.62936, -103.543, 0.713637, 1.25 ) }
    dend_43 { pt3dadd( -5.7176, -104.774, 0.109995, 1.4 ) }
    dend_43 { pt3dadd( -5.7849, -106.497, -0.773487, 1.55 ) }
    dend_43 { pt3dadd( -5.81281, -107.729, -1.41385, 1.11 ) }
    dend_43 { pt3dadd( -5.82149, -109.286, -2.2505, 0.74 ) }
    dend_43 { pt3dadd( -5.8217, -109.371, -2.29301, 0.74 ) }
    dend_43 { pt3dadd( -5.82942, -110.456, -2.78105, 0.74 ) }
    dend_43 { pt3dadd( -5.81088, -111.235, -3.04313, 0.96 ) }
    dend_43 { pt3dadd( -5.80403, -111.345, -3.06447, 0.96 ) }
    dend_43 { pt3dadd( -5.71708, -112.83, -3.25123, 1.11 ) }
    dend_43 { pt3dadd( -5.57281, -114.072, -3.37417, 1.11 ) }
    dend_43 { pt3dadd( -5.39471, -115.735, -3.64861, 1.25 ) }
    dend_43 { pt3dadd( -5.14271, -118.255, -4.16419, 0.96 ) }
    dend_43 { pt3dadd( -4.95468, -120.019, -4.62359, 0.96 ) }
    dend_43 { pt3dadd( -4.80799, -121.29, -5.00427, 1.11 ) }
    dend_43 { pt3dadd( -4.47897, -123.836, -5.85592, 1.11 ) }
    dend_43 { pt3dadd( -4.16076, -126.246, -6.77358, 1.25 ) }
    dend_43 { pt3dadd( -4.07461, -126.96, -7.06725, 1.55 ) }
    dend_43 { pt3dadd( -3.99063, -128.407, -7.74536, 1.47 ) }
    dend_43 { pt3dadd( -3.98734, -128.485, -7.77564, 1.47 ) }
    dend_43 { pt3dadd( -3.97126, -129.407, -8.01527, 0.88 ) }
    dend_43 { pt3dadd( -3.9737, -130.663, -8.05054, 0.59 ) }
    dend_43 { pt3dadd( -3.91697, -131.959, -7.8371, 0.74 ) }
    dend_43 { pt3dadd( -3.87236, -132.879, -7.61345, 1.03 ) }
    dend_43 { pt3dadd( -3.78664, -134.687, -7.1084, 1.03 ) }
    dend_43 { pt3dadd( -3.75369, -135.479, -6.8825, 1.25 ) }
    dend_43 { pt3dadd( -3.67716, -137.294, -6.35398, 1.25 ) }
    dend_43 { pt3dadd( -3.6136, -138.677, -5.94706, 0.74 ) }
    dend_43 { pt3dadd( -3.59158, -139.817, -5.66618, 0.74 ) }
    dend_43 { pt3dadd( -3.63166, -140.983, -5.53418, 0.96 ) }
    dend_43 { pt3dadd( -3.63861, -141.057, -5.5395, 0.96 ) }
    dend_43 { pt3dadd( -3.78096, -142.367, -5.79768, 1.18 ) }
    dend_43 { pt3dadd( -3.79107, -142.46, -5.82665, 1.18 ) }
    dend_43 { pt3dadd( -3.91365, -144.106, -6.42155, 1.33 ) }
    dend_43 { pt3dadd( -3.97907, -146.07, -7.13101, 1.03 ) }
    dend_43 { pt3dadd( -3.99434, -147.681, -7.66552, 0.88 ) }
    dend_43 { pt3dadd( -3.99724, -148.289, -7.84601, 1.33 ) }
    dend_43 { pt3dadd( -4.00824, -149.532, -8.16016, 1.33 ) }
    dend_43 { pt3dadd( -4.03568, -150.931, -8.42717, 1.55 ) }
    dend_43 { pt3dadd( -4.09552, -152.321, -8.55024, 1.33 ) }
    dend_43 { pt3dadd( -4.23143, -153.593, -8.53505, 1.11 ) }
    dend_43 { pt3dadd( -4.49055, -154.958, -8.4225, 0.66 ) }
    dend_43 { pt3dadd( -4.85101, -156.3, -8.242, 0.66 ) }
    dend_43 { pt3dadd( -5.2968, -157.593, -8.00157, 0.74 ) }
    dend_43 { pt3dadd( -5.83652, -158.955, -7.69568, 0.59 ) }
    dend_43 { pt3dadd( -6.19174, -159.866, -7.4758, 0.88 ) }
    dend_43 { pt3dadd( -6.48823, -160.788, -7.27825, 0.96 ) }
    dend_43 { pt3dadd( -6.65591, -161.684, -7.14691, 0.88 ) }
    dend_43 { pt3dadd( -6.65158, -161.767, -7.13718, 0.88 ) }
    dend_43 { pt3dadd( -6.37087, -162.945, -7.03745, 0.74 ) }
    dend_43 { pt3dadd( -6.00798, -164.065, -6.96943, 1.25 ) }
    dend_43 { pt3dadd( -5.59542, -165.283, -6.87936, 1.25 ) }
    dend_43 { pt3dadd( -5.18394, -166.641, -6.74391, 1.03 ) }
    dend_43 { pt3dadd( -4.66692, -168.931, -6.42775, 0.74 ) }
    dend_43 { pt3dadd( -4.4819, -170.236, -6.19881, 0.59 ) }
    dend_43 { pt3dadd( -4.46632, -171.009, -6.02665, 0.81 ) }
    dend_43 { pt3dadd( -4.61626, -172.099, -5.742, 0.88 ) }
    dend_43 { pt3dadd( -4.94723, -173.367, -5.39868, 1.03 ) }
    dend_43 { pt3dadd( -5.27459, -174.439, -5.16214, 1.11 ) }
    dend_43 { pt3dadd( -5.35859, -174.679, -5.14032, 1.11 ) }
    dend_43 { pt3dadd( -5.76852, -175.86, -5.17713, 0.96 ) }
    dend_43 { pt3dadd( -6.20956, -177.194, -5.34041, 1.11 ) }
    dend_43 { pt3dadd( -6.60789, -178.528, -5.61481, 0.96 ) }
    dend_43 { pt3dadd( -7.13064, -180.471, -6.12408, 1.18 ) }
    dend_43 { pt3dadd( -7.63396, -182.555, -6.62478, 1.03 ) }
    dend_43 { pt3dadd( -8.1253, -184.695, -7.09982, 0.96 ) }
    dend_43 { pt3dadd( -8.1538, -184.843, -7.13127, 0.96 ) }
    dend_43 { pt3dadd( -8.36494, -186.398, -7.41988, 0.96 ) }
    dend_43 { pt3dadd( -8.42111, -187.537, -7.53516, 1.4 ) }
    dend_43 { pt3dadd( -8.29666, -189.766, -7.54243, 1.11 ) }
    dend_43 { pt3dadd( -8.27927, -189.875, -7.53376, 1.11 ) }
    dend_43 { pt3dadd( -8.00788, -191.175, -7.39433, 1.25 ) }
    dend_43 { pt3dadd( -7.6379, -192.863, -7.23035, 1.11 ) }
    dend_43 { pt3dadd( -7.20811, -194.715, -7.0992, 0.88 ) }
    dend_43 { pt3dadd( -6.96807, -195.728, -7.0741, 1.18 ) }
    dend_43 { pt3dadd( -6.57016, -197.329, -7.149, 1.25 ) }
    dend_43 { pt3dadd( -6.32078, -198.424, -7.20461, 1.4 ) }
    dend_43 { pt3dadd( -6.30356, -198.518, -7.21005, 1.4 ) }
    dend_43 { pt3dadd( -6.08137, -200.142, -7.28995, 1.03 ) }
    dend_43 { pt3dadd( -6.06648, -200.396, -7.29919, 1.03 ) }
    dend_43 { pt3dadd( -6.07595, -201.792, -7.28139, 0.74 ) }
    dend_43 { pt3dadd( -6.15582, -203.0, -7.1434, 0.74 ) }
    dend_43 { pt3dadd( -6.29609, -203.948, -6.94386, 0.96 ) }
    dend_43 { pt3dadd( -6.6027, -205.36, -6.54695, 0.88 ) }
    dend_43 { pt3dadd( -6.97785, -206.639, -6.09229, 0.88 ) }
    dend_43 { pt3dadd( -7.35083, -207.735, -5.65873, 0.88 ) }
    dend_43 { pt3dadd( -7.92523, -209.177, -5.01368, 1.11 ) }
    dend_43 { pt3dadd( -8.33732, -210.184, -4.55684, 1.25 ) }
    dend_43 { pt3dadd( -8.71914, -211.143, -4.14892, 1.4 ) }
    dend_43 { pt3dadd( -8.83579, -211.431, -4.05107, 1.4 ) }
    dend_43 { pt3dadd( -9.11765, -212.242, -3.86164, 1.4 ) }
    dend_43 { pt3dadd( -9.20201, -212.483, -3.85551, 1.4 ) }
    dend_43 { pt3dadd( -9.69879, -213.895, -4.12552, 1.25 ) }
    dend_43 { pt3dadd( -10.049, -214.959, -4.44387, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_43 { pt3dadd( -10.3338, -215.9, -4.83388, 0.96 ) }
    dend_43 { pt3dadd( -10.7182, -217.231, -5.47146, 0.96 ) }
    dend_43 { pt3dadd( -11.3917, -219.466, -6.74263, 0.81 ) }
    dend_43 { pt3dadd( -11.9776, -221.331, -7.97012, 0.81 ) }
    dend_43 { pt3dadd( -12.2667, -222.162, -8.57061, 1.03 ) }
    dend_43 { pt3dadd( -12.9883, -224.129, -9.98237, 1.03 ) }
    dend_43 { pt3dadd( -13.0233, -224.224, -10.0475, 1.03 ) }
    dend_43 { pt3dadd( -13.6181, -225.88, -11.0871, 1.55 ) }
    dend_43 { pt3dadd( -14.2589, -227.869, -12.1156, 0.88 ) }
    dend_43 { pt3dadd( -14.8453, -229.757, -12.97, 0.81 ) }
    dend_43 { pt3dadd( -15.3195, -231.227, -13.5934, 0.81 ) }
    dend_43 { pt3dadd( -15.6699, -232.311, -14.0061, 0.96 ) }
    dend_43 { pt3dadd( -16.0153, -233.447, -14.4032, 0.96 ) }
    dend_43 { pt3dadd( -16.3218, -234.605, -14.7439, 0.74 ) }
    dend_43 { pt3dadd( -16.7783, -236.505, -15.2563, 1.25 ) }
    dend_43 { pt3dadd( -17.1439, -238.328, -15.7743, 0.81 ) }
    dend_43 { pt3dadd( -17.1583, -238.407, -15.7967, 0.81 ) }
    dend_43 { pt3dadd( -17.3555, -239.727, -16.0554, 0.81 ) }
    dend_43 { pt3dadd( -17.4948, -240.764, -16.1634, 1.18 ) }
    dend_43 { pt3dadd( -17.5098, -240.924, -16.164, 1.18 ) }
    dend_43 { pt3dadd( -17.5687, -242.052, -16.0657, 1.18 ) }
    dend_43 { pt3dadd( -17.5905, -244.02, -15.8257, 0.81 ) }
    dend_43 { pt3dadd( -17.6051, -245.949, -15.5981, 0.81 ) }
    dend_43 { pt3dadd( -17.6079, -246.995, -15.4739, 1.11 ) }
    dend_43 { pt3dadd( -17.6303, -248.747, -15.2927, 1.11 ) }
    dend_43 { pt3dadd( -17.6298, -248.929, -15.272, 1.11 ) }
    dend_43 { pt3dadd( -17.5463, -250.456, -14.9909, 0.96 ) }
    dend_43 { pt3dadd( -17.4659, -251.202, -14.8251, 1.25 ) }
    dend_43 { pt3dadd( -17.4563, -251.282, -14.8061, 1.25 ) }
    dend_43 { pt3dadd( -17.2674, -252.687, -14.4326, 1.25 ) }
    dend_43 { pt3dadd( -16.9984, -254.944, -13.7715, 1.03 ) }
    dend_43 { pt3dadd( -16.7069, -257.652, -12.948, 0.81 ) }
    dend_43 { pt3dadd( -16.6073, -258.588, -12.6722, 1.11 ) }
    dend_43 { pt3dadd( -16.4374, -260.207, -12.2596, 0.96 ) }
    dend_43 { pt3dadd( -16.4147, -260.47, -12.205, 0.96 ) }
    dend_43 { pt3dadd( -16.3212, -261.844, -11.9897, 0.81 ) }
    dend_43 { pt3dadd( -16.3203, -261.955, -11.9842, 0.81 ) }
    dend_43 { pt3dadd( -16.4035, -263.859, -12.0333, 0.96 ) }
    dend_43 { pt3dadd( -16.4507, -265.083, -12.0708, 1.18 ) }
    dend_43 { pt3dadd( -16.4898, -266.396, -12.1193, 1.03 ) }
    dend_43 { pt3dadd( -16.4936, -266.482, -12.1217, 1.03 ) }
    dend_43 { pt3dadd( -16.5899, -267.992, -12.1452, 0.74 ) }
    dend_43 { pt3dadd( -16.7772, -270.033, -12.1745, 0.74 ) }
    dend_43 { pt3dadd( -16.9209, -271.147, -12.2295, 0.81 ) }
    dend_43 { pt3dadd( -16.9361, -271.257, -12.2386, 0.81 ) }
    dend_43 { pt3dadd( -17.0666, -272.329, -12.3741, 0.81 ) }
    dend_43 { pt3dadd( -17.2148, -273.926, -12.6374, 0.81 ) }
    dend_43 { pt3dadd( -17.3149, -275.783, -13.0692, 1.03 ) }
    dend_43 { pt3dadd( -17.3668, -277.364, -13.5046, 1.03 ) }
    dend_43 { pt3dadd( -17.3703, -277.444, -13.5266, 1.03 ) }
    dend_43 { pt3dadd( -17.4489, -278.534, -13.7967, 1.25 ) }
    dend_43 { pt3dadd( -17.5429, -279.565, -14.0355, 0.96 ) }
    dend_43 { pt3dadd( -17.708, -280.947, -14.2778, 0.81 ) }
    dend_43 { pt3dadd( -17.8471, -281.835, -14.3769, 1.11 ) }
    dend_43 { pt3dadd( -18.0567, -283.166, -14.4755, 1.33 ) }
    dend_43 { pt3dadd( -18.2787, -284.461, -14.5744, 1.33 ) }
    dend_43 { pt3dadd( -18.2955, -284.554, -14.5839, 1.33 ) }
    dend_43 { pt3dadd( -18.5833, -286.32, -14.8003, 0.74 ) }
    dend_43 { pt3dadd( -18.8137, -288.16, -15.1185, 0.96 ) }
    dend_43 { pt3dadd( -18.8988, -289.685, -15.4843, 0.96 ) }
    dend_43 { pt3dadd( -18.8938, -289.834, -15.5233, 0.96 ) }
    dend_43 { pt3dadd( -18.7297, -291.374, -15.9339, 0.96 ) }
    dend_43 { pt3dadd( -18.5027, -292.758, -16.2149, 0.81 ) }
    dend_43 { pt3dadd( -18.1991, -294.252, -16.4077, 0.66 ) }
    dend_43 { pt3dadd( -17.896, -295.721, -16.4668, 0.66 ) }
    dend_43 { pt3dadd( -17.6422, -297.131, -16.4248, 1.33 ) }
    dend_43 { pt3dadd( -17.4584, -298.317, -16.2866, 1.33 ) }
    dend_43 { pt3dadd( -17.191, -300.467, -15.848, 1.11 ) }
    dend_43 { pt3dadd( -17.0171, -302.009, -15.4746, 1.18 ) }
    dend_43 { pt3dadd( -16.9291, -302.872, -15.2527, 1.4 ) }
    dend_43 { pt3dadd( -16.7968, -304.204, -14.9702, 1.11 ) }
    dend_43 { pt3dadd( -16.6063, -305.756, -14.7849, 0.59 ) }
    dend_43 { pt3dadd( -16.4394, -306.757, -14.7645, 0.52 ) }
    dend_43 { pt3dadd( -16.1516, -308.116, -14.8782, 0.88 ) }
    dend_43 { pt3dadd( -15.8229, -309.449, -15.0993, 1.18 ) }
    dend_43 { pt3dadd( -15.4822, -310.893, -15.4058, 1.03 ) }
    dend_43 { pt3dadd( -15.0861, -312.715, -15.8704, 0.96 ) }
    dend_43 { pt3dadd( -14.79, -314.522, -16.4126, 0.81 ) }
    dend_43 { pt3dadd( -14.6756, -315.588, -16.7406, 1.11 ) }
    dend_43 { pt3dadd( -14.6437, -316.834, -17.1119, 1.69 ) }
    dend_43 { pt3dadd( -14.7111, -318.231, -17.5246, 1.18 ) }
    dend_43 { pt3dadd( -14.7214, -318.324, -17.5448, 1.18 ) }
    dend_43 { pt3dadd( -14.9317, -319.797, -17.7217, 0.59 ) }
    dend_43 { pt3dadd( -14.9364, -319.88, -17.7151, 0.59 ) }
    dend_43 { pt3dadd( -14.8552, -321.143, -17.4, 1.03 ) }
    dend_43 { pt3dadd( -14.8323, -321.286, -17.349, 1.03 ) }
    dend_43 { pt3dadd( -14.3719, -323.134, -16.6486, 1.25 ) }
    dend_43 { pt3dadd( -14.1426, -323.925, -16.3542, 1.25 ) }
    dend_43 { pt3dadd( -13.5593, -325.806, -15.6723, 0.96 ) }
    dend_43 { pt3dadd( -13.265, -326.878, -15.3265, 0.66 ) }
    dend_43 { pt3dadd( -13.0449, -327.832, -15.0668, 0.66 ) }
    dend_43 { pt3dadd( -12.9121, -328.659, -14.9018, 0.37 ) }
    dend_43 { pt3dadd( -12.8705, -329.785, -14.8595, 0.52 ) }
    dend_43 { pt3dadd( -12.9758, -331.093, -14.9261, 0.81 ) }
    dend_43 { pt3dadd( -13.1997, -332.132, -15.0445, 1.11 ) }
    dend_43 { pt3dadd( -13.5135, -333.163, -15.2161, 1.4 ) }
    dend_43 { pt3dadd( -13.9478, -334.439, -15.469, 1.4 ) }
    dend_43 { pt3dadd( -14.7829, -336.662, -15.9546, 0.81 ) }
    dend_43 { pt3dadd( -15.2562, -337.916, -16.2782, 0.66 ) }
    dend_43 { pt3dadd( -15.6605, -339.112, -16.6446, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_43 { pt3dadd( -16.0693, -340.736, -17.2121, 0.37 ) }
    dend_43 { pt3dadd( -16.2297, -341.635, -17.5531, 0.88 ) }
    dend_43 { pt3dadd( -16.2387, -341.713, -17.5808, 0.88 ) }
    dend_43 { pt3dadd( -16.2967, -342.547, -17.781, 1.25 ) }
    dend_43 { pt3dadd( -16.3824, -343.521, -17.9599, 1.25 ) }
    dend_43 { pt3dadd( -16.5248, -344.633, -18.0848, 0.88 ) }
    dend_43 { pt3dadd( -16.8929, -346.526, -18.1307, 0.66 ) }
    dend_43 { pt3dadd( -17.3664, -348.302, -18.0855, 0.66 ) }
    dend_43 { pt3dadd( -17.9247, -349.986, -17.993, 0.88 ) }
    dend_43 { pt3dadd( -18.407, -351.193, -17.9392, 0.88 ) }
    dend_43 { pt3dadd( -18.8632, -352.192, -17.937, 1.11 ) }
    dend_43 { pt3dadd( -19.282, -353.098, -17.9733, 1.18 ) }
    dend_43 { pt3dadd( -19.572, -353.806, -18.002, 1.18 ) }
    dend_43 { pt3dadd( -20.321, -355.925, -18.1508, 0.88 ) }
    dend_43 { pt3dadd( -20.8333, -357.728, -18.3263, 1.25 ) }
    dend_43 { pt3dadd( -21.256, -359.708, -18.5418, 0.74 ) }
    dend_43 { pt3dadd( -21.5114, -361.33, -18.7138, 0.59 ) }
    dend_43 { pt3dadd( -21.7101, -363.188, -18.889, 1.03 ) }
    dend_43 { pt3dadd( -21.7672, -364.31, -18.9462, 0.74 ) }
    dend_43 { pt3dadd( -21.7404, -365.597, -18.9101, 0.59 ) }
    dend_43 { pt3dadd( -21.7301, -365.858, -18.876, 0.59 ) }
    dend_43 { pt3dadd( -21.715, -367.197, -18.5908, 0.74 ) }
    dend_43 { pt3dadd( -21.7276, -367.281, -18.575, 0.74 ) }
    dend_43 { pt3dadd( -22.0711, -368.504, -18.4708, 0.59 ) }
    dend_43 { pt3dadd( -22.1021, -368.597, -18.4675, 0.59 ) }
    dend_43 { pt3dadd( -22.6367, -370.204, -18.4992, 0.74 ) }
    dend_43 { pt3dadd( -23.1403, -371.824, -18.6033, 0.59 ) }
    dend_43 { pt3dadd( -23.7025, -373.921, -18.865, 0.59 ) }
    dend_43 { pt3dadd( -24.1651, -375.817, -19.193, 0.59 ) }
    dend_43 { pt3dadd( -24.4393, -377.154, -19.5088, 0.59 ) }
    dend_43 { pt3dadd( -24.6385, -378.327, -19.8397, 0.81 ) }
    dend_43 { pt3dadd( -24.6678, -378.576, -19.9252, 0.81 ) }
    dend_43 { pt3dadd( -24.7076, -379.553, -20.3172, 0.81 ) }
    dend_43 { pt3dadd( -24.7018, -379.621, -20.3399, 0.81 ) }
    dend_43 { pt3dadd( -24.5927, -380.817, -20.5666, 0.81 ) }
    dend_43 { pt3dadd( -24.5878, -380.892, -20.5675, 0.81 ) }
    dend_43 { pt3dadd( -24.5368, -382.169, -20.4631, 0.66 ) }
    dend_43 { pt3dadd( -24.5332, -382.243, -20.4556, 0.66 ) }
    dend_43 { pt3dadd( -24.4546, -383.724, -20.2797, 0.66 ) }
    dend_43 { pt3dadd( -24.2897, -385.532, -20.1006, 0.44 ) }
    dend_43 { pt3dadd( -24.0023, -387.936, -19.8882, 0.66 ) }
    dend_43 { pt3dadd( -23.6107, -390.006, -19.733, 0.96 ) }
    dend_43 { pt3dadd( -23.1638, -391.755, -19.624, 0.96 ) }
    dend_43 { pt3dadd( -23.124, -391.884, -19.6187, 0.96 ) }
    dend_43 { pt3dadd( -22.4618, -393.561, -19.6036, 0.81 ) }
    dend_43 { pt3dadd( -22.3895, -393.717, -19.61, 0.81 ) }
    dend_43 { pt3dadd( -21.5661, -395.423, -19.8085, 0.74 ) }
    dend_43 { pt3dadd( -21.5279, -395.499, -19.8171, 0.74 ) }
    dend_43 { pt3dadd( -21.1956, -396.307, -19.882, 0.96 ) }
    dend_43 { pt3dadd( -21.1465, -396.47, -19.9036, 0.96 ) }
    dend_43 { pt3dadd( -20.87, -397.869, -20.0725, 0.96 ) }
    dend_43 { pt3dadd( -20.7442, -398.866, -20.2118, 0.96 ) }
    dend_43 { pt3dadd( -20.744, -398.951, -20.2266, 0.96 ) }
    dend_43 { pt3dadd( -20.7485, -400.224, -20.4554, 0.52 ) }
    dend_43 { pt3dadd( -20.7667, -401.625, -20.7258, 0.52 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 55/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -30.062, -79.5117, -31.8788, 0.74 ) }
    dend_34 { pt3dadd( -30.7454, -79.4633, -31.7384, 0.74 ) }
    dend_34 { pt3dadd( -30.81, -79.4677, -31.7131, 0.74 ) }
    dend_34 { pt3dadd( -31.728, -79.6271, -31.2458, 0.52 ) }
    dend_34 { pt3dadd( -32.2081, -79.7315, -30.9964, 0.44 ) }
    dend_34 { pt3dadd( -33.0007, -79.9107, -30.6108, 0.44 ) }
    dend_34 { pt3dadd( -33.7562, -80.0829, -30.2776, 0.96 ) }
    dend_34 { pt3dadd( -35.132, -80.463, -29.7087, 0.74 ) }
    dend_34 { pt3dadd( -35.9506, -80.7145, -29.4205, 0.74 ) }
    dend_34 { pt3dadd( -36.3435, -80.8584, -29.3151, 0.74 ) }
    dend_34 { pt3dadd( -36.8959, -81.0567, -29.2115, 0.59 ) }
    dend_34 { pt3dadd( -37.3702, -81.2037, -29.1621, 0.52 ) }
    dend_34 { pt3dadd( -38.0306, -81.3765, -29.1489, 0.52 ) }
    dend_34 { pt3dadd( -38.4673, -81.4753, -29.1782, 0.88 ) }
    dend_34 { pt3dadd( -39.1941, -81.6112, -29.2357, 0.59 ) }
    dend_34 { pt3dadd( -40.322, -81.7738, -29.26, 0.96 ) }
    dend_34 { pt3dadd( -41.6019, -81.9236, -29.2246, 1.33 ) }
    dend_34 { pt3dadd( -42.0973, -81.9735, -29.1897, 1.33 ) }
    dend_34 { pt3dadd( -42.9019, -82.0527, -29.1171, 0.44 ) }
    dend_34 { pt3dadd( -43.3777, -82.088, -29.0758, 0.44 ) }
    dend_34 { pt3dadd( -44.3985, -82.1366, -29.026, 0.44 ) }
    dend_34 { pt3dadd( -44.449, -82.139, -29.0273, 0.44 ) }
    dend_34 { pt3dadd( -45.2347, -82.1516, -29.1108, 0.81 ) }
    dend_34 { pt3dadd( -45.7926, -82.1562, -29.1232, 0.96 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 79/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -30.062, -79.5117, -31.8788, 0.59 ) }
    dend_31 { pt3dadd( -31.1523, -80.7792, -32.6938, 0.59 ) }
    dend_31 { pt3dadd( -31.7325, -81.5025, -33.0844, 0.52 ) }
    dend_31 { pt3dadd( -32.0772, -81.9336, -33.3212, 0.88 ) }
    dend_31 { pt3dadd( -32.7317, -82.6854, -33.8227, 0.88 ) }
    dend_31 { pt3dadd( -33.1868, -83.1602, -34.294, 0.88 ) }
    dend_31 { pt3dadd( -33.5976, -83.5383, -34.7834, 1.03 ) }
    dend_31 { pt3dadd( -34.2012, -83.9383, -35.5338, 0.59 ) }
    dend_31 { pt3dadd( -34.7226, -84.1317, -36.2987, 0.44 ) }
    dend_31 { pt3dadd( -35.4237, -84.1745, -37.3924, 0.74 ) }
    dend_31 { pt3dadd( -36.6266, -83.8818, -39.3754, 0.44 ) }
    dend_31 { pt3dadd( -36.9406, -83.7288, -39.8695, 0.44 ) }
    dend_31 { pt3dadd( -37.3064, -83.5072, -40.4065, 0.44 ) }
    dend_31 { pt3dadd( -37.7417, -83.2259, -40.9748, 0.74 ) }
    dend_31 { pt3dadd( -38.0488, -83.0505, -41.3035, 0.96 ) }
    dend_31 { pt3dadd( -38.1041, -83.0307, -41.3455, 0.96 ) }
    dend_31 { pt3dadd( -38.7092, -82.9325, -41.6636, 0.88 ) }
    dend_31 { pt3dadd( -39.9949, -82.788, -42.3446, 0.44 ) }
    dend_31 { pt3dadd( -40.389, -82.7401, -42.5496, 0.44 ) }
    dend_31 { pt3dadd( -40.4499, -82.7265, -42.5901, 0.44 ) }
    dend_31 { pt3dadd( -40.8891, -82.5791, -42.9096, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_31 { pt3dadd( -41.5359, -82.2868, -43.4165, 0.44 ) }
    dend_31 { pt3dadd( -41.9629, -82.039, -43.7518, 0.81 ) }
    dend_31 { pt3dadd( -42.3531, -81.7542, -44.0741, 1.33 ) }
    dend_31 { pt3dadd( -43.627, -80.7524, -45.1756, 1.33 ) }
    dend_31 { pt3dadd( -44.1575, -80.3495, -45.6238, 1.25 ) }
    dend_31 { pt3dadd( -44.7707, -79.9085, -46.1305, 0.96 ) }
    dend_31 { pt3dadd( -45.4259, -79.4781, -46.6826, 0.88 ) }
    dend_31 { pt3dadd( -46.1848, -79.0207, -47.2948, 0.74 ) }
    dend_31 { pt3dadd( -46.782, -78.694, -47.7374, 0.74 ) }
    dend_31 { pt3dadd( -47.6153, -78.2695, -48.3092, 0.66 ) }
    dend_31 { pt3dadd( -48.0638, -78.039, -48.6449, 0.52 ) }
    dend_31 { pt3dadd( -48.7973, -77.6549, -49.1968, 0.29 ) }
    dend_31 { pt3dadd( -49.2656, -77.3685, -49.6229, 0.37 ) }
    dend_31 { pt3dadd( -49.3171, -77.3315, -49.6755, 0.37 ) }
    dend_31 { pt3dadd( -50.0685, -76.604, -50.5849, 0.88 ) }
    dend_31 { pt3dadd( -50.2863, -76.2957, -50.9532, 1.25 ) }
    dend_31 { pt3dadd( -50.5631, -75.8348, -51.5496, 1.18 ) }
    dend_31 { pt3dadd( -51.0899, -74.9955, -52.7061, 0.66 ) }
    dend_31 { pt3dadd( -51.1176, -74.9569, -52.7634, 0.66 ) }
    dend_31 { pt3dadd( -51.4998, -74.5092, -53.438, 0.74 ) }
    dend_31 { pt3dadd( -52.3501, -73.7105, -54.7117, 0.88 ) }
    dend_31 { pt3dadd( -52.9929, -73.182, -55.613, 0.52 ) }
    dend_31 { pt3dadd( -53.5071, -72.8688, -56.2199, 0.88 ) }
    dend_31 { pt3dadd( -54.1067, -72.6564, -56.7708, 1.03 ) }
    dend_31 { pt3dadd( -54.7697, -72.5065, -57.3175, 1.33 ) }
    dend_31 { pt3dadd( -55.3856, -72.4414, -57.7521, 0.88 ) }
    dend_31 { pt3dadd( -55.4484, -72.4367, -57.7916, 0.88 ) }
    dend_31 { pt3dadd( -56.2505, -72.368, -58.3323, 0.59 ) }
    dend_31 { pt3dadd( -57.2509, -72.2586, -59.1256, 0.52 ) }
    dend_31 { pt3dadd( -57.3613, -72.2417, -59.2238, 0.52 ) }
    dend_31 { pt3dadd( -57.6989, -72.1599, -59.5418, 0.81 ) }
    dend_31 { pt3dadd( -58.7815, -71.71, -60.7272, 0.29 ) }
    dend_31 { pt3dadd( -58.8246, -71.6889, -60.7812, 0.29 ) }
    dend_31 { pt3dadd( -59.1687, -71.4759, -61.3627, 0.29 ) }
    dend_31 { pt3dadd( -59.2971, -71.3904, -61.6165, 0.88 ) }
    dend_31 { pt3dadd( -59.4342, -71.3143, -61.9466, 1.18 ) }
    dend_31 { pt3dadd( -60.0487, -71.0544, -63.6026, 0.37 ) }
    dend_31 { pt3dadd( -60.4211, -70.9708, -64.6175, 0.74 ) }
    dend_31 { pt3dadd( -60.9192, -70.955, -66.026, 1.03 ) }
    dend_31 { pt3dadd( -60.9437, -70.9588, -66.0939, 1.03 ) }
    dend_31 { pt3dadd( -61.4957, -71.1214, -67.5164, 0.44 ) }
    dend_31 { pt3dadd( -61.6511, -71.1762, -67.8679, 1.18 ) }
    dend_31 { pt3dadd( -61.9558, -71.2834, -68.404, 1.47 ) }
    dend_31 { pt3dadd( -62.7303, -71.4637, -69.9629, 0.81 ) }
    dend_31 { pt3dadd( -63.0556, -71.5154, -70.6382, 0.52 ) }
    dend_31 { pt3dadd( -63.5151, -71.569, -71.6099, 0.37 ) }
    dend_31 { pt3dadd( -63.7901, -71.5932, -72.1827, 0.37 ) }
    dend_31 { pt3dadd( -64.1402, -71.626, -72.9251, 1.18 ) }
    dend_31 { pt3dadd( -65.911, -71.8234, -76.823, 0.81 ) }
    dend_31 { pt3dadd( -65.9717, -71.8314, -76.9559, 0.81 ) }
    dend_31 { pt3dadd( -66.3071, -71.8931, -77.7026, 0.81 ) }
    dend_31 { pt3dadd( -66.5514, -71.9436, -78.1961, 0.88 ) }
    dend_31 { pt3dadd( -66.8094, -72.0163, -78.6992, 0.81 ) }
    dend_31 { pt3dadd( -67.425, -72.2561, -79.7311, 0.29 ) }
    dend_31 { pt3dadd( -67.5831, -72.324, -79.907, 0.29 ) }
    dend_31 { pt3dadd( -67.8403, -72.4609, -80.2627, 0.29 ) }
    dend_31 { pt3dadd( -68.2876, -72.762, -80.982, 1.18 ) }
    dend_31 { pt3dadd( -69.2019, -73.5775, -82.569, 0.59 ) }
    dend_31 { pt3dadd( -69.482, -73.9025, -83.0549, 1.33 ) }
    dend_31 { pt3dadd( -69.5162, -73.9507, -83.1121, 1.33 ) }
    dend_31 { pt3dadd( -70.1747, -74.9657, -84.1554, 0.74 ) }
    dend_31 { pt3dadd( -70.5016, -75.5197, -84.658, 0.66 ) }
    dend_31 { pt3dadd( -70.8726, -76.1884, -85.2585, 0.37 ) }
    dend_31 { pt3dadd( -71.2603, -76.8659, -85.828, 0.88 ) }
    dend_31 { pt3dadd( -71.6612, -77.5622, -86.4363, 1.03 ) }
    dend_31 { pt3dadd( -71.9892, -78.1376, -86.9688, 0.88 ) }
    dend_31 { pt3dadd( -72.0156, -78.1869, -87.0145, 0.88 ) }
    dend_31 { pt3dadd( -72.601, -79.4916, -88.2801, 0.74 ) }
    dend_31 { pt3dadd( -72.8479, -80.1264, -89.0263, 0.44 ) }
    dend_31 { pt3dadd( -72.9748, -80.4591, -89.4752, 1.47 ) }
    dend_31 { pt3dadd( -73.2426, -81.0992, -90.4689, 1.03 ) }
    dend_31 { pt3dadd( -73.4205, -81.4233, -91.0572, 0.74 ) }
    dend_31 { pt3dadd( -73.6169, -81.6491, -91.5354, 0.74 ) }
    dend_31 { pt3dadd( -74.498, -82.2394, -93.1812, 0.52 ) }
    dend_31 { pt3dadd( -74.9497, -82.4252, -93.9751, 0.66 ) }
    dend_31 { pt3dadd( -75.3678, -82.5705, -94.7355, 0.37 ) }
    dend_31 { pt3dadd( -75.653, -82.6818, -95.3974, 0.29 ) }
    dend_31 { pt3dadd( -75.8987, -82.7874, -96.0644, 0.29 ) }
    dend_31 { pt3dadd( -76.1678, -82.9202, -96.8966, 0.74 ) }
    dend_31 { pt3dadd( -76.5139, -83.1433, -98.1157, 0.96 ) }
    dend_31 { pt3dadd( -76.9429, -83.4404, -99.8201, 0.96 ) }
    dend_31 { pt3dadd( -77.537, -83.8134, -102.374, 0.88 ) }
    dend_31 { pt3dadd( -77.5517, -83.8197, -102.433, 0.88 ) }
    dend_31 { pt3dadd( -77.8396, -83.8836, -103.481, 0.88 ) }
    dend_31 { pt3dadd( -77.9904, -83.8885, -103.939, 1.03 ) }
    dend_31 { pt3dadd( -78.2714, -83.8796, -104.623, 1.03 ) }
    dend_31 { pt3dadd( -78.7732, -83.8947, -105.618, 0.74 ) }
    dend_31 { pt3dadd( -79.3523, -84.0042, -106.677, 0.37 ) }
    dend_31 { pt3dadd( -79.383, -84.017, -106.744, 0.37 ) }
    dend_31 { pt3dadd( -79.9271, -84.3598, -108.09, 0.37 ) }
    dend_31 { pt3dadd( -80.3727, -84.7369, -109.373, 0.37 ) }
    dend_31 { pt3dadd( -80.7653, -85.1331, -110.571, 0.88 ) }
    dend_31 { pt3dadd( -81.1552, -85.5214, -111.68, 1.18 ) }
    dend_31 { pt3dadd( -81.7206, -86.0359, -113.438, 0.59 ) }
    dend_31 { pt3dadd( -81.7436, -86.0503, -113.507, 0.59 ) }
    dend_31 { pt3dadd( -82.3025, -86.1924, -115.026, 0.44 ) }
    dend_31 { pt3dadd( -82.4654, -86.1695, -115.521, 0.37 ) }
    dend_31 { pt3dadd( -82.7437, -86.0336, -116.45, 0.37 ) }
    dend_31 { pt3dadd( -83.3901, -85.578, -118.564, 1.03 ) }
    dend_31 { pt3dadd( -83.7326, -85.303, -119.608, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_31 { pt3dadd( -84.0368, -85.086, -120.459, 1.25 ) }
    dend_31 { pt3dadd( -84.7805, -84.6434, -122.6, 1.18 ) }
    dend_31 { pt3dadd( -84.8016, -84.6373, -122.669, 1.18 ) }
    dend_31 { pt3dadd( -85.1194, -84.6625, -123.676, 0.59 ) }
    dend_31 { pt3dadd( -85.3218, -84.7468, -124.247, 0.74 ) }
    dend_31 { pt3dadd( -85.5453, -84.8952, -124.868, 0.74 ) }
    dend_31 { pt3dadd( -86.2748, -85.5024, -126.948, 0.88 ) }
    dend_31 { pt3dadd( -86.8523, -86.0879, -129.247, 0.52 ) }
    dend_31 { pt3dadd( -86.9836, -86.2481, -129.922, 1.18 ) }
    dend_31 { pt3dadd( -87.1592, -86.5294, -131.209, 1.55 ) }
    dend_31 { pt3dadd( -87.2351, -86.6712, -131.891, 1.25 ) }
    dend_31 { pt3dadd( -87.4971, -87.195, -134.347, 0.74 ) }
    dend_31 { pt3dadd( -87.9892, -88.2393, -138.967, 0.74 ) }
    dend_31 { pt3dadd( -88.0416, -88.3679, -139.539, 1.4 ) }
    dend_31 { pt3dadd( -88.2597, -88.9685, -142.385, 0.74 ) }
    dend_31 { pt3dadd( -88.2718, -88.9976, -142.538, 0.74 ) }
    dend_31 { pt3dadd( -88.3572, -89.1492, -143.472, 0.59 ) }
    dend_31 { pt3dadd( -88.3692, -89.1601, -143.544, 0.59 ) }
    dend_31 { pt3dadd( -89.0803, -89.5014, -145.754, 0.59 ) }
    dend_31 { pt3dadd( -89.1254, -89.5192, -145.866, 0.59 ) }
    dend_31 { pt3dadd( -89.6036, -89.6617, -146.896, 0.66 ) }
    dend_31 { pt3dadd( -89.8845, -89.7367, -147.507, 0.88 ) }
    dend_31 { pt3dadd( -90.8933, -89.9517, -149.688, 0.44 ) }
    dend_31 { pt3dadd( -91.0332, -89.985, -149.952, 1.03 ) }
    dend_31 { pt3dadd( -91.8869, -90.2308, -151.133, 1.33 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 25/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 19.7082, -238.354, -124.034, 0.29 ) }
    dend_29 { pt3dadd( 18.6517, -239.003, -124.498, 0.29 ) }
    dend_29 { pt3dadd( 17.9927, -239.38, -124.769, 0.29 ) }
    dend_29 { pt3dadd( 17.0415, -239.89, -125.235, 0.22 ) }
    dend_29 { pt3dadd( 16.6287, -240.134, -125.449, 0.81 ) }
    dend_29 { pt3dadd( 16.2278, -240.388, -125.66, 0.81 ) }
    dend_29 { pt3dadd( 15.8935, -240.611, -125.868, 0.81 ) }
    dend_29 { pt3dadd( 15.341, -241.003, -126.274, 0.52 ) }
    dend_29 { pt3dadd( 14.2904, -241.811, -127.165, 0.22 ) }
    dend_29 { pt3dadd( 13.6064, -242.387, -127.792, 0.22 ) }
    dend_29 { pt3dadd( 13.2938, -242.672, -128.098, 0.81 ) }
    dend_29 { pt3dadd( 12.4163, -243.525, -128.988, 0.96 ) }
    dend_29 { pt3dadd( 12.2093, -243.743, -129.233, 1.11 ) }
    dend_29 { pt3dadd( 11.5621, -244.513, -130.194, 0.22 ) }
    dend_29 { pt3dadd( 11.2524, -244.902, -130.692, 0.22 ) }
    dend_29 { pt3dadd( 11.0798, -245.116, -130.978, 0.74 ) }
    dend_29 { pt3dadd( 10.8917, -245.365, -131.306, 0.96 ) }
    dend_29 { pt3dadd( 10.2334, -246.307, -132.557, 0.59 ) }
    dend_29 { pt3dadd( 9.63487, -247.193, -133.788, 0.29 ) }
    dend_29 { pt3dadd( 9.23328, -247.795, -134.743, 0.22 ) }
    dend_29 { pt3dadd( 9.127, -247.947, -135.003, 0.37 ) }
    dend_29 { pt3dadd( 8.62322, -248.618, -136.22, 0.22 ) }
    dend_29 { pt3dadd( 8.20529, -249.162, -137.233, 0.81 ) }
    dend_29 { pt3dadd( 8.02123, -249.398, -137.662, 1.03 ) }
    dend_29 { pt3dadd( 7.41816, -250.241, -139.315, 0.37 ) }
    dend_29 { pt3dadd( 7.21798, -250.536, -139.925, 0.52 ) }
    dend_29 { pt3dadd( 6.75125, -251.234, -141.366, 0.29 ) }
    dend_29 { pt3dadd( 6.55744, -251.512, -141.914, 0.66 ) }
    dend_29 { pt3dadd( 6.39347, -251.751, -142.351, 0.81 ) }
    dend_29 { pt3dadd( 5.72174, -252.851, -144.381, 0.29 ) }
    dend_29 { pt3dadd( 5.56398, -253.153, -144.901, 0.44 ) }
    dend_29 { pt3dadd( 5.5464, -253.194, -144.975, 0.44 ) }
    dend_29 { pt3dadd( 5.39183, -253.592, -145.662, 0.59 ) }
    dend_29 { pt3dadd( 5.24498, -254.146, -146.615, 1.03 ) }
    dend_29 { pt3dadd( 5.14165, -255.2, -148.43, 1.03 ) }
    dend_29 { pt3dadd( 5.19216, -256.112, -149.985, 0.29 ) }
    dend_29 { pt3dadd( 5.30933, -256.944, -151.422, 0.88 ) }
    dend_29 { pt3dadd( 5.35583, -257.243, -151.94, 1.25 ) }
    dend_29 { pt3dadd( 5.6293, -259.182, -155.326, 0.29 ) }
    dend_29 { pt3dadd( 5.78649, -260.392, -157.431, 0.37 ) }
    dend_29 { pt3dadd( 5.87203, -261.291, -158.926, 0.81 ) }
    dend_29 { pt3dadd( 5.92451, -262.116, -160.298, 0.44 ) }
    dend_29 { pt3dadd( 5.92013, -262.632, -161.126, 0.37 ) }
    dend_29 { pt3dadd( 5.85705, -263.373, -162.261, 0.37 ) }
    dend_29 { pt3dadd( 5.62001, -264.367, -163.585, 0.37 ) }
    dend_29 { pt3dadd( 5.34802, -265.148, -164.521, 0.37 ) }
    dend_29 { pt3dadd( 5.1135, -265.797, -165.242, 1.11 ) }
    dend_29 { pt3dadd( 4.95723, -266.226, -165.699, 1.25 ) }
    dend_29 { pt3dadd( 4.5582, -267.224, -166.82, 0.81 ) }
    dend_29 { pt3dadd( 4.14311, -268.11, -167.811, 0.52 ) }
    dend_29 { pt3dadd( 3.89817, -268.508, -168.216, 0.52 ) }
    dend_29 { pt3dadd( 3.86291, -268.561, -168.274, 0.52 ) }
    dend_29 { pt3dadd( 3.41181, -269.222, -168.987, 0.52 ) }
    dend_29 { pt3dadd( 2.61207, -270.332, -170.266, 0.44 ) }
    dend_29 { pt3dadd( 2.22667, -270.846, -170.856, 0.44 ) }
    dend_29 { pt3dadd( 1.60537, -271.715, -171.957, 0.74 ) }
    dend_29 { pt3dadd( 0.849953, -272.846, -173.449, 0.74 ) }
    dend_29 { pt3dadd( 0.82489, -272.887, -173.502, 0.74 ) }
    dend_29 { pt3dadd( 0.264394, -273.915, -174.824, 0.37 ) }
    dend_29 { pt3dadd( 0.0569811, -274.308, -175.336, 0.81 ) }
    dend_29 { pt3dadd( -0.652544, -275.517, -177.101, 0.29 ) }
    dend_29 { pt3dadd( -0.909618, -275.891, -177.708, 0.29 ) }
    dend_29 { pt3dadd( -1.18133, -276.261, -178.236, 0.88 ) }
    dend_29 { pt3dadd( -1.29046, -276.416, -178.451, 1.25 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 89/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 19.7082, -238.354, -124.034, 0.59 ) }
    dend_28 { pt3dadd( 20.5014, -241.144, -124.778, 0.59 ) }
    dend_28 { pt3dadd( 20.7958, -242.307, -125.044, 0.59 ) }
    dend_28 { pt3dadd( 20.8785, -242.631, -125.108, 0.81 ) }
    dend_28 { pt3dadd( 21.0805, -243.385, -125.226, 0.81 ) }
    dend_28 { pt3dadd( 21.3894, -244.476, -125.367, 0.15 ) }
    dend_28 { pt3dadd( 21.6939, -245.475, -125.465, 0.15 ) }
    dend_28 { pt3dadd( 21.7144, -245.547, -125.457, 0.15 ) }
    dend_28 { pt3dadd( 21.8536, -245.969, -125.407, 0.59 ) }
    dend_28 { pt3dadd( 22.0718, -246.592, -125.332, 0.88 ) }
    dend_28 { pt3dadd( 22.1268, -246.753, -125.315, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_28 { pt3dadd( 22.2829, -247.314, -125.275, 0.88 ) }
    dend_28 { pt3dadd( 22.5133, -248.504, -125.208, 0.52 ) }
    dend_28 { pt3dadd( 22.614, -249.485, -125.176, 0.44 ) }
    dend_28 { pt3dadd( 22.6265, -250.037, -125.171, 0.74 ) }
    dend_28 { pt3dadd( 22.5971, -250.737, -125.177, 0.44 ) }
    dend_28 { pt3dadd( 22.4857, -251.708, -125.16, 0.29 ) }
    dend_28 { pt3dadd( 22.3494, -252.374, -125.143, 0.88 ) }
    dend_28 { pt3dadd( 22.2123, -252.991, -125.108, 0.96 ) }
    dend_28 { pt3dadd( 22.0313, -253.946, -125.012, 0.81 ) }
    dend_28 { pt3dadd( 21.8927, -255.046, -124.871, 0.29 ) }
    dend_28 { pt3dadd( 21.8509, -256.195, -124.712, 0.44 ) }
    dend_28 { pt3dadd( 21.8917, -257.009, -124.577, 0.22 ) }
    dend_28 { pt3dadd( 22.0822, -258.3, -124.343, 0.22 ) }
    dend_28 { pt3dadd( 22.2922, -259.077, -124.172, 0.59 ) }
    dend_28 { pt3dadd( 22.6204, -259.949, -123.904, 0.81 ) }
    dend_28 { pt3dadd( 22.97, -260.704, -123.63, 0.81 ) }
    dend_28 { pt3dadd( 23.2576, -261.279, -123.415, 0.88 ) }
    dend_28 { pt3dadd( 23.7293, -262.366, -123.013, 0.37 ) }
    dend_28 { pt3dadd( 24.0244, -263.476, -122.677, 0.59 ) }
    dend_28 { pt3dadd( 24.1801, -264.581, -122.429, 0.96 ) }
    dend_28 { pt3dadd( 24.218, -265.372, -122.299, 0.59 ) }
    dend_28 { pt3dadd( 24.181, -266.332, -122.206, 0.29 ) }
    dend_28 { pt3dadd( 24.0671, -267.665, -122.251, 0.29 ) }
    dend_28 { pt3dadd( 23.8847, -269.117, -122.448, 0.74 ) }
    dend_28 { pt3dadd( 23.7772, -269.96, -122.625, 0.96 ) }
    dend_28 { pt3dadd( 23.7644, -270.085, -122.654, 0.96 ) }
    dend_28 { pt3dadd( 23.7093, -270.765, -122.793, 0.96 ) }
    dend_28 { pt3dadd( 23.6272, -272.017, -123.021, 0.44 ) }
    dend_28 { pt3dadd( 23.5812, -272.881, -123.153, 0.29 ) }
    dend_28 { pt3dadd( 23.4308, -274.051, -123.273, 0.59 ) }
    dend_28 { pt3dadd( 23.2043, -275.01, -123.333, 1.03 ) }
    dend_28 { pt3dadd( 23.1098, -275.305, -123.346, 1.11 ) }
    dend_28 { pt3dadd( 22.8912, -275.882, -123.353, 0.96 ) }
    dend_28 { pt3dadd( 22.601, -276.574, -123.341, 0.96 ) }
    dend_28 { pt3dadd( 22.1381, -277.607, -123.325, 0.37 ) }
    dend_28 { pt3dadd( 21.6777, -278.622, -123.326, 0.22 ) }
    dend_28 { pt3dadd( 21.4099, -279.273, -123.34, 0.44 ) }
    dend_28 { pt3dadd( 20.9997, -280.384, -123.351, 0.44 ) }
    dend_28 { pt3dadd( 20.7763, -281.171, -123.338, 0.66 ) }
    dend_28 { pt3dadd( 20.6393, -281.976, -123.303, 0.88 ) }
    dend_28 { pt3dadd( 20.5613, -282.828, -123.272, 0.29 ) }
    dend_28 { pt3dadd( 20.4578, -283.779, -123.151, 0.29 ) }
    dend_28 { pt3dadd( 20.4457, -283.884, -123.13, 0.29 ) }
    dend_28 { pt3dadd( 20.3143, -284.793, -122.917, 0.29 ) }
    dend_28 { pt3dadd( 20.124, -285.952, -122.641, 0.29 ) }
    dend_28 { pt3dadd( 19.8934, -287.263, -122.334, 0.29 ) }
    dend_28 { pt3dadd( 19.4964, -288.916, -121.899, 0.59 ) }
    dend_28 { pt3dadd( 19.3569, -289.334, -121.792, 0.74 ) }
    dend_28 { pt3dadd( 18.9314, -290.418, -121.544, 0.29 ) }
    dend_28 { pt3dadd( 18.5645, -291.264, -121.384, 0.29 ) }
    dend_28 { pt3dadd( 18.5352, -291.344, -121.37, 0.29 ) }
    dend_28 { pt3dadd( 18.3376, -292.346, -121.249, 0.81 ) }
    dend_28 { pt3dadd( 18.3047, -292.968, -121.225, 1.25 ) }
    dend_28 { pt3dadd( 18.3205, -293.65, -121.232, 0.88 ) }
    dend_28 { pt3dadd( 18.4542, -294.787, -121.266, 0.52 ) }
    dend_28 { pt3dadd( 18.6934, -296.177, -121.274, 0.29 ) }
    dend_28 { pt3dadd( 18.8363, -296.874, -121.272, 0.66 ) }
    dend_28 { pt3dadd( 19.0866, -297.786, -121.258, 0.74 ) }
    dend_28 { pt3dadd( 19.6063, -299.291, -121.154, 0.22 ) }
    dend_28 { pt3dadd( 19.9518, -300.164, -121.054, 0.22 ) }
    dend_28 { pt3dadd( 20.3273, -301.038, -120.872, 0.88 ) }
    dend_28 { pt3dadd( 20.361, -301.124, -120.847, 0.88 ) }
    dend_28 { pt3dadd( 20.642, -301.904, -120.556, 0.81 ) }
    dend_28 { pt3dadd( 20.9337, -302.739, -120.22, 0.74 ) }
    dend_28 { pt3dadd( 20.9556, -302.818, -120.19, 0.74 ) }
    dend_28 { pt3dadd( 21.1479, -303.966, -119.882, 0.29 ) }
    dend_28 { pt3dadd( 21.2564, -305.098, -119.688, 0.74 ) }
    dend_28 { pt3dadd( 21.2589, -305.488, -119.644, 0.81 ) }
    dend_28 { pt3dadd( 21.1579, -306.602, -119.628, 0.22 ) }
    dend_28 { pt3dadd( 21.0587, -307.156, -119.671, 0.66 ) }
    dend_28 { pt3dadd( 20.938, -307.718, -119.754, 0.74 ) }
    dend_28 { pt3dadd( 20.9197, -307.789, -119.771, 0.74 ) }
    dend_28 { pt3dadd( 20.6757, -308.6, -120.007, 0.74 ) }
    dend_28 { pt3dadd( 20.3409, -309.538, -120.321, 0.22 ) }
    dend_28 { pt3dadd( 20.0466, -310.289, -120.688, 0.22 ) }
    dend_28 { pt3dadd( 20.0248, -310.348, -120.722, 0.22 ) }
    dend_28 { pt3dadd( 19.9072, -310.772, -120.992, 0.66 ) }
    dend_28 { pt3dadd( 19.8975, -310.854, -121.041, 0.66 ) }
    dend_28 { pt3dadd( 19.9126, -311.298, -121.3, 0.66 ) }
    dend_28 { pt3dadd( 20.0056, -312.541, -121.959, 0.52 ) }
    dend_28 { pt3dadd( 20.0138, -312.603, -122.002, 0.52 ) }
    dend_28 { pt3dadd( 20.102, -313.427, -122.6, 0.22 ) }
    dend_28 { pt3dadd( 20.1467, -314.1, -123.09, 1.03 ) }
    dend_28 { pt3dadd( 20.1791, -314.512, -123.397, 1.11 ) }
    dend_28 { pt3dadd( 20.2354, -315.27, -123.94, 0.88 ) }
    dend_28 { pt3dadd( 20.3453, -317.714, -125.569, 0.22 ) }
    dend_28 { pt3dadd( 20.3684, -318.303, -125.947, 0.88 ) }
    dend_28 { pt3dadd( 20.3864, -318.938, -126.358, 0.59 ) }
    dend_28 { pt3dadd( 20.419, -319.885, -126.941, 0.52 ) }
    dend_28 { pt3dadd( 20.4686, -320.747, -127.404, 0.81 ) }
    dend_28 { pt3dadd( 20.5755, -321.376, -127.751, 0.81 ) }
    dend_28 { pt3dadd( 20.9542, -322.698, -128.593, 0.29 ) }
    dend_28 { pt3dadd( 20.976, -322.753, -128.633, 0.29 ) }
    dend_28 { pt3dadd( 21.2226, -323.22, -129.035, 0.96 ) }
    dend_28 { pt3dadd( 21.5159, -323.671, -129.478, 1.25 ) }
    dend_28 { pt3dadd( 23.0532, -325.676, -131.637, 0.52 ) }
    dend_28 { pt3dadd( 24.1679, -326.977, -133.119, 0.44 ) }
    dend_28 { pt3dadd( 24.5009, -327.331, -133.522, 0.66 ) }
    dend_28 { pt3dadd( 25.5264, -328.376, -134.679, 0.52 ) }
    dend_28 { pt3dadd( 26.6888, -329.5, -135.867, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_28 { pt3dadd( 26.9764, -329.77, -136.127, 0.59 ) }
    dend_28 { pt3dadd( 27.0941, -329.888, -136.21, 0.59 ) }
    dend_28 { pt3dadd( 28.2441, -331.031, -136.84, 0.22 ) }
    dend_28 { pt3dadd( 28.3088, -331.097, -136.874, 0.22 ) }
    dend_28 { pt3dadd( 28.743, -331.574, -137.003, 0.59 ) }
    dend_28 { pt3dadd( 28.8731, -331.721, -137.013, 0.59 ) }
    dend_28 { pt3dadd( 29.0532, -331.919, -137.028, 0.59 ) }
    dend_28 { pt3dadd( 29.1113, -331.984, -137.032, 0.59 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 8/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -1.23766, 174.58, 26.2755, 0.29 ) }
    dend_24 { pt3dadd( -2.00111, 175.127, 26.0576, 0.29 ) }
    dend_24 { pt3dadd( -2.5285, 175.491, 25.9543, 0.29 ) }
    dend_24 { pt3dadd( -3.25894, 175.985, 25.8468, 0.66 ) }
    dend_24 { pt3dadd( -3.89622, 176.417, 25.7375, 0.29 ) }
    dend_24 { pt3dadd( -4.21556, 176.635, 25.6803, 0.37 ) }
    dend_24 { pt3dadd( -4.87487, 177.09, 25.5641, 0.37 ) }
    dend_24 { pt3dadd( -5.55464, 177.578, 25.4761, 0.59 ) }
    dend_24 { pt3dadd( -5.89531, 177.825, 25.4313, 0.81 ) }
    dend_24 { pt3dadd( -6.47453, 178.248, 25.3657, 0.37 ) }
    dend_24 { pt3dadd( -6.65669, 178.395, 25.3567, 0.88 ) }
    dend_24 { pt3dadd( -6.91748, 178.629, 25.3402, 1.03 ) }
    dend_24 { pt3dadd( -7.24171, 178.96, 25.3196, 0.81 ) }
    dend_24 { pt3dadd( -7.49373, 179.246, 25.3115, 0.37 ) }
    dend_24 { pt3dadd( -7.5234, 179.287, 25.3137, 0.37 ) }
    dend_24 { pt3dadd( -7.80136, 179.764, 25.3742, 0.37 ) }
    dend_24 { pt3dadd( -7.8289, 179.822, 25.3806, 0.37 ) }
    dend_24 { pt3dadd( -8.01384, 180.286, 25.4918, 0.37 ) }
    dend_24 { pt3dadd( -8.02698, 180.327, 25.5061, 0.37 ) }
    dend_24 { pt3dadd( -8.21168, 180.932, 25.7749, 0.22 ) }
    dend_24 { pt3dadd( -8.31227, 181.265, 25.9375, 0.74 ) }
    dend_24 { pt3dadd( -8.32313, 181.304, 25.9577, 0.74 ) }
    dend_24 { pt3dadd( -8.57123, 182.217, 26.4226, 0.29 ) }
    dend_24 { pt3dadd( -8.61701, 182.401, 26.521, 0.66 ) }
    dend_24 { pt3dadd( -8.68148, 182.652, 26.658, 0.66 ) }
    dend_24 { pt3dadd( -8.80308, 183.096, 26.9034, 0.37 ) }
    dend_24 { pt3dadd( -8.885, 183.416, 27.0661, 0.29 ) }
    dend_24 { pt3dadd( -8.96044, 183.744, 27.2016, 0.29 ) }
    dend_24 { pt3dadd( -9.05403, 184.235, 27.3488, 0.96 ) }
    dend_24 { pt3dadd( -9.06211, 184.277, 27.3613, 0.96 ) }
    dend_24 { pt3dadd( -9.10356, 184.545, 27.4397, 0.66 ) }
    dend_24 { pt3dadd( -9.15673, 184.955, 27.5559, 0.29 ) }
    dend_24 { pt3dadd( -9.21719, 185.362, 27.6598, 0.29 ) }
    dend_24 { pt3dadd( -9.22458, 185.404, 27.6679, 0.29 ) }
    dend_24 { pt3dadd( -9.30375, 185.827, 27.7203, 1.11 ) }
    dend_24 { pt3dadd( -9.3508, 186.231, 27.7594, 1.47 ) }
    dend_24 { pt3dadd( -9.35672, 186.342, 27.768, 1.47 ) }
    dend_24 { pt3dadd( -9.36781, 186.904, 27.8039, 0.66 ) }
    dend_24 { pt3dadd( -9.36794, 187.343, 27.8322, 0.37 ) }
    dend_24 { pt3dadd( -9.36605, 187.893, 27.8695, 0.37 ) }
    dend_24 { pt3dadd( -9.36016, 188.757, 27.874, 0.29 ) }
    dend_24 { pt3dadd( -9.36489, 189.674, 27.8405, 0.29 ) }
    dend_24 { pt3dadd( -9.36487, 189.769, 27.8362, 0.29 ) }
    dend_24 { pt3dadd( -9.35216, 190.358, 27.7984, 0.96 ) }
    dend_24 { pt3dadd( -9.34426, 190.677, 27.7728, 1.18 ) }
    dend_24 { pt3dadd( -9.34138, 191.724, 27.6318, 0.37 ) }
    dend_24 { pt3dadd( -9.37013, 192.074, 27.5503, 0.37 ) }
    dend_24 { pt3dadd( -12.4776, 197.482, 27.76, 0.37 ) }
    dend_24 { pt3dadd( -14.4642, 203.371, 27.2071, 0.37 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 57/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -1.23766, 174.58, 26.2755, 1.03 ) }
    dend_21 { pt3dadd( -1.21266, 175.051, 26.4801, 1.03 ) }
    dend_21 { pt3dadd( -1.20593, 176.184, 26.9508, 1.4 ) }
    dend_21 { pt3dadd( -1.21463, 177.615, 27.4812, 1.4 ) }
    dend_21 { pt3dadd( -1.21507, 177.704, 27.5114, 1.4 ) }
    dend_21 { pt3dadd( -1.21421, 179.013, 27.907, 1.25 ) }
    dend_21 { pt3dadd( -1.17427, 180.397, 28.3033, 0.81 ) }
    dend_21 { pt3dadd( -1.167, 180.486, 28.331, 0.81 ) }
    dend_21 { pt3dadd( -1.05237, 181.507, 28.6449, 0.96 ) }
    dend_21 { pt3dadd( -1.00562, 181.868, 28.7436, 0.96 ) }
    dend_21 { pt3dadd( -0.856302, 182.883, 29.0254, 1.18 ) }
    dend_21 { pt3dadd( -0.643367, 184.042, 29.3557, 0.96 ) }
    dend_21 { pt3dadd( -0.397215, 185.688, 29.7725, 1.18 ) }
    dend_21 { pt3dadd( -0.383311, 185.823, 29.8039, 1.18 ) }
    dend_21 { pt3dadd( -0.329265, 186.939, 30.0092, 1.18 ) }
    dend_21 { pt3dadd( -0.335835, 188.221, 30.1324, 0.96 ) }
    dend_21 { pt3dadd( -0.342678, 188.338, 30.1334, 0.96 ) }
    dend_21 { pt3dadd( -0.473272, 189.919, 30.0313, 1.47 ) }
    dend_21 { pt3dadd( -0.481379, 190.012, 30.0199, 1.47 ) }
    dend_21 { pt3dadd( -0.531373, 191.473, 29.832, 1.18 ) }
    dend_21 { pt3dadd( -0.490584, 192.98, 29.6048, 0.81 ) }
    dend_21 { pt3dadd( -0.469974, 193.147, 29.5802, 0.81 ) }
    dend_21 { pt3dadd( -0.237795, 194.17, 29.5578, 0.74 ) }
    dend_21 { pt3dadd( -0.211028, 194.25, 29.5706, 0.74 ) }
    dend_21 { pt3dadd( -0.00321549, 194.924, 29.7813, 0.74 ) }
    dend_21 { pt3dadd( 0.0150996, 195.008, 29.8215, 0.74 ) }
    dend_21 { pt3dadd( 0.0740123, 195.7, 30.2077, 0.81 ) }
    dend_21 { pt3dadd( 0.021711, 197.222, 31.0748, 1.18 ) }
    dend_21 { pt3dadd( -0.0538648, 197.834, 31.4281, 1.4 ) }
    dend_21 { pt3dadd( -0.236469, 198.939, 32.0517, 0.96 ) }
    dend_21 { pt3dadd( -0.446078, 200.009, 32.639, 0.96 ) }
    dend_21 { pt3dadd( -0.65352, 200.965, 33.1292, 0.96 ) }
    dend_21 { pt3dadd( -0.950173, 202.169, 33.6638, 0.96 ) }
    dend_21 { pt3dadd( -0.967624, 202.253, 33.7008, 0.96 ) }
    dend_21 { pt3dadd( -1.04826, 202.877, 34.0109, 0.96 ) }
    dend_21 { pt3dadd( -1.07558, 203.338, 34.255, 1.18 ) }
    dend_21 { pt3dadd( -1.07343, 203.556, 34.3772, 1.18 ) }
    dend_21 { pt3dadd( -1.04957, 204.46, 34.8853, 1.18 ) }
    dend_21 { pt3dadd( -1.01465, 206.291, 35.8631, 0.96 ) }
    dend_21 { pt3dadd( -0.990218, 207.792, 36.6682, 0.66 ) }
    dend_21 { pt3dadd( -0.982797, 208.512, 37.0579, 0.66 ) }
    dend_21 { pt3dadd( -0.996469, 209.474, 37.558, 0.88 ) }
    dend_21 { pt3dadd( -1.02069, 210.457, 38.0368, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_21 { pt3dadd( -1.05397, 211.394, 38.4591, 1.03 ) }
    dend_21 { pt3dadd( -1.11672, 212.419, 38.8451, 1.03 ) }
    dend_21 { pt3dadd( -1.12025, 212.496, 38.8747, 1.03 ) }
    dend_21 { pt3dadd( -1.17351, 213.372, 39.1945, 1.11 ) }
    dend_21 { pt3dadd( -1.2531, 214.304, 39.5025, 1.11 ) }
    dend_21 { pt3dadd( -1.26717, 214.437, 39.5449, 1.11 ) }
    dend_21 { pt3dadd( -1.44764, 215.811, 39.952, 0.96 ) }
    dend_21 { pt3dadd( -1.56815, 216.766, 40.2577, 0.96 ) }
    dend_21 { pt3dadd( -1.69642, 218.059, 40.6916, 1.4 ) }
    dend_21 { pt3dadd( -1.76439, 218.965, 41.0048, 1.03 ) }
    dend_21 { pt3dadd( -1.82188, 220.094, 41.3758, 1.25 ) }
    dend_21 { pt3dadd( -1.82943, 221.484, 41.7876, 0.88 ) }
    dend_21 { pt3dadd( -1.75352, 222.786, 42.1164, 0.88 ) }
    dend_21 { pt3dadd( -1.61716, 223.914, 42.3724, 0.88 ) }
    dend_21 { pt3dadd( -1.56659, 224.175, 42.4205, 0.88 ) }
    dend_21 { pt3dadd( -1.3557, 225.114, 42.5543, 0.88 ) }
    dend_21 { pt3dadd( -1.09771, 226.404, 42.6969, 0.81 ) }
    dend_21 { pt3dadd( -0.905145, 227.603, 42.791, 0.81 ) }
    dend_21 { pt3dadd( -0.899646, 227.685, 42.7964, 0.81 ) }
    dend_21 { pt3dadd( -0.881267, 228.483, 42.9192, 0.96 ) }
    dend_21 { pt3dadd( -0.928707, 229.845, 43.2342, 0.96 ) }
    dend_21 { pt3dadd( -1.0459, 231.301, 43.6561, 1.03 ) }
    dend_21 { pt3dadd( -1.05345, 231.37, 43.6791, 1.03 ) }
    dend_21 { pt3dadd( -1.28791, 233.134, 44.3027, 1.03 ) }
    dend_21 { pt3dadd( -1.48411, 234.596, 44.814, 1.03 ) }
    dend_21 { pt3dadd( -1.65787, 236.055, 45.3032, 1.03 ) }
    dend_21 { pt3dadd( -1.69976, 236.605, 45.4707, 1.03 ) }
    dend_21 { pt3dadd( -1.7157, 237.296, 45.6453, 1.03 ) }
    dend_21 { pt3dadd( -1.70841, 238.41, 45.8752, 0.88 ) }
    dend_21 { pt3dadd( -1.64475, 239.776, 46.0602, 0.88 ) }
    dend_21 { pt3dadd( -1.5721, 240.959, 46.1304, 1.11 ) }
    dend_21 { pt3dadd( -1.52849, 241.446, 46.1265, 1.11 ) }
    dend_21 { pt3dadd( -1.4279, 242.753, 46.0651, 1.11 ) }
    dend_21 { pt3dadd( -1.41433, 242.93, 46.0496, 1.11 ) }
    dend_21 { pt3dadd( -1.34647, 243.847, 45.9364, 0.96 ) }
    dend_21 { pt3dadd( -1.3438, 243.916, 45.9264, 0.96 ) }
    dend_21 { pt3dadd( -1.34959, 245.381, 45.7318, 0.88 ) }
    dend_21 { pt3dadd( -1.39207, 246.491, 45.6063, 0.66 ) }
    dend_21 { pt3dadd( -1.40105, 246.66, 45.5919, 0.66 ) }
    dend_21 { pt3dadd( -1.43388, 247.69, 45.5251, 0.66 ) }
    dend_21 { pt3dadd( -1.43358, 247.784, 45.5214, 0.66 ) }
    dend_21 { pt3dadd( -1.35264, 248.865, 45.505, 0.96 ) }
    dend_21 { pt3dadd( -1.32621, 249.03, 45.5077, 0.96 ) }
    dend_21 { pt3dadd( -1.09586, 250.089, 45.4861, 0.96 ) }
    dend_21 { pt3dadd( -1.04834, 250.284, 45.4787, 0.96 ) }
    dend_21 { pt3dadd( -0.907847, 250.847, 45.457, 0.96 ) }
    dend_21 { pt3dadd( -0.621031, 251.916, 45.4755, 0.96 ) }
    dend_21 { pt3dadd( -0.402064, 252.687, 45.5202, 1.18 ) }
    dend_21 { pt3dadd( -0.161227, 253.592, 45.6061, 0.74 ) }
    dend_21 { pt3dadd( 0.0741387, 254.665, 45.7528, 0.74 ) }
    dend_21 { pt3dadd( 0.201311, 255.486, 45.8973, 1.18 ) }
    dend_21 { pt3dadd( 0.265793, 256.762, 46.1901, 0.66 ) }
    dend_21 { pt3dadd( 0.204518, 257.718, 46.4593, 0.66 ) }
    dend_21 { pt3dadd( 0.0278716, 258.864, 46.8189, 0.66 ) }
    dend_21 { pt3dadd( -0.230333, 259.987, 47.2024, 1.18 ) }
    dend_21 { pt3dadd( -0.47139, 260.798, 47.4674, 1.18 ) }
    dend_21 { pt3dadd( -1.02283, 262.389, 47.9381, 0.96 ) }
    dend_21 { pt3dadd( -1.41224, 263.476, 48.2511, 0.96 ) }
    dend_21 { pt3dadd( -1.67295, 264.265, 48.4923, 0.66 ) }
    dend_21 { pt3dadd( -1.69127, 264.329, 48.5123, 0.66 ) }
    dend_21 { pt3dadd( -1.98269, 265.606, 48.9065, 0.59 ) }
    dend_21 { pt3dadd( -2.12756, 266.421, 49.1566, 1.03 ) }
    dend_21 { pt3dadd( -2.30051, 267.908, 49.7027, 0.81 ) }
    dend_21 { pt3dadd( -2.37172, 268.697, 50.036, 1.03 ) }
    dend_21 { pt3dadd( -2.38674, 268.85, 50.1072, 1.03 ) }
    dend_21 { pt3dadd( -2.49945, 269.811, 50.5712, 1.03 ) }
    dend_21 { pt3dadd( -2.5464, 270.134, 50.738, 1.03 ) }
    dend_21 { pt3dadd( -2.78262, 271.435, 51.3912, 0.96 ) }
    dend_21 { pt3dadd( -3.01457, 272.616, 51.9081, 0.96 ) }
    dend_21 { pt3dadd( -3.15787, 273.523, 52.2584, 0.96 ) }
    dend_21 { pt3dadd( -3.26903, 274.445, 52.5682, 1.11 ) }
    dend_21 { pt3dadd( -3.31781, 275.121, 52.7501, 1.33 ) }
    dend_21 { pt3dadd( -3.32183, 275.213, 52.7688, 1.33 ) }
    dend_21 { pt3dadd( -3.32394, 276.47, 52.8959, 0.88 ) }
    dend_21 { pt3dadd( -3.26214, 277.438, 52.9605, 1.11 ) }
    dend_21 { pt3dadd( -3.23311, 277.614, 52.971, 1.11 ) }
    dend_21 { pt3dadd( -3.02248, 278.379, 53.0095, 1.11 ) }
    dend_21 { pt3dadd( -2.9933, 278.456, 53.012, 1.11 ) }
    dend_21 { pt3dadd( -2.60009, 279.222, 53.0952, 0.88 ) }
    dend_21 { pt3dadd( -2.55752, 279.291, 53.1064, 0.81 ) }
    dend_21 { pt3dadd( -2.088, 280.061, 53.2394, 1.03 ) }
    dend_21 { pt3dadd( -1.75113, 280.622, 53.3501, 1.03 ) }
    dend_21 { pt3dadd( -1.2339, 281.555, 53.5514, 0.81 ) }
    dend_21 { pt3dadd( -0.54983, 282.971, 53.8775, 0.74 ) }
    dend_21 { pt3dadd( -0.134025, 284.006, 54.1265, 0.74 ) }
    dend_21 { pt3dadd( 0.2277, 285.055, 54.4099, 0.88 ) }
    dend_21 { pt3dadd( 0.398075, 285.644, 54.5752, 0.88 ) }
    dend_21 { pt3dadd( 0.60263, 286.52, 54.8517, 0.88 ) }
    dend_21 { pt3dadd( 0.707823, 287.099, 55.0372, 0.88 ) }
    dend_21 { pt3dadd( 0.840916, 287.9, 55.2482, 0.88 ) }
    dend_21 { pt3dadd( 1.07854, 289.047, 55.5095, 0.88 ) }
    dend_21 { pt3dadd( 1.24615, 289.633, 55.6347, 0.88 ) }
    dend_21 { pt3dadd( 1.29999, 289.801, 55.6653, 0.88 ) }
    dend_21 { pt3dadd( 1.66877, 290.831, 55.8312, 0.88 ) }
    dend_21 { pt3dadd( 2.05235, 291.914, 55.9819, 0.88 ) }
    dend_21 { pt3dadd( 2.46629, 293.102, 56.1175, 0.44 ) }
    dend_21 { pt3dadd( 2.81268, 294.187, 56.2601, 0.81 ) }
    dend_21 { pt3dadd( 3.03472, 295.004, 56.4075, 1.25 ) }
    dend_21 { pt3dadd( 3.27607, 296.029, 56.6295, 0.96 ) }
    dend_21 { pt3dadd( 3.51245, 297.358, 56.9724, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_21 { pt3dadd( 3.56296, 297.768, 57.091, 1.47 ) }
    dend_21 { pt3dadd( 3.68541, 299.492, 57.5997, 1.11 ) }
    dend_21 { pt3dadd( 3.70416, 300.534, 57.8931, 0.96 ) }
    dend_21 { pt3dadd( 3.70398, 300.613, 57.9155, 0.96 ) }
    dend_21 { pt3dadd( 3.69584, 301.537, 58.1396, 0.96 ) }
    dend_21 { pt3dadd( 3.69539, 301.61, 58.1533, 0.96 ) }
    dend_21 { pt3dadd( 3.72098, 302.8, 58.3108, 0.96 ) }
    dend_21 { pt3dadd( 3.72848, 302.966, 58.3178, 0.96 ) }
    dend_21 { pt3dadd( 3.84131, 304.529, 58.3223, 0.96 ) }
    dend_21 { pt3dadd( 3.97795, 306.319, 58.2203, 0.96 ) }
    dend_21 { pt3dadd( 4.1111, 307.93, 58.0565, 0.96 ) }
    dend_21 { pt3dadd( 4.21123, 308.9, 57.962, 0.96 ) }
    dend_21 { pt3dadd( 4.31984, 309.765, 57.8715, 0.96 ) }
    dend_21 { pt3dadd( 4.49002, 310.938, 57.7518, 1.11 ) }
    dend_21 { pt3dadd( 4.78049, 312.684, 57.5788, 1.11 ) }
    dend_21 { pt3dadd( 4.79588, 312.756, 57.577, 1.11 ) }
    dend_21 { pt3dadd( 5.22395, 314.279, 57.7253, 1.11 ) }
    dend_21 { pt3dadd( 5.24856, 314.356, 57.7421, 1.11 ) }
    dend_21 { pt3dadd( 5.59578, 315.317, 58.0521, 1.11 ) }
    dend_21 { pt3dadd( 5.90013, 316.101, 58.3507, 1.18 ) }
    dend_21 { pt3dadd( 6.42594, 317.431, 58.9259, 0.88 ) }
    dend_21 { pt3dadd( 6.77477, 318.37, 59.294, 0.66 ) }
    dend_21 { pt3dadd( 6.79876, 318.447, 59.32, 0.66 ) }
    dend_21 { pt3dadd( 6.9501, 319.174, 59.5692, 0.81 ) }
    dend_21 { pt3dadd( 7.06217, 320.113, 59.8784, 0.81 ) }
    dend_21 { pt3dadd( 7.06693, 320.194, 59.9015, 0.81 ) }
    dend_21 { pt3dadd( 7.07047, 321.09, 60.0929, 0.66 ) }
    dend_21 { pt3dadd( 7.06387, 322.037, 60.2581, 1.18 ) }
    dend_21 { pt3dadd( 7.05559, 323.539, 60.4992, 1.03 ) }
    dend_21 { pt3dadd( 7.05178, 324.49, 60.637, 0.88 ) }
    dend_21 { pt3dadd( 7.04718, 325.702, 60.7641, 0.74 ) }
    dend_21 { pt3dadd( 7.04992, 327.089, 60.8582, 1.25 ) }
    dend_21 { pt3dadd( 7.04868, 327.828, 60.8806, 1.03 ) }
    dend_21 { pt3dadd( 7.05216, 328.005, 60.8802, 1.03 ) }
    dend_21 { pt3dadd( 7.08455, 329.23, 60.8184, 1.03 ) }
    dend_21 { pt3dadd( 7.13394, 330.214, 60.8317, 1.03 ) }
    dend_21 { pt3dadd( 7.14594, 330.298, 60.8395, 1.03 ) }
    dend_21 { pt3dadd( 7.44118, 331.523, 61.0537, 1.25 ) }
    dend_21 { pt3dadd( 7.46879, 331.598, 61.0733, 1.25 ) }
    dend_21 { pt3dadd( 8.02521, 332.828, 61.4496, 1.4 ) }
    dend_21 { pt3dadd( 9.02901, 334.701, 62.1188, 0.74 ) }
    dend_21 { pt3dadd( 9.67301, 335.837, 62.5556, 0.59 ) }
    dend_21 { pt3dadd( 9.73026, 335.936, 62.5931, 0.59 ) }
    dend_21 { pt3dadd( 10.5315, 337.268, 63.0677, 0.59 ) }
    dend_21 { pt3dadd( 10.9507, 338.024, 63.2951, 0.81 ) }
    dend_21 { pt3dadd( 10.9857, 338.097, 63.3121, 0.81 ) }
    dend_21 { pt3dadd( 11.2833, 339.007, 63.4052, 0.81 ) }
    dend_21 { pt3dadd( 11.337, 339.252, 63.4229, 0.81 ) }
    dend_21 { pt3dadd( 11.5055, 340.277, 63.479, 1.03 ) }
    dend_21 { pt3dadd( 11.6265, 341.306, 63.5085, 1.25 ) }
    dend_21 { pt3dadd( 11.7586, 342.088, 63.562, 1.25 ) }
    dend_21 { pt3dadd( 11.7734, 342.158, 63.5683, 1.25 ) }
    dend_21 { pt3dadd( 12.0473, 343.142, 63.7362, 0.96 ) }
    dend_21 { pt3dadd( 12.4989, 344.561, 64.0549, 0.74 ) }
    dend_21 { pt3dadd( 12.7264, 345.191, 64.2654, 0.74 ) }
    dend_21 { pt3dadd( 13.271, 346.585, 64.8322, 0.88 ) }
    dend_21 { pt3dadd( 13.537, 347.276, 65.1427, 0.74 ) }
    dend_21 { pt3dadd( 14.0714, 348.726, 65.8192, 0.74 ) }
    dend_21 { pt3dadd( 14.3179, 349.452, 66.1729, 0.74 ) }
    dend_21 { pt3dadd( 14.7386, 350.895, 66.8847, 0.96 ) }
    dend_21 { pt3dadd( 14.938, 351.758, 67.2851, 1.03 ) }
    dend_21 { pt3dadd( 15.0654, 352.63, 67.6433, 1.03 ) }
    dend_21 { pt3dadd( 15.1598, 353.505, 67.9545, 1.18 ) }
    dend_21 { pt3dadd( 15.2333, 354.47, 68.1944, 0.59 ) }
    dend_21 { pt3dadd( 15.2773, 355.046, 68.3008, 0.37 ) }
    dend_21 { pt3dadd( 15.3134, 355.512, 68.3442, 0.81 ) }
    dend_21 { pt3dadd( 15.3578, 356.001, 68.3692, 0.81 ) }
    dend_21 { pt3dadd( 15.432, 356.917, 68.3945, 0.81 ) }
    dend_21 { pt3dadd( 15.4594, 357.77, 68.419, 0.81 ) }
    dend_21 { pt3dadd( 15.4245, 358.481, 68.456, 0.88 ) }
    dend_21 { pt3dadd( 15.3349, 359.051, 68.5133, 0.81 ) }
    dend_21 { pt3dadd( 15.0931, 359.971, 68.6536, 0.74 ) }
    dend_21 { pt3dadd( 14.7799, 360.874, 68.8316, 0.74 ) }
    dend_21 { pt3dadd( 14.3813, 361.795, 69.0584, 0.96 ) }
    dend_21 { pt3dadd( 13.9477, 362.711, 69.3168, 0.44 ) }
    dend_21 { pt3dadd( 13.5248, 363.578, 69.5833, 0.44 ) }
    dend_21 { pt3dadd( 13.1368, 364.401, 69.8506, 0.96 ) }
    dend_21 { pt3dadd( 13.0997, 364.485, 69.8797, 0.96 ) }
    dend_21 { pt3dadd( 12.8603, 365.102, 70.077, 0.96 ) }
    dend_21 { pt3dadd( 12.6022, 365.889, 70.3053, 0.96 ) }
    dend_21 { pt3dadd( 12.5464, 366.123, 70.3746, 0.96 ) }
    dend_21 { pt3dadd( 12.3713, 366.835, 70.6219, 0.81 ) }
    dend_21 { pt3dadd( 12.324, 367.069, 70.727, 0.81 ) }
    dend_21 { pt3dadd( 12.129, 368.089, 71.2563, 0.81 ) }
    dend_21 { pt3dadd( 12.1172, 368.16, 71.2956, 0.81 ) }
    dend_21 { pt3dadd( 11.9819, 369.088, 71.8351, 0.96 ) }
    dend_21 { pt3dadd( 11.8594, 370.154, 72.438, 0.81 ) }
    dend_21 { pt3dadd( 11.7474, 371.542, 73.2084, 0.81 ) }
    dend_21 { pt3dadd( 11.7444, 371.616, 73.246, 0.81 ) }
    dend_21 { pt3dadd( 11.7612, 372.583, 73.6617, 0.81 ) }
    dend_21 { pt3dadd( 11.7651, 372.661, 73.6866, 0.81 ) }
    dend_21 { pt3dadd( 11.813, 373.619, 73.7815, 0.59 ) }
    dend_21 { pt3dadd( 11.8216, 373.743, 73.7834, 0.59 ) }
    dend_21 { pt3dadd( 11.8381, 374.431, 73.7333, 0.59 ) }
    dend_21 { pt3dadd( 11.8584, 375.41, 73.6421, 0.59 ) }
    dend_21 { pt3dadd( 11.8732, 376.564, 73.4903, 0.81 ) }
    dend_21 { pt3dadd( 11.8914, 378.233, 73.2209, 0.81 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 97/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 1.83385, 87.0039, -36.8387, 0.52 ) }
    dend_17 { pt3dadd( 2.66774, 88.1999, -39.6649, 0.52 ) }
    dend_17 { pt3dadd( 2.68874, 88.2364, -39.7359, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_17 { pt3dadd( 3.12647, 89.1491, -41.1026, 0.44 ) }
    dend_17 { pt3dadd( 3.15336, 89.2171, -41.1841, 0.44 ) }
    dend_17 { pt3dadd( 3.38955, 89.8143, -41.9242, 0.88 ) }
    dend_17 { pt3dadd( 3.64772, 90.3509, -42.6501, 1.11 ) }
    dend_17 { pt3dadd( 3.67624, 90.4088, -42.7198, 1.11 ) }
    dend_17 { pt3dadd( 4.0821, 91.0495, -43.6074, 1.03 ) }
    dend_17 { pt3dadd( 4.75098, 91.8737, -44.9394, 0.37 ) }
    dend_17 { pt3dadd( 5.60566, 92.6825, -46.6856, 0.44 ) }
    dend_17 { pt3dadd( 6.0805, 93.0168, -47.6466, 0.44 ) }
    dend_17 { pt3dadd( 6.15593, 93.0658, -47.8009, 0.44 ) }
    dend_17 { pt3dadd( 6.51416, 93.378, -48.676, 0.44 ) }
    dend_17 { pt3dadd( 6.54523, 93.4307, -48.7885, 0.44 ) }
    dend_17 { pt3dadd( 6.79616, 94.3512, -50.2868, 0.96 ) }
    dend_17 { pt3dadd( 6.83355, 94.7345, -50.7373, 1.33 ) }
    dend_17 { pt3dadd( 6.88799, 95.6535, -51.6644, 1.18 ) }
    dend_17 { pt3dadd( 6.96436, 97.0559, -52.9512, 0.81 ) }
    dend_17 { pt3dadd( 7.06583, 98.5856, -54.1847, 0.37 ) }
    dend_17 { pt3dadd( 7.07491, 98.6728, -54.2502, 0.37 ) }
    dend_17 { pt3dadd( 7.21181, 99.5468, -54.8177, 0.66 ) }
    dend_17 { pt3dadd( 7.33856, 100.109, -55.1983, 0.88 ) }
    dend_17 { pt3dadd( 7.39609, 100.29, -55.3141, 0.88 ) }
    dend_17 { pt3dadd( 7.69776, 101.111, -55.8345, 0.88 ) }
    dend_17 { pt3dadd( 8.06699, 102.139, -56.4965, 0.74 ) }
    dend_17 { pt3dadd( 8.34217, 103.055, -57.0668, 0.59 ) }
    dend_17 { pt3dadd( 8.66581, 104.364, -57.8466, 1.03 ) }
    dend_17 { pt3dadd( 8.85527, 105.399, -58.3999, 0.29 ) }
    dend_17 { pt3dadd( 9.04604, 106.62, -58.9696, 0.81 ) }
    dend_17 { pt3dadd( 9.12904, 107.261, -59.2181, 0.88 ) }
    dend_17 { pt3dadd( 9.21895, 108.018, -59.438, 0.96 ) }
    dend_17 { pt3dadd( 9.29614, 108.776, -59.6431, 0.66 ) }
    dend_17 { pt3dadd( 9.44632, 110.127, -59.951, 0.22 ) }
    dend_17 { pt3dadd( 9.61425, 111.375, -60.2373, 1.62 ) }
    dend_17 { pt3dadd( 9.76088, 112.23, -60.4212, 1.99 ) }
    dend_17 { pt3dadd( 9.90739, 112.989, -60.574, 1.77 ) }
    dend_17 { pt3dadd( 10.2234, 114.571, -60.8435, 1.25 ) }
    dend_17 { pt3dadd( 10.4687, 115.746, -60.9855, 0.81 ) }
    dend_17 { pt3dadd( 10.6699, 116.645, -61.0495, 0.66 ) }
    dend_17 { pt3dadd( 10.8842, 117.607, -61.0752, 0.81 ) }
    dend_17 { pt3dadd( 11.159, 118.743, -61.06, 0.29 ) }
    dend_17 { pt3dadd( 11.5075, 120.087, -60.9766, 0.29 ) }
    dend_17 { pt3dadd( 11.7109, 120.781, -60.8758, 0.44 ) }
    dend_17 { pt3dadd( 11.7394, 120.872, -60.8624, 0.44 ) }
    dend_17 { pt3dadd( 12.0621, 121.914, -60.7263, 0.59 ) }
    dend_17 { pt3dadd( 12.2799, 122.616, -60.6605, 1.11 ) }
    dend_17 { pt3dadd( 12.5139, 123.395, -60.6202, 1.11 ) }
    dend_17 { pt3dadd( 12.81, 124.395, -60.5894, 0.88 ) }
    dend_17 { pt3dadd( 13.223, 125.844, -60.5664, 0.52 ) }
    dend_17 { pt3dadd( 13.6796, 127.467, -60.5501, 0.52 ) }
    dend_17 { pt3dadd( 14.1009, 128.96, -60.547, 0.66 ) }
    dend_17 { pt3dadd( 14.455, 130.194, -60.5628, 0.29 ) }
    dend_17 { pt3dadd( 14.8091, 131.378, -60.6084, 0.81 ) }
    dend_17 { pt3dadd( 14.8393, 131.471, -60.6161, 0.81 ) }
    dend_17 { pt3dadd( 15.0648, 132.077, -60.7059, 1.03 ) }
    dend_17 { pt3dadd( 15.1562, 132.284, -60.7566, 1.03 ) }
    dend_17 { pt3dadd( 15.48, 132.975, -60.9774, 1.03 ) }
    dend_17 { pt3dadd( 15.8469, 133.736, -61.2563, 0.96 ) }
    dend_17 { pt3dadd( 16.1397, 134.419, -61.5047, 0.66 ) }
    dend_17 { pt3dadd( 16.4505, 135.339, -61.7908, 0.52 ) }
    dend_17 { pt3dadd( 16.5907, 136.002, -61.9432, 0.44 ) }
    dend_17 { pt3dadd( 16.7505, 137.28, -62.1617, 0.44 ) }
    dend_17 { pt3dadd( 16.7544, 137.487, -62.1789, 0.44 ) }
    dend_17 { pt3dadd( 16.7035, 138.281, -62.1734, 0.37 ) }
    dend_17 { pt3dadd( 16.578, 139.282, -62.0806, 0.37 ) }
    dend_17 { pt3dadd( 16.3979, 140.568, -61.8716, 1.03 ) }
    dend_17 { pt3dadd( 16.3875, 140.663, -61.8561, 1.03 ) }
    dend_17 { pt3dadd( 16.3379, 141.466, -61.7376, 1.18 ) }
    dend_17 { pt3dadd( 16.3352, 142.263, -61.6424, 0.59 ) }
    dend_17 { pt3dadd( 16.3965, 143.174, -61.5648, 0.37 ) }
    dend_17 { pt3dadd( 16.5362, 144.159, -61.5232, 0.29 ) }
    dend_17 { pt3dadd( 16.8189, 145.452, -61.4763, 0.22 ) }
    dend_17 { pt3dadd( 16.9683, 146.065, -61.4484, 0.44 ) }
    dend_17 { pt3dadd( 17.0232, 146.268, -61.4395, 0.44 ) }
    dend_17 { pt3dadd( 17.2949, 147.101, -61.3224, 0.44 ) }
    dend_17 { pt3dadd( 17.3302, 147.187, -61.2985, 0.44 ) }
    dend_17 { pt3dadd( 17.8758, 148.374, -60.8576, 0.74 ) }
    dend_17 { pt3dadd( 18.321, 149.306, -60.4572, 1.33 ) }
    dend_17 { pt3dadd( 18.8892, 150.452, -59.9343, 1.4 ) }
    dend_17 { pt3dadd( 19.7853, 152.237, -59.1128, 0.52 ) }
    dend_17 { pt3dadd( 20.3568, 153.397, -58.5905, 0.59 ) }
    dend_17 { pt3dadd( 20.7611, 154.266, -58.2288, 0.74 ) }
    dend_17 { pt3dadd( 21.0231, 154.867, -58.0149, 0.74 ) }
    dend_17 { pt3dadd( 21.0623, 154.968, -57.9864, 0.74 ) }
    dend_17 { pt3dadd( 21.2967, 155.707, -57.8465, 0.44 ) }
    dend_17 { pt3dadd( 21.5312, 156.774, -57.7831, 0.52 ) }
    dend_17 { pt3dadd( 21.6766, 157.48, -57.7778, 0.66 ) }
    dend_17 { pt3dadd( 21.8288, 158.112, -57.7587, 0.44 ) }
    dend_17 { pt3dadd( 22.0595, 158.981, -57.7184, 0.22 ) }
    dend_17 { pt3dadd( 22.3869, 160.195, -57.6402, 0.66 ) }
    dend_17 { pt3dadd( 22.5345, 160.8, -57.6024, 0.88 ) }
    dend_17 { pt3dadd( 22.723, 161.655, -57.5501, 0.29 ) }
    dend_17 { pt3dadd( 22.9265, 162.693, -57.4812, 0.22 ) }
    dend_17 { pt3dadd( 23.0467, 163.39, -57.4351, 0.37 ) }
    dend_17 { pt3dadd( 23.1409, 164.113, -57.4138, 0.52 ) }
    dend_17 { pt3dadd( 23.2265, 165.222, -57.4551, 0.29 ) }
    dend_17 { pt3dadd( 23.2684, 165.803, -57.4946, 0.59 ) }
    dend_17 { pt3dadd( 23.2954, 166.024, -57.5117, 0.59 ) }
    dend_17 { pt3dadd( 23.4228, 166.61, -57.5726, 0.59 ) }
    dend_17 { pt3dadd( 23.4515, 166.7, -57.5818, 0.59 ) }
    dend_17 { pt3dadd( 23.7705, 167.527, -57.6544, 0.59 ) }
    dend_17 { pt3dadd( 24.3087, 168.729, -57.6966, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_17 { pt3dadd( 24.7567, 169.715, -57.705, 0.59 ) }
    dend_17 { pt3dadd( 25.1222, 170.537, -57.6984, 1.03 ) }
    dend_17 { pt3dadd( 25.4701, 171.364, -57.6754, 1.03 ) }
    dend_17 { pt3dadd( 25.7862, 172.205, -57.6347, 0.81 ) }
    dend_17 { pt3dadd( 26.0778, 173.105, -57.5743, 0.59 ) }
    dend_17 { pt3dadd( 26.3257, 174.076, -57.5014, 0.37 ) }
    dend_17 { pt3dadd( 26.5959, 175.473, -57.4032, 0.37 ) }
    dend_17 { pt3dadd( 26.7916, 176.628, -57.3229, 0.37 ) }
    dend_17 { pt3dadd( 26.9348, 177.563, -57.2653, 0.44 ) }
    dend_17 { pt3dadd( 27.0741, 178.548, -57.2189, 0.44 ) }
    dend_17 { pt3dadd( 27.2268, 179.472, -57.1871, 0.29 ) }
    dend_17 { pt3dadd( 27.4622, 180.656, -57.1402, 0.29 ) }
    dend_17 { pt3dadd( 27.6941, 181.558, -57.111, 0.81 ) }
    dend_17 { pt3dadd( 27.9845, 182.406, -57.0681, 1.11 ) }
    dend_17 { pt3dadd( 28.3294, 183.246, -57.0131, 0.81 ) }
    dend_17 { pt3dadd( 28.8792, 184.467, -56.913, 0.52 ) }
    dend_17 { pt3dadd( 28.9207, 184.554, -56.9047, 0.52 ) }
    dend_17 { pt3dadd( 29.4195, 185.639, -56.7703, 0.52 ) }
    dend_17 { pt3dadd( 29.9026, 186.836, -56.5946, 0.29 ) }
    dend_17 { pt3dadd( 30.1964, 187.673, -56.4612, 0.59 ) }
    dend_17 { pt3dadd( 30.4176, 188.534, -56.3196, 0.81 ) }
    dend_17 { pt3dadd( 30.4454, 188.721, -56.2892, 0.81 ) }
    dend_17 { pt3dadd( 30.5512, 189.554, -56.1697, 0.81 ) }
    dend_17 { pt3dadd( 30.6568, 190.356, -56.0864, 0.66 ) }
    dend_17 { pt3dadd( 30.672, 190.465, -56.0807, 0.66 ) }
    dend_17 { pt3dadd( 30.8325, 191.456, -56.0378, 0.44 ) }
    dend_17 { pt3dadd( 31.0315, 192.641, -55.991, 0.37 ) }
    dend_17 { pt3dadd( 31.2235, 193.741, -55.9537, 0.37 ) }
    dend_17 { pt3dadd( 31.4311, 194.932, -55.9161, 0.52 ) }
    dend_17 { pt3dadd( 31.5871, 195.899, -55.8824, 0.37 ) }
    dend_17 { pt3dadd( 31.6866, 196.678, -55.8464, 0.37 ) }
    dend_17 { pt3dadd( 31.7755, 197.498, -55.8069, 0.81 ) }
    dend_17 { pt3dadd( 31.837, 198.269, -55.7662, 0.88 ) }
    dend_17 { pt3dadd( 31.8671, 198.946, -55.7186, 0.59 ) }
    dend_17 { pt3dadd( 31.8803, 199.351, -55.6876, 0.44 ) }
    dend_17 { pt3dadd( 31.9675, 200.562, -55.6191, 0.37 ) }
    dend_17 { pt3dadd( 32.1475, 201.982, -55.5777, 0.37 ) }
    dend_17 { pt3dadd( 32.2786, 202.674, -55.6063, 0.66 ) }
    dend_17 { pt3dadd( 32.3041, 202.78, -55.6166, 0.66 ) }
    dend_17 { pt3dadd( 32.6337, 203.793, -55.7844, 0.74 ) }
    dend_17 { pt3dadd( 32.8172, 204.302, -55.8857, 0.88 ) }
    dend_17 { pt3dadd( 33.2874, 205.436, -56.174, 0.59 ) }
    dend_17 { pt3dadd( 33.7849, 206.546, -56.5115, 0.29 ) }
    dend_17 { pt3dadd( 33.8307, 206.64, -56.5441, 0.29 ) }
    dend_17 { pt3dadd( 34.5809, 208.094, -57.0985, 1.18 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 45/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 1.83385, 87.0039, -36.8387, 0.59 ) }
    dend_16 { pt3dadd( 1.90064, 87.684, -36.7011, 0.59 ) }
    dend_16 { pt3dadd( 1.94127, 88.1723, -36.5907, 0.29 ) }
    dend_16 { pt3dadd( 1.96932, 88.58, -36.4988, 0.29 ) }
    dend_16 { pt3dadd( 1.99866, 89.1169, -36.3807, 0.29 ) }
    dend_16 { pt3dadd( 2.04257, 90.3501, -36.1138, 0.29 ) }
    dend_16 { pt3dadd( 2.05902, 91.1488, -35.9471, 0.74 ) }
    dend_16 { pt3dadd( 2.04814, 91.6713, -35.847, 0.74 ) }
    dend_16 { pt3dadd( 2.02284, 92.2115, -35.7577, 0.52 ) }
    dend_16 { pt3dadd( 2.00197, 92.5393, -35.7154, 0.44 ) }
    dend_16 { pt3dadd( 1.97226, 92.9463, -35.6738, 0.29 ) }
    dend_16 { pt3dadd( 1.93574, 93.4272, -35.6449, 0.29 ) }
    dend_16 { pt3dadd( 1.89673, 94.0646, -35.6257, 0.66 ) }
    dend_16 { pt3dadd( 1.88162, 94.4788, -35.6055, 0.96 ) }
    dend_16 { pt3dadd( 1.88706, 94.862, -35.5755, 0.66 ) }
    dend_16 { pt3dadd( 1.89497, 95.0029, -35.5612, 0.66 ) }
    dend_16 { pt3dadd( 1.93273, 95.4286, -35.5097, 0.44 ) }
    dend_16 { pt3dadd( 1.96487, 95.8654, -35.4479, 0.29 ) }
    dend_16 { pt3dadd( 1.98723, 96.2962, -35.3811, 0.22 ) }
    dend_16 { pt3dadd( 1.97808, 96.9968, -35.2236, 0.29 ) }
    dend_16 { pt3dadd( 1.97294, 97.0534, -35.2088, 0.29 ) }
    dend_16 { pt3dadd( 1.89833, 97.5848, -35.0585, 0.37 ) }
    dend_16 { pt3dadd( 1.7807, 98.1611, -34.8951, 0.66 ) }
    dend_16 { pt3dadd( 1.67869, 98.5604, -34.7827, 0.96 ) }
    dend_16 { pt3dadd( 1.4429, 99.4701, -34.5395, 0.81 ) }
    dend_16 { pt3dadd( 1.31097, 100.049, -34.3941, 0.59 ) }
    dend_16 { pt3dadd( 1.30093, 100.112, -34.3802, 0.59 ) }
    dend_16 { pt3dadd( 1.24169, 100.796, -34.2547, 0.59 ) }
    dend_16 { pt3dadd( 1.23646, 101.228, -34.1932, 0.66 ) }
    dend_16 { pt3dadd( 1.29258, 102.145, -34.0961, 0.22 ) }
    dend_16 { pt3dadd( 1.36125, 102.603, -34.0711, 0.22 ) }
    dend_16 { pt3dadd( 1.48233, 103.171, -34.0346, 0.74 ) }
    dend_16 { pt3dadd( 1.59419, 103.651, -34.0013, 0.81 ) }
    dend_16 { pt3dadd( 1.6098, 103.716, -33.9965, 0.81 ) }
    dend_16 { pt3dadd( 1.71513, 104.243, -33.9576, 0.88 ) }
    dend_16 { pt3dadd( 1.78502, 104.667, -33.9217, 0.81 ) }
    dend_16 { pt3dadd( 1.85915, 105.183, -33.882, 0.29 ) }
    dend_16 { pt3dadd( 1.92949, 106.069, -33.8213, 0.29 ) }
    dend_16 { pt3dadd( 1.97531, 107.334, -33.7449, 0.74 ) }
    dend_16 { pt3dadd( 1.96993, 107.946, -33.7135, 1.11 ) }
    dend_16 { pt3dadd( 1.93681, 108.485, -33.6931, 0.88 ) }
    dend_16 { pt3dadd( 1.83903, 109.369, -33.6602, 0.22 ) }
    dend_16 { pt3dadd( 1.70393, 110.291, -33.6275, 0.22 ) }
    dend_16 { pt3dadd( 1.68935, 110.382, -33.6271, 0.22 ) }
    dend_16 { pt3dadd( 1.65389, 110.615, -33.6445, 0.22 ) }
    dend_16 { pt3dadd( 1.58496, 111.147, -33.7092, 0.74 ) }
    dend_16 { pt3dadd( 1.54132, 111.481, -33.7585, 1.11 ) }
    dend_16 { pt3dadd( 1.45523, 112.118, -33.8898, 1.25 ) }
    dend_16 { pt3dadd( 1.36565, 112.845, -34.057, 0.74 ) }
    dend_16 { pt3dadd( 1.23903, 113.826, -34.3125, 0.22 ) }
    dend_16 { pt3dadd( 1.15821, 114.415, -34.4724, 0.37 ) }
    dend_16 { pt3dadd( 1.04283, 115.201, -34.6856, 0.37 ) }
    dend_16 { pt3dadd( 0.869113, 116.32, -34.9706, 0.52 ) }
    dend_16 { pt3dadd( 0.797594, 116.775, -35.0742, 0.88 ) }
    dend_16 { pt3dadd( 0.64528, 117.732, -35.2495, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_16 { pt3dadd( 0.558119, 118.335, -35.3388, 0.66 ) }
    dend_16 { pt3dadd( 0.471062, 119.011, -35.4243, 0.29 ) }
    dend_16 { pt3dadd( 0.387841, 119.763, -35.4969, 0.22 ) }
    dend_16 { pt3dadd( 0.320988, 120.401, -35.5259, 0.22 ) }
    dend_16 { pt3dadd( 0.260225, 121.01, -35.5433, 0.44 ) }
    dend_16 { pt3dadd( 0.227159, 121.417, -35.544, 0.59 ) }
    dend_16 { pt3dadd( 0.198671, 122.003, -35.5496, 0.37 ) }
    dend_16 { pt3dadd( 0.190328, 122.579, -35.5568, 0.29 ) }
    dend_16 { pt3dadd( 0.209657, 123.259, -35.5656, 0.44 ) }
    dend_16 { pt3dadd( 0.267913, 123.902, -35.5934, 0.29 ) }
    dend_16 { pt3dadd( 0.400711, 124.615, -35.6835, 0.66 ) }
    dend_16 { pt3dadd( 0.487004, 125.052, -35.7628, 1.03 ) }
    dend_16 { pt3dadd( 0.543923, 125.328, -35.8241, 1.25 ) }
    dend_16 { pt3dadd( 0.640463, 125.876, -35.9604, 0.44 ) }
    dend_16 { pt3dadd( 0.744334, 126.714, -36.1845, 0.52 ) }
    dend_16 { pt3dadd( 0.806884, 127.696, -36.4608, 0.29 ) }
    dend_16 { pt3dadd( 0.825865, 128.863, -36.7861, 0.29 ) }
    dend_16 { pt3dadd( 0.826693, 128.948, -36.8075, 0.29 ) }
    dend_16 { pt3dadd( 0.831023, 129.477, -36.9391, 0.29 ) }
    dend_16 { pt3dadd( 0.874205, 130.213, -37.1018, 0.81 ) }
    dend_16 { pt3dadd( 0.882527, 130.28, -37.1118, 0.81 ) }
    dend_16 { pt3dadd( 0.979618, 130.708, -37.1696, 0.88 ) }
    dend_16 { pt3dadd( 1.18777, 131.342, -37.3139, 0.88 ) }
    dend_16 { pt3dadd( 1.36546, 131.894, -37.4619, 0.44 ) }
    dend_16 { pt3dadd( 1.5924, 132.631, -37.6803, 0.22 ) }
    dend_16 { pt3dadd( 1.77873, 133.35, -37.9511, 0.22 ) }
    dend_16 { pt3dadd( 1.9663, 134.255, -38.3391, 0.81 ) }
    dend_16 { pt3dadd( 2.06731, 134.983, -38.6767, 0.88 ) }
    dend_16 { pt3dadd( 2.09895, 135.491, -38.9112, 0.96 ) }
    dend_16 { pt3dadd( 2.1051, 135.923, -39.1027, 0.96 ) }
    dend_16 { pt3dadd( 2.06389, 136.99, -39.5832, 0.44 ) }
    dend_16 { pt3dadd( 2.06231, 137.049, -39.6083, 0.44 ) }
    dend_16 { pt3dadd( 2.06365, 137.634, -39.7937, 0.44 ) }
    dend_16 { pt3dadd( 2.08363, 138.452, -40.0053, 0.66 ) }
    dend_16 { pt3dadd( 2.08863, 138.589, -40.0379, 0.66 ) }
    dend_16 { pt3dadd( 2.10286, 138.968, -40.1513, 0.88 ) }
    dend_16 { pt3dadd( 2.12869, 139.617, -40.3555, 0.52 ) }
    dend_16 { pt3dadd( 2.16467, 140.199, -40.5719, 0.37 ) }
    dend_16 { pt3dadd( 2.23671, 141.516, -41.1446, 1.11 ) }
    dend_16 { pt3dadd( 2.24185, 141.828, -41.2945, 1.25 ) }
    dend_16 { pt3dadd( 2.20059, 143.064, -41.8993, 0.22 ) }
    dend_16 { pt3dadd( 2.19381, 143.122, -41.9289, 0.22 ) }
    dend_16 { pt3dadd( 2.09395, 143.541, -42.1704, 0.22 ) }
    dend_16 { pt3dadd( 1.92166, 144.046, -42.4724, 0.22 ) }
    dend_16 { pt3dadd( 1.7768, 144.371, -42.6411, 0.74 ) }
    dend_16 { pt3dadd( 1.62725, 144.675, -42.7918, 1.03 ) }
    dend_16 { pt3dadd( 1.38625, 145.137, -42.9889, 0.81 ) }
    dend_16 { pt3dadd( 0.987146, 145.94, -43.3356, 0.52 ) }
    dend_16 { pt3dadd( 0.852866, 146.222, -43.4907, 0.37 ) }
    dend_16 { pt3dadd( 0.626482, 146.77, -43.8427, 0.29 ) }
    dend_16 { pt3dadd( 0.439872, 147.334, -44.2176, 0.59 ) }
    dend_16 { pt3dadd( 0.362824, 147.683, -44.441, 0.96 ) }
    dend_16 { pt3dadd( 0.319782, 148.031, -44.6499, 1.11 ) }
    dend_16 { pt3dadd( 0.243974, 149.106, -45.1956, 0.37 ) }
    dend_16 { pt3dadd( 0.240829, 149.166, -45.2236, 0.37 ) }
    dend_16 { pt3dadd( 0.191277, 149.815, -45.4791, 0.29 ) }
    dend_16 { pt3dadd( 0.109438, 150.481, -45.6441, 0.29 ) }
    dend_16 { pt3dadd( 0.0953055, 150.544, -45.6524, 0.29 ) }
    dend_16 { pt3dadd( -0.116751, 151.191, -45.667, 0.37 ) }
    dend_16 { pt3dadd( -0.234409, 151.515, -45.6427, 0.59 ) }
    dend_16 { pt3dadd( -0.480527, 152.172, -45.5864, 0.74 ) }
    dend_16 { pt3dadd( -0.693781, 152.708, -45.5355, 0.52 ) }
    dend_16 { pt3dadd( -1.00816, 153.525, -45.4549, 0.22 ) }
    dend_16 { pt3dadd( -1.19758, 154.103, -45.4013, 0.22 ) }
    dend_16 { pt3dadd( -1.32709, 154.57, -45.3851, 0.22 ) }
    dend_16 { pt3dadd( -1.49269, 155.259, -45.4012, 0.74 ) }
    dend_16 { pt3dadd( -1.6144, 155.858, -45.4471, 0.88 ) }
    dend_16 { pt3dadd( -1.71429, 156.402, -45.5136, 0.74 ) }
    dend_16 { pt3dadd( -1.82723, 157.076, -45.6117, 0.66 ) }
    dend_16 { pt3dadd( -2.03557, 158.2, -45.7942, 0.29 ) }
    dend_16 { pt3dadd( -2.20072, 158.953, -45.9249, 0.29 ) }
    dend_16 { pt3dadd( -2.28884, 159.348, -45.9978, 0.44 ) }
    dend_16 { pt3dadd( -2.31822, 159.484, -46.0224, 0.44 ) }
    dend_16 { pt3dadd( -2.39464, 159.88, -46.0822, 0.44 ) }
    dend_16 { pt3dadd( -2.45275, 160.261, -46.1194, 0.29 ) }
    dend_16 { pt3dadd( -2.48153, 160.648, -46.1249, 0.74 ) }
    dend_16 { pt3dadd( -2.47173, 161.199, -46.1209, 0.96 ) }
    dend_16 { pt3dadd( -2.44932, 161.482, -46.1171, 0.88 ) }
    dend_16 { pt3dadd( -2.37097, 162.164, -46.1065, 0.29 ) }
    dend_16 { pt3dadd( -2.3044, 162.631, -46.0983, 0.44 ) }
    dend_16 { pt3dadd( -2.21038, 163.229, -46.0862, 0.29 ) }
    dend_16 { pt3dadd( -2.09977, 164.101, -46.0656, 0.37 ) }
    dend_16 { pt3dadd( -2.05402, 164.471, -46.0554, 0.59 ) }
    dend_16 { pt3dadd( -1.97474, 165.014, -46.0404, 0.74 ) }
    dend_16 { pt3dadd( -1.92659, 165.354, -46.0311, 0.52 ) }
    dend_16 { pt3dadd( -1.86753, 165.776, -46.0103, 0.37 ) }
    dend_16 { pt3dadd( -1.73881, 166.773, -45.9194, 0.52 ) }
    dend_16 { pt3dadd( -1.63663, 167.591, -45.8185, 0.44 ) }
    dend_16 { pt3dadd( -1.48143, 168.791, -45.6465, 0.88 ) }
    dend_16 { pt3dadd( -1.41247, 169.27, -45.5715, 1.25 ) }
    dend_16 { pt3dadd( -1.34544, 169.752, -45.4937, 1.03 ) }
    dend_16 { pt3dadd( -1.24164, 170.509, -45.3666, 0.29 ) }
    dend_16 { pt3dadd( -1.16257, 171.166, -45.2556, 0.44 ) }
    dend_16 { pt3dadd( -1.12893, 171.91, -45.1553, 0.37 ) }
    dend_16 { pt3dadd( -1.1406, 172.626, -45.0892, 0.74 ) }
    dend_16 { pt3dadd( -1.17662, 173.372, -45.0589, 0.74 ) }
    dend_16 { pt3dadd( -1.18298, 173.438, -45.06, 0.74 ) }
    dend_16 { pt3dadd( -1.28862, 174.175, -45.0995, 0.74 ) }
    dend_16 { pt3dadd( -1.43439, 174.985, -45.1476, 0.22 ) }
    dend_16 { pt3dadd( -1.51196, 175.404, -45.1721, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_16 { pt3dadd( -1.59686, 175.874, -45.1953, 0.96 ) }
    dend_16 { pt3dadd( -1.71816, 176.608, -45.2224, 0.22 ) }
    dend_16 { pt3dadd( -1.80098, 177.208, -45.2341, 0.66 ) }
    dend_16 { pt3dadd( -1.85478, 177.755, -45.2318, 1.03 ) }
    dend_16 { pt3dadd( -1.90281, 178.516, -45.1742, 0.81 ) }
    dend_16 { pt3dadd( -1.954, 179.339, -45.0791, 0.52 ) }
    dend_16 { pt3dadd( -1.99032, 179.806, -45.0213, 0.44 ) }
    dend_16 { pt3dadd( -2.09001, 180.771, -44.8999, 0.37 ) }
    dend_16 { pt3dadd( -2.20461, 181.62, -44.7941, 0.88 ) }
    dend_16 { pt3dadd( -2.34085, 182.55, -44.6817, 1.25 ) }
    dend_16 { pt3dadd( -2.41702, 183.094, -44.6198, 0.88 ) }
    dend_16 { pt3dadd( -2.50085, 183.832, -44.5468, 0.44 ) }
    dend_16 { pt3dadd( -2.5863, 184.636, -44.4847, 0.59 ) }
    dend_16 { pt3dadd( -2.63097, 185.114, -44.4606, 0.81 ) }
    dend_16 { pt3dadd( -2.6692, 185.646, -44.4512, 0.59 ) }
    dend_16 { pt3dadd( -2.69554, 186.32, -44.4605, 0.37 ) }
    dend_16 { pt3dadd( -2.6947, 187.417, -44.4485, 0.52 ) }
    dend_16 { pt3dadd( -2.68676, 188.119, -44.4183, 0.37 ) }
    dend_16 { pt3dadd( -2.69079, 188.442, -44.4034, 0.74 ) }
    dend_16 { pt3dadd( -2.72784, 188.921, -44.3805, 0.88 ) }
    dend_16 { pt3dadd( -2.77469, 189.18, -44.3788, 0.88 ) }
    dend_16 { pt3dadd( -2.88711, 189.646, -44.4368, 1.11 ) }
    dend_16 { pt3dadd( -2.98809, 190.121, -44.5449, 1.03 ) }
    dend_16 { pt3dadd( -3.06809, 190.573, -44.6731, 0.37 ) }
    dend_16 { pt3dadd( -3.14494, 191.116, -44.8429, 0.37 ) }
    dend_16 { pt3dadd( -3.21202, 191.939, -45.1304, 0.66 ) }
    dend_16 { pt3dadd( -3.26237, 193.203, -45.5739, 0.29 ) }
    dend_16 { pt3dadd( -3.27047, 194.042, -45.8574, 0.52 ) }
    dend_16 { pt3dadd( -3.26978, 194.097, -45.8751, 0.52 ) }
    dend_16 { pt3dadd( -3.25571, 194.565, -46.0056, 0.66 ) }
    dend_16 { pt3dadd( -3.22562, 195.384, -46.1812, 0.37 ) }
    dend_16 { pt3dadd( -3.20244, 196.311, -46.3074, 0.66 ) }
    dend_16 { pt3dadd( -3.20453, 196.989, -46.3553, 0.59 ) }
    dend_16 { pt3dadd( -3.2205, 197.476, -46.3648, 0.74 ) }
    dend_16 { pt3dadd( -3.24943, 198.12, -46.3456, 0.37 ) }
    dend_16 { pt3dadd( -3.29361, 198.989, -46.2116, 0.59 ) }
    dend_16 { pt3dadd( -3.30046, 199.117, -46.1782, 0.59 ) }
    dend_16 { pt3dadd( -3.32418, 199.618, -46.0253, 0.37 ) }
    dend_16 { pt3dadd( -3.36406, 200.61, -45.6997, 0.29 ) }
    dend_16 { pt3dadd( -3.39723, 201.464, -45.4319, 0.52 ) }
    dend_16 { pt3dadd( -3.45127, 202.831, -45.0171, 0.22 ) }
    dend_16 { pt3dadd( -3.46492, 203.678, -44.7844, 0.52 ) }
    dend_16 { pt3dadd( -3.47693, 204.128, -44.6822, 0.81 ) }
    dend_16 { pt3dadd( -3.50913, 204.651, -44.5964, 0.52 ) }
    dend_16 { pt3dadd( -3.59331, 205.581, -44.5297, 0.74 ) }
    dend_16 { pt3dadd( -3.60302, 205.646, -44.5307, 0.74 ) }
    dend_16 { pt3dadd( -3.80383, 206.493, -44.6205, 1.33 ) }
    dend_16 { pt3dadd( -4.00094, 207.144, -44.6857, 0.88 ) }
    dend_16 { pt3dadd( -4.2681, 207.872, -44.7468, 0.66 ) }
    dend_16 { pt3dadd( -4.57098, 208.564, -44.7833, 0.52 ) }
    dend_16 { pt3dadd( -4.95821, 209.362, -44.8158, 0.52 ) }
    dend_16 { pt3dadd( -5.29276, 210.008, -44.8438, 0.52 ) }
    dend_16 { pt3dadd( -5.70301, 210.72, -44.8786, 0.29 ) }
    dend_16 { pt3dadd( -5.97985, 211.219, -44.9029, 0.52 ) }
    dend_16 { pt3dadd( -6.24507, 211.685, -44.921, 0.66 ) }
    // Section: dend_11, id: dend_11, parent: dend_3 (entry count 55/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 24.8972, 61.9671, 14.06, 0.59 ) }
    dend_11 { pt3dadd( 28.5385, 61.5892, 12.6923, 0.59 ) }
    dend_11 { pt3dadd( 30.3794, 61.4778, 12.1257, 0.74 ) }
    dend_11 { pt3dadd( 30.4562, 61.4753, 12.1054, 0.74 ) }
    dend_11 { pt3dadd( 31.2306, 61.485, 11.9357, 0.74 ) }
    dend_11 { pt3dadd( 32.4777, 61.5224, 11.7474, 0.96 ) }
    dend_11 { pt3dadd( 32.5568, 61.5224, 11.7396, 0.96 ) }
    dend_11 { pt3dadd( 33.3662, 61.5365, 11.8623, 0.96 ) }
    dend_11 { pt3dadd( 33.4446, 61.5352, 11.8753, 0.96 ) }
    dend_11 { pt3dadd( 34.9818, 61.5045, 12.0736, 0.52 ) }
    dend_11 { pt3dadd( 36.001, 61.4836, 12.1666, 0.52 ) }
    dend_11 { pt3dadd( 37.3834, 61.4613, 12.2734, 0.81 ) }
    dend_11 { pt3dadd( 38.1368, 61.463, 12.3363, 0.88 ) }
    dend_11 { pt3dadd( 39.4596, 61.4387, 12.4237, 0.52 ) }
    dend_11 { pt3dadd( 39.8537, 61.4386, 12.4574, 0.74 ) }
    dend_11 { pt3dadd( 40.0127, 61.438, 12.4576, 0.74 ) }
    dend_11 { pt3dadd( 40.6189, 61.4524, 12.3963, 0.29 ) }
    dend_11 { pt3dadd( 41.3921, 61.5048, 12.2757, 0.59 ) }
    dend_11 { pt3dadd( 42.8104, 61.5925, 11.9032, 0.74 ) }
    dend_11 { pt3dadd( 43.6148, 61.6479, 11.6609, 0.59 ) }
    dend_11 { pt3dadd( 45.5666, 61.7798, 10.9956, 1.03 ) }
    dend_11 { pt3dadd( 45.6875, 61.7907, 10.9531, 1.03 ) }
    dend_11 { pt3dadd( 46.0793, 61.8344, 10.8061, 0.74 ) }
    dend_11 { pt3dadd( 47.6879, 62.0997, 10.1729, 0.44 ) }
    dend_11 { pt3dadd( 48.2883, 62.2508, 9.94635, 0.59 ) }
    dend_11 { pt3dadd( 49.3892, 62.5533, 9.5827, 0.66 ) }
    dend_11 { pt3dadd( 50.0414, 62.765, 9.45288, 0.74 ) }
    dend_11 { pt3dadd( 50.1147, 62.7879, 9.44108, 0.74 ) }
    dend_11 { pt3dadd( 50.3851, 62.8738, 9.4107, 0.74 ) }
    dend_11 { pt3dadd( 50.4485, 62.8968, 9.40934, 0.74 ) }
    dend_11 { pt3dadd( 51.8978, 63.4055, 9.2234, 0.29 ) }
    dend_11 { pt3dadd( 52.3374, 63.5787, 9.07738, 0.66 ) }
    dend_11 { pt3dadd( 52.4736, 63.6353, 9.00181, 0.66 ) }
    dend_11 { pt3dadd( 52.8155, 63.7493, 8.78469, 0.88 ) }
    dend_11 { pt3dadd( 52.8836, 63.7659, 8.73013, 0.88 ) }
    dend_11 { pt3dadd( 54.1987, 64.0662, 7.54313, 0.29 ) }
    dend_11 { pt3dadd( 55.312, 64.3085, 6.43599, 0.29 ) }
    dend_11 { pt3dadd( 56.6307, 64.5748, 5.05209, 1.11 ) }
    dend_11 { pt3dadd( 57.866, 64.8093, 3.70489, 0.96 ) }
    dend_11 { pt3dadd( 60.152, 65.2668, 1.10215, 0.66 ) }
    dend_11 { pt3dadd( 60.5817, 65.361, 0.591131, 0.66 ) }
    dend_11 { pt3dadd( 60.7154, 65.3967, 0.421228, 0.66 ) }
    dend_11 { pt3dadd( 61.3819, 65.6194, -0.440278, 0.59 ) }
    dend_11 { pt3dadd( 61.4893, 65.6727, -0.578683, 0.59 ) }
    dend_11 { pt3dadd( 62.273, 66.3109, -1.57294, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_11 { pt3dadd( 62.3075, 66.3459, -1.60488, 0.52 ) }
    dend_11 { pt3dadd( 62.7181, 66.7352, -1.91728, 0.96 ) }
    dend_11 { pt3dadd( 63.2211, 67.2082, -2.23534, 1.11 ) }
    dend_11 { pt3dadd( 64.2782, 68.2258, -2.75799, 0.29 ) }
    dend_11 { pt3dadd( 64.3304, 68.268, -2.7783, 0.29 ) }
    dend_11 { pt3dadd( 64.7747, 68.5136, -2.89796, 0.52 ) }
    dend_11 { pt3dadd( 64.836, 68.5392, -2.91321, 0.52 ) }
    dend_11 { pt3dadd( 65.0717, 68.6179, -2.96765, 0.74 ) }
    dend_11 { pt3dadd( 65.143, 68.6407, -2.98847, 0.74 ) }
    dend_11 { pt3dadd( 66.2531, 69.1073, -3.34409, 0.74 ) }
    dend_11 { pt3dadd( 67.1751, 69.6084, -3.70182, 0.59 ) }
    dend_11 { pt3dadd( 67.2361, 69.6479, -3.7295, 0.59 ) }
    dend_11 { pt3dadd( 67.7566, 70.0385, -3.96458, 0.29 ) }
    dend_11 { pt3dadd( 68.5372, 70.7311, -4.3229, 0.29 ) }
    dend_11 { pt3dadd( 69.1284, 71.3284, -4.6154, 0.88 ) }
    dend_11 { pt3dadd( 69.4169, 71.6986, -4.76418, 1.11 ) }
    dend_11 { pt3dadd( 69.4549, 71.7516, -4.78384, 1.11 ) }
    dend_11 { pt3dadd( 69.856, 72.2792, -4.96153, 0.88 ) }
    dend_11 { pt3dadd( 70.0423, 72.4765, -5.02882, 0.52 ) }
    dend_11 { pt3dadd( 70.8625, 73.1989, -5.22633, 0.37 ) }
    dend_11 { pt3dadd( 71.6367, 73.7758, -5.3838, 0.22 ) }
    dend_11 { pt3dadd( 71.7014, 73.8204, -5.39533, 0.22 ) }
    dend_11 { pt3dadd( 72.1123, 74.1152, -5.46932, 0.74 ) }
    dend_11 { pt3dadd( 73.0392, 74.7969, -5.70956, 0.88 ) }
    dend_11 { pt3dadd( 73.4945, 75.1333, -5.82395, 0.22 ) }
    dend_11 { pt3dadd( 73.949, 75.4248, -5.92691, 0.29 ) }
    dend_11 { pt3dadd( 74.0167, 75.4604, -5.94062, 0.29 ) }
    dend_11 { pt3dadd( 74.603, 75.6781, -6.10814, 0.29 ) }
    dend_11 { pt3dadd( 75.8657, 75.9521, -6.56343, 0.88 ) }
    dend_11 { pt3dadd( 76.3427, 76.0184, -6.73662, 1.18 ) }
    dend_11 { pt3dadd( 77.8224, 76.1436, -7.28147, 0.29 ) }
    dend_11 { pt3dadd( 78.4853, 76.1821, -7.52327, 0.88 ) }
    dend_11 { pt3dadd( 80.7244, 76.3246, -8.31964, 1.33 ) }
    dend_11 { pt3dadd( 82.5454, 76.4346, -8.93383, 0.52 ) }
    dend_11 { pt3dadd( 83.1607, 76.4832, -9.13173, 1.25 ) }
    dend_11 { pt3dadd( 83.2249, 76.492, -9.15279, 1.25 ) }
    dend_11 { pt3dadd( 84.6738, 76.824, -9.64355, 0.29 ) }
    dend_11 { pt3dadd( 85.3626, 77.0455, -9.86897, 0.29 ) }
    dend_11 { pt3dadd( 85.9349, 77.3351, -9.99854, 0.59 ) }
    dend_11 { pt3dadd( 86.2402, 77.5187, -10.0634, 0.96 ) }
    dend_11 { pt3dadd( 86.8663, 77.8902, -10.1985, 0.96 ) }
    dend_11 { pt3dadd( 87.8785, 78.4329, -10.3832, 0.59 ) }
    dend_11 { pt3dadd( 87.9479, 78.4666, -10.3917, 0.59 ) }
    dend_11 { pt3dadd( 88.4899, 78.7158, -10.4451, 0.29 ) }
    dend_11 { pt3dadd( 89.2469, 79.089, -10.5048, 0.44 ) }
    dend_11 { pt3dadd( 89.6991, 79.328, -10.5295, 0.66 ) }
    dend_11 { pt3dadd( 90.3707, 79.7266, -10.5803, 0.29 ) }
    dend_11 { pt3dadd( 90.7925, 80.0029, -10.5953, 0.22 ) }
    dend_11 { pt3dadd( 91.3506, 80.3744, -10.6238, 0.66 ) }
    dend_11 { pt3dadd( 91.6483, 80.5723, -10.6379, 0.74 ) }
    dend_11 { pt3dadd( 91.9542, 80.7875, -10.6508, 0.59 ) }
    dend_11 { pt3dadd( 93.0236, 81.4971, -10.6675, 0.22 ) }
    dend_11 { pt3dadd( 93.5019, 81.7319, -10.6508, 0.44 ) }
    dend_11 { pt3dadd( 93.578, 81.7538, -10.6439, 0.44 ) }
    dend_11 { pt3dadd( 94.0014, 81.8216, -10.5784, 0.59 ) }
    dend_11 { pt3dadd( 94.0683, 81.8286, -10.5679, 0.59 ) }
    dend_11 { pt3dadd( 94.7131, 81.8727, -10.456, 0.59 ) }
    dend_11 { pt3dadd( 95.7398, 81.94, -10.2496, 0.22 ) }
    dend_11 { pt3dadd( 96.3042, 82.0154, -10.1533, 0.59 ) }
    dend_11 { pt3dadd( 96.6779, 82.0852, -10.0918, 0.66 ) }
    dend_11 { pt3dadd( 97.4155, 82.2591, -10.0292, 0.66 ) }
    dend_11 { pt3dadd( 97.4826, 82.2792, -10.0261, 0.66 ) }
    dend_11 { pt3dadd( 98.3894, 82.6125, -10.0335, 0.22 ) }
    dend_11 { pt3dadd( 99.0316, 82.8912, -10.0473, 0.66 ) }
    dend_11 { pt3dadd( 99.3193, 83.0217, -10.0585, 0.96 ) }
    dend_11 { pt3dadd( 100.823, 83.7304, -10.119, 0.22 ) }
    dend_11 { pt3dadd( 101.362, 83.9726, -10.1707, 0.22 ) }
    dend_11 { pt3dadd( 102.231, 84.3067, -10.3664, 0.59 ) }
    dend_11 { pt3dadd( 102.685, 84.4524, -10.5303, 0.96 ) }
    dend_11 { pt3dadd( 102.911, 84.5128, -10.6249, 1.18 ) }
    dend_11 { pt3dadd( 102.972, 84.5269, -10.6514, 1.18 ) }
    dend_11 { pt3dadd( 104.547, 84.8119, -11.2506, 0.44 ) }
    dend_11 { pt3dadd( 105.827, 84.9768, -11.6597, 0.37 ) }
    dend_11 { pt3dadd( 106.78, 85.0698, -11.9094, 0.29 ) }
    dend_11 { pt3dadd( 107.348, 85.1235, -12.0237, 0.44 ) }
    dend_11 { pt3dadd( 107.763, 85.1712, -12.0948, 0.44 ) }
    dend_11 { pt3dadd( 108.901, 85.3482, -12.1996, 0.22 ) }
    dend_11 { pt3dadd( 109.688, 85.481, -12.154, 0.81 ) }
    dend_11 { pt3dadd( 109.831, 85.504, -12.1348, 0.81 ) }
    dend_11 { pt3dadd( 110.288, 85.554, -12.0577, 0.96 ) }
    dend_11 { pt3dadd( 112.035, 85.6931, -11.7537, 0.37 ) }
    dend_11 { pt3dadd( 113.046, 85.7855, -11.5868, 0.37 ) }
    dend_11 { pt3dadd( 114.051, 85.8925, -11.4936, 0.29 ) }
    dend_11 { pt3dadd( 114.11, 85.8963, -11.491, 0.29 ) }
    dend_11 { pt3dadd( 114.864, 85.9241, -11.4706, 0.29 ) }
    dend_11 { pt3dadd( 115.446, 85.9382, -11.4507, 0.74 ) }
    dend_11 { pt3dadd( 116.15, 85.9689, -11.3611, 1.03 ) }
    dend_11 { pt3dadd( 117.418, 86.0569, -11.1823, 0.88 ) }
    dend_11 { pt3dadd( 119.039, 86.2745, -10.7806, 0.29 ) }
    dend_11 { pt3dadd( 119.564, 86.3544, -10.5779, 0.44 ) }
    dend_11 { pt3dadd( 120.258, 86.4597, -10.2108, 0.29 ) }
    dend_11 { pt3dadd( 121.28, 86.5893, -9.48767, 1.33 ) }
    dend_11 { pt3dadd( 121.611, 86.6181, -9.17486, 1.69 ) }
    dend_11 { pt3dadd( 122.595, 86.7089, -7.99856, 0.29 ) }
    dend_11 { pt3dadd( 122.989, 86.7532, -7.45231, 0.29 ) }
    dend_11 { pt3dadd( 123.232, 86.764, -7.12344, 0.66 ) }
    dend_11 { pt3dadd( 123.27, 86.7623, -7.0761, 0.66 ) }
    dend_11 { pt3dadd( 123.591, 86.7242, -6.76332, 0.66 ) }
    dend_11 { pt3dadd( 124.186, 86.6134, -6.26182, 0.22 ) }
    dend_11 { pt3dadd( 124.571, 86.4897, -5.98066, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_11 { pt3dadd( 124.63, 86.4682, -5.9328, 0.44 ) }
    dend_11 { pt3dadd( 125.057, 86.2986, -5.5639, 0.44 ) }
    dend_11 { pt3dadd( 125.104, 86.28, -5.53345, 0.44 ) }
    dend_11 { pt3dadd( 125.737, 86.0477, -5.19279, 0.29 ) }
    dend_11 { pt3dadd( 126.475, 85.7765, -4.89383, 0.29 ) }
    dend_11 { pt3dadd( 127.042, 85.569, -4.71069, 0.74 ) }
    dend_11 { pt3dadd( 127.36, 85.4553, -4.62034, 0.96 ) }
    dend_11 { pt3dadd( 129.078, 84.8693, -4.23438, 0.37 ) }
    dend_11 { pt3dadd( 129.471, 84.7496, -4.16923, 1.03 ) }
    dend_11 { pt3dadd( 130.498, 84.4983, -4.1081, 1.03 ) }
    dend_11 { pt3dadd( 130.986, 84.4012, -4.12964, 0.88 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 11/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 24.8972, 61.9671, 14.06, 0.88 ) }
    dend_4 { pt3dadd( 25.3216, 62.6941, 15.4237, 0.88 ) }
    dend_4 { pt3dadd( 25.564, 63.0878, 16.0113, 0.66 ) }
    dend_4 { pt3dadd( 25.6949, 63.3367, 16.3155, 0.66 ) }
    dend_4 { pt3dadd( 25.7065, 63.3626, 16.342, 0.66 ) }
    dend_4 { pt3dadd( 25.8297, 63.6987, 16.6216, 0.66 ) }
    dend_4 { pt3dadd( 25.8401, 63.73, 16.6442, 0.66 ) }
    dend_4 { pt3dadd( 25.9569, 64.1777, 16.8492, 0.74 ) }
    dend_4 { pt3dadd( 26.0824, 64.9168, 17.1795, 0.44 ) }
    dend_4 { pt3dadd( 26.1209, 65.2521, 17.3401, 0.37 ) }
    dend_4 { pt3dadd( 26.1651, 65.7317, 17.5815, 0.37 ) }
    dend_4 { pt3dadd( 26.182, 65.9566, 17.6973, 0.59 ) }
    dend_4 { pt3dadd( 26.2226, 66.4922, 17.9689, 0.59 ) }
    dend_4 { pt3dadd( 26.2577, 66.88, 18.16, 0.59 ) }
    dend_4 { pt3dadd( 26.2909, 67.0557, 18.2356, 0.88 ) }
    dend_4 { pt3dadd( 26.3017, 67.0935, 18.2553, 0.88 ) }
    dend_4 { pt3dadd( 26.4157, 67.4298, 18.4907, 1.18 ) }
    dend_4 { pt3dadd( 26.437, 67.4922, 18.5447, 1.18 ) }
    dend_4 { pt3dadd( 26.4951, 67.6773, 18.7256, 0.88 ) }
    dend_4 { pt3dadd( 26.6124, 68.0742, 19.1304, 0.44 ) }
    dend_4 { pt3dadd( 26.7584, 68.5341, 19.5921, 0.74 ) }
    dend_4 { pt3dadd( 26.9559, 69.1279, 20.1955, 1.33 ) }
    dend_4 { pt3dadd( 27.1389, 69.6671, 20.7353, 0.96 ) }
    dend_4 { pt3dadd( 27.3288, 70.2254, 21.2748, 0.52 ) }
    dend_4 { pt3dadd( 27.4431, 70.5775, 21.593, 0.44 ) }
    dend_4 { pt3dadd( 27.584, 71.052, 22.0101, 0.37 ) }
    dend_4 { pt3dadd( 27.6968, 71.5427, 22.4271, 0.37 ) }
    dend_4 { pt3dadd( 27.7474, 71.8719, 22.7115, 0.37 ) }
    dend_4 { pt3dadd( 27.7512, 71.9599, 22.791, 0.37 ) }
    dend_4 { pt3dadd( 27.7282, 72.2511, 23.0835, 0.59 ) }
    dend_4 { pt3dadd( 27.5838, 72.8903, 23.7845, 0.88 ) }
    dend_4 { pt3dadd( 27.4086, 73.3677, 24.3375, 0.88 ) }
    dend_4 { pt3dadd( 27.2372, 73.7397, 24.7627, 0.52 ) }
    dend_4 { pt3dadd( 27.1207, 73.9634, 25.0254, 0.52 ) }
    dend_4 { pt3dadd( 27.1104, 73.9846, 25.0485, 0.52 ) }
    dend_4 { pt3dadd( 27.0373, 74.1853, 25.2198, 0.52 ) }
    dend_4 { pt3dadd( 27.0356, 74.222, 25.2321, 0.52 ) }
    dend_4 { pt3dadd( 27.0816, 74.4771, 25.2629, 0.74 ) }
    dend_4 { pt3dadd( 27.0974, 74.5333, 25.2656, 0.74 ) }
    dend_4 { pt3dadd( 27.2184, 74.8789, 25.2841, 0.37 ) }
    dend_4 { pt3dadd( 27.4128, 75.3921, 25.3114, 0.44 ) }
    dend_4 { pt3dadd( 27.5972, 75.8169, 25.3107, 0.44 ) }
    dend_4 { pt3dadd( 27.7574, 76.1638, 25.2962, 0.74 ) }
    dend_4 { pt3dadd( 27.792, 76.2332, 25.2908, 0.74 ) }
    dend_4 { pt3dadd( 28.0078, 76.6747, 25.2375, 0.74 ) }
    dend_4 { pt3dadd( 28.0247, 76.7093, 25.2321, 0.74 ) }
    dend_4 { pt3dadd( 28.2659, 77.228, 25.1409, 0.66 ) }
    dend_4 { pt3dadd( 28.2813, 77.2644, 25.1347, 0.66 ) }
    dend_4 { pt3dadd( 28.4128, 77.5834, 25.0936, 0.74 ) }
    dend_4 { pt3dadd( 28.6344, 78.1612, 25.0405, 0.29 ) }
    dend_4 { pt3dadd( 28.7543, 78.5139, 25.0398, 0.44 ) }
    dend_4 { pt3dadd( 28.8787, 78.9265, 25.0725, 0.22 ) }
    dend_4 { pt3dadd( 28.954, 79.2377, 25.1261, 0.66 ) }
    dend_4 { pt3dadd( 29.0015, 79.4753, 25.175, 0.66 ) }
    dend_4 { pt3dadd( 29.0068, 79.519, 25.1859, 0.66 ) }
    dend_4 { pt3dadd( 29.0619, 80.0674, 25.3626, 0.44 ) }
    dend_4 { pt3dadd( 29.068, 80.1053, 25.3736, 0.44 ) }
    dend_4 { pt3dadd( 29.115, 80.2956, 25.4207, 0.52 ) }
    dend_4 { pt3dadd( 29.1496, 80.4118, 25.44, 0.52 ) }
    dend_4 { pt3dadd( 29.2227, 80.64, 25.4592, 0.52 ) }
    dend_4 { pt3dadd( 29.3785, 81.1464, 25.4724, 0.29 ) }
    dend_4 { pt3dadd( 29.5051, 81.635, 25.4665, 0.29 ) }
    dend_4 { pt3dadd( 29.5104, 81.668, 25.4666, 0.29 ) }
    dend_4 { pt3dadd( 29.5421, 82.0362, 25.4713, 0.44 ) }
    dend_4 { pt3dadd( 29.5412, 82.1636, 25.4741, 0.44 ) }
    dend_4 { pt3dadd( 29.495, 82.5571, 25.5081, 0.44 ) }
    dend_4 { pt3dadd( 29.4094, 82.9216, 25.5571, 0.59 ) }
    dend_4 { pt3dadd( 29.3288, 83.2403, 25.6374, 0.74 ) }
    dend_4 { pt3dadd( 29.321, 83.2817, 25.6508, 0.74 ) }
    dend_4 { pt3dadd( 29.2966, 83.5886, 25.77, 0.74 ) }
    dend_4 { pt3dadd( 29.3179, 84.037, 26.0365, 0.52 ) }
    dend_4 { pt3dadd( 29.323, 84.0681, 26.0593, 0.52 ) }
    dend_4 { pt3dadd( 29.4032, 84.4225, 26.3257, 0.44 ) }
    dend_4 { pt3dadd( 29.4454, 84.6209, 26.4842, 0.29 ) }
    dend_4 { pt3dadd( 29.495, 84.9438, 26.7326, 0.29 ) }
    dend_4 { pt3dadd( 29.5456, 85.6341, 27.3065, 0.29 ) }
    dend_4 { pt3dadd( 29.5517, 85.8915, 27.5136, 0.37 ) }
    dend_4 { pt3dadd( 29.5557, 86.2477, 27.7895, 0.44 ) }
    dend_4 { pt3dadd( 29.5488, 86.7695, 28.1784, 0.96 ) }
    dend_4 { pt3dadd( 29.5511, 87.0931, 28.4162, 1.25 ) }
    dend_4 { pt3dadd( 29.6179, 87.8936, 29.0161, 0.52 ) }
    dend_4 { pt3dadd( 29.6801, 88.2263, 29.2475, 0.52 ) }
    dend_4 { pt3dadd( 29.7638, 88.4984, 29.4473, 0.66 ) }
    dend_4 { pt3dadd( 29.7788, 88.5311, 29.4732, 0.66 ) }
    dend_4 { pt3dadd( 29.9574, 88.8359, 29.6964, 0.44 ) }
    dend_4 { pt3dadd( 30.2459, 89.2784, 30.0001, 0.29 ) }
    dend_4 { pt3dadd( 30.3338, 89.4344, 30.0842, 0.52 ) }
    dend_4 { pt3dadd( 30.4539, 89.7039, 30.2321, 0.52 ) }
    dend_4 { pt3dadd( 30.5866, 90.0521, 30.4214, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_4 { pt3dadd( 30.6918, 90.3204, 30.5583, 0.29 ) }
    dend_4 { pt3dadd( 30.7802, 90.5433, 30.6893, 0.52 ) }
    dend_4 { pt3dadd( 30.9879, 90.9958, 30.9605, 0.88 ) }
    dend_4 { pt3dadd( 31.0999, 91.2107, 31.0968, 0.52 ) }
    dend_4 { pt3dadd( 31.3668, 91.6531, 31.3927, 0.44 ) }
    dend_4 { pt3dadd( 31.5921, 91.9805, 31.6142, 0.59 ) }
    dend_4 { pt3dadd( 32.0151, 92.5098, 32.0189, 0.29 ) }
    dend_4 { pt3dadd( 32.3328, 92.8611, 32.3192, 0.29 ) }
    dend_4 { pt3dadd( 33.2705, 97.5478, 35.0299, 0.29 ) }
    dend_4 { pt3dadd( 33.9444, 102.756, 36.6489, 0.29 ) }
    // Section: dend_87, id: dend_87, parent: dend_67 (entry count 10/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( -134.016, -201.839, -23.0177, 0.29 ) }
    dend_87 { pt3dadd( -134.284, -202.545, -22.8258, 0.29 ) }
    dend_87 { pt3dadd( -134.375, -202.786, -22.7604, 0.74 ) }
    dend_87 { pt3dadd( -134.546, -203.236, -22.638, 0.29 ) }
    dend_87 { pt3dadd( -134.706, -203.659, -22.523, 0.29 ) }
    dend_87 { pt3dadd( -134.924, -204.234, -22.3667, 0.37 ) }
    dend_87 { pt3dadd( -136.862, -210.303, -21.564, 0.37 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 17/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -134.016, -201.839, -23.0177, 0.37 ) }
    dend_68 { pt3dadd( -134.932, -201.939, -22.3449, 0.37 ) }
    dend_68 { pt3dadd( -135.426, -201.992, -22.0263, 0.37 ) }
    dend_68 { pt3dadd( -136.336, -202.064, -21.4404, 0.44 ) }
    dend_68 { pt3dadd( -136.976, -202.114, -21.0485, 0.37 ) }
    dend_68 { pt3dadd( -138.241, -202.244, -20.3049, 0.88 ) }
    dend_68 { pt3dadd( -138.688, -202.307, -20.0196, 1.11 ) }
    dend_68 { pt3dadd( -139.232, -202.4, -19.6734, 0.81 ) }
    dend_68 { pt3dadd( -140.529, -202.701, -18.7774, 0.29 ) }
    dend_68 { pt3dadd( -140.945, -202.808, -18.5026, 0.29 ) }
    dend_68 { pt3dadd( -141.317, -202.903, -18.2498, 0.74 ) }
    dend_68 { pt3dadd( -142.558, -203.209, -17.471, 0.44 ) }
    dend_68 { pt3dadd( -142.944, -203.295, -17.2262, 0.44 ) }
    dend_68 { pt3dadd( -143.787, -203.437, -16.7325, 0.29 ) }
    dend_68 { pt3dadd( -144.702, -203.6, -16.1394, 0.29 ) }
    dend_68 { pt3dadd( -145.325, -203.694, -15.6145, 0.59 ) }
    dend_68 { pt3dadd( -145.755, -203.744, -15.2197, 0.66 ) }
    dend_68 { pt3dadd( -146.389, -203.799, -14.6252, 0.44 ) }
    dend_68 { pt3dadd( -146.982, -203.846, -14.0185, 0.37 ) }
    dend_68 { pt3dadd( -148.433, -203.967, -12.4208, 0.66 ) }
    dend_68 { pt3dadd( -149.839, -204.114, -10.8038, 0.81 ) }
    dend_68 { pt3dadd( -150.155, -204.14, -10.4566, 0.88 ) }
    dend_68 { pt3dadd( -150.432, -204.161, -10.1386, 0.88 ) }
    dend_68 { pt3dadd( -150.479, -204.164, -10.0843, 0.88 ) }
    dend_68 { pt3dadd( -151.3, -204.204, -9.19317, 0.52 ) }
    dend_68 { pt3dadd( -151.781, -204.168, -8.85926, 0.52 ) }
    dend_68 { pt3dadd( -153.374, -204.072, -8.03406, 1.69 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 44/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -6.17251, -118.851, -27.0171, 0.74 ) }
    dend_52 { pt3dadd( -6.47432, -120.145, -27.5438, 0.74 ) }
    dend_52 { pt3dadd( -6.62009, -121.192, -28.0024, 0.74 ) }
    dend_52 { pt3dadd( -6.73437, -122.626, -28.6268, 0.88 ) }
    dend_52 { pt3dadd( -6.7684, -123.503, -29.0068, 0.88 ) }
    dend_52 { pt3dadd( -6.82419, -124.941, -29.6296, 0.81 ) }
    dend_52 { pt3dadd( -6.89987, -126.892, -30.4745, 0.88 ) }
    dend_52 { pt3dadd( -6.84438, -128.081, -31.0033, 0.88 ) }
    dend_52 { pt3dadd( -6.75358, -128.908, -31.3967, 1.33 ) }
    dend_52 { pt3dadd( -6.60082, -129.78, -31.8054, 1.18 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 54/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -6.17251, -118.851, -27.0171, 0.59 ) }
    dend_49 { pt3dadd( -6.14972, -119.698, -27.2353, 0.59 ) }
    dend_49 { pt3dadd( -6.16865, -120.799, -27.6885, 0.52 ) }
    dend_49 { pt3dadd( -6.16124, -121.905, -28.1974, 0.44 ) }
    dend_49 { pt3dadd( -6.14367, -122.859, -28.6556, 0.44 ) }
    dend_49 { pt3dadd( -6.07232, -124.154, -29.2608, 0.59 ) }
    dend_49 { pt3dadd( -5.94985, -125.701, -29.9981, 0.74 ) }
    dend_49 { pt3dadd( -5.83463, -126.859, -30.5992, 0.59 ) }
    dend_49 { pt3dadd( -5.72771, -127.696, -31.0567, 0.59 ) }
    dend_49 { pt3dadd( -5.71584, -127.763, -31.0922, 0.59 ) }
    dend_49 { pt3dadd( -5.42022, -129.059, -31.7048, 0.59 ) }
    dend_49 { pt3dadd( -5.00882, -130.452, -32.2001, 0.74 ) }
    dend_49 { pt3dadd( -4.72935, -131.245, -32.4225, 0.74 ) }
    dend_49 { pt3dadd( -4.23908, -132.532, -32.7423, 0.66 ) }
    dend_49 { pt3dadd( -3.76318, -133.715, -33.0177, 0.59 ) }
    dend_49 { pt3dadd( -3.6922, -133.862, -33.0428, 0.59 ) }
    dend_49 { pt3dadd( -3.00361, -134.95, -33.1377, 0.59 ) }
    dend_49 { pt3dadd( -2.69453, -135.33, -33.1309, 0.81 ) }
    dend_49 { pt3dadd( -2.63542, -135.396, -33.1269, 0.81 ) }
    dend_49 { pt3dadd( -2.06799, -136.025, -33.0909, 0.81 ) }
    dend_49 { pt3dadd( -1.04785, -137.221, -33.1226, 0.66 ) }
    dend_49 { pt3dadd( -0.339759, -138.161, -33.2026, 0.66 ) }
    dend_49 { pt3dadd( 0.253781, -139.084, -33.2717, 0.66 ) }
    dend_49 { pt3dadd( 0.852258, -140.122, -33.2939, 0.81 ) }
    dend_49 { pt3dadd( 1.27902, -140.949, -33.2882, 0.96 ) }
    dend_49 { pt3dadd( 1.83442, -142.183, -33.2619, 0.52 ) }
    dend_49 { pt3dadd( 2.2199, -143.153, -33.2457, 0.52 ) }
    dend_49 { pt3dadd( 2.70788, -144.426, -33.1631, 0.81 ) }
    dend_49 { pt3dadd( 3.1221, -145.445, -33.0655, 0.81 ) }
    dend_49 { pt3dadd( 3.51187, -146.379, -32.9562, 0.81 ) }
    dend_49 { pt3dadd( 3.54377, -146.462, -32.9456, 0.81 ) }
    dend_49 { pt3dadd( 3.99326, -147.718, -32.8057, 0.81 ) }
    dend_49 { pt3dadd( 4.0411, -147.865, -32.7983, 0.81 ) }
    dend_49 { pt3dadd( 4.44425, -149.344, -32.7878, 0.81 ) }
    dend_49 { pt3dadd( 4.68612, -150.466, -32.7827, 0.81 ) }
    dend_49 { pt3dadd( 4.8734, -151.522, -32.7538, 0.66 ) }
    dend_49 { pt3dadd( 4.88725, -151.61, -32.7464, 0.66 ) }
    dend_49 { pt3dadd( 5.03867, -152.734, -32.6029, 0.37 ) }
    dend_49 { pt3dadd( 5.23261, -154.068, -32.4131, 0.66 ) }
    dend_49 { pt3dadd( 5.326, -154.683, -32.314, 0.96 ) }
    dend_49 { pt3dadd( 5.55483, -155.895, -32.0671, 0.74 ) }
    dend_49 { pt3dadd( 5.86194, -157.355, -31.7269, 0.96 ) }
    dend_49 { pt3dadd( 6.08768, -158.472, -31.4759, 0.81 ) }
    dend_49 { pt3dadd( 6.34516, -159.791, -31.1966, 0.74 ) }
    dend_49 { pt3dadd( 6.35511, -159.855, -31.1878, 0.74 ) }
    dend_49 { pt3dadd( 6.52938, -161.234, -31.1079, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_49 { pt3dadd( 6.53971, -161.312, -31.1123, 0.74 ) }
    dend_49 { pt3dadd( 6.75561, -162.642, -31.4792, 0.44 ) }
    dend_49 { pt3dadd( 6.88537, -163.325, -31.7485, 0.44 ) }
    dend_49 { pt3dadd( 7.16609, -164.704, -32.4165, 1.4 ) }
    dend_49 { pt3dadd( 7.37528, -165.579, -32.9378, 1.18 ) }
    dend_49 { pt3dadd( 7.67121, -166.644, -33.7243, 1.03 ) }
    dend_49 { pt3dadd( 8.27269, -168.37, -35.1469, 0.66 ) }
    dend_49 { pt3dadd( 8.55748, -169.01, -35.7095, 0.66 ) }
    dend_49 { pt3dadd( 8.63143, -169.153, -35.8366, 0.66 ) }
    dend_49 { pt3dadd( 9.37586, -170.441, -36.942, 0.81 ) }
    dend_49 { pt3dadd( 9.92729, -171.388, -37.7974, 0.96 ) }
    dend_49 { pt3dadd( 10.6588, -172.611, -38.9426, 0.74 ) }
    dend_49 { pt3dadd( 11.2626, -173.531, -39.7829, 0.74 ) }
    dend_49 { pt3dadd( 11.7432, -174.228, -40.4126, 0.96 ) }
    dend_49 { pt3dadd( 12.1184, -174.761, -40.8496, 1.25 ) }
    // Section: dend_47, id: dend_47, parent: dend_43 (entry count 15/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -20.7667, -401.625, -20.7258, 0.29 ) }
    dend_47 { pt3dadd( -19.4533, -401.568, -21.0798, 0.29 ) }
    dend_47 { pt3dadd( -18.6571, -401.533, -21.2944, 0.29 ) }
    dend_47 { pt3dadd( -17.1024, -401.466, -21.7135, 0.22 ) }
    dend_47 { pt3dadd( -16.341, -401.433, -21.9187, 0.29 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 20/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -20.7667, -401.625, -20.7258, 0.59 ) }
    dend_44 { pt3dadd( -21.0125, -402.773, -20.773, 0.59 ) }
    dend_44 { pt3dadd( -21.0314, -402.848, -20.7743, 0.59 ) }
    dend_44 { pt3dadd( -21.3655, -404.032, -20.7589, 0.52 ) }
    dend_44 { pt3dadd( -21.7116, -405.229, -20.7296, 0.66 ) }
    dend_44 { pt3dadd( -22.0066, -406.36, -20.7024, 0.66 ) }
    dend_44 { pt3dadd( -22.294, -407.532, -20.6751, 0.81 ) }
    dend_44 { pt3dadd( -22.3548, -407.769, -20.6622, 0.81 ) }
    dend_44 { pt3dadd( -22.5825, -408.958, -20.5584, 0.81 ) }
    dend_44 { pt3dadd( -22.5997, -409.116, -20.5404, 0.81 ) }
    dend_44 { pt3dadd( -22.5211, -410.494, -20.3156, 0.81 ) }
    dend_44 { pt3dadd( -22.5125, -410.579, -20.3068, 0.81 ) }
    dend_44 { pt3dadd( -22.4415, -411.815, -20.3617, 0.59 ) }
    dend_44 { pt3dadd( -22.4313, -413.044, -20.5337, 0.37 ) }
    dend_44 { pt3dadd( -22.4752, -413.789, -20.7704, 0.74 ) }
    dend_44 { pt3dadd( -22.7761, -415.248, -21.6115, 0.81 ) }
    dend_44 { pt3dadd( -23.2012, -416.761, -22.7767, 0.52 ) }
    dend_44 { pt3dadd( -23.7406, -418.557, -24.4233, 0.52 ) }
    dend_44 { pt3dadd( -23.756, -418.602, -24.4699, 0.52 ) }
    dend_44 { pt3dadd( -24.2942, -419.886, -26.0968, 0.96 ) }
    dend_44 { pt3dadd( -24.9903, -421.384, -28.3938, 1.69 ) }
    dend_44 { pt3dadd( -25.2547, -421.935, -29.4074, 0.37 ) }
    dend_44 { pt3dadd( -25.5607, -422.614, -30.9013, 0.37 ) }
    dend_44 { pt3dadd( -25.6688, -422.907, -31.6138, 0.66 ) }
    dend_44 { pt3dadd( -26.0677, -424.24, -34.9887, 1.25 ) }
    dend_44 { pt3dadd( -26.2604, -425.115, -37.3533, 0.44 ) }
    dend_44 { pt3dadd( -26.3243, -425.646, -38.8234, 0.81 ) }
    dend_44 { pt3dadd( -26.4052, -426.661, -41.6304, 0.37 ) }
    dend_44 { pt3dadd( -26.3927, -427.058, -42.714, 0.29 ) }
    dend_44 { pt3dadd( -26.2655, -427.614, -44.174, 0.29 ) }
    dend_44 { pt3dadd( -26.1325, -427.896, -44.7869, 0.96 ) }
    dend_44 { pt3dadd( -25.945, -428.2, -45.3966, 0.96 ) }
    dend_44 { pt3dadd( -25.4856, -428.905, -46.6355, 0.44 ) }
    dend_44 { pt3dadd( -25.3246, -429.144, -47.1068, 0.81 ) }
    dend_44 { pt3dadd( -25.1227, -429.433, -47.7952, 1.03 ) }
    dend_44 { pt3dadd( -25.0992, -429.465, -47.8729, 1.03 ) }
    dend_44 { pt3dadd( -24.4491, -430.397, -49.9068, 0.37 ) }
    dend_44 { pt3dadd( -24.0049, -431.071, -51.2618, 1.4 ) }
    dend_44 { pt3dadd( -23.3638, -432.439, -53.797, 0.37 ) }
    dend_44 { pt3dadd( -23.2123, -432.878, -54.5335, 0.66 ) }
    dend_44 { pt3dadd( -23.0016, -433.573, -55.5808, 0.29 ) }
    dend_44 { pt3dadd( -22.7903, -434.2, -56.3995, 0.96 ) }
    dend_44 { pt3dadd( -22.6753, -434.505, -56.7281, 0.96 ) }
    dend_44 { pt3dadd( -21.6965, -436.968, -58.9312, 0.37 ) }
    dend_44 { pt3dadd( -21.5496, -437.326, -59.1745, 0.59 ) }
    dend_44 { pt3dadd( -21.1418, -438.31, -59.8655, 0.29 ) }
    dend_44 { pt3dadd( -20.7163, -439.29, -60.6653, 0.96 ) }
    dend_44 { pt3dadd( -20.6912, -439.343, -60.7121, 0.96 ) }
    dend_44 { pt3dadd( -20.3895, -439.796, -61.0182, 1.33 ) }
    dend_44 { pt3dadd( -20.3327, -439.848, -61.0184, 1.33 ) }
    dend_44 { pt3dadd( -19.9396, -440.209, -60.9948, 1.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 71/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -45.7926, -82.1562, -29.1232, 0.29 ) }
    dend_40 { pt3dadd( -45.9735, -83.0822, -28.3816, 0.29 ) }
    dend_40 { pt3dadd( -46.1024, -83.742, -27.8532, 0.37 ) }
    dend_40 { pt3dadd( -46.2214, -84.3512, -27.3654, 0.37 ) }
    dend_40 { pt3dadd( -46.3918, -85.2236, -26.6668, 0.29 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 76/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -45.7926, -82.1562, -29.1232, 0.37 ) }
    dend_35 { pt3dadd( -46.9961, -82.8404, -29.49, 0.37 ) }
    dend_35 { pt3dadd( -47.8846, -83.2004, -29.6754, 0.37 ) }
    dend_35 { pt3dadd( -48.9158, -83.5067, -29.8736, 0.81 ) }
    dend_35 { pt3dadd( -49.6799, -83.6332, -29.9253, 1.25 ) }
    dend_35 { pt3dadd( -50.2802, -83.6943, -29.9293, 1.25 ) }
    dend_35 { pt3dadd( -52.8487, -83.9535, -29.9262, 0.44 ) }
    dend_35 { pt3dadd( -53.029, -83.9622, -29.9215, 0.44 ) }
    dend_35 { pt3dadd( -53.6381, -83.976, -29.9063, 0.74 ) }
    dend_35 { pt3dadd( -56.0127, -84.0573, -29.8923, 0.52 ) }
    dend_35 { pt3dadd( -57.2296, -84.1721, -29.9244, 0.59 ) }
    dend_35 { pt3dadd( -58.0654, -84.3777, -30.046, 0.44 ) }
    dend_35 { pt3dadd( -58.6543, -84.6831, -30.2638, 0.29 ) }
    dend_35 { pt3dadd( -59.2383, -85.1014, -30.5558, 0.29 ) }
    dend_35 { pt3dadd( -59.9067, -85.7736, -30.9969, 1.11 ) }
    dend_35 { pt3dadd( -60.2796, -86.2882, -31.3213, 1.33 ) }
    dend_35 { pt3dadd( -61.1268, -87.7672, -32.0998, 0.74 ) }
    dend_35 { pt3dadd( -61.5497, -88.6367, -32.4575, 0.74 ) }
    dend_35 { pt3dadd( -61.7827, -89.1922, -32.6252, 1.11 ) }
    dend_35 { pt3dadd( -62.0704, -89.8764, -32.769, 0.88 ) }
    dend_35 { pt3dadd( -62.4313, -90.7075, -32.8764, 0.66 ) }
    dend_35 { pt3dadd( -62.8677, -91.6816, -32.9376, 0.37 ) }
    dend_35 { pt3dadd( -63.1515, -92.327, -32.9098, 0.37 ) }
    dend_35 { pt3dadd( -63.5623, -93.3298, -32.8371, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_35 { pt3dadd( -63.9756, -94.443, -32.7258, 0.37 ) }
    dend_35 { pt3dadd( -64.2589, -95.2726, -32.6304, 0.29 ) }
    dend_35 { pt3dadd( -64.5119, -96.0619, -32.499, 0.59 ) }
    dend_35 { pt3dadd( -64.7757, -96.8558, -32.3186, 0.81 ) }
    dend_35 { pt3dadd( -64.7938, -96.9203, -32.3006, 0.81 ) }
    dend_35 { pt3dadd( -65.0122, -97.7901, -31.9902, 0.74 ) }
    dend_35 { pt3dadd( -65.1254, -98.34, -31.7698, 1.11 ) }
    dend_35 { pt3dadd( -65.3689, -99.5452, -31.2471, 0.59 ) }
    dend_35 { pt3dadd( -65.4908, -100.093, -31.0031, 1.03 ) }
    dend_35 { pt3dadd( -65.7752, -101.149, -30.5213, 0.52 ) }
    dend_35 { pt3dadd( -66.0388, -102.027, -30.1259, 0.74 ) }
    dend_35 { pt3dadd( -66.2391, -102.646, -29.8601, 0.66 ) }
    dend_35 { pt3dadd( -66.616, -103.773, -29.4004, 0.44 ) }
    dend_35 { pt3dadd( -66.9893, -104.77, -29.0359, 0.44 ) }
    dend_35 { pt3dadd( -67.4564, -105.808, -28.7178, 0.44 ) }
    dend_35 { pt3dadd( -67.6847, -106.223, -28.6236, 0.81 ) }
    dend_35 { pt3dadd( -68.1396, -106.971, -28.5167, 1.18 ) }
    dend_35 { pt3dadd( -68.3357, -107.251, -28.4955, 1.33 ) }
    dend_35 { pt3dadd( -69.2183, -108.375, -28.4519, 0.44 ) }
    dend_35 { pt3dadd( -69.9334, -109.254, -28.4443, 0.59 ) }
    dend_35 { pt3dadd( -70.5382, -109.876, -28.3948, 0.81 ) }
    dend_35 { pt3dadd( -70.8634, -110.155, -28.3607, 0.81 ) }
    dend_35 { pt3dadd( -71.7301, -110.731, -28.2533, 0.37 ) }
    dend_35 { pt3dadd( -72.6975, -111.266, -28.1567, 0.74 ) }
    dend_35 { pt3dadd( -73.0924, -111.444, -28.127, 0.96 ) }
    dend_35 { pt3dadd( -75.3233, -112.318, -27.9448, 0.59 ) }
    dend_35 { pt3dadd( -76.293, -112.652, -27.8755, 0.81 ) }
    dend_35 { pt3dadd( -78.2219, -113.23, -27.76, 0.52 ) }
    dend_35 { pt3dadd( -79.3797, -113.515, -27.7209, 0.52 ) }
    dend_35 { pt3dadd( -80.3677, -113.725, -27.7374, 0.74 ) }
    dend_35 { pt3dadd( -89.0828, -121.109, -25.9307, 0.74 ) }
    dend_35 { pt3dadd( -97.4127, -129.098, -25.2058, 0.74 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 32/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -91.8869, -90.2308, -151.133, 0.52 ) }
    dend_33 { pt3dadd( -91.3748, -91.5791, -151.823, 0.52 ) }
    dend_33 { pt3dadd( -90.7658, -93.1432, -152.584, 0.88 ) }
    dend_33 { pt3dadd( -90.4537, -93.8786, -152.904, 0.88 ) }
    dend_33 { pt3dadd( -89.8796, -95.1036, -153.413, 0.37 ) }
    dend_33 { pt3dadd( -89.6217, -95.6385, -153.618, 0.29 ) }
    dend_33 { pt3dadd( -89.3944, -96.1351, -153.795, 0.88 ) }
    dend_33 { pt3dadd( -89.3479, -96.2374, -153.826, 0.88 ) }
    dend_33 { pt3dadd( -89.026, -97.0581, -153.986, 0.88 ) }
    dend_33 { pt3dadd( -88.6582, -98.151, -154.155, 0.29 ) }
    dend_33 { pt3dadd( -88.4523, -98.9143, -154.217, 0.29 ) }
    dend_33 { pt3dadd( -88.3061, -99.6214, -154.266, 0.22 ) }
    dend_33 { pt3dadd( -88.1902, -100.433, -154.315, 0.22 ) }
    dend_33 { pt3dadd( -88.1643, -100.827, -154.337, 0.81 ) }
    dend_33 { pt3dadd( -88.1761, -101.543, -154.371, 1.25 ) }
    dend_33 { pt3dadd( -88.2436, -102.721, -154.394, 0.37 ) }
    dend_33 { pt3dadd( -88.3242, -103.823, -154.421, 0.22 ) }
    dend_33 { pt3dadd( -88.3796, -104.496, -154.44, 0.66 ) }
    dend_33 { pt3dadd( -88.4439, -105.13, -154.461, 0.81 ) }
    dend_33 { pt3dadd( -88.602, -106.402, -154.515, 0.22 ) }
    dend_33 { pt3dadd( -88.6993, -107.022, -154.548, 0.88 ) }
    dend_33 { pt3dadd( -88.7664, -107.365, -154.571, 1.03 ) }
    dend_33 { pt3dadd( -88.857, -107.881, -154.606, 1.03 ) }
    dend_33 { pt3dadd( -88.9316, -108.425, -154.637, 0.74 ) }
    dend_33 { pt3dadd( -88.9364, -108.514, -154.64, 0.74 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 57/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -91.8869, -90.2308, -151.133, 0.22 ) }
    dend_32 { pt3dadd( -92.9951, -90.2652, -153.343, 0.22 ) }
    dend_32 { pt3dadd( -93.4546, -90.3231, -154.171, 0.22 ) }
    dend_32 { pt3dadd( -93.9722, -90.4155, -154.99, 0.81 ) }
    dend_32 { pt3dadd( -94.2635, -90.4809, -155.391, 1.11 ) }
    dend_32 { pt3dadd( -94.6371, -90.5791, -155.838, 1.03 ) }
    dend_32 { pt3dadd( -95.7172, -90.877, -157.002, 0.22 ) }
    dend_32 { pt3dadd( -95.9301, -90.9525, -157.174, 0.66 ) }
    dend_32 { pt3dadd( -96.4072, -91.1424, -157.552, 0.96 ) }
    dend_32 { pt3dadd( -96.9683, -91.3309, -157.942, 0.29 ) }
    dend_32 { pt3dadd( -97.6131, -91.4918, -158.38, 0.29 ) }
    dend_32 { pt3dadd( -97.8618, -91.5314, -158.535, 0.96 ) }
    dend_32 { pt3dadd( -98.3628, -91.5699, -158.844, 1.18 ) }
    dend_32 { pt3dadd( -98.4091, -91.5695, -158.878, 1.18 ) }
    dend_32 { pt3dadd( -98.9992, -91.5226, -159.358, 0.88 ) }
    dend_32 { pt3dadd( -99.0871, -91.5139, -159.432, 0.88 ) }
    dend_32 { pt3dadd( -99.4567, -91.4949, -159.735, 0.66 ) }
    dend_32 { pt3dadd( -100.335, -91.5442, -160.503, 0.29 ) }
    dend_32 { pt3dadd( -100.502, -91.5633, -160.647, 0.29 ) }
    dend_32 { pt3dadd( -101.192, -91.6784, -161.243, 0.29 ) }
    dend_32 { pt3dadd( -101.536, -91.7276, -161.616, 0.59 ) }
    dend_32 { pt3dadd( -101.805, -91.7477, -161.939, 0.59 ) }
    dend_32 { pt3dadd( -102.583, -91.765, -162.972, 0.29 ) }
    dend_32 { pt3dadd( -102.795, -91.7572, -163.259, 1.03 ) }
    dend_32 { pt3dadd( -103.086, -91.708, -163.744, 1.33 ) }
    dend_32 { pt3dadd( -103.881, -91.3912, -165.46, 0.29 ) }
    dend_32 { pt3dadd( -104.019, -91.3088, -165.782, 0.29 ) }
    dend_32 { pt3dadd( -104.044, -91.2901, -165.844, 0.29 ) }
    dend_32 { pt3dadd( -104.246, -91.1404, -166.43, 0.59 ) }
    dend_32 { pt3dadd( -104.713, -90.8692, -167.872, 0.81 ) }
    dend_32 { pt3dadd( -105.011, -90.7785, -168.934, 0.52 ) }
    dend_32 { pt3dadd( -105.156, -90.8005, -169.498, 1.11 ) }
    dend_32 { pt3dadd( -105.396, -90.9283, -170.592, 1.4 ) }
    dend_32 { pt3dadd( -105.731, -91.1587, -172.248, 0.29 ) }
    dend_32 { pt3dadd( -105.801, -91.231, -172.65, 0.88 ) }
    dend_32 { pt3dadd( -106.087, -91.6794, -174.302, 0.52 ) }
    dend_32 { pt3dadd( -106.286, -92.1468, -175.631, 0.81 ) }
    dend_32 { pt3dadd( -106.343, -92.3565, -176.146, 0.88 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 95/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 11.8914, 378.233, 73.2209, 0.37 ) }
    dend_23 { pt3dadd( 12.1903, 378.259, 72.55, 0.37 ) }
    dend_23 { pt3dadd( 12.7598, 378.225, 71.2496, 0.66 ) }
    dend_23 { pt3dadd( 12.7986, 378.217, 71.1647, 0.66 ) }
    dend_23 { pt3dadd( 13.0822, 378.157, 70.5485, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_23 { pt3dadd( 13.1284, 378.148, 70.45, 0.29 ) }
    dend_23 { pt3dadd( 13.8471, 378.064, 68.7444, 0.29 ) }
    dend_23 { pt3dadd( 13.8825, 378.064, 68.6587, 0.29 ) }
    dend_23 { pt3dadd( 14.0604, 378.098, 68.2637, 0.66 ) }
    dend_23 { pt3dadd( 14.2595, 378.157, 67.7872, 0.52 ) }
    dend_23 { pt3dadd( 14.2927, 378.173, 67.6982, 0.52 ) }
    dend_23 { pt3dadd( 14.9159, 378.622, 66.0792, 0.22 ) }
    dend_23 { pt3dadd( 15.2493, 379.01, 65.3236, 0.22 ) }
    dend_23 { pt3dadd( 15.424, 379.238, 64.9096, 0.29 ) }
    dend_23 { pt3dadd( 22.3514, 383.046, 54.2781, 0.29 ) }
    dend_23 { pt3dadd( 29.4111, 389.137, 44.8665, 0.29 ) }
    dend_23 { pt3dadd( 34.1622, 396.345, 34.8169, 0.29 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 12/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 11.8914, 378.233, 73.2209, 0.29 ) }
    dend_22 { pt3dadd( 12.0567, 379.686, 73.1297, 0.29 ) }
    dend_22 { pt3dadd( 12.0885, 380.175, 73.1154, 0.29 ) }
    dend_22 { pt3dadd( 12.0923, 380.239, 73.1197, 0.29 ) }
    dend_22 { pt3dadd( 12.1304, 380.98, 73.2144, 0.29 ) }
    dend_22 { pt3dadd( 12.1327, 381.035, 73.2238, 0.29 ) }
    dend_22 { pt3dadd( 12.1908, 382.02, 73.4658, 0.29 ) }
    dend_22 { pt3dadd( 12.1911, 382.071, 73.4873, 0.29 ) }
    dend_22 { pt3dadd( 12.2449, 382.672, 73.7546, 0.52 ) }
    dend_22 { pt3dadd( 12.2626, 382.793, 73.8035, 0.52 ) }
    dend_22 { pt3dadd( 12.3074, 383.047, 73.8857, 0.52 ) }
    dend_22 { pt3dadd( 12.4196, 383.669, 74.0438, 0.22 ) }
    dend_22 { pt3dadd( 12.5183, 384.28, 74.1498, 0.22 ) }
    dend_22 { pt3dadd( 12.6115, 384.893, 74.231, 0.44 ) }
    dend_22 { pt3dadd( 12.6744, 385.365, 74.2604, 0.44 ) }
    dend_22 { pt3dadd( 12.7587, 386.036, 74.2849, 0.22 ) }
    dend_22 { pt3dadd( 12.7656, 386.102, 74.2844, 0.22 ) }
    dend_22 { pt3dadd( 12.8033, 387.048, 74.2029, 0.22 ) }
    dend_22 { pt3dadd( 12.5424, 396.144, 75.2431, 0.22 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 31/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 34.5809, 208.094, -57.0985, 0.66 ) }
    dend_19 { pt3dadd( 34.8051, 208.805, -57.1398, 0.66 ) }
    dend_19 { pt3dadd( 35.0467, 209.472, -57.1963, 0.29 ) }
    dend_19 { pt3dadd( 35.0743, 209.542, -57.2036, 0.29 ) }
    dend_19 { pt3dadd( 35.3585, 210.221, -57.2832, 0.29 ) }
    dend_19 { pt3dadd( 35.827, 211.403, -57.4082, 0.29 ) }
    dend_19 { pt3dadd( 36.0122, 211.921, -57.4523, 0.52 ) }
    dend_19 { pt3dadd( 36.0694, 212.094, -57.4643, 0.52 ) }
    dend_19 { pt3dadd( 36.1495, 212.345, -57.4815, 0.52 ) }
    dend_19 { pt3dadd( 36.2887, 212.809, -57.5082, 0.37 ) }
    dend_19 { pt3dadd( 36.4549, 213.458, -57.5297, 0.37 ) }
    dend_19 { pt3dadd( 36.582, 214.473, -57.4895, 0.88 ) }
    dend_19 { pt3dadd( 36.5926, 214.612, -57.4778, 0.88 ) }
    dend_19 { pt3dadd( 36.63, 215.176, -57.4203, 1.03 ) }
    dend_19 { pt3dadd( 36.6741, 215.717, -57.3642, 1.18 ) }
    dend_19 { pt3dadd( 36.7426, 216.303, -57.3096, 0.66 ) }
    dend_19 { pt3dadd( 36.8601, 217.023, -57.2546, 0.52 ) }
    dend_19 { pt3dadd( 36.9325, 217.367, -57.235, 0.59 ) }
    dend_19 { pt3dadd( 37.0379, 217.735, -57.2334, 0.44 ) }
    dend_19 { pt3dadd( 37.4036, 218.704, -57.2888, 0.29 ) }
    dend_19 { pt3dadd( 37.5675, 219.068, -57.33, 0.37 ) }
    dend_19 { pt3dadd( 37.5993, 219.138, -57.3439, 0.37 ) }
    dend_19 { pt3dadd( 37.7697, 219.551, -57.4393, 0.22 ) }
    dend_19 { pt3dadd( 38.0671, 220.384, -57.5886, 0.59 ) }
    dend_19 { pt3dadd( 38.2075, 220.825, -57.648, 0.88 ) }
    dend_19 { pt3dadd( 38.423, 221.575, -57.7157, 0.52 ) }
    dend_19 { pt3dadd( 38.6746, 222.527, -57.7668, 0.29 ) }
    dend_19 { pt3dadd( 38.8468, 223.233, -57.779, 0.29 ) }
    dend_19 { pt3dadd( 39.049, 224.188, -57.7535, 0.59 ) }
    dend_19 { pt3dadd( 39.065, 224.263, -57.744, 0.59 ) }
    dend_19 { pt3dadd( 39.1877, 224.778, -57.642, 0.29 ) }
    dend_19 { pt3dadd( 39.2187, 224.885, -57.6128, 0.29 ) }
    dend_19 { pt3dadd( 39.5437, 225.655, -57.4051, 0.52 ) }
    dend_19 { pt3dadd( 39.7004, 226.007, -57.3454, 0.66 ) }
    dend_19 { pt3dadd( 40.053, 226.862, -57.2659, 0.52 ) }
    dend_19 { pt3dadd( 40.0818, 226.934, -57.2607, 0.52 ) }
    dend_19 { pt3dadd( 40.2752, 227.452, -57.2349, 0.29 ) }
    dend_19 { pt3dadd( 40.6704, 228.722, -57.264, 0.29 ) }
    dend_19 { pt3dadd( 40.8989, 229.659, -57.3543, 0.66 ) }
    dend_19 { pt3dadd( 40.9715, 230.0, -57.3863, 0.88 ) }
    dend_19 { pt3dadd( 40.985, 230.074, -57.3935, 0.88 ) }
    dend_19 { pt3dadd( 41.0914, 230.774, -57.4216, 0.52 ) }
    dend_19 { pt3dadd( 41.1909, 231.696, -57.3992, 0.52 ) }
    dend_19 { pt3dadd( 41.2667, 232.475, -57.3463, 0.29 ) }
    dend_19 { pt3dadd( 41.4074, 233.485, -57.2716, 0.29 ) }
    dend_19 { pt3dadd( 41.5484, 234.261, -57.2074, 1.03 ) }
    dend_19 { pt3dadd( 41.7271, 235.081, -57.1365, 0.74 ) }
    dend_19 { pt3dadd( 41.9962, 235.989, -57.0272, 0.29 ) }
    dend_19 { pt3dadd( 42.4539, 237.238, -56.849, 0.44 ) }
    dend_19 { pt3dadd( 42.7236, 237.875, -56.7619, 0.37 ) }
    dend_19 { pt3dadd( 43.0684, 238.617, -56.675, 0.37 ) }
    dend_19 { pt3dadd( 43.4885, 239.396, -56.5739, 0.96 ) }
    dend_19 { pt3dadd( 44.1357, 240.412, -56.4438, 0.37 ) }
    dend_19 { pt3dadd( 44.6098, 241.071, -56.3541, 0.37 ) }
    dend_19 { pt3dadd( 45.056, 241.637, -56.2699, 0.59 ) }
    dend_19 { pt3dadd( 45.3064, 241.941, -56.2361, 0.88 ) }
    dend_19 { pt3dadd( 45.4571, 242.124, -56.2242, 0.88 ) }
    dend_19 { pt3dadd( 45.9298, 242.703, -56.2164, 0.59 ) }
    dend_19 { pt3dadd( 45.9687, 242.754, -56.2194, 0.52 ) }
    dend_19 { pt3dadd( 46.9486, 244.018, -56.3246, 0.15 ) }
    dend_19 { pt3dadd( 47.3829, 244.601, -56.3953, 0.59 ) }
    dend_19 { pt3dadd( 47.4277, 244.661, -56.4037, 0.59 ) }
    dend_19 { pt3dadd( 47.784, 245.104, -56.4944, 0.59 ) }
    dend_19 { pt3dadd( 47.8318, 245.16, -56.5099, 0.59 ) }
    dend_19 { pt3dadd( 48.2309, 245.608, -56.659, 0.88 ) }
    dend_19 { pt3dadd( 48.7845, 246.244, -56.8979, 1.18 ) }
    dend_19 { pt3dadd( 49.0283, 246.534, -57.0019, 1.18 ) }
    dend_19 { pt3dadd( 49.9165, 247.668, -57.349, 0.15 ) }
    dend_19 { pt3dadd( 50.5318, 248.54, -57.5652, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_19 { pt3dadd( 50.8372, 249.04, -57.658, 0.52 ) }
    dend_19 { pt3dadd( 51.1607, 249.654, -57.7381, 0.66 ) }
    dend_19 { pt3dadd( 51.323, 250.025, -57.7664, 0.74 ) }
    dend_19 { pt3dadd( 51.5984, 250.8, -57.7887, 0.29 ) }
    dend_19 { pt3dadd( 51.8251, 251.55, -57.7878, 0.37 ) }
    dend_19 { pt3dadd( 52.1757, 252.499, -57.7617, 0.29 ) }
    dend_19 { pt3dadd( 52.2114, 252.577, -57.759, 0.29 ) }
    dend_19 { pt3dadd( 52.8196, 253.561, -57.7607, 0.52 ) }
    dend_19 { pt3dadd( 52.8667, 253.62, -57.764, 0.52 ) }
    dend_19 { pt3dadd( 53.6045, 254.355, -57.855, 0.81 ) }
    dend_19 { pt3dadd( 54.4513, 255.063, -57.9792, 0.37 ) }
    dend_19 { pt3dadd( 54.5116, 255.108, -57.9876, 0.37 ) }
    dend_19 { pt3dadd( 55.3841, 255.823, -58.1019, 0.29 ) }
    dend_19 { pt3dadd( 55.7644, 256.168, -58.1477, 0.37 ) }
    dend_19 { pt3dadd( 55.8085, 256.216, -58.1535, 0.37 ) }
    dend_19 { pt3dadd( 56.2407, 256.758, -58.2285, 0.37 ) }
    dend_19 { pt3dadd( 56.936, 257.63, -58.3022, 0.29 ) }
    dend_19 { pt3dadd( 57.7613, 258.572, -58.3336, 0.37 ) }
    dend_19 { pt3dadd( 58.0753, 258.918, -58.334, 0.88 ) }
    dend_19 { pt3dadd( 58.444, 259.292, -58.3429, 0.96 ) }
    dend_19 { pt3dadd( 59.4176, 260.116, -58.3721, 0.52 ) }
    dend_19 { pt3dadd( 60.7278, 261.048, -58.4363, 0.66 ) }
    dend_19 { pt3dadd( 61.2612, 261.366, -58.4629, 0.66 ) }
    dend_19 { pt3dadd( 61.9921, 261.729, -58.5018, 0.29 ) }
    dend_19 { pt3dadd( 62.8448, 262.116, -58.5452, 0.44 ) }
    dend_19 { pt3dadd( 63.8478, 262.547, -58.5879, 1.11 ) }
    dend_19 { pt3dadd( 64.6508, 262.893, -58.6164, 1.11 ) }
    dend_19 { pt3dadd( 65.8716, 263.451, -58.686, 1.11 ) }
    dend_19 { pt3dadd( 66.4089, 263.686, -58.6906, 1.55 ) }
    dend_19 { pt3dadd( 67.3278, 264.046, -58.6644, 1.55 ) }
    dend_19 { pt3dadd( 67.4495, 264.086, -58.6559, 1.55 ) }
    dend_19 { pt3dadd( 68.2069, 264.282, -58.5574, 1.55 ) }
    dend_19 { pt3dadd( 68.2691, 264.294, -58.5475, 1.55 ) }
    dend_19 { pt3dadd( 69.2537, 264.439, -58.3749, 2.06 ) }
    dend_19 { pt3dadd( 69.3272, 264.448, -58.3596, 2.06 ) }
    dend_19 { pt3dadd( 71.3436, 264.628, -57.9119, 0.52 ) }
    dend_19 { pt3dadd( 72.5468, 264.707, -57.6442, 0.74 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 37/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 34.5809, 208.094, -57.0985, 0.74 ) }
    dend_18 { pt3dadd( 34.7051, 207.051, -56.9437, 0.74 ) }
    dend_18 { pt3dadd( 34.7089, 206.994, -56.9361, 0.74 ) }
    dend_18 { pt3dadd( 34.7341, 206.288, -56.8499, 0.37 ) }
    dend_18 { pt3dadd( 34.7358, 205.268, -56.7321, 0.22 ) }
    dend_18 { pt3dadd( 34.7143, 204.782, -56.6791, 0.37 ) }
    dend_18 { pt3dadd( 34.6727, 204.185, -56.6215, 0.15 ) }
    dend_18 { pt3dadd( 34.5626, 203.273, -56.5546, 0.15 ) }
    dend_18 { pt3dadd( 34.5108, 202.868, -56.5247, 0.44 ) }
    dend_18 { pt3dadd( 34.4445, 202.428, -56.491, 0.44 ) }
    dend_18 { pt3dadd( 34.2816, 201.583, -56.43, 0.22 ) }
    dend_18 { pt3dadd( 34.0693, 200.607, -56.3888, 0.37 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 49/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 130.986, 84.4012, -4.12964, 0.22 ) }
    dend_13 { pt3dadd( 132.194, 84.7309, -4.91587, 0.22 ) }
    dend_13 { pt3dadd( 132.62, 84.8474, -5.19376, 0.74 ) }
    dend_13 { pt3dadd( 132.847, 84.9092, -5.34129, 0.74 ) }
    dend_13 { pt3dadd( 134.628, 85.3952, -6.50043, 0.29 ) }
    dend_13 { pt3dadd( 135.065, 85.5146, -6.78511, 0.44 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 55/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 130.986, 84.4012, -4.12964, 0.22 ) }
    dend_12 { pt3dadd( 131.647, 84.0785, -3.56551, 0.22 ) }
    dend_12 { pt3dadd( 132.165, 83.8668, -3.20001, 0.66 ) }
    dend_12 { pt3dadd( 132.515, 83.737, -2.96762, 0.66 ) }
    dend_12 { pt3dadd( 132.93, 83.6102, -2.70304, 0.52 ) }
    dend_12 { pt3dadd( 133.789, 83.4465, -2.22862, 0.22 ) }
    dend_12 { pt3dadd( 134.212, 83.421, -2.02146, 0.22 ) }
    dend_12 { pt3dadd( 134.835, 83.5257, -1.76877, 0.59 ) }
    dend_12 { pt3dadd( 135.143, 83.6229, -1.65057, 0.74 ) }
    dend_12 { pt3dadd( 135.561, 83.7979, -1.47512, 0.74 ) }
    dend_12 { pt3dadd( 136.358, 84.2193, -1.10258, 0.29 ) }
    dend_12 { pt3dadd( 136.991, 84.6381, -0.769702, 0.29 ) }
    dend_12 { pt3dadd( 137.749, 85.1818, -0.353591, 0.59 ) }
    dend_12 { pt3dadd( 138.083, 85.4467, -0.152771, 0.52 ) }
    dend_12 { pt3dadd( 138.73, 85.9727, 0.252093, 0.22 ) }
    dend_12 { pt3dadd( 139.071, 86.2487, 0.495508, 0.29 ) }
    dend_12 { pt3dadd( 139.492, 86.5859, 0.887729, 0.29 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 72/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 33.9444, 102.756, 36.6489, 0.29 ) }
    dend_6 { pt3dadd( 35.7612, 110.566, 41.0713, 0.29 ) }
    dend_6 { pt3dadd( 36.5523, 119.147, 44.1706, 0.29 ) }
    dend_6 { pt3dadd( 37.1562, 127.621, 47.5887, 0.29 ) }
    dend_6 { pt3dadd( 36.7435, 135.706, 51.8705, 0.29 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 77/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 33.9444, 102.756, 36.6489, 0.44 ) }
    dend_5 { pt3dadd( 35.633, 110.375, 40.9689, 0.29 ) }
    dend_5 { pt3dadd( 37.6389, 118.012, 45.1185, 0.29 ) }
    dend_5 { pt3dadd( 40.9608, 125.725, 48.1244, 0.29 ) }
    dend_5 { pt3dadd( 43.2911, 134.217, 49.5467, 0.29 ) }
    dend_5 { pt3dadd( 46.7885, 142.423, 49.4463, 0.29 ) }
    dend_5 { pt3dadd( 49.7732, 150.826, 49.658, 0.29 ) }
    dend_5 { pt3dadd( 51.6501, 159.536, 50.0679, 0.29 ) }
    // Section: dend_91, id: dend_91, parent: dend_87 (entry count 85/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( -136.862, -210.303, -21.564, 0.29 ) }
    dend_91 { pt3dadd( -140.228, -219.17, -17.7624, 0.29 ) }
    // Section: dend_88, id: dend_88, parent: dend_87 (entry count 87/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -136.862, -210.303, -21.564, 0.44 ) }
    dend_88 { pt3dadd( -142.494, -219.616, -24.9716, 0.29 ) }
    dend_88 { pt3dadd( -145.72, -229.669, -29.2858, 0.29 ) }
    // Section: dend_72, id: dend_72, parent: dend_68 (entry count 90/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -153.374, -204.072, -8.03406, 0.66 ) }
    dend_72 { pt3dadd( -153.92, -202.592, -7.31676, 0.66 ) }
    dend_72 { pt3dadd( -154.146, -201.689, -6.93305, 0.29 ) }
    dend_72 { pt3dadd( -154.336, -200.673, -6.57644, 0.29 ) }
    dend_72 { pt3dadd( -154.35, -200.59, -6.55552, 0.29 ) }
    dend_72 { pt3dadd( -154.599, -199.015, -6.25507, 0.52 ) }
    dend_72 { pt3dadd( -154.646, -198.706, -6.21016, 0.74 ) }
    dend_72 { pt3dadd( -154.76, -197.507, -6.14976, 0.37 ) }
    dend_72 { pt3dadd( -154.844, -196.478, -6.13544, 0.37 ) }
    dend_72 { pt3dadd( -154.941, -195.465, -6.16854, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    dend_72 { pt3dadd( -154.98, -194.847, -6.21146, 0.59 ) }
    dend_72 { pt3dadd( -154.99, -194.167, -6.29179, 0.59 ) }
    dend_72 { pt3dadd( -154.941, -193.38, -6.36367, 0.59 ) }
    dend_72 { pt3dadd( -154.771, -192.338, -6.41967, 0.52 ) }
    dend_72 { pt3dadd( -154.564, -191.57, -6.42622, 0.96 ) }
    dend_72 { pt3dadd( -154.242, -190.659, -6.39431, 0.37 ) }
    dend_72 { pt3dadd( -154.003, -190.096, -6.36617, 0.29 ) }
    dend_72 { pt3dadd( -153.488, -189.039, -6.29957, 0.29 ) }
    dend_72 { pt3dadd( -153.057, -188.182, -6.24284, 0.29 ) }
    dend_72 { pt3dadd( -152.779, -187.622, -6.20643, 0.52 ) }
    dend_72 { pt3dadd( -152.748, -187.544, -6.2045, 0.52 ) }
    dend_72 { pt3dadd( -152.6, -187.077, -6.20769, 0.52 ) }
    dend_72 { pt3dadd( -152.392, -186.155, -6.23559, 0.37 ) }
    dend_72 { pt3dadd( -152.202, -185.094, -6.28197, 0.37 ) }
    dend_72 { pt3dadd( -152.19, -185.008, -6.28645, 0.37 ) }
    dend_72 { pt3dadd( -152.014, -183.299, -6.38511, 0.37 ) }
    dend_72 { pt3dadd( -151.909, -181.761, -6.48156, 0.37 ) }
    dend_72 { pt3dadd( -151.837, -179.846, -6.61023, 0.37 ) }
    dend_72 { pt3dadd( -151.834, -179.688, -6.62069, 0.37 ) }
    dend_72 { pt3dadd( -151.756, -178.204, -6.72263, 0.37 ) }
    dend_72 { pt3dadd( -151.751, -178.129, -6.72763, 0.37 ) }
    dend_72 { pt3dadd( -151.645, -177.18, -6.78396, 0.88 ) }
    dend_72 { pt3dadd( -151.616, -176.99, -6.79599, 0.88 ) }
    dend_72 { pt3dadd( -151.349, -175.818, -6.86243, 0.29 ) }
    dend_72 { pt3dadd( -150.932, -174.351, -6.92781, 0.29 ) }
    dend_72 { pt3dadd( -150.611, -173.421, -6.95814, 0.44 ) }
    dend_72 { pt3dadd( -150.362, -172.73, -6.97509, 0.44 ) }
    dend_72 { pt3dadd( -150.056, -171.919, -7.01339, 0.29 ) }
    dend_72 { pt3dadd( -150.018, -171.814, -7.02057, 0.29 ) }
    dend_72 { pt3dadd( -149.542, -170.66, -7.10196, 0.66 ) }
    dend_72 { pt3dadd( -149.412, -170.377, -7.10496, 0.66 ) }
    dend_72 { pt3dadd( -149.172, -169.885, -7.09338, 0.59 ) }
    dend_72 { pt3dadd( -148.578, -168.643, -7.02815, 0.37 ) }
    dend_72 { pt3dadd( -148.543, -168.565, -7.01848, 0.37 ) }
    dend_72 { pt3dadd( -147.79, -166.784, -6.69382, 0.37 ) }
    dend_72 { pt3dadd( -147.409, -165.745, -6.43532, 0.37 ) }
    dend_72 { pt3dadd( -147.153, -165.039, -6.22631, 0.37 ) }
    dend_72 { pt3dadd( -147.057, -164.765, -6.1227, 0.88 ) }
    dend_72 { pt3dadd( -146.799, -163.917, -5.68011, 0.74 ) }
    dend_72 { pt3dadd( -146.785, -163.842, -5.63924, 0.74 ) }
    dend_72 { pt3dadd( -146.918, -163.257, -5.27906, 0.52 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 41/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -153.374, -204.072, -8.03406, 0.52 ) }
    dend_69 { pt3dadd( -154.12, -204.637, -8.13015, 0.52 ) }
    dend_69 { pt3dadd( -154.837, -205.115, -8.21673, 0.29 ) }
    dend_69 { pt3dadd( -155.534, -205.549, -8.29795, 0.29 ) }
    dend_69 { pt3dadd( -156.622, -206.186, -8.41622, 0.44 ) }
    dend_69 { pt3dadd( -157.54, -206.718, -8.51263, 0.37 ) }
    dend_69 { pt3dadd( -157.942, -206.951, -8.55417, 0.66 ) }
    dend_69 { pt3dadd( -158.306, -207.133, -8.58771, 0.88 ) }
    dend_69 { pt3dadd( -158.773, -207.324, -8.66008, 0.88 ) }
    dend_69 { pt3dadd( -159.461, -207.569, -8.81071, 0.44 ) }
    dend_69 { pt3dadd( -160.301, -207.863, -9.04795, 0.44 ) }
    dend_69 { pt3dadd( -160.36, -207.884, -9.06736, 0.44 ) }
    dend_69 { pt3dadd( -161.083, -208.116, -9.321, 0.44 ) }
    dend_69 { pt3dadd( -162.263, -208.468, -9.74817, 0.29 ) }
    dend_69 { pt3dadd( -163.002, -208.663, -10.0141, 0.29 ) }
    dend_69 { pt3dadd( -163.933, -208.86, -10.2805, 0.29 ) }
    dend_69 { pt3dadd( -164.005, -208.871, -10.2949, 0.74 ) }
    dend_69 { pt3dadd( -164.068, -208.881, -10.3022, 0.74 ) }
    dend_69 { pt3dadd( -164.724, -209.005, -10.3751, 0.74 ) }
    dend_69 { pt3dadd( -165.303, -209.159, -10.4261, 0.74 ) }
    dend_69 { pt3dadd( -166.491, -209.543, -10.5871, 0.29 ) }
    dend_69 { pt3dadd( -167.122, -209.798, -10.7338, 0.29 ) }
    dend_69 { pt3dadd( -167.986, -210.198, -11.0009, 0.29 ) }
    dend_69 { pt3dadd( -169.085, -210.774, -11.4245, 0.29 ) }
    dend_69 { pt3dadd( -169.6, -211.074, -11.6239, 0.59 ) }
    dend_69 { pt3dadd( -169.848, -211.217, -11.7176, 0.59 ) }
    dend_69 { pt3dadd( -170.589, -211.613, -11.985, 0.37 ) }
    dend_69 { pt3dadd( -170.719, -211.658, -11.9913, 0.37 ) }
    dend_69 { pt3dadd( -171.42, -211.76, -11.8067, 0.37 ) }
    dend_69 { pt3dadd( -172.566, -211.811, -11.3792, 0.29 ) }
    dend_69 { pt3dadd( -173.274, -211.843, -10.994, 0.29 ) }
    dend_69 { pt3dadd( -173.819, -211.873, -10.6305, 0.59 ) }
    dend_69 { pt3dadd( -174.893, -211.994, -9.78355, 0.59 ) }
    dend_69 { pt3dadd( -175.482, -212.1, -9.27099, 0.59 ) }
    dend_69 { pt3dadd( -175.924, -212.238, -8.81352, 0.59 ) }
    dend_69 { pt3dadd( -177.121, -212.834, -7.47904, 0.44 ) }
    dend_69 { pt3dadd( -177.154, -212.856, -7.4419, 0.44 ) }
    dend_69 { pt3dadd( -177.634, -213.237, -6.90174, 0.44 ) }
    dend_69 { pt3dadd( -177.667, -213.264, -6.86836, 0.44 ) }
    dend_69 { pt3dadd( -178.374, -213.811, -6.23226, 0.59 ) }
    dend_69 { pt3dadd( -178.855, -214.133, -5.89095, 0.59 ) }
    dend_69 { pt3dadd( -179.572, -214.515, -5.56747, 0.29 ) }
    dend_69 { pt3dadd( -179.626, -214.539, -5.54489, 0.29 ) }
    dend_69 { pt3dadd( -180.892, -215.02, -5.11991, 0.44 ) }
    dend_69 { pt3dadd( -181.454, -215.217, -4.99313, 0.96 ) }
    dend_69 { pt3dadd( -182.022, -215.401, -4.92361, 1.33 ) }
    dend_69 { pt3dadd( -182.761, -215.641, -4.86198, 0.88 ) }
    dend_69 { pt3dadd( -183.977, -216.074, -4.82676, 0.44 ) }
    dend_69 { pt3dadd( -184.932, -216.434, -4.85995, 0.44 ) }
    dend_69 { pt3dadd( -185.967, -216.832, -4.97519, 0.52 ) }
    dend_69 { pt3dadd( -186.713, -217.088, -5.06785, 0.52 ) }
    dend_69 { pt3dadd( -186.775, -217.107, -5.07651, 0.52 ) }
    dend_69 { pt3dadd( -187.739, -217.331, -5.22748, 0.37 ) }
    dend_69 { pt3dadd( -188.446, -217.449, -5.35489, 0.37 ) }
    dend_69 { pt3dadd( -189.189, -217.516, -5.44028, 0.37 ) }
    dend_69 { pt3dadd( -190.223, -217.525, -5.47732, 0.52 ) }
    dend_69 { pt3dadd( -190.555, -217.509, -5.48126, 0.96 ) }
    dend_69 { pt3dadd( -190.923, -217.478, -5.49275, 0.96 ) }
    dend_69 { pt3dadd( -191.406, -217.416, -5.51869, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_69 { pt3dadd( -192.052, -217.35, -5.5699, 0.81 ) }
    dend_69 { pt3dadd( -193.152, -217.318, -5.689, 0.37 ) }
    dend_69 { pt3dadd( -193.205, -217.322, -5.69624, 0.37 ) }
    dend_69 { pt3dadd( -194.124, -217.434, -5.83614, 0.37 ) }
    dend_69 { pt3dadd( -194.656, -217.525, -5.9247, 0.59 ) }
    dend_69 { pt3dadd( -195.048, -217.599, -5.99329, 0.66 ) }
    dend_69 { pt3dadd( -195.658, -217.711, -6.10336, 0.52 ) }
    dend_69 { pt3dadd( -196.421, -217.817, -6.28313, 0.29 ) }
    dend_69 { pt3dadd( -196.493, -217.822, -6.2995, 0.29 ) }
    dend_69 { pt3dadd( -197.206, -217.842, -6.44708, 0.29 ) }
    dend_69 { pt3dadd( -197.916, -217.865, -6.56232, 0.44 ) }
    dend_69 { pt3dadd( -198.394, -217.894, -6.62617, 0.44 ) }
    dend_69 { pt3dadd( -199.364, -217.978, -6.73067, 0.44 ) }
    dend_69 { pt3dadd( -200.339, -218.103, -6.8131, 0.37 ) }
    dend_69 { pt3dadd( -200.789, -218.175, -6.8169, 0.37 ) }
    dend_69 { pt3dadd( -202.092, -218.397, -6.6523, 0.37 ) }
    dend_69 { pt3dadd( -202.689, -218.501, -6.4942, 0.37 ) }
    dend_69 { pt3dadd( -203.294, -218.603, -6.25238, 0.37 ) }
    dend_69 { pt3dadd( -203.825, -218.667, -5.96424, 0.37 ) }
    dend_69 { pt3dadd( -204.686, -218.708, -5.40406, 0.37 ) }
    dend_69 { pt3dadd( -205.626, -218.677, -4.74068, 0.37 ) }
    dend_69 { pt3dadd( -205.928, -218.655, -4.50924, 0.81 ) }
    dend_69 { pt3dadd( -206.154, -218.661, -4.3437, 1.11 ) }
    dend_69 { pt3dadd( -206.62, -218.735, -4.02934, 1.11 ) }
    dend_69 { pt3dadd( -206.667, -218.748, -4.00493, 1.11 ) }
    dend_69 { pt3dadd( -207.415, -219.017, -3.70463, 0.59 ) }
    dend_69 { pt3dadd( -208.542, -219.487, -3.28722, 0.44 ) }
    dend_69 { pt3dadd( -209.285, -219.795, -2.9825, 0.66 ) }
    dend_69 { pt3dadd( -209.335, -219.815, -2.9624, 0.66 ) }
    dend_69 { pt3dadd( -209.855, -220.004, -2.77496, 0.66 ) }
    dend_69 { pt3dadd( -210.704, -220.253, -2.52089, 0.44 ) }
    dend_69 { pt3dadd( -210.804, -220.28, -2.48958, 0.44 ) }
    dend_69 { pt3dadd( -211.626, -220.507, -2.25095, 0.37 ) }
    dend_69 { pt3dadd( -212.486, -220.773, -1.99454, 0.37 ) }
    dend_69 { pt3dadd( -213.285, -221.048, -1.76692, 0.88 ) }
    dend_69 { pt3dadd( -213.835, -221.257, -1.62205, 1.18 ) }
    dend_69 { pt3dadd( -215.459, -221.864, -1.21539, 0.37 ) }
    dend_69 { pt3dadd( -216.191, -222.124, -1.02235, 0.29 ) }
    dend_69 { pt3dadd( -216.656, -222.277, -0.892979, 0.81 ) }
    dend_69 { pt3dadd( -216.725, -222.296, -0.870498, 0.81 ) }
    dend_69 { pt3dadd( -217.019, -222.379, -0.755215, 0.81 ) }
    dend_69 { pt3dadd( -218.235, -222.708, -0.260048, 0.37 ) }
    dend_69 { pt3dadd( -218.695, -222.816, -0.0761469, 0.74 ) }
    dend_69 { pt3dadd( -219.189, -222.942, 0.134014, 0.74 ) }
    dend_69 { pt3dadd( -220.088, -223.171, 0.510204, 0.81 ) }
    dend_69 { pt3dadd( -221.307, -223.501, 1.01271, 0.29 ) }
    dend_69 { pt3dadd( -221.721, -223.624, 1.18287, 0.29 ) }
    dend_69 { pt3dadd( -221.77, -223.64, 1.20085, 0.29 ) }
    dend_69 { pt3dadd( -222.325, -223.843, 1.38313, 0.74 ) }
    dend_69 { pt3dadd( -222.756, -223.994, 1.52165, 0.81 ) }
    dend_69 { pt3dadd( -223.841, -224.303, 1.84679, 0.37 ) }
    dend_69 { pt3dadd( -223.903, -224.316, 1.86527, 0.37 ) }
    dend_69 { pt3dadd( -224.56, -224.452, 2.08, 0.29 ) }
    dend_69 { pt3dadd( -225.079, -224.557, 2.25973, 0.29 ) }
    dend_69 { pt3dadd( -225.869, -224.706, 2.57508, 0.52 ) }
    dend_69 { pt3dadd( -226.539, -224.842, 2.87026, 0.88 ) }
    dend_69 { pt3dadd( -226.784, -224.876, 2.9846, 1.03 ) }
    // Section: dend_62, id: dend_62, parent: dend_52 (entry count 57/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -6.60082, -129.78, -31.8054, 0.96 ) }
    dend_62 { pt3dadd( -6.01325, -132.162, -31.3605, 0.96 ) }
    dend_62 { pt3dadd( -5.6139, -133.63, -31.1119, 0.96 ) }
    dend_62 { pt3dadd( -5.24468, -134.898, -30.9331, 1.03 ) }
    dend_62 { pt3dadd( -5.00896, -135.652, -30.8594, 1.25 ) }
    dend_62 { pt3dadd( -4.70124, -136.601, -30.7883, 1.11 ) }
    dend_62 { pt3dadd( -4.20919, -137.969, -30.6961, 0.74 ) }
    dend_62 { pt3dadd( -3.78985, -139.06, -30.7197, 0.96 ) }
    dend_62 { pt3dadd( -3.43449, -139.838, -30.7603, 0.74 ) }
    dend_62 { pt3dadd( -2.8458, -141.021, -30.8761, 0.59 ) }
    dend_62 { pt3dadd( -2.81544, -141.083, -30.8868, 0.59 ) }
    dend_62 { pt3dadd( -2.16999, -142.49, -31.2121, 0.59 ) }
    dend_62 { pt3dadd( -1.72197, -143.741, -31.6016, 0.59 ) }
    dend_62 { pt3dadd( -1.70843, -143.797, -31.6226, 0.59 ) }
    dend_62 { pt3dadd( -1.51042, -144.967, -32.0164, 0.88 ) }
    dend_62 { pt3dadd( -1.38496, -146.128, -32.3728, 0.88 ) }
    dend_62 { pt3dadd( -1.33562, -146.834, -32.5787, 0.88 ) }
    dend_62 { pt3dadd( -1.28452, -147.983, -32.8674, 0.66 ) }
    dend_62 { pt3dadd( -1.17151, -149.181, -33.0535, 0.52 ) }
    dend_62 { pt3dadd( -0.980034, -150.36, -33.1456, 1.11 ) }
    dend_62 { pt3dadd( -0.852183, -150.916, -33.1413, 1.11 ) }
    dend_62 { pt3dadd( -0.61433, -151.784, -33.0946, 0.88 ) }
    dend_62 { pt3dadd( -0.259031, -152.935, -33.0382, 0.81 ) }
    dend_62 { pt3dadd( 0.074007, -153.975, -33.0146, 0.88 ) }
    dend_62 { pt3dadd( 0.300342, -154.74, -33.0793, 1.03 ) }
    dend_62 { pt3dadd( 0.607512, -155.924, -33.3018, 0.74 ) }
    dend_62 { pt3dadd( 0.822564, -156.803, -33.5224, 0.59 ) }
    dend_62 { pt3dadd( 1.06889, -157.814, -33.8473, 0.52 ) }
    dend_62 { pt3dadd( 1.24067, -158.589, -34.1701, 0.74 ) }
    dend_62 { pt3dadd( 1.52969, -159.946, -34.828, 0.66 ) }
    dend_62 { pt3dadd( 1.73033, -160.89, -35.3141, 0.74 ) }
    dend_62 { pt3dadd( 1.91545, -161.709, -35.7301, 0.81 ) }
    dend_62 { pt3dadd( 2.10713, -162.481, -36.0714, 1.11 ) }
    dend_62 { pt3dadd( 2.33683, -163.323, -36.3864, 0.88 ) }
    dend_62 { pt3dadd( 2.35143, -163.387, -36.4107, 0.88 ) }
    dend_62 { pt3dadd( 2.49437, -164.351, -36.8523, 0.59 ) }
    dend_62 { pt3dadd( 2.56221, -165.329, -37.3786, 0.59 ) }
    dend_62 { pt3dadd( 2.58533, -166.325, -37.9582, 0.81 ) }
    dend_62 { pt3dadd( 2.59719, -167.54, -38.6902, 1.03 ) }
    dend_62 { pt3dadd( 2.62879, -169.727, -40.1094, 1.03 ) }
    dend_62 { pt3dadd( 2.67809, -171.314, -41.1933, 0.81 ) }
    dend_62 { pt3dadd( 2.74162, -172.609, -42.1425, 0.59 ) }
    dend_62 { pt3dadd( 2.74502, -172.666, -42.1852, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_62 { pt3dadd( 2.82039, -173.612, -42.864, 0.74 ) }
    dend_62 { pt3dadd( 2.98098, -174.698, -43.548, 0.66 ) }
    dend_62 { pt3dadd( 3.25455, -175.789, -44.1078, 0.66 ) }
    dend_62 { pt3dadd( 3.56121, -176.888, -44.6183, 0.66 ) }
    dend_62 { pt3dadd( 3.80994, -177.854, -45.0279, 0.96 ) }
    dend_62 { pt3dadd( 3.96027, -178.661, -45.321, 1.18 ) }
    dend_62 { pt3dadd( 4.03754, -179.684, -45.6285, 1.03 ) }
    dend_62 { pt3dadd( 3.98088, -180.598, -45.8373, 0.88 ) }
    dend_62 { pt3dadd( 3.77484, -181.676, -46.0438, 0.66 ) }
    dend_62 { pt3dadd( 3.58933, -182.35, -46.1468, 0.74 ) }
    dend_62 { pt3dadd( 3.17972, -183.658, -46.3317, 0.74 ) }
    dend_62 { pt3dadd( 2.85937, -184.669, -46.4524, 0.81 ) }
    dend_62 { pt3dadd( 2.44814, -186.056, -46.5853, 0.81 ) }
    dend_62 { pt3dadd( 2.16536, -187.279, -46.6955, 1.03 ) }
    dend_62 { pt3dadd( 2.05149, -188.137, -46.7773, 1.11 ) }
    dend_62 { pt3dadd( 2.02451, -189.059, -46.8997, 0.81 ) }
    dend_62 { pt3dadd( 2.13231, -190.493, -47.1308, 0.66 ) }
    dend_62 { pt3dadd( 2.33934, -191.613, -47.322, 0.81 ) }
    dend_62 { pt3dadd( 2.5718, -192.398, -47.4879, 0.81 ) }
    dend_62 { pt3dadd( 2.87207, -193.182, -47.7023, 0.81 ) }
    dend_62 { pt3dadd( 3.10835, -193.694, -47.8758, 1.03 ) }
    dend_62 { pt3dadd( 3.14041, -193.752, -47.9, 1.03 ) }
    dend_62 { pt3dadd( 3.61171, -194.464, -48.2639, 0.74 ) }
    dend_62 { pt3dadd( 4.14075, -195.226, -48.7554, 0.44 ) }
    dend_62 { pt3dadd( 4.31105, -195.477, -48.9393, 0.74 ) }
    dend_62 { pt3dadd( 4.3415, -195.526, -48.9809, 0.74 ) }
    dend_62 { pt3dadd( 4.56279, -195.939, -49.3273, 0.74 ) }
    dend_62 { pt3dadd( 4.5908, -195.997, -49.3734, 0.74 ) }
    dend_62 { pt3dadd( 5.13612, -197.189, -50.2169, 0.59 ) }
    dend_62 { pt3dadd( 5.29607, -197.563, -50.4497, 0.88 ) }
    dend_62 { pt3dadd( 5.62285, -198.402, -50.9039, 0.88 ) }
    dend_62 { pt3dadd( 6.01961, -199.517, -51.4149, 0.66 ) }
    dend_62 { pt3dadd( 6.27514, -200.319, -51.7147, 0.74 ) }
    dend_62 { pt3dadd( 6.55786, -201.39, -52.0686, 0.88 ) }
    dend_62 { pt3dadd( 6.6854, -202.153, -52.3063, 0.44 ) }
    dend_62 { pt3dadd( 6.7246, -202.849, -52.554, 0.44 ) }
    dend_62 { pt3dadd( 6.69258, -203.655, -52.8586, 0.52 ) }
    dend_62 { pt3dadd( 6.60133, -204.309, -53.1558, 0.81 ) }
    dend_62 { pt3dadd( 6.38915, -205.456, -53.7458, 1.03 ) }
    dend_62 { pt3dadd( 6.1513, -206.736, -54.4786, 0.88 ) }
    dend_62 { pt3dadd( 5.98473, -207.931, -55.2078, 0.59 ) }
    dend_62 { pt3dadd( 5.93263, -208.576, -55.6233, 0.74 ) }
    dend_62 { pt3dadd( 5.96943, -209.721, -56.3622, 0.52 ) }
    dend_62 { pt3dadd( 6.08329, -210.34, -56.7429, 0.52 ) }
    dend_62 { pt3dadd( 6.39763, -211.148, -57.1759, 0.81 ) }
    dend_62 { pt3dadd( 6.73744, -211.734, -57.4594, 1.03 ) }
    dend_62 { pt3dadd( 7.00726, -212.102, -57.6313, 1.03 ) }
    dend_62 { pt3dadd( 7.81839, -213.095, -58.0935, 0.52 ) }
    dend_62 { pt3dadd( 8.13471, -213.483, -58.268, 0.66 ) }
    dend_62 { pt3dadd( 8.62501, -214.142, -58.5697, 0.66 ) }
    dend_62 { pt3dadd( 8.6664, -214.205, -58.5982, 0.66 ) }
    dend_62 { pt3dadd( 9.02929, -214.822, -58.8792, 0.81 ) }
    dend_62 { pt3dadd( 9.4587, -215.64, -59.2582, 0.59 ) }
    dend_62 { pt3dadd( 9.93869, -216.67, -59.7541, 0.37 ) }
    dend_62 { pt3dadd( 10.193, -217.209, -60.0182, 0.88 ) }
    dend_62 { pt3dadd( 10.5099, -217.841, -60.3688, 1.18 ) }
    dend_62 { pt3dadd( 10.5401, -217.893, -60.4023, 1.18 ) }
    dend_62 { pt3dadd( 10.7988, -218.359, -60.7944, 1.11 ) }
    dend_62 { pt3dadd( 11.0242, -218.835, -61.306, 0.96 ) }
    dend_62 { pt3dadd( 11.0419, -218.88, -61.359, 0.96 ) }
    dend_62 { pt3dadd( 11.3038, -219.732, -62.4024, 0.59 ) }
    dend_62 { pt3dadd( 11.4317, -220.272, -63.0278, 0.81 ) }
    dend_62 { pt3dadd( 11.6906, -221.687, -64.4743, 0.59 ) }
    dend_62 { pt3dadd( 11.7858, -222.408, -65.1017, 0.88 ) }
    dend_62 { pt3dadd( 11.8291, -222.928, -65.4698, 0.88 ) }
    dend_62 { pt3dadd( 11.8675, -223.53, -65.8029, 0.81 ) }
    dend_62 { pt3dadd( 11.9054, -224.381, -66.1281, 0.59 ) }
    dend_62 { pt3dadd( 11.958, -225.289, -66.3574, 0.66 ) }
    dend_62 { pt3dadd( 12.0627, -226.352, -66.5109, 1.03 ) }
    dend_62 { pt3dadd( 12.1401, -227.019, -66.6028, 1.33 ) }
    dend_62 { pt3dadd( 12.2006, -227.589, -66.6919, 1.18 ) }
    dend_62 { pt3dadd( 12.2569, -228.354, -66.8526, 0.81 ) }
    dend_62 { pt3dadd( 12.2831, -229.327, -67.1836, 0.59 ) }
    dend_62 { pt3dadd( 12.3248, -230.233, -67.6248, 0.74 ) }
    dend_62 { pt3dadd( 12.3942, -230.778, -67.9364, 0.96 ) }
    dend_62 { pt3dadd( 12.4051, -230.827, -67.9668, 0.96 ) }
    dend_62 { pt3dadd( 12.6993, -231.787, -68.5814, 0.96 ) }
    dend_62 { pt3dadd( 13.2836, -233.282, -69.588, 0.74 ) }
    dend_62 { pt3dadd( 13.7893, -234.337, -70.3424, 0.74 ) }
    dend_62 { pt3dadd( 14.3018, -235.272, -71.0195, 0.88 ) }
    dend_62 { pt3dadd( 14.8282, -236.108, -71.5188, 0.88 ) }
    dend_62 { pt3dadd( 15.4378, -236.981, -71.9157, 0.59 ) }
    dend_62 { pt3dadd( 15.9466, -237.638, -72.0344, 0.59 ) }
    dend_62 { pt3dadd( 16.4231, -238.251, -71.96, 0.59 ) }
    dend_62 { pt3dadd( 16.4547, -238.298, -71.9452, 0.59 ) }
    dend_62 { pt3dadd( 17.5317, -240.332, -71.0887, 0.52 ) }
    dend_62 { pt3dadd( 17.888, -241.225, -70.6382, 0.52 ) }
    dend_62 { pt3dadd( 18.3087, -242.98, -69.7844, 1.18 ) }
    dend_62 { pt3dadd( 18.4304, -244.038, -69.3284, 1.18 ) }
    dend_62 { pt3dadd( 18.4308, -244.973, -69.052, 0.52 ) }
    dend_62 { pt3dadd( 18.2862, -246.353, -68.9519, 0.52 ) }
    dend_62 { pt3dadd( 18.0793, -247.443, -69.1183, 0.66 ) }
    dend_62 { pt3dadd( 17.7076, -249.189, -69.6418, 0.66 ) }
    dend_62 { pt3dadd( 17.4808, -250.166, -70.1117, 0.66 ) }
    dend_62 { pt3dadd( 17.1361, -251.838, -71.1016, 0.66 ) }
    dend_62 { pt3dadd( 16.8735, -253.575, -72.3254, 0.74 ) }
    dend_62 { pt3dadd( 16.829, -254.175, -72.8147, 1.03 ) }
    dend_62 { pt3dadd( 16.8339, -254.712, -73.2944, 1.03 ) }
    dend_62 { pt3dadd( 16.944, -255.766, -74.278, 0.66 ) }
    dend_62 { pt3dadd( 17.0508, -256.486, -74.9781, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    dend_62 { pt3dadd( 17.2066, -257.141, -75.5773, 0.74 ) }
    dend_62 { pt3dadd( 17.3792, -257.716, -76.0618, 1.03 ) }
    dend_62 { pt3dadd( 17.3962, -257.766, -76.1056, 1.03 ) }
    dend_62 { pt3dadd( 17.5036, -257.974, -76.299, 1.25 ) }
    dend_62 { pt3dadd( 17.5496, -258.023, -76.3434, 1.25 ) }
    dend_62 { pt3dadd( 17.8897, -258.321, -76.6121, 1.25 ) }
    dend_62 { pt3dadd( 17.935, -258.364, -76.6431, 1.25 ) }
    dend_62 { pt3dadd( 18.2885, -258.733, -76.8725, 1.25 ) }
    dend_62 { pt3dadd( 18.6236, -259.142, -77.0826, 1.25 ) }
    dend_62 { pt3dadd( 19.4334, -260.236, -77.5173, 0.59 ) }
    dend_62 { pt3dadd( 20.0661, -261.099, -77.8277, 0.59 ) }
    dend_62 { pt3dadd( 20.7653, -262.071, -78.1442, 0.66 ) }
    dend_62 { pt3dadd( 21.3124, -262.81, -78.381, 0.66 ) }
    dend_62 { pt3dadd( 22.0318, -263.735, -78.6808, 0.59 ) }
    dend_62 { pt3dadd( 22.6416, -264.477, -78.9245, 0.44 ) }
    dend_62 { pt3dadd( 23.2318, -265.077, -79.1597, 0.29 ) }
    dend_62 { pt3dadd( 23.2796, -265.11, -79.1804, 0.29 ) }
    dend_62 { pt3dadd( 24.0592, -265.392, -79.5329, 0.59 ) }
    dend_62 { pt3dadd( 24.7961, -265.587, -79.8864, 0.74 ) }
    dend_62 { pt3dadd( 24.8603, -265.602, -79.9136, 0.74 ) }
    dend_62 { pt3dadd( 25.8153, -265.845, -80.2947, 0.74 ) }
    dend_62 { pt3dadd( 25.8785, -265.864, -80.313, 0.74 ) }
    dend_62 { pt3dadd( 27.4682, -266.329, -80.6114, 0.59 ) }
    dend_62 { pt3dadd( 28.2973, -266.572, -80.707, 0.81 ) }
    dend_62 { pt3dadd( 29.6465, -267.007, -80.7886, 0.66 ) }
    dend_62 { pt3dadd( 29.7214, -267.031, -80.7924, 0.66 ) }
    dend_62 { pt3dadd( 31.0932, -267.442, -80.8153, 1.03 ) }
    dend_62 { pt3dadd( 32.1442, -267.691, -80.7744, 1.47 ) }
    dend_62 { pt3dadd( 32.7031, -267.801, -80.6923, 1.55 ) }
    dend_62 { pt3dadd( 33.9261, -268.034, -80.4352, 0.29 ) }
    dend_62 { pt3dadd( 34.8088, -268.206, -80.2183, 0.59 ) }
    dend_62 { pt3dadd( 36.1038, -268.476, -79.8908, 0.81 ) }
    dend_62 { pt3dadd( 37.6542, -268.815, -79.4743, 1.18 ) }
    dend_62 { pt3dadd( 39.6284, -269.297, -78.9379, 0.44 ) }
    dend_62 { pt3dadd( 40.9545, -269.641, -78.5664, 0.59 ) }
    dend_62 { pt3dadd( 41.0209, -269.659, -78.5488, 0.59 ) }
    dend_62 { pt3dadd( 41.7775, -269.951, -78.3817, 0.81 ) }
    dend_62 { pt3dadd( 41.8289, -269.979, -78.3762, 0.81 ) }
    dend_62 { pt3dadd( 42.5487, -270.451, -78.4023, 0.37 ) }
    dend_62 { pt3dadd( 43.3063, -270.982, -78.5212, 0.88 ) }
    dend_62 { pt3dadd( 43.8585, -271.417, -78.6221, 1.33 ) }
    dend_62 { pt3dadd( 44.3962, -271.898, -78.7205, 1.47 ) }
    dend_62 { pt3dadd( 45.4619, -272.981, -78.9783, 0.88 ) }
    dend_62 { pt3dadd( 45.5087, -273.033, -78.993, 0.88 ) }
    dend_62 { pt3dadd( 45.9227, -273.522, -79.166, 1.03 ) }
    dend_62 { pt3dadd( 46.5369, -274.333, -79.5294, 0.44 ) }
    dend_62 { pt3dadd( 47.1222, -275.173, -79.9615, 0.44 ) }
    dend_62 { pt3dadd( 47.5776, -275.911, -80.3893, 0.66 ) }
    dend_62 { pt3dadd( 47.6069, -275.963, -80.4243, 0.66 ) }
    dend_62 { pt3dadd( 47.8978, -276.44, -80.7481, 0.44 ) }
    dend_62 { pt3dadd( 48.2344, -276.953, -81.1033, 0.81 ) }
    dend_62 { pt3dadd( 48.4609, -277.253, -81.3168, 0.96 ) }
    dend_62 { pt3dadd( 48.8262, -277.7, -81.6211, 1.11 ) }
    dend_62 { pt3dadd( 49.3162, -278.286, -81.9655, 0.29 ) }
    dend_62 { pt3dadd( 49.7186, -278.785, -82.2484, 0.22 ) }
    dend_62 { pt3dadd( 49.7584, -278.837, -82.2763, 0.22 ) }
    dend_62 { pt3dadd( 50.2604, -279.46, -82.6292, 1.47 ) }
    dend_62 { pt3dadd( 50.3019, -279.507, -82.6583, 1.47 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 58/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -6.60082, -129.78, -31.8054, 0.44 ) }
    dend_53 { pt3dadd( -6.77828, -130.766, -32.6957, 0.44 ) }
    dend_53 { pt3dadd( -6.91976, -131.746, -33.6, 0.59 ) }
    dend_53 { pt3dadd( -7.16978, -134.301, -35.9649, 0.59 ) }
    dend_53 { pt3dadd( -7.23785, -135.481, -37.0431, 0.81 ) }
    dend_53 { pt3dadd( -7.27516, -136.974, -38.402, 0.81 ) }
    dend_53 { pt3dadd( -7.2761, -138.37, -39.6521, 0.88 ) }
    dend_53 { pt3dadd( -7.24991, -139.172, -40.345, 1.03 ) }
    dend_53 { pt3dadd( -7.13466, -140.356, -41.3549, 0.52 ) }
    dend_53 { pt3dadd( -7.02308, -140.889, -41.77, 0.88 ) }
    dend_53 { pt3dadd( -6.83335, -141.74, -42.4198, 0.88 ) }
    dend_53 { pt3dadd( -6.75179, -142.214, -42.7445, 0.88 ) }
    dend_53 { pt3dadd( -6.7549, -142.276, -42.7808, 0.88 ) }
    dend_53 { pt3dadd( -7.08012, -143.136, -43.2902, 0.44 ) }
    dend_53 { pt3dadd( -7.42342, -143.726, -43.6873, 0.74 ) }
    dend_53 { pt3dadd( -7.81078, -144.407, -44.211, 0.74 ) }
    dend_53 { pt3dadd( -8.23613, -145.254, -44.9425, 0.96 ) }
    dend_53 { pt3dadd( -8.69737, -146.408, -46.0582, 0.96 ) }
    dend_53 { pt3dadd( -8.9944, -147.575, -47.2412, 0.96 ) }
    dend_53 { pt3dadd( -9.16954, -148.718, -48.4495, 0.96 ) }
    dend_53 { pt3dadd( -9.21507, -150.023, -49.7946, 0.88 ) }
    dend_53 { pt3dadd( -9.12903, -151.275, -51.0245, 0.88 ) }
    dend_53 { pt3dadd( -8.97431, -152.394, -52.0351, 0.59 ) }
    dend_53 { pt3dadd( -8.77509, -153.533, -52.9981, 0.59 ) }
    dend_53 { pt3dadd( -8.62903, -154.426, -53.6968, 0.96 ) }
    dend_53 { pt3dadd( -8.51772, -155.34, -54.3505, 1.25 ) }
    dend_53 { pt3dadd( -8.46618, -156.243, -54.9391, 1.33 ) }
    dend_53 { pt3dadd( -8.42172, -157.561, -55.7227, 0.96 ) }
    dend_53 { pt3dadd( -8.3934, -158.575, -56.2995, 0.81 ) }
    dend_53 { pt3dadd( -8.34725, -159.679, -56.951, 0.88 ) }
    dend_53 { pt3dadd( -8.24831, -160.192, -57.268, 1.11 ) }
    dend_53 { pt3dadd( -8.23327, -160.234, -57.3001, 1.11 ) }
    dend_53 { pt3dadd( -7.87316, -160.845, -57.8285, 1.11 ) }
    dend_53 { pt3dadd( -7.49515, -161.264, -58.209, 1.25 ) }
    dend_53 { pt3dadd( -7.4045, -161.349, -58.2979, 1.25 ) }
    dend_53 { pt3dadd( -6.80085, -161.909, -59.0041, 1.33 ) }
    dend_53 { pt3dadd( -6.25485, -162.513, -59.8574, 1.03 ) }
    dend_53 { pt3dadd( -6.00429, -162.898, -60.4276, 0.59 ) }
    dend_53 { pt3dadd( -5.87297, -163.222, -60.9313, 0.81 ) }
    dend_53 { pt3dadd( -5.76324, -164.124, -62.3607, 0.81 ) }
    dend_53 { pt3dadd( -5.8664, -164.845, -63.4852, 1.11 ) }
    dend_53 { pt3dadd( -6.14895, -165.626, -64.634, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_53 { pt3dadd( -6.58128, -166.572, -65.9182, 0.59 ) }
    dend_53 { pt3dadd( -6.85488, -167.134, -66.6636, 0.81 ) }
    dend_53 { pt3dadd( -7.32592, -168.095, -67.9553, 0.96 ) }
    dend_53 { pt3dadd( -7.66784, -168.906, -69.0042, 0.81 ) }
    dend_53 { pt3dadd( -8.00195, -169.999, -70.3146, 0.37 ) }
    dend_53 { pt3dadd( -8.16703, -171.006, -71.443, 1.03 ) }
    dend_53 { pt3dadd( -8.18241, -172.441, -72.9112, 0.96 ) }
    dend_53 { pt3dadd( -8.01358, -173.886, -74.2967, 1.18 ) }
    dend_53 { pt3dadd( -7.78134, -174.941, -75.2794, 1.18 ) }
    dend_53 { pt3dadd( -7.46289, -176.037, -76.2884, 1.18 ) }
    dend_53 { pt3dadd( -7.11459, -177.068, -77.2302, 0.81 ) }
    dend_53 { pt3dadd( -6.68786, -178.209, -78.2269, 0.66 ) }
    dend_53 { pt3dadd( -6.43169, -178.848, -78.7436, 0.96 ) }
    dend_53 { pt3dadd( -5.89433, -180.077, -79.6898, 1.25 ) }
    dend_53 { pt3dadd( -5.87072, -180.13, -79.7326, 1.25 ) }
    dend_53 { pt3dadd( -5.38697, -181.07, -80.4974, 1.11 ) }
    dend_53 { pt3dadd( -4.99773, -181.807, -81.0161, 0.81 ) }
    dend_53 { pt3dadd( -4.7449, -182.308, -81.3137, 1.25 ) }
    dend_53 { pt3dadd( -4.44419, -182.947, -81.5981, 1.25 ) }
    dend_53 { pt3dadd( -4.17858, -183.61, -81.7809, 0.66 ) }
    dend_53 { pt3dadd( -4.00867, -184.302, -81.9662, 0.59 ) }
    dend_53 { pt3dadd( -3.97064, -185.199, -82.1714, 0.59 ) }
    dend_53 { pt3dadd( -4.03011, -185.637, -82.2806, 0.88 ) }
    dend_53 { pt3dadd( -4.04538, -185.703, -82.2989, 0.88 ) }
    dend_53 { pt3dadd( -4.2599, -186.544, -82.5862, 0.88 ) }
    dend_53 { pt3dadd( -4.54746, -188.036, -83.2117, 0.59 ) }
    dend_53 { pt3dadd( -4.59591, -188.688, -83.5589, 0.44 ) }
    dend_53 { pt3dadd( -4.58975, -188.803, -83.6255, 0.44 ) }
    dend_53 { pt3dadd( -4.50741, -189.388, -83.9733, 0.74 ) }
    dend_53 { pt3dadd( -4.32712, -190.301, -84.492, 0.96 ) }
    dend_53 { pt3dadd( -4.15795, -191.064, -84.9432, 0.96 ) }
    dend_53 { pt3dadd( -3.88295, -192.227, -85.574, 0.59 ) }
    dend_53 { pt3dadd( -3.76113, -192.843, -85.904, 0.88 ) }
    dend_53 { pt3dadd( -3.75131, -192.905, -85.9359, 0.88 ) }
    dend_53 { pt3dadd( -3.65781, -193.568, -86.2567, 0.96 ) }
    dend_53 { pt3dadd( -3.50455, -195.11, -86.9814, 0.59 ) }
    dend_53 { pt3dadd( -3.42969, -195.987, -87.4009, 1.03 ) }
    dend_53 { pt3dadd( -3.3485, -196.667, -87.7262, 1.18 ) }
    dend_53 { pt3dadd( -3.18022, -197.796, -88.2889, 0.88 ) }
    dend_53 { pt3dadd( -3.03079, -198.765, -88.7599, 0.74 ) }
    dend_53 { pt3dadd( -2.87083, -199.811, -89.2463, 0.66 ) }
    dend_53 { pt3dadd( -2.69228, -201.147, -89.7944, 0.52 ) }
    dend_53 { pt3dadd( -2.62856, -201.969, -90.1129, 0.81 ) }
    dend_53 { pt3dadd( -2.63027, -202.829, -90.4242, 0.37 ) }
    dend_53 { pt3dadd( -2.72496, -203.565, -90.6585, 0.37 ) }
    dend_53 { pt3dadd( -2.84502, -204.094, -90.8102, 0.88 ) }
    dend_53 { pt3dadd( -3.00778, -204.595, -90.9414, 1.18 ) }
    dend_53 { pt3dadd( -3.27198, -205.192, -91.0859, 1.33 ) }
    dend_53 { pt3dadd( -3.75109, -206.211, -91.3675, 0.88 ) }
    dend_53 { pt3dadd( -4.24985, -207.326, -91.7424, 0.74 ) }
    dend_53 { pt3dadd( -4.27752, -207.388, -91.7653, 0.74 ) }
    dend_53 { pt3dadd( -4.91833, -208.864, -92.3448, 0.52 ) }
    dend_53 { pt3dadd( -5.32061, -209.801, -92.7309, 0.66 ) }
    dend_53 { pt3dadd( -6.02989, -211.495, -93.4467, 0.59 ) }
    dend_53 { pt3dadd( -6.38263, -212.457, -93.8434, 0.88 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 55/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 12.1184, -174.761, -40.8496, 0.37 ) }
    dend_51 { pt3dadd( 13.3186, -175.056, -40.6129, 0.37 ) }
    dend_51 { pt3dadd( 14.6302, -175.468, -40.361, 0.59 ) }
    dend_51 { pt3dadd( 15.4279, -175.727, -40.2273, 0.59 ) }
    dend_51 { pt3dadd( 16.8569, -176.164, -40.0254, 0.59 ) }
    dend_51 { pt3dadd( 17.0483, -176.221, -40.0014, 0.59 ) }
    dend_51 { pt3dadd( 18.0742, -176.508, -39.9188, 0.22 ) }
    dend_51 { pt3dadd( 18.5943, -176.612, -39.9644, 0.44 ) }
    dend_51 { pt3dadd( 19.4111, -176.706, -40.2109, 0.44 ) }
    dend_51 { pt3dadd( 20.016, -176.749, -40.4978, 0.81 ) }
    dend_51 { pt3dadd( 20.1154, -176.746, -40.5558, 0.81 ) }
    dend_51 { pt3dadd( 20.8071, -176.624, -41.0382, 0.96 ) }
    dend_51 { pt3dadd( 22.2817, -176.188, -42.3049, 0.52 ) }
    dend_51 { pt3dadd( 22.7602, -176.024, -42.7444, 0.52 ) }
    dend_51 { pt3dadd( 22.8255, -176.0, -42.806, 0.52 ) }
    dend_51 { pt3dadd( 23.6353, -175.695, -43.5698, 0.44 ) }
    dend_51 { pt3dadd( 25.1343, -175.107, -44.9237, 0.74 ) }
    dend_51 { pt3dadd( 26.5246, -174.53, -46.2108, 0.29 ) }
    dend_51 { pt3dadd( 27.1282, -174.262, -46.7551, 0.29 ) }
    dend_51 { pt3dadd( 27.5397, -174.096, -47.1261, 0.59 ) }
    dend_51 { pt3dadd( 27.5978, -174.078, -47.1791, 0.59 ) }
    dend_51 { pt3dadd( 28.0257, -174.002, -47.6114, 1.18 ) }
    dend_51 { pt3dadd( 29.3966, -173.921, -48.9197, 1.11 ) }
    dend_51 { pt3dadd( 30.1512, -173.944, -49.6662, 0.37 ) }
    dend_51 { pt3dadd( 31.2015, -174.028, -50.7223, 0.29 ) }
    dend_51 { pt3dadd( 32.4292, -174.165, -51.9083, 1.11 ) }
    dend_51 { pt3dadd( 34.0882, -174.368, -53.4163, 0.66 ) }
    dend_51 { pt3dadd( 35.1596, -174.519, -54.3408, 0.44 ) }
    dend_51 { pt3dadd( 36.5466, -174.725, -55.5168, 1.18 ) }
    dend_51 { pt3dadd( 37.0698, -174.799, -55.9802, 1.62 ) }
    dend_51 { pt3dadd( 37.8492, -174.873, -56.6602, 1.18 ) }
    dend_51 { pt3dadd( 38.7733, -174.91, -57.3988, 0.74 ) }
    dend_51 { pt3dadd( 38.839, -174.909, -57.4468, 0.74 ) }
    dend_51 { pt3dadd( 40.5149, -174.836, -58.8658, 0.59 ) }
    dend_51 { pt3dadd( 40.5757, -174.83, -58.9195, 0.59 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 90/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 12.1184, -174.761, -40.8496, 0.59 ) }
    dend_50 { pt3dadd( 12.5801, -176.477, -40.46, 0.59 ) }
    dend_50 { pt3dadd( 12.9917, -177.326, -40.0716, 0.66 ) }
    dend_50 { pt3dadd( 13.2821, -177.743, -39.7978, 1.03 ) }
    dend_50 { pt3dadd( 13.3945, -177.899, -39.6799, 1.03 ) }
    dend_50 { pt3dadd( 13.6455, -178.2, -39.3555, 1.03 ) }
    dend_50 { pt3dadd( 14.3493, -178.981, -38.3707, 0.74 ) }
    dend_50 { pt3dadd( 15.48, -180.08, -36.6086, 1.03 ) }
    dend_50 { pt3dadd( 16.3619, -180.7, -35.3143, 1.11 ) }
    dend_50 { pt3dadd( 16.7508, -180.961, -34.7562, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_50 { pt3dadd( 18.3564, -182.109, -32.3638, 0.74 ) }
    dend_50 { pt3dadd( 18.4156, -182.153, -32.2727, 0.74 ) }
    dend_50 { pt3dadd( 19.0293, -182.654, -31.3077, 0.66 ) }
    dend_50 { pt3dadd( 21.3544, -184.957, -27.784, 0.66 ) }
    dend_50 { pt3dadd( 21.9585, -185.667, -26.9405, 0.52 ) }
    dend_50 { pt3dadd( 22.639, -186.59, -26.1255, 0.74 ) }
    dend_50 { pt3dadd( 22.6706, -186.644, -26.0952, 0.74 ) }
    dend_50 { pt3dadd( 23.0701, -187.417, -25.7752, 0.88 ) }
    dend_50 { pt3dadd( 23.9484, -189.412, -25.2647, 0.52 ) }
    dend_50 { pt3dadd( 24.2543, -190.387, -25.1754, 0.52 ) }
    dend_50 { pt3dadd( 24.5986, -191.405, -25.0966, 0.52 ) }
    dend_50 { pt3dadd( 24.9383, -192.388, -25.0549, 0.44 ) }
    dend_50 { pt3dadd( 25.177, -193.153, -25.0291, 0.37 ) }
    dend_50 { pt3dadd( 25.5852, -194.498, -24.9752, 0.37 ) }
    dend_50 { pt3dadd( 25.903, -195.57, -24.9653, 0.59 ) }
    dend_50 { pt3dadd( 26.1146, -196.198, -24.9485, 0.88 ) }
    dend_50 { pt3dadd( 26.1423, -196.263, -24.9431, 0.88 ) }
    dend_50 { pt3dadd( 26.4131, -196.799, -24.8797, 0.96 ) }
    dend_50 { pt3dadd( 27.3017, -198.221, -24.5389, 0.44 ) }
    dend_50 { pt3dadd( 27.8434, -198.971, -24.3055, 0.59 ) }
    dend_50 { pt3dadd( 27.8817, -199.016, -24.2868, 0.59 ) }
    dend_50 { pt3dadd( 28.8409, -200.096, -23.8515, 0.81 ) }
    dend_50 { pt3dadd( 29.1635, -200.471, -23.6984, 0.96 ) }
    dend_50 { pt3dadd( 30.4794, -202.082, -23.0597, 0.52 ) }
    dend_50 { pt3dadd( 30.7613, -202.466, -22.9154, 0.74 ) }
    dend_50 { pt3dadd( 31.6295, -203.799, -22.4475, 0.52 ) }
    dend_50 { pt3dadd( 32.1124, -204.673, -22.2256, 0.74 ) }
    dend_50 { pt3dadd( 32.4939, -205.477, -22.0688, 0.44 ) }
    dend_50 { pt3dadd( 32.8139, -206.179, -21.9017, 0.29 ) }
    dend_50 { pt3dadd( 33.0198, -206.624, -21.7655, 0.37 ) }
    dend_50 { pt3dadd( 33.3885, -207.271, -21.4429, 0.59 ) }
    dend_50 { pt3dadd( 33.9081, -208.038, -20.9738, 0.59 ) }
    dend_50 { pt3dadd( 34.8871, -209.251, -20.1597, 0.81 ) }
    dend_50 { pt3dadd( 36.0959, -210.486, -19.3113, 0.44 ) }
    dend_50 { pt3dadd( 37.4286, -211.607, -18.5236, 0.88 ) }
    dend_50 { pt3dadd( 39.0757, -212.76, -17.7063, 0.74 ) }
    dend_50 { pt3dadd( 39.8148, -213.155, -17.4459, 0.29 ) }
    dend_50 { pt3dadd( 40.9823, -213.599, -17.2385, 0.37 ) }
    dend_50 { pt3dadd( 42.0157, -213.701, -17.5652, 0.37 ) }
    dend_50 { pt3dadd( 42.7113, -213.587, -18.0926, 0.66 ) }
    dend_50 { pt3dadd( 42.7601, -213.572, -18.142, 0.66 ) }
    dend_50 { pt3dadd( 43.4401, -213.265, -19.014, 0.29 ) }
    dend_50 { pt3dadd( 43.4881, -213.242, -19.0744, 0.29 ) }
    dend_50 { pt3dadd( 44.282, -212.818, -19.9734, 0.15 ) }
    dend_50 { pt3dadd( 44.985, -212.365, -20.8699, 0.15 ) }
    dend_50 { pt3dadd( 51.3209, -218.897, -17.31, 0.15 ) }
    dend_50 { pt3dadd( 57.0194, -225.619, -13.0876, 0.15 ) }
    dend_50 { pt3dadd( 62.9491, -233.005, -10.6865, 0.15 ) }
    dend_50 { pt3dadd( 70.7628, -238.513, -8.66428, 0.15 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 49/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -19.9396, -440.209, -60.9948, 1.18 ) }
    dend_46 { pt3dadd( -18.9692, -441.748, -60.967, 1.18 ) }
    dend_46 { pt3dadd( -17.9343, -443.286, -60.9136, 0.96 ) }
    dend_46 { pt3dadd( -17.4837, -443.93, -60.9031, 1.47 ) }
    dend_46 { pt3dadd( -16.9403, -444.7, -60.9121, 1.84 ) }
    dend_46 { pt3dadd( -16.274, -445.633, -60.9386, 1.33 ) }
    dend_46 { pt3dadd( -15.3665, -446.925, -61.0123, 0.74 ) }
    dend_46 { pt3dadd( -15.3174, -446.996, -61.0231, 0.74 ) }
    dend_46 { pt3dadd( -14.6771, -447.927, -61.1928, 0.81 ) }
    dend_46 { pt3dadd( -14.1665, -448.675, -61.3656, 0.44 ) }
    dend_46 { pt3dadd( -14.1217, -448.747, -61.3896, 0.44 ) }
    dend_46 { pt3dadd( -13.4755, -449.955, -61.878, 0.29 ) }
    dend_46 { pt3dadd( -12.9444, -451.04, -62.4106, 0.44 ) }
    dend_46 { pt3dadd( -12.6234, -451.715, -62.7573, 0.81 ) }
    dend_46 { pt3dadd( -12.2854, -452.353, -63.08, 0.81 ) }
    dend_46 { pt3dadd( -11.5103, -453.554, -63.6806, 0.37 ) }
    dend_46 { pt3dadd( -11.4531, -453.629, -63.7127, 0.37 ) }
    dend_46 { pt3dadd( -10.7689, -454.434, -63.9948, 0.81 ) }
    dend_46 { pt3dadd( -10.0507, -455.272, -64.214, 1.11 ) }
    dend_46 { pt3dadd( -9.07437, -456.488, -64.428, 1.11 ) }
    dend_46 { pt3dadd( -7.91073, -458.11, -64.5898, 0.29 ) }
    dend_46 { pt3dadd( -7.11809, -459.401, -64.624, 0.29 ) }
    dend_46 { pt3dadd( -6.63966, -460.361, -64.589, 0.66 ) }
    dend_46 { pt3dadd( -6.19696, -461.594, -64.47, 0.88 ) }
    dend_46 { pt3dadd( -5.93802, -462.659, -64.3287, 1.03 ) }
    dend_46 { pt3dadd( -5.85771, -463.562, -64.1853, 1.03 ) }
    dend_46 { pt3dadd( -5.89588, -464.633, -63.9502, 0.74 ) }
    dend_46 { pt3dadd( -6.05174, -466.136, -63.5561, 0.22 ) }
    dend_46 { pt3dadd( -6.16067, -467.098, -63.2462, 0.74 ) }
    dend_46 { pt3dadd( -6.17007, -467.188, -63.2101, 0.74 ) }
    dend_46 { pt3dadd( -6.24084, -468.053, -62.8282, 0.74 ) }
    dend_46 { pt3dadd( -6.2491, -468.133, -62.7919, 0.74 ) }
    dend_46 { pt3dadd( -6.37264, -469.152, -62.3536, 0.29 ) }
    dend_46 { pt3dadd( -6.45162, -469.886, -62.1082, 0.29 ) }
    dend_46 { pt3dadd( -6.51304, -470.84, -61.8566, 1.03 ) }
    dend_46 { pt3dadd( -6.56591, -471.82, -61.7166, 1.4 ) }
    dend_46 { pt3dadd( -6.62404, -472.917, -61.6673, 0.52 ) }
    dend_46 { pt3dadd( -6.69347, -473.614, -61.6803, 0.29 ) }
    dend_46 { pt3dadd( -6.93632, -474.751, -61.8499, 0.37 ) }
    dend_46 { pt3dadd( -7.1806, -475.452, -62.0654, 0.66 ) }
    dend_46 { pt3dadd( -7.69971, -476.526, -62.6228, 0.37 ) }
    dend_46 { pt3dadd( -8.00085, -477.005, -63.0119, 0.96 ) }
    dend_46 { pt3dadd( -8.31336, -477.468, -63.4614, 0.96 ) }
    dend_46 { pt3dadd( -9.15331, -478.617, -64.6862, 0.37 ) }
    dend_46 { pt3dadd( -9.95794, -479.684, -65.93, 0.74 ) }
    dend_46 { pt3dadd( -10.7887, -480.835, -67.3504, 1.25 ) }
    dend_46 { pt3dadd( -12.1385, -482.906, -70.0767, 0.29 ) }
    dend_46 { pt3dadd( -12.5699, -483.599, -71.0412, 0.29 ) }
    dend_46 { pt3dadd( -12.5995, -483.652, -71.1173, 0.29 ) }
    dend_46 { pt3dadd( -12.9402, -484.392, -72.219, 0.88 ) }
    dend_46 { pt3dadd( -13.0586, -484.737, -72.7425, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_46 { pt3dadd( -13.2269, -485.746, -74.2817, 0.52 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 1/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -19.9396, -440.209, -60.9948, 0.44 ) }
    dend_45 { pt3dadd( -19.304, -440.868, -61.2496, 0.44 ) }
    dend_45 { pt3dadd( -18.5302, -441.693, -61.5376, 0.44 ) }
    dend_45 { pt3dadd( -18.4862, -441.744, -61.5526, 0.44 ) }
    dend_45 { pt3dadd( -18.1811, -442.105, -61.652, 0.29 ) }
    dend_45 { pt3dadd( -17.8037, -442.539, -61.7712, 0.81 ) }
    dend_45 { pt3dadd( -17.3656, -443.015, -61.9071, 1.11 ) }
    dend_45 { pt3dadd( -17.3312, -443.054, -61.9151, 1.11 ) }
    dend_45 { pt3dadd( -16.8462, -443.625, -62.0378, 0.44 ) }
    dend_45 { pt3dadd( -16.8097, -443.67, -62.048, 0.44 ) }
    dend_45 { pt3dadd( -16.3713, -444.245, -62.1882, 0.37 ) }
    dend_45 { pt3dadd( -16.075, -444.67, -62.2846, 0.37 ) }
    dend_45 { pt3dadd( -15.6113, -445.408, -62.4393, 0.29 ) }
    dend_45 { pt3dadd( -15.3487, -445.834, -62.536, 0.74 ) }
    dend_45 { pt3dadd( -15.195, -446.082, -62.5969, 0.81 ) }
    dend_45 { pt3dadd( -15.1295, -446.189, -62.6296, 0.81 ) }
    dend_45 { pt3dadd( -14.7597, -446.792, -62.8428, 0.44 ) }
    dend_45 { pt3dadd( -14.4256, -447.316, -63.0512, 0.29 ) }
    dend_45 { pt3dadd( -14.0378, -447.859, -63.2993, 0.52 ) }
    dend_45 { pt3dadd( -13.8083, -448.151, -63.4459, 0.52 ) }
    dend_45 { pt3dadd( -13.2107, -448.9, -63.8592, 0.29 ) }
    dend_45 { pt3dadd( -12.798, -449.434, -64.1902, 0.59 ) }
    dend_45 { pt3dadd( -12.7684, -449.477, -64.2211, 0.59 ) }
    dend_45 { pt3dadd( -12.6069, -449.77, -64.4232, 0.59 ) }
    dend_45 { pt3dadd( -12.5852, -449.816, -64.454, 0.59 ) }
    dend_45 { pt3dadd( -12.2183, -450.704, -65.0536, 0.81 ) }
    dend_45 { pt3dadd( -12.0431, -451.21, -65.3918, 1.03 ) }
    dend_45 { pt3dadd( -11.8341, -451.943, -65.9056, 0.59 ) }
    dend_45 { pt3dadd( -11.6263, -452.745, -66.4715, 0.29 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 30/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -97.4127, -129.098, -25.2058, 0.37 ) }
    dend_39 { pt3dadd( -107.749, -137.241, -25.5962, 0.37 ) }
    dend_39 { pt3dadd( -117.869, -144.668, -29.5616, 0.37 ) }
    dend_39 { pt3dadd( -127.441, -151.116, -35.8934, 0.37 ) }
    dend_39 { pt3dadd( -138.084, -157.736, -39.9202, 0.37 ) }
    dend_39 { pt3dadd( -149.032, -163.908, -43.8356, 0.37 ) }
    dend_39 { pt3dadd( -159.09, -171.866, -46.8051, 0.37 ) }
    dend_39 { pt3dadd( -169.115, -180.301, -48.0804, 0.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 38/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -97.4127, -129.098, -25.2058, 0.29 ) }
    dend_36 { pt3dadd( -106.094, -136.155, -25.218, 0.37 ) }
    dend_36 { pt3dadd( -113.972, -144.037, -24.2224, 0.37 ) }
    dend_36 { pt3dadd( -121.046, -152.662, -23.372, 0.37 ) }
    dend_36 { pt3dadd( -129.235, -160.24, -22.5417, 0.37 ) }
    dend_36 { pt3dadd( -136.592, -168.608, -23.5545, 0.37 ) }
    dend_36 { pt3dadd( -144.977, -176.009, -23.8472, 0.37 ) }
    dend_36 { pt3dadd( -154.445, -181.961, -23.5493, 0.37 ) }
    dend_36 { pt3dadd( -164.08, -187.646, -23.3924, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 47/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 36.7435, 135.706, 51.8705, 0.29 ) }
    dend_8 { pt3dadd( 37.5441, 144.066, 56.0599, 0.29 ) }
    dend_8 { pt3dadd( 38.7648, 151.7, 61.3794, 0.29 ) }
    dend_8 { pt3dadd( 39.1274, 159.467, 66.6355, 0.29 ) }
    dend_8 { pt3dadd( 40.2768, 167.004, 72.109, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 52/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 36.7435, 135.706, 51.8705, 0.44 ) }
    dend_7 { pt3dadd( 37.4849, 145.142, 56.2315, 0.29 ) }
    dend_7 { pt3dadd( 36.9709, 154.591, 60.5987, 0.29 ) }
    dend_7 { pt3dadd( 36.7878, 163.302, 66.3182, 0.29 ) }
    // Section: dend_90, id: dend_90, parent: dend_88 (entry count 56/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( -145.72, -229.669, -29.2858, 0.29 ) }
    dend_90 { pt3dadd( -152.875, -240.037, -34.6296, 0.29 ) }
    dend_90 { pt3dadd( -160.332, -249.03, -41.7557, 0.29 ) }
    dend_90 { pt3dadd( -166.726, -257.707, -50.186, 0.29 ) }
    dend_90 { pt3dadd( -175.135, -266.679, -56.191, 0.29 ) }
    dend_90 { pt3dadd( -183.446, -275.832, -62.056, 0.29 ) }
    // Section: dend_89, id: dend_89, parent: dend_88 (entry count 62/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( -145.72, -229.669, -29.2858, 0.44 ) }
    dend_89 { pt3dadd( -149.646, -237.489, -32.6654, 0.29 ) }
    dend_89 { pt3dadd( -152.991, -245.567, -36.0619, 0.29 ) }
    dend_89 { pt3dadd( -155.506, -254.232, -38.6255, 0.29 ) }
    dend_89 { pt3dadd( -158.681, -262.777, -40.8367, 0.29 ) }
    dend_89 { pt3dadd( -162.076, -271.371, -42.4501, 0.29 ) }
    // Section: dend_86, id: dend_86, parent: dend_72 (entry count 68/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( -146.918, -163.257, -5.27906, 0.22 ) }
    dend_86 { pt3dadd( -146.305, -162.775, -4.71122, 0.22 ) }
    dend_86 { pt3dadd( -146.022, -162.563, -4.46461, 0.52 ) }
    dend_86 { pt3dadd( -145.808, -162.422, -4.30341, 0.74 ) }
    dend_86 { pt3dadd( -145.112, -162.02, -3.83275, 0.37 ) }
    dend_86 { pt3dadd( -144.313, -161.587, -3.34478, 0.37 ) }
    dend_86 { pt3dadd( -144.017, -161.426, -3.16451, 0.37 ) }
    dend_86 { pt3dadd( -143.888, -161.365, -3.09646, 0.37 ) }
    dend_86 { pt3dadd( -143.263, -161.099, -2.77531, 0.37 ) }
    dend_86 { pt3dadd( -142.967, -160.989, -2.63937, 0.88 ) }
    dend_86 { pt3dadd( -142.502, -160.847, -2.5099, 0.88 ) }
    dend_86 { pt3dadd( -137.037, -158.645, 1.72187, 0.88 ) }
    dend_86 { pt3dadd( -131.691, -155.187, 5.1986, 0.88 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 81/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -146.918, -163.257, -5.27906, 0.44 ) }
    dend_73 { pt3dadd( -146.905, -161.419, -5.25114, 0.44 ) }
    dend_73 { pt3dadd( -146.824, -159.65, -5.19493, 0.37 ) }
    dend_73 { pt3dadd( -146.818, -159.568, -5.18785, 0.37 ) }
    dend_73 { pt3dadd( -146.733, -158.153, -5.0171, 0.37 ) }
    dend_73 { pt3dadd( -146.731, -158.009, -4.99247, 0.37 ) }
    dend_73 { pt3dadd( -146.759, -156.29, -4.64818, 0.37 ) }
    dend_73 { pt3dadd( -146.763, -156.2, -4.62142, 0.37 ) }
    dend_73 { pt3dadd( -146.88, -155.084, -4.24978, 0.29 ) }
    dend_73 { pt3dadd( -147.073, -153.898, -3.85777, 0.29 ) }
    dend_73 { pt3dadd( -147.323, -152.809, -3.49719, 0.29 ) }
    dend_73 { pt3dadd( -147.4, -152.547, -3.41497, 0.66 ) }
    dend_73 { pt3dadd( -147.473, -152.352, -3.36456, 0.66 ) }
    dend_73 { pt3dadd( -147.724, -151.683, -3.24762, 0.66 ) }
    dend_73 { pt3dadd( -148.14, -150.604, -3.16254, 0.29 ) }
    dend_73 { pt3dadd( -148.33, -150.145, -3.1539, 0.44 ) }
    dend_73 { pt3dadd( -148.408, -149.976, -3.15743, 0.44 ) }
    dend_73 { pt3dadd( -148.835, -149.164, -3.17113, 0.37 ) }
    dend_73 { pt3dadd( -149.346, -148.277, -3.17579, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_47()
}

proc basic_shape_47() {
    dend_73 { pt3dadd( -149.394, -148.198, -3.17486, 0.37 ) }
    dend_73 { pt3dadd( -150.336, -146.765, -3.13072, 0.29 ) }
    dend_73 { pt3dadd( -150.897, -145.907, -3.08883, 0.44 ) }
    dend_73 { pt3dadd( -151.059, -145.655, -3.06496, 0.44 ) }
    dend_73 { pt3dadd( -151.574, -144.845, -2.94553, 0.44 ) }
    dend_73 { pt3dadd( -152.065, -144.045, -2.81026, 0.29 ) }
    dend_73 { pt3dadd( -152.166, -143.873, -2.77806, 0.29 ) }
    dend_73 { pt3dadd( -152.432, -143.371, -2.6703, 0.44 ) }
    dend_73 { pt3dadd( -152.719, -142.814, -2.54506, 0.44 ) }
    dend_73 { pt3dadd( -152.765, -142.72, -2.52386, 0.44 ) }
    dend_73 { pt3dadd( -153.06, -142.05, -2.38107, 0.44 ) }
    dend_73 { pt3dadd( -153.326, -141.324, -2.20859, 0.44 ) }
    dend_73 { pt3dadd( -153.349, -141.234, -2.18731, 0.44 ) }
    dend_73 { pt3dadd( -153.497, -140.408, -2.00433, 0.37 ) }
    dend_73 { pt3dadd( -153.556, -140.003, -1.92364, 0.37 ) }
    dend_73 { pt3dadd( -153.678, -138.955, -1.74785, 0.44 ) }
    dend_73 { pt3dadd( -153.755, -138.024, -1.60766, 0.44 ) }
    dend_73 { pt3dadd( -153.808, -137.001, -1.55022, 0.44 ) }
    dend_73 { pt3dadd( -153.861, -135.564, -1.55091, 0.44 ) }
    dend_73 { pt3dadd( -153.919, -134.236, -1.60854, 0.74 ) }
    dend_73 { pt3dadd( -154.017, -132.462, -1.75613, 0.81 ) }
    dend_73 { pt3dadd( -154.067, -131.731, -1.85165, 0.74 ) }
    dend_73 { pt3dadd( -154.271, -129.164, -2.32597, 0.29 ) }
    dend_73 { pt3dadd( -154.278, -129.084, -2.34384, 0.29 ) }
    dend_73 { pt3dadd( -154.323, -128.505, -2.48805, 0.29 ) }
    dend_73 { pt3dadd( -154.333, -128.307, -2.53089, 0.29 ) }
    dend_73 { pt3dadd( -154.358, -127.821, -2.58255, 0.44 ) }
    dend_73 { pt3dadd( -154.361, -127.729, -2.5851, 0.44 ) }
    dend_73 { pt3dadd( -154.368, -127.07, -2.54798, 0.44 ) }
    dend_73 { pt3dadd( -154.342, -126.002, -2.49595, 0.88 ) }
    dend_73 { pt3dadd( -154.257, -124.501, -2.43201, 0.52 ) }
    dend_73 { pt3dadd( -154.18, -123.333, -2.38188, 0.52 ) }
    dend_73 { pt3dadd( -154.112, -122.389, -2.35812, 0.44 ) }
    dend_73 { pt3dadd( -154.052, -121.35, -2.3442, 0.29 ) }
    dend_73 { pt3dadd( -154.015, -120.571, -2.3434, 0.59 ) }
    dend_73 { pt3dadd( -154.008, -120.269, -2.34568, 0.59 ) }
    dend_73 { pt3dadd( -154.02, -119.506, -2.35323, 0.59 ) }
    dend_73 { pt3dadd( -154.036, -118.748, -2.35947, 0.29 ) }
    dend_73 { pt3dadd( -154.064, -117.712, -2.34447, 0.29 ) }
    dend_73 { pt3dadd( -154.065, -117.605, -2.34202, 0.29 ) }
    dend_73 { pt3dadd( -154.062, -116.823, -2.33319, 0.59 ) }
    dend_73 { pt3dadd( -154.06, -116.7, -2.33198, 0.59 ) }
    dend_73 { pt3dadd( -154.045, -115.829, -2.31171, 0.66 ) }
    dend_73 { pt3dadd( -154.024, -114.865, -2.27374, 0.66 ) }
    dend_73 { pt3dadd( -153.99, -113.842, -2.23307, 0.29 ) }
    dend_73 { pt3dadd( -153.935, -112.413, -2.17302, 0.29 ) }
    dend_73 { pt3dadd( -153.929, -112.306, -2.16788, 0.29 ) }
    dend_73 { pt3dadd( -153.801, -110.501, -2.01244, 0.29 ) }
    dend_73 { pt3dadd( -153.786, -110.297, -1.98723, 0.29 ) }
    dend_73 { pt3dadd( -153.72, -109.148, -1.80568, 0.52 ) }
    dend_73 { pt3dadd( -153.714, -108.949, -1.76732, 0.52 ) }
    dend_73 { pt3dadd( -153.702, -107.761, -1.49814, 0.81 ) }
    dend_73 { pt3dadd( -153.733, -106.63, -1.24361, 0.52 ) }
    dend_73 { pt3dadd( -153.792, -105.705, -1.03284, 0.52 ) }
    dend_73 { pt3dadd( -153.87, -104.846, -0.859297, 0.74 ) }
    dend_73 { pt3dadd( -153.984, -103.82, -0.690464, 0.88 ) }
    dend_73 { pt3dadd( -154.012, -103.434, -0.654017, 0.88 ) }
    dend_73 { pt3dadd( -153.98, -102.2, -0.667843, 0.88 ) }
    dend_73 { pt3dadd( -153.966, -102.107, -0.676721, 0.88 ) }
    dend_73 { pt3dadd( -153.803, -101.457, -0.76276, 0.66 ) }
    dend_73 { pt3dadd( -153.488, -100.47, -0.851438, 0.44 ) }
    dend_73 { pt3dadd( -152.973, -99.0149, -0.86605, 0.37 ) }
    dend_73 { pt3dadd( -152.483, -97.5875, -0.785993, 0.29 ) }
    dend_73 { pt3dadd( -152.147, -96.6232, -0.68491, 0.29 ) }
    dend_73 { pt3dadd( -152.119, -96.5337, -0.671422, 0.29 ) }
    dend_73 { pt3dadd( -151.691, -94.8933, -0.342606, 0.29 ) }
    dend_73 { pt3dadd( -151.258, -92.8355, 0.15714, 0.29 ) }
    dend_73 { pt3dadd( -151.099, -91.6277, 0.492523, 0.37 ) }
    dend_73 { pt3dadd( -151.085, -91.4331, 0.545977, 0.37 ) }
    dend_73 { pt3dadd( -151.047, -90.4045, 0.785728, 0.37 ) }
    dend_73 { pt3dadd( -151.002, -89.3844, 1.01064, 0.37 ) }
    dend_73 { pt3dadd( -150.993, -89.1984, 1.04684, 0.37 ) }
    dend_73 { pt3dadd( -150.966, -87.7873, 1.34549, 0.52 ) }
    dend_73 { pt3dadd( -150.974, -86.3513, 1.66985, 0.44 ) }
    dend_73 { pt3dadd( -151.01, -84.8403, 2.02484, 1.11 ) }
    dend_73 { pt3dadd( -151.046, -82.8213, 2.51273, 0.29 ) }
    dend_73 { pt3dadd( -151.047, -82.718, 2.54209, 0.29 ) }
    dend_73 { pt3dadd( -151.028, -81.1786, 3.01455, 0.29 ) }
    dend_73 { pt3dadd( -150.993, -80.309, 3.29375, 0.29 ) }
    dend_73 { pt3dadd( -150.988, -80.2337, 3.31791, 0.29 ) }
    dend_73 { pt3dadd( -150.868, -78.6837, 3.78603, 0.37 ) }
    dend_73 { pt3dadd( -150.658, -76.3708, 4.41407, 0.37 ) }
    dend_73 { pt3dadd( -150.466, -74.7308, 4.84165, 0.37 ) }
    dend_73 { pt3dadd( -150.261, -73.4208, 5.17273, 0.81 ) }
    dend_73 { pt3dadd( -150.116, -72.5566, 5.38218, 1.03 ) }
    dend_73 { pt3dadd( -149.879, -71.0944, 5.70673, 0.29 ) }
    dend_73 { pt3dadd( -149.729, -70.0975, 5.89681, 0.29 ) }
    dend_73 { pt3dadd( -149.636, -69.419, 5.98392, 0.44 ) }
    dend_73 { pt3dadd( -149.627, -69.328, 5.99548, 0.44 ) }
    dend_73 { pt3dadd( -149.601, -68.8375, 6.05718, 0.44 ) }
    dend_73 { pt3dadd( -149.599, -67.6159, 6.2567, 0.29 ) }
    dend_73 { pt3dadd( -149.607, -67.4331, 6.29254, 0.29 ) }
    dend_73 { pt3dadd( -149.711, -65.9097, 6.62568, 0.29 ) }
    dend_73 { pt3dadd( -149.72, -65.8177, 6.6466, 0.29 ) }
    dend_73 { pt3dadd( -149.934, -64.157, 7.0327, 0.29 ) }
    dend_73 { pt3dadd( -150.068, -63.1851, 7.26093, 0.66 ) }
    dend_73 { pt3dadd( -150.156, -62.4838, 7.42614, 0.74 ) }
    dend_73 { pt3dadd( -150.17, -62.3024, 7.467, 0.74 ) }
    dend_73 { pt3dadd( -150.184, -60.6094, 7.82401, 0.29 ) }
    dend_73 { pt3dadd( -150.175, -60.4355, 7.85653, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_48()
}

proc basic_shape_48() {
    dend_73 { pt3dadd( -150.077, -59.3795, 8.00546, 0.29 ) }
    dend_73 { pt3dadd( -149.995, -58.6402, 8.08442, 0.74 ) }
    dend_73 { pt3dadd( -149.829, -57.4699, 8.20215, 0.22 ) }
    dend_73 { pt3dadd( -149.532, -55.7867, 8.36445, 0.22 ) }
    dend_73 { pt3dadd( -149.157, -54.2628, 8.5101, 1.03 ) }
    dend_73 { pt3dadd( -148.735, -52.7318, 8.65607, 0.29 ) }
    dend_73 { pt3dadd( -148.649, -52.4449, 8.68373, 0.29 ) }
    dend_73 { pt3dadd( -148.161, -50.8967, 8.83453, 0.29 ) }
    dend_73 { pt3dadd( -148.065, -50.6138, 8.86293, 0.29 ) }
    dend_73 { pt3dadd( -147.182, -48.2074, 9.11502, 0.29 ) }
    dend_73 { pt3dadd( -147.094, -47.9678, 9.14321, 0.29 ) }
    dend_73 { pt3dadd( -146.486, -46.2888, 9.30829, 0.29 ) }
    dend_73 { pt3dadd( -146.453, -46.1869, 9.31506, 0.29 ) }
    dend_73 { pt3dadd( -146.09, -44.8541, 9.35562, 0.44 ) }
    dend_73 { pt3dadd( -146.068, -44.7617, 9.35562, 0.44 ) }
    dend_73 { pt3dadd( -145.875, -43.6313, 9.31345, 0.44 ) }
    dend_73 { pt3dadd( -145.681, -42.4569, 9.25678, 0.74 ) }
    dend_73 { pt3dadd( -145.668, -42.3632, 9.25063, 0.74 ) }
    dend_73 { pt3dadd( -145.603, -41.8116, 9.21732, 1.03 ) }
    dend_73 { pt3dadd( -145.518, -40.7918, 9.176, 0.59 ) }
    dend_73 { pt3dadd( -145.492, -39.7289, 9.28004, 0.29 ) }
    dend_73 { pt3dadd( -145.498, -39.5325, 9.32768, 0.29 ) }
    dend_73 { pt3dadd( -145.56, -38.8599, 9.57865, 0.29 ) }
    dend_73 { pt3dadd( -145.572, -38.7617, 9.6202, 0.29 ) }
    dend_73 { pt3dadd( -145.735, -37.728, 10.0968, 0.88 ) }
    dend_73 { pt3dadd( -145.987, -36.2216, 10.7817, 0.88 ) }
    dend_73 { pt3dadd( -146.014, -36.0516, 10.8533, 0.88 ) }
    dend_73 { pt3dadd( -146.113, -35.3359, 11.1306, 0.66 ) }
    dend_73 { pt3dadd( -146.172, -34.6307, 11.425, 0.29 ) }
    dend_73 { pt3dadd( -146.198, -33.9004, 11.7371, 0.29 ) }
    dend_73 { pt3dadd( -146.185, -32.4942, 12.3268, 0.29 ) }
    dend_73 { pt3dadd( -146.147, -31.7825, 12.6031, 0.44 ) }
    dend_73 { pt3dadd( -146.139, -31.6842, 12.6457, 0.44 ) }
    dend_73 { pt3dadd( -146.014, -30.2594, 13.4315, 0.37 ) }
    dend_73 { pt3dadd( -145.959, -29.3011, 14.0073, 0.29 ) }
    dend_73 { pt3dadd( -145.958, -29.2195, 14.0555, 0.29 ) }
    dend_73 { pt3dadd( -145.981, -28.5544, 14.4367, 0.74 ) }
    dend_73 { pt3dadd( -145.989, -28.4844, 14.4706, 0.74 ) }
    dend_73 { pt3dadd( -146.287, -26.6592, 15.2286, 0.29 ) }
    dend_73 { pt3dadd( -146.636, -24.9708, 15.7794, 0.29 ) }
    dend_73 { pt3dadd( -146.944, -23.5542, 16.2347, 0.22 ) }
    dend_73 { pt3dadd( -147.007, -23.2809, 16.3223, 0.22 ) }
    dend_73 { pt3dadd( -147.453, -21.4057, 16.8916, 0.29 ) }
    dend_73 { pt3dadd( -147.477, -21.3049, 16.9201, 0.29 ) }
    dend_73 { pt3dadd( -147.853, -19.6681, 17.3135, 0.29 ) }
    dend_73 { pt3dadd( -148.166, -18.288, 17.7001, 0.29 ) }
    dend_73 { pt3dadd( -148.472, -16.8805, 18.1552, 0.74 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 47/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -226.784, -224.876, 2.9846, 0.37 ) }
    dend_71 { pt3dadd( -226.889, -225.399, 2.64583, 0.37 ) }
    dend_71 { pt3dadd( -227.201, -226.493, 1.94969, 0.37 ) }
    dend_71 { pt3dadd( -227.489, -227.418, 1.40323, 0.29 ) }
    dend_71 { pt3dadd( -227.669, -227.966, 1.06724, 0.44 ) }
    dend_71 { pt3dadd( -227.848, -228.511, 0.74099, 0.44 ) }
    dend_71 { pt3dadd( -228.205, -229.589, 0.119247, 0.29 ) }
    dend_71 { pt3dadd( -228.353, -229.982, -0.100899, 0.37 ) }
    dend_71 { pt3dadd( -228.596, -230.538, -0.381726, 0.37 ) }
    dend_71 { pt3dadd( -229.095, -231.655, -1.00305, 0.37 ) }
    dend_71 { pt3dadd( -229.321, -232.173, -1.30822, 0.37 ) }
    dend_71 { pt3dadd( -229.469, -232.543, -1.52896, 0.66 ) }
    dend_71 { pt3dadd( -229.49, -232.594, -1.55806, 0.66 ) }
    dend_71 { pt3dadd( -229.642, -232.924, -1.76417, 0.74 ) }
    dend_71 { pt3dadd( -230.081, -233.739, -2.31696, 0.37 ) }
    dend_71 { pt3dadd( -230.385, -234.211, -2.63173, 0.37 ) }
    dend_71 { pt3dadd( -230.422, -234.259, -2.67171, 0.37 ) }
    dend_71 { pt3dadd( -230.699, -234.601, -2.991, 0.37 ) }
    dend_71 { pt3dadd( -232.996, -242.512, -6.03883, 0.37 ) }
    dend_71 { pt3dadd( -234.398, -250.993, -7.84359, 0.37 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 67/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -226.784, -224.876, 2.9846, 0.29 ) }
    dend_70 { pt3dadd( -227.927, -224.69, 3.43252, 0.29 ) }
    dend_70 { pt3dadd( -228.972, -224.585, 3.96471, 0.52 ) }
    dend_70 { pt3dadd( -230.459, -224.532, 4.71579, 0.44 ) }
    dend_70 { pt3dadd( -230.984, -224.568, 4.96257, 0.29 ) }
    dend_70 { pt3dadd( -231.979, -224.705, 5.37575, 0.29 ) }
    dend_70 { pt3dadd( -232.795, -224.836, 5.73095, 0.44 ) }
    dend_70 { pt3dadd( -234.757, -225.223, 6.6533, 0.29 ) }
    dend_70 { pt3dadd( -235.577, -225.383, 7.01731, 0.29 ) }
    dend_70 { pt3dadd( -236.765, -225.635, 7.53076, 0.29 ) }
    dend_70 { pt3dadd( -237.892, -225.882, 8.0721, 0.29 ) }
    dend_70 { pt3dadd( -239.078, -226.129, 8.67647, 0.29 ) }
    dend_70 { pt3dadd( -239.136, -226.141, 8.706, 0.29 ) }
    dend_70 { pt3dadd( -240.162, -226.291, 9.1997, 0.44 ) }
    dend_70 { pt3dadd( -241.645, -226.373, 10.0342, 0.44 ) }
    dend_70 { pt3dadd( -241.788, -226.364, 10.1258, 0.44 ) }
    dend_70 { pt3dadd( -242.573, -226.302, 10.6716, 0.66 ) }
    dend_70 { pt3dadd( -243.416, -226.312, 11.1281, 0.66 ) }
    dend_70 { pt3dadd( -253.09, -226.986, 16.2066, 0.66 ) }
    dend_70 { pt3dadd( -261.359, -227.67, 23.3477, 0.66 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 87/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 50.3019, -279.507, -82.6583, 0.52 ) }
    dend_64 { pt3dadd( 49.7758, -280.165, -82.2916, 0.52 ) }
    dend_64 { pt3dadd( 49.3641, -280.699, -82.0224, 0.29 ) }
    dend_64 { pt3dadd( 48.9248, -281.308, -81.7631, 0.22 ) }
    dend_64 { pt3dadd( 48.708, -281.632, -81.6239, 0.52 ) }
    dend_64 { pt3dadd( 48.5174, -281.929, -81.4947, 0.74 ) }
    dend_64 { pt3dadd( 48.2781, -282.31, -81.3295, 0.81 ) }
    dend_64 { pt3dadd( 48.0537, -282.665, -81.1773, 0.66 ) }
    dend_64 { pt3dadd( 47.7276, -283.178, -80.9772, 0.29 ) }
    dend_64 { pt3dadd( 47.3784, -283.824, -80.7515, 0.29 ) }
    dend_64 { pt3dadd( 47.3572, -283.866, -80.7376, 0.29 ) }
    dend_64 { pt3dadd( 47.2919, -284.003, -80.6951, 0.66 ) }
    dend_64 { pt3dadd( 47.1038, -284.394, -80.571, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_49()
}

proc basic_shape_49() {
    dend_64 { pt3dadd( 46.8632, -284.876, -80.4167, 0.22 ) }
    dend_64 { pt3dadd( 46.6485, -285.293, -80.2937, 0.22 ) }
    dend_64 { pt3dadd( 46.5411, -285.498, -80.2565, 0.52 ) }
    dend_64 { pt3dadd( 46.4108, -285.757, -80.2133, 0.52 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 4/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 50.3019, -279.507, -82.6583, 1.18 ) }
    dend_63 { pt3dadd( 50.8871, -280.256, -82.8861, 1.18 ) }
    dend_63 { pt3dadd( 51.132, -280.611, -82.9652, 1.4 ) }
    dend_63 { pt3dadd( 51.5683, -281.3, -83.0227, 0.37 ) }
    dend_63 { pt3dadd( 51.9242, -281.954, -82.9424, 0.44 ) }
    dend_63 { pt3dadd( 52.1677, -282.516, -82.7964, 0.66 ) }
    dend_63 { pt3dadd( 52.4603, -283.332, -82.4641, 0.66 ) }
    dend_63 { pt3dadd( 52.5702, -283.758, -82.244, 0.66 ) }
    dend_63 { pt3dadd( 52.7734, -284.732, -81.6994, 0.59 ) }
    dend_63 { pt3dadd( 52.9978, -285.998, -80.964, 0.37 ) }
    dend_63 { pt3dadd( 53.127, -286.749, -80.5296, 1.55 ) }
    dend_63 { pt3dadd( 53.3881, -288.086, -79.8255, 0.37 ) }
    dend_63 { pt3dadd( 53.5752, -288.924, -79.4734, 0.44 ) }
    dend_63 { pt3dadd( 53.805, -289.755, -79.231, 0.44 ) }
    dend_63 { pt3dadd( 53.9535, -290.218, -79.1805, 0.88 ) }
    dend_63 { pt3dadd( 54.107, -290.642, -79.2045, 1.03 ) }
    dend_63 { pt3dadd( 54.4016, -291.468, -79.304, 0.37 ) }
    dend_63 { pt3dadd( 54.5956, -292.114, -79.4154, 0.37 ) }
    dend_63 { pt3dadd( 54.6832, -292.439, -79.4603, 0.88 ) }
    dend_63 { pt3dadd( 54.7929, -292.879, -79.5113, 0.96 ) }
    dend_63 { pt3dadd( 54.9512, -293.614, -79.5751, 0.96 ) }
    dend_63 { pt3dadd( 55.1394, -294.525, -79.6475, 0.29 ) }
    dend_63 { pt3dadd( 55.3892, -295.449, -79.6784, 0.29 ) }
    dend_63 { pt3dadd( 55.499, -295.779, -79.6774, 0.66 ) }
    dend_63 { pt3dadd( 55.6577, -296.154, -79.6461, 0.88 ) }
    dend_63 { pt3dadd( 55.6853, -296.21, -79.6378, 0.88 ) }
    dend_63 { pt3dadd( 55.9443, -296.661, -79.544, 0.74 ) }
    dend_63 { pt3dadd( 56.6011, -297.793, -79.2244, 0.29 ) }
    dend_63 { pt3dadd( 56.9227, -298.397, -79.0292, 0.29 ) }
    dend_63 { pt3dadd( 57.3486, -299.203, -78.8202, 1.11 ) }
    dend_63 { pt3dadd( 57.5714, -299.597, -78.7583, 1.11 ) }
    dend_63 { pt3dadd( 57.6034, -299.651, -78.7561, 1.11 ) }
    dend_63 { pt3dadd( 57.8782, -300.103, -78.7927, 1.11 ) }
    dend_63 { pt3dadd( 58.5651, -301.136, -78.9698, 0.29 ) }
    dend_63 { pt3dadd( 59.1731, -302.002, -79.1409, 0.29 ) }
    dend_63 { pt3dadd( 59.7009, -302.759, -79.2901, 0.29 ) }
    dend_63 { pt3dadd( 59.994, -303.184, -79.359, 0.81 ) }
    dend_63 { pt3dadd( 60.3519, -303.705, -79.4052, 0.96 ) }
    dend_63 { pt3dadd( 61.1215, -304.706, -79.3651, 0.96 ) }
    dend_63 { pt3dadd( 61.5929, -305.3, -79.268, 0.37 ) }
    dend_63 { pt3dadd( 62.0527, -305.895, -79.1086, 0.88 ) }
    dend_63 { pt3dadd( 62.4092, -306.381, -78.9512, 0.88 ) }
    dend_63 { pt3dadd( 63.0839, -307.353, -78.6197, 0.59 ) }
    dend_63 { pt3dadd( 63.9218, -308.678, -78.1895, 0.44 ) }
    dend_63 { pt3dadd( 64.2138, -309.209, -78.0518, 0.59 ) }
    dend_63 { pt3dadd( 64.4176, -309.643, -77.9576, 0.59 ) }
    dend_63 { pt3dadd( 64.6719, -310.339, -77.8545, 0.88 ) }
    dend_63 { pt3dadd( 64.8512, -310.97, -77.8214, 0.29 ) }
    dend_63 { pt3dadd( 65.0083, -311.709, -77.8444, 0.29 ) }
    dend_63 { pt3dadd( 65.1659, -312.476, -77.888, 0.37 ) }
    dend_63 { pt3dadd( 65.3764, -313.308, -77.9212, 0.96 ) }
    dend_63 { pt3dadd( 65.5473, -313.909, -77.9346, 1.33 ) }
    dend_63 { pt3dadd( 65.8904, -314.901, -77.9041, 0.37 ) }
    dend_63 { pt3dadd( 66.1567, -315.612, -77.839, 0.52 ) }
    dend_63 { pt3dadd( 66.5125, -316.535, -77.7006, 0.44 ) }
    dend_63 { pt3dadd( 66.7055, -317.021, -77.6102, 0.29 ) }
    dend_63 { pt3dadd( 66.9243, -317.544, -77.5093, 0.88 ) }
    dend_63 { pt3dadd( 67.2991, -318.476, -77.3229, 0.74 ) }
    dend_63 { pt3dadd( 67.5673, -319.084, -77.19, 0.29 ) }
    dend_63 { pt3dadd( 67.8461, -319.645, -77.0995, 0.59 ) }
    dend_63 { pt3dadd( 68.1496, -320.25, -77.0235, 0.74 ) }
    dend_63 { pt3dadd( 68.4157, -320.739, -76.9442, 0.88 ) }
    dend_63 { pt3dadd( 68.448, -320.799, -76.9326, 0.88 ) }
    dend_63 { pt3dadd( 69.0335, -322.037, -76.6553, 0.52 ) }
    dend_63 { pt3dadd( 69.2289, -322.532, -76.4961, 0.52 ) }
    dend_63 { pt3dadd( 69.462, -323.281, -76.1564, 0.52 ) }
    dend_63 { pt3dadd( 69.661, -324.063, -75.7694, 0.96 ) }
    dend_63 { pt3dadd( 69.7743, -324.468, -75.5407, 1.33 ) }
    dend_63 { pt3dadd( 69.9624, -325.043, -75.2055, 0.59 ) }
    dend_63 { pt3dadd( 70.2066, -325.773, -74.7882, 0.37 ) }
    dend_63 { pt3dadd( 70.6127, -326.812, -74.2293, 0.44 ) }
    dend_63 { pt3dadd( 70.8726, -327.423, -73.9554, 0.66 ) }
    dend_63 { pt3dadd( 71.3521, -328.546, -73.5818, 0.96 ) }
    dend_63 { pt3dadd( 71.8588, -329.68, -73.2831, 0.44 ) }
    dend_63 { pt3dadd( 72.1177, -330.259, -73.1692, 1.03 ) }
    dend_63 { pt3dadd( 72.424, -330.944, -73.0992, 1.18 ) }
    dend_63 { pt3dadd( 72.7845, -331.889, -73.1038, 0.29 ) }
    dend_63 { pt3dadd( 73.0499, -332.795, -73.1904, 0.29 ) }
    dend_63 { pt3dadd( 73.0768, -332.931, -73.2168, 0.88 ) }
    dend_63 { pt3dadd( 73.119, -333.258, -73.2895, 1.25 ) }
    dend_63 { pt3dadd( 73.202, -333.935, -73.4081, 0.66 ) }
    dend_63 { pt3dadd( 73.2849, -334.681, -73.4975, 0.59 ) }
    dend_63 { pt3dadd( 73.3956, -335.72, -73.5712, 0.52 ) }
    dend_63 { pt3dadd( 73.4486, -336.338, -73.5894, 0.52 ) }
    dend_63 { pt3dadd( 73.5227, -337.228, -73.5943, 0.52 ) }
    dend_63 { pt3dadd( 73.6126, -338.067, -73.5609, 0.37 ) }
    dend_63 { pt3dadd( 73.6769, -338.846, -73.5268, 0.29 ) }
    dend_63 { pt3dadd( 73.7016, -339.154, -73.5215, 0.74 ) }
    dend_63 { pt3dadd( 73.7161, -339.337, -73.527, 0.74 ) }
    dend_63 { pt3dadd( 73.7472, -339.842, -73.5789, 0.74 ) }
    dend_63 { pt3dadd( 73.7842, -340.653, -73.7276, 0.81 ) }
    dend_63 { pt3dadd( 73.7764, -341.901, -74.0353, 0.81 ) }
    dend_63 { pt3dadd( 73.7772, -342.709, -74.2703, 0.81 ) }
    dend_63 { pt3dadd( 73.7966, -343.602, -74.5539, 0.81 ) }
    dend_63 { pt3dadd( 73.7988, -343.66, -74.5729, 0.81 ) }
    dend_63 { pt3dadd( 73.8441, -344.439, -74.8386, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_50()
}

proc basic_shape_50() {
    dend_63 { pt3dadd( 73.9238, -345.407, -75.181, 0.44 ) }
    dend_63 { pt3dadd( 74.0245, -346.024, -75.3751, 0.44 ) }
    dend_63 { pt3dadd( 74.1735, -346.728, -75.5935, 0.29 ) }
    dend_63 { pt3dadd( 74.3202, -347.324, -75.7581, 0.74 ) }
    dend_63 { pt3dadd( 74.4055, -347.683, -75.8386, 0.96 ) }
    dend_63 { pt3dadd( 74.4204, -347.741, -75.8451, 0.96 ) }
    dend_63 { pt3dadd( 74.5681, -348.363, -75.8429, 0.52 ) }
    dend_63 { pt3dadd( 74.7645, -349.284, -75.7337, 0.52 ) }
    dend_63 { pt3dadd( 74.9535, -350.148, -75.5671, 0.52 ) }
    dend_63 { pt3dadd( 75.0925, -350.719, -75.4464, 0.59 ) }
    dend_63 { pt3dadd( 75.3653, -351.697, -75.2514, 0.74 ) }
    dend_63 { pt3dadd( 75.5361, -352.232, -75.1587, 0.52 ) }
    dend_63 { pt3dadd( 75.8675, -353.209, -75.0262, 0.37 ) }
    dend_63 { pt3dadd( 75.8884, -353.268, -75.021, 0.37 ) }
    dend_63 { pt3dadd( 76.2364, -354.144, -75.0392, 0.44 ) }
    dend_63 { pt3dadd( 76.5004, -354.764, -75.1327, 0.37 ) }
    dend_63 { pt3dadd( 76.6762, -355.193, -75.2614, 0.74 ) }
    dend_63 { pt3dadd( 76.9261, -355.847, -75.4887, 0.29 ) }
    dend_63 { pt3dadd( 76.94, -355.893, -75.5056, 0.29 ) }
    dend_63 { pt3dadd( 77.022, -356.207, -75.6083, 0.44 ) }
    dend_63 { pt3dadd( 77.0313, -356.256, -75.6209, 0.44 ) }
    dend_63 { pt3dadd( 77.0882, -356.699, -75.7089, 0.44 ) }
    dend_63 { pt3dadd( 77.1944, -357.575, -75.848, 0.22 ) }
    dend_63 { pt3dadd( 77.302, -358.191, -75.9272, 0.29 ) }
    // Section: dend_61, id: dend_61, parent: dend_53 (entry count 24/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -6.38263, -212.457, -93.8434, 0.29 ) }
    dend_61 { pt3dadd( -7.30781, -211.935, -94.7817, 0.29 ) }
    dend_61 { pt3dadd( -7.43095, -211.868, -94.891, 0.29 ) }
    dend_61 { pt3dadd( -8.02165, -211.54, -95.3636, 0.29 ) }
    dend_61 { pt3dadd( -9.447, -210.682, -96.4065, 0.29 ) }
    dend_61 { pt3dadd( -9.95434, -210.34, -96.797, 0.59 ) }
    dend_61 { pt3dadd( -11.3442, -209.285, -97.8749, 0.59 ) }
    dend_61 { pt3dadd( -12.084, -208.614, -98.4581, 0.37 ) }
    dend_61 { pt3dadd( -12.4612, -208.208, -98.7788, 0.66 ) }
    dend_61 { pt3dadd( -12.8425, -207.747, -99.1318, 0.88 ) }
    dend_61 { pt3dadd( -14.1069, -206.058, -100.376, 0.22 ) }
    dend_61 { pt3dadd( -14.5582, -205.399, -100.862, 0.44 ) }
    dend_61 { pt3dadd( -14.9161, -204.806, -101.272, 0.59 ) }
    dend_61 { pt3dadd( -15.4827, -203.788, -102.06, 0.29 ) }
    dend_61 { pt3dadd( -15.976, -202.908, -102.811, 0.74 ) }
    dend_61 { pt3dadd( -16.5631, -201.892, -103.758, 1.03 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 40/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -6.38263, -212.457, -93.8434, 0.52 ) }
    dend_54 { pt3dadd( -6.88093, -213.52, -95.3041, 0.52 ) }
    dend_54 { pt3dadd( -6.89698, -213.551, -95.3361, 0.52 ) }
    dend_54 { pt3dadd( -7.04715, -213.849, -95.5835, 0.52 ) }
    dend_54 { pt3dadd( -7.5396, -214.908, -96.3306, 1.33 ) }
    dend_54 { pt3dadd( -7.72411, -215.321, -96.5962, 1.77 ) }
    dend_54 { pt3dadd( -7.96577, -215.938, -96.9432, 0.66 ) }
    dend_54 { pt3dadd( -8.24428, -216.717, -97.2537, 0.66 ) }
    dend_54 { pt3dadd( -8.56633, -217.766, -97.6823, 0.66 ) }
    dend_54 { pt3dadd( -8.69305, -218.343, -97.9397, 0.88 ) }
    dend_54 { pt3dadd( -8.707, -218.494, -98.0085, 0.88 ) }
    dend_54 { pt3dadd( -8.71096, -219.432, -98.4626, 0.88 ) }
    dend_54 { pt3dadd( -8.70883, -219.468, -98.4815, 0.88 ) }
    dend_54 { pt3dadd( -8.55436, -220.609, -99.0792, 0.66 ) }
    dend_54 { pt3dadd( -8.37267, -221.494, -99.5864, 0.44 ) }
    dend_54 { pt3dadd( -8.24869, -222.027, -99.9301, 0.96 ) }
    dend_54 { pt3dadd( -8.06101, -222.781, -100.455, 0.96 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 57/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -164.08, -187.646, -23.3924, 0.29 ) }
    dend_38 { pt3dadd( -174.416, -188.893, -20.3969, 0.29 ) }
    dend_38 { pt3dadd( -184.961, -189.68, -18.0425, 0.29 ) }
    dend_38 { pt3dadd( -195.498, -190.919, -15.8529, 0.29 ) }
    dend_38 { pt3dadd( -205.345, -195.3, -14.7477, 0.29 ) }
    dend_38 { pt3dadd( -215.28, -199.125, -12.7419, 0.29 ) }
    dend_38 { pt3dadd( -225.292, -202.571, -10.4515, 0.29 ) }
    dend_38 { pt3dadd( -235.478, -205.59, -8.33264, 0.29 ) }
    dend_38 { pt3dadd( -245.398, -209.202, -5.90203, 0.29 ) }
    dend_38 { pt3dadd( -255.067, -213.228, -3.13299, 0.29 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 67/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -164.08, -187.646, -23.3924, 0.44 ) }
    dend_37 { pt3dadd( -167.345, -195.636, -25.8281, 0.29 ) }
    dend_37 { pt3dadd( -170.312, -203.209, -29.6088, 0.29 ) }
    dend_37 { pt3dadd( -173.221, -211.057, -32.8312, 0.29 ) }
    dend_37 { pt3dadd( -175.019, -219.51, -35.2305, 0.29 ) }
    dend_37 { pt3dadd( -175.458, -228.276, -37.076, 0.29 ) }
    dend_37 { pt3dadd( -174.835, -237.064, -38.7528, 0.29 ) }
    dend_37 { pt3dadd( -173.563, -245.544, -41.3833, 0.29 ) }
    dend_37 { pt3dadd( -172.639, -253.705, -44.9857, 0.29 ) }
    dend_37 { pt3dadd( -172.348, -262.492, -46.7569, 0.29 ) }
    dend_37 { pt3dadd( -173.617, -271.322, -47.6853, 0.29 ) }
    dend_37 { pt3dadd( -176.549, -279.78, -48.2436, 0.29 ) }
    dend_37 { pt3dadd( -181.345, -287.247, -49.5423, 0.29 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 80/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 40.2768, 167.004, 72.109, 0.29 ) }
    dend_10 { pt3dadd( 40.4943, 177.716, 77.5036, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 82/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 40.2768, 167.004, 72.109, 0.44 ) }
    dend_9 { pt3dadd( 42.0278, 176.688, 78.9797, 0.29 ) }
    dend_9 { pt3dadd( 44.6303, 185.978, 86.1205, 0.29 ) }
    dend_9 { pt3dadd( 46.7323, 195.194, 93.517, 0.29 ) }
    dend_9 { pt3dadd( 49.6532, 203.494, 101.68, 0.29 ) }
    dend_9 { pt3dadd( 50.2512, 211.928, 110.199, 0.29 ) }
    dend_9 { pt3dadd( 51.3839, 219.453, 119.481, 0.29 ) }
    dend_9 { pt3dadd( 50.1087, 227.544, 128.254, 0.29 ) }
    dend_9 { pt3dadd( 48.6659, 234.88, 137.644, 0.29 ) }
    dend_9 { pt3dadd( 47.3365, 240.1, 148.37, 0.29 ) }
    dend_9 { pt3dadd( 47.3191, 246.123, 158.752, 0.29 ) }
    dend_9 { pt3dadd( 50.2024, 252.067, 168.773, 0.29 ) }
    // Section: dend_83, id: dend_83, parent: dend_73 (entry count 94/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( -148.472, -16.8805, 18.1552, 0.22 ) }
    dend_83 { pt3dadd( -149.924, -16.8619, 18.1269, 0.22 ) }
    dend_83 { pt3dadd( -152.326, -16.8311, 18.0801, 0.22 ) }
    dend_83 { pt3dadd( -153.377, -16.8177, 18.0596, 0.52 ) }
    dend_83 { pt3dadd( -154.023, -16.8094, 18.0471, 0.74 ) }
    dend_83 { pt3dadd( -167.782, -14.535, 19.3648, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_51()
}

proc basic_shape_51() {
    dend_83 { pt3dadd( -181.528, -13.1303, 21.6691, 0.74 ) }
    dend_83 { pt3dadd( -194.541, -10.1127, 25.8865, 0.74 ) }
    dend_83 { pt3dadd( -207.321, -9.12205, 31.5381, 0.74 ) }
    dend_83 { pt3dadd( -219.208, -5.82767, 38.1781, 0.74 ) }
    dend_83 { pt3dadd( -229.556, -3.11162, 47.2207, 0.74 ) }
    dend_83 { pt3dadd( -237.81, 0.0039692, 58.1022, 0.74 ) }
    dend_83 { pt3dadd( -245.501, 4.23597, 69.0184, 0.74 ) }
    dend_83 { pt3dadd( -253.53, 9.60669, 79.164, 0.74 ) }
    dend_83 { pt3dadd( -260.856, 13.4878, 90.4559, 0.74 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 9/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -148.472, -16.8805, 18.1552, 0.44 ) }
    dend_74 { pt3dadd( -148.421, -16.1281, 18.4206, 0.44 ) }
    dend_74 { pt3dadd( -148.391, -15.5782, 18.604, 0.66 ) }
    dend_74 { pt3dadd( -148.389, -15.476, 18.6363, 0.66 ) }
    dend_74 { pt3dadd( -148.383, -15.1666, 18.7319, 0.59 ) }
    dend_74 { pt3dadd( -148.362, -14.4565, 18.9454, 0.29 ) }
    dend_74 { pt3dadd( -148.299, -13.3196, 19.2781, 0.29 ) }
    dend_74 { pt3dadd( -148.293, -13.2012, 19.3167, 0.29 ) }
    dend_74 { pt3dadd( -148.247, -12.3812, 19.6126, 0.52 ) }
    dend_74 { pt3dadd( -148.244, -12.3195, 19.6364, 0.52 ) }
    dend_74 { pt3dadd( -148.185, -11.4855, 19.9753, 0.52 ) }
    dend_74 { pt3dadd( -148.091, -10.4769, 20.4032, 1.03 ) }
    dend_74 { pt3dadd( -147.926, -9.25319, 20.9545, 0.29 ) }
    dend_74 { pt3dadd( -147.918, -9.20071, 20.979, 0.29 ) }
    dend_74 { pt3dadd( -147.768, -8.50277, 21.3325, 0.29 ) }
    dend_74 { pt3dadd( -147.628, -8.01726, 21.5827, 0.52 ) }
    dend_74 { pt3dadd( -147.453, -7.52894, 21.8402, 0.52 ) }
    dend_74 { pt3dadd( -147.227, -6.99934, 22.1059, 0.96 ) }
    dend_74 { pt3dadd( -147.208, -6.95899, 22.1243, 0.96 ) }
    dend_74 { pt3dadd( -146.643, -5.74454, 22.6717, 0.29 ) }
    dend_74 { pt3dadd( -146.18, -4.73266, 23.1242, 0.29 ) }
    dend_74 { pt3dadd( -146.157, -4.67574, 23.1488, 0.29 ) }
    dend_74 { pt3dadd( -145.844, -3.72143, 23.5347, 0.29 ) }
    dend_74 { pt3dadd( -145.772, -3.39441, 23.6514, 0.59 ) }
    dend_74 { pt3dadd( -145.752, -3.22862, 23.705, 0.59 ) }
    dend_74 { pt3dadd( -145.762, -2.77414, 23.8302, 0.52 ) }
    dend_74 { pt3dadd( -145.81, -2.29281, 23.9634, 0.66 ) }
    dend_74 { pt3dadd( -145.867, -1.78502, 24.104, 0.66 ) }
    dend_74 { pt3dadd( -145.972, -0.998467, 24.3213, 0.29 ) }
    dend_74 { pt3dadd( -145.985, -0.881113, 24.3616, 0.29 ) }
    dend_74 { pt3dadd( -146.023, -0.382004, 24.5599, 0.29 ) }
    dend_74 { pt3dadd( -146.04, -0.0086517, 24.7663, 0.52 ) }
    dend_74 { pt3dadd( -146.041, 0.0385744, 24.7978, 0.52 ) }
    dend_74 { pt3dadd( -146.008, 0.69977, 25.2887, 0.37 ) }
    dend_74 { pt3dadd( -145.933, 1.47857, 25.9137, 0.59 ) }
    dend_74 { pt3dadd( -145.877, 1.86031, 26.2211, 0.96 ) }
    dend_74 { pt3dadd( -145.686, 2.91996, 27.084, 0.37 ) }
    dend_74 { pt3dadd( -145.671, 2.98166, 27.137, 0.37 ) }
    dend_74 { pt3dadd( -145.465, 3.68533, 27.7514, 0.37 ) }
    dend_74 { pt3dadd( -145.45, 3.72754, 27.7889, 0.37 ) }
    dend_74 { pt3dadd( -145.256, 4.22516, 28.1916, 0.37 ) }
    dend_74 { pt3dadd( -145.209, 4.37158, 28.2874, 0.37 ) }
    dend_74 { pt3dadd( -144.97, 5.49046, 28.8147, 0.59 ) }
    dend_74 { pt3dadd( -144.937, 5.70123, 28.9056, 0.88 ) }
    dend_74 { pt3dadd( -144.93, 5.75546, 28.9263, 0.88 ) }
    dend_74 { pt3dadd( -144.874, 6.20073, 29.0816, 0.88 ) }
    dend_74 { pt3dadd( -144.663, 7.8291, 29.5894, 0.29 ) }
    dend_74 { pt3dadd( -144.445, 9.26582, 29.9429, 0.29 ) }
    dend_74 { pt3dadd( -144.41, 9.47261, 29.9826, 0.29 ) }
    dend_74 { pt3dadd( -144.125, 11.1459, 30.3375, 0.29 ) }
    dend_74 { pt3dadd( -144.091, 11.3785, 30.391, 0.29 ) }
    dend_74 { pt3dadd( -143.953, 12.4822, 30.661, 0.37 ) }
    dend_74 { pt3dadd( -143.83, 13.8445, 31.0262, 0.37 ) }
    dend_74 { pt3dadd( -143.804, 14.5014, 31.2559, 0.37 ) }
    dend_74 { pt3dadd( -143.813, 15.4938, 31.6792, 0.29 ) }
    dend_74 { pt3dadd( -143.895, 16.4577, 32.1551, 0.29 ) }
    dend_74 { pt3dadd( -143.91, 16.5657, 32.2156, 0.29 ) }
    dend_74 { pt3dadd( -144.029, 17.0322, 32.5505, 0.29 ) }
    dend_74 { pt3dadd( -144.424, 18.063, 33.5294, 1.18 ) }
    dend_74 { pt3dadd( -144.501, 18.2611, 33.7283, 1.47 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 69/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -8.06101, -222.781, -100.455, 0.88 ) }
    dend_56 { pt3dadd( -8.81312, -224.157, -101.177, 0.88 ) }
    dend_56 { pt3dadd( -9.31091, -225.149, -101.629, 1.47 ) }
    dend_56 { pt3dadd( -9.73596, -226.137, -102.027, 1.69 ) }
    dend_56 { pt3dadd( -10.4652, -228.187, -102.756, 0.59 ) }
    dend_56 { pt3dadd( -10.4862, -228.258, -102.781, 0.59 ) }
    dend_56 { pt3dadd( -10.8178, -229.532, -103.236, 0.29 ) }
    dend_56 { pt3dadd( -11.0081, -230.547, -103.571, 0.44 ) }
    dend_56 { pt3dadd( -11.1213, -231.438, -103.942, 0.66 ) }
    dend_56 { pt3dadd( -11.1953, -232.407, -104.502, 1.11 ) }
    dend_56 { pt3dadd( -11.2237, -233.354, -105.108, 1.47 ) }
    dend_56 { pt3dadd( -11.2485, -233.834, -105.435, 1.47 ) }
    dend_56 { pt3dadd( -11.2545, -233.91, -105.49, 1.47 ) }
    dend_56 { pt3dadd( -11.5303, -236.152, -106.987, 1.11 ) }
    dend_56 { pt3dadd( -11.9137, -238.184, -108.152, 0.59 ) }
    dend_56 { pt3dadd( -12.1239, -239.238, -108.628, 0.81 ) }
    dend_56 { pt3dadd( -12.3031, -240.219, -108.962, 1.11 ) }
    dend_56 { pt3dadd( -12.4462, -241.236, -109.217, 1.25 ) }
    dend_56 { pt3dadd( -12.6074, -242.74, -109.46, 0.66 ) }
    dend_56 { pt3dadd( -12.7427, -244.466, -109.538, 0.52 ) }
    dend_56 { pt3dadd( -12.8326, -246.118, -109.533, 1.03 ) }
    dend_56 { pt3dadd( -12.8693, -246.93, -109.553, 1.25 ) }
    dend_56 { pt3dadd( -12.9133, -248.641, -109.651, 0.66 ) }
    dend_56 { pt3dadd( -12.9256, -249.152, -109.711, 0.44 ) }
    dend_56 { pt3dadd( -12.9224, -249.818, -109.83, 0.96 ) }
    dend_56 { pt3dadd( -12.9096, -250.399, -109.968, 1.25 ) }
    dend_56 { pt3dadd( -12.9037, -251.894, -110.379, 1.11 ) }
    dend_56 { pt3dadd( -12.9163, -253.075, -110.744, 0.96 ) }
    dend_56 { pt3dadd( -12.9227, -254.362, -111.11, 0.66 ) }
    dend_56 { pt3dadd( -12.9316, -255.715, -111.434, 0.59 ) }
    dend_56 { pt3dadd( -12.932, -255.807, -111.452, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_52()
}

proc basic_shape_52() {
    dend_56 { pt3dadd( -12.967, -256.85, -111.593, 0.59 ) }
    dend_56 { pt3dadd( -13.1377, -258.242, -111.632, 0.52 ) }
    dend_56 { pt3dadd( -13.4869, -259.582, -111.539, 0.81 ) }
    dend_56 { pt3dadd( -13.9034, -260.554, -111.369, 1.03 ) }
    dend_56 { pt3dadd( -13.9764, -260.676, -111.341, 1.03 ) }
    dend_56 { pt3dadd( -14.566, -261.55, -111.109, 1.03 ) }
    dend_56 { pt3dadd( -15.4776, -262.668, -110.747, 0.52 ) }
    dend_56 { pt3dadd( -16.0479, -263.264, -110.514, 1.11 ) }
    dend_56 { pt3dadd( -16.7371, -263.886, -110.322, 1.33 ) }
    dend_56 { pt3dadd( -16.8074, -263.945, -110.301, 1.33 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 10/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -8.06101, -222.781, -100.455, 0.52 ) }
    dend_55 { pt3dadd( -7.34129, -223.227, -99.977, 0.52 ) }
    dend_55 { pt3dadd( -6.03335, -224.041, -99.0377, 0.29 ) }
    dend_55 { pt3dadd( -5.26382, -224.537, -98.4935, 0.59 ) }
    dend_55 { pt3dadd( -4.80681, -224.838, -98.1416, 0.96 ) }
    dend_55 { pt3dadd( -3.41595, -225.764, -97.0578, 0.22 ) }
    dend_55 { pt3dadd( -2.46194, -226.388, -96.3277, 0.59 ) }
    dend_55 { pt3dadd( -2.4107, -226.421, -96.2882, 0.59 ) }
    dend_55 { pt3dadd( -1.70065, -226.873, -95.7992, 0.52 ) }
    dend_55 { pt3dadd( -0.668374, -227.62, -95.0654, 0.37 ) }
    dend_55 { pt3dadd( -0.233747, -227.98, -94.7712, 0.81 ) }
    dend_55 { pt3dadd( 0.113679, -228.297, -94.5813, 0.96 ) }
    dend_55 { pt3dadd( 0.991404, -229.14, -94.1662, 0.37 ) }
    dend_55 { pt3dadd( 1.81167, -229.915, -93.9307, 0.37 ) }
    dend_55 { pt3dadd( 2.61214, -230.667, -93.872, 0.44 ) }
    dend_55 { pt3dadd( 3.08486, -231.107, -93.9401, 0.44 ) }
    dend_55 { pt3dadd( 3.7239, -231.703, -94.0446, 0.22 ) }
    dend_55 { pt3dadd( 4.18491, -232.11, -94.1246, 0.44 ) }
    dend_55 { pt3dadd( 5.93652, -233.519, -94.4441, 0.37 ) }
    dend_55 { pt3dadd( 6.64314, -234.042, -94.5711, 0.52 ) }
    dend_55 { pt3dadd( 7.44324, -234.596, -94.7101, 0.59 ) }
    dend_55 { pt3dadd( 8.35586, -235.186, -94.8141, 0.81 ) }
    dend_55 { pt3dadd( 9.30168, -235.774, -94.8517, 0.29 ) }
    dend_55 { pt3dadd( 10.1458, -236.266, -94.801, 0.52 ) }
    dend_55 { pt3dadd( 10.598, -236.511, -94.7155, 0.81 ) }
    dend_55 { pt3dadd( 11.0733, -236.723, -94.6414, 1.11 ) }
    dend_55 { pt3dadd( 11.2807, -236.799, -94.6187, 1.11 ) }
    dend_55 { pt3dadd( 11.6989, -236.929, -94.5962, 0.96 ) }
    dend_55 { pt3dadd( 12.4714, -237.11, -94.4751, 0.59 ) }
    dend_55 { pt3dadd( 13.7312, -237.304, -94.0678, 0.29 ) }
    dend_55 { pt3dadd( 14.3427, -237.396, -93.8123, 0.52 ) }
    dend_55 { pt3dadd( 14.8145, -237.47, -93.5874, 0.66 ) }
    dend_55 { pt3dadd( 14.8759, -237.483, -93.5557, 0.66 ) }
    dend_55 { pt3dadd( 16.3898, -237.861, -92.6898, 0.52 ) }
    dend_55 { pt3dadd( 17.5243, -238.195, -91.9948, 0.74 ) }
    dend_55 { pt3dadd( 18.6345, -238.546, -91.2993, 0.22 ) }
    dend_55 { pt3dadd( 18.9387, -238.657, -91.1252, 0.74 ) }
    dend_55 { pt3dadd( 19.4918, -238.893, -90.8281, 0.81 ) }
    dend_55 { pt3dadd( 20.7126, -239.508, -90.2468, 0.22 ) }
    dend_55 { pt3dadd( 21.0909, -239.746, -90.1135, 0.66 ) }
    dend_55 { pt3dadd( 21.4443, -239.999, -90.0064, 0.74 ) }
    dend_55 { pt3dadd( 22.281, -240.685, -89.7373, 0.22 ) }
    dend_55 { pt3dadd( 22.9863, -241.342, -89.4776, 0.66 ) }
    dend_55 { pt3dadd( 23.2261, -241.589, -89.3851, 0.81 ) }
    dend_55 { pt3dadd( 23.6379, -242.088, -89.2256, 0.52 ) }
    dend_55 { pt3dadd( 23.674, -242.133, -89.2111, 0.52 ) }
    dend_55 { pt3dadd( 24.2247, -242.861, -89.0147, 0.22 ) }
    dend_55 { pt3dadd( 24.9448, -243.864, -88.8152, 0.74 ) }
    dend_55 { pt3dadd( 25.3477, -244.386, -88.8021, 0.81 ) }
    dend_55 { pt3dadd( 25.4376, -244.494, -88.8085, 0.81 ) }
    dend_55 { pt3dadd( 25.8947, -244.989, -88.8955, 0.59 ) }
    dend_55 { pt3dadd( 26.3626, -245.438, -89.0849, 0.29 ) }
    dend_55 { pt3dadd( 26.871, -245.904, -89.3846, 1.03 ) }
    dend_55 { pt3dadd( 27.6292, -246.662, -89.9502, 1.03 ) }
    dend_55 { pt3dadd( 27.7634, -246.816, -90.0635, 1.25 ) }
    dend_55 { pt3dadd( 28.2222, -247.467, -90.482, 0.66 ) }
    dend_55 { pt3dadd( 28.907, -248.655, -91.152, 0.52 ) }
    dend_55 { pt3dadd( 29.283, -249.452, -91.5192, 0.37 ) }
    dend_55 { pt3dadd( 29.526, -250.118, -91.7729, 0.29 ) }
    dend_55 { pt3dadd( 29.6915, -250.801, -91.949, 0.29 ) }
    dend_55 { pt3dadd( 29.8958, -252.01, -92.175, 0.29 ) }
    dend_55 { pt3dadd( 29.9473, -252.433, -92.2436, 0.81 ) }
    dend_55 { pt3dadd( 30.0152, -253.021, -92.3223, 1.03 ) }
    dend_55 { pt3dadd( 30.0287, -253.091, -92.3335, 1.03 ) }
    dend_55 { pt3dadd( 30.3095, -254.059, -92.5166, 0.59 ) }
    dend_55 { pt3dadd( 30.6454, -254.969, -92.6555, 0.44 ) }
    dend_55 { pt3dadd( 31.044, -255.993, -92.7695, 0.88 ) }
    dend_55 { pt3dadd( 31.1597, -256.284, -92.7918, 1.25 ) }
    dend_55 { pt3dadd( 31.3779, -256.798, -92.787, 1.55 ) }
    dend_55 { pt3dadd( 31.6847, -257.449, -92.7272, 0.29 ) }
    dend_55 { pt3dadd( 32.2188, -258.47, -92.3666, 0.29 ) }
    dend_55 { pt3dadd( 32.681, -259.329, -91.9072, 0.29 ) }
    dend_55 { pt3dadd( 32.7091, -259.383, -91.8741, 0.29 ) }
    dend_55 { pt3dadd( 33.1298, -260.23, -91.3537, 1.47 ) }
    dend_55 { pt3dadd( 33.4804, -260.965, -90.9085, 1.77 ) }
    dend_55 { pt3dadd( 34.3996, -262.889, -89.7525, 0.37 ) }
    dend_55 { pt3dadd( 34.7169, -263.548, -89.3544, 0.22 ) }
    dend_55 { pt3dadd( 35.1369, -264.416, -88.8101, 0.29 ) }
    dend_55 { pt3dadd( 35.3198, -264.823, -88.5706, 0.52 ) }
    dend_55 { pt3dadd( 35.5324, -265.382, -88.2928, 0.66 ) }
    dend_55 { pt3dadd( 35.5515, -265.447, -88.2662, 0.66 ) }
    // Section: dend_85, id: dend_85, parent: dend_83 (entry count 91/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( -260.856, 13.4878, 90.4559, 0.37 ) }
    dend_85 { pt3dadd( -271.63, 16.6169, 96.9793, 0.37 ) }
    dend_85 { pt3dadd( -283.218, 18.2934, 102.576, 0.37 ) }
    dend_85 { pt3dadd( -293.401, 20.5314, 110.304, 0.37 ) }
    dend_85 { pt3dadd( -304.14, 21.0109, 117.575, 0.37 ) }
    dend_85 { pt3dadd( -316.018, 19.1968, 122.479, 0.37 ) }
    dend_85 { pt3dadd( -327.061, 17.5348, 129.09, 0.37 ) }
    dend_85 { pt3dadd( -337.382, 14.5526, 136.37, 0.37 ) }
    dend_85 { pt3dadd( -345.343, 9.95048, 145.529, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_53()
}

proc basic_shape_53() {
    dend_85 { pt3dadd( -352.384, 2.28389, 153.279, 0.37 ) }
    dend_85 { pt3dadd( -359.043, -7.12309, 159.245, 0.37 ) }
    dend_85 { pt3dadd( -364.569, -16.7355, 165.99, 0.37 ) }
    dend_85 { pt3dadd( -370.044, -26.3238, 172.809, 0.37 ) }
    // Section: dend_84, id: dend_84, parent: dend_83 (entry count 4/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( -260.856, 13.4878, 90.4559, 0.29 ) }
    dend_84 { pt3dadd( -272.082, 16.716, 97.4307, 0.37 ) }
    dend_84 { pt3dadd( -283.751, 20.1328, 103.536, 0.37 ) }
    dend_84 { pt3dadd( -295.992, 22.3636, 109.04, 0.37 ) }
    dend_84 { pt3dadd( -306.382, 26.4932, 116.792, 0.37 ) }
    dend_84 { pt3dadd( -315.933, 29.8986, 125.863, 0.37 ) }
    dend_84 { pt3dadd( -326.105, 31.6458, 134.728, 0.37 ) }
    dend_84 { pt3dadd( -337.619, 34.9589, 141.175, 0.37 ) }
    dend_84 { pt3dadd( -349.839, 39.7031, 144.817, 0.37 ) }
    // Section: dend_82, id: dend_82, parent: dend_74 (entry count 13/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -144.501, 18.2611, 33.7283, 0.59 ) }
    dend_82 { pt3dadd( -142.875, 18.5658, 35.0293, 0.59 ) }
    dend_82 { pt3dadd( -142.802, 18.578, 35.0884, 0.59 ) }
    dend_82 { pt3dadd( -141.353, 18.9619, 36.2839, 0.29 ) }
    dend_82 { pt3dadd( -140.589, 19.2713, 36.889, 0.29 ) }
    dend_82 { pt3dadd( -140.518, 19.305, 36.9445, 0.29 ) }
    dend_82 { pt3dadd( -138.969, 20.2005, 38.0809, 0.29 ) }
    dend_82 { pt3dadd( -138.921, 20.2388, 38.1138, 0.29 ) }
    dend_82 { pt3dadd( -137.594, 21.4088, 38.9512, 0.29 ) }
    dend_82 { pt3dadd( -136.097, 22.8001, 39.7429, 0.29 ) }
    dend_82 { pt3dadd( -135.973, 22.915, 39.8002, 0.29 ) }
    dend_82 { pt3dadd( -134.628, 24.1088, 40.353, 0.74 ) }
    dend_82 { pt3dadd( -133.474, 25.0711, 40.8061, 0.29 ) }
    dend_82 { pt3dadd( -133.143, 25.3061, 40.9558, 0.29 ) }
    dend_82 { pt3dadd( -131.459, 26.3664, 41.7094, 0.29 ) }
    dend_82 { pt3dadd( -130.655, 26.8056, 42.0828, 0.29 ) }
    dend_82 { pt3dadd( -129.332, 27.4376, 42.7327, 0.29 ) }
    dend_82 { pt3dadd( -127.694, 28.0223, 43.638, 0.29 ) }
    dend_82 { pt3dadd( -126.288, 28.4105, 44.4762, 0.88 ) }
    dend_82 { pt3dadd( -119.122, 35.2506, 50.6245, 0.88 ) }
    dend_82 { pt3dadd( -113.58, 41.9255, 58.4133, 0.88 ) }
    dend_82 { pt3dadd( -107.494, 49.1103, 65.2893, 0.88 ) }
    dend_82 { pt3dadd( -100.513, 56.0251, 71.5655, 0.88 ) }
    dend_82 { pt3dadd( -93.3478, 62.157, 78.4214, 0.88 ) }
    dend_82 { pt3dadd( -86.9009, 69.1093, 85.2069, 0.88 ) }
    dend_82 { pt3dadd( -79.8365, 75.222, 92.1832, 0.88 ) }
    dend_82 { pt3dadd( -71.7163, 80.0366, 99.0258, 0.88 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 40/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -144.501, 18.2611, 33.7283, 0.59 ) }
    dend_75 { pt3dadd( -144.918, 19.3152, 34.42, 0.59 ) }
    dend_75 { pt3dadd( -145.249, 20.2401, 35.0721, 0.59 ) }
    dend_75 { pt3dadd( -145.529, 21.1261, 35.7645, 0.37 ) }
    dend_75 { pt3dadd( -145.854, 22.2493, 36.6705, 0.29 ) }
    dend_75 { pt3dadd( -146.099, 23.2822, 37.5804, 0.29 ) }
    dend_75 { pt3dadd( -146.114, 23.3535, 37.6459, 0.29 ) }
    dend_75 { pt3dadd( -146.25, 24.2296, 38.5178, 0.29 ) }
    dend_75 { pt3dadd( -146.359, 24.9862, 39.3116, 0.66 ) }
    dend_75 { pt3dadd( -146.411, 25.4745, 39.7959, 0.81 ) }
    dend_75 { pt3dadd( -146.524, 26.6244, 40.7715, 0.29 ) }
    dend_75 { pt3dadd( -146.532, 26.7002, 40.8331, 0.29 ) }
    dend_75 { pt3dadd( -146.648, 27.7559, 41.5824, 0.29 ) }
    dend_75 { pt3dadd( -146.656, 27.83, 41.6263, 0.29 ) }
    dend_75 { pt3dadd( -146.76, 29.0755, 42.2203, 0.52 ) }
    dend_75 { pt3dadd( -146.845, 29.9607, 42.574, 0.74 ) }
    dend_75 { pt3dadd( -146.859, 30.0531, 42.6036, 0.74 ) }
    dend_75 { pt3dadd( -147.01, 30.8823, 42.9183, 0.74 ) }
    dend_75 { pt3dadd( -147.026, 30.9608, 42.9511, 0.74 ) }
    dend_75 { pt3dadd( -147.309, 32.081, 43.4508, 0.29 ) }
    dend_75 { pt3dadd( -147.657, 33.2336, 43.9968, 0.29 ) }
    dend_75 { pt3dadd( -148.176, 34.7774, 44.7442, 0.29 ) }
    dend_75 { pt3dadd( -148.599, 36.1153, 45.3742, 0.29 ) }
    dend_75 { pt3dadd( -148.638, 36.2673, 45.4468, 0.29 ) }
    dend_75 { pt3dadd( -148.825, 37.5311, 46.0322, 0.29 ) }
    dend_75 { pt3dadd( -148.832, 37.6097, 46.0679, 0.29 ) }
    dend_75 { pt3dadd( -148.776, 38.8912, 46.6216, 0.29 ) }
    dend_75 { pt3dadd( -148.544, 40.8339, 47.4181, 0.29 ) }
    dend_75 { pt3dadd( -148.185, 43.4122, 48.3925, 0.29 ) }
    dend_75 { pt3dadd( -147.827, 45.7691, 49.2728, 0.29 ) }
    dend_75 { pt3dadd( -147.804, 45.926, 49.3346, 0.29 ) }
    dend_75 { pt3dadd( -147.507, 48.2532, 50.2826, 0.29 ) }
    dend_75 { pt3dadd( -147.489, 48.4201, 50.3522, 0.29 ) }
    dend_75 { pt3dadd( -147.292, 51.1206, 51.499, 0.29 ) }
    dend_75 { pt3dadd( -147.289, 51.2108, 51.5373, 0.29 ) }
    dend_75 { pt3dadd( -147.385, 53.628, 52.604, 0.29 ) }
    dend_75 { pt3dadd( -147.395, 53.7171, 52.6436, 0.29 ) }
    dend_75 { pt3dadd( -147.785, 55.5558, 53.4188, 0.29 ) }
    dend_75 { pt3dadd( -147.898, 56.0345, 53.6029, 0.74 ) }
    dend_75 { pt3dadd( -147.921, 56.1241, 53.6354, 0.74 ) }
    dend_75 { pt3dadd( -148.086, 56.7344, 53.8279, 0.59 ) }
    dend_75 { pt3dadd( -148.584, 58.3239, 54.1311, 0.29 ) }
    dend_75 { pt3dadd( -148.951, 59.2857, 54.2928, 0.88 ) }
    dend_75 { pt3dadd( -149.291, 59.878, 54.3563, 0.96 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 84/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -16.8074, -263.945, -110.301, 0.52 ) }
    dend_60 { pt3dadd( -17.4856, -264.809, -110.107, 0.52 ) }
    dend_60 { pt3dadd( -18.0023, -265.506, -109.964, 0.37 ) }
    dend_60 { pt3dadd( -18.4724, -266.189, -109.801, 0.29 ) }
    dend_60 { pt3dadd( -18.8417, -266.707, -109.665, 0.66 ) }
    dend_60 { pt3dadd( -19.1676, -267.157, -109.543, 0.66 ) }
    dend_60 { pt3dadd( -19.2132, -267.219, -109.526, 0.66 ) }
    dend_60 { pt3dadd( -19.5151, -267.642, -109.412, 0.59 ) }
    dend_60 { pt3dadd( -20.068, -268.378, -109.223, 0.29 ) }
    dend_60 { pt3dadd( -20.6358, -269.152, -109.038, 0.29 ) }
    dend_60 { pt3dadd( -20.8629, -269.479, -108.968, 0.66 ) }
    dend_60 { pt3dadd( -21.2142, -270.02, -108.868, 0.96 ) }
    dend_60 { pt3dadd( -21.4741, -270.481, -108.797, 1.18 ) }
    dend_60 { pt3dadd( -21.9642, -271.455, -108.679, 0.29 ) }
    dend_60 { pt3dadd( -22.254, -272.098, -108.629, 0.29 ) }
    dend_60 { pt3dadd( -22.4159, -272.483, -108.599, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_54()
}

proc basic_shape_54() {
    dend_60 { pt3dadd( -22.4764, -272.615, -108.568, 0.52 ) }
    dend_60 { pt3dadd( -22.7403, -273.095, -108.376, 0.22 ) }
    dend_60 { pt3dadd( -23.0132, -273.478, -108.145, 0.44 ) }
    dend_60 { pt3dadd( -23.2809, -273.791, -107.865, 0.66 ) }
    dend_60 { pt3dadd( -23.652, -274.169, -107.487, 0.66 ) }
    dend_60 { pt3dadd( -24.5743, -275.048, -106.602, 0.29 ) }
    dend_60 { pt3dadd( -24.8416, -275.305, -106.358, 0.96 ) }
    dend_60 { pt3dadd( -25.1137, -275.588, -106.116, 1.25 ) }
    dend_60 { pt3dadd( -25.9777, -276.641, -105.338, 0.52 ) }
    dend_60 { pt3dadd( -26.473, -277.346, -104.911, 0.52 ) }
    dend_60 { pt3dadd( -26.8611, -277.956, -104.617, 0.29 ) }
    dend_60 { pt3dadd( -27.2063, -278.497, -104.429, 0.37 ) }
    dend_60 { pt3dadd( -27.5882, -279.058, -104.255, 0.44 ) }
    dend_60 { pt3dadd( -27.8928, -279.422, -104.154, 0.44 ) }
    dend_60 { pt3dadd( -28.4262, -279.927, -104.052, 0.22 ) }
    dend_60 { pt3dadd( -28.7625, -280.17, -103.988, 0.37 ) }
    dend_60 { pt3dadd( -29.3521, -280.51, -103.831, 0.59 ) }
    dend_60 { pt3dadd( -30.1471, -280.895, -103.579, 1.18 ) }
    dend_60 { pt3dadd( -30.8962, -281.232, -103.278, 0.74 ) }
    dend_60 { pt3dadd( -30.9622, -281.261, -103.246, 0.74 ) }
    dend_60 { pt3dadd( -32.0043, -281.76, -102.676, 0.37 ) }
    dend_60 { pt3dadd( -32.9743, -282.305, -102.061, 0.29 ) }
    dend_60 { pt3dadd( -33.2002, -282.446, -101.878, 0.59 ) }
    dend_60 { pt3dadd( -33.71, -282.76, -101.326, 0.74 ) }
    dend_60 { pt3dadd( -33.7624, -282.79, -101.252, 0.74 ) }
    dend_60 { pt3dadd( -34.0038, -282.921, -100.776, 0.74 ) }
    dend_60 { pt3dadd( -34.026, -282.929, -100.724, 0.74 ) }
    dend_60 { pt3dadd( -34.4389, -283.021, -99.7295, 0.29 ) }
    dend_60 { pt3dadd( -34.9159, -283.089, -98.5606, 0.59 ) }
    dend_60 { pt3dadd( -35.3133, -283.12, -97.5586, 0.96 ) }
    dend_60 { pt3dadd( -35.9919, -283.16, -95.7961, 0.59 ) }
    dend_60 { pt3dadd( -36.2635, -283.167, -95.0571, 0.29 ) }
    dend_60 { pt3dadd( -36.2871, -283.169, -94.9919, 0.29 ) }
    dend_60 { pt3dadd( -36.7071, -283.224, -93.7718, 0.88 ) }
    dend_60 { pt3dadd( -37.0611, -283.274, -92.6472, 1.03 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 35/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -16.8074, -263.945, -110.301, 0.52 ) }
    dend_57 { pt3dadd( -16.8453, -264.9, -111.234, 0.52 ) }
    dend_57 { pt3dadd( -16.8486, -264.952, -111.278, 0.52 ) }
    dend_57 { pt3dadd( -16.9208, -265.723, -111.89, 0.66 ) }
    dend_57 { pt3dadd( -17.1198, -267.42, -113.11, 0.44 ) }
    dend_57 { pt3dadd( -17.3109, -268.679, -113.985, 0.37 ) }
    dend_57 { pt3dadd( -17.4397, -269.369, -114.43, 0.66 ) }
    dend_57 { pt3dadd( -17.623, -270.145, -114.858, 0.88 ) }
    dend_57 { pt3dadd( -17.8687, -271.018, -115.312, 0.88 ) }
    dend_57 { pt3dadd( -18.1201, -271.797, -115.68, 0.88 ) }
    dend_57 { pt3dadd( -18.4602, -272.864, -116.153, 0.59 ) }
    dend_57 { pt3dadd( -18.7295, -273.843, -116.613, 0.37 ) }
    dend_57 { pt3dadd( -18.9603, -274.872, -117.154, 0.37 ) }
    dend_57 { pt3dadd( -19.1263, -275.985, -117.802, 0.74 ) }
    dend_57 { pt3dadd( -19.1623, -276.466, -118.089, 1.11 ) }
    dend_57 { pt3dadd( -19.2154, -278.16, -119.19, 0.74 ) }
    dend_57 { pt3dadd( -19.2193, -278.964, -119.731, 0.44 ) }
    dend_57 { pt3dadd( -19.2202, -279.02, -119.768, 0.44 ) }
    dend_57 { pt3dadd( -19.2617, -280.213, -120.54, 1.03 ) }
    dend_57 { pt3dadd( -19.3094, -280.85, -120.892, 1.33 ) }
    dend_57 { pt3dadd( -19.5274, -282.271, -121.542, 0.66 ) }
    dend_57 { pt3dadd( -19.8154, -283.552, -121.962, 0.66 ) }
    dend_57 { pt3dadd( -20.1469, -284.819, -122.31, 0.88 ) }
    dend_57 { pt3dadd( -20.1628, -284.885, -122.324, 0.88 ) }
    dend_57 { pt3dadd( -20.3846, -285.882, -122.487, 1.11 ) }
    dend_57 { pt3dadd( -20.6785, -287.382, -122.679, 1.03 ) }
    dend_57 { pt3dadd( -20.861, -288.509, -122.753, 0.52 ) }
    dend_57 { pt3dadd( -20.8727, -288.577, -122.763, 0.52 ) }
    dend_57 { pt3dadd( -21.103, -289.715, -123.033, 0.88 ) }
    dend_57 { pt3dadd( -21.2714, -290.441, -123.249, 0.96 ) }
    dend_57 { pt3dadd( -21.4483, -291.077, -123.524, 0.96 ) }
    dend_57 { pt3dadd( -21.6785, -291.718, -123.905, 0.66 ) }
    dend_57 { pt3dadd( -22.4855, -293.487, -125.105, 0.44 ) }
    dend_57 { pt3dadd( -22.8058, -294.129, -125.558, 0.96 ) }
    dend_57 { pt3dadd( -23.1366, -294.708, -125.993, 1.25 ) }
    dend_57 { pt3dadd( -23.8349, -295.888, -126.911, 1.11 ) }
    dend_57 { pt3dadd( -24.4607, -296.904, -127.776, 0.74 ) }
    dend_57 { pt3dadd( -24.8069, -297.428, -128.257, 0.74 ) }
    // Section: dend_81, id: dend_81, parent: dend_75 (entry count 73/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -149.291, 59.878, 54.3563, 0.29 ) }
    dend_81 { pt3dadd( -150.768, 60.3678, 54.2994, 0.29 ) }
    dend_81 { pt3dadd( -150.857, 60.3928, 54.2963, 0.29 ) }
    dend_81 { pt3dadd( -151.94, 60.7707, 54.1205, 0.29 ) }
    dend_81 { pt3dadd( -152.025, 60.8025, 54.1028, 0.29 ) }
    dend_81 { pt3dadd( -152.991, 61.2198, 53.9198, 0.66 ) }
    dend_81 { pt3dadd( -153.725, 61.5647, 53.7938, 0.81 ) }
    dend_81 { pt3dadd( -153.788, 61.5953, 53.7835, 0.81 ) }
    dend_81 { pt3dadd( -155.705, 62.5319, 53.6134, 0.29 ) }
    dend_81 { pt3dadd( -155.88, 62.6192, 53.6064, 0.29 ) }
    dend_81 { pt3dadd( -157.281, 63.339, 53.6313, 0.29 ) }
    dend_81 { pt3dadd( -158.893, 64.2097, 53.7543, 0.29 ) }
    dend_81 { pt3dadd( -158.964, 64.2483, 53.7649, 0.29 ) }
    dend_81 { pt3dadd( -160.441, 65.0131, 54.0907, 0.44 ) }
    dend_81 { pt3dadd( -160.51, 65.0487, 54.1146, 0.44 ) }
    dend_81 { pt3dadd( -161.062, 65.3505, 54.3151, 0.44 ) }
    dend_81 { pt3dadd( -161.127, 65.3884, 54.3407, 0.44 ) }
    dend_81 { pt3dadd( -162.26, 66.1593, 54.8186, 0.29 ) }
    dend_81 { pt3dadd( -162.392, 66.2631, 54.8638, 0.29 ) }
    dend_81 { pt3dadd( -163.237, 67.0338, 55.0796, 0.29 ) }
    dend_81 { pt3dadd( -163.652, 67.428, 55.1864, 0.59 ) }
    dend_81 { pt3dadd( -163.773, 67.5486, 55.2183, 0.59 ) }
    dend_81 { pt3dadd( -164.139, 67.9059, 55.3106, 0.59 ) }
    dend_81 { pt3dadd( -165.041, 68.7726, 55.5279, 0.37 ) }
    dend_81 { pt3dadd( -165.176, 68.8937, 55.5585, 0.37 ) }
    dend_81 { pt3dadd( -165.889, 69.5651, 55.6658, 0.37 ) }
    dend_81 { pt3dadd( -165.947, 69.6224, 55.672, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_55()
}

proc basic_shape_55() {
    dend_81 { pt3dadd( -166.747, 70.3935, 55.7271, 0.37 ) }
    dend_81 { pt3dadd( -166.874, 70.5138, 55.7316, 0.37 ) }
    dend_81 { pt3dadd( -167.727, 71.2415, 55.7633, 0.37 ) }
    dend_81 { pt3dadd( -168.877, 72.1262, 55.8099, 0.22 ) }
    dend_81 { pt3dadd( -169.029, 72.2261, 55.819, 0.22 ) }
    dend_81 { pt3dadd( -169.892, 72.7127, 55.8937, 0.22 ) }
    dend_81 { pt3dadd( -169.966, 72.7466, 55.9032, 0.22 ) }
    dend_81 { pt3dadd( -170.975, 72.9562, 56.1923, 0.81 ) }
    dend_81 { pt3dadd( -171.325, 72.9747, 56.3263, 0.81 ) }
    dend_81 { pt3dadd( -172.31, 72.9378, 56.7194, 0.22 ) }
    dend_81 { pt3dadd( -172.387, 72.9299, 56.7466, 0.22 ) }
    dend_81 { pt3dadd( -173.243, 72.7795, 57.0587, 0.22 ) }
    dend_81 { pt3dadd( -175.642, 72.309, 57.8664, 0.22 ) }
    dend_81 { pt3dadd( -175.805, 72.2758, 57.9178, 0.22 ) }
    dend_81 { pt3dadd( -176.966, 72.0409, 58.2731, 0.22 ) }
    dend_81 { pt3dadd( -178.074, 71.8169, 58.5974, 0.22 ) }
    dend_81 { pt3dadd( -179.759, 71.5107, 59.0663, 0.22 ) }
    dend_81 { pt3dadd( -180.963, 71.329, 59.3779, 0.22 ) }
    dend_81 { pt3dadd( -181.053, 71.324, 59.3976, 0.22 ) }
    dend_81 { pt3dadd( -182.39, 71.4388, 59.7256, 0.52 ) }
    dend_81 { pt3dadd( -182.774, 71.5711, 59.8417, 0.81 ) }
    dend_81 { pt3dadd( -182.913, 71.6592, 59.8885, 0.81 ) }
    dend_81 { pt3dadd( -183.231, 71.9372, 59.9827, 0.81 ) }
    dend_81 { pt3dadd( -183.296, 72.0022, 59.9933, 0.81 ) }
    dend_81 { pt3dadd( -184.27, 72.9893, 60.0309, 0.37 ) }
    dend_81 { pt3dadd( -184.803, 73.5629, 59.9987, 0.59 ) }
    dend_81 { pt3dadd( -184.858, 73.6229, 59.9925, 0.59 ) }
    dend_81 { pt3dadd( -185.535, 74.3941, 59.9076, 0.44 ) }
    dend_81 { pt3dadd( -186.644, 75.7268, 59.5814, 0.29 ) }
    dend_81 { pt3dadd( -186.749, 75.8585, 59.5374, 0.29 ) }
    dend_81 { pt3dadd( -187.339, 76.6036, 59.1112, 0.29 ) }
    dend_81 { pt3dadd( -187.378, 76.6526, 59.0774, 0.29 ) }
    dend_81 { pt3dadd( -187.968, 77.3773, 58.5358, 0.29 ) }
    dend_81 { pt3dadd( -188.92, 78.6158, 57.3561, 0.29 ) }
    dend_81 { pt3dadd( -188.952, 78.656, 57.3126, 0.29 ) }
    dend_81 { pt3dadd( -190.106, 79.95, 55.6993, 0.29 ) }
    dend_81 { pt3dadd( -190.14, 79.9837, 55.6525, 0.29 ) }
    dend_81 { pt3dadd( -190.509, 80.3093, 55.1938, 0.66 ) }
    dend_81 { pt3dadd( -192.267, 81.6699, 53.1648, 0.37 ) }
    dend_81 { pt3dadd( -192.384, 81.7486, 53.0492, 0.37 ) }
    dend_81 { pt3dadd( -193.071, 82.1473, 52.4623, 0.29 ) }
    dend_81 { pt3dadd( -193.787, 82.4938, 52.0066, 0.15 ) }
    dend_81 { pt3dadd( -194.238, 82.6913, 51.7647, 0.74 ) }
    dend_81 { pt3dadd( -194.454, 82.767, 51.6862, 0.74 ) }
    dend_81 { pt3dadd( -195.942, 83.1571, 51.4216, 0.37 ) }
    dend_81 { pt3dadd( -196.646, 83.3697, 51.3128, 0.29 ) }
    dend_81 { pt3dadd( -197.59, 83.6985, 51.2354, 0.29 ) }
    dend_81 { pt3dadd( -197.698, 83.7374, 51.2338, 0.29 ) }
    dend_81 { pt3dadd( -199.07, 84.2189, 51.3305, 0.29 ) }
    dend_81 { pt3dadd( -199.232, 84.2782, 51.3571, 0.29 ) }
    dend_81 { pt3dadd( -200.127, 84.6224, 51.5958, 0.29 ) }
    dend_81 { pt3dadd( -200.991, 84.9764, 51.8299, 0.29 ) }
    dend_81 { pt3dadd( -201.065, 85.0064, 51.8446, 0.29 ) }
    dend_81 { pt3dadd( -202.218, 85.4783, 52.0036, 0.29 ) }
    dend_81 { pt3dadd( -203.322, 85.9417, 52.0468, 0.29 ) }
    dend_81 { pt3dadd( -203.536, 86.0276, 52.0409, 0.29 ) }
    dend_81 { pt3dadd( -204.524, 86.4742, 51.9078, 0.29 ) }
    dend_81 { pt3dadd( -205.603, 87.06, 51.6995, 0.52 ) }
    dend_81 { pt3dadd( -206.14, 87.4025, 51.5898, 0.66 ) }
    dend_81 { pt3dadd( -207.351, 88.2962, 51.3216, 0.29 ) }
    dend_81 { pt3dadd( -208.682, 89.3706, 51.0229, 1.11 ) }
    dend_81 { pt3dadd( -210.014, 90.5119, 50.6593, 0.29 ) }
    dend_81 { pt3dadd( -210.721, 91.1566, 50.4417, 0.29 ) }
    dend_81 { pt3dadd( -211.325, 91.7235, 50.2624, 0.74 ) }
    dend_81 { pt3dadd( -211.455, 91.847, 50.2203, 0.74 ) }
    dend_81 { pt3dadd( -211.817, 92.1986, 50.0949, 0.74 ) }
    dend_81 { pt3dadd( -213.686, 93.9239, 49.3533, 0.29 ) }
    dend_81 { pt3dadd( -213.776, 93.9966, 49.319, 0.29 ) }
    dend_81 { pt3dadd( -214.473, 94.5315, 49.0421, 0.29 ) }
    dend_81 { pt3dadd( -214.524, 94.5716, 49.0219, 0.29 ) }
    dend_81 { pt3dadd( -215.398, 95.2712, 48.6998, 0.59 ) }
    dend_81 { pt3dadd( -217.038, 96.663, 48.1904, 0.29 ) }
    dend_81 { pt3dadd( -217.104, 96.7265, 48.1801, 0.29 ) }
    dend_81 { pt3dadd( -217.576, 97.2399, 48.1402, 0.29 ) }
    dend_81 { pt3dadd( -217.816, 97.5794, 48.1491, 0.59 ) }
    dend_81 { pt3dadd( -217.863, 97.6583, 48.1576, 0.59 ) }
    dend_81 { pt3dadd( -218.213, 98.3452, 48.2793, 0.59 ) }
    dend_81 { pt3dadd( -218.539, 99.0604, 48.4441, 0.29 ) }
    dend_81 { pt3dadd( -218.846, 99.6425, 48.5633, 0.29 ) }
    dend_81 { pt3dadd( -219.863, 101.328, 48.8663, 0.29 ) }
    dend_81 { pt3dadd( -219.905, 101.385, 48.8756, 0.29 ) }
    dend_81 { pt3dadd( -220.518, 102.122, 48.989, 0.29 ) }
    dend_81 { pt3dadd( -220.812, 102.419, 49.0299, 0.29 ) }
    dend_81 { pt3dadd( -221.672, 103.122, 49.1144, 0.52 ) }
    dend_81 { pt3dadd( -222.066, 103.378, 49.1517, 0.59 ) }
    dend_81 { pt3dadd( -223.255, 104.001, 49.2853, 0.22 ) }
    dend_81 { pt3dadd( -223.576, 104.175, 49.3092, 0.22 ) }
    dend_81 { pt3dadd( -224.221, 104.577, 49.3558, 0.22 ) }
    dend_81 { pt3dadd( -224.818, 105.023, 49.4038, 0.81 ) }
    dend_81 { pt3dadd( -225.22, 105.364, 49.4346, 1.03 ) }
    dend_81 { pt3dadd( -225.866, 105.933, 49.4705, 0.52 ) }
    dend_81 { pt3dadd( -227.051, 106.978, 49.5093, 0.29 ) }
    dend_81 { pt3dadd( -228.416, 108.155, 49.5375, 0.22 ) }
    dend_81 { pt3dadd( -229.715, 109.337, 49.562, 0.22 ) }
    dend_81 { pt3dadd( -229.868, 109.486, 49.5658, 0.22 ) }
    dend_81 { pt3dadd( -230.503, 110.119, 49.5852, 0.74 ) }
    dend_81 { pt3dadd( -230.85, 110.456, 49.6008, 0.74 ) }
    dend_81 { pt3dadd( -231.29, 110.828, 49.6598, 0.74 ) }
    dend_81 { pt3dadd( -240.53, 116.96, 48.0637, 0.74 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 99/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -149.291, 59.878, 54.3563, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_56()
}

proc basic_shape_56() {
    dend_76 { pt3dadd( -149.084, 60.6567, 54.6759, 0.29 ) }
    dend_76 { pt3dadd( -148.692, 62.0416, 55.1832, 0.29 ) }
    dend_76 { pt3dadd( -148.675, 62.1, 55.2039, 0.29 ) }
    dend_76 { pt3dadd( -148.31, 63.4106, 55.6627, 0.29 ) }
    dend_76 { pt3dadd( -148.294, 63.4765, 55.6858, 0.29 ) }
    dend_76 { pt3dadd( -147.857, 65.4389, 56.381, 0.52 ) }
    dend_76 { pt3dadd( -147.656, 66.5436, 56.7803, 0.52 ) }
    dend_76 { pt3dadd( -147.546, 67.3456, 57.0655, 0.52 ) }
    dend_76 { pt3dadd( -147.525, 67.5741, 57.1424, 0.52 ) }
    dend_76 { pt3dadd( -147.499, 68.5397, 57.5431, 0.52 ) }
    dend_76 { pt3dadd( -147.541, 69.2577, 57.9042, 0.81 ) }
    dend_76 { pt3dadd( -147.571, 69.3875, 57.9882, 0.81 ) }
    dend_76 { pt3dadd( -147.756, 69.9086, 58.4002, 0.66 ) }
    dend_76 { pt3dadd( -147.983, 70.4022, 58.8162, 0.37 ) }
    dend_76 { pt3dadd( -148.738, 71.876, 60.109, 0.37 ) }
    dend_76 { pt3dadd( -148.766, 71.9286, 60.1523, 0.37 ) }
    dend_76 { pt3dadd( -149.067, 72.4679, 60.5547, 0.52 ) }
    dend_76 { pt3dadd( -149.109, 72.5492, 60.6042, 0.52 ) }
    dend_76 { pt3dadd( -149.637, 73.603, 61.1407, 0.44 ) }
    dend_76 { pt3dadd( -149.696, 73.7284, 61.192, 0.44 ) }
    dend_76 { pt3dadd( -150.119, 74.6606, 61.4453, 0.44 ) }
    dend_76 { pt3dadd( -150.238, 74.9448, 61.5249, 0.44 ) }
    dend_76 { pt3dadd( -150.759, 76.3792, 61.952, 0.44 ) }
    dend_76 { pt3dadd( -150.781, 76.4464, 61.9731, 0.44 ) }
    dend_76 { pt3dadd( -150.977, 77.1357, 62.2056, 0.52 ) }
    dend_76 { pt3dadd( -151.01, 77.2821, 62.253, 0.52 ) }
    dend_76 { pt3dadd( -151.182, 78.1839, 62.5476, 0.37 ) }
    dend_76 { pt3dadd( -151.336, 79.2347, 62.8792, 0.74 ) }
    dend_76 { pt3dadd( -151.345, 79.3046, 62.9016, 0.74 ) }
    dend_76 { pt3dadd( -151.402, 79.7884, 63.0582, 0.74 ) }
    dend_76 { pt3dadd( -151.657, 82.0533, 63.8783, 0.52 ) }
    dend_76 { pt3dadd( -151.664, 82.1218, 63.905, 0.52 ) }
    dend_76 { pt3dadd( -151.845, 83.9548, 64.6839, 0.52 ) }
    dend_76 { pt3dadd( -152.053, 86.1069, 65.6599, 0.52 ) }
    dend_76 { pt3dadd( -152.061, 86.1929, 65.7011, 0.52 ) }
    dend_76 { pt3dadd( -152.191, 87.5622, 66.3988, 0.88 ) }
    dend_76 { pt3dadd( -152.22, 87.8537, 66.5607, 0.88 ) }
    dend_76 { pt3dadd( -152.369, 89.4883, 67.4677, 0.52 ) }
    dend_76 { pt3dadd( -152.452, 90.5274, 68.0438, 0.52 ) }
    dend_76 { pt3dadd( -152.464, 90.7169, 68.158, 0.52 ) }
    dend_76 { pt3dadd( -152.526, 91.6753, 68.6997, 0.52 ) }
    dend_76 { pt3dadd( -152.55, 91.9466, 68.8373, 0.52 ) }
    dend_76 { pt3dadd( -152.643, 92.6243, 69.1722, 0.59 ) }
    dend_76 { pt3dadd( -152.77, 93.4137, 69.5492, 0.37 ) }
    dend_76 { pt3dadd( -152.99, 94.6867, 70.1448, 0.44 ) }
    dend_76 { pt3dadd( -153.224, 96.0713, 70.7768, 0.22 ) }
    dend_76 { pt3dadd( -153.438, 97.3212, 71.3329, 0.22 ) }
    dend_76 { pt3dadd( -153.526, 97.8498, 71.5761, 0.37 ) }
    dend_76 { pt3dadd( -153.734, 99.0771, 72.1485, 0.22 ) }
    dend_76 { pt3dadd( -153.754, 99.2008, 72.2063, 0.22 ) }
    dend_76 { pt3dadd( -153.905, 100.216, 72.7413, 0.22 ) }
    dend_76 { pt3dadd( -153.913, 100.277, 72.7822, 0.22 ) }
    dend_76 { pt3dadd( -153.986, 101.253, 73.4805, 0.22 ) }
    dend_76 { pt3dadd( -153.988, 101.306, 73.518, 0.22 ) }
    dend_76 { pt3dadd( -154.057, 102.575, 74.4422, 0.22 ) }
    dend_76 { pt3dadd( -154.118, 104.007, 75.4654, 0.66 ) }
    dend_76 { pt3dadd( -154.138, 104.558, 75.8497, 0.96 ) }
    dend_76 { pt3dadd( -154.172, 105.569, 76.5686, 0.22 ) }
    dend_76 { pt3dadd( -154.203, 106.438, 77.1853, 0.22 ) }
    dend_76 { pt3dadd( -154.205, 106.505, 77.2345, 0.22 ) }
    dend_76 { pt3dadd( -154.227, 107.005, 77.6059, 0.59 ) }
    dend_76 { pt3dadd( -154.265, 107.454, 77.8872, 0.88 ) }
    dend_76 { pt3dadd( -154.39, 108.53, 78.5097, 0.44 ) }
    dend_76 { pt3dadd( -154.482, 109.186, 78.8566, 0.29 ) }
    dend_76 { pt3dadd( -154.508, 109.391, 78.9541, 0.29 ) }
    dend_76 { pt3dadd( -154.562, 109.882, 79.164, 0.29 ) }
    dend_76 { pt3dadd( -154.632, 111.154, 79.5763, 0.74 ) }
    dend_76 { pt3dadd( -154.636, 111.778, 79.7259, 0.29 ) }
    dend_76 { pt3dadd( -154.626, 112.435, 79.8426, 0.44 ) }
    dend_76 { pt3dadd( -154.61, 112.964, 79.9388, 0.59 ) }
    dend_76 { pt3dadd( -154.608, 113.037, 79.9539, 0.59 ) }
    dend_76 { pt3dadd( -154.556, 114.595, 80.3254, 0.22 ) }
    dend_76 { pt3dadd( -154.551, 114.822, 80.391, 0.22 ) }
    dend_76 { pt3dadd( -154.552, 116.08, 80.8567, 0.22 ) }
    dend_76 { pt3dadd( -154.552, 116.145, 80.8864, 0.22 ) }
    dend_76 { pt3dadd( -154.543, 116.858, 81.2717, 0.44 ) }
    dend_76 { pt3dadd( -154.541, 116.929, 81.3164, 0.44 ) }
    dend_76 { pt3dadd( -154.528, 117.282, 81.5921, 0.44 ) }
    dend_76 { pt3dadd( -154.429, 118.405, 82.5406, 0.29 ) }
    dend_76 { pt3dadd( -154.359, 118.801, 82.9245, 0.44 ) }
    dend_76 { pt3dadd( -154.336, 118.91, 83.036, 0.44 ) }
    dend_76 { pt3dadd( -154.209, 119.391, 83.5821, 0.44 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 82/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -24.8069, -297.428, -128.257, 0.29 ) }
    dend_59 { pt3dadd( -25.7162, -297.543, -128.094, 0.29 ) }
    dend_59 { pt3dadd( -26.8213, -297.844, -127.943, 0.29 ) }
    dend_59 { pt3dadd( -27.0233, -297.912, -127.919, 0.59 ) }
    dend_59 { pt3dadd( -27.7433, -298.168, -127.834, 0.66 ) }
    dend_59 { pt3dadd( -27.8872, -298.216, -127.83, 0.66 ) }
    dend_59 { pt3dadd( -28.6339, -298.446, -127.835, 0.66 ) }
    dend_59 { pt3dadd( -29.9496, -298.898, -127.883, 0.22 ) }
    dend_59 { pt3dadd( -30.4902, -299.099, -127.909, 0.66 ) }
    dend_59 { pt3dadd( -31.1252, -299.335, -127.945, 0.66 ) }
    dend_59 { pt3dadd( -32.8245, -299.955, -128.062, 0.22 ) }
    dend_59 { pt3dadd( -33.8108, -300.302, -128.138, 0.22 ) }
    dend_59 { pt3dadd( -35.188, -300.762, -128.262, 0.22 ) }
    dend_59 { pt3dadd( -36.148, -301.044, -128.35, 0.74 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 96/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -24.8069, -297.428, -128.257, 0.29 ) }
    dend_58 { pt3dadd( -24.8446, -298.806, -128.678, 0.29 ) }
    dend_58 { pt3dadd( -24.8179, -299.653, -128.977, 0.29 ) }
    dend_58 { pt3dadd( -24.8226, -300.07, -129.123, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_57()
}

proc basic_shape_57() {
    dend_58 { pt3dadd( -24.8368, -300.437, -129.269, 0.88 ) }
    dend_58 { pt3dadd( -24.8419, -300.526, -129.307, 0.88 ) }
    dend_58 { pt3dadd( -24.9017, -301.16, -129.566, 0.88 ) }
    dend_58 { pt3dadd( -24.9853, -302.27, -129.951, 0.22 ) }
    dend_58 { pt3dadd( -25.0459, -302.901, -130.175, 0.22 ) }
    dend_58 { pt3dadd( -25.1243, -303.626, -130.457, 0.88 ) }
    dend_58 { pt3dadd( -25.1282, -303.685, -130.479, 0.88 ) }
    dend_58 { pt3dadd( -25.144, -304.448, -130.753, 0.74 ) }
    dend_58 { pt3dadd( -25.0779, -305.403, -131.056, 0.37 ) }
    dend_58 { pt3dadd( -25.0623, -305.463, -131.071, 0.37 ) }
    dend_58 { pt3dadd( -24.4822, -306.778, -131.219, 0.29 ) }
    dend_58 { pt3dadd( -24.1375, -307.395, -131.232, 0.59 ) }
    dend_58 { pt3dadd( -24.0295, -307.564, -131.229, 0.59 ) }
    dend_58 { pt3dadd( -23.4757, -308.325, -131.191, 0.88 ) }
    dend_58 { pt3dadd( -22.6378, -309.389, -130.957, 0.74 ) }
    dend_58 { pt3dadd( -21.6424, -310.592, -130.551, 0.29 ) }
    dend_58 { pt3dadd( -21.1097, -311.208, -130.288, 0.74 ) }
    dend_58 { pt3dadd( -21.0706, -311.255, -130.267, 0.74 ) }
    dend_58 { pt3dadd( -20.7524, -311.627, -130.079, 0.74 ) }
    dend_58 { pt3dadd( -19.3252, -313.252, -129.07, 0.44 ) }
    dend_58 { pt3dadd( -18.8669, -313.773, -128.662, 0.44 ) }
    // Section: dend_78, id: dend_78, parent: dend_76 (entry count 21/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( -154.209, 119.391, 83.5821, 0.29 ) }
    dend_78 { pt3dadd( -153.355, 118.578, 83.5437, 0.29 ) }
    dend_78 { pt3dadd( -153.256, 118.486, 83.5317, 0.29 ) }
    dend_78 { pt3dadd( -152.947, 118.202, 83.4867, 0.29 ) }
    dend_78 { pt3dadd( -152.897, 118.156, 83.4795, 0.29 ) }
    dend_78 { pt3dadd( -152.184, 117.5, 83.3756, 0.29 ) }
    dend_78 { pt3dadd( -151.875, 117.216, 83.3306, 0.81 ) }
    dend_78 { pt3dadd( -151.501, 116.931, 83.2454, 1.03 ) }
    dend_78 { pt3dadd( -151.45, 116.889, 83.2309, 1.03 ) }
    dend_78 { pt3dadd( -144.759, 111.006, 80.3983, 1.03 ) }
    // Section: dend_77, id: dend_77, parent: dend_76 (entry count 31/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -154.209, 119.391, 83.5821, 0.44 ) }
    dend_77 { pt3dadd( -154.295, 120.653, 84.0368, 0.44 ) }
    dend_77 { pt3dadd( -154.377, 122.068, 84.5363, 0.37 ) }
    dend_77 { pt3dadd( -154.493, 124.628, 85.5344, 0.29 ) }
    dend_77 { pt3dadd( -154.62, 126.89, 86.464, 0.29 ) }
    dend_77 { pt3dadd( -154.667, 127.906, 86.8893, 0.74 ) }
    dend_77 { pt3dadd( -154.686, 128.402, 87.0991, 0.74 ) }
    dend_77 { pt3dadd( -154.691, 129.043, 87.3627, 0.44 ) }
    dend_77 { pt3dadd( -154.633, 130.507, 87.9843, 0.37 ) }
    dend_77 { pt3dadd( -154.496, 132.029, 88.6444, 0.29 ) }
    dend_77 { pt3dadd( -154.333, 133.552, 89.306, 0.29 ) }
    dend_77 { pt3dadd( -154.313, 133.704, 89.3753, 0.29 ) }
    dend_77 { pt3dadd( -154.012, 135.781, 90.3429, 0.29 ) }
    dend_77 { pt3dadd( -153.949, 136.176, 90.5255, 0.29 ) }
    dend_77 { pt3dadd( -153.732, 137.467, 91.0956, 0.29 ) }
    dend_77 { pt3dadd( -153.72, 137.531, 91.1263, 0.29 ) }
    dend_77 { pt3dadd( -153.618, 138.748, 91.7519, 0.29 ) }
    dend_77 { pt3dadd( -153.674, 139.41, 92.083, 0.44 ) }
    dend_77 { pt3dadd( -153.706, 139.546, 92.1503, 0.44 ) }
    dend_77 { pt3dadd( -153.861, 140.042, 92.378, 0.29 ) }
    dend_77 { pt3dadd( -153.891, 140.126, 92.4137, 0.29 ) }
    dend_77 { pt3dadd( -154.375, 141.461, 92.8727, 0.29 ) }
    dend_77 { pt3dadd( -155.214, 143.774, 93.5158, 0.29 ) }
    dend_77 { pt3dadd( -155.306, 144.044, 93.5872, 0.29 ) }
    dend_77 { pt3dadd( -155.577, 144.877, 93.8012, 0.74 ) }
    dend_77 { pt3dadd( -155.787, 145.571, 93.978, 0.88 ) }
    dend_77 { pt3dadd( -156.198, 146.962, 94.3293, 0.52 ) }
    dend_77 { pt3dadd( -156.561, 148.221, 94.6468, 0.37 ) }
    dend_77 { pt3dadd( -157.078, 149.955, 95.1143, 0.29 ) }
    dend_77 { pt3dadd( -157.161, 150.225, 95.1935, 0.29 ) }
    dend_77 { pt3dadd( -157.847, 152.415, 95.8866, 0.29 ) }
    dend_77 { pt3dadd( -157.905, 152.597, 95.9503, 0.29 ) }
    dend_77 { pt3dadd( -158.382, 154.07, 96.5469, 0.29 ) }
    dend_77 { pt3dadd( -158.573, 154.628, 96.8049, 0.52 ) }
    dend_77 { pt3dadd( -158.734, 155.057, 97.0376, 0.66 ) }
    dend_77 { pt3dadd( -158.785, 155.185, 97.1164, 0.66 ) }
    dend_77 { pt3dadd( -158.98, 155.63, 97.455, 0.66 ) }
    dend_77 { pt3dadd( -159.017, 155.708, 97.5135, 0.66 ) }
    dend_77 { pt3dadd( -159.418, 156.496, 98.0603, 0.29 ) }
    dend_77 { pt3dadd( -159.552, 156.743, 98.223, 0.22 ) }
    dend_77 { pt3dadd( -159.814, 157.202, 98.5286, 0.52 ) }
    dend_77 { pt3dadd( -159.952, 157.463, 98.6962, 0.52 ) }
    dend_77 { pt3dadd( -160.286, 158.119, 99.1063, 0.29 ) }
    dend_77 { pt3dadd( -160.699, 159.017, 99.6241, 0.29 ) }
    dend_77 { pt3dadd( -161.267, 160.417, 100.425, 0.29 ) }
    dend_77 { pt3dadd( -161.299, 160.502, 100.475, 0.29 ) }
    dend_77 { pt3dadd( -161.781, 161.931, 101.346, 0.29 ) }
    dend_77 { pt3dadd( -161.821, 162.061, 101.427, 0.29 ) }
    dend_77 { pt3dadd( -162.242, 163.612, 102.39, 0.29 ) }
    dend_77 { pt3dadd( -162.556, 164.916, 103.167, 0.29 ) }
    dend_77 { pt3dadd( -162.596, 165.113, 103.262, 0.29 ) }
    dend_77 { pt3dadd( -162.726, 165.797, 103.542, 0.29 ) }
    dend_77 { pt3dadd( -162.737, 165.855, 103.561, 0.29 ) }
    dend_77 { pt3dadd( -162.884, 166.786, 103.815, 0.88 ) }
    dend_77 { pt3dadd( -162.925, 167.071, 103.874, 0.88 ) }
    dend_77 { pt3dadd( -163.099, 168.432, 104.114, 0.22 ) }
    dend_77 { pt3dadd( -163.252, 169.778, 104.311, 0.22 ) }
    dend_77 { pt3dadd( -163.274, 169.985, 104.339, 0.22 ) }
    dend_77 { pt3dadd( -163.424, 171.472, 104.53, 0.22 ) }
    dend_77 { pt3dadd( -163.43, 171.536, 104.539, 0.22 ) }
    dend_77 { pt3dadd( -163.648, 173.555, 104.673, 0.52 ) }
    dend_77 { pt3dadd( -163.83, 175.028, 104.717, 0.29 ) }
    dend_77 { pt3dadd( -163.924, 175.693, 104.701, 0.37 ) }
    dend_77 { pt3dadd( -163.944, 175.828, 104.694, 0.37 ) }
    dend_77 { pt3dadd( -164.066, 176.572, 104.641, 0.37 ) }
    dend_77 { pt3dadd( -164.461, 178.874, 104.356, 0.22 ) }
    dend_77 { pt3dadd( -164.708, 180.254, 104.157, 0.22 ) }
    dend_77 { pt3dadd( -164.72, 180.327, 104.149, 0.22 ) }
    dend_77 { pt3dadd( -164.828, 181.058, 104.076, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_58()
}

proc basic_shape_58() {
    dend_77 { pt3dadd( -164.971, 182.083, 103.998, 0.66 ) }
    dend_77 { pt3dadd( -165.233, 184.167, 103.804, 0.15 ) }
    dend_77 { pt3dadd( -165.412, 185.876, 103.672, 0.15 ) }
    dend_77 { pt3dadd( -165.502, 186.744, 103.554, 0.29 ) }
    dend_77 { pt3dadd( -165.511, 186.817, 103.543, 0.29 ) }
    dend_77 { pt3dadd( -165.579, 187.342, 103.446, 0.29 ) }
    dend_77 { pt3dadd( -165.82, 188.968, 103.132, 0.44 ) }
    dend_77 { pt3dadd( -165.893, 189.415, 103.005, 0.44 ) }
    dend_77 { pt3dadd( -166.135, 190.53, 102.653, 0.22 ) }
    dend_77 { pt3dadd( -166.277, 191.13, 102.485, 0.52 ) }
    dend_77 { pt3dadd( -166.294, 191.2, 102.467, 0.52 ) }
    dend_77 { pt3dadd( -166.424, 191.708, 102.373, 0.88 ) }
    dend_77 { pt3dadd( -167.208, 194.658, 102.078, 0.29 ) }
    dend_77 { pt3dadd( -167.871, 197.107, 101.906, 0.29 ) }
    dend_77 { pt3dadd( -168.076, 197.959, 101.895, 0.29 ) }
    dend_77 { pt3dadd( -168.09, 198.032, 101.899, 0.29 ) }
    dend_77 { pt3dadd( -168.279, 199.465, 102.048, 0.29 ) }
    dend_77 { pt3dadd( -168.338, 200.715, 102.284, 0.29 ) }
    dend_77 { pt3dadd( -168.335, 200.773, 102.302, 0.29 ) }
    dend_77 { pt3dadd( -168.036, 202.506, 102.839, 0.29 ) }
    dend_77 { pt3dadd( -167.757, 203.795, 103.242, 0.59 ) }
    dend_77 { pt3dadd( -167.6, 204.434, 103.44, 0.59 ) }
    dend_77 { pt3dadd( -167.336, 205.543, 103.781, 0.22 ) }
    dend_77 { pt3dadd( -167.065, 206.799, 104.167, 0.22 ) }
    dend_77 { pt3dadd( -167.037, 206.955, 104.215, 0.22 ) }
    dend_77 { pt3dadd( -166.759, 208.893, 104.813, 0.22 ) }
    dend_77 { pt3dadd( -166.743, 209.043, 104.859, 0.22 ) }
    dend_77 { pt3dadd( -166.489, 212.105, 105.812, 0.22 ) }
    dend_77 { pt3dadd( -166.486, 212.185, 105.837, 0.22 ) }
    dend_77 { pt3dadd( -166.502, 214.014, 106.415, 0.22 ) }
    dend_77 { pt3dadd( -166.515, 214.228, 106.483, 0.22 ) }
    dend_77 { pt3dadd( -166.552, 214.535, 106.581, 0.59 ) }
    dend_77 { pt3dadd( -166.654, 215.169, 106.786, 0.59 ) }
    dend_77 { pt3dadd( -166.987, 216.767, 107.187, 0.29 ) }
    dend_77 { pt3dadd( -167.156, 217.5, 107.335, 0.59 ) }
    dend_77 { pt3dadd( -167.446, 218.648, 107.523, 0.52 ) }
    dend_77 { pt3dadd( -167.688, 219.65, 107.667, 0.74 ) }
    dend_77 { pt3dadd( -167.889, 220.52, 107.774, 0.74 ) }
    dend_77 { pt3dadd( -168.237, 222.27, 107.948, 0.22 ) }
    dend_77 { pt3dadd( -168.355, 223.015, 107.999, 0.44 ) }
    dend_77 { pt3dadd( -168.442, 223.679, 108.046, 0.74 ) }
    dend_77 { pt3dadd( -168.484, 224.062, 108.083, 1.03 ) }
    dend_77 { pt3dadd( -168.49, 224.123, 108.089, 1.03 ) }
    dend_77 { pt3dadd( -168.572, 224.943, 108.232, 1.03 ) }
    dend_77 { pt3dadd( -168.579, 225.013, 108.256, 1.03 ) }
    dend_77 { pt3dadd( -168.683, 226.149, 108.628, 0.37 ) }
    dend_77 { pt3dadd( -168.793, 227.279, 108.99, 0.29 ) }
    dend_77 { pt3dadd( -168.708, 236.903, 112.334, 0.29 ) }
    dend_77 { pt3dadd( -169.894, 246.017, 116.729, 0.29 ) }
    dend_77 { pt3dadd( -170.846, 254.916, 121.598, 0.29 ) }
    dend_77 { pt3dadd( -171.428, 263.142, 127.582, 0.29 ) }
    dend_77 { pt3dadd( -171.151, 270.809, 134.286, 0.29 ) }
    dend_77 { pt3dadd( -172.007, 277.196, 142.177, 0.29 ) }
    // Section: dend_80, id: dend_80, parent: dend_78 (entry count 53/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -144.759, 111.006, 80.3983, 0.22 ) }
    dend_80 { pt3dadd( -137.167, 105.162, 78.3314, 0.22 ) }
    dend_80 { pt3dadd( -129.695, 98.9122, 77.2398, 0.22 ) }
    dend_80 { pt3dadd( -121.579, 93.4868, 76.3676, 0.22 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 57/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -144.759, 111.006, 80.3983, 0.22 ) }
    dend_79 { pt3dadd( -137.558, 104.053, 77.4987, 0.22 ) }
    dend_79 { pt3dadd( -130.416, 97.0212, 74.6419, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_92, dend_25, dend_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
    ModelViewParmSubset_2 = new SectionList()
    dend_92 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_98 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_102 ModelViewParmSubset_2.append()
    dend_99 ModelViewParmSubset_2.append()
    dend_97 ModelViewParmSubset_2.append()
    dend_94 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_104 ModelViewParmSubset_2.append()
    dend_103 ModelViewParmSubset_2.append()
    dend_101 ModelViewParmSubset_2.append()
    dend_100 ModelViewParmSubset_2.append()
    dend_96 ModelViewParmSubset_2.append()
    dend_95 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_81 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_92, dend_25, dend_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_92 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_98 ModelViewParmSubset_4.append()
    dend_93 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_102 ModelViewParmSubset_4.append()
    dend_99 ModelViewParmSubset_4.append()
    dend_97 ModelViewParmSubset_4.append()
    dend_94 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_104 ModelViewParmSubset_4.append()
    dend_103 ModelViewParmSubset_4.append()
    dend_101 ModelViewParmSubset_4.append()
    dend_100 ModelViewParmSubset_4.append()
    dend_96 ModelViewParmSubset_4.append()
    dend_95 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_91 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_92 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_93 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_41 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_26 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_102]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_102 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_99]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_99 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_97]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_97 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_27 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_20 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_15 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_103]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_103 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_100]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_100 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_96]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_96 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_95]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_95 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_67 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_66 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_48 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_43 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_31 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_29 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_28 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_21 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_17 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_16 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_11 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_4 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_49 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_44 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_35 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_23 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_19 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_5 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_72 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_69 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_62 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_53 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_50 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_46 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_39 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_36 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_90 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_89 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_73 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_70 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_63 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_38 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_37 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_9 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_83 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_56 OneSecGrp_SectionRef_93.append()

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_55 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_85 OneSecGrp_SectionRef_95.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_84 OneSecGrp_SectionRef_96.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_82 OneSecGrp_SectionRef_97.append()

    // Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_98 = new SectionList()
    dend_75 OneSecGrp_SectionRef_98.append()

    // Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_101 = new SectionList()
    dend_81 OneSecGrp_SectionRef_101.append()

    // Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_102 = new SectionList()
    dend_76 OneSecGrp_SectionRef_102.append()

    // Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_106 = new SectionList()
    dend_77 OneSecGrp_SectionRef_106.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_14 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_3 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_98]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_98 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_65 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_30 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_34 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_40 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_101]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_101 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_52 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_6 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_7 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_8 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_13 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_12 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_10 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_94]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_94 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_24 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_51 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_104]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_104 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_54 OneSecGrp_SectionRef_86.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_33 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_61 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_18 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_32 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_87 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_91 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_68 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_88 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_64 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_99 = new SectionList()
    dend_60 OneSecGrp_SectionRef_99.append()

    // Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_100 = new SectionList()
    dend_57 OneSecGrp_SectionRef_100.append()

    // Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_103 = new SectionList()
    dend_59 OneSecGrp_SectionRef_103.append()

    // Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_104 = new SectionList()
    dend_58 OneSecGrp_SectionRef_104.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_86 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_71 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_22 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_47 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_45 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_74 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_105 = new SectionList()
    dend_78 OneSecGrp_SectionRef_105.append()

    // Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_108 = new SectionList()
    dend_79 OneSecGrp_SectionRef_108.append()

    // Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_107 = new SectionList()
    dend_80 OneSecGrp_SectionRef_107.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()
    dend_94 basal.append()
    dend_95 basal.append()
    dend_96 basal.append()
    dend_97 basal.append()
    dend_98 basal.append()
    dend_99 basal.append()
    dend_100 basal.append()
    dend_101 basal.append()
    dend_102 basal.append()
    dend_103 basal.append()
    dend_104 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_91, dend_88, dend_88, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_90, dend_90, dend_90, dend_90, dend_90, dend_89, dend_89, dend_89, dend_89, dend_89, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_80, dend_80, dend_80, dend_79, dend_79]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_42 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_87 all.append()
    dend_87 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_91 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_50()
}

proc subsets_50() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_51()
}

proc subsets_51() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_52()
}

proc subsets_52() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_53()
}

proc subsets_53() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_54()
}

proc subsets_54() {
    dend_54 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_55()
}

proc subsets_55() {
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_56()
}

proc subsets_56() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_57()
}

proc subsets_57() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_58()
}

proc subsets_58() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_59()
}

proc subsets_59() {
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_60()
}

proc subsets_60() {
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_61()
}

proc subsets_61() {
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_79 all.append()
    dend_79 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_92 nseg = 3
    dend_93 nseg = 5
    dend_41 nseg = 3
    dend_26 nseg = 3
    dend_102 nseg = 7
    dend_99 nseg = 3
    dend_97 nseg = 3
    dend_27 nseg = 11
    dend_20 nseg = 5
    dend_15 nseg = 3
    dend_2 nseg = 11
    dend_103 nseg = 5
    dend_100 nseg = 3
    dend_96 nseg = 3
    dend_95 nseg = 5
    dend_67 nseg = 9
    dend_66 nseg = 5
    dend_48 nseg = 3
    dend_43 nseg = 17
    dend_31 nseg = 7
    dend_29 nseg = 3
    dend_28 nseg = 5
    dend_21 nseg = 11
    dend_17 nseg = 7
    dend_16 nseg = 7
    dend_11 nseg = 7
    dend_4 nseg = 3
    dend_49 nseg = 3
    dend_44 nseg = 3
    dend_35 nseg = 3
    dend_23 nseg = 3
    dend_19 nseg = 3
    dend_5 nseg = 3
    dend_72 nseg = 3
    dend_69 nseg = 5
    dend_62 nseg = 9
    dend_53 nseg = 5
    dend_50 nseg = 5
    dend_46 nseg = 3
    dend_39 nseg = 5
    dend_36 nseg = 5
    dend_90 nseg = 3
    dend_89 nseg = 3
    dend_73 nseg = 7
    dend_70 nseg = 3
    dend_63 nseg = 5
    dend_38 nseg = 5
    dend_37 nseg = 5
    dend_9 nseg = 7
    dend_83 nseg = 7
    dend_56 nseg = 3
    dend_55 nseg = 3
    dend_85 nseg = 7
    dend_84 nseg = 5
    dend_82 nseg = 5
    dend_75 nseg = 3
    dend_81 nseg = 5
    dend_76 nseg = 3
    dend_77 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L6_DBC_4fe83bdbb1_0_0


