// Cell: bNAC219_L23_LBC_fe2122c75c_0_0
/*
{
  "id" : "bNAC219_L23_LBC_fe2122c75c_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.56398, 12.1856, -3.45915, 3.25378", "-2.26706, 10.9606, -3.11058, 4.92468", "-1.97014, 9.73565, -2.76202, 6.49677", "-1.67322, 8.51066, -2.41345, 7.93038", "-1.3763, 7.28567, -2.06488, 8.78195", "-1.07938, 6.06068, -1.71632, 9.51699", "-0.782463, 4.83569, -1.36775, 10.3263", "-0.485543, 3.6107, -1.01918, 11.1493", "-0.188623, 2.38571, -0.670618, 11.9011", "0.108296, 1.16072, -0.322051, 12.0825", "0.405216, -0.0642733, 0.026515, 12.1848", "0.702136, -1.28926, 0.375081, 12.2225", "0.999056, -2.51425, 0.723648, 11.698", "1.29598, -3.73924, 1.07221, 11.5084", "1.5929, -4.96423, 1.42078, 11.8466", "1.88982, -6.18922, 1.76935, 11.6542", "2.18674, -7.41421, 2.11791, 11.2017", "2.48366, -8.6392, 2.46648, 10.0847", "2.78057, -9.86419, 2.81505, 8.25314", "3.07749, -11.0892, 3.16361, 6.3237", "3.37441, -12.3142, 3.51218, 3.70524" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "2.77471, -11.4083, 13.4707, 3.61", "2.63478, -12.8149, 13.3152, 3.61", "2.22995, -16.8844, 12.8653, 3.06", "1.89507, -20.2507, 12.4932, 3.06", "1.56279, -23.5909, 12.1239, 2.78", "1.25468, -26.6881, 11.7815, 2.78" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999990524732351
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-4.14529, 12.1872, -7.22925, 2.5", "-5.0014, 13.3435, -6.34662, 2.5", "-9.2906, 18.0533, -2.74838, 1.39", "-10.7052, 19.6066, -1.56172, 1.11", "-12.4868, 21.5629, -0.0671345, 0.83", "-13.1861, 22.3308, 0.519512, 0.83", "-14.5717, 23.8524, 1.68196, 1.39", "-15.8356, 25.0025, 2.5141, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999990524732351
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "6.59471, -1.84501, -11.6093, 3.33", "6.86811, -1.89897, -11.5671, 3.33", "8.59196, -2.23919, -11.3011, 2.5" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999990524732351
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-1.40529, -1.55801, -18.0493, 1.11", "-3.85094, -2.38853, -17.4849, 1.11", "-7.25704, -3.38941, -17.2111, 1.11", "-9.23901, -4.05867, -17.0786, 1.11", "-12.1767, -5.38156, -16.8093, 0.83", "-14.8421, -6.71995, -16.9446, 0.83", "-18.2199, -8.505, -17.436, 1.11", "-21.3529, -10.3259, -18.4137, 0.83", "-24.2154, -11.984, -19.6383, 0.83", "-28.4832, -14.1046, -21.6721, 0.83", "-34.8623, -16.8229, -24.8828, 1.11", "-36.7315, -17.5606, -25.8841, 0.56", "-39.146, -18.4376, -27.153, 1.11", "-41.8587, -19.2301, -28.5209, 0.56", "-44.9968, -19.6849, -30.0852, 0.56", "-46.5413, -19.6873, -30.7198, 0.56", "-49.3254, -19.4896, -31.2915, 1.11", "-51.5334, -19.1515, -31.7366, 0.28", "-52.6322, -18.9335, -31.9469, 0.28", "-55.2352, -18.3554, -32.6391, 1.11", "-57.112, -17.9519, -33.2764, 0.28", "-59.0475, -17.5112, -33.9877, 0.83", "-62.5173, -16.6084, -35.4075, 0.56", "-64.9864, -15.9447, -36.5339, 0.56", "-67.79, -15.2556, -37.9573, 0.83", "-69.6258, -14.8497, -39.0434, 0.28", "-71.6614, -14.3894, -40.4138, 0.56", "-73.2188, -14.0361, -41.7664, 0.28", "-74.3273, -13.7839, -42.8809, 1.39", "-74.7168, -13.6788, -43.3468, 1.39", "-76.0441, -13.287, -45.0605, 0.28", "-76.9992, -13.0449, -46.3461, 1.39", "-80.3409, -12.4939, -51.0295, 0.28", "-81.0468, -12.4756, -51.9136, 0.28", "-82.5449, -12.5937, -53.5961, 0.28", "-82.7509, -12.6224, -53.7861, 0.56", "-85.2521, -13.0873, -55.583, 0.28", "-86.8316, -13.4787, -56.4783, 1.67", "-89.3627, -14.2078, -57.5586, 0.28", "-90.7097, -14.6167, -58.0932, 0.56", "-94.2542, -15.7671, -59.4021, 0.28", "-95.7622, -16.2718, -60.0078, 0.83", "-99.0743, -17.4227, -61.3685, 0.28", "-100.06, -17.8082, -61.8216, 0.83", "-101.551, -18.445, -62.668, 0.28", "-102.548, -18.8512, -63.313, 0.56", "-105.712, -20.11, -65.5102, 0.28", "-106.524, -20.3541, -66.0447, 1.67", "-110.128, -21.1617, -68.2, 0.28", "-112.768, -21.6299, -69.6053, 0.83", "-116.837, -22.1639, -71.5091, 0.28", "-117.869, -22.2359, -71.9289, 0.83", "-122.045, -22.3099, -73.2909, 0.28", "-123.668, -22.2733, -73.7777, 0.83", "-125.745, -22.1016, -74.2669, 0.28", "-126.138, -22.065, -74.3246, 0.56", "-130.177, -21.728, -74.6674, 0.28", "-131.849, -21.6074, -74.8268, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999990524732351,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.73529, -10.4858, 1.49075, 3.06", "-2.52807, -11.4543, 1.6201, 2.78", "-4.49187, -13.8535, 1.94052, 2.78", "-6.25102, -16.0027, 2.22755, 2.78" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999990524732351
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "3.37441, -12.3142, 3.51218, 0.83", "6.90787, -26.8921, 3.51218, 0.83", "10.4413, -41.47, 3.51218, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "1.25468, -26.6881, 11.7815, 0.83", "-2.09216, -30.0815, 7.30183, 0.83", "-3.38089, -31.3882, 5.57688, 1.11", "-5.13742, -33.1692, 3.22579, 1.39" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "1.25468, -26.6881, 11.7815, 1.67", "0.96026, -29.3957, 14.3442, 1.67", "0.691973, -31.8631, 16.6795, 1.67", "0.43874, -34.192, 18.8837, 1.39", "0.207722, -36.3166, 20.8946, 1.39", "0.097224, -37.3328, 21.8564, 1.67" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-15.8356, 25.0025, 2.5141, 0.56", "-18.4501, 23.4988, 4.10389, 0.56", "-20.1894, 22.7125, 5.29166, 0.56", "-22.0089, 22.1344, 6.59036, 0.56", "-24.1419, 21.6372, 8.12006, 0.56", "-25.4416, 21.3352, 9.05659, 0.56", "-28.4367, 20.5264, 11.032, 0.56", "-30.5498, 20.1698, 12.4077, 0.83", "-32.5663, 19.9624, 13.7847, 0.83", "-33.8555, 19.8634, 14.6249, 0.83", "-36.4102, 19.528, 16.2624, 0.83", "-39.1952, 19.0519, 18.0181, 0.83", "-43.4728, 17.9933, 20.6734, 0.83", "-46.6241, 17.01, 22.6304, 0.83", "-49.0676, 16.1419, 24.166, 0.56", "-52.5303, 14.7531, 26.2414, 0.56", "-53.6576, 14.2807, 26.9276, 0.56", "-55.4664, 13.4941, 28.114, 0.56", "-56.3179, 13.0623, 28.6862, 0.56", "-57.8499, 12.2592, 29.7362, 0.83", "-60.7217, 10.9047, 31.7893, 0.56", "-62.524, 10.1951, 33.0338, 0.56", "-65.4436, 8.97628, 35.2066, 0.56", "-68.3233, 7.87709, 37.4772, 0.56" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-15.8356, 25.0025, 2.5141, 0.56", "-18.6808, 24.3787, 3.04837, 0.56", "-20.3608, 24.285, 3.24186, 0.56", "-24.9361, 24.0298, 3.7688, 0.83", "-28.3984, 23.8367, 4.16755, 0.83", "-30.7508, 23.7056, 4.43848, 0.83", "-33.0146, 23.5793, 4.6992, 0.83", "-36.8093, 23.8267, 5.00676, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "8.59196, -2.23919, -11.3011, 0.83", "11.6866, -2.40681, -13.1496, 0.83", "15.0691, -2.07174, -14.9886, 0.83", "18.2495, -1.27942, -16.5119, 0.83", "21.2611, -0.212873, -17.7691, 0.83", "24.7358, 1.22452, -19.0489, 0.83", "30.2553, 3.57834, -20.8709, 0.56", "33.8987, 5.47864, -21.8594, 0.83", "37.2523, 7.70883, -22.6314, 0.83", "38.636, 8.81083, -22.8035, 0.56", "39.6927, 9.76115, -22.7776, 0.56", "40.845, 11.1771, -22.5282, 0.56", "41.9723, 13.5038, -21.4121, 0.83" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "8.59196, -2.23919, -11.3011, 1.94", "11.299, -3.8217, -12.8639, 1.94", "15.4347, -6.23933, -15.2514, 1.94", "17.7845, -7.61297, -16.6079, 1.94", "20.4508, -9.17163, -18.1472, 1.94" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-6.25102, -16.0027, 2.22755, 1.11", "-5.00347, -18.081, 4.94894, 1.11", "-4.06561, -19.236, 6.64062, 1.11", "-1.21322, -21.9627, 11.1807, 1.11", "0.0363008, -23.056, 13.1099, 1.11", "1.3, -24.1618, 15.061, 0.83", "2.51926, -25.2287, 16.9435, 0.83", "4.75696, -26.7961, 20.0177, 0.83", "6.8827, -28.0954, 22.7023, 0.83", "8.71828, -28.9639, 24.7415, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-6.25102, -16.0027, 2.22755, 1.39", "-10.2477, -15.5151, 3.36135, 1.39", "-12.4306, -15.2489, 3.98063, 1.39", "-13.4966, -15.1188, 4.28305, 1.39", "-15.7758, -14.8408, 4.92963, 1.67" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "10.4413, -41.47, 3.51218, 0.56", "13.9748, -56.0478, 3.51218, 0.56", "17.5083, -70.6257, 3.51218, 0.56" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "-5.13742, -33.1692, 3.22579, 0.83", "-4.27253, -34.7673, 1.72554, 0.83", "-3.51916, -36.6198, 0.109802, 0.83", "-3.10485, -38.1873, -1.17054, 0.83", "-2.3283, -41.9266, -4.18598, 0.83", "-1.16196, -48.2318, -8.98745, 0.56", "-0.940046, -49.9258, -10.1461, 0.56", "-0.877841, -51.9554, -11.4856, 1.11", "-0.820825, -54.3695, -13.026, 0.56", "-0.613187, -56.3666, -14.362, 0.56", "-0.196891, -58.3001, -15.589, 0.56", "0.642588, -61.0858, -17.1219, 0.83", "1.87791, -63.7674, -18.7802, 0.56", "3.48379, -66.5324, -20.6528, 0.56", "5.58121, -69.8644, -22.9849, 1.11", "6.45548, -71.3369, -24.1182, 0.56", "7.44716, -73.1435, -25.7908, 0.56", "8.25497, -74.8595, -27.552, 0.56", "8.65991, -76.2973, -28.968, 0.28", "8.76132, -77.5605, -30.2313, 0.83", "8.63759, -80.4754, -33.0533, 0.28", "8.4192, -82.9825, -35.2346, 1.39", "7.97979, -86.3183, -37.8335, 0.28", "7.7842, -87.9469, -39.0384, 0.56", "7.58964, -90.7472, -40.8434, 0.28", "7.59477, -92.3275, -41.7181, 2.22", "7.91176, -96.7831, -43.519, 0.28", "8.20284, -98.7361, -44.1442, 0.56", "8.79113, -101.1, -44.8351, 0.56", "9.43582, -102.976, -45.3736, 0.28", "10.0421, -104.449, -45.8148, 0.83", "11.0685, -106.858, -46.6434, 0.28", "11.8118, -108.644, -47.299, 0.83", "12.9831, -111.8, -48.2872, 0.28", "13.3671, -113.103, -48.6564, 1.39", "14.4874, -116.554, -49.3966, 0.28", "15.1414, -118.491, -49.6877, 0.28", "15.7443, -120.058, -49.9128, 1.94", "17.0324, -123.059, -50.2796, 0.28", "17.5279, -124.09, -50.4308, 1.11", "20.7097, -130.126, -51.7486, 0.28", "21.1898, -131.008, -51.9716, 0.83", "23.3205, -134.922, -53.1518, 0.28", "23.5872, -135.464, -53.3395, 0.83", "25.565, -139.912, -55.0604, 0.28", "26.4405, -142.273, -56.0081, 0.56", "27.3353, -145.642, -57.3737, 0.28", "27.6028, -146.997, -57.8499, 1.39", "28.3055, -151.482, -59.2323, 0.28", "28.4423, -152.459, -59.5102, 0.83", "29.1045, -157.119, -61.189, 0.28", "29.3641, -158.747, -61.8802, 1.11", "30.0281, -162.181, -63.7698, 0.28", "30.4501, -164.112, -64.9796, 0.28", "30.7104, -165.202, -65.7273, 1.11", "32.3165, -171.944, -70.765, 0.28", "32.4677, -172.6, -71.288, 1.94", "33.5466, -176.957, -74.539, 0.28", "33.6073, -177.189, -74.6955, 0.56", "34.241, -179.97, -76.3758, 0.28", "34.6218, -181.9, -77.4162, 1.11", "35.0954, -185.782, -78.975, 0.28", "35.5169, -191.422, -81.0657, 0.28", "35.5392, -193.477, -81.7344, 1.39", "35.4011, -196.97, -82.76, 0.28", "35.253, -198.338, -83.1368, 0.83", "34.4662, -202.636, -83.9916, 0.28", "34.272, -203.23, -84.098, 0.56", "33.3599, -205.04, -84.4341, 0.28", "32.7802, -206.062, -84.6094, 0.83", "31.443, -208.365, -84.9164, 0.28", "29.6095, -211.544, -85.4134, 1.11", "27.6415, -215.021, -86.0541, 0.28", "27.3483, -215.566, -86.1861, 0.56", "26.7921, -216.67, -86.4507, 0.28", "26.5526, -217.15, -86.6509, 0.56", "25.9655, -218.277, -87.2607, 0.28", "25.6997, -218.747, -87.5823, 0.56", "24.5413, -220.798, -88.9105, 0.28", "23.6484, -222.6, -90.2388, 1.11", "21.7936, -226.716, -93.6393, 0.28", "21.5401, -227.365, -94.1976, 0.56", "20.3797, -230.803, -97.2109, 0.28", "19.9571, -232.263, -98.4905, 1.39", "19.0581, -236.12, -101.659, 0.28", "18.7612, -238.195, -103.373, 1.39", "18.682, -239.948, -104.653, 0.28", "18.6894, -240.388, -104.984, 0.83", "18.935, -242.375, -106.558, 0.28", "19.2071, -244.411, -108.141, 0.83", "19.4918, -246.806, -109.292, 0.28", "19.6524, -247.767, -109.621, 0.56" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "-5.13742, -33.1692, 3.22579, 0.56", "-5.69957, -34.9454, 1.38559, 0.56", "-5.88343, -35.4812, 0.833191, 0.28", "-6.28242, -36.5132, -0.23406, 0.83", "-7.04415, -38.1639, -1.82938, 0.56", "-8.02193, -39.9439, -3.52486, 1.11", "-11.4559, -45.952, -9.22941, 0.83", "-13.0127, -48.4812, -11.7521, 0.28", "-13.3726, -49.0147, -12.3713, 0.28", "-14.5092, -50.6147, -14.5067, 0.83", "-15.3141, -51.7519, -16.3883, 0.56", "-15.9308, -52.6071, -17.9167, 0.56", "-16.4881, -53.3793, -19.3255, 1.39", "-18.9534, -56.6218, -25.5806, 0.28", "-19.6453, -57.5312, -27.3013, 1.39", "-21.4502, -59.8502, -31.6148, 0.56", "-22.4653, -61.0829, -33.7988, 0.56", "-23.953, -62.7332, -36.5739, 1.39", "-25.823, -64.7118, -39.6331, 0.28", "-26.2911, -65.2055, -40.1974, 0.83", "-28.0199, -67.1677, -41.9738, 0.28", "-28.228, -67.4433, -42.151, 0.56", "-29.7956, -69.9099, -43.4334, 0.28", "-30.3465, -70.9506, -43.8992, 1.39", "-32.4841, -75.6567, -45.6598, 0.28", "-32.8771, -76.6938, -46.1208, 1.39", "-33.7082, -79.3646, -47.4072, 0.28", "-33.9883, -80.3511, -47.9765, 0.83", "-34.7393, -83.2635, -49.8436, 0.28", "-35.2248, -85.3848, -51.3724, 1.11", "-36.3238, -90.6241, -55.5839, 0.28", "-36.3846, -90.9302, -55.8187, 0.56", "-37.5211, -96.6208, -59.9448, 0.28", "-37.6333, -97.1399, -60.2609, 0.28", "-38.3025, -99.996, -61.6432, 0.28", "-38.6791, -101.48, -62.241, 0.56", "-39.4427, -104.245, -62.9001, 0.28", "-39.7761, -105.436, -63.1628, 1.39", "-40.6886, -108.861, -63.7368, 0.28", "-40.9008, -109.617, -63.9175, 0.83", "-41.7829, -112.215, -64.8646, 0.28", "-41.9538, -112.679, -65.133, 0.83", "-42.8265, -114.94, -66.8484, 0.28", "-42.9828, -115.346, -67.2023, 0.56", "-43.8013, -117.426, -69.0742, 0.28", "-44.6633, -119.669, -70.9597, 0.56", "-46.01, -123.073, -73.5992, 0.28", "-46.3118, -123.881, -74.1392, 0.56", "-47.0712, -126.2, -75.372, 0.28", "-47.7233, -129.062, -76.7898, 1.11", "-47.8886, -130.815, -77.4916, 0.28", "-47.7938, -131.565, -77.7467, 0.56", "-47.4064, -132.868, -78.1796, 0.28", "-47.1595, -133.599, -78.3862, 0.56", "-45.6641, -137.897, -79.4801, 0.28", "-45.4413, -138.64, -79.7017, 0.56", "-44.3094, -142.921, -80.9019, 0.28", "-44.0971, -143.888, -81.1273, 0.56", "-43.199, -149.449, -82.0141, 0.28", "-43.1249, -150.615, -82.1746, 1.11", "-43.1901, -153.875, -82.3546, 0.28", "-43.2719, -155.05, -82.4282, 0.83", "-43.6619, -158.106, -82.6813, 0.28", "-43.9632, -160.12, -82.8456, 1.11", "-44.8938, -165.547, -83.3029, 0.28", "-45.4177, -168.666, -83.4647, 1.11", "-45.875, -171.328, -83.5132, 0.28", "-46.0729, -172.385, -83.5206, 0.56", "-46.8896, -176.654, -83.5391, 0.28", "-47.166, -178.072, -83.4845, 1.11", "-47.8166, -181.145, -83.1205, 0.28", "-48.0812, -182.126, -82.9661, 0.56", "-49.4493, -186.49, -81.9574, 0.28", "-49.8055, -187.573, -81.6691, 0.56", "-50.6174, -189.767, -81.0003, 0.28", "-50.9592, -190.679, -80.6903, 0.56", "-52.1376, -193.589, -79.5845, 0.28", "-52.4186, -194.229, -79.3046, 1.11" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "0.097224, -37.3328, 21.8564, 1.11", "-4.14287, -40.1828, 21.2438, 1.11", "-7.16665, -43.1073, 21.4945, 1.11", "-9.95488, -46.9846, 22.3213, 1.11", "-11.4383, -49.9668, 23.1213, 1.11", "-12.3348, -52.3518, 23.7292, 1.11", "-13.6937, -57.1362, 24.5996, 1.11", "-14.2992, -62.7011, 25.1932, 1.11", "-14.2575, -65.1072, 25.433, 0.83", "-14.0757, -67.3687, 25.7767, 1.11", "-13.9064, -69.2236, 26.0739, 1.11", "-13.742, -72.7914, 26.5919, 0.83", "-13.8464, -74.9782, 26.8147, 0.83", "-14.1106, -76.9925, 26.7451, 1.11", "-14.5147, -79.1252, 26.6715, 0.83", "-14.7205, -80.2611, 26.6207, 1.11", "-15.468, -83.9507, 26.4767, 1.11", "-16.013, -85.5786, 26.4758, 1.11", "-17.8009, -89.4236, 26.3104, 0.83", "-18.8323, -91.2079, 26.1995, 0.83", "-19.9755, -93.0418, 26.0123, 0.83", "-21.5414, -95.3379, 25.6918, 0.83", "-24.8302, -99.532, 24.9785, 0.83", "-27.1946, -102.252, 24.5443, 0.83", "-29.291, -104.517, 24.2914, 0.56", "-31.1794, -106.622, 24.0499, 0.83", "-32.8703, -108.626, 23.7944, 0.56", "-34.4157, -110.71, 23.4511, 0.83", "-35.4949, -112.377, 23.0914, 0.56", "-36.28, -113.509, 22.843, 0.83", "-37.7034, -115.254, 22.479, 0.83", "-39.4235, -117.163, 22.1257, 0.56", "-39.7671, -117.607, 22.1002, 0.56", "-40.8557, -119.382, 22.2208, 0.83", "-41.2411, -120.129, 22.3494, 0.83", "-41.9863, -122.202, 22.6135, 0.56", "-42.2841, -123.585, 22.7435, 0.83", "-42.6606, -126.566, 22.946, 0.83", "-43.047, -128.918, 23.2008, 0.83", "-43.4105, -130.66, 23.4377, 0.83", "-44.5455, -135.165, 24.1095, 0.83", "-44.8442, -136.256, 24.2764, 0.56", "-45.3575, -137.892, 24.4988, 0.56", "-47.0011, -142.472, 24.8301, 0.83", "-47.8165, -144.527, 24.8565, 0.56", "-48.3084, -145.589, 24.8081, 0.83", "-49.4326, -147.733, 24.7986, 0.56", "-51.0281, -151.173, 24.7079, 0.83", "-51.893, -153.496, 24.5713, 0.83", "-52.5182, -155.569, 24.4252, 0.56", "-53.187, -158.228, 24.3219, 1.11", "-54.0976, -161.628, 23.8848, 0.56", "-54.596, -163.324, 23.641, 0.56", "-55.424, -166.254, 23.2141, 0.83", "-55.9508, -168.178, 22.9793, 0.56", "-56.9083, -171.967, 22.5384, 0.83", "-58.566, -178.203, 21.8039, 0.56", "-59.4757, -180.829, 21.4014, 0.56", "-59.9804, -181.992, 21.2573, 0.56", "-61.3342, -184.918, 21.0009, 0.28", "-62.4304, -187.242, 20.9111, 0.56", "-63.2806, -189.025, 21.1223, 0.56", "-64.1335, -191.437, 21.4813, 0.83", "-64.4192, -192.558, 21.5051, 0.28", "-64.7971, -194.814, 21.4195, 0.28", "-65.0127, -196.519, 21.2638, 0.56", "-65.4613, -199.817, 20.8214, 1.67", "-66.048, -204.14, 20.0962, 0.83", "-66.3249, -205.799, 19.7913, 0.83", "-66.9838, -208.243, 19.314, 0.56", "-67.6964, -209.805, 19.0633, 0.56", "-68.3184, -210.779, 18.9528, 0.28", "-69.0776, -211.78, 18.9128, 0.28", "-70.5398, -213.566, 19.3391, 0.83", "-71.5892, -214.948, 19.8406, 0.56", "-73.6793, -217.86, 21.0429, 0.56", "-74.3712, -218.986, 21.5308, 0.56", "-75.2196, -220.724, 22.1759, 0.28", "-76.8565, -224.824, 23.61, 2.22", "-78.0425, -228.197, 24.6768, 0.56", "-79.0002, -231.434, 25.5066, 0.56", "-79.4011, -232.953, 25.7773, 0.56", "-80.7103, -237.062, 26.2893, 0.56", "-81.9055, -240.191, 26.5482, 0.56", "-82.6489, -242.188, 26.5749, 0.56", "-83.1425, -243.559, 26.6058, 0.28", "-84.1911, -246.386, 26.7677, 0.56", "-85.3348, -249.164, 27.0028, 0.56", "-86.4618, -251.887, 27.3236, 2.5", "-87.4615, -254.869, 27.6069, 0.56", "-88.0733, -257.22, 27.8988, 0.56", "-88.5842, -259.393, 28.2096, 0.28", "-88.9742, -261.251, 28.455, 0.56", "-89.2877, -263.064, 28.6006, 0.28", "-89.6019, -264.962, 28.6424, 0.56", "-89.9122, -266.945, 28.7545, 0.28", "-90.1294, -268.385, 28.8575, 0.28", "-90.6031, -270.837, 29.0781, 0.56", "-91.3544, -273.396, 29.3561, 0.28", "-91.9784, -274.955, 29.5452, 0.83", "-93.1596, -277.434, 29.8145, 0.56", "-94.4051, -279.938, 30.0444, 0.56", "-95.3356, -281.832, 30.2491, 1.11", "-96.2717, -283.852, 30.527, 0.28", "-96.618, -284.626, 30.6099, 0.28", "-96.9828, -285.621, 30.6511, 0.83", "-97.4875, -287.463, 30.6876, 0.83", "-97.7309, -288.61, 30.8081, 0.28", "-98.2327, -290.941, 31.1508, 0.56", "-98.7214, -293.675, 31.7868, 0.83", "-99.1844, -296.803, 32.4924, 0.56", "-99.423, -298.547, 32.9573, 0.28", "-99.8622, -301.195, 33.7327, 1.11", "-100.321, -303.37, 34.4052, 0.56", "-101.102, -306.285, 35.3948, 0.56", "-102.198, -310.254, 36.8171, 0.83", "-102.745, -312.506, 37.599, 0.56", "-103.033, -313.935, 38.0359, 0.56", "-103.141, -314.718, 38.2329, 0.56", "-103.383, -316.647, 38.8026, 1.11" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "0.097224, -37.3328, 21.8564, 1.11", "3.4438, -39.1949, 24.9491, 1.11", "4.93559, -40.196, 26.5959, 1.11", "5.99425, -41.0887, 27.976, 0.83", "7.42078, -42.2916, 29.8357, 0.83", "8.65964, -43.3363, 31.4507, 0.83", "10.4236, -44.8238, 33.7504, 1.11", "11.2756, -46.1036, 35.5804, 0.83", "11.7169, -46.9571, 36.8545, 0.83" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-36.8093, 23.8267, 5.00676, 0.56", "-40.6758, 27.4001, 10.363, 0.56", "-43.9499, 29.9381, 13.612, 0.56", "-46.2186, 31.4195, 15.4783, 0.56", "-48.2444, 32.5474, 16.9562, 0.83", "-50.2517, 33.4762, 18.4595, 0.83", "-52.8486, 34.4539, 20.5564, 0.83", "-56.0093, 34.8393, 22.8052, 0.56", "-57.9172, 34.7176, 24.2866, 0.56", "-59.1258, 34.5565, 25.3444, 0.56", "-61.9648, 34.0724, 28.091, 0.56", "-64.5014, 33.5548, 30.7493, 0.56", "-65.9159, 33.2944, 32.2737, 0.56", "-68.5663, 32.8416, 34.9282, 0.56", "-71.1726, 32.6106, 37.2151, 0.56", "-73.1711, 32.5337, 38.6342, 0.56", "-73.7321, 32.552, 38.9076, 0.83", "-76.2193, 32.7578, 39.7085, 0.28", "-76.8073, 32.8648, 39.8799, 0.56", "-78.8631, 33.4519, 40.4969, 0.56", "-80.8545, 34.2304, 41.1997, 0.83", "-83.237, 35.6032, 42.2597, 0.56", "-85.047, 37.0288, 43.3532, 1.67", "-87.3955, 39.8221, 45.3322, 0.28", "-88.0181, 40.742, 45.9205, 0.28", "-88.4846, 41.673, 46.4457, 0.56", "-89.2421, 44.0955, 47.8151, 0.28", "-89.4327, 46.1238, 49.066, 0.56", "-89.3163, 47.2684, 49.8827, 0.28" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-36.8093, 23.8267, 5.00676, 0.56", "-36.5369, 23.9973, 2.53824, 0.56", "-34.9479, 24.6899, -4.39445, 0.56", "-34.2381, 24.9375, -7.09938, 1.39", "-33.8589, 25.051, -8.41976, 0.28", "-33.3391, 25.2121, -10.5112, 0.28", "-33.2066, 25.2603, -11.0758, 1.11", "-32.1919, 25.6874, -14.7656, 1.11", "-30.5081, 26.6425, -20.4832, 0.56", "-29.8411, 27.1658, -22.8879, 0.83", "-27.1785, 29.7615, -33.4104, 0.28", "-26.9841, 29.9748, -34.252, 1.11", "-25.5526, 31.7333, -41.1022, 0.28", "-25.3656, 32.0165, -42.1677, 0.56", "-24.6935, 33.1714, -45.6824, 0.28", "-24.2501, 33.9179, -48.8438, 0.56" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "41.9723, 13.5038, -21.4121, 0.56", "43.5328, 14.2872, -21.7467, 0.56", "47.2968, 16.3272, -22.9573, 0.56", "49.5012, 17.4915, -23.5905, 0.56", "50.7857, 18.1496, -24.0033, 0.56", "52.8549, 19.1955, -24.6757, 0.28", "54.4078, 19.9601, -25.1718, 0.83", "56.2142, 20.8564, -25.8591, 0.28", "58.8968, 22.2301, -26.8999, 0.83", "61.0614, 23.4553, -27.6526, 0.28", "62.8582, 24.4871, -28.1822, 0.83", "63.8063, 25.0356, -28.3797, 0.56", "65.2778, 25.9095, -28.648, 0.56", "67.0388, 26.9294, -28.8684, 0.28", "68.7948, 27.942, -29.1009, 0.28", "70.9361, 29.0899, -29.5778, 1.11", "72.2222, 29.791, -30.0828, 0.28", "73.2775, 30.3815, -30.5996, 0.56", "75.6611, 31.7697, -31.9318, 0.56", "77.4229, 32.8732, -33.0623, 1.67", "81.5922, 35.7603, -36.0096, 0.56", "84.4556, 37.9262, -38.003, 0.28", "85.4061, 38.679, -38.7101, 0.56", "86.8689, 39.9136, -39.8422, 0.28", "87.407, 40.4361, -40.318, 0.56", "88.8545, 42.0521, -41.4724, 0.28", "90.4973, 44.1087, -41.976, 1.11" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "41.9723, 13.5038, -21.4121, 0.56", "44.3745, 14.0421, -19.2042, 0.56", "47.2441, 14.674, -16.7249, 0.56", "49.8729, 15.2307, -14.5541, 0.56", "52.3801, 15.7185, -12.6519, 0.83", "54.4877, 16.0758, -11.1202, 0.56", "57.4634, 16.4397, -9.02643, 0.56", "58.7209, 16.5554, -8.18376, 0.56", "60.7156, 16.6032, -6.91005, 0.83", "62.6621, 16.6225, -5.79758, 0.56", "64.8065, 16.5836, -4.74029, 0.28", "66.5842, 16.4629, -3.87838, 0.28", "68.7533, 16.2879, -2.94324, 0.83", "71.1121, 16.0659, -1.9849, 0.28", "71.8922, 15.9832, -1.69786, 0.56", "74.0396, 15.8238, -0.966862, 0.28", "74.6476, 15.8013, -0.803113, 0.56", "76.6702, 15.7898, -0.444061, 0.28", "77.291, 15.7729, -0.407504, 0.83", "79.2018, 15.7311, -0.407965, 0.28", "80.3886, 15.7215, -0.424885, 0.28", "81.2584, 15.7403, -0.467851, 0.28", "83.8211, 15.8221, -0.649476, 0.83", "86.8609, 15.9493, -0.936284, 0.28", "88.2667, 16.0122, -1.0937, 0.56", "91.0339, 16.1506, -1.43582, 0.56", "93.6953, 16.2323, -1.75268, 0.56", "95.9891, 16.3236, -1.99468, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "20.4508, -9.17163, -18.1472, 0.83", "23.6538, -9.12397, -20.5568, 0.83", "28.1562, -8.79492, -23.9139, 0.56", "29.4828, -8.5479, -24.8819, 0.56", "32.4309, -7.92668, -26.9941, 0.56", "35.1214, -7.37622, -28.8519, 0.83", "37.1406, -6.93389, -30.2215, 0.56", "40.2719, -6.19354, -32.055, 0.83", "42.8865, -5.23734, -33.5485, 0.56", "44.5622, -4.0706, -34.8351, 0.56", "45.6017, -2.90356, -35.834, 0.28", "46.0419, -2.37343, -36.3178, 0.28", "47.5803, -0.754208, -37.636, 0.83", "49.769, 0.861573, -38.88, 0.56", "51.1644, 1.66082, -39.6351, 0.56", "54.0195, 2.94016, -41.0169, 1.39", "57.5439, 4.20605, -42.5724, 0.56", "61.971, 5.36743, -44.3576, 0.28", "63.9892, 5.7695, -45.074, 0.28", "69.2914, 6.56847, -46.8991, 1.94", "72.1222, 6.98803, -48.0026, 0.28", "73.5298, 7.24073, -48.6525, 0.56", "75.5745, 7.76913, -49.7915, 0.28", "77.1494, 8.273, -50.9289, 0.56", "79.2748, 9.05415, -52.632, 0.28", "80.5611, 9.49733, -53.656, 0.83", "82.385, 10.0661, -55.3522, 0.28", "82.8877, 10.2041, -55.8434, 0.56", "85.0434, 10.7336, -58.0653, 0.28", "86.0117, 10.8502, -59.2396, 0.56", "87.0001, 10.9288, -60.426, 0.28", "87.5913, 10.9731, -61.1029, 0.83", "88.6726, 11.1332, -62.2387, 0.28", "89.3171, 11.2903, -62.8971, 0.56", "93.3976, 12.6358, -66.9572, 0.28", "94.6018, 13.0836, -68.1655, 0.28", "96.1693, 13.7167, -69.9052, 0.83", "99.3754, 15.0996, -73.7128, 0.28", "100.562, 15.6414, -75.1647, 1.39", "102.589, 16.6335, -77.6244, 0.28", "103.38, 17.0384, -78.5535, 1.11", "106.652, 18.6608, -82.6025, 0.28", "108.097, 19.3621, -84.4547, 0.28", "109.066, 19.823, -85.7665, 0.83", "110.613, 20.4983, -87.9002, 0.28", "110.93, 20.6852, -88.3284, 0.56", "112.536, 21.9631, -90.2652, 0.28", "113.079, 22.5079, -90.8613, 1.11", "114.807, 24.4226, -92.6878, 0.28", "115.822, 25.6214, -93.8204, 0.83", "118.974, 29.4614, -97.5658, 0.28", "120.795, 31.7671, -99.7362, 1.11", "122.459, 33.9669, -101.677, 0.28", "122.875, 34.5258, -102.153, 0.83", "125.144, 37.7329, -104.731, 0.28", "126.547, 39.5517, -106.344, 1.39" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "20.4508, -9.17163, -18.1472, 1.11", "19.1114, -11.9868, -19.0113, 1.11", "18.5345, -14.3328, -19.2144, 0.83", "18.7364, -15.8264, -19.0092, 0.83", "19.3578, -17.735, -18.5818, 0.83", "19.8572, -19.0297, -18.2469, 0.83", "20.6324, -20.7966, -17.7721, 0.83", "22.5843, -24.4866, -16.7727, 0.83", "25.2578, -28.8236, -15.7485, 0.83", "27.7633, -32.5445, -15.1061, 0.83", "28.9817, -34.0739, -14.9101, 0.56", "30.5537, -35.8779, -14.7788, 0.83", "32.8196, -38.5207, -14.7941, 0.56", "35.0538, -41.1087, -15.0477, 1.11", "36.9861, -43.268, -15.4548, 0.56", "40.0816, -46.5139, -16.2293, 0.56", "41.0378, -47.5302, -16.4678, 0.56", "43.9653, -50.7794, -17.3047, 0.56", "46.4156, -53.5767, -17.9998, 0.56", "48.2566, -55.8456, -18.6397, 0.56", "48.7914, -56.4996, -18.8336, 0.56", "50.795, -59.1028, -19.6959, 0.83", "52.9998, -61.8537, -20.7558, 0.28", "53.6022, -62.5922, -21.0803, 0.83", "54.2036, -63.513, -21.4793, 0.28", "55.6489, -65.8516, -22.3829, 0.28", "56.1178, -66.5496, -22.6567, 0.28", "57.7421, -69.2536, -23.635, 1.11", "58.2582, -70.2376, -23.8803, 0.28", "58.6071, -70.9344, -24.0759, 0.28", "59.6226, -72.9485, -24.6376, 1.11", "60.4906, -74.7568, -25.1169, 0.28", "61.476, -76.7629, -25.6043, 0.28", "62.4537, -78.7969, -26.0183, 0.28", "63.3903, -80.6301, -26.3579, 1.11", "64.5385, -83.0154, -26.7362, 0.28", "64.8638, -83.7987, -26.8209, 0.28", "65.6541, -85.6405, -26.9798, 0.56", "66.2726, -86.945, -27.0327, 0.28", "68.1726, -90.9615, -27.3386, 0.28", "68.7192, -92.1089, -27.4439, 0.28", "70.0744, -94.9257, -27.7865, 0.83", "71.4598, -97.8022, -28.2917, 0.28", "72.5884, -100.037, -28.788, 1.67", "74.3913, -103.456, -29.6839, 0.28", "75.167, -104.971, -30.1921, 0.56", "75.5951, -105.711, -30.4849, 0.56", "76.7353, -107.528, -31.2877, 0.28", "77.6876, -108.911, -31.9681, 0.28", "79.1189, -110.772, -33.65, 0.83", "80.5562, -112.525, -35.3088, 0.56", "81.4672, -113.561, -36.4232, 0.83", "82.3969, -114.549, -37.6049, 0.28", "83.7101, -115.871, -39.4189, 0.28", "87.8987, -120.315, -47.4212, 0.28" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "8.71828, -28.9639, 24.7415, 0.28", "7.62281, -29.8176, 26.2788, 0.28", "5.36157, -31.5798, 29.452, 0.28", "4.73681, -32.0666, 30.3288, 0.56", "3.66259, -32.9037, 31.8362, 0.56", "2.15734, -34.0767, 33.9486, 0.56", "1.26256, -34.774, 35.2042, 0.56" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "8.71828, -28.9639, 24.7415, 0.56", "11.6982, -28.0722, 25.9715, 0.56" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-15.7758, -14.8408, 4.92963, 0.83", "-18.2428, -8.15423, 13.0091, 0.83", "-18.7635, -6.95454, 13.5725, 0.83", "-19.4353, -5.45759, 13.9779, 0.83", "-20.5896, -3.13888, 14.3776, 0.83", "-22.6082, 0.878927, 15.0118, 0.56", "-23.8993, 3.57809, 15.3924, 0.56", "-25.9375, 7.93596, 15.1929, 0.56", "-26.4423, 8.95603, 15.1525, 0.83", "-28.0724, 11.9525, 15.0785, 0.56", "-29.0245, 13.5619, 15.1241, 0.56", "-30.4523, 15.9948, 15.4585, 0.83", "-31.3875, 17.7109, 15.7571, 0.56", "-32.6451, 20.0167, 16.2165, 0.56", "-34.2925, 22.714, 16.6902, 0.28", "-35.6873, 24.9254, 16.9466, 0.28", "-36.7644, 26.4871, 17.0058, 0.28", "-37.8224, 28.0568, 16.9897, 0.28", "-38.7996, 29.6342, 16.9251, 0.56", "-40.7167, 32.904, 16.6343, 0.28", "-42.085, 35.2902, 16.3311, 0.28", "-43.7692, 38.2742, 15.8024, 0.83", "-46.9428, 43.7878, 14.7512, 0.28", "-47.9046, 45.5037, 14.3748, 0.83", "-48.8487, 47.2331, 13.9652, 0.28", "-49.8839, 49.2372, 13.385, 0.83", "-51.4129, 52.0652, 12.478, 0.28", "-51.8106, 52.7976, 12.1781, 0.56", "-53.0657, 54.8254, 10.9259, 0.28", "-53.333, 55.2327, 10.6295, 0.56", "-54.6858, 57.3124, 8.89657, 0.56" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-15.7758, -14.8408, 4.92963, 1.11", "-17.6692, -17.7334, 1.04326, 1.11", "-18.2784, -18.6641, -0.207218, 1.11", "-20.2701, -21.7068, -4.29534, 1.11", "-21.7976, -24.0404, -7.43074, 1.11", "-23.7649, -27.0458, -11.4688, 1.11", "-25.0155, -28.9564, -14.0358, 1.11" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "-103.383, -316.647, 38.8026, 0.56", "-105.988, -318.306, 40.5763, 0.56", "-108.463, -319.882, 42.2616, 0.28", "-109.488, -320.535, 42.9595, 0.56" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "-103.383, -316.647, 38.8026, 0.56", "-104.151, -318.461, 40.3151, 0.56", "-105.14, -320.973, 42.3051, 0.56", "-105.534, -321.878, 42.9782, 0.83", "-106.608, -323.861, 44.3058, 0.56", "-107.272, -324.945, 44.9263, 0.56", "-108.884, -327.575, 46.432, 0.56", "-109.451, -328.338, 46.8149, 0.56", "-110.351, -329.477, 47.2317, 0.56", "-111.978, -331.606, 47.9974, 0.28", "-112.883, -332.882, 48.3952, 0.83" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "11.7169, -46.9571, 36.8545, 0.56", "11.6585, -48.5464, 38.6334, 0.56", "11.6343, -50.1049, 40.4608, 0.56", "11.587, -53.1422, 44.0219, 0.56", "11.5704, -54.2097, 45.2735, 0.56", "11.5523, -55.3717, 46.6359, 0.56", "11.5124, -57.9283, 49.6334, 0.56", "11.6018, -59.164, 51.1702, 0.56" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "11.7169, -46.9571, 36.8545, 0.83", "13.3972, -51.5838, 33.4519, 0.83", "13.7578, -53.308, 32.5064, 0.83", "14.4638, -57.8615, 30.4446, 0.56", "14.6049, -58.7619, 30.0859, 0.56", "15.0678, -61.2259, 29.1791, 0.56", "15.5809, -63.3085, 28.4156, 0.56", "16.7668, -67.4242, 27.3379, 0.56", "17.5429, -69.9135, 26.5392, 0.56", "18.1178, -71.5481, 25.9675, 0.56", "18.8021, -73.0859, 25.3764, 0.56", "20.0571, -75.3274, 24.4458, 0.56", "20.4838, -75.9475, 24.1519, 0.56", "23.6365, -79.9729, 22.0972, 0.83", "24.5297, -81.2878, 21.4824, 0.28", "25.8698, -83.937, 20.2378, 0.83", "26.3806, -85.3295, 19.6362, 0.56", "26.8534, -87.1392, 18.956, 0.56", "27.1462, -88.4534, 18.518, 0.28", "27.6932, -91.0989, 17.7581, 0.56", "28.3651, -94.4461, 16.6498, 0.56", "28.8328, -96.4571, 15.9771, 0.56", "29.3354, -98.3227, 15.4407, 0.28", "29.706, -99.4045, 15.1814, 0.83", "30.7994, -101.696, 14.819, 0.28", "31.4248, -102.727, 14.7479, 1.11", "33.0072, -105.055, 14.8479, 0.56", "34.8133, -107.59, 15.0591, 0.56", "35.8837, -109.047, 15.121, 0.83", "36.99, -110.65, 15.223, 0.28", "37.2753, -111.121, 15.264, 0.56", "37.871, -112.242, 15.2713, 0.28", "38.7162, -113.946, 15.1312, 0.56", "40.2567, -116.906, 14.6821, 1.11", "41.5655, -119.735, 14.111, 0.28", "42.107, -121.018, 13.7296, 0.56", "42.9446, -123.137, 13.0315, 0.28", "43.3611, -124.292, 12.7026, 0.56", "43.6124, -125.133, 12.5205, 0.56", "44.1723, -126.822, 12.2613, 0.83", "44.7677, -128.481, 11.952, 0.28", "44.9375, -129.024, 11.8761, 0.56", "45.6915, -131.843, 11.6002, 0.28", "46.0816, -133.311, 11.498, 1.39", "47.8222, -138.91, 11.2657, 0.28", "48.2514, -140.103, 11.256, 0.83", "49.1136, -142.155, 11.2626, 0.28", "49.3431, -142.682, 11.2562, 0.56", "50.3557, -144.938, 11.1855, 0.28", "51.8022, -147.912, 11.1298, 0.28", "52.3764, -149.1, 11.1341, 1.11", "53.6484, -151.665, 11.0868, 0.28", "54.4841, -153.266, 11.0226, 0.28", "54.6117, -153.523, 11.0087, 0.56", "55.6066, -155.757, 10.8474, 0.28", "56.0469, -156.836, 10.7832, 1.39", "57.0624, -159.35, 10.6758, 0.28", "57.6585, -160.741, 10.5816, 1.39", "58.4891, -162.449, 10.402, 0.28", "58.9912, -163.46, 10.2673, 0.28", "60.2471, -165.802, 9.88001, 0.28", "60.8833, -166.88, 9.67417, 0.83", "62.4777, -169.398, 9.13005, 0.28", "62.6928, -169.723, 9.05585, 0.56", "63.3256, -170.63, 8.85013, 0.56", "64.3913, -172.035, 8.55376, 0.28", "64.9288, -172.694, 8.45038, 0.28", "65.6675, -173.701, 8.37293, 1.39", "66.8654, -175.51, 8.37029, 0.28", "67.5581, -176.741, 8.39778, 0.28", "67.9929, -177.671, 8.43623, 0.83", "68.6774, -179.782, 8.64929, 0.28", "69.3853, -182.269, 9.0329, 0.28", "69.4481, -182.545, 9.08905, 0.56", "69.7919, -184.399, 9.59215, 0.28", "69.8864, -184.998, 9.77652, 0.83", "70.2415, -187.076, 10.342, 0.28", "70.548, -188.804, 10.7396, 0.28", "70.8021, -189.93, 10.9558, 1.39", "71.1509, -191.86, 11.2136, 0.28", "71.2378, -192.421, 11.2592, 0.83", "71.7142, -195.907, 11.3422, 0.28", "71.8541, -197.716, 11.2876, 0.28", "71.8705, -198.561, 11.2496, 0.83", "71.8597, -201.635, 11.0437, 0.28", "71.8514, -202.487, 10.9687, 1.67", "71.8732, -205.137, 10.7352, 0.28", "71.9701, -208.25, 10.5848, 0.28", "72.0814, -209.386, 10.5177, 0.56", "72.3337, -211.115, 10.4632, 0.28", "72.4732, -212.14, 10.4813, 0.56", "72.6047, -213.408, 10.5325, 0.28", "72.7939, -215.457, 10.6524, 0.56", "73.1306, -218.771, 10.8703, 0.28", "73.2913, -220.625, 11.0012, 1.11", "73.9624, -230.923, 11.7824, 0.28", "74.006, -232.1, 11.8644, 0.83" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "90.4973, 44.1087, -41.976, 0.28", "92.2248, 46.8509, -45.4659, 0.28", "92.5508, 47.3763, -46.1214, 0.83", "94.6959, 51.1182, -50.2282, 0.28", "94.9774, 51.634, -50.7455, 0.56", "97.0172, 55.2352, -54.5898, 0.28", "98.067, 56.8633, -56.3446, 0.28", "98.3397, 57.2306, -56.7727, 0.83", "99.4848, 58.5368, -58.4091, 0.28", "99.809, 58.8731, -58.8378, 0.83", "102.82, 61.7093, -62.6255, 0.56", "105.205, 63.742, -65.4124, 0.28", "106.175, 64.4998, -66.4906, 0.83", "110.099, 67.5044, -70.8411, 0.56", "112.562, 69.2758, -73.4749, 0.28", "113.633, 70.0353, -74.5386, 0.28", "114.054, 70.3161, -74.9187, 0.56", "117.322, 72.3175, -77.9974, 0.28", "118.546, 73.0111, -79.0924, 0.28", "119.752, 73.6787, -80.0451, 0.83", "120.869, 74.2545, -80.9002, 0.83", "124.295, 76.01, -83.6521, 0.28", "126.373, 77.0316, -85.3485, 1.11", "127.844, 77.6895, -86.5481, 0.28", "129.148, 78.2353, -87.6653, 0.28", "129.744, 78.5155, -88.2377, 0.56" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "90.4973, 44.1087, -41.976, 0.56", "92.294, 42.8304, -41.3067, 0.56", "93.6253, 41.5776, -40.7308, 0.28", "94.6499, 40.2968, -40.2607, 1.11", "96.5394, 37.455, -39.1363, 0.28", "97.4251, 35.8548, -38.6087, 1.11", "98.8898, 33.0028, -37.771, 0.28", "100.257, 29.9189, -36.9615, 0.28", "101.522, 26.8442, -36.2107, 0.28", "102.627, 24.3429, -35.6596, 1.39", "104.588, 20.3796, -34.9174, 0.28", "105.303, 19.1738, -34.6964, 1.11", "107.515, 16.0363, -34.1839, 0.28", "107.906, 15.5641, -34.0901, 0.83", "111.444, 11.9326, -33.2782, 0.28", "112.17, 11.2591, -33.1141, 0.83", "114.316, 9.4009, -32.4708, 0.28", "114.609, 9.14247, -32.3738, 0.56", "116.207, 7.68705, -32.0219, 0.28", "116.656, 7.25033, -31.9789, 0.56", "117.96, 5.94715, -32.1548, 0.28", "118.973, 4.99033, -32.424, 0.56", "119.363, 4.6216, -32.5805, 0.56", "123.022, 1.30757, -34.3514, 0.28", "123.043, 1.28997, -34.3643, 0.56", "124.825, -0.0460904, -35.541, 0.28", "125.423, -0.438941, -35.9979, 0.56" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "126.547, 39.5517, -106.344, 0.28", "131.113, 42.3257, -110.369, 0.28", "131.873, 42.8184, -111.031, 1.11", "135.649, 45.4863, -114.308, 0.28", "136.054, 45.8151, -114.65, 0.83", "139.481, 48.807, -117.468, 0.28", "139.736, 49.0408, -117.671, 0.56", "140.622, 50.0488, -118.364, 0.28", "141.242, 50.8452, -118.872, 1.67", "144.096, 54.9315, -121.153, 0.28", "144.519, 55.5268, -121.479, 0.56", "145.943, 57.5509, -122.486, 0.28", "146.424, 58.2309, -122.838, 1.11", "148.079, 60.6534, -124.181, 0.28", "148.494, 61.2397, -124.534, 0.56" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "126.547, 39.5517, -106.344, 0.28", "127.658, 40.8322, -106.122, 0.28", "128.173, 41.3596, -105.819, 0.83", "129.509, 42.3966, -104.849, 0.28", "130.065, 42.7366, -104.42, 0.56", "131.993, 43.6392, -103.306, 0.28", "132.338, 43.7622, -103.147, 0.56", "135.977, 44.0974, -101.903, 0.56", "137.519, 44.0044, -101.431, 0.28", "138.115, 43.9073, -101.282, 1.11", "141.482, 43.1095, -100.548, 0.28", "142.07, 42.9223, -100.464, 0.56", "144.887, 42.0995, -100.46, 0.28", "146.607, 41.6455, -100.855, 0.56" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "87.8987, -120.315, -47.4212, 0.83", "93.7308, -128.644, -49.5373, 0.83", "95.716, -131.263, -50.1694, 0.28", "96.9954, -132.891, -50.5718, 1.39", "99.6117, -135.992, -51.3603, 0.28", "100.727, -137.247, -51.6622, 0.28", "102.238, -138.873, -52.0802, 0.28", "102.91, -139.572, -52.3726, 0.28", "103.386, -140.055, -52.4947, 0.56", "105.429, -142.156, -52.8023, 0.28", "106.525, -143.308, -52.8867, 1.39", "109.235, -146.55, -53.1956, 0.28", "110.078, -147.793, -53.3223, 0.83", "110.972, -149.338, -53.5524, 0.28", "112.058, -151.475, -53.9238, 0.28", "112.517, -152.568, -54.1722, 0.83", "113.687, -155.678, -55.0202, 0.28", "114.253, -157.203, -55.5183, 1.11", "115.74, -160.889, -56.9029, 0.28", "116.348, -162.299, -57.4879, 1.39", "117.374, -164.454, -58.4346, 0.28", "117.76, -165.088, -58.7162, 0.56", "120.068, -167.739, -59.8755, 0.28", "120.787, -168.398, -60.1677, 0.83", "123.369, -170.03, -60.8761, 0.28", "124.411, -170.496, -61.0887, 1.39", "127.76, -171.428, -61.5741, 0.28", "130.816, -171.901, -61.9118, 0.28", "131.097, -171.911, -61.9263, 0.56", "135.022, -171.814, -62.009, 0.28", "136.172, -171.743, -61.9975, 0.56", "138.782, -171.628, -61.9666, 0.28", "140.247, -171.652, -61.9192, 1.11", "142.401, -171.821, -61.8196, 0.28", "143.383, -171.989, -61.7648, 0.56", "147.814, -173.157, -61.4698, 0.28", "149.356, -173.664, -61.3599, 1.39", "152.551, -174.957, -61.1243, 0.28", "153.812, -175.547, -61.0675, 0.56", "156.425, -176.962, -60.958, 0.28", "157.168, -177.426, -60.9103, 0.56", "158.641, -178.459, -60.7826, 0.28", "160.063, -179.544, -60.6521, 0.83", "161.969, -181.089, -60.4846, 0.28", "163.398, -182.325, -60.3427, 1.39", "165.315, -184.093, -60.1241, 0.28", "166.707, -185.517, -59.9778, 0.28", "167.854, -186.766, -59.7977, 0.28", "168.68, -187.693, -59.5986, 0.83", "169.351, -188.431, -59.398, 0.28", "170.056, -189.143, -59.2149, 0.83", "171.114, -190.17, -58.7549, 0.28", "172.627, -191.642, -58.0172, 0.83", "174.398, -193.212, -57.1082, 0.28", "175.396, -194.072, -56.5567, 0.28", "177.962, -196.114, -55.0898, 0.28", "180.549, -197.966, -53.6136, 1.11" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "87.8987, -120.315, -47.4212, 0.56", "92.3853, -126.445, -34.876, 0.56", "93.1047, -127.721, -32.8043, 0.28", "93.5791, -128.695, -31.4214, 0.28", "93.8971, -129.389, -30.538, 0.56", "95.2957, -132.596, -26.7584, 0.28", "95.7643, -133.648, -25.6647, 1.11", "97.1838, -137.723, -23.1135, 0.28", "97.4261, -138.416, -22.684, 0.56", "98.126, -140.267, -21.6398, 0.28", "98.434, -141.067, -21.2301, 0.83", "99.7422, -144.417, -19.8434, 0.28", "101.13, -147.692, -18.5655, 0.28", "101.617, -148.882, -18.2076, 0.83", "102.588, -151.437, -17.5163, 0.28", "102.751, -151.95, -17.3862, 0.56", "103.479, -154.477, -16.7488, 0.28", "103.552, -154.739, -16.6541, 0.56", "104.084, -156.496, -16.0127, 0.28", "104.22, -156.841, -15.8753, 0.56", "105.536, -159.54, -14.3779, 0.28", "105.879, -160.101, -14.0221, 1.11", "108.471, -164.048, -11.3119, 0.28", "108.754, -164.443, -11.0156, 0.56", "110.496, -166.728, -9.19417, 0.28", "111.979, -168.581, -7.71325, 0.56", "115.745, -172.891, -4.20035, 0.28", "116.403, -173.625, -3.60209, 0.56", "117.47, -174.746, -2.71426, 0.56" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-25.0155, -28.9564, -14.0358, 0.56", "-28.1106, -31.763, -14.8362, 0.56", "-28.9272, -32.6789, -15.1296, 0.56", "-30.5077, -34.4354, -15.6972, 0.56", "-32.4172, -36.3519, -16.3355, 0.83", "-34.9418, -38.6414, -17.1007, 0.83", "-37.4693, -40.9936, -17.9202, 0.83", "-39.1525, -42.8825, -18.7173, 0.56", "-39.8319, -43.7559, -19.0562, 0.56", "-40.904, -45.2186, -19.6107, 0.83", "-41.9096, -46.5388, -19.9951, 0.56", "-43.6484, -48.7322, -20.3649, 0.56", "-45.2853, -51.04, -20.5521, 0.56", "-46.1733, -52.3604, -20.5802, 0.56", "-46.7371, -53.3882, -20.6239, 0.56", "-47.5096, -55.1215, -20.7927, 0.56", "-48.3965, -57.5562, -21.1205, 1.39", "-49.2343, -60.1888, -21.6211, 0.56", "-50.135, -63.2123, -22.3903, 0.56", "-51.0206, -66.9391, -23.6885, 0.83", "-51.429, -69.3719, -24.6799, 0.56", "-51.6499, -71.422, -25.6834, 1.11", "-51.9274, -73.866, -27.1352, 0.56", "-52.21, -75.8257, -28.3922, 0.83", "-52.7758, -78.7097, -30.3615, 0.28", "-53.2637, -80.3687, -31.4647, 0.28", "-53.9864, -82.4704, -32.8369, 0.83", "-55.1262, -85.5796, -34.8977, 0.28", "-55.7727, -87.3577, -36.0277, 1.11", "-56.4905, -89.3187, -37.1724, 0.28", "-56.6868, -89.776, -37.4124, 0.83", "-57.7546, -92.0312, -38.6534, 0.28", "-58.2135, -92.9734, -39.1508, 0.83", "-59.5047, -95.6973, -40.577, 0.28", "-60.3823, -97.5084, -41.5173, 0.83", "-61.3615, -99.504, -42.4926, 0.28", "-62.7584, -102.367, -43.8207, 0.56", "-63.4252, -103.698, -44.4008, 1.67", "-64.6767, -106.322, -45.4852, 0.28", "-65.3942, -108.03, -46.1407, 0.28", "-65.6636, -108.793, -46.4324, 0.56", "-66.327, -111.191, -47.2738, 0.28", "-66.4999, -112.031, -47.5485, 0.56", "-66.7417, -113.384, -48.0264, 0.28", "-67.0706, -115.671, -48.8392, 1.39", "-67.3799, -118.45, -49.8875, 0.28", "-67.4711, -119.28, -50.2198, 0.56", "-67.5994, -120.56, -50.7586, 0.28", "-67.7577, -121.953, -51.3582, 0.28", "-68.0684, -123.585, -51.868, 0.28", "-68.3594, -124.557, -51.9368, 1.11", "-69.1407, -126.406, -51.7348, 0.28", "-69.1407, -126.406, -51.7348, 0.56", "-70.2971, -128.417, -51.1637, 0.28", "-72.1893, -131.508, -50.1011, 0.83", "-73.7319, -133.841, -49.3356, 0.28", "-74.3407, -134.742, -49.0531, 0.56", "-76.3462, -137.791, -48.1403, 0.28", "-77.2175, -139.151, -47.8253, 1.11", "-78.7449, -141.668, -47.5104, 0.28", "-79.8885, -143.723, -47.5428, 1.11", "-81.2125, -146.331, -47.6846, 0.28", "-81.8762, -147.7, -47.7746, 0.28", "-82.6217, -149.233, -47.9306, 0.56", "-83.7512, -151.491, -48.0938, 0.28", "-84.5316, -153.02, -48.2271, 0.83", "-86.0846, -155.796, -48.3491, 0.28", "-86.5408, -156.512, -48.3821, 0.56", "-87.9505, -158.607, -48.5469, 0.28", "-89.0517, -160.128, -48.6885, 1.11", "-90.8035, -162.345, -49.1643, 0.28", "-91.5235, -163.191, -49.5542, 0.28", "-92.5313, -164.304, -50.2323, 0.56", "-94.3267, -166.396, -51.6465, 0.28", "-95.5893, -167.913, -52.7454, 0.56", "-97.001, -169.773, -54.0856, 1.39", "-99.495, -173.362, -56.4436, 0.28", "-100.172, -174.516, -57.1739, 0.56", "-101.07, -176.26, -58.229, 0.28", "-101.426, -177.109, -58.6864, 0.56", "-102.006, -179.069, -59.6, 0.28", "-102.233, -180.106, -60.0089, 0.83", "-102.659, -182.754, -60.9173, 0.28", "-102.779, -183.495, -61.2088, 0.83", "-103.332, -186.315, -62.4953, 0.28", "-103.786, -188.435, -63.6068, 0.56", "-104.378, -190.884, -65.001, 0.28", "-104.573, -191.636, -65.4476, 0.83", "-105.956, -196.632, -68.4182, 0.28", "-106.526, -198.678, -69.6566, 1.94", "-107.478, -201.858, -71.6265, 0.28", "-107.633, -202.373, -71.9563, 0.56", "-108.258, -204.325, -73.028, 0.28", "-108.472, -204.891, -73.2134, 0.56", "-109.014, -206.073, -73.182, 0.28", "-109.372, -206.827, -73.0216, 0.56", "-110.268, -208.642, -72.4619, 0.28", "-112.38, -212.751, -71.1705, 1.39", "-114.653, -217.065, -69.8977, 0.28", "-115.865, -219.386, -69.3516, 0.83", "-116.956, -221.438, -68.9494, 0.28", "-117.612, -222.688, -68.8099, 0.83", "-119.53, -226.463, -68.7054, 0.28", "-120.286, -228.052, -68.8792, 1.11", "-121.851, -231.603, -69.6483, 0.28", "-122.192, -232.409, -69.8501, 0.56", "-123.639, -235.786, -70.9618, 0.28", "-124.406, -237.533, -71.6212, 0.28", "-124.828, -238.301, -72.0529, 1.11", "-126.71, -241.223, -73.9438, 0.28", "-127.924, -242.837, -75.2901, 0.56", "-129.697, -244.94, -77.2347, 0.28", "-130.486, -245.736, -78.0588, 1.11", "-136.046, -250.776, -83.7591, 0.28", "-136.532, -251.173, -84.232, 0.83", "-139.24, -253.248, -86.9117, 0.28", "-140.629, -254.296, -88.362, 0.56", "-141.182, -254.705, -88.9194, 0.56", "-142.792, -255.834, -90.5569, 0.56", "-144.368, -256.715, -91.8678, 0.56" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-25.0155, -28.9564, -14.0358, 0.83", "-24.763, -31.5346, -13.0167, 0.83", "-24.2663, -34.3617, -12.2923, 0.83", "-24.0271, -36.49, -11.8561, 0.56", "-23.8311, -40.0654, -11.2359, 0.83", "-23.8492, -42.1004, -10.9252, 0.56", "-23.9555, -44.3514, -10.6081, 0.56", "-24.5909, -50.6755, -9.85137, 0.83", "-24.8416, -53.0976, -9.55913, 1.11", "-24.9385, -55.1342, -9.31525, 0.83", "-24.8909, -57.1653, -9.03966, 0.83", "-24.851, -58.3332, -8.87153, 0.83", "-24.7513, -61.7516, -8.45242, 0.83", "-24.738, -64.9154, -8.03032, 0.83", "-24.7367, -66.5611, -7.81422, 0.56", "-24.8804, -68.7216, -7.58075, 0.56", "-25.065, -70.1233, -7.44005, 0.56", "-25.5349, -72.5111, -7.25496, 0.83", "-26.1912, -75.0508, -7.13737, 0.56", "-26.8705, -77.5969, -6.8005, 0.83", "-27.4412, -80.1515, -6.22314, 0.56", "-27.7374, -81.8929, -5.76714, 0.56", "-28.0114, -84.3556, -5.11464, 0.28", "-28.1005, -85.7253, -4.72702, 0.83", "-28.1313, -90.183, -3.5156, 0.28", "-28.0975, -91.696, -3.14274, 0.56", "-27.9841, -94.1426, -2.52211, 0.28", "-27.8725, -98.0743, -1.59211, 0.83", "-27.9088, -100.579, -1.03526, 0.56", "-27.9494, -103.492, -0.467508, 1.11", "-27.8833, -105.48, -0.175474, 0.56", "-27.6347, -108.483, 0.27276, 0.56", "-27.5168, -109.37, 0.435222, 0.56", "-27.1456, -111.907, 0.962856, 0.83", "-26.8897, -113.931, 1.44013, 0.28", "-26.657, -116.047, 2.06171, 0.83", "-26.5973, -117.67, 2.58898, 0.28", "-26.6472, -118.664, 2.85218, 0.56", "-26.8402, -122.015, 3.58923, 0.83", "-27.0298, -124.658, 3.98823, 0.28", "-27.2196, -126.096, 4.1199, 0.56", "-27.7159, -129.323, 4.25186, 0.83", "-28.1619, -132.681, 4.19157, 0.28", "-28.3983, -136.168, 3.72442, 0.83", "-28.4266, -138.219, 3.16026, 0.28", "-28.3696, -139.31, 2.75994, 0.28", "-28.2172, -140.428, 2.33856, 0.28", "-28.0048, -141.515, 1.98111, 1.11", "-27.3637, -144.801, 1.29714, 0.28", "-27.2638, -145.432, 1.20669, 0.56", "-27.0887, -147.311, 0.995886, 0.56", "-26.8244, -150.259, 0.67271, 0.28", "-26.5763, -153.163, 0.381207, 0.56", "-26.4227, -155.461, 0.266977, 1.67", "-26.3586, -157.451, 0.283195, 0.56", "-26.2862, -160.993, 0.354712, 0.28", "-26.2543, -162.98, 0.415524, 1.11", "-26.1506, -164.63, 0.568573, 0.83", "-25.8152, -167.167, 1.01829, 0.28", "-25.6836, -168.018, 1.26971, 0.56", "-25.5015, -169.323, 1.8724, 0.28", "-25.3594, -170.859, 2.80808, 0.28", "-25.1893, -173.688, 4.6302, 0.28", "-25.1495, -174.546, 5.18787, 0.83", "-24.9933, -176.019, 6.13944, 0.28", "-24.6907, -178.154, 7.53441, 0.83", "-24.4549, -179.918, 8.65577, 0.28", "-24.2813, -181.466, 9.54503, 0.28", "-23.95, -183.652, 10.6563, 1.39", "-23.3732, -186.546, 11.8486, 0.28", "-23.1869, -187.506, 12.1274, 0.28", "-22.8894, -189.262, 12.4628, 0.56", "-22.6402, -191.22, 12.7087, 0.83", "-22.5131, -194.128, 13.0425, 0.28", "-22.5114, -196.21, 13.2349, 0.56", "-22.6694, -198.645, 13.4026, 0.56", "-22.8878, -200.547, 13.547, 0.28", "-23.1492, -202.282, 13.6044, 1.39", "-23.6054, -204.631, 13.5847, 0.28", "-23.79, -205.452, 13.5144, 0.56", "-24.1852, -207.423, 13.3016, 0.28", "-24.3327, -208.821, 13.136, 0.56", "-24.4914, -211.483, 12.8216, 0.28", "-24.5103, -212.056, 12.757, 0.83", "-24.4662, -213.897, 12.6468, 0.28", "-24.3594, -215.893, 12.6777, 0.83", "-24.0498, -218.984, 12.9594, 0.56", "-23.7485, -221.227, 13.2937, 0.28", "-23.5932, -222.373, 13.522, 1.11", "-23.4097, -225.53, 14.208, 0.28", "-23.4141, -226.642, 14.4708, 0.83", "-23.4794, -228.934, 14.9876, 0.28", "-23.6562, -231.731, 15.5191, 0.28", "-23.7268, -232.727, 15.7108, 0.56", "-24.2889, -237.204, 16.5002, 0.28", "-24.3877, -237.596, 16.5498, 0.56" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "-112.883, -332.882, 48.3952, 0.28", "-110.277, -334.932, 49.2612, 0.28", "-109.846, -335.272, 49.4045, 0.56", "-108.556, -336.286, 49.8331, 0.28", "-108.251, -336.527, 49.9347, 0.56" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "-112.883, -332.882, 48.3952, 0.56", "-114.685, -336.226, 48.3879, 0.56", "-115.447, -337.546, 48.384, 0.56", "-116.309, -338.936, 48.3795, 0.56", "-117.431, -340.78, 48.221, 0.56", "-118.603, -342.801, 47.9629, 0.28", "-120.139, -345.53, 47.5262, 0.56", "-120.948, -347.022, 47.1612, 0.28", "-121.475, -348.129, 46.8454, 0.83", "-122.702, -351.294, 45.9689, 0.56", "-123.48, -353.858, 45.1787, 0.56", "-123.638, -354.984, 44.8328, 0.28", "-123.66, -357.333, 44.0084, 0.28", "-123.56, -359.041, 43.3721, 0.56", "-123.227, -361.339, 42.5298, 1.39", "-122.589, -363.862, 41.582, 0.56", "-121.766, -366.734, 40.4032, 0.56", "-121.02, -369.057, 39.46, 0.28", "-120.668, -370.094, 39.0477, 0.28", "-120.293, -371.006, 38.7467, 0.83", "-119.378, -373.043, 38.2421, 0.28", "-118.238, -375.631, 37.9525, 0.28", "-117.441, -377.52, 37.898, 0.28", "-116.837, -378.924, 37.963, 1.11", "-115.613, -381.979, 38.154, 0.28", "-115.139, -383.428, 38.241, 0.83", "-114.814, -384.629, 38.3244, 0.28", "-114.254, -386.603, 38.441, 0.28", "-113.895, -388.272, 38.4978, 0.28", "-113.693, -389.445, 38.4811, 2.22", "-113.319, -392.704, 38.1111, 0.28", "-113.285, -393.338, 38.0376, 0.56" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "-113.285, -393.338, 38.0376, 0.28", "-112.68, -396.433, 37.3434, 0.28", "-112.487, -397.42, 37.1221, 0.56", "-111.956, -400.133, 36.5136, 0.28", "-111.881, -400.516, 36.4277, 0.56", "-111.258, -403.703, 35.713, 0.28", "-111.137, -404.32, 35.5746, 0.56" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "-113.285, -393.338, 38.0376, 0.28", "-114.66, -395.121, 37.9771, 0.28", "-115.212, -395.82, 37.8962, 0.56", "-116.704, -397.525, 37.7658, 0.28", "-117.536, -398.474, 37.7118, 0.56", "-118.75, -399.905, 37.5658, 0.28", "-120.02, -401.868, 37.4349, 0.28", "-120.977, -403.72, 37.3743, 1.11", "-122.175, -406.919, 37.2418, 0.28", "-122.391, -407.745, 37.2044, 0.28", "-122.768, -409.612, 37.1201, 0.83", "-123.386, -415.153, 36.8913, 0.28", "-123.38, -415.788, 36.862, 0.56", "-123.029, -419.615, 36.771, 0.28", "-122.873, -420.614, 36.7254, 0.56", "-122.646, -422.054, 36.6775, 0.56", "-122.302, -424.251, 36.6669, 0.28", "-121.889, -427.053, 36.3781, 0.28", "-121.754, -427.611, 36.3325, 0.83" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_23", "dend_10", "dend_9", "dend_0", "apic_12", "apic_1", "dend_27", "dend_24", "dend_18", "dend_11", "dend_6", "dend_1", "apic_14", "apic_13", "apic_5", "apic_2", "dend_26", "dend_25", "dend_20", "dend_19", "dend_15", "dend_12", "dend_8", "dend_7", "dend_5", "dend_2", "apic_11", "apic_6", "apic_4", "apic_3", "dend_22", "dend_21", "dend_17", "dend_16", "dend_14", "dend_13", "dend_4", "dend_3", "apic_10", "apic_7", "apic_9", "apic_8" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_23", "dend_10", "dend_9", "dend_0", "apic_12", "apic_1", "dend_27", "dend_24", "dend_18", "dend_11", "dend_6", "dend_1", "apic_14", "apic_13", "apic_5", "apic_2", "dend_26", "dend_25", "dend_20", "dend_19", "dend_15", "dend_12", "dend_8", "dend_7", "dend_5", "dend_2", "apic_11", "apic_6", "apic_4", "apic_3", "dend_22", "dend_21", "dend_17", "dend_16", "dend_14", "dend_13", "dend_4", "dend_3", "apic_10", "apic_7", "apic_9", "apic_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "apic_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "apic_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "apic_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "apic_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "apic_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "apic_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "apic_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "apic_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "apic_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "apic_8" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4", "apic_5", "apic_6", "apic_7", "apic_8", "apic_9", "apic_10", "apic_11", "apic_12", "apic_13", "apic_14" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "apic_12", "apic_12", "apic_12", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "apic_11", "apic_11", "apic_11", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "apic_10", "apic_10", "apic_10", "apic_10", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L23_LBC_fe2122c75c_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_10, id: dend_10, parent: soma_0
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_12, id: apic_12, parent: apic_0
create apic_12
public apic_12
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_18, id: dend_18, parent: dend_10
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_14, id: apic_14, parent: apic_12
create apic_14
public apic_14
// Section: apic_13, id: apic_13, parent: apic_12
create apic_13
public apic_13
// Section: apic_5, id: apic_5, parent: apic_1
create apic_5
public apic_5
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_11, id: apic_11, parent: apic_5
create apic_11
public apic_11
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6
// Section: apic_4, id: apic_4, parent: apic_2
create apic_4
public apic_4
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_10, id: apic_10, parent: apic_6
create apic_10
public apic_10
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7
// Section: apic_9, id: apic_9, parent: apic_7
create apic_9
public apic_9
// Section: apic_8, id: apic_8, parent: apic_7
create apic_8
public apic_8

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_23, dend_10, dend_9, dend_0, apic_12, apic_1, dend_27, dend_24, dend_18, dend_11, dend_6, dend_1, apic_14, apic_13, apic_5, apic_2, dend_26, dend_25, dend_20, dend_19, dend_15, dend_12, dend_8, dend_7, dend_5, dend_2, apic_11, apic_6, apic_4, apic_3, dend_22, dend_21, dend_17, dend_16, dend_14, dend_13, dend_4, dend_3, apic_10, apic_7, apic_9, apic_8]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_23, dend_10, dend_9, dend_0, apic_12, apic_1, dend_27, dend_24, dend_18, dend_11, dend_6, dend_1, apic_14, apic_13, apic_5, apic_2, dend_26, dend_25, dend_20, dend_19, dend_15, dend_12, dend_8, dend_7, dend_5, dend_2, apic_11, apic_6, apic_4, apic_3, dend_22, dend_21, dend_17, dend_16, dend_14, dend_13, dend_4, dend_3, apic_10, apic_7, apic_9, apic_8]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[apic_14]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[apic_13]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[apic_5]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[apic_7]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[apic_12]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[apic_11]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_6]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[apic_10]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[apic_9]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[apic_8]}
objref OneSecGrp_SectionRef_46
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, axon_0, axon_0, apic_12, apic_12, apic_12, apic_1, apic_1, apic_1, apic_1, apic_1, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_11, apic_11, apic_11, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_10, apic_10, apic_10, apic_10, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.4999990524732351)
    connect dend_23(0), soma_0(0.4999990524732351)
    connect dend_10(0), soma_0(0.4999990524732351)
    connect dend_9(0), soma_0(0.4999990524732351)
    connect dend_0(0), soma_0(0.4999990524732351)
    connect axon_0(0), soma_0(1.0)
    connect apic_12(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_18(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_14(0), apic_12(1.0)
    connect apic_13(0), apic_12(1.0)
    connect apic_5(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_11(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)
    connect apic_4(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_10(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)
    connect apic_9(0), apic_7(1.0)
    connect apic_8(0), apic_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.56398, 12.1856, -3.45915, 3.25378 ) }
    soma_0 { pt3dadd( -2.26706, 10.9606, -3.11058, 4.92468 ) }
    soma_0 { pt3dadd( -1.97014, 9.73565, -2.76202, 6.49677 ) }
    soma_0 { pt3dadd( -1.67322, 8.51066, -2.41345, 7.93038 ) }
    soma_0 { pt3dadd( -1.3763, 7.28567, -2.06488, 8.78195 ) }
    soma_0 { pt3dadd( -1.07938, 6.06068, -1.71632, 9.51699 ) }
    soma_0 { pt3dadd( -0.782463, 4.83569, -1.36775, 10.3263 ) }
    soma_0 { pt3dadd( -0.485543, 3.6107, -1.01918, 11.1493 ) }
    soma_0 { pt3dadd( -0.188623, 2.38571, -0.670618, 11.9011 ) }
    soma_0 { pt3dadd( 0.108296, 1.16072, -0.322051, 12.0825 ) }
    soma_0 { pt3dadd( 0.405216, -0.0642733, 0.026515, 12.1848 ) }
    soma_0 { pt3dadd( 0.702136, -1.28926, 0.375081, 12.2225 ) }
    soma_0 { pt3dadd( 0.999056, -2.51425, 0.723648, 11.698 ) }
    soma_0 { pt3dadd( 1.29598, -3.73924, 1.07221, 11.5084 ) }
    soma_0 { pt3dadd( 1.5929, -4.96423, 1.42078, 11.8466 ) }
    soma_0 { pt3dadd( 1.88982, -6.18922, 1.76935, 11.6542 ) }
    soma_0 { pt3dadd( 2.18674, -7.41421, 2.11791, 11.2017 ) }
    soma_0 { pt3dadd( 2.48366, -8.6392, 2.46648, 10.0847 ) }
    soma_0 { pt3dadd( 2.78057, -9.86419, 2.81505, 8.25314 ) }
    soma_0 { pt3dadd( 3.07749, -11.0892, 3.16361, 6.3237 ) }
    soma_0 { pt3dadd( 3.37441, -12.3142, 3.51218, 3.70524 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 2.77471, -11.4083, 13.4707, 3.61 ) }
    apic_0 { pt3dadd( 2.63478, -12.8149, 13.3152, 3.61 ) }
    apic_0 { pt3dadd( 2.22995, -16.8844, 12.8653, 3.06 ) }
    apic_0 { pt3dadd( 1.89507, -20.2507, 12.4932, 3.06 ) }
    apic_0 { pt3dadd( 1.56279, -23.5909, 12.1239, 2.78 ) }
    apic_0 { pt3dadd( 1.25468, -26.6881, 11.7815, 2.78 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 27/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -4.14529, 12.1872, -7.22925, 2.5 ) }
    dend_23 { pt3dadd( -5.0014, 13.3435, -6.34662, 2.5 ) }
    dend_23 { pt3dadd( -9.2906, 18.0533, -2.74838, 1.39 ) }
    dend_23 { pt3dadd( -10.7052, 19.6066, -1.56172, 1.11 ) }
    dend_23 { pt3dadd( -12.4868, 21.5629, -0.0671345, 0.83 ) }
    dend_23 { pt3dadd( -13.1861, 22.3308, 0.519512, 0.83 ) }
    dend_23 { pt3dadd( -14.5717, 23.8524, 1.68196, 1.39 ) }
    dend_23 { pt3dadd( -15.8356, 25.0025, 2.5141, 1.39 ) }
    // Section: dend_10, id: dend_10, parent: soma_0 (entry count 35/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 6.59471, -1.84501, -11.6093, 3.33 ) }
    dend_10 { pt3dadd( 6.86811, -1.89897, -11.5671, 3.33 ) }
    dend_10 { pt3dadd( 8.59196, -2.23919, -11.3011, 2.5 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 38/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -1.40529, -1.55801, -18.0493, 1.11 ) }
    dend_9 { pt3dadd( -3.85094, -2.38853, -17.4849, 1.11 ) }
    dend_9 { pt3dadd( -7.25704, -3.38941, -17.2111, 1.11 ) }
    dend_9 { pt3dadd( -9.23901, -4.05867, -17.0786, 1.11 ) }
    dend_9 { pt3dadd( -12.1767, -5.38156, -16.8093, 0.83 ) }
    dend_9 { pt3dadd( -14.8421, -6.71995, -16.9446, 0.83 ) }
    dend_9 { pt3dadd( -18.2199, -8.505, -17.436, 1.11 ) }
    dend_9 { pt3dadd( -21.3529, -10.3259, -18.4137, 0.83 ) }
    dend_9 { pt3dadd( -24.2154, -11.984, -19.6383, 0.83 ) }
    dend_9 { pt3dadd( -28.4832, -14.1046, -21.6721, 0.83 ) }
    dend_9 { pt3dadd( -34.8623, -16.8229, -24.8828, 1.11 ) }
    dend_9 { pt3dadd( -36.7315, -17.5606, -25.8841, 0.56 ) }
    dend_9 { pt3dadd( -39.146, -18.4376, -27.153, 1.11 ) }
    dend_9 { pt3dadd( -41.8587, -19.2301, -28.5209, 0.56 ) }
    dend_9 { pt3dadd( -44.9968, -19.6849, -30.0852, 0.56 ) }
    dend_9 { pt3dadd( -46.5413, -19.6873, -30.7198, 0.56 ) }
    dend_9 { pt3dadd( -49.3254, -19.4896, -31.2915, 1.11 ) }
    dend_9 { pt3dadd( -51.5334, -19.1515, -31.7366, 0.28 ) }
    dend_9 { pt3dadd( -52.6322, -18.9335, -31.9469, 0.28 ) }
    dend_9 { pt3dadd( -55.2352, -18.3554, -32.6391, 1.11 ) }
    dend_9 { pt3dadd( -57.112, -17.9519, -33.2764, 0.28 ) }
    dend_9 { pt3dadd( -59.0475, -17.5112, -33.9877, 0.83 ) }
    dend_9 { pt3dadd( -62.5173, -16.6084, -35.4075, 0.56 ) }
    dend_9 { pt3dadd( -64.9864, -15.9447, -36.5339, 0.56 ) }
    dend_9 { pt3dadd( -67.79, -15.2556, -37.9573, 0.83 ) }
    dend_9 { pt3dadd( -69.6258, -14.8497, -39.0434, 0.28 ) }
    dend_9 { pt3dadd( -71.6614, -14.3894, -40.4138, 0.56 ) }
    dend_9 { pt3dadd( -73.2188, -14.0361, -41.7664, 0.28 ) }
    dend_9 { pt3dadd( -74.3273, -13.7839, -42.8809, 1.39 ) }
    dend_9 { pt3dadd( -74.7168, -13.6788, -43.3468, 1.39 ) }
    dend_9 { pt3dadd( -76.0441, -13.287, -45.0605, 0.28 ) }
    dend_9 { pt3dadd( -76.9992, -13.0449, -46.3461, 1.39 ) }
    dend_9 { pt3dadd( -80.3409, -12.4939, -51.0295, 0.28 ) }
    dend_9 { pt3dadd( -81.0468, -12.4756, -51.9136, 0.28 ) }
    dend_9 { pt3dadd( -82.5449, -12.5937, -53.5961, 0.28 ) }
    dend_9 { pt3dadd( -82.7509, -12.6224, -53.7861, 0.56 ) }
    dend_9 { pt3dadd( -85.2521, -13.0873, -55.583, 0.28 ) }
    dend_9 { pt3dadd( -86.8316, -13.4787, -56.4783, 1.67 ) }
    dend_9 { pt3dadd( -89.3627, -14.2078, -57.5586, 0.28 ) }
    dend_9 { pt3dadd( -90.7097, -14.6167, -58.0932, 0.56 ) }
    dend_9 { pt3dadd( -94.2542, -15.7671, -59.4021, 0.28 ) }
    dend_9 { pt3dadd( -95.7622, -16.2718, -60.0078, 0.83 ) }
    dend_9 { pt3dadd( -99.0743, -17.4227, -61.3685, 0.28 ) }
    dend_9 { pt3dadd( -100.06, -17.8082, -61.8216, 0.83 ) }
    dend_9 { pt3dadd( -101.551, -18.445, -62.668, 0.28 ) }
    dend_9 { pt3dadd( -102.548, -18.8512, -63.313, 0.56 ) }
    dend_9 { pt3dadd( -105.712, -20.11, -65.5102, 0.28 ) }
    dend_9 { pt3dadd( -106.524, -20.3541, -66.0447, 1.67 ) }
    dend_9 { pt3dadd( -110.128, -21.1617, -68.2, 0.28 ) }
    dend_9 { pt3dadd( -112.768, -21.6299, -69.6053, 0.83 ) }
    dend_9 { pt3dadd( -116.837, -22.1639, -71.5091, 0.28 ) }
    dend_9 { pt3dadd( -117.869, -22.2359, -71.9289, 0.83 ) }
    dend_9 { pt3dadd( -122.045, -22.3099, -73.2909, 0.28 ) }
    dend_9 { pt3dadd( -123.668, -22.2733, -73.7777, 0.83 ) }
    dend_9 { pt3dadd( -125.745, -22.1016, -74.2669, 0.28 ) }
    dend_9 { pt3dadd( -126.138, -22.065, -74.3246, 0.56 ) }
    dend_9 { pt3dadd( -130.177, -21.728, -74.6674, 0.28 ) }
    dend_9 { pt3dadd( -131.849, -21.6074, -74.8268, 0.83 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 96/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.73529, -10.4858, 1.49075, 3.06 ) }
    dend_0 { pt3dadd( -2.52807, -11.4543, 1.6201, 2.78 ) }
    dend_0 { pt3dadd( -4.49187, -13.8535, 1.94052, 2.78 ) }
    dend_0 { pt3dadd( -6.25102, -16.0027, 2.22755, 2.78 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 0/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 3.37441, -12.3142, 3.51218, 0.83 ) }
    axon_0 { pt3dadd( 6.90787, -26.8921, 3.51218, 0.83 ) }
    axon_0 { pt3dadd( 10.4413, -41.47, 3.51218, 0.83 ) }
    // Section: apic_12, id: apic_12, parent: apic_0 (entry count 3/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 1.25468, -26.6881, 11.7815, 0.83 ) }
    apic_12 { pt3dadd( -2.09216, -30.0815, 7.30183, 0.83 ) }
    apic_12 { pt3dadd( -3.38089, -31.3882, 5.57688, 1.11 ) }
    apic_12 { pt3dadd( -5.13742, -33.1692, 3.22579, 1.39 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 7/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 1.25468, -26.6881, 11.7815, 1.67 ) }
    apic_1 { pt3dadd( 0.96026, -29.3957, 14.3442, 1.67 ) }
    apic_1 { pt3dadd( 0.691973, -31.8631, 16.6795, 1.67 ) }
    apic_1 { pt3dadd( 0.43874, -34.192, 18.8837, 1.39 ) }
    apic_1 { pt3dadd( 0.207722, -36.3166, 20.8946, 1.39 ) }
    apic_1 { pt3dadd( 0.097224, -37.3328, 21.8564, 1.67 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 13/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -15.8356, 25.0025, 2.5141, 0.56 ) }
    dend_27 { pt3dadd( -18.4501, 23.4988, 4.10389, 0.56 ) }
    dend_27 { pt3dadd( -20.1894, 22.7125, 5.29166, 0.56 ) }
    dend_27 { pt3dadd( -22.0089, 22.1344, 6.59036, 0.56 ) }
    dend_27 { pt3dadd( -24.1419, 21.6372, 8.12006, 0.56 ) }
    dend_27 { pt3dadd( -25.4416, 21.3352, 9.05659, 0.56 ) }
    dend_27 { pt3dadd( -28.4367, 20.5264, 11.032, 0.56 ) }
    dend_27 { pt3dadd( -30.5498, 20.1698, 12.4077, 0.83 ) }
    dend_27 { pt3dadd( -32.5663, 19.9624, 13.7847, 0.83 ) }
    dend_27 { pt3dadd( -33.8555, 19.8634, 14.6249, 0.83 ) }
    dend_27 { pt3dadd( -36.4102, 19.528, 16.2624, 0.83 ) }
    dend_27 { pt3dadd( -39.1952, 19.0519, 18.0181, 0.83 ) }
    dend_27 { pt3dadd( -43.4728, 17.9933, 20.6734, 0.83 ) }
    dend_27 { pt3dadd( -46.6241, 17.01, 22.6304, 0.83 ) }
    dend_27 { pt3dadd( -49.0676, 16.1419, 24.166, 0.56 ) }
    dend_27 { pt3dadd( -52.5303, 14.7531, 26.2414, 0.56 ) }
    dend_27 { pt3dadd( -53.6576, 14.2807, 26.9276, 0.56 ) }
    dend_27 { pt3dadd( -55.4664, 13.4941, 28.114, 0.56 ) }
    dend_27 { pt3dadd( -56.3179, 13.0623, 28.6862, 0.56 ) }
    dend_27 { pt3dadd( -57.8499, 12.2592, 29.7362, 0.83 ) }
    dend_27 { pt3dadd( -60.7217, 10.9047, 31.7893, 0.56 ) }
    dend_27 { pt3dadd( -62.524, 10.1951, 33.0338, 0.56 ) }
    dend_27 { pt3dadd( -65.4436, 8.97628, 35.2066, 0.56 ) }
    dend_27 { pt3dadd( -68.3233, 7.87709, 37.4772, 0.56 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 37/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -15.8356, 25.0025, 2.5141, 0.56 ) }
    dend_24 { pt3dadd( -18.6808, 24.3787, 3.04837, 0.56 ) }
    dend_24 { pt3dadd( -20.3608, 24.285, 3.24186, 0.56 ) }
    dend_24 { pt3dadd( -24.9361, 24.0298, 3.7688, 0.83 ) }
    dend_24 { pt3dadd( -28.3984, 23.8367, 4.16755, 0.83 ) }
    dend_24 { pt3dadd( -30.7508, 23.7056, 4.43848, 0.83 ) }
    dend_24 { pt3dadd( -33.0146, 23.5793, 4.6992, 0.83 ) }
    dend_24 { pt3dadd( -36.8093, 23.8267, 5.00676, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_10 (entry count 45/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 8.59196, -2.23919, -11.3011, 0.83 ) }
    dend_18 { pt3dadd( 11.6866, -2.40681, -13.1496, 0.83 ) }
    dend_18 { pt3dadd( 15.0691, -2.07174, -14.9886, 0.83 ) }
    dend_18 { pt3dadd( 18.2495, -1.27942, -16.5119, 0.83 ) }
    dend_18 { pt3dadd( 21.2611, -0.212873, -17.7691, 0.83 ) }
    dend_18 { pt3dadd( 24.7358, 1.22452, -19.0489, 0.83 ) }
    dend_18 { pt3dadd( 30.2553, 3.57834, -20.8709, 0.56 ) }
    dend_18 { pt3dadd( 33.8987, 5.47864, -21.8594, 0.83 ) }
    dend_18 { pt3dadd( 37.2523, 7.70883, -22.6314, 0.83 ) }
    dend_18 { pt3dadd( 38.636, 8.81083, -22.8035, 0.56 ) }
    dend_18 { pt3dadd( 39.6927, 9.76115, -22.7776, 0.56 ) }
    dend_18 { pt3dadd( 40.845, 11.1771, -22.5282, 0.56 ) }
    dend_18 { pt3dadd( 41.9723, 13.5038, -21.4121, 0.83 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 58/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 8.59196, -2.23919, -11.3011, 1.94 ) }
    dend_11 { pt3dadd( 11.299, -3.8217, -12.8639, 1.94 ) }
    dend_11 { pt3dadd( 15.4347, -6.23933, -15.2514, 1.94 ) }
    dend_11 { pt3dadd( 17.7845, -7.61297, -16.6079, 1.94 ) }
    dend_11 { pt3dadd( 20.4508, -9.17163, -18.1472, 1.94 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 63/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -6.25102, -16.0027, 2.22755, 1.11 ) }
    dend_6 { pt3dadd( -5.00347, -18.081, 4.94894, 1.11 ) }
    dend_6 { pt3dadd( -4.06561, -19.236, 6.64062, 1.11 ) }
    dend_6 { pt3dadd( -1.21322, -21.9627, 11.1807, 1.11 ) }
    dend_6 { pt3dadd( 0.0363008, -23.056, 13.1099, 1.11 ) }
    dend_6 { pt3dadd( 1.3, -24.1618, 15.061, 0.83 ) }
    dend_6 { pt3dadd( 2.51926, -25.2287, 16.9435, 0.83 ) }
    dend_6 { pt3dadd( 4.75696, -26.7961, 20.0177, 0.83 ) }
    dend_6 { pt3dadd( 6.8827, -28.0954, 22.7023, 0.83 ) }
    dend_6 { pt3dadd( 8.71828, -28.9639, 24.7415, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 73/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -6.25102, -16.0027, 2.22755, 1.39 ) }
    dend_1 { pt3dadd( -10.2477, -15.5151, 3.36135, 1.39 ) }
    dend_1 { pt3dadd( -12.4306, -15.2489, 3.98063, 1.39 ) }
    dend_1 { pt3dadd( -13.4966, -15.1188, 4.28305, 1.39 ) }
    dend_1 { pt3dadd( -15.7758, -14.8408, 4.92963, 1.67 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 78/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 10.4413, -41.47, 3.51218, 0.56 ) }
    axon_1 { pt3dadd( 13.9748, -56.0478, 3.51218, 0.56 ) }
    axon_1 { pt3dadd( 17.5083, -70.6257, 3.51218, 0.56 ) }
    // Section: apic_14, id: apic_14, parent: apic_12 (entry count 81/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( -5.13742, -33.1692, 3.22579, 0.83 ) }
    apic_14 { pt3dadd( -4.27253, -34.7673, 1.72554, 0.83 ) }
    apic_14 { pt3dadd( -3.51916, -36.6198, 0.109802, 0.83 ) }
    apic_14 { pt3dadd( -3.10485, -38.1873, -1.17054, 0.83 ) }
    apic_14 { pt3dadd( -2.3283, -41.9266, -4.18598, 0.83 ) }
    apic_14 { pt3dadd( -1.16196, -48.2318, -8.98745, 0.56 ) }
    apic_14 { pt3dadd( -0.940046, -49.9258, -10.1461, 0.56 ) }
    apic_14 { pt3dadd( -0.877841, -51.9554, -11.4856, 1.11 ) }
    apic_14 { pt3dadd( -0.820825, -54.3695, -13.026, 0.56 ) }
    apic_14 { pt3dadd( -0.613187, -56.3666, -14.362, 0.56 ) }
    apic_14 { pt3dadd( -0.196891, -58.3001, -15.589, 0.56 ) }
    apic_14 { pt3dadd( 0.642588, -61.0858, -17.1219, 0.83 ) }
    apic_14 { pt3dadd( 1.87791, -63.7674, -18.7802, 0.56 ) }
    apic_14 { pt3dadd( 3.48379, -66.5324, -20.6528, 0.56 ) }
    apic_14 { pt3dadd( 5.58121, -69.8644, -22.9849, 1.11 ) }
    apic_14 { pt3dadd( 6.45548, -71.3369, -24.1182, 0.56 ) }
    apic_14 { pt3dadd( 7.44716, -73.1435, -25.7908, 0.56 ) }
    apic_14 { pt3dadd( 8.25497, -74.8595, -27.552, 0.56 ) }
    apic_14 { pt3dadd( 8.65991, -76.2973, -28.968, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    apic_14 { pt3dadd( 8.76132, -77.5605, -30.2313, 0.83 ) }
    apic_14 { pt3dadd( 8.63759, -80.4754, -33.0533, 0.28 ) }
    apic_14 { pt3dadd( 8.4192, -82.9825, -35.2346, 1.39 ) }
    apic_14 { pt3dadd( 7.97979, -86.3183, -37.8335, 0.28 ) }
    apic_14 { pt3dadd( 7.7842, -87.9469, -39.0384, 0.56 ) }
    apic_14 { pt3dadd( 7.58964, -90.7472, -40.8434, 0.28 ) }
    apic_14 { pt3dadd( 7.59477, -92.3275, -41.7181, 2.22 ) }
    apic_14 { pt3dadd( 7.91176, -96.7831, -43.519, 0.28 ) }
    apic_14 { pt3dadd( 8.20284, -98.7361, -44.1442, 0.56 ) }
    apic_14 { pt3dadd( 8.79113, -101.1, -44.8351, 0.56 ) }
    apic_14 { pt3dadd( 9.43582, -102.976, -45.3736, 0.28 ) }
    apic_14 { pt3dadd( 10.0421, -104.449, -45.8148, 0.83 ) }
    apic_14 { pt3dadd( 11.0685, -106.858, -46.6434, 0.28 ) }
    apic_14 { pt3dadd( 11.8118, -108.644, -47.299, 0.83 ) }
    apic_14 { pt3dadd( 12.9831, -111.8, -48.2872, 0.28 ) }
    apic_14 { pt3dadd( 13.3671, -113.103, -48.6564, 1.39 ) }
    apic_14 { pt3dadd( 14.4874, -116.554, -49.3966, 0.28 ) }
    apic_14 { pt3dadd( 15.1414, -118.491, -49.6877, 0.28 ) }
    apic_14 { pt3dadd( 15.7443, -120.058, -49.9128, 1.94 ) }
    apic_14 { pt3dadd( 17.0324, -123.059, -50.2796, 0.28 ) }
    apic_14 { pt3dadd( 17.5279, -124.09, -50.4308, 1.11 ) }
    apic_14 { pt3dadd( 20.7097, -130.126, -51.7486, 0.28 ) }
    apic_14 { pt3dadd( 21.1898, -131.008, -51.9716, 0.83 ) }
    apic_14 { pt3dadd( 23.3205, -134.922, -53.1518, 0.28 ) }
    apic_14 { pt3dadd( 23.5872, -135.464, -53.3395, 0.83 ) }
    apic_14 { pt3dadd( 25.565, -139.912, -55.0604, 0.28 ) }
    apic_14 { pt3dadd( 26.4405, -142.273, -56.0081, 0.56 ) }
    apic_14 { pt3dadd( 27.3353, -145.642, -57.3737, 0.28 ) }
    apic_14 { pt3dadd( 27.6028, -146.997, -57.8499, 1.39 ) }
    apic_14 { pt3dadd( 28.3055, -151.482, -59.2323, 0.28 ) }
    apic_14 { pt3dadd( 28.4423, -152.459, -59.5102, 0.83 ) }
    apic_14 { pt3dadd( 29.1045, -157.119, -61.189, 0.28 ) }
    apic_14 { pt3dadd( 29.3641, -158.747, -61.8802, 1.11 ) }
    apic_14 { pt3dadd( 30.0281, -162.181, -63.7698, 0.28 ) }
    apic_14 { pt3dadd( 30.4501, -164.112, -64.9796, 0.28 ) }
    apic_14 { pt3dadd( 30.7104, -165.202, -65.7273, 1.11 ) }
    apic_14 { pt3dadd( 32.3165, -171.944, -70.765, 0.28 ) }
    apic_14 { pt3dadd( 32.4677, -172.6, -71.288, 1.94 ) }
    apic_14 { pt3dadd( 33.5466, -176.957, -74.539, 0.28 ) }
    apic_14 { pt3dadd( 33.6073, -177.189, -74.6955, 0.56 ) }
    apic_14 { pt3dadd( 34.241, -179.97, -76.3758, 0.28 ) }
    apic_14 { pt3dadd( 34.6218, -181.9, -77.4162, 1.11 ) }
    apic_14 { pt3dadd( 35.0954, -185.782, -78.975, 0.28 ) }
    apic_14 { pt3dadd( 35.5169, -191.422, -81.0657, 0.28 ) }
    apic_14 { pt3dadd( 35.5392, -193.477, -81.7344, 1.39 ) }
    apic_14 { pt3dadd( 35.4011, -196.97, -82.76, 0.28 ) }
    apic_14 { pt3dadd( 35.253, -198.338, -83.1368, 0.83 ) }
    apic_14 { pt3dadd( 34.4662, -202.636, -83.9916, 0.28 ) }
    apic_14 { pt3dadd( 34.272, -203.23, -84.098, 0.56 ) }
    apic_14 { pt3dadd( 33.3599, -205.04, -84.4341, 0.28 ) }
    apic_14 { pt3dadd( 32.7802, -206.062, -84.6094, 0.83 ) }
    apic_14 { pt3dadd( 31.443, -208.365, -84.9164, 0.28 ) }
    apic_14 { pt3dadd( 29.6095, -211.544, -85.4134, 1.11 ) }
    apic_14 { pt3dadd( 27.6415, -215.021, -86.0541, 0.28 ) }
    apic_14 { pt3dadd( 27.3483, -215.566, -86.1861, 0.56 ) }
    apic_14 { pt3dadd( 26.7921, -216.67, -86.4507, 0.28 ) }
    apic_14 { pt3dadd( 26.5526, -217.15, -86.6509, 0.56 ) }
    apic_14 { pt3dadd( 25.9655, -218.277, -87.2607, 0.28 ) }
    apic_14 { pt3dadd( 25.6997, -218.747, -87.5823, 0.56 ) }
    apic_14 { pt3dadd( 24.5413, -220.798, -88.9105, 0.28 ) }
    apic_14 { pt3dadd( 23.6484, -222.6, -90.2388, 1.11 ) }
    apic_14 { pt3dadd( 21.7936, -226.716, -93.6393, 0.28 ) }
    apic_14 { pt3dadd( 21.5401, -227.365, -94.1976, 0.56 ) }
    apic_14 { pt3dadd( 20.3797, -230.803, -97.2109, 0.28 ) }
    apic_14 { pt3dadd( 19.9571, -232.263, -98.4905, 1.39 ) }
    apic_14 { pt3dadd( 19.0581, -236.12, -101.659, 0.28 ) }
    apic_14 { pt3dadd( 18.7612, -238.195, -103.373, 1.39 ) }
    apic_14 { pt3dadd( 18.682, -239.948, -104.653, 0.28 ) }
    apic_14 { pt3dadd( 18.6894, -240.388, -104.984, 0.83 ) }
    apic_14 { pt3dadd( 18.935, -242.375, -106.558, 0.28 ) }
    apic_14 { pt3dadd( 19.2071, -244.411, -108.141, 0.83 ) }
    apic_14 { pt3dadd( 19.4918, -246.806, -109.292, 0.28 ) }
    apic_14 { pt3dadd( 19.6524, -247.767, -109.621, 0.56 ) }
    // Section: apic_13, id: apic_13, parent: apic_12 (entry count 73/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( -5.13742, -33.1692, 3.22579, 0.56 ) }
    apic_13 { pt3dadd( -5.69957, -34.9454, 1.38559, 0.56 ) }
    apic_13 { pt3dadd( -5.88343, -35.4812, 0.833191, 0.28 ) }
    apic_13 { pt3dadd( -6.28242, -36.5132, -0.23406, 0.83 ) }
    apic_13 { pt3dadd( -7.04415, -38.1639, -1.82938, 0.56 ) }
    apic_13 { pt3dadd( -8.02193, -39.9439, -3.52486, 1.11 ) }
    apic_13 { pt3dadd( -11.4559, -45.952, -9.22941, 0.83 ) }
    apic_13 { pt3dadd( -13.0127, -48.4812, -11.7521, 0.28 ) }
    apic_13 { pt3dadd( -13.3726, -49.0147, -12.3713, 0.28 ) }
    apic_13 { pt3dadd( -14.5092, -50.6147, -14.5067, 0.83 ) }
    apic_13 { pt3dadd( -15.3141, -51.7519, -16.3883, 0.56 ) }
    apic_13 { pt3dadd( -15.9308, -52.6071, -17.9167, 0.56 ) }
    apic_13 { pt3dadd( -16.4881, -53.3793, -19.3255, 1.39 ) }
    apic_13 { pt3dadd( -18.9534, -56.6218, -25.5806, 0.28 ) }
    apic_13 { pt3dadd( -19.6453, -57.5312, -27.3013, 1.39 ) }
    apic_13 { pt3dadd( -21.4502, -59.8502, -31.6148, 0.56 ) }
    apic_13 { pt3dadd( -22.4653, -61.0829, -33.7988, 0.56 ) }
    apic_13 { pt3dadd( -23.953, -62.7332, -36.5739, 1.39 ) }
    apic_13 { pt3dadd( -25.823, -64.7118, -39.6331, 0.28 ) }
    apic_13 { pt3dadd( -26.2911, -65.2055, -40.1974, 0.83 ) }
    apic_13 { pt3dadd( -28.0199, -67.1677, -41.9738, 0.28 ) }
    apic_13 { pt3dadd( -28.228, -67.4433, -42.151, 0.56 ) }
    apic_13 { pt3dadd( -29.7956, -69.9099, -43.4334, 0.28 ) }
    apic_13 { pt3dadd( -30.3465, -70.9506, -43.8992, 1.39 ) }
    apic_13 { pt3dadd( -32.4841, -75.6567, -45.6598, 0.28 ) }
    apic_13 { pt3dadd( -32.8771, -76.6938, -46.1208, 1.39 ) }
    apic_13 { pt3dadd( -33.7082, -79.3646, -47.4072, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    apic_13 { pt3dadd( -33.9883, -80.3511, -47.9765, 0.83 ) }
    apic_13 { pt3dadd( -34.7393, -83.2635, -49.8436, 0.28 ) }
    apic_13 { pt3dadd( -35.2248, -85.3848, -51.3724, 1.11 ) }
    apic_13 { pt3dadd( -36.3238, -90.6241, -55.5839, 0.28 ) }
    apic_13 { pt3dadd( -36.3846, -90.9302, -55.8187, 0.56 ) }
    apic_13 { pt3dadd( -37.5211, -96.6208, -59.9448, 0.28 ) }
    apic_13 { pt3dadd( -37.6333, -97.1399, -60.2609, 0.28 ) }
    apic_13 { pt3dadd( -38.3025, -99.996, -61.6432, 0.28 ) }
    apic_13 { pt3dadd( -38.6791, -101.48, -62.241, 0.56 ) }
    apic_13 { pt3dadd( -39.4427, -104.245, -62.9001, 0.28 ) }
    apic_13 { pt3dadd( -39.7761, -105.436, -63.1628, 1.39 ) }
    apic_13 { pt3dadd( -40.6886, -108.861, -63.7368, 0.28 ) }
    apic_13 { pt3dadd( -40.9008, -109.617, -63.9175, 0.83 ) }
    apic_13 { pt3dadd( -41.7829, -112.215, -64.8646, 0.28 ) }
    apic_13 { pt3dadd( -41.9538, -112.679, -65.133, 0.83 ) }
    apic_13 { pt3dadd( -42.8265, -114.94, -66.8484, 0.28 ) }
    apic_13 { pt3dadd( -42.9828, -115.346, -67.2023, 0.56 ) }
    apic_13 { pt3dadd( -43.8013, -117.426, -69.0742, 0.28 ) }
    apic_13 { pt3dadd( -44.6633, -119.669, -70.9597, 0.56 ) }
    apic_13 { pt3dadd( -46.01, -123.073, -73.5992, 0.28 ) }
    apic_13 { pt3dadd( -46.3118, -123.881, -74.1392, 0.56 ) }
    apic_13 { pt3dadd( -47.0712, -126.2, -75.372, 0.28 ) }
    apic_13 { pt3dadd( -47.7233, -129.062, -76.7898, 1.11 ) }
    apic_13 { pt3dadd( -47.8886, -130.815, -77.4916, 0.28 ) }
    apic_13 { pt3dadd( -47.7938, -131.565, -77.7467, 0.56 ) }
    apic_13 { pt3dadd( -47.4064, -132.868, -78.1796, 0.28 ) }
    apic_13 { pt3dadd( -47.1595, -133.599, -78.3862, 0.56 ) }
    apic_13 { pt3dadd( -45.6641, -137.897, -79.4801, 0.28 ) }
    apic_13 { pt3dadd( -45.4413, -138.64, -79.7017, 0.56 ) }
    apic_13 { pt3dadd( -44.3094, -142.921, -80.9019, 0.28 ) }
    apic_13 { pt3dadd( -44.0971, -143.888, -81.1273, 0.56 ) }
    apic_13 { pt3dadd( -43.199, -149.449, -82.0141, 0.28 ) }
    apic_13 { pt3dadd( -43.1249, -150.615, -82.1746, 1.11 ) }
    apic_13 { pt3dadd( -43.1901, -153.875, -82.3546, 0.28 ) }
    apic_13 { pt3dadd( -43.2719, -155.05, -82.4282, 0.83 ) }
    apic_13 { pt3dadd( -43.6619, -158.106, -82.6813, 0.28 ) }
    apic_13 { pt3dadd( -43.9632, -160.12, -82.8456, 1.11 ) }
    apic_13 { pt3dadd( -44.8938, -165.547, -83.3029, 0.28 ) }
    apic_13 { pt3dadd( -45.4177, -168.666, -83.4647, 1.11 ) }
    apic_13 { pt3dadd( -45.875, -171.328, -83.5132, 0.28 ) }
    apic_13 { pt3dadd( -46.0729, -172.385, -83.5206, 0.56 ) }
    apic_13 { pt3dadd( -46.8896, -176.654, -83.5391, 0.28 ) }
    apic_13 { pt3dadd( -47.166, -178.072, -83.4845, 1.11 ) }
    apic_13 { pt3dadd( -47.8166, -181.145, -83.1205, 0.28 ) }
    apic_13 { pt3dadd( -48.0812, -182.126, -82.9661, 0.56 ) }
    apic_13 { pt3dadd( -49.4493, -186.49, -81.9574, 0.28 ) }
    apic_13 { pt3dadd( -49.8055, -187.573, -81.6691, 0.56 ) }
    apic_13 { pt3dadd( -50.6174, -189.767, -81.0003, 0.28 ) }
    apic_13 { pt3dadd( -50.9592, -190.679, -80.6903, 0.56 ) }
    apic_13 { pt3dadd( -52.1376, -193.589, -79.5845, 0.28 ) }
    apic_13 { pt3dadd( -52.4186, -194.229, -79.3046, 1.11 ) }
    // Section: apic_5, id: apic_5, parent: apic_1 (entry count 51/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 0.097224, -37.3328, 21.8564, 1.11 ) }
    apic_5 { pt3dadd( -4.14287, -40.1828, 21.2438, 1.11 ) }
    apic_5 { pt3dadd( -7.16665, -43.1073, 21.4945, 1.11 ) }
    apic_5 { pt3dadd( -9.95488, -46.9846, 22.3213, 1.11 ) }
    apic_5 { pt3dadd( -11.4383, -49.9668, 23.1213, 1.11 ) }
    apic_5 { pt3dadd( -12.3348, -52.3518, 23.7292, 1.11 ) }
    apic_5 { pt3dadd( -13.6937, -57.1362, 24.5996, 1.11 ) }
    apic_5 { pt3dadd( -14.2992, -62.7011, 25.1932, 1.11 ) }
    apic_5 { pt3dadd( -14.2575, -65.1072, 25.433, 0.83 ) }
    apic_5 { pt3dadd( -14.0757, -67.3687, 25.7767, 1.11 ) }
    apic_5 { pt3dadd( -13.9064, -69.2236, 26.0739, 1.11 ) }
    apic_5 { pt3dadd( -13.742, -72.7914, 26.5919, 0.83 ) }
    apic_5 { pt3dadd( -13.8464, -74.9782, 26.8147, 0.83 ) }
    apic_5 { pt3dadd( -14.1106, -76.9925, 26.7451, 1.11 ) }
    apic_5 { pt3dadd( -14.5147, -79.1252, 26.6715, 0.83 ) }
    apic_5 { pt3dadd( -14.7205, -80.2611, 26.6207, 1.11 ) }
    apic_5 { pt3dadd( -15.468, -83.9507, 26.4767, 1.11 ) }
    apic_5 { pt3dadd( -16.013, -85.5786, 26.4758, 1.11 ) }
    apic_5 { pt3dadd( -17.8009, -89.4236, 26.3104, 0.83 ) }
    apic_5 { pt3dadd( -18.8323, -91.2079, 26.1995, 0.83 ) }
    apic_5 { pt3dadd( -19.9755, -93.0418, 26.0123, 0.83 ) }
    apic_5 { pt3dadd( -21.5414, -95.3379, 25.6918, 0.83 ) }
    apic_5 { pt3dadd( -24.8302, -99.532, 24.9785, 0.83 ) }
    apic_5 { pt3dadd( -27.1946, -102.252, 24.5443, 0.83 ) }
    apic_5 { pt3dadd( -29.291, -104.517, 24.2914, 0.56 ) }
    apic_5 { pt3dadd( -31.1794, -106.622, 24.0499, 0.83 ) }
    apic_5 { pt3dadd( -32.8703, -108.626, 23.7944, 0.56 ) }
    apic_5 { pt3dadd( -34.4157, -110.71, 23.4511, 0.83 ) }
    apic_5 { pt3dadd( -35.4949, -112.377, 23.0914, 0.56 ) }
    apic_5 { pt3dadd( -36.28, -113.509, 22.843, 0.83 ) }
    apic_5 { pt3dadd( -37.7034, -115.254, 22.479, 0.83 ) }
    apic_5 { pt3dadd( -39.4235, -117.163, 22.1257, 0.56 ) }
    apic_5 { pt3dadd( -39.7671, -117.607, 22.1002, 0.56 ) }
    apic_5 { pt3dadd( -40.8557, -119.382, 22.2208, 0.83 ) }
    apic_5 { pt3dadd( -41.2411, -120.129, 22.3494, 0.83 ) }
    apic_5 { pt3dadd( -41.9863, -122.202, 22.6135, 0.56 ) }
    apic_5 { pt3dadd( -42.2841, -123.585, 22.7435, 0.83 ) }
    apic_5 { pt3dadd( -42.6606, -126.566, 22.946, 0.83 ) }
    apic_5 { pt3dadd( -43.047, -128.918, 23.2008, 0.83 ) }
    apic_5 { pt3dadd( -43.4105, -130.66, 23.4377, 0.83 ) }
    apic_5 { pt3dadd( -44.5455, -135.165, 24.1095, 0.83 ) }
    apic_5 { pt3dadd( -44.8442, -136.256, 24.2764, 0.56 ) }
    apic_5 { pt3dadd( -45.3575, -137.892, 24.4988, 0.56 ) }
    apic_5 { pt3dadd( -47.0011, -142.472, 24.8301, 0.83 ) }
    apic_5 { pt3dadd( -47.8165, -144.527, 24.8565, 0.56 ) }
    apic_5 { pt3dadd( -48.3084, -145.589, 24.8081, 0.83 ) }
    apic_5 { pt3dadd( -49.4326, -147.733, 24.7986, 0.56 ) }
    apic_5 { pt3dadd( -51.0281, -151.173, 24.7079, 0.83 ) }
    apic_5 { pt3dadd( -51.893, -153.496, 24.5713, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    apic_5 { pt3dadd( -52.5182, -155.569, 24.4252, 0.56 ) }
    apic_5 { pt3dadd( -53.187, -158.228, 24.3219, 1.11 ) }
    apic_5 { pt3dadd( -54.0976, -161.628, 23.8848, 0.56 ) }
    apic_5 { pt3dadd( -54.596, -163.324, 23.641, 0.56 ) }
    apic_5 { pt3dadd( -55.424, -166.254, 23.2141, 0.83 ) }
    apic_5 { pt3dadd( -55.9508, -168.178, 22.9793, 0.56 ) }
    apic_5 { pt3dadd( -56.9083, -171.967, 22.5384, 0.83 ) }
    apic_5 { pt3dadd( -58.566, -178.203, 21.8039, 0.56 ) }
    apic_5 { pt3dadd( -59.4757, -180.829, 21.4014, 0.56 ) }
    apic_5 { pt3dadd( -59.9804, -181.992, 21.2573, 0.56 ) }
    apic_5 { pt3dadd( -61.3342, -184.918, 21.0009, 0.28 ) }
    apic_5 { pt3dadd( -62.4304, -187.242, 20.9111, 0.56 ) }
    apic_5 { pt3dadd( -63.2806, -189.025, 21.1223, 0.56 ) }
    apic_5 { pt3dadd( -64.1335, -191.437, 21.4813, 0.83 ) }
    apic_5 { pt3dadd( -64.4192, -192.558, 21.5051, 0.28 ) }
    apic_5 { pt3dadd( -64.7971, -194.814, 21.4195, 0.28 ) }
    apic_5 { pt3dadd( -65.0127, -196.519, 21.2638, 0.56 ) }
    apic_5 { pt3dadd( -65.4613, -199.817, 20.8214, 1.67 ) }
    apic_5 { pt3dadd( -66.048, -204.14, 20.0962, 0.83 ) }
    apic_5 { pt3dadd( -66.3249, -205.799, 19.7913, 0.83 ) }
    apic_5 { pt3dadd( -66.9838, -208.243, 19.314, 0.56 ) }
    apic_5 { pt3dadd( -67.6964, -209.805, 19.0633, 0.56 ) }
    apic_5 { pt3dadd( -68.3184, -210.779, 18.9528, 0.28 ) }
    apic_5 { pt3dadd( -69.0776, -211.78, 18.9128, 0.28 ) }
    apic_5 { pt3dadd( -70.5398, -213.566, 19.3391, 0.83 ) }
    apic_5 { pt3dadd( -71.5892, -214.948, 19.8406, 0.56 ) }
    apic_5 { pt3dadd( -73.6793, -217.86, 21.0429, 0.56 ) }
    apic_5 { pt3dadd( -74.3712, -218.986, 21.5308, 0.56 ) }
    apic_5 { pt3dadd( -75.2196, -220.724, 22.1759, 0.28 ) }
    apic_5 { pt3dadd( -76.8565, -224.824, 23.61, 2.22 ) }
    apic_5 { pt3dadd( -78.0425, -228.197, 24.6768, 0.56 ) }
    apic_5 { pt3dadd( -79.0002, -231.434, 25.5066, 0.56 ) }
    apic_5 { pt3dadd( -79.4011, -232.953, 25.7773, 0.56 ) }
    apic_5 { pt3dadd( -80.7103, -237.062, 26.2893, 0.56 ) }
    apic_5 { pt3dadd( -81.9055, -240.191, 26.5482, 0.56 ) }
    apic_5 { pt3dadd( -82.6489, -242.188, 26.5749, 0.56 ) }
    apic_5 { pt3dadd( -83.1425, -243.559, 26.6058, 0.28 ) }
    apic_5 { pt3dadd( -84.1911, -246.386, 26.7677, 0.56 ) }
    apic_5 { pt3dadd( -85.3348, -249.164, 27.0028, 0.56 ) }
    apic_5 { pt3dadd( -86.4618, -251.887, 27.3236, 2.5 ) }
    apic_5 { pt3dadd( -87.4615, -254.869, 27.6069, 0.56 ) }
    apic_5 { pt3dadd( -88.0733, -257.22, 27.8988, 0.56 ) }
    apic_5 { pt3dadd( -88.5842, -259.393, 28.2096, 0.28 ) }
    apic_5 { pt3dadd( -88.9742, -261.251, 28.455, 0.56 ) }
    apic_5 { pt3dadd( -89.2877, -263.064, 28.6006, 0.28 ) }
    apic_5 { pt3dadd( -89.6019, -264.962, 28.6424, 0.56 ) }
    apic_5 { pt3dadd( -89.9122, -266.945, 28.7545, 0.28 ) }
    apic_5 { pt3dadd( -90.1294, -268.385, 28.8575, 0.28 ) }
    apic_5 { pt3dadd( -90.6031, -270.837, 29.0781, 0.56 ) }
    apic_5 { pt3dadd( -91.3544, -273.396, 29.3561, 0.28 ) }
    apic_5 { pt3dadd( -91.9784, -274.955, 29.5452, 0.83 ) }
    apic_5 { pt3dadd( -93.1596, -277.434, 29.8145, 0.56 ) }
    apic_5 { pt3dadd( -94.4051, -279.938, 30.0444, 0.56 ) }
    apic_5 { pt3dadd( -95.3356, -281.832, 30.2491, 1.11 ) }
    apic_5 { pt3dadd( -96.2717, -283.852, 30.527, 0.28 ) }
    apic_5 { pt3dadd( -96.618, -284.626, 30.6099, 0.28 ) }
    apic_5 { pt3dadd( -96.9828, -285.621, 30.6511, 0.83 ) }
    apic_5 { pt3dadd( -97.4875, -287.463, 30.6876, 0.83 ) }
    apic_5 { pt3dadd( -97.7309, -288.61, 30.8081, 0.28 ) }
    apic_5 { pt3dadd( -98.2327, -290.941, 31.1508, 0.56 ) }
    apic_5 { pt3dadd( -98.7214, -293.675, 31.7868, 0.83 ) }
    apic_5 { pt3dadd( -99.1844, -296.803, 32.4924, 0.56 ) }
    apic_5 { pt3dadd( -99.423, -298.547, 32.9573, 0.28 ) }
    apic_5 { pt3dadd( -99.8622, -301.195, 33.7327, 1.11 ) }
    apic_5 { pt3dadd( -100.321, -303.37, 34.4052, 0.56 ) }
    apic_5 { pt3dadd( -101.102, -306.285, 35.3948, 0.56 ) }
    apic_5 { pt3dadd( -102.198, -310.254, 36.8171, 0.83 ) }
    apic_5 { pt3dadd( -102.745, -312.506, 37.599, 0.56 ) }
    apic_5 { pt3dadd( -103.033, -313.935, 38.0359, 0.56 ) }
    apic_5 { pt3dadd( -103.141, -314.718, 38.2329, 0.56 ) }
    apic_5 { pt3dadd( -103.383, -316.647, 38.8026, 1.11 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 71/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 0.097224, -37.3328, 21.8564, 1.11 ) }
    apic_2 { pt3dadd( 3.4438, -39.1949, 24.9491, 1.11 ) }
    apic_2 { pt3dadd( 4.93559, -40.196, 26.5959, 1.11 ) }
    apic_2 { pt3dadd( 5.99425, -41.0887, 27.976, 0.83 ) }
    apic_2 { pt3dadd( 7.42078, -42.2916, 29.8357, 0.83 ) }
    apic_2 { pt3dadd( 8.65964, -43.3363, 31.4507, 0.83 ) }
    apic_2 { pt3dadd( 10.4236, -44.8238, 33.7504, 1.11 ) }
    apic_2 { pt3dadd( 11.2756, -46.1036, 35.5804, 0.83 ) }
    apic_2 { pt3dadd( 11.7169, -46.9571, 36.8545, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 80/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -36.8093, 23.8267, 5.00676, 0.56 ) }
    dend_26 { pt3dadd( -40.6758, 27.4001, 10.363, 0.56 ) }
    dend_26 { pt3dadd( -43.9499, 29.9381, 13.612, 0.56 ) }
    dend_26 { pt3dadd( -46.2186, 31.4195, 15.4783, 0.56 ) }
    dend_26 { pt3dadd( -48.2444, 32.5474, 16.9562, 0.83 ) }
    dend_26 { pt3dadd( -50.2517, 33.4762, 18.4595, 0.83 ) }
    dend_26 { pt3dadd( -52.8486, 34.4539, 20.5564, 0.83 ) }
    dend_26 { pt3dadd( -56.0093, 34.8393, 22.8052, 0.56 ) }
    dend_26 { pt3dadd( -57.9172, 34.7176, 24.2866, 0.56 ) }
    dend_26 { pt3dadd( -59.1258, 34.5565, 25.3444, 0.56 ) }
    dend_26 { pt3dadd( -61.9648, 34.0724, 28.091, 0.56 ) }
    dend_26 { pt3dadd( -64.5014, 33.5548, 30.7493, 0.56 ) }
    dend_26 { pt3dadd( -65.9159, 33.2944, 32.2737, 0.56 ) }
    dend_26 { pt3dadd( -68.5663, 32.8416, 34.9282, 0.56 ) }
    dend_26 { pt3dadd( -71.1726, 32.6106, 37.2151, 0.56 ) }
    dend_26 { pt3dadd( -73.1711, 32.5337, 38.6342, 0.56 ) }
    dend_26 { pt3dadd( -73.7321, 32.552, 38.9076, 0.83 ) }
    dend_26 { pt3dadd( -76.2193, 32.7578, 39.7085, 0.28 ) }
    dend_26 { pt3dadd( -76.8073, 32.8648, 39.8799, 0.56 ) }
    dend_26 { pt3dadd( -78.8631, 33.4519, 40.4969, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_26 { pt3dadd( -80.8545, 34.2304, 41.1997, 0.83 ) }
    dend_26 { pt3dadd( -83.237, 35.6032, 42.2597, 0.56 ) }
    dend_26 { pt3dadd( -85.047, 37.0288, 43.3532, 1.67 ) }
    dend_26 { pt3dadd( -87.3955, 39.8221, 45.3322, 0.28 ) }
    dend_26 { pt3dadd( -88.0181, 40.742, 45.9205, 0.28 ) }
    dend_26 { pt3dadd( -88.4846, 41.673, 46.4457, 0.56 ) }
    dend_26 { pt3dadd( -89.2421, 44.0955, 47.8151, 0.28 ) }
    dend_26 { pt3dadd( -89.4327, 46.1238, 49.066, 0.56 ) }
    dend_26 { pt3dadd( -89.3163, 47.2684, 49.8827, 0.28 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 9/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -36.8093, 23.8267, 5.00676, 0.56 ) }
    dend_25 { pt3dadd( -36.5369, 23.9973, 2.53824, 0.56 ) }
    dend_25 { pt3dadd( -34.9479, 24.6899, -4.39445, 0.56 ) }
    dend_25 { pt3dadd( -34.2381, 24.9375, -7.09938, 1.39 ) }
    dend_25 { pt3dadd( -33.8589, 25.051, -8.41976, 0.28 ) }
    dend_25 { pt3dadd( -33.3391, 25.2121, -10.5112, 0.28 ) }
    dend_25 { pt3dadd( -33.2066, 25.2603, -11.0758, 1.11 ) }
    dend_25 { pt3dadd( -32.1919, 25.6874, -14.7656, 1.11 ) }
    dend_25 { pt3dadd( -30.5081, 26.6425, -20.4832, 0.56 ) }
    dend_25 { pt3dadd( -29.8411, 27.1658, -22.8879, 0.83 ) }
    dend_25 { pt3dadd( -27.1785, 29.7615, -33.4104, 0.28 ) }
    dend_25 { pt3dadd( -26.9841, 29.9748, -34.252, 1.11 ) }
    dend_25 { pt3dadd( -25.5526, 31.7333, -41.1022, 0.28 ) }
    dend_25 { pt3dadd( -25.3656, 32.0165, -42.1677, 0.56 ) }
    dend_25 { pt3dadd( -24.6935, 33.1714, -45.6824, 0.28 ) }
    dend_25 { pt3dadd( -24.2501, 33.9179, -48.8438, 0.56 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 25/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 41.9723, 13.5038, -21.4121, 0.56 ) }
    dend_20 { pt3dadd( 43.5328, 14.2872, -21.7467, 0.56 ) }
    dend_20 { pt3dadd( 47.2968, 16.3272, -22.9573, 0.56 ) }
    dend_20 { pt3dadd( 49.5012, 17.4915, -23.5905, 0.56 ) }
    dend_20 { pt3dadd( 50.7857, 18.1496, -24.0033, 0.56 ) }
    dend_20 { pt3dadd( 52.8549, 19.1955, -24.6757, 0.28 ) }
    dend_20 { pt3dadd( 54.4078, 19.9601, -25.1718, 0.83 ) }
    dend_20 { pt3dadd( 56.2142, 20.8564, -25.8591, 0.28 ) }
    dend_20 { pt3dadd( 58.8968, 22.2301, -26.8999, 0.83 ) }
    dend_20 { pt3dadd( 61.0614, 23.4553, -27.6526, 0.28 ) }
    dend_20 { pt3dadd( 62.8582, 24.4871, -28.1822, 0.83 ) }
    dend_20 { pt3dadd( 63.8063, 25.0356, -28.3797, 0.56 ) }
    dend_20 { pt3dadd( 65.2778, 25.9095, -28.648, 0.56 ) }
    dend_20 { pt3dadd( 67.0388, 26.9294, -28.8684, 0.28 ) }
    dend_20 { pt3dadd( 68.7948, 27.942, -29.1009, 0.28 ) }
    dend_20 { pt3dadd( 70.9361, 29.0899, -29.5778, 1.11 ) }
    dend_20 { pt3dadd( 72.2222, 29.791, -30.0828, 0.28 ) }
    dend_20 { pt3dadd( 73.2775, 30.3815, -30.5996, 0.56 ) }
    dend_20 { pt3dadd( 75.6611, 31.7697, -31.9318, 0.56 ) }
    dend_20 { pt3dadd( 77.4229, 32.8732, -33.0623, 1.67 ) }
    dend_20 { pt3dadd( 81.5922, 35.7603, -36.0096, 0.56 ) }
    dend_20 { pt3dadd( 84.4556, 37.9262, -38.003, 0.28 ) }
    dend_20 { pt3dadd( 85.4061, 38.679, -38.7101, 0.56 ) }
    dend_20 { pt3dadd( 86.8689, 39.9136, -39.8422, 0.28 ) }
    dend_20 { pt3dadd( 87.407, 40.4361, -40.318, 0.56 ) }
    dend_20 { pt3dadd( 88.8545, 42.0521, -41.4724, 0.28 ) }
    dend_20 { pt3dadd( 90.4973, 44.1087, -41.976, 1.11 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 52/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 41.9723, 13.5038, -21.4121, 0.56 ) }
    dend_19 { pt3dadd( 44.3745, 14.0421, -19.2042, 0.56 ) }
    dend_19 { pt3dadd( 47.2441, 14.674, -16.7249, 0.56 ) }
    dend_19 { pt3dadd( 49.8729, 15.2307, -14.5541, 0.56 ) }
    dend_19 { pt3dadd( 52.3801, 15.7185, -12.6519, 0.83 ) }
    dend_19 { pt3dadd( 54.4877, 16.0758, -11.1202, 0.56 ) }
    dend_19 { pt3dadd( 57.4634, 16.4397, -9.02643, 0.56 ) }
    dend_19 { pt3dadd( 58.7209, 16.5554, -8.18376, 0.56 ) }
    dend_19 { pt3dadd( 60.7156, 16.6032, -6.91005, 0.83 ) }
    dend_19 { pt3dadd( 62.6621, 16.6225, -5.79758, 0.56 ) }
    dend_19 { pt3dadd( 64.8065, 16.5836, -4.74029, 0.28 ) }
    dend_19 { pt3dadd( 66.5842, 16.4629, -3.87838, 0.28 ) }
    dend_19 { pt3dadd( 68.7533, 16.2879, -2.94324, 0.83 ) }
    dend_19 { pt3dadd( 71.1121, 16.0659, -1.9849, 0.28 ) }
    dend_19 { pt3dadd( 71.8922, 15.9832, -1.69786, 0.56 ) }
    dend_19 { pt3dadd( 74.0396, 15.8238, -0.966862, 0.28 ) }
    dend_19 { pt3dadd( 74.6476, 15.8013, -0.803113, 0.56 ) }
    dend_19 { pt3dadd( 76.6702, 15.7898, -0.444061, 0.28 ) }
    dend_19 { pt3dadd( 77.291, 15.7729, -0.407504, 0.83 ) }
    dend_19 { pt3dadd( 79.2018, 15.7311, -0.407965, 0.28 ) }
    dend_19 { pt3dadd( 80.3886, 15.7215, -0.424885, 0.28 ) }
    dend_19 { pt3dadd( 81.2584, 15.7403, -0.467851, 0.28 ) }
    dend_19 { pt3dadd( 83.8211, 15.8221, -0.649476, 0.83 ) }
    dend_19 { pt3dadd( 86.8609, 15.9493, -0.936284, 0.28 ) }
    dend_19 { pt3dadd( 88.2667, 16.0122, -1.0937, 0.56 ) }
    dend_19 { pt3dadd( 91.0339, 16.1506, -1.43582, 0.56 ) }
    dend_19 { pt3dadd( 93.6953, 16.2323, -1.75268, 0.56 ) }
    dend_19 { pt3dadd( 95.9891, 16.3236, -1.99468, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 80/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 20.4508, -9.17163, -18.1472, 0.83 ) }
    dend_15 { pt3dadd( 23.6538, -9.12397, -20.5568, 0.83 ) }
    dend_15 { pt3dadd( 28.1562, -8.79492, -23.9139, 0.56 ) }
    dend_15 { pt3dadd( 29.4828, -8.5479, -24.8819, 0.56 ) }
    dend_15 { pt3dadd( 32.4309, -7.92668, -26.9941, 0.56 ) }
    dend_15 { pt3dadd( 35.1214, -7.37622, -28.8519, 0.83 ) }
    dend_15 { pt3dadd( 37.1406, -6.93389, -30.2215, 0.56 ) }
    dend_15 { pt3dadd( 40.2719, -6.19354, -32.055, 0.83 ) }
    dend_15 { pt3dadd( 42.8865, -5.23734, -33.5485, 0.56 ) }
    dend_15 { pt3dadd( 44.5622, -4.0706, -34.8351, 0.56 ) }
    dend_15 { pt3dadd( 45.6017, -2.90356, -35.834, 0.28 ) }
    dend_15 { pt3dadd( 46.0419, -2.37343, -36.3178, 0.28 ) }
    dend_15 { pt3dadd( 47.5803, -0.754208, -37.636, 0.83 ) }
    dend_15 { pt3dadd( 49.769, 0.861573, -38.88, 0.56 ) }
    dend_15 { pt3dadd( 51.1644, 1.66082, -39.6351, 0.56 ) }
    dend_15 { pt3dadd( 54.0195, 2.94016, -41.0169, 1.39 ) }
    dend_15 { pt3dadd( 57.5439, 4.20605, -42.5724, 0.56 ) }
    dend_15 { pt3dadd( 61.971, 5.36743, -44.3576, 0.28 ) }
    dend_15 { pt3dadd( 63.9892, 5.7695, -45.074, 0.28 ) }
    dend_15 { pt3dadd( 69.2914, 6.56847, -46.8991, 1.94 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_15 { pt3dadd( 72.1222, 6.98803, -48.0026, 0.28 ) }
    dend_15 { pt3dadd( 73.5298, 7.24073, -48.6525, 0.56 ) }
    dend_15 { pt3dadd( 75.5745, 7.76913, -49.7915, 0.28 ) }
    dend_15 { pt3dadd( 77.1494, 8.273, -50.9289, 0.56 ) }
    dend_15 { pt3dadd( 79.2748, 9.05415, -52.632, 0.28 ) }
    dend_15 { pt3dadd( 80.5611, 9.49733, -53.656, 0.83 ) }
    dend_15 { pt3dadd( 82.385, 10.0661, -55.3522, 0.28 ) }
    dend_15 { pt3dadd( 82.8877, 10.2041, -55.8434, 0.56 ) }
    dend_15 { pt3dadd( 85.0434, 10.7336, -58.0653, 0.28 ) }
    dend_15 { pt3dadd( 86.0117, 10.8502, -59.2396, 0.56 ) }
    dend_15 { pt3dadd( 87.0001, 10.9288, -60.426, 0.28 ) }
    dend_15 { pt3dadd( 87.5913, 10.9731, -61.1029, 0.83 ) }
    dend_15 { pt3dadd( 88.6726, 11.1332, -62.2387, 0.28 ) }
    dend_15 { pt3dadd( 89.3171, 11.2903, -62.8971, 0.56 ) }
    dend_15 { pt3dadd( 93.3976, 12.6358, -66.9572, 0.28 ) }
    dend_15 { pt3dadd( 94.6018, 13.0836, -68.1655, 0.28 ) }
    dend_15 { pt3dadd( 96.1693, 13.7167, -69.9052, 0.83 ) }
    dend_15 { pt3dadd( 99.3754, 15.0996, -73.7128, 0.28 ) }
    dend_15 { pt3dadd( 100.562, 15.6414, -75.1647, 1.39 ) }
    dend_15 { pt3dadd( 102.589, 16.6335, -77.6244, 0.28 ) }
    dend_15 { pt3dadd( 103.38, 17.0384, -78.5535, 1.11 ) }
    dend_15 { pt3dadd( 106.652, 18.6608, -82.6025, 0.28 ) }
    dend_15 { pt3dadd( 108.097, 19.3621, -84.4547, 0.28 ) }
    dend_15 { pt3dadd( 109.066, 19.823, -85.7665, 0.83 ) }
    dend_15 { pt3dadd( 110.613, 20.4983, -87.9002, 0.28 ) }
    dend_15 { pt3dadd( 110.93, 20.6852, -88.3284, 0.56 ) }
    dend_15 { pt3dadd( 112.536, 21.9631, -90.2652, 0.28 ) }
    dend_15 { pt3dadd( 113.079, 22.5079, -90.8613, 1.11 ) }
    dend_15 { pt3dadd( 114.807, 24.4226, -92.6878, 0.28 ) }
    dend_15 { pt3dadd( 115.822, 25.6214, -93.8204, 0.83 ) }
    dend_15 { pt3dadd( 118.974, 29.4614, -97.5658, 0.28 ) }
    dend_15 { pt3dadd( 120.795, 31.7671, -99.7362, 1.11 ) }
    dend_15 { pt3dadd( 122.459, 33.9669, -101.677, 0.28 ) }
    dend_15 { pt3dadd( 122.875, 34.5258, -102.153, 0.83 ) }
    dend_15 { pt3dadd( 125.144, 37.7329, -104.731, 0.28 ) }
    dend_15 { pt3dadd( 126.547, 39.5517, -106.344, 1.39 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 36/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 20.4508, -9.17163, -18.1472, 1.11 ) }
    dend_12 { pt3dadd( 19.1114, -11.9868, -19.0113, 1.11 ) }
    dend_12 { pt3dadd( 18.5345, -14.3328, -19.2144, 0.83 ) }
    dend_12 { pt3dadd( 18.7364, -15.8264, -19.0092, 0.83 ) }
    dend_12 { pt3dadd( 19.3578, -17.735, -18.5818, 0.83 ) }
    dend_12 { pt3dadd( 19.8572, -19.0297, -18.2469, 0.83 ) }
    dend_12 { pt3dadd( 20.6324, -20.7966, -17.7721, 0.83 ) }
    dend_12 { pt3dadd( 22.5843, -24.4866, -16.7727, 0.83 ) }
    dend_12 { pt3dadd( 25.2578, -28.8236, -15.7485, 0.83 ) }
    dend_12 { pt3dadd( 27.7633, -32.5445, -15.1061, 0.83 ) }
    dend_12 { pt3dadd( 28.9817, -34.0739, -14.9101, 0.56 ) }
    dend_12 { pt3dadd( 30.5537, -35.8779, -14.7788, 0.83 ) }
    dend_12 { pt3dadd( 32.8196, -38.5207, -14.7941, 0.56 ) }
    dend_12 { pt3dadd( 35.0538, -41.1087, -15.0477, 1.11 ) }
    dend_12 { pt3dadd( 36.9861, -43.268, -15.4548, 0.56 ) }
    dend_12 { pt3dadd( 40.0816, -46.5139, -16.2293, 0.56 ) }
    dend_12 { pt3dadd( 41.0378, -47.5302, -16.4678, 0.56 ) }
    dend_12 { pt3dadd( 43.9653, -50.7794, -17.3047, 0.56 ) }
    dend_12 { pt3dadd( 46.4156, -53.5767, -17.9998, 0.56 ) }
    dend_12 { pt3dadd( 48.2566, -55.8456, -18.6397, 0.56 ) }
    dend_12 { pt3dadd( 48.7914, -56.4996, -18.8336, 0.56 ) }
    dend_12 { pt3dadd( 50.795, -59.1028, -19.6959, 0.83 ) }
    dend_12 { pt3dadd( 52.9998, -61.8537, -20.7558, 0.28 ) }
    dend_12 { pt3dadd( 53.6022, -62.5922, -21.0803, 0.83 ) }
    dend_12 { pt3dadd( 54.2036, -63.513, -21.4793, 0.28 ) }
    dend_12 { pt3dadd( 55.6489, -65.8516, -22.3829, 0.28 ) }
    dend_12 { pt3dadd( 56.1178, -66.5496, -22.6567, 0.28 ) }
    dend_12 { pt3dadd( 57.7421, -69.2536, -23.635, 1.11 ) }
    dend_12 { pt3dadd( 58.2582, -70.2376, -23.8803, 0.28 ) }
    dend_12 { pt3dadd( 58.6071, -70.9344, -24.0759, 0.28 ) }
    dend_12 { pt3dadd( 59.6226, -72.9485, -24.6376, 1.11 ) }
    dend_12 { pt3dadd( 60.4906, -74.7568, -25.1169, 0.28 ) }
    dend_12 { pt3dadd( 61.476, -76.7629, -25.6043, 0.28 ) }
    dend_12 { pt3dadd( 62.4537, -78.7969, -26.0183, 0.28 ) }
    dend_12 { pt3dadd( 63.3903, -80.6301, -26.3579, 1.11 ) }
    dend_12 { pt3dadd( 64.5385, -83.0154, -26.7362, 0.28 ) }
    dend_12 { pt3dadd( 64.8638, -83.7987, -26.8209, 0.28 ) }
    dend_12 { pt3dadd( 65.6541, -85.6405, -26.9798, 0.56 ) }
    dend_12 { pt3dadd( 66.2726, -86.945, -27.0327, 0.28 ) }
    dend_12 { pt3dadd( 68.1726, -90.9615, -27.3386, 0.28 ) }
    dend_12 { pt3dadd( 68.7192, -92.1089, -27.4439, 0.28 ) }
    dend_12 { pt3dadd( 70.0744, -94.9257, -27.7865, 0.83 ) }
    dend_12 { pt3dadd( 71.4598, -97.8022, -28.2917, 0.28 ) }
    dend_12 { pt3dadd( 72.5884, -100.037, -28.788, 1.67 ) }
    dend_12 { pt3dadd( 74.3913, -103.456, -29.6839, 0.28 ) }
    dend_12 { pt3dadd( 75.167, -104.971, -30.1921, 0.56 ) }
    dend_12 { pt3dadd( 75.5951, -105.711, -30.4849, 0.56 ) }
    dend_12 { pt3dadd( 76.7353, -107.528, -31.2877, 0.28 ) }
    dend_12 { pt3dadd( 77.6876, -108.911, -31.9681, 0.28 ) }
    dend_12 { pt3dadd( 79.1189, -110.772, -33.65, 0.83 ) }
    dend_12 { pt3dadd( 80.5562, -112.525, -35.3088, 0.56 ) }
    dend_12 { pt3dadd( 81.4672, -113.561, -36.4232, 0.83 ) }
    dend_12 { pt3dadd( 82.3969, -114.549, -37.6049, 0.28 ) }
    dend_12 { pt3dadd( 83.7101, -115.871, -39.4189, 0.28 ) }
    dend_12 { pt3dadd( 87.8987, -120.315, -47.4212, 0.28 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 91/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 8.71828, -28.9639, 24.7415, 0.28 ) }
    dend_8 { pt3dadd( 7.62281, -29.8176, 26.2788, 0.28 ) }
    dend_8 { pt3dadd( 5.36157, -31.5798, 29.452, 0.28 ) }
    dend_8 { pt3dadd( 4.73681, -32.0666, 30.3288, 0.56 ) }
    dend_8 { pt3dadd( 3.66259, -32.9037, 31.8362, 0.56 ) }
    dend_8 { pt3dadd( 2.15734, -34.0767, 33.9486, 0.56 ) }
    dend_8 { pt3dadd( 1.26256, -34.774, 35.2042, 0.56 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 98/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 8.71828, -28.9639, 24.7415, 0.56 ) }
    dend_7 { pt3dadd( 11.6982, -28.0722, 25.9715, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 0/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -15.7758, -14.8408, 4.92963, 0.83 ) }
    dend_5 { pt3dadd( -18.2428, -8.15423, 13.0091, 0.83 ) }
    dend_5 { pt3dadd( -18.7635, -6.95454, 13.5725, 0.83 ) }
    dend_5 { pt3dadd( -19.4353, -5.45759, 13.9779, 0.83 ) }
    dend_5 { pt3dadd( -20.5896, -3.13888, 14.3776, 0.83 ) }
    dend_5 { pt3dadd( -22.6082, 0.878927, 15.0118, 0.56 ) }
    dend_5 { pt3dadd( -23.8993, 3.57809, 15.3924, 0.56 ) }
    dend_5 { pt3dadd( -25.9375, 7.93596, 15.1929, 0.56 ) }
    dend_5 { pt3dadd( -26.4423, 8.95603, 15.1525, 0.83 ) }
    dend_5 { pt3dadd( -28.0724, 11.9525, 15.0785, 0.56 ) }
    dend_5 { pt3dadd( -29.0245, 13.5619, 15.1241, 0.56 ) }
    dend_5 { pt3dadd( -30.4523, 15.9948, 15.4585, 0.83 ) }
    dend_5 { pt3dadd( -31.3875, 17.7109, 15.7571, 0.56 ) }
    dend_5 { pt3dadd( -32.6451, 20.0167, 16.2165, 0.56 ) }
    dend_5 { pt3dadd( -34.2925, 22.714, 16.6902, 0.28 ) }
    dend_5 { pt3dadd( -35.6873, 24.9254, 16.9466, 0.28 ) }
    dend_5 { pt3dadd( -36.7644, 26.4871, 17.0058, 0.28 ) }
    dend_5 { pt3dadd( -37.8224, 28.0568, 16.9897, 0.28 ) }
    dend_5 { pt3dadd( -38.7996, 29.6342, 16.9251, 0.56 ) }
    dend_5 { pt3dadd( -40.7167, 32.904, 16.6343, 0.28 ) }
    dend_5 { pt3dadd( -42.085, 35.2902, 16.3311, 0.28 ) }
    dend_5 { pt3dadd( -43.7692, 38.2742, 15.8024, 0.83 ) }
    dend_5 { pt3dadd( -46.9428, 43.7878, 14.7512, 0.28 ) }
    dend_5 { pt3dadd( -47.9046, 45.5037, 14.3748, 0.83 ) }
    dend_5 { pt3dadd( -48.8487, 47.2331, 13.9652, 0.28 ) }
    dend_5 { pt3dadd( -49.8839, 49.2372, 13.385, 0.83 ) }
    dend_5 { pt3dadd( -51.4129, 52.0652, 12.478, 0.28 ) }
    dend_5 { pt3dadd( -51.8106, 52.7976, 12.1781, 0.56 ) }
    dend_5 { pt3dadd( -53.0657, 54.8254, 10.9259, 0.28 ) }
    dend_5 { pt3dadd( -53.333, 55.2327, 10.6295, 0.56 ) }
    dend_5 { pt3dadd( -54.6858, 57.3124, 8.89657, 0.56 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 31/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -15.7758, -14.8408, 4.92963, 1.11 ) }
    dend_2 { pt3dadd( -17.6692, -17.7334, 1.04326, 1.11 ) }
    dend_2 { pt3dadd( -18.2784, -18.6641, -0.207218, 1.11 ) }
    dend_2 { pt3dadd( -20.2701, -21.7068, -4.29534, 1.11 ) }
    dend_2 { pt3dadd( -21.7976, -24.0404, -7.43074, 1.11 ) }
    dend_2 { pt3dadd( -23.7649, -27.0458, -11.4688, 1.11 ) }
    dend_2 { pt3dadd( -25.0155, -28.9564, -14.0358, 1.11 ) }
    // Section: apic_11, id: apic_11, parent: apic_5 (entry count 38/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( -103.383, -316.647, 38.8026, 0.56 ) }
    apic_11 { pt3dadd( -105.988, -318.306, 40.5763, 0.56 ) }
    apic_11 { pt3dadd( -108.463, -319.882, 42.2616, 0.28 ) }
    apic_11 { pt3dadd( -109.488, -320.535, 42.9595, 0.56 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 42/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( -103.383, -316.647, 38.8026, 0.56 ) }
    apic_6 { pt3dadd( -104.151, -318.461, 40.3151, 0.56 ) }
    apic_6 { pt3dadd( -105.14, -320.973, 42.3051, 0.56 ) }
    apic_6 { pt3dadd( -105.534, -321.878, 42.9782, 0.83 ) }
    apic_6 { pt3dadd( -106.608, -323.861, 44.3058, 0.56 ) }
    apic_6 { pt3dadd( -107.272, -324.945, 44.9263, 0.56 ) }
    apic_6 { pt3dadd( -108.884, -327.575, 46.432, 0.56 ) }
    apic_6 { pt3dadd( -109.451, -328.338, 46.8149, 0.56 ) }
    apic_6 { pt3dadd( -110.351, -329.477, 47.2317, 0.56 ) }
    apic_6 { pt3dadd( -111.978, -331.606, 47.9974, 0.28 ) }
    apic_6 { pt3dadd( -112.883, -332.882, 48.3952, 0.83 ) }
    // Section: apic_4, id: apic_4, parent: apic_2 (entry count 53/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 11.7169, -46.9571, 36.8545, 0.56 ) }
    apic_4 { pt3dadd( 11.6585, -48.5464, 38.6334, 0.56 ) }
    apic_4 { pt3dadd( 11.6343, -50.1049, 40.4608, 0.56 ) }
    apic_4 { pt3dadd( 11.587, -53.1422, 44.0219, 0.56 ) }
    apic_4 { pt3dadd( 11.5704, -54.2097, 45.2735, 0.56 ) }
    apic_4 { pt3dadd( 11.5523, -55.3717, 46.6359, 0.56 ) }
    apic_4 { pt3dadd( 11.5124, -57.9283, 49.6334, 0.56 ) }
    apic_4 { pt3dadd( 11.6018, -59.164, 51.1702, 0.56 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 61/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 11.7169, -46.9571, 36.8545, 0.83 ) }
    apic_3 { pt3dadd( 13.3972, -51.5838, 33.4519, 0.83 ) }
    apic_3 { pt3dadd( 13.7578, -53.308, 32.5064, 0.83 ) }
    apic_3 { pt3dadd( 14.4638, -57.8615, 30.4446, 0.56 ) }
    apic_3 { pt3dadd( 14.6049, -58.7619, 30.0859, 0.56 ) }
    apic_3 { pt3dadd( 15.0678, -61.2259, 29.1791, 0.56 ) }
    apic_3 { pt3dadd( 15.5809, -63.3085, 28.4156, 0.56 ) }
    apic_3 { pt3dadd( 16.7668, -67.4242, 27.3379, 0.56 ) }
    apic_3 { pt3dadd( 17.5429, -69.9135, 26.5392, 0.56 ) }
    apic_3 { pt3dadd( 18.1178, -71.5481, 25.9675, 0.56 ) }
    apic_3 { pt3dadd( 18.8021, -73.0859, 25.3764, 0.56 ) }
    apic_3 { pt3dadd( 20.0571, -75.3274, 24.4458, 0.56 ) }
    apic_3 { pt3dadd( 20.4838, -75.9475, 24.1519, 0.56 ) }
    apic_3 { pt3dadd( 23.6365, -79.9729, 22.0972, 0.83 ) }
    apic_3 { pt3dadd( 24.5297, -81.2878, 21.4824, 0.28 ) }
    apic_3 { pt3dadd( 25.8698, -83.937, 20.2378, 0.83 ) }
    apic_3 { pt3dadd( 26.3806, -85.3295, 19.6362, 0.56 ) }
    apic_3 { pt3dadd( 26.8534, -87.1392, 18.956, 0.56 ) }
    apic_3 { pt3dadd( 27.1462, -88.4534, 18.518, 0.28 ) }
    apic_3 { pt3dadd( 27.6932, -91.0989, 17.7581, 0.56 ) }
    apic_3 { pt3dadd( 28.3651, -94.4461, 16.6498, 0.56 ) }
    apic_3 { pt3dadd( 28.8328, -96.4571, 15.9771, 0.56 ) }
    apic_3 { pt3dadd( 29.3354, -98.3227, 15.4407, 0.28 ) }
    apic_3 { pt3dadd( 29.706, -99.4045, 15.1814, 0.83 ) }
    apic_3 { pt3dadd( 30.7994, -101.696, 14.819, 0.28 ) }
    apic_3 { pt3dadd( 31.4248, -102.727, 14.7479, 1.11 ) }
    apic_3 { pt3dadd( 33.0072, -105.055, 14.8479, 0.56 ) }
    apic_3 { pt3dadd( 34.8133, -107.59, 15.0591, 0.56 ) }
    apic_3 { pt3dadd( 35.8837, -109.047, 15.121, 0.83 ) }
    apic_3 { pt3dadd( 36.99, -110.65, 15.223, 0.28 ) }
    apic_3 { pt3dadd( 37.2753, -111.121, 15.264, 0.56 ) }
    apic_3 { pt3dadd( 37.871, -112.242, 15.2713, 0.28 ) }
    apic_3 { pt3dadd( 38.7162, -113.946, 15.1312, 0.56 ) }
    apic_3 { pt3dadd( 40.2567, -116.906, 14.6821, 1.11 ) }
    apic_3 { pt3dadd( 41.5655, -119.735, 14.111, 0.28 ) }
    apic_3 { pt3dadd( 42.107, -121.018, 13.7296, 0.56 ) }
    apic_3 { pt3dadd( 42.9446, -123.137, 13.0315, 0.28 ) }
    apic_3 { pt3dadd( 43.3611, -124.292, 12.7026, 0.56 ) }
    apic_3 { pt3dadd( 43.6124, -125.133, 12.5205, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    apic_3 { pt3dadd( 44.1723, -126.822, 12.2613, 0.83 ) }
    apic_3 { pt3dadd( 44.7677, -128.481, 11.952, 0.28 ) }
    apic_3 { pt3dadd( 44.9375, -129.024, 11.8761, 0.56 ) }
    apic_3 { pt3dadd( 45.6915, -131.843, 11.6002, 0.28 ) }
    apic_3 { pt3dadd( 46.0816, -133.311, 11.498, 1.39 ) }
    apic_3 { pt3dadd( 47.8222, -138.91, 11.2657, 0.28 ) }
    apic_3 { pt3dadd( 48.2514, -140.103, 11.256, 0.83 ) }
    apic_3 { pt3dadd( 49.1136, -142.155, 11.2626, 0.28 ) }
    apic_3 { pt3dadd( 49.3431, -142.682, 11.2562, 0.56 ) }
    apic_3 { pt3dadd( 50.3557, -144.938, 11.1855, 0.28 ) }
    apic_3 { pt3dadd( 51.8022, -147.912, 11.1298, 0.28 ) }
    apic_3 { pt3dadd( 52.3764, -149.1, 11.1341, 1.11 ) }
    apic_3 { pt3dadd( 53.6484, -151.665, 11.0868, 0.28 ) }
    apic_3 { pt3dadd( 54.4841, -153.266, 11.0226, 0.28 ) }
    apic_3 { pt3dadd( 54.6117, -153.523, 11.0087, 0.56 ) }
    apic_3 { pt3dadd( 55.6066, -155.757, 10.8474, 0.28 ) }
    apic_3 { pt3dadd( 56.0469, -156.836, 10.7832, 1.39 ) }
    apic_3 { pt3dadd( 57.0624, -159.35, 10.6758, 0.28 ) }
    apic_3 { pt3dadd( 57.6585, -160.741, 10.5816, 1.39 ) }
    apic_3 { pt3dadd( 58.4891, -162.449, 10.402, 0.28 ) }
    apic_3 { pt3dadd( 58.9912, -163.46, 10.2673, 0.28 ) }
    apic_3 { pt3dadd( 60.2471, -165.802, 9.88001, 0.28 ) }
    apic_3 { pt3dadd( 60.8833, -166.88, 9.67417, 0.83 ) }
    apic_3 { pt3dadd( 62.4777, -169.398, 9.13005, 0.28 ) }
    apic_3 { pt3dadd( 62.6928, -169.723, 9.05585, 0.56 ) }
    apic_3 { pt3dadd( 63.3256, -170.63, 8.85013, 0.56 ) }
    apic_3 { pt3dadd( 64.3913, -172.035, 8.55376, 0.28 ) }
    apic_3 { pt3dadd( 64.9288, -172.694, 8.45038, 0.28 ) }
    apic_3 { pt3dadd( 65.6675, -173.701, 8.37293, 1.39 ) }
    apic_3 { pt3dadd( 66.8654, -175.51, 8.37029, 0.28 ) }
    apic_3 { pt3dadd( 67.5581, -176.741, 8.39778, 0.28 ) }
    apic_3 { pt3dadd( 67.9929, -177.671, 8.43623, 0.83 ) }
    apic_3 { pt3dadd( 68.6774, -179.782, 8.64929, 0.28 ) }
    apic_3 { pt3dadd( 69.3853, -182.269, 9.0329, 0.28 ) }
    apic_3 { pt3dadd( 69.4481, -182.545, 9.08905, 0.56 ) }
    apic_3 { pt3dadd( 69.7919, -184.399, 9.59215, 0.28 ) }
    apic_3 { pt3dadd( 69.8864, -184.998, 9.77652, 0.83 ) }
    apic_3 { pt3dadd( 70.2415, -187.076, 10.342, 0.28 ) }
    apic_3 { pt3dadd( 70.548, -188.804, 10.7396, 0.28 ) }
    apic_3 { pt3dadd( 70.8021, -189.93, 10.9558, 1.39 ) }
    apic_3 { pt3dadd( 71.1509, -191.86, 11.2136, 0.28 ) }
    apic_3 { pt3dadd( 71.2378, -192.421, 11.2592, 0.83 ) }
    apic_3 { pt3dadd( 71.7142, -195.907, 11.3422, 0.28 ) }
    apic_3 { pt3dadd( 71.8541, -197.716, 11.2876, 0.28 ) }
    apic_3 { pt3dadd( 71.8705, -198.561, 11.2496, 0.83 ) }
    apic_3 { pt3dadd( 71.8597, -201.635, 11.0437, 0.28 ) }
    apic_3 { pt3dadd( 71.8514, -202.487, 10.9687, 1.67 ) }
    apic_3 { pt3dadd( 71.8732, -205.137, 10.7352, 0.28 ) }
    apic_3 { pt3dadd( 71.9701, -208.25, 10.5848, 0.28 ) }
    apic_3 { pt3dadd( 72.0814, -209.386, 10.5177, 0.56 ) }
    apic_3 { pt3dadd( 72.3337, -211.115, 10.4632, 0.28 ) }
    apic_3 { pt3dadd( 72.4732, -212.14, 10.4813, 0.56 ) }
    apic_3 { pt3dadd( 72.6047, -213.408, 10.5325, 0.28 ) }
    apic_3 { pt3dadd( 72.7939, -215.457, 10.6524, 0.56 ) }
    apic_3 { pt3dadd( 73.1306, -218.771, 10.8703, 0.28 ) }
    apic_3 { pt3dadd( 73.2913, -220.625, 11.0012, 1.11 ) }
    apic_3 { pt3dadd( 73.9624, -230.923, 11.7824, 0.28 ) }
    apic_3 { pt3dadd( 74.006, -232.1, 11.8644, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 58/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 90.4973, 44.1087, -41.976, 0.28 ) }
    dend_22 { pt3dadd( 92.2248, 46.8509, -45.4659, 0.28 ) }
    dend_22 { pt3dadd( 92.5508, 47.3763, -46.1214, 0.83 ) }
    dend_22 { pt3dadd( 94.6959, 51.1182, -50.2282, 0.28 ) }
    dend_22 { pt3dadd( 94.9774, 51.634, -50.7455, 0.56 ) }
    dend_22 { pt3dadd( 97.0172, 55.2352, -54.5898, 0.28 ) }
    dend_22 { pt3dadd( 98.067, 56.8633, -56.3446, 0.28 ) }
    dend_22 { pt3dadd( 98.3397, 57.2306, -56.7727, 0.83 ) }
    dend_22 { pt3dadd( 99.4848, 58.5368, -58.4091, 0.28 ) }
    dend_22 { pt3dadd( 99.809, 58.8731, -58.8378, 0.83 ) }
    dend_22 { pt3dadd( 102.82, 61.7093, -62.6255, 0.56 ) }
    dend_22 { pt3dadd( 105.205, 63.742, -65.4124, 0.28 ) }
    dend_22 { pt3dadd( 106.175, 64.4998, -66.4906, 0.83 ) }
    dend_22 { pt3dadd( 110.099, 67.5044, -70.8411, 0.56 ) }
    dend_22 { pt3dadd( 112.562, 69.2758, -73.4749, 0.28 ) }
    dend_22 { pt3dadd( 113.633, 70.0353, -74.5386, 0.28 ) }
    dend_22 { pt3dadd( 114.054, 70.3161, -74.9187, 0.56 ) }
    dend_22 { pt3dadd( 117.322, 72.3175, -77.9974, 0.28 ) }
    dend_22 { pt3dadd( 118.546, 73.0111, -79.0924, 0.28 ) }
    dend_22 { pt3dadd( 119.752, 73.6787, -80.0451, 0.83 ) }
    dend_22 { pt3dadd( 120.869, 74.2545, -80.9002, 0.83 ) }
    dend_22 { pt3dadd( 124.295, 76.01, -83.6521, 0.28 ) }
    dend_22 { pt3dadd( 126.373, 77.0316, -85.3485, 1.11 ) }
    dend_22 { pt3dadd( 127.844, 77.6895, -86.5481, 0.28 ) }
    dend_22 { pt3dadd( 129.148, 78.2353, -87.6653, 0.28 ) }
    dend_22 { pt3dadd( 129.744, 78.5155, -88.2377, 0.56 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 84/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 90.4973, 44.1087, -41.976, 0.56 ) }
    dend_21 { pt3dadd( 92.294, 42.8304, -41.3067, 0.56 ) }
    dend_21 { pt3dadd( 93.6253, 41.5776, -40.7308, 0.28 ) }
    dend_21 { pt3dadd( 94.6499, 40.2968, -40.2607, 1.11 ) }
    dend_21 { pt3dadd( 96.5394, 37.455, -39.1363, 0.28 ) }
    dend_21 { pt3dadd( 97.4251, 35.8548, -38.6087, 1.11 ) }
    dend_21 { pt3dadd( 98.8898, 33.0028, -37.771, 0.28 ) }
    dend_21 { pt3dadd( 100.257, 29.9189, -36.9615, 0.28 ) }
    dend_21 { pt3dadd( 101.522, 26.8442, -36.2107, 0.28 ) }
    dend_21 { pt3dadd( 102.627, 24.3429, -35.6596, 1.39 ) }
    dend_21 { pt3dadd( 104.588, 20.3796, -34.9174, 0.28 ) }
    dend_21 { pt3dadd( 105.303, 19.1738, -34.6964, 1.11 ) }
    dend_21 { pt3dadd( 107.515, 16.0363, -34.1839, 0.28 ) }
    dend_21 { pt3dadd( 107.906, 15.5641, -34.0901, 0.83 ) }
    dend_21 { pt3dadd( 111.444, 11.9326, -33.2782, 0.28 ) }
    dend_21 { pt3dadd( 112.17, 11.2591, -33.1141, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_21 { pt3dadd( 114.316, 9.4009, -32.4708, 0.28 ) }
    dend_21 { pt3dadd( 114.609, 9.14247, -32.3738, 0.56 ) }
    dend_21 { pt3dadd( 116.207, 7.68705, -32.0219, 0.28 ) }
    dend_21 { pt3dadd( 116.656, 7.25033, -31.9789, 0.56 ) }
    dend_21 { pt3dadd( 117.96, 5.94715, -32.1548, 0.28 ) }
    dend_21 { pt3dadd( 118.973, 4.99033, -32.424, 0.56 ) }
    dend_21 { pt3dadd( 119.363, 4.6216, -32.5805, 0.56 ) }
    dend_21 { pt3dadd( 123.022, 1.30757, -34.3514, 0.28 ) }
    dend_21 { pt3dadd( 123.043, 1.28997, -34.3643, 0.56 ) }
    dend_21 { pt3dadd( 124.825, -0.0460904, -35.541, 0.28 ) }
    dend_21 { pt3dadd( 125.423, -0.438941, -35.9979, 0.56 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 11/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 126.547, 39.5517, -106.344, 0.28 ) }
    dend_17 { pt3dadd( 131.113, 42.3257, -110.369, 0.28 ) }
    dend_17 { pt3dadd( 131.873, 42.8184, -111.031, 1.11 ) }
    dend_17 { pt3dadd( 135.649, 45.4863, -114.308, 0.28 ) }
    dend_17 { pt3dadd( 136.054, 45.8151, -114.65, 0.83 ) }
    dend_17 { pt3dadd( 139.481, 48.807, -117.468, 0.28 ) }
    dend_17 { pt3dadd( 139.736, 49.0408, -117.671, 0.56 ) }
    dend_17 { pt3dadd( 140.622, 50.0488, -118.364, 0.28 ) }
    dend_17 { pt3dadd( 141.242, 50.8452, -118.872, 1.67 ) }
    dend_17 { pt3dadd( 144.096, 54.9315, -121.153, 0.28 ) }
    dend_17 { pt3dadd( 144.519, 55.5268, -121.479, 0.56 ) }
    dend_17 { pt3dadd( 145.943, 57.5509, -122.486, 0.28 ) }
    dend_17 { pt3dadd( 146.424, 58.2309, -122.838, 1.11 ) }
    dend_17 { pt3dadd( 148.079, 60.6534, -124.181, 0.28 ) }
    dend_17 { pt3dadd( 148.494, 61.2397, -124.534, 0.56 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 26/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 126.547, 39.5517, -106.344, 0.28 ) }
    dend_16 { pt3dadd( 127.658, 40.8322, -106.122, 0.28 ) }
    dend_16 { pt3dadd( 128.173, 41.3596, -105.819, 0.83 ) }
    dend_16 { pt3dadd( 129.509, 42.3966, -104.849, 0.28 ) }
    dend_16 { pt3dadd( 130.065, 42.7366, -104.42, 0.56 ) }
    dend_16 { pt3dadd( 131.993, 43.6392, -103.306, 0.28 ) }
    dend_16 { pt3dadd( 132.338, 43.7622, -103.147, 0.56 ) }
    dend_16 { pt3dadd( 135.977, 44.0974, -101.903, 0.56 ) }
    dend_16 { pt3dadd( 137.519, 44.0044, -101.431, 0.28 ) }
    dend_16 { pt3dadd( 138.115, 43.9073, -101.282, 1.11 ) }
    dend_16 { pt3dadd( 141.482, 43.1095, -100.548, 0.28 ) }
    dend_16 { pt3dadd( 142.07, 42.9223, -100.464, 0.56 ) }
    dend_16 { pt3dadd( 144.887, 42.0995, -100.46, 0.28 ) }
    dend_16 { pt3dadd( 146.607, 41.6455, -100.855, 0.56 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 40/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 87.8987, -120.315, -47.4212, 0.83 ) }
    dend_14 { pt3dadd( 93.7308, -128.644, -49.5373, 0.83 ) }
    dend_14 { pt3dadd( 95.716, -131.263, -50.1694, 0.28 ) }
    dend_14 { pt3dadd( 96.9954, -132.891, -50.5718, 1.39 ) }
    dend_14 { pt3dadd( 99.6117, -135.992, -51.3603, 0.28 ) }
    dend_14 { pt3dadd( 100.727, -137.247, -51.6622, 0.28 ) }
    dend_14 { pt3dadd( 102.238, -138.873, -52.0802, 0.28 ) }
    dend_14 { pt3dadd( 102.91, -139.572, -52.3726, 0.28 ) }
    dend_14 { pt3dadd( 103.386, -140.055, -52.4947, 0.56 ) }
    dend_14 { pt3dadd( 105.429, -142.156, -52.8023, 0.28 ) }
    dend_14 { pt3dadd( 106.525, -143.308, -52.8867, 1.39 ) }
    dend_14 { pt3dadd( 109.235, -146.55, -53.1956, 0.28 ) }
    dend_14 { pt3dadd( 110.078, -147.793, -53.3223, 0.83 ) }
    dend_14 { pt3dadd( 110.972, -149.338, -53.5524, 0.28 ) }
    dend_14 { pt3dadd( 112.058, -151.475, -53.9238, 0.28 ) }
    dend_14 { pt3dadd( 112.517, -152.568, -54.1722, 0.83 ) }
    dend_14 { pt3dadd( 113.687, -155.678, -55.0202, 0.28 ) }
    dend_14 { pt3dadd( 114.253, -157.203, -55.5183, 1.11 ) }
    dend_14 { pt3dadd( 115.74, -160.889, -56.9029, 0.28 ) }
    dend_14 { pt3dadd( 116.348, -162.299, -57.4879, 1.39 ) }
    dend_14 { pt3dadd( 117.374, -164.454, -58.4346, 0.28 ) }
    dend_14 { pt3dadd( 117.76, -165.088, -58.7162, 0.56 ) }
    dend_14 { pt3dadd( 120.068, -167.739, -59.8755, 0.28 ) }
    dend_14 { pt3dadd( 120.787, -168.398, -60.1677, 0.83 ) }
    dend_14 { pt3dadd( 123.369, -170.03, -60.8761, 0.28 ) }
    dend_14 { pt3dadd( 124.411, -170.496, -61.0887, 1.39 ) }
    dend_14 { pt3dadd( 127.76, -171.428, -61.5741, 0.28 ) }
    dend_14 { pt3dadd( 130.816, -171.901, -61.9118, 0.28 ) }
    dend_14 { pt3dadd( 131.097, -171.911, -61.9263, 0.56 ) }
    dend_14 { pt3dadd( 135.022, -171.814, -62.009, 0.28 ) }
    dend_14 { pt3dadd( 136.172, -171.743, -61.9975, 0.56 ) }
    dend_14 { pt3dadd( 138.782, -171.628, -61.9666, 0.28 ) }
    dend_14 { pt3dadd( 140.247, -171.652, -61.9192, 1.11 ) }
    dend_14 { pt3dadd( 142.401, -171.821, -61.8196, 0.28 ) }
    dend_14 { pt3dadd( 143.383, -171.989, -61.7648, 0.56 ) }
    dend_14 { pt3dadd( 147.814, -173.157, -61.4698, 0.28 ) }
    dend_14 { pt3dadd( 149.356, -173.664, -61.3599, 1.39 ) }
    dend_14 { pt3dadd( 152.551, -174.957, -61.1243, 0.28 ) }
    dend_14 { pt3dadd( 153.812, -175.547, -61.0675, 0.56 ) }
    dend_14 { pt3dadd( 156.425, -176.962, -60.958, 0.28 ) }
    dend_14 { pt3dadd( 157.168, -177.426, -60.9103, 0.56 ) }
    dend_14 { pt3dadd( 158.641, -178.459, -60.7826, 0.28 ) }
    dend_14 { pt3dadd( 160.063, -179.544, -60.6521, 0.83 ) }
    dend_14 { pt3dadd( 161.969, -181.089, -60.4846, 0.28 ) }
    dend_14 { pt3dadd( 163.398, -182.325, -60.3427, 1.39 ) }
    dend_14 { pt3dadd( 165.315, -184.093, -60.1241, 0.28 ) }
    dend_14 { pt3dadd( 166.707, -185.517, -59.9778, 0.28 ) }
    dend_14 { pt3dadd( 167.854, -186.766, -59.7977, 0.28 ) }
    dend_14 { pt3dadd( 168.68, -187.693, -59.5986, 0.83 ) }
    dend_14 { pt3dadd( 169.351, -188.431, -59.398, 0.28 ) }
    dend_14 { pt3dadd( 170.056, -189.143, -59.2149, 0.83 ) }
    dend_14 { pt3dadd( 171.114, -190.17, -58.7549, 0.28 ) }
    dend_14 { pt3dadd( 172.627, -191.642, -58.0172, 0.83 ) }
    dend_14 { pt3dadd( 174.398, -193.212, -57.1082, 0.28 ) }
    dend_14 { pt3dadd( 175.396, -194.072, -56.5567, 0.28 ) }
    dend_14 { pt3dadd( 177.962, -196.114, -55.0898, 0.28 ) }
    dend_14 { pt3dadd( 180.549, -197.966, -53.6136, 1.11 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 97/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 87.8987, -120.315, -47.4212, 0.56 ) }
    dend_13 { pt3dadd( 92.3853, -126.445, -34.876, 0.56 ) }
    dend_13 { pt3dadd( 93.1047, -127.721, -32.8043, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_13 { pt3dadd( 93.5791, -128.695, -31.4214, 0.28 ) }
    dend_13 { pt3dadd( 93.8971, -129.389, -30.538, 0.56 ) }
    dend_13 { pt3dadd( 95.2957, -132.596, -26.7584, 0.28 ) }
    dend_13 { pt3dadd( 95.7643, -133.648, -25.6647, 1.11 ) }
    dend_13 { pt3dadd( 97.1838, -137.723, -23.1135, 0.28 ) }
    dend_13 { pt3dadd( 97.4261, -138.416, -22.684, 0.56 ) }
    dend_13 { pt3dadd( 98.126, -140.267, -21.6398, 0.28 ) }
    dend_13 { pt3dadd( 98.434, -141.067, -21.2301, 0.83 ) }
    dend_13 { pt3dadd( 99.7422, -144.417, -19.8434, 0.28 ) }
    dend_13 { pt3dadd( 101.13, -147.692, -18.5655, 0.28 ) }
    dend_13 { pt3dadd( 101.617, -148.882, -18.2076, 0.83 ) }
    dend_13 { pt3dadd( 102.588, -151.437, -17.5163, 0.28 ) }
    dend_13 { pt3dadd( 102.751, -151.95, -17.3862, 0.56 ) }
    dend_13 { pt3dadd( 103.479, -154.477, -16.7488, 0.28 ) }
    dend_13 { pt3dadd( 103.552, -154.739, -16.6541, 0.56 ) }
    dend_13 { pt3dadd( 104.084, -156.496, -16.0127, 0.28 ) }
    dend_13 { pt3dadd( 104.22, -156.841, -15.8753, 0.56 ) }
    dend_13 { pt3dadd( 105.536, -159.54, -14.3779, 0.28 ) }
    dend_13 { pt3dadd( 105.879, -160.101, -14.0221, 1.11 ) }
    dend_13 { pt3dadd( 108.471, -164.048, -11.3119, 0.28 ) }
    dend_13 { pt3dadd( 108.754, -164.443, -11.0156, 0.56 ) }
    dend_13 { pt3dadd( 110.496, -166.728, -9.19417, 0.28 ) }
    dend_13 { pt3dadd( 111.979, -168.581, -7.71325, 0.56 ) }
    dend_13 { pt3dadd( 115.745, -172.891, -4.20035, 0.28 ) }
    dend_13 { pt3dadd( 116.403, -173.625, -3.60209, 0.56 ) }
    dend_13 { pt3dadd( 117.47, -174.746, -2.71426, 0.56 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 26/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -25.0155, -28.9564, -14.0358, 0.56 ) }
    dend_4 { pt3dadd( -28.1106, -31.763, -14.8362, 0.56 ) }
    dend_4 { pt3dadd( -28.9272, -32.6789, -15.1296, 0.56 ) }
    dend_4 { pt3dadd( -30.5077, -34.4354, -15.6972, 0.56 ) }
    dend_4 { pt3dadd( -32.4172, -36.3519, -16.3355, 0.83 ) }
    dend_4 { pt3dadd( -34.9418, -38.6414, -17.1007, 0.83 ) }
    dend_4 { pt3dadd( -37.4693, -40.9936, -17.9202, 0.83 ) }
    dend_4 { pt3dadd( -39.1525, -42.8825, -18.7173, 0.56 ) }
    dend_4 { pt3dadd( -39.8319, -43.7559, -19.0562, 0.56 ) }
    dend_4 { pt3dadd( -40.904, -45.2186, -19.6107, 0.83 ) }
    dend_4 { pt3dadd( -41.9096, -46.5388, -19.9951, 0.56 ) }
    dend_4 { pt3dadd( -43.6484, -48.7322, -20.3649, 0.56 ) }
    dend_4 { pt3dadd( -45.2853, -51.04, -20.5521, 0.56 ) }
    dend_4 { pt3dadd( -46.1733, -52.3604, -20.5802, 0.56 ) }
    dend_4 { pt3dadd( -46.7371, -53.3882, -20.6239, 0.56 ) }
    dend_4 { pt3dadd( -47.5096, -55.1215, -20.7927, 0.56 ) }
    dend_4 { pt3dadd( -48.3965, -57.5562, -21.1205, 1.39 ) }
    dend_4 { pt3dadd( -49.2343, -60.1888, -21.6211, 0.56 ) }
    dend_4 { pt3dadd( -50.135, -63.2123, -22.3903, 0.56 ) }
    dend_4 { pt3dadd( -51.0206, -66.9391, -23.6885, 0.83 ) }
    dend_4 { pt3dadd( -51.429, -69.3719, -24.6799, 0.56 ) }
    dend_4 { pt3dadd( -51.6499, -71.422, -25.6834, 1.11 ) }
    dend_4 { pt3dadd( -51.9274, -73.866, -27.1352, 0.56 ) }
    dend_4 { pt3dadd( -52.21, -75.8257, -28.3922, 0.83 ) }
    dend_4 { pt3dadd( -52.7758, -78.7097, -30.3615, 0.28 ) }
    dend_4 { pt3dadd( -53.2637, -80.3687, -31.4647, 0.28 ) }
    dend_4 { pt3dadd( -53.9864, -82.4704, -32.8369, 0.83 ) }
    dend_4 { pt3dadd( -55.1262, -85.5796, -34.8977, 0.28 ) }
    dend_4 { pt3dadd( -55.7727, -87.3577, -36.0277, 1.11 ) }
    dend_4 { pt3dadd( -56.4905, -89.3187, -37.1724, 0.28 ) }
    dend_4 { pt3dadd( -56.6868, -89.776, -37.4124, 0.83 ) }
    dend_4 { pt3dadd( -57.7546, -92.0312, -38.6534, 0.28 ) }
    dend_4 { pt3dadd( -58.2135, -92.9734, -39.1508, 0.83 ) }
    dend_4 { pt3dadd( -59.5047, -95.6973, -40.577, 0.28 ) }
    dend_4 { pt3dadd( -60.3823, -97.5084, -41.5173, 0.83 ) }
    dend_4 { pt3dadd( -61.3615, -99.504, -42.4926, 0.28 ) }
    dend_4 { pt3dadd( -62.7584, -102.367, -43.8207, 0.56 ) }
    dend_4 { pt3dadd( -63.4252, -103.698, -44.4008, 1.67 ) }
    dend_4 { pt3dadd( -64.6767, -106.322, -45.4852, 0.28 ) }
    dend_4 { pt3dadd( -65.3942, -108.03, -46.1407, 0.28 ) }
    dend_4 { pt3dadd( -65.6636, -108.793, -46.4324, 0.56 ) }
    dend_4 { pt3dadd( -66.327, -111.191, -47.2738, 0.28 ) }
    dend_4 { pt3dadd( -66.4999, -112.031, -47.5485, 0.56 ) }
    dend_4 { pt3dadd( -66.7417, -113.384, -48.0264, 0.28 ) }
    dend_4 { pt3dadd( -67.0706, -115.671, -48.8392, 1.39 ) }
    dend_4 { pt3dadd( -67.3799, -118.45, -49.8875, 0.28 ) }
    dend_4 { pt3dadd( -67.4711, -119.28, -50.2198, 0.56 ) }
    dend_4 { pt3dadd( -67.5994, -120.56, -50.7586, 0.28 ) }
    dend_4 { pt3dadd( -67.7577, -121.953, -51.3582, 0.28 ) }
    dend_4 { pt3dadd( -68.0684, -123.585, -51.868, 0.28 ) }
    dend_4 { pt3dadd( -68.3594, -124.557, -51.9368, 1.11 ) }
    dend_4 { pt3dadd( -69.1407, -126.406, -51.7348, 0.28 ) }
    dend_4 { pt3dadd( -69.1407, -126.406, -51.7348, 0.56 ) }
    dend_4 { pt3dadd( -70.2971, -128.417, -51.1637, 0.28 ) }
    dend_4 { pt3dadd( -72.1893, -131.508, -50.1011, 0.83 ) }
    dend_4 { pt3dadd( -73.7319, -133.841, -49.3356, 0.28 ) }
    dend_4 { pt3dadd( -74.3407, -134.742, -49.0531, 0.56 ) }
    dend_4 { pt3dadd( -76.3462, -137.791, -48.1403, 0.28 ) }
    dend_4 { pt3dadd( -77.2175, -139.151, -47.8253, 1.11 ) }
    dend_4 { pt3dadd( -78.7449, -141.668, -47.5104, 0.28 ) }
    dend_4 { pt3dadd( -79.8885, -143.723, -47.5428, 1.11 ) }
    dend_4 { pt3dadd( -81.2125, -146.331, -47.6846, 0.28 ) }
    dend_4 { pt3dadd( -81.8762, -147.7, -47.7746, 0.28 ) }
    dend_4 { pt3dadd( -82.6217, -149.233, -47.9306, 0.56 ) }
    dend_4 { pt3dadd( -83.7512, -151.491, -48.0938, 0.28 ) }
    dend_4 { pt3dadd( -84.5316, -153.02, -48.2271, 0.83 ) }
    dend_4 { pt3dadd( -86.0846, -155.796, -48.3491, 0.28 ) }
    dend_4 { pt3dadd( -86.5408, -156.512, -48.3821, 0.56 ) }
    dend_4 { pt3dadd( -87.9505, -158.607, -48.5469, 0.28 ) }
    dend_4 { pt3dadd( -89.0517, -160.128, -48.6885, 1.11 ) }
    dend_4 { pt3dadd( -90.8035, -162.345, -49.1643, 0.28 ) }
    dend_4 { pt3dadd( -91.5235, -163.191, -49.5542, 0.28 ) }
    dend_4 { pt3dadd( -92.5313, -164.304, -50.2323, 0.56 ) }
    dend_4 { pt3dadd( -94.3267, -166.396, -51.6465, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_4 { pt3dadd( -95.5893, -167.913, -52.7454, 0.56 ) }
    dend_4 { pt3dadd( -97.001, -169.773, -54.0856, 1.39 ) }
    dend_4 { pt3dadd( -99.495, -173.362, -56.4436, 0.28 ) }
    dend_4 { pt3dadd( -100.172, -174.516, -57.1739, 0.56 ) }
    dend_4 { pt3dadd( -101.07, -176.26, -58.229, 0.28 ) }
    dend_4 { pt3dadd( -101.426, -177.109, -58.6864, 0.56 ) }
    dend_4 { pt3dadd( -102.006, -179.069, -59.6, 0.28 ) }
    dend_4 { pt3dadd( -102.233, -180.106, -60.0089, 0.83 ) }
    dend_4 { pt3dadd( -102.659, -182.754, -60.9173, 0.28 ) }
    dend_4 { pt3dadd( -102.779, -183.495, -61.2088, 0.83 ) }
    dend_4 { pt3dadd( -103.332, -186.315, -62.4953, 0.28 ) }
    dend_4 { pt3dadd( -103.786, -188.435, -63.6068, 0.56 ) }
    dend_4 { pt3dadd( -104.378, -190.884, -65.001, 0.28 ) }
    dend_4 { pt3dadd( -104.573, -191.636, -65.4476, 0.83 ) }
    dend_4 { pt3dadd( -105.956, -196.632, -68.4182, 0.28 ) }
    dend_4 { pt3dadd( -106.526, -198.678, -69.6566, 1.94 ) }
    dend_4 { pt3dadd( -107.478, -201.858, -71.6265, 0.28 ) }
    dend_4 { pt3dadd( -107.633, -202.373, -71.9563, 0.56 ) }
    dend_4 { pt3dadd( -108.258, -204.325, -73.028, 0.28 ) }
    dend_4 { pt3dadd( -108.472, -204.891, -73.2134, 0.56 ) }
    dend_4 { pt3dadd( -109.014, -206.073, -73.182, 0.28 ) }
    dend_4 { pt3dadd( -109.372, -206.827, -73.0216, 0.56 ) }
    dend_4 { pt3dadd( -110.268, -208.642, -72.4619, 0.28 ) }
    dend_4 { pt3dadd( -112.38, -212.751, -71.1705, 1.39 ) }
    dend_4 { pt3dadd( -114.653, -217.065, -69.8977, 0.28 ) }
    dend_4 { pt3dadd( -115.865, -219.386, -69.3516, 0.83 ) }
    dend_4 { pt3dadd( -116.956, -221.438, -68.9494, 0.28 ) }
    dend_4 { pt3dadd( -117.612, -222.688, -68.8099, 0.83 ) }
    dend_4 { pt3dadd( -119.53, -226.463, -68.7054, 0.28 ) }
    dend_4 { pt3dadd( -120.286, -228.052, -68.8792, 1.11 ) }
    dend_4 { pt3dadd( -121.851, -231.603, -69.6483, 0.28 ) }
    dend_4 { pt3dadd( -122.192, -232.409, -69.8501, 0.56 ) }
    dend_4 { pt3dadd( -123.639, -235.786, -70.9618, 0.28 ) }
    dend_4 { pt3dadd( -124.406, -237.533, -71.6212, 0.28 ) }
    dend_4 { pt3dadd( -124.828, -238.301, -72.0529, 1.11 ) }
    dend_4 { pt3dadd( -126.71, -241.223, -73.9438, 0.28 ) }
    dend_4 { pt3dadd( -127.924, -242.837, -75.2901, 0.56 ) }
    dend_4 { pt3dadd( -129.697, -244.94, -77.2347, 0.28 ) }
    dend_4 { pt3dadd( -130.486, -245.736, -78.0588, 1.11 ) }
    dend_4 { pt3dadd( -136.046, -250.776, -83.7591, 0.28 ) }
    dend_4 { pt3dadd( -136.532, -251.173, -84.232, 0.83 ) }
    dend_4 { pt3dadd( -139.24, -253.248, -86.9117, 0.28 ) }
    dend_4 { pt3dadd( -140.629, -254.296, -88.362, 0.56 ) }
    dend_4 { pt3dadd( -141.182, -254.705, -88.9194, 0.56 ) }
    dend_4 { pt3dadd( -142.792, -255.834, -90.5569, 0.56 ) }
    dend_4 { pt3dadd( -144.368, -256.715, -91.8678, 0.56 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 46/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -25.0155, -28.9564, -14.0358, 0.83 ) }
    dend_3 { pt3dadd( -24.763, -31.5346, -13.0167, 0.83 ) }
    dend_3 { pt3dadd( -24.2663, -34.3617, -12.2923, 0.83 ) }
    dend_3 { pt3dadd( -24.0271, -36.49, -11.8561, 0.56 ) }
    dend_3 { pt3dadd( -23.8311, -40.0654, -11.2359, 0.83 ) }
    dend_3 { pt3dadd( -23.8492, -42.1004, -10.9252, 0.56 ) }
    dend_3 { pt3dadd( -23.9555, -44.3514, -10.6081, 0.56 ) }
    dend_3 { pt3dadd( -24.5909, -50.6755, -9.85137, 0.83 ) }
    dend_3 { pt3dadd( -24.8416, -53.0976, -9.55913, 1.11 ) }
    dend_3 { pt3dadd( -24.9385, -55.1342, -9.31525, 0.83 ) }
    dend_3 { pt3dadd( -24.8909, -57.1653, -9.03966, 0.83 ) }
    dend_3 { pt3dadd( -24.851, -58.3332, -8.87153, 0.83 ) }
    dend_3 { pt3dadd( -24.7513, -61.7516, -8.45242, 0.83 ) }
    dend_3 { pt3dadd( -24.738, -64.9154, -8.03032, 0.83 ) }
    dend_3 { pt3dadd( -24.7367, -66.5611, -7.81422, 0.56 ) }
    dend_3 { pt3dadd( -24.8804, -68.7216, -7.58075, 0.56 ) }
    dend_3 { pt3dadd( -25.065, -70.1233, -7.44005, 0.56 ) }
    dend_3 { pt3dadd( -25.5349, -72.5111, -7.25496, 0.83 ) }
    dend_3 { pt3dadd( -26.1912, -75.0508, -7.13737, 0.56 ) }
    dend_3 { pt3dadd( -26.8705, -77.5969, -6.8005, 0.83 ) }
    dend_3 { pt3dadd( -27.4412, -80.1515, -6.22314, 0.56 ) }
    dend_3 { pt3dadd( -27.7374, -81.8929, -5.76714, 0.56 ) }
    dend_3 { pt3dadd( -28.0114, -84.3556, -5.11464, 0.28 ) }
    dend_3 { pt3dadd( -28.1005, -85.7253, -4.72702, 0.83 ) }
    dend_3 { pt3dadd( -28.1313, -90.183, -3.5156, 0.28 ) }
    dend_3 { pt3dadd( -28.0975, -91.696, -3.14274, 0.56 ) }
    dend_3 { pt3dadd( -27.9841, -94.1426, -2.52211, 0.28 ) }
    dend_3 { pt3dadd( -27.8725, -98.0743, -1.59211, 0.83 ) }
    dend_3 { pt3dadd( -27.9088, -100.579, -1.03526, 0.56 ) }
    dend_3 { pt3dadd( -27.9494, -103.492, -0.467508, 1.11 ) }
    dend_3 { pt3dadd( -27.8833, -105.48, -0.175474, 0.56 ) }
    dend_3 { pt3dadd( -27.6347, -108.483, 0.27276, 0.56 ) }
    dend_3 { pt3dadd( -27.5168, -109.37, 0.435222, 0.56 ) }
    dend_3 { pt3dadd( -27.1456, -111.907, 0.962856, 0.83 ) }
    dend_3 { pt3dadd( -26.8897, -113.931, 1.44013, 0.28 ) }
    dend_3 { pt3dadd( -26.657, -116.047, 2.06171, 0.83 ) }
    dend_3 { pt3dadd( -26.5973, -117.67, 2.58898, 0.28 ) }
    dend_3 { pt3dadd( -26.6472, -118.664, 2.85218, 0.56 ) }
    dend_3 { pt3dadd( -26.8402, -122.015, 3.58923, 0.83 ) }
    dend_3 { pt3dadd( -27.0298, -124.658, 3.98823, 0.28 ) }
    dend_3 { pt3dadd( -27.2196, -126.096, 4.1199, 0.56 ) }
    dend_3 { pt3dadd( -27.7159, -129.323, 4.25186, 0.83 ) }
    dend_3 { pt3dadd( -28.1619, -132.681, 4.19157, 0.28 ) }
    dend_3 { pt3dadd( -28.3983, -136.168, 3.72442, 0.83 ) }
    dend_3 { pt3dadd( -28.4266, -138.219, 3.16026, 0.28 ) }
    dend_3 { pt3dadd( -28.3696, -139.31, 2.75994, 0.28 ) }
    dend_3 { pt3dadd( -28.2172, -140.428, 2.33856, 0.28 ) }
    dend_3 { pt3dadd( -28.0048, -141.515, 1.98111, 1.11 ) }
    dend_3 { pt3dadd( -27.3637, -144.801, 1.29714, 0.28 ) }
    dend_3 { pt3dadd( -27.2638, -145.432, 1.20669, 0.56 ) }
    dend_3 { pt3dadd( -27.0887, -147.311, 0.995886, 0.56 ) }
    dend_3 { pt3dadd( -26.8244, -150.259, 0.67271, 0.28 ) }
    dend_3 { pt3dadd( -26.5763, -153.163, 0.381207, 0.56 ) }
    dend_3 { pt3dadd( -26.4227, -155.461, 0.266977, 1.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_3 { pt3dadd( -26.3586, -157.451, 0.283195, 0.56 ) }
    dend_3 { pt3dadd( -26.2862, -160.993, 0.354712, 0.28 ) }
    dend_3 { pt3dadd( -26.2543, -162.98, 0.415524, 1.11 ) }
    dend_3 { pt3dadd( -26.1506, -164.63, 0.568573, 0.83 ) }
    dend_3 { pt3dadd( -25.8152, -167.167, 1.01829, 0.28 ) }
    dend_3 { pt3dadd( -25.6836, -168.018, 1.26971, 0.56 ) }
    dend_3 { pt3dadd( -25.5015, -169.323, 1.8724, 0.28 ) }
    dend_3 { pt3dadd( -25.3594, -170.859, 2.80808, 0.28 ) }
    dend_3 { pt3dadd( -25.1893, -173.688, 4.6302, 0.28 ) }
    dend_3 { pt3dadd( -25.1495, -174.546, 5.18787, 0.83 ) }
    dend_3 { pt3dadd( -24.9933, -176.019, 6.13944, 0.28 ) }
    dend_3 { pt3dadd( -24.6907, -178.154, 7.53441, 0.83 ) }
    dend_3 { pt3dadd( -24.4549, -179.918, 8.65577, 0.28 ) }
    dend_3 { pt3dadd( -24.2813, -181.466, 9.54503, 0.28 ) }
    dend_3 { pt3dadd( -23.95, -183.652, 10.6563, 1.39 ) }
    dend_3 { pt3dadd( -23.3732, -186.546, 11.8486, 0.28 ) }
    dend_3 { pt3dadd( -23.1869, -187.506, 12.1274, 0.28 ) }
    dend_3 { pt3dadd( -22.8894, -189.262, 12.4628, 0.56 ) }
    dend_3 { pt3dadd( -22.6402, -191.22, 12.7087, 0.83 ) }
    dend_3 { pt3dadd( -22.5131, -194.128, 13.0425, 0.28 ) }
    dend_3 { pt3dadd( -22.5114, -196.21, 13.2349, 0.56 ) }
    dend_3 { pt3dadd( -22.6694, -198.645, 13.4026, 0.56 ) }
    dend_3 { pt3dadd( -22.8878, -200.547, 13.547, 0.28 ) }
    dend_3 { pt3dadd( -23.1492, -202.282, 13.6044, 1.39 ) }
    dend_3 { pt3dadd( -23.6054, -204.631, 13.5847, 0.28 ) }
    dend_3 { pt3dadd( -23.79, -205.452, 13.5144, 0.56 ) }
    dend_3 { pt3dadd( -24.1852, -207.423, 13.3016, 0.28 ) }
    dend_3 { pt3dadd( -24.3327, -208.821, 13.136, 0.56 ) }
    dend_3 { pt3dadd( -24.4914, -211.483, 12.8216, 0.28 ) }
    dend_3 { pt3dadd( -24.5103, -212.056, 12.757, 0.83 ) }
    dend_3 { pt3dadd( -24.4662, -213.897, 12.6468, 0.28 ) }
    dend_3 { pt3dadd( -24.3594, -215.893, 12.6777, 0.83 ) }
    dend_3 { pt3dadd( -24.0498, -218.984, 12.9594, 0.56 ) }
    dend_3 { pt3dadd( -23.7485, -221.227, 13.2937, 0.28 ) }
    dend_3 { pt3dadd( -23.5932, -222.373, 13.522, 1.11 ) }
    dend_3 { pt3dadd( -23.4097, -225.53, 14.208, 0.28 ) }
    dend_3 { pt3dadd( -23.4141, -226.642, 14.4708, 0.83 ) }
    dend_3 { pt3dadd( -23.4794, -228.934, 14.9876, 0.28 ) }
    dend_3 { pt3dadd( -23.6562, -231.731, 15.5191, 0.28 ) }
    dend_3 { pt3dadd( -23.7268, -232.727, 15.7108, 0.56 ) }
    dend_3 { pt3dadd( -24.2889, -237.204, 16.5002, 0.28 ) }
    dend_3 { pt3dadd( -24.3877, -237.596, 16.5498, 0.56 ) }
    // Section: apic_10, id: apic_10, parent: apic_6 (entry count 42/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( -112.883, -332.882, 48.3952, 0.28 ) }
    apic_10 { pt3dadd( -110.277, -334.932, 49.2612, 0.28 ) }
    apic_10 { pt3dadd( -109.846, -335.272, 49.4045, 0.56 ) }
    apic_10 { pt3dadd( -108.556, -336.286, 49.8331, 0.28 ) }
    apic_10 { pt3dadd( -108.251, -336.527, 49.9347, 0.56 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 47/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( -112.883, -332.882, 48.3952, 0.56 ) }
    apic_7 { pt3dadd( -114.685, -336.226, 48.3879, 0.56 ) }
    apic_7 { pt3dadd( -115.447, -337.546, 48.384, 0.56 ) }
    apic_7 { pt3dadd( -116.309, -338.936, 48.3795, 0.56 ) }
    apic_7 { pt3dadd( -117.431, -340.78, 48.221, 0.56 ) }
    apic_7 { pt3dadd( -118.603, -342.801, 47.9629, 0.28 ) }
    apic_7 { pt3dadd( -120.139, -345.53, 47.5262, 0.56 ) }
    apic_7 { pt3dadd( -120.948, -347.022, 47.1612, 0.28 ) }
    apic_7 { pt3dadd( -121.475, -348.129, 46.8454, 0.83 ) }
    apic_7 { pt3dadd( -122.702, -351.294, 45.9689, 0.56 ) }
    apic_7 { pt3dadd( -123.48, -353.858, 45.1787, 0.56 ) }
    apic_7 { pt3dadd( -123.638, -354.984, 44.8328, 0.28 ) }
    apic_7 { pt3dadd( -123.66, -357.333, 44.0084, 0.28 ) }
    apic_7 { pt3dadd( -123.56, -359.041, 43.3721, 0.56 ) }
    apic_7 { pt3dadd( -123.227, -361.339, 42.5298, 1.39 ) }
    apic_7 { pt3dadd( -122.589, -363.862, 41.582, 0.56 ) }
    apic_7 { pt3dadd( -121.766, -366.734, 40.4032, 0.56 ) }
    apic_7 { pt3dadd( -121.02, -369.057, 39.46, 0.28 ) }
    apic_7 { pt3dadd( -120.668, -370.094, 39.0477, 0.28 ) }
    apic_7 { pt3dadd( -120.293, -371.006, 38.7467, 0.83 ) }
    apic_7 { pt3dadd( -119.378, -373.043, 38.2421, 0.28 ) }
    apic_7 { pt3dadd( -118.238, -375.631, 37.9525, 0.28 ) }
    apic_7 { pt3dadd( -117.441, -377.52, 37.898, 0.28 ) }
    apic_7 { pt3dadd( -116.837, -378.924, 37.963, 1.11 ) }
    apic_7 { pt3dadd( -115.613, -381.979, 38.154, 0.28 ) }
    apic_7 { pt3dadd( -115.139, -383.428, 38.241, 0.83 ) }
    apic_7 { pt3dadd( -114.814, -384.629, 38.3244, 0.28 ) }
    apic_7 { pt3dadd( -114.254, -386.603, 38.441, 0.28 ) }
    apic_7 { pt3dadd( -113.895, -388.272, 38.4978, 0.28 ) }
    apic_7 { pt3dadd( -113.693, -389.445, 38.4811, 2.22 ) }
    apic_7 { pt3dadd( -113.319, -392.704, 38.1111, 0.28 ) }
    apic_7 { pt3dadd( -113.285, -393.338, 38.0376, 0.56 ) }
    // Section: apic_9, id: apic_9, parent: apic_7 (entry count 79/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( -113.285, -393.338, 38.0376, 0.28 ) }
    apic_9 { pt3dadd( -112.68, -396.433, 37.3434, 0.28 ) }
    apic_9 { pt3dadd( -112.487, -397.42, 37.1221, 0.56 ) }
    apic_9 { pt3dadd( -111.956, -400.133, 36.5136, 0.28 ) }
    apic_9 { pt3dadd( -111.881, -400.516, 36.4277, 0.56 ) }
    apic_9 { pt3dadd( -111.258, -403.703, 35.713, 0.28 ) }
    apic_9 { pt3dadd( -111.137, -404.32, 35.5746, 0.56 ) }
    // Section: apic_8, id: apic_8, parent: apic_7 (entry count 86/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( -113.285, -393.338, 38.0376, 0.28 ) }
    apic_8 { pt3dadd( -114.66, -395.121, 37.9771, 0.28 ) }
    apic_8 { pt3dadd( -115.212, -395.82, 37.8962, 0.56 ) }
    apic_8 { pt3dadd( -116.704, -397.525, 37.7658, 0.28 ) }
    apic_8 { pt3dadd( -117.536, -398.474, 37.7118, 0.56 ) }
    apic_8 { pt3dadd( -118.75, -399.905, 37.5658, 0.28 ) }
    apic_8 { pt3dadd( -120.02, -401.868, 37.4349, 0.28 ) }
    apic_8 { pt3dadd( -120.977, -403.72, 37.3743, 1.11 ) }
    apic_8 { pt3dadd( -122.175, -406.919, 37.2418, 0.28 ) }
    apic_8 { pt3dadd( -122.391, -407.745, 37.2044, 0.28 ) }
    apic_8 { pt3dadd( -122.768, -409.612, 37.1201, 0.83 ) }
    apic_8 { pt3dadd( -123.386, -415.153, 36.8913, 0.28 ) }
    apic_8 { pt3dadd( -123.38, -415.788, 36.862, 0.56 ) }
    apic_8 { pt3dadd( -123.029, -419.615, 36.771, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    apic_8 { pt3dadd( -122.873, -420.614, 36.7254, 0.56 ) }
    apic_8 { pt3dadd( -122.646, -422.054, 36.6775, 0.56 ) }
    apic_8 { pt3dadd( -122.302, -424.251, 36.6669, 0.28 ) }
    apic_8 { pt3dadd( -121.889, -427.053, 36.3781, 0.28 ) }
    apic_8 { pt3dadd( -121.754, -427.611, 36.3325, 0.83 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_23, dend_10, dend_9, dend_0, apic_12, apic_1, dend_27, dend_24, dend_18, dend_11, dend_6, dend_1, apic_14, apic_13, apic_5, apic_2, dend_26, dend_25, dend_20, dend_19, dend_15, dend_12, dend_8, dend_7, dend_5, dend_2, apic_11, apic_6, apic_4, apic_3, dend_22, dend_21, dend_17, dend_16, dend_14, dend_13, dend_4, dend_3, apic_10, apic_7, apic_9, apic_8]}
    ModelViewParmSubset_2 = new SectionList()
    apic_0 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    apic_12 ModelViewParmSubset_2.append()
    apic_1 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    apic_14 ModelViewParmSubset_2.append()
    apic_13 ModelViewParmSubset_2.append()
    apic_5 ModelViewParmSubset_2.append()
    apic_2 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    apic_11 ModelViewParmSubset_2.append()
    apic_6 ModelViewParmSubset_2.append()
    apic_4 ModelViewParmSubset_2.append()
    apic_3 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    apic_10 ModelViewParmSubset_2.append()
    apic_7 ModelViewParmSubset_2.append()
    apic_9 ModelViewParmSubset_2.append()
    apic_8 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_23, dend_10, dend_9, dend_0, apic_12, apic_1, dend_27, dend_24, dend_18, dend_11, dend_6, dend_1, apic_14, apic_13, apic_5, apic_2, dend_26, dend_25, dend_20, dend_19, dend_15, dend_12, dend_8, dend_7, dend_5, dend_2, apic_11, apic_6, apic_4, apic_3, dend_22, dend_21, dend_17, dend_16, dend_14, dend_13, dend_4, dend_3, apic_10, apic_7, apic_9, apic_8]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    apic_0 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    apic_12 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    apic_14 ModelViewParmSubset_4.append()
    apic_13 ModelViewParmSubset_4.append()
    apic_5 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    apic_11 ModelViewParmSubset_4.append()
    apic_6 ModelViewParmSubset_4.append()
    apic_4 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    apic_10 ModelViewParmSubset_4.append()
    apic_7 ModelViewParmSubset_4.append()
    apic_9 ModelViewParmSubset_4.append()
    apic_8 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_9 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_27 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_18 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[apic_14]}
    OneSecGrp_SectionRef_17 = new SectionList()
    apic_14 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[apic_13]}
    OneSecGrp_SectionRef_18 = new SectionList()
    apic_13 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[apic_5]}
    OneSecGrp_SectionRef_19 = new SectionList()
    apic_5 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_26 OneSecGrp_SectionRef_21.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_25 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_20 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_19 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_15 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_12 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_5 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_34 = new SectionList()
    apic_3 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_22 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_21 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_14 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_13 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_4 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_3 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[apic_7]}
    OneSecGrp_SectionRef_44 = new SectionList()
    apic_7 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_10 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_1 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_11 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_23 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[apic_12]}
    OneSecGrp_SectionRef_8 = new SectionList()
    apic_12 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_9 = new SectionList()
    apic_1 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_6 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_7 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_24 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_2 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_8 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_20 = new SectionList()
    apic_2 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_33 = new SectionList()
    apic_4 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_16 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_17 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[apic_11]}
    OneSecGrp_SectionRef_31 = new SectionList()
    apic_11 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_6]}
    OneSecGrp_SectionRef_32 = new SectionList()
    apic_6 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[apic_10]}
    OneSecGrp_SectionRef_43 = new SectionList()
    apic_10 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[apic_9]}
    OneSecGrp_SectionRef_45 = new SectionList()
    apic_9 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[apic_8]}
    OneSecGrp_SectionRef_46 = new SectionList()
    apic_8 OneSecGrp_SectionRef_46.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()
    apic_5 apical.append()
    apic_6 apical.append()
    apic_7 apical.append()
    apic_8 apical.append()
    apic_9 apical.append()
    apic_10 apical.append()
    apic_11 apical.append()
    apic_12 apical.append()
    apic_13 apical.append()
    apic_14 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, axon_0, axon_0, apic_12, apic_12, apic_12, apic_1, apic_1, apic_1, apic_1, apic_1, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_11, apic_11, apic_11, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_10, apic_10, apic_10, apic_10, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_9 nseg = 7
    dend_27 nseg = 3
    dend_18 nseg = 3
    apic_14 nseg = 13
    apic_13 nseg = 11
    apic_5 nseg = 15
    dend_26 nseg = 3
    dend_25 nseg = 3
    dend_20 nseg = 3
    dend_19 nseg = 3
    dend_15 nseg = 7
    dend_12 nseg = 7
    dend_5 nseg = 5
    apic_3 nseg = 11
    dend_22 nseg = 3
    dend_21 nseg = 3
    dend_14 nseg = 7
    dend_13 nseg = 3
    dend_4 nseg = 15
    dend_3 nseg = 11
    apic_7 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L23_LBC_fe2122c75c_0_0


