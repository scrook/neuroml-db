// Cell: cNAC187_L5_BP_491c00476b_0_0
/*
{
  "id" : "cNAC187_L5_BP_491c00476b_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 5.92555, 2.40803, 0.83", "-4.27434, 9.02537, 3.09593, 0.83", "-8.7845, 12.3463, 3.77612, 1.11", "-11.4438, 14.3031, 4.12995, 0.83", "-14.0273, 16.1877, 4.44697, 0.83", "-15.5569, 17.2623, 4.62069, 1.11", "-20.3471, 20.6203, 5.17747, 1.11", "-28.9147, 26.3694, 6.16168, 0.83", "-32.0013, 28.3617, 6.48669, 0.83", "-34.4457, 29.8924, 6.68856, 0.83", "-36.8292, 31.4095, 6.86331, 0.83", "-38.7694, 32.6598, 6.95759, 0.55", "-40.2278, 33.5064, 7.05328, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.18455, -5.68197, 0.55", "5.05511, 6.12357, -6.35742, 0.55", "8.383, 6.80747, -7.1006, 0.55", "10.314, 6.98011, -8.08399, 0.83", "13.3703, 7.16384, -9.91069, 0.55", "14.8456, 7.25252, -10.7925, 1.38", "18.4731, 7.47059, -12.9606, 0.55", "20.018, 7.39674, -13.9951, 0.83", "28.01, 6.04252, -19.8075, 0.55", "28.7831, 5.86041, -20.447, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -7.82095, 2.42803, 1.11", "-0.679204, -9.54059, 3.07696, 1.11", "-0.71819, -12.8083, 4.3101, 1.11", "-0.734067, -14.1392, 4.81232, 0.83", "-0.755161, -15.9073, 5.47953, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.22705, -1.26197, 1.11", "0.924201, 9.40721, -1.34029, 1.11", "1.07408, 11.3242, -1.28578, 1.11", "1.33429, 14.4477, -1.07708, 1.38", "1.35256, 14.6215, -1.06287, 1.38", "1.7174, 16.767, -0.892229, 0.83", "2.22454, 19.0285, -0.605672, 0.83", "3.09027, 21.564, -0.00737754, 0.83", "3.56893, 22.5177, 0.31788, 0.83", "4.02869, 23.2029, 0.606803, 1.11", "5.33826, 24.8654, 1.32291, 0.55", "6.86127, 26.5922, 2.17789, 0.83", "8.80214, 28.3546, 3.09625, 0.55", "9.77235, 29.0808, 3.49055, 0.83", "11.1465, 30.0591, 4.1302, 0.55", "12.8708, 31.3019, 5.02285, 0.55", "15.316, 33.1755, 6.42684, 0.55", "18.0139, 35.3218, 7.98032, 0.55", "19.7652, 36.7087, 9.19053, 0.55", "21.9711, 38.4558, 10.9495, 0.55", "22.4374, 38.8038, 11.3542, 0.83", "23.6868, 39.7204, 12.508, 0.55", "24.7205, 40.4332, 13.402, 0.83", "27.1262, 42.4035, 15.5421, 0.55", "27.9874, 43.1291, 16.1383, 0.83", "28.7496, 43.6618, 16.5055, 0.55", "29.4802, 44.1198, 16.7573, 0.83", "31.0628, 44.9659, 17.158, 0.83", "33.1211, 46.1264, 17.52, 0.83", "34.359, 46.9019, 17.6179, 0.55", "35.3066, 47.5772, 17.7001, 0.55", "37.7824, 49.322, 17.8799, 0.83", "39.3683, 50.4428, 17.9352, 0.55", "41.7541, 52.0852, 17.9247, 0.55", "43.9178, 53.4594, 17.8277, 0.55", "45.8403, 54.6222, 17.6888, 0.55", "48.2429, 55.9832, 17.4031, 0.55", "49.6957, 56.6433, 17.1767, 0.55", "50.6589, 57.0138, 16.9029, 0.55", "51.9072, 57.2813, 16.4231, 0.55", "53.7259, 57.3825, 15.5403, 0.55", "54.8451, 57.2996, 14.9391, 0.55", "56.5061, 57.1279, 14.1819, 0.55", "59.7386, 56.8928, 13.0407, 0.55", "62.3197, 56.8189, 12.3352, 0.55", "65.0957, 56.8625, 11.7568, 0.55", "66.9084, 56.9444, 11.5281, 0.55", "71.6974, 57.552, 11.2505, 0.55", "74.5826, 58.1082, 11.2984, 0.55", "76.7923, 58.6487, 11.5304, 0.55", "78.152, 59.1763, 11.726, 0.55", "79.7325, 59.9777, 11.9515, 0.55", "82.3673, 61.5817, 12.122, 0.55", "82.9552, 61.9718, 12.084, 0.55", "84.6161, 63.0156, 11.8662, 0.55", "86.1461, 64.1344, 11.6654, 0.83", "86.9785, 64.7558, 11.5433, 0.55", "88.2191, 65.8292, 11.3168, 0.83", "95.1229, 71.5018, 11.8061, 0.83", "101.082, 78.0883, 11.8433, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-40.2278, 33.5064, 7.05328, 0.55", "-41.8093, 34.9505, 5.92366, 0.55", "-43.5291, 36.5208, 4.69531, 0.55", "-45.6044, 38.4159, 3.21296, 0.55", "-47.3181, 39.9806, 1.98894, 0.83", "-48.7542, 41.2919, 0.96322, 0.55", "-51.4197, 43.7258, -0.940675, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-40.2278, 33.5064, 7.05328, 0.55", "-42.3569, 33.9253, 6.72054, 0.55", "-44.6337, 34.2887, 6.58954, 0.55", "-47.2185, 34.6928, 6.5039, 0.55", "-50.9787, 35.2177, 6.72179, 0.55", "-54.1364, 35.5561, 7.12205, 0.55", "-57.4554, 35.8538, 7.67972, 0.55", "-60.6815, 35.9148, 8.54999, 0.55", "-63.4732, 35.6964, 9.54966, 0.55", "-66.9711, 35.1732, 11.149, 0.55", "-68.5026, 34.8286, 12.0461, 0.55", "-70.1603, 34.4356, 13.0838, 0.55", "-73.0799, 33.5462, 14.7722, 0.55", "-74.6225, 33.0924, 15.4324, 0.55", "-76.2382, 32.5715, 16.1117, 0.55", "-78.1505, 31.9868, 16.7298, 0.55", "-80.2258, 31.3954, 17.3479, 0.55", "-83.1847, 30.5486, 18.1658, 0.55", "-87.1183, 29.6874, 18.9229, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "28.7831, 5.86041, -20.447, 0.55", "34.442, 6.944, -21.6305, 0.55", "37.6811, 7.44844, -22.7874, 0.55", "40.8663, 7.81756, -23.993, 0.55", "43.0359, 7.98782, -24.8268, 0.55", "46.2017, 8.16403, -26.0303, 0.55", "52.7557, 8.4359, -28.7478, 0.55", "60.1784, 8.76389, -32.3329, 0.55", "63.7559, 8.74167, -34.3496, 0.55", "65.6661, 8.7011, -35.5626, 0.55", "67.7598, 8.67751, -36.9775, 0.55", "71.488, 8.53338, -39.5007, 0.55", "72.8349, 8.41045, -40.473, 0.55", "78.5403, 8.08598, -45.0204, 0.55", "82.5784, 7.95833, -48.5361, 0.55", "84.9057, 7.93702, -50.6197, 0.55", "87.2252, 7.89574, -52.6986, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "28.7831, 5.86041, -20.447, 0.83", "30.0925, 6.69568, -20.4888, 0.83", "30.8415, 7.17105, -20.548, 0.55", "31.9444, 7.8907, -20.7329, 0.83", "32.6854, 8.39222, -20.8812, 0.55", "33.7061, 9.11127, -21.0713, 0.83", "34.9318, 10.0014, -21.2542, 0.55", "35.55, 10.4055, -21.3178, 0.55", "36.9793, 11.1504, -21.3521, 0.83", "38.2808, 11.6812, -21.203, 0.55", "39.0076, 11.9734, -21.0478, 0.83", "40.0953, 12.4399, -20.6984, 0.55", "41.6532, 13.1456, -19.9919, 0.55", "43.8196, 14.0211, -18.8912, 0.55", "45.8862, 14.7893, -17.6909, 0.55", "47.5236, 15.3821, -16.7089, 0.55", "50.2224, 16.3722, -15.0759, 0.55", "52.1937, 17.1539, -13.8389, 0.55", "53.3788, 17.7254, -13.0511, 0.55", "55.551, 18.9987, -11.5891, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.755161, -15.9073, 5.47953, 0.83", "-1.08573, -17.7585, 5.43297, 0.83", "-1.4078, -19.5622, 5.3876, 0.83", "-1.76738, -21.576, 5.33694, 0.83", "-1.95516, -22.6276, 5.31049, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.755161, -15.9073, 5.47953, 0.55", "-0.329554, -16.9837, 6.24438, 0.55", "0.0559729, -18.3003, 7.24683, 0.55", "0.28726, -20.023, 8.64448, 0.55", "0.328531, -20.6921, 9.2089, 0.83", "0.277169, -22.3982, 10.8618, 0.55", "0.175095, -23.2784, 11.7363, 0.55", "-0.058557, -24.9899, 13.5152, 0.83", "-0.306068, -26.2602, 14.9248, 0.55", "-0.609511, -27.3068, 16.0745, 0.55", "-1.23307, -29.2883, 18.2158, 0.55", "-1.72916, -30.8677, 19.9028, 0.55", "-2.09886, -32.1342, 21.2729, 0.55", "-2.41471, -33.4796, 22.6793, 0.28", "-2.49733, -34.0406, 23.2402, 0.55", "-2.62399, -35.0768, 24.2129, 0.28", "-2.59991, -36.6966, 25.4559, 0.55", "-3.87727, -42.0705, 29.9563, 0.55", "-5.27793, -47.0348, 34.9178, 0.55", "-6.30172, -51.1192, 40.7793, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-51.4197, 43.7258, -0.940675, 0.55", "-54.6415, 44.0839, 0.609704, 0.55", "-56.0067, 44.1566, 1.42278, 0.83", "-57.6152, 44.156, 2.57743, 0.55", "-58.8503, 44.1488, 3.56972, 0.83", "-62.081, 44.2374, 6.14848, 0.55", "-63.3038, 44.2892, 7.13541, 0.28", "-65.3484, 44.3869, 8.94996, 0.55", "-68.0906, 44.5335, 11.3731, 0.55", "-70.1691, 44.6507, 13.12, 0.55", "-72.9423, 44.8116, 15.3671, 0.28", "-73.6594, 44.8633, 15.8664, 0.55", "-75.1407, 44.9895, 16.8458, 0.28", "-76.1419, 45.1048, 17.4195, 0.55", "-78.1796, 45.3369, 18.4147, 0.28", "-79.3763, 45.4148, 18.9337, 0.55", "-81.495, 45.4068, 19.8579, 0.28", "-82.9165, 45.3956, 20.4288, 0.55", "-91.7533, 44.4657, 27.671, 0.55", "-99.9278, 42.445, 35.4259, 0.55", "-107.846, 39.3948, 43.0715, 0.55", "-115.749, 35.1384, 50.0628, 0.55", "-122.439, 31.1802, 58.3946, 0.55", "-129.927, 27.6866, 66.2609, 0.55", "-137.491, 25.9281, 74.6797, 0.55", "-145.049, 23.3255, 82.8573, 0.55", "-152.381, 21.4064, 91.441, 0.55", "-159.214, 19.2824, 100.376, 0.55", "-165.008, 15.863, 109.598, 0.55", "-170.873, 13.4324, 119.118, 0.55", "-176.915, 9.96243, 128.159, 0.55", "-181.683, 5.93754, 137.696, 0.55", "-184.569, 2.48954, 148.195, 0.55", "-187.434, -2.88007, 157.768, 0.55", "-188.685, -8.54284, 167.505, 0.55", "-190.531, -13.7385, 177.432, 0.55", "-193.566, -18.1038, 187.503, 0.55", "-198.86, -20.6441, 197.322, 0.55", "-203.231, -24.4356, 207.152, 0.55", "-205.451, -26.6195, 218.173, 0.55", "-209.429, -27.8881, 228.849, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-51.4197, 43.7258, -0.940675, 0.55", "-52.264, 44.7167, -2.54084, 0.55", "-52.7754, 45.78, -4.21838, 0.55", "-53.1954, 47.0004, -5.93634, 0.55", "-53.4583, 47.7647, -7.0121, 0.55", "-53.938, 49.1587, -8.97442, 0.83", "-54.2889, 50.1786, -10.4101, 0.55", "-54.5627, 51.5933, -12.4759, 0.83", "-54.547, 52.4702, -13.5694, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-87.1183, 29.6874, 18.9229, 0.28", "-87.4865, 28.9732, 18.8933, 0.28", "-87.6647, 28.6615, 18.8549, 0.28", "-87.8956, 28.2196, 18.7843, 0.55", "-88.0849, 27.8322, 18.7254, 0.28", "-88.3635, 27.2434, 18.6427, 0.55", "-89.1342, 25.5188, 18.427, 0.28", "-89.3853, 24.9081, 18.3032, 0.55", "-89.7661, 23.9634, 18.0814, 0.28", "-89.9847, 23.3953, 17.9237, 0.55", "-90.136, 23.0024, 17.8059, 0.28", "-90.3083, 22.552, 17.6742, 0.55", "-90.8231, 21.0567, 17.2695, 0.28", "-90.9861, 20.6019, 17.1317, 0.55", "-91.2764, 19.8947, 16.8519, 0.28", "-91.5204, 19.434, 16.6361, 0.28", "-91.7428, 19.1222, 16.4817, 0.55", "-92.5228, 18.2441, 16.0725, 0.28", "-92.8866, 17.8875, 15.9141, 0.55", "-93.7797, 17.0663, 15.5073, 0.28", "-94.6763, 16.3328, 15.1317, 0.28", "-95.6548, 15.6232, 14.7414, 0.28", "-96.1045, 15.3522, 14.5924, 0.55", "-98.2097, 12.5705, 13.6898, 0.55", "-100.543, 9.83432, 13.4695, 0.55", "-102.847, 7.16351, 12.6928, 0.55", "-105.229, 4.66558, 11.5825, 0.55", "-107.662, 2.37592, 10.1329, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-87.1183, 29.6874, 18.9229, 0.55", "-87.8086, 29.6226, 19.0289, 0.55", "-89.7547, 29.4758, 19.5793, 0.55", "-90.4852, 29.4081, 19.8276, 0.55", "-92.2013, 29.203, 20.4448, 0.55", "-94.8421, 28.896, 21.2627, 0.55", "-96.2159, 28.7732, 21.6577, 0.28", "-98.3525, 28.5325, 22.2368, 0.55", "-99.9385, 28.3151, 22.6142, 0.55", "-100.608, 28.2193, 22.7756, 0.28", "-104.624, 27.642, 23.7387, 0.55", "-106.499, 27.2747, 24.0856, 0.28", "-109.029, 26.7501, 24.4064, 0.28", "-111.211, 26.3111, 24.5509, 0.55", "-119.758, 26.0295, 26.7979, 0.55", "-127.998, 25.671, 29.98, 0.55", "-135.726, 24.5971, 34.1195, 0.55", "-143.265, 25.0138, 38.7187, 0.55", "-149.682, 25.3833, 44.7895, 0.55", "-154.83, 26.4009, 51.9028, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "87.2252, 7.89574, -52.6986, 0.55", "91.6008, 9.27145, -56.1601, 0.55", "92.9738, 9.666, -57.3504, 0.55", "94.6856, 10.1031, -58.8299, 0.55", "97.783, 10.9046, -61.7009, 0.55", "100.997, 11.6301, -64.8009, 0.55", "102.553, 11.8577, -66.2995, 0.83", "103.82, 11.9785, -67.6473, 0.55", "104.754, 12.0108, -68.7683, 0.83", "106.958, 11.8072, -71.6924, 0.55", "108.75, 11.4701, -74.1461, 0.55", "110.812, 11.0474, -76.8607, 0.55", "113.115, 10.654, -79.9211, 0.55", "114.653, 10.3605, -82.0225, 0.55", "116.387, 10.035, -84.4542, 0.55", "117.888, 9.82971, -86.6592, 0.55", "118.841, 9.81501, -88.166, 0.55", "120.007, 9.93161, -91.1497, 0.55", "120.625, 9.96488, -93.0201, 0.55", "121.105, 9.95249, -95.506, 0.55", "121.706, 9.84109, -99.7189, 0.55", "121.82, 9.78594, -100.674, 0.28", "123.315, 8.98268, -112.311, 0.28", "123.853, 8.75582, -115.728, 0.83", "126.029, 7.72103, -127.897, 0.83", "127.156, 7.02053, -133.592, 0.83", "127.714, 6.6393, -135.919, 0.55", "128.383, 6.24295, -138.195, 0.55", "130.365, 5.32466, -142.464, 0.55", "132.541, 4.42784, -146.243, 0.28", "133.244, 4.14295, -146.521, 0.55", "134.824, 3.51672, -146.532, 0.28", "135.815, 3.17004, -146.38, 0.55", "136.849, 2.77906, -146.135, 0.28", "138.1, 2.35857, -145.772, 0.55", "139.98, 1.86031, -145.413, 0.28", "141.481, 1.42549, -145.182, 0.55", "143.153, 1.07363, -145.041, 0.28", "145.422, 0.639574, -145.049, 0.55", "147.969, 0.236682, -145.201, 0.55", "150.208, -0.0651439, -145.479, 0.28", "153.306, -0.424598, -146.031, 0.55", "158.665, -0.801286, -147.53, 0.55", "161.041, -0.799115, -148.458, 0.55", "162.064, -0.738101, -148.958, 0.83", "164.01, -0.57609, -150.088, 0.55", "165.365, -0.396465, -150.947, 0.83", "169.023, 0.184736, -153.283, 0.55", "171.235, 0.40581, -154.793, 0.28", "172.162, 0.424784, -155.334, 0.55", "174.677, 0.201226, -156.574, 0.28", "175.55, 0.0343441, -156.963, 0.55", "177.34, -0.470758, -157.501, 0.28", "179.148, -1.21622, -157.755, 0.55", "182.794, -3.03569, -157.639, 0.28", "184.47, -3.98133, -157.412, 0.55", "186.947, -5.5537, -156.962, 0.28", "190.082, -7.54966, -156.273, 0.55", "192.354, -8.96931, -155.732, 0.55", "196.309, -11.3192, -154.704, 0.28", "197.938, -12.1845, -154.407, 0.55", "200.759, -13.4613, -154.188, 0.28", "203.593, -14.4873, -154.133, 0.55", "205.165, -14.8398, -154.293, 0.28", "206.607, -14.9555, -154.517, 0.55", "210.698, -14.9838, -155.49, 0.28", "213.645, -14.8064, -156.198, 0.28", "216.229, -14.4721, -156.818, 0.55", "219.089, -14.0039, -157.632, 0.28", "219.815, -13.8488, -157.805, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "87.2252, 7.89574, -52.6986, 0.55", "87.4938, 6.43662, -54.3017, 0.55", "87.5856, 5.18731, -55.5461, 0.28", "87.6703, 4.01357, -56.5685, 0.55", "88.0027, 1.51891, -58.7702, 0.28", "88.0181, 1.36884, -58.9345, 0.55", "88.1243, 0.600062, -59.8756, 0.28", "88.1353, 0.00239813, -60.7772, 0.55", "88.0966, -0.593385, -61.8112, 0.28", "88.0088, -1.38981, -63.2728, 0.55", "87.7875, -3.40303, -66.8886, 0.55", "87.5544, -5.22364, -70.2291, 0.55", "87.3469, -6.67621, -72.9011, 0.55", "87.1053, -8.10976, -75.4892, 0.55", "87.0415, -8.48564, -76.1353, 0.28", "86.9905, -8.90039, -76.7791, 0.55", "86.9959, -9.49976, -77.602, 0.28", "87.153, -10.6195, -78.9557, 0.55", "87.6943, -12.891, -81.1353, 0.55", "88.0004, -14.1459, -82.1792, 0.28", "88.2242, -15.3977, -83.3001, 0.55", "88.3836, -17.1177, -84.9395, 0.28", "88.4039, -18.4863, -86.2962, 0.55", "88.327, -20.5215, -88.3243, 0.28", "88.2677, -22.6487, -90.3448, 0.55", "88.131, -25.7245, -93.3085, 0.28", "88.0141, -27.3585, -94.8927, 0.55", "87.8603, -29.0148, -96.5592, 0.28", "87.704, -30.4442, -98.136, 0.28", "87.5829, -32.1923, -100.304, 0.55", "87.617, -33.839, -102.269, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "55.551, 18.9987, -11.5891, 0.55", "56.4293, 18.995, -11.2922, 0.55", "57.0763, 18.9529, -11.1297, 0.55", "58.5002, 18.826, -10.8425, 0.55", "59.1463, 18.7417, -10.7657, 0.55", "59.8545, 18.6542, -10.7203, 0.55", "60.8113, 18.5347, -10.7283, 0.55", "61.8301, 18.3595, -10.8217, 0.55", "62.3706, 18.2457, -10.927, 0.55", "63.4825, 17.9764, -11.2816, 0.55", "63.9959, 17.8521, -11.461, 0.55", "65.2023, 17.5325, -11.9048, 0.55", "66.0194, 17.2887, -12.1913, 0.55", "66.6185, 17.1127, -12.3759, 0.83", "67.5754, 16.8025, -12.6522, 0.55", "68.5104, 16.4671, -12.8779, 0.83", "69.302, 16.1569, -13.0341, 0.55", "70.0031, 15.8994, -13.1411, 0.55", "70.3995, 15.7742, -13.1855, 0.83", "71.3206, 15.4969, -13.2436, 0.28", "71.7758, 15.3837, -13.2494, 0.28", "72.2187, 15.2427, -13.27, 0.28", "72.6975, 15.1014, -13.2975, 0.28", "73.4647, 14.8843, -13.36, 0.28", "73.7725, 14.8028, -13.3773, 0.55", "74.5023, 14.6332, -13.352, 0.55", "75.8102, 14.3331, -13.2396, 0.55", "76.1709, 14.2454, -13.1908, 0.55", "76.4921, 14.1608, -13.1313, 0.83", "77.1843, 14.0119, -12.9525, 0.55", "77.7851, 13.886, -12.7879, 0.55", "78.3526, 13.7701, -12.6304, 0.55", "78.7933, 13.6698, -12.5187, 0.55", "79.496, 13.4561, -12.363, 0.55", "80.3293, 13.124, -12.2061, 0.55", "81.6345, 12.449, -12.0147, 0.55", "82.3564, 11.9692, -11.9279, 0.55", "82.9863, 11.4469, -11.857, 0.28", "83.1756, 11.2506, -11.8364, 0.55", "83.5973, 10.6962, -11.7816, 0.28", "83.963, 10.0719, -11.7151, 0.55", "84.3068, 9.3037, -11.5773, 0.55", "84.5364, 8.80584, -11.4615, 0.28", "84.6196, 8.63254, -11.4114, 0.55", "84.8344, 8.20431, -11.2799, 0.28", "85.1262, 7.65184, -11.0935, 0.55", "85.8828, 6.3337, -10.6043, 0.55", "86.2756, 5.6743, -10.3417, 0.55", "86.6398, 5.07187, -10.0947, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "55.551, 18.9987, -11.5891, 0.55", "56.6928, 19.4231, -10.5918, 0.55", "57.0614, 19.5535, -10.2932, 0.55", "58.4465, 19.9601, -9.22962, 0.55", "59.9881, 20.4494, -8.02446, 0.55", "61.9581, 21.0831, -6.42332, 0.55", "62.5026, 21.258, -5.98506, 0.55", "63.4833, 21.5317, -5.20108, 0.55", "64.5614, 21.8484, -4.3898, 0.55", "65.819, 22.24, -3.51329, 0.55", "67.0024, 22.6267, -2.68635, 0.55", "67.6531, 22.8623, -2.2705, 0.55", "68.4155, 23.1607, -1.7882, 0.55", "69.3587, 23.5536, -1.21505, 0.83", "70.9226, 24.1603, -0.445504, 0.55", "71.9666, 24.5114, 0.0207405, 0.83", "73.4263, 24.9236, 0.630195, 0.55", "73.877, 25.025, 0.815652, 0.55", "75.2832, 25.2667, 1.37519, 0.55", "77.8207, 25.5326, 2.30472, 0.55", "79.6904, 25.6202, 2.96293, 0.55", "81.1713, 25.631, 3.53202, 0.55", "82.6809, 25.5767, 4.17919, 0.55", "82.9988, 25.5575, 4.31859, 0.28", "83.6454, 25.4937, 4.60474, 0.83", "86.3012, 25.198, 5.80259, 0.55", "88.1629, 24.9862, 6.60427, 0.55", "89.6842, 24.8564, 7.29299, 0.55", "90.5923, 24.778, 7.71372, 0.83", "91.3065, 24.7263, 8.04423, 0.28", "91.9549, 24.6793, 8.3377, 0.55", "96.8477, 25.6259, 11.1148, 0.55", "102.2, 25.6005, 13.1089, 0.55", "107.457, 26.2658, 15.2311, 0.55", "112.067, 26.3661, 18.6007, 0.55", "116.361, 25.7777, 22.3118, 0.55", "121.277, 24.1691, 24.6639, 0.55", "126.234, 21.8907, 26.1679, 0.55", "131.658, 20.5127, 27.2037, 0.55", "136.991, 19.1205, 28.6206, 0.55", "142.543, 18.2482, 29.5931, 0.55", "147.986, 17.7412, 31.2343, 0.55", "153.107, 16.3712, 33.3043, 0.55", "158.253, 16.0406, 35.7541, 0.55", "163.046, 16.6174, 38.8035, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-1.95516, -22.6276, 5.31049, 1.38", "0.435923, -25.6545, 3.99157, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-1.95516, -22.6276, 5.31049, 0.55", "-3.26342, -24.3658, 4.87213, 0.55", "-4.70145, -26.5837, 4.40287, 0.55", "-5.83397, -28.0594, 4.03841, 0.55", "-6.72395, -29.2991, 3.5746, 0.55", "-8.5843, -31.8804, 2.35013, 0.55", "-9.87395, -33.6097, 1.44487, 0.55", "-10.999, -35.1615, 0.589114, 0.55", "-13.8967, -38.9485, -1.61593, 0.55", "-17.3972, -43.3405, -4.23977, 0.55", "-20.0868, -46.673, -6.3316, 0.55", "-21.7893, -48.8591, -7.69385, 0.55", "-23.7422, -51.4757, -9.24432, 0.55", "-26.2235, -55.205, -11.1515, 0.55", "-27.6772, -57.8288, -12.2086, 0.55", "-29.5339, -61.5762, -13.2964, 0.55", "-31.0277, -65.0698, -14.0707, 0.55", "-32.5259, -69.4083, -14.7842, 0.55", "-33.9391, -74.48, -15.3387, 0.55", "-34.6927, -78.3368, -15.5221, 0.55", "-34.9925, -80.2458, -15.4404, 0.55", "-35.5354, -84.7105, -14.9036, 0.55", "-36.0152, -88.8806, -14.2651, 0.55", "-36.4144, -93.0601, -13.2319, 0.55", "-36.7211, -95.454, -12.5213, 0.55", "-37.7364, -102.843, -10.0396, 0.55", "-37.8186, -103.387, -9.84901, 0.55", "-38.2939, -106.712, -8.57582, 0.55", "-39.4737, -112.664, -6.27522, 0.55", "-39.8312, -114.66, -5.62679, 0.55", "-40.2475, -117.803, -5.1685, 0.55", "-40.2647, -118.98, -5.24583, 0.55", "-39.8523, -122.984, -6.15844, 0.55", "-39.2279, -125.592, -7.21651, 0.55", "-37.7894, -129.773, -9.66242, 0.55", "-35.6768, -134.894, -12.9482, 0.28", "-35.0682, -136.165, -13.9148, 0.55", "-34.0729, -138.098, -15.538, 0.28", "-33.9194, -138.391, -15.7982, 0.55", "-33.1417, -139.985, -17.0985, 0.28", "-32.9613, -140.524, -17.4372, 0.55", "-32.2969, -143.306, -18.7107, 0.28", "-32.1105, -144.253, -19.1472, 0.55", "-31.6657, -146.99, -20.2746, 0.28", "-31.5233, -147.851, -20.625, 0.55", "-31.0743, -150.822, -21.7975, 0.28", "-30.8582, -152.189, -22.3407, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-6.30172, -51.1192, 40.7793, 0.55", "-9.02244, -56.4544, 46.7738, 0.55", "-12.4599, -60.9865, 53.1156, 0.55", "-15.7864, -66.0703, 59.0371, 0.55", "-19.2817, -71.1625, 64.8491, 0.55", "-22.0834, -77.2585, 69.9266, 0.55", "-24.7111, -83.1115, 75.4038, 0.55", "-26.7797, -90.3044, 79.0552, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-6.30172, -51.1192, 40.7793, 0.55", "-5.4049, -59.1456, 49.2234, 0.55", "-3.83777, -68.4033, 56.0064, 0.55", "-4.18152, -77.8778, 62.642, 0.55", "-5.10825, -87.9548, 68.1479, 0.55", "-5.56784, -97.9532, 73.8627, 0.55", "-6.00901, -107.533, 80.3229, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-54.547, 52.4702, -13.5694, 0.83", "-54.0044, 53.8918, -15.4606, 0.83", "-52.7933, 57.3577, -19.7029, 0.55", "-52.2655, 58.8618, -21.3855, 0.83", "-51.6914, 60.4783, -23.0563, 0.55", "-51.0958, 62.1591, -24.4992, 0.55", "-50.7863, 63.0107, -25.0984, 0.28", "-50.6178, 63.5904, -25.3319, 0.55", "-49.9803, 65.5469, -25.6532, 0.28", "-49.684, 66.3839, -25.745, 0.55", "-48.6891, 69.3065, -25.9329, 0.28", "-47.9631, 71.6359, -25.9944, 0.55", "-47.013, 75.3044, -25.9625, 0.28", "-46.2963, 78.5478, -25.8644, 0.28", "-46.0051, 80.3791, -25.7685, 0.55", "-45.7996, 82.5672, -25.6496, 0.28", "-45.7725, 83.6207, -25.5753, 0.55", "-45.8514, 86.108, -25.5133, 0.28", "-46.0197, 87.7736, -25.5585, 0.28", "-46.222, 89.4104, -25.6534, 0.28", "-46.2953, 90.2712, -25.708, 0.55", "-46.4033, 93.7275, -26.0193, 0.28", "-46.3934, 97.8014, -26.4705, 0.55", "-46.3688, 99.2058, -26.6327, 0.55", "-46.3665, 100.618, -26.7628, 0.55", "-46.5275, 103.634, -27.0858, 0.55", "-46.7655, 105.624, -27.3386, 0.28", "-46.9452, 106.387, -27.4423, 0.55", "-47.5774, 108.469, -27.6741, 0.28", "-48.3439, 110.689, -28.0076, 0.55", "-49.7471, 113.905, -28.6047, 0.28", "-50.4787, 115.259, -28.8937, 0.28", "-51.7398, 117.154, -29.4772, 0.55", "-53.1857, 119.136, -30.1849, 0.28", "-53.4587, 119.451, -30.3101, 0.55", "-54.467, 120.465, -30.746, 0.28", "-57.9872, 123.742, -32.1584, 0.55", "-62.9826, 127.826, -34.2999, 0.28", "-63.9202, 128.516, -34.7529, 0.55", "-66.5162, 130.306, -36.0369, 0.28", "-67.6107, 131.04, -36.6072, 0.28", "-68.569, 131.65, -37.1505, 0.55", "-71.4501, 133.085, -38.9495, 0.28", "-73.521, 133.9, -40.1212, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-54.547, 52.4702, -13.5694, 0.55", "-54.6357, 53.9746, -13.5782, 0.55", "-54.7234, 54.8533, -13.5022, 0.28", "-54.9385, 55.4704, -13.3075, 0.55", "-55.4324, 56.8874, -12.8603, 0.28", "-55.7793, 57.8828, -12.5461, 0.55", "-56.4188, 59.7177, -11.967, 0.28", "-56.8922, 60.6851, -11.4916, 0.55", "-58.8807, 62.9261, -9.58883, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-107.662, 2.37592, 10.1329, 0.55", "-112.924, -5.15259, 8.77511, 0.55", "-116.64, -13.4068, 7.0071, 0.55", "-119.534, -21.383, 3.2757, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-107.662, 2.37592, 10.1329, 0.55", "-113.765, -4.81104, 6.39574, 0.55", "-118.853, -12.0896, 1.51517, 0.55", "-123.523, -19.497, -3.56472, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-154.83, 26.4009, 51.9028, 0.55", "-164.874, 27.5044, 58.9378, 0.55", "-175.664, 29.6168, 64.4512, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-154.83, 26.4009, 51.9028, 0.55", "-163.301, 25.4732, 55.3336, 0.55", "-171.898, 25.9686, 58.547, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "87.617, -33.839, -102.269, 0.28", "94.2973, -37.0214, -115.975, 0.28", "94.9651, -37.4085, -117.206, 0.55", "96.0925, -38.0621, -119.285, 0.28", "97.0417, -38.6125, -121.036, 0.28", "98.2983, -39.341, -123.352, 0.55", "99.9551, -40.3015, -126.407, 0.55", "102.287, -42.2317, -128.178, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "87.617, -33.839, -102.269, 0.55", "88.1862, -34.8305, -104.097, 0.55", "88.3235, -35.2483, -104.912, 0.28", "88.5023, -35.9428, -106.332, 0.55", "88.8961, -37.4726, -109.46, 0.28", "89.169, -38.5328, -111.628, 0.55", "89.6314, -40.329, -115.301, 0.28", "90.1188, -42.4115, -120.059, 0.28", "90.2768, -43.3419, -122.279, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "86.6398, 5.07187, -10.0947, 0.28", "88.9503, 2.63571, -8.03385, 0.28", "91.8198, -0.474796, -4.98291, 0.28", "93.6181, -2.45951, -2.89938, 0.55", "94.6995, -3.51943, -1.66319, 0.28", "95.2726, -4.08805, -0.990773, 0.28", "98.1239, -6.91644, 2.26868, 0.55", "98.7666, -7.50135, 3.11252, 0.28", "100.249, -9.00495, 5.47155, 0.55", "101.523, -10.3454, 7.43433, 0.28", "102.647, -11.4386, 9.00858, 0.55", "103.98, -12.794, 10.7641, 0.55", "106.155, -15.0899, 13.1571, 0.55", "106.682, -15.6644, 13.7152, 0.55", "108.57, -17.8298, 15.7561, 0.28", "109.302, -18.7301, 16.5536, 0.55", "110.331, -19.8729, 17.5784, 0.28", "111.796, -21.5316, 18.9349, 0.55", "114.295, -24.311, 20.6021, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "86.6398, 5.07187, -10.0947, 0.55", "83.2292, 4.97459, -10.635, 0.55", "80.4595, 4.89559, -11.0737, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "0.435923, -25.6545, 3.99157, 0.83", "0.507136, -25.8289, 3.96122, 0.83", "1.38708, -27.3875, 3.74956, 0.83", "2.14236, -28.7511, 3.47221, 0.55", "2.74491, -29.8389, 3.25094, 0.55", "4.02565, -32.1511, 2.78063, 0.83", "5.5791, -34.9557, 2.21017, 0.55", "6.43647, -36.4263, 1.93426, 0.83", "7.99307, -38.7775, 1.57068, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "0.435923, -25.6545, 3.99157, 0.55", "-1.21519, -26.512, 1.34425, 0.55", "-2.98746, -27.4324, -1.49733, 0.55", "-5.07963, -28.5189, -4.85184, 0.55", "-7.62021, -29.8383, -8.9253, 0.55", "-9.0619, -30.587, -11.2368, 0.55", "-9.35152, -30.7374, -11.7012, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-6.00901, -107.533, 80.3229, 0.55", "-5.60183, -115.703, 86.7061, 0.55", "-3.61624, -124.273, 92.1279, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-6.00901, -107.533, 80.3229, 0.55", "-6.06575, -116.181, 85.7616, 0.55", "-6.68966, -124.72, 91.3717, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-58.8807, 62.9261, -9.58883, 0.28", "-60.202, 64.283, -8.04756, 0.28", "-60.7073, 64.7884, -7.39154, 0.55", "-62.1557, 66.2469, -5.45146, 0.28", "-62.8671, 66.9807, -4.58157, 0.55", "-64.8029, 68.9786, -2.31436, 0.28", "-66.7703, 71.0092, -0.0100367, 0.55", "-70.0469, 74.1721, 3.81464, 0.28", "-70.7439, 74.8518, 4.63071, 0.55", "-72.2612, 76.4608, 6.37388, 0.28", "-72.849, 77.1301, 7.06384, 0.55", "-79.6296, 81.6156, 12.637, 0.55", "-86.7625, 87.4023, 16.0461, 0.55", "-92.9966, 93.2175, 20.8513, 0.55", "-97.8332, 100.083, 25.7197, 0.55", "-103.646, 106.742, 29.7907, 0.55", "-110.488, 111.942, 34.5515, 0.55", "-116.902, 116.228, 40.6968, 0.55", "-122.627, 119.369, 48.1393, 0.55", "-128.295, 123.077, 55.3349, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-58.8807, 62.9261, -9.58883, 0.55", "-62.1688, 61.978, -8.97229, 0.55", "-63.8794, 61.4349, -8.66316, 0.28", "-65.1524, 61.0307, -8.43311, 0.55", "-66.2133, 60.6939, -8.24137, 0.28", "-66.9565, 60.4579, -8.10708, 0.55", "-69.0056, 59.8074, -7.73675, 0.28", "-70.3471, 59.2956, -7.66746, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-119.534, -21.383, 3.2757, 0.55", "-123.116, -30.2126, 2.6302, 0.55", "-126.404, -39.15, 3.06991, 0.55", "-129.089, -48.1913, 1.70115, 0.55", "-132.672, -57.0383, 1.70487, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-119.534, -21.383, 3.2757, 0.55", "-124.977, -26.5947, -4.16717, 0.55", "-130.127, -30.4375, -12.6649, 0.55", "-135.942, -35.4899, -19.9482, 0.55", "-143.84, -39.0999, -26.1518, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-123.523, -19.497, -3.56472, 0.55", "-128.102, -22.0372, -9.5004, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-123.523, -19.497, -3.56472, 0.55", "-127.036, -28.9307, -4.37725, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "102.287, -42.2317, -128.178, 0.28", "105.881, -43.1906, -130.744, 0.28", "107.55, -43.636, -131.936, 0.55", "110.734, -44.4853, -134.209, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "102.287, -42.2317, -128.178, 0.55", "101.882, -43.197, -129.287, 0.55", "101.073, -45.1278, -131.506, 0.28", "100.809, -45.7568, -132.229, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "90.2768, -43.3419, -122.279, 0.28", "90.8577, -45.116, -127.237, 0.28", "91.1454, -45.9944, -129.692, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "90.2768, -43.3419, -122.279, 0.55", "88.0567, -43.5185, -121.834, 0.55", "81.8662, -44.0111, -120.59, 0.28", "80.3956, -44.1282, -120.295, 0.55", "76.3727, -44.4483, -119.487, 0.28", "73.7796, -44.6546, -118.967, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "7.99307, -38.7775, 1.57068, 0.83", "8.02026, -39.1123, 1.51085, 0.83", "8.44374, -43.5005, 0.857467, 0.83", "8.45722, -46.7861, 0.585318, 0.83", "8.23052, -49.9632, 0.665498, 0.83", "7.76641, -54.1985, 1.10663, 0.83", "7.08716, -59.08, 1.80274, 0.83", "6.34892, -64.543, 2.88117, 0.83", "5.62974, -69.8598, 4.18611, 0.83", "4.30291, -76.3632, 5.6238, 0.83", "3.52286, -79.3373, 6.10326, 0.83", "2.92912, -81.5678, 6.31428, 0.83", "1.69475, -85.8396, 6.62159, 0.83", "0.687964, -89.6611, 6.67302, 0.83", "-0.97381, -97.7927, 5.81878, 0.83", "-1.81879, -102.219, 4.73239, 0.83", "-2.5958, -106.284, 3.41141, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "7.99307, -38.7775, 1.57068, 0.55", "6.64205, -41.3246, 1.78809, 0.55", "5.64464, -43.1726, 2.09834, 0.55", "5.05111, -44.3563, 2.4226, 0.55", "4.23281, -46.2142, 3.11724, 0.55", "2.73582, -49.8988, 4.73972, 0.55", "1.60445, -52.6874, 6.30012, 0.55", "0.720553, -54.9235, 7.80754, 0.55", "-0.217369, -57.1796, 9.50714, 0.55", "-1.00353, -59.05, 11.0234, 0.28", "-1.65006, -60.5778, 12.5055, 0.55", "-2.86158, -63.3554, 15.6296, 0.55", "-3.68859, -65.0534, 17.7516, 0.55", "-4.16414, -66.004, 18.931, 0.55", "-4.79174, -67.122, 20.2632, 0.83", "-6.70477, -70.4352, 23.9741, 0.28", "-7.33937, -71.5317, 25.1694, 0.55", "-8.42346, -73.5145, 27.2513, 0.28", "-8.75306, -74.1258, 27.9417, 0.55", "-9.44227, -75.5658, 29.5248, 0.28", "-9.83359, -76.3848, 30.359, 0.55", "-11.3505, -79.0397, 32.3072, 0.55", "-13.2311, -86.3005, 40.4566, 0.55", "-14.5208, -93.243, 49.0208, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-9.35152, -30.7374, -11.7012, 0.55", "-11.3954, -31.6656, -15.0729, 0.55", "-12.0034, -31.875, -16.0319, 0.55", "-13.5519, -32.3986, -18.3652, 0.55", "-16.9811, -33.4111, -23.2932, 0.28", "-17.5015, -33.546, -23.987, 0.55", "-19.7076, -34.178, -26.7763, 0.55", "-22.8245, -35.0349, -30.2482, 0.55", "-24.0225, -35.3194, -31.5441, 0.28", "-25.0839, -35.4867, -32.6127, 0.28", "-26.9652, -35.7248, -34.1639, 0.55", "-29.2278, -35.9045, -36.1511, 0.28", "-31.2898, -35.8814, -38.0421, 0.55", "-32.8813, -35.7201, -39.473, 0.55", "-33.9599, -35.511, -40.4988, 0.55", "-37.0898, -34.7427, -43.6234, 0.55", "-40.3826, -33.683, -46.8459, 0.55", "-41.7461, -33.1606, -48.1403, 0.28", "-43.0367, -32.6879, -49.397, 0.55", "-45.679, -31.9165, -51.9122, 0.28", "-46.5731, -31.6849, -52.7479, 0.83", "-48.2738, -31.2272, -54.1811, 0.28", "-49.5514, -30.992, -55.0348, 0.55", "-51.4222, -30.7165, -56.2334, 0.28", "-52.1728, -30.5963, -56.685, 0.55", "-53.5848, -30.3981, -57.4431, 0.55", "-55.7199, -29.8829, -58.5082, 0.55", "-57.126, -29.4581, -59.1245, 0.28", "-58.2681, -28.9746, -59.5312, 0.55", "-59.5986, -28.2429, -60.0196, 0.28", "-59.8144, -28.1054, -60.108, 0.55", "-61.7268, -26.7997, -61.2863, 0.28", "-63.0784, -25.8267, -62.3035, 0.55", "-64.7919, -24.4229, -63.9237, 0.83", "-66.1607, -23.2347, -65.4441, 0.28", "-66.5053, -22.9316, -65.8789, 0.55", "-69.1134, -20.6586, -69.3958, 0.28", "-69.5581, -20.2713, -70.0677, 0.55", "-70.8364, -19.0208, -72.1592, 0.28", "-71.1657, -18.6992, -72.7023, 0.55", "-72.0277, -17.8609, -74.0189, 0.28", "-72.6492, -17.257, -74.901, 0.55", "-74.0997, -15.9017, -76.6013, 0.28", "-74.9781, -15.1686, -77.5687, 0.55", "-76.8957, -13.7387, -79.5093, 0.28", "-77.4733, -13.3484, -80.0761, 0.55", "-78.3964, -12.8149, -80.9247, 0.28", "-79.1886, -12.3643, -81.5994, 0.55", "-80.862, -11.4502, -82.887, 0.28", "-81.3714, -11.1868, -83.2561, 0.55", "-85.1912, -9.14568, -85.8027, 0.28", "-86.5474, -8.32645, -86.5677, 0.55", "-88.9881, -6.73958, -87.7642, 0.28", "-90.0907, -5.97833, -88.2672, 0.55", "-92.6508, -4.2485, -89.2626, 0.28", "-93.6035, -3.65547, -89.5832, 0.55", "-97.1195, -1.81919, -90.5413, 0.28", "-98.6079, -1.23577, -90.9238, 0.55", "-100.773, -0.744164, -91.4387, 0.55", "-102.12, -0.522467, -91.7217, 0.55", "-104.906, -0.134397, -92.0852, 0.28", "-107.674, 0.224493, -92.2705, 0.28", "-109.989, 0.532423, -92.3585, 0.55", "-112.829, 1.1413, -92.1634, 0.28", "-114.234, 1.60793, -91.8827, 0.55", "-117.544, 3.22383, -90.8894, 0.28", "-119.228, 4.37705, -89.972, 0.55", "-120.298, 5.28793, -89.1357, 0.28", "-121.491, 6.31657, -87.8877, 0.55", "-122.968, 7.65897, -86.1311, 0.28", "-123.534, 8.13541, -85.4723, 0.55", "-126.545, 10.3055, -82.4437, 0.28", "-127.569, 10.9952, -81.4338, 0.55", "-130.012, 12.5371, -78.9641, 0.28", "-131.341, 13.358, -77.623, 0.55", "-132.436, 14.0308, -76.5229, 0.55", "-133.75, 14.8244, -75.2461, 0.28", "-134.452, 15.2295, -74.7053, 0.55", "-136.812, 16.6658, -73.0475, 0.28", "-138.024, 17.5622, -72.1538, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-9.35152, -30.7374, -11.7012, 0.55", "-8.86654, -30.914, -12.3745, 0.55", "-8.34616, -31.0076, -13.0388, 0.55", "-7.64679, -31.0612, -13.8335, 0.55", "-7.04123, -31.0451, -14.4566, 0.55", "-2.71845, -30.4433, -18.245, 0.55", "-1.73058, -30.1821, -19.1129, 0.55", "-0.270391, -29.6768, -20.4259, 0.55", "0.765273, -29.2801, -21.3621, 0.55", "1.79577, -28.8289, -22.251, 0.28", "3.43602, -28.0403, -23.5401, 0.55", "5.95569, -26.7927, -25.3253, 0.28", "6.14629, -26.7269, -25.5346, 0.55", "7.02847, -26.5822, -27.2082, 0.28", "7.42639, -26.5396, -28.4318, 0.55", "7.72384, -26.5726, -29.7962, 0.55", "8.2103, -26.7475, -32.2544, 0.55", "9.17423, -27.1245, -37.0751, 0.55", "9.8747, -27.4158, -40.2992, 0.55", "10.1447, -27.5289, -41.4046, 0.55", "12.0968, -28.2336, -48.6239, 0.55", "12.7104, -28.4047, -50.5548, 0.55", "13.1357, -28.5087, -51.6111, 0.55", "14.3345, -28.8321, -53.9835, 0.55", "17.5104, -29.9379, -59.4967, 0.55", "18.4225, -30.3059, -60.9423, 0.28", "19.0002, -30.5606, -61.7233, 0.55", "19.8725, -30.9943, -62.8627, 0.28", "20.2604, -31.23, -63.3009, 0.55", "21.6837, -32.192, -64.2549, 0.28", "22.8168, -33.3325, -64.2236, 0.55", "23.4781, -34.1231, -64.1485, 0.28", "24.0593, -34.9724, -63.9847, 0.55", "24.5407, -35.876, -63.7767, 0.28", "24.7402, -36.3361, -63.6939, 0.55", "25.1785, -37.5287, -63.4416, 0.28", "25.2901, -37.8842, -63.4271, 0.55", "25.9349, -39.9262, -63.4615, 0.28", "26.275, -40.8792, -63.5978, 0.55", "27.1033, -42.9331, -64.1109, 0.28", "27.45, -43.6966, -64.3806, 0.55", "28.7045, -46.2208, -65.4067, 0.28", "29.0165, -46.8359, -65.6817, 0.55", "29.9591, -48.781, -66.6282, 0.28", "30.1497, -49.2325, -66.8185, 0.55", "30.6129, -50.421, -67.3154, 0.28", "30.8959, -51.114, -67.67, 0.55", "31.2035, -51.7992, -68.0696, 0.55", "31.8169, -53.1662, -68.8564, 0.28", "32.2856, -54.0243, -69.4316, 0.55", "33.9231, -56.2311, -71.3019, 0.28", "34.5938, -56.9669, -72.0674, 0.55", "35.0714, -57.4405, -72.5848, 0.28", "35.5715, -57.8809, -73.0998, 0.55", "37.1592, -59.1377, -74.652, 0.28", "38.3673, -60.1083, -75.7885, 0.55", "40.4318, -61.9176, -77.5397, 0.28", "41.0843, -62.4817, -78.0874, 0.55", "42.3653, -63.5259, -79.0132, 0.28", "42.7987, -63.8691, -79.2827, 0.55", "43.5192, -64.4177, -79.5794, 0.28", "44.1629, -64.8834, -79.7821, 0.55", "45.9356, -66.0547, -80.1394, 0.28", "47.987, -67.3172, -80.5153, 0.28", "49.0363, -67.9096, -80.6292, 0.28", "50.0995, -68.4766, -80.8111, 0.55", "51.6667, -69.2372, -81.0848, 0.28", "52.3661, -69.5652, -81.1915, 0.83", "54.1467, -70.4226, -81.3931, 0.28", "54.9153, -70.812, -81.5245, 0.55", "58.2661, -72.6484, -82.2617, 0.28", "59.9336, -73.5881, -82.7699, 0.28", "61.1424, -74.2728, -83.2223, 0.55", "61.8388, -74.6873, -83.5687, 0.55", "63.6702, -75.814, -84.6419, 0.28", "65.3596, -76.9447, -85.718, 0.55", "66.8879, -78.0224, -86.6973, 0.28", "68.258, -79.0181, -87.6621, 0.55", "69.3945, -79.8273, -88.4525, 0.28", "70.3452, -80.4211, -89.0459, 0.55", "72.6787, -81.7233, -90.3665, 0.28", "73.8674, -82.3811, -90.9844, 0.55", "75.6588, -83.3731, -91.8431, 0.28", "77.1371, -84.1433, -92.5109, 0.55", "80.6274, -85.799, -94.0824, 0.28", "82.0553, -86.397, -94.8225, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-3.61624, -124.273, 92.1279, 0.55", "-3.18846, -133.591, 96.7978, 0.55", "-1.91019, -143.653, 98.9606, 0.55", "-1.151, -153.353, 102.633, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-3.61624, -124.273, 92.1279, 0.55", "-2.26836, -131.85, 98.0018, 0.55", "-2.22518, -138.335, 105.293, 0.55", "-2.1312, -143.256, 113.831, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-6.68966, -124.72, 91.3717, 0.55", "-5.79467, -134.048, 97.5543, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-6.68966, -124.72, 91.3717, 0.55", "-7.88026, -135.135, 97.7647, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-2.5958, -106.284, 3.41141, 0.83", "-2.26665, -108.41, 3.79375, 0.83", "-1.9656, -110.21, 4.27537, 0.83", "-1.66634, -111.998, 4.75412, 0.83", "-1.38215, -113.696, 5.20877, 0.83", "-0.944183, -116.314, 5.90942, 0.83", "-0.509383, -118.912, 6.605, 0.83", "-0.181957, -120.645, 7.33162, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-2.5958, -106.284, 3.41141, 0.55", "-1.18708, -108.368, 3.10247, 0.55", "-0.155878, -109.984, 2.58165, 0.55", "0.530317, -111.173, 2.08676, 0.55", "1.08807, -112.553, 1.36573, 0.83", "1.58051, -114.109, 0.369534, 0.55", "2.06217, -115.63, -0.60487, 0.83", "2.45973, -117.272, -1.8033, 0.55", "2.67198, -118.221, -2.59087, 0.83", "3.1791, -121.277, -5.36665, 0.55", "3.34034, -123.663, -7.66731, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-14.5208, -93.243, 49.0208, 0.55", "-16.6916, -98.8601, 54.074, 0.55", "-19.6548, -103.588, 59.6945, 0.55", "-22.8643, -107.544, 65.8199, 0.55", "-26.4765, -110.525, 72.3242, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-14.5208, -93.243, 49.0208, 0.55", "-15.6213, -96.9688, 52.6931, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-0.181957, -120.645, 7.33162, 0.55", "-0.233071, -123.358, 8.0085, 0.55", "-0.218326, -126.828, 8.98065, 0.55", "-0.199699, -130.103, 9.88012, 0.55", "-0.207059, -132.429, 10.4779, 0.55", "-0.255239, -136.578, 11.4695, 0.55", "-0.149922, -148.24, 13.9854, 0.55", "0.0176215, -152.199, 14.6827, 0.55", "0.174218, -154.988, 15.0321, 0.55", "0.42992, -158.168, 15.173, 0.55", "0.627363, -160.62, 15.0489, 0.55", "1.31116, -166.351, 14.5466, 0.55", "1.67407, -170.697, 14.1302, 0.55", "1.97575, -173.555, 13.9587, 0.55", "2.65769, -180.975, 13.902, 0.55", "3.04087, -185.968, 14.0865, 0.55", "3.49758, -192.415, 14.7046, 0.55", "4.00691, -199.747, 16.0049, 0.55", "4.51688, -204.657, 17.226, 0.55", "4.87579, -207.562, 18.0403, 0.55", "5.15708, -210.239, 18.774, 0.55", "5.60223, -213.627, 19.5496, 0.55", "6.67911, -221.777, 20.8331, 0.55", "7.22773, -224.931, 21.2289, 0.55", "7.75667, -228.44, 21.6296, 0.55", "8.5114, -233.708, 22.1952, 0.55", "8.88984, -237.753, 22.6353, 0.55", "9.0289, -241.588, 22.9612, 0.55", "8.99286, -245.24, 23.2426, 0.55", "8.88475, -248.802, 23.5596, 0.55", "8.82857, -251.338, 23.7619, 0.55", "8.79072, -255.484, 23.9489, 0.55", "8.7457, -260.45, 23.7668, 0.55", "8.82404, -262.859, 23.5008, 0.55", "8.94808, -264.971, 23.1042, 0.55", "9.41975, -268.955, 22.1425, 0.55", "9.70565, -271.478, 21.4543, 0.55", "10.0717, -274.592, 20.7361, 0.55", "10.2164, -276.782, 20.3548, 0.55", "10.4418, -282.478, 19.5775, 0.55", "10.4408, -286.748, 19.2957, 0.55", "10.2181, -293.368, 19.4041, 0.55", "10.0916, -297.653, 19.9116, 0.55", "9.89416, -302.155, 20.5898, 0.28", "9.75365, -303.965, 20.9313, 0.28", "9.31286, -308.368, 22.1702, 0.28", "8.80334, -312.442, 23.642, 0.28", "8.5339, -317.857, 26.2558, 0.28", "10.1697, -330.004, 29.2354, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-0.181957, -120.645, 7.33162, 0.55", "1.02049, -121.347, 8.79145, 0.55", "3.30916, -123.097, 11.9842, 0.55", "5.19213, -124.798, 14.8345, 0.28", "7.142, -126.722, 17.9661, 0.55", "8.12992, -127.946, 20.0653, 0.28", "9.61539, -130.146, 23.9526, 0.55", "9.93317, -131.291, 25.8871, 0.28", "9.97654, -131.706, 26.6611, 0.28", "10.0461, -132.309, 28.0135, 0.55", "10.5639, -134.319, 33.0895, 0.28", "10.8396, -135.11, 35.2071, 0.55", "12.1348, -137.414, 41.2123, 0.28", "12.998, -138.562, 44.3413, 0.28", "14.2311, -140.029, 48.0983, 0.55", "16.4069, -142.293, 53.3724, 0.28", "16.7577, -142.594, 54.0338, 0.55", "18.6549, -144.058, 57.125, 0.28", "18.8515, -144.194, 57.3806, 0.55", "20.5167, -145.748, 59.6828, 0.28", "21.2499, -146.586, 60.8323, 0.55", "27.2313, -152.85, 70.3848, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-26.4765, -110.525, 72.3242, 0.55", "-28.2957, -113.938, 80.5549, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-26.4765, -110.525, 72.3242, 0.55", "-30.4594, -115.602, 77.1637, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L5_BP_491c00476b_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 5.92555, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -4.27434, 9.02537, 3.09593, 0.83 ) }
    dend_43 { pt3dadd( -8.7845, 12.3463, 3.77612, 1.11 ) }
    dend_43 { pt3dadd( -11.4438, 14.3031, 4.12995, 0.83 ) }
    dend_43 { pt3dadd( -14.0273, 16.1877, 4.44697, 0.83 ) }
    dend_43 { pt3dadd( -15.5569, 17.2623, 4.62069, 1.11 ) }
    dend_43 { pt3dadd( -20.3471, 20.6203, 5.17747, 1.11 ) }
    dend_43 { pt3dadd( -28.9147, 26.3694, 6.16168, 0.83 ) }
    dend_43 { pt3dadd( -32.0013, 28.3617, 6.48669, 0.83 ) }
    dend_43 { pt3dadd( -34.4457, 29.8924, 6.68856, 0.83 ) }
    dend_43 { pt3dadd( -36.8292, 31.4095, 6.86331, 0.83 ) }
    dend_43 { pt3dadd( -38.7694, 32.6598, 6.95759, 0.55 ) }
    dend_43 { pt3dadd( -40.2278, 33.5064, 7.05328, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.18455, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 5.05511, 6.12357, -6.35742, 0.55 ) }
    dend_28 { pt3dadd( 8.383, 6.80747, -7.1006, 0.55 ) }
    dend_28 { pt3dadd( 10.314, 6.98011, -8.08399, 0.83 ) }
    dend_28 { pt3dadd( 13.3703, 7.16384, -9.91069, 0.55 ) }
    dend_28 { pt3dadd( 14.8456, 7.25252, -10.7925, 1.38 ) }
    dend_28 { pt3dadd( 18.4731, 7.47059, -12.9606, 0.55 ) }
    dend_28 { pt3dadd( 20.018, 7.39674, -13.9951, 0.83 ) }
    dend_28 { pt3dadd( 28.01, 6.04252, -19.8075, 0.55 ) }
    dend_28 { pt3dadd( 28.7831, 5.86041, -20.447, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -7.82095, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.679204, -9.54059, 3.07696, 1.11 ) }
    dend_1 { pt3dadd( -0.71819, -12.8083, 4.3101, 1.11 ) }
    dend_1 { pt3dadd( -0.734067, -14.1392, 4.81232, 0.83 ) }
    dend_1 { pt3dadd( -0.755161, -15.9073, 5.47953, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.22705, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.924201, 9.40721, -1.34029, 1.11 ) }
    dend_0 { pt3dadd( 1.07408, 11.3242, -1.28578, 1.11 ) }
    dend_0 { pt3dadd( 1.33429, 14.4477, -1.07708, 1.38 ) }
    dend_0 { pt3dadd( 1.35256, 14.6215, -1.06287, 1.38 ) }
    dend_0 { pt3dadd( 1.7174, 16.767, -0.892229, 0.83 ) }
    dend_0 { pt3dadd( 2.22454, 19.0285, -0.605672, 0.83 ) }
    dend_0 { pt3dadd( 3.09027, 21.564, -0.00737754, 0.83 ) }
    dend_0 { pt3dadd( 3.56893, 22.5177, 0.31788, 0.83 ) }
    dend_0 { pt3dadd( 4.02869, 23.2029, 0.606803, 1.11 ) }
    dend_0 { pt3dadd( 5.33826, 24.8654, 1.32291, 0.55 ) }
    dend_0 { pt3dadd( 6.86127, 26.5922, 2.17789, 0.83 ) }
    dend_0 { pt3dadd( 8.80214, 28.3546, 3.09625, 0.55 ) }
    dend_0 { pt3dadd( 9.77235, 29.0808, 3.49055, 0.83 ) }
    dend_0 { pt3dadd( 11.1465, 30.0591, 4.1302, 0.55 ) }
    dend_0 { pt3dadd( 12.8708, 31.3019, 5.02285, 0.55 ) }
    dend_0 { pt3dadd( 15.316, 33.1755, 6.42684, 0.55 ) }
    dend_0 { pt3dadd( 18.0139, 35.3218, 7.98032, 0.55 ) }
    dend_0 { pt3dadd( 19.7652, 36.7087, 9.19053, 0.55 ) }
    dend_0 { pt3dadd( 21.9711, 38.4558, 10.9495, 0.55 ) }
    dend_0 { pt3dadd( 22.4374, 38.8038, 11.3542, 0.83 ) }
    dend_0 { pt3dadd( 23.6868, 39.7204, 12.508, 0.55 ) }
    dend_0 { pt3dadd( 24.7205, 40.4332, 13.402, 0.83 ) }
    dend_0 { pt3dadd( 27.1262, 42.4035, 15.5421, 0.55 ) }
    dend_0 { pt3dadd( 27.9874, 43.1291, 16.1383, 0.83 ) }
    dend_0 { pt3dadd( 28.7496, 43.6618, 16.5055, 0.55 ) }
    dend_0 { pt3dadd( 29.4802, 44.1198, 16.7573, 0.83 ) }
    dend_0 { pt3dadd( 31.0628, 44.9659, 17.158, 0.83 ) }
    dend_0 { pt3dadd( 33.1211, 46.1264, 17.52, 0.83 ) }
    dend_0 { pt3dadd( 34.359, 46.9019, 17.6179, 0.55 ) }
    dend_0 { pt3dadd( 35.3066, 47.5772, 17.7001, 0.55 ) }
    dend_0 { pt3dadd( 37.7824, 49.322, 17.8799, 0.83 ) }
    dend_0 { pt3dadd( 39.3683, 50.4428, 17.9352, 0.55 ) }
    dend_0 { pt3dadd( 41.7541, 52.0852, 17.9247, 0.55 ) }
    dend_0 { pt3dadd( 43.9178, 53.4594, 17.8277, 0.55 ) }
    dend_0 { pt3dadd( 45.8403, 54.6222, 17.6888, 0.55 ) }
    dend_0 { pt3dadd( 48.2429, 55.9832, 17.4031, 0.55 ) }
    dend_0 { pt3dadd( 49.6957, 56.6433, 17.1767, 0.55 ) }
    dend_0 { pt3dadd( 50.6589, 57.0138, 16.9029, 0.55 ) }
    dend_0 { pt3dadd( 51.9072, 57.2813, 16.4231, 0.55 ) }
    dend_0 { pt3dadd( 53.7259, 57.3825, 15.5403, 0.55 ) }
    dend_0 { pt3dadd( 54.8451, 57.2996, 14.9391, 0.55 ) }
    dend_0 { pt3dadd( 56.5061, 57.1279, 14.1819, 0.55 ) }
    dend_0 { pt3dadd( 59.7386, 56.8928, 13.0407, 0.55 ) }
    dend_0 { pt3dadd( 62.3197, 56.8189, 12.3352, 0.55 ) }
    dend_0 { pt3dadd( 65.0957, 56.8625, 11.7568, 0.55 ) }
    dend_0 { pt3dadd( 66.9084, 56.9444, 11.5281, 0.55 ) }
    dend_0 { pt3dadd( 71.6974, 57.552, 11.2505, 0.55 ) }
    dend_0 { pt3dadd( 74.5826, 58.1082, 11.2984, 0.55 ) }
    dend_0 { pt3dadd( 76.7923, 58.6487, 11.5304, 0.55 ) }
    dend_0 { pt3dadd( 78.152, 59.1763, 11.726, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 79.7325, 59.9777, 11.9515, 0.55 ) }
    dend_0 { pt3dadd( 82.3673, 61.5817, 12.122, 0.55 ) }
    dend_0 { pt3dadd( 82.9552, 61.9718, 12.084, 0.55 ) }
    dend_0 { pt3dadd( 84.6161, 63.0156, 11.8662, 0.55 ) }
    dend_0 { pt3dadd( 86.1461, 64.1344, 11.6654, 0.83 ) }
    dend_0 { pt3dadd( 86.9785, 64.7558, 11.5433, 0.55 ) }
    dend_0 { pt3dadd( 88.2191, 65.8292, 11.3168, 0.83 ) }
    dend_0 { pt3dadd( 95.1229, 71.5018, 11.8061, 0.83 ) }
    dend_0 { pt3dadd( 101.082, 78.0883, 11.8433, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -40.2278, 33.5064, 7.05328, 0.55 ) }
    dend_55 { pt3dadd( -41.8093, 34.9505, 5.92366, 0.55 ) }
    dend_55 { pt3dadd( -43.5291, 36.5208, 4.69531, 0.55 ) }
    dend_55 { pt3dadd( -45.6044, 38.4159, 3.21296, 0.55 ) }
    dend_55 { pt3dadd( -47.3181, 39.9806, 1.98894, 0.83 ) }
    dend_55 { pt3dadd( -48.7542, 41.2919, 0.96322, 0.55 ) }
    dend_55 { pt3dadd( -51.4197, 43.7258, -0.940675, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -40.2278, 33.5064, 7.05328, 0.55 ) }
    dend_44 { pt3dadd( -42.3569, 33.9253, 6.72054, 0.55 ) }
    dend_44 { pt3dadd( -44.6337, 34.2887, 6.58954, 0.55 ) }
    dend_44 { pt3dadd( -47.2185, 34.6928, 6.5039, 0.55 ) }
    dend_44 { pt3dadd( -50.9787, 35.2177, 6.72179, 0.55 ) }
    dend_44 { pt3dadd( -54.1364, 35.5561, 7.12205, 0.55 ) }
    dend_44 { pt3dadd( -57.4554, 35.8538, 7.67972, 0.55 ) }
    dend_44 { pt3dadd( -60.6815, 35.9148, 8.54999, 0.55 ) }
    dend_44 { pt3dadd( -63.4732, 35.6964, 9.54966, 0.55 ) }
    dend_44 { pt3dadd( -66.9711, 35.1732, 11.149, 0.55 ) }
    dend_44 { pt3dadd( -68.5026, 34.8286, 12.0461, 0.55 ) }
    dend_44 { pt3dadd( -70.1603, 34.4356, 13.0838, 0.55 ) }
    dend_44 { pt3dadd( -73.0799, 33.5462, 14.7722, 0.55 ) }
    dend_44 { pt3dadd( -74.6225, 33.0924, 15.4324, 0.55 ) }
    dend_44 { pt3dadd( -76.2382, 32.5715, 16.1117, 0.55 ) }
    dend_44 { pt3dadd( -78.1505, 31.9868, 16.7298, 0.55 ) }
    dend_44 { pt3dadd( -80.2258, 31.3954, 17.3479, 0.55 ) }
    dend_44 { pt3dadd( -83.1847, 30.5486, 18.1658, 0.55 ) }
    dend_44 { pt3dadd( -87.1183, 29.6874, 18.9229, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 28.7831, 5.86041, -20.447, 0.55 ) }
    dend_34 { pt3dadd( 34.442, 6.944, -21.6305, 0.55 ) }
    dend_34 { pt3dadd( 37.6811, 7.44844, -22.7874, 0.55 ) }
    dend_34 { pt3dadd( 40.8663, 7.81756, -23.993, 0.55 ) }
    dend_34 { pt3dadd( 43.0359, 7.98782, -24.8268, 0.55 ) }
    dend_34 { pt3dadd( 46.2017, 8.16403, -26.0303, 0.55 ) }
    dend_34 { pt3dadd( 52.7557, 8.4359, -28.7478, 0.55 ) }
    dend_34 { pt3dadd( 60.1784, 8.76389, -32.3329, 0.55 ) }
    dend_34 { pt3dadd( 63.7559, 8.74167, -34.3496, 0.55 ) }
    dend_34 { pt3dadd( 65.6661, 8.7011, -35.5626, 0.55 ) }
    dend_34 { pt3dadd( 67.7598, 8.67751, -36.9775, 0.55 ) }
    dend_34 { pt3dadd( 71.488, 8.53338, -39.5007, 0.55 ) }
    dend_34 { pt3dadd( 72.8349, 8.41045, -40.473, 0.55 ) }
    dend_34 { pt3dadd( 78.5403, 8.08598, -45.0204, 0.55 ) }
    dend_34 { pt3dadd( 82.5784, 7.95833, -48.5361, 0.55 ) }
    dend_34 { pt3dadd( 84.9057, 7.93702, -50.6197, 0.55 ) }
    dend_34 { pt3dadd( 87.2252, 7.89574, -52.6986, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 28.7831, 5.86041, -20.447, 0.83 ) }
    dend_29 { pt3dadd( 30.0925, 6.69568, -20.4888, 0.83 ) }
    dend_29 { pt3dadd( 30.8415, 7.17105, -20.548, 0.55 ) }
    dend_29 { pt3dadd( 31.9444, 7.8907, -20.7329, 0.83 ) }
    dend_29 { pt3dadd( 32.6854, 8.39222, -20.8812, 0.55 ) }
    dend_29 { pt3dadd( 33.7061, 9.11127, -21.0713, 0.83 ) }
    dend_29 { pt3dadd( 34.9318, 10.0014, -21.2542, 0.55 ) }
    dend_29 { pt3dadd( 35.55, 10.4055, -21.3178, 0.55 ) }
    dend_29 { pt3dadd( 36.9793, 11.1504, -21.3521, 0.83 ) }
    dend_29 { pt3dadd( 38.2808, 11.6812, -21.203, 0.55 ) }
    dend_29 { pt3dadd( 39.0076, 11.9734, -21.0478, 0.83 ) }
    dend_29 { pt3dadd( 40.0953, 12.4399, -20.6984, 0.55 ) }
    dend_29 { pt3dadd( 41.6532, 13.1456, -19.9919, 0.55 ) }
    dend_29 { pt3dadd( 43.8196, 14.0211, -18.8912, 0.55 ) }
    dend_29 { pt3dadd( 45.8862, 14.7893, -17.6909, 0.55 ) }
    dend_29 { pt3dadd( 47.5236, 15.3821, -16.7089, 0.55 ) }
    dend_29 { pt3dadd( 50.2224, 16.3722, -15.0759, 0.55 ) }
    dend_29 { pt3dadd( 52.1937, 17.1539, -13.8389, 0.55 ) }
    dend_29 { pt3dadd( 53.3788, 17.7254, -13.0511, 0.55 ) }
    dend_29 { pt3dadd( 55.551, 18.9987, -11.5891, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.755161, -15.9073, 5.47953, 0.83 ) }
    dend_11 { pt3dadd( -1.08573, -17.7585, 5.43297, 0.83 ) }
    dend_11 { pt3dadd( -1.4078, -19.5622, 5.3876, 0.83 ) }
    dend_11 { pt3dadd( -1.76738, -21.576, 5.33694, 0.83 ) }
    dend_11 { pt3dadd( -1.95516, -22.6276, 5.31049, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.755161, -15.9073, 5.47953, 0.55 ) }
    dend_2 { pt3dadd( -0.329554, -16.9837, 6.24438, 0.55 ) }
    dend_2 { pt3dadd( 0.0559729, -18.3003, 7.24683, 0.55 ) }
    dend_2 { pt3dadd( 0.28726, -20.023, 8.64448, 0.55 ) }
    dend_2 { pt3dadd( 0.328531, -20.6921, 9.2089, 0.83 ) }
    dend_2 { pt3dadd( 0.277169, -22.3982, 10.8618, 0.55 ) }
    dend_2 { pt3dadd( 0.175095, -23.2784, 11.7363, 0.55 ) }
    dend_2 { pt3dadd( -0.058557, -24.9899, 13.5152, 0.83 ) }
    dend_2 { pt3dadd( -0.306068, -26.2602, 14.9248, 0.55 ) }
    dend_2 { pt3dadd( -0.609511, -27.3068, 16.0745, 0.55 ) }
    dend_2 { pt3dadd( -1.23307, -29.2883, 18.2158, 0.55 ) }
    dend_2 { pt3dadd( -1.72916, -30.8677, 19.9028, 0.55 ) }
    dend_2 { pt3dadd( -2.09886, -32.1342, 21.2729, 0.55 ) }
    dend_2 { pt3dadd( -2.41471, -33.4796, 22.6793, 0.28 ) }
    dend_2 { pt3dadd( -2.49733, -34.0406, 23.2402, 0.55 ) }
    dend_2 { pt3dadd( -2.62399, -35.0768, 24.2129, 0.28 ) }
    dend_2 { pt3dadd( -2.59991, -36.6966, 25.4559, 0.55 ) }
    dend_2 { pt3dadd( -3.87727, -42.0705, 29.9563, 0.55 ) }
    dend_2 { pt3dadd( -5.27793, -47.0348, 34.9178, 0.55 ) }
    dend_2 { pt3dadd( -6.30172, -51.1192, 40.7793, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -51.4197, 43.7258, -0.940675, 0.55 ) }
    dend_61 { pt3dadd( -54.6415, 44.0839, 0.609704, 0.55 ) }
    dend_61 { pt3dadd( -56.0067, 44.1566, 1.42278, 0.83 ) }
    dend_61 { pt3dadd( -57.6152, 44.156, 2.57743, 0.55 ) }
    dend_61 { pt3dadd( -58.8503, 44.1488, 3.56972, 0.83 ) }
    dend_61 { pt3dadd( -62.081, 44.2374, 6.14848, 0.55 ) }
    dend_61 { pt3dadd( -63.3038, 44.2892, 7.13541, 0.28 ) }
    dend_61 { pt3dadd( -65.3484, 44.3869, 8.94996, 0.55 ) }
    dend_61 { pt3dadd( -68.0906, 44.5335, 11.3731, 0.55 ) }
    dend_61 { pt3dadd( -70.1691, 44.6507, 13.12, 0.55 ) }
    dend_61 { pt3dadd( -72.9423, 44.8116, 15.3671, 0.28 ) }
    dend_61 { pt3dadd( -73.6594, 44.8633, 15.8664, 0.55 ) }
    dend_61 { pt3dadd( -75.1407, 44.9895, 16.8458, 0.28 ) }
    dend_61 { pt3dadd( -76.1419, 45.1048, 17.4195, 0.55 ) }
    dend_61 { pt3dadd( -78.1796, 45.3369, 18.4147, 0.28 ) }
    dend_61 { pt3dadd( -79.3763, 45.4148, 18.9337, 0.55 ) }
    dend_61 { pt3dadd( -81.495, 45.4068, 19.8579, 0.28 ) }
    dend_61 { pt3dadd( -82.9165, 45.3956, 20.4288, 0.55 ) }
    dend_61 { pt3dadd( -91.7533, 44.4657, 27.671, 0.55 ) }
    dend_61 { pt3dadd( -99.9278, 42.445, 35.4259, 0.55 ) }
    dend_61 { pt3dadd( -107.846, 39.3948, 43.0715, 0.55 ) }
    dend_61 { pt3dadd( -115.749, 35.1384, 50.0628, 0.55 ) }
    dend_61 { pt3dadd( -122.439, 31.1802, 58.3946, 0.55 ) }
    dend_61 { pt3dadd( -129.927, 27.6866, 66.2609, 0.55 ) }
    dend_61 { pt3dadd( -137.491, 25.9281, 74.6797, 0.55 ) }
    dend_61 { pt3dadd( -145.049, 23.3255, 82.8573, 0.55 ) }
    dend_61 { pt3dadd( -152.381, 21.4064, 91.441, 0.55 ) }
    dend_61 { pt3dadd( -159.214, 19.2824, 100.376, 0.55 ) }
    dend_61 { pt3dadd( -165.008, 15.863, 109.598, 0.55 ) }
    dend_61 { pt3dadd( -170.873, 13.4324, 119.118, 0.55 ) }
    dend_61 { pt3dadd( -176.915, 9.96243, 128.159, 0.55 ) }
    dend_61 { pt3dadd( -181.683, 5.93754, 137.696, 0.55 ) }
    dend_61 { pt3dadd( -184.569, 2.48954, 148.195, 0.55 ) }
    dend_61 { pt3dadd( -187.434, -2.88007, 157.768, 0.55 ) }
    dend_61 { pt3dadd( -188.685, -8.54284, 167.505, 0.55 ) }
    dend_61 { pt3dadd( -190.531, -13.7385, 177.432, 0.55 ) }
    dend_61 { pt3dadd( -193.566, -18.1038, 187.503, 0.55 ) }
    dend_61 { pt3dadd( -198.86, -20.6441, 197.322, 0.55 ) }
    dend_61 { pt3dadd( -203.231, -24.4356, 207.152, 0.55 ) }
    dend_61 { pt3dadd( -205.451, -26.6195, 218.173, 0.55 ) }
    dend_61 { pt3dadd( -209.429, -27.8881, 228.849, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -51.4197, 43.7258, -0.940675, 0.55 ) }
    dend_56 { pt3dadd( -52.264, 44.7167, -2.54084, 0.55 ) }
    dend_56 { pt3dadd( -52.7754, 45.78, -4.21838, 0.55 ) }
    dend_56 { pt3dadd( -53.1954, 47.0004, -5.93634, 0.55 ) }
    dend_56 { pt3dadd( -53.4583, 47.7647, -7.0121, 0.55 ) }
    dend_56 { pt3dadd( -53.938, 49.1587, -8.97442, 0.83 ) }
    dend_56 { pt3dadd( -54.2889, 50.1786, -10.4101, 0.55 ) }
    dend_56 { pt3dadd( -54.5627, 51.5933, -12.4759, 0.83 ) }
    dend_56 { pt3dadd( -54.547, 52.4702, -13.5694, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -87.1183, 29.6874, 18.9229, 0.28 ) }
    dend_48 { pt3dadd( -87.4865, 28.9732, 18.8933, 0.28 ) }
    dend_48 { pt3dadd( -87.6647, 28.6615, 18.8549, 0.28 ) }
    dend_48 { pt3dadd( -87.8956, 28.2196, 18.7843, 0.55 ) }
    dend_48 { pt3dadd( -88.0849, 27.8322, 18.7254, 0.28 ) }
    dend_48 { pt3dadd( -88.3635, 27.2434, 18.6427, 0.55 ) }
    dend_48 { pt3dadd( -89.1342, 25.5188, 18.427, 0.28 ) }
    dend_48 { pt3dadd( -89.3853, 24.9081, 18.3032, 0.55 ) }
    dend_48 { pt3dadd( -89.7661, 23.9634, 18.0814, 0.28 ) }
    dend_48 { pt3dadd( -89.9847, 23.3953, 17.9237, 0.55 ) }
    dend_48 { pt3dadd( -90.136, 23.0024, 17.8059, 0.28 ) }
    dend_48 { pt3dadd( -90.3083, 22.552, 17.6742, 0.55 ) }
    dend_48 { pt3dadd( -90.8231, 21.0567, 17.2695, 0.28 ) }
    dend_48 { pt3dadd( -90.9861, 20.6019, 17.1317, 0.55 ) }
    dend_48 { pt3dadd( -91.2764, 19.8947, 16.8519, 0.28 ) }
    dend_48 { pt3dadd( -91.5204, 19.434, 16.6361, 0.28 ) }
    dend_48 { pt3dadd( -91.7428, 19.1222, 16.4817, 0.55 ) }
    dend_48 { pt3dadd( -92.5228, 18.2441, 16.0725, 0.28 ) }
    dend_48 { pt3dadd( -92.8866, 17.8875, 15.9141, 0.55 ) }
    dend_48 { pt3dadd( -93.7797, 17.0663, 15.5073, 0.28 ) }
    dend_48 { pt3dadd( -94.6763, 16.3328, 15.1317, 0.28 ) }
    dend_48 { pt3dadd( -95.6548, 15.6232, 14.7414, 0.28 ) }
    dend_48 { pt3dadd( -96.1045, 15.3522, 14.5924, 0.55 ) }
    dend_48 { pt3dadd( -98.2097, 12.5705, 13.6898, 0.55 ) }
    dend_48 { pt3dadd( -100.543, 9.83432, 13.4695, 0.55 ) }
    dend_48 { pt3dadd( -102.847, 7.16351, 12.6928, 0.55 ) }
    dend_48 { pt3dadd( -105.229, 4.66558, 11.5825, 0.55 ) }
    dend_48 { pt3dadd( -107.662, 2.37592, 10.1329, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -87.1183, 29.6874, 18.9229, 0.55 ) }
    dend_45 { pt3dadd( -87.8086, 29.6226, 19.0289, 0.55 ) }
    dend_45 { pt3dadd( -89.7547, 29.4758, 19.5793, 0.55 ) }
    dend_45 { pt3dadd( -90.4852, 29.4081, 19.8276, 0.55 ) }
    dend_45 { pt3dadd( -92.2013, 29.203, 20.4448, 0.55 ) }
    dend_45 { pt3dadd( -94.8421, 28.896, 21.2627, 0.55 ) }
    dend_45 { pt3dadd( -96.2159, 28.7732, 21.6577, 0.28 ) }
    dend_45 { pt3dadd( -98.3525, 28.5325, 22.2368, 0.55 ) }
    dend_45 { pt3dadd( -99.9385, 28.3151, 22.6142, 0.55 ) }
    dend_45 { pt3dadd( -100.608, 28.2193, 22.7756, 0.28 ) }
    dend_45 { pt3dadd( -104.624, 27.642, 23.7387, 0.55 ) }
    dend_45 { pt3dadd( -106.499, 27.2747, 24.0856, 0.28 ) }
    dend_45 { pt3dadd( -109.029, 26.7501, 24.4064, 0.28 ) }
    dend_45 { pt3dadd( -111.211, 26.3111, 24.5509, 0.55 ) }
    dend_45 { pt3dadd( -119.758, 26.0295, 26.7979, 0.55 ) }
    dend_45 { pt3dadd( -127.998, 25.671, 29.98, 0.55 ) }
    dend_45 { pt3dadd( -135.726, 24.5971, 34.1195, 0.55 ) }
    dend_45 { pt3dadd( -143.265, 25.0138, 38.7187, 0.55 ) }
    dend_45 { pt3dadd( -149.682, 25.3833, 44.7895, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -154.83, 26.4009, 51.9028, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 87.2252, 7.89574, -52.6986, 0.55 ) }
    dend_42 { pt3dadd( 91.6008, 9.27145, -56.1601, 0.55 ) }
    dend_42 { pt3dadd( 92.9738, 9.666, -57.3504, 0.55 ) }
    dend_42 { pt3dadd( 94.6856, 10.1031, -58.8299, 0.55 ) }
    dend_42 { pt3dadd( 97.783, 10.9046, -61.7009, 0.55 ) }
    dend_42 { pt3dadd( 100.997, 11.6301, -64.8009, 0.55 ) }
    dend_42 { pt3dadd( 102.553, 11.8577, -66.2995, 0.83 ) }
    dend_42 { pt3dadd( 103.82, 11.9785, -67.6473, 0.55 ) }
    dend_42 { pt3dadd( 104.754, 12.0108, -68.7683, 0.83 ) }
    dend_42 { pt3dadd( 106.958, 11.8072, -71.6924, 0.55 ) }
    dend_42 { pt3dadd( 108.75, 11.4701, -74.1461, 0.55 ) }
    dend_42 { pt3dadd( 110.812, 11.0474, -76.8607, 0.55 ) }
    dend_42 { pt3dadd( 113.115, 10.654, -79.9211, 0.55 ) }
    dend_42 { pt3dadd( 114.653, 10.3605, -82.0225, 0.55 ) }
    dend_42 { pt3dadd( 116.387, 10.035, -84.4542, 0.55 ) }
    dend_42 { pt3dadd( 117.888, 9.82971, -86.6592, 0.55 ) }
    dend_42 { pt3dadd( 118.841, 9.81501, -88.166, 0.55 ) }
    dend_42 { pt3dadd( 120.007, 9.93161, -91.1497, 0.55 ) }
    dend_42 { pt3dadd( 120.625, 9.96488, -93.0201, 0.55 ) }
    dend_42 { pt3dadd( 121.105, 9.95249, -95.506, 0.55 ) }
    dend_42 { pt3dadd( 121.706, 9.84109, -99.7189, 0.55 ) }
    dend_42 { pt3dadd( 121.82, 9.78594, -100.674, 0.28 ) }
    dend_42 { pt3dadd( 123.315, 8.98268, -112.311, 0.28 ) }
    dend_42 { pt3dadd( 123.853, 8.75582, -115.728, 0.83 ) }
    dend_42 { pt3dadd( 126.029, 7.72103, -127.897, 0.83 ) }
    dend_42 { pt3dadd( 127.156, 7.02053, -133.592, 0.83 ) }
    dend_42 { pt3dadd( 127.714, 6.6393, -135.919, 0.55 ) }
    dend_42 { pt3dadd( 128.383, 6.24295, -138.195, 0.55 ) }
    dend_42 { pt3dadd( 130.365, 5.32466, -142.464, 0.55 ) }
    dend_42 { pt3dadd( 132.541, 4.42784, -146.243, 0.28 ) }
    dend_42 { pt3dadd( 133.244, 4.14295, -146.521, 0.55 ) }
    dend_42 { pt3dadd( 134.824, 3.51672, -146.532, 0.28 ) }
    dend_42 { pt3dadd( 135.815, 3.17004, -146.38, 0.55 ) }
    dend_42 { pt3dadd( 136.849, 2.77906, -146.135, 0.28 ) }
    dend_42 { pt3dadd( 138.1, 2.35857, -145.772, 0.55 ) }
    dend_42 { pt3dadd( 139.98, 1.86031, -145.413, 0.28 ) }
    dend_42 { pt3dadd( 141.481, 1.42549, -145.182, 0.55 ) }
    dend_42 { pt3dadd( 143.153, 1.07363, -145.041, 0.28 ) }
    dend_42 { pt3dadd( 145.422, 0.639574, -145.049, 0.55 ) }
    dend_42 { pt3dadd( 147.969, 0.236682, -145.201, 0.55 ) }
    dend_42 { pt3dadd( 150.208, -0.0651439, -145.479, 0.28 ) }
    dend_42 { pt3dadd( 153.306, -0.424598, -146.031, 0.55 ) }
    dend_42 { pt3dadd( 158.665, -0.801286, -147.53, 0.55 ) }
    dend_42 { pt3dadd( 161.041, -0.799115, -148.458, 0.55 ) }
    dend_42 { pt3dadd( 162.064, -0.738101, -148.958, 0.83 ) }
    dend_42 { pt3dadd( 164.01, -0.57609, -150.088, 0.55 ) }
    dend_42 { pt3dadd( 165.365, -0.396465, -150.947, 0.83 ) }
    dend_42 { pt3dadd( 169.023, 0.184736, -153.283, 0.55 ) }
    dend_42 { pt3dadd( 171.235, 0.40581, -154.793, 0.28 ) }
    dend_42 { pt3dadd( 172.162, 0.424784, -155.334, 0.55 ) }
    dend_42 { pt3dadd( 174.677, 0.201226, -156.574, 0.28 ) }
    dend_42 { pt3dadd( 175.55, 0.0343441, -156.963, 0.55 ) }
    dend_42 { pt3dadd( 177.34, -0.470758, -157.501, 0.28 ) }
    dend_42 { pt3dadd( 179.148, -1.21622, -157.755, 0.55 ) }
    dend_42 { pt3dadd( 182.794, -3.03569, -157.639, 0.28 ) }
    dend_42 { pt3dadd( 184.47, -3.98133, -157.412, 0.55 ) }
    dend_42 { pt3dadd( 186.947, -5.5537, -156.962, 0.28 ) }
    dend_42 { pt3dadd( 190.082, -7.54966, -156.273, 0.55 ) }
    dend_42 { pt3dadd( 192.354, -8.96931, -155.732, 0.55 ) }
    dend_42 { pt3dadd( 196.309, -11.3192, -154.704, 0.28 ) }
    dend_42 { pt3dadd( 197.938, -12.1845, -154.407, 0.55 ) }
    dend_42 { pt3dadd( 200.759, -13.4613, -154.188, 0.28 ) }
    dend_42 { pt3dadd( 203.593, -14.4873, -154.133, 0.55 ) }
    dend_42 { pt3dadd( 205.165, -14.8398, -154.293, 0.28 ) }
    dend_42 { pt3dadd( 206.607, -14.9555, -154.517, 0.55 ) }
    dend_42 { pt3dadd( 210.698, -14.9838, -155.49, 0.28 ) }
    dend_42 { pt3dadd( 213.645, -14.8064, -156.198, 0.28 ) }
    dend_42 { pt3dadd( 216.229, -14.4721, -156.818, 0.55 ) }
    dend_42 { pt3dadd( 219.089, -14.0039, -157.632, 0.28 ) }
    dend_42 { pt3dadd( 219.815, -13.8488, -157.805, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 87.2252, 7.89574, -52.6986, 0.55 ) }
    dend_35 { pt3dadd( 87.4938, 6.43662, -54.3017, 0.55 ) }
    dend_35 { pt3dadd( 87.5856, 5.18731, -55.5461, 0.28 ) }
    dend_35 { pt3dadd( 87.6703, 4.01357, -56.5685, 0.55 ) }
    dend_35 { pt3dadd( 88.0027, 1.51891, -58.7702, 0.28 ) }
    dend_35 { pt3dadd( 88.0181, 1.36884, -58.9345, 0.55 ) }
    dend_35 { pt3dadd( 88.1243, 0.600062, -59.8756, 0.28 ) }
    dend_35 { pt3dadd( 88.1353, 0.00239813, -60.7772, 0.55 ) }
    dend_35 { pt3dadd( 88.0966, -0.593385, -61.8112, 0.28 ) }
    dend_35 { pt3dadd( 88.0088, -1.38981, -63.2728, 0.55 ) }
    dend_35 { pt3dadd( 87.7875, -3.40303, -66.8886, 0.55 ) }
    dend_35 { pt3dadd( 87.5544, -5.22364, -70.2291, 0.55 ) }
    dend_35 { pt3dadd( 87.3469, -6.67621, -72.9011, 0.55 ) }
    dend_35 { pt3dadd( 87.1053, -8.10976, -75.4892, 0.55 ) }
    dend_35 { pt3dadd( 87.0415, -8.48564, -76.1353, 0.28 ) }
    dend_35 { pt3dadd( 86.9905, -8.90039, -76.7791, 0.55 ) }
    dend_35 { pt3dadd( 86.9959, -9.49976, -77.602, 0.28 ) }
    dend_35 { pt3dadd( 87.153, -10.6195, -78.9557, 0.55 ) }
    dend_35 { pt3dadd( 87.6943, -12.891, -81.1353, 0.55 ) }
    dend_35 { pt3dadd( 88.0004, -14.1459, -82.1792, 0.28 ) }
    dend_35 { pt3dadd( 88.2242, -15.3977, -83.3001, 0.55 ) }
    dend_35 { pt3dadd( 88.3836, -17.1177, -84.9395, 0.28 ) }
    dend_35 { pt3dadd( 88.4039, -18.4863, -86.2962, 0.55 ) }
    dend_35 { pt3dadd( 88.327, -20.5215, -88.3243, 0.28 ) }
    dend_35 { pt3dadd( 88.2677, -22.6487, -90.3448, 0.55 ) }
    dend_35 { pt3dadd( 88.131, -25.7245, -93.3085, 0.28 ) }
    dend_35 { pt3dadd( 88.0141, -27.3585, -94.8927, 0.55 ) }
    dend_35 { pt3dadd( 87.8603, -29.0148, -96.5592, 0.28 ) }
    dend_35 { pt3dadd( 87.704, -30.4442, -98.136, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 87.5829, -32.1923, -100.304, 0.55 ) }
    dend_35 { pt3dadd( 87.617, -33.839, -102.269, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 55.551, 18.9987, -11.5891, 0.55 ) }
    dend_31 { pt3dadd( 56.4293, 18.995, -11.2922, 0.55 ) }
    dend_31 { pt3dadd( 57.0763, 18.9529, -11.1297, 0.55 ) }
    dend_31 { pt3dadd( 58.5002, 18.826, -10.8425, 0.55 ) }
    dend_31 { pt3dadd( 59.1463, 18.7417, -10.7657, 0.55 ) }
    dend_31 { pt3dadd( 59.8545, 18.6542, -10.7203, 0.55 ) }
    dend_31 { pt3dadd( 60.8113, 18.5347, -10.7283, 0.55 ) }
    dend_31 { pt3dadd( 61.8301, 18.3595, -10.8217, 0.55 ) }
    dend_31 { pt3dadd( 62.3706, 18.2457, -10.927, 0.55 ) }
    dend_31 { pt3dadd( 63.4825, 17.9764, -11.2816, 0.55 ) }
    dend_31 { pt3dadd( 63.9959, 17.8521, -11.461, 0.55 ) }
    dend_31 { pt3dadd( 65.2023, 17.5325, -11.9048, 0.55 ) }
    dend_31 { pt3dadd( 66.0194, 17.2887, -12.1913, 0.55 ) }
    dend_31 { pt3dadd( 66.6185, 17.1127, -12.3759, 0.83 ) }
    dend_31 { pt3dadd( 67.5754, 16.8025, -12.6522, 0.55 ) }
    dend_31 { pt3dadd( 68.5104, 16.4671, -12.8779, 0.83 ) }
    dend_31 { pt3dadd( 69.302, 16.1569, -13.0341, 0.55 ) }
    dend_31 { pt3dadd( 70.0031, 15.8994, -13.1411, 0.55 ) }
    dend_31 { pt3dadd( 70.3995, 15.7742, -13.1855, 0.83 ) }
    dend_31 { pt3dadd( 71.3206, 15.4969, -13.2436, 0.28 ) }
    dend_31 { pt3dadd( 71.7758, 15.3837, -13.2494, 0.28 ) }
    dend_31 { pt3dadd( 72.2187, 15.2427, -13.27, 0.28 ) }
    dend_31 { pt3dadd( 72.6975, 15.1014, -13.2975, 0.28 ) }
    dend_31 { pt3dadd( 73.4647, 14.8843, -13.36, 0.28 ) }
    dend_31 { pt3dadd( 73.7725, 14.8028, -13.3773, 0.55 ) }
    dend_31 { pt3dadd( 74.5023, 14.6332, -13.352, 0.55 ) }
    dend_31 { pt3dadd( 75.8102, 14.3331, -13.2396, 0.55 ) }
    dend_31 { pt3dadd( 76.1709, 14.2454, -13.1908, 0.55 ) }
    dend_31 { pt3dadd( 76.4921, 14.1608, -13.1313, 0.83 ) }
    dend_31 { pt3dadd( 77.1843, 14.0119, -12.9525, 0.55 ) }
    dend_31 { pt3dadd( 77.7851, 13.886, -12.7879, 0.55 ) }
    dend_31 { pt3dadd( 78.3526, 13.7701, -12.6304, 0.55 ) }
    dend_31 { pt3dadd( 78.7933, 13.6698, -12.5187, 0.55 ) }
    dend_31 { pt3dadd( 79.496, 13.4561, -12.363, 0.55 ) }
    dend_31 { pt3dadd( 80.3293, 13.124, -12.2061, 0.55 ) }
    dend_31 { pt3dadd( 81.6345, 12.449, -12.0147, 0.55 ) }
    dend_31 { pt3dadd( 82.3564, 11.9692, -11.9279, 0.55 ) }
    dend_31 { pt3dadd( 82.9863, 11.4469, -11.857, 0.28 ) }
    dend_31 { pt3dadd( 83.1756, 11.2506, -11.8364, 0.55 ) }
    dend_31 { pt3dadd( 83.5973, 10.6962, -11.7816, 0.28 ) }
    dend_31 { pt3dadd( 83.963, 10.0719, -11.7151, 0.55 ) }
    dend_31 { pt3dadd( 84.3068, 9.3037, -11.5773, 0.55 ) }
    dend_31 { pt3dadd( 84.5364, 8.80584, -11.4615, 0.28 ) }
    dend_31 { pt3dadd( 84.6196, 8.63254, -11.4114, 0.55 ) }
    dend_31 { pt3dadd( 84.8344, 8.20431, -11.2799, 0.28 ) }
    dend_31 { pt3dadd( 85.1262, 7.65184, -11.0935, 0.55 ) }
    dend_31 { pt3dadd( 85.8828, 6.3337, -10.6043, 0.55 ) }
    dend_31 { pt3dadd( 86.2756, 5.6743, -10.3417, 0.55 ) }
    dend_31 { pt3dadd( 86.6398, 5.07187, -10.0947, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 55.551, 18.9987, -11.5891, 0.55 ) }
    dend_30 { pt3dadd( 56.6928, 19.4231, -10.5918, 0.55 ) }
    dend_30 { pt3dadd( 57.0614, 19.5535, -10.2932, 0.55 ) }
    dend_30 { pt3dadd( 58.4465, 19.9601, -9.22962, 0.55 ) }
    dend_30 { pt3dadd( 59.9881, 20.4494, -8.02446, 0.55 ) }
    dend_30 { pt3dadd( 61.9581, 21.0831, -6.42332, 0.55 ) }
    dend_30 { pt3dadd( 62.5026, 21.258, -5.98506, 0.55 ) }
    dend_30 { pt3dadd( 63.4833, 21.5317, -5.20108, 0.55 ) }
    dend_30 { pt3dadd( 64.5614, 21.8484, -4.3898, 0.55 ) }
    dend_30 { pt3dadd( 65.819, 22.24, -3.51329, 0.55 ) }
    dend_30 { pt3dadd( 67.0024, 22.6267, -2.68635, 0.55 ) }
    dend_30 { pt3dadd( 67.6531, 22.8623, -2.2705, 0.55 ) }
    dend_30 { pt3dadd( 68.4155, 23.1607, -1.7882, 0.55 ) }
    dend_30 { pt3dadd( 69.3587, 23.5536, -1.21505, 0.83 ) }
    dend_30 { pt3dadd( 70.9226, 24.1603, -0.445504, 0.55 ) }
    dend_30 { pt3dadd( 71.9666, 24.5114, 0.0207405, 0.83 ) }
    dend_30 { pt3dadd( 73.4263, 24.9236, 0.630195, 0.55 ) }
    dend_30 { pt3dadd( 73.877, 25.025, 0.815652, 0.55 ) }
    dend_30 { pt3dadd( 75.2832, 25.2667, 1.37519, 0.55 ) }
    dend_30 { pt3dadd( 77.8207, 25.5326, 2.30472, 0.55 ) }
    dend_30 { pt3dadd( 79.6904, 25.6202, 2.96293, 0.55 ) }
    dend_30 { pt3dadd( 81.1713, 25.631, 3.53202, 0.55 ) }
    dend_30 { pt3dadd( 82.6809, 25.5767, 4.17919, 0.55 ) }
    dend_30 { pt3dadd( 82.9988, 25.5575, 4.31859, 0.28 ) }
    dend_30 { pt3dadd( 83.6454, 25.4937, 4.60474, 0.83 ) }
    dend_30 { pt3dadd( 86.3012, 25.198, 5.80259, 0.55 ) }
    dend_30 { pt3dadd( 88.1629, 24.9862, 6.60427, 0.55 ) }
    dend_30 { pt3dadd( 89.6842, 24.8564, 7.29299, 0.55 ) }
    dend_30 { pt3dadd( 90.5923, 24.778, 7.71372, 0.83 ) }
    dend_30 { pt3dadd( 91.3065, 24.7263, 8.04423, 0.28 ) }
    dend_30 { pt3dadd( 91.9549, 24.6793, 8.3377, 0.55 ) }
    dend_30 { pt3dadd( 96.8477, 25.6259, 11.1148, 0.55 ) }
    dend_30 { pt3dadd( 102.2, 25.6005, 13.1089, 0.55 ) }
    dend_30 { pt3dadd( 107.457, 26.2658, 15.2311, 0.55 ) }
    dend_30 { pt3dadd( 112.067, 26.3661, 18.6007, 0.55 ) }
    dend_30 { pt3dadd( 116.361, 25.7777, 22.3118, 0.55 ) }
    dend_30 { pt3dadd( 121.277, 24.1691, 24.6639, 0.55 ) }
    dend_30 { pt3dadd( 126.234, 21.8907, 26.1679, 0.55 ) }
    dend_30 { pt3dadd( 131.658, 20.5127, 27.2037, 0.55 ) }
    dend_30 { pt3dadd( 136.991, 19.1205, 28.6206, 0.55 ) }
    dend_30 { pt3dadd( 142.543, 18.2482, 29.5931, 0.55 ) }
    dend_30 { pt3dadd( 147.986, 17.7412, 31.2343, 0.55 ) }
    dend_30 { pt3dadd( 153.107, 16.3712, 33.3043, 0.55 ) }
    dend_30 { pt3dadd( 158.253, 16.0406, 35.7541, 0.55 ) }
    dend_30 { pt3dadd( 163.046, 16.6174, 38.8035, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -1.95516, -22.6276, 5.31049, 1.38 ) }
    dend_13 { pt3dadd( 0.435923, -25.6545, 3.99157, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -1.95516, -22.6276, 5.31049, 0.55 ) }
    dend_12 { pt3dadd( -3.26342, -24.3658, 4.87213, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -4.70145, -26.5837, 4.40287, 0.55 ) }
    dend_12 { pt3dadd( -5.83397, -28.0594, 4.03841, 0.55 ) }
    dend_12 { pt3dadd( -6.72395, -29.2991, 3.5746, 0.55 ) }
    dend_12 { pt3dadd( -8.5843, -31.8804, 2.35013, 0.55 ) }
    dend_12 { pt3dadd( -9.87395, -33.6097, 1.44487, 0.55 ) }
    dend_12 { pt3dadd( -10.999, -35.1615, 0.589114, 0.55 ) }
    dend_12 { pt3dadd( -13.8967, -38.9485, -1.61593, 0.55 ) }
    dend_12 { pt3dadd( -17.3972, -43.3405, -4.23977, 0.55 ) }
    dend_12 { pt3dadd( -20.0868, -46.673, -6.3316, 0.55 ) }
    dend_12 { pt3dadd( -21.7893, -48.8591, -7.69385, 0.55 ) }
    dend_12 { pt3dadd( -23.7422, -51.4757, -9.24432, 0.55 ) }
    dend_12 { pt3dadd( -26.2235, -55.205, -11.1515, 0.55 ) }
    dend_12 { pt3dadd( -27.6772, -57.8288, -12.2086, 0.55 ) }
    dend_12 { pt3dadd( -29.5339, -61.5762, -13.2964, 0.55 ) }
    dend_12 { pt3dadd( -31.0277, -65.0698, -14.0707, 0.55 ) }
    dend_12 { pt3dadd( -32.5259, -69.4083, -14.7842, 0.55 ) }
    dend_12 { pt3dadd( -33.9391, -74.48, -15.3387, 0.55 ) }
    dend_12 { pt3dadd( -34.6927, -78.3368, -15.5221, 0.55 ) }
    dend_12 { pt3dadd( -34.9925, -80.2458, -15.4404, 0.55 ) }
    dend_12 { pt3dadd( -35.5354, -84.7105, -14.9036, 0.55 ) }
    dend_12 { pt3dadd( -36.0152, -88.8806, -14.2651, 0.55 ) }
    dend_12 { pt3dadd( -36.4144, -93.0601, -13.2319, 0.55 ) }
    dend_12 { pt3dadd( -36.7211, -95.454, -12.5213, 0.55 ) }
    dend_12 { pt3dadd( -37.7364, -102.843, -10.0396, 0.55 ) }
    dend_12 { pt3dadd( -37.8186, -103.387, -9.84901, 0.55 ) }
    dend_12 { pt3dadd( -38.2939, -106.712, -8.57582, 0.55 ) }
    dend_12 { pt3dadd( -39.4737, -112.664, -6.27522, 0.55 ) }
    dend_12 { pt3dadd( -39.8312, -114.66, -5.62679, 0.55 ) }
    dend_12 { pt3dadd( -40.2475, -117.803, -5.1685, 0.55 ) }
    dend_12 { pt3dadd( -40.2647, -118.98, -5.24583, 0.55 ) }
    dend_12 { pt3dadd( -39.8523, -122.984, -6.15844, 0.55 ) }
    dend_12 { pt3dadd( -39.2279, -125.592, -7.21651, 0.55 ) }
    dend_12 { pt3dadd( -37.7894, -129.773, -9.66242, 0.55 ) }
    dend_12 { pt3dadd( -35.6768, -134.894, -12.9482, 0.28 ) }
    dend_12 { pt3dadd( -35.0682, -136.165, -13.9148, 0.55 ) }
    dend_12 { pt3dadd( -34.0729, -138.098, -15.538, 0.28 ) }
    dend_12 { pt3dadd( -33.9194, -138.391, -15.7982, 0.55 ) }
    dend_12 { pt3dadd( -33.1417, -139.985, -17.0985, 0.28 ) }
    dend_12 { pt3dadd( -32.9613, -140.524, -17.4372, 0.55 ) }
    dend_12 { pt3dadd( -32.2969, -143.306, -18.7107, 0.28 ) }
    dend_12 { pt3dadd( -32.1105, -144.253, -19.1472, 0.55 ) }
    dend_12 { pt3dadd( -31.6657, -146.99, -20.2746, 0.28 ) }
    dend_12 { pt3dadd( -31.5233, -147.851, -20.625, 0.55 ) }
    dend_12 { pt3dadd( -31.0743, -150.822, -21.7975, 0.28 ) }
    dend_12 { pt3dadd( -30.8582, -152.189, -22.3407, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -6.30172, -51.1192, 40.7793, 0.55 ) }
    dend_10 { pt3dadd( -9.02244, -56.4544, 46.7738, 0.55 ) }
    dend_10 { pt3dadd( -12.4599, -60.9865, 53.1156, 0.55 ) }
    dend_10 { pt3dadd( -15.7864, -66.0703, 59.0371, 0.55 ) }
    dend_10 { pt3dadd( -19.2817, -71.1625, 64.8491, 0.55 ) }
    dend_10 { pt3dadd( -22.0834, -77.2585, 69.9266, 0.55 ) }
    dend_10 { pt3dadd( -24.7111, -83.1115, 75.4038, 0.55 ) }
    dend_10 { pt3dadd( -26.7797, -90.3044, 79.0552, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -6.30172, -51.1192, 40.7793, 0.55 ) }
    dend_3 { pt3dadd( -5.4049, -59.1456, 49.2234, 0.55 ) }
    dend_3 { pt3dadd( -3.83777, -68.4033, 56.0064, 0.55 ) }
    dend_3 { pt3dadd( -4.18152, -77.8778, 62.642, 0.55 ) }
    dend_3 { pt3dadd( -5.10825, -87.9548, 68.1479, 0.55 ) }
    dend_3 { pt3dadd( -5.56784, -97.9532, 73.8627, 0.55 ) }
    dend_3 { pt3dadd( -6.00901, -107.533, 80.3229, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -54.547, 52.4702, -13.5694, 0.83 ) }
    dend_60 { pt3dadd( -54.0044, 53.8918, -15.4606, 0.83 ) }
    dend_60 { pt3dadd( -52.7933, 57.3577, -19.7029, 0.55 ) }
    dend_60 { pt3dadd( -52.2655, 58.8618, -21.3855, 0.83 ) }
    dend_60 { pt3dadd( -51.6914, 60.4783, -23.0563, 0.55 ) }
    dend_60 { pt3dadd( -51.0958, 62.1591, -24.4992, 0.55 ) }
    dend_60 { pt3dadd( -50.7863, 63.0107, -25.0984, 0.28 ) }
    dend_60 { pt3dadd( -50.6178, 63.5904, -25.3319, 0.55 ) }
    dend_60 { pt3dadd( -49.9803, 65.5469, -25.6532, 0.28 ) }
    dend_60 { pt3dadd( -49.684, 66.3839, -25.745, 0.55 ) }
    dend_60 { pt3dadd( -48.6891, 69.3065, -25.9329, 0.28 ) }
    dend_60 { pt3dadd( -47.9631, 71.6359, -25.9944, 0.55 ) }
    dend_60 { pt3dadd( -47.013, 75.3044, -25.9625, 0.28 ) }
    dend_60 { pt3dadd( -46.2963, 78.5478, -25.8644, 0.28 ) }
    dend_60 { pt3dadd( -46.0051, 80.3791, -25.7685, 0.55 ) }
    dend_60 { pt3dadd( -45.7996, 82.5672, -25.6496, 0.28 ) }
    dend_60 { pt3dadd( -45.7725, 83.6207, -25.5753, 0.55 ) }
    dend_60 { pt3dadd( -45.8514, 86.108, -25.5133, 0.28 ) }
    dend_60 { pt3dadd( -46.0197, 87.7736, -25.5585, 0.28 ) }
    dend_60 { pt3dadd( -46.222, 89.4104, -25.6534, 0.28 ) }
    dend_60 { pt3dadd( -46.2953, 90.2712, -25.708, 0.55 ) }
    dend_60 { pt3dadd( -46.4033, 93.7275, -26.0193, 0.28 ) }
    dend_60 { pt3dadd( -46.3934, 97.8014, -26.4705, 0.55 ) }
    dend_60 { pt3dadd( -46.3688, 99.2058, -26.6327, 0.55 ) }
    dend_60 { pt3dadd( -46.3665, 100.618, -26.7628, 0.55 ) }
    dend_60 { pt3dadd( -46.5275, 103.634, -27.0858, 0.55 ) }
    dend_60 { pt3dadd( -46.7655, 105.624, -27.3386, 0.28 ) }
    dend_60 { pt3dadd( -46.9452, 106.387, -27.4423, 0.55 ) }
    dend_60 { pt3dadd( -47.5774, 108.469, -27.6741, 0.28 ) }
    dend_60 { pt3dadd( -48.3439, 110.689, -28.0076, 0.55 ) }
    dend_60 { pt3dadd( -49.7471, 113.905, -28.6047, 0.28 ) }
    dend_60 { pt3dadd( -50.4787, 115.259, -28.8937, 0.28 ) }
    dend_60 { pt3dadd( -51.7398, 117.154, -29.4772, 0.55 ) }
    dend_60 { pt3dadd( -53.1857, 119.136, -30.1849, 0.28 ) }
    dend_60 { pt3dadd( -53.4587, 119.451, -30.3101, 0.55 ) }
    dend_60 { pt3dadd( -54.467, 120.465, -30.746, 0.28 ) }
    dend_60 { pt3dadd( -57.9872, 123.742, -32.1584, 0.55 ) }
    dend_60 { pt3dadd( -62.9826, 127.826, -34.2999, 0.28 ) }
    dend_60 { pt3dadd( -63.9202, 128.516, -34.7529, 0.55 ) }
    dend_60 { pt3dadd( -66.5162, 130.306, -36.0369, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -67.6107, 131.04, -36.6072, 0.28 ) }
    dend_60 { pt3dadd( -68.569, 131.65, -37.1505, 0.55 ) }
    dend_60 { pt3dadd( -71.4501, 133.085, -38.9495, 0.28 ) }
    dend_60 { pt3dadd( -73.521, 133.9, -40.1212, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -54.547, 52.4702, -13.5694, 0.55 ) }
    dend_57 { pt3dadd( -54.6357, 53.9746, -13.5782, 0.55 ) }
    dend_57 { pt3dadd( -54.7234, 54.8533, -13.5022, 0.28 ) }
    dend_57 { pt3dadd( -54.9385, 55.4704, -13.3075, 0.55 ) }
    dend_57 { pt3dadd( -55.4324, 56.8874, -12.8603, 0.28 ) }
    dend_57 { pt3dadd( -55.7793, 57.8828, -12.5461, 0.55 ) }
    dend_57 { pt3dadd( -56.4188, 59.7177, -11.967, 0.28 ) }
    dend_57 { pt3dadd( -56.8922, 60.6851, -11.4916, 0.55 ) }
    dend_57 { pt3dadd( -58.8807, 62.9261, -9.58883, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -107.662, 2.37592, 10.1329, 0.55 ) }
    dend_52 { pt3dadd( -112.924, -5.15259, 8.77511, 0.55 ) }
    dend_52 { pt3dadd( -116.64, -13.4068, 7.0071, 0.55 ) }
    dend_52 { pt3dadd( -119.534, -21.383, 3.2757, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -107.662, 2.37592, 10.1329, 0.55 ) }
    dend_49 { pt3dadd( -113.765, -4.81104, 6.39574, 0.55 ) }
    dend_49 { pt3dadd( -118.853, -12.0896, 1.51517, 0.55 ) }
    dend_49 { pt3dadd( -123.523, -19.497, -3.56472, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -154.83, 26.4009, 51.9028, 0.55 ) }
    dend_47 { pt3dadd( -164.874, 27.5044, 58.9378, 0.55 ) }
    dend_47 { pt3dadd( -175.664, 29.6168, 64.4512, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -154.83, 26.4009, 51.9028, 0.55 ) }
    dend_46 { pt3dadd( -163.301, 25.4732, 55.3336, 0.55 ) }
    dend_46 { pt3dadd( -171.898, 25.9686, 58.547, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 87.617, -33.839, -102.269, 0.28 ) }
    dend_39 { pt3dadd( 94.2973, -37.0214, -115.975, 0.28 ) }
    dend_39 { pt3dadd( 94.9651, -37.4085, -117.206, 0.55 ) }
    dend_39 { pt3dadd( 96.0925, -38.0621, -119.285, 0.28 ) }
    dend_39 { pt3dadd( 97.0417, -38.6125, -121.036, 0.28 ) }
    dend_39 { pt3dadd( 98.2983, -39.341, -123.352, 0.55 ) }
    dend_39 { pt3dadd( 99.9551, -40.3015, -126.407, 0.55 ) }
    dend_39 { pt3dadd( 102.287, -42.2317, -128.178, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 87.617, -33.839, -102.269, 0.55 ) }
    dend_36 { pt3dadd( 88.1862, -34.8305, -104.097, 0.55 ) }
    dend_36 { pt3dadd( 88.3235, -35.2483, -104.912, 0.28 ) }
    dend_36 { pt3dadd( 88.5023, -35.9428, -106.332, 0.55 ) }
    dend_36 { pt3dadd( 88.8961, -37.4726, -109.46, 0.28 ) }
    dend_36 { pt3dadd( 89.169, -38.5328, -111.628, 0.55 ) }
    dend_36 { pt3dadd( 89.6314, -40.329, -115.301, 0.28 ) }
    dend_36 { pt3dadd( 90.1188, -42.4115, -120.059, 0.28 ) }
    dend_36 { pt3dadd( 90.2768, -43.3419, -122.279, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 86.6398, 5.07187, -10.0947, 0.28 ) }
    dend_33 { pt3dadd( 88.9503, 2.63571, -8.03385, 0.28 ) }
    dend_33 { pt3dadd( 91.8198, -0.474796, -4.98291, 0.28 ) }
    dend_33 { pt3dadd( 93.6181, -2.45951, -2.89938, 0.55 ) }
    dend_33 { pt3dadd( 94.6995, -3.51943, -1.66319, 0.28 ) }
    dend_33 { pt3dadd( 95.2726, -4.08805, -0.990773, 0.28 ) }
    dend_33 { pt3dadd( 98.1239, -6.91644, 2.26868, 0.55 ) }
    dend_33 { pt3dadd( 98.7666, -7.50135, 3.11252, 0.28 ) }
    dend_33 { pt3dadd( 100.249, -9.00495, 5.47155, 0.55 ) }
    dend_33 { pt3dadd( 101.523, -10.3454, 7.43433, 0.28 ) }
    dend_33 { pt3dadd( 102.647, -11.4386, 9.00858, 0.55 ) }
    dend_33 { pt3dadd( 103.98, -12.794, 10.7641, 0.55 ) }
    dend_33 { pt3dadd( 106.155, -15.0899, 13.1571, 0.55 ) }
    dend_33 { pt3dadd( 106.682, -15.6644, 13.7152, 0.55 ) }
    dend_33 { pt3dadd( 108.57, -17.8298, 15.7561, 0.28 ) }
    dend_33 { pt3dadd( 109.302, -18.7301, 16.5536, 0.55 ) }
    dend_33 { pt3dadd( 110.331, -19.8729, 17.5784, 0.28 ) }
    dend_33 { pt3dadd( 111.796, -21.5316, 18.9349, 0.55 ) }
    dend_33 { pt3dadd( 114.295, -24.311, 20.6021, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 86.6398, 5.07187, -10.0947, 0.55 ) }
    dend_32 { pt3dadd( 83.2292, 4.97459, -10.635, 0.55 ) }
    dend_32 { pt3dadd( 80.4595, 4.89559, -11.0737, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 0.435923, -25.6545, 3.99157, 0.83 ) }
    dend_17 { pt3dadd( 0.507136, -25.8289, 3.96122, 0.83 ) }
    dend_17 { pt3dadd( 1.38708, -27.3875, 3.74956, 0.83 ) }
    dend_17 { pt3dadd( 2.14236, -28.7511, 3.47221, 0.55 ) }
    dend_17 { pt3dadd( 2.74491, -29.8389, 3.25094, 0.55 ) }
    dend_17 { pt3dadd( 4.02565, -32.1511, 2.78063, 0.83 ) }
    dend_17 { pt3dadd( 5.5791, -34.9557, 2.21017, 0.55 ) }
    dend_17 { pt3dadd( 6.43647, -36.4263, 1.93426, 0.83 ) }
    dend_17 { pt3dadd( 7.99307, -38.7775, 1.57068, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 0.435923, -25.6545, 3.99157, 0.55 ) }
    dend_14 { pt3dadd( -1.21519, -26.512, 1.34425, 0.55 ) }
    dend_14 { pt3dadd( -2.98746, -27.4324, -1.49733, 0.55 ) }
    dend_14 { pt3dadd( -5.07963, -28.5189, -4.85184, 0.55 ) }
    dend_14 { pt3dadd( -7.62021, -29.8383, -8.9253, 0.55 ) }
    dend_14 { pt3dadd( -9.0619, -30.587, -11.2368, 0.55 ) }
    dend_14 { pt3dadd( -9.35152, -30.7374, -11.7012, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -6.00901, -107.533, 80.3229, 0.55 ) }
    dend_7 { pt3dadd( -5.60183, -115.703, 86.7061, 0.55 ) }
    dend_7 { pt3dadd( -3.61624, -124.273, 92.1279, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -6.00901, -107.533, 80.3229, 0.55 ) }
    dend_4 { pt3dadd( -6.06575, -116.181, 85.7616, 0.55 ) }
    dend_4 { pt3dadd( -6.68966, -124.72, 91.3717, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -58.8807, 62.9261, -9.58883, 0.28 ) }
    dend_59 { pt3dadd( -60.202, 64.283, -8.04756, 0.28 ) }
    dend_59 { pt3dadd( -60.7073, 64.7884, -7.39154, 0.55 ) }
    dend_59 { pt3dadd( -62.1557, 66.2469, -5.45146, 0.28 ) }
    dend_59 { pt3dadd( -62.8671, 66.9807, -4.58157, 0.55 ) }
    dend_59 { pt3dadd( -64.8029, 68.9786, -2.31436, 0.28 ) }
    dend_59 { pt3dadd( -66.7703, 71.0092, -0.0100367, 0.55 ) }
    dend_59 { pt3dadd( -70.0469, 74.1721, 3.81464, 0.28 ) }
    dend_59 { pt3dadd( -70.7439, 74.8518, 4.63071, 0.55 ) }
    dend_59 { pt3dadd( -72.2612, 76.4608, 6.37388, 0.28 ) }
    dend_59 { pt3dadd( -72.849, 77.1301, 7.06384, 0.55 ) }
    dend_59 { pt3dadd( -79.6296, 81.6156, 12.637, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -86.7625, 87.4023, 16.0461, 0.55 ) }
    dend_59 { pt3dadd( -92.9966, 93.2175, 20.8513, 0.55 ) }
    dend_59 { pt3dadd( -97.8332, 100.083, 25.7197, 0.55 ) }
    dend_59 { pt3dadd( -103.646, 106.742, 29.7907, 0.55 ) }
    dend_59 { pt3dadd( -110.488, 111.942, 34.5515, 0.55 ) }
    dend_59 { pt3dadd( -116.902, 116.228, 40.6968, 0.55 ) }
    dend_59 { pt3dadd( -122.627, 119.369, 48.1393, 0.55 ) }
    dend_59 { pt3dadd( -128.295, 123.077, 55.3349, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -58.8807, 62.9261, -9.58883, 0.55 ) }
    dend_58 { pt3dadd( -62.1688, 61.978, -8.97229, 0.55 ) }
    dend_58 { pt3dadd( -63.8794, 61.4349, -8.66316, 0.28 ) }
    dend_58 { pt3dadd( -65.1524, 61.0307, -8.43311, 0.55 ) }
    dend_58 { pt3dadd( -66.2133, 60.6939, -8.24137, 0.28 ) }
    dend_58 { pt3dadd( -66.9565, 60.4579, -8.10708, 0.55 ) }
    dend_58 { pt3dadd( -69.0056, 59.8074, -7.73675, 0.28 ) }
    dend_58 { pt3dadd( -70.3471, 59.2956, -7.66746, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -119.534, -21.383, 3.2757, 0.55 ) }
    dend_54 { pt3dadd( -123.116, -30.2126, 2.6302, 0.55 ) }
    dend_54 { pt3dadd( -126.404, -39.15, 3.06991, 0.55 ) }
    dend_54 { pt3dadd( -129.089, -48.1913, 1.70115, 0.55 ) }
    dend_54 { pt3dadd( -132.672, -57.0383, 1.70487, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -119.534, -21.383, 3.2757, 0.55 ) }
    dend_53 { pt3dadd( -124.977, -26.5947, -4.16717, 0.55 ) }
    dend_53 { pt3dadd( -130.127, -30.4375, -12.6649, 0.55 ) }
    dend_53 { pt3dadd( -135.942, -35.4899, -19.9482, 0.55 ) }
    dend_53 { pt3dadd( -143.84, -39.0999, -26.1518, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -123.523, -19.497, -3.56472, 0.55 ) }
    dend_51 { pt3dadd( -128.102, -22.0372, -9.5004, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -123.523, -19.497, -3.56472, 0.55 ) }
    dend_50 { pt3dadd( -127.036, -28.9307, -4.37725, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 102.287, -42.2317, -128.178, 0.28 ) }
    dend_41 { pt3dadd( 105.881, -43.1906, -130.744, 0.28 ) }
    dend_41 { pt3dadd( 107.55, -43.636, -131.936, 0.55 ) }
    dend_41 { pt3dadd( 110.734, -44.4853, -134.209, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 102.287, -42.2317, -128.178, 0.55 ) }
    dend_40 { pt3dadd( 101.882, -43.197, -129.287, 0.55 ) }
    dend_40 { pt3dadd( 101.073, -45.1278, -131.506, 0.28 ) }
    dend_40 { pt3dadd( 100.809, -45.7568, -132.229, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 90.2768, -43.3419, -122.279, 0.28 ) }
    dend_38 { pt3dadd( 90.8577, -45.116, -127.237, 0.28 ) }
    dend_38 { pt3dadd( 91.1454, -45.9944, -129.692, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 90.2768, -43.3419, -122.279, 0.55 ) }
    dend_37 { pt3dadd( 88.0567, -43.5185, -121.834, 0.55 ) }
    dend_37 { pt3dadd( 81.8662, -44.0111, -120.59, 0.28 ) }
    dend_37 { pt3dadd( 80.3956, -44.1282, -120.295, 0.55 ) }
    dend_37 { pt3dadd( 76.3727, -44.4483, -119.487, 0.28 ) }
    dend_37 { pt3dadd( 73.7796, -44.6546, -118.967, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 7.99307, -38.7775, 1.57068, 0.83 ) }
    dend_23 { pt3dadd( 8.02026, -39.1123, 1.51085, 0.83 ) }
    dend_23 { pt3dadd( 8.44374, -43.5005, 0.857467, 0.83 ) }
    dend_23 { pt3dadd( 8.45722, -46.7861, 0.585318, 0.83 ) }
    dend_23 { pt3dadd( 8.23052, -49.9632, 0.665498, 0.83 ) }
    dend_23 { pt3dadd( 7.76641, -54.1985, 1.10663, 0.83 ) }
    dend_23 { pt3dadd( 7.08716, -59.08, 1.80274, 0.83 ) }
    dend_23 { pt3dadd( 6.34892, -64.543, 2.88117, 0.83 ) }
    dend_23 { pt3dadd( 5.62974, -69.8598, 4.18611, 0.83 ) }
    dend_23 { pt3dadd( 4.30291, -76.3632, 5.6238, 0.83 ) }
    dend_23 { pt3dadd( 3.52286, -79.3373, 6.10326, 0.83 ) }
    dend_23 { pt3dadd( 2.92912, -81.5678, 6.31428, 0.83 ) }
    dend_23 { pt3dadd( 1.69475, -85.8396, 6.62159, 0.83 ) }
    dend_23 { pt3dadd( 0.687964, -89.6611, 6.67302, 0.83 ) }
    dend_23 { pt3dadd( -0.97381, -97.7927, 5.81878, 0.83 ) }
    dend_23 { pt3dadd( -1.81879, -102.219, 4.73239, 0.83 ) }
    dend_23 { pt3dadd( -2.5958, -106.284, 3.41141, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 7.99307, -38.7775, 1.57068, 0.55 ) }
    dend_18 { pt3dadd( 6.64205, -41.3246, 1.78809, 0.55 ) }
    dend_18 { pt3dadd( 5.64464, -43.1726, 2.09834, 0.55 ) }
    dend_18 { pt3dadd( 5.05111, -44.3563, 2.4226, 0.55 ) }
    dend_18 { pt3dadd( 4.23281, -46.2142, 3.11724, 0.55 ) }
    dend_18 { pt3dadd( 2.73582, -49.8988, 4.73972, 0.55 ) }
    dend_18 { pt3dadd( 1.60445, -52.6874, 6.30012, 0.55 ) }
    dend_18 { pt3dadd( 0.720553, -54.9235, 7.80754, 0.55 ) }
    dend_18 { pt3dadd( -0.217369, -57.1796, 9.50714, 0.55 ) }
    dend_18 { pt3dadd( -1.00353, -59.05, 11.0234, 0.28 ) }
    dend_18 { pt3dadd( -1.65006, -60.5778, 12.5055, 0.55 ) }
    dend_18 { pt3dadd( -2.86158, -63.3554, 15.6296, 0.55 ) }
    dend_18 { pt3dadd( -3.68859, -65.0534, 17.7516, 0.55 ) }
    dend_18 { pt3dadd( -4.16414, -66.004, 18.931, 0.55 ) }
    dend_18 { pt3dadd( -4.79174, -67.122, 20.2632, 0.83 ) }
    dend_18 { pt3dadd( -6.70477, -70.4352, 23.9741, 0.28 ) }
    dend_18 { pt3dadd( -7.33937, -71.5317, 25.1694, 0.55 ) }
    dend_18 { pt3dadd( -8.42346, -73.5145, 27.2513, 0.28 ) }
    dend_18 { pt3dadd( -8.75306, -74.1258, 27.9417, 0.55 ) }
    dend_18 { pt3dadd( -9.44227, -75.5658, 29.5248, 0.28 ) }
    dend_18 { pt3dadd( -9.83359, -76.3848, 30.359, 0.55 ) }
    dend_18 { pt3dadd( -11.3505, -79.0397, 32.3072, 0.55 ) }
    dend_18 { pt3dadd( -13.2311, -86.3005, 40.4566, 0.55 ) }
    dend_18 { pt3dadd( -14.5208, -93.243, 49.0208, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -9.35152, -30.7374, -11.7012, 0.55 ) }
    dend_16 { pt3dadd( -11.3954, -31.6656, -15.0729, 0.55 ) }
    dend_16 { pt3dadd( -12.0034, -31.875, -16.0319, 0.55 ) }
    dend_16 { pt3dadd( -13.5519, -32.3986, -18.3652, 0.55 ) }
    dend_16 { pt3dadd( -16.9811, -33.4111, -23.2932, 0.28 ) }
    dend_16 { pt3dadd( -17.5015, -33.546, -23.987, 0.55 ) }
    dend_16 { pt3dadd( -19.7076, -34.178, -26.7763, 0.55 ) }
    dend_16 { pt3dadd( -22.8245, -35.0349, -30.2482, 0.55 ) }
    dend_16 { pt3dadd( -24.0225, -35.3194, -31.5441, 0.28 ) }
    dend_16 { pt3dadd( -25.0839, -35.4867, -32.6127, 0.28 ) }
    dend_16 { pt3dadd( -26.9652, -35.7248, -34.1639, 0.55 ) }
    dend_16 { pt3dadd( -29.2278, -35.9045, -36.1511, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -31.2898, -35.8814, -38.0421, 0.55 ) }
    dend_16 { pt3dadd( -32.8813, -35.7201, -39.473, 0.55 ) }
    dend_16 { pt3dadd( -33.9599, -35.511, -40.4988, 0.55 ) }
    dend_16 { pt3dadd( -37.0898, -34.7427, -43.6234, 0.55 ) }
    dend_16 { pt3dadd( -40.3826, -33.683, -46.8459, 0.55 ) }
    dend_16 { pt3dadd( -41.7461, -33.1606, -48.1403, 0.28 ) }
    dend_16 { pt3dadd( -43.0367, -32.6879, -49.397, 0.55 ) }
    dend_16 { pt3dadd( -45.679, -31.9165, -51.9122, 0.28 ) }
    dend_16 { pt3dadd( -46.5731, -31.6849, -52.7479, 0.83 ) }
    dend_16 { pt3dadd( -48.2738, -31.2272, -54.1811, 0.28 ) }
    dend_16 { pt3dadd( -49.5514, -30.992, -55.0348, 0.55 ) }
    dend_16 { pt3dadd( -51.4222, -30.7165, -56.2334, 0.28 ) }
    dend_16 { pt3dadd( -52.1728, -30.5963, -56.685, 0.55 ) }
    dend_16 { pt3dadd( -53.5848, -30.3981, -57.4431, 0.55 ) }
    dend_16 { pt3dadd( -55.7199, -29.8829, -58.5082, 0.55 ) }
    dend_16 { pt3dadd( -57.126, -29.4581, -59.1245, 0.28 ) }
    dend_16 { pt3dadd( -58.2681, -28.9746, -59.5312, 0.55 ) }
    dend_16 { pt3dadd( -59.5986, -28.2429, -60.0196, 0.28 ) }
    dend_16 { pt3dadd( -59.8144, -28.1054, -60.108, 0.55 ) }
    dend_16 { pt3dadd( -61.7268, -26.7997, -61.2863, 0.28 ) }
    dend_16 { pt3dadd( -63.0784, -25.8267, -62.3035, 0.55 ) }
    dend_16 { pt3dadd( -64.7919, -24.4229, -63.9237, 0.83 ) }
    dend_16 { pt3dadd( -66.1607, -23.2347, -65.4441, 0.28 ) }
    dend_16 { pt3dadd( -66.5053, -22.9316, -65.8789, 0.55 ) }
    dend_16 { pt3dadd( -69.1134, -20.6586, -69.3958, 0.28 ) }
    dend_16 { pt3dadd( -69.5581, -20.2713, -70.0677, 0.55 ) }
    dend_16 { pt3dadd( -70.8364, -19.0208, -72.1592, 0.28 ) }
    dend_16 { pt3dadd( -71.1657, -18.6992, -72.7023, 0.55 ) }
    dend_16 { pt3dadd( -72.0277, -17.8609, -74.0189, 0.28 ) }
    dend_16 { pt3dadd( -72.6492, -17.257, -74.901, 0.55 ) }
    dend_16 { pt3dadd( -74.0997, -15.9017, -76.6013, 0.28 ) }
    dend_16 { pt3dadd( -74.9781, -15.1686, -77.5687, 0.55 ) }
    dend_16 { pt3dadd( -76.8957, -13.7387, -79.5093, 0.28 ) }
    dend_16 { pt3dadd( -77.4733, -13.3484, -80.0761, 0.55 ) }
    dend_16 { pt3dadd( -78.3964, -12.8149, -80.9247, 0.28 ) }
    dend_16 { pt3dadd( -79.1886, -12.3643, -81.5994, 0.55 ) }
    dend_16 { pt3dadd( -80.862, -11.4502, -82.887, 0.28 ) }
    dend_16 { pt3dadd( -81.3714, -11.1868, -83.2561, 0.55 ) }
    dend_16 { pt3dadd( -85.1912, -9.14568, -85.8027, 0.28 ) }
    dend_16 { pt3dadd( -86.5474, -8.32645, -86.5677, 0.55 ) }
    dend_16 { pt3dadd( -88.9881, -6.73958, -87.7642, 0.28 ) }
    dend_16 { pt3dadd( -90.0907, -5.97833, -88.2672, 0.55 ) }
    dend_16 { pt3dadd( -92.6508, -4.2485, -89.2626, 0.28 ) }
    dend_16 { pt3dadd( -93.6035, -3.65547, -89.5832, 0.55 ) }
    dend_16 { pt3dadd( -97.1195, -1.81919, -90.5413, 0.28 ) }
    dend_16 { pt3dadd( -98.6079, -1.23577, -90.9238, 0.55 ) }
    dend_16 { pt3dadd( -100.773, -0.744164, -91.4387, 0.55 ) }
    dend_16 { pt3dadd( -102.12, -0.522467, -91.7217, 0.55 ) }
    dend_16 { pt3dadd( -104.906, -0.134397, -92.0852, 0.28 ) }
    dend_16 { pt3dadd( -107.674, 0.224493, -92.2705, 0.28 ) }
    dend_16 { pt3dadd( -109.989, 0.532423, -92.3585, 0.55 ) }
    dend_16 { pt3dadd( -112.829, 1.1413, -92.1634, 0.28 ) }
    dend_16 { pt3dadd( -114.234, 1.60793, -91.8827, 0.55 ) }
    dend_16 { pt3dadd( -117.544, 3.22383, -90.8894, 0.28 ) }
    dend_16 { pt3dadd( -119.228, 4.37705, -89.972, 0.55 ) }
    dend_16 { pt3dadd( -120.298, 5.28793, -89.1357, 0.28 ) }
    dend_16 { pt3dadd( -121.491, 6.31657, -87.8877, 0.55 ) }
    dend_16 { pt3dadd( -122.968, 7.65897, -86.1311, 0.28 ) }
    dend_16 { pt3dadd( -123.534, 8.13541, -85.4723, 0.55 ) }
    dend_16 { pt3dadd( -126.545, 10.3055, -82.4437, 0.28 ) }
    dend_16 { pt3dadd( -127.569, 10.9952, -81.4338, 0.55 ) }
    dend_16 { pt3dadd( -130.012, 12.5371, -78.9641, 0.28 ) }
    dend_16 { pt3dadd( -131.341, 13.358, -77.623, 0.55 ) }
    dend_16 { pt3dadd( -132.436, 14.0308, -76.5229, 0.55 ) }
    dend_16 { pt3dadd( -133.75, 14.8244, -75.2461, 0.28 ) }
    dend_16 { pt3dadd( -134.452, 15.2295, -74.7053, 0.55 ) }
    dend_16 { pt3dadd( -136.812, 16.6658, -73.0475, 0.28 ) }
    dend_16 { pt3dadd( -138.024, 17.5622, -72.1538, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -9.35152, -30.7374, -11.7012, 0.55 ) }
    dend_15 { pt3dadd( -8.86654, -30.914, -12.3745, 0.55 ) }
    dend_15 { pt3dadd( -8.34616, -31.0076, -13.0388, 0.55 ) }
    dend_15 { pt3dadd( -7.64679, -31.0612, -13.8335, 0.55 ) }
    dend_15 { pt3dadd( -7.04123, -31.0451, -14.4566, 0.55 ) }
    dend_15 { pt3dadd( -2.71845, -30.4433, -18.245, 0.55 ) }
    dend_15 { pt3dadd( -1.73058, -30.1821, -19.1129, 0.55 ) }
    dend_15 { pt3dadd( -0.270391, -29.6768, -20.4259, 0.55 ) }
    dend_15 { pt3dadd( 0.765273, -29.2801, -21.3621, 0.55 ) }
    dend_15 { pt3dadd( 1.79577, -28.8289, -22.251, 0.28 ) }
    dend_15 { pt3dadd( 3.43602, -28.0403, -23.5401, 0.55 ) }
    dend_15 { pt3dadd( 5.95569, -26.7927, -25.3253, 0.28 ) }
    dend_15 { pt3dadd( 6.14629, -26.7269, -25.5346, 0.55 ) }
    dend_15 { pt3dadd( 7.02847, -26.5822, -27.2082, 0.28 ) }
    dend_15 { pt3dadd( 7.42639, -26.5396, -28.4318, 0.55 ) }
    dend_15 { pt3dadd( 7.72384, -26.5726, -29.7962, 0.55 ) }
    dend_15 { pt3dadd( 8.2103, -26.7475, -32.2544, 0.55 ) }
    dend_15 { pt3dadd( 9.17423, -27.1245, -37.0751, 0.55 ) }
    dend_15 { pt3dadd( 9.8747, -27.4158, -40.2992, 0.55 ) }
    dend_15 { pt3dadd( 10.1447, -27.5289, -41.4046, 0.55 ) }
    dend_15 { pt3dadd( 12.0968, -28.2336, -48.6239, 0.55 ) }
    dend_15 { pt3dadd( 12.7104, -28.4047, -50.5548, 0.55 ) }
    dend_15 { pt3dadd( 13.1357, -28.5087, -51.6111, 0.55 ) }
    dend_15 { pt3dadd( 14.3345, -28.8321, -53.9835, 0.55 ) }
    dend_15 { pt3dadd( 17.5104, -29.9379, -59.4967, 0.55 ) }
    dend_15 { pt3dadd( 18.4225, -30.3059, -60.9423, 0.28 ) }
    dend_15 { pt3dadd( 19.0002, -30.5606, -61.7233, 0.55 ) }
    dend_15 { pt3dadd( 19.8725, -30.9943, -62.8627, 0.28 ) }
    dend_15 { pt3dadd( 20.2604, -31.23, -63.3009, 0.55 ) }
    dend_15 { pt3dadd( 21.6837, -32.192, -64.2549, 0.28 ) }
    dend_15 { pt3dadd( 22.8168, -33.3325, -64.2236, 0.55 ) }
    dend_15 { pt3dadd( 23.4781, -34.1231, -64.1485, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 24.0593, -34.9724, -63.9847, 0.55 ) }
    dend_15 { pt3dadd( 24.5407, -35.876, -63.7767, 0.28 ) }
    dend_15 { pt3dadd( 24.7402, -36.3361, -63.6939, 0.55 ) }
    dend_15 { pt3dadd( 25.1785, -37.5287, -63.4416, 0.28 ) }
    dend_15 { pt3dadd( 25.2901, -37.8842, -63.4271, 0.55 ) }
    dend_15 { pt3dadd( 25.9349, -39.9262, -63.4615, 0.28 ) }
    dend_15 { pt3dadd( 26.275, -40.8792, -63.5978, 0.55 ) }
    dend_15 { pt3dadd( 27.1033, -42.9331, -64.1109, 0.28 ) }
    dend_15 { pt3dadd( 27.45, -43.6966, -64.3806, 0.55 ) }
    dend_15 { pt3dadd( 28.7045, -46.2208, -65.4067, 0.28 ) }
    dend_15 { pt3dadd( 29.0165, -46.8359, -65.6817, 0.55 ) }
    dend_15 { pt3dadd( 29.9591, -48.781, -66.6282, 0.28 ) }
    dend_15 { pt3dadd( 30.1497, -49.2325, -66.8185, 0.55 ) }
    dend_15 { pt3dadd( 30.6129, -50.421, -67.3154, 0.28 ) }
    dend_15 { pt3dadd( 30.8959, -51.114, -67.67, 0.55 ) }
    dend_15 { pt3dadd( 31.2035, -51.7992, -68.0696, 0.55 ) }
    dend_15 { pt3dadd( 31.8169, -53.1662, -68.8564, 0.28 ) }
    dend_15 { pt3dadd( 32.2856, -54.0243, -69.4316, 0.55 ) }
    dend_15 { pt3dadd( 33.9231, -56.2311, -71.3019, 0.28 ) }
    dend_15 { pt3dadd( 34.5938, -56.9669, -72.0674, 0.55 ) }
    dend_15 { pt3dadd( 35.0714, -57.4405, -72.5848, 0.28 ) }
    dend_15 { pt3dadd( 35.5715, -57.8809, -73.0998, 0.55 ) }
    dend_15 { pt3dadd( 37.1592, -59.1377, -74.652, 0.28 ) }
    dend_15 { pt3dadd( 38.3673, -60.1083, -75.7885, 0.55 ) }
    dend_15 { pt3dadd( 40.4318, -61.9176, -77.5397, 0.28 ) }
    dend_15 { pt3dadd( 41.0843, -62.4817, -78.0874, 0.55 ) }
    dend_15 { pt3dadd( 42.3653, -63.5259, -79.0132, 0.28 ) }
    dend_15 { pt3dadd( 42.7987, -63.8691, -79.2827, 0.55 ) }
    dend_15 { pt3dadd( 43.5192, -64.4177, -79.5794, 0.28 ) }
    dend_15 { pt3dadd( 44.1629, -64.8834, -79.7821, 0.55 ) }
    dend_15 { pt3dadd( 45.9356, -66.0547, -80.1394, 0.28 ) }
    dend_15 { pt3dadd( 47.987, -67.3172, -80.5153, 0.28 ) }
    dend_15 { pt3dadd( 49.0363, -67.9096, -80.6292, 0.28 ) }
    dend_15 { pt3dadd( 50.0995, -68.4766, -80.8111, 0.55 ) }
    dend_15 { pt3dadd( 51.6667, -69.2372, -81.0848, 0.28 ) }
    dend_15 { pt3dadd( 52.3661, -69.5652, -81.1915, 0.83 ) }
    dend_15 { pt3dadd( 54.1467, -70.4226, -81.3931, 0.28 ) }
    dend_15 { pt3dadd( 54.9153, -70.812, -81.5245, 0.55 ) }
    dend_15 { pt3dadd( 58.2661, -72.6484, -82.2617, 0.28 ) }
    dend_15 { pt3dadd( 59.9336, -73.5881, -82.7699, 0.28 ) }
    dend_15 { pt3dadd( 61.1424, -74.2728, -83.2223, 0.55 ) }
    dend_15 { pt3dadd( 61.8388, -74.6873, -83.5687, 0.55 ) }
    dend_15 { pt3dadd( 63.6702, -75.814, -84.6419, 0.28 ) }
    dend_15 { pt3dadd( 65.3596, -76.9447, -85.718, 0.55 ) }
    dend_15 { pt3dadd( 66.8879, -78.0224, -86.6973, 0.28 ) }
    dend_15 { pt3dadd( 68.258, -79.0181, -87.6621, 0.55 ) }
    dend_15 { pt3dadd( 69.3945, -79.8273, -88.4525, 0.28 ) }
    dend_15 { pt3dadd( 70.3452, -80.4211, -89.0459, 0.55 ) }
    dend_15 { pt3dadd( 72.6787, -81.7233, -90.3665, 0.28 ) }
    dend_15 { pt3dadd( 73.8674, -82.3811, -90.9844, 0.55 ) }
    dend_15 { pt3dadd( 75.6588, -83.3731, -91.8431, 0.28 ) }
    dend_15 { pt3dadd( 77.1371, -84.1433, -92.5109, 0.55 ) }
    dend_15 { pt3dadd( 80.6274, -85.799, -94.0824, 0.28 ) }
    dend_15 { pt3dadd( 82.0553, -86.397, -94.8225, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -3.61624, -124.273, 92.1279, 0.55 ) }
    dend_9 { pt3dadd( -3.18846, -133.591, 96.7978, 0.55 ) }
    dend_9 { pt3dadd( -1.91019, -143.653, 98.9606, 0.55 ) }
    dend_9 { pt3dadd( -1.151, -153.353, 102.633, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -3.61624, -124.273, 92.1279, 0.55 ) }
    dend_8 { pt3dadd( -2.26836, -131.85, 98.0018, 0.55 ) }
    dend_8 { pt3dadd( -2.22518, -138.335, 105.293, 0.55 ) }
    dend_8 { pt3dadd( -2.1312, -143.256, 113.831, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -6.68966, -124.72, 91.3717, 0.55 ) }
    dend_6 { pt3dadd( -5.79467, -134.048, 97.5543, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -6.68966, -124.72, 91.3717, 0.55 ) }
    dend_5 { pt3dadd( -7.88026, -135.135, 97.7647, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -2.5958, -106.284, 3.41141, 0.83 ) }
    dend_25 { pt3dadd( -2.26665, -108.41, 3.79375, 0.83 ) }
    dend_25 { pt3dadd( -1.9656, -110.21, 4.27537, 0.83 ) }
    dend_25 { pt3dadd( -1.66634, -111.998, 4.75412, 0.83 ) }
    dend_25 { pt3dadd( -1.38215, -113.696, 5.20877, 0.83 ) }
    dend_25 { pt3dadd( -0.944183, -116.314, 5.90942, 0.83 ) }
    dend_25 { pt3dadd( -0.509383, -118.912, 6.605, 0.83 ) }
    dend_25 { pt3dadd( -0.181957, -120.645, 7.33162, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -2.5958, -106.284, 3.41141, 0.55 ) }
    dend_24 { pt3dadd( -1.18708, -108.368, 3.10247, 0.55 ) }
    dend_24 { pt3dadd( -0.155878, -109.984, 2.58165, 0.55 ) }
    dend_24 { pt3dadd( 0.530317, -111.173, 2.08676, 0.55 ) }
    dend_24 { pt3dadd( 1.08807, -112.553, 1.36573, 0.83 ) }
    dend_24 { pt3dadd( 1.58051, -114.109, 0.369534, 0.55 ) }
    dend_24 { pt3dadd( 2.06217, -115.63, -0.60487, 0.83 ) }
    dend_24 { pt3dadd( 2.45973, -117.272, -1.8033, 0.55 ) }
    dend_24 { pt3dadd( 2.67198, -118.221, -2.59087, 0.83 ) }
    dend_24 { pt3dadd( 3.1791, -121.277, -5.36665, 0.55 ) }
    dend_24 { pt3dadd( 3.34034, -123.663, -7.66731, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -14.5208, -93.243, 49.0208, 0.55 ) }
    dend_20 { pt3dadd( -16.6916, -98.8601, 54.074, 0.55 ) }
    dend_20 { pt3dadd( -19.6548, -103.588, 59.6945, 0.55 ) }
    dend_20 { pt3dadd( -22.8643, -107.544, 65.8199, 0.55 ) }
    dend_20 { pt3dadd( -26.4765, -110.525, 72.3242, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -14.5208, -93.243, 49.0208, 0.55 ) }
    dend_19 { pt3dadd( -15.6213, -96.9688, 52.6931, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -0.181957, -120.645, 7.33162, 0.55 ) }
    dend_27 { pt3dadd( -0.233071, -123.358, 8.0085, 0.55 ) }
    dend_27 { pt3dadd( -0.218326, -126.828, 8.98065, 0.55 ) }
    dend_27 { pt3dadd( -0.199699, -130.103, 9.88012, 0.55 ) }
    dend_27 { pt3dadd( -0.207059, -132.429, 10.4779, 0.55 ) }
    dend_27 { pt3dadd( -0.255239, -136.578, 11.4695, 0.55 ) }
    dend_27 { pt3dadd( -0.149922, -148.24, 13.9854, 0.55 ) }
    dend_27 { pt3dadd( 0.0176215, -152.199, 14.6827, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 0.174218, -154.988, 15.0321, 0.55 ) }
    dend_27 { pt3dadd( 0.42992, -158.168, 15.173, 0.55 ) }
    dend_27 { pt3dadd( 0.627363, -160.62, 15.0489, 0.55 ) }
    dend_27 { pt3dadd( 1.31116, -166.351, 14.5466, 0.55 ) }
    dend_27 { pt3dadd( 1.67407, -170.697, 14.1302, 0.55 ) }
    dend_27 { pt3dadd( 1.97575, -173.555, 13.9587, 0.55 ) }
    dend_27 { pt3dadd( 2.65769, -180.975, 13.902, 0.55 ) }
    dend_27 { pt3dadd( 3.04087, -185.968, 14.0865, 0.55 ) }
    dend_27 { pt3dadd( 3.49758, -192.415, 14.7046, 0.55 ) }
    dend_27 { pt3dadd( 4.00691, -199.747, 16.0049, 0.55 ) }
    dend_27 { pt3dadd( 4.51688, -204.657, 17.226, 0.55 ) }
    dend_27 { pt3dadd( 4.87579, -207.562, 18.0403, 0.55 ) }
    dend_27 { pt3dadd( 5.15708, -210.239, 18.774, 0.55 ) }
    dend_27 { pt3dadd( 5.60223, -213.627, 19.5496, 0.55 ) }
    dend_27 { pt3dadd( 6.67911, -221.777, 20.8331, 0.55 ) }
    dend_27 { pt3dadd( 7.22773, -224.931, 21.2289, 0.55 ) }
    dend_27 { pt3dadd( 7.75667, -228.44, 21.6296, 0.55 ) }
    dend_27 { pt3dadd( 8.5114, -233.708, 22.1952, 0.55 ) }
    dend_27 { pt3dadd( 8.88984, -237.753, 22.6353, 0.55 ) }
    dend_27 { pt3dadd( 9.0289, -241.588, 22.9612, 0.55 ) }
    dend_27 { pt3dadd( 8.99286, -245.24, 23.2426, 0.55 ) }
    dend_27 { pt3dadd( 8.88475, -248.802, 23.5596, 0.55 ) }
    dend_27 { pt3dadd( 8.82857, -251.338, 23.7619, 0.55 ) }
    dend_27 { pt3dadd( 8.79072, -255.484, 23.9489, 0.55 ) }
    dend_27 { pt3dadd( 8.7457, -260.45, 23.7668, 0.55 ) }
    dend_27 { pt3dadd( 8.82404, -262.859, 23.5008, 0.55 ) }
    dend_27 { pt3dadd( 8.94808, -264.971, 23.1042, 0.55 ) }
    dend_27 { pt3dadd( 9.41975, -268.955, 22.1425, 0.55 ) }
    dend_27 { pt3dadd( 9.70565, -271.478, 21.4543, 0.55 ) }
    dend_27 { pt3dadd( 10.0717, -274.592, 20.7361, 0.55 ) }
    dend_27 { pt3dadd( 10.2164, -276.782, 20.3548, 0.55 ) }
    dend_27 { pt3dadd( 10.4418, -282.478, 19.5775, 0.55 ) }
    dend_27 { pt3dadd( 10.4408, -286.748, 19.2957, 0.55 ) }
    dend_27 { pt3dadd( 10.2181, -293.368, 19.4041, 0.55 ) }
    dend_27 { pt3dadd( 10.0916, -297.653, 19.9116, 0.55 ) }
    dend_27 { pt3dadd( 9.89416, -302.155, 20.5898, 0.28 ) }
    dend_27 { pt3dadd( 9.75365, -303.965, 20.9313, 0.28 ) }
    dend_27 { pt3dadd( 9.31286, -308.368, 22.1702, 0.28 ) }
    dend_27 { pt3dadd( 8.80334, -312.442, 23.642, 0.28 ) }
    dend_27 { pt3dadd( 8.5339, -317.857, 26.2558, 0.28 ) }
    dend_27 { pt3dadd( 10.1697, -330.004, 29.2354, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -0.181957, -120.645, 7.33162, 0.55 ) }
    dend_26 { pt3dadd( 1.02049, -121.347, 8.79145, 0.55 ) }
    dend_26 { pt3dadd( 3.30916, -123.097, 11.9842, 0.55 ) }
    dend_26 { pt3dadd( 5.19213, -124.798, 14.8345, 0.28 ) }
    dend_26 { pt3dadd( 7.142, -126.722, 17.9661, 0.55 ) }
    dend_26 { pt3dadd( 8.12992, -127.946, 20.0653, 0.28 ) }
    dend_26 { pt3dadd( 9.61539, -130.146, 23.9526, 0.55 ) }
    dend_26 { pt3dadd( 9.93317, -131.291, 25.8871, 0.28 ) }
    dend_26 { pt3dadd( 9.97654, -131.706, 26.6611, 0.28 ) }
    dend_26 { pt3dadd( 10.0461, -132.309, 28.0135, 0.55 ) }
    dend_26 { pt3dadd( 10.5639, -134.319, 33.0895, 0.28 ) }
    dend_26 { pt3dadd( 10.8396, -135.11, 35.2071, 0.55 ) }
    dend_26 { pt3dadd( 12.1348, -137.414, 41.2123, 0.28 ) }
    dend_26 { pt3dadd( 12.998, -138.562, 44.3413, 0.28 ) }
    dend_26 { pt3dadd( 14.2311, -140.029, 48.0983, 0.55 ) }
    dend_26 { pt3dadd( 16.4069, -142.293, 53.3724, 0.28 ) }
    dend_26 { pt3dadd( 16.7577, -142.594, 54.0338, 0.55 ) }
    dend_26 { pt3dadd( 18.6549, -144.058, 57.125, 0.28 ) }
    dend_26 { pt3dadd( 18.8515, -144.194, 57.3806, 0.55 ) }
    dend_26 { pt3dadd( 20.5167, -145.748, 59.6828, 0.28 ) }
    dend_26 { pt3dadd( 21.2499, -146.586, 60.8323, 0.55 ) }
    dend_26 { pt3dadd( 27.2313, -152.85, 70.3848, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -26.4765, -110.525, 72.3242, 0.55 ) }
    dend_22 { pt3dadd( -28.2957, -113.938, 80.5549, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -26.4765, -110.525, 72.3242, 0.55 ) }
    dend_21 { pt3dadd( -30.4594, -115.602, 77.1637, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_43 nseg = 3
    dend_0 nseg = 7
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_2 nseg = 3
    dend_61 nseg = 15
    dend_45 nseg = 3
    dend_42 nseg = 11
    dend_35 nseg = 3
    dend_30 nseg = 7
    dend_12 nseg = 7
    dend_10 nseg = 3
    dend_3 nseg = 3
    dend_60 nseg = 5
    dend_33 nseg = 3
    dend_59 nseg = 5
    dend_53 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 9
    dend_15 nseg = 7
    dend_27 nseg = 11
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L5_BP_491c00476b_0_0


