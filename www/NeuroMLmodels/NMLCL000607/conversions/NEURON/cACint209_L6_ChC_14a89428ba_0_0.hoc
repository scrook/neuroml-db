// Cell: cACint209_L6_ChC_14a89428ba_0_0
/*
{
  "id" : "cACint209_L6_ChC_14a89428ba_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-8.8586, -8.04469, 1.53009, 3.3791", "-7.97995, -7.34666, 1.36479, 5.72454", "-7.1013, -6.64862, 1.1995, 8.23846", "-6.22264, -5.95059, 1.0342, 11.0117", "-5.34399, -5.25256, 0.868909, 12.2892", "-4.46534, -4.55452, 0.703614, 13.1847", "-3.58668, -3.85649, 0.538319, 13.8694", "-2.70803, -3.15845, 0.373024, 14.3074", "-1.82938, -2.46042, 0.207729, 14.3951", "-0.950725, -1.76239, 0.0424341, 13.9653", "-0.0720712, -1.06435, -0.122861, 13.3474", "0.806582, -0.36632, -0.288156, 12.6084", "1.68524, 0.331714, -0.453451, 11.7137", "2.56389, 1.02975, -0.618746, 10.9789", "3.44254, 1.72778, -0.784041, 10.2328", "4.3212, 2.42582, -0.949336, 9.50705", "5.19985, 3.12385, -1.11463, 8.866", "6.0785, 3.82188, -1.27993, 8.5708", "6.95716, 4.51992, -1.44522, 7.86083", "7.83581, 5.21795, -1.61052, 5.76858", "8.71446, 5.91598, -1.77581, 3.46527" ]
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-9.69144, -0.503644, 2.76069, 1.92", "-9.80483, -0.521747, 2.76069, 1.92", "-10.9402, -0.657192, 2.76069, 1.92", "-12.0393, -0.78831, 2.76069, 1.69", "-13.0817, -0.912675, 2.76069, 1.55", "-14.5458, -1.08733, 2.76069, 1.55", "-15.7573, -1.23186, 2.76069, 1.55", "-17.8316, -1.45992, 2.76069, 1.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499998968006674
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-6.48144, -10.7411, -11.0593, 2.43", "-6.68987, -11.0306, -11.0593, 2.43", "-7.25929, -11.9777, -11.0593, 1.69", "-7.7381, -12.9406, -10.6928, 1.33", "-8.04828, -13.5986, -10.3524, 1.33", "-8.45306, -14.5299, -9.84386, 1.62", "-8.79775, -15.3638, -9.38924, 1.92", "-9.0852, -16.1543, -8.93834, 2.43", "-10.1224, -19.6238, -6.88631, 1.92", "-10.3096, -20.3588, -6.44544, 1.92", "-10.5241, -21.2609, -5.88427, 1.18", "-10.643, -21.7596, -5.57859, 1.18", "-10.815, -22.4233, -5.2206, 1.18", "-10.9652, -22.9096, -4.99896, 1.55", "-11.1546, -23.4004, -4.86273, 1.55", "-11.6049, -24.3396, -4.55446, 0.96", "-12.0884, -25.1104, -4.27302, 1.33", "-12.6793, -25.8809, -3.98892, 1.69", "-13.6679, -26.98, -3.62148, 2.28", "-14.3647, -27.6773, -3.42776, 1.84", "-15.0686, -28.3303, -3.2934, 1.62", "-15.7402, -28.9245, -3.22887, 1.62", "-16.6176, -29.6964, -3.18824, 1.11", "-17.1309, -30.1811, -3.19874, 0.88", "-17.7073, -30.7984, -3.26496, 1.25", "-18.1374, -31.3396, -3.31673, 1.25", "-18.5987, -32.0055, -3.4555, 0.88", "-18.881, -32.4475, -3.58502, 0.88", "-19.2162, -32.9679, -3.77036, 1.62", "-19.6774, -33.6342, -4.02898, 1.62", "-20.1652, -34.2392, -4.30529, 1.62", "-21.5469, -35.6182, -5.03754, 0.88", "-22.0755, -36.0238, -5.28031, 0.59", "-22.7869, -36.4536, -5.54507, 0.59", "-23.3568, -36.7451, -5.70832, 0.96", "-24.0569, -37.0696, -5.85318, 1.62", "-24.806, -37.403, -5.94359, 1.92", "-25.6328, -37.7974, -5.86807, 2.06", "-26.6362, -38.3224, -5.67744, 1.55", "-27.5852, -38.8653, -5.41587, 1.25", "-28.1518, -39.2197, -5.22082, 1.25", "-28.8029, -39.6737, -4.95758, 1.25", "-30.5983, -41.0769, -4.30251, 1.25", "-30.9661, -41.3943, -4.18646, 1.25", "-31.5046, -41.9099, -4.05992, 1.03", "-31.9363, -42.3835, -4.02689, 0.74", "-32.3233, -42.8728, -4.07121, 1.62", "-33.3917, -44.377, -4.41136, 2.28", "-33.8476, -45.0366, -4.6407, 2.5", "-34.1357, -45.4636, -4.78024, 2.5", "-34.7124, -46.3091, -5.02739, 1.11", "-35.1555, -46.8853, -5.16018, 1.11", "-35.5232, -47.2882, -5.21295, 1.11", "-35.8832, -47.6218, -5.21295, 1.11", "-36.203, -47.8987, -5.21295, 1.62", "-36.72, -48.4029, -5.21295, 1.99", "-37.5297, -49.286, -5.21295, 1.99", "-38.2307, -50.1553, -5.21295, 1.99", "-38.9088, -51.1124, -5.21295, 1.99", "-39.4737, -52.01, -5.21295, 1.99", "-40.6885, -54.1709, -5.20238, 1.99", "-41.1703, -55.1777, -5.19404, 1.99", "-41.5211, -56.0773, -5.18421, 1.55", "-41.7642, -56.8161, -5.17442, 1.18", "-42.3197, -58.8214, -5.06205, 1.18", "-42.4824, -59.5483, -4.99164, 1.11", "-42.6415, -60.4792, -4.86094, 1.92", "-42.8008, -61.6528, -4.66013, 2.14", "-42.8737, -62.2367, -4.545, 2.14", "-43.0814, -63.9117, -4.17216, 0.66", "-43.1722, -64.6478, -3.98371, 0.66", "-43.3148, -65.2725, -3.81565, 0.66", "-43.4017, -65.4813, -3.75511, 1.03", "-43.8291, -66.0704, -3.58623, 1.03", "-44.1899, -66.3802, -3.52395, 1.03", "-44.3979, -66.4973, -3.52094, 1.33", "-45.0091, -66.8055, -3.51261, 1.33", "-45.5711, -67.1172, -3.50527, 0.96", "-46.0258, -67.4418, -3.49977, 0.81", "-46.5134, -67.9068, -3.49436, 0.81", "-46.8486, -68.3424, -3.4895, 1.11", "-47.2026, -68.9657, -3.48328, 1.33", "-47.498, -69.6876, -3.47739, 1.33", "-47.77, -70.5367, -3.46969, 1.33", "-47.9045, -70.9864, -3.47393, 1.33", "-48.0126, -71.3266, -3.48257, 0.96", "-48.1893, -71.8431, -3.50284, 0.96", "-48.432, -72.4704, -3.53518, 1.18", "-48.6365, -72.9356, -3.56291, 1.55", "-49.0366, -73.7046, -3.61213, 1.55", "-49.3628, -74.2537, -3.64846, 1.25", "-49.7365, -74.7946, -3.68418, 1.25", "-50.1599, -75.3022, -3.71502, 1.25", "-50.7535, -75.8614, -3.78747, 1.03", "-51.3477, -76.2933, -3.87695, 1.03", "-51.5597, -76.4074, -3.91105, 1.03", "-52.3281, -76.7133, -4.04555, 1.25", "-53.0242, -76.9255, -4.16715, 1.4", "-54.1036, -77.2102, -4.3508, 1.4", "-54.6904, -77.3715, -4.44773, 1.11", "-55.3792, -77.5962, -4.55629, 1.03", "-55.9073, -77.8183, -4.63011, 0.96", "-56.5593, -78.1829, -4.70345, 0.96", "-57.158, -78.6252, -4.74351, 0.96", "-57.6086, -79.0753, -4.74351, 0.96", "-57.805, -79.324, -4.74351, 1.25", "-58.2059, -79.9559, -4.74351, 1.62", "-58.5258, -80.5485, -4.74351, 1.84", "-58.7283, -80.9588, -4.71946, 1.84", "-59.1248, -81.8213, -4.63054, 1.62", "-59.3712, -82.3773, -4.55625, 1.62", "-59.5531, -82.805, -4.49303, 1.99", "-59.8762, -83.6052, -4.36876, 1.99", "-60.3173, -84.6027, -4.20885, 1.99", "-60.7293, -85.3946, -4.08291, 1.99", "-61.0448, -85.8876, -4.00615, 1.99", "-61.7499, -86.7645, -3.88563, 1.33", "-62.2541, -87.2599, -3.82994, 1.33", "-62.9656, -87.8197, -3.79291, 1.33", "-63.7912, -88.3607, -3.79291, 1.55", "-64.4005, -88.707, -3.79131, 1.84", "-65.444, -89.2801, -3.78651, 1.84", "-66.0035, -89.5969, -3.78292, 1.84", "-66.8321, -90.1498, -3.7762, 1.18", "-67.3377, -90.5848, -3.77104, 1.18", "-67.8038, -91.08, -3.76557, 1.18", "-68.2527, -91.6341, -3.75999, 1.18", "-68.7311, -92.2831, -3.75402, 1.4", "-69.2905, -93.0539, -3.74781, 1.4", "-69.6299, -93.4785, -3.74495, 1.62", "-70.3181, -94.1848, -3.74174, 0.96", "-70.7213, -94.4793, -3.74174, 0.96", "-71.1703, -94.6753, -3.74174, 0.81", "-71.5586, -94.7612, -3.74174, 0.81", "-72.1908, -94.8307, -3.74174, 0.81", "-72.9186, -94.9159, -3.74174, 0.81", "-73.4877, -95.0373, -3.74174, 0.81", "-73.7972, -95.2008, -3.74174, 0.88", "-74.3265, -95.7214, -3.74174, 1.18", "-74.7593, -96.3325, -3.74174, 1.55", "-75.1332, -97.0125, -3.78283, 1.99", "-75.4612, -97.711, -3.84771, 1.99", "-75.8522, -98.6493, -3.95412, 1.92", "-76.1283, -99.3212, -4.0437, 1.69", "-76.2712, -99.6383, -4.09433, 1.69", "-76.7887, -100.603, -4.2767, 0.96", "-77.2484, -101.25, -4.42287, 0.96", "-77.5454, -101.541, -4.46225, 0.96", "-77.9574, -101.823, -4.49578, 0.96", "-78.5272, -102.136, -4.51801, 0.96", "-78.9802, -102.343, -4.5088, 0.96", "-79.4197, -102.495, -4.45603, 0.96", "-80.8156, -102.86, -4.26576, 0.96", "-82.1368, -103.175, -4.06547, 0.74", "-82.305, -103.226, -4.03528, 0.74" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499998968006674,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-8.22144, -9.70164, 0.070692, 1.77", "-8.9188, -10.2829, 0.070692, 1.77", "-10.9625, -11.7761, 0.070692, 1.77", "-12.4196, -12.7584, 0.070692, 1.77", "-14.2016, -13.8769, 0.070692, 1.77", "-16.3716, -15.1571, 0.070692, 1.77", "-18.055, -16.0762, 0.070692, 1.77", "-19.5899, -16.7974, 0.070692, 1.77", "-21.1145, -17.332, 0.070692, 1.77", "-22.6912, -17.6957, 0.070692, 1.77", "-23.5823, -17.7797, 0.070692, 1.77", "-24.8406, -17.8164, 0.070692, 1.77", "-26.0111, -17.7689, 0.070692, 1.77", "-27.4246, -17.6168, 0.070692, 1.77", "-29.752, -17.1622, 0.070692, 1.77", "-31.16, -16.7834, 0.070692, 1.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499998968006674
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "10.9086, 2.63585, -10.6193, 2.73", "11.1299, 2.5645, -10.5936, 2.73", "12.8005, 1.93749, -10.4269, 1.99", "14.536, 1.22308, -10.2773, 2.43", "15.489, 0.78672, -10.3605, 2.43", "16.7724, 0.144876, -10.5962, 2.5", "18.6448, -0.791609, -10.9401, 2.5", "19.5857, -1.28826, -11.1514, 2.43", "20.6612, -1.93656, -11.4968, 1.99", "23.7442, -3.95347, -12.9332, 2.36", "24.4256, -4.43638, -13.3417, 2.5" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499998968006674
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "8.74856, 7.40285, -2.05931, 1.33", "9.32292, 7.87957, -2.03699, 1.33", "9.8875, 8.35859, -2.01676, 1.33", "10.6111, 8.94487, -1.85294, 1.33", "11.0854, 9.33474, -1.7022, 1.77", "11.7206, 9.87968, -1.47172, 2.28", "12.2109, 10.3219, -1.28148, 1.99", "12.889, 10.9907, -0.970667, 1.25", "14.0577, 12.2804, -0.432891, 1.25", "14.5173, 12.8373, -0.23568, 1.33", "14.9478, 13.4035, -0.0702913, 1.62", "15.2318, 13.8609, -0.0651625, 1.69", "15.4261, 14.3254, -0.225361, 1.69", "15.603, 15.3055, -0.907999, 1.03", "15.6185, 15.9254, -1.43535, 1.03", "15.5897, 16.2446, -1.72049, 1.03", "15.1556, 18.578, -3.82407, 1.99", "14.9624, 19.3362, -4.48509, 1.69", "14.4581, 20.9328, -5.79239, 1.4", "14.1038, 21.894, -6.49879, 1.33", "13.8442, 22.5601, -6.9245, 1.33", "13.5892, 23.2716, -7.27446, 1.33", "13.4234, 23.9476, -7.434, 1.33", "13.3586, 24.5541, -7.52831, 1.33", "13.4226, 25.1516, -7.55933, 1.33", "13.6263, 25.7851, -7.59758, 1.33", "13.9298, 26.402, -7.65557, 1.33", "14.4316, 27.1705, -7.74445, 1.33", "15.1619, 28.0773, -7.88021, 0.96", "15.6133, 28.5575, -7.98369, 0.96", "16.0942, 29.0, -8.06496, 0.96", "16.3826, 29.2383, -8.09583, 1.25", "16.8665, 29.6364, -8.12676, 1.25", "17.3894, 30.1006, -8.21317, 1.18", "18.0932, 30.775, -8.37558, 1.18", "18.9598, 31.702, -8.65511, 1.18", "19.5266, 32.3472, -8.87172, 1.4", "20.0575, 32.9666, -9.09006, 1.4", "21.3681, 34.5301, -9.63388, 1.18", "21.9198, 35.2061, -9.85189, 0.88", "22.5326, 35.9522, -10.0747, 0.88", "22.9364, 36.4234, -10.2179, 0.81", "23.4731, 36.9811, -10.3491, 0.81", "24.2228, 37.649, -10.4344, 1.69", "24.8658, 38.1511, -10.4261, 2.5", "25.2383, 38.4264, -10.4237, 2.06", "25.9686, 38.9741, -10.4178, 0.96", "26.375, 39.3095, -10.4099, 0.96", "26.6817, 39.6024, -10.398, 0.96", "27.0602, 40.0449, -10.3716, 0.96", "27.3683, 40.5196, -10.3333, 0.96", "27.6803, 41.2359, -10.2567, 0.96", "27.8422, 41.8746, -10.1741, 0.96", "27.9498, 42.4744, -10.0877, 0.96", "28.0593, 43.1792, -9.98084, 0.96", "28.1659, 43.8152, -9.88267, 0.96", "28.3342, 44.4848, -9.78354, 0.96", "28.5622, 45.105, -9.69821, 0.96", "28.791, 45.5015, -9.65328, 0.96", "29.2245, 46.0626, -9.60337, 1.33", "29.6806, 46.557, -9.56936, 1.69", "30.4222, 47.2748, -9.58141, 1.69", "30.6698, 47.4978, -9.60052, 1.69", "31.5729, 48.3732, -9.6979, 0.88", "31.9384, 48.7808, -9.74655, 0.74", "32.1993, 49.1096, -9.78753, 0.74", "32.7472, 49.9173, -9.8351, 0.74", "33.05, 50.4667, -9.82495, 0.74", "33.4269, 51.3416, -9.73963, 0.66", "33.5212, 51.6235, -9.69316, 0.96", "33.6705, 52.085, -9.59874, 1.33", "34.0733, 53.1582, -9.35364, 0.96", "34.4178, 53.8342, -9.19728, 0.96", "34.8888, 54.5928, -9.06095, 0.96", "35.3387, 55.2307, -8.96907, 0.96", "35.7733, 55.8249, -8.89806, 0.96", "36.5364, 56.8459, -8.8013, 0.96", "37.7916, 58.4623, -8.69628, 0.81", "39.3737, 60.4194, -8.57679, 0.66", "39.8014, 60.9273, -8.54789, 1.4", "40.2594, 61.4675, -8.5268, 2.14", "40.879, 62.2014, -8.50958, 2.43", "41.6415, 63.1162, -8.50135, 0.74", "42.2016, 63.7356, -8.51147, 0.74", "42.8092, 64.3149, -8.54056, 0.74", "43.679, 65.0821, -8.59082, 0.74", "44.6255, 65.8667, -8.65174, 0.74", "45.387, 66.4704, -8.70205, 0.52", "46.8388, 67.63, -8.78739, 0.15", "47.1503, 67.8848, -8.8008, 0.15", "47.57, 68.2371, -8.80817, 0.15", "47.8917, 68.5024, -8.80183, 0.81", "48.0963, 68.6729, -8.79614, 1.18", "48.5871, 69.0973, -8.77664, 1.18", "48.9655, 69.4695, -8.75177, 1.18", "49.3089, 69.7825, -8.73419, 1.03", "49.7158, 70.1171, -8.72108, 0.88", "50.1541, 70.4677, -8.71042, 0.81", "50.634, 70.8652, -8.6988, 0.81", "51.0633, 71.2444, -8.68513, 0.81", "51.7513, 71.9262, -8.6524, 0.81", "52.2665, 72.5167, -8.61623, 0.81", "52.6207, 72.9951, -8.58098, 0.81", "53.0045, 73.6075, -8.52991, 0.81", "53.3044, 74.195, -8.47249, 0.81", "53.501, 74.681, -8.41868, 0.81", "53.665, 75.1944, -8.35646, 0.81", "53.7774, 75.5353, -8.31556, 0.81", "53.9379, 75.9179, -8.2739, 0.44", "54.1175, 76.2619, -8.24078, 0.44", "54.3683, 76.6637, -8.20715, 0.66", "54.7568, 77.2097, -8.1673, 0.66", "55.2207, 77.8038, -8.12615, 0.66", "55.6864, 78.3576, -8.09009, 1.11", "56.0303, 78.7476, -8.06572, 1.33", "56.4371, 79.2096, -8.03606, 1.33", "56.6837, 79.52, -8.01264, 1.33", "57.2888, 80.4216, -7.93105, 0.59", "57.376, 80.5871, -7.9052, 0.15", "57.5988, 81.0981, -7.80229, 1.25", "57.812, 81.6443, -7.67737, 1.77", "58.092, 82.4176, -7.48775, 2.14", "58.2596, 82.9873, -7.3925, 1.84", "58.6001, 84.4063, -7.24515, 0.81", "58.7327, 84.9917, -7.21521, 0.81", "58.8234, 85.383, -7.21568, 0.81", "58.9978, 86.0431, -7.25525, 0.81", "59.5028, 87.6943, -7.45803, 0.81", "59.6311, 88.0874, -7.54215, 0.81", "59.8144, 88.6203, -7.70202, 0.81", "59.9994, 89.1491, -7.85624, 0.81", "60.1241, 89.4926, -7.94386, 0.81", "60.3844, 90.1465, -8.06591, 1.25", "60.843, 91.1034, -8.15365, 1.25", "61.0014, 91.4315, -8.18137, 1.25", "61.1822, 91.8062, -8.20728, 1.25", "61.3472, 92.1475, -8.22412, 1.25", "61.9124, 93.3115, -8.25377, 0.66", "62.3672, 94.1965, -8.25189, 0.44", "62.6746, 94.7801, -8.22571, 0.96", "62.9925, 95.3892, -8.19382, 1.33", "63.2068, 95.8138, -8.16653, 1.69", "63.3638, 96.1344, -8.1411, 1.69", "63.5936, 96.6265, -8.11862, 1.47", "63.8361, 97.1747, -8.11884, 1.11", "64.1062, 97.7583, -8.14333, 0.74", "64.3979, 98.3358, -8.18956, 0.74", "64.5938, 98.6811, -8.22855, 1.03", "65.1774, 99.5976, -8.40133, 0.88", "65.4193, 99.9592, -8.52051, 0.88", "65.6495, 100.294, -8.66616, 0.88", "65.8596, 100.594, -8.8185, 0.88", "66.0714, 100.892, -9.00385, 0.88", "66.4486, 101.45, -9.35538, 0.66", "67.0167, 102.252, -9.85379, 0.96", "67.2587, 102.592, -10.0642, 1.25", "67.4516, 102.869, -10.2277, 1.47", "68.1178, 103.846, -10.7484, 0.88", "68.4877, 104.399, -10.9862, 0.59", "68.8782, 104.983, -11.1421, 0.22", "69.0674, 105.239, -11.1742, 0.22", "69.1703, 105.379, -11.1707, 0.52", "69.4205, 105.735, -11.1179, 1.11", "69.845, 106.358, -10.9593, 1.11", "70.2654, 106.997, -10.7674, 0.66", "70.9924, 108.174, -10.3849, 0.37", "71.5919, 109.112, -10.0424, 1.47", "71.8999, 109.581, -9.86174, 1.25", "72.1884, 110.023, -9.68603, 0.88", "72.541, 110.561, -9.47107, 0.37", "72.8216, 110.997, -9.30025, 0.37", "73.31, 111.759, -9.00411, 1.11", "73.7761, 112.443, -8.76362, 0.59", "74.1648, 113.007, -8.57121, 1.25", "74.5198, 113.509, -8.39255, 1.99", "75.1319, 114.344, -8.10335, 1.11", "75.7748, 115.185, -7.7913, 1.11", "76.1872, 115.714, -7.59459, 1.03", "76.7676, 116.413, -7.32164, 1.03", "77.3194, 117.048, -7.0745, 0.88", "77.8909, 117.708, -6.82996, 1.62", "78.4029, 118.296, -6.63429, 1.62", "78.9484, 118.914, -6.44404, 0.29", "79.3011, 119.308, -6.32815, 0.29", "79.712, 119.774, -6.21053, 0.29", "80.0546, 120.188, -6.13123, 0.29", "80.3434, 120.541, -6.0703, 0.88", "80.5628, 120.813, -6.03234, 1.47", "80.9879, 121.336, -5.95738, 1.47", "81.6493, 122.159, -5.84503, 0.29", "82.0407, 122.629, -5.78767, 1.03", "82.3602, 123.016, -5.74538, 1.4", "82.715, 123.446, -5.68501, 1.4", "82.8205, 123.569, -5.66588, 1.4", "83.5956, 124.388, -5.51689, 0.44", "84.1055, 124.868, -5.36278, 0.44", "84.3998, 125.153, -5.24451, 0.44", "85.0985, 125.799, -4.94837, 0.66", "85.576, 126.214, -4.73899, 0.96", "86.0736, 126.628, -4.52242, 1.25", "87.213, 127.552, -4.03114, 0.29", "87.8465, 128.104, -3.7342, 0.29", "88.8921, 129.083, -3.20716, 0.29", "89.2366, 129.438, -2.95201, 0.88", "89.6761, 129.947, -2.52289, 1.55", "89.9915, 130.339, -2.17005, 1.55", "90.74, 131.323, -1.28554, 0.37", "90.9926, 131.667, -0.979045, 1.33", "92.2016, 133.52, 0.588823, 1.18", "92.5731, 134.116, 1.04141, 0.88", "92.9483, 134.776, 1.48671, 0.74", "93.3115, 135.459, 1.8776, 1.62", "93.8492, 136.541, 2.32535, 0.88", "94.1512, 137.197, 2.50297, 0.52", "94.4252, 137.869, 2.57711, 0.52", "94.7502, 138.741, 2.67712, 0.52", "94.8339, 138.988, 2.70637, 0.52", "95.0159, 139.51, 2.76779, 0.74", "95.192, 140.008, 2.75982, 0.74", "95.3605, 140.471, 2.70606, 1.11", "95.5663, 141.03, 2.60319, 1.47", "95.8391, 141.807, 2.46304, 1.03", "96.0395, 142.44, 2.36353, 0.74", "96.6163, 144.278, 2.14224, 0.15", "96.7319, 144.695, 2.10629, 1.33", "96.8738, 145.187, 2.08019, 1.33", "97.5169, 147.299, 2.00744, 0.52", "97.7853, 148.098, 1.99759, 1.33", "98.507, 149.842, 2.02631, 0.22", "98.8946, 150.605, 2.06835, 0.22", "99.7352, 151.959, 2.11483, 0.96", "100.135, 152.455, 2.11613, 0.66", "100.885, 153.16, 2.08669, 0.52", "102.245, 154.177, 2.00422, 0.52", "102.914, 154.577, 1.99985, 1.4", "103.835, 155.089, 2.07607, 1.11", "105.023, 155.699, 2.27808, 0.52", "105.462, 155.912, 2.38534, 0.52", "106.296, 156.327, 2.71138, 1.47", "107.665, 157.082, 3.50826, 1.47", "108.785, 157.682, 4.2785, 0.07", "109.393, 157.995, 4.73788, 0.07", "109.821, 158.198, 5.0589, 0.52", "111.121, 158.646, 5.92888, 1.55", "112.089, 158.881, 6.49082, 1.4", "113.513, 159.071, 7.12234, 0.29", "114.106, 159.099, 7.34009, 0.29", "115.026, 159.115, 7.64076, 1.69", "116.974, 159.113, 8.26812, 1.62", "117.228, 159.105, 8.33433, 1.18", "117.788, 159.09, 8.47485, 0.22", "118.462, 159.088, 8.64717, 1.33", "118.812, 159.081, 8.74001, 1.33", "120.831, 158.983, 9.25507, 0.07", "121.466, 158.958, 9.39081, 0.88", "122.215, 158.95, 9.55706, 1.25", "123.086, 159.012, 9.75604, 1.62", "123.599, 159.074, 9.85836, 0.88", "123.941, 159.11, 9.93454, 0.88", "124.652, 159.167, 10.0703, 0.22", "124.93, 159.191, 10.1932, 0.74", "125.705, 159.287, 10.6695, 0.07", "126.262, 159.379, 11.0668, 1.4", "127.448, 159.56, 11.948, 0.66", "128.004, 159.628, 12.378, 1.18", "129.167, 159.714, 13.3025, 0.07", "129.436, 159.746, 13.5152, 0.07", "129.685, 159.79, 13.7073, 0.59", "129.821, 159.851, 13.8031, 0.07", "130.139, 160.08, 13.9409, 0.07", "130.312, 160.222, 13.9877, 0.74", "130.892, 160.749, 13.9319, 0.15", "131.044, 160.895, 13.9029, 0.88", "131.273, 161.134, 13.8442, 0.07", "131.614, 161.546, 13.7347, 0.07", "131.816, 161.817, 13.655, 0.88", "132.44, 162.723, 13.3644, 0.07", "132.645, 163.071, 13.2546, 1.11", "132.759, 163.301, 13.1933, 0.29", "132.982, 163.887, 13.0751, 0.07", "132.999, 163.943, 13.0686, 0.44", "133.025, 164.027, 13.0659, 0.07", "133.229, 164.661, 12.9946, 0.59", "133.314, 164.87, 12.9156, 0.07", "133.474, 165.18, 12.7187, 0.07", "133.664, 165.433, 12.4784, 0.07", "133.804, 165.582, 12.3102, 1.03", "134.742, 166.424, 11.243, 0.22", "134.96, 166.589, 11.0036, 0.52", "135.05, 166.646, 10.9189, 0.07", "135.341, 166.803, 10.677, 0.07", "135.617, 166.945, 10.4993, 0.88", "135.93, 167.107, 10.396, 0.07", "136.17, 167.217, 10.3898, 0.07", "136.536, 167.397, 10.3837, 0.66", "136.536, 167.397, 10.3837, 0.07", "136.933, 167.616, 10.3844, 0.07", "137.274, 167.775, 10.3817, 0.74" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499998968006674,
    "numberInternalDivisions" : 11
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "8.71446, 5.91598, -1.77581, 2.20599", "20.4593, 15.2465, -1.77581, 2.20599", "32.2041, 24.577, -1.77581, 2.20599" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-17.8316, -1.45992, 2.76069, 1.69", "-19.8884, -4.22306, 2.87092, 1.69", "-21.5503, -6.86196, 3.14485, 1.11", "-22.7569, -9.00898, 3.48821, 1.11", "-23.5852, -10.5754, 3.80227, 1.11", "-24.1999, -11.7353, 4.06723, 1.33", "-25.0868, -13.3942, 4.45461, 1.4", "-26.2095, -15.7764, 5.0185, 1.4", "-27.0076, -17.5842, 5.57823, 1.25", "-27.59, -19.0102, 6.06287, 1.4", "-28.1368, -20.425, 6.64411, 1.4", "-28.6867, -21.898, 7.61272, 1.03", "-28.9162, -22.6454, 8.40247, 1.03", "-29.0501, -23.2242, 9.77304, 1.03", "-29.0897, -23.4119, 10.4409, 1.4", "-29.3097, -24.0797, 13.6976, 1.25", "-29.7651, -24.6673, 18.1345, 1.55", "-29.9951, -24.7831, 19.6737, 1.69", "-31.0708, -24.8768, 24.4493, 1.4", "-31.5293, -24.8467, 25.8754, 1.03", "-32.2446, -24.767, 27.4536, 0.96", "-33.6455, -24.6036, 29.3122, 0.96", "-34.4051, -24.4974, 29.846, 0.96", "-36.0702, -24.1988, 30.4721, 0.96", "-37.3226, -24.0118, 30.5522, 0.96", "-38.3831, -23.8856, 30.5162, 1.11", "-39.9065, -23.8295, 30.3592, 1.11", "-41.0628, -23.9203, 30.2244, 0.96", "-42.3131, -24.1332, 30.139, 1.25", "-43.658, -24.5065, 30.1314, 1.4", "-45.128, -25.047, 30.2662, 1.4", "-46.2229, -25.5782, 30.4595, 1.62", "-47.7919, -26.6192, 30.675, 1.62", "-49.052, -27.7467, 30.812, 1.4", "-50.3383, -29.272, 30.9547, 1.11", "-51.3387, -30.8466, 31.0725, 1.11", "-52.0989, -32.3644, 31.1705, 1.11", "-53.9692, -36.7989, 31.4357, 1.11", "-54.992, -39.513, 31.5888, 1.11", "-55.7288, -41.2105, 31.7278, 1.11", "-56.508, -42.675, 31.8962, 0.81", "-57.1244, -43.5666, 32.0473, 0.81", "-58.0078, -44.5565, 32.2985, 1.11", "-59.6527, -46.0635, 32.8473, 1.11", "-62.9804, -48.7812, 33.8126, 1.11", "-64.27, -49.7784, 34.1687, 1.92", "-65.8762, -51.0332, 34.6318, 1.77", "-67.62, -52.4753, 35.1968, 1.4", "-68.6496, -53.3871, 35.5799, 0.88", "-69.8606, -54.5256, 36.098, 0.88", "-70.7086, -55.3798, 36.4724, 1.25", "-71.7744, -56.4548, 36.9251, 1.77", "-73.4766, -58.0602, 37.569, 1.77", "-75.0423, -59.353, 38.0555, 1.33", "-76.5718, -60.428, 38.431, 1.11", "-78.0245, -61.2363, 38.7898, 1.4", "-79.6308, -61.9451, 39.2007, 1.77", "-81.8367, -62.6686, 39.783, 1.92", "-83.4866, -63.0297, 40.2886, 1.99", "-85.0761, -63.2594, 40.7882, 1.99", "-88.136, -63.5412, 41.7641, 0.81", "-89.1508, -63.6003, 42.087, 0.81", "-90.7895, -63.6453, 42.6377, 0.81", "-92.412, -63.6653, 43.2268, 0.81", "-94.0994, -63.7015, 43.8487, 1.84", "-95.8776, -63.7889, 44.3985, 2.28", "-97.5568, -63.9946, 44.5489, 2.28" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-17.8316, -1.45992, 2.76069, 2.14", "-18.0085, -0.431145, 3.5218, 2.14", "-17.9681, 0.497282, 4.51559, 1.33", "-17.5431, 4.01046, 8.40244, 1.18", "-17.434, 4.69057, 9.11399, 1.18", "-17.2982, 5.37569, 9.78641, 1.18", "-17.0789, 6.36257, 10.6831, 1.18", "-15.4294, 11.7698, 15.2649, 1.18", "-15.1858, 12.4431, 15.7801, 1.18", "-14.7151, 13.6018, 16.4572, 1.18", "-14.3592, 14.5574, 16.9187, 1.18", "-14.0164, 15.6013, 17.2765, 1.18", "-13.6157, 16.9941, 17.3715, 1.62", "-13.4197, 17.7308, 17.1679, 1.99", "-13.1733, 18.7276, 16.8803, 1.33", "-12.8888, 20.0244, 16.4965, 1.33", "-12.8192, 20.4504, 16.3682, 1.33", "-12.6694, 21.8012, 15.956, 1.33", "-12.6393, 22.6712, 15.6879, 1.77", "-12.7163, 23.6226, 15.4527, 1.69", "-13.0208, 24.765, 15.2943, 0.96", "-13.4407, 25.6238, 15.2676, 0.96", "-13.9148, 26.2992, 15.3359, 0.66", "-14.4697, 26.9587, 15.4984, 0.66", "-15.7849, 28.2926, 15.99, 1.33", "-16.8067, 29.1693, 16.4306, 1.33", "-17.9456, 30.043, 16.9763, 1.33", "-19.1778, 30.9442, 17.64, 1.33", "-21.0027, 32.2414, 18.7083, 2.5", "-21.7516, 32.7914, 19.1574, 2.5", "-22.0841, 33.0292, 19.277, 2.5" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-82.305, -103.226, -4.03528, 0.44", "-82.6735, -103.517, -4.01057, 0.44", "-83.2194, -103.973, -3.97636, 0.44", "-83.7572, -104.453, -3.94691, 0.44", "-84.321, -104.99, -3.92113, 0.44", "-85.0804, -105.736, -3.88874, 0.44", "-85.3173, -105.955, -3.87596, 1.33", "-86.1448, -106.669, -3.8191, 1.77", "-86.6596, -107.08, -3.77799, 1.4", "-87.5094, -107.705, -3.70063, 1.03", "-89.1882, -108.918, -3.54419, 1.03", "-90.0314, -109.536, -3.46714, 1.03", "-90.7186, -110.073, -3.41026, 1.03", "-91.0173, -110.329, -3.38939, 1.03", "-91.6491, -111.006, -3.50025, 1.03", "-91.9621, -111.585, -3.74624, 1.03", "-92.1894, -112.261, -4.12202, 1.03", "-92.3473, -112.737, -4.39565, 1.03", "-92.5836, -113.383, -4.77552, 1.03", "-93.6949, -115.812, -6.2248, 0.74", "-94.3151, -116.778, -6.81187, 0.74", "-95.0473, -117.46, -7.19453, 0.74", "-96.0828, -118.032, -7.52048, 0.74", "-96.7233, -118.265, -7.64105, 1.4", "-97.6276, -118.51, -7.72822, 1.4", "-98.6462, -118.744, -7.72675, 0.81", "-100.225, -119.16, -7.77072, 0.81", "-101.499, -119.682, -7.88855, 0.52", "-101.913, -119.959, -7.95777, 1.03", "-102.444, -120.492, -8.07818, 0.74", "-102.969, -121.143, -8.29591, 1.03", "-103.598, -122.032, -8.619, 1.03", "-104.008, -122.656, -8.84543, 1.03", "-104.559, -123.449, -9.1163, 1.03", "-105.253, -124.289, -9.41792, 1.03", "-107.325, -126.246, -10.1435, 0.66", "-108.136, -126.817, -10.36, 0.66", "-108.569, -127.035, -10.4418, 0.66", "-109.017, -127.185, -10.4893, 0.96", "-110.455, -127.473, -10.518, 0.96", "-111.61, -127.575, -10.4284, 0.96", "-112.685, -127.601, -10.1969, 0.96", "-113.221, -127.622, -10.0827, 0.52", "-113.821, -127.722, -9.94211, 0.52", "-114.39, -127.908, -9.80062, 0.52", "-115.002, -128.193, -9.64128, 0.52", "-115.94, -128.67, -9.39592, 0.52", "-116.584, -128.953, -9.18729, 0.52", "-118.355, -129.551, -8.56507, 0.52", "-119.076, -129.747, -8.30422, 1.18", "-119.973, -129.921, -7.97901, 1.55", "-121.13, -130.071, -7.56367, 1.69", "-122.794, -130.169, -6.96732, 0.96", "-124.146, -130.186, -6.49651, 0.96", "-124.684, -130.166, -6.31963, 0.74", "-125.969, -130.048, -6.02822, 0.74", "-126.89, -129.908, -5.91642, 1.03", "-127.697, -129.755, -5.90449, 1.55", "-128.776, -129.576, -6.01482, 1.03", "-129.617, -129.472, -6.16005, 0.81", "-132.326, -129.33, -6.78705, 0.81", "-133.378, -129.427, -7.03598, 0.81", "-134.096, -129.668, -7.15414, 0.81", "-134.959, -130.217, -7.13969, 1.25", "-135.501, -130.666, -6.99527, 1.69", "-135.893, -130.998, -6.80835, 1.69", "-137.654, -132.4, -5.66443, 0.81", "-138.209, -132.703, -5.32041, 0.81", "-138.934, -132.883, -4.91219, 0.81", "-140.117, -132.879, -4.32432, 1.55", "-141.074, -132.737, -4.03129, 1.99", "-141.594, -132.623, -3.95332, 1.99", "-143.0, -132.272, -3.93474, 0.81", "-143.854, -132.074, -3.96959, 0.81", "-144.843, -131.9, -4.06383, 0.81", "-147.316, -131.679, -4.41956, 0.52", "-148.121, -131.673, -4.65071, 0.88", "-149.021, -131.749, -4.99504, 1.62", "-149.233, -131.797, -5.09257, 2.06", "-149.998, -132.043, -5.43663, 1.33", "-150.82, -132.352, -5.77283, 1.11", "-153.421, -133.345, -6.57767, 0.66", "-154.015, -133.565, -6.76399, 0.44", "-155.042, -133.941, -7.06347, 0.44", "-155.923, -134.268, -7.26284, 0.29", "-156.425, -134.421, -7.31298, 0.29", "-156.742, -134.506, -7.29461, 0.07", "-157.31, -134.657, -7.17038, 0.07", "-157.94, -134.79, -7.04743, 1.33", "-158.573, -134.892, -6.94941, 2.21", "-160.447, -135.238, -6.78888, 0.07", "-161.205, -135.402, -6.73415, 0.07", "-161.422, -135.448, -6.72017, 0.96" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-82.305, -103.226, -4.03528, 0.44", "-81.3121, -103.699, -4.66838, 0.44" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-31.16, -16.7834, 0.070692, 2.06", "-34.6884, -16.5225, -2.03858, 2.06", "-34.6884, -16.5225, -2.03858, 2.06", "-35.7257, -16.6576, -2.55857, 0.96", "-36.3736, -16.7962, -2.85686, 0.74", "-36.975, -16.974, -3.11043, 0.74", "-37.4617, -17.1667, -3.29691, 0.74", "-37.8795, -17.5443, -3.31547, 0.74", "-38.1921, -17.8414, -3.32921, 0.74", "-38.3729, -18.0219, -3.33732, 0.74", "-38.675, -18.2982, -3.34684, 0.74", "-39.1912, -18.7033, -3.35424, 0.74", "-39.6262, -19.0203, -3.35735, 1.55", "-40.4439, -19.5813, -3.35823, 1.92", "-41.3425, -20.1822, -3.3566, 1.92", "-41.84, -20.5051, -3.35423, 1.92", "-42.4188, -20.8649, -3.34925, 1.92", "-42.8472, -21.1197, -3.34419, 1.92" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-31.16, -16.7834, 0.070692, 1.18", "-32.1006, -16.5793, -0.551321, 1.18", "-32.917, -16.4172, -1.05639, 1.18", "-33.8226, -16.2183, -1.56754, 1.18", "-35.2316, -15.9448, -2.8376, 1.18", "-37.6487, -15.4263, -5.38339, 1.18", "-38.8788, -15.1168, -6.73226, 1.18", "-39.5806, -14.923, -7.52914, 1.18", "-40.971, -14.4492, -9.16577, 1.18", "-45.1372, -12.6376, -14.1771, 1.55", "-45.7744, -12.334, -15.3606, 1.55", "-46.4895, -11.959, -17.084, 1.55", "-46.9814, -11.702, -18.4943, 1.55", "-47.5887, -11.413, -20.3871, 1.55", "-48.0357, -11.2296, -21.8795, 1.55", "-51.4999, -10.0637, -32.9665, 0.96", "-51.6524, -10.0295, -33.5233, 0.66", "-51.7857, -10.0191, -34.1192, 0.66", "-51.9309, -10.0452, -34.9385, 0.66", "-51.9576, -10.0632, -35.1684, 0.66", "-51.9811, -10.1063, -35.5368, 0.66", "-51.3883, -10.1672, -35.432, 0.66", "-50.6948, -10.0336, -35.3626, 0.66", "-49.9222, -9.71625, -35.3292, 0.66", "-49.7263, -9.606, -35.3284, 0.74", "-49.123, -9.12898, -35.3619, 0.74", "-48.7943, -8.80568, -35.3967, 0.74", "-48.4639, -8.36943, -35.8914, 0.66", "-48.118, -7.74899, -36.9099, 1.99", "-47.9625, -7.35586, -37.6131, 2.73", "-47.8606, -6.85982, -38.5801, 2.73", "-47.8551, -6.8632, -38.7376, 2.28", "-47.7183, -7.20696, -44.3143, 0.88", "-47.7085, -7.23468, -44.6907, 0.52", "-47.6891, -7.29042, -45.3361, 0.52", "-47.6528, -7.41201, -46.6021, 1.77", "-47.1185, -9.74323, -69.7334, 0.88", "-47.1087, -9.79582, -70.2514, 0.88", "-47.0886, -9.93369, -71.5648, 0.88", "-47.0804, -9.98329, -72.058, 0.88", "-47.0558, -10.0905, -73.2305, 1.84", "-47.0289, -10.1469, -74.1483, 0.52", "-47.2386, -9.7785, -75.204, 0.29", "-47.3226, -9.64823, -75.6958, 0.29", "-47.5058, -9.4202, -76.8697, 1.11", "-47.5667, -9.33826, -77.408, 0.07", "-47.6397, -9.19422, -78.7016, 0.07", "-47.6982, -9.09679, -80.4317, 0.07", "-47.723, -9.08188, -81.1253, 0.07", "-47.7356, -9.10042, -81.6974, 0.07", "-47.7353, -9.15905, -82.2919, 0.07", "-47.732, -9.20236, -82.616, 0.15", "-47.7588, -9.29276, -83.3503, 0.66", "-47.8357, -9.36871, -84.0619, 0.66", "-47.9972, -9.4388, -84.9503, 0.74", "-48.3754, -9.54786, -86.5111, 0.74", "-48.4579, -9.55013, -86.7794, 0.74", "-49.3522, -9.36036, -88.7586, 0.29", "-49.7871, -9.22559, -89.3992, 0.29", "-50.3013, -9.03902, -89.973, 0.29", "-51.4851, -8.59029, -91.1569, 0.29", "-52.0473, -8.387, -91.7635, 0.29", "-52.9442, -8.10178, -92.9579, 1.77", "-53.6172, -7.91108, -94.0412, 0.74", "-53.8202, -7.84947, -94.3662, 0.22", "-54.2697, -7.70237, -95.0579, 0.22", "-55.0885, -7.40734, -96.2682, 0.22", "-55.504, -7.23905, -96.9028, 0.22", "-55.8391, -7.06248, -97.5159, 0.22", "-56.1891, -6.84433, -98.1991, 0.22", "-56.5446, -6.60729, -98.8501, 0.22", "-56.9531, -6.29797, -99.5402, 1.55", "-57.4137, -5.91878, -100.255, 0.44", "-58.2656, -5.17704, -101.682, 0.44", "-58.6635, -4.80971, -102.479, 0.44", "-58.743, -4.73312, -102.671, 0.44", "-59.2518, -4.2426, -104.178, 1.47", "-59.4503, -4.05002, -104.916, 0.44", "-59.6254, -3.85489, -105.658, 0.44", "-59.8313, -3.58048, -106.494, 0.44", "-59.965, -3.35634, -107.086, 0.44", "-60.0973, -3.0933, -107.756, 0.44", "-60.1871, -2.84709, -108.441, 0.44", "-60.2961, -2.48411, -109.493, 1.4", "-60.3487, -2.30873, -110.065, 0.37", "-60.3962, -2.11841, -110.942, 0.37", "-60.4096, -2.05494, -111.354, 0.37", "-60.4698, -1.87883, -112.499, 0.37", "-60.5226, -1.7765, -113.025, 0.37", "-60.7149, -1.43803, -114.535, 0.37", "-60.8937, -1.12852, -115.721, 0.37", "-60.9778, -0.985004, -116.196, 0.37", "-61.2928, -0.442757, -117.914, 2.06", "-61.5395, 0.00658973, -119.221, 0.37", "-61.6067, 0.133983, -119.59, 0.37", "-61.8201, 0.526135, -120.671, 0.37", "-62.0438, 0.904883, -121.709, 0.37", "-62.2873, 1.28269, -122.798, 0.37", "-62.4718, 1.53782, -123.64, 0.37", "-62.5936, 1.68426, -124.127, 0.37", "-62.7546, 1.86828, -124.662, 0.37", "-63.0626, 2.22019, -125.592, 1.03", "-63.3635, 2.55514, -126.39, 0.52", "-63.48, 2.68665, -126.663, 0.22", "-63.8416, 3.07822, -127.555, 0.22", "-64.2545, 3.51608, -128.687, 0.22", "-64.6247, 3.89559, -129.878, 0.22", "-64.8788, 4.13738, -130.861, 1.69", "-65.1194, 4.35417, -131.875, 0.37", "-65.4029, 4.60418, -133.22, 0.37", "-65.5483, 4.71756, -133.902, 0.37", "-65.6672, 4.7988, -134.399, 0.37", "-65.8597, 4.91581, -135.171, 0.37", "-66.0115, 4.9724, -135.899, 0.37", "-66.2838, 5.02205, -137.222, 0.37", "-66.3789, 5.03742, -137.667, 1.33", "-66.5624, 5.10775, -138.521, 0.52", "-66.645, 5.15825, -138.834, 0.37", "-67.0665, 5.47582, -140.259, 0.37", "-67.1376, 5.53794, -140.497, 0.37", "-67.5914, 5.99906, -142.01, 0.37", "-67.9466, 6.42182, -143.424, 1.55", "-68.1978, 6.74648, -144.592, 0.52", "-68.2316, 6.79249, -144.754, 0.52", "-68.3695, 7.00302, -145.512, 0.37", "-68.4378, 7.12904, -146.02, 0.37", "-68.5155, 7.38551, -146.926, 0.37", "-68.5138, 7.45299, -147.127, 0.37", "-68.4589, 7.70419, -147.787, 0.37", "-68.3149, 8.30015, -149.161, 0.37", "-68.2874, 8.39454, -149.387, 0.37", "-68.1867, 8.75197, -150.569, 1.84", "-68.1057, 9.04203, -151.741, 0.44", "-68.0848, 9.10941, -152.125, 0.44", "-68.0671, 9.20743, -152.832, 0.44", "-68.104, 9.40102, -154.701, 0.44", "-68.1914, 9.49425, -156.406, 0.44", "-68.2201, 9.50455, -156.748, 0.44", "-68.3221, 9.56722, -157.752, 0.66", "-68.3738, 9.6816, -158.381, 0.66", "-68.3929, 9.76237, -158.655, 0.66", "-68.4042, 10.0184, -159.211, 0.66", "-68.3684, 10.5256, -160.093, 0.66", "-68.3288, 10.8234, -160.629, 0.66", "-68.1028, 11.6721, -162.428, 1.25", "-68.1028, 11.6721, -162.428, 1.69", "-67.9266, 11.8856, -163.463, 1.03", "-67.8563, 11.9427, -163.933, 0.44", "-67.7302, 12.0069, -164.982, 0.44", "-67.5871, 12.0745, -166.584, 0.44", "-67.4627, 12.1994, -169.125, 0.66", "-67.4457, 12.2894, -170.356, 0.66", "-67.4632, 12.4175, -171.761, 0.66", "-67.5018, 12.5563, -172.808, 0.66", "-67.5641, 12.7542, -173.8, 0.66", "-67.7204, 13.292, -175.766, 1.18", "-67.8441, 13.7758, -177.393, 1.18", "-67.8592, 13.8793, -177.778, 1.18", "-67.8278, 14.108, -178.787, 1.18", "-67.7677, 14.2288, -179.562, 0.96", "-67.6543, 14.3338, -180.78, 0.96", "-67.4434, 14.3707, -182.64, 0.96", "-67.2505, 14.3033, -184.529, 0.96", "-67.1919, 14.2352, -185.435, 0.96", "-67.1825, 14.1784, -185.813, 0.96", "-67.2627, 13.7892, -187.522, 0.96", "-67.3167, 13.7083, -187.84, 0.96", "-67.4745, 13.6146, -188.314, 0.74", "-67.7708, 13.5819, -188.919, 0.74", "-68.2613, 13.722, -189.819, 0.74", "-68.4978, 13.8403, -190.233, 0.74", "-69.1625, 14.2321, -191.358, 0.74", "-69.543, 14.4279, -191.985, 1.11", "-70.1575, 14.699, -192.972, 0.74", "-70.4076, 14.781, -193.396, 0.74", "-70.7792, 14.8274, -194.051, 0.74", "-71.1918, 14.7085, -194.852, 0.74", "-71.5759, 14.4383, -195.677, 0.74", "-71.7982, 14.2422, -196.188, 0.74", "-72.169, 13.9394, -196.994, 0.74", "-72.6085, 13.6587, -197.881, 0.74", "-73.2026, 13.394, -199.061, 1.4", "-73.4597, 13.3323, -199.564, 1.4", "-73.6232, 13.3187, -199.903, 1.77", "-74.241, 13.3185, -201.111, 0.74", "-74.6266, 13.3481, -201.806, 0.74", "-75.0916, 13.4223, -202.586, 0.74", "-75.5253, 13.5385, -203.18, 0.74", "-76.1549, 13.7443, -203.908, 0.74", "-76.767, 13.9575, -204.582, 0.74", "-77.3986, 14.1967, -205.248, 0.74", "-77.8151, 14.3699, -205.67, 0.74", "-78.9342, 14.8473, -206.725, 1.47", "-79.6738, 15.1621, -207.392, 0.44", "-80.4956, 15.4929, -208.101, 0.44", "-80.796, 15.5767, -208.357, 0.44", "-81.5879, 15.6483, -208.959, 0.44", "-81.778, 15.6307, -209.09, 0.44", "-81.968, 15.576, -209.208, 0.44", "-82.6221, 15.3699, -209.521, 1.25", "-83.9672, 15.0598, -209.98, 0.44", "-84.5414, 14.9713, -210.148, 0.37", "-85.0651, 14.9227, -210.283, 0.37", "-85.6307, 14.9245, -210.435, 0.37", "-86.6331, 15.0102, -210.795, 0.88", "-87.8538, 15.2373, -211.353, 0.29", "-88.4034, 15.3942, -211.652, 0.29", "-88.6553, 15.4786, -211.81, 0.52", "-89.8435, 15.9159, -212.616, 1.47", "-91.5893, 16.5651, -213.865, 0.44", "-92.236, 16.772, -214.351, 0.44", "-92.7754, 16.9085, -214.764, 0.74", "-93.3496, 16.9947, -215.168, 0.66", "-93.9401, 17.0207, -215.512, 0.66", "-94.5704, 16.9717, -215.77, 0.66", "-95.5587, 16.8422, -215.999, 0.88", "-95.8733, 16.7978, -216.055, 0.88", "-96.8658, 16.6907, -216.209, 1.25", "-98.0706, 16.649, -216.385, 0.52", "-99.125, 16.7178, -216.561, 0.29", "-99.4309, 16.7793, -216.623, 0.29", "-99.8777, 16.9026, -216.732, 0.29", "-100.513, 17.087, -216.908, 0.29", "-101.226, 17.278, -217.133, 0.29", "-102.069, 17.4479, -217.417, 0.29", "-103.159, 17.5613, -217.784, 1.11", "-104.374, 17.579, -218.169, 0.52", "-104.706, 17.5616, -218.267, 0.22", "-105.388, 17.4926, -218.459, 0.22", "-105.612, 17.463, -218.523, 0.22", "-106.549, 17.2359, -218.789, 1.18", "-107.456, 16.8795, -219.012, 0.59", "-107.919, 16.6522, -219.135, 0.22", "-108.245, 16.4819, -219.228, 0.22", "-108.603, 16.2768, -219.356, 0.22", "-109.881, 15.4793, -219.905, 0.96", "-111.063, 14.6532, -220.526, 0.15", "-111.702, 14.1867, -220.921, 0.37", "-112.087, 13.9278, -221.2, 0.37", "-112.615, 13.6486, -221.618, 0.59", "-112.933, 13.5349, -221.9, 0.59", "-113.3, 13.493, -222.267, 0.59", "-113.579, 13.4683, -222.55, 0.59", "-114.124, 13.3053, -222.964, 0.59", "-115.061, 12.8496, -223.534, 0.59", "-115.399, 12.6825, -223.704, 0.59", "-116.012, 12.428, -223.995, 0.59", "-116.607, 12.219, -224.273, 0.74", "-117.24, 12.0126, -224.586, 0.74", "-117.965, 11.8066, -225.034, 0.74", "-118.991, 11.5782, -225.801, 1.11", "-120.242, 11.3127, -226.813, 0.44", "-120.801, 11.1997, -227.307, 0.44", "-121.231, 11.1055, -227.711, 1.18", "-122.491, 10.7748, -228.96, 0.52", "-122.776, 10.6842, -229.248, 0.52", "-123.219, 10.5785, -229.656, 0.52", "-123.483, 10.5703, -229.853, 0.29", "-124.013, 10.6341, -230.136, 0.29", "-124.611, 10.7489, -230.372, 0.29", "-125.542, 10.9524, -230.627, 1.18", "-126.982, 11.2556, -231.032, 0.29", "-127.692, 11.4039, -231.259, 0.29", "-128.333, 11.5249, -231.488, 0.29", "-129.08, 11.6302, -231.777, 0.96", "-130.276, 11.6512, -232.256, 0.44", "-130.916, 11.5369, -232.539, 0.44", "-131.373, 11.3664, -232.769, 0.44", "-131.732, 11.2162, -232.964, 0.44", "-132.021, 11.1214, -233.092, 0.44", "-132.523, 11.0234, -233.234, 0.44", "-133.185, 11.0322, -233.317, 0.44", "-134.132, 11.1726, -233.362, 1.03", "-134.89, 11.3298, -233.373, 0.59", "-136.565, 11.7219, -233.374, 0.59", "-137.455, 11.9457, -233.371, 1.11", "-138.69, 12.2501, -233.352, 0.59", "-139.608, 12.4604, -233.324, 0.29", "-140.008, 12.5364, -233.313, 0.29", "-140.477, 12.6177, -233.332, 0.29", "-140.883, 12.7366, -233.419, 0.29", "-141.422, 12.9804, -233.625, 0.29", "-141.843, 13.2331, -233.861, 0.29", "-142.126, 13.402, -234.045, 0.29", "-142.947, 13.8713, -234.598, 1.18", "-144.255, 14.5714, -235.482, 0.52", "-145.27, 15.1079, -236.148, 0.37", "-145.57, 15.2669, -236.333, 0.37", "-146.456, 15.6787, -236.859, 0.37", "-146.842, 15.8309, -237.077, 0.37", "-147.492, 16.0476, -237.432, 0.37", "-148.691, 16.4863, -238.091, 1.33", "-149.73, 17.0072, -238.689, 0.59", "-150.397, 17.4333, -239.158, 0.37", "-150.615, 17.61, -239.352, 0.37", "-150.884, 17.8551, -239.635, 0.37", "-151.48, 18.4741, -240.396, 0.37", "-151.754, 18.7799, -240.778, 0.37", "-152.145, 19.2607, -241.356, 0.37", "-152.547, 19.7939, -241.979, 0.37", "-152.872, 20.2611, -242.505, 0.37", "-153.35, 21.0511, -243.355, 0.96", "-153.923, 22.1448, -244.508, 0.52", "-154.156, 22.7146, -245.073, 0.52", "-154.274, 23.1802, -245.5, 0.52", "-154.317, 23.7728, -246.002, 1.03", "-154.212, 24.5866, -246.657, 0.52", "-154.114, 24.9277, -246.915, 0.52", "-154.009, 25.1983, -247.11, 0.52", "-153.866, 25.6951, -247.451, 0.52", "-153.802, 26.0776, -247.7, 0.52", "-153.803, 26.5745, -248.025, 0.52", "-153.919, 27.2523, -248.472, 0.52", "-154.013, 27.5779, -248.689, 0.52", "-154.474, 28.6096, -249.405, 1.03", "-154.742, 29.0602, -249.734, 0.37", "-155.211, 29.754, -250.254, 0.37", "-155.461, 30.1101, -250.517, 0.37", "-155.619, 30.3418, -250.681, 1.18", "-156.048, 30.9711, -251.171, 0.07", "-156.251, 31.2547, -251.426, 0.07", "-156.585, 31.7684, -251.921, 0.07", "-156.786, 32.1411, -252.283, 0.74", "-156.985, 32.5645, -252.687, 0.37", "-157.328, 33.3887, -253.48, 0.37", "-157.553, 33.9917, -254.083, 0.37", "-157.764, 34.4739, -254.595, 0.96", "-157.874, 34.6665, -254.833, 0.96" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "24.4256, -4.43638, -13.3417, 0.59", "25.2005, -8.97456, 12.1293, 0.59", "25.2447, -9.1983, 13.2713, 0.59", "25.2897, -9.41679, 14.2861, 0.59", "25.3816, -9.8665, 16.3212, 0.59", "25.5079, -10.4979, 19.0743, 0.59", "25.5957, -10.9532, 20.9592, 0.59", "25.8659, -12.373, 20.1164, 0.59", "26.0164, -13.3736, 19.5876, 0.59", "26.2563, -15.1309, 18.7927, 0.59", "26.4695, -16.1362, 18.4517, 0.59", "26.7873, -16.9546, 18.1661, 0.59", "27.2328, -17.7754, 17.8256, 0.44", "27.7313, -18.5469, 17.4455, 0.44", "28.6223, -19.8044, 16.8015, 0.44", "30.0001, -21.6186, 15.8896, 0.44", "31.0167, -22.9925, 15.1931, 0.44", "31.4173, -23.608, 14.9049, 0.44", "32.0937, -24.7574, 14.3797, 0.44", "32.5079, -25.4808, 14.0583, 0.44", "32.8614, -26.1002, 13.8037, 0.44", "33.5095, -27.1813, 13.4235, 0.44", "35.6703, -30.5374, 12.3459, 0.44", "36.4581, -31.6665, 11.9914, 0.44", "37.1341, -32.5753, 11.7109, 0.44", "37.9567, -33.661, 11.3573, 0.44", "38.7503, -34.7305, 10.968, 0.44", "39.586, -35.8812, 10.519, 0.44", "40.1033, -36.6867, 10.1812, 0.44", "40.5746, -37.5796, 9.73592, 0.44", "40.9895, -38.5061, 9.17219, 0.44", "41.5418, -39.9838, 8.18957, 0.44", "41.9879, -41.3372, 7.32362, 0.44", "42.511, -43.0349, 6.31841, 0.44", "43.1911, -45.4024, 4.9768, 0.44", "43.6171, -46.929, 4.17347, 0.44", "44.3986, -49.6344, 2.86218, 0.44", "45.1415, -52.064, 1.84633, 0.44", "45.6176, -53.541, 1.34586, 0.44", "46.0643, -54.8705, 1.01861, 0.44", "46.5734, -56.3792, 0.78654, 0.44", "47.0881, -57.8588, 0.640366, 0.44", "48.2569, -61.1348, 0.430457, 0.44", "48.8901, -62.9888, 0.336659, 0.44", "49.2424, -64.0051, 0.301253, 0.44", "49.8521, -65.7525, 0.271206, 0.44", "50.2848, -66.9982, 0.249636, 0.44", "50.6249, -68.0322, 0.230043, 0.44", "51.0517, -69.4034, 0.19872, 0.44", "51.5922, -71.21, 0.0537136, 0.44", "52.1482, -73.1693, -0.149105, 0.44", "52.6805, -75.1155, -0.376523, 0.44", "53.0512, -76.4372, -0.566847, 0.44", "53.6962, -78.4892, -0.89571, 0.44", "54.479, -80.6778, -1.26619, 0.44", "55.3276, -82.8336, -1.6438, 0.44", "56.4831, -85.4426, -2.1412, 0.44", "57.4696, -87.4688, -2.57018, 0.44", "58.6784, -89.7366, -3.08838, 0.44", "60.0302, -92.1219, -3.69852, 0.44", "61.2128, -94.1611, -4.23421, 0.44", "62.0159, -95.5738, -4.6264, 0.44", "63.2117, -97.8333, -5.2583, 0.44", "64.1727, -99.8239, -5.78528, 0.44", "65.2707, -102.277, -6.56746, 0.44", "66.1351, -104.386, -7.32001, 0.44", "66.8439, -106.269, -8.02102, 0.44", "67.3151, -107.575, -8.53491, 0.44", "67.8256, -108.994, -9.12083, 0.44", "68.9244, -111.978, -10.2425, 0.44", "69.1708, -112.607, -10.4497, 0.44", "69.6897, -113.85, -10.7854, 0.44", "70.9779, -116.758, -11.3418, 0.44", "71.6294, -118.235, -11.4618, 0.44", "72.6958, -120.747, -11.3458, 0.44", "73.1569, -121.906, -11.1703, 0.44", "73.8231, -123.652, -10.854, 0.44", "74.269, -124.913, -10.5585, 0.44", "74.9219, -126.993, -9.8807, 0.44", "75.5177, -129.033, -9.20075, 0.44", "75.7378, -129.811, -8.93829, 0.44", "76.1151, -131.181, -8.44639, 0.44", "76.6578, -133.118, -7.6951, 0.44", "77.195, -134.979, -6.94924, 0.44", "77.8674, -136.905, -6.19728, 0.44", "78.4727, -138.3, -5.74736, 0.44", "79.0301, -139.333, -5.49014, 0.44", "80.7223, -141.804, -5.1489, 0.44", "81.7651, -143.039, -5.19314, 0.44", "83.5016, -144.784, -5.5777, 0.44", "85.5016, -146.551, -6.20289, 0.44", "87.0179, -147.773, -6.76777, 0.44", "88.9136, -149.141, -7.51106, 0.44", "90.8917, -150.394, -8.31073, 0.44", "92.43, -151.271, -8.84587, 0.44", "94.2464, -152.216, -9.39288, 0.44", "95.8169, -152.941, -9.81374, 0.44", "97.2949, -153.551, -10.2328, 0.44", "99.0661, -154.213, -10.7208, 0.44", "102.198, -155.242, -11.5299, 0.44", "104.963, -156.078, -12.2144, 0.44", "107.67, -156.87, -12.942, 0.44", "109.634, -157.482, -13.5237, 0.44", "110.826, -157.913, -13.9243, 0.44", "112.487, -158.62, -14.6122, 0.44", "114.029, -159.411, -15.3534, 0.44", "116.209, -160.785, -16.5121, 0.44", "117.718, -161.919, -17.4182, 0.44", "119.112, -163.081, -18.405, 0.44", "120.722, -164.597, -19.7306, 0.44", "121.598, -165.525, -20.6078, 0.44", "122.534, -166.595, -21.6744, 0.44", "123.608, -167.918, -22.963, 0.44", "124.341, -168.845, -23.7832, 0.44", "125.182, -169.913, -24.5962, 0.44", "126.998, -172.197, -25.9902, 0.44", "128.016, -173.488, -26.6394, 0.44", "129.027, -174.783, -27.1341, 0.44", "130.403, -176.597, -27.6373, 0.44", "131.555, -178.144, -27.915, 0.44", "133.208, -180.387, -28.108, 0.44", "134.647, -182.363, -28.09, 0.44", "135.743, -183.883, -28.0056, 0.44", "136.585, -185.043, -27.9174, 0.44", "137.961, -187.013, -27.7261, 0.44", "139.245, -188.977, -27.4824, 0.44", "140.074, -190.282, -27.2988, 0.44", "141.643, -192.782, -26.9112, 0.44", "142.639, -194.401, -26.6484, 0.44", "144.264, -197.089, -26.2165, 0.44", "145.556, -199.297, -25.9063, 0.44" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "24.4256, -4.43638, -13.3417, 1.25", "28.3332, -3.87276, -14.8507, 1.25", "29.7758, -3.66469, -15.4078, 1.25", "31.1646, -3.46437, -15.9441, 1.69", "32.963, -3.20498, -16.6385, 2.87", "34.0744, -3.04467, -17.0677, 2.87" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "32.2041, 24.577, -1.77581, 0.736338", "43.949, 33.9076, -1.77581, 0.736338", "55.6938, 43.2381, -1.77581, 0.736338" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-22.0841, 33.0292, 19.277, 0.66", "-24.6824, 32.2472, 19.8661, 0.66" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-22.0841, 33.0292, 19.277, 0.66", "-23.5365, 33.6219, 19.1919, 0.66" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-42.8472, -21.1197, -3.34419, 1.84", "-45.9348, -21.9802, 1.61974, 1.84", "-46.7641, -22.1317, 2.36532, 0.66", "-47.3279, -22.2282, 2.68507, 1.11", "-47.6939, -22.3122, 2.83539, 1.92", "-48.6511, -22.5556, 3.02371, 1.92", "-49.9192, -22.9406, 3.10433, 1.4", "-52.057, -23.7495, 2.59678, 1.4", "-53.5536, -24.5274, 2.09178, 1.03", "-54.8461, -25.3045, 1.33004, 1.03", "-57.1709, -26.9145, -0.496673, 1.4", "-57.8054, -27.416, -1.10924, 1.4", "-58.6286, -28.1371, -2.03464, 1.11", "-59.2607, -28.7294, -2.83548, 1.77", "-61.6695, -30.9639, -5.92951, 2.06", "-62.6865, -31.8024, -7.06707, 1.33", "-63.2079, -32.17, -7.48339, 0.74", "-63.7533, -32.4734, -7.83452, 0.44", "-64.1417, -32.6283, -8.07422, 0.44", "-64.5448, -32.761, -8.30068, 1.25", "-65.4746, -33.0675, -8.67812, 0.96", "-66.517, -33.4125, -9.21014, 0.74", "-67.1278, -33.6858, -9.56542, 0.37", "-69.5279, -35.1723, -11.0383, 0.07", "-69.9465, -35.4975, -11.2876, 1.03", "-70.6521, -36.1313, -11.6744, 1.55", "-71.6648, -37.0997, -12.1466, 2.06", "-72.6552, -38.0744, -12.4994, 2.58", "-73.8447, -39.2425, -12.7719, 1.77", "-74.8278, -40.1937, -12.8651, 0.96", "-75.7444, -40.9488, -13.1447, 0.96", "-76.7104, -41.6427, -13.6242, 1.25", "-77.4892, -42.1306, -14.1302, 1.25", "-78.3433, -42.6239, -14.7749, 1.25", "-79.343, -43.205, -15.6197, 1.25", "-83.277, -45.624, -19.1214, 0.66", "-83.8148, -45.9878, -19.6044, 0.66", "-84.5925, -46.5263, -20.3883, 1.18", "-85.493, -47.1521, -21.3137, 2.14", "-86.2477, -47.6957, -22.0748, 2.65", "-87.068, -48.3468, -22.8405, 2.65", "-87.9089, -49.1464, -23.4842, 1.47", "-90.3159, -51.6124, -25.5896, 0.96", "-90.9084, -52.2962, -26.1961, 0.96", "-91.23, -52.7274, -26.5806, 0.96", "-91.609, -53.3684, -27.1217, 0.96", "-91.9738, -54.1111, -27.6844, 0.96", "-92.1838, -54.6195, -27.972, 0.96", "-92.4406, -55.3099, -28.1191, 0.96", "-92.7837, -55.8941, -28.2254, 0.96", "-93.3337, -56.1711, -28.4122, 0.96", "-94.6389, -56.4723, -28.9312, 0.96", "-95.3221, -56.5593, -29.4081, 0.96", "-96.0196, -56.6505, -29.9815, 0.96", "-96.5765, -56.7433, -30.4624, 0.96", "-98.6299, -57.1412, -32.5561, 0.07", "-99.2882, -57.3094, -33.3199, 1.77", "-101.484, -58.1141, -36.2224, 1.25", "-101.89, -58.2959, -36.7952, 0.81", "-102.586, -58.6811, -37.8066, 0.66", "-103.906, -59.607, -39.6969, 0.29", "-104.179, -59.8405, -40.0538, 0.29", "-104.588, -60.2545, -40.5628, 0.29", "-104.919, -60.6332, -40.882, 1.47", "-105.642, -61.3806, -41.6152, 1.92", "-106.202, -61.9464, -42.1886, 1.4", "-107.434, -63.0088, -43.616, 1.4", "-108.355, -63.7185, -44.7798, 0.66", "-109.065, -64.216, -45.6905, 0.37", "-110.915, -65.4175, -48.0283, 0.07", "-111.204, -65.5971, -48.3891, 0.07", "-113.814, -67.077, -51.3862, 1.4", "-114.619, -67.4822, -52.3383, 1.84", "-115.383, -67.8327, -53.2307, 1.18", "-115.969, -68.1215, -53.889, 0.15", "-116.645, -68.4789, -54.5252, 0.15", "-117.593, -69.046, -55.2414, 0.15", "-120.882, -71.3865, -57.0825, 1.55", "-122.036, -72.2367, -57.7651, 0.96", "-122.62, -72.7191, -58.1122, 0.07", "-123.024, -72.9844, -58.5479, 1.4", "-124.647, -73.9172, -60.5739, 1.4", "-126.168, -74.819, -62.6577, 0.52", "-126.652, -75.1062, -63.3494, 0.15", "-127.236, -75.4623, -64.2298, 0.15", "-130.749, -77.6941, -69.7228, 1.62", "-131.494, -78.1988, -70.9418, 0.52", "-131.781, -78.3771, -71.4303, 0.15", "-132.07, -78.5673, -71.887, 0.15", "-133.078, -79.2383, -73.3484, 0.15", "-133.498, -79.5465, -73.8612, 1.33", "-133.96, -79.9524, -74.2373, 1.33", "-136.279, -81.5992, -76.5137, 1.99", "-136.767, -81.8863, -77.0038, 1.62", "-137.656, -82.3584, -77.8855, 0.44", "-138.341, -82.7061, -78.5528, 0.44", "-138.875, -82.9779, -79.0293, 0.44", "-141.549, -83.9654, -81.912, 1.4", "-142.112, -84.1386, -82.5604, 1.84", "-142.887, -84.3432, -83.4612, 0.88", "-143.702, -84.5142, -84.4302, 0.88", "-144.387, -84.6366, -85.2345, 0.88", "-149.055, -85.517, -90.5615, 0.29", "-149.813, -85.668, -91.3876, 1.84", "-151.196, -85.9327, -92.9036, 0.59", "-152.926, -86.2545, -94.7706, 0.07", "-153.193, -86.304, -95.0741, 0.81", "-153.886, -86.4755, -95.8055, 0.81", "-155.524, -87.0148, -97.2257, 0.07", "-156.086, -87.1877, -97.7218, 1.03", "-156.519, -87.3172, -98.0861, 1.69", "-160.407, -88.5852, -101.072, 0.15", "-162.146, -89.1651, -102.33, 0.15", "-162.85, -89.4127, -102.793, 1.25", "-163.523, -89.6707, -103.186, 1.69", "-164.812, -90.2049, -103.864, 0.74", "-166.183, -90.824, -104.475, 0.07", "-166.991, -91.2308, -104.723, 0.66", "-167.936, -91.7091, -105.041, 1.62", "-169.229, -92.3508, -105.46, 1.62", "-170.448, -92.9293, -105.816, 0.52", "-172.247, -93.7195, -106.372, 0.52", "-173.452, -94.2021, -106.859, 0.29", "-174.287, -94.5108, -107.265, 0.59", "-175.349, -94.8795, -107.802, 0.59", "-176.226, -95.158, -108.245, 1.11", "-178.055, -95.7095, -109.177, 1.55", "-180.753, -96.5105, -110.515, 1.55", "-182.069, -96.894, -111.204, 0.88", "-184.045, -97.4904, -112.247, 0.59", "-185.832, -98.087, -113.147, 0.22", "-186.988, -98.516, -113.652, 0.22", "-187.705, -98.8045, -113.88, 0.66", "-189.152, -99.4059, -114.272, 1.18", "-189.915, -99.7075, -114.552, 1.11", "-191.287, -100.2, -115.13, 0.59", "-192.351, -100.546, -115.585, 0.59", "-193.649, -100.878, -116.098, 0.29", "-195.442, -101.218, -116.689, 1.18", "-197.516, -101.452, -117.429, 1.55", "-198.557, -101.479, -117.887, 1.55", "-200.23, -101.448, -118.718, 0.44", "-201.744, -101.361, -119.508, 0.37", "-203.374, -101.217, -120.395, 0.37", "-206.737, -100.849, -122.216, 1.4", "-209.249, -100.501, -123.668, 0.15", "-209.851, -100.411, -124.038, 0.15", "-210.605, -100.293, -124.506, 0.15", "-211.753, -100.132, -125.149, 1.55", "-212.485, -100.066, -125.493, 1.55", "-214.742, -100.006, -126.21, 0.07", "-216.181, -99.9939, -126.596, 1.47", "-217.34, -99.9859, -126.904, 1.18", "-219.466, -100.044, -127.459, 1.69", "-221.455, -100.149, -127.898, 0.59", "-222.106, -100.198, -128.03, 1.18" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-42.8472, -21.1197, -3.34419, 1.4", "-43.1115, -24.8713, -2.1378, 1.4", "-43.244, -25.8732, -1.88523, 0.96", "-43.3422, -26.4103, -1.7857, 0.66", "-43.5289, -27.2145, -1.69189, 0.66", "-43.7216, -27.9335, -1.65904, 0.52", "-43.9635, -28.7719, -1.66787, 0.44", "-44.0996, -29.1269, -1.73416, 0.81", "-44.3449, -29.812, -1.86496, 1.69", "-44.6581, -30.8067, -2.0584, 1.99", "-45.0359, -32.1857, -2.33312, 1.69", "-45.3549, -33.4917, -2.59983, 0.66", "-45.5615, -34.4036, -2.79049, 0.66", "-45.6701, -34.9072, -2.89822, 0.66", "-45.7575, -35.3248, -2.98489, 0.66", "-46.0802, -36.8365, -3.2906, 1.47", "-46.3773, -38.1668, -3.55398, 2.14", "-46.6826, -39.4685, -3.80961, 2.14", "-46.8898, -40.3786, -3.99104, 2.14", "-47.2546, -41.9865, -4.31737, 1.33", "-47.5103, -43.2067, -4.5726, 0.81", "-47.6498, -44.0103, -4.74574, 1.18", "-47.8808, -45.5239, -5.07942, 1.62", "-48.1337, -47.026, -5.41153, 1.62", "-48.4793, -48.8362, -5.81314, 1.62", "-48.8013, -50.2535, -6.12867, 0.81", "-49.0511, -51.1049, -6.33515, 0.59", "-49.4293, -52.0812, -6.59161, 1.03", "-49.9621, -53.1335, -6.89043, 1.03", "-50.2972, -53.6631, -7.05413, 1.03", "-50.6623, -54.1773, -7.22945, 1.03", "-51.416, -55.2896, -7.63359, 0.66", "-51.7764, -56.0125, -7.90152, 0.44", "-51.9507, -56.7959, -8.18454, 0.44", "-51.9615, -57.2761, -8.3506, 1.25", "-51.9069, -58.1088, -8.61391, 1.25", "-51.8034, -59.108, -8.90069, 1.69", "-51.6899, -60.2382, -9.18554, 1.69", "-51.5771, -61.6554, -9.5406, 1.11", "-51.528, -62.4439, -9.73822, 0.81", "-51.479, -63.7664, -10.0655, 0.81", "-51.4497, -64.8926, -10.3435, 0.81", "-51.4315, -65.757, -10.5572, 0.81", "-51.4142, -66.5793, -10.7619, 0.81", "-51.4047, -67.656, -11.0304, 0.81", "-51.4202, -69.3403, -11.4503, 0.81", "-51.4403, -70.9507, -11.8554, 0.81", "-51.472, -72.0837, -12.1381, 0.81", "-51.537, -73.104, -12.3877, 1.47", "-51.7356, -74.6308, -12.7476, 1.92", "-51.9493, -75.7624, -13.0054, 2.43", "-52.1235, -76.5436, -13.1797, 2.43", "-52.5775, -78.3378, -13.5729, 1.18", "-52.8499, -79.3102, -13.7824, 1.11", "-53.1921, -80.412, -14.0154, 0.88", "-53.5342, -81.2629, -14.2384, 0.88", "-53.7574, -81.7053, -14.3707, 0.88", "-54.1223, -82.314, -14.5594, 0.74", "-54.4801, -82.8479, -14.7268, 0.74", "-55.5869, -84.4262, -15.2153, 2.06", "-57.0378, -86.4765, -15.8394, 2.43", "-58.1408, -88.0615, -16.316, 2.43", "-59.2911, -89.794, -16.8317, 1.47", "-59.9046, -90.793, -17.1275, 0.96", "-60.3699, -91.6604, -17.3781, 0.96", "-60.7415, -92.5601, -17.6202, 0.88", "-60.871, -93.1862, -17.7535, 0.88", "-60.8802, -93.8359, -17.9115, 0.88", "-60.8436, -94.1323, -17.9915, 0.88", "-60.7574, -94.7335, -18.1553, 0.88", "-60.7441, -95.2545, -18.2891, 0.88", "-60.8616, -96.0449, -18.4734, 0.88", "-61.0724, -96.8459, -18.6478, 0.88", "-61.3092, -97.5363, -18.7908, 0.88", "-61.6332, -98.3514, -18.9535, 1.4", "-62.28, -99.7702, -19.2012, 1.84", "-62.8827, -101.036, -19.4166, 2.65", "-63.6632, -102.631, -19.6821, 2.65", "-64.663, -104.631, -20.0071, 1.33", "-65.3701, -106.034, -20.23, 1.33", "-66.4982, -108.121, -20.5406, 1.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-157.874, 34.6665, -254.833, 0.22", "-157.629, 34.7993, -255.856, 0.22", "-157.48, 34.8798, -256.476, 0.22", "-157.244, 35.0081, -257.463, 0.22", "-156.876, 35.2073, -258.997, 0.22", "-156.659, 35.325, -259.904, 0.22", "-156.447, 35.4399, -260.788, 0.22" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-157.874, 34.6665, -254.833, 0.22", "-158.532, 33.1159, -254.271, 0.22", "-158.923, 32.1924, -253.936, 0.22", "-159.469, 30.9068, -253.469, 0.22", "-160.268, 29.0218, -252.785, 0.22", "-160.845, 27.661, -252.291, 0.22", "-161.007, 27.28, -252.153, 0.22" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "34.0744, -3.04467, -17.0677, 0.88", "35.9401, -6.4195, 4.47463, 0.88", "36.0509, -6.61916, 5.7375, 0.88", "36.2273, -6.92938, 7.92694, 0.44", "36.2712, -6.97807, 8.6997, 0.44", "36.2262, -6.67621, 10.2132, 0.44", "36.0376, -5.90373, 12.039, 0.44", "36.6654, -8.177, 9.52083, 0.44", "37.0982, -9.8498, 7.47512, 0.44", "37.5405, -11.658, 5.21386, 0.44", "38.2892, -15.4801, 0.231361, 0.44", "38.4386, -16.5583, -1.28283, 0.44", "38.6473, -18.5176, -4.3347, 0.44", "38.8667, -21.1602, -8.79175, 0.44", "38.9099, -21.6195, -9.65208, 0.44", "39.089, -23.3958, -13.119, 0.44", "39.2659, -25.4815, -17.3405, 0.44", "39.4656, -27.7896, -22.2099, 0.44", "39.5779, -28.923, -24.526, 0.44", "39.7809, -30.798, -28.2839, 0.44", "39.8432, -31.2462, -29.2061, 0.44", "40.0913, -32.6046, -31.9631, 0.44", "40.3501, -34.1355, -34.7264, 0.44", "40.5097, -35.0974, -36.1455, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "34.0744, -3.04467, -17.0677, 2.14", "37.6669, -3.9245, -16.1738, 2.14", "39.0451, -4.1724, -15.8893, 0.81", "41.3523, -4.50065, -15.4723, 1.77", "42.5688, -4.63052, -15.2776, 1.77", "44.4447, -4.89709, -14.3733, 0.66", "45.572, -5.04972, -13.7228, 1.47", "46.8463, -5.19431, -13.0213, 1.47", "47.9017, -5.30717, -12.3076, 1.47", "49.2102, -5.43715, -11.1849, 2.28", "55.2962, -6.10806, -4.82938, 2.28", "56.4343, -6.27189, -3.33793, 1.69" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-222.106, -100.198, -128.03, 0.66", "-224.544, -99.4977, -130.852, 0.66", "-225.021, -99.4608, -131.279, 0.66", "-225.48, -99.4742, -131.598, 0.07", "-225.777, -99.4959, -131.762, 0.96", "-226.249, -99.5345, -131.953, 1.4", "-226.81, -99.508, -132.286, 1.18", "-227.512, -99.4689, -132.638, 0.52", "-228.3, -99.3701, -133.061, 0.07", "-228.812, -99.2777, -133.33, 1.62", "-229.782, -99.0878, -133.826, 2.14", "-233.621, -98.2177, -135.68, 0.81", "-234.492, -97.9957, -136.07, 0.81", "-235.266, -97.788, -136.377, 1.25", "-236.195, -97.5651, -136.63, 0.07", "-236.895, -97.3947, -136.799, 0.07", "-237.745, -97.1736, -136.935, 0.07", "-238.257, -97.0548, -136.95, 1.11", "-239.072, -96.8692, -137.006, 1.69", "-241.193, -96.4057, -137.196, 0.52", "-243.582, -95.8715, -137.461, 0.07", "-244.768, -95.6466, -137.611, 0.07", "-245.529, -95.5326, -137.711, 0.07", "-246.136, -95.4516, -137.78, 1.55", "-247.348, -95.2906, -137.954, 1.55", "-248.971, -95.0332, -138.18, 0.29", "-250.111, -94.829, -138.263, 0.29", "-251.069, -94.59, -138.4, 0.52", "-252.009, -94.2503, -138.567, 1.55", "-253.369, -93.6102, -138.839, 1.55", "-254.41, -92.9386, -139.292, 0.22", "-254.645, -92.7564, -139.43, 1.62", "-255.833, -91.7116, -140.251, 0.37", "-256.274, -91.3072, -140.594, 0.96", "-256.83, -90.8053, -140.995, 1.47", "-259.523, -88.655, -142.845, 1.11", "-260.315, -88.0892, -143.385, 0.15", "-260.587, -87.9197, -143.548, 0.74", "-260.876, -87.7671, -143.685, 1.55", "-262.418, -87.0513, -144.395, 1.55", "-265.101, -86.1013, -145.49, 0.52", "-265.977, -85.8691, -145.765, 1.33", "-266.739, -85.6916, -146.034, 0.74", "-267.685, -85.4509, -146.574, 0.15", "-269.532, -84.9345, -147.868, 0.15", "-270.465, -84.6103, -148.606, 0.15", "-271.217, -84.3292, -149.214, 1.62", "-272.006, -84.0193, -149.929, 1.62", "-275.164, -82.653, -153.096, 0.37", "-275.716, -82.3969, -153.703, 1.62", "-276.526, -81.9706, -154.605, 0.07" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-66.4982, -108.121, -20.5406, 1.11", "-68.284, -108.802, -20.5543, 1.11", "-69.4876, -109.23, -20.6624, 1.55", "-70.6191, -109.616, -20.8071, 1.55", "-71.5425, -109.943, -20.9464, 0.52", "-71.9628, -110.091, -21.0136, 0.52", "-73.0096, -110.448, -21.1834, 1.69", "-74.4254, -110.892, -21.4706, 1.03", "-75.0496, -111.12, -21.6132, 0.15", "-75.5092, -111.331, -21.7096, 0.15", "-76.1725, -111.707, -21.8185, 0.15", "-76.5316, -111.931, -21.8507, 0.15", "-77.0539, -112.262, -21.8589, 0.15", "-77.9985, -112.8, -21.9998, 1.55", "-78.9533, -113.286, -22.2717, 1.55", "-79.8361, -113.706, -22.6051, 0.81", "-81.1696, -114.326, -23.2084, 0.81", "-81.8852, -114.634, -23.5706, 0.66", "-84.6338, -115.629, -25.0298, 0.07", "-85.1411, -115.792, -25.3061, 0.81", "-85.5865, -115.941, -25.5574, 1.18", "-86.1373, -116.159, -25.8495, 0.81", "-87.1187, -116.602, -26.2654, 0.29", "-87.9571, -117.019, -26.501, 0.29", "-88.8571, -117.493, -26.6069, 1.77", "-89.5901, -117.894, -26.689, 1.77", "-90.355, -118.356, -26.7739, 1.11", "-91.6588, -119.25, -26.9174, 0.29", "-91.9947, -119.513, -26.9539, 0.07", "-92.7031, -120.172, -27.0508, 1.69", "-93.6414, -121.196, -27.204, 1.69", "-94.6436, -122.486, -27.4009, 0.29", "-95.0347, -123.081, -27.4935, 0.96", "-95.3826, -123.726, -27.5937, 0.96", "-96.2803, -125.646, -27.897, 0.22", "-96.6769, -126.686, -28.0641, 0.07", "-96.8153, -127.15, -28.1404, 0.07", "-97.0766, -128.157, -28.3079, 0.07", "-97.2408, -128.853, -28.4261, 1.62", "-97.4602, -129.946, -28.6108, 1.62", "-97.6074, -130.898, -28.7699, 1.4", "-97.813, -132.176, -28.9912, 0.81" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-66.4982, -108.121, -20.5406, 0.88", "-66.9559, -108.824, -20.6638, 0.88", "-67.2885, -109.443, -20.71, 0.66", "-67.5907, -110.048, -20.7292, 1.18", "-67.964, -110.753, -20.7229, 1.18", "-68.0324, -110.876, -20.7184, 1.47", "-68.3645, -111.467, -20.6937, 1.47", "-68.931, -112.568, -20.6343, 0.22", "-69.1668, -113.102, -20.6155, 0.22", "-69.3425, -113.631, -20.6359, 0.22", "-69.403, -113.86, -20.6629, 0.22", "-69.5097, -114.326, -20.7513, 0.74", "-69.6379, -114.995, -20.931, 1.55", "-69.7307, -115.541, -21.1215, 1.55", "-69.7722, -116.664, -21.1544, 0.88", "-69.7559, -117.333, -21.0654, 0.22", "-69.7444, -117.853, -20.9803, 0.15", "-69.7389, -118.316, -20.8876, 0.15", "-69.7387, -119.065, -20.7164, 1.25", "-69.7593, -122.997, -19.7245, 1.62", "-69.7603, -123.687, -19.5467, 1.62", "-69.7514, -125.05, -19.2598, 0.66", "-69.7612, -125.437, -19.2054, 0.66", "-69.8127, -125.955, -19.1939, 0.66", "-69.853, -126.142, -19.231, 0.66", "-70.0649, -126.72, -19.5042, 1.33", "-70.2778, -127.304, -19.7277, 1.33", "-70.4892, -127.892, -19.8983, 0.52", "-70.7169, -128.515, -20.0773, 0.52", "-70.9484, -129.109, -20.2428, 0.52", "-71.1497, -129.552, -20.3547, 0.96", "-71.5364, -130.288, -20.5198, 0.96", "-71.8392, -130.822, -20.631, 0.44", "-72.2893, -131.596, -20.7842, 0.44", "-72.4976, -131.952, -20.8529, 0.44", "-72.9322, -132.709, -21.0007, 0.44", "-73.1352, -133.088, -21.0801, 0.44", "-73.3914, -133.609, -21.1979, 1.33", "-73.7552, -134.429, -21.3994, 1.77", "-74.2185, -135.572, -21.6941, 1.77", "-74.5825, -136.528, -21.9491, 0.88", "-74.8456, -137.253, -22.1467, 0.74", "-75.2067, -138.202, -22.3992, 0.74", "-75.3751, -138.613, -22.5058, 0.74", "-75.693, -139.337, -22.6888, 0.74", "-76.0433, -140.084, -22.8713, 0.44", "-76.313, -140.628, -23.0, 0.96", "-76.641, -141.268, -23.1493, 1.99", "-77.0449, -142.078, -23.3446, 1.18", "-77.3577, -142.732, -23.5093, 0.66", "-77.6804, -143.437, -23.7037, 0.66", "-78.0392, -144.265, -23.9469, 0.66", "-78.3135, -144.811, -24.1862, 1.18", "-78.8229, -145.671, -24.6792, 1.18", "-79.1463, -146.163, -25.015, 1.18", "-79.4655, -146.615, -25.3535, 0.59", "-79.8034, -147.061, -25.7042, 0.59", "-81.1524, -148.72, -27.1263, 0.59", "-81.8466, -149.509, -27.8592, 2.14", "-82.3884, -150.073, -28.4302, 0.81", "-82.8818, -150.575, -28.9558, 0.66", "-83.2524, -150.96, -29.34, 0.66" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "56.4343, -6.27189, -3.33793, 1.69", "57.1327, -6.14413, -3.6137, 1.69", "57.9206, -6.17335, -4.00238, 1.4", "58.368, -6.18994, -4.2231, 1.4", "59.46, -6.23045, -4.76186, 0.74", "60.1587, -6.25637, -5.10653, 0.74", "60.4733, -6.26804, -5.26177, 0.74", "61.0589, -6.55802, -5.77174, 0.74" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-276.526, -81.9706, -154.605, 0.29", "-277.949, -82.0939, -154.679, 0.29", "-278.264, -82.1128, -154.704, 1.11", "-279.177, -82.1638, -154.851, 1.11", "-279.924, -82.2236, -154.997, 0.37", "-280.945, -82.3198, -155.201, 1.84", "-282.773, -82.4583, -155.797, 0.07", "-283.16, -82.4725, -155.942, 1.18", "-284.175, -82.5133, -156.349, 1.18", "-285.138, -82.5758, -156.763, 0.44", "-285.946, -82.632, -157.138, 1.33", "-288.399, -82.6995, -158.352, 1.25", "-289.56, -82.7182, -158.873, 0.29", "-290.524, -82.7068, -159.254, 0.29", "-291.255, -82.6858, -159.479, 0.29", "-292.138, -82.6013, -159.724, 1.4", "-294.41, -82.4042, -160.26, 0.66", "-295.999, -82.2652, -160.551, 0.66", "-296.777, -82.1813, -160.723, 0.88", "-298.301, -82.0039, -161.064, 0.88", "-300.259, -81.7379, -161.454, 0.44", "-301.694, -81.5836, -161.657, 0.44" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-276.526, -81.9706, -154.605, 0.07", "-276.512, -80.8435, -153.122, 0.07", "-276.502, -79.937, -151.929, 0.07", "-276.479, -78.049, -149.446, 0.88", "-276.471, -77.3357, -148.507, 0.59", "-276.461, -76.5713, -147.502, 1.18" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-97.813, -132.176, -28.9912, 0.88", "-99.4619, -133.136, -29.4636, 0.88", "-100.162, -133.575, -29.6458, 0.88", "-100.766, -134.016, -29.8015, 0.44", "-101.31, -134.445, -29.9179, 0.15", "-101.703, -134.79, -30.0014, 0.15", "-102.039, -135.1, -30.0713, 0.15", "-102.154, -135.197, -30.1256, 0.15", "-102.737, -135.603, -30.5563, 1.4", "-103.476, -136.158, -31.2763, 1.4", "-103.979, -136.522, -31.8136, 1.4", "-104.113, -136.616, -31.9696, 1.4", "-106.487, -138.172, -34.9187, 0.74", "-107.222, -138.61, -35.8898, 0.44", "-108.029, -139.016, -37.0789, 0.44" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-97.813, -132.176, -28.9912, 0.22", "-97.9128, -133.185, -29.336, 0.22", "-98.0102, -134.07, -29.6212, 0.22", "-98.1285, -135.269, -29.9743, 0.22", "-98.2043, -136.07, -30.1966, 1.4", "-98.3321, -137.556, -30.5832, 0.15", "-98.3757, -138.083, -30.7131, 0.15", "-98.4575, -139.125, -30.9307, 0.81", "-98.4935, -139.844, -31.0684, 0.07", "-98.4984, -140.154, -31.1234, 0.07", "-98.5164, -140.828, -31.2225, 0.59", "-98.5098, -141.263, -31.2504, 0.29", "-98.501, -141.504, -31.2655, 0.29", "-98.382, -142.974, -31.3593, 1.69" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "61.0589, -6.55802, -5.77174, 1.84", "63.356, -6.65754, -6.0713, 1.84", "64.8525, -6.72447, -6.20737, 1.84", "66.4662, -6.81877, -6.31776, 1.47", "67.7205, -6.8989, -6.38127, 1.11", "69.0317, -7.01169, -6.43538, 1.25", "70.4833, -7.18204, -6.48715, 1.55", "71.9876, -7.41947, -6.47044, 1.33", "73.2871, -7.64494, -6.46051, 1.33", "74.7425, -7.90981, -6.45212, 1.77", "76.3187, -8.18303, -6.44001, 2.06", "78.4989, -8.50135, -6.41007, 1.47", "79.9245, -8.62395, -6.37156, 1.47", "81.4581, -8.63214, -6.30273, 1.47", "83.0489, -8.52022, -6.20467, 1.11", "84.487, -8.35696, -6.10228, 1.11", "85.694, -8.19567, -5.96704, 1.11", "87.3125, -7.99437, -5.73802, 1.11", "88.8413, -7.89892, -5.50626, 1.11", "91.0137, -7.81249, -5.15672, 1.11", "92.5962, -7.82676, -4.89208, 1.11", "94.4079, -7.98805, -4.58741, 1.77", "95.785, -8.24664, -4.35837, 1.92", "97.6924, -8.82647, -4.03711, 2.87" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "97.6924, -8.82647, -4.03711, 1.03", "99.6855, -9.68211, -4.6522, 1.03", "100.124, -9.8604, -4.79539, 1.03", "100.644, -10.091, -4.96181, 1.03", "101.437, -10.4746, -5.20824, 1.03", "102.508, -11.0769, -5.5117, 1.03", "103.307, -11.5869, -5.72591, 0.96", "104.045, -12.1179, -5.98441, 0.96", "104.607, -12.6368, -6.15862, 1.18", "105.044, -13.1026, -6.26775, 1.18", "105.617, -13.7094, -6.412, 0.96", "106.125, -14.221, -6.53658, 0.96", "106.677, -14.7375, -6.67721, 0.74", "107.598, -15.5242, -6.91065, 0.74", "108.559, -16.2836, -7.15056, 0.74", "113.133, -19.5331, -8.39118, 0.74", "114.237, -20.2628, -8.72429, 0.74", "114.91, -20.6884, -8.93753, 1.18", "115.331, -20.9415, -9.07589, 1.84", "115.627, -21.1121, -9.1842, 2.21", "117.921, -22.4814, -10.023, 0.66", "119.02, -23.1415, -10.2971, 0.66", "119.548, -23.5012, -10.3459, 1.11", "119.891, -23.7597, -10.3168, 1.47", "120.842, -24.5493, -10.0508, 1.03", "122.185, -25.759, -9.38061, 1.11", "123.904, -27.4413, -8.09079, 0.81", "124.314, -27.8288, -7.78859, 0.81", "124.644, -28.124, -7.5847, 0.81", "125.117, -28.5203, -7.36069, 0.81", "125.844, -29.028, -7.13731, 1.11", "126.804, -29.5477, -7.07919, 1.77", "127.608, -29.9017, -7.10556, 1.33", "128.62, -30.2766, -7.11017, 0.96", "129.438, -30.5092, -7.02296, 0.96", "130.626, -30.749, -6.84414, 1.4", "131.56, -30.8888, -6.67097, 1.4", "132.347, -30.9632, -6.49117, 0.52", "132.767, -30.9871, -6.37498, 0.52", "134.793, -31.0599, -5.68238, 1.92", "135.941, -31.0953, -5.19833, 1.92" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "97.6924, -8.82647, -4.03711, 0.96", "98.5858, -8.7915, -3.98821, 0.96", "99.2828, -8.71181, -3.93847, 0.96", "99.9431, -8.56767, -3.87613, 0.96", "100.326, -8.41492, -3.82465, 0.66", "100.435, -8.35346, -3.80603, 0.66", "100.63, -8.21461, -3.76629, 0.66", "100.958, -7.86623, -3.67407, 1.25", "101.251, -7.47954, -3.57492, 1.69", "101.729, -6.82261, -3.40747, 1.69", "101.993, -6.48542, -3.32065, 1.69", "102.355, -6.08471, -3.21521, 0.74", "102.6, -5.87797, -3.15814, 0.74", "102.955, -5.70275, -3.10301, 0.74", "103.372, -5.6226, -3.06608, 0.74", "103.664, -5.62725, -3.05362, 0.74", "104.069, -5.66092, -3.07756, 0.74", "104.606, -5.73642, -3.14909, 0.74", "104.98, -5.80499, -3.22058, 0.74", "105.409, -5.90126, -3.32742, 0.74", "105.739, -5.97396, -3.4225, 0.74", "106.605, -6.09273, -3.68141, 0.74", "106.869, -6.0783, -3.77774, 0.74", "107.103, -6.01253, -3.8696, 0.74", "107.344, -5.89029, -3.94805, 0.74", "107.731, -5.62339, -4.03273, 0.74", "108.346, -5.16889, -4.10287, 0.74", "109.109, -4.59223, -4.12061, 1.18", "109.538, -4.29329, -4.12084, 1.92", "110.26, -3.82879, -4.10929, 1.92", "110.88, -3.47823, -4.09105, 1.03", "111.443, -3.22201, -4.06789, 0.74", "111.852, -3.11468, -4.04762, 0.66", "112.567, -3.06328, -3.99693, 0.66", "112.783, -3.09029, -3.99249, 0.44", "113.23, -3.24405, -4.00888, 1.4", "113.47, -3.36198, -4.02755, 1.84", "114.112, -3.69984, -4.08745, 1.18", "114.595, -3.94424, -4.13084, 0.81", "114.993, -4.10173, -4.15663, 0.81", "115.331, -4.19269, -4.16818, 0.81", "115.737, -4.25914, -4.17135, 0.81", "116.491, -4.3342, -4.16409, 1.62", "117.153, -4.36827, -4.14812, 1.62", "117.837, -4.3991, -4.12742, 0.81", "118.343, -4.42059, -4.10886, 0.59", "118.766, -4.43848, -4.09337, 0.59", "119.184, -4.45367, -4.07744, 0.96", "119.733, -4.4562, -4.05273, 0.96", "120.161, -4.432, -4.02765, 0.66", "120.628, -4.35365, -3.98878, 0.96", "121.033, -4.1994, -3.93598, 0.96", "121.407, -3.99542, -3.87359, 0.96", "121.76, -3.77814, -3.80923, 0.96", "121.938, -3.66067, -3.775, 0.96", "122.411, -3.37543, -3.69006, 0.96", "122.809, -3.20174, -3.63329, 0.96", "123.094, -3.13219, -3.60476, 0.96", "123.523, -3.11, -3.5801, 0.96", "123.653, -3.12045, -3.57639, 0.96", "123.991, -3.17019, -3.57182, 0.96", "124.328, -3.22881, -3.5693, 0.96", "124.536, -3.26125, -3.56689, 0.96", "124.912, -3.28161, -3.55408, 0.96", "125.067, -3.26896, -3.54418, 0.96", "125.389, -3.20707, -3.51564, 1.25", "125.784, -3.0696, -3.44869, 1.25", "125.826, -3.04976, -3.43885, 1.55", "126.044, -2.94541, -3.38515, 1.55", "126.454, -2.78593, -3.29202, 1.55", "126.533, -2.76464, -3.27666, 1.55", "127.181, -2.6724, -3.173, 0.81", "127.656, -2.65777, -3.11347, 0.81", "128.442, -2.7037, -3.04027, 0.81", "129.137, -2.80136, -3.03856, 0.96", "129.591, -2.89041, -3.06804, 1.18", "130.072, -2.99835, -3.12356, 1.47", "130.56, -3.12488, -3.2099, 1.4", "131.123, -3.27595, -3.33283, 1.03", "132.002, -3.47825, -3.56569, 0.15", "132.33, -3.51078, -3.65953, 0.15", "132.5, -3.50195, -3.70697, 0.44", "132.976, -3.38449, -3.80347, 0.44", "133.144, -3.30986, -3.83179, 0.44", "133.438, -3.16237, -3.86481, 0.44", "133.694, -3.02987, -3.87452, 0.74", "134.072, -2.8281, -3.88332, 1.11", "134.594, -2.55423, -3.88887, 1.55", "135.672, -2.03831, -3.89476, 0.88", "136.185, -1.82181, -3.89612, 0.88", "137.069, -1.47646, -3.91613, 1.69", "137.66, -1.2672, -3.93609, 0.88", "138.094, -1.14555, -3.95565, 0.88", "138.641, -1.03667, -3.97999, 0.88", "139.44, -0.927595, -3.9982, 0.88", "140.087, -0.842525, -4.01744, 1.47", "140.62, -0.761347, -4.02941, 1.47", "141.232, -0.625561, -4.02575, 1.11", "141.913, -0.392735, -3.99144, 1.25", "142.616, -0.108917, -3.9288, 1.25", "143.056, 0.0887485, -3.87513, 1.25", "143.904, 0.455911, -3.75475, 0.66", "144.65, 0.766101, -3.65169, 1.4", "145.385, 1.08126, -3.54806, 0.96", "146.721, 1.64603, -3.36148, 0.59", "147.118, 1.8094, -3.30702, 0.59", "147.97, 2.1766, -3.21728, 0.59", "148.369, 2.35114, -3.18804, 0.59", "149.26, 2.73785, -3.15069, 0.59", "149.886, 2.98971, -3.14574, 1.03", "150.259, 3.13055, -3.19456, 1.03", "151.28, 3.49699, -3.43457, 1.03", "151.82, 3.69044, -3.61075, 1.03", "152.322, 3.8364, -3.79617, 1.4", "152.996, 3.96742, -4.03871, 1.4", "154.522, 4.20731, -4.55006, 0.44", "155.291, 4.29865, -4.76865, 0.44", "155.566, 4.31925, -4.82889, 0.74", "156.562, 4.39008, -5.00325, 0.74", "157.808, 4.42499, -5.22554, 0.74", "157.984, 4.41673, -5.25355, 1.18", "158.813, 4.29185, -5.37736, 1.18", "159.376, 4.13947, -5.51185, 1.18", "159.682, 4.04206, -5.62876, 1.18", "160.577, 3.71862, -6.08526, 0.29", "161.009, 3.56475, -6.32856, 0.29", "161.612, 3.39311, -6.64273, 1.62", "162.191, 3.29745, -6.90104, 1.62", "163.246, 3.25208, -7.26604, 0.88", "164.194, 3.31205, -7.4896, 0.88", "164.77, 3.40574, -7.56254, 0.88", "165.51, 3.58407, -7.60268, 0.88", "166.427, 3.84417, -7.58985, 2.36", "167.139, 4.07545, -7.54709, 2.36", "168.007, 4.35896, -7.44676, 1.18", "168.718, 4.60879, -7.35999, 1.69", "169.564, 4.88949, -7.25894, 0.07", "169.938, 4.99438, -7.21759, 0.07", "170.238, 5.05119, -7.18943, 0.07", "170.863, 5.11253, -7.14063, 0.07", "171.012, 5.11784, -7.13029, 0.59", "171.762, 5.11238, -7.09134, 0.88", "172.279, 5.10592, -7.1239, 1.25", "172.768, 5.09136, -7.18237, 0.59", "172.979, 5.08979, -7.21214, 0.59", "173.528, 5.09158, -7.301, 1.33", "174.396, 5.06618, -7.45751, 2.28", "175.633, 4.99284, -7.71334, 0.74", "176.112, 4.97005, -7.86892, 0.74", "176.631, 4.95318, -8.08006, 1.25", "176.982, 4.95289, -8.23847, 1.25", "177.444, 4.98276, -8.45805, 1.25", "177.523, 4.99806, -8.49369, 1.25", "178.959, 5.48605, -9.01346, 0.96", "179.548, 5.74414, -9.20118, 0.96", "179.983, 5.95366, -9.32088, 0.96", "180.512, 6.23099, -9.42309, 0.96", "181.177, 6.58381, -9.49126, 0.96", "181.541, 6.76007, -9.49212, 0.96", "181.879, 6.90534, -9.4444, 0.88", "182.232, 7.01552, -9.40372, 0.88", "182.919, 7.0765, -9.39537, 0.88", "183.297, 7.03356, -9.4265, 0.88", "183.612, 6.96135, -9.47072, 0.88", "183.721, 6.93134, -9.48903, 0.88", "184.273, 6.75959, -9.59117, 0.88", "185.073, 6.49847, -9.74179, 0.88", "185.405, 6.39925, -9.83238, 0.88", "185.963, 6.24033, -10.0104, 0.88", "186.393, 6.12221, -10.1586, 0.88", "186.847, 5.99792, -10.3184, 1.69", "187.313, 5.87408, -10.4838, 1.69", "188.386, 5.58353, -10.8326, 0.74", "188.778, 5.47646, -10.9573, 0.74", "188.955, 5.43567, -11.0099, 0.74", "189.449, 5.37945, -11.1249, 0.74", "189.631, 5.38463, -11.1513, 0.74", "190.361, 5.5081, -11.1739, 0.74", "190.804, 5.64111, -11.1293, 0.74", "191.172, 5.78137, -11.0855, 0.74", "191.773, 6.01227, -11.0129, 0.74", "192.05, 6.11171, -10.9807, 0.74", "192.365, 6.2027, -10.9485, 0.74", "192.941, 6.31971, -10.8994, 1.47", "193.637, 6.36234, -10.8884, 2.43", "194.189, 6.30114, -10.9172, 1.69", "194.56, 6.19335, -10.921, 1.47", "194.961, 6.03407, -10.912, 1.11", "195.229, 5.89774, -10.9012, 1.11", "195.954, 5.46827, -10.8603, 0.15", "196.643, 5.02589, -10.811, 2.36", "197.785, 4.27441, -10.7146, 0.88", "198.172, 4.01499, -10.6785, 0.88", "198.861, 3.52581, -10.6121, 0.88", "199.029, 3.39465, -10.596, 0.88", "199.377, 3.07801, -10.5644, 0.88", "199.711, 2.71529, -10.5721, 0.88", "199.988, 2.35631, -10.6341, 0.52", "200.239, 1.96484, -10.7043, 1.33", "200.469, 1.55312, -10.7801, 1.33", "200.748, 1.02759, -10.8787, 0.37", "200.939, 0.653967, -10.95, 1.33", "201.134, 0.263735, -11.0259, 1.33", "201.227, 0.0727468, -11.064, 1.33", "201.388, -0.245103, -11.1269, 1.33", "201.662, -0.775262, -11.2317, 0.96", "201.831, -1.12051, -11.3003, 0.96", "202.001, -1.53445, -11.3823, 0.29", "202.102, -1.80551, -11.4353, 0.29", "202.143, -1.92571, -11.4587, 0.29", "202.231, -2.20351, -11.5124, 0.88", "202.352, -2.55822, -11.5802, 1.33", "202.497, -2.86973, -11.6378, 1.33", "202.651, -3.10359, -11.6788, 1.33", "203.034, -3.54878, -11.7531, 0.74", "203.32, -3.8134, -11.7952, 0.74", "203.63, -4.03121, -11.827, 0.74", "204.087, -4.29343, -11.8626, 0.74", "204.435, -4.44942, -11.881, 0.74", "204.841, -4.5904, -11.8936, 0.96", "205.474, -4.76353, -11.9027, 1.92", "206.258, -4.96593, -11.9115, 2.43", "206.717, -5.0854, -11.9168, 0.66", "207.497, -5.28455, -11.9249, 0.66", "207.843, -5.37971, -11.93, 0.66", "208.334, -5.52562, -11.9398, 0.66", "208.851, -5.70712, -11.9561, 0.66", "209.119, -5.83179, -11.9714, 0.66", "209.904, -6.29942, -12.0388, 0.66", "210.177, -6.49698, -12.0699, 0.66", "210.563, -6.79086, -12.1172, 0.66", "210.9, -7.04601, -12.1582, 0.66", "211.235, -7.30449, -12.2, 1.03", "211.741, -7.72488, -12.2698, 1.62", "212.197, -8.11135, -12.3344, 1.62", "212.64, -8.44917, -12.3888, 1.62", "213.105, -8.77361, -12.4392, 1.25", "213.667, -9.13272, -12.4928, 0.88", "214.047, -9.35663, -12.5249, 0.88", "214.496, -9.6138, -12.5612, 1.84", "215.094, -9.91549, -12.7021, 1.03", "215.539, -10.107, -12.8588, 1.03", "216.139, -10.3122, -13.114, 1.03", "216.503, -10.4022, -13.282, 0.74", "217.107, -10.5088, -13.56, 0.74", "218.865, -10.7464, -14.396, 0.74", "219.365, -10.7979, -14.6366, 0.74", "219.628, -10.8231, -14.7554, 0.74", "220.123, -10.8682, -14.9494, 0.74", "220.914, -10.935, -15.1849, 0.74", "221.217, -10.9549, -15.2331, 0.74", "221.522, -10.9643, -15.2472, 0.96", "222.242, -10.9623, -15.3169, 0.96", "222.721, -10.9498, -15.3837, 0.66", "223.103, -10.9164, -15.4495, 1.25", "223.458, -10.8541, -15.514, 1.47", "224.432, -10.6391, -15.6789, 0.59", "224.898, -10.5375, -15.7537, 0.59", "225.157, -10.4865, -15.81, 0.96", "225.623, -10.435, -15.9254, 1.4", "226.244, -10.4424, -16.0869, 0.59", "226.61, -10.4866, -16.1871, 0.59", "227.207, -10.6231, -16.3445, 1.92", "228.294, -10.8756, -16.6459, 0.07", "228.76, -10.998, -16.8123, 0.07", "229.285, -11.1503, -17.0292, 1.84", "229.944, -11.3568, -17.3301, 0.96", "230.431, -11.5032, -17.5679, 0.96", "230.939, -11.6621, -17.8166, 0.96", "231.892, -11.9383, -18.4259, 0.88", "232.258, -12.0318, -18.6983, 0.88", "232.511, -12.0904, -18.8919, 1.11", "233.066, -12.1995, -19.3358, 1.33", "233.676, -12.2978, -19.8103, 1.33", "235.206, -12.4945, -20.9588, 0.88", "235.964, -12.5503, -21.459, 1.18", "236.658, -12.5755, -21.8986, 0.81", "237.504, -12.5989, -22.4263, 1.92", "238.094, -12.622, -22.7796, 0.88", "238.953, -12.6698, -23.2611, 0.88", "239.77, -12.7646, -23.6482, 0.88", "240.134, -12.823, -23.8323, 1.55", "241.204, -13.0947, -24.4291, 0.07", "241.489, -13.201, -24.5895, 0.66", "241.768, -13.3278, -24.7583, 1.25", "242.106, -13.4861, -24.9758, 1.25", "242.476, -13.6449, -25.2365, 0.22", "243.053, -13.854, -25.58, 0.22", "243.32, -13.9057, -25.6958, 0.96", "243.535, -13.9136, -25.7715, 0.22", "244.457, -13.8303, -26.0013, 0.22", "244.841, -13.7561, -26.0379, 1.11", "245.567, -13.5883, -26.0096, 1.11", "245.92, -13.5166, -25.9579, 1.11", "246.209, -13.4656, -25.9073, 1.18", "246.455, -13.4306, -25.8575, 0.29", "247.047, -13.3696, -25.7281, 0.29", "247.432, -13.3204, -25.6765, 0.88", "247.642, -13.2912, -25.6671, 0.29", "247.879, -13.2563, -25.6571, 0.29", "248.239, -13.2027, -25.6427, 1.62", "248.638, -13.155, -25.6296, 1.62", "249.121, -13.1229, -25.6184, 0.07", "249.564, -13.1211, -25.612, 0.07", "249.979, -13.1547, -25.6116, 0.07", "250.356, -13.2174, -25.6328, 1.62", "250.849, -13.3389, -25.6847, 1.62", "251.339, -13.4951, -25.7564, 0.66", "251.729, -13.6435, -25.8306, 0.66", "252.053, -13.7799, -25.9022, 0.96", "252.533, -13.9893, -26.0142, 0.29", "252.801, -14.0979, -26.0751, 0.29", "253.123, -14.2217, -26.1193, 0.29", "253.507, -14.3705, -26.138, 0.29", "253.738, -14.4473, -26.1269, 0.29", "254.186, -14.5962, -26.0751, 1.03", "254.455, -14.7069, -26.0324, 1.47", "255.075, -15.062, -25.9476, 0.15", "255.309, -15.2479, -25.8969, 0.15", "255.697, -15.6364, -25.7916, 0.15", "255.985, -15.973, -25.7065, 0.15", "256.456, -16.5922, -25.5658, 2.06", "256.922, -17.2449, -25.4399, 1.25", "257.486, -18.0592, -25.3205, 0.66", "257.711, -18.3747, -25.2717, 0.66", "257.963, -18.6905, -25.2224, 0.66", "258.25, -19.0073, -25.1626, 0.66", "258.47, -19.2023, -25.1204, 0.66", "258.76, -19.3816, -25.0871, 0.66", "259.086, -19.5401, -25.1072, 0.66", "259.674, -19.7933, -25.1362, 1.47" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "135.941, -31.0953, -5.19833, 0.66", "135.968, -34.0157, -1.80165, 0.66", "136.001, -34.749, -1.00744, 0.66", "136.025, -35.0864, -0.648179, 0.81", "136.072, -35.5141, -0.192174, 0.81", "136.118, -35.6785, 0.0101907, 0.81", "136.227, -35.898, 0.313358, 0.81", "136.387, -35.9701, 0.459418, 0.81", "136.742, -36.079, 0.736602, 0.81", "137.142, -36.1898, 1.01806, 0.81", "138.945, -36.6927, 2.11898, 0.81", "139.509, -36.867, 2.42202, 0.81", "140.155, -37.0958, 2.72042, 1.11", "140.967, -37.4302, 3.02822, 1.4", "141.708, -37.8043, 3.25237, 1.55", "142.515, -38.2845, 3.41292, 1.25", "143.091, -38.6723, 3.44771, 1.03", "143.798, -39.1898, 3.47747, 1.03", "144.369, -39.6037, 3.49872, 1.03", "145.142, -40.1284, 3.53364, 0.96", "146.029, -40.6731, 3.57544, 0.88", "147.082, -41.2402, 3.62565, 0.81", "147.792, -41.5961, 3.65488, 0.88", "148.854, -42.0763, 3.7025, 0.88", "149.671, -42.3851, 3.74169, 1.11", "150.802, -42.7014, 3.78772, 1.11", "151.177, -42.7668, 3.8121, 1.11" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "135.941, -31.0953, -5.19833, 0.66", "137.014, -31.6492, -0.562079, 0.66" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "259.674, -19.7933, -25.1362, 0.22", "260.15, -20.2187, -25.2037, 0.22", "261.276, -21.4405, -25.1298, 0.22", "262.216, -22.4603, -24.9912, 1.62", "262.724, -22.9909, -24.9067, 0.15", "263.164, -23.424, -24.8306, 0.15", "263.909, -24.1679, -24.6771, 1.47", "265.729, -26.0016, -24.2199, 0.37", "266.978, -27.296, -23.8486, 0.37", "267.604, -27.9774, -23.6505, 1.25", "268.017, -28.4325, -23.5221, 1.77", "269.097, -29.6401, -23.213, 0.07", "269.691, -30.3069, -23.0894, 0.88", "270.088, -30.7329, -23.0743, 0.44", "270.44, -31.1475, -23.0747, 0.44", "270.684, -31.4354, -23.0987, 0.96", "270.974, -31.7589, -23.1519, 0.29", "271.788, -32.5642, -23.367, 0.29", "272.412, -33.1902, -23.543, 1.18", "272.892, -33.6913, -23.6856, 1.18", "273.582, -34.4243, -23.8935, 0.44", "273.879, -34.729, -23.9787, 0.44", "274.572, -35.4179, -24.1674, 0.96", "275.061, -35.8914, -24.2911, 0.15", "275.784, -36.5142, -24.4402, 0.15", "276.414, -36.9579, -24.6034, 0.15", "277.084, -37.3198, -24.7879, 0.88", "277.424, -37.4599, -24.8869, 1.25", "278.385, -37.7467, -25.1612, 0.37", "279.11, -37.9497, -25.3552, 0.07", "280.892, -38.3917, -25.7961, 1.33", "281.623, -38.5553, -25.9613, 0.37", "282.77, -38.7878, -26.188, 0.37", "283.604, -38.9444, -26.3228, 1.47", "285.098, -39.2049, -26.4998, 0.22", "285.917, -39.359, -26.5713, 0.22", "286.684, -39.5033, -26.587, 1.11", "287.29, -39.598, -26.6112, 0.29", "287.956, -39.6815, -26.6531, 0.29", "288.314, -39.7295, -26.6871, 0.74", "288.969, -39.8259, -26.772, 0.07", "289.724, -40.0755, -26.8346, 0.07", "290.35, -40.345, -26.8625, 0.96", "290.814, -40.557, -26.8767, 0.15", "291.319, -40.8006, -26.8809, 0.15", "291.698, -40.9943, -26.8732, 0.59", "294.051, -42.2349, -26.7064, 0.07", "295.179, -42.8496, -26.6076, 0.96" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "259.674, -19.7933, -25.1362, 0.07", "259.276, -20.2371, -25.2528, 0.07", "258.911, -20.643, -25.3594, 0.59" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "259.674, -19.7933, -25.1362, 0.22", "259.715, -18.9156, -24.94, 0.22", "259.739, -18.3873, -24.8218, 0.74" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "151.177, -42.7668, 3.8121, 0.07", "152.118, -43.5982, 3.34892, 0.07", "152.794, -44.2263, 3.03845, 0.07", "153.366, -44.8185, 2.77602, 0.07", "153.704, -45.2121, 2.61827, 0.07", "154.184, -45.8266, 2.44, 0.07", "154.434, -46.1826, 2.36464, 0.07", "154.662, -46.6209, 2.36135, 0.07", "154.839, -47.0673, 2.39119, 0.37", "154.985, -47.4977, 2.43713, 0.37", "155.242, -48.3873, 2.54433, 0.37", "155.351, -48.8433, 2.60184, 0.37", "155.506, -49.4741, 2.70038, 0.37", "155.867, -50.7851, 2.94829, 0.37", "155.993, -51.2016, 3.03661, 1.11" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "151.177, -42.7668, 3.8121, 0.96", "153.482, -43.6878, 2.36649, 0.96", "154.369, -44.0424, 1.81, 0.88", "155.095, -44.3321, 1.35522, 0.88", "155.365, -44.4402, 1.1855, 0.88", "155.848, -44.6332, 0.882642, 1.18" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "151.177, -42.7668, 3.8121, 0.59", "150.22, -42.4143, 3.96022, 0.59", "149.66, -42.1371, 4.04001, 0.59", "149.032, -41.6811, 4.14346, 0.59", "148.566, -41.1612, 4.25234, 0.44", "148.103, -40.5299, 4.38257, 0.44", "147.981, -40.3365, 4.42225, 0.22", "147.689, -39.8688, 4.53409, 0.22", "147.296, -39.187, 4.69295, 0.22", "146.884, -38.3282, 4.88609, 0.22", "146.755, -38.0213, 4.95231, 0.22", "146.422, -37.2557, 5.11698, 0.22", "146.005, -36.4007, 5.29848, 0.22", "146.005, -36.4007, 5.29848, 0.22", "145.539, -35.7132, 5.4414, 0.22", "145.053, -35.1402, 5.50375, 0.22", "144.367, -34.4263, 5.52565, 0.22", "143.674, -33.7035, 5.48117, 0.22", "143.369, -33.3965, 5.44977, 0.22", "142.697, -32.7326, 5.36071, 0.22", "141.396, -31.4972, 5.11388, 0.22", "140.907, -31.041, 4.98682, 0.22", "139.944, -30.1516, 4.64377, 0.22" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "155.993, -51.2016, 3.03661, 1.11", "156.693, -52.3196, 3.01053, 1.11", "157.052, -53.2956, 2.8645, 0.66", "157.196, -53.7891, 2.77794, 0.37", "157.554, -54.865, 2.58573, 0.74", "157.861, -55.7054, 2.47849, 0.88", "158.254, -56.8123, 2.36662, 0.88", "158.595, -58.236, 2.22916, 0.88", "158.752, -58.9556, 2.19956, 0.66", "159.02, -59.8691, 2.21508, 0.66", "159.427, -60.8766, 2.30236, 0.81", "159.817, -61.7032, 2.45375, 0.81", "160.308, -62.7055, 2.73188, 0.81", "160.688, -63.5403, 2.96713, 0.81", "161.069, -64.6302, 3.21483, 0.74", "161.217, -65.1481, 3.29769, 0.22", "161.503, -66.0866, 3.37518, 0.22", "161.879, -67.0886, 3.43729, 0.22", "162.302, -68.0267, 3.45366, 0.22", "162.553, -68.6231, 3.50051, 0.44", "162.883, -69.485, 3.60135, 0.74", "163.27, -70.6022, 3.75048, 0.74", "163.676, -71.6216, 3.91787, 0.44", "164.088, -72.5778, 4.11159, 0.44", "164.913, -74.4818, 4.53105, 1.11", "165.197, -75.1892, 4.67953, 1.11", "165.606, -76.3741, 4.90075, 0.29", "165.982, -77.6142, 5.07956, 0.29", "166.417, -79.1713, 5.19756, 0.29", "166.613, -79.8417, 5.20131, 1.11", "166.921, -80.753, 5.11526, 0.81", "167.119, -81.2684, 5.05486, 0.81", "167.441, -81.9902, 4.94001, 0.81", "167.788, -82.7085, 4.79565, 0.81", "168.07, -83.1967, 4.68607, 0.81", "168.522, -83.8993, 4.51759, 0.44", "168.995, -84.5838, 4.35184, 0.44", "169.59, -85.4536, 4.15119, 1.03", "170.163, -86.3578, 3.95083, 1.25", "170.691, -87.3231, 3.74842, 0.81", "170.955, -87.9109, 3.69055, 0.66", "171.217, -88.6814, 3.67831, 0.66", "171.505, -89.8114, 3.69484, 0.66", "171.665, -90.7785, 3.74897, 1.03", "171.744, -91.5987, 3.8349, 0.81", "171.858, -93.7678, 4.21581, 0.66", "171.862, -94.3581, 4.36234, 0.66" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "155.848, -44.6332, 0.882642, 1.03", "156.455, -45.0492, 0.832898, 1.03", "157.162, -45.5261, 0.798876, 1.03", "158.056, -46.0941, 0.775012, 1.03", "159.193, -46.7547, 0.761956, 1.03", "160.016, -47.17, 0.764702, 0.59", "161.017, -47.6336, 0.773695, 0.59", "161.444, -47.8029, 0.784156, 0.74", "162.39, -48.1353, 0.791338, 0.81", "163.133, -48.4109, 0.780227, 0.81", "164.042, -48.7992, 0.707217, 0.81", "164.78, -49.201, 0.574692, 0.44", "165.358, -49.6268, 0.374382, 0.44", "165.989, -50.2167, 0.148628, 0.44", "167.418, -51.5894, -0.307687, 0.44", "168.135, -52.1986, -0.46991, 0.74", "168.712, -52.6117, -0.544553, 1.18", "169.471, -53.0474, -0.576708, 0.88", "170.695, -53.6373, -0.548798, 0.59", "171.974, -54.1586, -0.491749, 0.59", "172.959, -54.5143, -0.457729, 0.37", "173.764, -54.8283, -0.433229, 0.37", "174.02, -54.9452, -0.438735, 0.74", "174.403, -55.1963, -0.478829, 1.03", "175.171, -55.8482, -0.656652, 1.03", "175.711, -56.4601, -0.82413, 0.52", "175.924, -56.743, -0.901941, 0.37", "176.137, -57.0298, -0.978494, 0.37", "177.125, -58.2906, -1.28378, 1.99" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "155.848, -44.6332, 0.882642, 0.15", "156.192, -45.369, 0.735562, 0.15", "156.396, -45.8042, 0.648565, 0.15", "156.591, -46.2222, 0.564998, 0.15", "156.97, -47.0324, 0.403044, 0.15" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "139.944, -30.1516, 4.64377, 0.22", "139.338, -29.5514, 4.72567, 0.22", "138.676, -28.8955, 4.81518, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "139.944, -30.1516, 4.64377, 0.22", "139.254, -29.9395, 4.629, 0.22", "138.496, -29.7068, 4.6128, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "171.862, -94.3581, 4.36234, 0.07", "171.79, -95.0736, 4.2636, 0.07", "171.675, -96.2148, 4.10613, 0.07", "171.563, -97.3244, 3.95301, 0.07" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "171.862, -94.3581, 4.36234, 0.88", "171.904, -94.5169, 4.31122, 0.88", "172.02, -95.0012, 4.24308, 0.07", "172.083, -95.3474, 4.21587, 0.07", "172.108, -95.9869, 4.17561, 0.07", "172.088, -96.2177, 4.24566, 0.66", "172.055, -96.5881, 4.39947, 1.11", "172.004, -97.2197, 4.71716, 0.07", "171.97, -97.5545, 4.91059, 0.07", "171.888, -98.1572, 5.29597, 0.07", "171.608, -99.8889, 6.58917, 0.07", "171.519, -100.387, 6.99791, 0.07", "171.474, -100.647, 7.23972, 0.07" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "138.676, -28.8955, 4.81518, 0.22", "138.342, -28.1006, 4.75316, 0.22", "138.068, -27.447, 4.70216, 0.22", "137.843, -26.9119, 4.6604, 0.22", "137.588, -26.3041, 4.61297, 0.22" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "138.676, -28.8955, 4.81518, 0.22", "137.888, -29.6413, 4.88715, 0.22", "137.688, -30.2247, 4.84569, 0.22", "137.615, -30.7982, 4.78843, 0.22", "137.554, -31.5921, 4.70634, 0.22", "137.514, -32.1104, 4.65276, 0.22", "137.478, -32.5881, 4.60336, 0.22", "137.701, -33.4663, 4.4192, 0.22", "138.014, -34.0727, 4.29935, 0.22", "138.372, -34.5026, 4.22062, 0.22" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "171.474, -100.647, 7.23972, 0.07", "171.301, -101.404, 6.88526, 0.07", "171.231, -101.711, 6.74119, 0.88", "171.084, -102.351, 6.44126, 0.88", "170.895, -103.177, 6.0542, 0.88" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "170.895, -103.177, 6.0542, 0.44", "171.131, -103.939, 5.85854, 0.44", "171.299, -104.288, 5.77142, 0.66", "171.723, -104.804, 5.64933, 0.37", "172.144, -104.77, 5.67114, 0.29", "172.452, -104.651, 5.7102, 0.44", "172.764, -104.517, 5.75302, 0.66", "173.11, -104.35, 5.80602, 0.66", "173.581, -104.108, 5.8813, 0.29", "174.181, -103.845, 6.02899, 0.29", "174.48, -103.712, 6.10699, 0.66", "175.095, -103.459, 6.27312, 0.66", "175.668, -103.256, 6.43342, 0.44", "176.03, -103.155, 6.54113, 0.44", "177.321, -102.972, 6.95137, 1.11" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "170.895, -103.177, 6.0542, 0.22", "169.77, -103.858, 5.79256, 0.22", "168.542, -104.6, 5.5072, 0.22", "167.491, -105.236, 5.26278, 0.22", "166.949, -105.563, 5.13684, 0.22", "166.255, -105.983, 4.97543, 0.52" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "177.321, -102.972, 6.95137, 1.11", "178.025, -103.387, 6.89182, 1.11" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "177.321, -102.972, 6.95137, 0.07", "177.009, -104.211, 6.66248, 0.07", "176.775, -105.136, 6.44698, 0.07" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "178.025, -103.387, 6.89182, 0.52", "177.959, -104.398, 6.54351, 0.52", "177.922, -104.976, 6.34425, 0.52", "177.855, -106.006, 5.98916, 0.29", "177.723, -108.05, 5.28465, 0.29", "177.596, -110.01, 4.60893, 0.29" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "178.025, -103.387, 6.89182, 0.07", "180.016, -104.183, 6.7289, 0.07", "181.081, -104.608, 6.6418, 0.07", "182.355, -105.117, 6.53762, 0.07", "184.783, -106.087, 6.33899, 0.07", "185.953, -106.555, 6.2433, 0.07", "186.331, -106.706, 6.21239, 0.07" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "178.025, -103.387, 6.89182, 0.66", "178.705, -103.503, 6.90529, 0.66", "179.33, -103.609, 6.91768, 0.44", "180.44, -103.798, 6.93967, 0.07", "181.269, -103.939, 6.9561, 0.07", "181.788, -104.028, 6.96639, 0.07" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_52", "dend_49", "dend_35", "dend_1", "dend_0", "dend_56", "dend_53", "dend_51", "dend_50", "dend_39", "dend_36", "dend_34", "dend_2", "dend_55", "dend_54", "dend_45", "dend_40", "dend_38", "dend_37", "dend_33", "dend_3", "dend_46", "dend_42", "dend_41", "dend_4", "dend_48", "dend_47", "dend_44", "dend_43", "dend_5", "dend_10", "dend_6", "dend_12", "dend_11", "dend_9", "dend_8", "dend_7", "dend_21", "dend_18", "dend_13", "dend_22", "dend_20", "dend_19", "dend_15", "dend_14", "dend_32", "dend_23", "dend_17", "dend_16", "dend_24", "dend_26", "dend_25", "dend_28", "dend_27", "dend_31", "dend_30", "dend_29" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_52", "dend_49", "dend_35", "dend_1", "dend_0", "dend_56", "dend_53", "dend_51", "dend_50", "dend_39", "dend_36", "dend_34", "dend_2", "dend_55", "dend_54", "dend_45", "dend_40", "dend_38", "dend_37", "dend_33", "dend_3", "dend_46", "dend_42", "dend_41", "dend_4", "dend_48", "dend_47", "dend_44", "dend_43", "dend_5", "dend_10", "dend_6", "dend_12", "dend_11", "dend_9", "dend_8", "dend_7", "dend_21", "dend_18", "dend_13", "dend_22", "dend_20", "dend_19", "dend_15", "dend_14", "dend_32", "dend_23", "dend_17", "dend_16", "dend_24", "dend_26", "dend_25", "dend_28", "dend_27", "dend_31", "dend_30", "dend_29" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_52", "dend_49", "dend_35", "dend_1", "dend_0", "axon_0", "dend_56", "dend_53", "dend_51", "dend_50", "dend_39", "dend_36", "dend_34", "dend_2", "axon_1", "dend_55", "dend_54", "dend_45", "dend_40", "dend_38", "dend_37", "dend_33", "dend_3", "dend_46", "dend_42", "dend_41", "dend_4", "dend_48", "dend_47", "dend_44", "dend_43", "dend_5", "dend_10", "dend_6", "dend_12", "dend_11", "dend_9", "dend_8", "dend_7", "dend_21", "dend_18", "dend_13", "dend_22", "dend_20", "dend_19", "dend_15", "dend_14", "dend_32", "dend_23", "dend_17", "dend_16", "dend_24", "dend_26", "dend_25", "dend_28", "dend_27", "dend_31", "dend_30", "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_55", "dend_54", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_7", "dend_7", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_15", "dend_15", "dend_14", "dend_14", "dend_32", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_24", "dend_24", "dend_24", "dend_24", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_28", "dend_27", "dend_27", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L6_ChC_14a89428ba_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_52, id: dend_52, parent: soma_0
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: soma_0
create dend_49
public dend_49
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_56, id: dend_56, parent: dend_52
create dend_56
public dend_56
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_1
create dend_34
public dend_34
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_45, id: dend_45, parent: dend_39
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_33, id: dend_33, parent: dend_2
create dend_33
public dend_33
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_10, id: dend_10, parent: dend_5
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_6
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_21, id: dend_21, parent: dend_12
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_12
create dend_18
public dend_18
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_32, id: dend_32, parent: dend_22
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_31, id: dend_31, parent: dend_28
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_52, dend_49, dend_35, dend_1, dend_0, dend_56, dend_53, dend_51, dend_50, dend_39, dend_36, dend_34, dend_2, dend_55, dend_54, dend_45, dend_40, dend_38, dend_37, dend_33, dend_3, dend_46, dend_42, dend_41, dend_4, dend_48, dend_47, dend_44, dend_43, dend_5, dend_10, dend_6, dend_12, dend_11, dend_9, dend_8, dend_7, dend_21, dend_18, dend_13, dend_22, dend_20, dend_19, dend_15, dend_14, dend_32, dend_23, dend_17, dend_16, dend_24, dend_26, dend_25, dend_28, dend_27, dend_31, dend_30, dend_29]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_52, dend_49, dend_35, dend_1, dend_0, dend_56, dend_53, dend_51, dend_50, dend_39, dend_36, dend_34, dend_2, dend_55, dend_54, dend_45, dend_40, dend_38, dend_37, dend_33, dend_3, dend_46, dend_42, dend_41, dend_4, dend_48, dend_47, dend_44, dend_43, dend_5, dend_10, dend_6, dend_12, dend_11, dend_9, dend_8, dend_7, dend_21, dend_18, dend_13, dend_22, dend_20, dend_19, dend_15, dend_14, dend_32, dend_23, dend_17, dend_16, dend_24, dend_26, dend_25, dend_28, dend_27, dend_31, dend_30, dend_29]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_52, dend_49, dend_35, dend_1, dend_0, axon_0, dend_56, dend_53, dend_51, dend_50, dend_39, dend_36, dend_34, dend_2, axon_1, dend_55, dend_54, dend_45, dend_40, dend_38, dend_37, dend_33, dend_3, dend_46, dend_42, dend_41, dend_4, dend_48, dend_47, dend_44, dend_43, dend_5, dend_10, dend_6, dend_12, dend_11, dend_9, dend_8, dend_7, dend_21, dend_18, dend_13, dend_22, dend_20, dend_19, dend_15, dend_14, dend_32, dend_23, dend_17, dend_16, dend_24, dend_26, dend_25, dend_28, dend_27, dend_31, dend_30, dend_29]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_29
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_55, dend_54, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_7, dend_7, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_14, dend_14, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_24, dend_24, dend_24, dend_24, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_28, dend_27, dend_27, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_52(0), soma_0(0.4499998968006674)
    connect dend_49(0), soma_0(0.4499998968006674)
    connect dend_35(0), soma_0(0.4499998968006674)
    connect dend_1(0), soma_0(0.4499998968006674)
    connect dend_0(0), soma_0(0.4499998968006674)
    connect axon_0(0), soma_0(1.0)
    connect dend_56(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_45(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_33(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_10(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_6(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_21(0), dend_12(1.0)
    connect dend_18(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_32(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_31(0), dend_28(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -8.8586, -8.04469, 1.53009, 3.3791 ) }
    soma_0 { pt3dadd( -7.97995, -7.34666, 1.36479, 5.72454 ) }
    soma_0 { pt3dadd( -7.1013, -6.64862, 1.1995, 8.23846 ) }
    soma_0 { pt3dadd( -6.22264, -5.95059, 1.0342, 11.0117 ) }
    soma_0 { pt3dadd( -5.34399, -5.25256, 0.868909, 12.2892 ) }
    soma_0 { pt3dadd( -4.46534, -4.55452, 0.703614, 13.1847 ) }
    soma_0 { pt3dadd( -3.58668, -3.85649, 0.538319, 13.8694 ) }
    soma_0 { pt3dadd( -2.70803, -3.15845, 0.373024, 14.3074 ) }
    soma_0 { pt3dadd( -1.82938, -2.46042, 0.207729, 14.3951 ) }
    soma_0 { pt3dadd( -0.950725, -1.76239, 0.0424341, 13.9653 ) }
    soma_0 { pt3dadd( -0.0720712, -1.06435, -0.122861, 13.3474 ) }
    soma_0 { pt3dadd( 0.806582, -0.36632, -0.288156, 12.6084 ) }
    soma_0 { pt3dadd( 1.68524, 0.331714, -0.453451, 11.7137 ) }
    soma_0 { pt3dadd( 2.56389, 1.02975, -0.618746, 10.9789 ) }
    soma_0 { pt3dadd( 3.44254, 1.72778, -0.784041, 10.2328 ) }
    soma_0 { pt3dadd( 4.3212, 2.42582, -0.949336, 9.50705 ) }
    soma_0 { pt3dadd( 5.19985, 3.12385, -1.11463, 8.866 ) }
    soma_0 { pt3dadd( 6.0785, 3.82188, -1.27993, 8.5708 ) }
    soma_0 { pt3dadd( 6.95716, 4.51992, -1.44522, 7.86083 ) }
    soma_0 { pt3dadd( 7.83581, 5.21795, -1.61052, 5.76858 ) }
    soma_0 { pt3dadd( 8.71446, 5.91598, -1.77581, 3.46527 ) }
    // Section: dend_52, id: dend_52, parent: soma_0 (entry count 21/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -9.69144, -0.503644, 2.76069, 1.92 ) }
    dend_52 { pt3dadd( -9.80483, -0.521747, 2.76069, 1.92 ) }
    dend_52 { pt3dadd( -10.9402, -0.657192, 2.76069, 1.92 ) }
    dend_52 { pt3dadd( -12.0393, -0.78831, 2.76069, 1.69 ) }
    dend_52 { pt3dadd( -13.0817, -0.912675, 2.76069, 1.55 ) }
    dend_52 { pt3dadd( -14.5458, -1.08733, 2.76069, 1.55 ) }
    dend_52 { pt3dadd( -15.7573, -1.23186, 2.76069, 1.55 ) }
    dend_52 { pt3dadd( -17.8316, -1.45992, 2.76069, 1.55 ) }
    // Section: dend_49, id: dend_49, parent: soma_0 (entry count 29/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -6.48144, -10.7411, -11.0593, 2.43 ) }
    dend_49 { pt3dadd( -6.68987, -11.0306, -11.0593, 2.43 ) }
    dend_49 { pt3dadd( -7.25929, -11.9777, -11.0593, 1.69 ) }
    dend_49 { pt3dadd( -7.7381, -12.9406, -10.6928, 1.33 ) }
    dend_49 { pt3dadd( -8.04828, -13.5986, -10.3524, 1.33 ) }
    dend_49 { pt3dadd( -8.45306, -14.5299, -9.84386, 1.62 ) }
    dend_49 { pt3dadd( -8.79775, -15.3638, -9.38924, 1.92 ) }
    dend_49 { pt3dadd( -9.0852, -16.1543, -8.93834, 2.43 ) }
    dend_49 { pt3dadd( -10.1224, -19.6238, -6.88631, 1.92 ) }
    dend_49 { pt3dadd( -10.3096, -20.3588, -6.44544, 1.92 ) }
    dend_49 { pt3dadd( -10.5241, -21.2609, -5.88427, 1.18 ) }
    dend_49 { pt3dadd( -10.643, -21.7596, -5.57859, 1.18 ) }
    dend_49 { pt3dadd( -10.815, -22.4233, -5.2206, 1.18 ) }
    dend_49 { pt3dadd( -10.9652, -22.9096, -4.99896, 1.55 ) }
    dend_49 { pt3dadd( -11.1546, -23.4004, -4.86273, 1.55 ) }
    dend_49 { pt3dadd( -11.6049, -24.3396, -4.55446, 0.96 ) }
    dend_49 { pt3dadd( -12.0884, -25.1104, -4.27302, 1.33 ) }
    dend_49 { pt3dadd( -12.6793, -25.8809, -3.98892, 1.69 ) }
    dend_49 { pt3dadd( -13.6679, -26.98, -3.62148, 2.28 ) }
    dend_49 { pt3dadd( -14.3647, -27.6773, -3.42776, 1.84 ) }
    dend_49 { pt3dadd( -15.0686, -28.3303, -3.2934, 1.62 ) }
    dend_49 { pt3dadd( -15.7402, -28.9245, -3.22887, 1.62 ) }
    dend_49 { pt3dadd( -16.6176, -29.6964, -3.18824, 1.11 ) }
    dend_49 { pt3dadd( -17.1309, -30.1811, -3.19874, 0.88 ) }
    dend_49 { pt3dadd( -17.7073, -30.7984, -3.26496, 1.25 ) }
    dend_49 { pt3dadd( -18.1374, -31.3396, -3.31673, 1.25 ) }
    dend_49 { pt3dadd( -18.5987, -32.0055, -3.4555, 0.88 ) }
    dend_49 { pt3dadd( -18.881, -32.4475, -3.58502, 0.88 ) }
    dend_49 { pt3dadd( -19.2162, -32.9679, -3.77036, 1.62 ) }
    dend_49 { pt3dadd( -19.6774, -33.6342, -4.02898, 1.62 ) }
    dend_49 { pt3dadd( -20.1652, -34.2392, -4.30529, 1.62 ) }
    dend_49 { pt3dadd( -21.5469, -35.6182, -5.03754, 0.88 ) }
    dend_49 { pt3dadd( -22.0755, -36.0238, -5.28031, 0.59 ) }
    dend_49 { pt3dadd( -22.7869, -36.4536, -5.54507, 0.59 ) }
    dend_49 { pt3dadd( -23.3568, -36.7451, -5.70832, 0.96 ) }
    dend_49 { pt3dadd( -24.0569, -37.0696, -5.85318, 1.62 ) }
    dend_49 { pt3dadd( -24.806, -37.403, -5.94359, 1.92 ) }
    dend_49 { pt3dadd( -25.6328, -37.7974, -5.86807, 2.06 ) }
    dend_49 { pt3dadd( -26.6362, -38.3224, -5.67744, 1.55 ) }
    dend_49 { pt3dadd( -27.5852, -38.8653, -5.41587, 1.25 ) }
    dend_49 { pt3dadd( -28.1518, -39.2197, -5.22082, 1.25 ) }
    dend_49 { pt3dadd( -28.8029, -39.6737, -4.95758, 1.25 ) }
    dend_49 { pt3dadd( -30.5983, -41.0769, -4.30251, 1.25 ) }
    dend_49 { pt3dadd( -30.9661, -41.3943, -4.18646, 1.25 ) }
    dend_49 { pt3dadd( -31.5046, -41.9099, -4.05992, 1.03 ) }
    dend_49 { pt3dadd( -31.9363, -42.3835, -4.02689, 0.74 ) }
    dend_49 { pt3dadd( -32.3233, -42.8728, -4.07121, 1.62 ) }
    dend_49 { pt3dadd( -33.3917, -44.377, -4.41136, 2.28 ) }
    dend_49 { pt3dadd( -33.8476, -45.0366, -4.6407, 2.5 ) }
    dend_49 { pt3dadd( -34.1357, -45.4636, -4.78024, 2.5 ) }
    dend_49 { pt3dadd( -34.7124, -46.3091, -5.02739, 1.11 ) }
    dend_49 { pt3dadd( -35.1555, -46.8853, -5.16018, 1.11 ) }
    dend_49 { pt3dadd( -35.5232, -47.2882, -5.21295, 1.11 ) }
    dend_49 { pt3dadd( -35.8832, -47.6218, -5.21295, 1.11 ) }
    dend_49 { pt3dadd( -36.203, -47.8987, -5.21295, 1.62 ) }
    dend_49 { pt3dadd( -36.72, -48.4029, -5.21295, 1.99 ) }
    dend_49 { pt3dadd( -37.5297, -49.286, -5.21295, 1.99 ) }
    dend_49 { pt3dadd( -38.2307, -50.1553, -5.21295, 1.99 ) }
    dend_49 { pt3dadd( -38.9088, -51.1124, -5.21295, 1.99 ) }
    dend_49 { pt3dadd( -39.4737, -52.01, -5.21295, 1.99 ) }
    dend_49 { pt3dadd( -40.6885, -54.1709, -5.20238, 1.99 ) }
    dend_49 { pt3dadd( -41.1703, -55.1777, -5.19404, 1.99 ) }
    dend_49 { pt3dadd( -41.5211, -56.0773, -5.18421, 1.55 ) }
    dend_49 { pt3dadd( -41.7642, -56.8161, -5.17442, 1.18 ) }
    dend_49 { pt3dadd( -42.3197, -58.8214, -5.06205, 1.18 ) }
    dend_49 { pt3dadd( -42.4824, -59.5483, -4.99164, 1.11 ) }
    dend_49 { pt3dadd( -42.6415, -60.4792, -4.86094, 1.92 ) }
    dend_49 { pt3dadd( -42.8008, -61.6528, -4.66013, 2.14 ) }
    dend_49 { pt3dadd( -42.8737, -62.2367, -4.545, 2.14 ) }
    dend_49 { pt3dadd( -43.0814, -63.9117, -4.17216, 0.66 ) }
    dend_49 { pt3dadd( -43.1722, -64.6478, -3.98371, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_49 { pt3dadd( -43.3148, -65.2725, -3.81565, 0.66 ) }
    dend_49 { pt3dadd( -43.4017, -65.4813, -3.75511, 1.03 ) }
    dend_49 { pt3dadd( -43.8291, -66.0704, -3.58623, 1.03 ) }
    dend_49 { pt3dadd( -44.1899, -66.3802, -3.52395, 1.03 ) }
    dend_49 { pt3dadd( -44.3979, -66.4973, -3.52094, 1.33 ) }
    dend_49 { pt3dadd( -45.0091, -66.8055, -3.51261, 1.33 ) }
    dend_49 { pt3dadd( -45.5711, -67.1172, -3.50527, 0.96 ) }
    dend_49 { pt3dadd( -46.0258, -67.4418, -3.49977, 0.81 ) }
    dend_49 { pt3dadd( -46.5134, -67.9068, -3.49436, 0.81 ) }
    dend_49 { pt3dadd( -46.8486, -68.3424, -3.4895, 1.11 ) }
    dend_49 { pt3dadd( -47.2026, -68.9657, -3.48328, 1.33 ) }
    dend_49 { pt3dadd( -47.498, -69.6876, -3.47739, 1.33 ) }
    dend_49 { pt3dadd( -47.77, -70.5367, -3.46969, 1.33 ) }
    dend_49 { pt3dadd( -47.9045, -70.9864, -3.47393, 1.33 ) }
    dend_49 { pt3dadd( -48.0126, -71.3266, -3.48257, 0.96 ) }
    dend_49 { pt3dadd( -48.1893, -71.8431, -3.50284, 0.96 ) }
    dend_49 { pt3dadd( -48.432, -72.4704, -3.53518, 1.18 ) }
    dend_49 { pt3dadd( -48.6365, -72.9356, -3.56291, 1.55 ) }
    dend_49 { pt3dadd( -49.0366, -73.7046, -3.61213, 1.55 ) }
    dend_49 { pt3dadd( -49.3628, -74.2537, -3.64846, 1.25 ) }
    dend_49 { pt3dadd( -49.7365, -74.7946, -3.68418, 1.25 ) }
    dend_49 { pt3dadd( -50.1599, -75.3022, -3.71502, 1.25 ) }
    dend_49 { pt3dadd( -50.7535, -75.8614, -3.78747, 1.03 ) }
    dend_49 { pt3dadd( -51.3477, -76.2933, -3.87695, 1.03 ) }
    dend_49 { pt3dadd( -51.5597, -76.4074, -3.91105, 1.03 ) }
    dend_49 { pt3dadd( -52.3281, -76.7133, -4.04555, 1.25 ) }
    dend_49 { pt3dadd( -53.0242, -76.9255, -4.16715, 1.4 ) }
    dend_49 { pt3dadd( -54.1036, -77.2102, -4.3508, 1.4 ) }
    dend_49 { pt3dadd( -54.6904, -77.3715, -4.44773, 1.11 ) }
    dend_49 { pt3dadd( -55.3792, -77.5962, -4.55629, 1.03 ) }
    dend_49 { pt3dadd( -55.9073, -77.8183, -4.63011, 0.96 ) }
    dend_49 { pt3dadd( -56.5593, -78.1829, -4.70345, 0.96 ) }
    dend_49 { pt3dadd( -57.158, -78.6252, -4.74351, 0.96 ) }
    dend_49 { pt3dadd( -57.6086, -79.0753, -4.74351, 0.96 ) }
    dend_49 { pt3dadd( -57.805, -79.324, -4.74351, 1.25 ) }
    dend_49 { pt3dadd( -58.2059, -79.9559, -4.74351, 1.62 ) }
    dend_49 { pt3dadd( -58.5258, -80.5485, -4.74351, 1.84 ) }
    dend_49 { pt3dadd( -58.7283, -80.9588, -4.71946, 1.84 ) }
    dend_49 { pt3dadd( -59.1248, -81.8213, -4.63054, 1.62 ) }
    dend_49 { pt3dadd( -59.3712, -82.3773, -4.55625, 1.62 ) }
    dend_49 { pt3dadd( -59.5531, -82.805, -4.49303, 1.99 ) }
    dend_49 { pt3dadd( -59.8762, -83.6052, -4.36876, 1.99 ) }
    dend_49 { pt3dadd( -60.3173, -84.6027, -4.20885, 1.99 ) }
    dend_49 { pt3dadd( -60.7293, -85.3946, -4.08291, 1.99 ) }
    dend_49 { pt3dadd( -61.0448, -85.8876, -4.00615, 1.99 ) }
    dend_49 { pt3dadd( -61.7499, -86.7645, -3.88563, 1.33 ) }
    dend_49 { pt3dadd( -62.2541, -87.2599, -3.82994, 1.33 ) }
    dend_49 { pt3dadd( -62.9656, -87.8197, -3.79291, 1.33 ) }
    dend_49 { pt3dadd( -63.7912, -88.3607, -3.79291, 1.55 ) }
    dend_49 { pt3dadd( -64.4005, -88.707, -3.79131, 1.84 ) }
    dend_49 { pt3dadd( -65.444, -89.2801, -3.78651, 1.84 ) }
    dend_49 { pt3dadd( -66.0035, -89.5969, -3.78292, 1.84 ) }
    dend_49 { pt3dadd( -66.8321, -90.1498, -3.7762, 1.18 ) }
    dend_49 { pt3dadd( -67.3377, -90.5848, -3.77104, 1.18 ) }
    dend_49 { pt3dadd( -67.8038, -91.08, -3.76557, 1.18 ) }
    dend_49 { pt3dadd( -68.2527, -91.6341, -3.75999, 1.18 ) }
    dend_49 { pt3dadd( -68.7311, -92.2831, -3.75402, 1.4 ) }
    dend_49 { pt3dadd( -69.2905, -93.0539, -3.74781, 1.4 ) }
    dend_49 { pt3dadd( -69.6299, -93.4785, -3.74495, 1.62 ) }
    dend_49 { pt3dadd( -70.3181, -94.1848, -3.74174, 0.96 ) }
    dend_49 { pt3dadd( -70.7213, -94.4793, -3.74174, 0.96 ) }
    dend_49 { pt3dadd( -71.1703, -94.6753, -3.74174, 0.81 ) }
    dend_49 { pt3dadd( -71.5586, -94.7612, -3.74174, 0.81 ) }
    dend_49 { pt3dadd( -72.1908, -94.8307, -3.74174, 0.81 ) }
    dend_49 { pt3dadd( -72.9186, -94.9159, -3.74174, 0.81 ) }
    dend_49 { pt3dadd( -73.4877, -95.0373, -3.74174, 0.81 ) }
    dend_49 { pt3dadd( -73.7972, -95.2008, -3.74174, 0.88 ) }
    dend_49 { pt3dadd( -74.3265, -95.7214, -3.74174, 1.18 ) }
    dend_49 { pt3dadd( -74.7593, -96.3325, -3.74174, 1.55 ) }
    dend_49 { pt3dadd( -75.1332, -97.0125, -3.78283, 1.99 ) }
    dend_49 { pt3dadd( -75.4612, -97.711, -3.84771, 1.99 ) }
    dend_49 { pt3dadd( -75.8522, -98.6493, -3.95412, 1.92 ) }
    dend_49 { pt3dadd( -76.1283, -99.3212, -4.0437, 1.69 ) }
    dend_49 { pt3dadd( -76.2712, -99.6383, -4.09433, 1.69 ) }
    dend_49 { pt3dadd( -76.7887, -100.603, -4.2767, 0.96 ) }
    dend_49 { pt3dadd( -77.2484, -101.25, -4.42287, 0.96 ) }
    dend_49 { pt3dadd( -77.5454, -101.541, -4.46225, 0.96 ) }
    dend_49 { pt3dadd( -77.9574, -101.823, -4.49578, 0.96 ) }
    dend_49 { pt3dadd( -78.5272, -102.136, -4.51801, 0.96 ) }
    dend_49 { pt3dadd( -78.9802, -102.343, -4.5088, 0.96 ) }
    dend_49 { pt3dadd( -79.4197, -102.495, -4.45603, 0.96 ) }
    dend_49 { pt3dadd( -80.8156, -102.86, -4.26576, 0.96 ) }
    dend_49 { pt3dadd( -82.1368, -103.175, -4.06547, 0.74 ) }
    dend_49 { pt3dadd( -82.305, -103.226, -4.03528, 0.74 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 84/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -8.22144, -9.70164, 0.070692, 1.77 ) }
    dend_35 { pt3dadd( -8.9188, -10.2829, 0.070692, 1.77 ) }
    dend_35 { pt3dadd( -10.9625, -11.7761, 0.070692, 1.77 ) }
    dend_35 { pt3dadd( -12.4196, -12.7584, 0.070692, 1.77 ) }
    dend_35 { pt3dadd( -14.2016, -13.8769, 0.070692, 1.77 ) }
    dend_35 { pt3dadd( -16.3716, -15.1571, 0.070692, 1.77 ) }
    dend_35 { pt3dadd( -18.055, -16.0762, 0.070692, 1.77 ) }
    dend_35 { pt3dadd( -19.5899, -16.7974, 0.070692, 1.77 ) }
    dend_35 { pt3dadd( -21.1145, -17.332, 0.070692, 1.77 ) }
    dend_35 { pt3dadd( -22.6912, -17.6957, 0.070692, 1.77 ) }
    dend_35 { pt3dadd( -23.5823, -17.7797, 0.070692, 1.77 ) }
    dend_35 { pt3dadd( -24.8406, -17.8164, 0.070692, 1.77 ) }
    dend_35 { pt3dadd( -26.0111, -17.7689, 0.070692, 1.77 ) }
    dend_35 { pt3dadd( -27.4246, -17.6168, 0.070692, 1.77 ) }
    dend_35 { pt3dadd( -29.752, -17.1622, 0.070692, 1.77 ) }
    dend_35 { pt3dadd( -31.16, -16.7834, 0.070692, 1.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 0/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 10.9086, 2.63585, -10.6193, 2.73 ) }
    dend_1 { pt3dadd( 11.1299, 2.5645, -10.5936, 2.73 ) }
    dend_1 { pt3dadd( 12.8005, 1.93749, -10.4269, 1.99 ) }
    dend_1 { pt3dadd( 14.536, 1.22308, -10.2773, 2.43 ) }
    dend_1 { pt3dadd( 15.489, 0.78672, -10.3605, 2.43 ) }
    dend_1 { pt3dadd( 16.7724, 0.144876, -10.5962, 2.5 ) }
    dend_1 { pt3dadd( 18.6448, -0.791609, -10.9401, 2.5 ) }
    dend_1 { pt3dadd( 19.5857, -1.28826, -11.1514, 2.43 ) }
    dend_1 { pt3dadd( 20.6612, -1.93656, -11.4968, 1.99 ) }
    dend_1 { pt3dadd( 23.7442, -3.95347, -12.9332, 2.36 ) }
    dend_1 { pt3dadd( 24.4256, -4.43638, -13.3417, 2.5 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 11/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 8.74856, 7.40285, -2.05931, 1.33 ) }
    dend_0 { pt3dadd( 9.32292, 7.87957, -2.03699, 1.33 ) }
    dend_0 { pt3dadd( 9.8875, 8.35859, -2.01676, 1.33 ) }
    dend_0 { pt3dadd( 10.6111, 8.94487, -1.85294, 1.33 ) }
    dend_0 { pt3dadd( 11.0854, 9.33474, -1.7022, 1.77 ) }
    dend_0 { pt3dadd( 11.7206, 9.87968, -1.47172, 2.28 ) }
    dend_0 { pt3dadd( 12.2109, 10.3219, -1.28148, 1.99 ) }
    dend_0 { pt3dadd( 12.889, 10.9907, -0.970667, 1.25 ) }
    dend_0 { pt3dadd( 14.0577, 12.2804, -0.432891, 1.25 ) }
    dend_0 { pt3dadd( 14.5173, 12.8373, -0.23568, 1.33 ) }
    dend_0 { pt3dadd( 14.9478, 13.4035, -0.0702913, 1.62 ) }
    dend_0 { pt3dadd( 15.2318, 13.8609, -0.0651625, 1.69 ) }
    dend_0 { pt3dadd( 15.4261, 14.3254, -0.225361, 1.69 ) }
    dend_0 { pt3dadd( 15.603, 15.3055, -0.907999, 1.03 ) }
    dend_0 { pt3dadd( 15.6185, 15.9254, -1.43535, 1.03 ) }
    dend_0 { pt3dadd( 15.5897, 16.2446, -1.72049, 1.03 ) }
    dend_0 { pt3dadd( 15.1556, 18.578, -3.82407, 1.99 ) }
    dend_0 { pt3dadd( 14.9624, 19.3362, -4.48509, 1.69 ) }
    dend_0 { pt3dadd( 14.4581, 20.9328, -5.79239, 1.4 ) }
    dend_0 { pt3dadd( 14.1038, 21.894, -6.49879, 1.33 ) }
    dend_0 { pt3dadd( 13.8442, 22.5601, -6.9245, 1.33 ) }
    dend_0 { pt3dadd( 13.5892, 23.2716, -7.27446, 1.33 ) }
    dend_0 { pt3dadd( 13.4234, 23.9476, -7.434, 1.33 ) }
    dend_0 { pt3dadd( 13.3586, 24.5541, -7.52831, 1.33 ) }
    dend_0 { pt3dadd( 13.4226, 25.1516, -7.55933, 1.33 ) }
    dend_0 { pt3dadd( 13.6263, 25.7851, -7.59758, 1.33 ) }
    dend_0 { pt3dadd( 13.9298, 26.402, -7.65557, 1.33 ) }
    dend_0 { pt3dadd( 14.4316, 27.1705, -7.74445, 1.33 ) }
    dend_0 { pt3dadd( 15.1619, 28.0773, -7.88021, 0.96 ) }
    dend_0 { pt3dadd( 15.6133, 28.5575, -7.98369, 0.96 ) }
    dend_0 { pt3dadd( 16.0942, 29.0, -8.06496, 0.96 ) }
    dend_0 { pt3dadd( 16.3826, 29.2383, -8.09583, 1.25 ) }
    dend_0 { pt3dadd( 16.8665, 29.6364, -8.12676, 1.25 ) }
    dend_0 { pt3dadd( 17.3894, 30.1006, -8.21317, 1.18 ) }
    dend_0 { pt3dadd( 18.0932, 30.775, -8.37558, 1.18 ) }
    dend_0 { pt3dadd( 18.9598, 31.702, -8.65511, 1.18 ) }
    dend_0 { pt3dadd( 19.5266, 32.3472, -8.87172, 1.4 ) }
    dend_0 { pt3dadd( 20.0575, 32.9666, -9.09006, 1.4 ) }
    dend_0 { pt3dadd( 21.3681, 34.5301, -9.63388, 1.18 ) }
    dend_0 { pt3dadd( 21.9198, 35.2061, -9.85189, 0.88 ) }
    dend_0 { pt3dadd( 22.5326, 35.9522, -10.0747, 0.88 ) }
    dend_0 { pt3dadd( 22.9364, 36.4234, -10.2179, 0.81 ) }
    dend_0 { pt3dadd( 23.4731, 36.9811, -10.3491, 0.81 ) }
    dend_0 { pt3dadd( 24.2228, 37.649, -10.4344, 1.69 ) }
    dend_0 { pt3dadd( 24.8658, 38.1511, -10.4261, 2.5 ) }
    dend_0 { pt3dadd( 25.2383, 38.4264, -10.4237, 2.06 ) }
    dend_0 { pt3dadd( 25.9686, 38.9741, -10.4178, 0.96 ) }
    dend_0 { pt3dadd( 26.375, 39.3095, -10.4099, 0.96 ) }
    dend_0 { pt3dadd( 26.6817, 39.6024, -10.398, 0.96 ) }
    dend_0 { pt3dadd( 27.0602, 40.0449, -10.3716, 0.96 ) }
    dend_0 { pt3dadd( 27.3683, 40.5196, -10.3333, 0.96 ) }
    dend_0 { pt3dadd( 27.6803, 41.2359, -10.2567, 0.96 ) }
    dend_0 { pt3dadd( 27.8422, 41.8746, -10.1741, 0.96 ) }
    dend_0 { pt3dadd( 27.9498, 42.4744, -10.0877, 0.96 ) }
    dend_0 { pt3dadd( 28.0593, 43.1792, -9.98084, 0.96 ) }
    dend_0 { pt3dadd( 28.1659, 43.8152, -9.88267, 0.96 ) }
    dend_0 { pt3dadd( 28.3342, 44.4848, -9.78354, 0.96 ) }
    dend_0 { pt3dadd( 28.5622, 45.105, -9.69821, 0.96 ) }
    dend_0 { pt3dadd( 28.791, 45.5015, -9.65328, 0.96 ) }
    dend_0 { pt3dadd( 29.2245, 46.0626, -9.60337, 1.33 ) }
    dend_0 { pt3dadd( 29.6806, 46.557, -9.56936, 1.69 ) }
    dend_0 { pt3dadd( 30.4222, 47.2748, -9.58141, 1.69 ) }
    dend_0 { pt3dadd( 30.6698, 47.4978, -9.60052, 1.69 ) }
    dend_0 { pt3dadd( 31.5729, 48.3732, -9.6979, 0.88 ) }
    dend_0 { pt3dadd( 31.9384, 48.7808, -9.74655, 0.74 ) }
    dend_0 { pt3dadd( 32.1993, 49.1096, -9.78753, 0.74 ) }
    dend_0 { pt3dadd( 32.7472, 49.9173, -9.8351, 0.74 ) }
    dend_0 { pt3dadd( 33.05, 50.4667, -9.82495, 0.74 ) }
    dend_0 { pt3dadd( 33.4269, 51.3416, -9.73963, 0.66 ) }
    dend_0 { pt3dadd( 33.5212, 51.6235, -9.69316, 0.96 ) }
    dend_0 { pt3dadd( 33.6705, 52.085, -9.59874, 1.33 ) }
    dend_0 { pt3dadd( 34.0733, 53.1582, -9.35364, 0.96 ) }
    dend_0 { pt3dadd( 34.4178, 53.8342, -9.19728, 0.96 ) }
    dend_0 { pt3dadd( 34.8888, 54.5928, -9.06095, 0.96 ) }
    dend_0 { pt3dadd( 35.3387, 55.2307, -8.96907, 0.96 ) }
    dend_0 { pt3dadd( 35.7733, 55.8249, -8.89806, 0.96 ) }
    dend_0 { pt3dadd( 36.5364, 56.8459, -8.8013, 0.96 ) }
    dend_0 { pt3dadd( 37.7916, 58.4623, -8.69628, 0.81 ) }
    dend_0 { pt3dadd( 39.3737, 60.4194, -8.57679, 0.66 ) }
    dend_0 { pt3dadd( 39.8014, 60.9273, -8.54789, 1.4 ) }
    dend_0 { pt3dadd( 40.2594, 61.4675, -8.5268, 2.14 ) }
    dend_0 { pt3dadd( 40.879, 62.2014, -8.50958, 2.43 ) }
    dend_0 { pt3dadd( 41.6415, 63.1162, -8.50135, 0.74 ) }
    dend_0 { pt3dadd( 42.2016, 63.7356, -8.51147, 0.74 ) }
    dend_0 { pt3dadd( 42.8092, 64.3149, -8.54056, 0.74 ) }
    dend_0 { pt3dadd( 43.679, 65.0821, -8.59082, 0.74 ) }
    dend_0 { pt3dadd( 44.6255, 65.8667, -8.65174, 0.74 ) }
    dend_0 { pt3dadd( 45.387, 66.4704, -8.70205, 0.52 ) }
    dend_0 { pt3dadd( 46.8388, 67.63, -8.78739, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_0 { pt3dadd( 47.1503, 67.8848, -8.8008, 0.15 ) }
    dend_0 { pt3dadd( 47.57, 68.2371, -8.80817, 0.15 ) }
    dend_0 { pt3dadd( 47.8917, 68.5024, -8.80183, 0.81 ) }
    dend_0 { pt3dadd( 48.0963, 68.6729, -8.79614, 1.18 ) }
    dend_0 { pt3dadd( 48.5871, 69.0973, -8.77664, 1.18 ) }
    dend_0 { pt3dadd( 48.9655, 69.4695, -8.75177, 1.18 ) }
    dend_0 { pt3dadd( 49.3089, 69.7825, -8.73419, 1.03 ) }
    dend_0 { pt3dadd( 49.7158, 70.1171, -8.72108, 0.88 ) }
    dend_0 { pt3dadd( 50.1541, 70.4677, -8.71042, 0.81 ) }
    dend_0 { pt3dadd( 50.634, 70.8652, -8.6988, 0.81 ) }
    dend_0 { pt3dadd( 51.0633, 71.2444, -8.68513, 0.81 ) }
    dend_0 { pt3dadd( 51.7513, 71.9262, -8.6524, 0.81 ) }
    dend_0 { pt3dadd( 52.2665, 72.5167, -8.61623, 0.81 ) }
    dend_0 { pt3dadd( 52.6207, 72.9951, -8.58098, 0.81 ) }
    dend_0 { pt3dadd( 53.0045, 73.6075, -8.52991, 0.81 ) }
    dend_0 { pt3dadd( 53.3044, 74.195, -8.47249, 0.81 ) }
    dend_0 { pt3dadd( 53.501, 74.681, -8.41868, 0.81 ) }
    dend_0 { pt3dadd( 53.665, 75.1944, -8.35646, 0.81 ) }
    dend_0 { pt3dadd( 53.7774, 75.5353, -8.31556, 0.81 ) }
    dend_0 { pt3dadd( 53.9379, 75.9179, -8.2739, 0.44 ) }
    dend_0 { pt3dadd( 54.1175, 76.2619, -8.24078, 0.44 ) }
    dend_0 { pt3dadd( 54.3683, 76.6637, -8.20715, 0.66 ) }
    dend_0 { pt3dadd( 54.7568, 77.2097, -8.1673, 0.66 ) }
    dend_0 { pt3dadd( 55.2207, 77.8038, -8.12615, 0.66 ) }
    dend_0 { pt3dadd( 55.6864, 78.3576, -8.09009, 1.11 ) }
    dend_0 { pt3dadd( 56.0303, 78.7476, -8.06572, 1.33 ) }
    dend_0 { pt3dadd( 56.4371, 79.2096, -8.03606, 1.33 ) }
    dend_0 { pt3dadd( 56.6837, 79.52, -8.01264, 1.33 ) }
    dend_0 { pt3dadd( 57.2888, 80.4216, -7.93105, 0.59 ) }
    dend_0 { pt3dadd( 57.376, 80.5871, -7.9052, 0.15 ) }
    dend_0 { pt3dadd( 57.5988, 81.0981, -7.80229, 1.25 ) }
    dend_0 { pt3dadd( 57.812, 81.6443, -7.67737, 1.77 ) }
    dend_0 { pt3dadd( 58.092, 82.4176, -7.48775, 2.14 ) }
    dend_0 { pt3dadd( 58.2596, 82.9873, -7.3925, 1.84 ) }
    dend_0 { pt3dadd( 58.6001, 84.4063, -7.24515, 0.81 ) }
    dend_0 { pt3dadd( 58.7327, 84.9917, -7.21521, 0.81 ) }
    dend_0 { pt3dadd( 58.8234, 85.383, -7.21568, 0.81 ) }
    dend_0 { pt3dadd( 58.9978, 86.0431, -7.25525, 0.81 ) }
    dend_0 { pt3dadd( 59.5028, 87.6943, -7.45803, 0.81 ) }
    dend_0 { pt3dadd( 59.6311, 88.0874, -7.54215, 0.81 ) }
    dend_0 { pt3dadd( 59.8144, 88.6203, -7.70202, 0.81 ) }
    dend_0 { pt3dadd( 59.9994, 89.1491, -7.85624, 0.81 ) }
    dend_0 { pt3dadd( 60.1241, 89.4926, -7.94386, 0.81 ) }
    dend_0 { pt3dadd( 60.3844, 90.1465, -8.06591, 1.25 ) }
    dend_0 { pt3dadd( 60.843, 91.1034, -8.15365, 1.25 ) }
    dend_0 { pt3dadd( 61.0014, 91.4315, -8.18137, 1.25 ) }
    dend_0 { pt3dadd( 61.1822, 91.8062, -8.20728, 1.25 ) }
    dend_0 { pt3dadd( 61.3472, 92.1475, -8.22412, 1.25 ) }
    dend_0 { pt3dadd( 61.9124, 93.3115, -8.25377, 0.66 ) }
    dend_0 { pt3dadd( 62.3672, 94.1965, -8.25189, 0.44 ) }
    dend_0 { pt3dadd( 62.6746, 94.7801, -8.22571, 0.96 ) }
    dend_0 { pt3dadd( 62.9925, 95.3892, -8.19382, 1.33 ) }
    dend_0 { pt3dadd( 63.2068, 95.8138, -8.16653, 1.69 ) }
    dend_0 { pt3dadd( 63.3638, 96.1344, -8.1411, 1.69 ) }
    dend_0 { pt3dadd( 63.5936, 96.6265, -8.11862, 1.47 ) }
    dend_0 { pt3dadd( 63.8361, 97.1747, -8.11884, 1.11 ) }
    dend_0 { pt3dadd( 64.1062, 97.7583, -8.14333, 0.74 ) }
    dend_0 { pt3dadd( 64.3979, 98.3358, -8.18956, 0.74 ) }
    dend_0 { pt3dadd( 64.5938, 98.6811, -8.22855, 1.03 ) }
    dend_0 { pt3dadd( 65.1774, 99.5976, -8.40133, 0.88 ) }
    dend_0 { pt3dadd( 65.4193, 99.9592, -8.52051, 0.88 ) }
    dend_0 { pt3dadd( 65.6495, 100.294, -8.66616, 0.88 ) }
    dend_0 { pt3dadd( 65.8596, 100.594, -8.8185, 0.88 ) }
    dend_0 { pt3dadd( 66.0714, 100.892, -9.00385, 0.88 ) }
    dend_0 { pt3dadd( 66.4486, 101.45, -9.35538, 0.66 ) }
    dend_0 { pt3dadd( 67.0167, 102.252, -9.85379, 0.96 ) }
    dend_0 { pt3dadd( 67.2587, 102.592, -10.0642, 1.25 ) }
    dend_0 { pt3dadd( 67.4516, 102.869, -10.2277, 1.47 ) }
    dend_0 { pt3dadd( 68.1178, 103.846, -10.7484, 0.88 ) }
    dend_0 { pt3dadd( 68.4877, 104.399, -10.9862, 0.59 ) }
    dend_0 { pt3dadd( 68.8782, 104.983, -11.1421, 0.22 ) }
    dend_0 { pt3dadd( 69.0674, 105.239, -11.1742, 0.22 ) }
    dend_0 { pt3dadd( 69.1703, 105.379, -11.1707, 0.52 ) }
    dend_0 { pt3dadd( 69.4205, 105.735, -11.1179, 1.11 ) }
    dend_0 { pt3dadd( 69.845, 106.358, -10.9593, 1.11 ) }
    dend_0 { pt3dadd( 70.2654, 106.997, -10.7674, 0.66 ) }
    dend_0 { pt3dadd( 70.9924, 108.174, -10.3849, 0.37 ) }
    dend_0 { pt3dadd( 71.5919, 109.112, -10.0424, 1.47 ) }
    dend_0 { pt3dadd( 71.8999, 109.581, -9.86174, 1.25 ) }
    dend_0 { pt3dadd( 72.1884, 110.023, -9.68603, 0.88 ) }
    dend_0 { pt3dadd( 72.541, 110.561, -9.47107, 0.37 ) }
    dend_0 { pt3dadd( 72.8216, 110.997, -9.30025, 0.37 ) }
    dend_0 { pt3dadd( 73.31, 111.759, -9.00411, 1.11 ) }
    dend_0 { pt3dadd( 73.7761, 112.443, -8.76362, 0.59 ) }
    dend_0 { pt3dadd( 74.1648, 113.007, -8.57121, 1.25 ) }
    dend_0 { pt3dadd( 74.5198, 113.509, -8.39255, 1.99 ) }
    dend_0 { pt3dadd( 75.1319, 114.344, -8.10335, 1.11 ) }
    dend_0 { pt3dadd( 75.7748, 115.185, -7.7913, 1.11 ) }
    dend_0 { pt3dadd( 76.1872, 115.714, -7.59459, 1.03 ) }
    dend_0 { pt3dadd( 76.7676, 116.413, -7.32164, 1.03 ) }
    dend_0 { pt3dadd( 77.3194, 117.048, -7.0745, 0.88 ) }
    dend_0 { pt3dadd( 77.8909, 117.708, -6.82996, 1.62 ) }
    dend_0 { pt3dadd( 78.4029, 118.296, -6.63429, 1.62 ) }
    dend_0 { pt3dadd( 78.9484, 118.914, -6.44404, 0.29 ) }
    dend_0 { pt3dadd( 79.3011, 119.308, -6.32815, 0.29 ) }
    dend_0 { pt3dadd( 79.712, 119.774, -6.21053, 0.29 ) }
    dend_0 { pt3dadd( 80.0546, 120.188, -6.13123, 0.29 ) }
    dend_0 { pt3dadd( 80.3434, 120.541, -6.0703, 0.88 ) }
    dend_0 { pt3dadd( 80.5628, 120.813, -6.03234, 1.47 ) }
    dend_0 { pt3dadd( 80.9879, 121.336, -5.95738, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_0 { pt3dadd( 81.6493, 122.159, -5.84503, 0.29 ) }
    dend_0 { pt3dadd( 82.0407, 122.629, -5.78767, 1.03 ) }
    dend_0 { pt3dadd( 82.3602, 123.016, -5.74538, 1.4 ) }
    dend_0 { pt3dadd( 82.715, 123.446, -5.68501, 1.4 ) }
    dend_0 { pt3dadd( 82.8205, 123.569, -5.66588, 1.4 ) }
    dend_0 { pt3dadd( 83.5956, 124.388, -5.51689, 0.44 ) }
    dend_0 { pt3dadd( 84.1055, 124.868, -5.36278, 0.44 ) }
    dend_0 { pt3dadd( 84.3998, 125.153, -5.24451, 0.44 ) }
    dend_0 { pt3dadd( 85.0985, 125.799, -4.94837, 0.66 ) }
    dend_0 { pt3dadd( 85.576, 126.214, -4.73899, 0.96 ) }
    dend_0 { pt3dadd( 86.0736, 126.628, -4.52242, 1.25 ) }
    dend_0 { pt3dadd( 87.213, 127.552, -4.03114, 0.29 ) }
    dend_0 { pt3dadd( 87.8465, 128.104, -3.7342, 0.29 ) }
    dend_0 { pt3dadd( 88.8921, 129.083, -3.20716, 0.29 ) }
    dend_0 { pt3dadd( 89.2366, 129.438, -2.95201, 0.88 ) }
    dend_0 { pt3dadd( 89.6761, 129.947, -2.52289, 1.55 ) }
    dend_0 { pt3dadd( 89.9915, 130.339, -2.17005, 1.55 ) }
    dend_0 { pt3dadd( 90.74, 131.323, -1.28554, 0.37 ) }
    dend_0 { pt3dadd( 90.9926, 131.667, -0.979045, 1.33 ) }
    dend_0 { pt3dadd( 92.2016, 133.52, 0.588823, 1.18 ) }
    dend_0 { pt3dadd( 92.5731, 134.116, 1.04141, 0.88 ) }
    dend_0 { pt3dadd( 92.9483, 134.776, 1.48671, 0.74 ) }
    dend_0 { pt3dadd( 93.3115, 135.459, 1.8776, 1.62 ) }
    dend_0 { pt3dadd( 93.8492, 136.541, 2.32535, 0.88 ) }
    dend_0 { pt3dadd( 94.1512, 137.197, 2.50297, 0.52 ) }
    dend_0 { pt3dadd( 94.4252, 137.869, 2.57711, 0.52 ) }
    dend_0 { pt3dadd( 94.7502, 138.741, 2.67712, 0.52 ) }
    dend_0 { pt3dadd( 94.8339, 138.988, 2.70637, 0.52 ) }
    dend_0 { pt3dadd( 95.0159, 139.51, 2.76779, 0.74 ) }
    dend_0 { pt3dadd( 95.192, 140.008, 2.75982, 0.74 ) }
    dend_0 { pt3dadd( 95.3605, 140.471, 2.70606, 1.11 ) }
    dend_0 { pt3dadd( 95.5663, 141.03, 2.60319, 1.47 ) }
    dend_0 { pt3dadd( 95.8391, 141.807, 2.46304, 1.03 ) }
    dend_0 { pt3dadd( 96.0395, 142.44, 2.36353, 0.74 ) }
    dend_0 { pt3dadd( 96.6163, 144.278, 2.14224, 0.15 ) }
    dend_0 { pt3dadd( 96.7319, 144.695, 2.10629, 1.33 ) }
    dend_0 { pt3dadd( 96.8738, 145.187, 2.08019, 1.33 ) }
    dend_0 { pt3dadd( 97.5169, 147.299, 2.00744, 0.52 ) }
    dend_0 { pt3dadd( 97.7853, 148.098, 1.99759, 1.33 ) }
    dend_0 { pt3dadd( 98.507, 149.842, 2.02631, 0.22 ) }
    dend_0 { pt3dadd( 98.8946, 150.605, 2.06835, 0.22 ) }
    dend_0 { pt3dadd( 99.7352, 151.959, 2.11483, 0.96 ) }
    dend_0 { pt3dadd( 100.135, 152.455, 2.11613, 0.66 ) }
    dend_0 { pt3dadd( 100.885, 153.16, 2.08669, 0.52 ) }
    dend_0 { pt3dadd( 102.245, 154.177, 2.00422, 0.52 ) }
    dend_0 { pt3dadd( 102.914, 154.577, 1.99985, 1.4 ) }
    dend_0 { pt3dadd( 103.835, 155.089, 2.07607, 1.11 ) }
    dend_0 { pt3dadd( 105.023, 155.699, 2.27808, 0.52 ) }
    dend_0 { pt3dadd( 105.462, 155.912, 2.38534, 0.52 ) }
    dend_0 { pt3dadd( 106.296, 156.327, 2.71138, 1.47 ) }
    dend_0 { pt3dadd( 107.665, 157.082, 3.50826, 1.47 ) }
    dend_0 { pt3dadd( 108.785, 157.682, 4.2785, 0.07 ) }
    dend_0 { pt3dadd( 109.393, 157.995, 4.73788, 0.07 ) }
    dend_0 { pt3dadd( 109.821, 158.198, 5.0589, 0.52 ) }
    dend_0 { pt3dadd( 111.121, 158.646, 5.92888, 1.55 ) }
    dend_0 { pt3dadd( 112.089, 158.881, 6.49082, 1.4 ) }
    dend_0 { pt3dadd( 113.513, 159.071, 7.12234, 0.29 ) }
    dend_0 { pt3dadd( 114.106, 159.099, 7.34009, 0.29 ) }
    dend_0 { pt3dadd( 115.026, 159.115, 7.64076, 1.69 ) }
    dend_0 { pt3dadd( 116.974, 159.113, 8.26812, 1.62 ) }
    dend_0 { pt3dadd( 117.228, 159.105, 8.33433, 1.18 ) }
    dend_0 { pt3dadd( 117.788, 159.09, 8.47485, 0.22 ) }
    dend_0 { pt3dadd( 118.462, 159.088, 8.64717, 1.33 ) }
    dend_0 { pt3dadd( 118.812, 159.081, 8.74001, 1.33 ) }
    dend_0 { pt3dadd( 120.831, 158.983, 9.25507, 0.07 ) }
    dend_0 { pt3dadd( 121.466, 158.958, 9.39081, 0.88 ) }
    dend_0 { pt3dadd( 122.215, 158.95, 9.55706, 1.25 ) }
    dend_0 { pt3dadd( 123.086, 159.012, 9.75604, 1.62 ) }
    dend_0 { pt3dadd( 123.599, 159.074, 9.85836, 0.88 ) }
    dend_0 { pt3dadd( 123.941, 159.11, 9.93454, 0.88 ) }
    dend_0 { pt3dadd( 124.652, 159.167, 10.0703, 0.22 ) }
    dend_0 { pt3dadd( 124.93, 159.191, 10.1932, 0.74 ) }
    dend_0 { pt3dadd( 125.705, 159.287, 10.6695, 0.07 ) }
    dend_0 { pt3dadd( 126.262, 159.379, 11.0668, 1.4 ) }
    dend_0 { pt3dadd( 127.448, 159.56, 11.948, 0.66 ) }
    dend_0 { pt3dadd( 128.004, 159.628, 12.378, 1.18 ) }
    dend_0 { pt3dadd( 129.167, 159.714, 13.3025, 0.07 ) }
    dend_0 { pt3dadd( 129.436, 159.746, 13.5152, 0.07 ) }
    dend_0 { pt3dadd( 129.685, 159.79, 13.7073, 0.59 ) }
    dend_0 { pt3dadd( 129.821, 159.851, 13.8031, 0.07 ) }
    dend_0 { pt3dadd( 130.139, 160.08, 13.9409, 0.07 ) }
    dend_0 { pt3dadd( 130.312, 160.222, 13.9877, 0.74 ) }
    dend_0 { pt3dadd( 130.892, 160.749, 13.9319, 0.15 ) }
    dend_0 { pt3dadd( 131.044, 160.895, 13.9029, 0.88 ) }
    dend_0 { pt3dadd( 131.273, 161.134, 13.8442, 0.07 ) }
    dend_0 { pt3dadd( 131.614, 161.546, 13.7347, 0.07 ) }
    dend_0 { pt3dadd( 131.816, 161.817, 13.655, 0.88 ) }
    dend_0 { pt3dadd( 132.44, 162.723, 13.3644, 0.07 ) }
    dend_0 { pt3dadd( 132.645, 163.071, 13.2546, 1.11 ) }
    dend_0 { pt3dadd( 132.759, 163.301, 13.1933, 0.29 ) }
    dend_0 { pt3dadd( 132.982, 163.887, 13.0751, 0.07 ) }
    dend_0 { pt3dadd( 132.999, 163.943, 13.0686, 0.44 ) }
    dend_0 { pt3dadd( 133.025, 164.027, 13.0659, 0.07 ) }
    dend_0 { pt3dadd( 133.229, 164.661, 12.9946, 0.59 ) }
    dend_0 { pt3dadd( 133.314, 164.87, 12.9156, 0.07 ) }
    dend_0 { pt3dadd( 133.474, 165.18, 12.7187, 0.07 ) }
    dend_0 { pt3dadd( 133.664, 165.433, 12.4784, 0.07 ) }
    dend_0 { pt3dadd( 133.804, 165.582, 12.3102, 1.03 ) }
    dend_0 { pt3dadd( 134.742, 166.424, 11.243, 0.22 ) }
    dend_0 { pt3dadd( 134.96, 166.589, 11.0036, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_0 { pt3dadd( 135.05, 166.646, 10.9189, 0.07 ) }
    dend_0 { pt3dadd( 135.341, 166.803, 10.677, 0.07 ) }
    dend_0 { pt3dadd( 135.617, 166.945, 10.4993, 0.88 ) }
    dend_0 { pt3dadd( 135.93, 167.107, 10.396, 0.07 ) }
    dend_0 { pt3dadd( 136.17, 167.217, 10.3898, 0.07 ) }
    dend_0 { pt3dadd( 136.536, 167.397, 10.3837, 0.66 ) }
    dend_0 { pt3dadd( 136.536, 167.397, 10.3837, 0.07 ) }
    dend_0 { pt3dadd( 136.933, 167.616, 10.3844, 0.07 ) }
    dend_0 { pt3dadd( 137.274, 167.775, 10.3817, 0.74 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 8.71446, 5.91598, -1.77581, 2.20599 ) }
    axon_0 { pt3dadd( 20.4593, 15.2465, -1.77581, 2.20599 ) }
    axon_0 { pt3dadd( 32.2041, 24.577, -1.77581, 2.20599 ) }
    // Section: dend_56, id: dend_56, parent: dend_52 (entry count 12/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -17.8316, -1.45992, 2.76069, 1.69 ) }
    dend_56 { pt3dadd( -19.8884, -4.22306, 2.87092, 1.69 ) }
    dend_56 { pt3dadd( -21.5503, -6.86196, 3.14485, 1.11 ) }
    dend_56 { pt3dadd( -22.7569, -9.00898, 3.48821, 1.11 ) }
    dend_56 { pt3dadd( -23.5852, -10.5754, 3.80227, 1.11 ) }
    dend_56 { pt3dadd( -24.1999, -11.7353, 4.06723, 1.33 ) }
    dend_56 { pt3dadd( -25.0868, -13.3942, 4.45461, 1.4 ) }
    dend_56 { pt3dadd( -26.2095, -15.7764, 5.0185, 1.4 ) }
    dend_56 { pt3dadd( -27.0076, -17.5842, 5.57823, 1.25 ) }
    dend_56 { pt3dadd( -27.59, -19.0102, 6.06287, 1.4 ) }
    dend_56 { pt3dadd( -28.1368, -20.425, 6.64411, 1.4 ) }
    dend_56 { pt3dadd( -28.6867, -21.898, 7.61272, 1.03 ) }
    dend_56 { pt3dadd( -28.9162, -22.6454, 8.40247, 1.03 ) }
    dend_56 { pt3dadd( -29.0501, -23.2242, 9.77304, 1.03 ) }
    dend_56 { pt3dadd( -29.0897, -23.4119, 10.4409, 1.4 ) }
    dend_56 { pt3dadd( -29.3097, -24.0797, 13.6976, 1.25 ) }
    dend_56 { pt3dadd( -29.7651, -24.6673, 18.1345, 1.55 ) }
    dend_56 { pt3dadd( -29.9951, -24.7831, 19.6737, 1.69 ) }
    dend_56 { pt3dadd( -31.0708, -24.8768, 24.4493, 1.4 ) }
    dend_56 { pt3dadd( -31.5293, -24.8467, 25.8754, 1.03 ) }
    dend_56 { pt3dadd( -32.2446, -24.767, 27.4536, 0.96 ) }
    dend_56 { pt3dadd( -33.6455, -24.6036, 29.3122, 0.96 ) }
    dend_56 { pt3dadd( -34.4051, -24.4974, 29.846, 0.96 ) }
    dend_56 { pt3dadd( -36.0702, -24.1988, 30.4721, 0.96 ) }
    dend_56 { pt3dadd( -37.3226, -24.0118, 30.5522, 0.96 ) }
    dend_56 { pt3dadd( -38.3831, -23.8856, 30.5162, 1.11 ) }
    dend_56 { pt3dadd( -39.9065, -23.8295, 30.3592, 1.11 ) }
    dend_56 { pt3dadd( -41.0628, -23.9203, 30.2244, 0.96 ) }
    dend_56 { pt3dadd( -42.3131, -24.1332, 30.139, 1.25 ) }
    dend_56 { pt3dadd( -43.658, -24.5065, 30.1314, 1.4 ) }
    dend_56 { pt3dadd( -45.128, -25.047, 30.2662, 1.4 ) }
    dend_56 { pt3dadd( -46.2229, -25.5782, 30.4595, 1.62 ) }
    dend_56 { pt3dadd( -47.7919, -26.6192, 30.675, 1.62 ) }
    dend_56 { pt3dadd( -49.052, -27.7467, 30.812, 1.4 ) }
    dend_56 { pt3dadd( -50.3383, -29.272, 30.9547, 1.11 ) }
    dend_56 { pt3dadd( -51.3387, -30.8466, 31.0725, 1.11 ) }
    dend_56 { pt3dadd( -52.0989, -32.3644, 31.1705, 1.11 ) }
    dend_56 { pt3dadd( -53.9692, -36.7989, 31.4357, 1.11 ) }
    dend_56 { pt3dadd( -54.992, -39.513, 31.5888, 1.11 ) }
    dend_56 { pt3dadd( -55.7288, -41.2105, 31.7278, 1.11 ) }
    dend_56 { pt3dadd( -56.508, -42.675, 31.8962, 0.81 ) }
    dend_56 { pt3dadd( -57.1244, -43.5666, 32.0473, 0.81 ) }
    dend_56 { pt3dadd( -58.0078, -44.5565, 32.2985, 1.11 ) }
    dend_56 { pt3dadd( -59.6527, -46.0635, 32.8473, 1.11 ) }
    dend_56 { pt3dadd( -62.9804, -48.7812, 33.8126, 1.11 ) }
    dend_56 { pt3dadd( -64.27, -49.7784, 34.1687, 1.92 ) }
    dend_56 { pt3dadd( -65.8762, -51.0332, 34.6318, 1.77 ) }
    dend_56 { pt3dadd( -67.62, -52.4753, 35.1968, 1.4 ) }
    dend_56 { pt3dadd( -68.6496, -53.3871, 35.5799, 0.88 ) }
    dend_56 { pt3dadd( -69.8606, -54.5256, 36.098, 0.88 ) }
    dend_56 { pt3dadd( -70.7086, -55.3798, 36.4724, 1.25 ) }
    dend_56 { pt3dadd( -71.7744, -56.4548, 36.9251, 1.77 ) }
    dend_56 { pt3dadd( -73.4766, -58.0602, 37.569, 1.77 ) }
    dend_56 { pt3dadd( -75.0423, -59.353, 38.0555, 1.33 ) }
    dend_56 { pt3dadd( -76.5718, -60.428, 38.431, 1.11 ) }
    dend_56 { pt3dadd( -78.0245, -61.2363, 38.7898, 1.4 ) }
    dend_56 { pt3dadd( -79.6308, -61.9451, 39.2007, 1.77 ) }
    dend_56 { pt3dadd( -81.8367, -62.6686, 39.783, 1.92 ) }
    dend_56 { pt3dadd( -83.4866, -63.0297, 40.2886, 1.99 ) }
    dend_56 { pt3dadd( -85.0761, -63.2594, 40.7882, 1.99 ) }
    dend_56 { pt3dadd( -88.136, -63.5412, 41.7641, 0.81 ) }
    dend_56 { pt3dadd( -89.1508, -63.6003, 42.087, 0.81 ) }
    dend_56 { pt3dadd( -90.7895, -63.6453, 42.6377, 0.81 ) }
    dend_56 { pt3dadd( -92.412, -63.6653, 43.2268, 0.81 ) }
    dend_56 { pt3dadd( -94.0994, -63.7015, 43.8487, 1.84 ) }
    dend_56 { pt3dadd( -95.8776, -63.7889, 44.3985, 2.28 ) }
    dend_56 { pt3dadd( -97.5568, -63.9946, 44.5489, 2.28 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 79/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -17.8316, -1.45992, 2.76069, 2.14 ) }
    dend_53 { pt3dadd( -18.0085, -0.431145, 3.5218, 2.14 ) }
    dend_53 { pt3dadd( -17.9681, 0.497282, 4.51559, 1.33 ) }
    dend_53 { pt3dadd( -17.5431, 4.01046, 8.40244, 1.18 ) }
    dend_53 { pt3dadd( -17.434, 4.69057, 9.11399, 1.18 ) }
    dend_53 { pt3dadd( -17.2982, 5.37569, 9.78641, 1.18 ) }
    dend_53 { pt3dadd( -17.0789, 6.36257, 10.6831, 1.18 ) }
    dend_53 { pt3dadd( -15.4294, 11.7698, 15.2649, 1.18 ) }
    dend_53 { pt3dadd( -15.1858, 12.4431, 15.7801, 1.18 ) }
    dend_53 { pt3dadd( -14.7151, 13.6018, 16.4572, 1.18 ) }
    dend_53 { pt3dadd( -14.3592, 14.5574, 16.9187, 1.18 ) }
    dend_53 { pt3dadd( -14.0164, 15.6013, 17.2765, 1.18 ) }
    dend_53 { pt3dadd( -13.6157, 16.9941, 17.3715, 1.62 ) }
    dend_53 { pt3dadd( -13.4197, 17.7308, 17.1679, 1.99 ) }
    dend_53 { pt3dadd( -13.1733, 18.7276, 16.8803, 1.33 ) }
    dend_53 { pt3dadd( -12.8888, 20.0244, 16.4965, 1.33 ) }
    dend_53 { pt3dadd( -12.8192, 20.4504, 16.3682, 1.33 ) }
    dend_53 { pt3dadd( -12.6694, 21.8012, 15.956, 1.33 ) }
    dend_53 { pt3dadd( -12.6393, 22.6712, 15.6879, 1.77 ) }
    dend_53 { pt3dadd( -12.7163, 23.6226, 15.4527, 1.69 ) }
    dend_53 { pt3dadd( -13.0208, 24.765, 15.2943, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_53 { pt3dadd( -13.4407, 25.6238, 15.2676, 0.96 ) }
    dend_53 { pt3dadd( -13.9148, 26.2992, 15.3359, 0.66 ) }
    dend_53 { pt3dadd( -14.4697, 26.9587, 15.4984, 0.66 ) }
    dend_53 { pt3dadd( -15.7849, 28.2926, 15.99, 1.33 ) }
    dend_53 { pt3dadd( -16.8067, 29.1693, 16.4306, 1.33 ) }
    dend_53 { pt3dadd( -17.9456, 30.043, 16.9763, 1.33 ) }
    dend_53 { pt3dadd( -19.1778, 30.9442, 17.64, 1.33 ) }
    dend_53 { pt3dadd( -21.0027, 32.2414, 18.7083, 2.5 ) }
    dend_53 { pt3dadd( -21.7516, 32.7914, 19.1574, 2.5 ) }
    dend_53 { pt3dadd( -22.0841, 33.0292, 19.277, 2.5 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 10/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -82.305, -103.226, -4.03528, 0.44 ) }
    dend_51 { pt3dadd( -82.6735, -103.517, -4.01057, 0.44 ) }
    dend_51 { pt3dadd( -83.2194, -103.973, -3.97636, 0.44 ) }
    dend_51 { pt3dadd( -83.7572, -104.453, -3.94691, 0.44 ) }
    dend_51 { pt3dadd( -84.321, -104.99, -3.92113, 0.44 ) }
    dend_51 { pt3dadd( -85.0804, -105.736, -3.88874, 0.44 ) }
    dend_51 { pt3dadd( -85.3173, -105.955, -3.87596, 1.33 ) }
    dend_51 { pt3dadd( -86.1448, -106.669, -3.8191, 1.77 ) }
    dend_51 { pt3dadd( -86.6596, -107.08, -3.77799, 1.4 ) }
    dend_51 { pt3dadd( -87.5094, -107.705, -3.70063, 1.03 ) }
    dend_51 { pt3dadd( -89.1882, -108.918, -3.54419, 1.03 ) }
    dend_51 { pt3dadd( -90.0314, -109.536, -3.46714, 1.03 ) }
    dend_51 { pt3dadd( -90.7186, -110.073, -3.41026, 1.03 ) }
    dend_51 { pt3dadd( -91.0173, -110.329, -3.38939, 1.03 ) }
    dend_51 { pt3dadd( -91.6491, -111.006, -3.50025, 1.03 ) }
    dend_51 { pt3dadd( -91.9621, -111.585, -3.74624, 1.03 ) }
    dend_51 { pt3dadd( -92.1894, -112.261, -4.12202, 1.03 ) }
    dend_51 { pt3dadd( -92.3473, -112.737, -4.39565, 1.03 ) }
    dend_51 { pt3dadd( -92.5836, -113.383, -4.77552, 1.03 ) }
    dend_51 { pt3dadd( -93.6949, -115.812, -6.2248, 0.74 ) }
    dend_51 { pt3dadd( -94.3151, -116.778, -6.81187, 0.74 ) }
    dend_51 { pt3dadd( -95.0473, -117.46, -7.19453, 0.74 ) }
    dend_51 { pt3dadd( -96.0828, -118.032, -7.52048, 0.74 ) }
    dend_51 { pt3dadd( -96.7233, -118.265, -7.64105, 1.4 ) }
    dend_51 { pt3dadd( -97.6276, -118.51, -7.72822, 1.4 ) }
    dend_51 { pt3dadd( -98.6462, -118.744, -7.72675, 0.81 ) }
    dend_51 { pt3dadd( -100.225, -119.16, -7.77072, 0.81 ) }
    dend_51 { pt3dadd( -101.499, -119.682, -7.88855, 0.52 ) }
    dend_51 { pt3dadd( -101.913, -119.959, -7.95777, 1.03 ) }
    dend_51 { pt3dadd( -102.444, -120.492, -8.07818, 0.74 ) }
    dend_51 { pt3dadd( -102.969, -121.143, -8.29591, 1.03 ) }
    dend_51 { pt3dadd( -103.598, -122.032, -8.619, 1.03 ) }
    dend_51 { pt3dadd( -104.008, -122.656, -8.84543, 1.03 ) }
    dend_51 { pt3dadd( -104.559, -123.449, -9.1163, 1.03 ) }
    dend_51 { pt3dadd( -105.253, -124.289, -9.41792, 1.03 ) }
    dend_51 { pt3dadd( -107.325, -126.246, -10.1435, 0.66 ) }
    dend_51 { pt3dadd( -108.136, -126.817, -10.36, 0.66 ) }
    dend_51 { pt3dadd( -108.569, -127.035, -10.4418, 0.66 ) }
    dend_51 { pt3dadd( -109.017, -127.185, -10.4893, 0.96 ) }
    dend_51 { pt3dadd( -110.455, -127.473, -10.518, 0.96 ) }
    dend_51 { pt3dadd( -111.61, -127.575, -10.4284, 0.96 ) }
    dend_51 { pt3dadd( -112.685, -127.601, -10.1969, 0.96 ) }
    dend_51 { pt3dadd( -113.221, -127.622, -10.0827, 0.52 ) }
    dend_51 { pt3dadd( -113.821, -127.722, -9.94211, 0.52 ) }
    dend_51 { pt3dadd( -114.39, -127.908, -9.80062, 0.52 ) }
    dend_51 { pt3dadd( -115.002, -128.193, -9.64128, 0.52 ) }
    dend_51 { pt3dadd( -115.94, -128.67, -9.39592, 0.52 ) }
    dend_51 { pt3dadd( -116.584, -128.953, -9.18729, 0.52 ) }
    dend_51 { pt3dadd( -118.355, -129.551, -8.56507, 0.52 ) }
    dend_51 { pt3dadd( -119.076, -129.747, -8.30422, 1.18 ) }
    dend_51 { pt3dadd( -119.973, -129.921, -7.97901, 1.55 ) }
    dend_51 { pt3dadd( -121.13, -130.071, -7.56367, 1.69 ) }
    dend_51 { pt3dadd( -122.794, -130.169, -6.96732, 0.96 ) }
    dend_51 { pt3dadd( -124.146, -130.186, -6.49651, 0.96 ) }
    dend_51 { pt3dadd( -124.684, -130.166, -6.31963, 0.74 ) }
    dend_51 { pt3dadd( -125.969, -130.048, -6.02822, 0.74 ) }
    dend_51 { pt3dadd( -126.89, -129.908, -5.91642, 1.03 ) }
    dend_51 { pt3dadd( -127.697, -129.755, -5.90449, 1.55 ) }
    dend_51 { pt3dadd( -128.776, -129.576, -6.01482, 1.03 ) }
    dend_51 { pt3dadd( -129.617, -129.472, -6.16005, 0.81 ) }
    dend_51 { pt3dadd( -132.326, -129.33, -6.78705, 0.81 ) }
    dend_51 { pt3dadd( -133.378, -129.427, -7.03598, 0.81 ) }
    dend_51 { pt3dadd( -134.096, -129.668, -7.15414, 0.81 ) }
    dend_51 { pt3dadd( -134.959, -130.217, -7.13969, 1.25 ) }
    dend_51 { pt3dadd( -135.501, -130.666, -6.99527, 1.69 ) }
    dend_51 { pt3dadd( -135.893, -130.998, -6.80835, 1.69 ) }
    dend_51 { pt3dadd( -137.654, -132.4, -5.66443, 0.81 ) }
    dend_51 { pt3dadd( -138.209, -132.703, -5.32041, 0.81 ) }
    dend_51 { pt3dadd( -138.934, -132.883, -4.91219, 0.81 ) }
    dend_51 { pt3dadd( -140.117, -132.879, -4.32432, 1.55 ) }
    dend_51 { pt3dadd( -141.074, -132.737, -4.03129, 1.99 ) }
    dend_51 { pt3dadd( -141.594, -132.623, -3.95332, 1.99 ) }
    dend_51 { pt3dadd( -143.0, -132.272, -3.93474, 0.81 ) }
    dend_51 { pt3dadd( -143.854, -132.074, -3.96959, 0.81 ) }
    dend_51 { pt3dadd( -144.843, -131.9, -4.06383, 0.81 ) }
    dend_51 { pt3dadd( -147.316, -131.679, -4.41956, 0.52 ) }
    dend_51 { pt3dadd( -148.121, -131.673, -4.65071, 0.88 ) }
    dend_51 { pt3dadd( -149.021, -131.749, -4.99504, 1.62 ) }
    dend_51 { pt3dadd( -149.233, -131.797, -5.09257, 2.06 ) }
    dend_51 { pt3dadd( -149.998, -132.043, -5.43663, 1.33 ) }
    dend_51 { pt3dadd( -150.82, -132.352, -5.77283, 1.11 ) }
    dend_51 { pt3dadd( -153.421, -133.345, -6.57767, 0.66 ) }
    dend_51 { pt3dadd( -154.015, -133.565, -6.76399, 0.44 ) }
    dend_51 { pt3dadd( -155.042, -133.941, -7.06347, 0.44 ) }
    dend_51 { pt3dadd( -155.923, -134.268, -7.26284, 0.29 ) }
    dend_51 { pt3dadd( -156.425, -134.421, -7.31298, 0.29 ) }
    dend_51 { pt3dadd( -156.742, -134.506, -7.29461, 0.07 ) }
    dend_51 { pt3dadd( -157.31, -134.657, -7.17038, 0.07 ) }
    dend_51 { pt3dadd( -157.94, -134.79, -7.04743, 1.33 ) }
    dend_51 { pt3dadd( -158.573, -134.892, -6.94941, 2.21 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_51 { pt3dadd( -160.447, -135.238, -6.78888, 0.07 ) }
    dend_51 { pt3dadd( -161.205, -135.402, -6.73415, 0.07 ) }
    dend_51 { pt3dadd( -161.422, -135.448, -6.72017, 0.96 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 3/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -82.305, -103.226, -4.03528, 0.44 ) }
    dend_50 { pt3dadd( -81.3121, -103.699, -4.66838, 0.44 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 5/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -31.16, -16.7834, 0.070692, 2.06 ) }
    dend_39 { pt3dadd( -34.6884, -16.5225, -2.03858, 2.06 ) }
    dend_39 { pt3dadd( -34.6884, -16.5225, -2.03858, 2.06 ) }
    dend_39 { pt3dadd( -35.7257, -16.6576, -2.55857, 0.96 ) }
    dend_39 { pt3dadd( -36.3736, -16.7962, -2.85686, 0.74 ) }
    dend_39 { pt3dadd( -36.975, -16.974, -3.11043, 0.74 ) }
    dend_39 { pt3dadd( -37.4617, -17.1667, -3.29691, 0.74 ) }
    dend_39 { pt3dadd( -37.8795, -17.5443, -3.31547, 0.74 ) }
    dend_39 { pt3dadd( -38.1921, -17.8414, -3.32921, 0.74 ) }
    dend_39 { pt3dadd( -38.3729, -18.0219, -3.33732, 0.74 ) }
    dend_39 { pt3dadd( -38.675, -18.2982, -3.34684, 0.74 ) }
    dend_39 { pt3dadd( -39.1912, -18.7033, -3.35424, 0.74 ) }
    dend_39 { pt3dadd( -39.6262, -19.0203, -3.35735, 1.55 ) }
    dend_39 { pt3dadd( -40.4439, -19.5813, -3.35823, 1.92 ) }
    dend_39 { pt3dadd( -41.3425, -20.1822, -3.3566, 1.92 ) }
    dend_39 { pt3dadd( -41.84, -20.5051, -3.35423, 1.92 ) }
    dend_39 { pt3dadd( -42.4188, -20.8649, -3.34925, 1.92 ) }
    dend_39 { pt3dadd( -42.8472, -21.1197, -3.34419, 1.92 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 23/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -31.16, -16.7834, 0.070692, 1.18 ) }
    dend_36 { pt3dadd( -32.1006, -16.5793, -0.551321, 1.18 ) }
    dend_36 { pt3dadd( -32.917, -16.4172, -1.05639, 1.18 ) }
    dend_36 { pt3dadd( -33.8226, -16.2183, -1.56754, 1.18 ) }
    dend_36 { pt3dadd( -35.2316, -15.9448, -2.8376, 1.18 ) }
    dend_36 { pt3dadd( -37.6487, -15.4263, -5.38339, 1.18 ) }
    dend_36 { pt3dadd( -38.8788, -15.1168, -6.73226, 1.18 ) }
    dend_36 { pt3dadd( -39.5806, -14.923, -7.52914, 1.18 ) }
    dend_36 { pt3dadd( -40.971, -14.4492, -9.16577, 1.18 ) }
    dend_36 { pt3dadd( -45.1372, -12.6376, -14.1771, 1.55 ) }
    dend_36 { pt3dadd( -45.7744, -12.334, -15.3606, 1.55 ) }
    dend_36 { pt3dadd( -46.4895, -11.959, -17.084, 1.55 ) }
    dend_36 { pt3dadd( -46.9814, -11.702, -18.4943, 1.55 ) }
    dend_36 { pt3dadd( -47.5887, -11.413, -20.3871, 1.55 ) }
    dend_36 { pt3dadd( -48.0357, -11.2296, -21.8795, 1.55 ) }
    dend_36 { pt3dadd( -51.4999, -10.0637, -32.9665, 0.96 ) }
    dend_36 { pt3dadd( -51.6524, -10.0295, -33.5233, 0.66 ) }
    dend_36 { pt3dadd( -51.7857, -10.0191, -34.1192, 0.66 ) }
    dend_36 { pt3dadd( -51.9309, -10.0452, -34.9385, 0.66 ) }
    dend_36 { pt3dadd( -51.9576, -10.0632, -35.1684, 0.66 ) }
    dend_36 { pt3dadd( -51.9811, -10.1063, -35.5368, 0.66 ) }
    dend_36 { pt3dadd( -51.3883, -10.1672, -35.432, 0.66 ) }
    dend_36 { pt3dadd( -50.6948, -10.0336, -35.3626, 0.66 ) }
    dend_36 { pt3dadd( -49.9222, -9.71625, -35.3292, 0.66 ) }
    dend_36 { pt3dadd( -49.7263, -9.606, -35.3284, 0.74 ) }
    dend_36 { pt3dadd( -49.123, -9.12898, -35.3619, 0.74 ) }
    dend_36 { pt3dadd( -48.7943, -8.80568, -35.3967, 0.74 ) }
    dend_36 { pt3dadd( -48.4639, -8.36943, -35.8914, 0.66 ) }
    dend_36 { pt3dadd( -48.118, -7.74899, -36.9099, 1.99 ) }
    dend_36 { pt3dadd( -47.9625, -7.35586, -37.6131, 2.73 ) }
    dend_36 { pt3dadd( -47.8606, -6.85982, -38.5801, 2.73 ) }
    dend_36 { pt3dadd( -47.8551, -6.8632, -38.7376, 2.28 ) }
    dend_36 { pt3dadd( -47.7183, -7.20696, -44.3143, 0.88 ) }
    dend_36 { pt3dadd( -47.7085, -7.23468, -44.6907, 0.52 ) }
    dend_36 { pt3dadd( -47.6891, -7.29042, -45.3361, 0.52 ) }
    dend_36 { pt3dadd( -47.6528, -7.41201, -46.6021, 1.77 ) }
    dend_36 { pt3dadd( -47.1185, -9.74323, -69.7334, 0.88 ) }
    dend_36 { pt3dadd( -47.1087, -9.79582, -70.2514, 0.88 ) }
    dend_36 { pt3dadd( -47.0886, -9.93369, -71.5648, 0.88 ) }
    dend_36 { pt3dadd( -47.0804, -9.98329, -72.058, 0.88 ) }
    dend_36 { pt3dadd( -47.0558, -10.0905, -73.2305, 1.84 ) }
    dend_36 { pt3dadd( -47.0289, -10.1469, -74.1483, 0.52 ) }
    dend_36 { pt3dadd( -47.2386, -9.7785, -75.204, 0.29 ) }
    dend_36 { pt3dadd( -47.3226, -9.64823, -75.6958, 0.29 ) }
    dend_36 { pt3dadd( -47.5058, -9.4202, -76.8697, 1.11 ) }
    dend_36 { pt3dadd( -47.5667, -9.33826, -77.408, 0.07 ) }
    dend_36 { pt3dadd( -47.6397, -9.19422, -78.7016, 0.07 ) }
    dend_36 { pt3dadd( -47.6982, -9.09679, -80.4317, 0.07 ) }
    dend_36 { pt3dadd( -47.723, -9.08188, -81.1253, 0.07 ) }
    dend_36 { pt3dadd( -47.7356, -9.10042, -81.6974, 0.07 ) }
    dend_36 { pt3dadd( -47.7353, -9.15905, -82.2919, 0.07 ) }
    dend_36 { pt3dadd( -47.732, -9.20236, -82.616, 0.15 ) }
    dend_36 { pt3dadd( -47.7588, -9.29276, -83.3503, 0.66 ) }
    dend_36 { pt3dadd( -47.8357, -9.36871, -84.0619, 0.66 ) }
    dend_36 { pt3dadd( -47.9972, -9.4388, -84.9503, 0.74 ) }
    dend_36 { pt3dadd( -48.3754, -9.54786, -86.5111, 0.74 ) }
    dend_36 { pt3dadd( -48.4579, -9.55013, -86.7794, 0.74 ) }
    dend_36 { pt3dadd( -49.3522, -9.36036, -88.7586, 0.29 ) }
    dend_36 { pt3dadd( -49.7871, -9.22559, -89.3992, 0.29 ) }
    dend_36 { pt3dadd( -50.3013, -9.03902, -89.973, 0.29 ) }
    dend_36 { pt3dadd( -51.4851, -8.59029, -91.1569, 0.29 ) }
    dend_36 { pt3dadd( -52.0473, -8.387, -91.7635, 0.29 ) }
    dend_36 { pt3dadd( -52.9442, -8.10178, -92.9579, 1.77 ) }
    dend_36 { pt3dadd( -53.6172, -7.91108, -94.0412, 0.74 ) }
    dend_36 { pt3dadd( -53.8202, -7.84947, -94.3662, 0.22 ) }
    dend_36 { pt3dadd( -54.2697, -7.70237, -95.0579, 0.22 ) }
    dend_36 { pt3dadd( -55.0885, -7.40734, -96.2682, 0.22 ) }
    dend_36 { pt3dadd( -55.504, -7.23905, -96.9028, 0.22 ) }
    dend_36 { pt3dadd( -55.8391, -7.06248, -97.5159, 0.22 ) }
    dend_36 { pt3dadd( -56.1891, -6.84433, -98.1991, 0.22 ) }
    dend_36 { pt3dadd( -56.5446, -6.60729, -98.8501, 0.22 ) }
    dend_36 { pt3dadd( -56.9531, -6.29797, -99.5402, 1.55 ) }
    dend_36 { pt3dadd( -57.4137, -5.91878, -100.255, 0.44 ) }
    dend_36 { pt3dadd( -58.2656, -5.17704, -101.682, 0.44 ) }
    dend_36 { pt3dadd( -58.6635, -4.80971, -102.479, 0.44 ) }
    dend_36 { pt3dadd( -58.743, -4.73312, -102.671, 0.44 ) }
    dend_36 { pt3dadd( -59.2518, -4.2426, -104.178, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_36 { pt3dadd( -59.4503, -4.05002, -104.916, 0.44 ) }
    dend_36 { pt3dadd( -59.6254, -3.85489, -105.658, 0.44 ) }
    dend_36 { pt3dadd( -59.8313, -3.58048, -106.494, 0.44 ) }
    dend_36 { pt3dadd( -59.965, -3.35634, -107.086, 0.44 ) }
    dend_36 { pt3dadd( -60.0973, -3.0933, -107.756, 0.44 ) }
    dend_36 { pt3dadd( -60.1871, -2.84709, -108.441, 0.44 ) }
    dend_36 { pt3dadd( -60.2961, -2.48411, -109.493, 1.4 ) }
    dend_36 { pt3dadd( -60.3487, -2.30873, -110.065, 0.37 ) }
    dend_36 { pt3dadd( -60.3962, -2.11841, -110.942, 0.37 ) }
    dend_36 { pt3dadd( -60.4096, -2.05494, -111.354, 0.37 ) }
    dend_36 { pt3dadd( -60.4698, -1.87883, -112.499, 0.37 ) }
    dend_36 { pt3dadd( -60.5226, -1.7765, -113.025, 0.37 ) }
    dend_36 { pt3dadd( -60.7149, -1.43803, -114.535, 0.37 ) }
    dend_36 { pt3dadd( -60.8937, -1.12852, -115.721, 0.37 ) }
    dend_36 { pt3dadd( -60.9778, -0.985004, -116.196, 0.37 ) }
    dend_36 { pt3dadd( -61.2928, -0.442757, -117.914, 2.06 ) }
    dend_36 { pt3dadd( -61.5395, 0.00658973, -119.221, 0.37 ) }
    dend_36 { pt3dadd( -61.6067, 0.133983, -119.59, 0.37 ) }
    dend_36 { pt3dadd( -61.8201, 0.526135, -120.671, 0.37 ) }
    dend_36 { pt3dadd( -62.0438, 0.904883, -121.709, 0.37 ) }
    dend_36 { pt3dadd( -62.2873, 1.28269, -122.798, 0.37 ) }
    dend_36 { pt3dadd( -62.4718, 1.53782, -123.64, 0.37 ) }
    dend_36 { pt3dadd( -62.5936, 1.68426, -124.127, 0.37 ) }
    dend_36 { pt3dadd( -62.7546, 1.86828, -124.662, 0.37 ) }
    dend_36 { pt3dadd( -63.0626, 2.22019, -125.592, 1.03 ) }
    dend_36 { pt3dadd( -63.3635, 2.55514, -126.39, 0.52 ) }
    dend_36 { pt3dadd( -63.48, 2.68665, -126.663, 0.22 ) }
    dend_36 { pt3dadd( -63.8416, 3.07822, -127.555, 0.22 ) }
    dend_36 { pt3dadd( -64.2545, 3.51608, -128.687, 0.22 ) }
    dend_36 { pt3dadd( -64.6247, 3.89559, -129.878, 0.22 ) }
    dend_36 { pt3dadd( -64.8788, 4.13738, -130.861, 1.69 ) }
    dend_36 { pt3dadd( -65.1194, 4.35417, -131.875, 0.37 ) }
    dend_36 { pt3dadd( -65.4029, 4.60418, -133.22, 0.37 ) }
    dend_36 { pt3dadd( -65.5483, 4.71756, -133.902, 0.37 ) }
    dend_36 { pt3dadd( -65.6672, 4.7988, -134.399, 0.37 ) }
    dend_36 { pt3dadd( -65.8597, 4.91581, -135.171, 0.37 ) }
    dend_36 { pt3dadd( -66.0115, 4.9724, -135.899, 0.37 ) }
    dend_36 { pt3dadd( -66.2838, 5.02205, -137.222, 0.37 ) }
    dend_36 { pt3dadd( -66.3789, 5.03742, -137.667, 1.33 ) }
    dend_36 { pt3dadd( -66.5624, 5.10775, -138.521, 0.52 ) }
    dend_36 { pt3dadd( -66.645, 5.15825, -138.834, 0.37 ) }
    dend_36 { pt3dadd( -67.0665, 5.47582, -140.259, 0.37 ) }
    dend_36 { pt3dadd( -67.1376, 5.53794, -140.497, 0.37 ) }
    dend_36 { pt3dadd( -67.5914, 5.99906, -142.01, 0.37 ) }
    dend_36 { pt3dadd( -67.9466, 6.42182, -143.424, 1.55 ) }
    dend_36 { pt3dadd( -68.1978, 6.74648, -144.592, 0.52 ) }
    dend_36 { pt3dadd( -68.2316, 6.79249, -144.754, 0.52 ) }
    dend_36 { pt3dadd( -68.3695, 7.00302, -145.512, 0.37 ) }
    dend_36 { pt3dadd( -68.4378, 7.12904, -146.02, 0.37 ) }
    dend_36 { pt3dadd( -68.5155, 7.38551, -146.926, 0.37 ) }
    dend_36 { pt3dadd( -68.5138, 7.45299, -147.127, 0.37 ) }
    dend_36 { pt3dadd( -68.4589, 7.70419, -147.787, 0.37 ) }
    dend_36 { pt3dadd( -68.3149, 8.30015, -149.161, 0.37 ) }
    dend_36 { pt3dadd( -68.2874, 8.39454, -149.387, 0.37 ) }
    dend_36 { pt3dadd( -68.1867, 8.75197, -150.569, 1.84 ) }
    dend_36 { pt3dadd( -68.1057, 9.04203, -151.741, 0.44 ) }
    dend_36 { pt3dadd( -68.0848, 9.10941, -152.125, 0.44 ) }
    dend_36 { pt3dadd( -68.0671, 9.20743, -152.832, 0.44 ) }
    dend_36 { pt3dadd( -68.104, 9.40102, -154.701, 0.44 ) }
    dend_36 { pt3dadd( -68.1914, 9.49425, -156.406, 0.44 ) }
    dend_36 { pt3dadd( -68.2201, 9.50455, -156.748, 0.44 ) }
    dend_36 { pt3dadd( -68.3221, 9.56722, -157.752, 0.66 ) }
    dend_36 { pt3dadd( -68.3738, 9.6816, -158.381, 0.66 ) }
    dend_36 { pt3dadd( -68.3929, 9.76237, -158.655, 0.66 ) }
    dend_36 { pt3dadd( -68.4042, 10.0184, -159.211, 0.66 ) }
    dend_36 { pt3dadd( -68.3684, 10.5256, -160.093, 0.66 ) }
    dend_36 { pt3dadd( -68.3288, 10.8234, -160.629, 0.66 ) }
    dend_36 { pt3dadd( -68.1028, 11.6721, -162.428, 1.25 ) }
    dend_36 { pt3dadd( -68.1028, 11.6721, -162.428, 1.69 ) }
    dend_36 { pt3dadd( -67.9266, 11.8856, -163.463, 1.03 ) }
    dend_36 { pt3dadd( -67.8563, 11.9427, -163.933, 0.44 ) }
    dend_36 { pt3dadd( -67.7302, 12.0069, -164.982, 0.44 ) }
    dend_36 { pt3dadd( -67.5871, 12.0745, -166.584, 0.44 ) }
    dend_36 { pt3dadd( -67.4627, 12.1994, -169.125, 0.66 ) }
    dend_36 { pt3dadd( -67.4457, 12.2894, -170.356, 0.66 ) }
    dend_36 { pt3dadd( -67.4632, 12.4175, -171.761, 0.66 ) }
    dend_36 { pt3dadd( -67.5018, 12.5563, -172.808, 0.66 ) }
    dend_36 { pt3dadd( -67.5641, 12.7542, -173.8, 0.66 ) }
    dend_36 { pt3dadd( -67.7204, 13.292, -175.766, 1.18 ) }
    dend_36 { pt3dadd( -67.8441, 13.7758, -177.393, 1.18 ) }
    dend_36 { pt3dadd( -67.8592, 13.8793, -177.778, 1.18 ) }
    dend_36 { pt3dadd( -67.8278, 14.108, -178.787, 1.18 ) }
    dend_36 { pt3dadd( -67.7677, 14.2288, -179.562, 0.96 ) }
    dend_36 { pt3dadd( -67.6543, 14.3338, -180.78, 0.96 ) }
    dend_36 { pt3dadd( -67.4434, 14.3707, -182.64, 0.96 ) }
    dend_36 { pt3dadd( -67.2505, 14.3033, -184.529, 0.96 ) }
    dend_36 { pt3dadd( -67.1919, 14.2352, -185.435, 0.96 ) }
    dend_36 { pt3dadd( -67.1825, 14.1784, -185.813, 0.96 ) }
    dend_36 { pt3dadd( -67.2627, 13.7892, -187.522, 0.96 ) }
    dend_36 { pt3dadd( -67.3167, 13.7083, -187.84, 0.96 ) }
    dend_36 { pt3dadd( -67.4745, 13.6146, -188.314, 0.74 ) }
    dend_36 { pt3dadd( -67.7708, 13.5819, -188.919, 0.74 ) }
    dend_36 { pt3dadd( -68.2613, 13.722, -189.819, 0.74 ) }
    dend_36 { pt3dadd( -68.4978, 13.8403, -190.233, 0.74 ) }
    dend_36 { pt3dadd( -69.1625, 14.2321, -191.358, 0.74 ) }
    dend_36 { pt3dadd( -69.543, 14.4279, -191.985, 1.11 ) }
    dend_36 { pt3dadd( -70.1575, 14.699, -192.972, 0.74 ) }
    dend_36 { pt3dadd( -70.4076, 14.781, -193.396, 0.74 ) }
    dend_36 { pt3dadd( -70.7792, 14.8274, -194.051, 0.74 ) }
    dend_36 { pt3dadd( -71.1918, 14.7085, -194.852, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_36 { pt3dadd( -71.5759, 14.4383, -195.677, 0.74 ) }
    dend_36 { pt3dadd( -71.7982, 14.2422, -196.188, 0.74 ) }
    dend_36 { pt3dadd( -72.169, 13.9394, -196.994, 0.74 ) }
    dend_36 { pt3dadd( -72.6085, 13.6587, -197.881, 0.74 ) }
    dend_36 { pt3dadd( -73.2026, 13.394, -199.061, 1.4 ) }
    dend_36 { pt3dadd( -73.4597, 13.3323, -199.564, 1.4 ) }
    dend_36 { pt3dadd( -73.6232, 13.3187, -199.903, 1.77 ) }
    dend_36 { pt3dadd( -74.241, 13.3185, -201.111, 0.74 ) }
    dend_36 { pt3dadd( -74.6266, 13.3481, -201.806, 0.74 ) }
    dend_36 { pt3dadd( -75.0916, 13.4223, -202.586, 0.74 ) }
    dend_36 { pt3dadd( -75.5253, 13.5385, -203.18, 0.74 ) }
    dend_36 { pt3dadd( -76.1549, 13.7443, -203.908, 0.74 ) }
    dend_36 { pt3dadd( -76.767, 13.9575, -204.582, 0.74 ) }
    dend_36 { pt3dadd( -77.3986, 14.1967, -205.248, 0.74 ) }
    dend_36 { pt3dadd( -77.8151, 14.3699, -205.67, 0.74 ) }
    dend_36 { pt3dadd( -78.9342, 14.8473, -206.725, 1.47 ) }
    dend_36 { pt3dadd( -79.6738, 15.1621, -207.392, 0.44 ) }
    dend_36 { pt3dadd( -80.4956, 15.4929, -208.101, 0.44 ) }
    dend_36 { pt3dadd( -80.796, 15.5767, -208.357, 0.44 ) }
    dend_36 { pt3dadd( -81.5879, 15.6483, -208.959, 0.44 ) }
    dend_36 { pt3dadd( -81.778, 15.6307, -209.09, 0.44 ) }
    dend_36 { pt3dadd( -81.968, 15.576, -209.208, 0.44 ) }
    dend_36 { pt3dadd( -82.6221, 15.3699, -209.521, 1.25 ) }
    dend_36 { pt3dadd( -83.9672, 15.0598, -209.98, 0.44 ) }
    dend_36 { pt3dadd( -84.5414, 14.9713, -210.148, 0.37 ) }
    dend_36 { pt3dadd( -85.0651, 14.9227, -210.283, 0.37 ) }
    dend_36 { pt3dadd( -85.6307, 14.9245, -210.435, 0.37 ) }
    dend_36 { pt3dadd( -86.6331, 15.0102, -210.795, 0.88 ) }
    dend_36 { pt3dadd( -87.8538, 15.2373, -211.353, 0.29 ) }
    dend_36 { pt3dadd( -88.4034, 15.3942, -211.652, 0.29 ) }
    dend_36 { pt3dadd( -88.6553, 15.4786, -211.81, 0.52 ) }
    dend_36 { pt3dadd( -89.8435, 15.9159, -212.616, 1.47 ) }
    dend_36 { pt3dadd( -91.5893, 16.5651, -213.865, 0.44 ) }
    dend_36 { pt3dadd( -92.236, 16.772, -214.351, 0.44 ) }
    dend_36 { pt3dadd( -92.7754, 16.9085, -214.764, 0.74 ) }
    dend_36 { pt3dadd( -93.3496, 16.9947, -215.168, 0.66 ) }
    dend_36 { pt3dadd( -93.9401, 17.0207, -215.512, 0.66 ) }
    dend_36 { pt3dadd( -94.5704, 16.9717, -215.77, 0.66 ) }
    dend_36 { pt3dadd( -95.5587, 16.8422, -215.999, 0.88 ) }
    dend_36 { pt3dadd( -95.8733, 16.7978, -216.055, 0.88 ) }
    dend_36 { pt3dadd( -96.8658, 16.6907, -216.209, 1.25 ) }
    dend_36 { pt3dadd( -98.0706, 16.649, -216.385, 0.52 ) }
    dend_36 { pt3dadd( -99.125, 16.7178, -216.561, 0.29 ) }
    dend_36 { pt3dadd( -99.4309, 16.7793, -216.623, 0.29 ) }
    dend_36 { pt3dadd( -99.8777, 16.9026, -216.732, 0.29 ) }
    dend_36 { pt3dadd( -100.513, 17.087, -216.908, 0.29 ) }
    dend_36 { pt3dadd( -101.226, 17.278, -217.133, 0.29 ) }
    dend_36 { pt3dadd( -102.069, 17.4479, -217.417, 0.29 ) }
    dend_36 { pt3dadd( -103.159, 17.5613, -217.784, 1.11 ) }
    dend_36 { pt3dadd( -104.374, 17.579, -218.169, 0.52 ) }
    dend_36 { pt3dadd( -104.706, 17.5616, -218.267, 0.22 ) }
    dend_36 { pt3dadd( -105.388, 17.4926, -218.459, 0.22 ) }
    dend_36 { pt3dadd( -105.612, 17.463, -218.523, 0.22 ) }
    dend_36 { pt3dadd( -106.549, 17.2359, -218.789, 1.18 ) }
    dend_36 { pt3dadd( -107.456, 16.8795, -219.012, 0.59 ) }
    dend_36 { pt3dadd( -107.919, 16.6522, -219.135, 0.22 ) }
    dend_36 { pt3dadd( -108.245, 16.4819, -219.228, 0.22 ) }
    dend_36 { pt3dadd( -108.603, 16.2768, -219.356, 0.22 ) }
    dend_36 { pt3dadd( -109.881, 15.4793, -219.905, 0.96 ) }
    dend_36 { pt3dadd( -111.063, 14.6532, -220.526, 0.15 ) }
    dend_36 { pt3dadd( -111.702, 14.1867, -220.921, 0.37 ) }
    dend_36 { pt3dadd( -112.087, 13.9278, -221.2, 0.37 ) }
    dend_36 { pt3dadd( -112.615, 13.6486, -221.618, 0.59 ) }
    dend_36 { pt3dadd( -112.933, 13.5349, -221.9, 0.59 ) }
    dend_36 { pt3dadd( -113.3, 13.493, -222.267, 0.59 ) }
    dend_36 { pt3dadd( -113.579, 13.4683, -222.55, 0.59 ) }
    dend_36 { pt3dadd( -114.124, 13.3053, -222.964, 0.59 ) }
    dend_36 { pt3dadd( -115.061, 12.8496, -223.534, 0.59 ) }
    dend_36 { pt3dadd( -115.399, 12.6825, -223.704, 0.59 ) }
    dend_36 { pt3dadd( -116.012, 12.428, -223.995, 0.59 ) }
    dend_36 { pt3dadd( -116.607, 12.219, -224.273, 0.74 ) }
    dend_36 { pt3dadd( -117.24, 12.0126, -224.586, 0.74 ) }
    dend_36 { pt3dadd( -117.965, 11.8066, -225.034, 0.74 ) }
    dend_36 { pt3dadd( -118.991, 11.5782, -225.801, 1.11 ) }
    dend_36 { pt3dadd( -120.242, 11.3127, -226.813, 0.44 ) }
    dend_36 { pt3dadd( -120.801, 11.1997, -227.307, 0.44 ) }
    dend_36 { pt3dadd( -121.231, 11.1055, -227.711, 1.18 ) }
    dend_36 { pt3dadd( -122.491, 10.7748, -228.96, 0.52 ) }
    dend_36 { pt3dadd( -122.776, 10.6842, -229.248, 0.52 ) }
    dend_36 { pt3dadd( -123.219, 10.5785, -229.656, 0.52 ) }
    dend_36 { pt3dadd( -123.483, 10.5703, -229.853, 0.29 ) }
    dend_36 { pt3dadd( -124.013, 10.6341, -230.136, 0.29 ) }
    dend_36 { pt3dadd( -124.611, 10.7489, -230.372, 0.29 ) }
    dend_36 { pt3dadd( -125.542, 10.9524, -230.627, 1.18 ) }
    dend_36 { pt3dadd( -126.982, 11.2556, -231.032, 0.29 ) }
    dend_36 { pt3dadd( -127.692, 11.4039, -231.259, 0.29 ) }
    dend_36 { pt3dadd( -128.333, 11.5249, -231.488, 0.29 ) }
    dend_36 { pt3dadd( -129.08, 11.6302, -231.777, 0.96 ) }
    dend_36 { pt3dadd( -130.276, 11.6512, -232.256, 0.44 ) }
    dend_36 { pt3dadd( -130.916, 11.5369, -232.539, 0.44 ) }
    dend_36 { pt3dadd( -131.373, 11.3664, -232.769, 0.44 ) }
    dend_36 { pt3dadd( -131.732, 11.2162, -232.964, 0.44 ) }
    dend_36 { pt3dadd( -132.021, 11.1214, -233.092, 0.44 ) }
    dend_36 { pt3dadd( -132.523, 11.0234, -233.234, 0.44 ) }
    dend_36 { pt3dadd( -133.185, 11.0322, -233.317, 0.44 ) }
    dend_36 { pt3dadd( -134.132, 11.1726, -233.362, 1.03 ) }
    dend_36 { pt3dadd( -134.89, 11.3298, -233.373, 0.59 ) }
    dend_36 { pt3dadd( -136.565, 11.7219, -233.374, 0.59 ) }
    dend_36 { pt3dadd( -137.455, 11.9457, -233.371, 1.11 ) }
    dend_36 { pt3dadd( -138.69, 12.2501, -233.352, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_36 { pt3dadd( -139.608, 12.4604, -233.324, 0.29 ) }
    dend_36 { pt3dadd( -140.008, 12.5364, -233.313, 0.29 ) }
    dend_36 { pt3dadd( -140.477, 12.6177, -233.332, 0.29 ) }
    dend_36 { pt3dadd( -140.883, 12.7366, -233.419, 0.29 ) }
    dend_36 { pt3dadd( -141.422, 12.9804, -233.625, 0.29 ) }
    dend_36 { pt3dadd( -141.843, 13.2331, -233.861, 0.29 ) }
    dend_36 { pt3dadd( -142.126, 13.402, -234.045, 0.29 ) }
    dend_36 { pt3dadd( -142.947, 13.8713, -234.598, 1.18 ) }
    dend_36 { pt3dadd( -144.255, 14.5714, -235.482, 0.52 ) }
    dend_36 { pt3dadd( -145.27, 15.1079, -236.148, 0.37 ) }
    dend_36 { pt3dadd( -145.57, 15.2669, -236.333, 0.37 ) }
    dend_36 { pt3dadd( -146.456, 15.6787, -236.859, 0.37 ) }
    dend_36 { pt3dadd( -146.842, 15.8309, -237.077, 0.37 ) }
    dend_36 { pt3dadd( -147.492, 16.0476, -237.432, 0.37 ) }
    dend_36 { pt3dadd( -148.691, 16.4863, -238.091, 1.33 ) }
    dend_36 { pt3dadd( -149.73, 17.0072, -238.689, 0.59 ) }
    dend_36 { pt3dadd( -150.397, 17.4333, -239.158, 0.37 ) }
    dend_36 { pt3dadd( -150.615, 17.61, -239.352, 0.37 ) }
    dend_36 { pt3dadd( -150.884, 17.8551, -239.635, 0.37 ) }
    dend_36 { pt3dadd( -151.48, 18.4741, -240.396, 0.37 ) }
    dend_36 { pt3dadd( -151.754, 18.7799, -240.778, 0.37 ) }
    dend_36 { pt3dadd( -152.145, 19.2607, -241.356, 0.37 ) }
    dend_36 { pt3dadd( -152.547, 19.7939, -241.979, 0.37 ) }
    dend_36 { pt3dadd( -152.872, 20.2611, -242.505, 0.37 ) }
    dend_36 { pt3dadd( -153.35, 21.0511, -243.355, 0.96 ) }
    dend_36 { pt3dadd( -153.923, 22.1448, -244.508, 0.52 ) }
    dend_36 { pt3dadd( -154.156, 22.7146, -245.073, 0.52 ) }
    dend_36 { pt3dadd( -154.274, 23.1802, -245.5, 0.52 ) }
    dend_36 { pt3dadd( -154.317, 23.7728, -246.002, 1.03 ) }
    dend_36 { pt3dadd( -154.212, 24.5866, -246.657, 0.52 ) }
    dend_36 { pt3dadd( -154.114, 24.9277, -246.915, 0.52 ) }
    dend_36 { pt3dadd( -154.009, 25.1983, -247.11, 0.52 ) }
    dend_36 { pt3dadd( -153.866, 25.6951, -247.451, 0.52 ) }
    dend_36 { pt3dadd( -153.802, 26.0776, -247.7, 0.52 ) }
    dend_36 { pt3dadd( -153.803, 26.5745, -248.025, 0.52 ) }
    dend_36 { pt3dadd( -153.919, 27.2523, -248.472, 0.52 ) }
    dend_36 { pt3dadd( -154.013, 27.5779, -248.689, 0.52 ) }
    dend_36 { pt3dadd( -154.474, 28.6096, -249.405, 1.03 ) }
    dend_36 { pt3dadd( -154.742, 29.0602, -249.734, 0.37 ) }
    dend_36 { pt3dadd( -155.211, 29.754, -250.254, 0.37 ) }
    dend_36 { pt3dadd( -155.461, 30.1101, -250.517, 0.37 ) }
    dend_36 { pt3dadd( -155.619, 30.3418, -250.681, 1.18 ) }
    dend_36 { pt3dadd( -156.048, 30.9711, -251.171, 0.07 ) }
    dend_36 { pt3dadd( -156.251, 31.2547, -251.426, 0.07 ) }
    dend_36 { pt3dadd( -156.585, 31.7684, -251.921, 0.07 ) }
    dend_36 { pt3dadd( -156.786, 32.1411, -252.283, 0.74 ) }
    dend_36 { pt3dadd( -156.985, 32.5645, -252.687, 0.37 ) }
    dend_36 { pt3dadd( -157.328, 33.3887, -253.48, 0.37 ) }
    dend_36 { pt3dadd( -157.553, 33.9917, -254.083, 0.37 ) }
    dend_36 { pt3dadd( -157.764, 34.4739, -254.595, 0.96 ) }
    dend_36 { pt3dadd( -157.874, 34.6665, -254.833, 0.96 ) }
    // Section: dend_34, id: dend_34, parent: dend_1 (entry count 51/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 24.4256, -4.43638, -13.3417, 0.59 ) }
    dend_34 { pt3dadd( 25.2005, -8.97456, 12.1293, 0.59 ) }
    dend_34 { pt3dadd( 25.2447, -9.1983, 13.2713, 0.59 ) }
    dend_34 { pt3dadd( 25.2897, -9.41679, 14.2861, 0.59 ) }
    dend_34 { pt3dadd( 25.3816, -9.8665, 16.3212, 0.59 ) }
    dend_34 { pt3dadd( 25.5079, -10.4979, 19.0743, 0.59 ) }
    dend_34 { pt3dadd( 25.5957, -10.9532, 20.9592, 0.59 ) }
    dend_34 { pt3dadd( 25.8659, -12.373, 20.1164, 0.59 ) }
    dend_34 { pt3dadd( 26.0164, -13.3736, 19.5876, 0.59 ) }
    dend_34 { pt3dadd( 26.2563, -15.1309, 18.7927, 0.59 ) }
    dend_34 { pt3dadd( 26.4695, -16.1362, 18.4517, 0.59 ) }
    dend_34 { pt3dadd( 26.7873, -16.9546, 18.1661, 0.59 ) }
    dend_34 { pt3dadd( 27.2328, -17.7754, 17.8256, 0.44 ) }
    dend_34 { pt3dadd( 27.7313, -18.5469, 17.4455, 0.44 ) }
    dend_34 { pt3dadd( 28.6223, -19.8044, 16.8015, 0.44 ) }
    dend_34 { pt3dadd( 30.0001, -21.6186, 15.8896, 0.44 ) }
    dend_34 { pt3dadd( 31.0167, -22.9925, 15.1931, 0.44 ) }
    dend_34 { pt3dadd( 31.4173, -23.608, 14.9049, 0.44 ) }
    dend_34 { pt3dadd( 32.0937, -24.7574, 14.3797, 0.44 ) }
    dend_34 { pt3dadd( 32.5079, -25.4808, 14.0583, 0.44 ) }
    dend_34 { pt3dadd( 32.8614, -26.1002, 13.8037, 0.44 ) }
    dend_34 { pt3dadd( 33.5095, -27.1813, 13.4235, 0.44 ) }
    dend_34 { pt3dadd( 35.6703, -30.5374, 12.3459, 0.44 ) }
    dend_34 { pt3dadd( 36.4581, -31.6665, 11.9914, 0.44 ) }
    dend_34 { pt3dadd( 37.1341, -32.5753, 11.7109, 0.44 ) }
    dend_34 { pt3dadd( 37.9567, -33.661, 11.3573, 0.44 ) }
    dend_34 { pt3dadd( 38.7503, -34.7305, 10.968, 0.44 ) }
    dend_34 { pt3dadd( 39.586, -35.8812, 10.519, 0.44 ) }
    dend_34 { pt3dadd( 40.1033, -36.6867, 10.1812, 0.44 ) }
    dend_34 { pt3dadd( 40.5746, -37.5796, 9.73592, 0.44 ) }
    dend_34 { pt3dadd( 40.9895, -38.5061, 9.17219, 0.44 ) }
    dend_34 { pt3dadd( 41.5418, -39.9838, 8.18957, 0.44 ) }
    dend_34 { pt3dadd( 41.9879, -41.3372, 7.32362, 0.44 ) }
    dend_34 { pt3dadd( 42.511, -43.0349, 6.31841, 0.44 ) }
    dend_34 { pt3dadd( 43.1911, -45.4024, 4.9768, 0.44 ) }
    dend_34 { pt3dadd( 43.6171, -46.929, 4.17347, 0.44 ) }
    dend_34 { pt3dadd( 44.3986, -49.6344, 2.86218, 0.44 ) }
    dend_34 { pt3dadd( 45.1415, -52.064, 1.84633, 0.44 ) }
    dend_34 { pt3dadd( 45.6176, -53.541, 1.34586, 0.44 ) }
    dend_34 { pt3dadd( 46.0643, -54.8705, 1.01861, 0.44 ) }
    dend_34 { pt3dadd( 46.5734, -56.3792, 0.78654, 0.44 ) }
    dend_34 { pt3dadd( 47.0881, -57.8588, 0.640366, 0.44 ) }
    dend_34 { pt3dadd( 48.2569, -61.1348, 0.430457, 0.44 ) }
    dend_34 { pt3dadd( 48.8901, -62.9888, 0.336659, 0.44 ) }
    dend_34 { pt3dadd( 49.2424, -64.0051, 0.301253, 0.44 ) }
    dend_34 { pt3dadd( 49.8521, -65.7525, 0.271206, 0.44 ) }
    dend_34 { pt3dadd( 50.2848, -66.9982, 0.249636, 0.44 ) }
    dend_34 { pt3dadd( 50.6249, -68.0322, 0.230043, 0.44 ) }
    dend_34 { pt3dadd( 51.0517, -69.4034, 0.19872, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_34 { pt3dadd( 51.5922, -71.21, 0.0537136, 0.44 ) }
    dend_34 { pt3dadd( 52.1482, -73.1693, -0.149105, 0.44 ) }
    dend_34 { pt3dadd( 52.6805, -75.1155, -0.376523, 0.44 ) }
    dend_34 { pt3dadd( 53.0512, -76.4372, -0.566847, 0.44 ) }
    dend_34 { pt3dadd( 53.6962, -78.4892, -0.89571, 0.44 ) }
    dend_34 { pt3dadd( 54.479, -80.6778, -1.26619, 0.44 ) }
    dend_34 { pt3dadd( 55.3276, -82.8336, -1.6438, 0.44 ) }
    dend_34 { pt3dadd( 56.4831, -85.4426, -2.1412, 0.44 ) }
    dend_34 { pt3dadd( 57.4696, -87.4688, -2.57018, 0.44 ) }
    dend_34 { pt3dadd( 58.6784, -89.7366, -3.08838, 0.44 ) }
    dend_34 { pt3dadd( 60.0302, -92.1219, -3.69852, 0.44 ) }
    dend_34 { pt3dadd( 61.2128, -94.1611, -4.23421, 0.44 ) }
    dend_34 { pt3dadd( 62.0159, -95.5738, -4.6264, 0.44 ) }
    dend_34 { pt3dadd( 63.2117, -97.8333, -5.2583, 0.44 ) }
    dend_34 { pt3dadd( 64.1727, -99.8239, -5.78528, 0.44 ) }
    dend_34 { pt3dadd( 65.2707, -102.277, -6.56746, 0.44 ) }
    dend_34 { pt3dadd( 66.1351, -104.386, -7.32001, 0.44 ) }
    dend_34 { pt3dadd( 66.8439, -106.269, -8.02102, 0.44 ) }
    dend_34 { pt3dadd( 67.3151, -107.575, -8.53491, 0.44 ) }
    dend_34 { pt3dadd( 67.8256, -108.994, -9.12083, 0.44 ) }
    dend_34 { pt3dadd( 68.9244, -111.978, -10.2425, 0.44 ) }
    dend_34 { pt3dadd( 69.1708, -112.607, -10.4497, 0.44 ) }
    dend_34 { pt3dadd( 69.6897, -113.85, -10.7854, 0.44 ) }
    dend_34 { pt3dadd( 70.9779, -116.758, -11.3418, 0.44 ) }
    dend_34 { pt3dadd( 71.6294, -118.235, -11.4618, 0.44 ) }
    dend_34 { pt3dadd( 72.6958, -120.747, -11.3458, 0.44 ) }
    dend_34 { pt3dadd( 73.1569, -121.906, -11.1703, 0.44 ) }
    dend_34 { pt3dadd( 73.8231, -123.652, -10.854, 0.44 ) }
    dend_34 { pt3dadd( 74.269, -124.913, -10.5585, 0.44 ) }
    dend_34 { pt3dadd( 74.9219, -126.993, -9.8807, 0.44 ) }
    dend_34 { pt3dadd( 75.5177, -129.033, -9.20075, 0.44 ) }
    dend_34 { pt3dadd( 75.7378, -129.811, -8.93829, 0.44 ) }
    dend_34 { pt3dadd( 76.1151, -131.181, -8.44639, 0.44 ) }
    dend_34 { pt3dadd( 76.6578, -133.118, -7.6951, 0.44 ) }
    dend_34 { pt3dadd( 77.195, -134.979, -6.94924, 0.44 ) }
    dend_34 { pt3dadd( 77.8674, -136.905, -6.19728, 0.44 ) }
    dend_34 { pt3dadd( 78.4727, -138.3, -5.74736, 0.44 ) }
    dend_34 { pt3dadd( 79.0301, -139.333, -5.49014, 0.44 ) }
    dend_34 { pt3dadd( 80.7223, -141.804, -5.1489, 0.44 ) }
    dend_34 { pt3dadd( 81.7651, -143.039, -5.19314, 0.44 ) }
    dend_34 { pt3dadd( 83.5016, -144.784, -5.5777, 0.44 ) }
    dend_34 { pt3dadd( 85.5016, -146.551, -6.20289, 0.44 ) }
    dend_34 { pt3dadd( 87.0179, -147.773, -6.76777, 0.44 ) }
    dend_34 { pt3dadd( 88.9136, -149.141, -7.51106, 0.44 ) }
    dend_34 { pt3dadd( 90.8917, -150.394, -8.31073, 0.44 ) }
    dend_34 { pt3dadd( 92.43, -151.271, -8.84587, 0.44 ) }
    dend_34 { pt3dadd( 94.2464, -152.216, -9.39288, 0.44 ) }
    dend_34 { pt3dadd( 95.8169, -152.941, -9.81374, 0.44 ) }
    dend_34 { pt3dadd( 97.2949, -153.551, -10.2328, 0.44 ) }
    dend_34 { pt3dadd( 99.0661, -154.213, -10.7208, 0.44 ) }
    dend_34 { pt3dadd( 102.198, -155.242, -11.5299, 0.44 ) }
    dend_34 { pt3dadd( 104.963, -156.078, -12.2144, 0.44 ) }
    dend_34 { pt3dadd( 107.67, -156.87, -12.942, 0.44 ) }
    dend_34 { pt3dadd( 109.634, -157.482, -13.5237, 0.44 ) }
    dend_34 { pt3dadd( 110.826, -157.913, -13.9243, 0.44 ) }
    dend_34 { pt3dadd( 112.487, -158.62, -14.6122, 0.44 ) }
    dend_34 { pt3dadd( 114.029, -159.411, -15.3534, 0.44 ) }
    dend_34 { pt3dadd( 116.209, -160.785, -16.5121, 0.44 ) }
    dend_34 { pt3dadd( 117.718, -161.919, -17.4182, 0.44 ) }
    dend_34 { pt3dadd( 119.112, -163.081, -18.405, 0.44 ) }
    dend_34 { pt3dadd( 120.722, -164.597, -19.7306, 0.44 ) }
    dend_34 { pt3dadd( 121.598, -165.525, -20.6078, 0.44 ) }
    dend_34 { pt3dadd( 122.534, -166.595, -21.6744, 0.44 ) }
    dend_34 { pt3dadd( 123.608, -167.918, -22.963, 0.44 ) }
    dend_34 { pt3dadd( 124.341, -168.845, -23.7832, 0.44 ) }
    dend_34 { pt3dadd( 125.182, -169.913, -24.5962, 0.44 ) }
    dend_34 { pt3dadd( 126.998, -172.197, -25.9902, 0.44 ) }
    dend_34 { pt3dadd( 128.016, -173.488, -26.6394, 0.44 ) }
    dend_34 { pt3dadd( 129.027, -174.783, -27.1341, 0.44 ) }
    dend_34 { pt3dadd( 130.403, -176.597, -27.6373, 0.44 ) }
    dend_34 { pt3dadd( 131.555, -178.144, -27.915, 0.44 ) }
    dend_34 { pt3dadd( 133.208, -180.387, -28.108, 0.44 ) }
    dend_34 { pt3dadd( 134.647, -182.363, -28.09, 0.44 ) }
    dend_34 { pt3dadd( 135.743, -183.883, -28.0056, 0.44 ) }
    dend_34 { pt3dadd( 136.585, -185.043, -27.9174, 0.44 ) }
    dend_34 { pt3dadd( 137.961, -187.013, -27.7261, 0.44 ) }
    dend_34 { pt3dadd( 139.245, -188.977, -27.4824, 0.44 ) }
    dend_34 { pt3dadd( 140.074, -190.282, -27.2988, 0.44 ) }
    dend_34 { pt3dadd( 141.643, -192.782, -26.9112, 0.44 ) }
    dend_34 { pt3dadd( 142.639, -194.401, -26.6484, 0.44 ) }
    dend_34 { pt3dadd( 144.264, -197.089, -26.2165, 0.44 ) }
    dend_34 { pt3dadd( 145.556, -199.297, -25.9063, 0.44 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 82/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 24.4256, -4.43638, -13.3417, 1.25 ) }
    dend_2 { pt3dadd( 28.3332, -3.87276, -14.8507, 1.25 ) }
    dend_2 { pt3dadd( 29.7758, -3.66469, -15.4078, 1.25 ) }
    dend_2 { pt3dadd( 31.1646, -3.46437, -15.9441, 1.69 ) }
    dend_2 { pt3dadd( 32.963, -3.20498, -16.6385, 2.87 ) }
    dend_2 { pt3dadd( 34.0744, -3.04467, -17.0677, 2.87 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 88/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 32.2041, 24.577, -1.77581, 0.736338 ) }
    axon_1 { pt3dadd( 43.949, 33.9076, -1.77581, 0.736338 ) }
    axon_1 { pt3dadd( 55.6938, 43.2381, -1.77581, 0.736338 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 91/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -22.0841, 33.0292, 19.277, 0.66 ) }
    dend_55 { pt3dadd( -24.6824, 32.2472, 19.8661, 0.66 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 93/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -22.0841, 33.0292, 19.277, 0.66 ) }
    dend_54 { pt3dadd( -23.5365, 33.6219, 19.1919, 0.66 ) }
    // Section: dend_45, id: dend_45, parent: dend_39 (entry count 95/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -42.8472, -21.1197, -3.34419, 1.84 ) }
    dend_45 { pt3dadd( -45.9348, -21.9802, 1.61974, 1.84 ) }
    dend_45 { pt3dadd( -46.7641, -22.1317, 2.36532, 0.66 ) }
    dend_45 { pt3dadd( -47.3279, -22.2282, 2.68507, 1.11 ) }
    dend_45 { pt3dadd( -47.6939, -22.3122, 2.83539, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_45 { pt3dadd( -48.6511, -22.5556, 3.02371, 1.92 ) }
    dend_45 { pt3dadd( -49.9192, -22.9406, 3.10433, 1.4 ) }
    dend_45 { pt3dadd( -52.057, -23.7495, 2.59678, 1.4 ) }
    dend_45 { pt3dadd( -53.5536, -24.5274, 2.09178, 1.03 ) }
    dend_45 { pt3dadd( -54.8461, -25.3045, 1.33004, 1.03 ) }
    dend_45 { pt3dadd( -57.1709, -26.9145, -0.496673, 1.4 ) }
    dend_45 { pt3dadd( -57.8054, -27.416, -1.10924, 1.4 ) }
    dend_45 { pt3dadd( -58.6286, -28.1371, -2.03464, 1.11 ) }
    dend_45 { pt3dadd( -59.2607, -28.7294, -2.83548, 1.77 ) }
    dend_45 { pt3dadd( -61.6695, -30.9639, -5.92951, 2.06 ) }
    dend_45 { pt3dadd( -62.6865, -31.8024, -7.06707, 1.33 ) }
    dend_45 { pt3dadd( -63.2079, -32.17, -7.48339, 0.74 ) }
    dend_45 { pt3dadd( -63.7533, -32.4734, -7.83452, 0.44 ) }
    dend_45 { pt3dadd( -64.1417, -32.6283, -8.07422, 0.44 ) }
    dend_45 { pt3dadd( -64.5448, -32.761, -8.30068, 1.25 ) }
    dend_45 { pt3dadd( -65.4746, -33.0675, -8.67812, 0.96 ) }
    dend_45 { pt3dadd( -66.517, -33.4125, -9.21014, 0.74 ) }
    dend_45 { pt3dadd( -67.1278, -33.6858, -9.56542, 0.37 ) }
    dend_45 { pt3dadd( -69.5279, -35.1723, -11.0383, 0.07 ) }
    dend_45 { pt3dadd( -69.9465, -35.4975, -11.2876, 1.03 ) }
    dend_45 { pt3dadd( -70.6521, -36.1313, -11.6744, 1.55 ) }
    dend_45 { pt3dadd( -71.6648, -37.0997, -12.1466, 2.06 ) }
    dend_45 { pt3dadd( -72.6552, -38.0744, -12.4994, 2.58 ) }
    dend_45 { pt3dadd( -73.8447, -39.2425, -12.7719, 1.77 ) }
    dend_45 { pt3dadd( -74.8278, -40.1937, -12.8651, 0.96 ) }
    dend_45 { pt3dadd( -75.7444, -40.9488, -13.1447, 0.96 ) }
    dend_45 { pt3dadd( -76.7104, -41.6427, -13.6242, 1.25 ) }
    dend_45 { pt3dadd( -77.4892, -42.1306, -14.1302, 1.25 ) }
    dend_45 { pt3dadd( -78.3433, -42.6239, -14.7749, 1.25 ) }
    dend_45 { pt3dadd( -79.343, -43.205, -15.6197, 1.25 ) }
    dend_45 { pt3dadd( -83.277, -45.624, -19.1214, 0.66 ) }
    dend_45 { pt3dadd( -83.8148, -45.9878, -19.6044, 0.66 ) }
    dend_45 { pt3dadd( -84.5925, -46.5263, -20.3883, 1.18 ) }
    dend_45 { pt3dadd( -85.493, -47.1521, -21.3137, 2.14 ) }
    dend_45 { pt3dadd( -86.2477, -47.6957, -22.0748, 2.65 ) }
    dend_45 { pt3dadd( -87.068, -48.3468, -22.8405, 2.65 ) }
    dend_45 { pt3dadd( -87.9089, -49.1464, -23.4842, 1.47 ) }
    dend_45 { pt3dadd( -90.3159, -51.6124, -25.5896, 0.96 ) }
    dend_45 { pt3dadd( -90.9084, -52.2962, -26.1961, 0.96 ) }
    dend_45 { pt3dadd( -91.23, -52.7274, -26.5806, 0.96 ) }
    dend_45 { pt3dadd( -91.609, -53.3684, -27.1217, 0.96 ) }
    dend_45 { pt3dadd( -91.9738, -54.1111, -27.6844, 0.96 ) }
    dend_45 { pt3dadd( -92.1838, -54.6195, -27.972, 0.96 ) }
    dend_45 { pt3dadd( -92.4406, -55.3099, -28.1191, 0.96 ) }
    dend_45 { pt3dadd( -92.7837, -55.8941, -28.2254, 0.96 ) }
    dend_45 { pt3dadd( -93.3337, -56.1711, -28.4122, 0.96 ) }
    dend_45 { pt3dadd( -94.6389, -56.4723, -28.9312, 0.96 ) }
    dend_45 { pt3dadd( -95.3221, -56.5593, -29.4081, 0.96 ) }
    dend_45 { pt3dadd( -96.0196, -56.6505, -29.9815, 0.96 ) }
    dend_45 { pt3dadd( -96.5765, -56.7433, -30.4624, 0.96 ) }
    dend_45 { pt3dadd( -98.6299, -57.1412, -32.5561, 0.07 ) }
    dend_45 { pt3dadd( -99.2882, -57.3094, -33.3199, 1.77 ) }
    dend_45 { pt3dadd( -101.484, -58.1141, -36.2224, 1.25 ) }
    dend_45 { pt3dadd( -101.89, -58.2959, -36.7952, 0.81 ) }
    dend_45 { pt3dadd( -102.586, -58.6811, -37.8066, 0.66 ) }
    dend_45 { pt3dadd( -103.906, -59.607, -39.6969, 0.29 ) }
    dend_45 { pt3dadd( -104.179, -59.8405, -40.0538, 0.29 ) }
    dend_45 { pt3dadd( -104.588, -60.2545, -40.5628, 0.29 ) }
    dend_45 { pt3dadd( -104.919, -60.6332, -40.882, 1.47 ) }
    dend_45 { pt3dadd( -105.642, -61.3806, -41.6152, 1.92 ) }
    dend_45 { pt3dadd( -106.202, -61.9464, -42.1886, 1.4 ) }
    dend_45 { pt3dadd( -107.434, -63.0088, -43.616, 1.4 ) }
    dend_45 { pt3dadd( -108.355, -63.7185, -44.7798, 0.66 ) }
    dend_45 { pt3dadd( -109.065, -64.216, -45.6905, 0.37 ) }
    dend_45 { pt3dadd( -110.915, -65.4175, -48.0283, 0.07 ) }
    dend_45 { pt3dadd( -111.204, -65.5971, -48.3891, 0.07 ) }
    dend_45 { pt3dadd( -113.814, -67.077, -51.3862, 1.4 ) }
    dend_45 { pt3dadd( -114.619, -67.4822, -52.3383, 1.84 ) }
    dend_45 { pt3dadd( -115.383, -67.8327, -53.2307, 1.18 ) }
    dend_45 { pt3dadd( -115.969, -68.1215, -53.889, 0.15 ) }
    dend_45 { pt3dadd( -116.645, -68.4789, -54.5252, 0.15 ) }
    dend_45 { pt3dadd( -117.593, -69.046, -55.2414, 0.15 ) }
    dend_45 { pt3dadd( -120.882, -71.3865, -57.0825, 1.55 ) }
    dend_45 { pt3dadd( -122.036, -72.2367, -57.7651, 0.96 ) }
    dend_45 { pt3dadd( -122.62, -72.7191, -58.1122, 0.07 ) }
    dend_45 { pt3dadd( -123.024, -72.9844, -58.5479, 1.4 ) }
    dend_45 { pt3dadd( -124.647, -73.9172, -60.5739, 1.4 ) }
    dend_45 { pt3dadd( -126.168, -74.819, -62.6577, 0.52 ) }
    dend_45 { pt3dadd( -126.652, -75.1062, -63.3494, 0.15 ) }
    dend_45 { pt3dadd( -127.236, -75.4623, -64.2298, 0.15 ) }
    dend_45 { pt3dadd( -130.749, -77.6941, -69.7228, 1.62 ) }
    dend_45 { pt3dadd( -131.494, -78.1988, -70.9418, 0.52 ) }
    dend_45 { pt3dadd( -131.781, -78.3771, -71.4303, 0.15 ) }
    dend_45 { pt3dadd( -132.07, -78.5673, -71.887, 0.15 ) }
    dend_45 { pt3dadd( -133.078, -79.2383, -73.3484, 0.15 ) }
    dend_45 { pt3dadd( -133.498, -79.5465, -73.8612, 1.33 ) }
    dend_45 { pt3dadd( -133.96, -79.9524, -74.2373, 1.33 ) }
    dend_45 { pt3dadd( -136.279, -81.5992, -76.5137, 1.99 ) }
    dend_45 { pt3dadd( -136.767, -81.8863, -77.0038, 1.62 ) }
    dend_45 { pt3dadd( -137.656, -82.3584, -77.8855, 0.44 ) }
    dend_45 { pt3dadd( -138.341, -82.7061, -78.5528, 0.44 ) }
    dend_45 { pt3dadd( -138.875, -82.9779, -79.0293, 0.44 ) }
    dend_45 { pt3dadd( -141.549, -83.9654, -81.912, 1.4 ) }
    dend_45 { pt3dadd( -142.112, -84.1386, -82.5604, 1.84 ) }
    dend_45 { pt3dadd( -142.887, -84.3432, -83.4612, 0.88 ) }
    dend_45 { pt3dadd( -143.702, -84.5142, -84.4302, 0.88 ) }
    dend_45 { pt3dadd( -144.387, -84.6366, -85.2345, 0.88 ) }
    dend_45 { pt3dadd( -149.055, -85.517, -90.5615, 0.29 ) }
    dend_45 { pt3dadd( -149.813, -85.668, -91.3876, 1.84 ) }
    dend_45 { pt3dadd( -151.196, -85.9327, -92.9036, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_45 { pt3dadd( -152.926, -86.2545, -94.7706, 0.07 ) }
    dend_45 { pt3dadd( -153.193, -86.304, -95.0741, 0.81 ) }
    dend_45 { pt3dadd( -153.886, -86.4755, -95.8055, 0.81 ) }
    dend_45 { pt3dadd( -155.524, -87.0148, -97.2257, 0.07 ) }
    dend_45 { pt3dadd( -156.086, -87.1877, -97.7218, 1.03 ) }
    dend_45 { pt3dadd( -156.519, -87.3172, -98.0861, 1.69 ) }
    dend_45 { pt3dadd( -160.407, -88.5852, -101.072, 0.15 ) }
    dend_45 { pt3dadd( -162.146, -89.1651, -102.33, 0.15 ) }
    dend_45 { pt3dadd( -162.85, -89.4127, -102.793, 1.25 ) }
    dend_45 { pt3dadd( -163.523, -89.6707, -103.186, 1.69 ) }
    dend_45 { pt3dadd( -164.812, -90.2049, -103.864, 0.74 ) }
    dend_45 { pt3dadd( -166.183, -90.824, -104.475, 0.07 ) }
    dend_45 { pt3dadd( -166.991, -91.2308, -104.723, 0.66 ) }
    dend_45 { pt3dadd( -167.936, -91.7091, -105.041, 1.62 ) }
    dend_45 { pt3dadd( -169.229, -92.3508, -105.46, 1.62 ) }
    dend_45 { pt3dadd( -170.448, -92.9293, -105.816, 0.52 ) }
    dend_45 { pt3dadd( -172.247, -93.7195, -106.372, 0.52 ) }
    dend_45 { pt3dadd( -173.452, -94.2021, -106.859, 0.29 ) }
    dend_45 { pt3dadd( -174.287, -94.5108, -107.265, 0.59 ) }
    dend_45 { pt3dadd( -175.349, -94.8795, -107.802, 0.59 ) }
    dend_45 { pt3dadd( -176.226, -95.158, -108.245, 1.11 ) }
    dend_45 { pt3dadd( -178.055, -95.7095, -109.177, 1.55 ) }
    dend_45 { pt3dadd( -180.753, -96.5105, -110.515, 1.55 ) }
    dend_45 { pt3dadd( -182.069, -96.894, -111.204, 0.88 ) }
    dend_45 { pt3dadd( -184.045, -97.4904, -112.247, 0.59 ) }
    dend_45 { pt3dadd( -185.832, -98.087, -113.147, 0.22 ) }
    dend_45 { pt3dadd( -186.988, -98.516, -113.652, 0.22 ) }
    dend_45 { pt3dadd( -187.705, -98.8045, -113.88, 0.66 ) }
    dend_45 { pt3dadd( -189.152, -99.4059, -114.272, 1.18 ) }
    dend_45 { pt3dadd( -189.915, -99.7075, -114.552, 1.11 ) }
    dend_45 { pt3dadd( -191.287, -100.2, -115.13, 0.59 ) }
    dend_45 { pt3dadd( -192.351, -100.546, -115.585, 0.59 ) }
    dend_45 { pt3dadd( -193.649, -100.878, -116.098, 0.29 ) }
    dend_45 { pt3dadd( -195.442, -101.218, -116.689, 1.18 ) }
    dend_45 { pt3dadd( -197.516, -101.452, -117.429, 1.55 ) }
    dend_45 { pt3dadd( -198.557, -101.479, -117.887, 1.55 ) }
    dend_45 { pt3dadd( -200.23, -101.448, -118.718, 0.44 ) }
    dend_45 { pt3dadd( -201.744, -101.361, -119.508, 0.37 ) }
    dend_45 { pt3dadd( -203.374, -101.217, -120.395, 0.37 ) }
    dend_45 { pt3dadd( -206.737, -100.849, -122.216, 1.4 ) }
    dend_45 { pt3dadd( -209.249, -100.501, -123.668, 0.15 ) }
    dend_45 { pt3dadd( -209.851, -100.411, -124.038, 0.15 ) }
    dend_45 { pt3dadd( -210.605, -100.293, -124.506, 0.15 ) }
    dend_45 { pt3dadd( -211.753, -100.132, -125.149, 1.55 ) }
    dend_45 { pt3dadd( -212.485, -100.066, -125.493, 1.55 ) }
    dend_45 { pt3dadd( -214.742, -100.006, -126.21, 0.07 ) }
    dend_45 { pt3dadd( -216.181, -99.9939, -126.596, 1.47 ) }
    dend_45 { pt3dadd( -217.34, -99.9859, -126.904, 1.18 ) }
    dend_45 { pt3dadd( -219.466, -100.044, -127.459, 1.69 ) }
    dend_45 { pt3dadd( -221.455, -100.149, -127.898, 0.59 ) }
    dend_45 { pt3dadd( -222.106, -100.198, -128.03, 1.18 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 51/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -42.8472, -21.1197, -3.34419, 1.4 ) }
    dend_40 { pt3dadd( -43.1115, -24.8713, -2.1378, 1.4 ) }
    dend_40 { pt3dadd( -43.244, -25.8732, -1.88523, 0.96 ) }
    dend_40 { pt3dadd( -43.3422, -26.4103, -1.7857, 0.66 ) }
    dend_40 { pt3dadd( -43.5289, -27.2145, -1.69189, 0.66 ) }
    dend_40 { pt3dadd( -43.7216, -27.9335, -1.65904, 0.52 ) }
    dend_40 { pt3dadd( -43.9635, -28.7719, -1.66787, 0.44 ) }
    dend_40 { pt3dadd( -44.0996, -29.1269, -1.73416, 0.81 ) }
    dend_40 { pt3dadd( -44.3449, -29.812, -1.86496, 1.69 ) }
    dend_40 { pt3dadd( -44.6581, -30.8067, -2.0584, 1.99 ) }
    dend_40 { pt3dadd( -45.0359, -32.1857, -2.33312, 1.69 ) }
    dend_40 { pt3dadd( -45.3549, -33.4917, -2.59983, 0.66 ) }
    dend_40 { pt3dadd( -45.5615, -34.4036, -2.79049, 0.66 ) }
    dend_40 { pt3dadd( -45.6701, -34.9072, -2.89822, 0.66 ) }
    dend_40 { pt3dadd( -45.7575, -35.3248, -2.98489, 0.66 ) }
    dend_40 { pt3dadd( -46.0802, -36.8365, -3.2906, 1.47 ) }
    dend_40 { pt3dadd( -46.3773, -38.1668, -3.55398, 2.14 ) }
    dend_40 { pt3dadd( -46.6826, -39.4685, -3.80961, 2.14 ) }
    dend_40 { pt3dadd( -46.8898, -40.3786, -3.99104, 2.14 ) }
    dend_40 { pt3dadd( -47.2546, -41.9865, -4.31737, 1.33 ) }
    dend_40 { pt3dadd( -47.5103, -43.2067, -4.5726, 0.81 ) }
    dend_40 { pt3dadd( -47.6498, -44.0103, -4.74574, 1.18 ) }
    dend_40 { pt3dadd( -47.8808, -45.5239, -5.07942, 1.62 ) }
    dend_40 { pt3dadd( -48.1337, -47.026, -5.41153, 1.62 ) }
    dend_40 { pt3dadd( -48.4793, -48.8362, -5.81314, 1.62 ) }
    dend_40 { pt3dadd( -48.8013, -50.2535, -6.12867, 0.81 ) }
    dend_40 { pt3dadd( -49.0511, -51.1049, -6.33515, 0.59 ) }
    dend_40 { pt3dadd( -49.4293, -52.0812, -6.59161, 1.03 ) }
    dend_40 { pt3dadd( -49.9621, -53.1335, -6.89043, 1.03 ) }
    dend_40 { pt3dadd( -50.2972, -53.6631, -7.05413, 1.03 ) }
    dend_40 { pt3dadd( -50.6623, -54.1773, -7.22945, 1.03 ) }
    dend_40 { pt3dadd( -51.416, -55.2896, -7.63359, 0.66 ) }
    dend_40 { pt3dadd( -51.7764, -56.0125, -7.90152, 0.44 ) }
    dend_40 { pt3dadd( -51.9507, -56.7959, -8.18454, 0.44 ) }
    dend_40 { pt3dadd( -51.9615, -57.2761, -8.3506, 1.25 ) }
    dend_40 { pt3dadd( -51.9069, -58.1088, -8.61391, 1.25 ) }
    dend_40 { pt3dadd( -51.8034, -59.108, -8.90069, 1.69 ) }
    dend_40 { pt3dadd( -51.6899, -60.2382, -9.18554, 1.69 ) }
    dend_40 { pt3dadd( -51.5771, -61.6554, -9.5406, 1.11 ) }
    dend_40 { pt3dadd( -51.528, -62.4439, -9.73822, 0.81 ) }
    dend_40 { pt3dadd( -51.479, -63.7664, -10.0655, 0.81 ) }
    dend_40 { pt3dadd( -51.4497, -64.8926, -10.3435, 0.81 ) }
    dend_40 { pt3dadd( -51.4315, -65.757, -10.5572, 0.81 ) }
    dend_40 { pt3dadd( -51.4142, -66.5793, -10.7619, 0.81 ) }
    dend_40 { pt3dadd( -51.4047, -67.656, -11.0304, 0.81 ) }
    dend_40 { pt3dadd( -51.4202, -69.3403, -11.4503, 0.81 ) }
    dend_40 { pt3dadd( -51.4403, -70.9507, -11.8554, 0.81 ) }
    dend_40 { pt3dadd( -51.472, -72.0837, -12.1381, 0.81 ) }
    dend_40 { pt3dadd( -51.537, -73.104, -12.3877, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_40 { pt3dadd( -51.7356, -74.6308, -12.7476, 1.92 ) }
    dend_40 { pt3dadd( -51.9493, -75.7624, -13.0054, 2.43 ) }
    dend_40 { pt3dadd( -52.1235, -76.5436, -13.1797, 2.43 ) }
    dend_40 { pt3dadd( -52.5775, -78.3378, -13.5729, 1.18 ) }
    dend_40 { pt3dadd( -52.8499, -79.3102, -13.7824, 1.11 ) }
    dend_40 { pt3dadd( -53.1921, -80.412, -14.0154, 0.88 ) }
    dend_40 { pt3dadd( -53.5342, -81.2629, -14.2384, 0.88 ) }
    dend_40 { pt3dadd( -53.7574, -81.7053, -14.3707, 0.88 ) }
    dend_40 { pt3dadd( -54.1223, -82.314, -14.5594, 0.74 ) }
    dend_40 { pt3dadd( -54.4801, -82.8479, -14.7268, 0.74 ) }
    dend_40 { pt3dadd( -55.5869, -84.4262, -15.2153, 2.06 ) }
    dend_40 { pt3dadd( -57.0378, -86.4765, -15.8394, 2.43 ) }
    dend_40 { pt3dadd( -58.1408, -88.0615, -16.316, 2.43 ) }
    dend_40 { pt3dadd( -59.2911, -89.794, -16.8317, 1.47 ) }
    dend_40 { pt3dadd( -59.9046, -90.793, -17.1275, 0.96 ) }
    dend_40 { pt3dadd( -60.3699, -91.6604, -17.3781, 0.96 ) }
    dend_40 { pt3dadd( -60.7415, -92.5601, -17.6202, 0.88 ) }
    dend_40 { pt3dadd( -60.871, -93.1862, -17.7535, 0.88 ) }
    dend_40 { pt3dadd( -60.8802, -93.8359, -17.9115, 0.88 ) }
    dend_40 { pt3dadd( -60.8436, -94.1323, -17.9915, 0.88 ) }
    dend_40 { pt3dadd( -60.7574, -94.7335, -18.1553, 0.88 ) }
    dend_40 { pt3dadd( -60.7441, -95.2545, -18.2891, 0.88 ) }
    dend_40 { pt3dadd( -60.8616, -96.0449, -18.4734, 0.88 ) }
    dend_40 { pt3dadd( -61.0724, -96.8459, -18.6478, 0.88 ) }
    dend_40 { pt3dadd( -61.3092, -97.5363, -18.7908, 0.88 ) }
    dend_40 { pt3dadd( -61.6332, -98.3514, -18.9535, 1.4 ) }
    dend_40 { pt3dadd( -62.28, -99.7702, -19.2012, 1.84 ) }
    dend_40 { pt3dadd( -62.8827, -101.036, -19.4166, 2.65 ) }
    dend_40 { pt3dadd( -63.6632, -102.631, -19.6821, 2.65 ) }
    dend_40 { pt3dadd( -64.663, -104.631, -20.0071, 1.33 ) }
    dend_40 { pt3dadd( -65.3701, -106.034, -20.23, 1.33 ) }
    dend_40 { pt3dadd( -66.4982, -108.121, -20.5406, 1.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 32/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -157.874, 34.6665, -254.833, 0.22 ) }
    dend_38 { pt3dadd( -157.629, 34.7993, -255.856, 0.22 ) }
    dend_38 { pt3dadd( -157.48, 34.8798, -256.476, 0.22 ) }
    dend_38 { pt3dadd( -157.244, 35.0081, -257.463, 0.22 ) }
    dend_38 { pt3dadd( -156.876, 35.2073, -258.997, 0.22 ) }
    dend_38 { pt3dadd( -156.659, 35.325, -259.904, 0.22 ) }
    dend_38 { pt3dadd( -156.447, 35.4399, -260.788, 0.22 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 39/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -157.874, 34.6665, -254.833, 0.22 ) }
    dend_37 { pt3dadd( -158.532, 33.1159, -254.271, 0.22 ) }
    dend_37 { pt3dadd( -158.923, 32.1924, -253.936, 0.22 ) }
    dend_37 { pt3dadd( -159.469, 30.9068, -253.469, 0.22 ) }
    dend_37 { pt3dadd( -160.268, 29.0218, -252.785, 0.22 ) }
    dend_37 { pt3dadd( -160.845, 27.661, -252.291, 0.22 ) }
    dend_37 { pt3dadd( -161.007, 27.28, -252.153, 0.22 ) }
    // Section: dend_33, id: dend_33, parent: dend_2 (entry count 46/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 34.0744, -3.04467, -17.0677, 0.88 ) }
    dend_33 { pt3dadd( 35.9401, -6.4195, 4.47463, 0.88 ) }
    dend_33 { pt3dadd( 36.0509, -6.61916, 5.7375, 0.88 ) }
    dend_33 { pt3dadd( 36.2273, -6.92938, 7.92694, 0.44 ) }
    dend_33 { pt3dadd( 36.2712, -6.97807, 8.6997, 0.44 ) }
    dend_33 { pt3dadd( 36.2262, -6.67621, 10.2132, 0.44 ) }
    dend_33 { pt3dadd( 36.0376, -5.90373, 12.039, 0.44 ) }
    dend_33 { pt3dadd( 36.6654, -8.177, 9.52083, 0.44 ) }
    dend_33 { pt3dadd( 37.0982, -9.8498, 7.47512, 0.44 ) }
    dend_33 { pt3dadd( 37.5405, -11.658, 5.21386, 0.44 ) }
    dend_33 { pt3dadd( 38.2892, -15.4801, 0.231361, 0.44 ) }
    dend_33 { pt3dadd( 38.4386, -16.5583, -1.28283, 0.44 ) }
    dend_33 { pt3dadd( 38.6473, -18.5176, -4.3347, 0.44 ) }
    dend_33 { pt3dadd( 38.8667, -21.1602, -8.79175, 0.44 ) }
    dend_33 { pt3dadd( 38.9099, -21.6195, -9.65208, 0.44 ) }
    dend_33 { pt3dadd( 39.089, -23.3958, -13.119, 0.44 ) }
    dend_33 { pt3dadd( 39.2659, -25.4815, -17.3405, 0.44 ) }
    dend_33 { pt3dadd( 39.4656, -27.7896, -22.2099, 0.44 ) }
    dend_33 { pt3dadd( 39.5779, -28.923, -24.526, 0.44 ) }
    dend_33 { pt3dadd( 39.7809, -30.798, -28.2839, 0.44 ) }
    dend_33 { pt3dadd( 39.8432, -31.2462, -29.2061, 0.44 ) }
    dend_33 { pt3dadd( 40.0913, -32.6046, -31.9631, 0.44 ) }
    dend_33 { pt3dadd( 40.3501, -34.1355, -34.7264, 0.44 ) }
    dend_33 { pt3dadd( 40.5097, -35.0974, -36.1455, 0.44 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 70/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 34.0744, -3.04467, -17.0677, 2.14 ) }
    dend_3 { pt3dadd( 37.6669, -3.9245, -16.1738, 2.14 ) }
    dend_3 { pt3dadd( 39.0451, -4.1724, -15.8893, 0.81 ) }
    dend_3 { pt3dadd( 41.3523, -4.50065, -15.4723, 1.77 ) }
    dend_3 { pt3dadd( 42.5688, -4.63052, -15.2776, 1.77 ) }
    dend_3 { pt3dadd( 44.4447, -4.89709, -14.3733, 0.66 ) }
    dend_3 { pt3dadd( 45.572, -5.04972, -13.7228, 1.47 ) }
    dend_3 { pt3dadd( 46.8463, -5.19431, -13.0213, 1.47 ) }
    dend_3 { pt3dadd( 47.9017, -5.30717, -12.3076, 1.47 ) }
    dend_3 { pt3dadd( 49.2102, -5.43715, -11.1849, 2.28 ) }
    dend_3 { pt3dadd( 55.2962, -6.10806, -4.82938, 2.28 ) }
    dend_3 { pt3dadd( 56.4343, -6.27189, -3.33793, 1.69 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 82/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -222.106, -100.198, -128.03, 0.66 ) }
    dend_46 { pt3dadd( -224.544, -99.4977, -130.852, 0.66 ) }
    dend_46 { pt3dadd( -225.021, -99.4608, -131.279, 0.66 ) }
    dend_46 { pt3dadd( -225.48, -99.4742, -131.598, 0.07 ) }
    dend_46 { pt3dadd( -225.777, -99.4959, -131.762, 0.96 ) }
    dend_46 { pt3dadd( -226.249, -99.5345, -131.953, 1.4 ) }
    dend_46 { pt3dadd( -226.81, -99.508, -132.286, 1.18 ) }
    dend_46 { pt3dadd( -227.512, -99.4689, -132.638, 0.52 ) }
    dend_46 { pt3dadd( -228.3, -99.3701, -133.061, 0.07 ) }
    dend_46 { pt3dadd( -228.812, -99.2777, -133.33, 1.62 ) }
    dend_46 { pt3dadd( -229.782, -99.0878, -133.826, 2.14 ) }
    dend_46 { pt3dadd( -233.621, -98.2177, -135.68, 0.81 ) }
    dend_46 { pt3dadd( -234.492, -97.9957, -136.07, 0.81 ) }
    dend_46 { pt3dadd( -235.266, -97.788, -136.377, 1.25 ) }
    dend_46 { pt3dadd( -236.195, -97.5651, -136.63, 0.07 ) }
    dend_46 { pt3dadd( -236.895, -97.3947, -136.799, 0.07 ) }
    dend_46 { pt3dadd( -237.745, -97.1736, -136.935, 0.07 ) }
    dend_46 { pt3dadd( -238.257, -97.0548, -136.95, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_46 { pt3dadd( -239.072, -96.8692, -137.006, 1.69 ) }
    dend_46 { pt3dadd( -241.193, -96.4057, -137.196, 0.52 ) }
    dend_46 { pt3dadd( -243.582, -95.8715, -137.461, 0.07 ) }
    dend_46 { pt3dadd( -244.768, -95.6466, -137.611, 0.07 ) }
    dend_46 { pt3dadd( -245.529, -95.5326, -137.711, 0.07 ) }
    dend_46 { pt3dadd( -246.136, -95.4516, -137.78, 1.55 ) }
    dend_46 { pt3dadd( -247.348, -95.2906, -137.954, 1.55 ) }
    dend_46 { pt3dadd( -248.971, -95.0332, -138.18, 0.29 ) }
    dend_46 { pt3dadd( -250.111, -94.829, -138.263, 0.29 ) }
    dend_46 { pt3dadd( -251.069, -94.59, -138.4, 0.52 ) }
    dend_46 { pt3dadd( -252.009, -94.2503, -138.567, 1.55 ) }
    dend_46 { pt3dadd( -253.369, -93.6102, -138.839, 1.55 ) }
    dend_46 { pt3dadd( -254.41, -92.9386, -139.292, 0.22 ) }
    dend_46 { pt3dadd( -254.645, -92.7564, -139.43, 1.62 ) }
    dend_46 { pt3dadd( -255.833, -91.7116, -140.251, 0.37 ) }
    dend_46 { pt3dadd( -256.274, -91.3072, -140.594, 0.96 ) }
    dend_46 { pt3dadd( -256.83, -90.8053, -140.995, 1.47 ) }
    dend_46 { pt3dadd( -259.523, -88.655, -142.845, 1.11 ) }
    dend_46 { pt3dadd( -260.315, -88.0892, -143.385, 0.15 ) }
    dend_46 { pt3dadd( -260.587, -87.9197, -143.548, 0.74 ) }
    dend_46 { pt3dadd( -260.876, -87.7671, -143.685, 1.55 ) }
    dend_46 { pt3dadd( -262.418, -87.0513, -144.395, 1.55 ) }
    dend_46 { pt3dadd( -265.101, -86.1013, -145.49, 0.52 ) }
    dend_46 { pt3dadd( -265.977, -85.8691, -145.765, 1.33 ) }
    dend_46 { pt3dadd( -266.739, -85.6916, -146.034, 0.74 ) }
    dend_46 { pt3dadd( -267.685, -85.4509, -146.574, 0.15 ) }
    dend_46 { pt3dadd( -269.532, -84.9345, -147.868, 0.15 ) }
    dend_46 { pt3dadd( -270.465, -84.6103, -148.606, 0.15 ) }
    dend_46 { pt3dadd( -271.217, -84.3292, -149.214, 1.62 ) }
    dend_46 { pt3dadd( -272.006, -84.0193, -149.929, 1.62 ) }
    dend_46 { pt3dadd( -275.164, -82.653, -153.096, 0.37 ) }
    dend_46 { pt3dadd( -275.716, -82.3969, -153.703, 1.62 ) }
    dend_46 { pt3dadd( -276.526, -81.9706, -154.605, 0.07 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 33/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -66.4982, -108.121, -20.5406, 1.11 ) }
    dend_42 { pt3dadd( -68.284, -108.802, -20.5543, 1.11 ) }
    dend_42 { pt3dadd( -69.4876, -109.23, -20.6624, 1.55 ) }
    dend_42 { pt3dadd( -70.6191, -109.616, -20.8071, 1.55 ) }
    dend_42 { pt3dadd( -71.5425, -109.943, -20.9464, 0.52 ) }
    dend_42 { pt3dadd( -71.9628, -110.091, -21.0136, 0.52 ) }
    dend_42 { pt3dadd( -73.0096, -110.448, -21.1834, 1.69 ) }
    dend_42 { pt3dadd( -74.4254, -110.892, -21.4706, 1.03 ) }
    dend_42 { pt3dadd( -75.0496, -111.12, -21.6132, 0.15 ) }
    dend_42 { pt3dadd( -75.5092, -111.331, -21.7096, 0.15 ) }
    dend_42 { pt3dadd( -76.1725, -111.707, -21.8185, 0.15 ) }
    dend_42 { pt3dadd( -76.5316, -111.931, -21.8507, 0.15 ) }
    dend_42 { pt3dadd( -77.0539, -112.262, -21.8589, 0.15 ) }
    dend_42 { pt3dadd( -77.9985, -112.8, -21.9998, 1.55 ) }
    dend_42 { pt3dadd( -78.9533, -113.286, -22.2717, 1.55 ) }
    dend_42 { pt3dadd( -79.8361, -113.706, -22.6051, 0.81 ) }
    dend_42 { pt3dadd( -81.1696, -114.326, -23.2084, 0.81 ) }
    dend_42 { pt3dadd( -81.8852, -114.634, -23.5706, 0.66 ) }
    dend_42 { pt3dadd( -84.6338, -115.629, -25.0298, 0.07 ) }
    dend_42 { pt3dadd( -85.1411, -115.792, -25.3061, 0.81 ) }
    dend_42 { pt3dadd( -85.5865, -115.941, -25.5574, 1.18 ) }
    dend_42 { pt3dadd( -86.1373, -116.159, -25.8495, 0.81 ) }
    dend_42 { pt3dadd( -87.1187, -116.602, -26.2654, 0.29 ) }
    dend_42 { pt3dadd( -87.9571, -117.019, -26.501, 0.29 ) }
    dend_42 { pt3dadd( -88.8571, -117.493, -26.6069, 1.77 ) }
    dend_42 { pt3dadd( -89.5901, -117.894, -26.689, 1.77 ) }
    dend_42 { pt3dadd( -90.355, -118.356, -26.7739, 1.11 ) }
    dend_42 { pt3dadd( -91.6588, -119.25, -26.9174, 0.29 ) }
    dend_42 { pt3dadd( -91.9947, -119.513, -26.9539, 0.07 ) }
    dend_42 { pt3dadd( -92.7031, -120.172, -27.0508, 1.69 ) }
    dend_42 { pt3dadd( -93.6414, -121.196, -27.204, 1.69 ) }
    dend_42 { pt3dadd( -94.6436, -122.486, -27.4009, 0.29 ) }
    dend_42 { pt3dadd( -95.0347, -123.081, -27.4935, 0.96 ) }
    dend_42 { pt3dadd( -95.3826, -123.726, -27.5937, 0.96 ) }
    dend_42 { pt3dadd( -96.2803, -125.646, -27.897, 0.22 ) }
    dend_42 { pt3dadd( -96.6769, -126.686, -28.0641, 0.07 ) }
    dend_42 { pt3dadd( -96.8153, -127.15, -28.1404, 0.07 ) }
    dend_42 { pt3dadd( -97.0766, -128.157, -28.3079, 0.07 ) }
    dend_42 { pt3dadd( -97.2408, -128.853, -28.4261, 1.62 ) }
    dend_42 { pt3dadd( -97.4602, -129.946, -28.6108, 1.62 ) }
    dend_42 { pt3dadd( -97.6074, -130.898, -28.7699, 1.4 ) }
    dend_42 { pt3dadd( -97.813, -132.176, -28.9912, 0.81 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 75/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -66.4982, -108.121, -20.5406, 0.88 ) }
    dend_41 { pt3dadd( -66.9559, -108.824, -20.6638, 0.88 ) }
    dend_41 { pt3dadd( -67.2885, -109.443, -20.71, 0.66 ) }
    dend_41 { pt3dadd( -67.5907, -110.048, -20.7292, 1.18 ) }
    dend_41 { pt3dadd( -67.964, -110.753, -20.7229, 1.18 ) }
    dend_41 { pt3dadd( -68.0324, -110.876, -20.7184, 1.47 ) }
    dend_41 { pt3dadd( -68.3645, -111.467, -20.6937, 1.47 ) }
    dend_41 { pt3dadd( -68.931, -112.568, -20.6343, 0.22 ) }
    dend_41 { pt3dadd( -69.1668, -113.102, -20.6155, 0.22 ) }
    dend_41 { pt3dadd( -69.3425, -113.631, -20.6359, 0.22 ) }
    dend_41 { pt3dadd( -69.403, -113.86, -20.6629, 0.22 ) }
    dend_41 { pt3dadd( -69.5097, -114.326, -20.7513, 0.74 ) }
    dend_41 { pt3dadd( -69.6379, -114.995, -20.931, 1.55 ) }
    dend_41 { pt3dadd( -69.7307, -115.541, -21.1215, 1.55 ) }
    dend_41 { pt3dadd( -69.7722, -116.664, -21.1544, 0.88 ) }
    dend_41 { pt3dadd( -69.7559, -117.333, -21.0654, 0.22 ) }
    dend_41 { pt3dadd( -69.7444, -117.853, -20.9803, 0.15 ) }
    dend_41 { pt3dadd( -69.7389, -118.316, -20.8876, 0.15 ) }
    dend_41 { pt3dadd( -69.7387, -119.065, -20.7164, 1.25 ) }
    dend_41 { pt3dadd( -69.7593, -122.997, -19.7245, 1.62 ) }
    dend_41 { pt3dadd( -69.7603, -123.687, -19.5467, 1.62 ) }
    dend_41 { pt3dadd( -69.7514, -125.05, -19.2598, 0.66 ) }
    dend_41 { pt3dadd( -69.7612, -125.437, -19.2054, 0.66 ) }
    dend_41 { pt3dadd( -69.8127, -125.955, -19.1939, 0.66 ) }
    dend_41 { pt3dadd( -69.853, -126.142, -19.231, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_41 { pt3dadd( -70.0649, -126.72, -19.5042, 1.33 ) }
    dend_41 { pt3dadd( -70.2778, -127.304, -19.7277, 1.33 ) }
    dend_41 { pt3dadd( -70.4892, -127.892, -19.8983, 0.52 ) }
    dend_41 { pt3dadd( -70.7169, -128.515, -20.0773, 0.52 ) }
    dend_41 { pt3dadd( -70.9484, -129.109, -20.2428, 0.52 ) }
    dend_41 { pt3dadd( -71.1497, -129.552, -20.3547, 0.96 ) }
    dend_41 { pt3dadd( -71.5364, -130.288, -20.5198, 0.96 ) }
    dend_41 { pt3dadd( -71.8392, -130.822, -20.631, 0.44 ) }
    dend_41 { pt3dadd( -72.2893, -131.596, -20.7842, 0.44 ) }
    dend_41 { pt3dadd( -72.4976, -131.952, -20.8529, 0.44 ) }
    dend_41 { pt3dadd( -72.9322, -132.709, -21.0007, 0.44 ) }
    dend_41 { pt3dadd( -73.1352, -133.088, -21.0801, 0.44 ) }
    dend_41 { pt3dadd( -73.3914, -133.609, -21.1979, 1.33 ) }
    dend_41 { pt3dadd( -73.7552, -134.429, -21.3994, 1.77 ) }
    dend_41 { pt3dadd( -74.2185, -135.572, -21.6941, 1.77 ) }
    dend_41 { pt3dadd( -74.5825, -136.528, -21.9491, 0.88 ) }
    dend_41 { pt3dadd( -74.8456, -137.253, -22.1467, 0.74 ) }
    dend_41 { pt3dadd( -75.2067, -138.202, -22.3992, 0.74 ) }
    dend_41 { pt3dadd( -75.3751, -138.613, -22.5058, 0.74 ) }
    dend_41 { pt3dadd( -75.693, -139.337, -22.6888, 0.74 ) }
    dend_41 { pt3dadd( -76.0433, -140.084, -22.8713, 0.44 ) }
    dend_41 { pt3dadd( -76.313, -140.628, -23.0, 0.96 ) }
    dend_41 { pt3dadd( -76.641, -141.268, -23.1493, 1.99 ) }
    dend_41 { pt3dadd( -77.0449, -142.078, -23.3446, 1.18 ) }
    dend_41 { pt3dadd( -77.3577, -142.732, -23.5093, 0.66 ) }
    dend_41 { pt3dadd( -77.6804, -143.437, -23.7037, 0.66 ) }
    dend_41 { pt3dadd( -78.0392, -144.265, -23.9469, 0.66 ) }
    dend_41 { pt3dadd( -78.3135, -144.811, -24.1862, 1.18 ) }
    dend_41 { pt3dadd( -78.8229, -145.671, -24.6792, 1.18 ) }
    dend_41 { pt3dadd( -79.1463, -146.163, -25.015, 1.18 ) }
    dend_41 { pt3dadd( -79.4655, -146.615, -25.3535, 0.59 ) }
    dend_41 { pt3dadd( -79.8034, -147.061, -25.7042, 0.59 ) }
    dend_41 { pt3dadd( -81.1524, -148.72, -27.1263, 0.59 ) }
    dend_41 { pt3dadd( -81.8466, -149.509, -27.8592, 2.14 ) }
    dend_41 { pt3dadd( -82.3884, -150.073, -28.4302, 0.81 ) }
    dend_41 { pt3dadd( -82.8818, -150.575, -28.9558, 0.66 ) }
    dend_41 { pt3dadd( -83.2524, -150.96, -29.34, 0.66 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 37/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 56.4343, -6.27189, -3.33793, 1.69 ) }
    dend_4 { pt3dadd( 57.1327, -6.14413, -3.6137, 1.69 ) }
    dend_4 { pt3dadd( 57.9206, -6.17335, -4.00238, 1.4 ) }
    dend_4 { pt3dadd( 58.368, -6.18994, -4.2231, 1.4 ) }
    dend_4 { pt3dadd( 59.46, -6.23045, -4.76186, 0.74 ) }
    dend_4 { pt3dadd( 60.1587, -6.25637, -5.10653, 0.74 ) }
    dend_4 { pt3dadd( 60.4733, -6.26804, -5.26177, 0.74 ) }
    dend_4 { pt3dadd( 61.0589, -6.55802, -5.77174, 0.74 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 45/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -276.526, -81.9706, -154.605, 0.29 ) }
    dend_48 { pt3dadd( -277.949, -82.0939, -154.679, 0.29 ) }
    dend_48 { pt3dadd( -278.264, -82.1128, -154.704, 1.11 ) }
    dend_48 { pt3dadd( -279.177, -82.1638, -154.851, 1.11 ) }
    dend_48 { pt3dadd( -279.924, -82.2236, -154.997, 0.37 ) }
    dend_48 { pt3dadd( -280.945, -82.3198, -155.201, 1.84 ) }
    dend_48 { pt3dadd( -282.773, -82.4583, -155.797, 0.07 ) }
    dend_48 { pt3dadd( -283.16, -82.4725, -155.942, 1.18 ) }
    dend_48 { pt3dadd( -284.175, -82.5133, -156.349, 1.18 ) }
    dend_48 { pt3dadd( -285.138, -82.5758, -156.763, 0.44 ) }
    dend_48 { pt3dadd( -285.946, -82.632, -157.138, 1.33 ) }
    dend_48 { pt3dadd( -288.399, -82.6995, -158.352, 1.25 ) }
    dend_48 { pt3dadd( -289.56, -82.7182, -158.873, 0.29 ) }
    dend_48 { pt3dadd( -290.524, -82.7068, -159.254, 0.29 ) }
    dend_48 { pt3dadd( -291.255, -82.6858, -159.479, 0.29 ) }
    dend_48 { pt3dadd( -292.138, -82.6013, -159.724, 1.4 ) }
    dend_48 { pt3dadd( -294.41, -82.4042, -160.26, 0.66 ) }
    dend_48 { pt3dadd( -295.999, -82.2652, -160.551, 0.66 ) }
    dend_48 { pt3dadd( -296.777, -82.1813, -160.723, 0.88 ) }
    dend_48 { pt3dadd( -298.301, -82.0039, -161.064, 0.88 ) }
    dend_48 { pt3dadd( -300.259, -81.7379, -161.454, 0.44 ) }
    dend_48 { pt3dadd( -301.694, -81.5836, -161.657, 0.44 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 67/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -276.526, -81.9706, -154.605, 0.07 ) }
    dend_47 { pt3dadd( -276.512, -80.8435, -153.122, 0.07 ) }
    dend_47 { pt3dadd( -276.502, -79.937, -151.929, 0.07 ) }
    dend_47 { pt3dadd( -276.479, -78.049, -149.446, 0.88 ) }
    dend_47 { pt3dadd( -276.471, -77.3357, -148.507, 0.59 ) }
    dend_47 { pt3dadd( -276.461, -76.5713, -147.502, 1.18 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 73/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -97.813, -132.176, -28.9912, 0.88 ) }
    dend_44 { pt3dadd( -99.4619, -133.136, -29.4636, 0.88 ) }
    dend_44 { pt3dadd( -100.162, -133.575, -29.6458, 0.88 ) }
    dend_44 { pt3dadd( -100.766, -134.016, -29.8015, 0.44 ) }
    dend_44 { pt3dadd( -101.31, -134.445, -29.9179, 0.15 ) }
    dend_44 { pt3dadd( -101.703, -134.79, -30.0014, 0.15 ) }
    dend_44 { pt3dadd( -102.039, -135.1, -30.0713, 0.15 ) }
    dend_44 { pt3dadd( -102.154, -135.197, -30.1256, 0.15 ) }
    dend_44 { pt3dadd( -102.737, -135.603, -30.5563, 1.4 ) }
    dend_44 { pt3dadd( -103.476, -136.158, -31.2763, 1.4 ) }
    dend_44 { pt3dadd( -103.979, -136.522, -31.8136, 1.4 ) }
    dend_44 { pt3dadd( -104.113, -136.616, -31.9696, 1.4 ) }
    dend_44 { pt3dadd( -106.487, -138.172, -34.9187, 0.74 ) }
    dend_44 { pt3dadd( -107.222, -138.61, -35.8898, 0.44 ) }
    dend_44 { pt3dadd( -108.029, -139.016, -37.0789, 0.44 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 88/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -97.813, -132.176, -28.9912, 0.22 ) }
    dend_43 { pt3dadd( -97.9128, -133.185, -29.336, 0.22 ) }
    dend_43 { pt3dadd( -98.0102, -134.07, -29.6212, 0.22 ) }
    dend_43 { pt3dadd( -98.1285, -135.269, -29.9743, 0.22 ) }
    dend_43 { pt3dadd( -98.2043, -136.07, -30.1966, 1.4 ) }
    dend_43 { pt3dadd( -98.3321, -137.556, -30.5832, 0.15 ) }
    dend_43 { pt3dadd( -98.3757, -138.083, -30.7131, 0.15 ) }
    dend_43 { pt3dadd( -98.4575, -139.125, -30.9307, 0.81 ) }
    dend_43 { pt3dadd( -98.4935, -139.844, -31.0684, 0.07 ) }
    dend_43 { pt3dadd( -98.4984, -140.154, -31.1234, 0.07 ) }
    dend_43 { pt3dadd( -98.5164, -140.828, -31.2225, 0.59 ) }
    dend_43 { pt3dadd( -98.5098, -141.263, -31.2504, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_43 { pt3dadd( -98.501, -141.504, -31.2655, 0.29 ) }
    dend_43 { pt3dadd( -98.382, -142.974, -31.3593, 1.69 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 2/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 61.0589, -6.55802, -5.77174, 1.84 ) }
    dend_5 { pt3dadd( 63.356, -6.65754, -6.0713, 1.84 ) }
    dend_5 { pt3dadd( 64.8525, -6.72447, -6.20737, 1.84 ) }
    dend_5 { pt3dadd( 66.4662, -6.81877, -6.31776, 1.47 ) }
    dend_5 { pt3dadd( 67.7205, -6.8989, -6.38127, 1.11 ) }
    dend_5 { pt3dadd( 69.0317, -7.01169, -6.43538, 1.25 ) }
    dend_5 { pt3dadd( 70.4833, -7.18204, -6.48715, 1.55 ) }
    dend_5 { pt3dadd( 71.9876, -7.41947, -6.47044, 1.33 ) }
    dend_5 { pt3dadd( 73.2871, -7.64494, -6.46051, 1.33 ) }
    dend_5 { pt3dadd( 74.7425, -7.90981, -6.45212, 1.77 ) }
    dend_5 { pt3dadd( 76.3187, -8.18303, -6.44001, 2.06 ) }
    dend_5 { pt3dadd( 78.4989, -8.50135, -6.41007, 1.47 ) }
    dend_5 { pt3dadd( 79.9245, -8.62395, -6.37156, 1.47 ) }
    dend_5 { pt3dadd( 81.4581, -8.63214, -6.30273, 1.47 ) }
    dend_5 { pt3dadd( 83.0489, -8.52022, -6.20467, 1.11 ) }
    dend_5 { pt3dadd( 84.487, -8.35696, -6.10228, 1.11 ) }
    dend_5 { pt3dadd( 85.694, -8.19567, -5.96704, 1.11 ) }
    dend_5 { pt3dadd( 87.3125, -7.99437, -5.73802, 1.11 ) }
    dend_5 { pt3dadd( 88.8413, -7.89892, -5.50626, 1.11 ) }
    dend_5 { pt3dadd( 91.0137, -7.81249, -5.15672, 1.11 ) }
    dend_5 { pt3dadd( 92.5962, -7.82676, -4.89208, 1.11 ) }
    dend_5 { pt3dadd( 94.4079, -7.98805, -4.58741, 1.77 ) }
    dend_5 { pt3dadd( 95.785, -8.24664, -4.35837, 1.92 ) }
    dend_5 { pt3dadd( 97.6924, -8.82647, -4.03711, 2.87 ) }
    // Section: dend_10, id: dend_10, parent: dend_5 (entry count 26/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 97.6924, -8.82647, -4.03711, 1.03 ) }
    dend_10 { pt3dadd( 99.6855, -9.68211, -4.6522, 1.03 ) }
    dend_10 { pt3dadd( 100.124, -9.8604, -4.79539, 1.03 ) }
    dend_10 { pt3dadd( 100.644, -10.091, -4.96181, 1.03 ) }
    dend_10 { pt3dadd( 101.437, -10.4746, -5.20824, 1.03 ) }
    dend_10 { pt3dadd( 102.508, -11.0769, -5.5117, 1.03 ) }
    dend_10 { pt3dadd( 103.307, -11.5869, -5.72591, 0.96 ) }
    dend_10 { pt3dadd( 104.045, -12.1179, -5.98441, 0.96 ) }
    dend_10 { pt3dadd( 104.607, -12.6368, -6.15862, 1.18 ) }
    dend_10 { pt3dadd( 105.044, -13.1026, -6.26775, 1.18 ) }
    dend_10 { pt3dadd( 105.617, -13.7094, -6.412, 0.96 ) }
    dend_10 { pt3dadd( 106.125, -14.221, -6.53658, 0.96 ) }
    dend_10 { pt3dadd( 106.677, -14.7375, -6.67721, 0.74 ) }
    dend_10 { pt3dadd( 107.598, -15.5242, -6.91065, 0.74 ) }
    dend_10 { pt3dadd( 108.559, -16.2836, -7.15056, 0.74 ) }
    dend_10 { pt3dadd( 113.133, -19.5331, -8.39118, 0.74 ) }
    dend_10 { pt3dadd( 114.237, -20.2628, -8.72429, 0.74 ) }
    dend_10 { pt3dadd( 114.91, -20.6884, -8.93753, 1.18 ) }
    dend_10 { pt3dadd( 115.331, -20.9415, -9.07589, 1.84 ) }
    dend_10 { pt3dadd( 115.627, -21.1121, -9.1842, 2.21 ) }
    dend_10 { pt3dadd( 117.921, -22.4814, -10.023, 0.66 ) }
    dend_10 { pt3dadd( 119.02, -23.1415, -10.2971, 0.66 ) }
    dend_10 { pt3dadd( 119.548, -23.5012, -10.3459, 1.11 ) }
    dend_10 { pt3dadd( 119.891, -23.7597, -10.3168, 1.47 ) }
    dend_10 { pt3dadd( 120.842, -24.5493, -10.0508, 1.03 ) }
    dend_10 { pt3dadd( 122.185, -25.759, -9.38061, 1.11 ) }
    dend_10 { pt3dadd( 123.904, -27.4413, -8.09079, 0.81 ) }
    dend_10 { pt3dadd( 124.314, -27.8288, -7.78859, 0.81 ) }
    dend_10 { pt3dadd( 124.644, -28.124, -7.5847, 0.81 ) }
    dend_10 { pt3dadd( 125.117, -28.5203, -7.36069, 0.81 ) }
    dend_10 { pt3dadd( 125.844, -29.028, -7.13731, 1.11 ) }
    dend_10 { pt3dadd( 126.804, -29.5477, -7.07919, 1.77 ) }
    dend_10 { pt3dadd( 127.608, -29.9017, -7.10556, 1.33 ) }
    dend_10 { pt3dadd( 128.62, -30.2766, -7.11017, 0.96 ) }
    dend_10 { pt3dadd( 129.438, -30.5092, -7.02296, 0.96 ) }
    dend_10 { pt3dadd( 130.626, -30.749, -6.84414, 1.4 ) }
    dend_10 { pt3dadd( 131.56, -30.8888, -6.67097, 1.4 ) }
    dend_10 { pt3dadd( 132.347, -30.9632, -6.49117, 0.52 ) }
    dend_10 { pt3dadd( 132.767, -30.9871, -6.37498, 0.52 ) }
    dend_10 { pt3dadd( 134.793, -31.0599, -5.68238, 1.92 ) }
    dend_10 { pt3dadd( 135.941, -31.0953, -5.19833, 1.92 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 67/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 97.6924, -8.82647, -4.03711, 0.96 ) }
    dend_6 { pt3dadd( 98.5858, -8.7915, -3.98821, 0.96 ) }
    dend_6 { pt3dadd( 99.2828, -8.71181, -3.93847, 0.96 ) }
    dend_6 { pt3dadd( 99.9431, -8.56767, -3.87613, 0.96 ) }
    dend_6 { pt3dadd( 100.326, -8.41492, -3.82465, 0.66 ) }
    dend_6 { pt3dadd( 100.435, -8.35346, -3.80603, 0.66 ) }
    dend_6 { pt3dadd( 100.63, -8.21461, -3.76629, 0.66 ) }
    dend_6 { pt3dadd( 100.958, -7.86623, -3.67407, 1.25 ) }
    dend_6 { pt3dadd( 101.251, -7.47954, -3.57492, 1.69 ) }
    dend_6 { pt3dadd( 101.729, -6.82261, -3.40747, 1.69 ) }
    dend_6 { pt3dadd( 101.993, -6.48542, -3.32065, 1.69 ) }
    dend_6 { pt3dadd( 102.355, -6.08471, -3.21521, 0.74 ) }
    dend_6 { pt3dadd( 102.6, -5.87797, -3.15814, 0.74 ) }
    dend_6 { pt3dadd( 102.955, -5.70275, -3.10301, 0.74 ) }
    dend_6 { pt3dadd( 103.372, -5.6226, -3.06608, 0.74 ) }
    dend_6 { pt3dadd( 103.664, -5.62725, -3.05362, 0.74 ) }
    dend_6 { pt3dadd( 104.069, -5.66092, -3.07756, 0.74 ) }
    dend_6 { pt3dadd( 104.606, -5.73642, -3.14909, 0.74 ) }
    dend_6 { pt3dadd( 104.98, -5.80499, -3.22058, 0.74 ) }
    dend_6 { pt3dadd( 105.409, -5.90126, -3.32742, 0.74 ) }
    dend_6 { pt3dadd( 105.739, -5.97396, -3.4225, 0.74 ) }
    dend_6 { pt3dadd( 106.605, -6.09273, -3.68141, 0.74 ) }
    dend_6 { pt3dadd( 106.869, -6.0783, -3.77774, 0.74 ) }
    dend_6 { pt3dadd( 107.103, -6.01253, -3.8696, 0.74 ) }
    dend_6 { pt3dadd( 107.344, -5.89029, -3.94805, 0.74 ) }
    dend_6 { pt3dadd( 107.731, -5.62339, -4.03273, 0.74 ) }
    dend_6 { pt3dadd( 108.346, -5.16889, -4.10287, 0.74 ) }
    dend_6 { pt3dadd( 109.109, -4.59223, -4.12061, 1.18 ) }
    dend_6 { pt3dadd( 109.538, -4.29329, -4.12084, 1.92 ) }
    dend_6 { pt3dadd( 110.26, -3.82879, -4.10929, 1.92 ) }
    dend_6 { pt3dadd( 110.88, -3.47823, -4.09105, 1.03 ) }
    dend_6 { pt3dadd( 111.443, -3.22201, -4.06789, 0.74 ) }
    dend_6 { pt3dadd( 111.852, -3.11468, -4.04762, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_6 { pt3dadd( 112.567, -3.06328, -3.99693, 0.66 ) }
    dend_6 { pt3dadd( 112.783, -3.09029, -3.99249, 0.44 ) }
    dend_6 { pt3dadd( 113.23, -3.24405, -4.00888, 1.4 ) }
    dend_6 { pt3dadd( 113.47, -3.36198, -4.02755, 1.84 ) }
    dend_6 { pt3dadd( 114.112, -3.69984, -4.08745, 1.18 ) }
    dend_6 { pt3dadd( 114.595, -3.94424, -4.13084, 0.81 ) }
    dend_6 { pt3dadd( 114.993, -4.10173, -4.15663, 0.81 ) }
    dend_6 { pt3dadd( 115.331, -4.19269, -4.16818, 0.81 ) }
    dend_6 { pt3dadd( 115.737, -4.25914, -4.17135, 0.81 ) }
    dend_6 { pt3dadd( 116.491, -4.3342, -4.16409, 1.62 ) }
    dend_6 { pt3dadd( 117.153, -4.36827, -4.14812, 1.62 ) }
    dend_6 { pt3dadd( 117.837, -4.3991, -4.12742, 0.81 ) }
    dend_6 { pt3dadd( 118.343, -4.42059, -4.10886, 0.59 ) }
    dend_6 { pt3dadd( 118.766, -4.43848, -4.09337, 0.59 ) }
    dend_6 { pt3dadd( 119.184, -4.45367, -4.07744, 0.96 ) }
    dend_6 { pt3dadd( 119.733, -4.4562, -4.05273, 0.96 ) }
    dend_6 { pt3dadd( 120.161, -4.432, -4.02765, 0.66 ) }
    dend_6 { pt3dadd( 120.628, -4.35365, -3.98878, 0.96 ) }
    dend_6 { pt3dadd( 121.033, -4.1994, -3.93598, 0.96 ) }
    dend_6 { pt3dadd( 121.407, -3.99542, -3.87359, 0.96 ) }
    dend_6 { pt3dadd( 121.76, -3.77814, -3.80923, 0.96 ) }
    dend_6 { pt3dadd( 121.938, -3.66067, -3.775, 0.96 ) }
    dend_6 { pt3dadd( 122.411, -3.37543, -3.69006, 0.96 ) }
    dend_6 { pt3dadd( 122.809, -3.20174, -3.63329, 0.96 ) }
    dend_6 { pt3dadd( 123.094, -3.13219, -3.60476, 0.96 ) }
    dend_6 { pt3dadd( 123.523, -3.11, -3.5801, 0.96 ) }
    dend_6 { pt3dadd( 123.653, -3.12045, -3.57639, 0.96 ) }
    dend_6 { pt3dadd( 123.991, -3.17019, -3.57182, 0.96 ) }
    dend_6 { pt3dadd( 124.328, -3.22881, -3.5693, 0.96 ) }
    dend_6 { pt3dadd( 124.536, -3.26125, -3.56689, 0.96 ) }
    dend_6 { pt3dadd( 124.912, -3.28161, -3.55408, 0.96 ) }
    dend_6 { pt3dadd( 125.067, -3.26896, -3.54418, 0.96 ) }
    dend_6 { pt3dadd( 125.389, -3.20707, -3.51564, 1.25 ) }
    dend_6 { pt3dadd( 125.784, -3.0696, -3.44869, 1.25 ) }
    dend_6 { pt3dadd( 125.826, -3.04976, -3.43885, 1.55 ) }
    dend_6 { pt3dadd( 126.044, -2.94541, -3.38515, 1.55 ) }
    dend_6 { pt3dadd( 126.454, -2.78593, -3.29202, 1.55 ) }
    dend_6 { pt3dadd( 126.533, -2.76464, -3.27666, 1.55 ) }
    dend_6 { pt3dadd( 127.181, -2.6724, -3.173, 0.81 ) }
    dend_6 { pt3dadd( 127.656, -2.65777, -3.11347, 0.81 ) }
    dend_6 { pt3dadd( 128.442, -2.7037, -3.04027, 0.81 ) }
    dend_6 { pt3dadd( 129.137, -2.80136, -3.03856, 0.96 ) }
    dend_6 { pt3dadd( 129.591, -2.89041, -3.06804, 1.18 ) }
    dend_6 { pt3dadd( 130.072, -2.99835, -3.12356, 1.47 ) }
    dend_6 { pt3dadd( 130.56, -3.12488, -3.2099, 1.4 ) }
    dend_6 { pt3dadd( 131.123, -3.27595, -3.33283, 1.03 ) }
    dend_6 { pt3dadd( 132.002, -3.47825, -3.56569, 0.15 ) }
    dend_6 { pt3dadd( 132.33, -3.51078, -3.65953, 0.15 ) }
    dend_6 { pt3dadd( 132.5, -3.50195, -3.70697, 0.44 ) }
    dend_6 { pt3dadd( 132.976, -3.38449, -3.80347, 0.44 ) }
    dend_6 { pt3dadd( 133.144, -3.30986, -3.83179, 0.44 ) }
    dend_6 { pt3dadd( 133.438, -3.16237, -3.86481, 0.44 ) }
    dend_6 { pt3dadd( 133.694, -3.02987, -3.87452, 0.74 ) }
    dend_6 { pt3dadd( 134.072, -2.8281, -3.88332, 1.11 ) }
    dend_6 { pt3dadd( 134.594, -2.55423, -3.88887, 1.55 ) }
    dend_6 { pt3dadd( 135.672, -2.03831, -3.89476, 0.88 ) }
    dend_6 { pt3dadd( 136.185, -1.82181, -3.89612, 0.88 ) }
    dend_6 { pt3dadd( 137.069, -1.47646, -3.91613, 1.69 ) }
    dend_6 { pt3dadd( 137.66, -1.2672, -3.93609, 0.88 ) }
    dend_6 { pt3dadd( 138.094, -1.14555, -3.95565, 0.88 ) }
    dend_6 { pt3dadd( 138.641, -1.03667, -3.97999, 0.88 ) }
    dend_6 { pt3dadd( 139.44, -0.927595, -3.9982, 0.88 ) }
    dend_6 { pt3dadd( 140.087, -0.842525, -4.01744, 1.47 ) }
    dend_6 { pt3dadd( 140.62, -0.761347, -4.02941, 1.47 ) }
    dend_6 { pt3dadd( 141.232, -0.625561, -4.02575, 1.11 ) }
    dend_6 { pt3dadd( 141.913, -0.392735, -3.99144, 1.25 ) }
    dend_6 { pt3dadd( 142.616, -0.108917, -3.9288, 1.25 ) }
    dend_6 { pt3dadd( 143.056, 0.0887485, -3.87513, 1.25 ) }
    dend_6 { pt3dadd( 143.904, 0.455911, -3.75475, 0.66 ) }
    dend_6 { pt3dadd( 144.65, 0.766101, -3.65169, 1.4 ) }
    dend_6 { pt3dadd( 145.385, 1.08126, -3.54806, 0.96 ) }
    dend_6 { pt3dadd( 146.721, 1.64603, -3.36148, 0.59 ) }
    dend_6 { pt3dadd( 147.118, 1.8094, -3.30702, 0.59 ) }
    dend_6 { pt3dadd( 147.97, 2.1766, -3.21728, 0.59 ) }
    dend_6 { pt3dadd( 148.369, 2.35114, -3.18804, 0.59 ) }
    dend_6 { pt3dadd( 149.26, 2.73785, -3.15069, 0.59 ) }
    dend_6 { pt3dadd( 149.886, 2.98971, -3.14574, 1.03 ) }
    dend_6 { pt3dadd( 150.259, 3.13055, -3.19456, 1.03 ) }
    dend_6 { pt3dadd( 151.28, 3.49699, -3.43457, 1.03 ) }
    dend_6 { pt3dadd( 151.82, 3.69044, -3.61075, 1.03 ) }
    dend_6 { pt3dadd( 152.322, 3.8364, -3.79617, 1.4 ) }
    dend_6 { pt3dadd( 152.996, 3.96742, -4.03871, 1.4 ) }
    dend_6 { pt3dadd( 154.522, 4.20731, -4.55006, 0.44 ) }
    dend_6 { pt3dadd( 155.291, 4.29865, -4.76865, 0.44 ) }
    dend_6 { pt3dadd( 155.566, 4.31925, -4.82889, 0.74 ) }
    dend_6 { pt3dadd( 156.562, 4.39008, -5.00325, 0.74 ) }
    dend_6 { pt3dadd( 157.808, 4.42499, -5.22554, 0.74 ) }
    dend_6 { pt3dadd( 157.984, 4.41673, -5.25355, 1.18 ) }
    dend_6 { pt3dadd( 158.813, 4.29185, -5.37736, 1.18 ) }
    dend_6 { pt3dadd( 159.376, 4.13947, -5.51185, 1.18 ) }
    dend_6 { pt3dadd( 159.682, 4.04206, -5.62876, 1.18 ) }
    dend_6 { pt3dadd( 160.577, 3.71862, -6.08526, 0.29 ) }
    dend_6 { pt3dadd( 161.009, 3.56475, -6.32856, 0.29 ) }
    dend_6 { pt3dadd( 161.612, 3.39311, -6.64273, 1.62 ) }
    dend_6 { pt3dadd( 162.191, 3.29745, -6.90104, 1.62 ) }
    dend_6 { pt3dadd( 163.246, 3.25208, -7.26604, 0.88 ) }
    dend_6 { pt3dadd( 164.194, 3.31205, -7.4896, 0.88 ) }
    dend_6 { pt3dadd( 164.77, 3.40574, -7.56254, 0.88 ) }
    dend_6 { pt3dadd( 165.51, 3.58407, -7.60268, 0.88 ) }
    dend_6 { pt3dadd( 166.427, 3.84417, -7.58985, 2.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_6 { pt3dadd( 167.139, 4.07545, -7.54709, 2.36 ) }
    dend_6 { pt3dadd( 168.007, 4.35896, -7.44676, 1.18 ) }
    dend_6 { pt3dadd( 168.718, 4.60879, -7.35999, 1.69 ) }
    dend_6 { pt3dadd( 169.564, 4.88949, -7.25894, 0.07 ) }
    dend_6 { pt3dadd( 169.938, 4.99438, -7.21759, 0.07 ) }
    dend_6 { pt3dadd( 170.238, 5.05119, -7.18943, 0.07 ) }
    dend_6 { pt3dadd( 170.863, 5.11253, -7.14063, 0.07 ) }
    dend_6 { pt3dadd( 171.012, 5.11784, -7.13029, 0.59 ) }
    dend_6 { pt3dadd( 171.762, 5.11238, -7.09134, 0.88 ) }
    dend_6 { pt3dadd( 172.279, 5.10592, -7.1239, 1.25 ) }
    dend_6 { pt3dadd( 172.768, 5.09136, -7.18237, 0.59 ) }
    dend_6 { pt3dadd( 172.979, 5.08979, -7.21214, 0.59 ) }
    dend_6 { pt3dadd( 173.528, 5.09158, -7.301, 1.33 ) }
    dend_6 { pt3dadd( 174.396, 5.06618, -7.45751, 2.28 ) }
    dend_6 { pt3dadd( 175.633, 4.99284, -7.71334, 0.74 ) }
    dend_6 { pt3dadd( 176.112, 4.97005, -7.86892, 0.74 ) }
    dend_6 { pt3dadd( 176.631, 4.95318, -8.08006, 1.25 ) }
    dend_6 { pt3dadd( 176.982, 4.95289, -8.23847, 1.25 ) }
    dend_6 { pt3dadd( 177.444, 4.98276, -8.45805, 1.25 ) }
    dend_6 { pt3dadd( 177.523, 4.99806, -8.49369, 1.25 ) }
    dend_6 { pt3dadd( 178.959, 5.48605, -9.01346, 0.96 ) }
    dend_6 { pt3dadd( 179.548, 5.74414, -9.20118, 0.96 ) }
    dend_6 { pt3dadd( 179.983, 5.95366, -9.32088, 0.96 ) }
    dend_6 { pt3dadd( 180.512, 6.23099, -9.42309, 0.96 ) }
    dend_6 { pt3dadd( 181.177, 6.58381, -9.49126, 0.96 ) }
    dend_6 { pt3dadd( 181.541, 6.76007, -9.49212, 0.96 ) }
    dend_6 { pt3dadd( 181.879, 6.90534, -9.4444, 0.88 ) }
    dend_6 { pt3dadd( 182.232, 7.01552, -9.40372, 0.88 ) }
    dend_6 { pt3dadd( 182.919, 7.0765, -9.39537, 0.88 ) }
    dend_6 { pt3dadd( 183.297, 7.03356, -9.4265, 0.88 ) }
    dend_6 { pt3dadd( 183.612, 6.96135, -9.47072, 0.88 ) }
    dend_6 { pt3dadd( 183.721, 6.93134, -9.48903, 0.88 ) }
    dend_6 { pt3dadd( 184.273, 6.75959, -9.59117, 0.88 ) }
    dend_6 { pt3dadd( 185.073, 6.49847, -9.74179, 0.88 ) }
    dend_6 { pt3dadd( 185.405, 6.39925, -9.83238, 0.88 ) }
    dend_6 { pt3dadd( 185.963, 6.24033, -10.0104, 0.88 ) }
    dend_6 { pt3dadd( 186.393, 6.12221, -10.1586, 0.88 ) }
    dend_6 { pt3dadd( 186.847, 5.99792, -10.3184, 1.69 ) }
    dend_6 { pt3dadd( 187.313, 5.87408, -10.4838, 1.69 ) }
    dend_6 { pt3dadd( 188.386, 5.58353, -10.8326, 0.74 ) }
    dend_6 { pt3dadd( 188.778, 5.47646, -10.9573, 0.74 ) }
    dend_6 { pt3dadd( 188.955, 5.43567, -11.0099, 0.74 ) }
    dend_6 { pt3dadd( 189.449, 5.37945, -11.1249, 0.74 ) }
    dend_6 { pt3dadd( 189.631, 5.38463, -11.1513, 0.74 ) }
    dend_6 { pt3dadd( 190.361, 5.5081, -11.1739, 0.74 ) }
    dend_6 { pt3dadd( 190.804, 5.64111, -11.1293, 0.74 ) }
    dend_6 { pt3dadd( 191.172, 5.78137, -11.0855, 0.74 ) }
    dend_6 { pt3dadd( 191.773, 6.01227, -11.0129, 0.74 ) }
    dend_6 { pt3dadd( 192.05, 6.11171, -10.9807, 0.74 ) }
    dend_6 { pt3dadd( 192.365, 6.2027, -10.9485, 0.74 ) }
    dend_6 { pt3dadd( 192.941, 6.31971, -10.8994, 1.47 ) }
    dend_6 { pt3dadd( 193.637, 6.36234, -10.8884, 2.43 ) }
    dend_6 { pt3dadd( 194.189, 6.30114, -10.9172, 1.69 ) }
    dend_6 { pt3dadd( 194.56, 6.19335, -10.921, 1.47 ) }
    dend_6 { pt3dadd( 194.961, 6.03407, -10.912, 1.11 ) }
    dend_6 { pt3dadd( 195.229, 5.89774, -10.9012, 1.11 ) }
    dend_6 { pt3dadd( 195.954, 5.46827, -10.8603, 0.15 ) }
    dend_6 { pt3dadd( 196.643, 5.02589, -10.811, 2.36 ) }
    dend_6 { pt3dadd( 197.785, 4.27441, -10.7146, 0.88 ) }
    dend_6 { pt3dadd( 198.172, 4.01499, -10.6785, 0.88 ) }
    dend_6 { pt3dadd( 198.861, 3.52581, -10.6121, 0.88 ) }
    dend_6 { pt3dadd( 199.029, 3.39465, -10.596, 0.88 ) }
    dend_6 { pt3dadd( 199.377, 3.07801, -10.5644, 0.88 ) }
    dend_6 { pt3dadd( 199.711, 2.71529, -10.5721, 0.88 ) }
    dend_6 { pt3dadd( 199.988, 2.35631, -10.6341, 0.52 ) }
    dend_6 { pt3dadd( 200.239, 1.96484, -10.7043, 1.33 ) }
    dend_6 { pt3dadd( 200.469, 1.55312, -10.7801, 1.33 ) }
    dend_6 { pt3dadd( 200.748, 1.02759, -10.8787, 0.37 ) }
    dend_6 { pt3dadd( 200.939, 0.653967, -10.95, 1.33 ) }
    dend_6 { pt3dadd( 201.134, 0.263735, -11.0259, 1.33 ) }
    dend_6 { pt3dadd( 201.227, 0.0727468, -11.064, 1.33 ) }
    dend_6 { pt3dadd( 201.388, -0.245103, -11.1269, 1.33 ) }
    dend_6 { pt3dadd( 201.662, -0.775262, -11.2317, 0.96 ) }
    dend_6 { pt3dadd( 201.831, -1.12051, -11.3003, 0.96 ) }
    dend_6 { pt3dadd( 202.001, -1.53445, -11.3823, 0.29 ) }
    dend_6 { pt3dadd( 202.102, -1.80551, -11.4353, 0.29 ) }
    dend_6 { pt3dadd( 202.143, -1.92571, -11.4587, 0.29 ) }
    dend_6 { pt3dadd( 202.231, -2.20351, -11.5124, 0.88 ) }
    dend_6 { pt3dadd( 202.352, -2.55822, -11.5802, 1.33 ) }
    dend_6 { pt3dadd( 202.497, -2.86973, -11.6378, 1.33 ) }
    dend_6 { pt3dadd( 202.651, -3.10359, -11.6788, 1.33 ) }
    dend_6 { pt3dadd( 203.034, -3.54878, -11.7531, 0.74 ) }
    dend_6 { pt3dadd( 203.32, -3.8134, -11.7952, 0.74 ) }
    dend_6 { pt3dadd( 203.63, -4.03121, -11.827, 0.74 ) }
    dend_6 { pt3dadd( 204.087, -4.29343, -11.8626, 0.74 ) }
    dend_6 { pt3dadd( 204.435, -4.44942, -11.881, 0.74 ) }
    dend_6 { pt3dadd( 204.841, -4.5904, -11.8936, 0.96 ) }
    dend_6 { pt3dadd( 205.474, -4.76353, -11.9027, 1.92 ) }
    dend_6 { pt3dadd( 206.258, -4.96593, -11.9115, 2.43 ) }
    dend_6 { pt3dadd( 206.717, -5.0854, -11.9168, 0.66 ) }
    dend_6 { pt3dadd( 207.497, -5.28455, -11.9249, 0.66 ) }
    dend_6 { pt3dadd( 207.843, -5.37971, -11.93, 0.66 ) }
    dend_6 { pt3dadd( 208.334, -5.52562, -11.9398, 0.66 ) }
    dend_6 { pt3dadd( 208.851, -5.70712, -11.9561, 0.66 ) }
    dend_6 { pt3dadd( 209.119, -5.83179, -11.9714, 0.66 ) }
    dend_6 { pt3dadd( 209.904, -6.29942, -12.0388, 0.66 ) }
    dend_6 { pt3dadd( 210.177, -6.49698, -12.0699, 0.66 ) }
    dend_6 { pt3dadd( 210.563, -6.79086, -12.1172, 0.66 ) }
    dend_6 { pt3dadd( 210.9, -7.04601, -12.1582, 0.66 ) }
    dend_6 { pt3dadd( 211.235, -7.30449, -12.2, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_6 { pt3dadd( 211.741, -7.72488, -12.2698, 1.62 ) }
    dend_6 { pt3dadd( 212.197, -8.11135, -12.3344, 1.62 ) }
    dend_6 { pt3dadd( 212.64, -8.44917, -12.3888, 1.62 ) }
    dend_6 { pt3dadd( 213.105, -8.77361, -12.4392, 1.25 ) }
    dend_6 { pt3dadd( 213.667, -9.13272, -12.4928, 0.88 ) }
    dend_6 { pt3dadd( 214.047, -9.35663, -12.5249, 0.88 ) }
    dend_6 { pt3dadd( 214.496, -9.6138, -12.5612, 1.84 ) }
    dend_6 { pt3dadd( 215.094, -9.91549, -12.7021, 1.03 ) }
    dend_6 { pt3dadd( 215.539, -10.107, -12.8588, 1.03 ) }
    dend_6 { pt3dadd( 216.139, -10.3122, -13.114, 1.03 ) }
    dend_6 { pt3dadd( 216.503, -10.4022, -13.282, 0.74 ) }
    dend_6 { pt3dadd( 217.107, -10.5088, -13.56, 0.74 ) }
    dend_6 { pt3dadd( 218.865, -10.7464, -14.396, 0.74 ) }
    dend_6 { pt3dadd( 219.365, -10.7979, -14.6366, 0.74 ) }
    dend_6 { pt3dadd( 219.628, -10.8231, -14.7554, 0.74 ) }
    dend_6 { pt3dadd( 220.123, -10.8682, -14.9494, 0.74 ) }
    dend_6 { pt3dadd( 220.914, -10.935, -15.1849, 0.74 ) }
    dend_6 { pt3dadd( 221.217, -10.9549, -15.2331, 0.74 ) }
    dend_6 { pt3dadd( 221.522, -10.9643, -15.2472, 0.96 ) }
    dend_6 { pt3dadd( 222.242, -10.9623, -15.3169, 0.96 ) }
    dend_6 { pt3dadd( 222.721, -10.9498, -15.3837, 0.66 ) }
    dend_6 { pt3dadd( 223.103, -10.9164, -15.4495, 1.25 ) }
    dend_6 { pt3dadd( 223.458, -10.8541, -15.514, 1.47 ) }
    dend_6 { pt3dadd( 224.432, -10.6391, -15.6789, 0.59 ) }
    dend_6 { pt3dadd( 224.898, -10.5375, -15.7537, 0.59 ) }
    dend_6 { pt3dadd( 225.157, -10.4865, -15.81, 0.96 ) }
    dend_6 { pt3dadd( 225.623, -10.435, -15.9254, 1.4 ) }
    dend_6 { pt3dadd( 226.244, -10.4424, -16.0869, 0.59 ) }
    dend_6 { pt3dadd( 226.61, -10.4866, -16.1871, 0.59 ) }
    dend_6 { pt3dadd( 227.207, -10.6231, -16.3445, 1.92 ) }
    dend_6 { pt3dadd( 228.294, -10.8756, -16.6459, 0.07 ) }
    dend_6 { pt3dadd( 228.76, -10.998, -16.8123, 0.07 ) }
    dend_6 { pt3dadd( 229.285, -11.1503, -17.0292, 1.84 ) }
    dend_6 { pt3dadd( 229.944, -11.3568, -17.3301, 0.96 ) }
    dend_6 { pt3dadd( 230.431, -11.5032, -17.5679, 0.96 ) }
    dend_6 { pt3dadd( 230.939, -11.6621, -17.8166, 0.96 ) }
    dend_6 { pt3dadd( 231.892, -11.9383, -18.4259, 0.88 ) }
    dend_6 { pt3dadd( 232.258, -12.0318, -18.6983, 0.88 ) }
    dend_6 { pt3dadd( 232.511, -12.0904, -18.8919, 1.11 ) }
    dend_6 { pt3dadd( 233.066, -12.1995, -19.3358, 1.33 ) }
    dend_6 { pt3dadd( 233.676, -12.2978, -19.8103, 1.33 ) }
    dend_6 { pt3dadd( 235.206, -12.4945, -20.9588, 0.88 ) }
    dend_6 { pt3dadd( 235.964, -12.5503, -21.459, 1.18 ) }
    dend_6 { pt3dadd( 236.658, -12.5755, -21.8986, 0.81 ) }
    dend_6 { pt3dadd( 237.504, -12.5989, -22.4263, 1.92 ) }
    dend_6 { pt3dadd( 238.094, -12.622, -22.7796, 0.88 ) }
    dend_6 { pt3dadd( 238.953, -12.6698, -23.2611, 0.88 ) }
    dend_6 { pt3dadd( 239.77, -12.7646, -23.6482, 0.88 ) }
    dend_6 { pt3dadd( 240.134, -12.823, -23.8323, 1.55 ) }
    dend_6 { pt3dadd( 241.204, -13.0947, -24.4291, 0.07 ) }
    dend_6 { pt3dadd( 241.489, -13.201, -24.5895, 0.66 ) }
    dend_6 { pt3dadd( 241.768, -13.3278, -24.7583, 1.25 ) }
    dend_6 { pt3dadd( 242.106, -13.4861, -24.9758, 1.25 ) }
    dend_6 { pt3dadd( 242.476, -13.6449, -25.2365, 0.22 ) }
    dend_6 { pt3dadd( 243.053, -13.854, -25.58, 0.22 ) }
    dend_6 { pt3dadd( 243.32, -13.9057, -25.6958, 0.96 ) }
    dend_6 { pt3dadd( 243.535, -13.9136, -25.7715, 0.22 ) }
    dend_6 { pt3dadd( 244.457, -13.8303, -26.0013, 0.22 ) }
    dend_6 { pt3dadd( 244.841, -13.7561, -26.0379, 1.11 ) }
    dend_6 { pt3dadd( 245.567, -13.5883, -26.0096, 1.11 ) }
    dend_6 { pt3dadd( 245.92, -13.5166, -25.9579, 1.11 ) }
    dend_6 { pt3dadd( 246.209, -13.4656, -25.9073, 1.18 ) }
    dend_6 { pt3dadd( 246.455, -13.4306, -25.8575, 0.29 ) }
    dend_6 { pt3dadd( 247.047, -13.3696, -25.7281, 0.29 ) }
    dend_6 { pt3dadd( 247.432, -13.3204, -25.6765, 0.88 ) }
    dend_6 { pt3dadd( 247.642, -13.2912, -25.6671, 0.29 ) }
    dend_6 { pt3dadd( 247.879, -13.2563, -25.6571, 0.29 ) }
    dend_6 { pt3dadd( 248.239, -13.2027, -25.6427, 1.62 ) }
    dend_6 { pt3dadd( 248.638, -13.155, -25.6296, 1.62 ) }
    dend_6 { pt3dadd( 249.121, -13.1229, -25.6184, 0.07 ) }
    dend_6 { pt3dadd( 249.564, -13.1211, -25.612, 0.07 ) }
    dend_6 { pt3dadd( 249.979, -13.1547, -25.6116, 0.07 ) }
    dend_6 { pt3dadd( 250.356, -13.2174, -25.6328, 1.62 ) }
    dend_6 { pt3dadd( 250.849, -13.3389, -25.6847, 1.62 ) }
    dend_6 { pt3dadd( 251.339, -13.4951, -25.7564, 0.66 ) }
    dend_6 { pt3dadd( 251.729, -13.6435, -25.8306, 0.66 ) }
    dend_6 { pt3dadd( 252.053, -13.7799, -25.9022, 0.96 ) }
    dend_6 { pt3dadd( 252.533, -13.9893, -26.0142, 0.29 ) }
    dend_6 { pt3dadd( 252.801, -14.0979, -26.0751, 0.29 ) }
    dend_6 { pt3dadd( 253.123, -14.2217, -26.1193, 0.29 ) }
    dend_6 { pt3dadd( 253.507, -14.3705, -26.138, 0.29 ) }
    dend_6 { pt3dadd( 253.738, -14.4473, -26.1269, 0.29 ) }
    dend_6 { pt3dadd( 254.186, -14.5962, -26.0751, 1.03 ) }
    dend_6 { pt3dadd( 254.455, -14.7069, -26.0324, 1.47 ) }
    dend_6 { pt3dadd( 255.075, -15.062, -25.9476, 0.15 ) }
    dend_6 { pt3dadd( 255.309, -15.2479, -25.8969, 0.15 ) }
    dend_6 { pt3dadd( 255.697, -15.6364, -25.7916, 0.15 ) }
    dend_6 { pt3dadd( 255.985, -15.973, -25.7065, 0.15 ) }
    dend_6 { pt3dadd( 256.456, -16.5922, -25.5658, 2.06 ) }
    dend_6 { pt3dadd( 256.922, -17.2449, -25.4399, 1.25 ) }
    dend_6 { pt3dadd( 257.486, -18.0592, -25.3205, 0.66 ) }
    dend_6 { pt3dadd( 257.711, -18.3747, -25.2717, 0.66 ) }
    dend_6 { pt3dadd( 257.963, -18.6905, -25.2224, 0.66 ) }
    dend_6 { pt3dadd( 258.25, -19.0073, -25.1626, 0.66 ) }
    dend_6 { pt3dadd( 258.47, -19.2023, -25.1204, 0.66 ) }
    dend_6 { pt3dadd( 258.76, -19.3816, -25.0871, 0.66 ) }
    dend_6 { pt3dadd( 259.086, -19.5401, -25.1072, 0.66 ) }
    dend_6 { pt3dadd( 259.674, -19.7933, -25.1362, 1.47 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 135.941, -31.0953, -5.19833, 0.66 ) }
    dend_12 { pt3dadd( 135.968, -34.0157, -1.80165, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_12 { pt3dadd( 136.001, -34.749, -1.00744, 0.66 ) }
    dend_12 { pt3dadd( 136.025, -35.0864, -0.648179, 0.81 ) }
    dend_12 { pt3dadd( 136.072, -35.5141, -0.192174, 0.81 ) }
    dend_12 { pt3dadd( 136.118, -35.6785, 0.0101907, 0.81 ) }
    dend_12 { pt3dadd( 136.227, -35.898, 0.313358, 0.81 ) }
    dend_12 { pt3dadd( 136.387, -35.9701, 0.459418, 0.81 ) }
    dend_12 { pt3dadd( 136.742, -36.079, 0.736602, 0.81 ) }
    dend_12 { pt3dadd( 137.142, -36.1898, 1.01806, 0.81 ) }
    dend_12 { pt3dadd( 138.945, -36.6927, 2.11898, 0.81 ) }
    dend_12 { pt3dadd( 139.509, -36.867, 2.42202, 0.81 ) }
    dend_12 { pt3dadd( 140.155, -37.0958, 2.72042, 1.11 ) }
    dend_12 { pt3dadd( 140.967, -37.4302, 3.02822, 1.4 ) }
    dend_12 { pt3dadd( 141.708, -37.8043, 3.25237, 1.55 ) }
    dend_12 { pt3dadd( 142.515, -38.2845, 3.41292, 1.25 ) }
    dend_12 { pt3dadd( 143.091, -38.6723, 3.44771, 1.03 ) }
    dend_12 { pt3dadd( 143.798, -39.1898, 3.47747, 1.03 ) }
    dend_12 { pt3dadd( 144.369, -39.6037, 3.49872, 1.03 ) }
    dend_12 { pt3dadd( 145.142, -40.1284, 3.53364, 0.96 ) }
    dend_12 { pt3dadd( 146.029, -40.6731, 3.57544, 0.88 ) }
    dend_12 { pt3dadd( 147.082, -41.2402, 3.62565, 0.81 ) }
    dend_12 { pt3dadd( 147.792, -41.5961, 3.65488, 0.88 ) }
    dend_12 { pt3dadd( 148.854, -42.0763, 3.7025, 0.88 ) }
    dend_12 { pt3dadd( 149.671, -42.3851, 3.74169, 1.11 ) }
    dend_12 { pt3dadd( 150.802, -42.7014, 3.78772, 1.11 ) }
    dend_12 { pt3dadd( 151.177, -42.7668, 3.8121, 1.11 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 25/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 135.941, -31.0953, -5.19833, 0.66 ) }
    dend_11 { pt3dadd( 137.014, -31.6492, -0.562079, 0.66 ) }
    // Section: dend_9, id: dend_9, parent: dend_6 (entry count 27/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 259.674, -19.7933, -25.1362, 0.22 ) }
    dend_9 { pt3dadd( 260.15, -20.2187, -25.2037, 0.22 ) }
    dend_9 { pt3dadd( 261.276, -21.4405, -25.1298, 0.22 ) }
    dend_9 { pt3dadd( 262.216, -22.4603, -24.9912, 1.62 ) }
    dend_9 { pt3dadd( 262.724, -22.9909, -24.9067, 0.15 ) }
    dend_9 { pt3dadd( 263.164, -23.424, -24.8306, 0.15 ) }
    dend_9 { pt3dadd( 263.909, -24.1679, -24.6771, 1.47 ) }
    dend_9 { pt3dadd( 265.729, -26.0016, -24.2199, 0.37 ) }
    dend_9 { pt3dadd( 266.978, -27.296, -23.8486, 0.37 ) }
    dend_9 { pt3dadd( 267.604, -27.9774, -23.6505, 1.25 ) }
    dend_9 { pt3dadd( 268.017, -28.4325, -23.5221, 1.77 ) }
    dend_9 { pt3dadd( 269.097, -29.6401, -23.213, 0.07 ) }
    dend_9 { pt3dadd( 269.691, -30.3069, -23.0894, 0.88 ) }
    dend_9 { pt3dadd( 270.088, -30.7329, -23.0743, 0.44 ) }
    dend_9 { pt3dadd( 270.44, -31.1475, -23.0747, 0.44 ) }
    dend_9 { pt3dadd( 270.684, -31.4354, -23.0987, 0.96 ) }
    dend_9 { pt3dadd( 270.974, -31.7589, -23.1519, 0.29 ) }
    dend_9 { pt3dadd( 271.788, -32.5642, -23.367, 0.29 ) }
    dend_9 { pt3dadd( 272.412, -33.1902, -23.543, 1.18 ) }
    dend_9 { pt3dadd( 272.892, -33.6913, -23.6856, 1.18 ) }
    dend_9 { pt3dadd( 273.582, -34.4243, -23.8935, 0.44 ) }
    dend_9 { pt3dadd( 273.879, -34.729, -23.9787, 0.44 ) }
    dend_9 { pt3dadd( 274.572, -35.4179, -24.1674, 0.96 ) }
    dend_9 { pt3dadd( 275.061, -35.8914, -24.2911, 0.15 ) }
    dend_9 { pt3dadd( 275.784, -36.5142, -24.4402, 0.15 ) }
    dend_9 { pt3dadd( 276.414, -36.9579, -24.6034, 0.15 ) }
    dend_9 { pt3dadd( 277.084, -37.3198, -24.7879, 0.88 ) }
    dend_9 { pt3dadd( 277.424, -37.4599, -24.8869, 1.25 ) }
    dend_9 { pt3dadd( 278.385, -37.7467, -25.1612, 0.37 ) }
    dend_9 { pt3dadd( 279.11, -37.9497, -25.3552, 0.07 ) }
    dend_9 { pt3dadd( 280.892, -38.3917, -25.7961, 1.33 ) }
    dend_9 { pt3dadd( 281.623, -38.5553, -25.9613, 0.37 ) }
    dend_9 { pt3dadd( 282.77, -38.7878, -26.188, 0.37 ) }
    dend_9 { pt3dadd( 283.604, -38.9444, -26.3228, 1.47 ) }
    dend_9 { pt3dadd( 285.098, -39.2049, -26.4998, 0.22 ) }
    dend_9 { pt3dadd( 285.917, -39.359, -26.5713, 0.22 ) }
    dend_9 { pt3dadd( 286.684, -39.5033, -26.587, 1.11 ) }
    dend_9 { pt3dadd( 287.29, -39.598, -26.6112, 0.29 ) }
    dend_9 { pt3dadd( 287.956, -39.6815, -26.6531, 0.29 ) }
    dend_9 { pt3dadd( 288.314, -39.7295, -26.6871, 0.74 ) }
    dend_9 { pt3dadd( 288.969, -39.8259, -26.772, 0.07 ) }
    dend_9 { pt3dadd( 289.724, -40.0755, -26.8346, 0.07 ) }
    dend_9 { pt3dadd( 290.35, -40.345, -26.8625, 0.96 ) }
    dend_9 { pt3dadd( 290.814, -40.557, -26.8767, 0.15 ) }
    dend_9 { pt3dadd( 291.319, -40.8006, -26.8809, 0.15 ) }
    dend_9 { pt3dadd( 291.698, -40.9943, -26.8732, 0.59 ) }
    dend_9 { pt3dadd( 294.051, -42.2349, -26.7064, 0.07 ) }
    dend_9 { pt3dadd( 295.179, -42.8496, -26.6076, 0.96 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 75/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 259.674, -19.7933, -25.1362, 0.07 ) }
    dend_8 { pt3dadd( 259.276, -20.2371, -25.2528, 0.07 ) }
    dend_8 { pt3dadd( 258.911, -20.643, -25.3594, 0.59 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 78/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 259.674, -19.7933, -25.1362, 0.22 ) }
    dend_7 { pt3dadd( 259.715, -18.9156, -24.94, 0.22 ) }
    dend_7 { pt3dadd( 259.739, -18.3873, -24.8218, 0.74 ) }
    // Section: dend_21, id: dend_21, parent: dend_12 (entry count 81/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 151.177, -42.7668, 3.8121, 0.07 ) }
    dend_21 { pt3dadd( 152.118, -43.5982, 3.34892, 0.07 ) }
    dend_21 { pt3dadd( 152.794, -44.2263, 3.03845, 0.07 ) }
    dend_21 { pt3dadd( 153.366, -44.8185, 2.77602, 0.07 ) }
    dend_21 { pt3dadd( 153.704, -45.2121, 2.61827, 0.07 ) }
    dend_21 { pt3dadd( 154.184, -45.8266, 2.44, 0.07 ) }
    dend_21 { pt3dadd( 154.434, -46.1826, 2.36464, 0.07 ) }
    dend_21 { pt3dadd( 154.662, -46.6209, 2.36135, 0.07 ) }
    dend_21 { pt3dadd( 154.839, -47.0673, 2.39119, 0.37 ) }
    dend_21 { pt3dadd( 154.985, -47.4977, 2.43713, 0.37 ) }
    dend_21 { pt3dadd( 155.242, -48.3873, 2.54433, 0.37 ) }
    dend_21 { pt3dadd( 155.351, -48.8433, 2.60184, 0.37 ) }
    dend_21 { pt3dadd( 155.506, -49.4741, 2.70038, 0.37 ) }
    dend_21 { pt3dadd( 155.867, -50.7851, 2.94829, 0.37 ) }
    dend_21 { pt3dadd( 155.993, -51.2016, 3.03661, 1.11 ) }
    // Section: dend_18, id: dend_18, parent: dend_12 (entry count 96/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 151.177, -42.7668, 3.8121, 0.96 ) }
    dend_18 { pt3dadd( 153.482, -43.6878, 2.36649, 0.96 ) }
    dend_18 { pt3dadd( 154.369, -44.0424, 1.81, 0.88 ) }
    dend_18 { pt3dadd( 155.095, -44.3321, 1.35522, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_18 { pt3dadd( 155.365, -44.4402, 1.1855, 0.88 ) }
    dend_18 { pt3dadd( 155.848, -44.6332, 0.882642, 1.18 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 2/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 151.177, -42.7668, 3.8121, 0.59 ) }
    dend_13 { pt3dadd( 150.22, -42.4143, 3.96022, 0.59 ) }
    dend_13 { pt3dadd( 149.66, -42.1371, 4.04001, 0.59 ) }
    dend_13 { pt3dadd( 149.032, -41.6811, 4.14346, 0.59 ) }
    dend_13 { pt3dadd( 148.566, -41.1612, 4.25234, 0.44 ) }
    dend_13 { pt3dadd( 148.103, -40.5299, 4.38257, 0.44 ) }
    dend_13 { pt3dadd( 147.981, -40.3365, 4.42225, 0.22 ) }
    dend_13 { pt3dadd( 147.689, -39.8688, 4.53409, 0.22 ) }
    dend_13 { pt3dadd( 147.296, -39.187, 4.69295, 0.22 ) }
    dend_13 { pt3dadd( 146.884, -38.3282, 4.88609, 0.22 ) }
    dend_13 { pt3dadd( 146.755, -38.0213, 4.95231, 0.22 ) }
    dend_13 { pt3dadd( 146.422, -37.2557, 5.11698, 0.22 ) }
    dend_13 { pt3dadd( 146.005, -36.4007, 5.29848, 0.22 ) }
    dend_13 { pt3dadd( 146.005, -36.4007, 5.29848, 0.22 ) }
    dend_13 { pt3dadd( 145.539, -35.7132, 5.4414, 0.22 ) }
    dend_13 { pt3dadd( 145.053, -35.1402, 5.50375, 0.22 ) }
    dend_13 { pt3dadd( 144.367, -34.4263, 5.52565, 0.22 ) }
    dend_13 { pt3dadd( 143.674, -33.7035, 5.48117, 0.22 ) }
    dend_13 { pt3dadd( 143.369, -33.3965, 5.44977, 0.22 ) }
    dend_13 { pt3dadd( 142.697, -32.7326, 5.36071, 0.22 ) }
    dend_13 { pt3dadd( 141.396, -31.4972, 5.11388, 0.22 ) }
    dend_13 { pt3dadd( 140.907, -31.041, 4.98682, 0.22 ) }
    dend_13 { pt3dadd( 139.944, -30.1516, 4.64377, 0.22 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 25/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 155.993, -51.2016, 3.03661, 1.11 ) }
    dend_22 { pt3dadd( 156.693, -52.3196, 3.01053, 1.11 ) }
    dend_22 { pt3dadd( 157.052, -53.2956, 2.8645, 0.66 ) }
    dend_22 { pt3dadd( 157.196, -53.7891, 2.77794, 0.37 ) }
    dend_22 { pt3dadd( 157.554, -54.865, 2.58573, 0.74 ) }
    dend_22 { pt3dadd( 157.861, -55.7054, 2.47849, 0.88 ) }
    dend_22 { pt3dadd( 158.254, -56.8123, 2.36662, 0.88 ) }
    dend_22 { pt3dadd( 158.595, -58.236, 2.22916, 0.88 ) }
    dend_22 { pt3dadd( 158.752, -58.9556, 2.19956, 0.66 ) }
    dend_22 { pt3dadd( 159.02, -59.8691, 2.21508, 0.66 ) }
    dend_22 { pt3dadd( 159.427, -60.8766, 2.30236, 0.81 ) }
    dend_22 { pt3dadd( 159.817, -61.7032, 2.45375, 0.81 ) }
    dend_22 { pt3dadd( 160.308, -62.7055, 2.73188, 0.81 ) }
    dend_22 { pt3dadd( 160.688, -63.5403, 2.96713, 0.81 ) }
    dend_22 { pt3dadd( 161.069, -64.6302, 3.21483, 0.74 ) }
    dend_22 { pt3dadd( 161.217, -65.1481, 3.29769, 0.22 ) }
    dend_22 { pt3dadd( 161.503, -66.0866, 3.37518, 0.22 ) }
    dend_22 { pt3dadd( 161.879, -67.0886, 3.43729, 0.22 ) }
    dend_22 { pt3dadd( 162.302, -68.0267, 3.45366, 0.22 ) }
    dend_22 { pt3dadd( 162.553, -68.6231, 3.50051, 0.44 ) }
    dend_22 { pt3dadd( 162.883, -69.485, 3.60135, 0.74 ) }
    dend_22 { pt3dadd( 163.27, -70.6022, 3.75048, 0.74 ) }
    dend_22 { pt3dadd( 163.676, -71.6216, 3.91787, 0.44 ) }
    dend_22 { pt3dadd( 164.088, -72.5778, 4.11159, 0.44 ) }
    dend_22 { pt3dadd( 164.913, -74.4818, 4.53105, 1.11 ) }
    dend_22 { pt3dadd( 165.197, -75.1892, 4.67953, 1.11 ) }
    dend_22 { pt3dadd( 165.606, -76.3741, 4.90075, 0.29 ) }
    dend_22 { pt3dadd( 165.982, -77.6142, 5.07956, 0.29 ) }
    dend_22 { pt3dadd( 166.417, -79.1713, 5.19756, 0.29 ) }
    dend_22 { pt3dadd( 166.613, -79.8417, 5.20131, 1.11 ) }
    dend_22 { pt3dadd( 166.921, -80.753, 5.11526, 0.81 ) }
    dend_22 { pt3dadd( 167.119, -81.2684, 5.05486, 0.81 ) }
    dend_22 { pt3dadd( 167.441, -81.9902, 4.94001, 0.81 ) }
    dend_22 { pt3dadd( 167.788, -82.7085, 4.79565, 0.81 ) }
    dend_22 { pt3dadd( 168.07, -83.1967, 4.68607, 0.81 ) }
    dend_22 { pt3dadd( 168.522, -83.8993, 4.51759, 0.44 ) }
    dend_22 { pt3dadd( 168.995, -84.5838, 4.35184, 0.44 ) }
    dend_22 { pt3dadd( 169.59, -85.4536, 4.15119, 1.03 ) }
    dend_22 { pt3dadd( 170.163, -86.3578, 3.95083, 1.25 ) }
    dend_22 { pt3dadd( 170.691, -87.3231, 3.74842, 0.81 ) }
    dend_22 { pt3dadd( 170.955, -87.9109, 3.69055, 0.66 ) }
    dend_22 { pt3dadd( 171.217, -88.6814, 3.67831, 0.66 ) }
    dend_22 { pt3dadd( 171.505, -89.8114, 3.69484, 0.66 ) }
    dend_22 { pt3dadd( 171.665, -90.7785, 3.74897, 1.03 ) }
    dend_22 { pt3dadd( 171.744, -91.5987, 3.8349, 0.81 ) }
    dend_22 { pt3dadd( 171.858, -93.7678, 4.21581, 0.66 ) }
    dend_22 { pt3dadd( 171.862, -94.3581, 4.36234, 0.66 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 72/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 155.848, -44.6332, 0.882642, 1.03 ) }
    dend_20 { pt3dadd( 156.455, -45.0492, 0.832898, 1.03 ) }
    dend_20 { pt3dadd( 157.162, -45.5261, 0.798876, 1.03 ) }
    dend_20 { pt3dadd( 158.056, -46.0941, 0.775012, 1.03 ) }
    dend_20 { pt3dadd( 159.193, -46.7547, 0.761956, 1.03 ) }
    dend_20 { pt3dadd( 160.016, -47.17, 0.764702, 0.59 ) }
    dend_20 { pt3dadd( 161.017, -47.6336, 0.773695, 0.59 ) }
    dend_20 { pt3dadd( 161.444, -47.8029, 0.784156, 0.74 ) }
    dend_20 { pt3dadd( 162.39, -48.1353, 0.791338, 0.81 ) }
    dend_20 { pt3dadd( 163.133, -48.4109, 0.780227, 0.81 ) }
    dend_20 { pt3dadd( 164.042, -48.7992, 0.707217, 0.81 ) }
    dend_20 { pt3dadd( 164.78, -49.201, 0.574692, 0.44 ) }
    dend_20 { pt3dadd( 165.358, -49.6268, 0.374382, 0.44 ) }
    dend_20 { pt3dadd( 165.989, -50.2167, 0.148628, 0.44 ) }
    dend_20 { pt3dadd( 167.418, -51.5894, -0.307687, 0.44 ) }
    dend_20 { pt3dadd( 168.135, -52.1986, -0.46991, 0.74 ) }
    dend_20 { pt3dadd( 168.712, -52.6117, -0.544553, 1.18 ) }
    dend_20 { pt3dadd( 169.471, -53.0474, -0.576708, 0.88 ) }
    dend_20 { pt3dadd( 170.695, -53.6373, -0.548798, 0.59 ) }
    dend_20 { pt3dadd( 171.974, -54.1586, -0.491749, 0.59 ) }
    dend_20 { pt3dadd( 172.959, -54.5143, -0.457729, 0.37 ) }
    dend_20 { pt3dadd( 173.764, -54.8283, -0.433229, 0.37 ) }
    dend_20 { pt3dadd( 174.02, -54.9452, -0.438735, 0.74 ) }
    dend_20 { pt3dadd( 174.403, -55.1963, -0.478829, 1.03 ) }
    dend_20 { pt3dadd( 175.171, -55.8482, -0.656652, 1.03 ) }
    dend_20 { pt3dadd( 175.711, -56.4601, -0.82413, 0.52 ) }
    dend_20 { pt3dadd( 175.924, -56.743, -0.901941, 0.37 ) }
    dend_20 { pt3dadd( 176.137, -57.0298, -0.978494, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_20 { pt3dadd( 177.125, -58.2906, -1.28378, 1.99 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 1/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 155.848, -44.6332, 0.882642, 0.15 ) }
    dend_19 { pt3dadd( 156.192, -45.369, 0.735562, 0.15 ) }
    dend_19 { pt3dadd( 156.396, -45.8042, 0.648565, 0.15 ) }
    dend_19 { pt3dadd( 156.591, -46.2222, 0.564998, 0.15 ) }
    dend_19 { pt3dadd( 156.97, -47.0324, 0.403044, 0.15 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 6/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 139.944, -30.1516, 4.64377, 0.22 ) }
    dend_15 { pt3dadd( 139.338, -29.5514, 4.72567, 0.22 ) }
    dend_15 { pt3dadd( 138.676, -28.8955, 4.81518, 0.22 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 9/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 139.944, -30.1516, 4.64377, 0.22 ) }
    dend_14 { pt3dadd( 139.254, -29.9395, 4.629, 0.22 ) }
    dend_14 { pt3dadd( 138.496, -29.7068, 4.6128, 0.22 ) }
    // Section: dend_32, id: dend_32, parent: dend_22 (entry count 12/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 171.862, -94.3581, 4.36234, 0.07 ) }
    dend_32 { pt3dadd( 171.79, -95.0736, 4.2636, 0.07 ) }
    dend_32 { pt3dadd( 171.675, -96.2148, 4.10613, 0.07 ) }
    dend_32 { pt3dadd( 171.563, -97.3244, 3.95301, 0.07 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 16/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 171.862, -94.3581, 4.36234, 0.88 ) }
    dend_23 { pt3dadd( 171.904, -94.5169, 4.31122, 0.88 ) }
    dend_23 { pt3dadd( 172.02, -95.0012, 4.24308, 0.07 ) }
    dend_23 { pt3dadd( 172.083, -95.3474, 4.21587, 0.07 ) }
    dend_23 { pt3dadd( 172.108, -95.9869, 4.17561, 0.07 ) }
    dend_23 { pt3dadd( 172.088, -96.2177, 4.24566, 0.66 ) }
    dend_23 { pt3dadd( 172.055, -96.5881, 4.39947, 1.11 ) }
    dend_23 { pt3dadd( 172.004, -97.2197, 4.71716, 0.07 ) }
    dend_23 { pt3dadd( 171.97, -97.5545, 4.91059, 0.07 ) }
    dend_23 { pt3dadd( 171.888, -98.1572, 5.29597, 0.07 ) }
    dend_23 { pt3dadd( 171.608, -99.8889, 6.58917, 0.07 ) }
    dend_23 { pt3dadd( 171.519, -100.387, 6.99791, 0.07 ) }
    dend_23 { pt3dadd( 171.474, -100.647, 7.23972, 0.07 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 29/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 138.676, -28.8955, 4.81518, 0.22 ) }
    dend_17 { pt3dadd( 138.342, -28.1006, 4.75316, 0.22 ) }
    dend_17 { pt3dadd( 138.068, -27.447, 4.70216, 0.22 ) }
    dend_17 { pt3dadd( 137.843, -26.9119, 4.6604, 0.22 ) }
    dend_17 { pt3dadd( 137.588, -26.3041, 4.61297, 0.22 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 34/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 138.676, -28.8955, 4.81518, 0.22 ) }
    dend_16 { pt3dadd( 137.888, -29.6413, 4.88715, 0.22 ) }
    dend_16 { pt3dadd( 137.688, -30.2247, 4.84569, 0.22 ) }
    dend_16 { pt3dadd( 137.615, -30.7982, 4.78843, 0.22 ) }
    dend_16 { pt3dadd( 137.554, -31.5921, 4.70634, 0.22 ) }
    dend_16 { pt3dadd( 137.514, -32.1104, 4.65276, 0.22 ) }
    dend_16 { pt3dadd( 137.478, -32.5881, 4.60336, 0.22 ) }
    dend_16 { pt3dadd( 137.701, -33.4663, 4.4192, 0.22 ) }
    dend_16 { pt3dadd( 138.014, -34.0727, 4.29935, 0.22 ) }
    dend_16 { pt3dadd( 138.372, -34.5026, 4.22062, 0.22 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 44/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 171.474, -100.647, 7.23972, 0.07 ) }
    dend_24 { pt3dadd( 171.301, -101.404, 6.88526, 0.07 ) }
    dend_24 { pt3dadd( 171.231, -101.711, 6.74119, 0.88 ) }
    dend_24 { pt3dadd( 171.084, -102.351, 6.44126, 0.88 ) }
    dend_24 { pt3dadd( 170.895, -103.177, 6.0542, 0.88 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 49/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 170.895, -103.177, 6.0542, 0.44 ) }
    dend_26 { pt3dadd( 171.131, -103.939, 5.85854, 0.44 ) }
    dend_26 { pt3dadd( 171.299, -104.288, 5.77142, 0.66 ) }
    dend_26 { pt3dadd( 171.723, -104.804, 5.64933, 0.37 ) }
    dend_26 { pt3dadd( 172.144, -104.77, 5.67114, 0.29 ) }
    dend_26 { pt3dadd( 172.452, -104.651, 5.7102, 0.44 ) }
    dend_26 { pt3dadd( 172.764, -104.517, 5.75302, 0.66 ) }
    dend_26 { pt3dadd( 173.11, -104.35, 5.80602, 0.66 ) }
    dend_26 { pt3dadd( 173.581, -104.108, 5.8813, 0.29 ) }
    dend_26 { pt3dadd( 174.181, -103.845, 6.02899, 0.29 ) }
    dend_26 { pt3dadd( 174.48, -103.712, 6.10699, 0.66 ) }
    dend_26 { pt3dadd( 175.095, -103.459, 6.27312, 0.66 ) }
    dend_26 { pt3dadd( 175.668, -103.256, 6.43342, 0.44 ) }
    dend_26 { pt3dadd( 176.03, -103.155, 6.54113, 0.44 ) }
    dend_26 { pt3dadd( 177.321, -102.972, 6.95137, 1.11 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 64/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 170.895, -103.177, 6.0542, 0.22 ) }
    dend_25 { pt3dadd( 169.77, -103.858, 5.79256, 0.22 ) }
    dend_25 { pt3dadd( 168.542, -104.6, 5.5072, 0.22 ) }
    dend_25 { pt3dadd( 167.491, -105.236, 5.26278, 0.22 ) }
    dend_25 { pt3dadd( 166.949, -105.563, 5.13684, 0.22 ) }
    dend_25 { pt3dadd( 166.255, -105.983, 4.97543, 0.52 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 70/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 177.321, -102.972, 6.95137, 1.11 ) }
    dend_28 { pt3dadd( 178.025, -103.387, 6.89182, 1.11 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 72/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 177.321, -102.972, 6.95137, 0.07 ) }
    dend_27 { pt3dadd( 177.009, -104.211, 6.66248, 0.07 ) }
    dend_27 { pt3dadd( 176.775, -105.136, 6.44698, 0.07 ) }
    // Section: dend_31, id: dend_31, parent: dend_28 (entry count 75/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 178.025, -103.387, 6.89182, 0.52 ) }
    dend_31 { pt3dadd( 177.959, -104.398, 6.54351, 0.52 ) }
    dend_31 { pt3dadd( 177.922, -104.976, 6.34425, 0.52 ) }
    dend_31 { pt3dadd( 177.855, -106.006, 5.98916, 0.29 ) }
    dend_31 { pt3dadd( 177.723, -108.05, 5.28465, 0.29 ) }
    dend_31 { pt3dadd( 177.596, -110.01, 4.60893, 0.29 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 81/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 178.025, -103.387, 6.89182, 0.07 ) }
    dend_30 { pt3dadd( 180.016, -104.183, 6.7289, 0.07 ) }
    dend_30 { pt3dadd( 181.081, -104.608, 6.6418, 0.07 ) }
    dend_30 { pt3dadd( 182.355, -105.117, 6.53762, 0.07 ) }
    dend_30 { pt3dadd( 184.783, -106.087, 6.33899, 0.07 ) }
    dend_30 { pt3dadd( 185.953, -106.555, 6.2433, 0.07 ) }
    dend_30 { pt3dadd( 186.331, -106.706, 6.21239, 0.07 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 88/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 178.025, -103.387, 6.89182, 0.66 ) }
    dend_29 { pt3dadd( 178.705, -103.503, 6.90529, 0.66 ) }
    dend_29 { pt3dadd( 179.33, -103.609, 6.91768, 0.44 ) }
    dend_29 { pt3dadd( 180.44, -103.798, 6.93967, 0.07 ) }
    dend_29 { pt3dadd( 181.269, -103.939, 6.9561, 0.07 ) }
    dend_29 { pt3dadd( 181.788, -104.028, 6.96639, 0.07 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_52, dend_49, dend_35, dend_1, dend_0, dend_56, dend_53, dend_51, dend_50, dend_39, dend_36, dend_34, dend_2, dend_55, dend_54, dend_45, dend_40, dend_38, dend_37, dend_33, dend_3, dend_46, dend_42, dend_41, dend_4, dend_48, dend_47, dend_44, dend_43, dend_5, dend_10, dend_6, dend_12, dend_11, dend_9, dend_8, dend_7, dend_21, dend_18, dend_13, dend_22, dend_20, dend_19, dend_15, dend_14, dend_32, dend_23, dend_17, dend_16, dend_24, dend_26, dend_25, dend_28, dend_27, dend_31, dend_30, dend_29]}
    ModelViewParmSubset_2 = new SectionList()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_52, dend_49, dend_35, dend_1, dend_0, dend_56, dend_53, dend_51, dend_50, dend_39, dend_36, dend_34, dend_2, dend_55, dend_54, dend_45, dend_40, dend_38, dend_37, dend_33, dend_3, dend_46, dend_42, dend_41, dend_4, dend_48, dend_47, dend_44, dend_43, dend_5, dend_10, dend_6, dend_12, dend_11, dend_9, dend_8, dend_7, dend_21, dend_18, dend_13, dend_22, dend_20, dend_19, dend_15, dend_14, dend_32, dend_23, dend_17, dend_16, dend_24, dend_26, dend_25, dend_28, dend_27, dend_31, dend_30, dend_29]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_52, dend_49, dend_35, dend_1, dend_0, axon_0, dend_56, dend_53, dend_51, dend_50, dend_39, dend_36, dend_34, dend_2, axon_1, dend_55, dend_54, dend_45, dend_40, dend_38, dend_37, dend_33, dend_3, dend_46, dend_42, dend_41, dend_4, dend_48, dend_47, dend_44, dend_43, dend_5, dend_10, dend_6, dend_12, dend_11, dend_9, dend_8, dend_7, dend_21, dend_18, dend_13, dend_22, dend_20, dend_19, dend_15, dend_14, dend_32, dend_23, dend_17, dend_16, dend_24, dend_26, dend_25, dend_28, dend_27, dend_31, dend_30, dend_29]}
    ModelViewParmSubset_5 = new SectionList()
    dend_52 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_49 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_56 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_53 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_51 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_36 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_34 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_45 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_40 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_33 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_46 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_42 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_41 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_10 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_6 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_9 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_22 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_52 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_1 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_35 OneSecGrp_SectionRef_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_2 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_39 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_3 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_54 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_55 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_4 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_5 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_50 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_11 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_12 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_18 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_19 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_21 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_13 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_14 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_15 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_43 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_17 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_44 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_20 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_32 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_24 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_25 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_26 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_28 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_27 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_29 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_31 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_30 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_8 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_7 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_38 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_37 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_48 OneSecGrp_SectionRef_29.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_55, dend_54, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_7, dend_7, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_14, dend_14, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_24, dend_24, dend_24, dend_24, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_28, dend_27, dend_27, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    axon_0 all.append()
    axon_0 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_49 nseg = 7
    dend_0 nseg = 11
    dend_56 nseg = 7
    dend_53 nseg = 3
    dend_51 nseg = 5
    dend_36 nseg = 17
    dend_34 nseg = 13
    dend_45 nseg = 13
    dend_40 nseg = 5
    dend_33 nseg = 5
    dend_46 nseg = 3
    dend_42 nseg = 3
    dend_41 nseg = 3
    dend_10 nseg = 3
    dend_6 nseg = 9
    dend_9 nseg = 3
    dend_22 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L6_ChC_14a89428ba_0_0


