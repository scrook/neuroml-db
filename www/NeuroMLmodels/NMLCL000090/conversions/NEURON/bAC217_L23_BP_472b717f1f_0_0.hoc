// Cell: bAC217_L23_BP_472b717f1f_0_0
/*
{
  "id" : "bAC217_L23_BP_472b717f1f_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.559629, -8.92861, -0.706689, 1.8952", "-0.520561, -8.09769, -0.641537, 3.08207", "-0.481493, -7.26678, -0.576385, 4.07229", "-0.442425, -6.43586, -0.511233, 5.06251", "-0.403357, -5.60495, -0.446081, 6.03705", "-0.364289, -4.77403, -0.380929, 6.87153", "-0.325221, -3.94312, -0.315777, 7.33623", "-0.286154, -3.1122, -0.250625, 7.77277", "-0.247086, -2.28129, -0.185472, 8.20481", "-0.208018, -1.45038, -0.12032, 8.51332", "-0.16895, -0.619461, -0.0551684, 8.81943", "-0.129882, 0.211453, 0.00998366, 9.1018", "-0.0908139, 1.04237, 0.0751357, 8.76619", "-0.051746, 1.87328, 0.140288, 8.18075", "-0.0126781, 2.7042, 0.20544, 7.29107", "0.0263898, 3.53511, 0.270592, 6.47013", "0.0654577, 4.36603, 0.335744, 5.69271", "0.104526, 5.19694, 0.400896, 4.78435", "0.143594, 6.02786, 0.466048, 3.7615", "0.182661, 6.85877, 0.5312, 2.16282", "0.221729, 7.68968, 0.596352, 1.49642" ]
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-0.0529134, -8.92845, 10.7418, 1.66", "-0.812918, -11.9004, 13.2043, 1.66", "-1.63322, -15.1082, 15.8623, 1.66", "-3.04197, -20.6171, 20.4269, 1.39", "-8.64462, -42.5259, 38.5804, 1.11", "-9.62745, -46.3693, 41.765, 1.11", "-10.8722, -51.2369, 45.7983, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.617087, 7.86155, -0.778182, 1.39", "0.627131, 13.3276, 1.60683, 0.83", "0.630438, 15.1274, 2.39215, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.221729, 7.68968, 0.596352, 0.55", "0.92622, 22.6731, 0.596352, 0.55", "1.63071, 37.6566, 0.596352, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-10.8722, -51.2369, 45.7983, 0.83", "-15.0195, -56.6857, 44.0682, 0.83", "-16.007, -57.9831, 43.6563, 0.83", "-18.5277, -61.2948, 42.6047, 0.83", "-19.6577, -62.7794, 42.1333, 0.83", "-22.0878, -65.9721, 41.1196, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-10.8722, -51.2369, 45.7983, 0.83", "-10.9962, -52.6751, 46.008, 0.83", "-11.1109, -53.9772, 46.1782, 0.83", "-11.3192, -55.6772, 46.3845, 0.83", "-11.7376, -59.567, 46.745, 0.83", "-12.0455, -62.7802, 46.9892, 0.55", "-12.5818, -68.2277, 47.2839, 0.55", "-12.7697, -70.9444, 47.4461, 0.83", "-12.9131, -74.0579, 47.6279, 0.55", "-12.9813, -79.1609, 48.0601, 0.55", "-12.9692, -80.6213, 48.1982, 0.55", "-12.9218, -84.583, 48.5934, 0.55", "-12.832, -89.5821, 49.2154, 0.55", "-12.7781, -92.5757, 49.6221, 0.55", "-12.7404, -96.5593, 50.2044, 0.55", "-12.913, -103.71, 51.3577, 0.55", "-13.1139, -107.476, 51.964, 0.55", "-13.3293, -110.28, 52.3834, 0.55", "-13.6052, -112.213, 52.6048, 0.55", "-13.9401, -113.897, 52.7731, 0.55", "-14.751, -117.26, 53.2019, 0.55", "-15.1947, -118.94, 53.4355, 0.55", "-15.8737, -121.506, 53.905, 0.55", "-16.7885, -124.942, 54.5942, 0.55", "-18.1613, -129.894, 55.6733, 0.55", "-19.3611, -134.355, 56.7097, 0.55", "-20.4353, -138.244, 57.7024, 0.83", "-21.4574, -141.958, 58.7861, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "0.630438, 15.1274, 2.39215, 0.83", "1.00406, 22.5071, -1.15749, 0.83", "1.1545, 24.4511, -2.01292, 0.83", "1.34, 26.8336, -3.08561, 0.83", "1.51612, 28.8013, -3.91066, 0.83", "1.80605, 31.9482, -5.16198, 0.83", "2.22819, 36.0631, -6.70127, 0.83", "2.47299, 38.9905, -7.55645, 0.83", "2.77264, 42.1569, -8.53439, 0.83", "3.13902, 45.4061, -9.66328, 0.55", "3.2557, 46.435, -10.0269, 0.55", "3.42883, 48.1959, -10.6633, 0.55", "3.8338, 51.8718, -11.9194, 0.55", "4.0974, 54.5395, -12.8007, 0.55", "4.81113, 61.2234, -14.9942, 0.55", "5.11736, 64.2404, -16.1166, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.630438, 15.1274, 2.39215, 0.83", "1.56306, 17.7762, 3.38092, 0.83", "2.24361, 19.8656, 4.23741, 0.83", "3.22724, 23.1606, 5.7026, 0.83", "4.1399, 26.3363, 7.14584, 0.83", "5.17125, 30.3565, 8.79969, 0.83", "5.94331, 33.3874, 9.96278, 0.83", "6.44267, 35.68, 10.8471, 0.83", "6.96099, 38.1952, 11.727, 0.83", "7.07214, 38.88, 11.9264, 0.83", "8.34074, 46.7545, 13.7861, 0.83", "8.57247, 48.4288, 14.0675, 0.83", "8.86526, 50.7059, 14.3278, 0.83", "9.09722, 52.6772, 14.5069, 0.83", "9.3285, 54.9636, 14.6749, 0.83", "9.6428, 57.8515, 14.8894, 0.83", "9.88941, 60.8272, 15.0973, 0.83", "10.0611, 62.5273, 15.2188, 0.83", "10.3995, 65.1567, 15.4057, 0.83", "10.6886, 67.7422, 15.594, 0.83", "11.0402, 70.4596, 15.7612, 0.83", "11.4986, 74.0109, 16.0189, 0.83", "11.7985, 76.3304, 16.2958, 0.83", "11.9396, 77.6139, 16.4845, 0.83", "12.0699, 79.0653, 16.773, 0.83", "12.2589, 81.2122, 17.3301, 0.83", "12.3932, 84.3634, 18.3505, 0.55", "12.5873, 88.4959, 19.8621, 0.55", "12.5811, 89.7115, 20.3266, 0.55", "12.5576, 92.2681, 21.288, 0.55", "12.5197, 93.3401, 21.6737, 0.55", "12.4154, 95.3503, 22.3911, 0.55", "12.3464, 97.4478, 23.0401, 0.55", "12.3828, 100.497, 23.8072, 0.55", "12.4138, 102.506, 24.2814, 0.55", "12.4101, 104.335, 24.6516, 0.55", "12.4679, 106.621, 25.1069, 0.55", "12.6695, 109.001, 25.5388, 0.55", "13.042, 112.248, 26.18, 0.28" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.63071, 37.6566, 0.596352, 0.55", "2.3352, 52.64, 0.596352, 0.55", "3.03969, 67.6235, 0.596352, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-22.0878, -65.9721, 41.1196, 0.83", "-24.3085, -70.5306, 43.2675, 0.83", "-26.0547, -74.146, 44.7832, 0.83", "-28.1465, -78.5098, 46.4069, 0.83", "-29.8833, -82.1162, 47.6189, 0.83", "-30.9389, -84.3079, 48.3555, 0.83", "-32.1973, -86.9211, 49.2337, 0.83", "-33.033, -88.8247, 49.7236, 0.83", "-33.9814, -90.9992, 50.1805, 0.83", "-35.1344, -93.7911, 50.3227, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-22.0878, -65.9721, 41.1196, 0.55", "-17.0856, -68.3072, 48.4515, 0.55", "-11.4947, -70.8307, 56.1278, 0.55", "-8.65461, -72.1126, 60.0271, 0.55", "-5.07749, -73.7272, 64.9385, 0.28", "-4.48655, -73.9939, 65.7498, 0.83", "-1.3865, -75.3932, 70.0062, 0.28", "-0.811337, -75.5862, 70.7163, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "5.11736, 64.2404, -16.1166, 0.55", "5.95493, 68.2124, -16.3238, 0.55", "6.87365, 72.4069, -16.6559, 0.55", "7.51409, 75.3558, -16.8602, 0.55", "8.51477, 79.7796, -17.1315, 0.83", "9.22394, 82.9244, -17.3054, 0.55", "9.91169, 85.855, -17.4473, 0.55", "10.5389, 88.5976, -17.501, 1.11", "11.6937, 93.3557, -17.7297, 0.55", "12.0438, 94.9499, -17.8482, 0.55", "12.4823, 96.9611, -18.0228, 1.11", "13.0179, 99.4576, -18.2611, 0.55", "13.3371, 101.091, -18.4257, 1.11", "14.2507, 106.08, -18.8884, 0.55", "14.6818, 108.713, -19.3389, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "5.11736, 64.2404, -16.1166, 0.28", "6.63653, 67.7057, -19.4494, 0.28", "6.87486, 68.2253, -19.9236, 0.55", "8.95292, 72.8239, -23.9, 0.28", "11.1112, 77.1117, -27.7529, 1.11", "12.3555, 79.3413, -29.8319, 0.28", "12.3555, 79.3413, -29.8319, 0.55", "13.8771, 82.0678, -31.6719, 0.28", "14.4852, 83.1158, -32.2237, 1.11", "17.2556, 87.7955, -32.9871, 0.55", "19.2994, 91.4603, -32.2492, 0.28", "22.4677, 97.2047, -30.2475, 1.11", "25.077, 102.085, -27.9523, 0.28", "25.1337, 102.198, -27.8708, 0.55", "26.6312, 105.433, -24.8808, 0.28", "26.7377, 105.719, -24.5395, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-35.1344, -93.7911, 50.3227, 0.83", "-35.6845, -97.9926, 51.6014, 0.83", "-36.09, -101.376, 52.8523, 0.83", "-36.2369, -102.971, 53.4359, 0.83", "-36.3157, -103.89, 53.8498, 0.83", "-36.5771, -106.394, 55.0556, 0.83", "-36.7644, -107.864, 55.6688, 0.83", "-37.1557, -110.647, 56.5642, 0.83", "-37.3511, -112.595, 57.1717, 0.83", "-37.5573, -115.951, 58.0603, 0.83", "-37.605, -117.691, 58.3863, 0.83", "-37.7163, -121.966, 58.7751, 0.83", "-37.896, -125.758, 58.8928, 0.83", "-38.179, -128.858, 58.7508, 0.83", "-38.4995, -131.074, 58.611, 0.83", "-38.5738, -131.518, 58.5702, 0.83", "-39.0697, -134.053, 58.491, 0.28", "-39.2344, -134.716, 58.5284, 0.83", "-39.7815, -136.398, 58.6075, 0.28", "-40.8031, -139.372, 58.7104, 0.28", "-41.024, -140.01, 58.7587, 0.28", "-41.7098, -142.049, 58.9249, 0.83", "-42.2667, -143.866, 59.0856, 0.28", "-42.6997, -145.326, 59.2325, 0.83", "-42.9926, -146.509, 59.3702, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-35.1344, -93.7911, 50.3227, 0.55", "-39.9595, -98.0163, 49.4743, 0.55", "-42.0716, -99.8108, 49.2142, 0.55", "-46.5953, -103.603, 48.8352, 0.55", "-48.559, -105.215, 48.7435, 0.55", "-50.517, -106.765, 48.7372, 0.28", "-51.392, -107.458, 48.7344, 0.55", "-53.5266, -109.017, 48.9599, 0.28", "-54.9191, -110.027, 49.1521, 0.55", "-56.5689, -111.191, 49.5658, 0.28", "-59.1476, -112.901, 50.2215, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "axon_0", "axon_0", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L23_BP_472b717f1f_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_5(0), soma_0(0.44999997245508955)
    connect dend_0(0), soma_0(0.44999997245508955)
    connect axon_0(0), soma_0(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.559629, -8.92861, -0.706689, 1.8952 ) }
    soma_0 { pt3dadd( -0.520561, -8.09769, -0.641537, 3.08207 ) }
    soma_0 { pt3dadd( -0.481493, -7.26678, -0.576385, 4.07229 ) }
    soma_0 { pt3dadd( -0.442425, -6.43586, -0.511233, 5.06251 ) }
    soma_0 { pt3dadd( -0.403357, -5.60495, -0.446081, 6.03705 ) }
    soma_0 { pt3dadd( -0.364289, -4.77403, -0.380929, 6.87153 ) }
    soma_0 { pt3dadd( -0.325221, -3.94312, -0.315777, 7.33623 ) }
    soma_0 { pt3dadd( -0.286154, -3.1122, -0.250625, 7.77277 ) }
    soma_0 { pt3dadd( -0.247086, -2.28129, -0.185472, 8.20481 ) }
    soma_0 { pt3dadd( -0.208018, -1.45038, -0.12032, 8.51332 ) }
    soma_0 { pt3dadd( -0.16895, -0.619461, -0.0551684, 8.81943 ) }
    soma_0 { pt3dadd( -0.129882, 0.211453, 0.00998366, 9.1018 ) }
    soma_0 { pt3dadd( -0.0908139, 1.04237, 0.0751357, 8.76619 ) }
    soma_0 { pt3dadd( -0.051746, 1.87328, 0.140288, 8.18075 ) }
    soma_0 { pt3dadd( -0.0126781, 2.7042, 0.20544, 7.29107 ) }
    soma_0 { pt3dadd( 0.0263898, 3.53511, 0.270592, 6.47013 ) }
    soma_0 { pt3dadd( 0.0654577, 4.36603, 0.335744, 5.69271 ) }
    soma_0 { pt3dadd( 0.104526, 5.19694, 0.400896, 4.78435 ) }
    soma_0 { pt3dadd( 0.143594, 6.02786, 0.466048, 3.7615 ) }
    soma_0 { pt3dadd( 0.182661, 6.85877, 0.5312, 2.16282 ) }
    soma_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 1.49642 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -0.0529134, -8.92845, 10.7418, 1.66 ) }
    dend_5 { pt3dadd( -0.812918, -11.9004, 13.2043, 1.66 ) }
    dend_5 { pt3dadd( -1.63322, -15.1082, 15.8623, 1.66 ) }
    dend_5 { pt3dadd( -3.04197, -20.6171, 20.4269, 1.39 ) }
    dend_5 { pt3dadd( -8.64462, -42.5259, 38.5804, 1.11 ) }
    dend_5 { pt3dadd( -9.62745, -46.3693, 41.765, 1.11 ) }
    dend_5 { pt3dadd( -10.8722, -51.2369, 45.7983, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 28/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.617087, 7.86155, -0.778182, 1.39 ) }
    dend_0 { pt3dadd( 0.627131, 13.3276, 1.60683, 0.83 ) }
    dend_0 { pt3dadd( 0.630438, 15.1274, 2.39215, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 31/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 0.92622, 22.6731, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 34/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -10.8722, -51.2369, 45.7983, 0.83 ) }
    dend_7 { pt3dadd( -15.0195, -56.6857, 44.0682, 0.83 ) }
    dend_7 { pt3dadd( -16.007, -57.9831, 43.6563, 0.83 ) }
    dend_7 { pt3dadd( -18.5277, -61.2948, 42.6047, 0.83 ) }
    dend_7 { pt3dadd( -19.6577, -62.7794, 42.1333, 0.83 ) }
    dend_7 { pt3dadd( -22.0878, -65.9721, 41.1196, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 40/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -10.8722, -51.2369, 45.7983, 0.83 ) }
    dend_6 { pt3dadd( -10.9962, -52.6751, 46.008, 0.83 ) }
    dend_6 { pt3dadd( -11.1109, -53.9772, 46.1782, 0.83 ) }
    dend_6 { pt3dadd( -11.3192, -55.6772, 46.3845, 0.83 ) }
    dend_6 { pt3dadd( -11.7376, -59.567, 46.745, 0.83 ) }
    dend_6 { pt3dadd( -12.0455, -62.7802, 46.9892, 0.55 ) }
    dend_6 { pt3dadd( -12.5818, -68.2277, 47.2839, 0.55 ) }
    dend_6 { pt3dadd( -12.7697, -70.9444, 47.4461, 0.83 ) }
    dend_6 { pt3dadd( -12.9131, -74.0579, 47.6279, 0.55 ) }
    dend_6 { pt3dadd( -12.9813, -79.1609, 48.0601, 0.55 ) }
    dend_6 { pt3dadd( -12.9692, -80.6213, 48.1982, 0.55 ) }
    dend_6 { pt3dadd( -12.9218, -84.583, 48.5934, 0.55 ) }
    dend_6 { pt3dadd( -12.832, -89.5821, 49.2154, 0.55 ) }
    dend_6 { pt3dadd( -12.7781, -92.5757, 49.6221, 0.55 ) }
    dend_6 { pt3dadd( -12.7404, -96.5593, 50.2044, 0.55 ) }
    dend_6 { pt3dadd( -12.913, -103.71, 51.3577, 0.55 ) }
    dend_6 { pt3dadd( -13.1139, -107.476, 51.964, 0.55 ) }
    dend_6 { pt3dadd( -13.3293, -110.28, 52.3834, 0.55 ) }
    dend_6 { pt3dadd( -13.6052, -112.213, 52.6048, 0.55 ) }
    dend_6 { pt3dadd( -13.9401, -113.897, 52.7731, 0.55 ) }
    dend_6 { pt3dadd( -14.751, -117.26, 53.2019, 0.55 ) }
    dend_6 { pt3dadd( -15.1947, -118.94, 53.4355, 0.55 ) }
    dend_6 { pt3dadd( -15.8737, -121.506, 53.905, 0.55 ) }
    dend_6 { pt3dadd( -16.7885, -124.942, 54.5942, 0.55 ) }
    dend_6 { pt3dadd( -18.1613, -129.894, 55.6733, 0.55 ) }
    dend_6 { pt3dadd( -19.3611, -134.355, 56.7097, 0.55 ) }
    dend_6 { pt3dadd( -20.4353, -138.244, 57.7024, 0.83 ) }
    dend_6 { pt3dadd( -21.4574, -141.958, 58.7861, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 0.630438, 15.1274, 2.39215, 0.83 ) }
    dend_2 { pt3dadd( 1.00406, 22.5071, -1.15749, 0.83 ) }
    dend_2 { pt3dadd( 1.1545, 24.4511, -2.01292, 0.83 ) }
    dend_2 { pt3dadd( 1.34, 26.8336, -3.08561, 0.83 ) }
    dend_2 { pt3dadd( 1.51612, 28.8013, -3.91066, 0.83 ) }
    dend_2 { pt3dadd( 1.80605, 31.9482, -5.16198, 0.83 ) }
    dend_2 { pt3dadd( 2.22819, 36.0631, -6.70127, 0.83 ) }
    dend_2 { pt3dadd( 2.47299, 38.9905, -7.55645, 0.83 ) }
    dend_2 { pt3dadd( 2.77264, 42.1569, -8.53439, 0.83 ) }
    dend_2 { pt3dadd( 3.13902, 45.4061, -9.66328, 0.55 ) }
    dend_2 { pt3dadd( 3.2557, 46.435, -10.0269, 0.55 ) }
    dend_2 { pt3dadd( 3.42883, 48.1959, -10.6633, 0.55 ) }
    dend_2 { pt3dadd( 3.8338, 51.8718, -11.9194, 0.55 ) }
    dend_2 { pt3dadd( 4.0974, 54.5395, -12.8007, 0.55 ) }
    dend_2 { pt3dadd( 4.81113, 61.2234, -14.9942, 0.55 ) }
    dend_2 { pt3dadd( 5.11736, 64.2404, -16.1166, 0.55 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 84/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.630438, 15.1274, 2.39215, 0.83 ) }
    dend_1 { pt3dadd( 1.56306, 17.7762, 3.38092, 0.83 ) }
    dend_1 { pt3dadd( 2.24361, 19.8656, 4.23741, 0.83 ) }
    dend_1 { pt3dadd( 3.22724, 23.1606, 5.7026, 0.83 ) }
    dend_1 { pt3dadd( 4.1399, 26.3363, 7.14584, 0.83 ) }
    dend_1 { pt3dadd( 5.17125, 30.3565, 8.79969, 0.83 ) }
    dend_1 { pt3dadd( 5.94331, 33.3874, 9.96278, 0.83 ) }
    dend_1 { pt3dadd( 6.44267, 35.68, 10.8471, 0.83 ) }
    dend_1 { pt3dadd( 6.96099, 38.1952, 11.727, 0.83 ) }
    dend_1 { pt3dadd( 7.07214, 38.88, 11.9264, 0.83 ) }
    dend_1 { pt3dadd( 8.34074, 46.7545, 13.7861, 0.83 ) }
    dend_1 { pt3dadd( 8.57247, 48.4288, 14.0675, 0.83 ) }
    dend_1 { pt3dadd( 8.86526, 50.7059, 14.3278, 0.83 ) }
    dend_1 { pt3dadd( 9.09722, 52.6772, 14.5069, 0.83 ) }
    dend_1 { pt3dadd( 9.3285, 54.9636, 14.6749, 0.83 ) }
    dend_1 { pt3dadd( 9.6428, 57.8515, 14.8894, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 9.88941, 60.8272, 15.0973, 0.83 ) }
    dend_1 { pt3dadd( 10.0611, 62.5273, 15.2188, 0.83 ) }
    dend_1 { pt3dadd( 10.3995, 65.1567, 15.4057, 0.83 ) }
    dend_1 { pt3dadd( 10.6886, 67.7422, 15.594, 0.83 ) }
    dend_1 { pt3dadd( 11.0402, 70.4596, 15.7612, 0.83 ) }
    dend_1 { pt3dadd( 11.4986, 74.0109, 16.0189, 0.83 ) }
    dend_1 { pt3dadd( 11.7985, 76.3304, 16.2958, 0.83 ) }
    dend_1 { pt3dadd( 11.9396, 77.6139, 16.4845, 0.83 ) }
    dend_1 { pt3dadd( 12.0699, 79.0653, 16.773, 0.83 ) }
    dend_1 { pt3dadd( 12.2589, 81.2122, 17.3301, 0.83 ) }
    dend_1 { pt3dadd( 12.3932, 84.3634, 18.3505, 0.55 ) }
    dend_1 { pt3dadd( 12.5873, 88.4959, 19.8621, 0.55 ) }
    dend_1 { pt3dadd( 12.5811, 89.7115, 20.3266, 0.55 ) }
    dend_1 { pt3dadd( 12.5576, 92.2681, 21.288, 0.55 ) }
    dend_1 { pt3dadd( 12.5197, 93.3401, 21.6737, 0.55 ) }
    dend_1 { pt3dadd( 12.4154, 95.3503, 22.3911, 0.55 ) }
    dend_1 { pt3dadd( 12.3464, 97.4478, 23.0401, 0.55 ) }
    dend_1 { pt3dadd( 12.3828, 100.497, 23.8072, 0.55 ) }
    dend_1 { pt3dadd( 12.4138, 102.506, 24.2814, 0.55 ) }
    dend_1 { pt3dadd( 12.4101, 104.335, 24.6516, 0.55 ) }
    dend_1 { pt3dadd( 12.4679, 106.621, 25.1069, 0.55 ) }
    dend_1 { pt3dadd( 12.6695, 109.001, 25.5388, 0.55 ) }
    dend_1 { pt3dadd( 13.042, 112.248, 26.18, 0.28 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 23/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 2.3352, 52.64, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 3.03969, 67.6235, 0.596352, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 26/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -22.0878, -65.9721, 41.1196, 0.83 ) }
    dend_9 { pt3dadd( -24.3085, -70.5306, 43.2675, 0.83 ) }
    dend_9 { pt3dadd( -26.0547, -74.146, 44.7832, 0.83 ) }
    dend_9 { pt3dadd( -28.1465, -78.5098, 46.4069, 0.83 ) }
    dend_9 { pt3dadd( -29.8833, -82.1162, 47.6189, 0.83 ) }
    dend_9 { pt3dadd( -30.9389, -84.3079, 48.3555, 0.83 ) }
    dend_9 { pt3dadd( -32.1973, -86.9211, 49.2337, 0.83 ) }
    dend_9 { pt3dadd( -33.033, -88.8247, 49.7236, 0.83 ) }
    dend_9 { pt3dadd( -33.9814, -90.9992, 50.1805, 0.83 ) }
    dend_9 { pt3dadd( -35.1344, -93.7911, 50.3227, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 36/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -22.0878, -65.9721, 41.1196, 0.55 ) }
    dend_8 { pt3dadd( -17.0856, -68.3072, 48.4515, 0.55 ) }
    dend_8 { pt3dadd( -11.4947, -70.8307, 56.1278, 0.55 ) }
    dend_8 { pt3dadd( -8.65461, -72.1126, 60.0271, 0.55 ) }
    dend_8 { pt3dadd( -5.07749, -73.7272, 64.9385, 0.28 ) }
    dend_8 { pt3dadd( -4.48655, -73.9939, 65.7498, 0.83 ) }
    dend_8 { pt3dadd( -1.3865, -75.3932, 70.0062, 0.28 ) }
    dend_8 { pt3dadd( -0.811337, -75.5862, 70.7163, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 44/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 5.11736, 64.2404, -16.1166, 0.55 ) }
    dend_4 { pt3dadd( 5.95493, 68.2124, -16.3238, 0.55 ) }
    dend_4 { pt3dadd( 6.87365, 72.4069, -16.6559, 0.55 ) }
    dend_4 { pt3dadd( 7.51409, 75.3558, -16.8602, 0.55 ) }
    dend_4 { pt3dadd( 8.51477, 79.7796, -17.1315, 0.83 ) }
    dend_4 { pt3dadd( 9.22394, 82.9244, -17.3054, 0.55 ) }
    dend_4 { pt3dadd( 9.91169, 85.855, -17.4473, 0.55 ) }
    dend_4 { pt3dadd( 10.5389, 88.5976, -17.501, 1.11 ) }
    dend_4 { pt3dadd( 11.6937, 93.3557, -17.7297, 0.55 ) }
    dend_4 { pt3dadd( 12.0438, 94.9499, -17.8482, 0.55 ) }
    dend_4 { pt3dadd( 12.4823, 96.9611, -18.0228, 1.11 ) }
    dend_4 { pt3dadd( 13.0179, 99.4576, -18.2611, 0.55 ) }
    dend_4 { pt3dadd( 13.3371, 101.091, -18.4257, 1.11 ) }
    dend_4 { pt3dadd( 14.2507, 106.08, -18.8884, 0.55 ) }
    dend_4 { pt3dadd( 14.6818, 108.713, -19.3389, 1.11 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 59/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 5.11736, 64.2404, -16.1166, 0.28 ) }
    dend_3 { pt3dadd( 6.63653, 67.7057, -19.4494, 0.28 ) }
    dend_3 { pt3dadd( 6.87486, 68.2253, -19.9236, 0.55 ) }
    dend_3 { pt3dadd( 8.95292, 72.8239, -23.9, 0.28 ) }
    dend_3 { pt3dadd( 11.1112, 77.1117, -27.7529, 1.11 ) }
    dend_3 { pt3dadd( 12.3555, 79.3413, -29.8319, 0.28 ) }
    dend_3 { pt3dadd( 12.3555, 79.3413, -29.8319, 0.55 ) }
    dend_3 { pt3dadd( 13.8771, 82.0678, -31.6719, 0.28 ) }
    dend_3 { pt3dadd( 14.4852, 83.1158, -32.2237, 1.11 ) }
    dend_3 { pt3dadd( 17.2556, 87.7955, -32.9871, 0.55 ) }
    dend_3 { pt3dadd( 19.2994, 91.4603, -32.2492, 0.28 ) }
    dend_3 { pt3dadd( 22.4677, 97.2047, -30.2475, 1.11 ) }
    dend_3 { pt3dadd( 25.077, 102.085, -27.9523, 0.28 ) }
    dend_3 { pt3dadd( 25.1337, 102.198, -27.8708, 0.55 ) }
    dend_3 { pt3dadd( 26.6312, 105.433, -24.8808, 0.28 ) }
    dend_3 { pt3dadd( 26.7377, 105.719, -24.5395, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -35.1344, -93.7911, 50.3227, 0.83 ) }
    dend_11 { pt3dadd( -35.6845, -97.9926, 51.6014, 0.83 ) }
    dend_11 { pt3dadd( -36.09, -101.376, 52.8523, 0.83 ) }
    dend_11 { pt3dadd( -36.2369, -102.971, 53.4359, 0.83 ) }
    dend_11 { pt3dadd( -36.3157, -103.89, 53.8498, 0.83 ) }
    dend_11 { pt3dadd( -36.5771, -106.394, 55.0556, 0.83 ) }
    dend_11 { pt3dadd( -36.7644, -107.864, 55.6688, 0.83 ) }
    dend_11 { pt3dadd( -37.1557, -110.647, 56.5642, 0.83 ) }
    dend_11 { pt3dadd( -37.3511, -112.595, 57.1717, 0.83 ) }
    dend_11 { pt3dadd( -37.5573, -115.951, 58.0603, 0.83 ) }
    dend_11 { pt3dadd( -37.605, -117.691, 58.3863, 0.83 ) }
    dend_11 { pt3dadd( -37.7163, -121.966, 58.7751, 0.83 ) }
    dend_11 { pt3dadd( -37.896, -125.758, 58.8928, 0.83 ) }
    dend_11 { pt3dadd( -38.179, -128.858, 58.7508, 0.83 ) }
    dend_11 { pt3dadd( -38.4995, -131.074, 58.611, 0.83 ) }
    dend_11 { pt3dadd( -38.5738, -131.518, 58.5702, 0.83 ) }
    dend_11 { pt3dadd( -39.0697, -134.053, 58.491, 0.28 ) }
    dend_11 { pt3dadd( -39.2344, -134.716, 58.5284, 0.83 ) }
    dend_11 { pt3dadd( -39.7815, -136.398, 58.6075, 0.28 ) }
    dend_11 { pt3dadd( -40.8031, -139.372, 58.7104, 0.28 ) }
    dend_11 { pt3dadd( -41.024, -140.01, 58.7587, 0.28 ) }
    dend_11 { pt3dadd( -41.7098, -142.049, 58.9249, 0.83 ) }
    dend_11 { pt3dadd( -42.2667, -143.866, 59.0856, 0.28 ) }
    dend_11 { pt3dadd( -42.6997, -145.326, 59.2325, 0.83 ) }
    dend_11 { pt3dadd( -42.9926, -146.509, 59.3702, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 0/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -35.1344, -93.7911, 50.3227, 0.55 ) }
    dend_10 { pt3dadd( -39.9595, -98.0163, 49.4743, 0.55 ) }
    dend_10 { pt3dadd( -42.0716, -99.8108, 49.2142, 0.55 ) }
    dend_10 { pt3dadd( -46.5953, -103.603, 48.8352, 0.55 ) }
    dend_10 { pt3dadd( -48.559, -105.215, 48.7435, 0.55 ) }
    dend_10 { pt3dadd( -50.517, -106.765, 48.7372, 0.28 ) }
    dend_10 { pt3dadd( -51.392, -107.458, 48.7344, 0.55 ) }
    dend_10 { pt3dadd( -53.5266, -109.017, 48.9599, 0.28 ) }
    dend_10 { pt3dadd( -54.9191, -110.027, 49.1521, 0.55 ) }
    dend_10 { pt3dadd( -56.5689, -111.191, 49.5658, 0.28 ) }
    dend_10 { pt3dadd( -59.1476, -112.901, 50.2215, 0.28 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_2 = new SectionList()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_5 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_6 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_2 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_4 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_3 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_11 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_7 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_9 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_8 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_5 nseg = 3
    dend_6 nseg = 5
    dend_2 nseg = 3
    dend_1 nseg = 5
    dend_4 nseg = 3
    dend_3 nseg = 3
    dend_11 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L23_BP_472b717f1f_0_0


